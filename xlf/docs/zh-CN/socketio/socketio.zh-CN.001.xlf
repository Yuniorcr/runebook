<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="socketio">
    <body>
      <group id="socketio">
        <trans-unit id="bf8b176d8763644f52776a855590bcb95c2f4023" translate="yes" xml:space="preserve">
          <source>#adapter</source>
          <target state="translated">#adapter</target>
        </trans-unit>
        <trans-unit id="a1481880575ad3b975d5330bc3062829c2d7bf53" translate="yes" xml:space="preserve">
          <source>#attach</source>
          <target state="translated">#attach</target>
        </trans-unit>
        <trans-unit id="05a10c7df72c230fef7b8b79764a8e9fb6fed1a4" translate="yes" xml:space="preserve">
          <source>#listen</source>
          <target state="translated">#listen</target>
        </trans-unit>
        <trans-unit id="b45b9d216a140661f8c47bb0e291d308e1b632b8" translate="yes" xml:space="preserve">
          <source>#onconnection</source>
          <target state="translated">#onconnection</target>
        </trans-unit>
        <trans-unit id="d96169b35525c61ac2845487e96dfdcd0f6ebc59" translate="yes" xml:space="preserve">
          <source>#origins</source>
          <target state="translated">#origins</target>
        </trans-unit>
        <trans-unit id="4214dedc89cd196890e76db3b89c5c1a06789a41" translate="yes" xml:space="preserve">
          <source>#serveClient</source>
          <target state="translated">#serveClient</target>
        </trans-unit>
        <trans-unit id="3e0309fbbfcdac9746cb99120d8fb9d02997d8e2" translate="yes" xml:space="preserve">
          <source>#sockets</source>
          <target state="translated">#sockets</target>
        </trans-unit>
        <trans-unit id="5bf7eca263744440cf7f2d8fc4ec43b67068d7b3" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2014&amp;ndash;2015 Automattic</source>
          <target state="translated">分级为4 +&amp;copy;2014&amp;ndash;2015 Automattic</target>
        </trans-unit>
        <trans-unit id="27f0f9838abfa2370afb1159b915c6395ea35a27" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2014&amp;ndash;2020 Automattic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="061773f6979abce138f0c164cfe2c73baa6cdaed" translate="yes" xml:space="preserve">
          <source>&amp;hellip; so its cleaner to do auth via middleware now</source>
          <target state="translated">&amp;hellip;因此，它的清洁程序现在可以通过中间件进行身份验证</target>
        </trans-unit>
        <trans-unit id="d9f2d97d113d85a277f217a7083675b3b4595db3" translate="yes" xml:space="preserve">
          <source>(re)connection failure or error after a successful connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b30d7abe679d6c0ea800087f801c062e6df190" translate="yes" xml:space="preserve">
          <source>.Net: &lt;a href=&quot;https://github.com/Quobject/SocketIoClientDotNet&quot;&gt;https://github.com/Quobject/SocketIoClientDotNet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1272e5f0328a838db5a4321fabf58d645ed025" translate="yes" xml:space="preserve">
          <source>0 &amp;lt;= randomizationFactor &amp;lt;= 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbe75aa0c53fdde8f854581524a344f80c54bf99" translate="yes" xml:space="preserve">
          <source>14.7 kB min+gzip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468eb88854e7ab8bd35e91a92ec4779d19c4e77d" translate="yes" xml:space="preserve">
          <source>15.3 kB min+gzip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1da8d12874b93b3a6d1a747c5e794fcc9fc5c48" translate="yes" xml:space="preserve">
          <source>34.7 kB gzip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06928aba9538d2db31544c359c28a92ec1089220" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;emitting-events#Basic-emit&quot;&gt;emitting&lt;/a&gt; and &lt;a href=&quot;listening-to-events&quot;&gt;listening to&lt;/a&gt; events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a961035237ec8facf14a14fe18d77dfb6b467c93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Blob&quot;&gt;Blob&lt;/a&gt; in the browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ef95ae82977a6d7b733969c4baa6c4c3102748" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; and &lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt;Buffer&lt;/a&gt; in Node.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c1ae56c48435d95b2ea023f17d82b41a4562b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/bufferutil&quot;&gt;bufferutil&lt;/a&gt;: Allows to efficiently perform operations such as masking and unmasking the data payload of the WebSocket frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38c90756ea93960b9bfe8a746892af3a578fdce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/package/utf-8-validate&quot;&gt;utf-8-validate&lt;/a&gt;: Allows to efficiently check if a message contains valid UTF-8 as required by the spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8cb3d1abe734273fc88074522622cbd1eef1b8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number&lt;/code&gt; reconnection attempt number</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 重连尝试次数</target>
        </trans-unit>
        <trans-unit id="8e60cfc0580665a8b3a3a113dee5e5752a220ff4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; error data</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 错误数据</target>
        </trans-unit>
        <trans-unit id="34efbaebe1611040e953a1f9e3197ad4f9c63651" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; error object</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 错误对象</target>
        </trans-unit>
        <trans-unit id="15565311cf95c8ab946cb09ca6d68cb7717ad370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket&lt;/code&gt; the incoming socket.</source>
          <target state="translated">&lt;code&gt;Socket&lt;/code&gt; 传入的套接字。</target>
        </trans-unit>
        <trans-unit id="6038ebac43f61989a515da340a320703060f0d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ack&lt;/code&gt;&lt;em&gt;(Function)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;ack&lt;/code&gt;&lt;em&gt;(Function)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8b5ead3a48ea2ea7d37760fa647cc76543bdc792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attempt&lt;/code&gt;&lt;em&gt;(Number)&lt;/em&gt; reconnection attempt number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e266df037add49ed57df1991ecc429e8d0b42d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt;&lt;em&gt;(Function)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt;&lt;em&gt;(Function)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="25810e41ced6ed83fef5b2e29ad28c11c3aa00cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;close&lt;/code&gt;&lt;em&gt;(Boolean)&lt;/em&gt; whether to close the underlying connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e51789d9fd2294c1050008439070086a6f6435" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect&lt;/code&gt; (used on the client-side)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392cfe62c95bd8680bcfc68b66d2e1ac40236561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect&lt;/code&gt;. Fired upon a successful connection.</source>
          <target state="translated">&lt;code&gt;connect&lt;/code&gt; 。连接成功后触发。</target>
        </trans-unit>
        <trans-unit id="4454b1f7cac79954908e22f059d0a2e0121b52b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect&lt;/code&gt;. Fired upon connecting.</source>
          <target state="translated">&lt;code&gt;connect&lt;/code&gt; 。在连接时触发。</target>
        </trans-unit>
        <trans-unit id="2b1893bde21918afea1f0878724735610f93b712" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect_error&lt;/code&gt; (used on the client-side)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a229c70fd7dd3904517a46d0900f351ba34709b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect_error&lt;/code&gt;. Fired upon a connection error.</source>
          <target state="translated">&lt;code&gt;connect_error&lt;/code&gt; 。连接错误时触发。</target>
        </trans-unit>
        <trans-unit id="d2e575caabc490b87b7cf6a2ae931d275f5d42fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect_error&lt;/code&gt;&lt;em&gt;(Object)&lt;/em&gt; error object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502ec1ddf0fbcaff8bd33f5dfd438cefccbab0ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect_timeout&lt;/code&gt;. Fired upon a connection timeout.</source>
          <target state="translated">&lt;code&gt;connect_timeout&lt;/code&gt; 。连接超时时触发。</target>
        </trans-unit>
        <trans-unit id="f706d2e577aea3336afc29e35651e9b7ad2133cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connection&lt;/code&gt; / &lt;code&gt;connect&lt;/code&gt;. Fired upon a connection.</source>
          <target state="translated">&lt;code&gt;connection&lt;/code&gt; / &lt;code&gt;connect&lt;/code&gt; 。在连接上触发。</target>
        </trans-unit>
        <trans-unit id="144d88f8ef647f82a194b96cd67d76c0fbb40e78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disconnect&lt;/code&gt; (used on both sides)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524d58e72db37fedcf7a8239a2d4493b9cdb6a84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disconnect&lt;/code&gt;. Fired upon a disconnection.</source>
          <target state="translated">&lt;code&gt;disconnect&lt;/code&gt; 。断开连接时触发。</target>
        </trans-unit>
        <trans-unit id="392f153af5a78e323d03bd01b67b17eaf88474c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disconnecting&lt;/code&gt; (used on the server-side)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7266aa64e83e93591c9daa5464aa170154c2078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;engine&lt;/code&gt;&lt;em&gt;(engine.Server)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;engine&lt;/code&gt;&lt;em&gt;(engine.Server)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca7abe10d53a17b8b38ac7eda40de70dd03a7e74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error&lt;/code&gt;. Fired upon a connection error</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; 。连接错误时触发</target>
        </trans-unit>
        <trans-unit id="27ed2cee009b4825c4e94fb488f703e6a23ec6a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error&lt;/code&gt;&lt;em&gt;(Object)&lt;/em&gt; error object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b015963c49ca0dc80a92a58d8e5d23e8b593810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eventName&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e6969f41bd8acdd0d47fadc41199880bc46a7ba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fn&lt;/code&gt;&lt;em&gt;(Function)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;fn&lt;/code&gt;&lt;em&gt;(Function)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a47fbcefe3a02d272c35bd08634fabb7f17978c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forceNew&lt;/code&gt;&lt;em&gt;(Boolean)&lt;/em&gt; whether to reuse an existing connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba0783b30c99d3f4def96d4609de13ede933ad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;httpServer&lt;/code&gt;&lt;em&gt;(http.Server)&lt;/em&gt; the server to attach to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a67572e3c506686af81c027b1acbbc7776e9582" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;httpServer&lt;/code&gt;&lt;em&gt;(http.Server)&lt;/em&gt; the server to bind to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def9d8bf084da4eea7ae0a774c64912385bc68c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;io&lt;/code&gt; will be registered as a global variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a64d9cb46cc856a698bf7701952a74c8e2faee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;listener&lt;/code&gt;&lt;em&gt;(Function)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt;&lt;em&gt;(Function)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5dd0cdc14b6f54e95ed08a5143eb8fe86d55f072" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;maxHttpBufferSize&lt;/code&gt; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a02721cd93655366c6e865158ffa0fce1cab9b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newListener&lt;/code&gt; and &lt;code&gt;removeListener&lt;/code&gt; (EventEmitter &lt;a href=&quot;https://nodejs.org/api/events.html#events_event_newlistener&quot;&gt;reserved events&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cec38de8246f9b13c1fe0ac8d59bce9c455124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nsp&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;nsp&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0704b1f671568cb5fdd23d82f7732b17ac5d83a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nsp&lt;/code&gt;&lt;em&gt;(String|RegExp|Function)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;nsp&lt;/code&gt;&lt;em&gt;(String|RegExp|Function)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c551ba394f5dca0a82e89f0a87519c54246ba811" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt;&lt;em&gt;(Object)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt;&lt;em&gt;(Object)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c49336b8954104ffe8ad5f1338c0750f9c21fe13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; sets the value for Server#path()</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 设置Server＃path（）的值</target>
        </trans-unit>
        <trans-unit id="d81a46371dab88dedf4dc28421b5dd050f5bfa53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt;&lt;em&gt;(Number)&lt;/em&gt; a port to listen to (a new &lt;code&gt;http.Server&lt;/code&gt; will be created)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809ff5ea1bb6123a83f0c41de22380c45c7c84b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;port&lt;/code&gt;&lt;em&gt;(Number)&lt;/em&gt; the port to listen on</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be521fb5eff2df7ff7e9bee957c2532defbc5710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;reason&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb884ce29cb872100a0ed06b8f7b711398daef70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reason&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt; the reason of the disconnection (either client or server-side)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a80a4dfb8996452868aa2d5c69b3bb988e711e10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reconnect&lt;/code&gt;. Fired upon a successful reconnection.</source>
          <target state="translated">&lt;code&gt;reconnect&lt;/code&gt; 。重新连接成功后触发。</target>
        </trans-unit>
        <trans-unit id="40305a37d856314bc8feec326a2cfa860ac677e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reconnect_attempt&lt;/code&gt;. Fired upon an attempt to reconnect.</source>
          <target state="translated">&lt;code&gt;reconnect_attempt&lt;/code&gt; 。尝试重新连接时触发。</target>
        </trans-unit>
        <trans-unit id="94ece1c421e2f336d60860d8f1265386a9b1598b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reconnect_error&lt;/code&gt;. Fired upon a reconnection attempt error.</source>
          <target state="translated">&lt;code&gt;reconnect_error&lt;/code&gt; 。重新连接尝试错误时触发。</target>
        </trans-unit>
        <trans-unit id="1d91e77d8ddcc25abbeba3959d665cc1098b57b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reconnect_failed&lt;/code&gt;. Fired when couldn&amp;rsquo;t reconnect within &lt;code&gt;reconnectionAttempts&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;reconnect_failed&lt;/code&gt; 。在 &lt;code&gt;reconnectionAttempts&lt;/code&gt; 连接内无法重新连接时触发</target>
        </trans-unit>
        <trans-unit id="44d79de2e1ac70aab8c0d7fdc626aece2d4e7ef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reconnecting&lt;/code&gt;. Fired upon an attempt to reconnect.</source>
          <target state="translated">&lt;code&gt;reconnecting&lt;/code&gt; 。尝试重新连接时触发。</target>
        </trans-unit>
        <trans-unit id="3a43a81c9fccc7ec92c4cef10ab5324eab25ade5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;room&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;room&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8312486759487ca30a97cadd8cb1946ca40d8fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;room&lt;/code&gt;&lt;em&gt;(string)&lt;/em&gt; | &lt;em&gt;(string[])&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f5782a282a10f5e59c21cdc9ae4b3a11178361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;serveClient&lt;/code&gt; sets the value for Server#serveClient()</source>
          <target state="translated">&lt;code&gt;serveClient&lt;/code&gt; 设置Server＃serveClient（）的值</target>
        </trans-unit>
        <trans-unit id="c69574c16db7163ee1514865ad57cc9dd2b2c0ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socket.use()&lt;/code&gt; could be used as a catch-all listener. But its API was not really intuitive. It is replaced by &lt;a href=&quot;#Catch-all-listeners&quot;&gt;socket.onAny()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36021219318fdcf466bdb349397f73626686e4c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socket&lt;/code&gt;&lt;em&gt;(Socket)&lt;/em&gt; socket connection with client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6177940a4db47e87ac0e91c6052fef95239e1bf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;socket&lt;/code&gt;&lt;em&gt;(engine.Socket)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;socket&lt;/code&gt;&lt;em&gt;(engine.Socket)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="990c95ba83c4718f3a88182eec9fd2e833a802f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;transports&lt;/code&gt; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10f73d624f98163056e99f3c32d8d1502dd8674" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="32eb661d7ce1ea1ba7965add4ca4a91c11ed0c3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt; (defaults to &lt;code&gt;window.location&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d22cd561d23c76abf8e0bbea860d19dc5e54c6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;&lt;em&gt;(Adapter)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt;&lt;em&gt;(Adapter)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4a0a8a1fbbae7e7bd8404060b22898cd3c3740d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;&lt;em&gt;(Boolean)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt;&lt;em&gt;(Boolean)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b6c349c6f536c7c381986c3c4fcdcdb9a7f8ed9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;&lt;em&gt;(Boolean)&lt;/em&gt; whether to following packet will be compressed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe7d2ad338e779d8358020f3239227d70d44857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;&lt;em&gt;(Number)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt;&lt;em&gt;(Number)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="85d068a881c87fc39b9556711be51b1a28281149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt;&lt;em&gt;(String)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="186e2dc162f1c05c4f8b5e2aa588fb1ac1d4fdf6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Adapter)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Adapter)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="be2ee0aed4826bfc9d861dc3091e2db5491718cb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Boolean)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Boolean)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c52da4d03cec678d75bb3849a5800299f9b5fc3d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Client)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Client)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ff4f5fbc87b12264455e89930c08cdcb1b31403" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Map&amp;lt;SocketId, Socket&amp;gt;)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf503ba58c13c1e6ba78bc87e2c51de4fc5508d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Namespace)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Namespace)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="35fce8cdbe3f1c9f2c9858aaa6877faeb7746da7" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Number)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Number)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a4418e9577a59b540036e65eb514c7d0df02f6e0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Object)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Object)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cef2039dbf39ad3aebccc2bb8c2e4e0c497afeec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Request)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Request)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="57bc2bb29e61e73ca2e4ed041149b26bfcd3f671" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(Set)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Set)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f7dce5ea85da58c1a42313abe3fc0bbae8b765df" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(String)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(String)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9769bc49330b388deac9766bcbe6e26579cb8913" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(engine.Socket)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(engine.Socket)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6bf0a0524842d6dc61f68a4d65c2df5f2e8c9f7c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(inherited from &lt;code&gt;EventEmitter&lt;/code&gt;)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72bb5f1ef36ae201a1a8f0bacb9b4bcab36c672" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(overrides &lt;code&gt;EventEmitter.emit&lt;/code&gt;)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dfcbc4051896fdae37b63c15e769962b6dbd8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important note:&lt;/strong&gt; The namespace is an implementation detail of the Socket.IO protocol, and is not related to the actual URL of the underlying transport, which defaults to &lt;code&gt;/socket.io/&amp;hellip;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;重要说明：&lt;/strong&gt;名称空间是Socket.IO协议的实现细节，并且与基础传输的实际URL（默认为 &lt;code&gt;/socket.io/&amp;hellip;&lt;/code&gt; )无关。</target>
        </trans-unit>
        <trans-unit id="9fe47fbd17aaa22312316743b613ae050018e29a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The following events are reserved and should not be used as event names by your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de1f427ed9b2a739ab32b5d599980b44fe75609" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; acknowledgements are not supported when broadcasting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f1db6ff3a536e02c53a417e7d5ea057a24b111" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; acknowledgements are not supported when emitting from namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0aaa7addeb3a251fb77cd01f68028ff5489e00b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; the adapter of the main namespace can be accessed with &lt;code&gt;io.of('/').adapter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26466805600d53fa72614cb9b85e2ed54ef970aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Function[]&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Function[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a82d55453a6d9b05c4aa272542e048b00a836c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Manager&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Manager&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b504043bc7be1570c169afd7cd0fd18857a2f28d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Manager|Boolean&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Manager|Boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a77ebe71e3dbaa00b8489c317a03ff5891413c7c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Manager|Number&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Manager|Number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57473151b03345d2928b04e312a07685bfb08bea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Namespace&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Namespace&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="168484df38cee6942bf1c2728bdd7b70acb17b22" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Namespace&lt;/code&gt; for chaining</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19fd2bbf2397b8fb7191f1fdd2043927dab8f345" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Promise&amp;lt;Set&amp;lt;SocketId&amp;gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Promise&amp;lt;Set&amp;lt;SocketId&amp;gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="942c9d722db4100433e0d0f9fff02729c4f294d5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Server&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7abb2b387aefb0d1499a7cd5246df74d55195a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Server|Adapter&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Server|Adapter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2326eb8c770561888c6341d3e8c8af7f365afee7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Server|Boolean&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Server|Boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c656045ce5dcfc53b52573bb6dbe47825af3acc6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Server|String&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Server|String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4e0f0a77dc9b68bd8f5f877f35c82a4bb2062fcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Socket&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Socket&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3835f18dbc99af8c6084567351696882aecfb004" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;Socket&lt;/code&gt; for chaining</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987803d5c94e7bd4e374343a763110b2a17876d9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns&lt;/strong&gt;&lt;code&gt;void&lt;/code&gt; | &lt;code&gt;Promise&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc69b812574fda4bd8ed99a5e3144d07d786cc25" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Rooms are left automatically upon disconnection&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;断开连接后，房间将自动保留&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5441eb0248b05dd79b83376c3735d6dd15def7b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TL;DR:&lt;/strong&gt; due to several breaking changes, a v2 client will not be able to connect to a v3 server (and vice versa)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551166d6f8c3e519855c66ecc3660e0e011c30e5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Manager&lt;/code&gt; represents a connection to a given Socket.IO server. One or more &lt;code&gt;Socket&lt;/code&gt; instances are associated with the manager. The manager can be accessed through the &lt;code&gt;io&lt;/code&gt; property of each &lt;code&gt;Socket&lt;/code&gt; instance.</source>
          <target state="translated">一个 &lt;code&gt;Manager&lt;/code&gt; 表示给定Socket.IO服务器的连接。一个或多个 &lt;code&gt;Socket&lt;/code&gt; 实例与管理器关联。可以通过每个 &lt;code&gt;Socket&lt;/code&gt; 实例的 &lt;code&gt;io&lt;/code&gt; 属性访问管理器。</target>
        </trans-unit>
        <trans-unit id="a0d80bea2a5a91a87a34a9146aa31d79111b035b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Socket&lt;/code&gt; instance is returned for the namespace specified by the pathname in the URL, defaulting to &lt;code&gt;/&lt;/code&gt;. For example, if the &lt;code&gt;url&lt;/code&gt; is &lt;code&gt;http://localhost/users&lt;/code&gt;, a transport connection will be established to &lt;code&gt;http://localhost&lt;/code&gt; and a Socket.IO connection will be established to &lt;code&gt;/users&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;Socket&lt;/code&gt; 实例返回由URL指定路径的命名空间，默认为 &lt;code&gt;/&lt;/code&gt; 。例如，如果 &lt;code&gt;url&lt;/code&gt; 为 &lt;code&gt;http://localhost/users&lt;/code&gt; ，则将建立与 &lt;code&gt;http://localhost&lt;/code&gt; 的传输连接，而将建立与 &lt;code&gt;/users&lt;/code&gt; 的Socket.IO连接。</target>
        </trans-unit>
        <trans-unit id="75dfdbec572afdd3bfb55debefd38f93297fb389" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Socket&lt;/code&gt; is basically an &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt; which sends events to &amp;mdash; and receive events from &amp;mdash; the server over the network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f0a01ffea38efa8a5a23951d8aa5386737ca39" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Socket&lt;/code&gt; is the fundamental class for interacting with browser clients. A &lt;code&gt;Socket&lt;/code&gt; belongs to a certain &lt;code&gt;Namespace&lt;/code&gt; (by default &lt;code&gt;/&lt;/code&gt;) and uses an underlying &lt;code&gt;Client&lt;/code&gt; to communicate.</source>
          <target state="translated">一个 &lt;code&gt;Socket&lt;/code&gt; 是与浏览器客户端交互的基本类。甲 &lt;code&gt;Socket&lt;/code&gt; 属于特定 &lt;code&gt;Namespace&lt;/code&gt; （默认 &lt;code&gt;/&lt;/code&gt; ），并使用一个潜在 &lt;code&gt;Client&lt;/code&gt; 进行通信。</target>
        </trans-unit>
        <trans-unit id="b80d7fc99ab26f2356b5b8b9f6aade2cff4c58e4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Socket&lt;/code&gt; is the fundamental class for interacting with the server. A &lt;code&gt;Socket&lt;/code&gt; belongs to a certain &lt;a href=&quot;namespaces&quot;&gt;Namespace&lt;/a&gt; (by default &lt;code&gt;/&lt;/code&gt;) and uses an underlying &lt;a href=&quot;#Manager&quot;&gt;Manager&lt;/a&gt; to communicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525ba9b6ddb87604a61b030da3a79c07ce23fa7d" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;room&lt;/em&gt; is an arbitrary channel that sockets can &lt;code&gt;join&lt;/code&gt; and &lt;code&gt;leave&lt;/code&gt;. It can be used to broadcast events to a subset of clients:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff2847f89836ce5bc8c248924383398c046c385" translate="yes" xml:space="preserve">
          <source>A Namespace is a communication channel that allows you to split the logic of your application over a single shared connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c0514917b4e95199ed21e8fc4885dbcf8ebbab" translate="yes" xml:space="preserve">
          <source>A Set of strings identifying the rooms this client is in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99304c568c59f455358e45b229752c6abfc7c86e" translate="yes" xml:space="preserve">
          <source>A bundle with the &lt;a href=&quot;https://github.com/darrachequesne/socket.io-msgpack-parser&quot;&gt;socket.io-msgpack-parser&lt;/a&gt; will now be provided (either on the CDN or served by the server at &lt;code&gt;/socket.io/socket.io.msgpack.min.js&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbecc4a1b657de4a13ceb587f1d805177716cef8" translate="yes" xml:space="preserve">
          <source>A client always connects to &lt;code&gt;/&lt;/code&gt; (the main namespace), then potentially connect to other namespaces (while using the same underlying connection).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aff9ec595b5d4a16bed3b88fdb01a4f151c59c9" translate="yes" xml:space="preserve">
          <source>A complete example with Passport can be found &lt;a href=&quot;https://github.com/socketio/socket.io/tree/master/examples/passport-example&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b821f4dfd17086b66376554f2151f94ff1b207f5" translate="yes" xml:space="preserve">
          <source>A function that receives a given handshake or upgrade request as its first parameter, and can decide whether to continue or not. The second argument is a function that needs to be called with the decided information: &lt;code&gt;fn(err, success)&lt;/code&gt;, where &lt;code&gt;success&lt;/code&gt; is a boolean value where false means that the request is rejected, and err is an error code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2290f18feaaa2f27170a4b508baed92ad4e70ac0" translate="yes" xml:space="preserve">
          <source>A getter proxy that returns the reference to the &lt;code&gt;request&lt;/code&gt; that originated the engine.io connection. Useful for accessing request headers such as &lt;code&gt;Cookie&lt;/code&gt; or &lt;code&gt;User-Agent&lt;/code&gt;.</source>
          <target state="translated">一个getter代理，该代理返回对发起engine.io连接的 &lt;code&gt;request&lt;/code&gt; 的引用。对于访问请求标头（例如 &lt;code&gt;Cookie&lt;/code&gt; 或 &lt;code&gt;User-Agent&lt;/code&gt; )很有用。</target>
        </trans-unit>
        <trans-unit id="529746c5b3b269731afd8c5ff022302c0110f903" translate="yes" xml:space="preserve">
          <source>A getter proxy that returns the reference to the &lt;code&gt;request&lt;/code&gt; that originated the underlying engine.io &lt;code&gt;Client&lt;/code&gt;. Useful for accessing request headers such as &lt;code&gt;Cookie&lt;/code&gt; or &lt;code&gt;User-Agent&lt;/code&gt;.</source>
          <target state="translated">一个getter代理，它返回对源自基础engine.io &lt;code&gt;Client&lt;/code&gt; 的 &lt;code&gt;request&lt;/code&gt; 的引用。对于访问请求标头（例如 &lt;code&gt;Cookie&lt;/code&gt; 或 &lt;code&gt;User-Agent&lt;/code&gt; )很有用。</target>
        </trans-unit>
        <trans-unit id="509c576174993acb676293a7a522f712bc8fa52b" translate="yes" xml:space="preserve">
          <source>A heartbeat mechanism is implemented at the Engine.IO level, allowing both the server and the client to know when the other one is not responding anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b543a41b970eaeb4473cc98c553f19e1d531145" translate="yes" xml:space="preserve">
          <source>A list of strings identifying the rooms this socket is in.</source>
          <target state="translated">识别该插座所在房间的字符串列表。</target>
        </trans-unit>
        <trans-unit id="c03e110af5f9cf45a35da1f308d71d69168612b8" translate="yes" xml:space="preserve">
          <source>A map of &lt;a href=&quot;#Socket&quot;&gt;Socket&lt;/a&gt; instances that are connected to this namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f245f3726a571a034bbd3927f8b841802a12d15d" translate="yes" xml:space="preserve">
          <source>A middleware error will now emit an Error object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3469c75474242ec3154c67ced9478c0f63701e" translate="yes" xml:space="preserve">
          <source>A middleware function has access to the &lt;a href=&quot;server-socket-instance&quot;&gt;Socket instance&lt;/a&gt; and to the next registered middleware function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05501f85156d51893cb6fb83ddb2c2a11483523" translate="yes" xml:space="preserve">
          <source>A middleware function is a function that gets executed for every incoming connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5fbb0bc4173551d0de5cc7c720af59084c0239" translate="yes" xml:space="preserve">
          <source>A middleware is a function that gets executed for every incoming Socket, and receives as parameters the socket and a function to optionally defer execution to the next registered middleware. A Socket.IO middleware is very similar to what you can find in &lt;a href=&quot;http://expressjs.com/en/guide/using-middleware.html&quot;&gt;Express&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5838f223a49ecdd143739d64c747bb01b9df7e08" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Socket&lt;/code&gt; instance is returned for the namespace specified by the pathname in the URL, defaulting to &lt;code&gt;/&lt;/code&gt;. For example, if the &lt;code&gt;url&lt;/code&gt; is &lt;code&gt;http://localhost/users&lt;/code&gt;, a transport connection will be established to &lt;code&gt;http://localhost&lt;/code&gt; and a Socket.IO connection will be established to &lt;code&gt;/users&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2a6deea73f9c4997b4dea7054abf80a6d77075" translate="yes" xml:space="preserve">
          <source>A reference to the underlying &lt;code&gt;Client&lt;/code&gt; object.</source>
          <target state="translated">对基础 &lt;code&gt;Client&lt;/code&gt; 对象的引用。</target>
        </trans-unit>
        <trans-unit id="9c617e55b12defc67256c4b5fb5ffc898f7cf9a1" translate="yes" xml:space="preserve">
          <source>A reference to the underlying &lt;code&gt;Client&lt;/code&gt; transport connection (engine.io &lt;code&gt;Socket&lt;/code&gt; object). This allows access to the IO transport layer, which still (mostly) abstracts the actual TCP/IP socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376e0608b08c2a1d9b01665f46792d0ca067ef27" translate="yes" xml:space="preserve">
          <source>A reference to the underlying &lt;code&gt;engine.io&lt;/code&gt;&lt;code&gt;Socket&lt;/code&gt; connection.</source>
          <target state="translated">对基础 &lt;code&gt;engine.io&lt;/code&gt; &lt;code&gt;Socket&lt;/code&gt; 连接的引用。</target>
        </trans-unit>
        <trans-unit id="caf5219937b96ca2dbf18b4ac2c099b9feb869ae" translate="yes" xml:space="preserve">
          <source>A reference to the underyling &lt;code&gt;Client&lt;/code&gt; transport connection (engine.io &lt;code&gt;Socket&lt;/code&gt; object).</source>
          <target state="translated">对底层 &lt;code&gt;Client&lt;/code&gt; 传输连接的引用（engine.io &lt;code&gt;Socket&lt;/code&gt; 对象）。</target>
        </trans-unit>
        <trans-unit id="0041988dd6ef1e00c9d2201b2c200494c8f15c59" translate="yes" xml:space="preserve">
          <source>A regex or a function can also be provided, in order to create namespace in a dynamic way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf14df8ab8f153abb218c17c9b0c3223f97876a" translate="yes" xml:space="preserve">
          <source>A single &lt;code&gt;Manager&lt;/code&gt; can be used by several &lt;a href=&quot;#Socket&quot;&gt;Sockets&lt;/a&gt;. You can find more information about this multiplexing feature &lt;a href=&quot;namespaces&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c2d732971f572153d6f785986f840f36c74648" translate="yes" xml:space="preserve">
          <source>A string describing the ciphers to use or exclude. Consult the &lt;a href=&quot;http://www.openssl.org/docs/apps/ciphers.html#CIPHER_LIST_FORMAT&quot;&gt;cipher format list&lt;/a&gt; for details on the format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915c645e0e02dedf5747f9986978e2b3bbe6383b" translate="yes" xml:space="preserve">
          <source>A string of passphrase for the private key or pfx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b957d044479872be4c17fd7fd59327dbd5896b" translate="yes" xml:space="preserve">
          <source>A unique identifier for the session, that comes from the underlying &lt;code&gt;Client&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c911d25eb449039361c763508f9734c6af9b9494" translate="yes" xml:space="preserve">
          <source>A unique identifier for the socket session, that comes from the underlying &lt;code&gt;Client&lt;/code&gt;.</source>
          <target state="translated">套接字会话的唯一标识符，来自基础 &lt;code&gt;Client&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a4de676f19faf2cf10af156d6bf6bc1bc4a3316" translate="yes" xml:space="preserve">
          <source>A volatile event is an event that is allowed to be dropped if the low-level transport is not ready yet (for example when an HTTP POST request is already pending).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8931af0442bf3cfe6e5ca97340930a428af0354" translate="yes" xml:space="preserve">
          <source>API change</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ebcfe59f276beb7f6238d812ac61ce48d3d9c0" translate="yes" xml:space="preserve">
          <source>Acknowledgements</source>
          <target state="translated">Acknowledgements</target>
        </trans-unit>
        <trans-unit id="fe30a3923e0d981430755d941b9d992d323301c0" translate="yes" xml:space="preserve">
          <source>Add a clear distinction between the Manager query option and the Socket query option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544c0e44aee6268e328ffd52706e61e6be1094dd" translate="yes" xml:space="preserve">
          <source>Additional attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e11c01cfae8e67a5a799446a8a53c3bd8605092" translate="yes" xml:space="preserve">
          <source>Additional options can be passed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52e976c328e8c003d89b2783dbf56be4957a937" translate="yes" xml:space="preserve">
          <source>Additional packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8204a956ced32441331d02dc9c5357bdf9ea960f" translate="yes" xml:space="preserve">
          <source>Adds a &lt;strong&gt;one-time&lt;/strong&gt;&lt;em&gt;listener&lt;/em&gt; function for the event named &lt;em&gt;eventName&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be0f34c227173037be45f6582676499e618c1fe" translate="yes" xml:space="preserve">
          <source>Adds a listener that will be fired when any event is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ee2d8dc7a7adbe992bc364acbfb599433cf9c5" translate="yes" xml:space="preserve">
          <source>Adds a listener that will be fired when any event is emitted. The listener is added to the beginning of the listeners array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8355d5b454701355c36538665e601a659f3b7bbc" translate="yes" xml:space="preserve">
          <source>Adds the &lt;em&gt;listener&lt;/em&gt; function to the end of the listeners array for the event named &lt;em&gt;eventName&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d36a293544040845cfc50b9aa5c48482be6018b" translate="yes" xml:space="preserve">
          <source>Adds the socket to the &lt;code&gt;room&lt;/code&gt;, and fires optionally a callback &lt;code&gt;fn&lt;/code&gt; with &lt;code&gt;err&lt;/code&gt; signature (if any).</source>
          <target state="translated">将套接字添加到 &lt;code&gt;room&lt;/code&gt; ，并可选地触发带有 &lt;code&gt;err&lt;/code&gt; 签名的回调 &lt;code&gt;fn&lt;/code&gt; （如果有）。</target>
        </trans-unit>
        <trans-unit id="bcc722c27c5ce15152c205a9c37fbb9bda427db5" translate="yes" xml:space="preserve">
          <source>Adds the socket to the given &lt;code&gt;room&lt;/code&gt; or to the list of rooms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0056531653a5417a69f46b98bcaedc6768c175b" translate="yes" xml:space="preserve">
          <source>Advanced use only. Binds the server to a specific engine.io &lt;code&gt;Server&lt;/code&gt; (or compatible API) instance.</source>
          <target state="translated">仅高级使用。将服务器绑定到特定的engine.io &lt;code&gt;Server&lt;/code&gt; （或兼容的API）实例。</target>
        </trans-unit>
        <trans-unit id="6907955463ba103a847ed494479f4febd67a894a" translate="yes" xml:space="preserve">
          <source>Advanced use only. Creates a new &lt;code&gt;socket.io&lt;/code&gt; client from the incoming engine.io (or compatible API) &lt;code&gt;Socket&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1fcc9057c6d5a46679c04c3a91596e763d72f59" translate="yes" xml:space="preserve">
          <source>Advanced use only. Creates a new &lt;code&gt;socket.io&lt;/code&gt; client from the incoming engine.io (or compatible API) &lt;code&gt;socket&lt;/code&gt;.</source>
          <target state="translated">仅高级使用。从传入的engine.io（或兼容的API） &lt;code&gt;socket&lt;/code&gt; 创建一个新的 &lt;code&gt;socket.io&lt;/code&gt; 客户端。</target>
        </trans-unit>
        <trans-unit id="9ddd1c716c425cf14345530f35c104ef3ee6bea9" translate="yes" xml:space="preserve">
          <source>After (with named import):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f2d652f70945cb85fc5562fc3600a535ffb359" translate="yes" xml:space="preserve">
          <source>After:</source>
          <target state="translated">After:</target>
        </trans-unit>
        <trans-unit id="5e53532546f04edb80931722892b752816bb9d51" translate="yes" xml:space="preserve">
          <source>All datastructures are supported, including &lt;code&gt;Buffer&lt;/code&gt;. JavaScript functions can&amp;rsquo;t be serialized/deserialized.</source>
          <target state="translated">支持所有数据结构，包括 &lt;code&gt;Buffer&lt;/code&gt; 。JavaScript函数无法序列化/反序列化。</target>
        </trans-unit>
        <trans-unit id="5a2ea910dc30313f10eed97f8c5800c0dfebdd09" translate="yes" xml:space="preserve">
          <source>All options will be forwarded to the &lt;a href=&quot;https://www.npmjs.com/package/cors&quot;&gt;cors&lt;/a&gt; package. The complete list of options can be found &lt;a href=&quot;https://github.com/expressjs/cors#configuration-options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ca83616adabf824f53bbd99776f79f3e3cbd74" translate="yes" xml:space="preserve">
          <source>All other options (domain, maxAge, sameSite, &amp;hellip;) are now supported. Please see &lt;a href=&quot;https://github.com/jshttp/cookie/&quot;&gt;here&lt;/a&gt; for the complete list of options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9420df91951f811e4b3792263324f55205ae6b36" translate="yes" xml:space="preserve">
          <source>Among those options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d1787ffaad47b06e828e58d6f82f9bd2b4bdf7" translate="yes" xml:space="preserve">
          <source>An alias for the default (&lt;code&gt;/&lt;/code&gt;) namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b92a2e7f37ddfde5cf0198886c9cd018003d180" translate="yes" xml:space="preserve">
          <source>An authority certificate or array of authority certificates to check the remote host against.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4390485ad60a5f274b643013b616d37b2a2d2c78" translate="yes" xml:space="preserve">
          <source>An easy way to do that is by routing clients based on their originating address. An example follows using the NginX server:</source>
          <target state="translated">一个简单的方法是根据客户端的起始地址进行路由。下面是一个使用NginX服务器的例子。</target>
        </trans-unit>
        <trans-unit id="cd8a18cf1d5cca4114ab5234f9776bdfef3d0315" translate="yes" xml:space="preserve">
          <source>An unique identifier for the socket session. Set after the &lt;code&gt;connect&lt;/code&gt; event is triggered, and updated after the &lt;code&gt;reconnect&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecae07365f1838b5c1a7fe96cfbff243f85ccff" translate="yes" xml:space="preserve">
          <source>And finally, here&amp;rsquo;s the updated list of reserved events that you cannot use in your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b2ce408d79d5ac3771e91dff5b313898c2eb33" translate="yes" xml:space="preserve">
          <source>And the &lt;code&gt;index.html&lt;/code&gt; file (client-side):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5433f09b1b50c19bc6b796f542773b76af96f4dd" translate="yes" xml:space="preserve">
          <source>And then filter by the scopes you&amp;rsquo;re interested in. You can prefix the &lt;code&gt;*&lt;/code&gt; with scopes, separated by comma if there is more than one. For example, to only see debug statements from the socket.io client on Node.js try this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a86f4f8ea1ac1f35bb81b7d2ae95d9ee306ecfc" translate="yes" xml:space="preserve">
          <source>And then filter by the scopes you&amp;rsquo;re interested in. You can use &lt;code&gt;,&lt;/code&gt; to separate them.</source>
          <target state="translated">然后由过滤器作用域你有兴趣，你可以使用 &lt;code&gt;,&lt;/code&gt; 将它们分开。</target>
        </trans-unit>
        <trans-unit id="0ad8bba173cb7b225586481c35bff65016a407fc" translate="yes" xml:space="preserve">
          <source>And then simply use &lt;code&gt;to&lt;/code&gt; or &lt;code&gt;in&lt;/code&gt; (they are the same) when broadcasting or emitting:</source>
          <target state="translated">然后在广播或发射时简单地使用 &lt;code&gt;to&lt;/code&gt; 或 &lt;code&gt;in&lt;/code&gt; （它们相同）：</target>
        </trans-unit>
        <trans-unit id="bcb855a4cfaae40bbf324ad53cdabd66ba2604a7" translate="yes" xml:space="preserve">
          <source>And then use the &lt;code&gt;wsEngine&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48940e3353a730c36e5db3bf97ef67b635b3c7d" translate="yes" xml:space="preserve">
          <source>And then you upgrade the version used by the clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba53b782154c04080fd8c69d8f36268612320f94" translate="yes" xml:space="preserve">
          <source>And voil&amp;agrave;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a87bda429d1e0585afaf3a008ba3dddc6ff9b9" translate="yes" xml:space="preserve">
          <source>Another use case is to discard events when the client is not connected (by default, the events are buffered until reconnection).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1eb529988bb0b2ab62088ecd4ecf8edf43d17d" translate="yes" xml:space="preserve">
          <source>Any Websocket server implementation which exposes the same API as ws (notably the &lt;a href=&quot;https://github.com/websockets/ws/blob/master/doc/ws.md#serverhandleupgraderequest-socket-head-callback&quot;&gt;handleUpgrade&lt;/a&gt; method) can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03636711b03ea6b7c9ae895e201cc63097e229bf" translate="yes" xml:space="preserve">
          <source>Any serializable data structures can be emitted, including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833306b928c1dc003527141ef2fa617196dbaea1" translate="yes" xml:space="preserve">
          <source>Apache HTTPD configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7277524f14aeae38195399a696e3a0e3f69640" translate="yes" xml:space="preserve">
          <source>As detailed above, this release contains several non backward compatible changes, and as such a v2 client will not be able to connect to a v3 server (and vice versa).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca00a3223478d755ead936c9686ee0ad628c8f2" translate="yes" xml:space="preserve">
          <source>As long as you do not overwrite any existing attribute, you can attach any attribute to the Socket instance and use it later:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651b0b36e5b97ab86484a59873d93672562d9bf6" translate="yes" xml:space="preserve">
          <source>As noted above, &lt;code&gt;WebSocket&lt;/code&gt; transport do not have this limitation, since the underlying TCP connection is kept open between the client and the given server. That&amp;rsquo;s why you might find some suggestions to only use the &lt;code&gt;WebSocket&lt;/code&gt; transport:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccd14345a00e80b7afa032df7ac1bc0f8489262" translate="yes" xml:space="preserve">
          <source>At least Node.js 10 is needed, older versions are not supported anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9be0d0b967dcd0502d7d740d1ca3cb7a48e76d7" translate="yes" xml:space="preserve">
          <source>Attached to an existing HTTP server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62230b5f6cd4037757952cce9554d607e90aabd" translate="yes" xml:space="preserve">
          <source>Attaches the &lt;code&gt;Server&lt;/code&gt; to an engine.io instance on &lt;code&gt;httpServer&lt;/code&gt; with the supplied &lt;code&gt;options&lt;/code&gt; (optionally).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4862d301337bfe0de3f85f7b730a3577b7472ca" translate="yes" xml:space="preserve">
          <source>Attaches the &lt;code&gt;Server&lt;/code&gt; to an engine.io instance on &lt;code&gt;srv&lt;/code&gt; with the supplied &lt;code&gt;opts&lt;/code&gt; (optionally).</source>
          <target state="translated">附加的 &lt;code&gt;Server&lt;/code&gt; 上到engine.io实例 &lt;code&gt;srv&lt;/code&gt; 与随附 &lt;code&gt;opts&lt;/code&gt; （任选地）。</target>
        </trans-unit>
        <trans-unit id="33decf846d243dce036e227129e91b25ba8edf46" translate="yes" xml:space="preserve">
          <source>Attaches the &lt;code&gt;Server&lt;/code&gt; to an engine.io instance on a new http.Server with the supplied &lt;code&gt;options&lt;/code&gt; (optionally).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc4070e4464b742bcc08cc06e23d1102b94c8f9" translate="yes" xml:space="preserve">
          <source>Attaches the &lt;code&gt;Server&lt;/code&gt; to an engine.io instance that is bound to &lt;code&gt;port&lt;/code&gt; with the given &lt;code&gt;opts&lt;/code&gt; (optionally).</source>
          <target state="translated">将 &lt;code&gt;Server&lt;/code&gt; 附加到engine.io实例，该实例通过给定的 &lt;code&gt;opts&lt;/code&gt; （可选）绑定到 &lt;code&gt;port&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f3a19ace111090d963c16db0530f1f68feb67119" translate="yes" xml:space="preserve">
          <source>Authentication differences</source>
          <target state="translated">认证差异</target>
        </trans-unit>
        <trans-unit id="1bffae1272c2cd631d1fc74758dbe8437798a25a" translate="yes" xml:space="preserve">
          <source>Auto-reconnection support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5322fc7face3a76089b42b181d534b189cb00bc" translate="yes" xml:space="preserve">
          <source>Available debugging scopes</source>
          <target state="translated">可用的调试范围</target>
        </trans-unit>
        <trans-unit id="891e90afaa1b93aaf1a0e5c42cf130be7cef1b02" translate="yes" xml:space="preserve">
          <source>Available options for the underlying Engine.IO client:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38bb8dc3a9a7673cacdc5528634c376b04d3a228" translate="yes" xml:space="preserve">
          <source>Available options for the underlying Engine.IO server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057b4b33c8569c09b413019743ff85bf2e11c330" translate="yes" xml:space="preserve">
          <source>Available options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6292559d5c076a739870fda4538db4e293482ca" translate="yes" xml:space="preserve">
          <source>Basic emit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4108300dbdf24eb430c32f75316f6085b1a32962" translate="yes" xml:space="preserve">
          <source>Before (using default import):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d739cde383b81375eb3b81f1a6f7136f619ff2" translate="yes" xml:space="preserve">
          <source>Before 1.0, the Socket.IO server would default to logging everything out to the console. This turned out to be annoyingly verbose for many users (although extremely useful for others), so now we default to being completely silent by default.</source>
          <target state="translated">在1.0之前,Socket.IO服务器会默认把所有的东西都记录到控制台。这对许多用户来说是很烦人的(尽管对其他人来说非常有用),所以现在我们默认为完全沉默。</target>
        </trans-unit>
        <trans-unit id="842beb51ca9c5417a27f472386d0e0d52dcc074f" translate="yes" xml:space="preserve">
          <source>Before:</source>
          <target state="translated">Before:</target>
        </trans-unit>
        <trans-unit id="54e80287774102ab9d9026660be6b39657d0bfc1" translate="yes" xml:space="preserve">
          <source>Below are listed the non backward-compatible changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f59ef2724c769ccccef1a30ba7094c57fde398" translate="yes" xml:space="preserve">
          <source>Besides &lt;a href=&quot;emitting-events#Basic-emit&quot;&gt;emitting&lt;/a&gt; and &lt;a href=&quot;listening-to-events&quot;&gt;listening to&lt;/a&gt; events, the Socket instance has a few attributes that may be of use in your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57fbc1e1d0740ad804b3697035381f34157a6b95" translate="yes" xml:space="preserve">
          <source>Besides, Node.js 8 is now &lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;EOL&lt;/a&gt;. Please upgrade as soon as possible!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5287355e988c816dc67c6134116f7a79ade8b94" translate="yes" xml:space="preserve">
          <source>Besides, we will now refer to the &amp;ldquo;main&amp;rdquo; namespace instead of the &amp;ldquo;default&amp;rdquo; namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ef9eec85b1e351fca353e48d0f1c354ce4b1dd" translate="yes" xml:space="preserve">
          <source>Besides:</source>
          <target state="translated">Besides:</target>
        </trans-unit>
        <trans-unit id="5694f5cb6ebe10d8929dc7bada635ee2fd104c29" translate="yes" xml:space="preserve">
          <source>Binary support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f4d8dff68b8edc4e02415e367ac68a75eaa9bc" translate="yes" xml:space="preserve">
          <source>Binds socket.io to a new &lt;code&gt;http.Server&lt;/code&gt; that listens on &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">将socket.io绑定到侦听 &lt;code&gt;port&lt;/code&gt; 的新 &lt;code&gt;http.Server&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="89b0841b91bae95b1c0afbdc5f3f6c69ffb725b4" translate="yes" xml:space="preserve">
          <source>Both means that there is &lt;strong&gt;NO FALLBACK&lt;/strong&gt; to long-polling when the websocket connection cannot be established, which is in fact one of the key feature of Socket.IO. In that case, you should maybe consider using raw &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSocket&quot;&gt;WebSocket&lt;/a&gt;, or a thin wrapper like &lt;a href=&quot;https://github.com/appuri/robust-websocket&quot;&gt;robust-websocket&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df38fa130d31e0ec8ee62d5485c27c74c25c95d9" translate="yes" xml:space="preserve">
          <source>Broadcasting also works with multiple Socket.IO servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dcc07f4ebe408f7933ef30d0f54bfe2ac346ce" translate="yes" xml:space="preserve">
          <source>Broadcasting events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7554e2b226727bec27436304c4855bfb7225a10b" translate="yes" xml:space="preserve">
          <source>Broadcasting messages</source>
          <target state="translated">广播信息</target>
        </trans-unit>
        <trans-unit id="a75b45f19cb5529a0f27767c717f740ce8a3ed68" translate="yes" xml:space="preserve">
          <source>Broadcasting to all clients in default namespace</source>
          <target state="translated">在默认命名空间中向所有客户端广播</target>
        </trans-unit>
        <trans-unit id="93b2716a51dac79dfb8f6d1665cec8a64a0a7780" translate="yes" xml:space="preserve">
          <source>Browser compatibility is tested thanks to the awesome Sauce Labs platform:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2de85dde4c78543158d05bf50e12f5e3f68c59d" translate="yes" xml:space="preserve">
          <source>Buffered events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258e267039420b9ba144801c3e4b4ccb9d892907" translate="yes" xml:space="preserve">
          <source>But first, let&amp;rsquo;s detail what the Socket.IO library is not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6720f3f41f08fc23b6516b1bfa14e0e06bb7fc1a" translate="yes" xml:space="preserve">
          <source>By default the client always connects to &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">默认情况下，客户端始终连接到 &lt;code&gt;/&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2193cc8e7b2ce10a112fd0dcb0535c3dfc1c1a9" translate="yes" xml:space="preserve">
          <source>By default, Socket.IO use the WebSocket server provided by the &lt;a href=&quot;https://www.npmjs.com/package/ws&quot;&gt;ws&lt;/a&gt; package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e9cc3139460c1d29c4ebe9964732a4171ac144" translate="yes" xml:space="preserve">
          <source>By default, a long-polling connection is established first, then upgraded to &amp;ldquo;better&amp;rdquo; transports (like WebSocket). If you like to live dangerously, this part can be skipped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af16ed3a2b176564f3518333b00550888b23f075" translate="yes" xml:space="preserve">
          <source>By default, a single connection is used when connecting to different namespaces (to minimize resources):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1870c788b0214d1d4a75e36cf8b2429c82bf6a13" translate="yes" xml:space="preserve">
          <source>By default, all of them are served by the server, at &lt;code&gt;/socket.io/&amp;lt;name&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa37db6243663ddf2ad2e76e5cf3d0c3e6821f6b" translate="yes" xml:space="preserve">
          <source>By default, any event emitted while the Socket is not connected will be buffered until reconnection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d3106c2571a775f475222227624b72df1a944b" translate="yes" xml:space="preserve">
          <source>By default, the Socket.IO server exposes a client bundle at &lt;code&gt;/socket.io/socket.io.js&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70d76b956f279649be32532fa76f1d9f7825563" translate="yes" xml:space="preserve">
          <source>By default, the client will try to establish a WebSocket connection, and fall back to XHR/JSONP polling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d2343edf8c1bb2474193ac1e88d27484f0a5136" translate="yes" xml:space="preserve">
          <source>By implementing the Redis &lt;code&gt;Adapter&lt;/code&gt;:</source>
          <target state="translated">通过实现Redis &lt;code&gt;Adapter&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="27373dde09f981ccb555a2d8381d142de9aacdc4" translate="yes" xml:space="preserve">
          <source>C++: &lt;a href=&quot;https://github.com/socketio/socket.io-client-cpp&quot;&gt;https://github.com/socketio/socket.io-client-cpp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f44f78fe57e9ba15ecd4c7e5aa88c9acdeacd8" translate="yes" xml:space="preserve">
          <source>CORS handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124057df64205bdb9dd7d09c2c7c8ca54463610c" translate="yes" xml:space="preserve">
          <source>CORS is now disabled by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decc9788b35e51ea3b1cc7f1691d20d056ab89b0" translate="yes" xml:space="preserve">
          <source>Catch-all listeners</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f7129048810b7cec1dd0f776dd967f132e7d28" translate="yes" xml:space="preserve">
          <source>Certificate, Private key and CA certificates to use for SSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1afd79629dc43afcf544d3a9520561780875fbb" translate="yes" xml:space="preserve">
          <source>Chances are that some of those clients might have an active bi-directional communication channel like &lt;code&gt;WebSocket&lt;/code&gt; that we can write to immediately, but some of them might be using long-polling.</source>
          <target state="translated">可能这些客户端中的某些客户端可能具有活动的双向通信通道，例如 &lt;code&gt;WebSocket&lt;/code&gt; ，我们可以立即写入该通道，但是其中一些客户端可能正在使用长轮询。</target>
        </trans-unit>
        <trans-unit id="1bdd79b12628d8c4ec4226ff4207341dcb869ab8" translate="yes" xml:space="preserve">
          <source>Client</source>
          <target state="translated">Client</target>
        </trans-unit>
        <trans-unit id="5c05bc694ec8928aac04cb06b41ed427a9305f1a" translate="yes" xml:space="preserve">
          <source>Client (index.html)</source>
          <target state="translated">客户端(index.html)</target>
        </trans-unit>
        <trans-unit id="91c7409355f30de2476cb2c221d63babafd47a47" translate="yes" xml:space="preserve">
          <source>Client API</source>
          <target state="translated">API客户端</target>
        </trans-unit>
        <trans-unit id="bdcb316fd06e396f3bc90f0ffb00bbbc8ae0a001" translate="yes" xml:space="preserve">
          <source>Client Initialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e7e54e9b0199dee0f7ce87460811562255e995" translate="yes" xml:space="preserve">
          <source>Client Installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5e9a751eb379f74dedd68e71e2415d1fafe221" translate="yes" xml:space="preserve">
          <source>Client bundles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92401e65c0436785be642917e4f34f3d4201f9f" translate="yes" xml:space="preserve">
          <source>Client#conn</source>
          <target state="translated">Client#conn</target>
        </trans-unit>
        <trans-unit id="481786cc185b90d496773dfb676d3e29cb46ae7a" translate="yes" xml:space="preserve">
          <source>Client#request</source>
          <target state="translated">Client#request</target>
        </trans-unit>
        <trans-unit id="c9f9ea1b026f581d71ddd7ce1895b56fda68359f" translate="yes" xml:space="preserve">
          <source>Client:</source>
          <target state="translated">Client:</target>
        </trans-unit>
        <trans-unit id="55dca8e86ba2d66543258595a6a26af71d1efef4" translate="yes" xml:space="preserve">
          <source>Closes the socket.io server. The &lt;code&gt;callback&lt;/code&gt; argument is optional and will be called when all connections are closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377dd01e05316c6519d98a0022d6976f8e76be87" translate="yes" xml:space="preserve">
          <source>CommonJS</source>
          <target state="translated">CommonJS</target>
        </trans-unit>
        <trans-unit id="5d60c7dd62fdcf4abcc61a6a7d335b7117968b4d" translate="yes" xml:space="preserve">
          <source>Compatibility</source>
          <target state="translated">Compatibility</target>
        </trans-unit>
        <trans-unit id="19c09af16e2a7cd9f3154d74ccc347b43e7d5bab" translate="yes" xml:space="preserve">
          <source>Compatibility with Express middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="7fccc2ece34ed748edae44f6dce62d5e1ad8dc2d" translate="yes" xml:space="preserve">
          <source>Configuration differences</source>
          <target state="translated">配置差异</target>
        </trans-unit>
        <trans-unit id="cc1d9cbd371cf81b3db02824d9719af3d15166c8" translate="yes" xml:space="preserve">
          <source>Connections are established even in the presence of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc2b6eb93654fed24d8cce3141c211e0dfdd6a4" translate="yes" xml:space="preserve">
          <source>Cons:</source>
          <target state="translated">Cons:</target>
        </trans-unit>
        <trans-unit id="740087ac3f7ee06273000547341e402151a650a9" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Manager&lt;/code&gt; for the given URL, and attempts to reuse an existing &lt;code&gt;Manager&lt;/code&gt; for subsequent calls, unless the &lt;code&gt;multiplex&lt;/code&gt; option is passed with &lt;code&gt;false&lt;/code&gt;. Passing this option is the equivalent of passing &lt;code&gt;'force new connection': true&lt;/code&gt; or &lt;code&gt;forceNew: true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb48b1f8055661c6ffeda6762545d6839f19b1c7" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Server&lt;/code&gt; and attaches it to the given &lt;code&gt;srv&lt;/code&gt;. Optionally &lt;code&gt;opts&lt;/code&gt; can be passed.</source>
          <target state="translated">创建一个新 &lt;code&gt;Server&lt;/code&gt; 并将其附加到给定的 &lt;code&gt;srv&lt;/code&gt; 。可选地，可以传递 &lt;code&gt;opts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61681def5fd54bef82a2f44382f13e764f0c4ab4" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Server&lt;/code&gt;. Works with and without &lt;code&gt;new&lt;/code&gt;:</source>
          <target state="translated">创建一个新的 &lt;code&gt;Server&lt;/code&gt; 。可以使用和不使用 &lt;code&gt;new&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="887881e1bef0a1f2080231f95d8842ad7b17001e" translate="yes" xml:space="preserve">
          <source>Creates a new &lt;code&gt;Socket&lt;/code&gt; for the given namespace. Only &lt;code&gt;auth&lt;/code&gt; (&lt;code&gt;{ auth: {key: &quot;value&quot;} }&lt;/code&gt;) is read from the &lt;code&gt;options&lt;/code&gt; object. Other keys will be ignored and should be passed when instancing a &lt;code&gt;new Manager(nsp, options)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e26db226401892131a6bcd74db6a497cd59b5d8" translate="yes" xml:space="preserve">
          <source>Custom namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4942a1a3002105e25c97088f28bfe63bc0770981" translate="yes" xml:space="preserve">
          <source>Custom namespaces</source>
          <target state="translated">自定义命名空间</target>
        </trans-unit>
        <trans-unit id="d9c9cb9fdabed97364567aea6f9ed19b35a277bd" translate="yes" xml:space="preserve">
          <source>Dart: &lt;a href=&quot;https://github.com/rikulo/socket.io-client-dart&quot;&gt;https://github.com/rikulo/socket.io-client-dart&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ca7986181505b21a483b3ee2f98c0c6b297f85" translate="yes" xml:space="preserve">
          <source>Debug also works in the browser; logs are persisted to localstorage. To use: open the developer console and type &lt;code&gt;localStorage.debug = 'socket.io:*'&lt;/code&gt; (or any debug level) and then refresh the page. Everything is logged until you run &lt;code&gt;localStorage.debug = ''&lt;/code&gt;</source>
          <target state="translated">调试也可以在浏览器中使用；日志将保存到本地存储。要使用：打开开发人员控制台，然后键入 &lt;code&gt;localStorage.debug = 'socket.io:*'&lt;/code&gt; （或任何调试级别），然后刷新页面。一切都会记录下来，直到您运行 &lt;code&gt;localStorage.debug = ''&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="830ca4c1ff58e6bf67b2647e1fadaa39cffb9f4a" translate="yes" xml:space="preserve">
          <source>Decoding takes things a step further and is event-based. This is done because some objects (binary-containing) are both encoded and decoded in multiple parts. This example should help:</source>
          <target state="translated">解码则更进一步,是基于事件的。之所以这样做,是因为有些对象(含二进制)既要编码,又要解码,分多个部分。这个例子应该会有所帮助。</target>
        </trans-unit>
        <trans-unit id="4420c89ef1e444b77e053b51586961e52dc7ec9b" translate="yes" xml:space="preserve">
          <source>Default namespace</source>
          <target state="translated">默认命名空间</target>
        </trans-unit>
        <trans-unit id="022a84408270969073808938ced3dedbcf6f8f1d" translate="yes" xml:space="preserve">
          <source>Default room</source>
          <target state="translated">默认房间</target>
        </trans-unit>
        <trans-unit id="bdffe654f8554300a98d2acefcbbf1d894339b2b" translate="yes" xml:space="preserve">
          <source>Default value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cd100197a88de55b5be960abb71cdb50fe1b37" translate="yes" xml:space="preserve">
          <source>Default value: &lt;code&gt;1e6&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d36288b5c8873730d74ec2bee7f0a6e4883b2f" translate="yes" xml:space="preserve">
          <source>Demo:</source>
          <target state="translated">Demo:</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="3dd38c311d060b7b421a0557c4ee9e1ecf5ebf03" translate="yes" xml:space="preserve">
          <source>Difference 1 &amp;ndash; packet encoding</source>
          <target state="translated">差异1 &amp;ndash;数据包编码</target>
        </trans-unit>
        <trans-unit id="e1411c6b6f16e053454e88e5999fafaf2723f5a4" translate="yes" xml:space="preserve">
          <source>Difference 2 &amp;ndash; packet decoding</source>
          <target state="translated">差异2 &amp;ndash;数据包解码</target>
        </trans-unit>
        <trans-unit id="b38da7b708f16cd8e3ea6bb1aa04c77c00f74faf" translate="yes" xml:space="preserve">
          <source>Disconnection</source>
          <target state="translated">Disconnection</target>
        </trans-unit>
        <trans-unit id="3d6cca6f6c952acb83ec0d3e83e327891f4e76ca" translate="yes" xml:space="preserve">
          <source>Disconnection detection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a048c508718778c98b64c5b80b1a980bf2d58f37" translate="yes" xml:space="preserve">
          <source>Disconnects the socket manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb732aee792b06889f012d2191d5086ac1d9d3ae" translate="yes" xml:space="preserve">
          <source>Disconnects this socket. If value of close is &lt;code&gt;true&lt;/code&gt;, closes the underlying connection. Otherwise, it just disconnects the namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2110433853b7ccffb73436f986c2733e8036080a" translate="yes" xml:space="preserve">
          <source>Due to the reversal of the heartbeat mechanism (more information &lt;a href=&quot;https://socket.io/blog/engine-io-4-release/#Heartbeat-mechanism-reversal&quot;&gt;here&lt;/a&gt;), this event has been removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d781f6708ae470e99098fff6de8a6f86cb7ddf" translate="yes" xml:space="preserve">
          <source>During development, we recommend using the &lt;code&gt;socket.io.js&lt;/code&gt; bundle. By setting &lt;code&gt;localStorage.debug = 'socket.io-client:socket'&lt;/code&gt;, any event received by the client will be printed to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5086e468de7a1dc831e17046447436e3f6b9200" translate="yes" xml:space="preserve">
          <source>ES modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a27bce88f6eae7baf3b584caab9b1c35f05b50a" translate="yes" xml:space="preserve">
          <source>ES modules syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cbb8934d14c54296a829a9088788e252de9bd0" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Socket&lt;/code&gt; in Socket.IO is identified by a random, unguessable, unique identifier &lt;a href=&quot;server-socket-instance#Socket-id&quot;&gt;Socket#id&lt;/a&gt;. For your convenience, each socket automatically joins a room identified by its own id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac34b758084bbe817e4a315034aaa209b4266791" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Socket&lt;/code&gt; in Socket.IO is identified by a random, unguessable, unique identifier &lt;code&gt;Socket#id&lt;/code&gt;. For your convenience, each socket automatically joins a room identified by this id.</source>
          <target state="translated">Socket.IO中的每个 &lt;code&gt;Socket&lt;/code&gt; 都由一个随机的，不可猜测的唯一标识符 &lt;code&gt;Socket#id&lt;/code&gt; 标识。为了您的方便，每个插座自动加入此ID标识的房间。</target>
        </trans-unit>
        <trans-unit id="30312e78b26ea8672221ff0520299c368900e9b6" translate="yes" xml:space="preserve">
          <source>Each namespace emits a &lt;code&gt;connection&lt;/code&gt; event that receives each &lt;code&gt;Socket&lt;/code&gt; instance as a parameter</source>
          <target state="translated">每个名称空间都发出一个 &lt;code&gt;connection&lt;/code&gt; 事件，该事件接收每个 &lt;code&gt;Socket&lt;/code&gt; 实例作为参数</target>
        </trans-unit>
        <trans-unit id="b423687d1f8f71888ad9d39efefb7e6a75274c59" translate="yes" xml:space="preserve">
          <source>Each new connection is assigned a random 20-characters identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646d7ef2dbd1aff68a086d6bedfdadf9636e6e4d" translate="yes" xml:space="preserve">
          <source>Else, let&amp;rsquo;s start right away! The server library can be installed from NPM:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71611dd471faf5ea711b7eec38e6db0fbe1dd67" translate="yes" xml:space="preserve">
          <source>Emit cheatsheet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a92c000e653283eb14d5c8c8b15559c6667a928" translate="yes" xml:space="preserve">
          <source>Emits an event to all connected clients. The following two are equivalent:</source>
          <target state="translated">向所有连接的客户端发出一个事件。以下两个是等价的。</target>
        </trans-unit>
        <trans-unit id="508c23db3f5fe19ac80c129a4050d38099aab3e8" translate="yes" xml:space="preserve">
          <source>Emits an event to the socket identified by the string &lt;code&gt;name&lt;/code&gt;. Any other parameters can be included.</source>
          <target state="translated">向由字符串 &lt;code&gt;name&lt;/code&gt; 标识的套接字发出事件。可以包含任何其他参数。</target>
        </trans-unit>
        <trans-unit id="65e1b5ea1b835ff97f4e6ebe7ea17a164298f789" translate="yes" xml:space="preserve">
          <source>Emits an event to the socket identified by the string name. Any other parameters can be included. All serializable datastructures are supported, including &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278e478011d9346b614fdf7e348bb3dcede919bf" translate="yes" xml:space="preserve">
          <source>Emitting events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfcd34164dc9bf0b6bacc6fb9259fbbf2c6d2fb8" translate="yes" xml:space="preserve">
          <source>Engine.IO protocol v4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73631d7f0356fdbdeaa36f8e5dbad89c6aa15dc4" translate="yes" xml:space="preserve">
          <source>Error handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee26365bd27314cf4f3055764b2ccf1f0c16abc7" translate="yes" xml:space="preserve">
          <source>Errors passed to middleware callbacks are sent as special &lt;code&gt;connect_error&lt;/code&gt; packets to clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c2293411f6f3e1d9d62935ca183cd41e9b590d" translate="yes" xml:space="preserve">
          <source>Errors passed to middleware callbacks are sent as special &lt;code&gt;error&lt;/code&gt; packets to clients.</source>
          <target state="translated">传递给中间件回调的 &lt;code&gt;error&lt;/code&gt; 将作为特殊错误数据包发送给客户端。</target>
        </trans-unit>
        <trans-unit id="85af46f8d8050634f1a047ee21e22f9577874400" translate="yes" xml:space="preserve">
          <source>Event: &amp;lsquo;connect&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14f0aa41e92813ca7791ef447b083d939036ffd" translate="yes" xml:space="preserve">
          <source>Event: &amp;lsquo;connect_error&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b74490919525a3724dcf71025032d5982b5ec95" translate="yes" xml:space="preserve">
          <source>Event: &amp;lsquo;connection&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fd779e3aa04c88231846c7bd4d280166b1c8eb" translate="yes" xml:space="preserve">
          <source>Event: &amp;lsquo;disconnect&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd268e8a3bd7e8a36c83ee6f557a69fa5c228220" translate="yes" xml:space="preserve">
          <source>Event: &amp;lsquo;disconnecting&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf881167da9a60b6f4b560b1be0c49f1f6b72ea" translate="yes" xml:space="preserve">
          <source>Event: &amp;lsquo;error&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1496d76a787876478a61c887d72862bf440fd6" translate="yes" xml:space="preserve">
          <source>Event: &amp;lsquo;ping&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67cf01ab8547ec07c59ed50a3318cc57030f33de" translate="yes" xml:space="preserve">
          <source>Event: &amp;lsquo;reconnect&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa19a572726c22cbc3257b7fc3af9bb83ecad04" translate="yes" xml:space="preserve">
          <source>Event: &amp;lsquo;reconnect_attempt&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a37fdd3c13b4118c714a980bd2f6db0b69d85a" translate="yes" xml:space="preserve">
          <source>Event: &amp;lsquo;reconnect_error&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be19d74d2378f328915527049a61ff74f0cfc0c1" translate="yes" xml:space="preserve">
          <source>Event: &amp;lsquo;reconnect_failed&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1230441bd97eb98bfcdccc59e5f2cd0f1b900d" translate="yes" xml:space="preserve">
          <source>EventEmitter methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="4c541b76e1d10aa61fd5333b4d77618c5c73d42b" translate="yes" xml:space="preserve">
          <source>Events are great, but in some cases you may want a more classic request-response API. In Socket.IO, this feature is named acknowledgements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="4f7e77e17d69d25dde6189916c924a231bcd704c" translate="yes" xml:space="preserve">
          <source>Example with &lt;a href=&quot;http://www.passportjs.org/&quot;&gt;Passport&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6191b376e4ebd64f488f198bb405af988871dcc" translate="yes" xml:space="preserve">
          <source>Example with &lt;a href=&quot;https://joi.dev/api/&quot;&gt;joi&lt;/a&gt; and &lt;a href=&quot;emitting-events#Acknowledgements&quot;&gt;acknowledgements&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b77b79707ac84711463e6795b0dd6f8abdecf13" translate="yes" xml:space="preserve">
          <source>Example with &lt;a href=&quot;https://www.npmjs.com/package/express-session&quot;&gt;express-session&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d05da8ad00910d03b946650ad19d78062a42493" translate="yes" xml:space="preserve">
          <source>Example with &lt;code&gt;async/await&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d73f282911a9846e204d372a7fb805c23d08a79" translate="yes" xml:space="preserve">
          <source>Example with callback:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a67963332d35ebc8e46371995e089bcf4cdba4" translate="yes" xml:space="preserve">
          <source>Example with cookies (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials&quot;&gt;withCredentials&lt;/a&gt;) and additional headers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="3dfb1251aa4d44cbfd0d2c4d8d07ad74df5a9601" translate="yes" xml:space="preserve">
          <source>Explanation: the &lt;code&gt;to()&lt;/code&gt; method does not return a new object, it mutates an attribute on the &lt;code&gt;io&lt;/code&gt; (respectively, the &lt;code&gt;socket&lt;/code&gt;) object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0275edefbd2acee59455b9eec2cbfac66f4890aa" translate="yes" xml:space="preserve">
          <source>Exposed as the &lt;code&gt;io&lt;/code&gt; global in &lt;code&gt;window&lt;/code&gt; if using the standalone build (eg: &lt;code&gt;/socket.io/socket.io.js&lt;/code&gt; or the CDN), or the result of calling &lt;code&gt;require('socket.io-client')&lt;/code&gt;.</source>
          <target state="translated">如果使用独立构建（例如： &lt;code&gt;/socket.io/socket.io.js&lt;/code&gt; 或CDN）或调用 &lt;code&gt;require('socket.io-client')&lt;/code&gt; 的结果，则在 &lt;code&gt;window&lt;/code&gt; 以 &lt;code&gt;io&lt;/code&gt; 全局形式公开。</target>
        </trans-unit>
        <trans-unit id="a9752bded020ddd8c60cedad89f522d15d9a15b5" translate="yes" xml:space="preserve">
          <source>Exposed as the &lt;code&gt;io&lt;/code&gt; namespace in the standalone build, or the result of calling &lt;code&gt;require('socket.io-client')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9179dd0a6d67cdff17d3e82b78643a31e7a4bb7" translate="yes" xml:space="preserve">
          <source>Exposed by &lt;code&gt;require('socket.io')&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;require('socket.io')&lt;/code&gt; 公开。</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="88cbfa4c6e048d355eecc103740361b0f0bb0690" translate="yes" xml:space="preserve">
          <source>Fedor Indutny has created a module called &lt;a href=&quot;https://github.com/indutny/sticky-session&quot;&gt;sticky session&lt;/a&gt; that ensures file descriptors (ie: connections) are routed based on the originating &lt;code&gt;remoteAddress&lt;/code&gt; (ie: IP).</source>
          <target state="translated">Fedor Indutny创建了一个名为&amp;ldquo; &lt;a href=&quot;https://github.com/indutny/sticky-session&quot;&gt;粘性会话&amp;rdquo;&lt;/a&gt;的模块，该模块可确保文件描述符（即：连接）基于原始 &lt;code&gt;remoteAddress&lt;/code&gt; （即：IP）进行路由。</target>
        </trans-unit>
        <trans-unit id="f9182f5289fd2eb5e28fc27b36e4938102627221" translate="yes" xml:space="preserve">
          <source>Fedor Indutny has created a module called &lt;a href=&quot;https://github.com/indutny/sticky-session&quot;&gt;sticky session&lt;/a&gt; that ensures file descriptors (ie: connections) are routed based on the originating &lt;code&gt;remoteAddress&lt;/code&gt; (ie: IP). Please note that this might lead to unbalanced routing, depending on the hashing method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d1dbc60a4d0c0f84a0f7af697cafee84e8ff99" translate="yes" xml:space="preserve">
          <source>Finally, let&amp;rsquo;s start our server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08dba59d2a256fa0bc5c3bbe3c64c069b110abf5" translate="yes" xml:space="preserve">
          <source>Fired upon a connection error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de333e47ad91068788867a5ddce1a86e89612e9a" translate="yes" xml:space="preserve">
          <source>Fired upon a connection from client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ce13110f1da0761a6cb85c2cab4e0e606b40fe" translate="yes" xml:space="preserve">
          <source>Fired upon a reconnection attempt error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9897b4df6674e8804de9614bfc8c9e6cc2c948" translate="yes" xml:space="preserve">
          <source>Fired upon a successful reconnection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aaa5e0e9403e8eb909e6faa60b6c2573cd1251c" translate="yes" xml:space="preserve">
          <source>Fired upon an attempt to reconnect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8993457784a74c0b87dc27b05b3106437a70ac7" translate="yes" xml:space="preserve">
          <source>Fired upon connection to the Namespace (including a successful reconnection).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041a469a199a4f1d34e13c6f16482f6e90651bd4" translate="yes" xml:space="preserve">
          <source>Fired upon disconnection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc20b1971aa18e120ba0771a3f5fed844d8b8043" translate="yes" xml:space="preserve">
          <source>Fired upon disconnection. The list of possible disconnection reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c71c76cad269625d0d892ff149be958830c4507" translate="yes" xml:space="preserve">
          <source>Fired when a ping packet is received from the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145f038bbf5ecc8debe96b388fb17500aa6445f1" translate="yes" xml:space="preserve">
          <source>Fired when an namespace middleware error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2f989b830ee916230aa75bd3678b150a092448" translate="yes" xml:space="preserve">
          <source>Fired when couldn&amp;rsquo;t reconnect within &lt;code&gt;reconnectionAttempts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12bacb7aeab5421a431358ab397d5748110f7198" translate="yes" xml:space="preserve">
          <source>Fired when the client is going to be disconnected (but hasn&amp;rsquo;t left its &lt;code&gt;rooms&lt;/code&gt; yet).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf338f50b8117c3afd9cbacf7a006d769a49aed" translate="yes" xml:space="preserve">
          <source>Flag: &amp;lsquo;broadcast&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40b5c4b467b3b0706022243705ecce1685683e5" translate="yes" xml:space="preserve">
          <source>Flag: &amp;lsquo;local&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db581e1b718557880887b9fc2dcb9bf6568e343e" translate="yes" xml:space="preserve">
          <source>Flag: &amp;lsquo;volatile&amp;rsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76da14ab1b67788a24feabb5e9a8fdd58357f6c5" translate="yes" xml:space="preserve">
          <source>For example, you can use the &lt;a href=&quot;https://www.npmjs.com/package/eiows&quot;&gt;eiows&lt;/a&gt; package, which is a fork of the (now deprecated) &lt;a href=&quot;https://www.npmjs.com/package/uws&quot;&gt;uws&lt;/a&gt; package:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3b442764f5dc8850f558e3ea15663c41401e51" translate="yes" xml:space="preserve">
          <source>For most applications, the transition to 1.0 should be completely seamless and devoid of any hiccups. That said, we&amp;rsquo;ve done some work to streamline some APIs, and we have changed some internals, so this is a recommended read for most existing users.</source>
          <target state="translated">对于大多数应用程序，到1.0的过渡应该是完全无缝的，并且没有任何打ic。也就是说，我们已经完成了一些简化API的工作，并且更改了一些内部构造，因此对于大多数现有用户来说，这是推荐阅读的文章。</target>
        </trans-unit>
        <trans-unit id="b7146818821cd4dfe1b16f11c807efe9bda739e0" translate="yes" xml:space="preserve">
          <source>For other available methods, see &lt;code&gt;Namespace&lt;/code&gt; below.</source>
          <target state="translated">有关其他可用方法，请参见下面的 &lt;code&gt;Namespace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="37fc24877d4ded95f4df68e79ec6aedf8807f1da" translate="yes" xml:space="preserve">
          <source>For production, please use the &lt;code&gt;socket.io.min.js&lt;/code&gt; bundle, which is an optimized build excluding the debug package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5dd96493d56d2b8ba54c9d6d6543495bc819a55" translate="yes" xml:space="preserve">
          <source>For reference, an Adapter is an object that stores the relationships between Sockets and &lt;a href=&quot;rooms&quot;&gt;Rooms&lt;/a&gt;. There are two official adapters: the in-memory adapter (built-in) and the &lt;a href=&quot;https://github.com/socketio/socket.io-redis&quot;&gt;Redis adapter&lt;/a&gt; based on Redis &lt;a href=&quot;https://redis.io/topics/pubsub&quot;&gt;pub-sub mechanism&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20dd7661ce451475720873c25c875d2e719172ab" translate="yes" xml:space="preserve">
          <source>For the how and why, please take a look at: &lt;a href=&quot;namespaces&quot;&gt;Rooms and Namespaces&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b74c595c1544a8590f5187644b05697b2ba3378" translate="yes" xml:space="preserve">
          <source>For the low-level details, please see:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d26f4f448fc42c07aa93e3a7c67490cf4f3388" translate="yes" xml:space="preserve">
          <source>For this purpose, it relies on &lt;a href=&quot;https://github.com/socketio/engine.io&quot;&gt;Engine.IO&lt;/a&gt;, which first establishes a long-polling connection, then tries to upgrade to better transports that are &amp;ldquo;tested&amp;rdquo; on the side, like WebSocket. Please see the &lt;a href=&quot;https://github.com/socketio/engine.io#goals&quot;&gt;Goals&lt;/a&gt; section for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f0ee481c0124092e166ac9c48d7fc1bf7fe092" translate="yes" xml:space="preserve">
          <source>For your convenience, each socket automatically joins a room identified by its id (see &lt;code&gt;Socket#id&lt;/code&gt;). This makes it easy to broadcast messages to other sockets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a56d5ddd5e365d5a8757abb12f5c7f9ab8dcae2" translate="yes" xml:space="preserve">
          <source>From NPM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0980df13fc7b459fea0a8f89fcb2c1c2e02ade8" translate="yes" xml:space="preserve">
          <source>From a CDN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3ba7b507a794d3515534951c6ede70808273bb" translate="yes" xml:space="preserve">
          <source>From a different domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992b4937ce556fe04eb613ed50dcdfe11eea8bb3" translate="yes" xml:space="preserve">
          <source>From the same domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08cfd6cdde7cc08e4886beba5aaf22aee8d7038" translate="yes" xml:space="preserve">
          <source>Gets a list of socket IDs connected to this namespace (across all nodes if applicable).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67d5a5f25d08ed0bc5129a24e086e26c98b18c3" translate="yes" xml:space="preserve">
          <source>Golang: &lt;a href=&quot;https://github.com/yosuke-furukawa/socket.io-go-emitter&quot;&gt;https://github.com/yosuke-furukawa/socket.io-go-emitter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="8de0c9fd8cb87e8bca45a430aa7bf6c695bc6f8d" translate="yes" xml:space="preserve">
          <source>HAProxy configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf16e1c1a37aefe99a28f921426e66e8cb6302a" translate="yes" xml:space="preserve">
          <source>Handling CORS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5bac748238e195d15617323a7121c574603380" translate="yes" xml:space="preserve">
          <source>Handling middleware error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1e7543c3b316d2bbf70231df1f924372cf1aba" translate="yes" xml:space="preserve">
          <source>Hash of &lt;code&gt;Socket&lt;/code&gt; objects that are connected to this namespace indexed by &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">连接到此命名空间的 &lt;code&gt;Socket&lt;/code&gt; 对象的哈希，该哈希由 &lt;code&gt;id&lt;/code&gt; 索引。</target>
        </trans-unit>
        <trans-unit id="d416bc0a8c30acd0006de83606f39326cdc2161c" translate="yes" xml:space="preserve">
          <source>Headers that will be passed for each request to the server (via xhr-polling and via websockets). These values then can be used during handshake or for special proxies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c3e084a4fb34d2cbbef922b1c91258a8a8c812a" translate="yes" xml:space="preserve">
          <source>Here is the complete list of changes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f772319a6169c67aa6c81f617c0cb4808437c76" translate="yes" xml:space="preserve">
          <source>Here is the list of possible reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54df2a2820e344280b1fe27e0f1abdbfb0e6ebd6" translate="yes" xml:space="preserve">
          <source>Here is the updated list of events emitted by the Manager:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ed0e195fbe7c3ef697a9f2902c6abbd9dae978" translate="yes" xml:space="preserve">
          <source>Here is the updated list of events emitted by the Socket:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725e41845a6d3dde784f09b840a1ed8f132875ef" translate="yes" xml:space="preserve">
          <source>Here, a classic Node.js &lt;a href=&quot;https://nodejs.org/docs/latest/api/http.html#http_class_http_server&quot;&gt;HTTP server&lt;/a&gt; is started to serve the &lt;code&gt;index.html&lt;/code&gt; file, and the Socket.IO server is attached to it. Please see the &lt;a href=&quot;server-initialization&quot;&gt;Server initialization&lt;/a&gt; page for the various ways to create a server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273346d2f7b505eaa742b5269f9cac8f7faae0d4" translate="yes" xml:space="preserve">
          <source>Here, the socket connects to the &lt;code&gt;admin&lt;/code&gt; namespace, with the custom path &lt;code&gt;mypath&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52e0cae966b247908ea43ab51333f88a98b78cc" translate="yes" xml:space="preserve">
          <source>How does that work?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b395bc170beb10ba260045e19d30eecb8ca4c69" translate="yes" xml:space="preserve">
          <source>How to upgrade an existing production deployment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd45fd3f2e347de26d6cbb92c276978c2dd03be8" translate="yes" xml:space="preserve">
          <source>How to use</source>
          <target state="translated">如何使用</target>
        </trans-unit>
        <trans-unit id="92957eb15be5efc04771ad78ff325acf04232c07" translate="yes" xml:space="preserve">
          <source>However, this cookie is not needed in some cases (i.e. single server deployment, sticky-session based on IP) so it must now be explicitly enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84a03c0b4e3f61e1724818fca96b699b2708403" translate="yes" xml:space="preserve">
          <source>IE8 is no longer testable on the Sauce Labs platform, and requires a lot of efforts for very few users (if any?), so we are dropping support for it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d8fb39373007c2c84580d473e2a6e10a1f4c15d" translate="yes" xml:space="preserve">
          <source>IO</source>
          <target state="translated">IO</target>
        </trans-unit>
        <trans-unit id="e7003e6d925e31b832856a227b0f9166b34112a4" translate="yes" xml:space="preserve">
          <source>IO#Emitter</source>
          <target state="translated">IO#Emitter</target>
        </trans-unit>
        <trans-unit id="765edfdb161c517a1ce5da44fc4d8424f1048a7d" translate="yes" xml:space="preserve">
          <source>IO#Manager</source>
          <target state="translated">IO#Manager</target>
        </trans-unit>
        <trans-unit id="41a37c4339d0c82f3ee00bfcc54ac4b2c0b5de1e" translate="yes" xml:space="preserve">
          <source>IO#Socket</source>
          <target state="translated">IO#Socket</target>
        </trans-unit>
        <trans-unit id="beec8eb46066cdc0aba242a7542ab74f6a492c78" translate="yes" xml:space="preserve">
          <source>IO#protocol</source>
          <target state="translated">IO#protocol</target>
        </trans-unit>
        <trans-unit id="eca7349d4955aaf5cf93214a3c400d32f86f5aa4" translate="yes" xml:space="preserve">
          <source>IO(url:String, opts:Object):Socket</source>
          <target state="translated">IO(url:String,opts:Object):Socket</target>
        </trans-unit>
        <trans-unit id="ae5814b01fed4c7fe4953ba3c6fd43d5fafff87c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; the attached server (see &lt;code&gt;Server#attach&lt;/code&gt;) will serve the client files. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;v&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ,则附加服务器（请参阅 &lt;code&gt;Server#attach&lt;/code&gt; ）将提供客户端文件。默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5afc1161ce37003b0ff8f524b96eeb753fdfe43a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; the attached server (see &lt;code&gt;Server#attach&lt;/code&gt;) will serve the client files. Defaults to &lt;code&gt;true&lt;/code&gt;. This method has no effect after &lt;code&gt;attach&lt;/code&gt; is called. If no arguments are supplied this method returns the current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db447192b299a9c88f722e88f343a02d49df7dc" translate="yes" xml:space="preserve">
          <source>If a certain client is not ready to receive messages (because of network slowness or other issues, or because they&amp;rsquo;re connected through long polling and is in the middle of a request-response cycle), if they doesn&amp;rsquo;t receive ALL the tweets related to bieber your application won&amp;rsquo;t suffer.</source>
          <target state="translated">如果某个客户端尚未准备好接收消息（由于网络速度慢或其他问题，或者由于它们是通过长时间轮询连接的，并且处于请求-响应周期的中间），则它们没有收到所有推文与bieber相关，您的应用程序不会受到影响。</target>
        </trans-unit>
        <trans-unit id="fb1ce81de34384cbd24c741e8cde40b6c4c964c6" translate="yes" xml:space="preserve">
          <source>If no arguments are supplied this method returns the current value.</source>
          <target state="translated">如果没有提供参数,本方法返回当前值。</target>
        </trans-unit>
        <trans-unit id="fa58993489f9724fe87e017817824b21b487e78c" translate="yes" xml:space="preserve">
          <source>If that&amp;rsquo;s not the case, please check that your server is listening and is actually reachable on the given port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90cbfaa5a6226da6351e98afd13ce9e35f5a13e4" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;next&lt;/code&gt; method is called with an Error object, the client will receive an &lt;code&gt;connect_error&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2c2d8211b58a2564665cd3ca84185ad305bcf5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;next&lt;/code&gt; method is called with an Error object, the connection will be refused and the client will receive an &lt;code&gt;connect_error&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b809d360a1991164be8989c75e764acbea91ea" translate="yes" xml:space="preserve">
          <source>If the manager was initiated with &lt;code&gt;autoConnect&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, launch a new connection attempt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d917d98ca6bb6e35a46ac76ea42394de33ffb89" translate="yes" xml:space="preserve">
          <source>If the namespace was already initialized it returns it right away.</source>
          <target state="translated">如果命名空间已经被初始化,它就会立即返回。</target>
        </trans-unit>
        <trans-unit id="74301b7fc10c8fceb7ffdf82213b13ad5ccb925e" translate="yes" xml:space="preserve">
          <source>If they&amp;rsquo;re using long polling, they might or might not have sent a request that we can write to. They could be &amp;ldquo;in between&amp;rdquo; those requests. In those situations, it means we have to buffer messages in the process. In order for the client to successfully claim those messages when he sends his request, the easiest way is for him to connect to be routed to that same process.</source>
          <target state="translated">如果他们使用长时间轮询，那么他们可能已经发送或未发送我们可以写入的请求。它们可能在这些请求之间。在这种情况下，这意味着我们必须在流程中缓冲消息。为了使客户端在发送请求时成功声明这些消息，最简单的方法是将其连接到同一进程。</target>
        </trans-unit>
        <trans-unit id="c3fe0aadfe0bc0505e9ce29224bf372212e9ab52" translate="yes" xml:space="preserve">
          <source>If true and if the previous websocket connection to the server succeeded, the connection attempt will bypass the normal upgrade process and will initially try websocket. A connection attempt following a transport error will use the normal upgrade process. It is recommended you turn this on only when using SSL/TLS connections, or if you know that your network does not block websockets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1993f54466e0d1d356360d2fc7055443b881db54" translate="yes" xml:space="preserve">
          <source>If true, the server certificate is verified against the list of supplied CAs. An &amp;lsquo;error&amp;rsquo; event is emitted if verification fails. Verification happens at the connection level, before the HTTP request is sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="806b12b32e9c2e58055860aa5cc69421fdca402b" translate="yes" xml:space="preserve">
          <source>If you are looking for a plain WebSocket server, please take a look at &lt;a href=&quot;https://github.com/websockets/ws&quot;&gt;ws&lt;/a&gt; or &lt;a href=&quot;https://github.com/uNetworking/uWebSockets.js&quot;&gt;uWebSockets.js&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4293c8be9faefac8f020c79260bc18e068b0d10e" translate="yes" xml:space="preserve">
          <source>If you are new to the Node.js ecosystem, please take a look at the &lt;a href=&quot;https://socket.io/get-started/chat&quot;&gt;Get Started&lt;/a&gt; guide, which is ideal for beginners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43102d2b89f245a935f7e1f454ea66b66037a1fa" translate="yes" xml:space="preserve">
          <source>If you are sure the WebSocket connection will succeed, you can disable the polling transport:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1653af6e17a96738b502b9bd7223a464e9faf381" translate="yes" xml:space="preserve">
          <source>If you are using webpack, you can remove it with &lt;a href=&quot;https://github.com/johngodley/webpack-remove-debug&quot;&gt;webpack-remove-debug&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b97a61df4d3020396f0e1707acfe7df0699d782" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t care about reconnection logic and such, take a look at &lt;a href=&quot;https://github.com/Automattic/engine.io&quot;&gt;Engine.IO&lt;/a&gt;, which is the WebSocket semantics transport layer Socket.IO uses.</source>
          <target state="translated">如果您不关心此类的重新连接逻辑，请查看&lt;a href=&quot;https://github.com/Automattic/engine.io&quot;&gt;Engine.IO&lt;/a&gt;，这是Socket.IO使用的WebSocket语义传输层。</target>
        </trans-unit>
        <trans-unit id="1535abbaf8f958640fcb4e265a5e50fa6e7c1cfc" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t need this (see other options below), you can disable the functionality on the server side:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610bbacc886e3857687966c99069ce6ee98ac268" translate="yes" xml:space="preserve">
          <source>If you have control over all the messages and events emitted for a particular application, using the default / namespace works. If you want to leverage 3rd-party code, or produce code to share with others, socket.io provides a way of namespacing a socket.</source>
          <target state="translated">如果你能控制一个特定应用所发出的所有消息和事件,使用默认的/命名空间就可以了。如果你想利用第三方代码,或者制作代码与他人共享,socket.io提供了一种为socket命名空间的方法。</target>
        </trans-unit>
        <trans-unit id="93ab2831a02899757443435ca0f442f3fadb997a" translate="yes" xml:space="preserve">
          <source>If you have properly configured your server (see &lt;a href=&quot;#Configuration&quot;&gt;above&lt;/a&gt;), this could mean that your browser wasn&amp;rsquo;t able to reach the Socket.IO server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dcf833ab051064ccc875acdd0dee3beced635eb" translate="yes" xml:space="preserve">
          <source>If you just want the WebSocket semantics, you can do that too. Simply leverage &lt;code&gt;send&lt;/code&gt; and listen on the &lt;code&gt;message&lt;/code&gt; event:</source>
          <target state="translated">如果只需要WebSocket语义，也可以这样做。只需利用 &lt;code&gt;send&lt;/code&gt; 和监听 &lt;code&gt;message&lt;/code&gt; 事件即可：</target>
        </trans-unit>
        <trans-unit id="4a0c94a8c38ee06d3b70bf927890dd976f52d756" translate="yes" xml:space="preserve">
          <source>If you plan to distribute the load of connections among different processes or machines, you have to make sure that requests associated with a particular session id connect to the process that originated them.</source>
          <target state="translated">如果你计划在不同的进程或机器之间分配连接的负载,你必须确保与特定会话id相关联的请求连接到发起它们的进程。</target>
        </trans-unit>
        <trans-unit id="3d9ae1f0cf7e5a9229259d482d95318c8dd1b251" translate="yes" xml:space="preserve">
          <source>If you restart the server, you will see in the console:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2756ec4a23b1fd694c780312382bba6c3ecd7034" translate="yes" xml:space="preserve">
          <source>If you want to pass messages to it from non-socket.io processes, you should look into &lt;a href=&quot;rooms-and-namespaces#sending-messages-from-the-outside-world&quot;&gt;&amp;ldquo;Sending messages from the outside-world&amp;rdquo;&lt;/a&gt;.</source>
          <target state="translated">如果要从non-socket.io进程传递消息给它，则应查看&lt;a href=&quot;rooms-and-namespaces#sending-messages-from-the-outside-world&quot;&gt;&amp;ldquo;从外界发送消息&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de62daca51305781cfb2816e319ec2af82743924" translate="yes" xml:space="preserve">
          <source>If your front is served on the same domain as your server, you can simply use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e1f3adc432652cad52381ba754cc251fc1cd81" translate="yes" xml:space="preserve">
          <source>In Socket.IO v2, you could listen to the &lt;code&gt;pong&lt;/code&gt; event on the client-side, which included the duration of the last health check round-trip.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1942288284cea38ed2d66cb41a32f977cdb9154" translate="yes" xml:space="preserve">
          <source>In all cases but the first (disconnection by the server), the client will wait for a small random delay and then reconnect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf7893f75585261645d8c6e93374e6bab9f0e49" translate="yes" xml:space="preserve">
          <source>In case your front is not served from the same domain as your server, you have to pass the URL of your server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7907c9fb32048f3d35f274cc0976c4d5addecdd" translate="yes" xml:space="preserve">
          <source>In certain cases, you may want to only broadcast to clients that are connected to the current server. You can achieve this with the &lt;code&gt;local&lt;/code&gt; flag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628163b659303b4ed2059f717048b6933661208f" translate="yes" xml:space="preserve">
          <source>In general there are some new shortcuts for common things. The old versions should still work, but shortcuts are nice.</source>
          <target state="translated">一般来说,常见的东西都有一些新的快捷方式。老版本的应该还能用,但快捷键很好用。</target>
        </trans-unit>
        <trans-unit id="a7d5811ef2504fc14f11b2b8b8f1585cd7329533" translate="yes" xml:space="preserve">
          <source>In order to create separation of concerns within your application (for example per module, or based on permissions), Socket.IO allows you to create several &lt;a href=&quot;namespaces&quot;&gt;Namespaces&lt;/a&gt;, which will act as separate communication channels but will share the same underlying connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934b452b6e667a7d9454d1cdad7f45154aa45ac5" translate="yes" xml:space="preserve">
          <source>In order to target specific clients when broadcasting, please see the documentation about &lt;a href=&quot;rooms&quot;&gt;Rooms&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6ba199142624abf31ee1877d2669321ec83f79" translate="yes" xml:space="preserve">
          <source>In order to upgrade a live production environment, you will need to have both a group of v2 servers and v3 servers in parallel, and route the traffic based on either:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1e7becb8acb43415e9ff7bea7a2efe00d22728" translate="yes" xml:space="preserve">
          <source>In previous versions, a client would always connect to the default namespace (&lt;code&gt;/&lt;/code&gt;), even if it requested access to another namespace. This meant that the middlewares registered for the default namespace were triggered, which may be quite surprising.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fbd38aa6fb25e4384e3c33982ade68c7218e858" translate="yes" xml:space="preserve">
          <source>In previous versions, an &lt;code&gt;io&lt;/code&gt; cookie was sent by default. This cookie can be used to enable sticky-session, which is still required when you have several servers and HTTP long-polling enabled (more information &lt;a href=&quot;using-multiple-nodes&quot;&gt;here&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8708b529f6d68dcabe537d863ce4d75ad0dcb9" translate="yes" xml:space="preserve">
          <source>In previous versions, the &lt;code&gt;query&lt;/code&gt; option was used in two distinct places:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5871d6ee7c856054bc47c8f9dcdd2d86ceb5604" translate="yes" xml:space="preserve">
          <source>In previous versions, the Socket instance emitted the events related to the state of the underlying connection. This will not be the case anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b369045b3f111db8df1f362dd9da7e8ea71de1a" translate="yes" xml:space="preserve">
          <source>In some cases, you might want to emit events to sockets in Socket.IO namespaces / rooms from outside the context of your Socket.IO processes.</source>
          <target state="translated">在某些情况下,您可能希望从Socket.IO进程的上下文之外向Socket.IO命名空间/房间中的套接字发出事件。</target>
        </trans-unit>
        <trans-unit id="59e430b64e8148e22e3c202b566d6248f3cca32f" translate="yes" xml:space="preserve">
          <source>In that case, a &lt;a href=&quot;https://en.wikipedia.org/wiki/Union_(set_theory)&quot;&gt;union&lt;/a&gt; is performed: every socket that is at least in one of the rooms will get the event &lt;strong&gt;once&lt;/strong&gt; (even if the socket is in two or more rooms).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3190d4793c01895c855d04467ede6b1aa39a24" translate="yes" xml:space="preserve">
          <source>In that case, due to the nature of the WebSocket connection, you can have several server instances without sticky sessions. More information &lt;a href=&quot;using-multiple-nodes&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7a2e69d5d96b6aee4d36a665182da4e6aa2d09" translate="yes" xml:space="preserve">
          <source>In that case, every socket in the room &lt;strong&gt;excluding&lt;/strong&gt; the sender will get the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f2f411840c21268ffe2a08dfe697786953d849" translate="yes" xml:space="preserve">
          <source>In that case, you might want to send those messages as volatile messages.</source>
          <target state="translated">在这种情况下,你可能想把这些消息作为不稳定的消息发送。</target>
        </trans-unit>
        <trans-unit id="9469fb523a736aed22c71ba4ee94d420cc3e6e5b" translate="yes" xml:space="preserve">
          <source>In the examples above, the client will connect to the default namespace. Using only the default namespace should be sufficient for most use cases, but you can specify the namespace with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bd9626612ec9f7f6322c7a24351f03c1deca0b" translate="yes" xml:space="preserve">
          <source>In the examples below, the &lt;code&gt;io&lt;/code&gt; object comes either from:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef9f67dc174cf412cb111af9ddbfdaf96df10cc" translate="yes" xml:space="preserve">
          <source>In the same &lt;code&gt;http { }&lt;/code&gt; section, you can declare a &lt;code&gt;server { }&lt;/code&gt; that points to this upstream. In order for NginX to support and forward the &lt;code&gt;WebSocket&lt;/code&gt; protocol, we explicitly pass along the required &lt;code&gt;Upgrade&lt;/code&gt; headers:</source>
          <target state="translated">在同一 &lt;code&gt;http { }&lt;/code&gt; 部分中，您可以声明一个指向该上游的 &lt;code&gt;server { }&lt;/code&gt; 。为了使NginX支持并转发 &lt;code&gt;WebSocket&lt;/code&gt; 协议，我们明确传递了所需的 &lt;code&gt;Upgrade&lt;/code&gt; 标头：</target>
        </trans-unit>
        <trans-unit id="81f4071f7db6d63a2d6cc80c8d454d98a9ab2c54" translate="yes" xml:space="preserve">
          <source>In v2, the Socket.IO server automatically added the necessary headers to allow &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;Cross-Origin Resource Sharing&lt;/a&gt; (CORS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4793ea21f4d89bedcdacdda177a720fcb2e453c0" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;code&gt;EventEmitter&lt;/code&gt; (along with other methods not mentioned here). See the Node.js documentation for the &lt;a href=&quot;https://nodejs.org/docs/latest/api/events.html&quot;&gt;events&lt;/a&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fa16ffd48f366e4fa8d57fea78ff03fcab0191" translate="yes" xml:space="preserve">
          <source>Initialization</source>
          <target state="translated">Initialization</target>
        </trans-unit>
        <trans-unit id="4d208710123d19490b1b852ce9572c5a0f173b23" translate="yes" xml:space="preserve">
          <source>Initialization examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef72f0fec4a03fc24c112a118416d6ba0263d3d" translate="yes" xml:space="preserve">
          <source>Initializes and retrieves the given &lt;code&gt;Namespace&lt;/code&gt; by its pathname identifier &lt;code&gt;nsp&lt;/code&gt;.</source>
          <target state="translated">通过其路径名标识符 &lt;code&gt;nsp&lt;/code&gt; 初始化并检索给定的 &lt;code&gt;Namespace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1153fecd9406768f1ad2c0cca878670543d3af77" translate="yes" xml:space="preserve">
          <source>Initializes and retrieves the given &lt;code&gt;Namespace&lt;/code&gt; by its pathname identifier &lt;code&gt;nsp&lt;/code&gt;. If the namespace was already initialized it returns it immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Installing</target>
        </trans-unit>
        <trans-unit id="02c8dfbfe5cea1ca71b01088b5a62b813b5385c5" translate="yes" xml:space="preserve">
          <source>Instead do configuration in server initialization like this:</source>
          <target state="translated">而不是像这样在服务器初始化中进行配置。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="6172a3fb95bcf1bf395b1af4ec63354a87336596" translate="yes" xml:space="preserve">
          <source>It can also be used to manually reconnect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c5a2cdf3c0be85139c36c004a704d0fa1007f1" translate="yes" xml:space="preserve">
          <source>It is available for both the server and the client sides:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341095a24fe585c59d28797a7be1ceacc0b8937b" translate="yes" xml:space="preserve">
          <source>It matches the &lt;a href=&quot;https://github.com/websockets/ws/blob/master/doc/ws.md#new-websocketserveroptions-callback&quot;&gt;maxPayload&lt;/a&gt; option of the ws package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9053b89060f4ae5eaeca8cbefaf39f432508e0fb" translate="yes" xml:space="preserve">
          <source>It seems that you are using a v3 client to connect to a v2 server, which is not possible. Please see the &lt;a href=&quot;#How-to-upgrade-an-existing-production-deployment&quot;&gt;following section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd72d98759573a9e06ae0dce7f9dfbc0c56af74" translate="yes" xml:space="preserve">
          <source>It should be noted the &lt;code&gt;Socket&lt;/code&gt; doesn&amp;rsquo;t relate directly to the actual underlying TCP/IP &lt;code&gt;socket&lt;/code&gt; and it is only the name of the class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23e0934b6a94e61364a07c22419979b41aaf525" translate="yes" xml:space="preserve">
          <source>It was replaced by middlewares.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18791c81abfa44ff57e7795b44b531728ca67c5c" translate="yes" xml:space="preserve">
          <source>It was replaced by the ability to provide your own parser, which was added in Socket.IO 2.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2aa84c563c5fc9fab3873a0f4246dccc5cd7ba" translate="yes" xml:space="preserve">
          <source>Its main features are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab9d8f515c1e0f84c845d112526c69fc0b770ea" translate="yes" xml:space="preserve">
          <source>Java: &lt;a href=&quot;https://github.com/socketio/socket.io-client-java&quot;&gt;https://github.com/socketio/socket.io-client-java&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d7f36cdcca71ce748477091f651d9f6eb7b47f" translate="yes" xml:space="preserve">
          <source>Java: &lt;a href=&quot;https://github.com/sunsus/socket.io-java-emitter&quot;&gt;https://github.com/sunsus/socket.io-java-emitter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08d646f475d748ce78e14dea5fee661e86b505b" translate="yes" xml:space="preserve">
          <source>Javascript: &lt;a href=&quot;https://github.com/socketio/socket.io-emitter&quot;&gt;https://github.com/socketio/socket.io-emitter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae15ebcd9a8a699f8cf99d5a6ae25a1efac15fe" translate="yes" xml:space="preserve">
          <source>Joining and leaving</source>
          <target state="translated">加入和离开</target>
        </trans-unit>
        <trans-unit id="725a4e018f74b7ceb19a70475ed2866faeeeafb2" translate="yes" xml:space="preserve">
          <source>Just like NginX, Node.JS comes with built-in clustering support through the &lt;code&gt;cluster&lt;/code&gt; module.</source>
          <target state="translated">就像NginX一样，Node.JS通过 &lt;code&gt;cluster&lt;/code&gt; 模块提供了内置的集群支持。</target>
        </trans-unit>
        <trans-unit id="c2fb84955458e4584424c53d3cb1264b70f2a015" translate="yes" xml:space="preserve">
          <source>Known migration issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0452e80f5912a4da218c8605dfbcafb71b6d4acf" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create the &lt;code&gt;index.html&lt;/code&gt; file next to it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f487553d609a3fdbd7dd18b0d192f38bb796c2dd" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d0e7326f6aae4e171b2e50c225f18a668fbed0" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s update the &lt;code&gt;index.js&lt;/code&gt; file (server-side):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="033df3d297c22e077f87acc4e5b0f910192e40c2" translate="yes" xml:space="preserve">
          <source>Lifecycle</source>
          <target state="translated">Lifecycle</target>
        </trans-unit>
        <trans-unit id="06b3678b34c9762653f4518425379f0e3906e9a1" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;broadcasting-events#With-multiple-Socket-IO-servers&quot;&gt;global broadcasting&lt;/a&gt;, broadcasting to rooms also works with multiple Socket.IO servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0acbd87b6e975a834e11876a01c2dc936199a9" translate="yes" xml:space="preserve">
          <source>Listening to events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9ed8cfdc270e2de7716e19637811e80c410fc24" translate="yes" xml:space="preserve">
          <source>Log differences</source>
          <target state="translated">对数差异</target>
        </trans-unit>
        <trans-unit id="9183822bb443d27f09ccd0df46f88958cb0e1675" translate="yes" xml:space="preserve">
          <source>Logging and Debugging</source>
          <target state="translated">日志和调试</target>
        </trans-unit>
        <trans-unit id="31841ae644017a32c06ba2bfe4439341d3aad516" translate="yes" xml:space="preserve">
          <source>Logging and debugging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c70f7c724fcc71b34bf752646aa6108054d0140" translate="yes" xml:space="preserve">
          <source>Logging is now based on debug</source>
          <target state="translated">日志记录现在是基于debug</target>
        </trans-unit>
        <trans-unit id="4137f5b5c131444a42b7cc14b9840df833ae14bc" translate="yes" xml:space="preserve">
          <source>Make sure you also configure &lt;code&gt;worker_processes&lt;/code&gt; in the topmost level to indicate how many workers NginX should use. You might also want to look into tweaking the &lt;code&gt;worker_connections&lt;/code&gt; setting within the &lt;code&gt;events { }&lt;/code&gt; block.</source>
          <target state="translated">确保您还在最顶层配置了 &lt;code&gt;worker_processes&lt;/code&gt; ，以指示NginX应该使用多少个worker。您可能还想研究一下在 &lt;code&gt;events { }&lt;/code&gt; 块中对 &lt;code&gt;worker_connections&lt;/code&gt; 设置的调整。</target>
        </trans-unit>
        <trans-unit id="babe3050e2e81dfd87a8ce67264d518cb34aef72" translate="yes" xml:space="preserve">
          <source>Manager</source>
          <target state="translated">Manager</target>
        </trans-unit>
        <trans-unit id="b3a13df34133ab17aa5b9d26c082235b806d67d0" translate="yes" xml:space="preserve">
          <source>Manager#reconnection</source>
          <target state="translated">Manager#reconnection</target>
        </trans-unit>
        <trans-unit id="f0152d8e8c04d30ce015e9183545f393f7d9b350" translate="yes" xml:space="preserve">
          <source>Manager#reconnection(v:Boolean):Manager</source>
          <target state="translated">Manager#reconnection(v:Boolean):Manager</target>
        </trans-unit>
        <trans-unit id="e89b57223fc28dd840dabb3be2ac014a549189b7" translate="yes" xml:space="preserve">
          <source>Manager#reconnectionAttempts</source>
          <target state="translated">Manager#reconnectionAttempts</target>
        </trans-unit>
        <trans-unit id="727af5f439a98104282e62ed506c37272ab8052c" translate="yes" xml:space="preserve">
          <source>Manager#reconnectionAttempts(v:Boolean):Manager</source>
          <target state="translated">Manager#reconnectionAttempts(v:Boolean):Manager</target>
        </trans-unit>
        <trans-unit id="ae975c3f8fcd8cbd4821337f81b6ebaaf5a981db" translate="yes" xml:space="preserve">
          <source>Manager#reconnectionDelay</source>
          <target state="translated">Manager#reconnectionDelay</target>
        </trans-unit>
        <trans-unit id="06d3a18249c8be929ae04b42180c5b168819e6b2" translate="yes" xml:space="preserve">
          <source>Manager#reconnectionDelay(v:Boolean):Manager</source>
          <target state="translated">Manager#reconnectionDelay(v:Boolean):Manager</target>
        </trans-unit>
        <trans-unit id="bf3016c5a8175e1750fdeee08917d1ef7df9f775" translate="yes" xml:space="preserve">
          <source>Manager#reconnectionDelayMax</source>
          <target state="translated">Manager#reconnectionDelayMax</target>
        </trans-unit>
        <trans-unit id="c2d8667595770931cf658ec5366d0507d012bd39" translate="yes" xml:space="preserve">
          <source>Manager#reconnectionDelayMax(v:Boolean):Manager</source>
          <target state="translated">Manager#reconnectionDelayMax(v:Boolean):Manager</target>
        </trans-unit>
        <trans-unit id="ae5a4731f5f7292bce473150ff9ba305d8822742" translate="yes" xml:space="preserve">
          <source>Manager#timeout</source>
          <target state="translated">Manager#timeout</target>
        </trans-unit>
        <trans-unit id="50d7cf6d800965f9391493c5f119cba7de9edb55" translate="yes" xml:space="preserve">
          <source>Manager#timeout(v:Boolean):Manager</source>
          <target state="translated">Manager#timeout(v:Boolean):Manager</target>
        </trans-unit>
        <trans-unit id="82c08ae27c423813e6192615444336ef6a15c5c9" translate="yes" xml:space="preserve">
          <source>Manager(url:String, opts:Object)</source>
          <target state="translated">Manager(url:String,opts:Object)</target>
        </trans-unit>
        <trans-unit id="35b6150b1d145b58ace67e4d682fd22d8270bd6b" translate="yes" xml:space="preserve">
          <source>Manually opens the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb25df659b866abf127c01378bad233d7bab4030" translate="yes" xml:space="preserve">
          <source>Middleware functions can be useful for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e0622c20c96144720c72ae273895e1f0116ee8" translate="yes" xml:space="preserve">
          <source>Middlewares</source>
          <target state="translated">Middlewares</target>
        </trans-unit>
        <trans-unit id="721f76b7e54e027205b50091b6e50e077ee9af65" translate="yes" xml:space="preserve">
          <source>Migrating from 2.x to 3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb9e154b34e9d07546bed938fef6813da37c6de" translate="yes" xml:space="preserve">
          <source>Migration from 0.9</source>
          <target state="translated">从0.9岁开始迁移</target>
        </trans-unit>
        <trans-unit id="351e3f7dc67145791badb7ab99b7c6ef03bda43c" translate="yes" xml:space="preserve">
          <source>Minimal working example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="d3b97956989ec7754da489530c25d8e153b6d025" translate="yes" xml:space="preserve">
          <source>More information &lt;a href=&quot;http://expressjs.com/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a2e6eeced5d913bb004ebb66c03cb3a553559b" translate="yes" xml:space="preserve">
          <source>More information &lt;a href=&quot;https://koajs.com/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9e3ee76e1ce75e37ec83c3c24db2cd25472d23" translate="yes" xml:space="preserve">
          <source>More information about the installation can be found in the &lt;a href=&quot;server-installation&quot;&gt;Server installation&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9383b5eb8138984e1dd19c332281d06a83441a72" translate="yes" xml:space="preserve">
          <source>Most existing &lt;a href=&quot;http://expressjs.com/en/resources/middleware.html&quot;&gt;Express middleware&lt;/a&gt; modules should be compatible with Socket.IO, you just need a little wrapper function to make the method signatures match:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961b4c0ec34564c28d4d9b9601ad1d9695987b04" translate="yes" xml:space="preserve">
          <source>Multiplexing support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d94ebbf07f5417771d7c7fd06f208703494bf50" translate="yes" xml:space="preserve">
          <source>NPM</source>
          <target state="translated">NPM</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="0449e1003dd0cdd92ab163e844540614258e8b38" translate="yes" xml:space="preserve">
          <source>Namespace</source>
          <target state="translated">Namespace</target>
        </trans-unit>
        <trans-unit id="c6cad564350e0bdd6d94255a18a569584b94b066" translate="yes" xml:space="preserve">
          <source>Namespace authorization?</source>
          <target state="translated">命名空间授权?</target>
        </trans-unit>
        <trans-unit id="e656888f72d29211ea725e369ae0064a906f3b84" translate="yes" xml:space="preserve">
          <source>Namespace middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bc12a8d7a75a8f322d38f6a54ead60c2a56b57" translate="yes" xml:space="preserve">
          <source>Namespace#connected</source>
          <target state="translated">Namespace#connected</target>
        </trans-unit>
        <trans-unit id="b6c8aa0aefb9535b47a4649d094ee1fe33b6f44c" translate="yes" xml:space="preserve">
          <source>Namespace#connected:Object</source>
          <target state="translated">Namespace#connected:Object</target>
        </trans-unit>
        <trans-unit id="68d3f0dfb79335c600c584330553dc9e80a05365" translate="yes" xml:space="preserve">
          <source>Namespace#name</source>
          <target state="translated">Namespace#name</target>
        </trans-unit>
        <trans-unit id="4cc983dbefd5d737f87409787ded336e0349c04f" translate="yes" xml:space="preserve">
          <source>Namespace#name:String</source>
          <target state="translated">Namespace#name:String</target>
        </trans-unit>
        <trans-unit id="e940da986ed3563c553b2b35330a4422a9861581" translate="yes" xml:space="preserve">
          <source>Namespace#use</source>
          <target state="translated">Namespace#use</target>
        </trans-unit>
        <trans-unit id="14bf9a186a3907113a938f6a6b5b2ffefe06c09f" translate="yes" xml:space="preserve">
          <source>Namespace#use(fn:Function):Namespace</source>
          <target state="translated">Namespace#use(fn:Function):Namespace</target>
        </trans-unit>
        <trans-unit id="07250bd357a2d841a24269132a33552a8ff8afa3" translate="yes" xml:space="preserve">
          <source>Namespace.clients() is renamed to Namespace.allSockets() and now returns a Promise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390775f5386cf4995eb5783840f127700feb7aca" translate="yes" xml:space="preserve">
          <source>Namespace.connected is renamed to Namespace.sockets and is now a Map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be09a63bd1995e99cd22064cdc39a4bae464033d" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
          <target state="translated">Namespaces</target>
        </trans-unit>
        <trans-unit id="9120bbdfb821bd1a00efc4987ccc7be0a97318e0" translate="yes" xml:space="preserve">
          <source>Neat. Note that in both cases, these messages reach all clients connected to the default &amp;lsquo;/&amp;rsquo; namespace, but not clients in other namespaces.</source>
          <target state="translated">整齐。请注意，在两种情况下，这些消息都会到达连接到默认&amp;ldquo; /&amp;rdquo;名称空间的所有客户端，但不会到达其他名称空间中的客户端。</target>
        </trans-unit>
        <trans-unit id="d8949499e3a35fbaba06d97fa566b77440c7e8d3" translate="yes" xml:space="preserve">
          <source>New features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63681ee071b92ca03a3b02c634915115137ff093" translate="yes" xml:space="preserve">
          <source>NginX configuration</source>
          <target state="translated">NginX配置</target>
        </trans-unit>
        <trans-unit id="81566aed697682682f8a6b4493fab7ff1b6fae77" translate="yes" xml:space="preserve">
          <source>No additional configuration is needed on the client-side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11229611f85236cac06ca31d4f1982daa6c744c2" translate="yes" xml:space="preserve">
          <source>No more &amp;ldquo;pong&amp;rdquo; event for retrieving latency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530ec3d19f6a4fc82dd307e40134744a77eafcfe" translate="yes" xml:space="preserve">
          <source>No more cookie by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b15b7edf60ed354759ec4e6d54ecba53216cd5" translate="yes" xml:space="preserve">
          <source>No more implicit connection to the default namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a77f80fffcacdd51a5b606b91996cdb5ebdc5b2" translate="yes" xml:space="preserve">
          <source>Node.js-only options for the underlying Engine.IO client:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0e2fbbcd7e1b7ab3bfd26f627f177e6a4c6d73" translate="yes" xml:space="preserve">
          <source>Notable options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d0058b4d729deea8715dbe5d1c9a5fec3a8af3a" translate="yes" xml:space="preserve">
          <source>Note: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;Map&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;Set&lt;/a&gt; are not serializable and must be manually serialized:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0490054584f17f70cf8b4d030137bbb412ed7bc3" translate="yes" xml:space="preserve">
          <source>Note: custom adapters may return a Promise, so the previous example becomes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912eeb1daf862b430aec48d1f14f5e25f9c985e9" translate="yes" xml:space="preserve">
          <source>Note: for the reasons cited above, you may want to exclude debug from your browser bundle. With webpack, you can use &lt;a href=&quot;https://github.com/johngodley/webpack-remove-debug&quot;&gt;webpack-remove-debug&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db783565571a7573b9b4c49fc30f3658868ad654" translate="yes" xml:space="preserve">
          <source>Note: reusing the same namespace will also create two connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65843868b6cdfccfd51326b9849080a6c80fdc0" translate="yes" xml:space="preserve">
          <source>Note: the &lt;code&gt;query&lt;/code&gt; option of the Manager can still be used in order to add a specific query parameter to the HTTP requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746374b591b43d1e792f2ea1d83a614179ab0ed4" translate="yes" xml:space="preserve">
          <source>Note: this also applies to localhost if your web application and your server are not served from the same port</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8dda0dead7f16130db8d9d42930e2d03a8abc35" translate="yes" xml:space="preserve">
          <source>Note: this function was (and still is) supported by the Redis adapter, which means that it will return the list of socket IDs across all the Socket.IO servers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e08d343a58fcc3a1cb757047446753f63b2a804" translate="yes" xml:space="preserve">
          <source>Note: this function will be executed only once per connection (even if the connection consists in multiple HTTP requests).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e92e8e2e84907d545ea8edd440042890e2a8ac8" translate="yes" xml:space="preserve">
          <source>Note: those events, along with &lt;code&gt;connect&lt;/code&gt;, &lt;code&gt;connect_error&lt;/code&gt;, &lt;code&gt;newListener&lt;/code&gt; and &lt;code&gt;removeListener&lt;/code&gt;, are special events that shouldn&amp;rsquo;t be used in your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75aa7462db1959b2fbb55afedcfe9ccfe87a2eb" translate="yes" xml:space="preserve">
          <source>Note: those events, along with &lt;code&gt;disconnecting&lt;/code&gt;, &lt;code&gt;newListener&lt;/code&gt; and &lt;code&gt;removeListener&lt;/code&gt;, are special events that shouldn&amp;rsquo;t be used in your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3de4571193c3b8091d8a73c3802a5e9c74e02b9" translate="yes" xml:space="preserve">
          <source>Note: you can&amp;rsquo;t overwrite this identifier, as it is used in several parts of the Socket.IO codebase.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2220bd5d6e854fdbfe41ca0e0f265fd248cc11de" translate="yes" xml:space="preserve">
          <source>Notice the &lt;code&gt;ip_hash&lt;/code&gt; instruction that indicates the connections will be sticky.</source>
          <target state="translated">请注意 &lt;code&gt;ip_hash&lt;/code&gt; 指令，该指令指示连接将处于粘性状态。</target>
        </trans-unit>
        <trans-unit id="62f7c932de929b56c0f0ac958392516aabe3c6e1" translate="yes" xml:space="preserve">
          <source>Now that you have multiple Socket.IO nodes accepting connections, if you want to broadcast events to all clients (or to the clients in a certain &lt;a href=&quot;rooms&quot;&gt;room&lt;/a&gt;) you&amp;rsquo;ll need some way of passing messages between processes or computers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd713cffc1a8235d98530e14f39fcc4172769aa5" translate="yes" xml:space="preserve">
          <source>Now that you have multiple Socket.IO nodes accepting connections, if you want to broadcast events to everyone (or even everyone in a certain &lt;a href=&quot;http://new.socket.io/docs/rooms-and-namespaces/&quot;&gt;room&lt;/a&gt;) you&amp;rsquo;ll need some way of passing messages between processes or computers.</source>
          <target state="translated">现在，您已经有多个接受连接的Socket.IO节点，如果您想向所有人（甚至是某个&lt;a href=&quot;http://new.socket.io/docs/rooms-and-namespaces/&quot;&gt;房间中的&lt;/a&gt;每个人）广播事件，您将需要某种方式在进程或计算机之间传递消息。</target>
        </trans-unit>
        <trans-unit id="9d457ccf5a80591111a4e17f33c3c84e279c4e1f" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s detail the features provided by Socket.IO.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61d4e29999f717e20a2ffa02fda03db9cc09177" translate="yes" xml:space="preserve">
          <source>Now:</source>
          <target state="translated">Now:</target>
        </trans-unit>
        <trans-unit id="17d633074367ea3ae02f0cfc7c2a52e1162bfa81" translate="yes" xml:space="preserve">
          <source>Official bundle with the msgpack parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54eaec882a5155f98487d68c7fb09b7b359e7a19" translate="yes" xml:space="preserve">
          <source>Offline behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bf15242d535576d75a3f8c1302809518000e36" translate="yes" xml:space="preserve">
          <source>On the client side, you tell Socket.IO client to connect to that namespace:</source>
          <target state="translated">在客户端,你告诉Socket.IO客户端连接到该命名空间。</target>
        </trans-unit>
        <trans-unit id="ec581eb0329e58e0f6abd9ca534797bfdffff68e" translate="yes" xml:space="preserve">
          <source>On the client-side, the Socket instance uses the event emitter provided by the &lt;a href=&quot;https://github.com/component/emitter&quot;&gt;component-emitter&lt;/a&gt; library, which exposes a subset of the EventEmitter methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db99edef245d559e97c62db51fd40cc617e30a3" translate="yes" xml:space="preserve">
          <source>On the client-side, you might be interested by the &lt;a href=&quot;https://github.com/nathanboktae/robust-websocket&quot;&gt;robust-websocket&lt;/a&gt; package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed7f06638b87e9a128319b116909ec241f2e0a3" translate="yes" xml:space="preserve">
          <source>On the server-side, the Socket instance extends the Node.js &lt;a href=&quot;https://nodejs.org/docs/latest/api/events.html#events_events&quot;&gt;EventEmitter&lt;/a&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0193dbd2fa018b20d0b4b61ecce96a2f4a700b3" translate="yes" xml:space="preserve">
          <source>On the server-side, using &lt;code&gt;EventEmitter.captureRejections = true&lt;/code&gt; (experimental, see &lt;a href=&quot;https://nodejs.org/api/events.html#events_capture_rejections_of_promises&quot;&gt;here&lt;/a&gt;) might be interesting too, depending on your use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4506f9aba76f5162c5cdc0f70f3ba7606646e42" translate="yes" xml:space="preserve">
          <source>Once you have &lt;a href=&quot;client-installation&quot;&gt;installed&lt;/a&gt; the Socket.IO client library, you can now init the client. The complete list of options can be found &lt;a href=&quot;client-api#new-Manager-url-options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1da35e806a6f7811d9cfd1ab1d812a14cb86961" translate="yes" xml:space="preserve">
          <source>Once you have &lt;a href=&quot;server-installation&quot;&gt;installed&lt;/a&gt; the Socket.IO server library, you can now init the server. The complete list of options can be found &lt;a href=&quot;https://socket.io/docs/server-api/#new-Server-httpServer-options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="a873255737967e5cd5dd0dd1fea91aa23915d1e8" translate="yes" xml:space="preserve">
          <source>Optionally, the first or second argument (see below) of the &lt;code&gt;Server&lt;/code&gt; constructor can be an options object.</source>
          <target state="translated">（可选） &lt;code&gt;Server&lt;/code&gt; 构造函数的第一个或第二个参数（请参见下文）可以是options对象。</target>
        </trans-unit>
        <trans-unit id="2f06f772db11717176c485dd2b6a1783138950a8" translate="yes" xml:space="preserve">
          <source>Options like log-level are gone. &lt;code&gt;io.set('transports')&lt;/code&gt;, &lt;code&gt;io.set('heartbeat interval')&lt;/code&gt;, &lt;code&gt;io.set('heartbeat timeout'&lt;/code&gt;, and &lt;code&gt;io.set('resource')&lt;/code&gt; are still supported for backwards compatibility.</source>
          <target state="translated">日志级别等选项已消失。为了向后兼容，仍支持 &lt;code&gt;io.set('transports')&lt;/code&gt; ， &lt;code&gt;io.set('heartbeat interval')&lt;/code&gt; ， &lt;code&gt;io.set('heartbeat timeout'&lt;/code&gt; 和 &lt;code&gt;io.set('resource')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc05a04e02565e342f3c9d9537346771bbe17d85" translate="yes" xml:space="preserve">
          <source>Options: &amp;ndash; &lt;code&gt;reconnection&lt;/code&gt; whether to reconnect automatically (&lt;code&gt;true&lt;/code&gt;) &amp;ndash; &lt;code&gt;reconnectionDelay&lt;/code&gt; how long to wait before attempting a new reconnection (&lt;code&gt;1000&lt;/code&gt;) &amp;ndash; &lt;code&gt;reconnectionDelayMax&lt;/code&gt; maximum amount of time to wait between reconnections (&lt;code&gt;5000&lt;/code&gt;). Each attempt increases the reconnection by the amount specified by &lt;code&gt;reconnectionDelay&lt;/code&gt;. &amp;ndash; &lt;code&gt;timeout&lt;/code&gt; connection timeout before a &lt;code&gt;connect_error&lt;/code&gt; and &lt;code&gt;connect_timeout&lt;/code&gt; events are emitted (&lt;code&gt;20000&lt;/code&gt;)</source>
          <target state="translated">选项：&amp;ndash; &lt;code&gt;reconnection&lt;/code&gt; 是否自动重新连接（ &lt;code&gt;true&lt;/code&gt; ）&amp;ndash; &lt;code&gt;reconnectionDelay&lt;/code&gt; 尝试新的重新连接之前要等待多长时间（ &lt;code&gt;1000&lt;/code&gt; ）&amp;ndash; &lt;code&gt;reconnectionDelayMax&lt;/code&gt; 两次重新连接之间要等待的最长时间（ &lt;code&gt;5000&lt;/code&gt; ）。每次尝试都会增加重新连接的数量，该数量由 &lt;code&gt;reconnectionDelay&lt;/code&gt; 指定。 &amp;ndash; 发出 &lt;code&gt;connect_error&lt;/code&gt; 和 &lt;code&gt;connect_timeout&lt;/code&gt; 事件之前的 &lt;code&gt;timeout&lt;/code&gt; 连接超时（ &lt;code&gt;20000&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f5456cd6f71d9dadaba353ffb07d1d0ceb8cbb91" translate="yes" xml:space="preserve">
          <source>Other WebSocket server implementations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9495ec767cd2a894d13ca8a4b745a7e4804bdd03" translate="yes" xml:space="preserve">
          <source>Overwrites the default method to generate your custom socket id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e024fdea92b6eacd1e9de6fbbe156be687944b" translate="yes" xml:space="preserve">
          <source>PHP: &lt;a href=&quot;https://github.com/rase-/socket.io-php-emitter&quot;&gt;https://github.com/rase-/socket.io-php-emitter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="3005528f510648061623f06d3bacd5db302e39dc" translate="yes" xml:space="preserve">
          <source>Parser / Protocol differences</source>
          <target state="translated">解析器/协议差异</target>
        </trans-unit>
        <trans-unit id="3656eabceea41d5ef36ced31d931c12f009b456e" translate="yes" xml:space="preserve">
          <source>Parsing is now class based and asynchronous. Instead of returning a single encoded string, encode calls callback with an array of encodings as the only argument. Each encoding should be written to the transport in order. This is more flexible and makes binary data transport work. Here&amp;rsquo;s an example:</source>
          <target state="translated">解析现在基于类并且是异步的。而不是返回单个编码的字符串，encode调用以一组编码作为唯一参数的回调。每种编码应按顺序写入传输中。这更加灵活，并且可以执行二进制数据传输。这是一个例子：</target>
        </trans-unit>
        <trans-unit id="9a434fc9b54cbce18b6b82e867b809263604aaf2" translate="yes" xml:space="preserve">
          <source>Passing events between nodes</source>
          <target state="translated">在节点之间传递事件</target>
        </trans-unit>
        <trans-unit id="2b7d5f8cab1f00f0317f5e6795bc685ab366a815" translate="yes" xml:space="preserve">
          <source>Perl: &lt;a href=&quot;https://metacpan.org/pod/SocketIO::Emitter&quot;&gt;https://metacpan.org/pod/SocketIO::Emitter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e9bed063c56c58890e330319bfd6d01fabe72d1" translate="yes" xml:space="preserve">
          <source>Plain javascript is obviously still fully supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e523d82bc4e89fd24daec551bc9a437fb90bbf8" translate="yes" xml:space="preserve">
          <source>Please make sure that &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;Node.js&lt;/a&gt; is installed on your system. The current Long Term Support (LTS) release is an ideal starting point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30375048180a3a5ee4d85530e6e9915dabf5143" translate="yes" xml:space="preserve">
          <source>Please make sure to call &lt;code&gt;next()&lt;/code&gt; in any case. Otherwise, the connection will be left hanging until it is closed after a given timeout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="239ce25418341a074ab3fc2cfe96220d9627f0aa" translate="yes" xml:space="preserve">
          <source>Please make sure to use &lt;code&gt;io.to(...).emit(...)&lt;/code&gt; (or ̀&lt;code&gt;socket.to(...).emit(...)&lt;/code&gt;) in a synchronous manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f47ad79a7863537763a096e4006534d95472c7" translate="yes" xml:space="preserve">
          <source>Please note that broadcasting is a &lt;strong&gt;server-only&lt;/strong&gt; feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aa40cd43dc4480f5c1149bb1738cf98efaf313d" translate="yes" xml:space="preserve">
          <source>Please note that rooms are a &lt;strong&gt;server-only&lt;/strong&gt; concept (i.e. the client does not have access to the list of rooms it has joined).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f9cbb7d8f0f44d7c537197294f879314c8afea5" translate="yes" xml:space="preserve">
          <source>Please note that these packages are optional, the WebSocket server will fallback to the Javascript implementation if they are not available. More information can be found &lt;a href=&quot;https://github.com/websockets/ws/#opt-in-for-performance-and-spec-compliance&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce91eebcde3f015b048fc19c41ab1a19d730ce78" translate="yes" xml:space="preserve">
          <source>Please note that you shouldn&amp;rsquo;t register event handlers in the &lt;code&gt;connect&lt;/code&gt; handler itself, as a new handler will be registered every time the Socket reconnects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72a3ae1145c5de369a77688cdc870f767c22d20" translate="yes" xml:space="preserve">
          <source>Please note that, in most cases, you won&amp;rsquo;t use the Manager directly but use the &lt;a href=&quot;#Socket&quot;&gt;Socket&lt;/a&gt; instance instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196a928c32178b052bbb75015d490ce759688fbe" translate="yes" xml:space="preserve">
          <source>Please note: &lt;code&gt;manager.socket(&quot;/my-namespace&quot;, options )&lt;/code&gt; will only read the &lt;code&gt;auth&lt;/code&gt; key in the &lt;code&gt;options&lt;/code&gt; object.&lt;code&gt;query: {&amp;hellip;}&lt;/code&gt; and other optional values are only used when passed via a &lt;code&gt;new Manager(uri, options)&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460b8ac9746030ce7b0ee64513e2b5ef6930dc06" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;https://github.com/darrachequesne/socket.io-msgpack-parser&quot;&gt;socket.io-msgpack-parser&lt;/a&gt; for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84ed22d8bc76a8680e70dbcf3b59dab58d9d389" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;https://nodejs.org/api/esm.html#esm_enabling&quot;&gt;here&lt;/a&gt; for enabling ECMAScript modules in your Node.js project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b37ae13f14fb52a2f2247839bcee1f828844ac4" translate="yes" xml:space="preserve">
          <source>Possible reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d97807d68dde57fc7e759a613c365e24297a8e" translate="yes" xml:space="preserve">
          <source>Possible use cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="b530508ea9d519d633ebc196c502464cbc650332" translate="yes" xml:space="preserve">
          <source>Previously (if different)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a75bea51e4fcdcf5b5d55cf198957896d21a7e3" translate="yes" xml:space="preserve">
          <source>Previously:</source>
          <target state="translated">Previously:</target>
        </trans-unit>
        <trans-unit id="06bee76bdcd3ac996cde58017cd04eeb1c46a3e7" translate="yes" xml:space="preserve">
          <source>Private key to use for SSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5107a1390d9db4c7d092fe94b09b07693c3a0f73" translate="yes" xml:space="preserve">
          <source>Production version, without &lt;a href=&quot;https://www.npmjs.com/package/debug&quot;&gt;debug&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a311ce7702ff8c4745ad0c2b2ed9ff8bedcf9716" translate="yes" xml:space="preserve">
          <source>Production version, without &lt;a href=&quot;https://www.npmjs.com/package/debug&quot;&gt;debug&lt;/a&gt; and with the &lt;a href=&quot;https://github.com/darrachequesne/socket.io-msgpack-parser&quot;&gt;msgpack parser&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042aa6d6a63ef4409a0e20afcb0ca7083c68c8af" translate="yes" xml:space="preserve">
          <source>Pros:</source>
          <target state="translated">Pros:</target>
        </trans-unit>
        <trans-unit id="b6e6739d6f8413d2b937b7c6bcffa8a5b828a94b" translate="yes" xml:space="preserve">
          <source>Public x509 certificate to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1838a8612adcd89dc351a352a6f7a79b40bb5bd" translate="yes" xml:space="preserve">
          <source>Python: &lt;a href=&quot;https://github.com/miguelgrinberg/python-socketio&quot;&gt;https://github.com/miguelgrinberg/python-socketio&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d18affd993353445f9fd6b21f4eae055d543e2" translate="yes" xml:space="preserve">
          <source>Python: &lt;a href=&quot;https://pypi.org/project/socket.io-emitter/&quot;&gt;https://pypi.org/project/socket.io-emitter/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10101d17e4a125441a219f1c4579d58aff1fa404" translate="yes" xml:space="preserve">
          <source>Query parameters can also be provided, either with the &lt;code&gt;query&lt;/code&gt; option or directly in the url (example: &lt;code&gt;http://localhost/users?token=abc&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f219cc0614ae6860f43a3cd84b5cf31fc312cd9d" translate="yes" xml:space="preserve">
          <source>Reason</source>
          <target state="translated">Reason</target>
        </trans-unit>
        <trans-unit id="9c0f0e45ad41af0f83762db428d7f2094cb72481" translate="yes" xml:space="preserve">
          <source>Reference to the &lt;code&gt;Emitter&lt;/code&gt; constructor.</source>
          <target state="translated">引用 &lt;code&gt;Emitter&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="cf88e2cd029acb7abfd74ce1811ffd868649cbc7" translate="yes" xml:space="preserve">
          <source>Reference to the &lt;code&gt;Manager&lt;/code&gt; constructor.</source>
          <target state="translated">引用 &lt;code&gt;Manager&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="b9402372832f121739c5568cca4d46551123d95c" translate="yes" xml:space="preserve">
          <source>Reference to the &lt;code&gt;Socket&lt;/code&gt; constructor.</source>
          <target state="translated">引用 &lt;code&gt;Socket&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="0ddac2302c291ce81a70b76abf812facf054662d" translate="yes" xml:space="preserve">
          <source>Register a new catch-all listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fc076f0bb5304a7cf54bd9e7b0feddb96b7378" translate="yes" xml:space="preserve">
          <source>Register a new catch-all listener. The listener is added to the beginning of the listeners array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec93eb03c03a3bda7031da35b50afda28bb0e9f" translate="yes" xml:space="preserve">
          <source>Register a new handler for the given event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3753ff11dfb1360cb7bb67db9649773e1801af27" translate="yes" xml:space="preserve">
          <source>Registering a middleware</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908666991862fd2c76ecb1cf6943a3fd898a0ec2" translate="yes" xml:space="preserve">
          <source>Registers a middleware, which is a function that gets executed for every incoming &lt;code&gt;Socket&lt;/code&gt; and receives as parameter the socket and a function to optionally defer execution to the next registered middleware.</source>
          <target state="translated">注册一个中间件，该中间件是为每个传入的 &lt;code&gt;Socket&lt;/code&gt; 执行的函数，并接收该套接字作为参数，以及一个可选地将执行推迟到下一个注册的中间件的函数。</target>
        </trans-unit>
        <trans-unit id="3c725ff2d70cf9d9daf127c332b73eb32e61c728" translate="yes" xml:space="preserve">
          <source>Registers a middleware, which is a function that gets executed for every incoming &lt;code&gt;Socket&lt;/code&gt;, and receives as parameters the socket and a function to optionally defer execution to the next registered middleware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5af7344f50420161f8f096f94794e6fe1580c6" translate="yes" xml:space="preserve">
          <source>Release notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6780c7503406d5c808023f1dbc6dcca47d00fc73" translate="yes" xml:space="preserve">
          <source>Reliability</source>
          <target state="translated">Reliability</target>
        </trans-unit>
        <trans-unit id="415f3fe9b3e1ae09a6720c419221ff2864097a17" translate="yes" xml:space="preserve">
          <source>Removes all catch-all listeners, or the given listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3030e4d64a2df53fac2a8e716ec91aef579414a0" translate="yes" xml:space="preserve">
          <source>Removes all listeners, or those of the specified &lt;em&gt;eventName&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a66e2e0bfd3dc21ef4a116e4aa4433bd4c6e6b" translate="yes" xml:space="preserve">
          <source>Removes the previously registered listener. If no listener is provided, all catch-all listeners are removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a2cb8cbacd901e2872e02918849e8e0bf656fe" translate="yes" xml:space="preserve">
          <source>Removes the socket from &lt;code&gt;room&lt;/code&gt;, and fires optionally a callback &lt;code&gt;fn&lt;/code&gt; with &lt;code&gt;err&lt;/code&gt; signature (if any).</source>
          <target state="translated">从 &lt;code&gt;room&lt;/code&gt; 移除套接字，并可选地触发带有 &lt;code&gt;err&lt;/code&gt; 签名的回调 &lt;code&gt;fn&lt;/code&gt; （如果有）。</target>
        </trans-unit>
        <trans-unit id="64488f3bc22dd8e1e9d397473f782cf0926e37be" translate="yes" xml:space="preserve">
          <source>Removes the socket from the given &lt;code&gt;room&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068fae5510f7a438a3fc8a818a528f11ca4b6a57" translate="yes" xml:space="preserve">
          <source>Removes the specified &lt;em&gt;listener&lt;/em&gt; from the listener array for the event named &lt;em&gt;eventName&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e529d88fc408de8865208e3fb8f6730c150c38" translate="yes" xml:space="preserve">
          <source>Removing debug from your browser bundle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea13acc019a669fdd49713e6c01104648fee04d7" translate="yes" xml:space="preserve">
          <source>Represents a pool of sockets connected under a given scope identified by a pathname (eg: &lt;code&gt;/chat&lt;/code&gt;).</source>
          <target state="translated">表示在给定范围内连接的套接字池，该范围由路径名标识（例如： &lt;code&gt;/chat&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2c20e102a51e4d192df7d557871750a6b3a76aee" translate="yes" xml:space="preserve">
          <source>Restricting yourself to a namespace</source>
          <target state="translated">把自己限制在一个命名空间里</target>
        </trans-unit>
        <trans-unit id="14a5f09769e3a33bdd25fc33f534fafe83cc4635" translate="yes" xml:space="preserve">
          <source>Returns the list of registered catch-all listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a28d6f078fd35a505195a0f8ec6f59e9801d7c2" translate="yes" xml:space="preserve">
          <source>Rooms</source>
          <target state="translated">Rooms</target>
        </trans-unit>
        <trans-unit id="5b1f9f60e4a0f11b376c85007dccf6b23cf7afe5" translate="yes" xml:space="preserve">
          <source>Rust: &lt;a href=&quot;https://github.com/epli2/socketio-rust-emitter&quot;&gt;https://github.com/epli2/socketio-rust-emitter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620126a3074283032d486454ef1e94eb4497fcf1" translate="yes" xml:space="preserve">
          <source>Sample use cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12b92409d476c3473e03ac96a0cb08907b93182" translate="yes" xml:space="preserve">
          <source>Saner default values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac652fcb8001c349270bd6fe9cb500694c658b86" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#new-Manager-url-options&quot;&gt;new Manager(url[, options])&lt;/a&gt; for the list of available &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94289886207d6b58f178fa46d5770243492a56d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#new-Server-httpServer-options&quot;&gt;above&lt;/a&gt; for the list of available &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4412fee753588bb87ac6a7649fca95d09b462b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;migrating-from-2-x-to-3-0#Add-a-clear-distinction-between-the-Manager-query-option-and-the-Socket-query-option&quot;&gt;Migrating from 2.x to 3.0&lt;/a&gt; for more on the difference between the &lt;code&gt;auth&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe95c4fa0a1b3153df03cedd8ee05d5b7c2c173a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Namespace#use&lt;/code&gt; below.</source>
          <target state="translated">请参阅下面的 &lt;code&gt;Namespace#use&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="edfb982037b7cf38a1996e2e202aad6a82af84a7" translate="yes" xml:space="preserve">
          <source>See more at the debug documentation &lt;a href=&quot;https://www.npmjs.org/package/debug&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://www.npmjs.org/package/debug&quot;&gt;此处&lt;/a&gt;查看更多调试文档。</target>
        </trans-unit>
        <trans-unit id="7b699e9248d3a0c488c3571b8fd3fc4e618d74e9" translate="yes" xml:space="preserve">
          <source>Sending and getting data (acknowledgements)</source>
          <target state="translated">发送和获取数据(确认)</target>
        </trans-unit>
        <trans-unit id="dbb4d44399024779a7a8e983d1ecbada4539d611" translate="yes" xml:space="preserve">
          <source>Sending and receiving events</source>
          <target state="translated">发送和接收事件</target>
        </trans-unit>
        <trans-unit id="2b50787548079d4d7d7960927c4abf6a9dbcfb40" translate="yes" xml:space="preserve">
          <source>Sending credentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad12795b6acaf35506cb6e0d65fc3400491ed93c" translate="yes" xml:space="preserve">
          <source>Sending messages from the outside world</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055f022c3910e2c0601f51fc6c1c6f745a06cc53" translate="yes" xml:space="preserve">
          <source>Sending messages from the outside-world</source>
          <target state="translated">从外部世界发送消息</target>
        </trans-unit>
        <trans-unit id="d35d0afbb0b2f3197200fb6adf04214c75c0edb6" translate="yes" xml:space="preserve">
          <source>Sending volatile messages</source>
          <target state="translated">发送不稳定信息</target>
        </trans-unit>
        <trans-unit id="c1c1cdc9ac8065b05b30927f2844795ff4ecf306" translate="yes" xml:space="preserve">
          <source>Sends a &lt;code&gt;message&lt;/code&gt; event. See &lt;a href=&quot;#socketemiteventname-args-ack&quot;&gt;socket.emit(eventName[, &amp;hellip;args][, ack])&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb0cb170d106f8e8d5af1e05bbdbd3a96a7de197" translate="yes" xml:space="preserve">
          <source>Server</source>
          <target state="translated">Server</target>
        </trans-unit>
        <trans-unit id="5a7124eea48a8de00e43fd9bc12a87f6dc2bdd37" translate="yes" xml:space="preserve">
          <source>Server (app.js)</source>
          <target state="translated">服务器(app.js)</target>
        </trans-unit>
        <trans-unit id="4a90ae60cf714fc87e5eb2fe8cf8a05443737743" translate="yes" xml:space="preserve">
          <source>Server API</source>
          <target state="translated">服务器API</target>
        </trans-unit>
        <trans-unit id="fa8f14b99f6fc4c64718f3810d769e79ebe210a8" translate="yes" xml:space="preserve">
          <source>Server Initialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbb02df500c1a44519e8f16a0d7e59aa106a2ad" translate="yes" xml:space="preserve">
          <source>Server Installation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72ee84761e9473dd9f9e572735ae12cb65f44fc" translate="yes" xml:space="preserve">
          <source>Server#adapter(v:Adapter):Server</source>
          <target state="translated">Server#adapter(v:Adapter):Server</target>
        </trans-unit>
        <trans-unit id="5437a9b0e285e9526668b3a4aa779ae052b67f38" translate="yes" xml:space="preserve">
          <source>Server#attach(port:Number, opts:Object):Server</source>
          <target state="translated">Server#attach(port:Number,opts:Object):服务器。</target>
        </trans-unit>
        <trans-unit id="a22e74aa54955dd02c045a0eca6c4fa4edc81167" translate="yes" xml:space="preserve">
          <source>Server#attach(srv:http#Server, opts:Object):Server</source>
          <target state="translated">Server#attach(srv:http#Server,opts:Object):Server</target>
        </trans-unit>
        <trans-unit id="f6ef9ea01904054da577370a52ce3356c3c80d06" translate="yes" xml:space="preserve">
          <source>Server#bind</source>
          <target state="translated">Server#bind</target>
        </trans-unit>
        <trans-unit id="fea9df4727e007b64fd3cadf6375b80e6b22a069" translate="yes" xml:space="preserve">
          <source>Server#bind(srv:engine#Server):Server</source>
          <target state="translated">Server#bind(srv:engine#Server):Server</target>
        </trans-unit>
        <trans-unit id="ba9bbe1322049b7bda25a11452f50c98c34f7a2e" translate="yes" xml:space="preserve">
          <source>Server#emit</source>
          <target state="translated">Server#emit</target>
        </trans-unit>
        <trans-unit id="1841bf53894719e2d1305f0533432f4d4ee7ca53" translate="yes" xml:space="preserve">
          <source>Server#listen</source>
          <target state="translated">Server#listen</target>
        </trans-unit>
        <trans-unit id="fedb9ab8e7081f849661e8798e2f464fccc40d26" translate="yes" xml:space="preserve">
          <source>Server#of</source>
          <target state="translated">Server#of</target>
        </trans-unit>
        <trans-unit id="aed34868ad797ae98e5aed657949b42af6250c97" translate="yes" xml:space="preserve">
          <source>Server#of(nsp:String):Namespace</source>
          <target state="translated">Server#of(nsp:String):Namespace</target>
        </trans-unit>
        <trans-unit id="db6b82616fcff95c7b91db9d11d2f4bdc56c043c" translate="yes" xml:space="preserve">
          <source>Server#onconnection(socket:engine#Socket):Server</source>
          <target state="translated">Server#onconnection(socket:engine#Socket):Server</target>
        </trans-unit>
        <trans-unit id="cfa26542dc1e743aaebbc3bc3de9b63de0471ff5" translate="yes" xml:space="preserve">
          <source>Server#origins(v:String):Server</source>
          <target state="translated">Server#origins(v:String):Server</target>
        </trans-unit>
        <trans-unit id="861945b71026c9816a2905d18f087a444238a6e1" translate="yes" xml:space="preserve">
          <source>Server#path</source>
          <target state="translated">Server#path</target>
        </trans-unit>
        <trans-unit id="ecfdbf93f77852e9dccec24dc2ecb3e26bb59103" translate="yes" xml:space="preserve">
          <source>Server#path(v:String):Server</source>
          <target state="translated">Server#path(v:String):Server</target>
        </trans-unit>
        <trans-unit id="23624f4aac5baf3d42bcfdb05c231686c79d6e8a" translate="yes" xml:space="preserve">
          <source>Server#serveClient(v:Boolean):Server</source>
          <target state="translated">Server#serveClient(v:Boolean):Server</target>
        </trans-unit>
        <trans-unit id="048a6c5a1f1ea7353eeb635cfb2a29f0950c24d7" translate="yes" xml:space="preserve">
          <source>Server#sockets:Namespace</source>
          <target state="translated">Server#sockets:Namespace</target>
        </trans-unit>
        <trans-unit id="304d21c84df0627c5113a03fc73bcc5098de98d0" translate="yes" xml:space="preserve">
          <source>Server#use</source>
          <target state="translated">Server#use</target>
        </trans-unit>
        <trans-unit id="b8210b6062e493364bd86e77ad70e1b70225a17c" translate="yes" xml:space="preserve">
          <source>Server()</source>
          <target state="translated">Server()</target>
        </trans-unit>
        <trans-unit id="673ba961481e4c5254a954d393f7c9ca847a9ce3" translate="yes" xml:space="preserve">
          <source>Server(opts:Object)</source>
          <target state="translated">Server(opts:Object)</target>
        </trans-unit>
        <trans-unit id="fd8ba78bc4bdad4afa475517ea076851bca5b07e" translate="yes" xml:space="preserve">
          <source>Server(port:Number, opts:Object)</source>
          <target state="translated">服务器(port:Number,opts:Object)</target>
        </trans-unit>
        <trans-unit id="14fb4791fde0fba0fdc098de4b42f76a4baf1477" translate="yes" xml:space="preserve">
          <source>Server(srv:http#Server, opts:Object)</source>
          <target state="translated">Server(srv:http#Server,opts:Object)</target>
        </trans-unit>
        <trans-unit id="05a15f6da0686d4c01d6ae46f46a570619db03c8" translate="yes" xml:space="preserve">
          <source>Server:</source>
          <target state="translated">Server:</target>
        </trans-unit>
        <trans-unit id="19c06c47990c8b1068212d64df7ddaca3198dd2a" translate="yes" xml:space="preserve">
          <source>Sets a modifier for a subsequent event emission that the event data may be lost if the client is not ready to receive messages (because of network slowness or other issues, or because they&amp;rsquo;re connected through long polling and is in the middle of a request-response cycle).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39cfd2d52dc692e9da556da9a84d76a62d6b6cb9" translate="yes" xml:space="preserve">
          <source>Sets a modifier for a subsequent event emission that the event data may be lost if the clients are not ready to receive messages (because of network slowness or other issues, or because they&amp;rsquo;re connected through long polling and is in the middle of a request-response cycle).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421a32c508f3e5887724a52bd19c07ffba7a56f1" translate="yes" xml:space="preserve">
          <source>Sets a modifier for a subsequent event emission that the event data will only be &lt;em&gt;broadcast&lt;/em&gt; to every sockets but the sender.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dab002568ff254733797e5997c67bb11af91be5" translate="yes" xml:space="preserve">
          <source>Sets a modifier for a subsequent event emission that the event data will only be &lt;em&gt;broadcast&lt;/em&gt; to the current node (when the &lt;a href=&quot;https://github.com/socketio/socket.io-redis&quot;&gt;Redis adapter&lt;/a&gt; is used).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092380bdddd3d9baf2b6af2346b3b914091a2d07" translate="yes" xml:space="preserve">
          <source>Sets a modifier for a subsequent event emission that the event data will only be &lt;em&gt;compressed&lt;/em&gt; if the value is &lt;code&gt;true&lt;/code&gt;. Defaults to &lt;code&gt;true&lt;/code&gt; when you don&amp;rsquo;t call the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be57af50f64b3bc61e648a7de0408f3ec4337580" translate="yes" xml:space="preserve">
          <source>Sets a modifier for a subsequent event emission that the event will only be &lt;em&gt;broadcasted&lt;/em&gt; to clients that have joined the given &lt;code&gt;room&lt;/code&gt; (the socket itself being excluded).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71c38eabd8cd483ee30f30123b0430e2c955e72f" translate="yes" xml:space="preserve">
          <source>Sets a modifier for a subsequent event emission that the event will only be &lt;em&gt;broadcasted&lt;/em&gt; to clients that have joined the given &lt;code&gt;room&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35d1c56444c91725378ee44d1d892a70cd9e9ba5" translate="yes" xml:space="preserve">
          <source>Sets a modifier for a subsequent event emission that the event will only be &lt;em&gt;broadcasted&lt;/em&gt; to sockets that have joined the given &lt;code&gt;room&lt;/code&gt;.</source>
          <target state="translated">为后续事件发出设置修饰符，该事件只会将事件&lt;em&gt;广播&lt;/em&gt;到已加入给定 &lt;code&gt;room&lt;/code&gt; 套接字。</target>
        </trans-unit>
        <trans-unit id="29ca2181c89d8bf5de71020bde96ff765b948a0b" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;reconectionDelay&lt;/code&gt; option, or returns it if no parameters are passed.</source>
          <target state="translated">设置 &lt;code&gt;reconectionDelay&lt;/code&gt; 选项，如果未传递任何参数，则返回它。</target>
        </trans-unit>
        <trans-unit id="df57b4d9af43b3265cefb619cf7e408fe1245884" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;reconectionDelayMax&lt;/code&gt; option, or returns it if no parameters are passed.</source>
          <target state="translated">设置 &lt;code&gt;reconectionDelayMax&lt;/code&gt; 选项，如果未传递任何参数，则返回它。</target>
        </trans-unit>
        <trans-unit id="811df203431e1a4e7a4dac6c964322d344c012e4" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;reconnection&lt;/code&gt; option, or returns it if no parameters are passed.</source>
          <target state="translated">设置 &lt;code&gt;reconnection&lt;/code&gt; 选项，如果未传递任何参数，则返回该选项。</target>
        </trans-unit>
        <trans-unit id="4e2884e12282256196285a0cbcbb296c8e974216" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;reconnectionAttempts&lt;/code&gt; option, or returns it if no parameters are passed.</source>
          <target state="translated">设置 &lt;code&gt;reconnectionAttempts&lt;/code&gt; 选项，如果未传递任何参数，则返回它。</target>
        </trans-unit>
        <trans-unit id="5ca061ff91362de0ed466ebdcba645f0c396f89d" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;reconnectionDelay&lt;/code&gt; option, or returns it if no parameters are passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de017610e4576879089b9a0c2da73708ad1783be" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;reconnectionDelayMax&lt;/code&gt; option, or returns it if no parameters are passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e27a3f6fcc85d84c852a4d4e9fd612e6ddcc915" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;timeout&lt;/code&gt; option, or returns it if no parameters are passed.</source>
          <target state="translated">设置 &lt;code&gt;timeout&lt;/code&gt; 选项，如果未传递任何参数，则返回该选项。</target>
        </trans-unit>
        <trans-unit id="e8dc15f57459fdf04389535ef6bc2a3e40c51210" translate="yes" xml:space="preserve">
          <source>Sets the adapter &lt;code&gt;v&lt;/code&gt;. Defaults to an instance of the &lt;code&gt;Adapter&lt;/code&gt; that ships with socket.io which is memory based. See &lt;a href=&quot;https://github.com/learnboost/socket.io-adapter&quot;&gt;socket.io-adapter&lt;/a&gt;.</source>
          <target state="translated">设置适配器 &lt;code&gt;v&lt;/code&gt; 。默认为socket.io附带的基于内存的 &lt;code&gt;Adapter&lt;/code&gt; 的实例。参见&lt;a href=&quot;https://github.com/learnboost/socket.io-adapter&quot;&gt;socket.io-adapter&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8de8d5332699233c27f1a79c636ad6109d960e7d" translate="yes" xml:space="preserve">
          <source>Sets the adapter &lt;code&gt;value&lt;/code&gt;. Defaults to an instance of the &lt;code&gt;Adapter&lt;/code&gt; that ships with socket.io which is memory based. See &lt;a href=&quot;https://github.com/socketio/socket.io-adapter&quot;&gt;socket.io-adapter&lt;/a&gt;. If no arguments are supplied this method returns the current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907baaae25eaa4baaa0fd676be92753dbd2956da" translate="yes" xml:space="preserve">
          <source>Sets the allowed origins &lt;code&gt;v&lt;/code&gt;. Defaults to any origins being allowed.</source>
          <target state="translated">设置允许的原点 &lt;code&gt;v&lt;/code&gt; 。默认为任何允许的来源。</target>
        </trans-unit>
        <trans-unit id="80b6159adf3efbe432a01b757362cfa95f0b6365" translate="yes" xml:space="preserve">
          <source>Sets the path &lt;code&gt;v&lt;/code&gt; under which &lt;code&gt;engine.io&lt;/code&gt; and the static files will be served. Defaults to &lt;code&gt;/socket.io&lt;/code&gt;.</source>
          <target state="translated">设置路径 &lt;code&gt;v&lt;/code&gt; ,在该路径下将提供 &lt;code&gt;engine.io&lt;/code&gt; 和静态文件。默认为 &lt;code&gt;/socket.io&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2638a3cd48787a0cdfc7f4bc6dc15e3df09e979" translate="yes" xml:space="preserve">
          <source>Sets the path &lt;code&gt;value&lt;/code&gt; under which &lt;code&gt;engine.io&lt;/code&gt; and the static files will be served. Defaults to &lt;code&gt;/socket.io&lt;/code&gt;. If no arguments are supplied this method returns the current value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3185af18cf5965b9e729ce9b0ae161a1b196eb13" translate="yes" xml:space="preserve">
          <source>Setting resource path</source>
          <target state="translated">设置资源路径</target>
        </trans-unit>
        <trans-unit id="90c93523ff95f6469ea7fab8ffa47ed0ddc9bc0c" translate="yes" xml:space="preserve">
          <source>Shortcuts</source>
          <target state="translated">Shortcuts</target>
        </trans-unit>
        <trans-unit id="339967a7e14192b5fa26c755e8426eef70ff06c1" translate="yes" xml:space="preserve">
          <source>Since Socket.IO v3, a new API inspired from the &lt;a href=&quot;https://github.com/EventEmitter2/EventEmitter2&quot;&gt;EventEmitter2&lt;/a&gt; library allows to declare catch-all listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee162a107054b7eedb66f22a0bb91addb446dfde" translate="yes" xml:space="preserve">
          <source>Since Socket.IO v3, you need to explicitly enable &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;Cross-Origin Resource Sharing&lt;/a&gt; (CORS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe828dc8e603f2ba464c3936cfc7a8ee6fe4483" translate="yes" xml:space="preserve">
          <source>Since Socket.IO v3, you need to explicitly enable &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;Cross-Origin Resource Sharing&lt;/a&gt; (CORS). The documentation can be found &lt;a href=&quot;handling-cors&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b9f09fd5d7fa98cd44ed865e9cb722f96c9036" translate="yes" xml:space="preserve">
          <source>Since the codebase has been rewritten to TypeScript (more information &lt;a href=&quot;#the-socketio-codebase-has-been-rewritten-to-typescript&quot;&gt;here&lt;/a&gt;), &lt;code&gt;@types/socket.io-client&lt;/code&gt; is no longer needed and will actually conflict with the typings coming from the &lt;code&gt;socket.io-client&lt;/code&gt; package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="101989b29cc74b425d2ba30b29eba32386aa1e69" translate="yes" xml:space="preserve">
          <source>So, in the best-case scenario, provided that:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c6a1f183694628e37ced41591147bfc0da1908" translate="yes" xml:space="preserve">
          <source>Socket</source>
          <target state="translated">Socket</target>
        </trans-unit>
        <trans-unit id="29b05a36956f2a3b6d0e21c9c9c9abd0d27ce6a4" translate="yes" xml:space="preserve">
          <source>Socket#client</source>
          <target state="translated">Socket#client</target>
        </trans-unit>
        <trans-unit id="7b12f54fc657612603bfc6b0a2f62b4589c55b89" translate="yes" xml:space="preserve">
          <source>Socket#client:Client</source>
          <target state="translated">Socket#client:Client</target>
        </trans-unit>
        <trans-unit id="fc9618e4ed6fe2b0e323ad4c04f2389a7ddd2ff8" translate="yes" xml:space="preserve">
          <source>Socket#conn</source>
          <target state="translated">Socket#conn</target>
        </trans-unit>
        <trans-unit id="42579abc67acc6c29c99f06215995d069df1e9e2" translate="yes" xml:space="preserve">
          <source>Socket#conn:Socket</source>
          <target state="translated">Socket#conn:Socket</target>
        </trans-unit>
        <trans-unit id="aeeeb4b8d8468c9b9c6bb3edc8e028511a913e15" translate="yes" xml:space="preserve">
          <source>Socket#connected</source>
          <target state="translated">Socket#connected</target>
        </trans-unit>
        <trans-unit id="cd765362f0e76329a5d64b162caa16c540029b2a" translate="yes" xml:space="preserve">
          <source>Socket#emit</source>
          <target state="translated">Socket#emit</target>
        </trans-unit>
        <trans-unit id="d809a0f082cafab8b953bd2486bdaf37812caf24" translate="yes" xml:space="preserve">
          <source>Socket#emit(name:String[, &amp;hellip;]):Socket</source>
          <target state="translated">Socket＃emit（name：String [，&amp;hellip;]）：Socket</target>
        </trans-unit>
        <trans-unit id="8b406db89b5d924b4824ab7b746dd3f2481a931f" translate="yes" xml:space="preserve">
          <source>Socket#handshake</source>
          <target state="translated">Socket#handshake</target>
        </trans-unit>
        <trans-unit id="54b9334ce102b5429c62cfc7e7d56ba9c5b9066f" translate="yes" xml:space="preserve">
          <source>Socket#id</source>
          <target state="translated">Socket#id</target>
        </trans-unit>
        <trans-unit id="35f106ab97dca57f2a116d27f4d8646b1fb29e2f" translate="yes" xml:space="preserve">
          <source>Socket#id:String</source>
          <target state="translated">Socket#id:String</target>
        </trans-unit>
        <trans-unit id="3e67950b041b2d4c5bbf538fbdbad3ce34a996d0" translate="yes" xml:space="preserve">
          <source>Socket#in</source>
          <target state="translated">Socket#in</target>
        </trans-unit>
        <trans-unit id="2f5a5bafc90ccdc7872d33a8d4daa66e476967fb" translate="yes" xml:space="preserve">
          <source>Socket#in(room:String):Socket</source>
          <target state="translated">Socket#in(room:String):Socket</target>
        </trans-unit>
        <trans-unit id="ea51e55d6fd6738dd408005d0595c6ccee1d8386" translate="yes" xml:space="preserve">
          <source>Socket#join</source>
          <target state="translated">Socket#join</target>
        </trans-unit>
        <trans-unit id="c958a6c6b253b77ca46ca0c0e81e5bde7f4ead2e" translate="yes" xml:space="preserve">
          <source>Socket#join(name:String[, fn:Function]):Socket</source>
          <target state="translated">Socket#join(name:String[,fn:Function]):Socket。</target>
        </trans-unit>
        <trans-unit id="38acda990906df2fe8983c842108c2a3eada30b5" translate="yes" xml:space="preserve">
          <source>Socket#leave</source>
          <target state="translated">Socket#leave</target>
        </trans-unit>
        <trans-unit id="8ef62bc06eb9d6e9b5a0bec72cf9d953dfcb8b8d" translate="yes" xml:space="preserve">
          <source>Socket#leave(name:String[, fn:Function]):Socket</source>
          <target state="translated">Socket#leave(name:String[,fn:Function]):Socket。</target>
        </trans-unit>
        <trans-unit id="57eab55314a394fc3eab6bf92d7500f13084bc83" translate="yes" xml:space="preserve">
          <source>Socket#request</source>
          <target state="translated">Socket#request</target>
        </trans-unit>
        <trans-unit id="b435e2f51680ad0d8bfa48a0ff300d9a39612eb9" translate="yes" xml:space="preserve">
          <source>Socket#request:Request</source>
          <target state="translated">Socket#request:Request</target>
        </trans-unit>
        <trans-unit id="dd4daa4d16dead4ec219b9e02a9d61cc611de7ec" translate="yes" xml:space="preserve">
          <source>Socket#rooms</source>
          <target state="translated">Socket#rooms</target>
        </trans-unit>
        <trans-unit id="f3199ae27bdf1960ba4694d00425635fb81282de" translate="yes" xml:space="preserve">
          <source>Socket#rooms:Array</source>
          <target state="translated">Socket#rooms:Array</target>
        </trans-unit>
        <trans-unit id="8c12fad4b2ee8def1a21776f936001cb286b4a91" translate="yes" xml:space="preserve">
          <source>Socket#to</source>
          <target state="translated">Socket#to</target>
        </trans-unit>
        <trans-unit id="199638421d4f50e06dbd51f9f533c9bc3ce75d68" translate="yes" xml:space="preserve">
          <source>Socket#to(room:String):Socket</source>
          <target state="translated">Socket#to(room:String):Socket</target>
        </trans-unit>
        <trans-unit id="c0a9e6bda3ac8eb4aabd920d3a5e58092c2757c4" translate="yes" xml:space="preserve">
          <source>Socket.IO</source>
          <target state="translated">Socket.IO</target>
        </trans-unit>
        <trans-unit id="c264880fe30445838423bbc7b85e1381e6a5b70a" translate="yes" xml:space="preserve">
          <source>Socket.IO allows you to &amp;ldquo;namespace&amp;rdquo; your sockets, which essentially means assigning different &lt;em&gt;endpoints&lt;/em&gt; or &lt;em&gt;paths&lt;/em&gt;.</source>
          <target state="translated">Socket.IO允许您&amp;ldquo;命名&amp;rdquo;套接字，这实际上意味着分配不同的&lt;em&gt;端点&lt;/em&gt;或&lt;em&gt;路径&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bb646648addbfdca4c92cc9ffc3ebdc20bf81b31" translate="yes" xml:space="preserve">
          <source>Socket.IO allows you to emit and receive custom events. Besides &lt;code&gt;connect&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt; and &lt;code&gt;disconnect&lt;/code&gt;, you can emit custom events:</source>
          <target state="translated">Socket.IO允许您发射和接收自定义事件。除了 &lt;code&gt;connect&lt;/code&gt; ， &lt;code&gt;message&lt;/code&gt; 和 &lt;code&gt;disconnect&lt;/code&gt; ，您还可以发出自定义事件：</target>
        </trans-unit>
        <trans-unit id="d85e2dd56c5deaff2affe1b4b28954602ad18428" translate="yes" xml:space="preserve">
          <source>Socket.IO does support IE9 and above. IE 6/7/8 are not supported anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9797757baea1e944e21a9bedd7318cbdc4d5c2f3" translate="yes" xml:space="preserve">
          <source>Socket.IO has now first-class support for TypeScript:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc22a5cc8f5af57a45fdcde63a07d3b019b891b" translate="yes" xml:space="preserve">
          <source>Socket.IO is &lt;strong&gt;NOT&lt;/strong&gt; a WebSocket implementation. Although Socket.IO indeed uses WebSocket as a transport when possible, it adds additional metadata to each packet. That is why a WebSocket client will not be able to successfully connect to a Socket.IO server, and a Socket.IO client will not be able to connect to a plain WebSocket server either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266d80c6f249bff229a3b3b9848afbcf3b6f5ef2" translate="yes" xml:space="preserve">
          <source>Socket.IO is a library that enables real-time, bidirectional and event-based communication between the browser and the server. It consists of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6948651a586c8c0c94891f62a42a1cb9a61d46" translate="yes" xml:space="preserve">
          <source>Socket.IO is also available from other CDN:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8269776b84ea2c4c4a187eedd36a4addb338019f" translate="yes" xml:space="preserve">
          <source>Socket.IO is now completely instrumented by a minimalistic yet tremendously powerful utility called &lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;debug&lt;/a&gt; by TJ Holowaychuk.</source>
          <target state="translated">Socket.IO现在完全由TJ Holowaychuk 的一个名为&lt;a href=&quot;https://github.com/visionmedia/debug&quot;&gt;debug&lt;/a&gt;的极简实用工具来完成。</target>
        </trans-unit>
        <trans-unit id="20c6e3e2d110e662aa9e2bd962066dfc17d51eec" translate="yes" xml:space="preserve">
          <source>Socket.IO makes it easy to send events to all the connected clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2936b36f7be6af3183bd2c577aa7a8be44b6c563" translate="yes" xml:space="preserve">
          <source>Socket.IO protocol v5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4653f5e8943647bea2d0766b3098fb1102b89894" translate="yes" xml:space="preserve">
          <source>Socket.IO provides additional features over a plain WebSocket object, which are listed &lt;a href=&quot;#Features&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d46d2551c4196cd2e160ea1571fcfa5b3914e7c" translate="yes" xml:space="preserve">
          <source>Socket.binary() is removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc60fe4b6c769a0681128caa799d2e077f275dd" translate="yes" xml:space="preserve">
          <source>Socket.io protocol revision number this client works with.</source>
          <target state="translated">该客户端工作的Socket.io协议修订号。</target>
        </trans-unit>
        <trans-unit id="7de494d6c74a6e7577a89b88e7f5ed335e576252" translate="yes" xml:space="preserve">
          <source>Socket.io uses middleware now</source>
          <target state="translated">Socket.io使用中间件了</target>
        </trans-unit>
        <trans-unit id="89a1269ed25aae971cad501871d897fc55f3f005" translate="yes" xml:space="preserve">
          <source>Socket.join() and Socket.leave() are now synchronous</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d52a15f43b36fb5edf5b596396c1dfbf2e32da7" translate="yes" xml:space="preserve">
          <source>Socket.rooms is now a Set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e69c09dda7c41dc591ae254f44da96684d94e27" translate="yes" xml:space="preserve">
          <source>Socket.use() is removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7048cbb16ecec2ee764ac7397d2196871b456d" translate="yes" xml:space="preserve">
          <source>Some of those new features may be backported to the &lt;code&gt;2.4.x&lt;/code&gt; branch, depending on the feedback of the users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1319042c21018d0befa771eafaccad63bd240222" translate="yes" xml:space="preserve">
          <source>Sometimes certain messages can be dropped. Let&amp;rsquo;s say you have an app that shows realtime tweets for the keyword &lt;code&gt;bieber&lt;/code&gt;.</source>
          <target state="translated">有时可能会丢弃某些消息。假设您有一个应用程序可以显示关键字 &lt;code&gt;bieber&lt;/code&gt; 的实时推文。</target>
        </trans-unit>
        <trans-unit id="2ea5c9f62c53f1da211f3efc0dfef0758e4961ba" translate="yes" xml:space="preserve">
          <source>Sometimes, you might want to get a callback when the client confirmed the message reception.</source>
          <target state="translated">有时,你可能想在客户端确认消息接收时得到一个回调。</target>
        </trans-unit>
        <trans-unit id="1d10323c27ec5f9982ad73377fd582ff949840f8" translate="yes" xml:space="preserve">
          <source>Standalone</source>
          <target state="translated">Standalone</target>
        </trans-unit>
        <trans-unit id="b110924c1a90d7ef4c1a2da117d5aff898fa4a02" translate="yes" xml:space="preserve">
          <source>Standalone build</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317d49bb0215c341c0bb18c9da4c9a7908ce3acf" translate="yes" xml:space="preserve">
          <source>Starting the server</source>
          <target state="translated">启动服务器</target>
        </trans-unit>
        <trans-unit id="8feb69644f22f358eab454bbd194704d1f6a0de0" translate="yes" xml:space="preserve">
          <source>Sticky load balancing</source>
          <target state="translated">粘性负载平衡</target>
        </trans-unit>
        <trans-unit id="41ce27b16d5f2b075b0c679fec352fde32288ec1" translate="yes" xml:space="preserve">
          <source>Support for IE8 and Node.js 8 is officially dropped</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a86c85db3f8fad676674f5b0765088ac0f699f9" translate="yes" xml:space="preserve">
          <source>Swift: &lt;a href=&quot;https://github.com/socketio/socket.io-client-swift&quot;&gt;https://github.com/socketio/socket.io-client-swift&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4be9ece3b2bcfaa1c251760a7ea06921db2d7d4" translate="yes" xml:space="preserve">
          <source>Synonym of &lt;a href=&quot;#Event-%E2%80%98connect%E2%80%99&quot;&gt;Event: &amp;lsquo;connect&amp;rsquo;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8f1d72ba66c75c0cac0f9de340488a4aec1fbd" translate="yes" xml:space="preserve">
          <source>Synonym of &lt;a href=&quot;#manageropencallback&quot;&gt;manager.open([callback])&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73bf12af1fbedc75c8d34a376c7e93467b433e66" translate="yes" xml:space="preserve">
          <source>Synonym of &lt;a href=&quot;#namespace-to-room&quot;&gt;namespace.to(room)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6416da6d0ada89a12bf43a8e17aec728b59ad6f6" translate="yes" xml:space="preserve">
          <source>Synonym of &lt;a href=&quot;#server-attach-httpServer-options&quot;&gt;server.attach(httpServer[, options])&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c33720f8cee08f98eb4e4900ed8cb8596af932" translate="yes" xml:space="preserve">
          <source>Synonym of &lt;a href=&quot;#server-attach-port-options&quot;&gt;server.attach(port[, options])&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcec6118ab88437c39870953b066729bcbc07e6" translate="yes" xml:space="preserve">
          <source>Synonym of &lt;a href=&quot;#socket-to-room&quot;&gt;socket.to(room)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3a93ed78f44b4d33be4bf02507ddd81b250ddb" translate="yes" xml:space="preserve">
          <source>Synonym of &lt;a href=&quot;#socketclose&quot;&gt;socket.close()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f71a251e59c7195d5e75daa000861717f43d49" translate="yes" xml:space="preserve">
          <source>Synonym of &lt;a href=&quot;#socketopen&quot;&gt;socket.open()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8bbfc420db8327a654a728aa697c463e704b332" translate="yes" xml:space="preserve">
          <source>Synonym of &lt;code&gt;Server#attach&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Server#attach&lt;/code&gt; 的同义词。</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="50f9d855f815baf06562fb2e46c2e97d762a34af" translate="yes" xml:space="preserve">
          <source>That behaviour can be disabled with the &lt;code&gt;forceNew&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210b603199bce487ec439111c0eae3858efd8810" translate="yes" xml:space="preserve">
          <source>That functionality is achieved with timers set on both the server and the client, with timeout values (the pingInterval and pingTimeout parameters) shared during the connection handshake. Those timers require any subsequent client calls to be directed to the same server, hence the sticky-session requirement when using multiples nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24248d0de7a4c0f94d8e8dc87185bd9a0277686" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why the &lt;code&gt;query&lt;/code&gt; option of the Socket instance is renamed to ̀&lt;code&gt;auth&lt;/code&gt; in Socket.IO v3:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32054eaa71437ac7b0c55702aade7772418e04a4" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s why, as of Socket.IO v3:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7dc0e02df5465b5d846493ed3deaf76d8c2f6e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.npmjs.com/package/debug&quot;&gt;debug&lt;/a&gt; package allows to print debug information to the console. You can find more information &lt;a href=&quot;logging-and-debugging&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b12eed28e95ed3c70658c62c172f7869a57c49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Adapter&lt;/code&gt; used for the namespace. Useful when using the &lt;code&gt;Adapter&lt;/code&gt; based on &lt;a href=&quot;https://github.com/socketio/socket.io-redis&quot;&gt;Redis&lt;/a&gt;, as it exposes methods to manage sockets and rooms across your cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="892bdad12a8b152cf82f4c730410e0744f5c312c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Client&lt;/code&gt; class represents an incoming transport (engine.io) connection. A &lt;code&gt;Client&lt;/code&gt; can be associated with many multiplexed &lt;code&gt;Socket&lt;/code&gt; that belong to different &lt;code&gt;Namespace&lt;/code&gt;s.</source>
          <target state="translated">所述 &lt;code&gt;Client&lt;/code&gt; 类表示输入的传输（engine.io）连接。一个 &lt;code&gt;Client&lt;/code&gt; 可以与属于不同 &lt;code&gt;Namespace&lt;/code&gt; 的许多复用 &lt;code&gt;Socket&lt;/code&gt; 关联。</target>
        </trans-unit>
        <trans-unit id="3304940403ece6bebb6857ffde895b33f7b10e39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Client&lt;/code&gt; class represents an incoming transport (engine.io) connection. A &lt;code&gt;Client&lt;/code&gt; can be associated with many multiplexed &lt;code&gt;Socket&lt;/code&gt;s that belong to different &lt;code&gt;Namespace&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed4f1659b96d63336483743fc454b6f4004c68f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Manager&lt;/code&gt; handles the reconnection logic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ff6aa5d0ed64dcaf5fd06ebdfe68711f7f8116" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Manager&lt;/code&gt;&lt;em&gt;manages&lt;/em&gt; the Engine.IO &lt;a href=&quot;https://github.com/socketio/engine.io-client/&quot;&gt;client&lt;/a&gt; instance, which is the low-level engine that establishes the connection to the server (by using transports like WebSocket or HTTP long-polling).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb9da06e418b51eec412c193b2b1f49e101bd53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Socket&lt;/code&gt; class inherits from &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt;. The &lt;code&gt;Socket&lt;/code&gt; class overrides the &lt;code&gt;emit&lt;/code&gt; method, and does not modify any other &lt;code&gt;EventEmitter&lt;/code&gt; method. All methods documented here which also appear as &lt;code&gt;EventEmitter&lt;/code&gt; methods (apart from &lt;code&gt;emit&lt;/code&gt;) are implemented by &lt;code&gt;EventEmitter&lt;/code&gt;, and documentation for &lt;code&gt;EventEmitter&lt;/code&gt; applies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1780ecfbf4b61b3e74a6cf63af676c1d9121ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ack&lt;/code&gt; argument is optional and will be called with the client&amp;rsquo;s answer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e7064ff85c37d104824ace07dcf34fd7598cef1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ack&lt;/code&gt; argument is optional and will be called with the server answer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8d8fe62f9a9cdbcf6a29a15095446f760a99b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;binary&lt;/code&gt; method could be used to indicate that a given event did not contain any binary data (in order to skip the lookup done by the library and improve performance in certain conditions).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d852ef72b22d47f91896b6bda2c9e6dd539c99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; argument is optional and will be called once the attempt fails/succeeds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ea71128c99870775f829305ab43170dec1bcc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;connected&lt;/code&gt; object (used to store all the Socket connected to the given Namespace) could be used to retrieve a Socket object from its id. It is now an ES6 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;Map&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f579c7e4699bd0121ce04ac53a8f0df409ba315" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error&lt;/code&gt; event is renamed to &lt;code&gt;connect_error&lt;/code&gt; and the object emitted is now an actual Error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85c4c9a29e9db4127b0aeb1ac57bc2dc78e0aa9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opts&lt;/code&gt; are also passed to &lt;code&gt;engine.io&lt;/code&gt; upon initialization of the underlying &lt;code&gt;Socket&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;opts&lt;/code&gt; 也被送到 &lt;code&gt;engine.io&lt;/code&gt; 于底层的初始化 &lt;code&gt;Socket&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1dc21497399828b1f484bf9256a120cdaceffa31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pingTimeout&lt;/code&gt; and &lt;code&gt;pingInterval&lt;/code&gt; parameters will impact the delay before a client knows the server is not available anymore. For example, if the underlying TCP connection is not closed properly due to a network issue, a client may have to wait up to &lt;code&gt;pingTimeout + pingInterval&lt;/code&gt; ms before getting a &lt;code&gt;disconnect&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878dadf19abe2ac8c6059c5f0b0c8d6642ea1f0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rooms&lt;/code&gt; property contains the list of rooms the Socket is currently in. It was an object, it is now an ES6 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;Set&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b30db0d08c313ae5b7666e9372587a61f41e79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;socket&lt;/code&gt; object on both sides extends the EventEmitter class, so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11225a3614c22af2a63043e73113fc68d2a13ab5" translate="yes" xml:space="preserve">
          <source>The API on the server-side is similar, you also get an &lt;code&gt;socket&lt;/code&gt; object which extends the Node.js &lt;a href=&quot;https://nodejs.org/docs/latest/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt; class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="638cce0ea3f8b88cbd59df3e3e5ed4b0c689426f" translate="yes" xml:space="preserve">
          <source>The ECMAScript modules syntax is now similar to the Typescript one (see &lt;a href=&quot;#The-Socket-IO-codebase-has-been-rewritten-to-TypeScript&quot;&gt;below&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30696604f10846ecd3f4284a9cda431545b5356e" translate="yes" xml:space="preserve">
          <source>The Redis adapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a4b9de714d670e394eea7edd7c2160424c172a" translate="yes" xml:space="preserve">
          <source>The Socket instance (client-side)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e19a58393a57df0c7e1ab9f9248c95aec67c1bf" translate="yes" xml:space="preserve">
          <source>The Socket instance (server-side)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffc9f59933b6a5798fc3299512c5bc5c73cbfcc" translate="yes" xml:space="preserve">
          <source>The Socket instance has a few attributes that may be of use in your application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b73b67c7cea6ded150e217560805028bbf4bf38" translate="yes" xml:space="preserve">
          <source>The Socket instance will no longer forward the events emitted by its Manager</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef4526edecbf66e373ca5c30e63c7c49137d94e" translate="yes" xml:space="preserve">
          <source>The Socket.IO API is inspired from the Node.js &lt;a href=&quot;https://nodejs.org/docs/latest/api/events.html#events_events&quot;&gt;EventEmitter&lt;/a&gt;, which means you can emit events on one side and register listeners on the other:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd6e391518ff13518aa491268be76ea71ae80dd6" translate="yes" xml:space="preserve">
          <source>The Socket.IO client is compatible with bundlers like &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; or &lt;a href=&quot;http://browserify.org/&quot;&gt;browserify&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ca420a5dfb54032c5e89f9ccf06a86496d563e" translate="yes" xml:space="preserve">
          <source>The Socket.IO codebase has been rewritten to TypeScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971c9ae2da11903326bb2a9562d0fa62bc015746" translate="yes" xml:space="preserve">
          <source>The asynchronicity was needed for the first versions of the Redis adapter, but this is not the case anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce37c8bfbcd3e464820377224b98de5759e6ea5" translate="yes" xml:space="preserve">
          <source>The basic idea is that each module used by Socket.IO provides different debugging scopes that give you insight into the internals. By default, all output is suppressed, and you can opt into seeing messages by supplying the &lt;code&gt;DEBUG&lt;/code&gt; env variable (Node.JS) or the &lt;code&gt;localStorage.debug&lt;/code&gt; property (Browsers).</source>
          <target state="translated">基本思想是Socket.IO使用的每个模块都提供了不同的调试范围，使您可以深入了解内部。默认情况下，所有输出都被禁止，并且您可以通过提供 &lt;code&gt;DEBUG&lt;/code&gt; env变量（Node.JS）或 &lt;code&gt;localStorage.debug&lt;/code&gt; 属性（浏览器）来选择查看消息。</target>
        </trans-unit>
        <trans-unit id="ecaa507e258342244ed0b78d4a6c4627ce09e7bf" translate="yes" xml:space="preserve">
          <source>The best way to see what information is available is to use the &lt;code&gt;*&lt;/code&gt;:</source>
          <target state="translated">查看可用信息的最佳方法是使用 &lt;code&gt;*&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9a13a6eb5a63fb04c57f850b580010066e23c1cf" translate="yes" xml:space="preserve">
          <source>The client can also be run from Node.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66b240f0c71e8276c42c61c777d71ffa2d68367" translate="yes" xml:space="preserve">
          <source>The client can send credentials with the &lt;code&gt;auth&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab3f86647e8e5c7091153b16d0efbae43ef82be" translate="yes" xml:space="preserve">
          <source>The client did not respond in the &lt;code&gt;pingTimeout&lt;/code&gt; range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2baa76483b7141cb4bca60399941d610427a2a1a" translate="yes" xml:space="preserve">
          <source>The client has manually disconnected the socket using &lt;a href=&quot;client-api#socket-disconnect&quot;&gt;socket.disconnect()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564916a3ecbfa424d651d28e9f6fc45dfb302b57" translate="yes" xml:space="preserve">
          <source>The client will try to establish a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSocket&quot;&gt;WebSocket&lt;/a&gt; connection if possible, and will fall back on HTTP long polling if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5429877f42313f68246b609ecfd3458d558232" translate="yes" xml:space="preserve">
          <source>The complete list of options can be found &lt;a href=&quot;https://github.com/expressjs/cors#configuration-options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc2d1b170cd89388662000250a4e76d363be0d0" translate="yes" xml:space="preserve">
          <source>The complete list of options can be found &lt;a href=&quot;server-api#new-Server-httpServer-options&quot;&gt;here&lt;/a&gt;. Here are those which you will most likely use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b34a3cbe9829c630e5290ceb6fd4e30d4ff5eb" translate="yes" xml:space="preserve">
          <source>The connection has encountered an error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e28568ef45280a4bbdc7b6aa1dc3336bfd970d5" translate="yes" xml:space="preserve">
          <source>The connection has encountered an error (example: the server was killed during a HTTP long-polling cycle)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41233b4ad21edbae0f8de282cf244b0701e24f8" translate="yes" xml:space="preserve">
          <source>The connection was closed (example: the user has lost connection, or the network was changed from WiFi to 4G)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e253916f8f2529e87a3c0081a610fd31101bc46f" translate="yes" xml:space="preserve">
          <source>The default (&lt;code&gt;/&lt;/code&gt;) namespace.</source>
          <target state="translated">默认（ &lt;code&gt;/&lt;/code&gt; ）命名空间。</target>
        </trans-unit>
        <trans-unit id="406d827d379dd0d109846b070170bd9367fef756" translate="yes" xml:space="preserve">
          <source>The default &lt;a href=&quot;https://github.com/socketio/socket.io-parser&quot;&gt;parser&lt;/a&gt; promotes compatibility (support for &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;File&lt;/code&gt;, binary check) at the expense of performance. A custom parser can be provided to match the needs of your application. Please see the example &lt;a href=&quot;https://github.com/socketio/socket.io/tree/master/examples/custom-parsers&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c917648f1e8bcfae586d592996cae3244b2b03" translate="yes" xml:space="preserve">
          <source>The events above are also emitted on the individual sockets that reconnect that depend on this &lt;code&gt;Manager&lt;/code&gt;.</source>
          <target state="translated">上面的事件也会在依赖于此 &lt;code&gt;Manager&lt;/code&gt; 的重新连接的各个套接字上发出。</target>
        </trans-unit>
        <trans-unit id="6a998c2bcb5d0e8fb5e9cb3f3e28e0ce73eb68bb" translate="yes" xml:space="preserve">
          <source>The following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab6a9f1a0bbaef19cacfbc5c31136467bf2e22d" translate="yes" xml:space="preserve">
          <source>The following options are supported:</source>
          <target state="translated">支持以下选项:</target>
        </trans-unit>
        <trans-unit id="b89c6fd271e351f99ecefbd3e35add14292a7665" translate="yes" xml:space="preserve">
          <source>The function is called with a node request object (&lt;code&gt;http.IncomingMessage&lt;/code&gt;) as first parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b26dd4a30b732322efca09acf603e583856d88" translate="yes" xml:space="preserve">
          <source>The handshake details:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b28139d9fd4b8909c8cde4b09880d9f8339393e" translate="yes" xml:space="preserve">
          <source>The interface in charge of routing messages is what we call the &lt;a href=&quot;https://socket.io/docs/v3/glossary/#Adapter&quot;&gt;Adapter&lt;/a&gt;. You can implement your own on top of the &lt;a href=&quot;https://github.com/socketio/socket.io-adapter&quot;&gt;socket.io-adapter&lt;/a&gt; (by inheriting from it) or you can use the one we provide on top of &lt;a href=&quot;https://redis.io/&quot;&gt;Redis&lt;/a&gt;: &lt;a href=&quot;https://github.com/socketio/socket.io-redis&quot;&gt;socket.io-redis&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfa86a540b5250017e21775e403c48165321c8c" translate="yes" xml:space="preserve">
          <source>The interface in charge of routing messages is what we call the &lt;code&gt;Adapter&lt;/code&gt;. You can implement your own on top of the &lt;a href=&quot;https://github.com/automattic/socket.io-adapter&quot;&gt;socket.io-adapter&lt;/a&gt; (by inheriting from it) or you can use the one we provide on top of &lt;a href=&quot;http://redis.io&quot;&gt;Redis&lt;/a&gt;: &lt;a href=&quot;https://github.com/automattic/socket.io-redis&quot;&gt;socket.io-redis&lt;/a&gt;:</source>
          <target state="translated">负责路由消息的接口就是我们所说的 &lt;code&gt;Adapter&lt;/code&gt; 。您可以在&lt;a href=&quot;https://github.com/automattic/socket.io-adapter&quot;&gt;socket.io-adapter&lt;/a&gt;之上实现自己的继承（通过继承），也可以使用我们在&lt;a href=&quot;http://redis.io&quot;&gt;Redis&lt;/a&gt;之上提供的实现：&lt;a href=&quot;https://github.com/automattic/socket.io-redis&quot;&gt;socket.io-redis&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="3515815f0b984d524d5a82ba9f950bebeb473a9a" translate="yes" xml:space="preserve">
          <source>The latest Socket.IO release is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24317827d7ed8454d41a31e5b87a224399a9ef74" translate="yes" xml:space="preserve">
          <source>The mechanics of joining rooms are handled by the &lt;code&gt;Adapter&lt;/code&gt; that has been configured (see &lt;code&gt;Server#adapter&lt;/code&gt; above), defaulting to &lt;a href=&quot;https://github.com/socket.io/socket.io-adapter&quot;&gt;socket.io-adapter&lt;/a&gt;.</source>
          <target state="translated">加入房间的机制由已配置的 &lt;code&gt;Adapter&lt;/code&gt; 处理（请参阅上面的 &lt;code&gt;Server#adapter&lt;/code&gt; ），默认为&lt;a href=&quot;https://github.com/socket.io/socket.io-adapter&quot;&gt;socket.io-adapter&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0ca49e96d6f700c6e842253f3b3bca449ad44a31" translate="yes" xml:space="preserve">
          <source>The mechanics of joining rooms are handled by the &lt;code&gt;Adapter&lt;/code&gt; that has been configured (see &lt;code&gt;Server#adapter&lt;/code&gt; above), defaulting to &lt;a href=&quot;https://github.com/socketio/socket.io-adapter&quot;&gt;socket.io-adapter&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdb2ebbd7d8ad3faa9d7768e9755b448be2a9fc8" translate="yes" xml:space="preserve">
          <source>The mechanics of leaving rooms are handled by the &lt;code&gt;Adapter&lt;/code&gt; that has been configured (see &lt;code&gt;Server#adapter&lt;/code&gt; above), defaulting to &lt;a href=&quot;https://github.com/socket.io/socket.io-adapter&quot;&gt;socket.io-adapter&lt;/a&gt;.</source>
          <target state="translated">离开房间的机制由已配置的 &lt;code&gt;Adapter&lt;/code&gt; 处理（请参阅上面的 &lt;code&gt;Server#adapter&lt;/code&gt; ），默认为&lt;a href=&quot;https://github.com/socket.io/socket.io-adapter&quot;&gt;socket.io-adapter&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b66c4c2972b96fe07af9df24df172fcd91b52419" translate="yes" xml:space="preserve">
          <source>The middleware functions that end the request-response cycle and do not call &lt;code&gt;next()&lt;/code&gt; will not work though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06706459ac934acc85cb835012cb79557fc8a914" translate="yes" xml:space="preserve">
          <source>The namespace identifier property.</source>
          <target state="translated">命名空间标识符属性。</target>
        </trans-unit>
        <trans-unit id="a82b05240fc4eb27b1852ecd7a1da05a8f39092b" translate="yes" xml:space="preserve">
          <source>The old &lt;code&gt;io.set()&lt;/code&gt; and &lt;code&gt;io.get()&lt;/code&gt; methods are deprecated and only supported for backwards compatibility. Here is a translation of an old authorization example into middleware-style.</source>
          <target state="translated">不推荐使用旧的 &lt;code&gt;io.set()&lt;/code&gt; 和 &lt;code&gt;io.get()&lt;/code&gt; 方法，仅支持向后兼容。这是将旧的授权示例转换为中间件样式的翻译。</target>
        </trans-unit>
        <trans-unit id="8aa63c4637a5cf6f1a287cd200f1f07bf24607e0" translate="yes" xml:space="preserve">
          <source>The order of the &lt;code&gt;transports&lt;/code&gt; array is important. By default, a long-polling connection is established first, and then upgraded to WebSocket if possible. Using &lt;code&gt;['websocket']&lt;/code&gt; means there will be no fallback if a WebSocket connection cannot be opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab98f599d9726e4a5df4b23b6dd4f8494e9b0602" translate="yes" xml:space="preserve">
          <source>The previous &lt;code&gt;resource&lt;/code&gt; option is equivalent to the new &lt;code&gt;path&lt;/code&gt; option, but needs a &lt;code&gt;/&lt;/code&gt; in the beginning. For example, the following configuration</source>
          <target state="translated">先前的 &lt;code&gt;resource&lt;/code&gt; 选项与新的 &lt;code&gt;path&lt;/code&gt; 选项等效，但是在开头需要一个 &lt;code&gt;/&lt;/code&gt; 。例如，以下配置</target>
        </trans-unit>
        <trans-unit id="6ff354ba9294662c2fc196744f3624aa4e6b4065" translate="yes" xml:space="preserve">
          <source>The protocol defines the format of the packets exchanged between the client and the server. Both the client and the server must use the same revision in order to understand each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a1bfc892e524686923e6e31945f7f4f35cf1e1" translate="yes" xml:space="preserve">
          <source>The protocol revision number (currently: 4).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43da4c7c081c64041b0409bd37c78249b5709843" translate="yes" xml:space="preserve">
          <source>The query content can also be updated on reconnection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b9344b1a52fe38911f45cdb4cf0aea9ffa2552" translate="yes" xml:space="preserve">
          <source>The release notes of each version can be found in &lt;a href=&quot;https://github.com/socketio/socket.io-client/releases&quot;&gt;GitHub&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64792ad5a74824ee71e632ab9669442b8e806665" translate="yes" xml:space="preserve">
          <source>The request URLs will look like: &lt;code&gt;localhost/myownpath/?EIO=3&amp;amp;transport=polling&amp;amp;sid=&amp;lt;id&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc083a99f0d8a7ca98bc9055f80beb3559f2c8a" translate="yes" xml:space="preserve">
          <source>The request URLs will look like: &lt;code&gt;localhost/mypath/?EIO=3&amp;amp;transport=polling&amp;amp;sid=&amp;lt;id&amp;gt;&lt;/code&gt; (the namespace is sent as part of the payload).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be088aa822aa43675dc853914b2023eb32b5bdf0" translate="yes" xml:space="preserve">
          <source>The rest of the options are passed to the &lt;code&gt;Manager&lt;/code&gt; constructor (see below for details).</source>
          <target state="translated">其余选项将传递给 &lt;code&gt;Manager&lt;/code&gt; 构造函数（有关详细信息，请参见下文）。</target>
        </trans-unit>
        <trans-unit id="b7bb06757841fb6cfb28088ba294433e9b47c7a9" translate="yes" xml:space="preserve">
          <source>The same options passed to socket.io are always passed to the &lt;code&gt;engine.io&lt;/code&gt;&lt;code&gt;Server&lt;/code&gt; that gets created. See engine.io &lt;a href=&quot;https://github.com/learnboost/engine.io#methods-1&quot;&gt;options&lt;/a&gt; as reference.</source>
          <target state="translated">传递给socket.io的相同选项始终传递给创建的 &lt;code&gt;engine.io&lt;/code&gt; &lt;code&gt;Server&lt;/code&gt; 。请参阅engine.io &lt;a href=&quot;https://github.com/learnboost/engine.io#methods-1&quot;&gt;选项&lt;/a&gt;作为参考。</target>
        </trans-unit>
        <trans-unit id="6ee7eb6a9bc8471cb109914cf35f3e0d32f2ac15" translate="yes" xml:space="preserve">
          <source>The server URL will be deduced from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/location&quot;&gt;window.location&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bae9ea322655b941837d303d10ee5ec5dee750" translate="yes" xml:space="preserve">
          <source>The server did not respond in the &lt;code&gt;pingTimeout&lt;/code&gt; range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fede9bc4a581d8b17d2fcf2d6f114e55205e2827" translate="yes" xml:space="preserve">
          <source>The server has forcefully disconnected the socket with &lt;a href=&quot;server-api#socket-disconnect-close&quot;&gt;socket.disconnect()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10986719b9beb82f3b2cff130c641bc7b760000" translate="yes" xml:space="preserve">
          <source>The signature of the &lt;code&gt;emit()&lt;/code&gt; method was fixed in version &lt;code&gt;3.0.1&lt;/code&gt; (&lt;a href=&quot;https://github.com/socketio/socket.io/commit/50671d984a81535a6a15c704546ca7465e2ea295&quot;&gt;commit&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e5dc50bfdf7729fb4b12ba86d6625497a7dc913" translate="yes" xml:space="preserve">
          <source>The socket actually inherits every method of the &lt;a href=&quot;https://github.com/component/emitter&quot;&gt;Emitter&lt;/a&gt; class, like &lt;code&gt;hasListeners&lt;/code&gt;, &lt;code&gt;once&lt;/code&gt; or &lt;code&gt;off&lt;/code&gt; (to remove an event listener).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c8241ea3eec1472332f9a9988c5e50131b2120" translate="yes" xml:space="preserve">
          <source>The socket is automatically a member of a room identified with its session id (see &lt;code&gt;Socket#id&lt;/code&gt;).</source>
          <target state="translated">套接字自动成为以其会话ID标识的房间的成员（请参阅 &lt;code&gt;Socket#id&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2700c0f6df5ed1f48f5b098b5852826b59de4763" translate="yes" xml:space="preserve">
          <source>The socket was forcefully disconnected with &lt;a href=&quot;server-api#socket-disconnect-close&quot;&gt;socket.disconnect()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e3c8431ea6e39732f7a9257abae9b8a63ed2c2" translate="yes" xml:space="preserve">
          <source>The socket was manually disconnected using &lt;a href=&quot;client-api#socket-disconnect&quot;&gt;socket.disconnect()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c122d88b26427fe29a7fc6e90c7d9afe07f20a" translate="yes" xml:space="preserve">
          <source>The validation of the event arguments is out of the scope of the Socket.IO library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7968264025d4345a9308d2e1c17bacedc08d38" translate="yes" xml:space="preserve">
          <source>Then the following call:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a42eba103e57a690f3a14acc54a10e132007ae0" translate="yes" xml:space="preserve">
          <source>Then, let&amp;rsquo;s create an &lt;code&gt;index.js&lt;/code&gt; file, with the following content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c96eb4dd4f8337480da92c6b02f44ec4b5417ebf" translate="yes" xml:space="preserve">
          <source>There are 2 optional packages that can be installed alongside this package. These packages are binary add-ons which improve certain operations. Prebuilt binaries are available for the most popular platforms so you don&amp;rsquo;t necessarily need to have a C++ compiler installed on your machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a9cbff7188917a84b77af1f808e5aa647f42ed" translate="yes" xml:space="preserve">
          <source>There are also &lt;a href=&quot;https://github.com/nodejs/node/issues/19308&quot;&gt;talks&lt;/a&gt; to include a WebSocket server in the Node.js core.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f20f07cfc3eb07e5f2368474213b874c2077ee5" translate="yes" xml:space="preserve">
          <source>There are also several client implementation in other languages, which are maintained by the community:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f72071b113522bea2b7ddf7b693b8aadf10b0e" translate="yes" xml:space="preserve">
          <source>There are many packages in the JS ecosystem which cover this use case, among them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc44f6deed1226737bb7eb56c349719629980f66" translate="yes" xml:space="preserve">
          <source>There are now 3 distinct bundles:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc38995ae64c02052f9e4516d02ae5a05984dc2a" translate="yes" xml:space="preserve">
          <source>There are several bundles available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418c3d58fd7605a651ec73dc82c898a7beeaef10" translate="yes" xml:space="preserve">
          <source>There are several solutions to prevent this behavior, depending on your use case:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6df6d4337f753c5086cc54fea4696796d87895" translate="yes" xml:space="preserve">
          <source>There are several ways to handle events that are transmitted between the server and the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0860bf4aa12b53852dd603e8df83666d3431f9d" translate="yes" xml:space="preserve">
          <source>There are several ways to send events between the server and the client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a60484c961485f5f47c281089dc5f54228b11a2" translate="yes" xml:space="preserve">
          <source>There is currently no built-in error handling in the Socket.IO library, which means you must catch any error that could be thrown in a listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b72165aec52e2fbcc38079d2cf53f04e7c4761a" translate="yes" xml:space="preserve">
          <source>There is no need to run &lt;code&gt;JSON.stringify()&lt;/code&gt; on objects as it will be done for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db16735f976e3814bcb38f9cceb8d8c83107426" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s several ways to tackle this problem, like implementing your own channel to send messages into the process.</source>
          <target state="translated">有多种方法可以解决此问题，例如实现自己的渠道以将消息发送到流程中。</target>
        </trans-unit>
        <trans-unit id="1985c9893bfc8a1d1ef04fa41dc5d8505cd4c8d8" translate="yes" xml:space="preserve">
          <source>This also applies to other broadcast modifiers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d7d1f6fb64ed25ee827a252074bdb54bd8cfe2" translate="yes" xml:space="preserve">
          <source>This also works in the other direction:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7284e52871d88f30b9c54220503f3788cecf993" translate="yes" xml:space="preserve">
          <source>This attribute describes whether the socket is currently connected to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced25446a5d682c2e08091d5f4179e9c12d36fef" translate="yes" xml:space="preserve">
          <source>This behavior could lead to weird behaviors, for example when the Manager was reused for another namespace (multiplexing):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b52ba79bc47d40844f2946be894eaf1b0602412" translate="yes" xml:space="preserve">
          <source>This behavior, while convenient, was not great in terms of security, because it meant that all domains were allowed to reach your Socket.IO server, unless otherwise specified with the &lt;code&gt;origins&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a88fd89105c5046e5194fa8d78952e87f00fbe1" translate="yes" xml:space="preserve">
          <source>This can be interesting for example if you need to send the position of the characters in an online game (as only the latest values are useful).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5794049d619397cfc86d4683d0d1106699307a3" translate="yes" xml:space="preserve">
          <source>This change impacts the users of the multiplexing feature (what we call Namespace in Socket.IO).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da024288fd1620a1292e52ec310a527137d04875" translate="yes" xml:space="preserve">
          <source>This defines how many bytes a message can be, before closing the socket. It defaults to &lt;code&gt;1e6&lt;/code&gt; (1MB). You may increase or decrease this value depending on your needs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09542ccf52daabc9431faf4f23e0c06858706b6" translate="yes" xml:space="preserve">
          <source>This emitter is available in several languages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8af812e4e6779f77bb157b4ca5558cc94705f5" translate="yes" xml:space="preserve">
          <source>This error is probably due to your version of Node.js. The &lt;a href=&quot;https://nodejs.org/api/stream.html#stream_stream_pipeline_source_transforms_destination_callback&quot;&gt;pipeline&lt;/a&gt; method was introduced in Node.js 10.0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c210657a129ca07ee56f8fefccade0577dde7023" translate="yes" xml:space="preserve">
          <source>This event is fired by the Socket instance upon connection / reconnection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7062174635d763891aaba758a19ebbcf9c2f26c" translate="yes" xml:space="preserve">
          <source>This event is fired by the Socket instance upon disconnection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674aa04499e0912419249a68449b182ad208118e" translate="yes" xml:space="preserve">
          <source>This event is fired upon disconnection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03244bdfa2606130552a2fe22c92b5e7541b32d" translate="yes" xml:space="preserve">
          <source>This event is fired when the server does not accept the connection (in a &lt;a href=&quot;middlewares&quot;&gt;middleware function&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb65affd78ef9f43784811aeeb07e0d283cd8c32" translate="yes" xml:space="preserve">
          <source>This event is similar to &lt;code&gt;disconnect&lt;/code&gt; but is fired a bit earlier, when the &lt;a href=&quot;server-socket-instance#Socket-rooms&quot;&gt;Socket#rooms&lt;/a&gt; set is not empty yet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a66c4dc97605b5222c2fb4b2c8443850a3095de" translate="yes" xml:space="preserve">
          <source>This feature is available on both the client and the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7909a8e3da5aa3fd14f5222892ca80510e8adeb" translate="yes" xml:space="preserve">
          <source>This feature is inspired from the &lt;a href=&quot;https://github.com/EventEmitter2/EventEmitter2&quot;&gt;EventEmitter2&lt;/a&gt; library (which is not used directly in order not to increase the browser bundle size).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7312ff9e2f92a65d6424e69bbb71099cca7bb101" translate="yes" xml:space="preserve">
          <source>This feature was already available on the server-side. It might be useful on the client-side as well, for example when the socket is not connected (by default, packets are buffered until reconnection).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a7e29a09a16bcd71bf8ea574ea8c84c542d85d" translate="yes" xml:space="preserve">
          <source>This function returns the list of socket IDs that are connected to this namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511702e62df9f398516e7c4f6a62d12c94166518" translate="yes" xml:space="preserve">
          <source>This has the benefit of &lt;code&gt;multiplexing&lt;/code&gt; a single connection. Instead of socket.io using two &lt;code&gt;WebSocket&lt;/code&gt; connections, it&amp;rsquo;ll use one.</source>
          <target state="translated">这具有 &lt;code&gt;multiplexing&lt;/code&gt; 单个连接的好处。与其使用两个 &lt;code&gt;WebSocket&lt;/code&gt; 连接，不使用socket.io ，而是使用一个。</target>
        </trans-unit>
        <trans-unit id="f114c6dc34129c63b7492a604ec75d9bd70e1d60" translate="yes" xml:space="preserve">
          <source>This identifier is synced with the value on the client-side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9022aa17be5939015e21c684d11082cf375c49e8" translate="yes" xml:space="preserve">
          <source>This identifier is synced with the value on the server-side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990a6df1038b8edbeecbf197b045ea936f951161" translate="yes" xml:space="preserve">
          <source>This implementation &amp;ldquo;allows, but doesn&amp;rsquo;t guarantee&amp;rdquo; significant performance and memory-usage improvements over the default implementation. As usual, please benchmark it against your own usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0af404c7aeddac52974a1e97e6868191afc9df" translate="yes" xml:space="preserve">
          <source>This implicitly starts a Node.js &lt;a href=&quot;https://nodejs.org/docs/latest/api/http.html#http_class_http_server&quot;&gt;HTTP server&lt;/a&gt;, which can be accessed through &lt;code&gt;io.httpServer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec578c81967f582c10f0b563f372e0ced3a1cec" translate="yes" xml:space="preserve">
          <source>This is a reference to the &lt;a href=&quot;rooms&quot;&gt;rooms&lt;/a&gt; the Socket is currently in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8acf61b8bdf22d4ed2a87f81559a8fffadc5461" translate="yes" xml:space="preserve">
          <source>This is a useful feature to minimize the number of resources (TCP connections) and at the same time separate concerns within your application by introducing separation between communication channels.</source>
          <target state="translated">这是一个有用的功能,可以最大限度地减少资源(TCP连接)的数量,同时通过引入通信通道之间的分离来分离应用程序中的关注点。</target>
        </trans-unit>
        <trans-unit id="8cd07633d61e50d5945082f25df5daa3dcfda467" translate="yes" xml:space="preserve">
          <source>This is due to certain transports like XHR Polling or JSONP Polling relying on firing several requests during the lifetime of the &amp;ldquo;socket&amp;rdquo;.</source>
          <target state="translated">这是由于某些传输（例如XHR轮询或JSONP轮询）在&amp;ldquo;套接字&amp;rdquo;的生存期内依赖于触发多个请求而导致的。</target>
        </trans-unit>
        <trans-unit id="7d7dcaeb0d830655bd0cf10685a42b8c5e98b933" translate="yes" xml:space="preserve">
          <source>This is due to certain transports like XHR Polling or JSONP Polling relying on firing several requests during the lifetime of the &amp;ldquo;socket&amp;rdquo;. Failing to enable sticky balancing will result in the dreaded:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02efc4a4611b07f0482e084ec3f488189c135842" translate="yes" xml:space="preserve">
          <source>This is only relevant for updating things like socket.io implementations in other languages, custom socket.io clients, etc.</source>
          <target state="translated">这只与更新其他语言的socket.io实现、自定义socket.io客户端等相关。</target>
        </trans-unit>
        <trans-unit id="deaba00079b2651dd1c451f17172b57d449b1ce7" translate="yes" xml:space="preserve">
          <source>This is probably due to the fact that the default value of &lt;code&gt;maxHttpBufferSize&lt;/code&gt; is now &lt;code&gt;1MB&lt;/code&gt;. When receiving a packet that is larger than this, the server disconnects the client, in order to prevent malicious clients from overloading the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4364a6479b1d0e101dbfb9e2e24ad0ef272f24" translate="yes" xml:space="preserve">
          <source>This makes it easy to broadcast messages to other sockets:</source>
          <target state="translated">这使得向其他套接字广播消息变得容易。</target>
        </trans-unit>
        <trans-unit id="a3d5e8ddd56a19e9b1701afbc55b71130b77eb72" translate="yes" xml:space="preserve">
          <source>This makes it easy to implement private messages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf75c065c2b0f5990c475265458c5721d475a12" translate="yes" xml:space="preserve">
          <source>This method has no effect after &lt;code&gt;attach&lt;/code&gt; is called.</source>
          <target state="translated">调用 &lt;code&gt;attach&lt;/code&gt; 后，此方法无效。</target>
        </trans-unit>
        <trans-unit id="63cf3be0aba19c534be06d293af8d5d38bf35b47" translate="yes" xml:space="preserve">
          <source>This method was deprecated in the 1.0 release and kept for backward-compatibility. It is now removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92be099e1abd8ea12ca0b1bf8110b0d786baeb2c" translate="yes" xml:space="preserve">
          <source>This namespace is identified by &lt;code&gt;io.sockets&lt;/code&gt; or simply &lt;code&gt;io&lt;/code&gt;:</source>
          <target state="translated">该名称空间由 &lt;code&gt;io.sockets&lt;/code&gt; 或简单地 &lt;code&gt;io&lt;/code&gt; 标识：</target>
        </trans-unit>
        <trans-unit id="57cc7f93be1876ece5e2bba2c32defe6a48f5f69" translate="yes" xml:space="preserve">
          <source>This object contains some details about the handshake that happens at the beginning of the Socket.IO session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ea43bcf7aaa07dd69a81d6a20170acaa5b6fb23" translate="yes" xml:space="preserve">
          <source>This only works if &lt;code&gt;polling&lt;/code&gt; transport is enabled (which is the default). Custom headers will not be appended when using &lt;code&gt;websocket&lt;/code&gt; as the transport. This happens because the WebSocket handshake does not honor custom headers. (For background see the &lt;a href=&quot;https://tools.ietf.org/html/rfc6455#section-4&quot;&gt;WebSocket protocol RFC&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee40fd0a0aa8255ea84f1b0f77642e8ee8847540" translate="yes" xml:space="preserve">
          <source>This pattern should hopefully be making sense at this point. The names of the files in socket.io/lib are equivalent to their debug names.</source>
          <target state="translated">这个模式希望此时应该是有意义的。socket.io/lib中的文件名相当于它们的调试名。</target>
        </trans-unit>
        <trans-unit id="44708b718f516e42d9b2ae2ad229f10d49b003b1" translate="yes" xml:space="preserve">
          <source>This release should fix most of the inconsistencies of the Socket.IO library and provide a more intuitive behavior forthe end users. It is the result of the feedback of the community over the years. A big thanks to everyone involved!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd02ba45c3a515fd9fab0bc33f4d4dbe906b78b1" translate="yes" xml:space="preserve">
          <source>Those credentials can be accessed in the &lt;a href=&quot;server-socket-instance#Socket-handshake&quot;&gt;handshake&lt;/a&gt; object on the server-side:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd465b1f4441bd8453fd6abcbf21d1291c9d41e8" translate="yes" xml:space="preserve">
          <source>Timeout are not supported by default, but it is quite straightforward to implement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be92bde0f0fe8ef95916db5133cd4bc935803053" translate="yes" xml:space="preserve">
          <source>To achieve sticky-session, there are two main solutions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a90207f037050ddde51ff4fc9800520816c3124" translate="yes" xml:space="preserve">
          <source>To all connected clients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e3fa88dc596b75b92e6d36b0dc3e2b8b8f5569" translate="yes" xml:space="preserve">
          <source>To all connected clients except the sender</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e2fa8ff0e3d2b8bd72417356ce2629783708a5" translate="yes" xml:space="preserve">
          <source>To broadcast, simply add a &lt;code&gt;broadcast&lt;/code&gt; flag to &lt;code&gt;emit&lt;/code&gt; and &lt;code&gt;send&lt;/code&gt; method calls. Broadcasting means sending a message to everyone else except for the socket that starts it.</source>
          <target state="translated">要进行广播，只需添加 &lt;code&gt;broadcast&lt;/code&gt; 标志即可 &lt;code&gt;emit&lt;/code&gt; 和 &lt;code&gt;send&lt;/code&gt; 方法调用。广播意味着将消息发送到其他人（除了启动该消息的套接字之外）。</target>
        </trans-unit>
        <trans-unit id="793b63791f651dd4aac2889e26e0b0be6c039d3f" translate="yes" xml:space="preserve">
          <source>To do this, simply pass a function as the last parameter of &lt;code&gt;.send&lt;/code&gt; or &lt;code&gt;.emit&lt;/code&gt;. What&amp;rsquo;s more, when you use &lt;code&gt;.emit&lt;/code&gt;, the acknowledgement is done by you, which means you can also pass data along:</source>
          <target state="translated">为此，只需将函数作为 &lt;code&gt;.send&lt;/code&gt; 或 &lt;code&gt;.emit&lt;/code&gt; 的最后一个参数传递即可。此外，当您使用 &lt;code&gt;.emit&lt;/code&gt; 时，确认由您完成，这意味着您还可以传递数据：</target>
        </trans-unit>
        <trans-unit id="adb8629696bdcd815d05e4dc0277025b0366d76b" translate="yes" xml:space="preserve">
          <source>To emit to multiple rooms, you can call &lt;code&gt;to&lt;/code&gt; several times.</source>
          <target state="translated">为了发出多个房间，你可以打电话 &lt;code&gt;to&lt;/code&gt; 几次。</target>
        </trans-unit>
        <trans-unit id="2e7e0925a777569039cd67d1a0905c68fb77fbac" translate="yes" xml:space="preserve">
          <source>To facilitate this use case, we created two modules:</source>
          <target state="translated">为了方便这个用例,我们创建了两个模块。</target>
        </trans-unit>
        <trans-unit id="50c35d949f414b3a1d392f61a735af5cdc11c34a" translate="yes" xml:space="preserve">
          <source>To illustrate why this is needed, consider the example of emitting an event to all connected clients:</source>
          <target state="translated">为了说明为什么需要这样做,请考虑向所有连接的客户端发射事件的例子。</target>
        </trans-unit>
        <trans-unit id="53c0c7bc9b957af739eabb7643bc58a8807e0f01" translate="yes" xml:space="preserve">
          <source>To install a specific version:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f963f16cb36c384c0a58792cd6fe3fd1e2518c0a" translate="yes" xml:space="preserve">
          <source>To install the latest release:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea7df6bf9b2ff252f05ef0aba5db9cd22841248" translate="yes" xml:space="preserve">
          <source>To install those packages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="213a07966f1191392e1e85e0d7736fdbc04017d9" translate="yes" xml:space="preserve">
          <source>To leave a channel you call &lt;code&gt;leave&lt;/code&gt; in the same fashion as &lt;code&gt;join&lt;/code&gt;.</source>
          <target state="translated">要离开频道，您呼叫 &lt;code&gt;leave&lt;/code&gt; 的方式与 &lt;code&gt;join&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="0bf5bc4675ffe08e49e7925addf8f4efdc397cd8" translate="yes" xml:space="preserve">
          <source>To print all debug logging, set the environment variable DEBUG to *. ie: &lt;code&gt;DEBUG=* node index.js&lt;/code&gt;</source>
          <target state="translated">要打印所有调试日志记录，请将环境变量DEBUG设置为*。即： &lt;code&gt;DEBUG=* node index.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d4e6d19b861bd6411956bf3c8672350a8b6087a" translate="yes" xml:space="preserve">
          <source>To print logging only from the socket object: &lt;code&gt;DEBUG=socket.io:socket node index.js&lt;/code&gt;.</source>
          <target state="translated">要仅从套接字对象打印日志记录： &lt;code&gt;DEBUG=socket.io:socket node index.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a52168cb472fb76fab36e18061d33add5aa42bc7" translate="yes" xml:space="preserve">
          <source>To print only socket.io related logging: &lt;code&gt;DEBUG=socket.io:* node index.js&lt;/code&gt;.</source>
          <target state="translated">要仅打印与socket.io相关的日志记录： &lt;code&gt;DEBUG=socket.io:* node index.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbf776e141787dc016fa7f1fb8e35d60b70446a6" translate="yes" xml:space="preserve">
          <source>To see all debug messages from the engine &lt;em&gt;and&lt;/em&gt; socket.io:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2f3cb0527e29375cbd05dec3d3b75c35ae34d8" translate="yes" xml:space="preserve">
          <source>To send a message from the client to the server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2f38dab8b5861a9d5dfbf3d0ba6407df47b25e" translate="yes" xml:space="preserve">
          <source>To send an event from the server to the client</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7d79750ddd69f453cefbd8b88cdcfe543cb8a0" translate="yes" xml:space="preserve">
          <source>To set up a custom namespace, you can call the &lt;code&gt;of&lt;/code&gt; function on the server-side:</source>
          <target state="translated">要设置自定义名称空间，可以在服务器端调用 &lt;code&gt;of&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="d4a86cb946d4af4766f6a695502b64f3ea0cd58b" translate="yes" xml:space="preserve">
          <source>TypeScript</source>
          <target state="translated">TypeScript</target>
        </trans-unit>
        <trans-unit id="11fc4974f4ca658950b460a5b6c6b7adc2962570" translate="yes" xml:space="preserve">
          <source>Under the hood, here&amp;rsquo;s what happened in the &lt;code&gt;io()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22faee6f6f5c6a8afa68cf72737232e7221c6c7b" translate="yes" xml:space="preserve">
          <source>Unless instructed otherwise a disconnected client will try to reconnect forever, until the server is available again. Please see the available reconnection options &lt;a href=&quot;client-api#new-Manager-url-options&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a575bbb2dfd21fe76ecdce760fa8404cf9d900" translate="yes" xml:space="preserve">
          <source>Unminified version, with &lt;a href=&quot;https://www.npmjs.com/package/debug&quot;&gt;debug&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5843afc7ec63deefa9599877360c1ba9e10eb99" translate="yes" xml:space="preserve">
          <source>Upon creation, the Socket joins the room identified by its own id, which means you can use it for private messaging:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80cdc66f7c4e8982bb6d15d3223bb0d5edcd60f" translate="yes" xml:space="preserve">
          <source>Upon disconnection, sockets &lt;code&gt;leave&lt;/code&gt; all the channels they were part of automatically, and no special teardown is needed on your part.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1a74946349b51ae407322cd90b6b54ce7ff2ed" translate="yes" xml:space="preserve">
          <source>Upon disconnection, sockets &lt;code&gt;leave&lt;/code&gt; all the channels they were part of automatically, and no specially teardown is needed on your part.</source>
          <target state="translated">断开连接后，套接字 &lt;code&gt;leave&lt;/code&gt; 自动离开它们所属的所有通道，并且不需要您进行专门的拆卸。</target>
        </trans-unit>
        <trans-unit id="66f1d588b5a728ccc232c9e64752fa17dbb73fc4" translate="yes" xml:space="preserve">
          <source>Usage with asynchronous code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="9ecaf15d290c8c7a8316c3153aa6afc6a193ce6b" translate="yes" xml:space="preserve">
          <source>Uses NodeJS implementation for websockets - even if there is a native Browser-Websocket available, which is preferred by default over the NodeJS implementation. (This is useful when using hybrid platforms like nw.js or electron)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c56de6fa4b8ab5ceccfc256f436d6efcd20ee7" translate="yes" xml:space="preserve">
          <source>Using Node.JS Cluster</source>
          <target state="translated">使用Node.JS集群</target>
        </trans-unit>
        <trans-unit id="8cd82c5a97d4f7fba2d0b4baca121679b6730b4a" translate="yes" xml:space="preserve">
          <source>Using it just as a cross-browser WebSocket</source>
          <target state="translated">将其作为跨浏览器的WebSocket使用。</target>
        </trans-unit>
        <trans-unit id="073ad659615fd2190a439db57d27ca3e9b379757" translate="yes" xml:space="preserve">
          <source>Using multiple nodes</source>
          <target state="translated">使用多个节点</target>
        </trans-unit>
        <trans-unit id="c31a2d2ce3aacbf3f04fa5e5385760da0d920080" translate="yes" xml:space="preserve">
          <source>Using the Redis adapter has another benefit: you can now emit events from outside the context of your Socket.IO processes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4e4ca4fc9fa4213c383e1da343c10d2d022b67" translate="yes" xml:space="preserve">
          <source>Using with Express 3/4</source>
          <target state="translated">与Express 3/4一起使用</target>
        </trans-unit>
        <trans-unit id="c2492ec20e9752d3499807afd9c7a812fae17be6" translate="yes" xml:space="preserve">
          <source>Using with Node http server</source>
          <target state="translated">使用Node http服务器</target>
        </trans-unit>
        <trans-unit id="f7ec78036dbf0cddbc3f809f84ef31b446dc91e3" translate="yes" xml:space="preserve">
          <source>Using with the Express framework</source>
          <target state="translated">与Express框架一起使用</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="259c943cb7b18d961062160bec499e75bc27eda8" translate="yes" xml:space="preserve">
          <source>Volatile events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962548267684ca1fe805c783f8352f4547cc7884" translate="yes" xml:space="preserve">
          <source>Volatile events (client)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f183b3f1f67739263cbaabd2a6f02fe8110385" translate="yes" xml:space="preserve">
          <source>Volatile events are events that will not be sent if the underlying connection is not ready (a bit like &lt;a href=&quot;https://fr.wikipedia.org/wiki/User_Datagram_Protocol&quot;&gt;UDP&lt;/a&gt;, in terms of reliability).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe37b7b07cde7323bdab918a23da66cf9b3ad03f" translate="yes" xml:space="preserve">
          <source>We call the default namespace &lt;code&gt;/&lt;/code&gt; and it&amp;rsquo;s the one Socket.IO clients connect to by default, and the one the server listens to by default.</source>
          <target state="translated">我们将默认命名空间称为 &lt;code&gt;/&lt;/code&gt; ，它是默认连接的一个Socket.IO客户端，和默认情况下服务器监听的一个。</target>
        </trans-unit>
        <trans-unit id="950ebf480c8d36b2cc3bc5255161b8b22b2f9ecc" translate="yes" xml:space="preserve">
          <source>WebSocket is a communication protocol which provides a full-duplex and low-latency channel between the server and the browser. More information can be found &lt;a href=&quot;https://en.wikipedia.org/wiki/WebSocket&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5408fdf3abdfd58fa53009268160ff830841233" translate="yes" xml:space="preserve">
          <source>What Socket.IO is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b359a39cc622e35e1ad3c001868df22d2263c6" translate="yes" xml:space="preserve">
          <source>What Socket.IO is not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637cc4322580dd8273498c0361ebdf01dbfb550d" translate="yes" xml:space="preserve">
          <source>When called, it creates a new &lt;code&gt;Manager&lt;/code&gt; for the given URL, and attempts to reuse an existing &lt;code&gt;Manager&lt;/code&gt; for subsequent calls, unless the &lt;code&gt;multiplex&lt;/code&gt; option is passed with &lt;code&gt;false&lt;/code&gt;. Passing this option is the equivalent of passing &lt;code&gt;'force new connection': true&lt;/code&gt;.</source>
          <target state="translated">调用时，它将为给定的URL 创建一个新的 &lt;code&gt;Manager&lt;/code&gt; ，并尝试将现有的 &lt;code&gt;Manager&lt;/code&gt; 重新用于后续调用，除非使用 &lt;code&gt;false&lt;/code&gt; 传递了 &lt;code&gt;multiplex&lt;/code&gt; 选项。传递此选项等效于传递 &lt;code&gt;'force new connection': true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="20bc940f2c5db26af4655f074b1a424dcaa09dc4" translate="yes" xml:space="preserve">
          <source>When deploying multiple Socket.IO servers, there are two things to take care of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa5fb7bb4e67802b432ae8ee8f8b9f8562397a4" translate="yes" xml:space="preserve">
          <source>Whether or not the socket is connected to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2483b282805a8fc5380a22d740debbd64e767ff2" translate="yes" xml:space="preserve">
          <source>Whether or not the socket is disconnected from the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a48f0422c5effec3bef7fb9cc8e98f6d06519f" translate="yes" xml:space="preserve">
          <source>Which means &lt;code&gt;npm i -D @types/socket.io&lt;/code&gt; should not be needed anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80258329727f9901002906fd7bbcc0de761a24e2" translate="yes" xml:space="preserve">
          <source>Which means that the upgrade request was sent to a node which did not know the given socket id, hence the HTTP 400 response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fca1e2de4538f55ed48a7d365229af8f06a2f6" translate="yes" xml:space="preserve">
          <source>While useful during development, the debug package adds an extra weight to the final bundle (about 4KB minified and gzipped), that&amp;rsquo;s why it is excluded from the slim bundle (more details about the various browser bundles can be found &lt;a href=&quot;client-installation#From-a-CDN&quot;&gt;here&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8feca0849765705ca09d9aa4ea10e9fa8a5ad665" translate="yes" xml:space="preserve">
          <source>While useful in most cases (when the reconnection delay is short), it could result in a huge spike of events when the connection is restored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fe16e33755f8376c33ff46f70f59a48f4d3036" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;extraHeaders&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5e65e3276a3d3f6e8346c09ed9425c63ac9708" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;websocket&lt;/code&gt; transport only</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697ebf4e92874ac88cefe9b6d9fa9a3fd176ca51" translate="yes" xml:space="preserve">
          <source>With Express</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f495daff0f60c83aebe5d9b3754e2efb0d3d02e" translate="yes" xml:space="preserve">
          <source>With HTTPS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd585bda8cb49a4b1db2702237bdcbab66ea7788" translate="yes" xml:space="preserve">
          <source>With Koa</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c3f4f957bc0b858eee9838e6b58113ecf00c2d" translate="yes" xml:space="preserve">
          <source>With a custom parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507018fc638a6160b04b4ccffb686f10dc20a103" translate="yes" xml:space="preserve">
          <source>With a function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815ef3b2975cda73ac8c47894c26e526f9b1f051" translate="yes" xml:space="preserve">
          <source>With a self-signed certificate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb7e7bc2522412edaec7216ebafd291c77e5000" translate="yes" xml:space="preserve">
          <source>With custom &lt;code&gt;path&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="258a7a39068ee96717db02712f0223997b8897f5" translate="yes" xml:space="preserve">
          <source>With multiple Socket.IO servers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b55c79590b20307bb4af2eab8a6ffd1718134ae" translate="yes" xml:space="preserve">
          <source>With multiplexing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d5a6913a05e65e329a0cd16ad0c6e1a12d02da" translate="yes" xml:space="preserve">
          <source>With query option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faed2a00561f667a4622d592983b6755955578f6" translate="yes" xml:space="preserve">
          <source>With query parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b6993fef0a99b190736947d1bd0e303bab0925" translate="yes" xml:space="preserve">
          <source>Within each &lt;code&gt;Namespace&lt;/code&gt;, you can also define arbitrary channels (called &lt;code&gt;room&lt;/code&gt;) that the &lt;code&gt;Socket&lt;/code&gt; can join and leave. That provides a convenient way to broadcast to a group of &lt;code&gt;Socket&lt;/code&gt;s (see &lt;code&gt;Socket#to&lt;/code&gt; below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afcadb5eac60370c2a281ae61dcb47804eff96c" translate="yes" xml:space="preserve">
          <source>Within each namespace, you can also define arbitrary channels that sockets can &lt;code&gt;join&lt;/code&gt; and &lt;code&gt;leave&lt;/code&gt;.</source>
          <target state="translated">在每个名称空间内，您还可以定义套接字可以 &lt;code&gt;join&lt;/code&gt; 和 &lt;code&gt;leave&lt;/code&gt; 任意通道。</target>
        </trans-unit>
        <trans-unit id="a047566103afc0824595a8ea84bc4b3cecf01d0e" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;http { }&lt;/code&gt; section of your &lt;code&gt;nginx.conf&lt;/code&gt; file, you can declare a &lt;code&gt;upstream&lt;/code&gt; section with a list of Socket.IO process you want to balance load between:</source>
          <target state="translated">在 &lt;code&gt;nginx.conf&lt;/code&gt; 文件的 &lt;code&gt;http { }&lt;/code&gt; 部分中，可以声明一个 &lt;code&gt;upstream&lt;/code&gt; 部分，其中包含要平衡负载之间的Socket.IO进程列表：</target>
        </trans-unit>
        <trans-unit id="547482ced726b868846133707f5f28cb890a2881" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;volatile&lt;/code&gt; flag, you would see:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c0cec5fa72cce86658ab710a65dff3c5ae3b0f" translate="yes" xml:space="preserve">
          <source>Works with and without &lt;code&gt;new&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4577afb15ba205ee215f8d821891fa64736bbc1" translate="yes" xml:space="preserve">
          <source>You can add a callback as the last argument of the &lt;code&gt;emit()&lt;/code&gt;, and this callback will be called once the other side acknowledges the event:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99afabae5921f414525a9c0067177ff1c19400a3" translate="yes" xml:space="preserve">
          <source>You can adjust the value when creating the server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503da4205c5f9f2bf20060f23302423836cc89d0" translate="yes" xml:space="preserve">
          <source>You can also broadcast to a room from a given socket:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501a21d253b9774327865401d6ab0128e2cc6a1a" translate="yes" xml:space="preserve">
          <source>You can also include the client bundle from a CDN:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6c2574248682897f4a9ac1007c5eb5be553242" translate="yes" xml:space="preserve">
          <source>You can also pass the port as the first argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fdd1cf53eeb8980dc58ea125d7a036a7969846" translate="yes" xml:space="preserve">
          <source>You can attach additional details to the Error object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff62c0e7a31ac1faaa33501d0068d4f8ddb0bfd" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;join&lt;/code&gt; to subscribe the socket to a given channel:</source>
          <target state="translated">您可以调用 &lt;code&gt;join&lt;/code&gt; 将套接字订阅到给定的频道：</target>
        </trans-unit>
        <trans-unit id="f0676d5e5ba2bdb0922e7dff9abc2f89a43e23f0" translate="yes" xml:space="preserve">
          <source>You can emit to several rooms at the same time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05f0fd8114cb8b36b5aab4ede05820bceed6b32" translate="yes" xml:space="preserve">
          <source>You can fetch the rooms the Socket was in by listening to the &lt;code&gt;disconnecting&lt;/code&gt; event:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a181e705585cabb1a066153aa9fad857b75670" translate="yes" xml:space="preserve">
          <source>You can find more details about namespaces &lt;a href=&quot;namespaces&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb16b39159f52f67f9bc765a11218f0e38424d2f" translate="yes" xml:space="preserve">
          <source>You can find more information &lt;a href=&quot;https://github.com/socketio/socket.io-protocol&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1401310e1bcc60512ecbbdfd3dab7c4cb3b5bbd3" translate="yes" xml:space="preserve">
          <source>You can give a Socket.io server arbitrary functions via &lt;code&gt;io.use()&lt;/code&gt; that are run when a socket is created. Check out this example:</source>
          <target state="translated">您可以通过创建套接字时运行的 &lt;code&gt;io.use()&lt;/code&gt; 赋予Socket.io服务器任意功能。看看这个例子：</target>
        </trans-unit>
        <trans-unit id="9a68168e319f2689bfca2e4b30d29a0be42e0e5e" translate="yes" xml:space="preserve">
          <source>You can register several middleware functions for the same namespace. They will be executed sequentially:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07603edfe3081600ad02971b14f723c632034ca1" translate="yes" xml:space="preserve">
          <source>You can register several middleware functions, and they will be executed sequentially:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a51ec907aa1fee466fa83adb8cc25e8599fadfe" translate="yes" xml:space="preserve">
          <source>You can see it in action for example on our homepage:</source>
          <target state="translated">您可以在我们的主页上看到它的实际应用。</target>
        </trans-unit>
        <trans-unit id="c31e74b6e4ff1b6209840d2b430d74855c602e60" translate="yes" xml:space="preserve">
          <source>You can send any number of arguments, and all serializable datastructures are supported, including binary objects like &lt;a href=&quot;https://nodejs.org/docs/latest/api/buffer.html#buffer_buffer&quot;&gt;Buffer&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;TypedArray&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff027093bfeb8c0d92e20f127b9fd66139a52ed9" translate="yes" xml:space="preserve">
          <source>You can still have access to those events on the Manager instance (the &lt;code&gt;io&lt;/code&gt; property of the socket) :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3aea1b57db8eea7e0d1cd24debf480671207c2f" translate="yes" xml:space="preserve">
          <source>You could also assign a different port to each worker of the cluster, based on the cluster worker ID, and balance the load with the configuration that you can find above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc835cfbdcc2ffec1284aa4fb5702349182213de" translate="yes" xml:space="preserve">
          <source>You could also take advantage of the &lt;a href=&quot;https://github.com/npm/rfcs/blob/latest/implemented/0001-package-aliases.md&quot;&gt;package aliases&lt;/a&gt; feature of your favorite package manager in order to have both versions running in parallel:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1ed940c0a92ae4bbd0ff457b1e152c035ad398" translate="yes" xml:space="preserve">
          <source>You just need to replace the default &lt;a href=&quot;https://socket.io/docs/v3/glossary/#Adapter&quot;&gt;Adapter&lt;/a&gt; by the Redis Adapter. More information about it &lt;a href=&quot;using-multiple-nodes#Passing-events-between-nodes&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc4bfbffc92326182dec49be34e1c220b869ada" translate="yes" xml:space="preserve">
          <source>You need to manually reconnect. You might need to update the credentials:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8027fbad1419c676b7f201c0ce24bc1d97ee298" translate="yes" xml:space="preserve">
          <source>You will have, on the client-side:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0161ecc39a1fa2494d02f1313b2795b3a540aa" translate="yes" xml:space="preserve">
          <source>a Javascript client library for the browser (which can be also run from Node.js): &lt;a href=&quot;https://github.com/socketio/socket.io-client&quot;&gt;Source&lt;/a&gt; | &lt;a href=&quot;client-api&quot;&gt;API&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad0b76e992359802b7a94eef69dcc6b85784d28" translate="yes" xml:space="preserve">
          <source>a Node.js server: &lt;a href=&quot;https://github.com/socketio/socket.io&quot;&gt;Source&lt;/a&gt; | &lt;a href=&quot;server-api&quot;&gt;API&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98935baace647a836736cbeeedcd61cc1c051844" translate="yes" xml:space="preserve">
          <source>a list of subprotocols (see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#Subprotocols&quot;&gt;MDN reference&lt;/a&gt;) (&lt;em&gt;only for websocket transport&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33279eda8af870cbcf611b8ed7ea4e6411d0eec9" translate="yes" xml:space="preserve">
          <source>a list of transports to try (in order). &lt;code&gt;Engine&lt;/code&gt; always attempts to connect directly with the first one, provided the feature detection test for it passes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aee543cdeffd2820d22937e2d9c5b236dd2c250" translate="yes" xml:space="preserve">
          <source>a slightly bigger bundle size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf486deae8b09e2c00540607cd2f0e705c6c01ec" translate="yes" xml:space="preserve">
          <source>additional query parameters that are sent when connecting a namespace (then found in &lt;code&gt;socket.handshake.query&lt;/code&gt; object on the server-side)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d85ad574b04b30e7efced62b00e63299688a447" translate="yes" xml:space="preserve">
          <source>ajv</source>
          <target state="translated">ajv</target>
        </trans-unit>
        <trans-unit id="8adb0c338428eb38672a03af92e03bc47978b959" translate="yes" xml:space="preserve">
          <source>authentication / authorization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e58ac78738f8185ee5c7c2c3d83aca0198db529" translate="yes" xml:space="preserve">
          <source>becomes</source>
          <target state="translated">becomes</target>
        </trans-unit>
        <trans-unit id="b58ccb7871e0261dfe6de9e4f5274543ebbebeb8" translate="yes" xml:space="preserve">
          <source>broadcast</source>
          <target state="translated">broadcast</target>
        </trans-unit>
        <trans-unit id="30a6ec5c4a1a8a909947342077a4ffdcff2e13b3" translate="yes" xml:space="preserve">
          <source>broadcast data to each device / tab of a given user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79315166bb6f9e276c40f05244e035e233470fbd" translate="yes" xml:space="preserve">
          <source>broadcasting events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b40e58d3cda8110ef200c6bc7f6832efc214f5b" translate="yes" xml:space="preserve">
          <source>by setting this false, you have to call &lt;code&gt;manager.open&lt;/code&gt; whenever you decide it&amp;rsquo;s appropriate</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87fb4b8c5be1cb64f854c8aa2923591c8f75304" translate="yes" xml:space="preserve">
          <source>cdnjs: &lt;a href=&quot;https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.1/socket.io.min.js&quot;&gt;https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.1/socket.io.min.js&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c489a1dc3da07b77f15d48253d3d38d60fe3678a" translate="yes" xml:space="preserve">
          <source>client.conn</source>
          <target state="translated">client.conn</target>
        </trans-unit>
        <trans-unit id="86ffaae4023c22e69397ff5814fbe89481ee34e4" translate="yes" xml:space="preserve">
          <source>client.request</source>
          <target state="translated">client.request</target>
        </trans-unit>
        <trans-unit id="da38860cb875cb64092e402d80d9fe29c4865b18" translate="yes" xml:space="preserve">
          <source>close</source>
          <target state="translated">close</target>
        </trans-unit>
        <trans-unit id="f11a107f38328604e9320754224b60375758bca1" translate="yes" xml:space="preserve">
          <source>connect</source>
          <target state="translated">connect</target>
        </trans-unit>
        <trans-unit id="dc1bd1ec5e7b7b237e469a404ddcc59b9d5d691d" translate="yes" xml:space="preserve">
          <source>connect_error</source>
          <target state="translated">connect_error</target>
        </trans-unit>
        <trans-unit id="9aa8a4117b6e92c10db3e6642e40f2dd44843794" translate="yes" xml:space="preserve">
          <source>connection failure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f9921910ea6ca178283d020596f6df25be1108" translate="yes" xml:space="preserve">
          <source>connection timeout before an &lt;code&gt;error&lt;/code&gt; event is emitted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa6dc1d8eedf1471e0b18df56ad3916b17dba319" translate="yes" xml:space="preserve">
          <source>data packet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7989598ba2e227edf2db7677362ff336bafd3d9b" translate="yes" xml:space="preserve">
          <source>determines whether to use JSONP when necessary for polling. If disabled (by settings to false) an error will be emitted (saying &amp;ldquo;No transports available&amp;rdquo;) if no other transports are available. If another transport is available for opening a connection (e.g. WebSocket) that transport will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573bb1c8af168ed6b443b432a7a09c1b3d7915a6" translate="yes" xml:space="preserve">
          <source>disconnect</source>
          <target state="translated">disconnect</target>
        </trans-unit>
        <trans-unit id="44f3e927fc822525dc2d628560c362d68daab54d" translate="yes" xml:space="preserve">
          <source>disconnection</source>
          <target state="translated">disconnection</target>
        </trans-unit>
        <trans-unit id="440b7fb44a2057a15842109d0494eedeb10c5689" translate="yes" xml:space="preserve">
          <source>empty the internal buffer upon reconnection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50f92f1bc5634a4b422d17d072c3456e1a3e55d" translate="yes" xml:space="preserve">
          <source>enables XDomainRequest for IE8 to avoid loading bar flashing with click sound. default to &lt;code&gt;false&lt;/code&gt; because XDomainRequest has a flaw of not sending cookie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac881287b3ff53598d367b1f559d9d7754fd2a5c" translate="yes" xml:space="preserve">
          <source>enabling sticky session, if HTTP long-polling is enabled (which is the default): see &lt;a href=&quot;#Sticky-load-balancing&quot;&gt;below&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f9578d05e6f7bb58a3cdd00107e9f4e3882671" translate="yes" xml:space="preserve">
          <source>error</source>
          <target state="translated">error</target>
        </trans-unit>
        <trans-unit id="47808c39308dd8de8f7f6674e4ab975c1df809e0" translate="yes" xml:space="preserve">
          <source>events with binary content are sent as 1 WebSocket frame (instead of 2+ with the default parser)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e2f8d8b237c0d8a957afab1be537d3c8bfe239" translate="yes" xml:space="preserve">
          <source>forces JSONP for polling transport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c013477b4d25a6767e5a658a2f666609683ef7" translate="yes" xml:space="preserve">
          <source>forces base 64 encoding for polling transport even when XHR2 responseType is available and WebSocket even if the used standard supports binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce274dc2282a9d7149b33e87559067aa4ef429ac" translate="yes" xml:space="preserve">
          <source>hash of options, indexed by transport name, overriding the common options for the given transport</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be04da5150358c246322b601bb5523c74319610a" translate="yes" xml:space="preserve">
          <source>how long to initially wait before attempting a new reconnection. Affected by +/- &lt;code&gt;randomizationFactor&lt;/code&gt;, for example the default initial delay will be between 500 to 1500ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efffacedd1369bf1664cd419f5d4a554f7b4618" translate="yes" xml:space="preserve">
          <source>how many bytes or characters a message can be, before closing the session (to avoid DoS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="068228c0d8e7f4f83c7f7101b7929569e3479a18" translate="yes" xml:space="preserve">
          <source>how many ms before an uncompleted transport upgrade is cancelled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0723643bdbdbd789e1c9d7741518969202c17f6" translate="yes" xml:space="preserve">
          <source>how many ms before sending a new ping packet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d9c5c70ad62b425fd42b4d7eb6802aa1ca9e73" translate="yes" xml:space="preserve">
          <source>how many ms without a pong packet to consider the connection closed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8552ddc7358927411b081d445c3bcd718eb545c6" translate="yes" xml:space="preserve">
          <source>in the &lt;code&gt;CONNECT&lt;/code&gt; packet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000dafd93c4caf58c123537928f75d1cfe970f92" translate="yes" xml:space="preserve">
          <source>in the query parameters of the HTTP requests (&lt;code&gt;GET /socket.io/?EIO=3&amp;amp;abc=def&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138a3ecb5b285b7fa8ebb503896d2570b310743d" translate="yes" xml:space="preserve">
          <source>io([url][, options])</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf72093e4a753123c821e6d11df19309f4a9bc4c" translate="yes" xml:space="preserve">
          <source>io.protocol</source>
          <target state="translated">io.protocol</target>
        </trans-unit>
        <trans-unit id="cd6d4e6f39e589e14847405c3d5301e307be7896" translate="yes" xml:space="preserve">
          <source>io.set is gone</source>
          <target state="translated">io.set没有了</target>
        </trans-unit>
        <trans-unit id="b69493f71190a91db4bb6864ca22a43990755994" translate="yes" xml:space="preserve">
          <source>io.set() is removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0baa13f5152003f7274be8e20ecb3838648f108b" translate="yes" xml:space="preserve">
          <source>is the short version of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1e490fa52b4fb73164175d49404f2f1a892e76" translate="yes" xml:space="preserve">
          <source>joi</source>
          <target state="translated">joi</target>
        </trans-unit>
        <trans-unit id="f4dd0f9b3c85537cae74dcdc67bdeb0634c78802" translate="yes" xml:space="preserve">
          <source>joining and leaving rooms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c400b33d0e4d6a36b66eb1f8c3067164dc284c7c" translate="yes" xml:space="preserve">
          <source>jsDelivr: &lt;a href=&quot;https://cdn.jsdelivr.net/npm/socket.io-client@3.0.1/dist/socket.io.min.js&quot;&gt;https://cdn.jsdelivr.net/npm/socket.io-client@3.0.1/dist/socket.io.min.js&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939bb46a04c3640c8c427e92b1b557e882e2d2a0" translate="yes" xml:space="preserve">
          <source>local</source>
          <target state="translated">local</target>
        </trans-unit>
        <trans-unit id="42f7b07db92a254d70b2763520ccb302387e6d6e" translate="yes" xml:space="preserve">
          <source>logging</source>
          <target state="translated">logging</target>
        </trans-unit>
        <trans-unit id="6d17c7ef983438bb2b0aad72435637f4f1450c66" translate="yes" xml:space="preserve">
          <source>manager.connect([callback])</source>
          <target state="translated">manager.connect([callback])</target>
        </trans-unit>
        <trans-unit id="70177d425e09ca8de5627da4fe600007077c63a3" translate="yes" xml:space="preserve">
          <source>manager.open([callback])</source>
          <target state="translated">manager.open([callback])</target>
        </trans-unit>
        <trans-unit id="f524282fac79043ca31e87ed63df1a8ee0d9cf6d" translate="yes" xml:space="preserve">
          <source>manager.reconnection([value])</source>
          <target state="translated">manager.reconnection([value])</target>
        </trans-unit>
        <trans-unit id="f4183d63a5e3ae27929f55e3bc61bba00acc60a0" translate="yes" xml:space="preserve">
          <source>manager.reconnectionAttempts([value])</source>
          <target state="translated">manager.reconnectionAttempts([value])</target>
        </trans-unit>
        <trans-unit id="658f2ce24847ebf724697104f8b4f13d56b2ec67" translate="yes" xml:space="preserve">
          <source>manager.reconnectionDelay([value])</source>
          <target state="translated">manager.reconnectionDelay([value])</target>
        </trans-unit>
        <trans-unit id="44c3393edd74174a78762119d666aff6907500e1" translate="yes" xml:space="preserve">
          <source>manager.reconnectionDelayMax([value])</source>
          <target state="translated">manager.reconnectionDelayMax([value])</target>
        </trans-unit>
        <trans-unit id="70b24fda47123d618988bc1b2c6f3e3c282980ea" translate="yes" xml:space="preserve">
          <source>manager.socket(nsp, options)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee8e47db973573267cbd1b2a62277cc1ce3c9ee" translate="yes" xml:space="preserve">
          <source>manager.timeout([value])</source>
          <target state="translated">manager.timeout([value])</target>
        </trans-unit>
        <trans-unit id="356027cd106ca5d7c884131e9a78ecb35599aa16" translate="yes" xml:space="preserve">
          <source>maximum amount of time to wait between reconnections. Each attempt increases the reconnection delay by 2x along with a randomization factor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84e0092169478bbf2a23fa607de4063276fc65e2" translate="yes" xml:space="preserve">
          <source>name of the path that is captured on the server side</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
