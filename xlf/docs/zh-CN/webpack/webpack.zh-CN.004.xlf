<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="webpack">
    <body>
      <group id="webpack">
        <trans-unit id="57e4423e47a0841d4bf4a7e9d23053acc5900453" translate="yes" xml:space="preserve">
          <source>Explicit loaders and params up to the name of the first loader</source>
          <target state="translated">显式加载器和参数,最多只能是第一个加载器的名称。</target>
        </trans-unit>
        <trans-unit id="bd63f632f0d4f47eb50cc885bb5e56a31d561a15" translate="yes" xml:space="preserve">
          <source>Explicit vendor chunk</source>
          <target state="translated">明确的供应商分块</target>
        </trans-unit>
        <trans-unit id="8ccf5e1a2186fac242a46cb41f6dc824f90b2b97" translate="yes" xml:space="preserve">
          <source>Explore the options to get the best result for you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53031b5ce80e37222b11145ca017d86a838c9230" translate="yes" xml:space="preserve">
          <source>Export Classnames in CamelCase</source>
          <target state="translated">用CamelCase导出类名</target>
        </trans-unit>
        <trans-unit id="2b313873cfc3031b1119050fe6948d6fb07bbc3f" translate="yes" xml:space="preserve">
          <source>Export anything as a &lt;code&gt;default&lt;/code&gt; or named export.</source>
          <target state="translated">将任何内容导出为 &lt;code&gt;default&lt;/code&gt; 或命名导出。</target>
        </trans-unit>
        <trans-unit id="e7ad804ffec14d8a38c42e3f5a5dcad62ba1e9ba" translate="yes" xml:space="preserve">
          <source>Export formats</source>
          <target state="translated">出口格式</target>
        </trans-unit>
        <trans-unit id="7e6c56347025df0796cb96cb07e342a18d2e2263" translate="yes" xml:space="preserve">
          <source>Export into HTML files</source>
          <target state="translated">导出为HTML文件</target>
        </trans-unit>
        <trans-unit id="3e5448d2ba9175e3c5ffb8c95f6344a1db77984c" translate="yes" xml:space="preserve">
          <source>Export non-deterministic values (calling webpack twice should result in the same output files)</source>
          <target state="translated">导出非确定值(调用webpack两次应该会导致相同的输出文件)</target>
        </trans-unit>
        <trans-unit id="5443a4591bd6ed6f42ae562d32a3178bd622776e" translate="yes" xml:space="preserve">
          <source>Export only locals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0feb102de069c652c1ff074568da541994fa901" translate="yes" xml:space="preserve">
          <source>Export the given &lt;code&gt;value&lt;/code&gt;. The label can occur before a function declaration or a variable declaration. The function name or variable name is the identifier under which the value is exported.</source>
          <target state="translated">导出给定 &lt;code&gt;value&lt;/code&gt; 。标签可以出现在函数声明或变量声明之前。函数名称或变量名称是在其下导出值的标识符。</target>
        </trans-unit>
        <trans-unit id="c37343fbc2a734ed5d2673a49ae41a53a7d7f024" translate="yes" xml:space="preserve">
          <source>Exporting</source>
          <target state="translated">Exporting</target>
        </trans-unit>
        <trans-unit id="c71ed04382d50e83283b23b9b459be2770eec890" translate="yes" xml:space="preserve">
          <source>Exporting a Function</source>
          <target state="translated">导出函数</target>
        </trans-unit>
        <trans-unit id="05165758db04a4c3667f90819fce0bb66fc95a83" translate="yes" xml:space="preserve">
          <source>Exporting a Promise</source>
          <target state="translated">出口承诺</target>
        </trans-unit>
        <trans-unit id="17a87de3b37a2786896840bacd8eaac8b40280ca" translate="yes" xml:space="preserve">
          <source>Exporting multiple configurations</source>
          <target state="translated">导出多个配置</target>
        </trans-unit>
        <trans-unit id="3692094d4ed3c9420d1d968894f1bdd4f3b9efea" translate="yes" xml:space="preserve">
          <source>Exports HTML as string. HTML is minimized when the compiler demands.</source>
          <target state="translated">以字符串形式输出HTML。当编译器需要时,HTML被最小化。</target>
        </trans-unit>
        <trans-unit id="fd13c85d6be7b15ab54ddc6bb98a0b9748889f10" translate="yes" xml:space="preserve">
          <source>Expose Via Object Assignment</source>
          <target state="translated">通过对象分配暴露</target>
        </trans-unit>
        <trans-unit id="e19d3c834a7d03a59e90d546a26e227c64e7d78e" translate="yes" xml:space="preserve">
          <source>Expose a Variable</source>
          <target state="translated">暴露一个变量</target>
        </trans-unit>
        <trans-unit id="d363113de59f461b578e0fd376c64a9aff9beb16" translate="yes" xml:space="preserve">
          <source>Expose custom values into the &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;loader context&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c79073b5a7df1baceebe763dd532e4501d467bb" translate="yes" xml:space="preserve">
          <source>Expose custom values into the loader context.</source>
          <target state="translated">将自定义值暴露在加载器上下文中。</target>
        </trans-unit>
        <trans-unit id="722807ca5e1b48783fa47dd7448b8378e6b12201" translate="yes" xml:space="preserve">
          <source>Expose the Library</source>
          <target state="translated">曝光图书馆</target>
        </trans-unit>
        <trans-unit id="4067ffdf0f541117affd03d9eee6beab1dc3b929" translate="yes" xml:space="preserve">
          <source>Expose the exports of the entry point as library</source>
          <target state="translated">将入口点的出口以库的形式显示出来。</target>
        </trans-unit>
        <trans-unit id="820fc4cab3e361043d2e31e2af89ba1150959af7" translate="yes" xml:space="preserve">
          <source>Exposing the library as a variable called &lt;code&gt;webpackNumbers&lt;/code&gt;.</source>
          <target state="translated">将库公开为一个名为 &lt;code&gt;webpackNumbers&lt;/code&gt; 的变量。</target>
        </trans-unit>
        <trans-unit id="806e203d5977933ba63f436026b31e7b162da68d" translate="yes" xml:space="preserve">
          <source>Extending Configuration Files</source>
          <target state="translated">扩展配置文件</target>
        </trans-unit>
        <trans-unit id="497464d42606672185b1c3e3d511a15e14c73f25" translate="yes" xml:space="preserve">
          <source>Extending Configuration Files in Symlinked Modules</source>
          <target state="translated">在Symlinked模块中扩展配置文件</target>
        </trans-unit>
        <trans-unit id="a6efd045c8b884914d8ba4900da10374361f860d" translate="yes" xml:space="preserve">
          <source>Extending stats behaviours</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c8930bcb508996b0f2559d73caa82c081b4482" translate="yes" xml:space="preserve">
          <source>Extension with leading &lt;code&gt;.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180bcb449f3e0f4376867872d55215241c4f1cf0" translate="yes" xml:space="preserve">
          <source>External Limitations</source>
          <target state="translated">外部限制</target>
        </trans-unit>
        <trans-unit id="00061876473c2ef7aacb36d87fb930db02b181d6" translate="yes" xml:space="preserve">
          <source>External script can be loaded from any URL when &lt;a href=&quot;#externalstype&quot;&gt;&lt;code&gt;externalsType&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'script'&lt;/code&gt;. The &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag would be removed after the script has been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc64277d68c992d91830d72bb560f5cc1d53aa0a" translate="yes" xml:space="preserve">
          <source>Externalize Lodash</source>
          <target state="translated">外部化Lodash</target>
        </trans-unit>
        <trans-unit id="548bcef531f24042c1657c9c7bd347a1802c9d7a" translate="yes" xml:space="preserve">
          <source>Externals</source>
          <target state="translated">Externals</target>
        </trans-unit>
        <trans-unit id="1add294539dba3473eaa32d2b7d08bdac3ed392d" translate="yes" xml:space="preserve">
          <source>Extra async commons chunk</source>
          <target state="translated">额外的异步共通块</target>
        </trans-unit>
        <trans-unit id="6d84ceaf60a66c278aca37fae32385bf018a47e8" translate="yes" xml:space="preserve">
          <source>Extract</source>
          <target state="translated">Extract</target>
        </trans-unit>
        <trans-unit id="c1d3192026c606b799b1699ea37e45d0c0471c69" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;some&lt;/code&gt; (use &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt; RegExp) comments.</source>
          <target state="translated">提取 &lt;code&gt;all&lt;/code&gt; 或 &lt;code&gt;some&lt;/code&gt; 注释（使用 &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt; RegExp）。</target>
        </trans-unit>
        <trans-unit id="9ecf07d83a61fd449cd71012b768983a2a2b61b2" translate="yes" xml:space="preserve">
          <source>Extract &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;some&lt;/code&gt; (use &lt;code&gt;/^\**!|@preserve|@license|@cc_on/i&lt;/code&gt; RegExp) comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef9338340f0bb44c213803070121eed9af5661c" translate="yes" xml:space="preserve">
          <source>Extract CSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a77834ec57531e67e4f9e781c9bd2027aa4d6f" translate="yes" xml:space="preserve">
          <source>Extract all legal comments (i.e. &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt;) and preserve &lt;code&gt;/@license/i&lt;/code&gt; comments.</source>
          <target state="translated">提取所有法律评论（即 &lt;code&gt;/^\**!|@preserve|@license|@cc_on/&lt;/code&gt; ）并保留 &lt;code&gt;/@license/i&lt;/code&gt; 评论。</target>
        </trans-unit>
        <trans-unit id="92b1f35a5cfb6bbe52a81084ae4e0584a2830f8c" translate="yes" xml:space="preserve">
          <source>Extract all legal comments (i.e. &lt;code&gt;/^\**!|@preserve|@license|@cc_on/i&lt;/code&gt;) and preserve &lt;code&gt;/@license/i&lt;/code&gt; comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93911c813714bd183a79cd47773a2be1141f5eaf" translate="yes" xml:space="preserve">
          <source>Extract common modules shared between chunks</source>
          <target state="translated">提取各块之间共享的通用模块</target>
        </trans-unit>
        <trans-unit id="f9b574f6bd7098b02ae75e0919b666457ced807f" translate="yes" xml:space="preserve">
          <source>Extract from all additional chunks too (by default it extracts only from the initial chunk(s))</source>
          <target state="translated">也从所有附加的块中提取(默认情况下,它只从初始块中提取。</target>
        </trans-unit>
        <trans-unit id="e2d0b8aabd3addb48908a5fcffc8b865e17fba9e" translate="yes" xml:space="preserve">
          <source>Extract text (CSS) from your bundles into a separate file</source>
          <target state="translated">从你的bundles中提取文本(CSS)到一个单独的文件中。</target>
        </trans-unit>
        <trans-unit id="123268be13637fa875d7448da59a2f2ab5eb612e" translate="yes" xml:space="preserve">
          <source>Extract text from a bundle, or bundles, into a separate file.</source>
          <target state="translated">从一个或多个捆绑文件中提取文本到一个单独的文件中。</target>
        </trans-unit>
        <trans-unit id="3deb7e1b34cdb8a1cf16107c7fe170670a0827bc" translate="yes" xml:space="preserve">
          <source>ExtractTextWebpackPlugin</source>
          <target state="translated">ExtractTextWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="51686b26f0f58fbfcd54996cb7b969b98c99c9b1" translate="yes" xml:space="preserve">
          <source>Extracting Boilerplate</source>
          <target state="translated">锅炉板的提取</target>
        </trans-unit>
        <trans-unit id="cc57da2e140b44772e087d17a933ecd0a2d43db2" translate="yes" xml:space="preserve">
          <source>Extracting CSS based on entry</source>
          <target state="translated">根据条目提取CSS</target>
        </trans-unit>
        <trans-unit id="736c1328cfdac78c36047c9e87873aa7af75cde2" translate="yes" xml:space="preserve">
          <source>Extracting Sass or LESS</source>
          <target state="translated">提取Sass或LESS</target>
        </trans-unit>
        <trans-unit id="47ad8a9bcefad1f23d3a93514d426c84867080e6" translate="yes" xml:space="preserve">
          <source>Extracting a main.css</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fcac7899b084e0f5b540913b6cc7722349794bd" translate="yes" xml:space="preserve">
          <source>Extracting all CSS in a single file</source>
          <target state="translated">在一个文件中提取所有CSS</target>
        </trans-unit>
        <trans-unit id="6ea6dec2c2e048e3fcc7e5e44eecd7647d71af19" translate="yes" xml:space="preserve">
          <source>Extracting style sheets</source>
          <target state="translated">提取样式表</target>
        </trans-unit>
        <trans-unit id="b0b67a01087dc1cd3a071cc220da02cdee5391f7" translate="yes" xml:space="preserve">
          <source>Extracting the index.html</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7946b675aa7ea053c5d3cbf02e3a346a1ee88f31" translate="yes" xml:space="preserve">
          <source>Extracts CSS into separate files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879594350de3b223778987ba07bccec048445e4e" translate="yes" xml:space="preserve">
          <source>Extracts given loader options. Optionally, accepts JSON schema as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f0d1b49c07e17b22d11a7f26ca75fa972d8281" translate="yes" xml:space="preserve">
          <source>Extracts source maps from existing source files (from their &lt;code&gt;sourceMappingURL&lt;/code&gt;).</source>
          <target state="translated">从现有源文件（从其 &lt;code&gt;sourceMappingURL&lt;/code&gt; ）中提取源地图。</target>
        </trans-unit>
        <trans-unit id="14ca83e77c59c0a29005d09c39bd0028dff0cc99" translate="yes" xml:space="preserve">
          <source>Fail out on the first error instead of tolerating it. By default webpack will log these errors in red in the terminal, as well as the browser console when using HMR, but continue bundling. To enable it:</source>
          <target state="translated">在第一次出错时失败,而不是容忍它。默认情况下,webpack会将这些错误以红色的形式记录在终端中,当使用HMR时也会记录在浏览器控制台中,但会继续捆绑。要启用它。</target>
        </trans-unit>
        <trans-unit id="6db117877a832f81f2f937c1d157cd3f64b91426" translate="yes" xml:space="preserve">
          <source>Fallbacks should be used to handled these cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26017fc1f4b9afd13ef87c4b93809798f59c5ba0" translate="yes" xml:space="preserve">
          <source>Faster runtime (less code and DOM operations)</source>
          <target state="translated">更快的运行时间(更少的代码和DOM操作)</target>
        </trans-unit>
        <trans-unit id="f2b1f00081dc02d0cadbe84ecbc1e2938cce7ad3" translate="yes" xml:space="preserve">
          <source>Fatal webpack errors (wrong configuration, etc)</source>
          <target state="translated">致命的webpack错误(错误的配置等)</target>
        </trans-unit>
        <trans-unit id="4f5a54627dea26b6876632913ba4f8191aad7605" translate="yes" xml:space="preserve">
          <source>Feature Flags</source>
          <target state="translated">特色旗帜</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="6fc429713fe4ec89855d2607c179c3480baf1eed" translate="yes" xml:space="preserve">
          <source>Features that are not possible to polyfill or transpile should be used carefully as it limits the possible usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387426b88e122c175b24856eb5817e7d755a55c4" translate="yes" xml:space="preserve">
          <source>Feel free to run those scripts and see how the output changes as we continue adding to our &lt;em&gt;production&lt;/em&gt; configuration.</source>
          <target state="translated">随意运行这些脚本，并查看在我们继续添加到&lt;em&gt;生产&lt;/em&gt;配置中时输出如何变化。</target>
        </trans-unit>
        <trans-unit id="8de2cc6f0a24c9bcecd003ac01a17b5d836ad1b2" translate="yes" xml:space="preserve">
          <source>Fetches a module from a compilation by its identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6361b663a3bfe269e61376666548fa2f9bd31d56" translate="yes" xml:space="preserve">
          <source>Fewer style tags (older IE has a limit)</source>
          <target state="translated">更少的样式标签(旧版IE有限制)</target>
        </trans-unit>
        <trans-unit id="22cfb429a6e1f0e2840710d68f2bddcef477db4e" translate="yes" xml:space="preserve">
          <source>Fields from &lt;code&gt;package.json&lt;/code&gt; which are used to provide the internal requests of a package (requests starting with &lt;code&gt;#&lt;/code&gt; are considered internal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20c27bc3130e46c93121f3a711d2c806d9aa41a" translate="yes" xml:space="preserve">
          <source>Fields in package.json that are used for resolving module requests. See &lt;a href=&quot;../guides/package-exports&quot;&gt;package-exports guideline&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1285975b70efee3e5b39a03d2179a452d44a093d" translate="yes" xml:space="preserve">
          <source>Figlet</source>
          <target state="translated">Figlet</target>
        </trans-unit>
        <trans-unit id="ca359a99cceedf18a81f2344a85b886364a08d5c" translate="yes" xml:space="preserve">
          <source>Figure out which exports are used by modules to mangle export names, omit unused exports and generate more efficient code. When it is &lt;code&gt;true&lt;/code&gt;: analyse used exports for each runtime, when it is &lt;code&gt;&quot;global&quot;&lt;/code&gt;: analyse exports globally for all runtimes combined).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2260cf982241e83a6e6abf87b36c88984edf23ab" translate="yes" xml:space="preserve">
          <source>File extensions are required when importing wasm file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e94872e292d06e723a6f721ae4844b8479bcbe" translate="yes" xml:space="preserve">
          <source>File extensions are required when importing, e.g, you should use &lt;code&gt;import './src/App.mjs'&lt;/code&gt; instead of &lt;code&gt;import './src/App'&lt;/code&gt; (you can disable this enforcement with &lt;a href=&quot;../configuration/module#resolvefullyspecified&quot;&gt;&lt;code&gt;Rule.resolve.fullySpecified&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f1bee71df47a63014f001b80f685e7cd2c1381" translate="yes" xml:space="preserve">
          <source>File location and read info</source>
          <target state="translated">文件位置和读取信息</target>
        </trans-unit>
        <trans-unit id="697d9fb8c0dcac7e0a74c60e8dbc3f6a5673fc7d" translate="yes" xml:space="preserve">
          <source>File treated as &lt;code&gt;CSS Module&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac67898be8281eafc9f0f25fcc4b7af708f39682" translate="yes" xml:space="preserve">
          <source>File treated as &lt;code&gt;ICSS&lt;/code&gt;-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8417264f743e544e64508c8186e223f14ee804e8" translate="yes" xml:space="preserve">
          <source>Filename Option as function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff916a510ebc68dec181bb7669e6f066bbc7a506" translate="yes" xml:space="preserve">
          <source>Filename and path, without query or fragment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce6c512ea433a7fc5c8841628e7696cd0ff7f2b" translate="yes" xml:space="preserve">
          <source>Files</source>
          <target state="translated">Files</target>
        </trans-unit>
        <trans-unit id="a8cfe1301941a91828e9dd741d845cc92bbca588" translate="yes" xml:space="preserve">
          <source>Files to &lt;code&gt;exclude&lt;/code&gt;</source>
          <target state="translated">要 &lt;code&gt;exclude&lt;/code&gt; 文件</target>
        </trans-unit>
        <trans-unit id="426129006308e471cd729639a2ed20f4ade0d520" translate="yes" xml:space="preserve">
          <source>Files to &lt;code&gt;include&lt;/code&gt;</source>
          <target state="translated">要 &lt;code&gt;include&lt;/code&gt; 文件</target>
        </trans-unit>
        <trans-unit id="88ad4711650474a843f6b189599efd8811dceeac" translate="yes" xml:space="preserve">
          <source>Files to exclude.</source>
          <target state="translated">要排除的文件。</target>
        </trans-unit>
        <trans-unit id="6fb86f6fdadaf02afe64ed5d96dc2c399fb79d77" translate="yes" xml:space="preserve">
          <source>Files to include.</source>
          <target state="translated">文件包括:</target>
        </trans-unit>
        <trans-unit id="c2229728b40339f4861573c421046144d5602901" translate="yes" xml:space="preserve">
          <source>Filesystem inaccuracies may trigger multiple builds for a single change. So, in the example above, the &lt;code&gt;console.log&lt;/code&gt; statement may fire multiple times for a single modification. Users should expect this behavior and may check &lt;code&gt;stats.hash&lt;/code&gt; to see if the file hash has actually changed.</source>
          <target state="translated">文件系统不正确可能会为单个更改触发多个构建。因此，在上面的示例中，单次修改 &lt;code&gt;console.log&lt;/code&gt; 语句可能会触发多次。用户应该期待这种行为，并可以检查 &lt;code&gt;stats.hash&lt;/code&gt; 来查看文件哈希是否实际更改。</target>
        </trans-unit>
        <trans-unit id="4479eeac566a1d5950e1954286cfeb45680f95bb" translate="yes" xml:space="preserve">
          <source>Final Steps</source>
          <target state="translated">最后步骤</target>
        </trans-unit>
        <trans-unit id="35643267e07b6ba8a7cc7acb8583e11d8b0961a1" translate="yes" xml:space="preserve">
          <source>Finally run &lt;code&gt;webpack&lt;/code&gt; via your preferred method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b984c3a594e03d4e47017ebbf42f89b1aba1d79a" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; can also be set from the &lt;a href=&quot;../configuration/module#module-rules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt; configuration option&lt;/a&gt;.</source>
          <target state="translated">最后，也可以从&lt;a href=&quot;../configuration/module#module-rules&quot;&gt; &lt;code&gt;module.rules&lt;/code&gt; &lt;/a&gt;配置选项设置 &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="803c8194e72d607e0c94cdf07a3275a242a583fb" translate="yes" xml:space="preserve">
          <source>Finally, &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; can also be set from the &lt;a href=&quot;../configuration/module#modulerules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt; configuration option&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2525d85e37ae6cd31bac5a6b7294990ad3c573" translate="yes" xml:space="preserve">
          <source>Finishes compilation and invokes the given callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82dc631b7d6bf3350f27e268967eab3438ed66eb" translate="yes" xml:space="preserve">
          <source>Fired after chunk optimization has completed.</source>
          <target state="translated">在分块优化完成后被解雇。</target>
        </trans-unit>
        <trans-unit id="ab9c4744c4c4d7ad3071195039f5d1ab8a46f9eb" translate="yes" xml:space="preserve">
          <source>Fired after the dependency optimization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc7ec5e434517a77b397df44ca1b8a1dfbb81eb" translate="yes" xml:space="preserve">
          <source>Fired at the beginning of dependency optimization.</source>
          <target state="translated">在依赖性优化开始时触发。</target>
        </trans-unit>
        <trans-unit id="bb02302a65a96c19d50855ad714ab54dd7de9951" translate="yes" xml:space="preserve">
          <source>Fired before chunk &lt;code&gt;id&lt;/code&gt; optimization.</source>
          <target state="translated">在优化块 &lt;code&gt;id&lt;/code&gt; 之前触发。</target>
        </trans-unit>
        <trans-unit id="c1d8bcf58c3d8f04688944f7def3c9492a2e93b9" translate="yes" xml:space="preserve">
          <source>Fired before rebuilding a module.</source>
          <target state="translated">在重建模块之前被解雇。</target>
        </trans-unit>
        <trans-unit id="5aed89b7bcfb95405a50d009874078e5d2e9502d" translate="yes" xml:space="preserve">
          <source>Fired when a compilation begins accepting new modules.</source>
          <target state="translated">当一个编译器开始接受新模块时触发。</target>
        </trans-unit>
        <trans-unit id="cec0babb097d6758189ea86e9410f8087384aa0a" translate="yes" xml:space="preserve">
          <source>Fired when the compilation stops accepting new modules.</source>
          <target state="translated">当编译停止接受新模块时触发。</target>
        </trans-unit>
        <trans-unit id="79e276153519262fda3521a5754b4ba55b0c0262" translate="yes" xml:space="preserve">
          <source>First install the TypeScript compiler and loader by running:</source>
          <target state="translated">首先通过运行TypeScript编译器和加载器来安装。</target>
        </trans-unit>
        <trans-unit id="f845ec5e217d249b96e3572b9f76b2d5a0e8ee80" translate="yes" xml:space="preserve">
          <source>First install the necessary dependencies:</source>
          <target state="translated">首先安装必要的依赖关系。</target>
        </trans-unit>
        <trans-unit id="7e7cf28d814a90cd567ea771390c97bd16c45d83" translate="yes" xml:space="preserve">
          <source>First install the plugin and adjust the &lt;code&gt;webpack.config.js&lt;/code&gt; file:</source>
          <target state="translated">首先安装插件并调整 &lt;code&gt;webpack.config.js&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="3b603e2f1b5bd4ee5397a493835caffe6bec8859" translate="yes" xml:space="preserve">
          <source>First let's create a directory, initialize npm, &lt;a href=&quot;installation#local-installation&quot;&gt;install webpack locally&lt;/a&gt;, and install the &lt;a href=&quot;https://github.com/webpack/webpack-cli&quot;&gt;&lt;code&gt;webpack-cli&lt;/code&gt;&lt;/a&gt; (the tool used to run webpack on the command line):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f0e2eab98ee7d2bfa4e36b3bb5ad4a43dce3c5" translate="yes" xml:space="preserve">
          <source>First let's create a directory, initialize npm, &lt;a href=&quot;installation#local-installation&quot;&gt;install webpack locally&lt;/a&gt;, and install the webpack-cli (the tool used to run webpack on the command line):</source>
          <target state="translated">首先让我们创建一个目录，初始化npm，&lt;a href=&quot;installation#local-installation&quot;&gt;在本地安装webpack&lt;/a&gt;，然后安装webpack-cli（用于在命令行上运行webpack的工具）：</target>
        </trans-unit>
        <trans-unit id="e9c68011e86c1f8f212218a7b9629bdd9bc0200a" translate="yes" xml:space="preserve">
          <source>First let's install both loaders with the following command:</source>
          <target state="translated">首先让我们用下面的命令安装两个加载器。</target>
        </trans-unit>
        <trans-unit id="c11e5dc41880840f3c824e11fa1fb2d12623a287" translate="yes" xml:space="preserve">
          <source>First we'll tweak our directory structure slightly, separating the &quot;source&quot; code (&lt;code&gt;./src&lt;/code&gt;) from our &quot;distribution&quot; code (&lt;code&gt;./dist&lt;/code&gt;). The &quot;source&quot; code is the code that we'll write and edit. The &quot;distribution&quot; code is the minimized and optimized &lt;code&gt;output&lt;/code&gt; of our build process that will eventually be loaded in the browser. Tweak the directory structure as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7aa2754364fd47f495ae0e5db514f076aa84166" translate="yes" xml:space="preserve">
          <source>First we'll tweak our directory structure slightly, separating the &quot;source&quot; code (&lt;code&gt;/src&lt;/code&gt;) from our &quot;distribution&quot; code (&lt;code&gt;/dist&lt;/code&gt;). The &quot;source&quot; code is the code that we'll write and edit. The &quot;distribution&quot; code is the minimized and optimized &lt;code&gt;output&lt;/code&gt; of our build process that will eventually be loaded in the browser:</source>
          <target state="translated">首先，我们将稍微调整目录结构，将&amp;ldquo;源&amp;rdquo;代码（ &lt;code&gt;/src&lt;/code&gt; ）与我们的&amp;ldquo;分发&amp;rdquo;代码（ &lt;code&gt;/dist&lt;/code&gt; ）分开。&amp;ldquo;源&amp;rdquo;代码是我们将编写和编辑的代码。&amp;ldquo;分发&amp;rdquo;代码是构建过程的最小化和优化 &lt;code&gt;output&lt;/code&gt; ，最终将在浏览器中加载该输出：</target>
        </trans-unit>
        <trans-unit id="ca547be96980c80fccd257e9a142306900605cdb" translate="yes" xml:space="preserve">
          <source>First, let's adjust our project a little bit:</source>
          <target state="translated">首先,我们来调整一下我们的项目。</target>
        </trans-unit>
        <trans-unit id="b4d4531e5905c812ac4512c67a4cfa6dec35e54c" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;data&lt;/code&gt; passed to the &lt;code&gt;pitch&lt;/code&gt; method is exposed in the execution phase as well under &lt;code&gt;this.data&lt;/code&gt; and could be useful for capturing and sharing information from earlier in the cycle.</source>
          <target state="translated">首先，传递给 &lt;code&gt;pitch&lt;/code&gt; 方法的 &lt;code&gt;data&lt;/code&gt; 也将在 &lt;code&gt;this.data&lt;/code&gt; 下的执行阶段公开，这对于在周期的早期捕获和共享信息很有用。</target>
        </trans-unit>
        <trans-unit id="584245f03e450961f0ad3c1a61d7cda83e92283a" translate="yes" xml:space="preserve">
          <source>Firstly, you can inline the worker as a blob instead of downloading it as an external script via the &lt;a href=&quot;#inline&quot;&gt;&lt;code&gt;inline&lt;/code&gt;&lt;/a&gt; parameter</source>
          <target state="translated">首先，您可以将工作程序作为Blob内联，而不是通过&lt;a href=&quot;#inline&quot;&gt; &lt;code&gt;inline&lt;/code&gt; &lt;/a&gt;参数将其作为外部脚本下载</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="04f0ec6d786628f609cda429d684d0d5b7ae6154" translate="yes" xml:space="preserve">
          <source>Flag / Alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6551527edd64d92e64047b363c640c11b65112df" translate="yes" xml:space="preserve">
          <source>Flag a dependency as not-update-able. This makes sense when changing exports of this dependency can be handled or handling is not implemented yet. Depending on your HMR management code an update to this dependencies (or unaccepted dependencies of it) usually causes a full-reload of the page.</source>
          <target state="translated">标记一个依赖关系为不可更新。当改变这个依赖关系的出口可以被处理或处理还没有实现时,这是有意义的。根据您的 HMR 管理代码,对该依赖项(或其未接受的依赖项)的更新通常会导致页面的完全重载。</target>
        </trans-unit>
        <trans-unit id="114ebf626420588d5872e607963a966a4730f33c" translate="yes" xml:space="preserve">
          <source>Flag a dependency as not-update-able. This makes sense when changing exports of this dependency can be handled or handling is not implemented yet. Depending on your HMR management code, an update to these dependencies (or unaccepted dependencies of it) usually causes a full-reload of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30934bbebcaf8793fa9262d96b35e00c232b0fd" translate="yes" xml:space="preserve">
          <source>Flag this module as not-update-able. This make sense when this module has inrevertable side-effects, or HMR handling is not implemented for this module yet. Depending on your HMR management code an update to this module (or unaccepted dependencies) usually causes a full-reload of the page.</source>
          <target state="translated">将此模块标记为不可更新。当这个模块有不可逆转的副作用,或者这个模块还没有实现 HMR 处理时,这是有意义的。根据您的 HMR 管理代码,对该模块的更新(或未接受的依赖关系)通常会导致页面的完全重载。</target>
        </trans-unit>
        <trans-unit id="e45f4c1cfa65ee955938a9f17e59379933ef3389" translate="yes" xml:space="preserve">
          <source>Flag this module as not-update-able. This makes sense when this module has irreversible side-effects, or HMR handling is not implemented for this module yet. Depending on your HMR management code, an update to this module (or unaccepted dependencies) usually causes a full-reload of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf4b23a98b0925f5e657315aefc4ab1b9143079" translate="yes" xml:space="preserve">
          <source>FlagIncludedChunksPlugin</source>
          <target state="translated">FlagIncludedChunksPlugin</target>
        </trans-unit>
        <trans-unit id="7d5d9d0124b71e0b6ae72526af2460f0d5c2dda5" translate="yes" xml:space="preserve">
          <source>Flagging modules are ESM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="4dd9d41370acc27e61db8dfd3185c59c57d5d79f" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;assetsSort&lt;/code&gt;, &lt;code&gt;chunksSort&lt;/code&gt; and &lt;code&gt;modulesSort&lt;/code&gt; there are several possible fields that you can sort items by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a4b17d172ca99d4916f4db7fa9874614a1e1d5" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;import { Button } from &quot;@shopify/polaris&quot;;&lt;/code&gt; this has the following implications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f1cfa005d71afcbc462e3a744c789068342e71" translate="yes" xml:space="preserve">
          <source>For a better understanding of the ideas behind module bundlers and how they work under the hood consult these resources:</source>
          <target state="translated">要想更好地了解模块捆绑器背后的理念和它们的工作原理,请参考这些资源。</target>
        </trans-unit>
        <trans-unit id="16772d318e99d9a04a2c73c752ba93b894655408" translate="yes" xml:space="preserve">
          <source>For a better understanding of the ideas behind module bundlers and how they work under the hood, consult these resources:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc5c20809153aa4eb3674984e6265239cecfe8b" translate="yes" xml:space="preserve">
          <source>For a full list, see &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;&lt;strong&gt;the list of loaders&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&quot;../api/loaders&quot;&gt;&lt;strong&gt;write your own&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">有关完整列表，请参见&lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;&lt;strong&gt;加载程序列表&lt;/strong&gt;&lt;/a&gt;或&lt;a href=&quot;../api/loaders&quot;&gt;&lt;strong&gt;编写您自己的&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c53fa1add2ed92b7c6c061470ef0fe314a1db2db" translate="yes" xml:space="preserve">
          <source>For a good error handling, you need to account for these three types of errors:</source>
          <target state="translated">要想做好错误处理,需要对这三类错误进行说明。</target>
        </trans-unit>
        <trans-unit id="69e9a7ca686aa0d593a7bd1e7a04191e2ee1c42d" translate="yes" xml:space="preserve">
          <source>For a high-level introduction to writing plugins, start with &lt;a href=&quot;https://webpack.js.org/contribute/writing-a-plugin&quot;&gt;writing a plugin&lt;/a&gt;.</source>
          <target state="translated">有关编写插件的高级介绍，请先&lt;a href=&quot;https://webpack.js.org/contribute/writing-a-plugin&quot;&gt;编写插件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0c240690fb0bc3e19d7bcee7b6b5c5c3eaebffe7" translate="yes" xml:space="preserve">
          <source>For a single &lt;a href=&quot;entry-context#entry&quot;&gt;&lt;code&gt;entry&lt;/code&gt;&lt;/a&gt; point, this can be a static name.</source>
          <target state="translated">对于单个&lt;a href=&quot;entry-context#entry&quot;&gt; &lt;code&gt;entry&lt;/code&gt; &lt;/a&gt;点，这可以是静态名称。</target>
        </trans-unit>
        <trans-unit id="4ec6e06e644cffbc63772a86002cdaa0236f78ef" translate="yes" xml:space="preserve">
          <source>For all configuration options, please see the &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#options&quot;&gt;plugin documentation&lt;/a&gt;.</source>
          <target state="translated">有关所有配置选项，请参阅&lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin#options&quot;&gt;插件文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b0a1ebcbc4ec7b1cc5f8c899bcd3bcab1fa1ec1" translate="yes" xml:space="preserve">
          <source>For any other target (including &lt;code&gt;node&lt;/code&gt;):</source>
          <target state="translated">对于任何其他目标（包括 &lt;code&gt;node&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="fa88c028e87001ee8cbf0580262c396e0965adc8" translate="yes" xml:space="preserve">
          <source>For asynchronous loaders, &lt;a href=&quot;#thisasync&quot;&gt;&lt;code&gt;this.async&lt;/code&gt;&lt;/a&gt; is used to retrieve the &lt;code&gt;callback&lt;/code&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9282145263a12d82e1ed3db1195337137628c3" translate="yes" xml:space="preserve">
          <source>For asynchronous loaders, &lt;a href=&quot;loaders#this-async&quot;&gt;&lt;code&gt;this.async&lt;/code&gt;&lt;/a&gt; is used to retrieve the &lt;code&gt;callback&lt;/code&gt; function:</source>
          <target state="translated">对于异步加载程序，&lt;a href=&quot;loaders#this-async&quot;&gt; &lt;code&gt;this.async&lt;/code&gt; &lt;/a&gt;用于检索 &lt;code&gt;callback&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="220d57652c6e3141e96033d0eed129608766a7d9" translate="yes" xml:space="preserve">
          <source>For compatibility a &lt;code&gt;query&lt;/code&gt; property is also possible, which is an alias for the &lt;code&gt;options&lt;/code&gt; property. Use the &lt;code&gt;options&lt;/code&gt; property instead.</source>
          <target state="translated">为了兼容性， &lt;code&gt;query&lt;/code&gt; 属性也是可能的，它是 &lt;code&gt;options&lt;/code&gt; 属性的别名。请改用 &lt;code&gt;options&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="fb8c4c4da20d811841bff532533510ebb0cea7ff" translate="yes" xml:space="preserve">
          <source>For compatibility also these properties: &lt;a href=&quot;#rule-options-rule-query&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-loaders&quot;&gt;&lt;code&gt;loaders&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">为了兼容，这些属性还包括：&lt;a href=&quot;#rule-options-rule-query&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#rule-loaders&quot;&gt; &lt;code&gt;loaders&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="11e8c18109367087d9a047bde29609a4a15c0179" translate="yes" xml:space="preserve">
          <source>For compatibility also these properties: &lt;a href=&quot;#ruleoptions--rulequery&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleloaders&quot;&gt;&lt;code&gt;loaders&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b0f2c024c2de81f622f53695ba9fee7811a218" translate="yes" xml:space="preserve">
          <source>For compatibility reasons webpack polyfills the &lt;code&gt;global&lt;/code&gt; variable by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8247035ea133a7adb2b3009d9637484ff10345ee" translate="yes" xml:space="preserve">
          <source>For complex use cases multiple patterns need to be combined by nesting these conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7624e5ce06751457b21d47889dd06ebfba63c8a" translate="yes" xml:space="preserve">
          <source>For custom conditions the following naming schema is recommended:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82962bc6a0e3d0baeb54eec357c66228971a937d" translate="yes" xml:space="preserve">
          <source>For details see &lt;a href=&quot;#output-jsonpfunction&quot;&gt;&lt;code&gt;output.jsonpFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">有关详细信息，请参见&lt;a href=&quot;#output-jsonpfunction&quot;&gt; &lt;code&gt;output.jsonpFunction&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82fcc95ffdf7462089d5b8c8335c47c27a66821c" translate="yes" xml:space="preserve">
          <source>For details see &lt;a href=&quot;#outputchunkloadingglobal&quot;&gt;&lt;code&gt;output.chunkLoadingGlobal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a95278c7d79dc4008521d3f2a619571d809ff05" translate="yes" xml:space="preserve">
          <source>For developers that want to have more control over this functionality, webpack provides a set of options to better fit your needs. If you're changing the configuration, it's a good idea to measure the impact of your changes to ensure there's a real benefit.</source>
          <target state="translated">对于那些想要对这个功能有更多控制的开发者,webpack提供了一组选项来更好地满足你的需求。如果你正在改变配置,最好是衡量你的改变的影响,以确保有一个真正的好处。</target>
        </trans-unit>
        <trans-unit id="572ef11d0b33bdee4843c100b85cf0b7e5a1e02e" translate="yes" xml:space="preserve">
          <source>For each module, the following details are included in the output as applicable:</source>
          <target state="translated">对于每个模块,输出中酌情包括以下细节:</target>
        </trans-unit>
        <trans-unit id="1db4c11438f4b95d634168947935046d53a6a62b" translate="yes" xml:space="preserve">
          <source>For example if we want to install lodash we can run the following command to get the typings for it:</source>
          <target state="translated">例如,如果我们想安装lodash,我们可以运行以下命令来获取它的输入。</target>
        </trans-unit>
        <trans-unit id="85e30f6b9d60ee8acd57f7a463281f17fd234b10" translate="yes" xml:space="preserve">
          <source>For example if you want to enable performance hints in your project you'd use &lt;a href=&quot;../configuration/performance#performancehints&quot;&gt;this&lt;/a&gt; option in configuration, with core flags you can do -</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136303e1d11cca82a7b89467273a19549d170c70" translate="yes" xml:space="preserve">
          <source>For example we have &lt;code&gt;assets/images/image.png?foo=bar#hash&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bdedf0ebdb95e54ec802e466baf404e32bbf1a" translate="yes" xml:space="preserve">
          <source>For example, consider an arbitrary library called &lt;code&gt;upstream&lt;/code&gt; with a &lt;code&gt;package.json&lt;/code&gt; that contains the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5838e77fa48d0f3cdacff621e48c21671c60c13" translate="yes" xml:space="preserve">
          <source>For example, if you don't want any of the plugins they applied:</source>
          <target state="translated">例如,如果你不想要他们应用的任何插件。</target>
        </trans-unit>
        <trans-unit id="89ad1c2c18e0b88c94e326ad4de2f47af1847fe7" translate="yes" xml:space="preserve">
          <source>For example, if you have 2 libraries, with namespaces &lt;code&gt;library1&lt;/code&gt; and &lt;code&gt;library2&lt;/code&gt;, which both have a file &lt;code&gt;./src/index.js&lt;/code&gt; (with potentially different contents), they will expose these files as &lt;code&gt;webpack://library1/./src/index.js&lt;/code&gt; and &lt;code&gt;webpack://library2/./src/index.js&lt;/code&gt;.</source>
          <target state="translated">例如，如果你有2个库，与命名空间 &lt;code&gt;library1&lt;/code&gt; 和 &lt;code&gt;library2&lt;/code&gt; ，这两者有一个文件 &lt;code&gt;./src/index.js&lt;/code&gt; （具有潜在不同的内容），他们将公开这些文件 &lt;code&gt;webpack://library1/./src/index.js&lt;/code&gt; 和 &lt;code&gt;webpack://library2/./src/index.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75351668582b02d6285a3182d6ca1bf719294437" translate="yes" xml:space="preserve">
          <source>For example, if you want to exclude &lt;code&gt;fs-extra&lt;/code&gt; from the output bundle and import it during the runtime instead, you can specify it as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0735eb956ebca642b48ac668aca645c00fc7b8" translate="yes" xml:space="preserve">
          <source>For example, let's imagine we have an entry in &lt;code&gt;./src/index.js&lt;/code&gt;, &lt;code&gt;./src/footer/default.js&lt;/code&gt; and a &lt;code&gt;./src/footer/overridden.js&lt;/code&gt; to demonstrate the module level resolve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1354cdb2732a48beec217a6d7eba166915ac9ade" translate="yes" xml:space="preserve">
          <source>For example, let's say you want to expose jQuery as a global called &lt;code&gt;$&lt;/code&gt;:</source>
          <target state="translated">例如，假设您想将jQuery公开为名为 &lt;code&gt;$&lt;/code&gt; 的全局变量：</target>
        </trans-unit>
        <trans-unit id="23a7d3ecec5657cd69b44811ac0ca1f3638a8867" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;package.json&lt;/code&gt; of &lt;a href=&quot;https://d3js.org/&quot;&gt;D3&lt;/a&gt; contains these fields:</source>
          <target state="translated">例如， &lt;code&gt;package.json&lt;/code&gt; 的&lt;a href=&quot;https://d3js.org/&quot;&gt;D3&lt;/a&gt;包含以下字段：</target>
        </trans-unit>
        <trans-unit id="86cb5550fc2a447139864a2a923a8826ca965a57" translate="yes" xml:space="preserve">
          <source>For example, the dev-server is proxied by nginx, and available on &lt;code&gt;myapp.test&lt;/code&gt;:</source>
          <target state="translated">例如，开发服务器由nginx代理，并在 &lt;code&gt;myapp.test&lt;/code&gt; 上可用：</target>
        </trans-unit>
        <trans-unit id="81c1a0153f63770bc745d6bd8b6ee27ab5b3dc06" translate="yes" xml:space="preserve">
          <source>For example, to change the environment targets passed to &lt;code&gt;@babel/preset-env&lt;/code&gt; based on the webpack target:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924336c3be08516736fd5a3f638e946b88547ec0" translate="yes" xml:space="preserve">
          <source>For example, to include &lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt; from a CDN instead of bundling it:</source>
          <target state="translated">例如，要包含CDN中的&lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt;而不是将其捆绑在一起：</target>
        </trans-unit>
        <trans-unit id="6f6af5fde379a0ca3ad4ebf94e17751f48b901d3" translate="yes" xml:space="preserve">
          <source>For example, to increase the memory limit of Node.js process to 4 GB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1d780ff0f02c7b21754c6dbb38f16b2a1358fe" translate="yes" xml:space="preserve">
          <source>For example, to set the quality option of a responsive-loader above use:</source>
          <target state="translated">例如,要设置上面的响应式加载器的质量选项,使用。</target>
        </trans-unit>
        <trans-unit id="733a23e4abc0a8d4b6ba7ccdba01a9edb871aebb" translate="yes" xml:space="preserve">
          <source>For example, to use Dart Sass, you'd pass:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="678528317cc158c5d0b79e6bf40aa9dc39122b01" translate="yes" xml:space="preserve">
          <source>For example, when the &lt;code&gt;target&lt;/code&gt; is set to &lt;code&gt;&quot;electron&quot;&lt;/code&gt;, webpack includes multiple electron specific variables. For more information on which templates and externals are used, you can refer to webpack's &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsApply.js#L70-L185&quot;&gt;source code&lt;/a&gt;.</source>
          <target state="translated">例如，当 &lt;code&gt;target&lt;/code&gt; 设置为 &lt;code&gt;&quot;electron&quot;&lt;/code&gt; ，webpack包含多个特定于电子的变量。有关使用哪些模板和外部的更多信息，您可以参考webpack的&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsApply.js#L70-L185&quot;&gt;源代码&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="918e3f791c927cfef92771e1720b765f5172ed4e" translate="yes" xml:space="preserve">
          <source>For example, when the &lt;code&gt;target&lt;/code&gt; is set to &lt;code&gt;&quot;electron-main&quot;&lt;/code&gt;, webpack includes multiple electron specific variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ffa513373702a86feaa6440fcad85713560990" translate="yes" xml:space="preserve">
          <source>For example, you can define a new variable in the loader context:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d04cf27bd4be6f7f21f13f220f31e3a32dcf41" translate="yes" xml:space="preserve">
          <source>For example, you can use loaders to tell webpack to load a CSS file or to convert TypeScript to JavaScript. To do this, you would start by installing the loaders you need:</source>
          <target state="translated">例如,你可以使用加载器来告诉webpack加载一个CSS文件或将TypeScript转换为JavaScript。要做到这一点,你可以先安装你需要的加载器。</target>
        </trans-unit>
        <trans-unit id="838d39d110214c27e1cdbaebab2b42f9f3e045c6" translate="yes" xml:space="preserve">
          <source>For example, you may access the asset's content buffer via &lt;code&gt;info.content&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e2a31a2022dcb33c520f4ecb8f0c37259eb1c3" translate="yes" xml:space="preserve">
          <source>For example, your entry looked like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eabe518387f5b3c187616b196e5c11cbbb0121a" translate="yes" xml:space="preserve">
          <source>For example: you can use dynamic entries to get the actual entries from an external source (remote server, file system content or database):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acfc565982752a0938baf7976a9c74b3f4a8e83a" translate="yes" xml:space="preserve">
          <source>For external library code, webpack provides &lt;a href=&quot;../guides/shimming&quot;&gt;shimming options&lt;/a&gt;.</source>
          <target state="translated">对于外部库代码，webpack提供了填充&lt;a href=&quot;../guides/shimming&quot;&gt;选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="51d1e42fced245894ad9fbe439c8baaacb5a0507" translate="yes" xml:space="preserve">
          <source>For fine-grained control over each &lt;code&gt;libraryTarget&lt;/code&gt; comment, pass an object:</source>
          <target state="translated">为了对每个 &lt;code&gt;libraryTarget&lt;/code&gt; 注释进行细粒度控制，请传递一个对象：</target>
        </trans-unit>
        <trans-unit id="e27efa5ffc707fccbc8083788ff642aa6778f963" translate="yes" xml:space="preserve">
          <source>For full library configuration and code please refer to &lt;a href=&quot;https://github.com/kalcifer/webpack-library-example&quot;&gt;webpack-library-example&lt;/a&gt;.</source>
          <target state="translated">有关完整的库配置和代码，请参考&lt;a href=&quot;https://github.com/kalcifer/webpack-library-example&quot;&gt;webpack-library-example&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78cf22e3420bd61e2d01e2ba6bbf2ae087132748" translate="yes" xml:space="preserve">
          <source>For further hints on compatibility issues, check out &lt;a href=&quot;../guides/shimming&quot;&gt;Shimming&lt;/a&gt; of the official docs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9897dade2cf2820967287768b614edc99a77a1e8" translate="yes" xml:space="preserve">
          <source>For further hints on compatibility issues, check out &lt;a href=&quot;http://webpack.github.io/docs/shimming-modules.html&quot;&gt;Shimming Modules&lt;/a&gt; of the official docs.</source>
          <target state="translated">有关兼容性问题的更多提示，请查看官方文档的&lt;a href=&quot;http://webpack.github.io/docs/shimming-modules.html&quot;&gt;Shimming模块&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7fb7adc0f23536c0f5fedb1ffc66a9cc8d1649b" translate="yes" xml:space="preserve">
          <source>For good error handling, you need to account for these three types of errors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7203d58eb1262e411dde32a02b39e84ca6f7bf88" translate="yes" xml:space="preserve">
          <source>For importing the default export of an ES2015 module, you have to specify the default property of module.</source>
          <target state="translated">导入一个ES2015模块的默认导出,需要指定模块的默认属性。</target>
        </trans-unit>
        <trans-unit id="0efc097b04b7fd44aed42642d28aea71debcce57" translate="yes" xml:space="preserve">
          <source>For instance, consider &lt;code&gt;module.js&lt;/code&gt;:</source>
          <target state="translated">例如，考虑 &lt;code&gt;module.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="f9ee0127d8cb25e19d11120026902b69db8c195b" translate="yes" xml:space="preserve">
          <source>For libraries that use several files from a dependency:</source>
          <target state="translated">对于使用一个依赖关系的多个文件的库。</target>
        </trans-unit>
        <trans-unit id="4b9e31327342e38267e644f4cd366f001e7888ee" translate="yes" xml:space="preserve">
          <source>For long term caching use &lt;code&gt;filename: &quot;[contenthash].css&quot;&lt;/code&gt;. Optionally add &lt;code&gt;[name]&lt;/code&gt;.</source>
          <target state="translated">对于长期缓存，请使用 &lt;code&gt;filename: &quot;[contenthash].css&quot;&lt;/code&gt; 。（可选）添加 &lt;code&gt;[name]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56a3a561ace145ac5af72ac07a4a571ee1cb6dfa" translate="yes" xml:space="preserve">
          <source>For more granular control, it is possible to specify exactly what information you want. Please note that all of the options in this object are optional.</source>
          <target state="translated">为了进行更精细的控制,可以准确地指定您想要的信息。请注意,该对象中的所有选项都是可选的。</target>
        </trans-unit>
        <trans-unit id="c4bba2c3f0a47ddacba2cd64ae574544a1616276" translate="yes" xml:space="preserve">
          <source>For more information about getting source maps setup and available options please refer to &lt;a href=&quot;../configuration/devtool&quot;&gt;Devtool configuration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3236952e7ddfe477a162dbdb19da13ef2f15fec5" translate="yes" xml:space="preserve">
          <source>For more information on CSP and &lt;code&gt;nonce&lt;/code&gt; attribute, please refer to &lt;strong&gt;Further Reading&lt;/strong&gt; section at the bottom of this page.</source>
          <target state="translated">有关CSP和 &lt;code&gt;nonce&lt;/code&gt; 属性的更多信息，请参阅本页底部的&amp;ldquo; &lt;strong&gt;进一步阅读&amp;rdquo;&lt;/strong&gt;部分。</target>
        </trans-unit>
        <trans-unit id="d04e06f57ad60a58bbd7337642d9bf746776c1b8" translate="yes" xml:space="preserve">
          <source>For more information on how to use this configuration, please refer to the article on &lt;a href=&quot;../guides/author-libraries&quot;&gt;how to author a library&lt;/a&gt;.</source>
          <target state="translated">有关如何使用此配置的更多信息，请参阅有关&lt;a href=&quot;../guides/author-libraries&quot;&gt;如何编写库&lt;/a&gt;的文章。</target>
        </trans-unit>
        <trans-unit id="895a6618174ad6a74090d51665e8678334705826" translate="yes" xml:space="preserve">
          <source>For more information see &lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/06/15/the-future-of-declaration-files/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参见此&lt;a href=&quot;https://blogs.msdn.microsoft.com/typescript/2016/06/15/the-future-of-declaration-files/&quot;&gt;博客文章&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d3e7badcb395aecbc49029810c774afdbbf3cb0b" translate="yes" xml:space="preserve">
          <source>For more information, please visit the &lt;a href=&quot;https://github.com/shama/webpack-stream&quot;&gt;repository&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请访问&lt;a href=&quot;https://github.com/shama/webpack-stream&quot;&gt;存储库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="760310b94c1a80fc0896dec6de2cce158bcdb2c8" translate="yes" xml:space="preserve">
          <source>For more information, please visit the &lt;a href=&quot;https://github.com/webpack-contrib/grunt-webpack&quot;&gt;repository&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请访问&lt;a href=&quot;https://github.com/webpack-contrib/grunt-webpack&quot;&gt;存储库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="64e050898d4f87c3696dd8ec0461a6d98ab28f33" translate="yes" xml:space="preserve">
          <source>For more information, please visit the &lt;a href=&quot;https://github.com/webpack-contrib/karma-webpack&quot;&gt;repository&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请访问&lt;a href=&quot;https://github.com/webpack-contrib/karma-webpack&quot;&gt;存储库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b3f514d5b005df4310892576af4648ba658297e" translate="yes" xml:space="preserve">
          <source>For more information, please visit the &lt;a href=&quot;https://github.com/zinserjan/mocha-webpack&quot;&gt;repository&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请访问&lt;a href=&quot;https://github.com/zinserjan/mocha-webpack&quot;&gt;存储库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b9a85b52ac416b997fd0dff50a1a7885a1c04c8" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;stats&quot;&gt;&lt;strong&gt;stats documentation&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">有关更多信息，请参阅&lt;a href=&quot;stats&quot;&gt;&lt;strong&gt;stats文档&lt;/strong&gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f76eef7e0117ad0717e3fc52109e5d79be63e187" translate="yes" xml:space="preserve">
          <source>For more options and information, see the &lt;a href=&quot;https://github.com/bripkens/connect-history-api-fallback&quot;&gt;connect-history-api-fallback&lt;/a&gt; documentation.</source>
          <target state="translated">有关更多选项和信息，请参阅&lt;a href=&quot;https://github.com/bripkens/connect-history-api-fallback&quot;&gt;connect-history-api-fallback&lt;/a&gt;文档。</target>
        </trans-unit>
        <trans-unit id="d2f674b123a7233ec4fa637805fca776c8513288" translate="yes" xml:space="preserve">
          <source>For more third-party loaders, see the list from &lt;a href=&quot;https://github.com/webpack-contrib/awesome-webpack#loaders&quot;&gt;awesome-webpack&lt;/a&gt;.</source>
          <target state="translated">有关更多第三方加载程序，请参阅&lt;a href=&quot;https://github.com/webpack-contrib/awesome-webpack#loaders&quot;&gt;awesome-webpack中&lt;/a&gt;的列表。</target>
        </trans-unit>
        <trans-unit id="cb7d2e7db4aa1e93db6a75ac7a98ec24068f5971" translate="yes" xml:space="preserve">
          <source>For more third-party plugins, see the list from &lt;a href=&quot;https://github.com/webpack-contrib/awesome-webpack#webpack-plugins&quot;&gt;awesome-webpack&lt;/a&gt;.</source>
          <target state="translated">有关更多第三方插件，请参阅&lt;a href=&quot;https://github.com/webpack-contrib/awesome-webpack#webpack-plugins&quot;&gt;awesome-webpack中&lt;/a&gt;的列表。</target>
        </trans-unit>
        <trans-unit id="599089abc194c5d4768df940de433ddc09ef0cd4" translate="yes" xml:space="preserve">
          <source>For production builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4578d63bf33346856deed41170e70b40f29518a" translate="yes" xml:space="preserve">
          <source>For production builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on. This can be achieved by using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; to extract the CSS when running in production mode.</source>
          <target state="translated">对于生产版本，建议稍后从软件包中提取CSS，以便以后可以使用CSS / JS资源的并行加载。这可以通过在生产模式下运行时使用&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt;提取CSS 来实现。</target>
        </trans-unit>
        <trans-unit id="39e5c6933223ab082e9e9d0c3d557851e16ca2d6" translate="yes" xml:space="preserve">
          <source>For projects where css ordering has been mitigated through consistent use of scoping or naming conventions, the css order warnings can be disabled by setting the ignoreOrder flag to true for the plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b4bb89ca0fa8c44c49cd52426bf7ce160e01d4" translate="yes" xml:space="preserve">
          <source>For proper usage and easy distribution of this configuration, webpack can be configured with &lt;code&gt;webpack.config.js&lt;/code&gt;. Any parameters sent to the CLI will map to a corresponding parameter in the config file.</source>
          <target state="translated">为了正确使用此配置并使其易于分发，可以使用 &lt;code&gt;webpack.config.js&lt;/code&gt; 配置webpack。发送到CLI的所有参数都将映射到配置文件中的相应参数。</target>
        </trans-unit>
        <trans-unit id="8ed459c84ebd19dbbc274927b8957b1b9a7e0639" translate="yes" xml:space="preserve">
          <source>For proper usage and easy distribution of this configuration, webpack can be configured with &lt;code&gt;webpack.config.js&lt;/code&gt;. Any parameters sent to the CLI will map to a corresponding parameter in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d07741f751074c25e3082e8444a9efd3eadf952b" translate="yes" xml:space="preserve">
          <source>For simplicity, this guide stems from the examples in &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt;. Please make sure you are familiar with the setup there before moving on.</source>
          <target state="translated">为简单起见，本指南源于&amp;ldquo; &lt;a href=&quot;getting-started&quot;&gt;入门&amp;rdquo;中&lt;/a&gt;的示例。在继续之前，请确保您熟悉那里的设置。</target>
        </trans-unit>
        <trans-unit id="faabcd38a8709eb7fd68e43284fea3704676e52e" translate="yes" xml:space="preserve">
          <source>For some systems, watching many file systems can result in a lot of CPU or memory usage. It is possible to exclude a huge folder like &lt;code&gt;node_modules&lt;/code&gt;:</source>
          <target state="translated">对于某些系统，监视许多文件系统可能会导致大量CPU或内存使用。可以排除一个巨大的文件夹，例如 &lt;code&gt;node_modules&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="835b704de4e2bdde665bca16d657156cf4ad01ea" translate="yes" xml:space="preserve">
          <source>For some systems, watching many files can result in a lot of CPU or memory usage. It is possible to exclude a huge folder like &lt;code&gt;node_modules&lt;/code&gt; using a regular expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26db0a36f085d1722bb1b99b8c542931e58979f1" translate="yes" xml:space="preserve">
          <source>For the description of hook types, see &lt;a href=&quot;https://github.com/webpack/tapable#hook-types&quot;&gt;the Tapable docs&lt;/a&gt;.</source>
          <target state="translated">有关挂钩类型的描述，请参见&lt;a href=&quot;https://github.com/webpack/tapable#hook-types&quot;&gt;Tapable docs&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6dd5aabca7fef8eb9cd4021eac970170fcada241" translate="yes" xml:space="preserve">
          <source>For the description of hook types, see &lt;a href=&quot;https://github.com/webpack/tapable#tapable&quot;&gt;the Tapable docs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2aa3c748aa845d77d182a6d4a95f018db234b91" translate="yes" xml:space="preserve">
          <source>For the following configuration of &lt;a href=&quot;../configuration/module#ruleuse&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd71ac5d59d8ab2256d6ae4785eeab9cc228dca" translate="yes" xml:space="preserve">
          <source>For the module system runtime, additional code is emitted to track module &lt;code&gt;parents&lt;/code&gt; and &lt;code&gt;children&lt;/code&gt;. On the management side, the runtime supports two methods: &lt;code&gt;check&lt;/code&gt; and &lt;code&gt;apply&lt;/code&gt;.</source>
          <target state="translated">对于模块系统运行时，将发出附加代码以跟踪模块的 &lt;code&gt;parents&lt;/code&gt; 和 &lt;code&gt;children&lt;/code&gt; 。在管理方面，运行时支持两种方法： &lt;code&gt;check&lt;/code&gt; 和 &lt;code&gt;apply&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41c20a41c1473adb85307800627231b0f0140335" translate="yes" xml:space="preserve">
          <source>For the next guides we won't be using all the different assets we've used in this guide, so let's do some cleanup so we're prepared for the next piece of the guides &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt;:</source>
          <target state="translated">对于下一个指南，我们将不会使用本指南中使用的所有不同资产，因此让我们进行一些清理，以便为下一指南&amp;ldquo; &lt;a href=&quot;output-management&quot;&gt;输出管理&amp;rdquo;&lt;/a&gt;做好准备：</target>
        </trans-unit>
        <trans-unit id="c9f9cba9e95a5fde1fe3aa458e4c7cc16a8d786b" translate="yes" xml:space="preserve">
          <source>For the scaffolding instance to run, you need to write your configuration to a &lt;code&gt;.yo-rc.json&lt;/code&gt; file. This could be done using one of the lifecycles in the yeoman generator, such as the &lt;code&gt;writing&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317c7e072d68d24707a43d33a6d5f58243ad6e80" translate="yes" xml:space="preserve">
          <source>For this configuration:</source>
          <target state="translated">对于这个配置。</target>
        </trans-unit>
        <trans-unit id="f5515fcfda9c0c050d49bcfaf01676789803dd19" translate="yes" xml:space="preserve">
          <source>For this guide, let's use the &lt;code&gt;inline-source-map&lt;/code&gt; option, which is good for illustrative purposes (though not for production):</source>
          <target state="translated">对于本指南，让我们使用 &lt;code&gt;inline-source-map&lt;/code&gt; 选项，该选项可用于说明目的（尽管不适用于生产）：</target>
        </trans-unit>
        <trans-unit id="12c1241a8c3e3033a62a8ade78fe757c748682e0" translate="yes" xml:space="preserve">
          <source>For those using Grunt, we recommend the &lt;a href=&quot;https://www.npmjs.com/package/grunt-webpack&quot;&gt;&lt;code&gt;grunt-webpack&lt;/code&gt;&lt;/a&gt; package. With &lt;code&gt;grunt-webpack&lt;/code&gt; you can run webpack or &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; as a task, get access to stats within &lt;a href=&quot;https://gruntjs.com/api/grunt.template&quot;&gt;template tags&lt;/a&gt;, split development and production configurations and more. Start by installing &lt;code&gt;grunt-webpack&lt;/code&gt; as well as &lt;code&gt;webpack&lt;/code&gt; itself if you haven't already:</source>
          <target state="translated">对于使用Grunt的用户，我们建议使用&lt;a href=&quot;https://www.npmjs.com/package/grunt-webpack&quot;&gt; &lt;code&gt;grunt-webpack&lt;/code&gt; &lt;/a&gt;软件包。使用 &lt;code&gt;grunt-webpack&lt;/code&gt; ,您可以将webpack或&lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;作为任务运行，可以访问&lt;a href=&quot;https://gruntjs.com/api/grunt.template&quot;&gt;模板标签中的&lt;/a&gt;统计信息，拆分开发和生产配置等。首先安装 &lt;code&gt;grunt-webpack&lt;/code&gt; 以及 &lt;code&gt;webpack&lt;/code&gt; 本身（如果尚未安装）：</target>
        </trans-unit>
        <trans-unit id="2a4510e3deee83c26f734c87058488af0f5e1e48" translate="yes" xml:space="preserve">
          <source>For urls that start with a &lt;code&gt;/&lt;/code&gt;, the default behavior is to not translate them. If a &lt;code&gt;root&lt;/code&gt; query parameter is set, however, it will be prepended to the url and then translated.</source>
          <target state="translated">对于以 &lt;code&gt;/&lt;/code&gt; 开头的网址，默认行为是不进行翻译。但是，如果设置了 &lt;code&gt;root&lt;/code&gt; 查询参数，它将被放在URL之前，然后进行翻译。</target>
        </trans-unit>
        <trans-unit id="bd82e9e6ccdd43adaf52e1586605314b3ab3407a" translate="yes" xml:space="preserve">
          <source>For using Literate CoffeeScript you should setup:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6b2f296a264397130adc13660a9295a5e98d58a" translate="yes" xml:space="preserve">
          <source>For webpack 3 support, see &lt;a href=&quot;https://github.com/webpack-contrib/closure-webpack-plugin/tree/webpack-3&quot;&gt;https://github.com/webpack-contrib/closure-webpack-plugin/tree/webpack-3&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c33b8e0597956d13bd872c18b5e4812330a1853e" translate="yes" xml:space="preserve">
          <source>For webpack-command:</source>
          <target state="translated">对于webpack命令。</target>
        </trans-unit>
        <trans-unit id="d326f461878bf58b89ce06fed8f71f001eb74030" translate="yes" xml:space="preserve">
          <source>For webpack-dev-server, this property needs to be in the &lt;a href=&quot;dev-server#devserverstats-&quot;&gt;&lt;code&gt;devServer&lt;/code&gt; configuration object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511109206e9408aadf4ee8e44278db56b180d7d2" translate="yes" xml:space="preserve">
          <source>For webpack-dev-server, this property needs to be in the &lt;code&gt;devServer&lt;/code&gt; object.</source>
          <target state="translated">对于webpack-dev-server，此属性必须位于 &lt;code&gt;devServer&lt;/code&gt; 对象中。</target>
        </trans-unit>
        <trans-unit id="aa93931191cd7d8e17d63d38c31201085f2e92fc" translate="yes" xml:space="preserve">
          <source>For webpack-serve:</source>
          <target state="translated">对于webpack-serve。</target>
        </trans-unit>
        <trans-unit id="9273e4b7bcfa18d9f7463f261345960ebcfc63f8" translate="yes" xml:space="preserve">
          <source>For widespread use of the library, we would like it to be compatible in different environments, i.e. CommonJS, AMD, Node.js and as a global variable. To make your library available for consumption, add the &lt;code&gt;library&lt;/code&gt; property inside &lt;code&gt;output&lt;/code&gt;:</source>
          <target state="translated">为了广泛使用该库，我们希望它在不同的环境中兼容，例如CommonJS，AMD，Node.js并作为全局变量。为了使您的库可供使用，请在 &lt;code&gt;output&lt;/code&gt; 添加 &lt;code&gt;library&lt;/code&gt; 属性：</target>
        </trans-unit>
        <trans-unit id="e7b7f194d3bdede0b2cf8b834ba3dac6393d163b" translate="yes" xml:space="preserve">
          <source>Format of generated exports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2adf269b0449677fdc4a353f7ea5e1d6ecce70c3" translate="yes" xml:space="preserve">
          <source>Format of generated exports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4ef15cc618567275ba3935ac79605cc577f0df" translate="yes" xml:space="preserve">
          <source>Format of generated imports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9360cf5c705a321c6ee75f16c29c937f2493cf14" translate="yes" xml:space="preserve">
          <source>Fragment with leading &lt;code&gt;#&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af39dd055c3ef8226fbe929d048cafb094dc8a51" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">Frameworks</target>
        </trans-unit>
        <trans-unit id="9cd4978771c0e0cc4a44b34bdee7734e0f8d64a4" translate="yes" xml:space="preserve">
          <source>From CoffeeScript 2 documentation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a7ccd9177991b4bb80c50f67755ebc9f0aaeed" translate="yes" xml:space="preserve">
          <source>From is a Dir</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adab13990fbe6b69bcce7e1cfd7becb1da28cb0f" translate="yes" xml:space="preserve">
          <source>From is a File</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16c8b71fa14946201c5945c1e202a78ae10ca6a" translate="yes" xml:space="preserve">
          <source>From is a Glob</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c9c1af5a6f495b0e8cc1143440d8c923e8122d" translate="yes" xml:space="preserve">
          <source>From opening a bug report to creating a pull request: &lt;strong&gt;every contribution is appreciated and welcome&lt;/strong&gt;. If you're planing to implement a new feature or change the api please create an issue first. This way we can ensure that your precious work is not in vain.</source>
          <target state="translated">从打开错误报告到创建请求请求：&lt;strong&gt;感激和欢迎每一个贡献&lt;/strong&gt;。如果您打算实施新功能或更改api，请先创建一个问题。这样，我们可以确保您的宝贵工作不会白费。</target>
        </trans-unit>
        <trans-unit id="8f616ce9ad842400effef399638c814e05690bcd" translate="yes" xml:space="preserve">
          <source>From opening a bug report to creating a pull request: &lt;strong&gt;every contribution is appreciated and welcome&lt;/strong&gt;. If you're planning to implement a new feature or change the api please create an issue first. This way we can ensure that your precious work is not in vain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa24113e518e04086d8050adf28d66ba9655862" translate="yes" xml:space="preserve">
          <source>Full information about placeholders you can find &lt;a href=&quot;https://github.com/webpack/loader-utils#interpolatename&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aca14fe504f81ebc3842b7902159223ee607b34" translate="yes" xml:space="preserve">
          <source>Fully dynamic statements, such as &lt;code&gt;import(foo)&lt;/code&gt;, &lt;strong&gt;will fail&lt;/strong&gt; because webpack requires at least some file location information. This is because &lt;code&gt;foo&lt;/code&gt; could potentially be any path to any file in your system or project. The &lt;code&gt;import()&lt;/code&gt; must contain at least some information about where the module is located, so bundling can be limited to a specific directory or set of files.</source>
          <target state="translated">全动态语句，如 &lt;code&gt;import(foo)&lt;/code&gt; ，&lt;strong&gt;将失败，&lt;/strong&gt;因为的WebPack至少需要一些文件的位置信息。这是因为 &lt;code&gt;foo&lt;/code&gt; 可能是系统或项目中任何文件的任何路径。所述 &lt;code&gt;import()&lt;/code&gt; 必须包含在模块位于至少一些信息，所以捆绑可限定于特定的目录或文件的集合。</target>
        </trans-unit>
        <trans-unit id="6bc0a35d4795d9b8d4c3a55a337eae2707309b45" translate="yes" xml:space="preserve">
          <source>Function or Promise that modifies file contents before copying</source>
          <target state="translated">在复制前修改文件内容的函数或承诺。</target>
        </trans-unit>
        <trans-unit id="8c3d3650248374e22dae36ea24fed3e7f2834e96" translate="yes" xml:space="preserve">
          <source>Function-Config Parameters</source>
          <target state="translated">功能-配置参数</target>
        </trans-unit>
        <trans-unit id="b4f7440917f92627acb31305e33864f678b72a2c" translate="yes" xml:space="preserve">
          <source>FunctionModulePlugin</source>
          <target state="translated">FunctionModulePlugin</target>
        </trans-unit>
        <trans-unit id="7e04cb07bda5c67ca189c527f3456f66f176f5a3" translate="yes" xml:space="preserve">
          <source>Further Optimizations</source>
          <target state="translated">进一步优化</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">进一步阅读</target>
        </trans-unit>
        <trans-unit id="779353a95ed3971a5e95d99c84766a154bcb40ce" translate="yes" xml:space="preserve">
          <source>Further expansion for other popular target values</source>
          <target state="translated">进一步扩大其他热门目标值</target>
        </trans-unit>
        <trans-unit id="9239ee2cda84eca4c3440e2a7b50148af67da3d4" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">General</target>
        </trans-unit>
        <trans-unit id="439ecf1b4a1b110fea3463700ccbb1496c22ec93" translate="yes" xml:space="preserve">
          <source>General asset type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3421f52fe595822cbdf2b2c3bed8bc675a271401" translate="yes" xml:space="preserve">
          <source>General purpose hook that is called for every parsed statement in a code fragment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c16407b5f55c64ebbcb4529ce63733b1170477" translate="yes" xml:space="preserve">
          <source>General purpose hook that is called when parsing statements in a code fragment.</source>
          <target state="translated">当解析代码片段中的语句时被调用的通用钩子。</target>
        </trans-unit>
        <trans-unit id="836479db93080fbe6804e74cbd97372cf3edc6c9" translate="yes" xml:space="preserve">
          <source>General syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267edaccd9dfd34ee233d2040cca1705a18a8234" translate="yes" xml:space="preserve">
          <source>Generate Chrome profile file which includes timings of plugins execution. Outputs &lt;code&gt;events.json&lt;/code&gt; file by default. It is possible to provide custom file path using &lt;code&gt;outputPath&lt;/code&gt; option.</source>
          <target state="translated">生成包含插件执行时间的Chrome配置文件。默认情况下输出 &lt;code&gt;events.json&lt;/code&gt; 文件。可以使用 &lt;code&gt;outputPath&lt;/code&gt; 选项提供自定义文件路径。</target>
        </trans-unit>
        <trans-unit id="b25535dfa281f8ff604ac5874d3d369127253b68" translate="yes" xml:space="preserve">
          <source>Generate an extra chunk, which contains common modules shared between entry points.</source>
          <target state="translated">生成一个额外的块,其中包含入口点之间共享的共同模块。</target>
        </trans-unit>
        <trans-unit id="2e5937364709991272132865ae71abeededd4207" translate="yes" xml:space="preserve">
          <source>Generate compact code</source>
          <target state="translated">生成紧凑的代码</target>
        </trans-unit>
        <trans-unit id="c3e5abeee44279be3f7356a7cdff35d5c817ac85" translate="yes" xml:space="preserve">
          <source>Generate output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09af1816fa4404088921403a3a4ec4b34f14628e" translate="yes" xml:space="preserve">
          <source>Generate unique an output report</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3d23beca0414fc368f0d72c3498bb9b340ac79" translate="yes" xml:space="preserve">
          <source>Generates a &lt;code&gt;require&lt;/code&gt; function that is not parsed by webpack. Can be used to do cool stuff with a global require function if available.</source>
          <target state="translated">生成webpack不会解析的 &lt;code&gt;require&lt;/code&gt; 函数。如果可用的话，可以用于具有全局需求功能的很酷的东西。</target>
        </trans-unit>
        <trans-unit id="bd2cb051773a703fdbabd8c09f218722870e6d61" translate="yes" xml:space="preserve">
          <source>Get Started</source>
          <target state="translated">开始吧</target>
        </trans-unit>
        <trans-unit id="40c0a9e8fe5bb818000a38e6034f00a4e23928c2" translate="yes" xml:space="preserve">
          <source>Get access to the abstract syntax tree (AST) of a code fragment</source>
          <target state="translated">获取对代码片段的抽象语法树(AST)的访问。</target>
        </trans-unit>
        <trans-unit id="530c1d1df48e4bd85402cf11677c65636526a151" translate="yes" xml:space="preserve">
          <source>Get current version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">入门</target>
        </trans-unit>
        <trans-unit id="84b2ebe1fa32b1400265ee97855d671b85abdf8c" translate="yes" xml:space="preserve">
          <source>Given Babel's &lt;code&gt;PartialConfig&lt;/code&gt; object, return the &lt;code&gt;options&lt;/code&gt; object that should be passed to &lt;code&gt;babel.transform&lt;/code&gt;.</source>
          <target state="translated">给定Babel的 &lt;code&gt;PartialConfig&lt;/code&gt; 对象，返回应该传递给 &lt;code&gt;babel.transform&lt;/code&gt; 的 &lt;code&gt;options&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="064d9270c9c0e2d5b1900fd2192142765c68e65b" translate="yes" xml:space="preserve">
          <source>Given Babel's result object, allow loaders to make additional tweaks to it.</source>
          <target state="translated">给定Babel的结果对象,允许加载器对其进行额外的调整。</target>
        </trans-unit>
        <trans-unit id="ff939cc0ef3ffab12f0cc0e0a59d5dee565dd204" translate="yes" xml:space="preserve">
          <source>Given an asset is created that is over 250kb:</source>
          <target state="translated">鉴于创建了一个超过250kb的资产。</target>
        </trans-unit>
        <trans-unit id="52313d5601981377b9e94081eb626a55c4145d49" translate="yes" xml:space="preserve">
          <source>Given it's not particularly fun to run a local copy of webpack from the CLI, we can set up a little shortcut. Let's adjust our &lt;em&gt;package.json&lt;/em&gt; by adding an &lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt;npm script&lt;/a&gt;:</source>
          <target state="translated">鉴于从CLI运行webpack的本地副本并不是特别有趣，因此我们可以设置一些快捷方式。让我们通过添加一个&lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt;npm脚本来&lt;/a&gt;调整&lt;em&gt;package.json&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="ff8a077fda7fb23c426d98f1e43a017fd9146a07" translate="yes" xml:space="preserve">
          <source>Given the following example this require call is used: In &lt;code&gt;/abc/file.js&lt;/code&gt;:</source>
          <target state="translated">给定以下示例，使用此require调用：在 &lt;code&gt;/abc/file.js&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="b6c04d8a0a7758046b027d98824e90c3131f7ec0" translate="yes" xml:space="preserve">
          <source>Given the following example, this require call is used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de72038d4b5ad14eb52c0ecb643c21057d3e0510" translate="yes" xml:space="preserve">
          <source>Given the loader's options, split custom options out of &lt;code&gt;babel-loader&lt;/code&gt;'s options.</source>
          <target state="translated">给定装载程序的选项后，将自定义选项从 &lt;code&gt;babel-loader&lt;/code&gt; loader的选项中分离出来。</target>
        </trans-unit>
        <trans-unit id="3af4a8e13463e1165de4a6589cdd9fc07d708cd4" translate="yes" xml:space="preserve">
          <source>Given you have this file &lt;code&gt;example.js&lt;/code&gt;</source>
          <target state="translated">假设您有这个文件 &lt;code&gt;example.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="39ae791376ed2af711933f540925e5251b73dfcb" translate="yes" xml:space="preserve">
          <source>Given you have this file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed47c24180472bcf3bc06bce7231e14a62c8f320" translate="yes" xml:space="preserve">
          <source>Glob or path from where we сopy files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac0abe927e35052819250fc86af9e5e1991523e" translate="yes" xml:space="preserve">
          <source>Glob or path from where we сopy files. Globs accept &lt;a href=&quot;https://github.com/mrmlnc/fast-glob#pattern-syntax&quot;&gt;fast-glob pattern-syntax&lt;/a&gt;. Glob can only be a &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501c99a124322f7b0cea416e47fca960a9e40836" translate="yes" xml:space="preserve">
          <source>Global Assets</source>
          <target state="translated">全球资产</target>
        </trans-unit>
        <trans-unit id="90a9850b6559af58556292d4779e0b6de4467981" translate="yes" xml:space="preserve">
          <source>Global Exports</source>
          <target state="translated">全球出口</target>
        </trans-unit>
        <trans-unit id="2a102f27f850350772f2e44ae41ae0c25df0de90" translate="yes" xml:space="preserve">
          <source>Global Installation</source>
          <target state="translated">全球安装</target>
        </trans-unit>
        <trans-unit id="51c71fb227428a199ad880c7f73f4dc02ad34ae6" translate="yes" xml:space="preserve">
          <source>Global variable when included through &lt;code&gt;script&lt;/code&gt; tag.</source>
          <target state="translated">通过 &lt;code&gt;script&lt;/code&gt; 标记包含的全局变量。</target>
        </trans-unit>
        <trans-unit id="95a8da0a3d2b63a2e6803b00a56d1544f59bbb9a" translate="yes" xml:space="preserve">
          <source>Globs accept &lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;minimatch options&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/isaacs/minimatch&quot;&gt;地球仪&lt;/a&gt;接受minimatch选项</target>
        </trans-unit>
        <trans-unit id="bb329abd042a15a2d2a78ee9c7d36d13496c704c" translate="yes" xml:space="preserve">
          <source>Globs to ignore for this pattern</source>
          <target state="translated">忽略此模式的Globs</target>
        </trans-unit>
        <trans-unit id="b99f921a818c45aa1b8368166af16bfc30e29cb1" translate="yes" xml:space="preserve">
          <source>Go to Chrome, open DevTools, and go to the &lt;code&gt;Performance&lt;/code&gt; tab (formerly &lt;code&gt;Timeline&lt;/code&gt;).</source>
          <target state="translated">转到Chrome，打开DevTools，然后转到&amp;ldquo; &lt;code&gt;Performance&lt;/code&gt; 标签（以前称为&amp;ldquo; &lt;code&gt;Timeline&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0954c7435dbfd382732840badd4d1afd6a8cfbdf" translate="yes" xml:space="preserve">
          <source>Good loaders for requiring your assets are the &lt;a href=&quot;file-loader&quot;&gt;file-loader&lt;/a&gt; and the &lt;a href=&quot;url-loader&quot;&gt;url-loader&lt;/a&gt; which you should specify in your config (see &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#assets&quot;&gt;below&lt;/a&gt;).</source>
          <target state="translated">要求资产的良好加载&lt;a href=&quot;url-loader&quot;&gt;器&lt;/a&gt;是应在配置中指定的&lt;a href=&quot;file-loader&quot;&gt;文件加载器&lt;/a&gt;和url加载器（请参见&lt;a href=&quot;https://github.com/webpack-contrib/css-loader#assets&quot;&gt;下文&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="000eb225364983805facb15a740de1dfd422fd39" translate="yes" xml:space="preserve">
          <source>Gotchas</source>
          <target state="translated">Gotchas</target>
        </trans-unit>
        <trans-unit id="c6981ea7b41b4e13bc33c49df856e07c4ced2efc" translate="yes" xml:space="preserve">
          <source>Granular Shimming</source>
          <target state="translated">粒状微调</target>
        </trans-unit>
        <trans-unit id="c06ca0601da1369de3d0247e6e4f8b7bbe8e4bfd" translate="yes" xml:space="preserve">
          <source>Grunt</source>
          <target state="translated">Grunt</target>
        </trans-unit>
        <trans-unit id="141d1d74d8a6b3e7a7f1418ef539a53ce746ef34" translate="yes" xml:space="preserve">
          <source>Guidelines</source>
          <target state="translated">Guidelines</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="584874506ed78c16764b272c293130eb3c227f02" translate="yes" xml:space="preserve">
          <source>Guides - Hot Module Replacement</source>
          <target state="translated">指南-热模块更换</target>
        </trans-unit>
        <trans-unit id="5a6238801e2733bcdc7249e97a255df97e530fc4" translate="yes" xml:space="preserve">
          <source>Gulp</source>
          <target state="translated">Gulp</target>
        </trans-unit>
        <trans-unit id="162cda8d5696ebeaa3195028438031d0b7b1d8ac" translate="yes" xml:space="preserve">
          <source>Gulp is also a fairly straightforward integration with the help of the &lt;a href=&quot;https://github.com/shama/webpack-stream&quot;&gt;&lt;code&gt;webpack-stream&lt;/code&gt;&lt;/a&gt; package (a.k.a. &lt;code&gt;gulp-webpack&lt;/code&gt;). In this case, it is unnecessary to install &lt;code&gt;webpack&lt;/code&gt; separately as it is a direct dependency of &lt;code&gt;webpack-stream&lt;/code&gt;:</source>
          <target state="translated">在&lt;a href=&quot;https://github.com/shama/webpack-stream&quot;&gt; &lt;code&gt;webpack-stream&lt;/code&gt; &lt;/a&gt;软件包（又名 &lt;code&gt;gulp-webpack&lt;/code&gt; ）的帮助下，Gulp也是一个相当简单的集成。在这种情况下，不必单独安装 &lt;code&gt;webpack&lt;/code&gt; ,因为它是 &lt;code&gt;webpack-stream&lt;/code&gt; 的直接依赖项：</target>
        </trans-unit>
        <trans-unit id="040f189f5df653616cc5f84c5b2d4f044112abdb" translate="yes" xml:space="preserve">
          <source>HMR Accepted</source>
          <target state="translated">接受的HMR</target>
        </trans-unit>
        <trans-unit id="1018a3c5183c72da47fa44fb8982525184c94afd" translate="yes" xml:space="preserve">
          <source>HMR can be used in development as a LiveReload replacement. &lt;a href=&quot;../configuration/dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; supports a &lt;code&gt;hot&lt;/code&gt; mode in which it tries to update with HMR before trying to reload the whole page. See the &lt;a href=&quot;../guides/hot-module-replacement&quot;&gt;Hot Module Replacement guide&lt;/a&gt; for details.</source>
          <target state="translated">HMR可以在开发中用作LiveReload的替代品。&lt;a href=&quot;../configuration/dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;支持一种 &lt;code&gt;hot&lt;/code&gt; 模式，在该模式下，它尝试使用HMR更新，然后尝试重新加载整个页面。有关详细信息，请参见&lt;a href=&quot;../guides/hot-module-replacement&quot;&gt;热模块更换指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d800c057a6735f14564a57866175b8be7aa6bb0c" translate="yes" xml:space="preserve">
          <source>HMR can be used with &lt;code&gt;import.meta.webpackHot&lt;/code&gt; instead of &lt;code&gt;module.hot&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d12f13c37448b6d29dd08187afe1a7f58393cf8" translate="yes" xml:space="preserve">
          <source>HMR is an opt-in feature that only affects modules containing HMR code. One example would be patching styling through the &lt;a href=&quot;https://github.com/webpack-contrib/style-loader&quot;&gt;&lt;code&gt;style-loader&lt;/code&gt;&lt;/a&gt;. In order for patching to work, the &lt;code&gt;style-loader&lt;/code&gt; implements the HMR interface; when it receives an update through HMR, it replaces the old styles with the new ones.</source>
          <target state="translated">HMR是一项启用功能，仅会影响包含HMR代码的模块。一个例子是通过&lt;a href=&quot;https://github.com/webpack-contrib/style-loader&quot;&gt; &lt;code&gt;style-loader&lt;/code&gt; &lt;/a&gt;修补样式。为了使修补工作正常， &lt;code&gt;style-loader&lt;/code&gt; 实现了HMR接口。当通过HMR收到更新时，它将用新样式替换旧样式。</target>
        </trans-unit>
        <trans-unit id="cfe9b710019e4ee945740e00f1aeef2a5f017b29" translate="yes" xml:space="preserve">
          <source>HMR should &lt;strong&gt;never&lt;/strong&gt; be used in production.</source>
          <target state="translated">HMR &lt;strong&gt;绝对&lt;/strong&gt;不能在生产中使用。</target>
        </trans-unit>
        <trans-unit id="19e74394701c30e0fa9cd48a46d826fc558a6fd0" translate="yes" xml:space="preserve">
          <source>HMR support</source>
          <target state="translated">人力资源管理支持</target>
        </trans-unit>
        <trans-unit id="d63d0656280072a9a4d8ba809c85e7d8c4e8bc54" translate="yes" xml:space="preserve">
          <source>HMR with Stylesheets</source>
          <target state="translated">带样式表的HMR</target>
        </trans-unit>
        <trans-unit id="9ea070623e5978f9a6abc7b8ffd1dd8cc5722be3" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;img src=&quot;...&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ec38b3cdc6f3ee7066d3f6b59963461878ee6c2" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;link rel=&quot;preload/prefetch&quot;&amp;gt;&lt;/code&gt; in HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9733c9cef8bc9fc3b342a59d4526e705f2c69144" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be618efb16bfcea098e0296a32168bb619e44181" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;script src=&quot;...&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719cc1320c02877459466c22f512f467d4ec4ff6" translate="yes" xml:space="preserve">
          <source>HTML &lt;code&gt;&amp;lt;script type=&quot;module&quot;&amp;gt;&lt;/code&gt; in HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6538a65a98c8b2c04c168060b8adca63a513baa4" translate="yes" xml:space="preserve">
          <source>HTML template is required to serve the bundle, usually it is an &lt;code&gt;index.html&lt;/code&gt; file. Make sure that script references are added into HTML, webpack-dev-server doesn't inject them automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831b1b876a6bee5fd0ce581fd2273d191c011a1b" translate="yes" xml:space="preserve">
          <source>HTTP/2 with a self-signed certificate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc374a23e55e5f423c3640a4df4338aeafc84a9" translate="yes" xml:space="preserve">
          <source>HTTP2 Aggressive Splitting Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f2780df4ccf690821b5194f099735ba6bd6e76" translate="yes" xml:space="preserve">
          <source>Hacky access to the Compilation object of webpack.</source>
          <target state="translated">黑客访问webpack的编译对象。</target>
        </trans-unit>
        <trans-unit id="9683d34ca67b262aac8b1514f57d207315c5e8bf" translate="yes" xml:space="preserve">
          <source>Hacky access to the Compiler object of webpack.</source>
          <target state="translated">黑客访问webpack的编译器对象。</target>
        </trans-unit>
        <trans-unit id="cadc8997538f9ab2ffa07602fc1f67d5bb167917" translate="yes" xml:space="preserve">
          <source>Hacky access to the Module object being loaded.</source>
          <target state="translated">对正在加载的模块对象进行黑客访问。</target>
        </trans-unit>
        <trans-unit id="dc238823d206c000a5a4e27a692803d92c2fdc10" translate="yes" xml:space="preserve">
          <source>Hash is required to enable HMR</source>
          <target state="translated">需要哈希值才能启用HMR</target>
        </trans-unit>
        <trans-unit id="2bb6cff94d1802bdd30f75ecaccbc14c2cd5a0a6" translate="yes" xml:space="preserve">
          <source>HashedModuleIdsPlugin</source>
          <target state="translated">HashedModuleIdsPlugin</target>
        </trans-unit>
        <trans-unit id="5551ebd48f7eaa66477f72c449e4b2ccfc0f9609" translate="yes" xml:space="preserve">
          <source>Hashes</source>
          <target state="translated">Hashes</target>
        </trans-unit>
        <trans-unit id="c7818998b4699953cff73d5d32aace74763ad2ee" translate="yes" xml:space="preserve">
          <source>Help Wanted: This page is still a work in progress. If you are familiar with any of the options for which the description or examples are incomplete, please create an issue and submit a PR at the &lt;a href=&quot;https://github.com/webpack/webpack.js.org&quot;&gt;docs repo&lt;/a&gt;!</source>
          <target state="translated">想要的帮助：此页面仍在进行中。如果您熟悉描述或示例不完整的任何选项，请创建一个问题并在&lt;a href=&quot;https://github.com/webpack/webpack.js.org&quot;&gt;docs repo上&lt;/a&gt;提交PR ！</target>
        </trans-unit>
        <trans-unit id="d7f1c15ac5cd26f642dc1ff958f73694ed690577" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;package/things/apple&lt;/code&gt; might be found in &lt;code&gt;.../package/good-things/apple&lt;/code&gt; or in &lt;code&gt;.../package/bad-things/apple&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b71253f8b512249fe3907dcd007dccf2d2ad058" translate="yes" xml:space="preserve">
          <source>Here are some other useful plugins and loaders provided by the community for splitting code:</source>
          <target state="translated">以下是社区提供的一些其他有用的插件和加载器,用于分割代码。</target>
        </trans-unit>
        <trans-unit id="9e5dc64afbacaa12ee3a2a30bd098f6bd1c4e825" translate="yes" xml:space="preserve">
          <source>Here are the available options with their &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsDefaulter.js&quot;&gt;defaults&lt;/a&gt;:</source>
          <target state="translated">以下是可用选项及其&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/WebpackOptionsDefaulter.js&quot;&gt;默认值&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f26eac870c694669bc407e43dc4d4add291bfe24" translate="yes" xml:space="preserve">
          <source>Here are the available options with their &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/config/defaults.js&quot;&gt;defaults&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b8f507d07f88f0fb9260497dafb27c0317c7aa" translate="yes" xml:space="preserve">
          <source>Here is an example to have both HMR in &lt;code&gt;development&lt;/code&gt; and your styles extracted in a file for &lt;code&gt;production&lt;/code&gt; builds.</source>
          <target state="translated">这是在 &lt;code&gt;development&lt;/code&gt; 同时包含HMR 和将样式提取到用于 &lt;code&gt;production&lt;/code&gt; 构建的文件中的示例。</target>
        </trans-unit>
        <trans-unit id="a2834dc75921a3465397c3c81181af70d68f53da" translate="yes" xml:space="preserve">
          <source>Here is no need to change it.</source>
          <target state="translated">这里是不需要改变的。</target>
        </trans-unit>
        <trans-unit id="bbb9107ab5930b1c7f25ec41bad41f1f5ec937db" translate="yes" xml:space="preserve">
          <source>Here things get a bit more technical... if you're not interested in the internals, feel free to jump to the &lt;a href=&quot;../api/hot-module-replacement&quot;&gt;HMR API page&lt;/a&gt; or &lt;a href=&quot;../guides/hot-module-replacement&quot;&gt;HMR guide&lt;/a&gt;.</source>
          <target state="translated">这里的内容会更加技术化...如果您对内部结构不感兴趣，请随时跳至&lt;a href=&quot;../api/hot-module-replacement&quot;&gt;HMR API页面&lt;/a&gt;或&lt;a href=&quot;../guides/hot-module-replacement&quot;&gt;HMR指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7f1a28b3e5212fb6ea1e10afb5efc421f0c92bf1" translate="yes" xml:space="preserve">
          <source>Here we declare a new module for SVGs by specifying any import that ends in &lt;code&gt;.svg&lt;/code&gt; and defining the module's &lt;code&gt;content&lt;/code&gt; as &lt;code&gt;any&lt;/code&gt;. We could be more explicit about it being a url by defining the type as string. The same concept applies to other assets including CSS, SCSS, JSON and more.</source>
          <target state="translated">在这里，我们通过指定以 &lt;code&gt;.svg&lt;/code&gt; 结尾的任何导入并将该模块的 &lt;code&gt;content&lt;/code&gt; 定义为 &lt;code&gt;any&lt;/code&gt; ，来声明一个用于SVG的新模块。通过将类型定义为字符串，我们可以更明确地了解它是一个url。相同的概念适用于其他资产，包括CSS，SCSS，JSON等。</target>
        </trans-unit>
        <trans-unit id="689aa12a2c0bc32ff32aad2b0904efce3ab28b08" translate="yes" xml:space="preserve">
          <source>Here you can access the Express app object and add your own custom middleware to it. For example, to define custom handlers for some paths:</source>
          <target state="translated">在这里,你可以访问Express应用对象,并向其添加自己的自定义中间件。例如,为一些路径定义自定义处理程序。</target>
        </trans-unit>
        <trans-unit id="ce0b386112d4134d052dd168079add2f88e6013d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an [example] (&lt;a href=&quot;https://github.com/webpack/analyse/blob/master/app/pages/upload/example.json&quot;&gt;https://github.com/webpack/analyse/blob/master/app/pages/upload/example.json&lt;/a&gt;) of this function&amp;rsquo;s output.</source>
          <target state="translated">这是此函数输出的[示例]（&lt;a href=&quot;https://github.com/webpack/analyse/blob/master/app/pages/upload/example.json&quot;&gt;https://github.com/webpack/analyse/blob/master/app/pages/upload/example.json&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bc7a08471c916f569b4c85e890fee735ccef05fd" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an [example] (&lt;a href=&quot;https://raw.githubusercontent.com/webpack/analyse/master/app/pages/upload/example2.json&quot;&gt;https://raw.githubusercontent.com/webpack/analyse/master/app/pages/upload/example2.json&lt;/a&gt;) of this function&amp;rsquo;s output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d9a8d812c90d1bf3d1e751fbcb4e044eed885d" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of &lt;code&gt;stats.toString()&lt;/code&gt; usage:</source>
          <target state="translated">这是 &lt;code&gt;stats.toString()&lt;/code&gt; 用法的示例：</target>
        </trans-unit>
        <trans-unit id="c33d9dd45d505b6fa99ddb524e207925c8cb8208" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that does all that:</source>
          <target state="translated">这是一个完成所有操作的示例：</target>
        </trans-unit>
        <trans-unit id="f1468b5723560711f6a9fa401499b579863d4941" translate="yes" xml:space="preserve">
          <source>Here's a more complicated example of using a CDN and hashes for assets:</source>
          <target state="translated">这里有一个更复杂的例子,就是使用CDN和资产的哈希值。</target>
        </trans-unit>
        <trans-unit id="68f54ed9ea375008e572f1c21ea20c9c86ce81fb" translate="yes" xml:space="preserve">
          <source>Here's a small example to restrict module usage:</source>
          <target state="translated">这里有一个小例子来限制模块的使用。</target>
        </trans-unit>
        <trans-unit id="6fd5f6d46f40290b4a065612e3e7dc847f89a633" translate="yes" xml:space="preserve">
          <source>Here's an example of how this plugin might be used:</source>
          <target state="translated">下面是一个如何使用这个插件的例子。</target>
        </trans-unit>
        <trans-unit id="2f0661f064322e5bbcafdd8bf7f3fbce37cc9de7" translate="yes" xml:space="preserve">
          <source>Here's an example plugin from &lt;a href=&quot;https://github.com/boopathi&quot;&gt;@boopathi&lt;/a&gt; that outputs exactly what went into each chunk.</source>
          <target state="translated">这是&lt;a href=&quot;https://github.com/boopathi&quot;&gt;@boopathi&lt;/a&gt;的一个示例插件，该插件精确输出进入每个块的内容。</target>
        </trans-unit>
        <trans-unit id="7b49b26d8b3a7d28cded264e41a7228c10ffe73c" translate="yes" xml:space="preserve">
          <source>Here's an example that simply adds a banner to each chunk.</source>
          <target state="translated">这里有一个简单的例子,就是给每个块添加一个横幅。</target>
        </trans-unit>
        <trans-unit id="51e85e4e8113fb3e1f07e1727e78d73f5f0043e6" translate="yes" xml:space="preserve">
          <source>Here's an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f273d6ebd65e09a2123679838da9edba70828df" translate="yes" xml:space="preserve">
          <source>Here's how we specify properties for the above example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cdb0cabf428f9c6c2baf06a10ac606843b05c5" translate="yes" xml:space="preserve">
          <source>Here's the full list of &lt;a href=&quot;https://github.com/wooorm/remark/blob/master/doc/plugins.md&quot;&gt;&lt;code&gt;remark&lt;/code&gt; plugins&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34da435080080952de44617951db93f8b8878fc" translate="yes" xml:space="preserve">
          <source>Hides info about modules</source>
          <target state="translated">隐藏模块信息</target>
        </trans-unit>
        <trans-unit id="a803271eaba4f726d2cdc52538b3afe62dc4c49e" translate="yes" xml:space="preserve">
          <source>High-level concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a33db354218dfad198e4b83729dc6fbab844ec8" translate="yes" xml:space="preserve">
          <source>Hook Parameters: &lt;code&gt;identifier&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea32dafeb882bf20b2f2e187f0ca6c41c1a6a30" translate="yes" xml:space="preserve">
          <source>Hook Parameters: &lt;code&gt;labelName&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02b4be61312f3316dfd5ab0d82ef75a5c6a9311" translate="yes" xml:space="preserve">
          <source>Hook Parameters: &lt;code&gt;objectIdentifier&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07098e74daabfa0b18217bfa2113a3f52f160192" translate="yes" xml:space="preserve">
          <source>Hook into the compiler before a new compilation is created.</source>
          <target state="translated">在创建新的编译之前,钩入编译器。</target>
        </trans-unit>
        <trans-unit id="0eafba5fc3bbe31b1d770ba492a1988b8374433e" translate="yes" xml:space="preserve">
          <source>Hook into the compiler before it begins reading &lt;a href=&quot;../configuration/other-options#recordspath&quot;&gt;&lt;code&gt;records&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5b6d1176c2c7b471cc49cd14ff540b84005c96" translate="yes" xml:space="preserve">
          <source>Hook into the compiler before it begins reading records.</source>
          <target state="translated">在编译器开始读取记录之前,钩入它。</target>
        </trans-unit>
        <trans-unit id="a2e1f8d8e1cd92fef4f507b2cc3733e6a624094f" translate="yes" xml:space="preserve">
          <source>Hook into the compiler to extract progress information. The &lt;code&gt;handler&lt;/code&gt; must have the signature &lt;code&gt;function(percentage, message)&lt;/code&gt;. Percentage is called with a value between 0 and 1, where 0 indicates the start and 1 the end.</source>
          <target state="translated">钩入编译器以提取进度信息。该 &lt;code&gt;handler&lt;/code&gt; 必须具备签名 &lt;code&gt;function(percentage, message)&lt;/code&gt; 。用介于0和1之间的值来调用百分比，其中0表示开始，而1表示结束。</target>
        </trans-unit>
        <trans-unit id="662064c5b9315416eb5216fb949ba24bbd0f9a62" translate="yes" xml:space="preserve">
          <source>Hook parameters: &lt;code&gt;expressionType&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="30f903d530f16bb49ddfdd004a066d5e761d940d" translate="yes" xml:space="preserve">
          <source>Host Source Maps Externally</source>
          <target state="translated">主机外部源映射</target>
        </trans-unit>
        <trans-unit id="891dd51ad267d1206153d09e5b0e0d78d84a8cf9" translate="yes" xml:space="preserve">
          <source>Hot Module Reloading (HMR)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b195bbcb9d9ea75b33b88f6d3b7db65046872de6" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement</source>
          <target state="translated">热模块更换</target>
        </trans-unit>
        <trans-unit id="92fd1c3e36496023416944609af68089022b4821" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement (HMR) exchanges, adds, or removes &lt;a href=&quot;modules&quot;&gt;modules&lt;/a&gt; while an application is running, without a full reload. This can significantly speed up development in a few ways:</source>
          <target state="translated">热模块替换（HMR）在应用程序运行时交换，添加或删除&lt;a href=&quot;modules&quot;&gt;模块&lt;/a&gt;，而无需完全重新加载。这可以通过以下几种方式显着加快开发速度：</target>
        </trans-unit>
        <trans-unit id="faaedbcba12dd4a48cc801cf852346d66b60396f" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement (or HMR) is one of the most useful features offered by webpack. It allows all kinds of modules to be updated at runtime without the need for a full refresh. This page focuses on &lt;strong&gt;implementation&lt;/strong&gt; while the &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;concepts page&lt;/a&gt; gives more details on how it works and why it's useful.</source>
          <target state="translated">热模块更换（或HMR）是webpack提供的最有用的功能之一。它允许在运行时更新各种模块，而无需完全刷新。该页面着重于&lt;strong&gt;实现，&lt;/strong&gt;而&lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;概念页面则&lt;/a&gt;提供了有关其工作原理和用途的更多详细信息。</target>
        </trans-unit>
        <trans-unit id="4192c11d0e4fe11d9d343eb4d029bac719a67d4d" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement can be tricky. To show this, let's go back to our working example. If you go ahead and click the button on the example page, you will realize the console is printing the old &lt;code&gt;printMe&lt;/code&gt; function.</source>
          <target state="translated">热模块更换可能很棘手。为了说明这一点，让我们回到我们的工作示例。如果继续并单击示例页面上的按钮，您将意识到控制台正在打印旧的 &lt;code&gt;printMe&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="853c05d1118610188f138d6f79c7f044f6c2797e" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement with CSS is actually fairly straightforward with the help of the &lt;code&gt;style-loader&lt;/code&gt;. This loader uses &lt;code&gt;module.hot.accept&lt;/code&gt; behind the scenes to patch &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tags when CSS dependencies are updated.</source>
          <target state="translated">在 &lt;code&gt;style-loader&lt;/code&gt; 的帮助下，用CSS进行热模块替换实际上非常简单。当CSS依赖项更新时，此加载器在后台使用 &lt;code&gt;module.hot.accept&lt;/code&gt; 修补 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 标签。</target>
        </trans-unit>
        <trans-unit id="a9c074676de58e8848f685cbf8e7911b0eadb590" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: accept</source>
          <target state="translated">热模块更换:接受</target>
        </trans-unit>
        <trans-unit id="547dfa545af481b7481187d8e5821fff3af70093" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: addStatusHandler</source>
          <target state="translated">热门模块替换:addStatusHandler。</target>
        </trans-unit>
        <trans-unit id="1c06975c9d2ad6114a31f7680fabda50ec1b34b9" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: apply</source>
          <target state="translated">热模块更换:申请</target>
        </trans-unit>
        <trans-unit id="c6a5f2b24f45ef9ea292e22f41e12b764a091a14" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: check</source>
          <target state="translated">热模块更换:检查</target>
        </trans-unit>
        <trans-unit id="99f850a0046d9f71e971677be09918aec51f5ddb" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: decline</source>
          <target state="translated">热模块更换:下降</target>
        </trans-unit>
        <trans-unit id="8c5da94c72bc8ad7cd7742c8f058f8b4bd40f3d5" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: removeDisposeHandler</source>
          <target state="translated">热门模块替换:removeDisposeHandler。</target>
        </trans-unit>
        <trans-unit id="d8dffb62bf37ecab81b1a58ddf475fb8c617afa6" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: removeStatusHandler</source>
          <target state="translated">热门模块替换:removeStatusHandler。</target>
        </trans-unit>
        <trans-unit id="dda5826308cbdd5e9d619798a9aab1c671892e96" translate="yes" xml:space="preserve">
          <source>Hot Module Replacement: status</source>
          <target state="translated">热模块更换:状态</target>
        </trans-unit>
        <trans-unit id="c3a46d04c348ff50766e4c9ce140966a946d0c66" translate="yes" xml:space="preserve">
          <source>Hot loading stylesheets is as easy as importing them into a module:</source>
          <target state="translated">热加载样式表就像把它们导入到一个模块中一样简单。</target>
        </trans-unit>
        <trans-unit id="42b2548d4460c34296f98d31e1dae1ae67093bda" translate="yes" xml:space="preserve">
          <source>HotModuleReplacementPlugin</source>
          <target state="translated">HotModuleReplacementPlugin</target>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="translated">它是如何工作的</target>
        </trans-unit>
        <trans-unit id="8e979f2b774b8ab254c7973b1d82eeaacaeb2ca0" translate="yes" xml:space="preserve">
          <source>How the value of the &lt;code&gt;output.library&lt;/code&gt; is used depends on the value of the &lt;a href=&quot;#output-librarytarget&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt; option; please refer to that section for the complete details. Note that the default option for &lt;code&gt;output.libraryTarget&lt;/code&gt; is &lt;code&gt;var&lt;/code&gt;, so if the following configuration option is used:</source>
          <target state="translated">如何使用 &lt;code&gt;output.library&lt;/code&gt; 的值取决于&lt;a href=&quot;#output-librarytarget&quot;&gt; &lt;code&gt;output.libraryTarget&lt;/code&gt; &lt;/a&gt;选项的值。请参阅该部分以获取完整详细信息。请注意， &lt;code&gt;output.libraryTarget&lt;/code&gt; 的默认选项是 &lt;code&gt;var&lt;/code&gt; ，因此，如果使用以下配置选项：</target>
        </trans-unit>
        <trans-unit id="c9c38b1850bd97d47311573c974832aac91f0dc1" translate="yes" xml:space="preserve">
          <source>How the value of the &lt;code&gt;output.library&lt;/code&gt; is used depends on the value of the &lt;a href=&quot;#outputlibrarytarget&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt; option; please refer to that section for the complete details. Note that the default option for &lt;code&gt;output.libraryTarget&lt;/code&gt; is &lt;code&gt;var&lt;/code&gt;, so if the following configuration option is used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d33716f3bf4bd0245ad9168d787e0fbcf92179d" translate="yes" xml:space="preserve">
          <source>However in some circumstances it might be necessary to have finer control over the append target or even delay &lt;code&gt;link&lt;/code&gt; elements instertion. For example this is the case when you asynchronously load styles for an application that runs inside of an iframe. In such cases &lt;code&gt;insert&lt;/code&gt; can be configured to be a function or a custom selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc94764c099c8edf0a22c457ea80c340ec14306a" translate="yes" xml:space="preserve">
          <source>However, changing one file means you have to rebuild the whole thing. Concatenating makes it easy to reuse scripts across files but makes build optimizations more difficult. How can you find out if code is actually being used or not?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3443b5ab994d217f78e68297f8c770cdd684b58" translate="yes" xml:space="preserve">
          <source>However, for &lt;code&gt;run&lt;/code&gt; which utilizes the &lt;code&gt;AsyncHook&lt;/code&gt;, we can utilize &lt;code&gt;tapAsync&lt;/code&gt; or &lt;code&gt;tapPromise&lt;/code&gt; (as well as &lt;code&gt;tap&lt;/code&gt;):</source>
          <target state="translated">但是，对于使用 &lt;code&gt;AsyncHook&lt;/code&gt; 的 &lt;code&gt;run&lt;/code&gt; ，我们可以利用 &lt;code&gt;tapAsync&lt;/code&gt; 或 &lt;code&gt;tapPromise&lt;/code&gt; （以及 &lt;code&gt;tap&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="351a3cd14e2756e50007cd947a86f585a361d70d" translate="yes" xml:space="preserve">
          <source>However, if you prefer a custom reporter, pass a function under the &lt;code&gt;reporter&lt;/code&gt; property in &lt;code&gt;jshint&lt;/code&gt; options. (see &lt;em&gt;usage&lt;/em&gt; above)</source>
          <target state="translated">但是，如果您希望使用自定义报告程序，请在 &lt;code&gt;jshint&lt;/code&gt; 选项的 &lt;code&gt;reporter&lt;/code&gt; 属性下传递一个函数。（请参阅上面的&lt;em&gt;用法&lt;/em&gt;）&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd7ef17b1178c0abec16330dd82d81766532031c" translate="yes" xml:space="preserve">
          <source>However, let's say you're locked into your old ways or you have some assets that are shared between multiple components (views, templates, modules, etc.). It's still possible to store these assets in a base directory and even use &lt;a href=&quot;../configuration/resolve#resolve-alias&quot;&gt;aliasing&lt;/a&gt; to make them easier to &lt;code&gt;import&lt;/code&gt;.</source>
          <target state="translated">但是，假设您陷入了旧困境，或者某些资产在多个组件（视图，模板，模块等）之间共享。仍然可以将这些资产存储在基本目录中，甚至可以使用&lt;a href=&quot;../configuration/resolve#resolve-alias&quot;&gt;别名&lt;/a&gt;使其更易于 &lt;code&gt;import&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7934ee262eedcb077db23e7905f8e5ed253f4a6" translate="yes" xml:space="preserve">
          <source>However, let's say you're locked into your old ways or you have some assets that are shared between multiple components (views, templates, modules, etc.). It's still possible to store these assets in a base directory and even use &lt;a href=&quot;../configuration/resolve#resolvealias&quot;&gt;aliasing&lt;/a&gt; to make them easier to &lt;code&gt;import&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066beae0ba9d7f7e51d7d73ac00f926f89b2af25" translate="yes" xml:space="preserve">
          <source>However, parser plugins may accept more than just a boolean. For example, the internal &lt;code&gt;NodeStuffPlugin&lt;/code&gt; can accept an object instead of &lt;code&gt;true&lt;/code&gt; to add additional options for a particular Rule.</source>
          <target state="translated">但是，解析器插件不仅仅可以接受布尔值。例如，内部 &lt;code&gt;NodeStuffPlugin&lt;/code&gt; 可以接受一个对象而不是 &lt;code&gt;true&lt;/code&gt; 来为特定规则添加其他选项。</target>
        </trans-unit>
        <trans-unit id="6461913cec14b37c90ceed285e43899a06a7001c" translate="yes" xml:space="preserve">
          <source>However, until a loader has been updated to depend upon options being passed directly to them, the &lt;code&gt;LoaderOptionsPlugin&lt;/code&gt; exists to bridge the gap. You can configure global loader options with this plugin and all loaders will receive these options.</source>
          <target state="translated">但是，在加载程序已更新为依赖于直接将选项传递给它们之前， &lt;code&gt;LoaderOptionsPlugin&lt;/code&gt; 存在以弥合差距。您可以使用此插件配置全局加载程序选项，所有加载程序都会收到这些选项。</target>
        </trans-unit>
        <trans-unit id="8bba7f88ec88a2d86d5d549a708573ec75734f15" translate="yes" xml:space="preserve">
          <source>However, when creating multiple bundles via more than one entry point, code splitting, or various plugins, you should use one of the following substitutions to give each bundle a unique name...</source>
          <target state="translated">然而,当通过多个入口点、代码分割或各种插件创建多个捆绑包时,你应该使用下面的一种替换方式来给每个捆绑包一个独特的名称......</target>
        </trans-unit>
        <trans-unit id="2684071a3ee6f2a42de1f0f276b59750b17cf5e2" translate="yes" xml:space="preserve">
          <source>HtmlMinimizerWebpackPlugin</source>
          <target state="translated">HtmlMinimizerWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="4e41be80be7a17f3962a777aad1652e4f3f01a7f" translate="yes" xml:space="preserve">
          <source>HtmlWebpackPlugin</source>
          <target state="translated">HtmlWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="d7a47bcbdab49f7a3986a07a90e9461cabfd388a" translate="yes" xml:space="preserve">
          <source>I. e. the extract-text-webpack-plugin can handle them.</source>
          <target state="translated">即 extract-text-webpack-plugin 可以处理它们。</target>
        </trans-unit>
        <trans-unit id="b0d915587151b1b9036796c951b7b39da2693831" translate="yes" xml:space="preserve">
          <source>I18nWebpackPlugin</source>
          <target state="translated">I18nWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="616f38a980958b316993b06ce9d68680348f4661" translate="yes" xml:space="preserve">
          <source>ICSS underpins CSS Module support, and provides a low level syntax for other tools to implement CSS-module variations of their own.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5e1ecb69a2731c7705153bf5bcdb43865f18f2" translate="yes" xml:space="preserve">
          <source>IIFE's - Immediately invoked function expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dfdd5137003bd398cdb79e92a12d68eb27fe557" translate="yes" xml:space="preserve">
          <source>IIFEs solve scoping issues for large projects; when script files are wrapped by an IIFE, you can safely concatenate or safely combine files without worrying about scope collision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5a555de9eeaaec348d876424744418ea56d827" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;#outputmodule&quot;&gt;&lt;code&gt;output.module&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;output.scriptType&lt;/code&gt; will default to &lt;code&gt;'module'&lt;/code&gt; instead of &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889dc8dca2ad7f6b9ba93f27d5ebcaf76306510b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; has been enabled via the &lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt;&lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt;&lt;/a&gt;, its interface will be exposed under the &lt;a href=&quot;module-variables#module-hot-webpack-specific-&quot;&gt;&lt;code&gt;module.hot&lt;/code&gt; property&lt;/a&gt;. Typically, users will check to see if the interface is accessible, then begin working with it. As an example, here's how you might &lt;code&gt;accept&lt;/code&gt; an updated module:</source>
          <target state="translated">如果已通过&lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt; &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; &lt;/a&gt;启用了&amp;ldquo; &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;热模块替换&lt;/a&gt; &amp;rdquo; ，则其接口将在&lt;a href=&quot;module-variables#module-hot-webpack-specific-&quot;&gt; &lt;code&gt;module.hot&lt;/code&gt; &lt;/a&gt;属性下公开。通常，用户将检查该接口是否可访问，然后开始使用它。例如，以下是您如何 &lt;code&gt;accept&lt;/code&gt; 更新的模块的方法：</target>
        </trans-unit>
        <trans-unit id="7b48207cb23b8b74e1cf403cc193b5186484ca55" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; has been enabled via the &lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt;&lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt;&lt;/a&gt;, its interface will be exposed under the &lt;a href=&quot;module-variables#modulehot-webpack-specific&quot;&gt;&lt;code&gt;module.hot&lt;/code&gt; property&lt;/a&gt;. Typically, users will check to see if the interface is accessible, then begin working with it. As an example, here's how you might &lt;code&gt;accept&lt;/code&gt; an updated module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d1b252858764674a00e3bc86d1aa9186b80326" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;output#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'bundle.js'&lt;/code&gt; and &lt;code&gt;devServer.filename&lt;/code&gt; is used like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb05ca83fe91abb8fd4b6c1ca0ce3594e7f6143" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Rule.type&lt;/code&gt; is an &lt;code&gt;asset&lt;/code&gt; or &lt;code&gt;asset/inline&lt;/code&gt; then &lt;code&gt;Rule.generator&lt;/code&gt; option may be an object that describes the encoding of the module source or a function that encodes module's source by a custom algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b24159c7af8bc5b0e41e2e4176bec5cdbd288bd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Rule.type&lt;/code&gt; is an &lt;code&gt;asset&lt;/code&gt; then &lt;code&gt;Rules.parser&lt;/code&gt; option may be an object or a function that describes a condition whether to encode file contents to Base64 or emit it as a separate file into the output directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d5c7e8418b4d85eb19f1625bd924a9f680169c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Rule.type&lt;/code&gt; is set to &lt;code&gt;'json'&lt;/code&gt; then &lt;code&gt;Rules.parser.parse&lt;/code&gt; option may be a function that implements custom logic to parse module's source and convert it to a JavaScript &lt;code&gt;object&lt;/code&gt;. It may be useful to import &lt;code&gt;toml&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt; and other non-JSON files as JSON, without specific loaders:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34122748e05e97c8f36085544c7b19142aa9c343" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;cache: true&lt;/code&gt; is used, the cache file is written to the &lt;code&gt;./node_modules/.cache&lt;/code&gt; directory. This is the recommended usage.</source>
          <target state="translated">如果使用 &lt;code&gt;cache: true&lt;/code&gt; ，则将缓存文件写入 &lt;code&gt;./node_modules/.cache&lt;/code&gt; 目录。这是推荐的用法。</target>
        </trans-unit>
        <trans-unit id="4eeb510364afeab21d56daf7ad1b3b02b38218a7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;dependencies&lt;/code&gt; are provided, &lt;code&gt;factoryMethod&lt;/code&gt; will be called with the exports of each dependency (in the same order). If &lt;code&gt;dependencies&lt;/code&gt; are not provided, &lt;code&gt;factoryMethod&lt;/code&gt; is called with &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;exports&lt;/code&gt; and &lt;code&gt;module&lt;/code&gt; (for compatibility!). If this function returns a value, this value is exported by the module. The compiler ensures that each dependency is available.</source>
          <target state="translated">如果提供了 &lt;code&gt;dependencies&lt;/code&gt; ，则将使用每个依赖关系的导出（以相同顺序）调用 &lt;code&gt;factoryMethod&lt;/code&gt; 。如果未提供 &lt;code&gt;dependencies&lt;/code&gt; ，则使用 &lt;code&gt;require&lt;/code&gt; ， &lt;code&gt;exports&lt;/code&gt; 和 &lt;code&gt;module&lt;/code&gt; 调用 &lt;code&gt;factoryMethod&lt;/code&gt; （以实现兼容性！）。如果此函数返回一个值，则该值由模块导出。编译器确保每个依赖项都可用。</target>
        </trans-unit>
        <trans-unit id="62fbe3e5cfa03e1c78e0758a5226a351c3020234" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;devServer.http2&lt;/code&gt; is not explicitly set to &lt;code&gt;false&lt;/code&gt;, it will default to &lt;code&gt;true&lt;/code&gt; when &lt;a href=&quot;#devserverhttps&quot;&gt;&lt;code&gt;devServer.https&lt;/code&gt;&lt;/a&gt; is enabled. When &lt;code&gt;devServer.http2&lt;/code&gt; is enabled but the server is unable to serve over HTTP/2, the server defaults to HTTPS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1ea7e9aba3ef442fdaf237c6914380a13d81e0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;from&lt;/code&gt; is a directory, then &lt;code&gt;context&lt;/code&gt; is the same as &lt;code&gt;from&lt;/code&gt; and is equal to the directory itself. In this case, the result will be a hierarchical structure of the found folders and files relative to the specified directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79832c359d50ce56dd3739a2a5d7f1a223802c18" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;from&lt;/code&gt; is a file, then &lt;code&gt;context&lt;/code&gt; is equal to the directory in which this file is located. Accordingly, the result will be only the file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b4b6aa70f6bf00c539c2c4ab455a4fd9d2a624" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;from&lt;/code&gt; is a glob, then regardless of the &lt;code&gt;context&lt;/code&gt; option, the result will be the structure specified in the &lt;code&gt;from&lt;/code&gt; option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d4bf1a62a46eb3b3090c3168fc0b527ef9a8b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;from&lt;/code&gt; is directory, &lt;code&gt;to&lt;/code&gt; has no extension or ends in &lt;code&gt;'/'&lt;/code&gt;</source>
          <target state="translated">如果 &lt;code&gt;from&lt;/code&gt; 是目录，则 &lt;code&gt;to&lt;/code&gt; 没有扩展名或以 &lt;code&gt;'/'&lt;/code&gt; 结尾</target>
        </trans-unit>
        <trans-unit id="b408c2dc265da39c0dc82e0b895cac5e5dd366c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;library&lt;/code&gt; is set and &lt;code&gt;libraryTarget&lt;/code&gt; is not, &lt;code&gt;libraryTarget&lt;/code&gt; defaults to &lt;code&gt;var&lt;/code&gt; as specified in the &lt;a href=&quot;../configuration/output&quot;&gt;output configuration documentation&lt;/a&gt;. See &lt;a href=&quot;../configuration/output#output-librarytarget&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt; there for a detailed list of all available options.</source>
          <target state="translated">如果 &lt;code&gt;library&lt;/code&gt; 是集和 &lt;code&gt;libraryTarget&lt;/code&gt; 不是， &lt;code&gt;libraryTarget&lt;/code&gt; 默认为 &lt;code&gt;var&lt;/code&gt; 为在指定的&lt;a href=&quot;../configuration/output&quot;&gt;输出配置文件&lt;/a&gt;。有关所有可用选项的详细列表，请参见&lt;a href=&quot;../configuration/output#output-librarytarget&quot;&gt; &lt;code&gt;output.libraryTarget&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca96a33144f20f8871608e7d8d1f76848b93ab61" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;library&lt;/code&gt; is set and &lt;code&gt;libraryTarget&lt;/code&gt; is not, &lt;code&gt;libraryTarget&lt;/code&gt; defaults to &lt;code&gt;var&lt;/code&gt; as specified in the &lt;a href=&quot;../configuration/output&quot;&gt;output configuration documentation&lt;/a&gt;. See &lt;a href=&quot;../configuration/output#outputlibrarytarget&quot;&gt;&lt;code&gt;output.libraryTarget&lt;/code&gt;&lt;/a&gt; there for a detailed list of all available options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca63e3eee74ceb839a6f9e0b13ee6aecb9eb1fb5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;'lazy'&lt;/code&gt;, the underlying modules will be loaded asynchronously:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2238f71612ccb2ddd1743c776d81d4a2fd0a0687" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mode&lt;/code&gt; is supplied, say &lt;code&gt;production&lt;/code&gt; then config looking order will be -</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d02144f1a710eb31004ece5c9b57c9c455c265" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;moduleLocalName&lt;/code&gt; is not specified, it exposes the entire module to the global object, otherwise it exposes only the value of &lt;code&gt;moduleLocalName&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee47d4e1114d14d38c93c764db62d3a322407e2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;name&lt;/code&gt; is used in a module it is filled by a module loaded by &lt;code&gt;require(&amp;lt;request&amp;gt;)&lt;/code&gt;.</source>
          <target state="translated">如果在模块中使用 &lt;code&gt;name&lt;/code&gt; ,则它将由 &lt;code&gt;require(&amp;lt;request&amp;gt;)&lt;/code&gt; 加载的模块填充。</target>
        </trans-unit>
        <trans-unit id="b3e1f075f259beb79f9112be4ab6886b9e262221" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options.pathinfo&lt;/code&gt; is set, each module function is annotated with a comment containing the module identifier shortened to &lt;code&gt;context&lt;/code&gt; (absolute path).</source>
          <target state="translated">如果设置了 &lt;code&gt;options.pathinfo&lt;/code&gt; ，则每个模块功能都用注释注释，该注释包含缩短到 &lt;code&gt;context&lt;/code&gt; （绝对路径）的模块标识符。</target>
        </trans-unit>
        <trans-unit id="6e414dc45e43432219bacffa3a68f290925ad98f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output.filename&lt;/code&gt; is set to &lt;code&gt;bundle.js&lt;/code&gt; and &lt;code&gt;filename&lt;/code&gt; is used like this:</source>
          <target state="translated">如果将 &lt;code&gt;output.filename&lt;/code&gt; 设置为 &lt;code&gt;bundle.js&lt;/code&gt; ，则使用 &lt;code&gt;filename&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="b040e0e0352f09a83cbc48731ff94b99bf150416" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output.library&lt;/code&gt; is not assigned a non-empty string, the default behavior is that all properties returned by the entry point will be assigned to the object as defined for the particular &lt;code&gt;output.libraryTarget&lt;/code&gt;, via the following code fragment:</source>
          <target state="translated">如果未为 &lt;code&gt;output.library&lt;/code&gt; 分配非空字符串，则默认行为是，将通过以下代码片段将入口点返回的所有属性分配给为特定 &lt;code&gt;output.libraryTarget&lt;/code&gt; 定义的对象：</target>
        </trans-unit>
        <trans-unit id="986dff084e7c4e6327decd3a7b8d6a15ace985c8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;output.library&lt;/code&gt; is undefined, the following is generated instead.</source>
          <target state="translated">如果未定义 &lt;code&gt;output.library&lt;/code&gt; ，则会生成以下内容。</target>
        </trans-unit>
        <trans-unit id="653ad8db2961c8b7c43c67b9207c81752b64e61b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;to&lt;/code&gt; contains &lt;a href=&quot;https://github.com/webpack-contrib/file-loader#placeholders&quot;&gt;a template pattern&lt;/a&gt;</source>
          <target state="translated">如果 &lt;code&gt;to&lt;/code&gt; 包含&lt;a href=&quot;https://github.com/webpack-contrib/file-loader#placeholders&quot;&gt;模板模式&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="950190fdaa548f29dbc37c6331fa3c0ab0a78d6b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;to&lt;/code&gt; has extension or &lt;code&gt;from&lt;/code&gt; is file</source>
          <target state="translated">如果 &lt;code&gt;to&lt;/code&gt; 具有延伸或 &lt;code&gt;from&lt;/code&gt; 为文件</target>
        </trans-unit>
        <trans-unit id="a6df245e542374547a56ebb182fa9f3565ecb8c8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;to&lt;/code&gt; has no extension or ends on &lt;code&gt;'/'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec56bacdab889715f62546503628173d3c57b55" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;to&lt;/code&gt; is not a directory and is not a template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f167e6c940e2b6893f45abeaebcca602a35fcf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;stylelint&lt;/code&gt; will fix as many errors as possible. The fixes are made to the actual source files. All unfixed errors will be reported. See &lt;a href=&quot;https://stylelint.io/user-guide/cli#autofixing-errors&quot;&gt;Autofixing errors&lt;/a&gt; docs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b956a5fcb95b78ca165f625a368aa63e83abaa31" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, it will not allow extension-less files. So by default &lt;code&gt;require('./foo')&lt;/code&gt; works if &lt;code&gt;./foo&lt;/code&gt; has a &lt;code&gt;.js&lt;/code&gt; extension, but with this enabled only &lt;code&gt;require('./foo.js')&lt;/code&gt; will work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185802ed5473c2f7e8cb3f24f4ffa52ff1b7dcfa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, it will not allow extension-less files. So by default &lt;code&gt;require('./foo')&lt;/code&gt; works if &lt;code&gt;./foo&lt;/code&gt; has a &lt;code&gt;.js&lt;/code&gt; extension, but with this enabled only &lt;code&gt;require('./foo.js')&lt;/code&gt; will work. Default:</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，将不允许无扩展名的文件。因此，默认情况下，如果 &lt;code&gt;./foo&lt;/code&gt; 具有 &lt;code&gt;.js&lt;/code&gt; 扩展名，则 &lt;code&gt;require('./foo')&lt;/code&gt; 可以工作，但是仅启用了 &lt;code&gt;require('./foo.js')&lt;/code&gt; 即可。默认：</target>
        </trans-unit>
        <trans-unit id="b50c08f5b71411f6a3e6a45904a9f742ae52ad16" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, specifies that the code can be re-used in watch mode if none of the &lt;code&gt;dependencies&lt;/code&gt; have changed.</source>
          <target state="translated">如果为 &lt;code&gt;true&lt;/code&gt; ，则指定在所有 &lt;code&gt;dependencies&lt;/code&gt; 均未更改的情况下可以在监视模式下重用该代码。</target>
        </trans-unit>
        <trans-unit id="df48d4048b5bdeb409ec799b53a6e5ec78091008" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;webpack.config.js&lt;/code&gt; is present, the &lt;code&gt;webpack&lt;/code&gt; command picks it up by default. We use the &lt;code&gt;--config&lt;/code&gt; option here only to show that you can pass a config of any name. This will be useful for more complex configurations that need to be split into multiple files.</source>
          <target state="translated">如果存在 &lt;code&gt;webpack.config.js&lt;/code&gt; ，则默认情况下， &lt;code&gt;webpack&lt;/code&gt; 命令将其选中。我们在这里使用 &lt;code&gt;--config&lt;/code&gt; 选项只是为了表明您可以传递任何名称的配置。这对于需要拆分为多个文件的更复杂的配置很有用。</target>
        </trans-unit>
        <trans-unit id="273b8dbbcaab622afe9215ae7b9e32c51933426c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;webpack.config.js&lt;/code&gt; is present, the &lt;code&gt;webpack&lt;/code&gt; command picks it up by default. We use the &lt;code&gt;--config&lt;/code&gt; option here only to show that you can pass a configuration of any name. This will be useful for more complex configurations that need to be split into multiple files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e41b772e20c437afe0b411b7de6f248c54d850e" translate="yes" xml:space="preserve">
          <source>If a callback is added after dependencies were loaded, it will be called immediately.</source>
          <target state="translated">如果在加载了依赖关系后添加了回调,则会立即被调用。</target>
        </trans-unit>
        <trans-unit id="f4dd7e2689ccc2b98e7c1c90d4993c46e7b87604" translate="yes" xml:space="preserve">
          <source>If a dependency is included but not used, the browser will be forced to download unnecessary code.</source>
          <target state="translated">如果包含了一个依赖关系但没有使用,浏览器将被迫下载不必要的代码。</target>
        </trans-unit>
        <trans-unit id="07f33b8aa91a147067e9de02b1b1e50e00f59e5d" translate="yes" xml:space="preserve">
          <source>If a dependency is missing, or included in the wrong order, the application will not function properly.</source>
          <target state="translated">如果缺少一个依赖关系,或者包含的顺序不对,应用程序将无法正常运行。</target>
        </trans-unit>
        <trans-unit id="48c4180257435fcc25f063f081618e356f870985" translate="yes" xml:space="preserve">
          <source>If a function is passed then it will be invoked on every &lt;a href=&quot;../api/compiler-hooks#make&quot;&gt;make&lt;/a&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e52467f5752b6a9c3fe25a8895e33f563202207" translate="yes" xml:space="preserve">
          <source>If a function is passed, then it will be called with the compiler as a parameter. Set it to a function if none of the predefined targets from the list above meet your needs.</source>
          <target state="translated">如果传递了一个函数,那么它将被编译器作为参数调用。如果上面列表中的预定义目标都不能满足你的需求,就把它设置为函数。</target>
        </trans-unit>
        <trans-unit id="c45c7d5c23a629c6ea1ea970594a3ccc8583ceb3" translate="yes" xml:space="preserve">
          <source>If a module source size is less than &lt;code&gt;maxSize&lt;/code&gt; then module will be injected into the bundle as a Base64-encoded string, otherwise module file will be emitted into the output directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50a90376f8f6d651b37ed8b77d222529111f8a07" translate="yes" xml:space="preserve">
          <source>If a project has a browserslist config, then webpack will use it for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca3ed1813b95cb8adbef52e8fdd32e6da9b7528" translate="yes" xml:space="preserve">
          <source>If a string or array of strings is passed, the chunk is named &lt;code&gt;main&lt;/code&gt;. If an object is passed, each key is the name of a chunk, and the value describes the entry point for the chunk.</source>
          <target state="translated">如果传递字符串或字符串数​​组，则该块名为 &lt;code&gt;main&lt;/code&gt; 。如果传递了一个对象，则每个键都是一个块的名称，该值描述该块的入口点。</target>
        </trans-unit>
        <trans-unit id="a64e0703ebadd797dc6c126d189c7c0d31bbc16b" translate="yes" xml:space="preserve">
          <source>If all went well, you should now see your icon as a repeating background, as well as an &lt;code&gt;img&lt;/code&gt; element beside our &lt;code&gt;Hello webpack&lt;/code&gt; text. If you inspect this element, you'll see that the actual filename has changed to something like &lt;code&gt;29822eaa871e8eadeaa4.png&lt;/code&gt;. This means webpack found our file in the &lt;code&gt;src&lt;/code&gt; folder and processed it!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6a51eb9233c67f994d457f4260e35be0b31994" translate="yes" xml:space="preserve">
          <source>If all went well, you should now see your icon as a repeating background, as well as an &lt;code&gt;img&lt;/code&gt; element beside our &lt;code&gt;Hello webpack&lt;/code&gt; text. If you inspect this element, you'll see that the actual filename has changed to something like &lt;code&gt;5c999da72346a995e7e2718865d019c8.png&lt;/code&gt;. This means webpack found our file in the &lt;code&gt;src&lt;/code&gt; folder and processed it!</source>
          <target state="translated">如果一切顺利，您现在应该看到图标是重复的背景，以及 &lt;code&gt;Hello webpack&lt;/code&gt; 文本旁边的 &lt;code&gt;img&lt;/code&gt; 元素。如果您检查此元素，则会看到实际文件名已更改为 &lt;code&gt;5c999da72346a995e7e2718865d019c8.png&lt;/code&gt; 。这意味着webpack在 &lt;code&gt;src&lt;/code&gt; 文件夹中找到了我们的文件并进行了处理！</target>
        </trans-unit>
        <trans-unit id="84b4202957552827e2d2cb56f0acc00550050752" translate="yes" xml:space="preserve">
          <source>If an environment variable is not found during bundling and no default value was provided, webpack will throw an error instead of a warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08df31826d6c0f4da2ebf8b09143d915727782d" translate="yes" xml:space="preserve">
          <source>If an object is passed the value might be a string, array of strings or a descriptor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64870bbe4c22e691ce428a2835d8d2c7e127f61a" translate="yes" xml:space="preserve">
          <source>If an object is passed, webpack will use this object for caching. Keeping a reference to this object will allow one to share the same cache between compiler calls:</source>
          <target state="translated">如果传递了一个对象,webpack将使用这个对象进行缓存。保持对这个对象的引用可以让人们在编译器调用之间共享同一个缓存。</target>
        </trans-unit>
        <trans-unit id="43b99e6352163b1d06ae88f4fb0bf982ddd87b32" translate="yes" xml:space="preserve">
          <source>If convertToAbsoluteUrls and sourceMaps are both enabled, relative urls will be converted to absolute urls right before the css is injected into the page. This resolves &lt;a href=&quot;https://github.com/webpack/style-loader/pull/96&quot;&gt;an issue&lt;/a&gt; where relative resources fail to load when source maps are enabled. You can enable it with the convertToAbsoluteUrls option.</source>
          <target state="translated">如果convertToAbsoluteUrls和sourceMaps都启用，则在将CSS注入页面之前，相对URL将立即转换为绝对URL。这解决&lt;a href=&quot;https://github.com/webpack/style-loader/pull/96&quot;&gt;了&lt;/a&gt;启用源映射时相对资源无法加载的问题。您可以使用convertToAbsoluteUrls选项启用它。</target>
        </trans-unit>
        <trans-unit id="7cfa6ea1a67ca3ceeb449fc2e2629a8148f2541b" translate="yes" xml:space="preserve">
          <source>If defined, style-loader will attach given attributes with their values on &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">如果定义，style-loader会将给定的属性及其值附加在 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 元素上。</target>
        </trans-unit>
        <trans-unit id="6a94f3a7b43d8265a94cf93b3709ed094af9dfeb" translate="yes" xml:space="preserve">
          <source>If defined, the &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; will attach given attributes with their values on  element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7804fc1873adaf2d0dd5d474eb086431dc15e3a0" translate="yes" xml:space="preserve">
          <source>If defined, the &lt;code&gt;style-loader&lt;/code&gt; will attach given attributes with their values on &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; / &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d49a999b72016db961a09284a492d94304e784" translate="yes" xml:space="preserve">
          <source>If defined, the style-loader will reuse a single &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; element, instead of adding/removing individual elements for each required module.</source>
          <target state="translated">如果定义，则样式加载器将重用单个 &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; 元素，而不是为每个所需模块添加/删除单个元素。</target>
        </trans-unit>
        <trans-unit id="f218065a4d485d9e3d6e6b6aa0d4a6bea489531d" translate="yes" xml:space="preserve">
          <source>If ensures that native modules are loaded correctly even if bundled.</source>
          <target state="translated">如果确保即使捆绑了本地模块也能正确加载。</target>
        </trans-unit>
        <trans-unit id="45d3588afa2786ab4d31277d9d14540030ce65e1" translate="yes" xml:space="preserve">
          <source>If exported module methods are already async, signature is unchanged</source>
          <target state="translated">如果导出的模块方法已经是异步的,则签名不变。</target>
        </trans-unit>
        <trans-unit id="0bfbdd1c3c27461d16567a5b7542a7805d1cb884" translate="yes" xml:space="preserve">
          <source>If for some reason you want to use different config file depending on certain situations you can change this via command line by using the &lt;code&gt;--config&lt;/code&gt; flag.</source>
          <target state="translated">如果出于某些原因要根据特定情况使用其他配置文件，则可以使用 &lt;code&gt;--config&lt;/code&gt; 标志通过命令行更改此配置文件。</target>
        </trans-unit>
        <trans-unit id="e5c5cd136d4d8fac63012cc2d11d8c275ee1a392" translate="yes" xml:space="preserve">
          <source>If for some reason you want to use different configuration file depending on certain situations you can change this via command line by using the &lt;code&gt;--config&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2034055c289a5fe39d3ee59def3b48c810e36ce4" translate="yes" xml:space="preserve">
          <source>If multiple files share the same name but have different extensions, webpack will resolve the one with the extension listed first in the array and skip the rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69da252b8b51846f82d3cd898a8f9857c1028509" translate="yes" xml:space="preserve">
          <source>If multiple modules would result in the same name, &lt;a href=&quot;#output-devtoolfallbackmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolFallbackModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt; is used instead for these modules.</source>
          <target state="translated">如果多个模块的名称相同，&lt;a href=&quot;#output-devtoolfallbackmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolFallbackModuleFilenameTemplate&lt;/code&gt; &lt;/a&gt;用作这些模块。</target>
        </trans-unit>
        <trans-unit id="9f0ded5d1669b1184f8c7792cc6f9ad6cfb69c0c" translate="yes" xml:space="preserve">
          <source>If multiple modules would result in the same name, &lt;a href=&quot;#outputdevtoolfallbackmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolFallbackModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt; is used instead for these modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c06bae6b7ebc498ada19a4126a3593ec09ff64e" translate="yes" xml:space="preserve">
          <source>If need to specify options for the plugin, can pass the plugin using an array, where the second argument will be options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41b17bf3cb05e9a48dc6a459c1cf7bad6124b10" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;mode&lt;/code&gt; is supplied via flags or config then this is the lookup order in increasing order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dfcdb0b1dc024842f447016ffd7e77ff903a2b" translate="yes" xml:space="preserve">
          <source>If no browser is provided (as shown above), your default browser will be used. To specify a different browser, just pass its name:</source>
          <target state="translated">如果没有提供浏览器(如上图所示),将使用您的默认浏览器。要指定不同的浏览器,只需输入其名称即可。</target>
        </trans-unit>
        <trans-unit id="fe5b821bb3db737f1ec055312dcbe888d65361b2" translate="yes" xml:space="preserve">
          <source>If not set, webpack sets &lt;code&gt;production&lt;/code&gt; as the default value for &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55a5575efd33d92f15721c5fbda8793dbf5d812" translate="yes" xml:space="preserve">
          <source>If not set, webpack sets &lt;code&gt;production&lt;/code&gt; as the default value for &lt;code&gt;mode&lt;/code&gt;. The supported values for mode are:</source>
          <target state="translated">如果未设置，则webpack将 &lt;code&gt;production&lt;/code&gt; 设置为 &lt;code&gt;mode&lt;/code&gt; 的默认值。模式支持的值为：</target>
        </trans-unit>
        <trans-unit id="f8b38a2515fd144328fb3bfee30e660e8581edf5" translate="yes" xml:space="preserve">
          <source>If set to true the loader will rewrite &lt;code&gt;&amp;lt;link import=&quot;css&quot; href=&quot;...&quot;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;...&quot;&amp;gt;&lt;/code&gt; that are inside the dom-module with &lt;code&gt;&amp;lt;style&amp;gt;require('...')&amp;lt;/style&amp;gt;&lt;/code&gt;. This will allow for the file to be processed by loaders that are set up in the webpack config to handle their file type.</source>
          <target state="translated">如果设置为true，则加载程序将使用 &lt;code&gt;&amp;lt;style&amp;gt;require('...')&amp;lt;/style&amp;gt;&lt;/code&gt; 重写dom模块内部的 &lt;code&gt;&amp;lt;link import=&quot;css&quot; href=&quot;...&quot;&amp;gt;&lt;/code&gt; 或 &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;...&quot;&amp;gt;&lt;/code&gt; &amp;gt; require（'...'）&amp;lt;/ style&amp;gt;。这将允许由webpack配置中设置的加载程序处理文件，以处理其文件类型。</target>
        </trans-unit>
        <trans-unit id="82479f8a654c0b86f8986eef236b26c84f34fba1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;eslintPath&lt;/code&gt; is a folder like a official eslint, or specify a &lt;code&gt;formatter&lt;/code&gt; option. now you dont have to install &lt;code&gt;eslint&lt;/code&gt; .</source>
          <target state="translated">如果 &lt;code&gt;eslintPath&lt;/code&gt; 是官方eslint之类的文件夹，请指定 &lt;code&gt;formatter&lt;/code&gt; 选项。现在您不必安装 &lt;code&gt;eslint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="374c1280bd907e54e891747c5319855189539cf8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;splitChunks.name&lt;/code&gt; matches an &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;entry point&lt;/a&gt; name, the entry point will be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd56a8742f9e2d9b6668ea31bedbcae5b6e7f991" translate="yes" xml:space="preserve">
          <source>If the current chunk contains modules already split out from the main bundle, it will be reused instead of a new one being generated. This can impact the resulting file name of the chunk.</source>
          <target state="translated">如果当前的chunk包含的模块已经从主捆绑包中分离出来,那么它将被重新使用,而不是生成一个新的模块。这可能会影响chunk的文件名。</target>
        </trans-unit>
        <trans-unit id="11f75fc174043b61cd8d2a42a5ddba540e6e502e" translate="yes" xml:space="preserve">
          <source>If the default webpack &lt;code&gt;minimizer&lt;/code&gt; has been overridden (such as to customise the &lt;code&gt;TerserPlugin&lt;/code&gt; options), make sure to configure its replacement with &lt;code&gt;sourceMap: true&lt;/code&gt; to enable SourceMap support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f5f7ac58afc8be678ccb6af40ce23a140fff60" translate="yes" xml:space="preserve">
          <source>If the default webpack &lt;code&gt;minimizer&lt;/code&gt; has been overridden (such as to customise the &lt;code&gt;terser-webpack-plugin&lt;/code&gt; options), make sure to configure its replacement with &lt;code&gt;sourceMap: true&lt;/code&gt; to enable SourceMap support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b5ffcaaf2eed75c47cd9fb37fc044c78957376" translate="yes" xml:space="preserve">
          <source>If the folder contains a &lt;code&gt;package.json&lt;/code&gt; file, then fields specified in &lt;a href=&quot;../configuration/resolve#resolve-mainfields&quot;&gt;&lt;code&gt;resolve.mainFields&lt;/code&gt;&lt;/a&gt; configuration option are looked up in order, and the first such field in &lt;code&gt;package.json&lt;/code&gt; determines the file path.</source>
          <target state="translated">如果文件夹包含一个 &lt;code&gt;package.json&lt;/code&gt; 文件，然后字段指定&lt;a href=&quot;../configuration/resolve#resolve-mainfields&quot;&gt; &lt;code&gt;resolve.mainFields&lt;/code&gt; &lt;/a&gt;配置选项中查找在顺序，并且在第一场这样 &lt;code&gt;package.json&lt;/code&gt; 确定的文件路径。</target>
        </trans-unit>
        <trans-unit id="9d6448921c9abfe6554797a801402f29581c9e3a" translate="yes" xml:space="preserve">
          <source>If the folder contains a &lt;code&gt;package.json&lt;/code&gt; file, then fields specified in &lt;a href=&quot;../configuration/resolve#resolvemainfields&quot;&gt;&lt;code&gt;resolve.mainFields&lt;/code&gt;&lt;/a&gt; configuration option are looked up in order, and the first such field in &lt;code&gt;package.json&lt;/code&gt; determines the file path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5769605929f82e57430fb4717d6d76c443abc54" translate="yes" xml:space="preserve">
          <source>If the loader has no &lt;code&gt;options&lt;/code&gt;, but was invoked with a query string, this will be a string starting with &lt;code&gt;?&lt;/code&gt;.</source>
          <target state="translated">如果加载程序没有 &lt;code&gt;options&lt;/code&gt; ，但是使用查询字符串调用，则它将是一个以 &lt;code&gt;?&lt;/code&gt; 开头的字符串。。</target>
        </trans-unit>
        <trans-unit id="5d354e319cbac13ec902509db72cdb3b9d0ab9e9" translate="yes" xml:space="preserve">
          <source>If the loader was configured with an &lt;a href=&quot;../configuration/module#useentry&quot;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt; object, this will point to that object.</source>
          <target state="translated">如果加载程序配置有&lt;a href=&quot;../configuration/module#useentry&quot;&gt; &lt;code&gt;options&lt;/code&gt; &lt;/a&gt;对象，则它将指向该对象。</target>
        </trans-unit>
        <trans-unit id="c81f2836d67fae82cf484d14bad3d646850c605f" translate="yes" xml:space="preserve">
          <source>If the package contains a &lt;code&gt;package.json&lt;/code&gt; file, then fields specified in &lt;a href=&quot;../configuration/resolve#resolveexportsfields&quot;&gt;&lt;code&gt;resolve.exportsFields&lt;/code&gt;&lt;/a&gt; configuration options are looked up in order, and the first such field in &lt;code&gt;package.json&lt;/code&gt; determines the available exports from the package according to the &lt;a href=&quot;../guides/package-exports&quot;&gt;package exports guideline&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce6f12f8d307a5d7dcfbd04bb9e2bfe337ca2fe" translate="yes" xml:space="preserve">
          <source>If the package is available from npm, its name must begin with &lt;code&gt;webpack-scaffold&lt;/code&gt; and can be used by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c47481a0a68b0c995943a5ceaffa05a318b27fb" translate="yes" xml:space="preserve">
          <source>If the path has a file extension, then the file is bundled straightaway.</source>
          <target state="translated">如果路径有文件扩展名,则直接将文件捆绑。</target>
        </trans-unit>
        <trans-unit id="73575a91ca074bb9d7d0b8a836cea304cb565e3f" translate="yes" xml:space="preserve">
          <source>If the path points to a folder, then the following steps are taken to find the right file with the right extension:</source>
          <target state="translated">如果路径指向一个文件夹,则采取以下步骤找到正确的扩展名的文件。</target>
        </trans-unit>
        <trans-unit id="cdfe5f8c21d08ce5076228bb6801fbf96db868fa" translate="yes" xml:space="preserve">
          <source>If the resource (directory) matches &lt;code&gt;resourceRegExp&lt;/code&gt;, the plugin replaces the default resource, recursive flag or generated regular expression with &lt;code&gt;newContentResource&lt;/code&gt;, &lt;code&gt;newContentRecursive&lt;/code&gt; or &lt;code&gt;newContextRegExp&lt;/code&gt; respectively. If &lt;code&gt;newContentResource&lt;/code&gt; is relative, it is resolved relative to the previous resource.</source>
          <target state="translated">如果资源（目录）与 &lt;code&gt;resourceRegExp&lt;/code&gt; 匹配，则插件分别用 &lt;code&gt;newContentResource&lt;/code&gt; ， &lt;code&gt;newContentRecursive&lt;/code&gt; 或 &lt;code&gt;newContextRegExp&lt;/code&gt; 替换默认资源，递归标志或生成的正则表达式。如果 &lt;code&gt;newContentResource&lt;/code&gt; 是相对的，则相对于先前的资源来解析。</target>
        </trans-unit>
        <trans-unit id="df1b1ceedaca83877e4d9004b68fbc7f6030f980" translate="yes" xml:space="preserve">
          <source>If the tag name is not specified it will process all the tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79abbcba526b248d039a0743ecd5335a433a83bc" translate="yes" xml:space="preserve">
          <source>If the value is a string it will be used as a code fragment.</source>
          <target state="translated">如果值是一个字符串,它将被用作一个代码片段。</target>
        </trans-unit>
        <trans-unit id="8f1be205bff6517aa135228e2c7f797b13ff4efb" translate="yes" xml:space="preserve">
          <source>If the value is an object all keys are defined the same way.</source>
          <target state="translated">如果值是一个对象,所有键的定义方式都是一样的。</target>
        </trans-unit>
        <trans-unit id="c80bd1536b13d414a6baa335b614baa6c76a4716" translate="yes" xml:space="preserve">
          <source>If the value isn't a string, it will be stringified (including functions).</source>
          <target state="translated">如果值不是字符串,它将被字符串化(包括函数)。</target>
        </trans-unit>
        <trans-unit id="83a611854646adb309f27904f9ed35b750f2b5f1" translate="yes" xml:space="preserve">
          <source>If there are SourceMaps, they will also be included in the result string.</source>
          <target state="translated">如果有SourceMaps,它们也会被包含在结果字符串中。</target>
        </trans-unit>
        <trans-unit id="4c2c55a655b84ae013eb6b53b4db03dec7b81683" translate="yes" xml:space="preserve">
          <source>If there are any duplicated modules between entry chunks they will be included in both bundles.</source>
          <target state="translated">如果条目块之间有任何重复的模块,它们将被包含在两个捆绑中。</target>
        </trans-unit>
        <trans-unit id="3ae0951dceaf27a452d1d046b600179785a0a50e" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;package.json&lt;/code&gt; or if the &lt;a href=&quot;../configuration/resolve#resolvemainfields&quot;&gt;&lt;code&gt;resolve.mainFields&lt;/code&gt;&lt;/a&gt; do not return a valid path, file names specified in the &lt;a href=&quot;../configuration/resolve#resolvemainfiles&quot;&gt;&lt;code&gt;resolve.mainFiles&lt;/code&gt;&lt;/a&gt; configuration option are looked for in order, to see if a matching filename exists in the imported/required directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d62d44f6e2f99d7094f3aa73779963bb10a3fd6" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;package.json&lt;/code&gt; or if the main fields do not return a valid path, file names specified in the &lt;a href=&quot;../configuration/resolve#resolve-mainfiles&quot;&gt;&lt;code&gt;resolve.mainFiles&lt;/code&gt;&lt;/a&gt; configuration option are looked for in order, to see if a matching filename exists in the imported/required directory .</source>
          <target state="translated">如果没有 &lt;code&gt;package.json&lt;/code&gt; 或主要字段未返回有效路径，则会按顺序查找&lt;a href=&quot;../configuration/resolve#resolve-mainfiles&quot;&gt; &lt;code&gt;resolve.mainFiles&lt;/code&gt; &lt;/a&gt;配置选项中指定的文件名，以查看在导入/所需目录中是否存在匹配的文件名。</target>
        </trans-unit>
        <trans-unit id="a6aa5b2b56d2ca18437a2ac9b9a74e0476e7d9ee" translate="yes" xml:space="preserve">
          <source>If this is too heavy on the file system, you can change this to an integer to set the interval in milliseconds.</source>
          <target state="translated">如果这对文件系统太重,可以将其改为整数,以毫秒为单位设置时间间隔。</target>
        </trans-unit>
        <trans-unit id="225c720ca42da60ed6e6d5611f8f3324ddfe0f70" translate="yes" xml:space="preserve">
          <source>If true, emits a file (writes a file to the filesystem). If false, the loader will return a public URI but &lt;em&gt;will not&lt;/em&gt; emit the file. It is often useful to disable this option for server-side packages.</source>
          <target state="translated">如果为true，则发出一个文件（将文件写入文件系统）。如果为false，则加载程序将返回公共URI，但&lt;em&gt;不会&lt;/em&gt;发出文件。禁用服务器端软件包的此选项通常很有用。</target>
        </trans-unit>
        <trans-unit id="fa3e69820d7f9dee471dd55bae715bfcf867e8fb" translate="yes" xml:space="preserve">
          <source>If true, emits a file (writes a file to the filesystem). If false, the loader will return a public URI but &lt;strong&gt;will not&lt;/strong&gt; emit the file. It is often useful to disable this option for server-side packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eda099c2c5782e0b3576789ac6b0a53cbc5cd8f" translate="yes" xml:space="preserve">
          <source>If true, pipes &lt;code&gt;stylelint&lt;/code&gt; error severity messages to the &lt;code&gt;webpack&lt;/code&gt; compiler's error message handler.</source>
          <target state="translated">如果为true， &lt;code&gt;stylelint&lt;/code&gt; 错误严重性消息通过管道传递到 &lt;code&gt;webpack&lt;/code&gt; 编译器的错误消息处理程序。</target>
        </trans-unit>
        <trans-unit id="a06a0527c4531fe93a61e00d8ea52d6cb4b8954f" translate="yes" xml:space="preserve">
          <source>If true, throws a fatal error in the global build process. This will end the build process on any &lt;code&gt;stylelint&lt;/code&gt; error.</source>
          <target state="translated">如果为true，则在全局构建过程中引发致命错误。这将结束任何 &lt;code&gt;stylelint&lt;/code&gt; 错误的构建过程。</target>
        </trans-unit>
        <trans-unit id="ebd173452f057772e7901e648a653006e7a62600" translate="yes" xml:space="preserve">
          <source>If type &lt;code&gt;commonjs&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7f928c93871873ea23501411102f2183de7d93" translate="yes" xml:space="preserve">
          <source>If type &lt;code&gt;module&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7907c55ff2934d171f75429bbecb6ec83170412" translate="yes" xml:space="preserve">
          <source>If unsafe cache is enabled, includes &lt;code&gt;request.context&lt;/code&gt; in the cache key. This option is taken into account by the &lt;a href=&quot;https://github.com/webpack/enhanced-resolve/&quot;&gt;&lt;code&gt;enhanced-resolve&lt;/code&gt;&lt;/a&gt; module. Since webpack 3.1.0 context in resolve caching is ignored when resolve or resolveLoader plugins are provided. This addresses a performance regression.</source>
          <target state="translated">如果启用了不安全的缓存，请在缓存键中包含 &lt;code&gt;request.context&lt;/code&gt; 。&lt;a href=&quot;https://github.com/webpack/enhanced-resolve/&quot;&gt; &lt;code&gt;enhanced-resolve&lt;/code&gt; &lt;/a&gt;模块考虑了此选项。由于提供了resolve或resolveLoader插件时，将忽略Webpack 3.1.0中解析缓存中的上下文。这解决了性能下降的问题。</target>
        </trans-unit>
        <trans-unit id="db93f6c6e041ac2dce0096403148c102903e17fc" translate="yes" xml:space="preserve">
          <source>If used inside a expression that is parsed by the Parser, the config option is treated as &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果在解析器解析的表达式内使用，则config选项被视为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0175d5b649467f6ebc68e46287aad4bf5f8300df" translate="yes" xml:space="preserve">
          <source>If used inside an expression that is parsed by the Parser, the configuration option is treated as &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a392e9955061d72252bb73c7a747a43aa7aa415" translate="yes" xml:space="preserve">
          <source>If using a function for this option, the function will be passed an object containing data for the substitutions in the table above. Substituions will be applied to the returned string too. The passed object will have this type: (properties available depending on context)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cec0d3a09b30b5dfed3ac7037930cf262328ae" translate="yes" xml:space="preserve">
          <source>If using a function for this option, the function will be passed an object containing the substitutions in the table above.</source>
          <target state="translated">如果对这个选项使用函数,函数将被传递一个包含上表中的替换的对象。</target>
        </trans-unit>
        <trans-unit id="60f440352d9d184e19412ab7f330500fd8f0d080" translate="yes" xml:space="preserve">
          <source>If using the &lt;a href=&quot;#output-library&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt; option, the library name is automatically appended.</source>
          <target state="translated">如果使用&lt;a href=&quot;#output-library&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt;选项，则会自动附加库名称。</target>
        </trans-unit>
        <trans-unit id="c47f47c9ee0d5881bd7175dbebc17a8cac454c6e" translate="yes" xml:space="preserve">
          <source>If watching does not work for you, try out this option. Watching does not work with NFS and machines in VirtualBox.</source>
          <target state="translated">如果观看对你不起作用,请尝试这个选项。NFS和VirtualBox中的机器无法使用 &quot;观看 &quot;功能。</target>
        </trans-unit>
        <trans-unit id="e8d5a4ed1e74100d39638592b4d0b327ca5068ed" translate="yes" xml:space="preserve">
          <source>If we run a build, we should still see the same output:</source>
          <target state="translated">如果我们运行一个构建,我们应该仍然看到相同的输出。</target>
        </trans-unit>
        <trans-unit id="aa65c205269e7b023f234f65c15495f5a87b040b" translate="yes" xml:space="preserve">
          <source>If we run our build, another &lt;code&gt;polyfills.bundle.js&lt;/code&gt; file will be emitted and everything should still run smoothly in the browser. Note that this set up could likely be improved upon but it should give you a good idea of how you can provide polyfills only to the users that actually need them.</source>
          <target state="translated">如果运行我们的构建，将发射另一个 &lt;code&gt;polyfills.bundle.js&lt;/code&gt; 文件，并且所有内容仍应在浏览器中平稳运行。请注意，此设置可能会有所改进，但是应该让您很好地了解如何仅向实际需要它们的用户提供polyfill。</target>
        </trans-unit>
        <trans-unit id="a670877a2873042d7d2d2d69e6c1ca6edef03df9" translate="yes" xml:space="preserve">
          <source>If we're going to use multiple entry points on a single HTML page, &lt;code&gt;optimization.runtimeChunk: 'single'&lt;/code&gt; is needed too, otherwise we could get into trouble described &lt;a href=&quot;https://bundlers.tooling.report/code-splitting/multi-entry/&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44b26b80d99e744c6c047afbad0f13d1c1deea72" translate="yes" xml:space="preserve">
          <source>If you are enthusiastic about using the latest that webpack has to offer, you can install beta versions or even directly from the webpack repository using the following commands:</source>
          <target state="translated">如果你热衷于使用最新的webpack,你可以使用以下命令安装测试版,甚至直接从webpack仓库中安装。</target>
        </trans-unit>
        <trans-unit id="fc325ce881228c1ddcf79037c94fad86d836afb0" translate="yes" xml:space="preserve">
          <source>If you are experiencing any issues, please see the following notes. There are a variety of reasons why webpack might miss a file change.</source>
          <target state="translated">如果你遇到了任何问题,请看下面的说明。webpack可能会错过文件更改的原因有很多。</target>
        </trans-unit>
        <trans-unit id="c951c9098069d4c65737f0bf9133d318b36d5ca5" translate="yes" xml:space="preserve">
          <source>If you are finding that urls are not resolving properly when you run webpack. You can expand your loader functionality with options. The &lt;code&gt;url: false&lt;/code&gt; property allows your paths resolved without any changes.</source>
          <target state="translated">如果您在运行webpack时发现URL无法正确解析。您可以使用选项扩展装载程序功能。该 &lt;code&gt;url: false&lt;/code&gt; 属性允许你的路解决没有任何变化。</target>
        </trans-unit>
        <trans-unit id="88f1e1343a92b2bf27f3dc803b16dc14b51b3caf" translate="yes" xml:space="preserve">
          <source>If you are interested in more ways to optimize your output, please jump to the next guide for details on building for &lt;a href=&quot;production&quot;&gt;production&lt;/a&gt;.</source>
          <target state="translated">如果您对优化输出的更多方法感兴趣，请跳至下一个指南，以获取有关&lt;a href=&quot;production&quot;&gt;生产的&lt;/a&gt;详细信息。</target>
        </trans-unit>
        <trans-unit id="31a3d2c22bb25ed57334e2bb509b42c4fddc60e2" translate="yes" xml:space="preserve">
          <source>If you are using Babel elsewhere and have &lt;code&gt;modules&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;, you will have to either maintain two separate &lt;code&gt;.babelrc&lt;/code&gt; files or use &lt;code&gt;const jsxobj = require('jsxobj');&lt;/code&gt; and &lt;code&gt;module.exports&lt;/code&gt; instead of the new &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; syntax. This is because while Node does support many new ES6 features, they don't yet support ES6 module syntax.</source>
          <target state="translated">如果您在其他地方使用Babel并将 &lt;code&gt;modules&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ，则必须维护两个单独的 &lt;code&gt;.babelrc&lt;/code&gt; 文件，或者使用 &lt;code&gt;const jsxobj = require('jsxobj');&lt;/code&gt; 和 &lt;code&gt;module.exports&lt;/code&gt; 而不是新的 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 语法。这是因为虽然Node确实支持许多ES6新功能，但它们还不支持ES6模块语法。</target>
        </trans-unit>
        <trans-unit id="8fde853b05d03d1441370c525ece485037162e65" translate="yes" xml:space="preserve">
          <source>If you are using a module which needs global variables in it, use &lt;code&gt;ProvidePlugin&lt;/code&gt; instead of &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07611a267ed72bba48c7d5c7b5c7332c14be1f2d" translate="yes" xml:space="preserve">
          <source>If you are using webpack &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;, the webpack process will not exit with an error code while this plugin is enabled. If you want webpack to &quot;fail&quot; when using the CLI, please check out the &lt;a href=&quot;../api/cli#advanced-options&quot;&gt;&lt;code&gt;bail&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是webpack &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;，则启用此插件后，webpack进程不会退出并显示错误代码。如果您希望Webpack在使用CLI时&amp;ldquo;失败&amp;rdquo;，请签出&lt;a href=&quot;../api/cli#advanced-options&quot;&gt; &lt;code&gt;bail&lt;/code&gt; 选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6378364695ae81c67e28f6eea6d9bcd7cd9695a2" translate="yes" xml:space="preserve">
          <source>If you are using webpack v5 or above you do not need to install this plugin. Webpack v5 comes with the latest &lt;code&gt;terser-webpack-plugin&lt;/code&gt; out of the box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c280059793a0c8d6a4012d80a7d96024b46998b1" translate="yes" xml:space="preserve">
          <source>If you avoid building with comments, use this config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85cff77f329cf8de0d4b2cb653288209f4dfc07" translate="yes" xml:space="preserve">
          <source>If you choose to specify a function, you may find the &lt;code&gt;chunk.name&lt;/code&gt; and &lt;code&gt;chunk.hash&lt;/code&gt; properties (where &lt;code&gt;chunk&lt;/code&gt; is an element of the &lt;code&gt;chunks&lt;/code&gt; array) particularly useful in choosing a name for your chunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd68771538d112f86285a66966d1715a1e222a3" translate="yes" xml:space="preserve">
          <source>If you decide to try another minification plugin, just make sure your new choice also drops dead code as described in the &lt;a href=&quot;tree-shaking&quot;&gt;tree shaking&lt;/a&gt; guide and provide it as the &lt;a href=&quot;../configuration/optimization#optimization-minimizer&quot;&gt;&lt;code&gt;optimization.minimizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您决定尝试使用另一个缩小插件，只需确保您的新选择还按照&lt;a href=&quot;tree-shaking&quot;&gt;树状抖动&lt;/a&gt;指南中的说明删除了无效代码，并将其作为&lt;a href=&quot;../configuration/optimization#optimization-minimizer&quot;&gt; &lt;code&gt;optimization.minimizer&lt;/code&gt; &lt;/a&gt;提供。</target>
        </trans-unit>
        <trans-unit id="c65d29e6def21e3d9a4bd21b0f70976fc2937d4a" translate="yes" xml:space="preserve">
          <source>If you decide to try another minification plugin, just make sure your new choice also drops dead code as described in the &lt;a href=&quot;tree-shaking&quot;&gt;tree shaking&lt;/a&gt; guide and provide it as the &lt;a href=&quot;../configuration/optimization#optimizationminimizer&quot;&gt;&lt;code&gt;optimization.minimizer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cf68ccecadd5cb2ef9523e8fc1e59eb653476a" translate="yes" xml:space="preserve">
          <source>If you define &lt;code&gt;from&lt;/code&gt; as absolute file path or absolute folder path on &lt;code&gt;Windows&lt;/code&gt;, you can use windows path segment (&lt;code&gt;\\&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72b6f3a091a93d008392a167246dd7b3740477e" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t pass the &lt;code&gt;webpack&lt;/code&gt; runner function a callback, it will return a webpack &lt;code&gt;Compiler&lt;/code&gt; instance. This instance can be used to manually trigger the webpack runner or have it build and watch for changes, much like the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt;. The &lt;code&gt;Compiler&lt;/code&gt; instance provides the following methods:</source>
          <target state="translated">如果您没有向 &lt;code&gt;webpack&lt;/code&gt; 运行程序函数传递回调，它将返回一个webpack &lt;code&gt;Compiler&lt;/code&gt; 实例。该实例可用于手动触发webpack运行程序或使其构建并监视更改，就像&lt;a href=&quot;cli&quot;&gt;CLI一样&lt;/a&gt;。该 &lt;code&gt;Compiler&lt;/code&gt; 实例提供了以下方法：</target>
        </trans-unit>
        <trans-unit id="c305306239d969628f0a957d3f49a6c5ac50f44a" translate="yes" xml:space="preserve">
          <source>If you don't want &lt;code&gt;/api&lt;/code&gt; to be passed along, we need to rewrite the path:</source>
          <target state="translated">如果您不希望传递 &lt;code&gt;/api&lt;/code&gt; ，则需要重写路径：</target>
        </trans-unit>
        <trans-unit id="f9996886b5d2b7833a82bef15487b5c9d5797541" translate="yes" xml:space="preserve">
          <source>If you don't want to use any encoding you can set &lt;code&gt;encoding&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; however if you set it to &lt;code&gt;true&lt;/code&gt; it will use the default encoding &lt;code&gt;base64&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565f45b0e5bb38128e1a3f80b37d1f898320c639" translate="yes" xml:space="preserve">
          <source>If you encounter at least one instance of the variable &lt;code&gt;_&lt;/code&gt;, include the &lt;code&gt;lodash&lt;/code&gt; package and provide it to the modules that need it.</source>
          <target state="translated">如果遇到变量 &lt;code&gt;_&lt;/code&gt; 的至少一个实例，请包含 &lt;code&gt;lodash&lt;/code&gt; 软件包并将其提供给需要它的模块。</target>
        </trans-unit>
        <trans-unit id="20bffaf1de8117474b6354f15e4c42129fa5122e" translate="yes" xml:space="preserve">
          <source>If you feel that you have mitigated these concerns and wish to incur the risk of brokenness, here's one way you might do it: Let's move our &lt;code&gt;import&lt;/code&gt; to a new file and add the &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;&lt;code&gt;whatwg-fetch&lt;/code&gt;&lt;/a&gt; polyfill:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e077f6bbdb882b1ac4039906e3e6695ca92666c" translate="yes" xml:space="preserve">
          <source>If you have a more advanced project and use &lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt; to run your development environment in a Virtual Machine, you'll often want to also run webpack in the VM.</source>
          <target state="translated">如果您有一个更高级的项目，并使用&lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt;在虚拟机中运行开发环境，则通常需要在VM中也运行webpack。</target>
        </trans-unit>
        <trans-unit id="af148258b5dd22a17f7577a43a50d4264ded997f" translate="yes" xml:space="preserve">
          <source>If you have any CSS assets in webpack's output (for example, CSS extracted with the &lt;a href=&quot;extract-text-webpack-plugin&quot;&gt;ExtractTextPlugin&lt;/a&gt;) then these will be included with &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tags in the HTML head.</source>
          <target state="translated">如果您在webpack的输出中有任何CSS资产（例如，用&lt;a href=&quot;extract-text-webpack-plugin&quot;&gt;ExtractTextPlugin&lt;/a&gt;提取的CSS），则这些资产将包含在HTML头中的 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; 标记中。</target>
        </trans-unit>
        <trans-unit id="802134397c0863ec8a2a3311914b0efd019b9319" translate="yes" xml:space="preserve">
          <source>If you have any CSS assets in webpack's output (for example, CSS extracted with the &lt;a href=&quot;mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;) then these will be included with &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; tags in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; element of generated HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ae38f047f94f07bc67e32d16e2fb56582a6b33" translate="yes" xml:space="preserve">
          <source>If you have multiple webpack entry points, they will all be included with &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags in the generated HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03c745511a67cacba3f597cc0a4d8417eb6c550" translate="yes" xml:space="preserve">
          <source>If you have multiple webpack entry points, they will all be included with &lt;code&gt;script&lt;/code&gt; tags in the generated HTML.</source>
          <target state="translated">如果您有多个webpack入口点，它们将全部包含在生成的HTML中的 &lt;code&gt;script&lt;/code&gt; 标签中。</target>
        </trans-unit>
        <trans-unit id="689bc0d9f09d4a2074a43552120fc8c0e2038b6f" translate="yes" xml:space="preserve">
          <source>If you haven't previously done so, run the command &lt;code&gt;npm run build&lt;/code&gt; to build your project. Then run the command &lt;code&gt;npm start&lt;/code&gt;. This should produce the following output:</source>
          <target state="translated">如果您以前没有这样做，请运行命令 &lt;code&gt;npm run build&lt;/code&gt; 来构建您的项目。然后运行命令 &lt;code&gt;npm start&lt;/code&gt; 。这将产生以下输出：</target>
        </trans-unit>
        <trans-unit id="2a6fcee1ea4c995647ec4b5bac70b71b97b04fb3" translate="yes" xml:space="preserve">
          <source>If you know of any other loaders or plugins that help with or enhance HMR, please submit a pull request to add them to this list!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349cdf2452bc7cf7e0b6186f04e97bc9c5e0605d" translate="yes" xml:space="preserve">
          <source>If you know of any other loaders or plugins that help with or enhance Hot Module Replacement please submit a pull request to add to this list!</source>
          <target state="translated">如果你知道任何其他加载器或插件,帮助或增强热模块替换,请提交一个拉动请求,添加到这个列表中。</target>
        </trans-unit>
        <trans-unit id="f1eb178e51c940150e982311e6fffe632a87860f" translate="yes" xml:space="preserve">
          <source>If you need to define two different loader configs, you can also change the config's property name via &lt;code&gt;html-loader?config=otherHtmlLoaderConfig&lt;/code&gt;:</source>
          <target state="translated">如果需要定义两个不同的加载器配置，还可以通过 &lt;code&gt;html-loader?config=otherHtmlLoaderConfig&lt;/code&gt; 更改配置的属性名称：</target>
        </trans-unit>
        <trans-unit id="77f0d6d82229ff0d53ed4faf2eefabc87a679d20" translate="yes" xml:space="preserve">
          <source>If you need to pass &lt;a href=&quot;https://github.com/webpack/html-loader/pull/46&quot;&gt;more advanced options&lt;/a&gt;, especially those which cannot be stringified, you can also define an &lt;code&gt;htmlLoader&lt;/code&gt;-property on your &lt;code&gt;webpack.config.js&lt;/code&gt;:</source>
          <target state="translated">如果您需要通过&lt;a href=&quot;https://github.com/webpack/html-loader/pull/46&quot;&gt;更高级的选项&lt;/a&gt;，尤其是那些不能被字符串化的，你也可以定义一个 &lt;code&gt;htmlLoader&lt;/code&gt; 的 -property您 &lt;code&gt;webpack.config.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="91242af898a06d58af220036209ec5d56d99b914" translate="yes" xml:space="preserve">
          <source>If you open &lt;code&gt;index.html&lt;/code&gt; in your code editor, you'll see that the &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; has created an entirely new file for you and that all the bundles are automatically added.</source>
          <target state="translated">如果在代码编辑器中打开 &lt;code&gt;index.html&lt;/code&gt; ，您会看到 &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; 为您创建了一个全新的文件，并且所有捆绑软件都已自动添加。</target>
        </trans-unit>
        <trans-unit id="4997bd66146ddd1583e50ecbccb35bb2caa014f5" translate="yes" xml:space="preserve">
          <source>If you open your browser to &lt;code&gt;http://localhost:8080&lt;/code&gt; (i.e. &lt;code&gt;http://127.0.0.1&lt;/code&gt;) you should see your webpack application being served from the &lt;code&gt;dist&lt;/code&gt; directory. If you stop the server and refresh, the webpack application is no longer available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeca2dfc9ff183365ee9c8ebd340fc597fbdf457" translate="yes" xml:space="preserve">
          <source>If you open your browser to &lt;code&gt;http://localhost:8080&lt;/code&gt; (i.e. &lt;code&gt;http://127.0.0.1&lt;/code&gt;) you should see your webpack application being served up from the &lt;code&gt;dist&lt;/code&gt; directory. If you stop the server and refresh, the webpack application is no longer available.</source>
          <target state="translated">如果打开浏览器到 &lt;code&gt;http://localhost:8080&lt;/code&gt; （即 &lt;code&gt;http://127.0.0.1&lt;/code&gt; ），则应该从 &lt;code&gt;dist&lt;/code&gt; 目录中看到webpack应用程序正在运行。如果停止服务器并刷新，则webpack应用程序将不再可用。</target>
        </trans-unit>
        <trans-unit id="21d1354d2cc85df91b9943102715a84d844c5f0d" translate="yes" xml:space="preserve">
          <source>If you pass a name to &lt;a href=&quot;../api/cli#configuration-options&quot;&gt;&lt;code&gt;--config-name&lt;/code&gt;&lt;/a&gt; flag, webpack will only build that specific configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb7db4d2429df6b27c9db5ba10da37161ee2934" translate="yes" xml:space="preserve">
          <source>If you pass a name to &lt;code&gt;--config-name&lt;/code&gt; flag, webpack will only build that specific configuration.</source>
          <target state="translated">如果将名称传递给 &lt;code&gt;--config-name&lt;/code&gt; 标志，则webpack将仅构建该特定配置。</target>
        </trans-unit>
        <trans-unit id="04ce1ae73d1c22600122a228da4c67a184ad35c2" translate="yes" xml:space="preserve">
          <source>If you pass the generated CSS on to the &lt;code&gt;css-loader&lt;/code&gt;, all urls must be relative to the entry-file (e.g. &lt;code&gt;main.scss&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2be3219a352f8fa6b591ccbca064150835f610" translate="yes" xml:space="preserve">
          <source>If you pass the generated CSS on to the css-loader, all urls must be relative to the entry-file (e.g. &lt;code&gt;main.scss&lt;/code&gt;).</source>
          <target state="translated">如果将生成的CSS传递给css-loader，则所有URL必须相对于入口文件（例如 &lt;code&gt;main.scss&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="27f65f39502e6e0ddec9ed35ef7854d3bc12f547" translate="yes" xml:space="preserve">
          <source>If you prefix &lt;code&gt;typeof&lt;/code&gt; to the key, it's only defined for typeof calls.</source>
          <target state="translated">如果将 &lt;code&gt;typeof&lt;/code&gt; 前缀作为键，则仅为typeof调用定义。</target>
        </trans-unit>
        <trans-unit id="5af3362992e5c579579a607b6fc872a5aaf38485" translate="yes" xml:space="preserve">
          <source>If you receive this message it means that you have the npm package &lt;code&gt;babel&lt;/code&gt; installed and use the short notation of the loader in the webpack config (which is not valid anymore as of webpack 2.x):</source>
          <target state="translated">如果收到此消息，则意味着您已安装了npm软件包 &lt;code&gt;babel&lt;/code&gt; ,并在webpack配置中使用了加载程序的简称（从webpack 2.x开始不再有效）：</target>
        </trans-unit>
        <trans-unit id="6da7de69cbebadc1702b2e9e20a350f552af3dab" translate="yes" xml:space="preserve">
          <source>If you receive this message, it means that you have the npm package &lt;code&gt;babel&lt;/code&gt; installed and are using the short notation of the loader in the webpack config (which is not valid anymore as of webpack 2.x):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae419f87939abec9ae33ce5b2e6a5809823516ce" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;paths&lt;/code&gt; option, modules will be searched in the given &lt;code&gt;paths&lt;/code&gt;. This is Less' default behavior. &lt;code&gt;paths&lt;/code&gt; should be an array with absolute paths:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f59c00efbf5073e57c88eddbe0d5870f787cf96" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;paths&lt;/code&gt; option, modules will be searched in the given &lt;code&gt;paths&lt;/code&gt;. This is Stylus default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620cb2bd729e26242cd5c6f1646930cc385dd4c8" translate="yes" xml:space="preserve">
          <source>If you specify the &lt;code&gt;paths&lt;/code&gt; option, the &lt;code&gt;less-loader&lt;/code&gt; will not use webpack's resolver. Modules, that can't be resolved in the local folder, will be searched in the given &lt;code&gt;paths&lt;/code&gt;. This is Less' default behavior. &lt;code&gt;paths&lt;/code&gt; should be an array with absolute paths:</source>
          <target state="translated">如果指定 &lt;code&gt;paths&lt;/code&gt; 选项，则 &lt;code&gt;less-loader&lt;/code&gt; 将不会使用webpack的解析程序。在本地文件夹中无法解析的模块，将在给定的 &lt;code&gt;paths&lt;/code&gt; 进行搜索。这是Less的默认行为。 &lt;code&gt;paths&lt;/code&gt; 应该是具有绝对路径的数组：</target>
        </trans-unit>
        <trans-unit id="e11a354c365e4c567d8a964e97c63557ce8cc05d" translate="yes" xml:space="preserve">
          <source>If you target an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement&quot;&gt;iframe&lt;/a&gt; make sure that the parent document has sufficient access rights to reach into the frame document and append elements to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaba97492bbb20edf74e8ccb7f017d1bf70d952" translate="yes" xml:space="preserve">
          <source>If you took the route of using &lt;code&gt;webpack-dev-middleware&lt;/code&gt; instead of &lt;code&gt;webpack-dev-server&lt;/code&gt;, please use the &lt;a href=&quot;https://github.com/webpack-contrib/webpack-hot-middleware&quot;&gt;&lt;code&gt;webpack-hot-middleware&lt;/code&gt;&lt;/a&gt; package to enable HMR on your custom server or application.</source>
          <target state="translated">如果您选择使用 &lt;code&gt;webpack-dev-middleware&lt;/code&gt; 而不是 &lt;code&gt;webpack-dev-server&lt;/code&gt; ，请使用&lt;a href=&quot;https://github.com/webpack-contrib/webpack-hot-middleware&quot;&gt; &lt;code&gt;webpack-hot-middleware&lt;/code&gt; &lt;/a&gt;软件包在自定义服务器或应用程序上启用HMR。</target>
        </trans-unit>
        <trans-unit id="257b41da17181f717f34d7e9b4aabec6c65516d5" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;&amp;lt;custom-elements&amp;gt;&lt;/code&gt;, and lots of them make use of a &lt;code&gt;custom-src&lt;/code&gt; attribute, you don't have to specify each combination &lt;code&gt;&amp;lt;tag&amp;gt;:&amp;lt;attribute&amp;gt;&lt;/code&gt;: just specify an empty tag like &lt;code&gt;attrs=:custom-src&lt;/code&gt; and it will match every element.</source>
          <target state="translated">如果使用 &lt;code&gt;&amp;lt;custom-elements&amp;gt;&lt;/code&gt; ，并且其中许多都使用 &lt;code&gt;custom-src&lt;/code&gt; 属性，则不必指定每个组合 &lt;code&gt;&amp;lt;tag&amp;gt;:&amp;lt;attribute&amp;gt;&lt;/code&gt; ：只需指定一个空标签，例如 &lt;code&gt;attrs=:custom-src&lt;/code&gt; ，它将匹配每个元素。</target>
        </trans-unit>
        <trans-unit id="deed18356d0598e516166163156081b7d79c7134" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;require.context&lt;/code&gt;, webpack will watch your entire directory. You will need to ignore files and/or directories so that unwanted changes will not trigger a rebuild.</source>
          <target state="translated">如果使用 &lt;code&gt;require.context&lt;/code&gt; ，则webpack将监视整个目录。您将需要忽略文件和/或目录，以便不需要的更改不会触发重建。</target>
        </trans-unit>
        <trans-unit id="436d26be1e1b400b4d8bd715d78a54d118c1d9d1" translate="yes" xml:space="preserve">
          <source>If you use JS styles the &lt;a href=&quot;https://github.com/postcss/postcss-js&quot;&gt;&lt;code&gt;postcss-js&lt;/code&gt;&lt;/a&gt; parser, add the &lt;code&gt;execute&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c304a1dc248e202f2e6dc69866582fd83a6a3356" translate="yes" xml:space="preserve">
          <source>If you use JS styles without the [&lt;code&gt;postcss-js&lt;/code&gt;][postcss-js] parser, add the &lt;code&gt;exec&lt;/code&gt; option.</source>
          <target state="translated">如果使用不带[ &lt;code&gt;postcss-js&lt;/code&gt; ] [postcss-js]解析器的JS样式，请添加 &lt;code&gt;exec&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="78690a89ba0564d3d44fca1bb4464526f2f7ae9e" translate="yes" xml:space="preserve">
          <source>If you use the CLI, make sure &lt;strong&gt;inline mode&lt;/strong&gt; is disabled.</source>
          <target state="translated">如果使用CLI，请确保禁用&lt;strong&gt;串联模式&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5d00a18ab3b862fed22864bf39fbac55c69b2279" translate="yes" xml:space="preserve">
          <source>If you use your own &lt;code&gt;minify&lt;/code&gt; function please read the &lt;code&gt;minify&lt;/code&gt; section for cache invalidation correctly.</source>
          <target state="translated">如果您使用自己的 &lt;code&gt;minify&lt;/code&gt; 函数，请正确阅读 &lt;code&gt;minify&lt;/code&gt; 部分以了解缓存失效。</target>
        </trans-unit>
        <trans-unit id="69b1cffee5ef172fb6a952e822c97a2074033171" translate="yes" xml:space="preserve">
          <source>If you use your own &lt;code&gt;minify&lt;/code&gt; function please read the &lt;code&gt;minify&lt;/code&gt; section for handling source maps correctly.</source>
          <target state="translated">如果您使用自己的 &lt;code&gt;minify&lt;/code&gt; 功能，请阅读 &lt;code&gt;minify&lt;/code&gt; 部分以正确处理源地图。</target>
        </trans-unit>
        <trans-unit id="72f56d6f7a53c8ace53f92bf99a498cc22b3c3d8" translate="yes" xml:space="preserve">
          <source>If you want only content &lt;code&gt;src/directory-nested/&lt;/code&gt;, you should only indicate &lt;code&gt;glob&lt;/code&gt; in &lt;code&gt;from&lt;/code&gt;. The path to the folder in which the search should take place, should be moved to &lt;code&gt;context&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e0754788d34dc99a84e18a12eebf0b4b428bc2" translate="yes" xml:space="preserve">
          <source>If you want source maps in your extracted CSS files, you need to set the &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#sourcemap&quot;&gt;&lt;code&gt;sourceMap&lt;/code&gt; option&lt;/a&gt; of the &lt;strong&gt;css-loader&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968f1b8beb2b4018803cc4c72d20171f373867ca" translate="yes" xml:space="preserve">
          <source>If you want to add a directory to search in that takes precedence over &lt;code&gt;node_modules/&lt;/code&gt;:</source>
          <target state="translated">如果要添加要搜索的目录，该目录优先于 &lt;code&gt;node_modules/&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4536a1d96e062d79005d6ef15707ef6a91b0e0c2" translate="yes" xml:space="preserve">
          <source>If you want to change the behavior according to the &lt;strong&gt;mode&lt;/strong&gt; variable inside the &lt;em&gt;webpack.config.js&lt;/em&gt;, you have to export a function instead of an object:</source>
          <target state="translated">如果要根据&lt;em&gt;webpack.config.js中&lt;/em&gt;的&lt;strong&gt;mode&lt;/strong&gt;变量更改行为，则必须导出函数而不是对象：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43705bee6375973feaf957218199905c3adacd95" translate="yes" xml:space="preserve">
          <source>If you want to edit the original Less files inside Chrome, &lt;a href=&quot;https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0&quot;&gt;there's a good blog post&lt;/a&gt;. The blog post is about Sass but it also works for Less.</source>
          <target state="translated">如果您想在Chrome中编辑原始的Less文件，&lt;a href=&quot;https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0&quot;&gt;则有一篇不错的博客文章&lt;/a&gt;。该博客文章是关于Sass的，但也适用于Less。</target>
        </trans-unit>
        <trans-unit id="bfb20005c6ba18fa93c171fc19c4ab58f9ef6bbc" translate="yes" xml:space="preserve">
          <source>If you want to edit the original Sass files inside Chrome, &lt;a href=&quot;https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0&quot;&gt;there's a good blog post&lt;/a&gt;. Checkout &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/master/test&quot;&gt;test/sourceMap&lt;/a&gt; for a running example.</source>
          <target state="translated">如果您想在Chrome中编辑原始的Sass文件，&lt;a href=&quot;https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0&quot;&gt;则有一篇不错的博客文章&lt;/a&gt;。检出&lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/master/test&quot;&gt;test / sourceMap&lt;/a&gt;以获取正在运行的示例。</target>
        </trans-unit>
        <trans-unit id="3117df9404903a9d291836857e6647eadfed44c8" translate="yes" xml:space="preserve">
          <source>If you want to learn more about all the features and options that the &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; provides, then you should read up on it on the &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin&quot;&gt;&lt;code&gt;HtmlWebpackPlugin&lt;/code&gt;&lt;/a&gt; repo.</source>
          <target state="translated">如果您想了解有关 &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; 提供的所有功能和选项的更多信息，则应在&lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin&quot;&gt; &lt;code&gt;HtmlWebpackPlugin&lt;/code&gt; 存储&lt;/a&gt;库上进行阅读。</target>
        </trans-unit>
        <trans-unit id="97e1dec242e807347bf2fd93af746d1ce130a0f2" translate="yes" xml:space="preserve">
          <source>If you want to learn more about the inner workings of &lt;code&gt;package.json&lt;/code&gt;, then we recommend reading the &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;npm documentation&lt;/a&gt;.</source>
          <target state="translated">如果您想了解更多关于 &lt;code&gt;package.json&lt;/code&gt; 的内部工作原理，那么我们建议您阅读&lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;npm文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c12845e61292df537a108e68e63b76e33cc3a583" translate="yes" xml:space="preserve">
          <source>If you want to learn more about webpack's design, you can check out the &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;basic concepts&lt;/a&gt; and &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;configuration&lt;/a&gt; pages. Furthermore, the &lt;a href=&quot;https://webpack.js.org/api&quot;&gt;API&lt;/a&gt; section digs into the various interfaces webpack offers.</source>
          <target state="translated">如果您想了解有关webpack设计的更多信息，可以查看&lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;基本概念&lt;/a&gt;和&lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;配置&lt;/a&gt;页面。此外，&amp;ldquo; &lt;a href=&quot;https://webpack.js.org/api&quot;&gt;API&amp;rdquo;&lt;/a&gt;部分将挖掘Webpack提供的各种接口。</target>
        </trans-unit>
        <trans-unit id="fa6bf4a6e261d9afd0da8942ff1dc9e277ab2196" translate="yes" xml:space="preserve">
          <source>If you want to manually recompile the bundle, navigating to the &lt;code&gt;/invalidate&lt;/code&gt; route will &lt;a href=&quot;../api/node#invalidate-watching&quot;&gt;invalidate&lt;/a&gt; the current compilation of the bundle and recompile it for you via &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware#invalidate&quot;&gt;webpack-dev-middleware&lt;/a&gt;. Depending on your configuration, URL may look like &lt;code&gt;http://localhost:9000/invalidate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4a2b3891ac41e2957230fe54b901d08e44f7a0" translate="yes" xml:space="preserve">
          <source>If you want to prepend Sass code before the actual entry file, you can set the &lt;code&gt;data&lt;/code&gt; option. In this case, the sass-loader will not override the &lt;code&gt;data&lt;/code&gt; option but just append the entry's content. This is especially useful when some of your Sass variables depend on the environment:</source>
          <target state="translated">如果要在实际输入文件之前添加Sass代码，则可以设置 &lt;code&gt;data&lt;/code&gt; 选项。在这种情况下，sass-loader将不会覆盖 &lt;code&gt;data&lt;/code&gt; 选项，而只会附加条目的内容。当某些Sass变量取决于环境时，这特别有用：</target>
        </trans-unit>
        <trans-unit id="2661ac1b238c212bd91c6d7c897aa1e6c1bfb9f0" translate="yes" xml:space="preserve">
          <source>If you want to process styles written in JavaScript, use the &lt;a href=&quot;https://github.com/postcss/postcss-js&quot;&gt;&lt;code&gt;postcss-js&lt;/code&gt;&lt;/a&gt; parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692a4cb93a9eaa0dd0bfc814d936beb18b2c98b8" translate="yes" xml:space="preserve">
          <source>If you want to process styles written in JavaScript, use the [postcss-js] parser.</source>
          <target state="translated">如果你想处理用JavaScript编写的样式,请使用[postcss-js]解析器。</target>
        </trans-unit>
        <trans-unit id="cfd2b0a995875fef1de386a42151485fa10f8038" translate="yes" xml:space="preserve">
          <source>If you want to proxy multiple, specific paths to the same target, you can use an array of one or more objects with a &lt;code&gt;context&lt;/code&gt; property:</source>
          <target state="translated">如果要代理到同一目标的多个特定路径，则可以使用带有 &lt;code&gt;context&lt;/code&gt; 属性的一个或多个对象的数组：</target>
        </trans-unit>
        <trans-unit id="8144f66e01c46baa3b7218d3b20c9b6ffb372686" translate="yes" xml:space="preserve">
          <source>If you want to show warnings as well as errors:</source>
          <target state="translated">如果你想显示警告以及错误。</target>
        </trans-unit>
        <trans-unit id="6d044c627a3087c3c127d609464b2e71e0f710de" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;https://github.com/survivejs/webpack-merge&quot;&gt;&lt;code&gt;webpack-merge&lt;/code&gt;&lt;/a&gt;, you can set the &lt;code&gt;merge&lt;/code&gt; property of &lt;code&gt;myObj&lt;/code&gt; to the name of the configuration you want to merge it with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2ffc5654813a1f51c3c4fe161d20c76df425a5" translate="yes" xml:space="preserve">
          <source>If you want to use a custom configuration for this plugin in &lt;a href=&quot;../concepts/mode#mode-development&quot;&gt;development mode&lt;/a&gt;, make sure to disable the default one. I.e. set &lt;code&gt;devtool: false&lt;/code&gt;.</source>
          <target state="translated">如果要在&lt;a href=&quot;../concepts/mode#mode-development&quot;&gt;开发模式下&lt;/a&gt;对此插件使用自定义配置，请确保禁用默认配置。即设置 &lt;code&gt;devtool: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b47b433cdf4a7b88e234b8bef90b347021235853" translate="yes" xml:space="preserve">
          <source>If you want to use a custom configuration for this plugin in &lt;a href=&quot;../configuration/mode#mode-development&quot;&gt;development mode&lt;/a&gt;, make sure to disable the default one. I.e. set &lt;code&gt;devtool: false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20f7035a1c625d3a95f8e0f6d1588640e0eb5a9" translate="yes" xml:space="preserve">
          <source>If you want to use a custom encoding algorithm, you may specify a custom function to encode a file content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fe93eb01cfafb980ed57e4c5a137d0b5d4fa54" translate="yes" xml:space="preserve">
          <source>If you want to use flags when opening the browser like opening an incognito window (&lt;code&gt;--incognito&lt;/code&gt; flag), you can set &lt;code&gt;open&lt;/code&gt; to an object. The object accepts all &lt;a href=&quot;https://www.npmjs.com/package/open&quot;&gt;open&lt;/a&gt; options, &lt;code&gt;app&lt;/code&gt; property must be an array. The first element in the array must be the browser name and the other following elements are the flags you want to use. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9883aa1601e33e32768dc0b4c84d91a7c5f4875a" translate="yes" xml:space="preserve">
          <source>If you want to use one of the pre-defined behaviours e.g. &lt;code&gt;'minimal'&lt;/code&gt; but still override one or more of the rules: specify the desired &lt;code&gt;stats.preset&lt;/code&gt; and add the customized or additional rules afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c431dc55a50b2e85215834366ed4e1b26191d5f0" translate="yes" xml:space="preserve">
          <source>If you wish to specify multiple pages to open in the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac1da0960780023da702e64f85c514373ee439d" translate="yes" xml:space="preserve">
          <source>If you would like to know more about how Hot Module Replacement works, we recommend you read the &lt;a href=&quot;hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; guide.</source>
          <target state="translated">如果您想进一步了解热模块更换的工作方式，我们建议您阅读&lt;a href=&quot;hot-module-replacement&quot;&gt;热模块更换&lt;/a&gt;指南。</target>
        </trans-unit>
        <trans-unit id="9bf03d2930af9b7367c7bba8c8c7e6482d34ab7d" translate="yes" xml:space="preserve">
          <source>If you'd like to extract the media queries from the extracted CSS (so mobile users don't need to load desktop or tablet specific CSS anymore) you should use one of the following plugins:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6449c4755a42b9694b9c46350d324cc07ae33b6" translate="yes" xml:space="preserve">
          <source>If you'd like to transpile the contents of your element you can &lt;a href=&quot;../configuration/module#ruleuse&quot;&gt;chain an additional loader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b101f9e29bfabd0203dfc680c95c85731c80c8a" translate="yes" xml:space="preserve">
          <source>If you'd like to transpile the contents of your element's &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; block you can &lt;a href=&quot;../configuration/module#rule-use&quot;&gt;chain an additional loader&lt;/a&gt;.</source>
          <target state="translated">如果您想转译元素 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 块的内容，则可以&lt;a href=&quot;../configuration/module#rule-use&quot;&gt;链接一个附加的loader&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40478936be89404f1926380780d619d3713bb5e5" translate="yes" xml:space="preserve">
          <source>If you're &lt;a href=&quot;development#using-webpack-dev-middleware&quot;&gt;using &lt;code&gt;webpack-dev-middleware&lt;/code&gt;&lt;/a&gt;, check out the &lt;a href=&quot;https://github.com/webpack-contrib/webpack-hot-middleware&quot;&gt;&lt;code&gt;webpack-hot-middleware&lt;/code&gt;&lt;/a&gt; package to enable HMR on your custom dev server.</source>
          <target state="translated">如果您&lt;a href=&quot;development#using-webpack-dev-middleware&quot;&gt;使用的是 &lt;code&gt;webpack-dev-middleware&lt;/code&gt; &lt;/a&gt;，请签出&lt;a href=&quot;https://github.com/webpack-contrib/webpack-hot-middleware&quot;&gt; &lt;code&gt;webpack-hot-middleware&lt;/code&gt; &lt;/a&gt;软件包以在自定义开发服务器上启用HMR。</target>
        </trans-unit>
        <trans-unit id="433f6609aab5593eb53510cc1a09e7e1d9a068e3" translate="yes" xml:space="preserve">
          <source>If you're having trouble, navigating to the &lt;code&gt;/webpack-dev-server&lt;/code&gt; route will show where files are served. For example, &lt;code&gt;http://localhost:9000/webpack-dev-server&lt;/code&gt;.</source>
          <target state="translated">如果遇到问题，导航到 &lt;code&gt;/webpack-dev-server&lt;/code&gt; 路由将显示在何处提供文件。例如， &lt;code&gt;http://localhost:9000/webpack-dev-server&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0544daa41d299289d34b44e4de62509cd8b45d81" translate="yes" xml:space="preserve">
          <source>If you're just generating CSS without passing it to the &lt;code&gt;css-loader&lt;/code&gt;, it must be relative to your web root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c4be9e29950c4aac888fe42e7fa088c7f4db54" translate="yes" xml:space="preserve">
          <source>If you're just generating CSS without passing it to the css-loader, it must be relative to your web root.</source>
          <target state="translated">如果你只是生成CSS,而没有把它传递给css-loader,那么它必须是相对于你的web根的。</target>
        </trans-unit>
        <trans-unit id="fcd854a0141dca5c0569c55e3b38b3dd7d912dcd" translate="yes" xml:space="preserve">
          <source>If you're using a library like &lt;a href=&quot;https://reactjs.org/&quot;&gt;&lt;code&gt;react&lt;/code&gt;&lt;/a&gt;, you should actually see a significant drop in bundle size after adding &lt;code&gt;DefinePlugin&lt;/code&gt;. Also, note that any of our local &lt;code&gt;/src&lt;/code&gt; code can key off of this as well, so the following check would be valid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955fcffcabfc468fe69038636f0fedc69977e502" translate="yes" xml:space="preserve">
          <source>If you're using a library like &lt;a href=&quot;https://reactjs.org/&quot;&gt;&lt;code&gt;react&lt;/code&gt;&lt;/a&gt;, you should actually see a significant drop in bundle size after adding this plugin. Also note that any of our local &lt;code&gt;/src&lt;/code&gt; code can key off of this as well, so the following check would be valid:</source>
          <target state="translated">如果您使用的是类似&lt;a href=&quot;https://reactjs.org/&quot;&gt; &lt;code&gt;react&lt;/code&gt; &lt;/a&gt;的库，则在添加此插件后，实际上应该会看到捆绑包大小的明显下降。还要注意，我们的任何本地 &lt;code&gt;/src&lt;/code&gt; 代码也可以对此进行锁定，因此以下检查将是有效的：</target>
        </trans-unit>
        <trans-unit id="f4d7ea6782c3b0d78cacf60b4faecfbb8ec82c1c" translate="yes" xml:space="preserve">
          <source>If you're using dev-server through the Node.js API, the options in &lt;code&gt;devServer&lt;/code&gt; will be ignored. Pass the options as a second parameter instead: &lt;code&gt;new WebpackDevServer(compiler, {...})&lt;/code&gt;. &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/tree/master/examples/api/simple&quot;&gt;See here&lt;/a&gt; for an example of how to use webpack-dev-server through the Node.js API.</source>
          <target state="translated">如果您通过Node.js API使用dev-server，则 &lt;code&gt;devServer&lt;/code&gt; 中的选项将被忽略。而是将选项作为第二个参数传递： &lt;code&gt;new WebpackDevServer(compiler, {...})&lt;/code&gt; 。&lt;a href=&quot;https://github.com/webpack/webpack-dev-server/tree/master/examples/api/simple&quot;&gt;请参阅此处&lt;/a&gt;，以获取有关如何通过Node.js API使用webpack-dev-server的示例。</target>
        </trans-unit>
        <trans-unit id="610f75440eb98193b999ba60a63c4bbb0b031fe1" translate="yes" xml:space="preserve">
          <source>If you're using npm 5+, you'll probably also see a &lt;code&gt;package-lock.json&lt;/code&gt; file in your directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473ca25b69608d4b3b3537758f74fa69dcd408bc" translate="yes" xml:space="preserve">
          <source>If you're using npm 5, you'll probably also see a &lt;code&gt;package-lock.json&lt;/code&gt; file in your directory.</source>
          <target state="translated">如果您使用的是npm 5，则可能还会在目录中看到 &lt;code&gt;package-lock.json&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="cedae6899c83e4e61f3b19cc0b8a37d18ec5d90b" translate="yes" xml:space="preserve">
          <source>If you're using webpack v4 or later, you'll also need to install the &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9244edb3545b88e9adda0700b59345bdd1ee032" translate="yes" xml:space="preserve">
          <source>If you're using webpack v4 or later, you'll need to install a &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;.</source>
          <target state="translated">如果您使用的是webpack v4或更高版本，则需要安装&lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f854e87809cd03a2c329f4b3b53db2652e6fdb8" translate="yes" xml:space="preserve">
          <source>If you've been following the guides from the start, you will now have a small project that shows &quot;Hello webpack&quot;. Now let's try to incorporate some other assets, like images, to see how they can be handled.</source>
          <target state="translated">如果你从一开始就跟着指南走,你现在会有一个小项目,显示 &quot;你好,webpack&quot;。现在让我们试着加入一些其他资产,比如图片,看看如何处理它们。</target>
        </trans-unit>
        <trans-unit id="376dc09bff1bba9f0948a35a773edd37bbd4461e" translate="yes" xml:space="preserve">
          <source>If you've been following the guides, you should have a solid understanding of some of the webpack basics. Before we continue, let's look into setting up a development environment to make our lives a little easier.</source>
          <target state="translated">如果你一直在关注指南,你应该对webpack的一些基础知识有一个坚实的了解。在我们继续之前,让我们先来看看如何设置一个开发环境,让我们的生活更轻松一些。</target>
        </trans-unit>
        <trans-unit id="1a34d4c2e1eb1252875beb018564620f41e7cd46" translate="yes" xml:space="preserve">
          <source>If your code did have some side effects though, an array can be provided instead:</source>
          <target state="translated">不过如果你的代码确实有一些副作用,可以提供一个数组代替。</target>
        </trans-unit>
        <trans-unit id="f24ea5311ede964cc4eb9a58bffeba73c5319159" translate="yes" xml:space="preserve">
          <source>If your configuration creates more than a single &quot;chunk&quot; (as with multiple entry points or when using plugins like CommonsChunkPlugin), you should use &lt;a href=&quot;../configuration/output#output-filename&quot;&gt;substitutions&lt;/a&gt; to ensure that each file has a unique name.</source>
          <target state="translated">如果您的配置创建了多个&amp;ldquo;块&amp;rdquo;（例如具有多个入口点或使用诸如CommonsChunkPlugin之类的插件时），则应使用&lt;a href=&quot;../configuration/output#output-filename&quot;&gt;替代项&lt;/a&gt;来确保每个文件都具有唯一名称。</target>
        </trans-unit>
        <trans-unit id="725c044cd6d7ddb03116e3a849cdef91d68bda95" translate="yes" xml:space="preserve">
          <source>If your configuration creates more than a single &quot;chunk&quot; (as with multiple entry points or when using plugins like CommonsChunkPlugin), you should use &lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;substitutions&lt;/a&gt; to ensure that each file has a unique name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59d1a7b49cf233fef4246ce4878b9aa5af8c8e9" translate="yes" xml:space="preserve">
          <source>If your project structure is as follows -</source>
          <target state="translated">如果您的项目结构如下</target>
        </trans-unit>
        <trans-unit id="639afc9455bf507238e1acce0c048d9111fee986" translate="yes" xml:space="preserve">
          <source>If, for one reason or another, you need to extract CSS as a plain string resource (i.e. not wrapped in a JS module) you might want to check out the &lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt;extract-loader&lt;/a&gt;. It's useful when you, for instance, need to post process the CSS as a string.</source>
          <target state="translated">如果出于某种原因，您需要将CSS提取为纯字符串资源（即未包装在JS模块中），则可能需要检出&lt;a href=&quot;https://github.com/peerigon/extract-loader&quot;&gt;extract-loader&lt;/a&gt;。例如，当您需要将CSS作为字符串进行后期处理时，这很有用。</target>
        </trans-unit>
        <trans-unit id="be4d8e6b8fcf3dfa1e1e239c21e1dc5cb4ba7a79" translate="yes" xml:space="preserve">
          <source>Ignore Moment Locales</source>
          <target state="translated">忽略时刻位置</target>
        </trans-unit>
        <trans-unit id="a435148a01556fdc54ef2de21f7dd203f7ffae42" translate="yes" xml:space="preserve">
          <source>Ignore the specified files, i.e. those matching the provided paths or regular expressions, while in &lt;a href=&quot;../configuration/watch&quot;&gt;watch mode&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;../configuration/watch&quot;&gt;监视模式下&lt;/a&gt;，忽略指定的文件，即与提供的路径或正则表达式匹配的文件。</target>
        </trans-unit>
        <trans-unit id="c3794c06b693b8264fac92b3e7af27c42a0942c6" translate="yes" xml:space="preserve">
          <source>IgnorePlugin</source>
          <target state="translated">IgnorePlugin</target>
        </trans-unit>
        <trans-unit id="88aabdfba8b35d16ba3236b2658f2c778ed92421" translate="yes" xml:space="preserve">
          <source>IgnorePlugin prevents the generation of modules for &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; calls matching the regular expressions or filter functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8140de6c0c1b1c1de17949e249293f4cc955ec" translate="yes" xml:space="preserve">
          <source>Ignoring Warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a5b84b90eaf9c6a4ea4cf7776f8cdbe987e92e" translate="yes" xml:space="preserve">
          <source>Ignoring files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2f56c94e2202488b01ff065a7ba18f37dc3e4f" translate="yes" xml:space="preserve">
          <source>ImageMinimizerWebpackPlugin</source>
          <target state="translated">ImageMinimizerWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="326354ab940bc080aae78d325dc99a2131a28bd4" translate="yes" xml:space="preserve">
          <source>Images can be optimized in two modes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8bda54fda155ace8dbdcda4892ae55f3554d5b" translate="yes" xml:space="preserve">
          <source>Imagine that the server is running under &lt;code&gt;http://localhost:8080&lt;/code&gt; and &lt;a href=&quot;output#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;bundle.js&lt;/code&gt;. By default the &lt;code&gt;devServer.publicPath&lt;/code&gt; is &lt;code&gt;'/'&lt;/code&gt;, so your bundle is available as &lt;code&gt;http://localhost:8080/bundle.js&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb0b9dff04d0a62760c3fff33ad7543f76cde23" translate="yes" xml:space="preserve">
          <source>Imagine that the server is running under &lt;code&gt;http://localhost:8080&lt;/code&gt; and &lt;code&gt;output.filename&lt;/code&gt; is set to &lt;code&gt;bundle.js&lt;/code&gt;. By default the &lt;code&gt;publicPath&lt;/code&gt; is &lt;code&gt;&quot;/&quot;&lt;/code&gt;, so your bundle is available as &lt;code&gt;http://localhost:8080/bundle.js&lt;/code&gt;.</source>
          <target state="translated">假设服务器在 &lt;code&gt;http://localhost:8080&lt;/code&gt; 下运行，并且 &lt;code&gt;output.filename&lt;/code&gt; 设置为 &lt;code&gt;bundle.js&lt;/code&gt; 。默认情况下， &lt;code&gt;publicPath&lt;/code&gt; 为 &lt;code&gt;&quot;/&quot;&lt;/code&gt; ，因此您的捆绑软件可以通过 &lt;code&gt;http://localhost:8080/bundle.js&lt;/code&gt; 获得。</target>
        </trans-unit>
        <trans-unit id="f0cf4b0beaddcac14c35d71c0d46cfc1fd8eba33" translate="yes" xml:space="preserve">
          <source>Import (or &lt;code&gt;require&lt;/code&gt;) the target file(s) in one of the bundle's files:</source>
          <target state="translated">将目标文件导入（或 &lt;code&gt;require&lt;/code&gt; ）捆绑文件中的一个文件：</target>
        </trans-unit>
        <trans-unit id="3bf0c2255848cfe69bf20c10741b26fe85245147" translate="yes" xml:space="preserve">
          <source>Import JSON files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08454e30a8e2f79f5da7237c81da8a989d26ead0" translate="yes" xml:space="preserve">
          <source>Imported By Multiple Other Module Groups</source>
          <target state="translated">由多个其他模块组导入</target>
        </trans-unit>
        <trans-unit id="d02ddeadb4764ce766326f1cbeb008729d6153c6" translate="yes" xml:space="preserve">
          <source>Imported By Non Import</source>
          <target state="translated">进口的非进口的</target>
        </trans-unit>
        <trans-unit id="539edcd7d5dd1d51f7865c8bc1317fee010277e4" translate="yes" xml:space="preserve">
          <source>Imported From Other Chunk</source>
          <target state="translated">从其他国家进口</target>
        </trans-unit>
        <trans-unit id="5b9034dc51835388208edea073d26717ae663834" translate="yes" xml:space="preserve">
          <source>Imported With &lt;code&gt;import()&lt;/code&gt;</source>
          <target state="translated">用 &lt;code&gt;import()&lt;/code&gt; 导入</target>
        </trans-unit>
        <trans-unit id="fd2f621378f748feef72292689f57fd2641f07c9" translate="yes" xml:space="preserve">
          <source>Imported modules are initialized for each runtime chunk separately, so if you include multiple entry points on a page, beware of this behavior. You will probably want to set it to &lt;code&gt;single&lt;/code&gt; or use another configuration that allows you to only have one runtime instance.</source>
          <target state="translated">分别为每个运行时块初始化导入的模块，因此，如果在页面上包含多个入口点，请注意此行为。您可能希望将其设置为 &lt;code&gt;single&lt;/code&gt; 或使用另一种配置，该配置仅允许您有一个运行时实例。</target>
        </trans-unit>
        <trans-unit id="96788976db605557505d68fac01ff154a7693417" translate="yes" xml:space="preserve">
          <source>Imported value is instantiable, just a decorated &lt;code&gt;Worker&lt;/code&gt;</source>
          <target state="translated">导入的值是可以实例化的，只是一个装饰 &lt;code&gt;Worker&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90ab5ed3bb3e27748d586ad9b9b11e2ab9efaaf8" translate="yes" xml:space="preserve">
          <source>Importing</source>
          <target state="translated">Importing</target>
        </trans-unit>
        <trans-unit id="ec5e30b24de03faf9d94e192aaa57d42cbc2571e" translate="yes" xml:space="preserve">
          <source>Importing Other Assets</source>
          <target state="translated">导入其他资产</target>
        </trans-unit>
        <trans-unit id="e42328ac01cd03a47978f064c93b392caf3861f0" translate="yes" xml:space="preserve">
          <source>Imports</source>
          <target state="translated">Imports</target>
        </trans-unit>
        <trans-unit id="d34e7361bf7658b83ee0515f2d661c61ea905b26" translate="yes" xml:space="preserve">
          <source>Imports in ESM are resolved more strictly. Relative requests must include a filename and file extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f93eaa8d0cbf9454a5cfafcab9af0120a82c0d2" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://en.wikipedia.org/wiki/Modular_programming&quot;&gt;modular programming&lt;/a&gt;, developers break programs up into discrete chunks of functionality called a &lt;em&gt;module&lt;/em&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://en.wikipedia.org/wiki/Modular_programming&quot;&gt;模块化编程中&lt;/a&gt;，开发人员将程序分解为离散的功能块，称为&lt;em&gt;模块&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ab4443f04ff278884ef55d9c054e1cadf01f2bfb" translate="yes" xml:space="preserve">
          <source>In &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;webpack-dev-middleware&lt;/a&gt; watch mode is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb69e3a92aa93a83c65692ac6f56581aaa33cd7" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;/abc/file.js&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ddaea92bab9dd87b2009c9bd2cd70ee9ea7119" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;webpack.common.js&lt;/code&gt;, we now have setup our &lt;code&gt;entry&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; configuration and we've included any plugins that are required for both environments. In &lt;code&gt;webpack.dev.js&lt;/code&gt;, we've set &lt;code&gt;mode&lt;/code&gt; to &lt;code&gt;development&lt;/code&gt;. Also, we've added the recommended &lt;code&gt;devtool&lt;/code&gt; for that environment (strong source mapping), as well as our simple &lt;code&gt;devServer&lt;/code&gt; configuration. Finally, in &lt;code&gt;webpack.prod.js&lt;/code&gt;,&lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;production&lt;/code&gt; which loads &lt;a href=&quot;../plugins/terser-webpack-plugin&quot;&gt;&lt;code&gt;TerserPlugin&lt;/code&gt;&lt;/a&gt;, which was first introduced by the &lt;a href=&quot;tree-shaking&quot;&gt;tree shaking&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65eccb467c3a0bedb1dc45797bad51730c3be1e7" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;webpack.common.js&lt;/code&gt;, we now have setup our &lt;code&gt;entry&lt;/code&gt; and &lt;code&gt;output&lt;/code&gt; configuration and we've included any plugins that are required for both environments. In &lt;code&gt;webpack.dev.js&lt;/code&gt;, we've set &lt;code&gt;mode&lt;/code&gt; to &lt;code&gt;development&lt;/code&gt;. Also, we've added the recommended &lt;code&gt;devtool&lt;/code&gt; for that environment (strong source mapping), as well as our simple &lt;code&gt;devServer&lt;/code&gt; configuration. Finally, in &lt;code&gt;webpack.prod.js&lt;/code&gt;,&lt;code&gt;mode&lt;/code&gt; is set to &lt;code&gt;production&lt;/code&gt; which loads &lt;code&gt;UglifyJSPlugin&lt;/code&gt; which was first introduced by the &lt;a href=&quot;tree-shaking&quot;&gt;tree shaking&lt;/a&gt; guide.</source>
          <target state="translated">在 &lt;code&gt;webpack.common.js&lt;/code&gt; 中，我们现在已经设置了 &lt;code&gt;entry&lt;/code&gt; 和 &lt;code&gt;output&lt;/code&gt; 配置，并且包括了这两种环境所需的所有插件。在 &lt;code&gt;webpack.dev.js&lt;/code&gt; 中，我们将 &lt;code&gt;mode&lt;/code&gt; 设置为 &lt;code&gt;development&lt;/code&gt; 。此外，我们还添加了针对该环境的推荐 &lt;code&gt;devtool&lt;/code&gt; （强大的源映射）以及简单的 &lt;code&gt;devServer&lt;/code&gt; 配置。最后，在 &lt;code&gt;webpack.prod.js&lt;/code&gt; 中，将 &lt;code&gt;mode&lt;/code&gt; 设置为 &lt;code&gt;production&lt;/code&gt; ，以加载 &lt;code&gt;UglifyJSPlugin&lt;/code&gt; ，这是&lt;a href=&quot;tree-shaking&quot;&gt;树抖动&lt;/a&gt;指南首先引入的。</target>
        </trans-unit>
        <trans-unit id="14d519ddcc60d79f99ddd5974173d9985e991418" translate="yes" xml:space="preserve">
          <source>In Aggressive Bundle Mode, a file can only appear in a single output chunk. Use the &lt;a href=&quot;commons-chunk-plugin&quot;&gt;Commons Chunk Plugin&lt;/a&gt; to split duplicated files into a single output chunk.</source>
          <target state="translated">在积极捆绑模式下，文件只能出现在单个输出块中。使用&lt;a href=&quot;commons-chunk-plugin&quot;&gt;Commons Chunk插件&lt;/a&gt;将重复的文件拆分为单个输出块。</target>
        </trans-unit>
        <trans-unit id="458e37908a6305c17605f06181d9bf793d7f4078" translate="yes" xml:space="preserve">
          <source>In Aggressive Bundle Mode, a file can only appear in a single output chunk. Use the &lt;a href=&quot;split-chunks-plugin&quot;&gt;Split Chunks Plugin&lt;/a&gt; to split duplicated files into a single output chunk. If a module is utilized by more than one chunk, the plugin will move it up to the first common parent to prevent code duplication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7a58ec1909df43dec904e096e452a8bad8f0aa" translate="yes" xml:space="preserve">
          <source>In DataURIs using the &lt;code&gt;text/javascript&lt;/code&gt; or &lt;code&gt;application/javascript&lt;/code&gt; mime type will also force module type to ESM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b937b6405cd612989b9db35b6a35c91ef79d75f4" translate="yes" xml:space="preserve">
          <source>In Multiple Chunks</source>
          <target state="translated">多段式</target>
        </trans-unit>
        <trans-unit id="ea5f4aa34c4be9c5a704b006300ca9419fe4a078" translate="yes" xml:space="preserve">
          <source>In a 100% ESM module world, identifying side effects is straightforward. However, we aren't there just yet, so in the mean time it's necessary to provide hints to webpack's compiler on the &quot;pureness&quot; of your code.</source>
          <target state="translated">在一个100% ESM模块的世界里,识别副作用是很直接的。然而,我们还没有做到这一点,所以在这段时间里,我们有必要向webpack的编译器提供关于你的代码 &quot;纯洁性 &quot;的提示。</target>
        </trans-unit>
        <trans-unit id="ac21d594ec06be5d523d2e717225eca39f697e30" translate="yes" xml:space="preserve">
          <source>In a Module</source>
          <target state="translated">在一个模块中</target>
        </trans-unit>
        <trans-unit id="1e9a8c580cf3308262a0c6136b0859d06aae9640" translate="yes" xml:space="preserve">
          <source>In a Rule the properties &lt;a href=&quot;#rule-test&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-include&quot;&gt;&lt;code&gt;include&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-exclude&quot;&gt;&lt;code&gt;exclude&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#rule-resource&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt; are matched with the resource and the property &lt;a href=&quot;#rule-issuer&quot;&gt;&lt;code&gt;issuer&lt;/code&gt;&lt;/a&gt; is matched with the issuer.</source>
          <target state="translated">规则中的性能&lt;a href=&quot;#rule-test&quot;&gt; &lt;code&gt;test&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#rule-include&quot;&gt; &lt;code&gt;include&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#rule-exclude&quot;&gt; &lt;code&gt;exclude&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#rule-resource&quot;&gt; &lt;code&gt;resource&lt;/code&gt; &lt;/a&gt;与资源和属性匹配&lt;a href=&quot;#rule-issuer&quot;&gt; &lt;code&gt;issuer&lt;/code&gt; &lt;/a&gt;与发行人相匹配。</target>
        </trans-unit>
        <trans-unit id="d1403784e9faf072d21ee68229e0156c64f385f6" translate="yes" xml:space="preserve">
          <source>In a Rule the properties &lt;a href=&quot;#ruletest&quot;&gt;&lt;code&gt;test&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleinclude&quot;&gt;&lt;code&gt;include&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleexclude&quot;&gt;&lt;code&gt;exclude&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ruleresource&quot;&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/a&gt; are matched with the resource and the property &lt;a href=&quot;#ruleissuer&quot;&gt;&lt;code&gt;issuer&lt;/code&gt;&lt;/a&gt; is matched with the issuer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e5064413c01cdb8a054508dfd5c98ae3543006" translate="yes" xml:space="preserve">
          <source>In a browser these methods will be available under &lt;code&gt;windows._.map(..args)&lt;/code&gt;, &lt;code&gt;windows._.filter(...args)&lt;/code&gt; and &lt;code&gt;windows._.myNameForFind(...args)&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b953702b51c93cbd4840a85231d87add22def200" translate="yes" xml:space="preserve">
          <source>In a development environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb83afada5c56c1a9706d9e5eb652c070af79502" translate="yes" xml:space="preserve">
          <source>In a production environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb225683c24892384d2de126c2d7e936dd8d151" translate="yes" xml:space="preserve">
          <source>In a stateful package we must ensure that the package is never instantiated twice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4163b4c198a78f504b1ef17136f2514c27e67945" translate="yes" xml:space="preserve">
          <source>In a typical application or site built with webpack, there are three main types of code:</source>
          <target state="translated">在一个典型的用webpack构建的应用程序或网站中,主要有三种类型的代码。</target>
        </trans-unit>
        <trans-unit id="9e7ec444f70c372f138fc14accb341e42525ff2a" translate="yes" xml:space="preserve">
          <source>In addition to normal assets, the compiler needs to emit an &quot;update&quot; to allow updating from previous version to the new version. The &quot;update&quot; consists of two parts:</source>
          <target state="translated">除了正常的资产,编译器还需要发出一个 &quot;更新&quot;,以允许从以前的版本更新到新的版本。&quot;更新 &quot;由两部分组成。</target>
        </trans-unit>
        <trans-unit id="32b1c8987e581464147bde760b59e96c6c5d9679" translate="yes" xml:space="preserve">
          <source>In addition to normal assets, the compiler needs to emit an &quot;update&quot; to allow updating from the previous version to the new version. The &quot;update&quot; consists of two parts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a860d096429bf6856b8b758a0fbc8fe4cb07b7" translate="yes" xml:space="preserve">
          <source>In addition to that webpack supports modules written in a variety of languages and preprocessors via &lt;em&gt;loaders&lt;/em&gt;. &lt;em&gt;Loaders&lt;/em&gt; describe to webpack &lt;strong&gt;how&lt;/strong&gt; to process non-native &lt;em&gt;modules&lt;/em&gt; and include these &lt;em&gt;dependencies&lt;/em&gt; into your &lt;em&gt;bundles&lt;/em&gt;. The webpack community has built &lt;em&gt;loaders&lt;/em&gt; for a wide variety of popular languages and language processors, including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b9f391edc65e45ef0616711d770e117de85b07" translate="yes" xml:space="preserve">
          <source>In addition to that, files can set the module type by using &lt;code&gt;.mjs&lt;/code&gt; or &lt;code&gt;.cjs&lt;/code&gt; extension. &lt;code&gt;.mjs&lt;/code&gt; will force them to be ESM, &lt;code&gt;.cjs&lt;/code&gt; force them to be CommonJs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed5ad434055cc704af4560689f24553e5f27fdb" translate="yes" xml:space="preserve">
          <source>In addition to the module format, flagging modules as ESM also affect the resolving logic, interop logic and the available symbols in modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de42d74991616adbd1c577e6471f7e7f6503834c" translate="yes" xml:space="preserve">
          <source>In an object where each key is a condition, order of properties is significant. Conditions are handled in the order they are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e688639d5f6c3d2b9f092534e4d2625f77afa12" translate="yes" xml:space="preserve">
          <source>In an object where each key is a subpath, order of properties (subpaths) is not significant. More specific paths are preferred over less specific ones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc061cd021ca564464b785c5f393cbcaccfe4c92" translate="yes" xml:space="preserve">
          <source>In case this function is called, you should return undefined to avoid ambiguous loader results.</source>
          <target state="translated">如果这个函数被调用,你应该返回undefined,以避免加载器结果含糊不清。</target>
        </trans-unit>
        <trans-unit id="244269a0cdb2ff21cb56e99e711a0b0c62fa93c1" translate="yes" xml:space="preserve">
          <source>In cases where the &lt;code&gt;publicPath&lt;/code&gt; of output files can't be known at compile time, it can be left blank and set dynamically at runtime in the entry file using the &lt;a href=&quot;https://stackoverflow.com/questions/12934929/what-are-free-variables&quot;&gt;free variable&lt;/a&gt;&lt;code&gt;__webpack_public_path__&lt;/code&gt;.</source>
          <target state="translated">如果在编译时无法知道输出文件的 &lt;code&gt;publicPath&lt;/code&gt; ，可以将其保留为空白，并在运行时使用&lt;a href=&quot;https://stackoverflow.com/questions/12934929/what-are-free-variables&quot;&gt;自由变量&lt;/a&gt; &lt;code&gt;__webpack_public_path__&lt;/code&gt; 在输入文件中进行动态设置。</target>
        </trans-unit>
        <trans-unit id="fb3d393902646f346128b9f248d1a7cbb745df73" translate="yes" xml:space="preserve">
          <source>In cases where the eventual &lt;code&gt;publicPath&lt;/code&gt; of output files isn't known at compile time, it can be left blank and set dynamically at runtime via the &lt;code&gt;__webpack_public_path__&lt;/code&gt; variable in the entry point file:</source>
          <target state="translated">如果在编译时不知道最终的输出 &lt;code&gt;publicPath&lt;/code&gt; ，可以将其留空，并在运行时通过入口点文件中的 &lt;code&gt;__webpack_public_path__&lt;/code&gt; 进行动态设置：</target>
        </trans-unit>
        <trans-unit id="0c004b77401121c23ceb63e76ede3b249018cfb2" translate="yes" xml:space="preserve">
          <source>In cases where you want to customize without actually having a file to call &lt;code&gt;.custom&lt;/code&gt;, you may also pass the &lt;code&gt;customize&lt;/code&gt; option with a string pointing at a file that exports your &lt;code&gt;custom&lt;/code&gt; callback function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8ee9d93555902b371b9272189cb28b1eb56c03" translate="yes" xml:space="preserve">
          <source>In combination with long term caching you may need to use the &lt;a href=&quot;https://github.com/soundcloud/chunk-manifest-webpack-plugin&quot;&gt;&lt;code&gt;ChunkManifestWebpackPlugin&lt;/code&gt;&lt;/a&gt; to avoid the vendor chunk changes. You should also use records to ensure stable module ids, e.g. using &lt;a href=&quot;named-modules-plugin&quot;&gt;&lt;code&gt;NamedModulesPlugin&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;hashed-module-ids-plugin&quot;&gt;&lt;code&gt;HashedModuleIdsPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">结合长期缓存，您可能需要使用&lt;a href=&quot;https://github.com/soundcloud/chunk-manifest-webpack-plugin&quot;&gt; &lt;code&gt;ChunkManifestWebpackPlugin&lt;/code&gt; &lt;/a&gt;来避免供应商块更改。您还应该使用记录来确保稳定的模块ID，例如，使用&lt;a href=&quot;named-modules-plugin&quot;&gt; &lt;code&gt;NamedModulesPlugin&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;hashed-module-ids-plugin&quot;&gt; &lt;code&gt;HashedModuleIdsPlugin&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7cfdac2025d5357c6aba6c69c694774ce74c1a51" translate="yes" xml:space="preserve">
          <source>In combination with long term caching you may need to use the &lt;a href=&quot;https://github.com/soundcloud/chunk-manifest-webpack-plugin&quot;&gt;&lt;code&gt;ChunkManifestWebpackPlugin&lt;/code&gt;&lt;/a&gt; to avoid the vendor chunk changes. You should also use records to ensure stable module ids, e.g. using &lt;code&gt;NamedModulesPlugin&lt;/code&gt; or &lt;a href=&quot;hashed-module-ids-plugin&quot;&gt;&lt;code&gt;HashedModuleIdsPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7385ee2316c453fb9eb9ad7fd75fd4f793f00023" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;a href=&quot;https://nodejs.org/api/modules.html&quot;&gt;Node.js modules&lt;/a&gt;, webpack &lt;em&gt;modules&lt;/em&gt; can express their &lt;em&gt;dependencies&lt;/em&gt; in a variety of ways. A few examples are:</source>
          <target state="translated">与&lt;a href=&quot;https://nodejs.org/api/modules.html&quot;&gt;Node.js模块&lt;/a&gt;相反，webpack &lt;em&gt;模块&lt;/em&gt;可以通过多种方式表达其&lt;em&gt;依赖性&lt;/em&gt;。一些示例是：</target>
        </trans-unit>
        <trans-unit id="ed3712036a7771092fcf011e83d5f3c43c72b8eb" translate="yes" xml:space="preserve">
          <source>In development for example, we might have an &lt;code&gt;assets/&lt;/code&gt; folder that lives on the same level of our index page. This is fine, but what if we wanted to host all these static assets on a CDN in production?</source>
          <target state="translated">例如，在开发中，我们可能有一个 &lt;code&gt;assets/&lt;/code&gt; 文件夹位于索引页的同一级别上。很好，但是如果我们想将所有这些静态资产托管在生产中的CDN上怎么办？</target>
        </trans-unit>
        <trans-unit id="a02d6f81319fdf08e8212c4f7aa47524b56f795a" translate="yes" xml:space="preserve">
          <source>In earlier webpack versions, the following functionality was achieved by using &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f04b3b962640e5fc5106b0f3fb9207860d577ee" translate="yes" xml:space="preserve">
          <source>In every other case, webpack prints out a set of stats showing bundle, chunk and timing details. Using this option the output can be a JSON object. This response is accepted by webpack's &lt;a href=&quot;https://webpack.github.io/analyse/&quot;&gt;analyse tool&lt;/a&gt;, or chrisbateman's &lt;a href=&quot;https://chrisbateman.github.io/webpack-visualizer/&quot;&gt;webpack-visualizer&lt;/a&gt;, or th0r's &lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt;. The analyse tool will take in the JSON and provide all the details of the build in graphical form.</source>
          <target state="translated">在任何其他情况下，webpack都会打印出一组统计信息，显示捆绑，块和计时详细信息。使用此选项，输出可以是JSON对象。webpack的&lt;a href=&quot;https://webpack.github.io/analyse/&quot;&gt;分析工具&lt;/a&gt;，chrisbateman的&lt;a href=&quot;https://chrisbateman.github.io/webpack-visualizer/&quot;&gt;webpack-visualizer&lt;/a&gt;或th0r的&lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt;接受了此响应。分析工具将采用JSON，并以图形形式提供构建的所有详细信息。</target>
        </trans-unit>
        <trans-unit id="11b2181411de8d6bca555fa45659a38083f1b1b1" translate="yes" xml:space="preserve">
          <source>In every other case, webpack prints out a set of stats showing bundle, chunk and timing details. Using this option, the output can be a JSON object. This response is accepted by webpack's &lt;a href=&quot;https://webpack.github.io/analyse/&quot;&gt;analyse tool&lt;/a&gt;, or chrisbateman's &lt;a href=&quot;https://chrisbateman.github.io/webpack-visualizer/&quot;&gt;webpack-visualizer&lt;/a&gt;, or th0r's &lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt;. The analyse tool will take in the JSON and provide all the details of the build in graphical form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fa777b53033f85d1c3024d1e1df747d1ae22149" translate="yes" xml:space="preserve">
          <source>In general it's good practice to clean the &lt;code&gt;/dist&lt;/code&gt; folder before each build, so that only used files will be generated. Let's take care of that.</source>
          <target state="translated">通常，在每次构建之前清理 &lt;code&gt;/dist&lt;/code&gt; 文件夹是一个好习惯，这样只会生成使用过的文件。让我们来照顾它。</target>
        </trans-unit>
        <trans-unit id="9a16fdf0a2a148f43aaec99da2248814b9b4d47c" translate="yes" xml:space="preserve">
          <source>In general the &lt;code&gt;exports&lt;/code&gt; field should contain an object where each properties specifies a sub path of the module request. For the examples above the following properties could be used: &lt;code&gt;&quot;.&quot;&lt;/code&gt; for &lt;code&gt;import &quot;package&quot;&lt;/code&gt; and &lt;code&gt;&quot;./sub/path&quot;&lt;/code&gt; for &lt;code&gt;import &quot;package/sub/path&quot;&lt;/code&gt;. Properties ending with a &lt;code&gt;/&lt;/code&gt; will forward a request with this prefix to the old file system lookup algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ab3a3e15382a3f6d9c77d53ffabe0d07f7809b" translate="yes" xml:space="preserve">
          <source>In modules, &lt;code&gt;__webpack_exports_info__&lt;/code&gt; is available to allow exports introspection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f766c29430c6f499f37b3b70317ef05685e7d4" translate="yes" xml:space="preserve">
          <source>In most cases, &lt;code&gt;eval-cheap-module-source-map&lt;/code&gt; is the best option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497163f62c54912709b0f0838370a60d0c772b4d" translate="yes" xml:space="preserve">
          <source>In most cases, you probably would want to use &lt;code&gt;webpack-dev-server&lt;/code&gt;, but let's explore all of the above options.</source>
          <target state="translated">在大多数情况下，您可能希望使用 &lt;code&gt;webpack-dev-server&lt;/code&gt; ，但是让我们探索所有上述选项。</target>
        </trans-unit>
        <trans-unit id="b11d663436345e513ae621986e787d414ab6e8d5" translate="yes" xml:space="preserve">
          <source>In order for webpack to recognize &lt;code&gt;goog.require&lt;/code&gt;, &lt;code&gt;goog.provide&lt;/code&gt;, &lt;code&gt;goog.module&lt;/code&gt; and related primitives, a separate plugin is shipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="605c6d5c6f3020ca063b9b05df1f21c51a297e66" translate="yes" xml:space="preserve">
          <source>In order to &lt;code&gt;import&lt;/code&gt; a CSS file from within a JavaScript module, you need to install and add the &lt;a href=&quot;../loaders/style-loader&quot;&gt;style-loader&lt;/a&gt; and &lt;a href=&quot;../loaders/css-loader&quot;&gt;css-loader&lt;/a&gt; to your &lt;a href=&quot;../configuration/module&quot;&gt;&lt;code&gt;module&lt;/code&gt; configuration&lt;/a&gt;:</source>
          <target state="translated">为了从JavaScript模块中 &lt;code&gt;import&lt;/code&gt; CSS文件，您需要安装&lt;a href=&quot;../loaders/style-loader&quot;&gt;style-loader&lt;/a&gt;和&lt;a href=&quot;../loaders/css-loader&quot;&gt;css-loader&lt;/a&gt;并将其添加到&lt;a href=&quot;../configuration/module&quot;&gt; &lt;code&gt;module&lt;/code&gt; 配置中&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a0010e55d5f007e43c6b8bb83f7330894c873584" translate="yes" xml:space="preserve">
          <source>In order to add a new hook to the compilation for other plugins to &lt;code&gt;tap&lt;/code&gt; into, simply &lt;code&gt;require&lt;/code&gt; the necessary hook class from &lt;code&gt;tapable&lt;/code&gt; and create one:</source>
          <target state="translated">为了一个新的钩子添加到编辑其他插件 &lt;code&gt;tap&lt;/code&gt; 到，只是 &lt;code&gt;require&lt;/code&gt; 从必要挂钩类 &lt;code&gt;tapable&lt;/code&gt; 并创建一个：</target>
        </trans-unit>
        <trans-unit id="c57977db122cd6ca145d2704d8a40aa498cabaab" translate="yes" xml:space="preserve">
          <source>In order to avoid this, you can try to update &lt;code&gt;node-sass&lt;/code&gt; to latest version or you can try to set within &lt;code&gt;sassOptions&lt;/code&gt; the &lt;code&gt;outputStyle&lt;/code&gt; option to &lt;code&gt;compressed&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee568f0520d48fb7520ae422af15ca90c46a35d1" translate="yes" xml:space="preserve">
          <source>In order to make it easier to track down errors and warnings, JavaScript offers &lt;a href=&quot;http://blog.teamtreehouse.com/introduction-source-maps&quot;&gt;source maps&lt;/a&gt;, which map your compiled code back to your original source code. If an error originates from &lt;code&gt;b.js&lt;/code&gt;, the source map will tell you exactly that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d402d94159e9b55e1f0512babfc935eb3d86a7cc" translate="yes" xml:space="preserve">
          <source>In order to make it easier to track down errors and warnings, JavaScript offers &lt;a href=&quot;http://blog.teamtreehouse.com/introduction-source-maps&quot;&gt;source maps&lt;/a&gt;, which maps your compiled code back to your original source code. If an error originates from &lt;code&gt;b.js&lt;/code&gt;, the source map will tell you exactly that.</source>
          <target state="translated">为了使查找错误和警告更加容易，JavaScript提供了&lt;a href=&quot;http://blog.teamtreehouse.com/introduction-source-maps&quot;&gt;源映射&lt;/a&gt;，该源映射将编译后的代码映射回原始源代码。如果错误源自 &lt;code&gt;b.js&lt;/code&gt; ，则源映射将准确告诉您。</target>
        </trans-unit>
        <trans-unit id="a980e74a18419863850bafb36bd3f4e9ee86f8e5" translate="yes" xml:space="preserve">
          <source>In order to obtain a single CSS file containing your application and vendor CSS, use the following &lt;code&gt;minChunks&lt;/code&gt; function together with &lt;a href=&quot;extract-text-webpack-plugin&quot;&gt;&lt;code&gt;ExtractTextPlugin&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">为了获得包含您的应用程序和供应商CSS的单个CSS文件，请将以下 &lt;code&gt;minChunks&lt;/code&gt; 函数与&lt;a href=&quot;extract-text-webpack-plugin&quot;&gt; &lt;code&gt;ExtractTextPlugin&lt;/code&gt; &lt;/a&gt;一起使用：</target>
        </trans-unit>
        <trans-unit id="c6bd91f0f6f0ea8ce91a541a6477a12c250d0741" translate="yes" xml:space="preserve">
          <source>In order to see what information is available in &lt;code&gt;module&lt;/code&gt; and &lt;code&gt;chunks&lt;/code&gt; objects, you can put &lt;code&gt;debugger;&lt;/code&gt; statement in the callback. Then &lt;a href=&quot;https://webpack.js.org/contribute/debugging/#devtools&quot;&gt;run your webpack build in debug mode&lt;/a&gt; to inspect the parameters in Chromium DevTools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005b0ab749b2505005b6d8d506164f10b6fc4748" translate="yes" xml:space="preserve">
          <source>In order to use &lt;a href=&quot;http://lesscss.org/usage/#plugins&quot;&gt;plugins&lt;/a&gt;, simply set the &lt;code&gt;plugins&lt;/code&gt; option like this:</source>
          <target state="translated">为了使用&lt;a href=&quot;http://lesscss.org/usage/#plugins&quot;&gt;插件&lt;/a&gt;，只需设置如下的 &lt;code&gt;plugins&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="5a1d560ceede023995a60b6d04bbed47efe9aa0f" translate="yes" xml:space="preserve">
          <source>In order to use a plugin, you need to &lt;code&gt;require()&lt;/code&gt; it and add it to the &lt;code&gt;plugins&lt;/code&gt; array. Most plugins are customizable through options. Since you can use a plugin multiple times in a config for different purposes, you need to create an instance of it by calling it with the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">为了使用插件，您需要 &lt;code&gt;require()&lt;/code&gt; 并将其添加到 &lt;code&gt;plugins&lt;/code&gt; 数组中。大多数插件都可以通过选项进行自定义。由于可以在配置中多次使用插件以实现不同的用途，因此需要通过使用 &lt;code&gt;new&lt;/code&gt; 运算符调用插件来创建插件的实例。</target>
        </trans-unit>
        <trans-unit id="07bef5959ba9fe13cead1b1b9453c3f6e3f9c41d" translate="yes" xml:space="preserve">
          <source>In order to use a plugin, you need to &lt;code&gt;require()&lt;/code&gt; it and add it to the &lt;code&gt;plugins&lt;/code&gt; array. Most plugins are customizable through options. Since you can use a plugin multiple times in a configuration for different purposes, you need to create an instance of it by calling it with the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3e7c6a8a852035484ef1b3e9a005fd31478315" translate="yes" xml:space="preserve">
          <source>In order to view the profile file:</source>
          <target state="translated">为了查看资料文件:</target>
        </trans-unit>
        <trans-unit id="ff8362e76f2b5492fce7b9ccc1912bcccbafff6a" translate="yes" xml:space="preserve">
          <source>In production</source>
          <target state="translated">生产中</target>
        </trans-unit>
        <trans-unit id="c676a2cc24fbdc24dc25f137b9e116bda6ebccb4" translate="yes" xml:space="preserve">
          <source>In some cases chunks are used &lt;code&gt;initial&lt;/code&gt; and &lt;code&gt;non-initial&lt;/code&gt;. In those cases &lt;code&gt;output.filename&lt;/code&gt; is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52b811cfafbc90752e03c6eadd9ba7f2bd998a5" translate="yes" xml:space="preserve">
          <source>In some context properties will use JavaScript code expressions instead of raw values. In these cases the &lt;code&gt;WithLength&lt;/code&gt; variant is available and should be used instead of slicing the original value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f9a01093882c0ed69ad1baf1c367b094548e7d" translate="yes" xml:space="preserve">
          <source>In some setups watching falls back to polling mode. With many watched files this can cause a lot of CPU load. In these cases you can increase the polling interval with &lt;code&gt;watchOptions.poll&lt;/code&gt;.</source>
          <target state="translated">在某些设置中，观看会退回到轮询模式。对于许多受监视的文件，这可能会导致大量CPU负载。在这些情况下，可以使用 &lt;code&gt;watchOptions.poll&lt;/code&gt; 增加轮询间隔。</target>
        </trans-unit>
        <trans-unit id="c96051d347c31745bd801945626cd14193ef3af8" translate="yes" xml:space="preserve">
          <source>In some setups, watching falls back to polling mode. With many watched files, this can cause a lot of CPU load. In these cases, you can increase the polling interval with &lt;code&gt;watchOptions.poll&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df7af4577426d94f0e6d3d6e3b30f3a79f454bc" translate="yes" xml:space="preserve">
          <source>In the Application</source>
          <target state="translated">在应用中</target>
        </trans-unit>
        <trans-unit id="4c36c113699aba5572e3c3366f135cc9ebfe837c" translate="yes" xml:space="preserve">
          <source>In the Compiler</source>
          <target state="translated">在编译器中</target>
        </trans-unit>
        <trans-unit id="46b2c15e3048e8556301ef6dfe4a9572c8aef2f3" translate="yes" xml:space="preserve">
          <source>In the Runtime</source>
          <target state="translated">在运行时</target>
        </trans-unit>
        <trans-unit id="26eeccc0c9e3d7f45b9a124d0b1c4db179ca7d76" translate="yes" xml:space="preserve">
          <source>In the Shopify's Polaris example, original modules look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1537c6ee829e2f35a1ff42b1381c9327749afb" translate="yes" xml:space="preserve">
          <source>In the above example, webpack is unable to prune the branch, but Terser does. However, if &lt;code&gt;FOO&lt;/code&gt; is defined using &lt;a href=&quot;define-plugin&quot;&gt;DefinePlugin&lt;/a&gt;, webpack will succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18dc21c21fd18138c7c70becd88588cbe4ceb85" translate="yes" xml:space="preserve">
          <source>In the above example, webpack is unable to prune the branch, but Uglify does. However, if &lt;code&gt;FOO&lt;/code&gt; is defined using &lt;a href=&quot;define-plugin&quot;&gt;DefinePlugin&lt;/a&gt;, webpack will succeed.</source>
          <target state="translated">在上面的示例中，webpack无法修剪分支，而Uglify可以。但是，如果使用&lt;a href=&quot;define-plugin&quot;&gt;DefinePlugin&lt;/a&gt;定义了 &lt;code&gt;FOO&lt;/code&gt; ，则webpack将成功。</target>
        </trans-unit>
        <trans-unit id="17698b5c62715c2b6b4a59f643935060bd44cc41" translate="yes" xml:space="preserve">
          <source>In the bundle, requiring the module then returns:</source>
          <target state="translated">在捆绑中,要求模块然后返回。</target>
        </trans-unit>
        <trans-unit id="ae53940b9dd2df93420909fe03fad81debfcde47" translate="yes" xml:space="preserve">
          <source>In the entry file:</source>
          <target state="translated">在条目文件中。</target>
        </trans-unit>
        <trans-unit id="f55075a4ab8b09e94e834b909e478abd70e9cd97" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;html-webpack-plugin&lt;/code&gt; generates an HTML file for your application by injecting automatically all your generated bundles.</source>
          <target state="translated">在上面的示例中， &lt;code&gt;html-webpack-plugin&lt;/code&gt; 通过自动注入所有生成的包为您的应用程序生成HTML文件。</target>
        </trans-unit>
        <trans-unit id="2f51daa562f55687b724a0efd64ff04447dfe46c" translate="yes" xml:space="preserve">
          <source>In the example above, using &lt;code&gt;node&lt;/code&gt; webpack will compile for usage in a Node.js-like environment (uses Node.js &lt;code&gt;require&lt;/code&gt; to load chunks and not touch any built in modules like &lt;code&gt;fs&lt;/code&gt; or &lt;code&gt;path&lt;/code&gt;).</source>
          <target state="translated">在上面的示例中，使用 &lt;code&gt;node&lt;/code&gt; webpack可以在类似Node.js的环境中进行编译（使用Node.js &lt;code&gt;require&lt;/code&gt; 加载块，并且不接触任何诸如 &lt;code&gt;fs&lt;/code&gt; 或 &lt;code&gt;path&lt;/code&gt; 的内置模块）。</target>
        </trans-unit>
        <trans-unit id="22afb88572026ab16bd5888974a20ef2312c8605" translate="yes" xml:space="preserve">
          <source>In the example above, we use the &lt;code&gt;output.filename&lt;/code&gt; and the &lt;code&gt;output.path&lt;/code&gt; properties to tell webpack the name of our bundle and where we want it to be emitted to. In case you're wondering about the path module being imported at the top, it is a core &lt;a href=&quot;https://nodejs.org/api/modules.html&quot;&gt;Node.js module&lt;/a&gt; that gets used to manipulate file paths.</source>
          <target state="translated">在上面的示例中，我们使用 &lt;code&gt;output.filename&lt;/code&gt; 和 &lt;code&gt;output.path&lt;/code&gt; 属性来告诉webpack我们包的名称以及将其发送到的位置。如果您想知道在顶部导入的路径模块，它是一个核心&lt;a href=&quot;https://nodejs.org/api/modules.html&quot;&gt;Node.js模块&lt;/a&gt;，用于处理文件路径。</target>
        </trans-unit>
        <trans-unit id="5b62d7eba36aafbd3cd87c1f43c49a07495d2f5f" translate="yes" xml:space="preserve">
          <source>In the example below JSX (React JavaScript Markup) and Babel are used to create a JSON Configuration that webpack can understand.</source>
          <target state="translated">在下面的例子中,JSX(React JavaScript Markup)和Babel被用来创建一个webpack可以理解的JSON配置。</target>
        </trans-unit>
        <trans-unit id="6c6e7a22eaacfa776abf6442cc14a2f231bbabc9" translate="yes" xml:space="preserve">
          <source>In the example:</source>
          <target state="translated">在这个例子中:</target>
        </trans-unit>
        <trans-unit id="24104cad4e359ef92bd54d6d3c9f785430c41a74" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;&quot;/abc/loader1.js?xyz!/abc/node_modules/loader2/index.js!/abc/resource.js?rrr&quot;&lt;/code&gt;</source>
          <target state="translated">在示例中： &lt;code&gt;&quot;/abc/loader1.js?xyz!/abc/node_modules/loader2/index.js!/abc/resource.js?rrr&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="549510410fad46e6844e6f61a6e5cd14c5746c90" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;&quot;/abc/resource.js&quot;&lt;/code&gt;</source>
          <target state="translated">在示例中： &lt;code&gt;&quot;/abc/resource.js&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="014442bb269c275a88837c582651707ab9af07dd" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;&quot;/abc/resource.js?rrr&quot;&lt;/code&gt;</source>
          <target state="translated">在示例中： &lt;code&gt;&quot;/abc/resource.js?rrr&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="603091cff5544e1350f60fe39078169540d40e15" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;&quot;?rrr&quot;&lt;/code&gt;</source>
          <target state="translated">在示例中： &lt;code&gt;&quot;?rrr&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4736fd1d6df9c4f4f428733214491606c10eaebd" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;'/abc/loader1.js?xyz!/abc/node_modules/loader2/index.js!/abc/resource.js?rrr'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54badbf53969437202fbdb6f0afaddad8f6e680e" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;'/abc/resource.js'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe4cee8604ad15724eeacd0239cd6ed71c43dd7" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;'/abc/resource.js?rrr'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bbc2c9a8ded67096d3dd15d3301044d8e5a37f" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;'?rrr'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c90d3cdbfc14b3e5d704987b0b5002403d9bf7" translate="yes" xml:space="preserve">
          <source>In the example: &lt;code&gt;/abc&lt;/code&gt; because &lt;code&gt;resource.js&lt;/code&gt; is in this directory</source>
          <target state="translated">在示例中： &lt;code&gt;/abc&lt;/code&gt; ,因为 &lt;code&gt;resource.js&lt;/code&gt; 在此目录中</target>
        </trans-unit>
        <trans-unit id="9b6e3fbc500c29545d36a97a130f9a78cbf437fb" translate="yes" xml:space="preserve">
          <source>In the example: in loader1: &lt;code&gt;0&lt;/code&gt;, in loader2: &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">在示例中：在loader1： &lt;code&gt;0&lt;/code&gt; 中，在loader2： &lt;code&gt;1&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="605e7e29de2f12a581e9a4cdc1f438c21765e6c0" translate="yes" xml:space="preserve">
          <source>In the function you get access to the request, response and proxy options. It must return either &lt;code&gt;false&lt;/code&gt; or a path that will be served instead of continuing to proxy the request.</source>
          <target state="translated">在该功能中，您可以访问请求，响应和代理选项。它必须返回 &lt;code&gt;false&lt;/code&gt; 或将要提供的路径，而不是继续代理请求。</target>
        </trans-unit>
        <trans-unit id="72b3351ec7d1e2acb6c0e936bd6019d42ad870e9" translate="yes" xml:space="preserve">
          <source>In the function you get access to the request, response, and proxy options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccb4220380a69de88bf58cef4be6c03e9cb4b0c" translate="yes" xml:space="preserve">
          <source>In the past, one of webpack&amp;rsquo;s trade-offs when bundling was that each module in your bundle would be wrapped in individual function closures. These wrapper functions made it slower for your JavaScript to execute in the browser. In comparison, tools like Closure Compiler and RollupJS &amp;lsquo;hoist&amp;rsquo; or concatenate the scope of all your modules into one closure and allow for your code to have a faster execution time in the browser.</source>
          <target state="translated">过去，捆绑时webpack的权衡之一是捆绑中的每个模块都将包裹在单独的函数闭包中。这些包装函数使您的JavaScript在浏览器中执行的速度变慢。相比之下，诸如Closure Compiler和RollupJS之类的工具可以&amp;ldquo;提升&amp;rdquo;或将所有模块的范围合并为一个闭包，并允许您的代码在浏览器中具有更快的执行时间。</target>
        </trans-unit>
        <trans-unit id="4786b287335749bca66fb8dae5d26eced4c51f87" translate="yes" xml:space="preserve">
          <source>In this case an object mapping conditions to results should be used. Conditions are tried in object order. Conditions that contain invalid results are skipped. Conditions might be nested to create a logical AND. The last condition in the object might be the special &lt;code&gt;&quot;default&quot;&lt;/code&gt; condition, which is always matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ab50af67bb23d98288ed625e40355073343a61" translate="yes" xml:space="preserve">
          <source>In this case any dependency named &lt;code&gt;jQuery&lt;/code&gt;, capitalized or not, or &lt;code&gt;$&lt;/code&gt; would be externalized.</source>
          <target state="translated">在这种情况下，任何名为 &lt;code&gt;jQuery&lt;/code&gt; 的依赖项（是否大写）或 &lt;code&gt;$&lt;/code&gt; 将被外部化。</target>
        </trans-unit>
        <trans-unit id="58d1c1fac5ddbcfe833a8bed832ebed63850e18c" translate="yes" xml:space="preserve">
          <source>In this case only 4 modules are included into the bundle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fead69710bdd6ea463e6b61558b0e2f7c4a3abf1" translate="yes" xml:space="preserve">
          <source>In this case, all webpack features like importing non-Less files or aliasing won't work of course.</source>
          <target state="translated">在这种情况下,所有的webpack功能,如导入非Less文件或别名,当然不会工作。</target>
        </trans-unit>
        <trans-unit id="e99a722af656ccfe442ee20f4852249379715c5c" translate="yes" xml:space="preserve">
          <source>In this case, any dependency named &lt;code&gt;jQuery&lt;/code&gt;, capitalized or not, or &lt;code&gt;$&lt;/code&gt; would be externalized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf48ff4728092cd5f9c9689bc6d70e0f5abb931" translate="yes" xml:space="preserve">
          <source>In this case, the directory of the resource file where the &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; occurs is taken to be the context directory. The relative path specified in the &lt;code&gt;import/require&lt;/code&gt; is joined to this context path to produce the absolute path to the module.</source>
          <target state="translated">在这种情况下，将发生 &lt;code&gt;import&lt;/code&gt; 或 &lt;code&gt;require&lt;/code&gt; 的资源文件的目录视为上下文目录。在 &lt;code&gt;import/require&lt;/code&gt; 指定的相对路径将与此上下文路径连接，以生成到模块的绝对路径。</target>
        </trans-unit>
        <trans-unit id="012b39117961de4b87a4fd15687773628c9f61c0" translate="yes" xml:space="preserve">
          <source>In this case, you need the &lt;code&gt;library&lt;/code&gt; property to name your module:</source>
          <target state="translated">在这种情况下，您需要使用 &lt;code&gt;library&lt;/code&gt; 属性来命名模块：</target>
        </trans-unit>
        <trans-unit id="713101c8c854ae5cd18d68f795dd0d2d0478ad9d" translate="yes" xml:space="preserve">
          <source>In this example the loader is configured to operator on a file name of &lt;code&gt;years-in-ms.js&lt;/code&gt;, execute the code, and store the result in the bundle as the result of the execution. This example passes &lt;code&gt;years&lt;/code&gt; as an &lt;code&gt;option&lt;/code&gt;, which corresponds to the &lt;code&gt;years&lt;/code&gt; parameter in the target module exported function:</source>
          <target state="translated">在此示例中，将加载器配置为对 &lt;code&gt;years-in-ms.js&lt;/code&gt; 文件名进行操作，执行代码，并将结果存储在分发包中作为执行结果。本示例将 &lt;code&gt;years&lt;/code&gt; 作为 &lt;code&gt;option&lt;/code&gt; 传递，它对应于目标模块导出功能中的 &lt;code&gt;years&lt;/code&gt; 参数：</target>
        </trans-unit>
        <trans-unit id="6f532a889a819f45497c5b35c1f39924b20cd994" translate="yes" xml:space="preserve">
          <source>In this example, there are implicit dependencies between the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags. Our &lt;code&gt;index.js&lt;/code&gt; file depends on &lt;code&gt;lodash&lt;/code&gt; being included in the page before it runs. This is because &lt;code&gt;index.js&lt;/code&gt; never explicitly declared a need for &lt;code&gt;lodash&lt;/code&gt;; it just assumes that the global variable &lt;code&gt;_&lt;/code&gt; exists.</source>
          <target state="translated">在此示例中， &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记之间存在隐式依赖性。我们的 &lt;code&gt;index.js&lt;/code&gt; 文件取决于 &lt;code&gt;lodash&lt;/code&gt; 在运行之前是否包含在页面中。这是因为 &lt;code&gt;index.js&lt;/code&gt; 从未明确声明需要 &lt;code&gt;lodash&lt;/code&gt; ；它只是假设全局变量 &lt;code&gt;_&lt;/code&gt; 存在。</target>
        </trans-unit>
        <trans-unit id="87879d9dd235c986c9cc31f2c39f0038514bfd2b" translate="yes" xml:space="preserve">
          <source>In this guide we'll dive into some of the best practices and utilities for building a production site or application.</source>
          <target state="translated">在本指南中,我们将深入了解构建生产站点或应用程序的一些最佳实践和实用程序。</target>
        </trans-unit>
        <trans-unit id="419925f092759c8d2c996d150b68147ad1abb024" translate="yes" xml:space="preserve">
          <source>In this guide, we'll dive into some of the best practices and utilities for building a production site or application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d796a4559e4856236a59849ea5abe6f79415ec41" translate="yes" xml:space="preserve">
          <source>In this mode, the compiler rewrites CommonJS modules and hoists require calls. Some modules are not compatible with this type of rewriting. In particular, hoisting will cause the following code to execute out of order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7f9036f4484c6e884395a9cc875374bac5fef6" translate="yes" xml:space="preserve">
          <source>In this mode, the compiler rewrites CommonJS modules and hoists require calls. Some modules are not compatible with this type of rewritting. In particular, hoisting will cause the following code to execute out of order:</source>
          <target state="translated">在这种模式下,编译器重写CommonJS模块和葫芦需要调用。有些模块与这种类型的重写不兼容。特别是,葫芦会导致下面的代码执行顺序错误。</target>
        </trans-unit>
        <trans-unit id="7c8f046cd41700a29fca9f8d6c8e812aa51d26cb" translate="yes" xml:space="preserve">
          <source>In this setup, &lt;code&gt;index.js&lt;/code&gt; explicitly requires &lt;code&gt;lodash&lt;/code&gt; to be present, and binds it as &lt;code&gt;_&lt;/code&gt; (no global scope pollution). By stating what dependencies a module needs, webpack can use this information to build a dependency graph. It then uses the graph to generate an optimized bundle where scripts will be executed in the correct order.</source>
          <target state="translated">在此设置中， &lt;code&gt;index.js&lt;/code&gt; 明确要求存在 &lt;code&gt;lodash&lt;/code&gt; ，并将其绑定为 &lt;code&gt;_&lt;/code&gt; （无全局范围污染）。通过说明模块需要什么依赖关系，webpack可以使用此信息来构建依赖关系图。然后，它使用该图生成优化的包，在其中将以正确的顺序执行脚本。</target>
        </trans-unit>
        <trans-unit id="9992df883c45d7198eca8f3fb2c2d1c204adde0e" translate="yes" xml:space="preserve">
          <source>In webpack version &amp;lt; 4 it was common to add vendors as a separate entry point to compile it as a separate file (in combination with the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5294f1161b6b9bdd73411206fcd8021000dbe9" translate="yes" xml:space="preserve">
          <source>In webpack-dev-server and webpack-dev-middleware watch mode is enabled by default.</source>
          <target state="translated">在webpack-dev-server和webpack-dev-middleware中,watch模式是默认启用的。</target>
        </trans-unit>
        <trans-unit id="0f751f02ce973ae21dbfdb3d4039f795ed26eb11" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;webpack.config.js&lt;/code&gt;, add the &lt;code&gt;ImageMinimizerPlugin.loader&lt;/code&gt;, chained with the &lt;a href=&quot;../loaders/file-loader&quot;&gt;file-loader&lt;/a&gt; or &lt;a href=&quot;../loaders/url-loader&quot;&gt;url-loader&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b11f118011bd6b4042e5ab1684ccae363c0c2e8f" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;webpack.config.js&lt;/code&gt;:</source>
          <target state="translated">在您的 &lt;code&gt;webpack.config.js&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="29d7d653c6bffb1e041df2f88cb76c81ff4e16d3" translate="yes" xml:space="preserve">
          <source>In your nginx config file, add the following:</source>
          <target state="translated">在你的nginx配置文件中,添加以下内容。</target>
        </trans-unit>
        <trans-unit id="0663e0d6f0ce3a04e14631ba104dc3d7f42ea443" translate="yes" xml:space="preserve">
          <source>In your nginx configuration file, add the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd60cce8e7156652fe436394f2f3965c3f483ec" translate="yes" xml:space="preserve">
          <source>In your webpack configuration</source>
          <target state="translated">在你的webpack配置中</target>
        </trans-unit>
        <trans-unit id="eb075488c88200884363599454138a97e0ca102f" translate="yes" xml:space="preserve">
          <source>In your webpack configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9feadfc2309af3ca6ee84eaeaa3e2ac04c4071ab" translate="yes" xml:space="preserve">
          <source>Include a &lt;code&gt;dependency&lt;/code&gt; without executing it. This can be used for optimizing the position of a module in the output chunks.</source>
          <target state="translated">包含一个 &lt;code&gt;dependency&lt;/code&gt; 而不执行它。这可用于优化模块在输出块中的位置。</target>
        </trans-unit>
        <trans-unit id="0b3db040d66020554278821eb081b1ce817c6df7" translate="yes" xml:space="preserve">
          <source>Include a comment with the request for every dependency</source>
          <target state="translated">为每个依赖关系在请求中加入注释</target>
        </trans-unit>
        <trans-unit id="e5cdb56d2da7e08fb827421683cfb0254911f36e" translate="yes" xml:space="preserve">
          <source>Include a minifier that supports dead code removal (e.g. the &lt;code&gt;UglifyJSPlugin&lt;/code&gt;).</source>
          <target state="translated">包括支持死代码删除的minifier（例如 &lt;code&gt;UglifyJSPlugin&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="43ee3ff84212ff6b34d24cfa31ddb5fc9b647697" translate="yes" xml:space="preserve">
          <source>Include all assets matching any of these conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c88eaaf5e0983cb65e54231b6b97abd3ca74767" translate="yes" xml:space="preserve">
          <source>Include all assets matching any of these conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44c412a96c9b4a61318e020f6ca77d54624cb48" translate="yes" xml:space="preserve">
          <source>Include all assets that pass test assertion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c24bab0e5accc54ef898d6e0cb3c320619329be" translate="yes" xml:space="preserve">
          <source>Include all assets that pass test assertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55775468dd0bd13185a68dfcec1a3aeaba30e893" translate="yes" xml:space="preserve">
          <source>Include all modules matching any of these conditions. If you supply a &lt;code&gt;Rule.include&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt;. See &lt;a href=&quot;#ruleresource&quot;&gt;&lt;code&gt;Rule.resource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt;&lt;code&gt;Condition.include&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41c9d6e0e520b70c4921d6e418a88738b81cd1d" translate="yes" xml:space="preserve">
          <source>Include all modules that pass test assertion. If you supply a &lt;code&gt;Rule.test&lt;/code&gt; option, you cannot also supply a &lt;code&gt;Rule.resource&lt;/code&gt;. See &lt;a href=&quot;#ruleresource&quot;&gt;&lt;code&gt;Rule.resource&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#condition&quot;&gt;&lt;code&gt;Condition.test&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca814e53a9dd65aa14e6e0164296b9d774d3b0a0" translate="yes" xml:space="preserve">
          <source>Incremental Builds</source>
          <target state="translated">递增式构建</target>
        </trans-unit>
        <trans-unit id="c1a2c1982c5ff1a21f7c65e255870f6449ecf7b0" translate="yes" xml:space="preserve">
          <source>Indicate what parts of the module contain side effects. See &lt;a href=&quot;../guides/tree-shaking#mark-the-file-as-side-effect-free&quot;&gt;Tree Shaking&lt;/a&gt; for details.</source>
          <target state="translated">指示模块的哪些部分包含副作用。有关详细信息，请参见&lt;a href=&quot;../guides/tree-shaking#mark-the-file-as-side-effect-free&quot;&gt;摇树&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="977153eb29097b9cbd6c3737981648e7f07049ed" translate="yes" xml:space="preserve">
          <source>Indicates whether or not &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; is enabled and provides an interface to the process. See the &lt;a href=&quot;hot-module-replacement&quot;&gt;HMR API page&lt;/a&gt; for details.</source>
          <target state="translated">指示是否启用&amp;ldquo; &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;热模块更换&amp;rdquo;&lt;/a&gt;，并为该过程提供接口。有关详细信息，请参见&lt;a href=&quot;hot-module-replacement&quot;&gt;HMR API页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4b0a1395312824d36c52689812a350d498ccc63e" translate="yes" xml:space="preserve">
          <source>Infer a platform and the ES-features from a browserslist-config &lt;strong&gt;(default if browserslist config is available)&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8702f81226b67e180614369bb8ee0882d3a48b7c" translate="yes" xml:space="preserve">
          <source>Infer an environment (e.g: &lt;code&gt;last 2 node versions&lt;/code&gt; the same as &lt;code&gt;target: &quot;node&quot;&lt;/code&gt; with some &lt;a href=&quot;output#outputenvironment&quot;&gt;&lt;code&gt;output.environment&lt;/code&gt;&lt;/a&gt; settings).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733a76be6da66ed98811b4efcd63661a3f609cda" translate="yes" xml:space="preserve">
          <source>Information about HMR for loaders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41741927855ae531bbaf9b58b8bfc655b3973ea6" translate="yes" xml:space="preserve">
          <source>Information available to all plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b66e61a7e29a79e87dc6282b9e79b3f1a150c2" translate="yes" xml:space="preserve">
          <source>Initial chunk with name &lt;code&gt;main&lt;/code&gt; is created. It contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780da6a7a78d28589afa2bfdf46e536b039198ea" translate="yes" xml:space="preserve">
          <source>Initialize a new webpack configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ac4378abde8c184828abb5dec0ab1ffd86d5fa4" translate="yes" xml:space="preserve">
          <source>Initialize npm, install webpack and lodash:</source>
          <target state="translated">初始化npm,安装webpack和lodash。</target>
        </trans-unit>
        <trans-unit id="4ac1e162d6f4102359b59668b26273dd64439dce" translate="yes" xml:space="preserve">
          <source>Inject CSS into the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb420660ee978b1fdca06d2704f04fb9b0366c4" translate="yes" xml:space="preserve">
          <source>Injects styles into the DOM using multiple &lt;code&gt;&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;path/to/file.css&quot;&amp;gt;&lt;/code&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65a7158e7c2111323cdda2c2d5096fc9a5da6b4" translate="yes" xml:space="preserve">
          <source>Injects styles into the DOM using multiple &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; on demand. We recommend following &lt;code&gt;.lazy.css&lt;/code&gt; naming convention for lazy styles and the &lt;code&gt;.css&lt;/code&gt; for basic &lt;code&gt;style-loader&lt;/code&gt; usage (similar to other file types, i.e. &lt;code&gt;.lazy.less&lt;/code&gt; and &lt;code&gt;.less&lt;/code&gt;). When you &lt;code&gt;lazyStyleTag&lt;/code&gt; value the &lt;code&gt;style-loader&lt;/code&gt; injects the styles lazily making them useable on-demand via &lt;code&gt;style.use()&lt;/code&gt; / &lt;code&gt;style.unuse()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c7d97922ac681d34851c8911e453436fbdde34" translate="yes" xml:space="preserve">
          <source>Injects styles into the DOM using one &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; on demand. We recommend following &lt;code&gt;.lazy.css&lt;/code&gt; naming convention for lazy styles and the &lt;code&gt;.css&lt;/code&gt; for basic &lt;code&gt;style-loader&lt;/code&gt; usage (similar to other file types, i.e. &lt;code&gt;.lazy.less&lt;/code&gt; and &lt;code&gt;.less&lt;/code&gt;). When you &lt;code&gt;lazySingletonStyleTag&lt;/code&gt; value the &lt;code&gt;style-loader&lt;/code&gt; injects the styles lazily making them useable on-demand via &lt;code&gt;style.use()&lt;/code&gt; / &lt;code&gt;style.unuse()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e347f4ceb23a6d8637cc8028fda9ad8c7b7c47f" translate="yes" xml:space="preserve">
          <source>Inline</source>
          <target state="translated">Inline</target>
        </trans-unit>
        <trans-unit id="c087c6d4c7770e5dce97d6879368970190287e31" translate="yes" xml:space="preserve">
          <source>Inline comments to make features work. By adding comments to the import, we can do things such as name our chunk or select different modes. For a full list of these magic comments see the code below followed by an explanation of what these comments do.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9768e0fd9050af20d23c888ce38299bcc390c8" translate="yes" xml:space="preserve">
          <source>Inline loaders and &lt;code&gt;!&lt;/code&gt; prefixes should not be used as they are non-standard. They may be use by loader generated code.</source>
          <target state="translated">嵌入式装载机和 &lt;code&gt;!&lt;/code&gt; 不应使用前缀，因为它们是非标准的。加载程序生成的代码可能会使用它们。</target>
        </trans-unit>
        <trans-unit id="9eb673743cb9511a4676ade656eb382fb5ca6a3c" translate="yes" xml:space="preserve">
          <source>Inline matchResource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb6cbb164c9b281a0881d7f616460035b2a6c781" translate="yes" xml:space="preserve">
          <source>Inline mode is recommended for &lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt;Hot Module Replacement&lt;/a&gt; as it includes an HMR trigger from the websocket. Polling mode can be used as an alternative, but requires an additional entry point, &lt;code&gt;'webpack/hot/poll?1000'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069d91be0bb38bcc8509b0b632375462f7798984" translate="yes" xml:space="preserve">
          <source>Inline mode is recommended for Hot Module Replacement as it includes an HMR trigger from the websocket. Polling mode can be used as an alternative, but requires an additional entry point, &lt;code&gt;'webpack/hot/poll?1000'&lt;/code&gt;.</source>
          <target state="translated">建议使用串联模式进行热模块更换，因为它包含来自websocket的HMR触发器。轮询模式可以用作替代方法，但需要附加入口点 &lt;code&gt;'webpack/hot/poll?1000'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a99be764eb4460a4ebc3df1fd660e5e7d72d0759" translate="yes" xml:space="preserve">
          <source>Inline mode with the &lt;code&gt;fallback&lt;/code&gt; value will create file for browsers without support web workers, to disable this behavior just use &lt;code&gt;no-fallback&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd5aa56fde3d0e8b6b54a587a7e6616c70e6aa0" translate="yes" xml:space="preserve">
          <source>Inlined</source>
          <target state="translated">Inlined</target>
        </trans-unit>
        <trans-unit id="9253bec7b330b3bcf1ae7601064c33bdcfbb7a41" translate="yes" xml:space="preserve">
          <source>Inlining assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630cbac3ad3755357bd8db01e781e15971700af2" translate="yes" xml:space="preserve">
          <source>Input Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61bbcbfa889da817407bf948fa239f50c645e934" translate="yes" xml:space="preserve">
          <source>Input type</source>
          <target state="translated">输入类型</target>
        </trans-unit>
        <trans-unit id="eb048dcb7b75adab79079e46612f2e8b0d7f3889" translate="yes" xml:space="preserve">
          <source>Insert styles at top</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e0714d00994c3ffadea6268f6d4a480c437be5" translate="yes" xml:space="preserve">
          <source>Insert styles at top of &lt;code&gt;head&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831c32ee9bc6c73720ac721dcbc043c82ba7d74f" translate="yes" xml:space="preserve">
          <source>Insert styles before target element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b1a9c78b351f213422dac6235b2189cf7b6b84" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; at the given position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe22966b84c9739ce4870f1c88f989a12bcad0b" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; at the given position</source>
          <target state="translated">在给定位置插入 &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="313dfd56f875dc4f47032f08f0f9225e6c848a34" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; into the given position</source>
          <target state="translated">将 &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; 插入给定位置</target>
        </trans-unit>
        <trans-unit id="a118ac3c1f68b5ed2525eb3fdb7ceb943f7cea17" translate="yes" xml:space="preserve">
          <source>Inserts styles at top of &lt;code&gt;head&lt;/code&gt; tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba429c31e6cd16ae8f908124b6018ff8cbfaa6a" translate="yes" xml:space="preserve">
          <source>Inserts styles before &lt;code&gt;#id&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9dbb8653cda9d1cd636a434316bed51df7fb62" translate="yes" xml:space="preserve">
          <source>Inserts tag at the given position into the DOM</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2868202fbdaf87762eea439397d31ee31610dfaf" translate="yes" xml:space="preserve">
          <source>Inspiration</source>
          <target state="translated">Inspiration</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="d8f97da1b498c1fcef34cb27808f85be756c4665" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;toml&lt;/code&gt;, &lt;code&gt;yamljs&lt;/code&gt; and &lt;code&gt;json5&lt;/code&gt; packages first:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1594fb84f280667e3d8b24b257f4b352e1dd610" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;tsconfig-paths&lt;/code&gt;.</source>
          <target state="translated">安装 &lt;code&gt;tsconfig-paths&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="236e68cda5bea970d83dd18f3dc71441b5713fca" translate="yes" xml:space="preserve">
          <source>Installing locally is what we recommend for most projects. This makes it easier to upgrade projects individually when breaking changes are introduced. Typically webpack is run via one or more &lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt;npm scripts&lt;/a&gt; which will look for a webpack installation in your local &lt;code&gt;node_modules&lt;/code&gt; directory:</source>
          <target state="translated">对于大多数项目，建议您在本地安装。当引入重大更改时，这使单独升级项目变得更加容易。通常，webpack通过一个或多个&lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt;npm脚本运行，这些脚本&lt;/a&gt;将在本地 &lt;code&gt;node_modules&lt;/code&gt; 目录中查找webpack安装：</target>
        </trans-unit>
        <trans-unit id="a59a173295d75d519aced19f14b6497c95689dd8" translate="yes" xml:space="preserve">
          <source>Instantly update the browser when modifications are made to CSS/JS in the source code, which is almost comparable to changing styles directly in the browser's dev tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ceb08b08d413b8469009fff5b4c7b25c5df462" translate="yes" xml:space="preserve">
          <source>Instead of exporting a single configuration object/function, you may export multiple configurations (multiple functions are supported since webpack 3.1.0). When running webpack, all configurations are built. For instance, this is useful for &lt;a href=&quot;../guides/author-libraries&quot;&gt;bundling a library&lt;/a&gt; for multiple &lt;a href=&quot;output#output-librarytarget&quot;&gt;targets&lt;/a&gt; such as AMD and CommonJS:</source>
          <target state="translated">您可以导出多个配置（从Webpack 3.1.0开始支持多个功能），而不是导出单个配置对象/功能。运行webpack时，将构建所有配置。例如，这对于&lt;a href=&quot;../guides/author-libraries&quot;&gt;捆绑&lt;/a&gt;多个&lt;a href=&quot;output#output-librarytarget&quot;&gt;目标（&lt;/a&gt;例如AMD和CommonJS）的库很有用：</target>
        </trans-unit>
        <trans-unit id="386f1a48d4c3f500dc1b0266f217d05d4eea4762" translate="yes" xml:space="preserve">
          <source>Instead of exporting a single configuration object/function, you may export multiple configurations (multiple functions are supported since webpack 3.1.0). When running webpack, all configurations are built. For instance, this is useful for &lt;a href=&quot;../guides/author-libraries&quot;&gt;bundling a library&lt;/a&gt; for multiple &lt;a href=&quot;output#outputlibrarytarget&quot;&gt;targets&lt;/a&gt; such as AMD and CommonJS:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67acedf98b128fe02217721f4a0b2b936f55edc7" translate="yes" xml:space="preserve">
          <source>Instead of providing a single result, the package author may provide a list of results. In such a scenario this list is tried in order and the first valid result will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5cb598e704a1d38086f1788797d25307b7d30a0" translate="yes" xml:space="preserve">
          <source>Instead of providing results directly in the &lt;code&gt;exports&lt;/code&gt; field, the package author may let the module system choose one based on conditions about the environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0573e283964572704ca396e5f9bb3ed7c1564c3" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;code&gt;devtool&lt;/code&gt; option you can also use &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt;/&lt;code&gt;EvalSourceMapDevToolPlugin&lt;/code&gt; directly as it has more options. Never use both the &lt;code&gt;devtool&lt;/code&gt; option and plugin together. The &lt;code&gt;devtool&lt;/code&gt; option adds the plugin internally so you would end up with the plugin applied twice.</source>
          <target state="translated">除了使用 &lt;code&gt;devtool&lt;/code&gt; 选项，您还可以直接使用 &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; / &lt;code&gt;EvalSourceMapDevToolPlugin&lt;/code&gt; ，因为它具有更多选项。切勿同时使用 &lt;code&gt;devtool&lt;/code&gt; 选项和插件。该 &lt;code&gt;devtool&lt;/code&gt; 选项添加插件这样的内部应用了两倍的插件，你最终会。</target>
        </trans-unit>
        <trans-unit id="397baec23784db4414b3b955a65290479d83c0bf" translate="yes" xml:space="preserve">
          <source>Instead, use &lt;code&gt;require&lt;/code&gt; or &lt;code&gt;import&lt;/code&gt; how you normally would and &lt;code&gt;npm install&lt;/code&gt; will happen &lt;strong&gt;automatically to install &amp;amp; save missing dependencies&lt;/strong&gt; while you work!</source>
          <target state="translated">取而代之的是，使用 &lt;code&gt;require&lt;/code&gt; 或 &lt;code&gt;import&lt;/code&gt; 可以正常进行， &lt;code&gt;npm install&lt;/code&gt; 会&lt;strong&gt;自动进行，以&lt;/strong&gt;在工作时&lt;strong&gt;自动安装并保存缺少的依赖项&lt;/strong&gt;！</target>
        </trans-unit>
        <trans-unit id="c5d169014af114b9843602fc038633eff55a22b8" translate="yes" xml:space="preserve">
          <source>Instead, with &lt;code&gt;strictModuleExceptionHandling&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;, all &lt;code&gt;require&lt;/code&gt;s of this module throw an exception:</source>
          <target state="translated">相反，将 &lt;code&gt;strictModuleExceptionHandling&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; ，则此模块的所有 &lt;code&gt;require&lt;/code&gt; 都将引发异常：</target>
        </trans-unit>
        <trans-unit id="effdf11f25a78c860e4deb03c10959bdbfe8e6a6" translate="yes" xml:space="preserve">
          <source>Instructs the loader to cause the webpack build to fail on all JSHint warnings and errors.</source>
          <target state="translated">指示加载器在所有JSHint警告和错误时导致webpack构建失败。</target>
        </trans-unit>
        <trans-unit id="c70f9def1c0d9fd9fe32ad04df41435833834184" translate="yes" xml:space="preserve">
          <source>Instructs the loader to emit all JSHint warnings and errors as webpack errors.</source>
          <target state="translated">指示加载器将所有JSHint警告和错误以webpack错误的形式发出。</target>
        </trans-unit>
        <trans-unit id="8b9160c9ad2f43280c351ba53cc04b6e58a7da97" translate="yes" xml:space="preserve">
          <source>Instructs the module to allow a missing config file, and returns an &lt;code&gt;Object&lt;/code&gt; with empty &lt;code&gt;config&lt;/code&gt; and &lt;code&gt;configPath&lt;/code&gt; properties in the event a config file was not found.</source>
          <target state="translated">指示模块允许缺少配置文件，并在找不到配置文件的情况下返回具有空 &lt;code&gt;config&lt;/code&gt; 和 &lt;code&gt;configPath&lt;/code&gt; 属性的 &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1276a9a004ec270e14baedaf01e1c74c75d8efe3" translate="yes" xml:space="preserve">
          <source>Instructs webpack to target a specific environment.</source>
          <target state="translated">指示webpack针对一个特定的环境。</target>
        </trans-unit>
        <trans-unit id="1b9372bc4321ab053be1f6fb2cffd107b3c27a02" translate="yes" xml:space="preserve">
          <source>Instructs webpack to target a specific environment. Defaults to &lt;code&gt;'browserslist'&lt;/code&gt; or to &lt;code&gt;'web'&lt;/code&gt; when no browserslist configuration was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f343bea4465f2b86a1fad15d186f37a531dff0a" translate="yes" xml:space="preserve">
          <source>Instrument JS files with &lt;a href=&quot;https://github.com/istanbuljs/istanbuljs/tree/master/packages/istanbul-lib-instrument&quot;&gt;istanbul-lib-instrument&lt;/a&gt; for subsequent code coverage reporting</source>
          <target state="translated">使用&lt;a href=&quot;https://github.com/istanbuljs/istanbuljs/tree/master/packages/istanbul-lib-instrument&quot;&gt;istanbul-lib-instrument&lt;/a&gt;来测试 JS文件，以进行后续代码覆盖率报告</target>
        </trans-unit>
        <trans-unit id="ba08f2b36bcf4ff3f6a275bca9855353f4ccf082" translate="yes" xml:space="preserve">
          <source>Integrating with ES2015 Modules</source>
          <target state="translated">与ES2015模块集成</target>
        </trans-unit>
        <trans-unit id="ffcd1e260d928dca8dd77d403e2e4b74d64f73a9" translate="yes" xml:space="preserve">
          <source>Integrating with ES6+ features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248240b14498eacc32b7b4d5b6e2966a04bffdb9" translate="yes" xml:space="preserve">
          <source>Integrating with TypeScript</source>
          <target state="translated">与TypeScript集成</target>
        </trans-unit>
        <trans-unit id="a7881cac6e64abca5eafd172df6eb31fe0b84c88" translate="yes" xml:space="preserve">
          <source>Integrations</source>
          <target state="translated">Integrations</target>
        </trans-unit>
        <trans-unit id="69a0971817cd609ff594b2673e743c6c7d191f12" translate="yes" xml:space="preserve">
          <source>Internal webpack plugins</source>
          <target state="translated">内部webpack插件</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="e61b5282e8f791a7516b3ec1c349f42c5bb3fe9d" translate="yes" xml:space="preserve">
          <source>Introduced in &lt;code&gt;0.27.1&lt;/code&gt;. Class names will be camelized, the original class name will be removed from the locals</source>
          <target state="translated">在 &lt;code&gt;0.27.1&lt;/code&gt; 中引入。班级名称将被驼峰化，原始班级名称将从当地人中删除</target>
        </trans-unit>
        <trans-unit id="81cc0ef1f3b4ebd6924b3bcdc04867da15585239" translate="yes" xml:space="preserve">
          <source>Introduced in &lt;code&gt;0.27.1&lt;/code&gt;. Dashes in class names will be camelized, the original class name will be removed from the locals</source>
          <target state="translated">在 &lt;code&gt;0.27.1&lt;/code&gt; 中引入。班级名称中的短划线将被骆驼化，原始班级名称将从本地人中删除</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="25ccad8493fba08b5fa20e3f61dc14ab1deb8ad9" translate="yes" xml:space="preserve">
          <source>Invalidate &lt;code&gt;Watching&lt;/code&gt;</source>
          <target state="translated">无效 &lt;code&gt;Watching&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a9b44369c96eafd66d755034e5ce80488ad8832" translate="yes" xml:space="preserve">
          <source>Invocation</source>
          <target state="translated">Invocation</target>
        </trans-unit>
        <trans-unit id="5b842d75f9b3ed82e9913cce8e8663eec64fef92" translate="yes" xml:space="preserve">
          <source>Invoked when parsing a &lt;code&gt;new&lt;/code&gt; expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ca30ff4d89721397e0f7df656c8fa9b8fc10e2" translate="yes" xml:space="preserve">
          <source>Issue 2783 - ContextReplacementPlugin Description</source>
          <target state="translated">问题2783-ContextReplacementPlugin描述</target>
        </trans-unit>
        <trans-unit id="9bf749a84c752b873b6faf0e0957912bd1830596" translate="yes" xml:space="preserve">
          <source>Issue 6074 - Add support for more complex selectors for sideEffects</source>
          <target state="translated">问题6074--为sideEffects添加更复杂的选择器支持。</target>
        </trans-unit>
        <trans-unit id="17beeabe62cb95c17c070cacb4d2531d2f8eed2b" translate="yes" xml:space="preserve">
          <source>Issue 652</source>
          <target state="translated">问题652</target>
        </trans-unit>
        <trans-unit id="cb1887d5966d3c7ca9387a24c4e1e24d402abc2f" translate="yes" xml:space="preserve">
          <source>It adds polyfills for &lt;code&gt;process&lt;/code&gt;, &lt;code&gt;console&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt; and &lt;code&gt;global&lt;/code&gt; if used. It also binds the built in Node.js replacement modules.</source>
          <target state="translated">它为 &lt;code&gt;process&lt;/code&gt; ， &lt;code&gt;console&lt;/code&gt; ， &lt;code&gt;Buffer&lt;/code&gt; 和 &lt;code&gt;global&lt;/code&gt; (如果使用）添加了polyfills 。它还绑定了内置的Node.js替换模块。</target>
        </trans-unit>
        <trans-unit id="616f5800b8dee1dd134fbc4a619fb1031232649d" translate="yes" xml:space="preserve">
          <source>It allows you to pass in a directory to search, a flag indicating whether subdirectories should be searched too, and a regular expression to match files against.</source>
          <target state="translated">它允许你传入一个要搜索的目录,一个表示是否也要搜索子目录的标志,以及一个匹配文件的正则表达式。</target>
        </trans-unit>
        <trans-unit id="3b3762d716f2577bdb10439f209b1b74df961d33" translate="yes" xml:space="preserve">
          <source>It also adds some info about tree shaking to the generated bundle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad0ce2906dc315dba34ecbcc803f2a7886b5715" translate="yes" xml:space="preserve">
          <source>It also breaks if the options object cannot be stringified (i.e. circular JSON). Because of this you can have a &lt;code&gt;ident&lt;/code&gt; property in the options object which is used as unique identifier.</source>
          <target state="translated">如果不能对options对象进行字符串化（即循环JSON），它也会中断。因此，您可以在options对象中拥有一个 &lt;code&gt;ident&lt;/code&gt; 属性，用作唯一标识符。</target>
        </trans-unit>
        <trans-unit id="ed772508e53094d379861571b26bd9edaf7e3cd6" translate="yes" xml:space="preserve">
          <source>It also ensures that &lt;code&gt;module&lt;/code&gt; is filled with some Node.js stuff if you use it.</source>
          <target state="translated">如果您使用它，还可以确保该 &lt;code&gt;module&lt;/code&gt; 中充满了一些Node.js内容。</target>
        </trans-unit>
        <trans-unit id="b9875763f65e2307243db50cc2f2061578a690bb" translate="yes" xml:space="preserve">
          <source>It basically comes down to this:</source>
          <target state="translated">基本上是这样的。</target>
        </trans-unit>
        <trans-unit id="59dce9462293c25777c42b41526c5997bbec52db" translate="yes" xml:space="preserve">
          <source>It builds on top of a new webpack v4 feature (module types) and requires webpack 4 to work.</source>
          <target state="translated">它建立在一个新的webpack v4特性(模块类型)之上,并且需要webpack 4才能工作。</target>
        </trans-unit>
        <trans-unit id="705ee94eb78742d3eaa1b7c97fba1f7df0a66254" translate="yes" xml:space="preserve">
          <source>It can be hard to set up a complex webpack configuration for the first time. Writing advanced configurations to optimize performance could be even more difficult. The &lt;code&gt;init&lt;/code&gt; feature allows creating a webpack configuration by using customizable third-party initialization packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f879720d2904e8d40f82caa669a9fd39de13f749" translate="yes" xml:space="preserve">
          <source>It can be useful to pass an abstract syntax tree (AST), like &lt;a href=&quot;https://github.com/estree/estree&quot;&gt;&lt;code&gt;ESTree&lt;/code&gt;&lt;/a&gt;, as the fourth argument (&lt;code&gt;meta&lt;/code&gt;) to speed up the build time if you want to share common ASTs between loaders.</source>
          <target state="translated">如果要在加载程序之间共享常见的AST ，&lt;a href=&quot;https://github.com/estree/estree&quot;&gt; &lt;code&gt;ESTree&lt;/code&gt; &lt;/a&gt;类似于ESTree的抽象语法树（AST）作为第四个参数（ &lt;code&gt;meta&lt;/code&gt; ）传递可能会很有用。</target>
        </trans-unit>
        <trans-unit id="0c80fe031ec5dcb9765df0675771cd2a363d232a" translate="yes" xml:space="preserve">
          <source>It can have an &lt;code&gt;options&lt;/code&gt; property being a string or object. This value is passed to the loader, which should interpret it as loader options.</source>
          <target state="translated">它的 &lt;code&gt;options&lt;/code&gt; 属性可以是字符串或对象。该值传递给加载程序，加载程序应将其解释为加载程序选项。</target>
        </trans-unit>
        <trans-unit id="fdd23de19b5eb3042d866f8991836c1028466c9b" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;false&lt;/code&gt; for performance reasons.</source>
          <target state="translated">由于性能原因，它默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11825d38c53c00ce2a73d93d7cf76d39274a170e" translate="yes" xml:space="preserve">
          <source>It helps determinate ES-features that may be used to generate a runtime-code (all the chunks and modules are wrapped by runtime code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9e7202715b24aa4688d675b7c9fbb8f280ed90" translate="yes" xml:space="preserve">
          <source>It instructs webpack on how to treat the stats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff34e3b2aa57d6a6b6b5cee7b428e2d8d0f38bd" translate="yes" xml:space="preserve">
          <source>It invokes &lt;code&gt;webpack-bundle-analyzer&lt;/code&gt; plugin to get bundle information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339423019af5db7225052499f2a9f31de30818b9" translate="yes" xml:space="preserve">
          <source>It is also available as a CLI flag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945cc2239651cf32115bdee8cb704ddc32d0cb05" translate="yes" xml:space="preserve">
          <source>It is also possible to have and use multiple &lt;a href=&quot;https://github.com/micromatch/anymatch&quot;&gt;anymatch&lt;/a&gt; patterns:</source>
          <target state="translated">也可能具有并使用多个&lt;a href=&quot;https://github.com/micromatch/anymatch&quot;&gt;anymatch&lt;/a&gt;模式：</target>
        </trans-unit>
        <trans-unit id="246f08a6fcc4df6b67005d32c124da86dc8af3b4" translate="yes" xml:space="preserve">
          <source>It is also possible to serve from multiple directories in case you want to serve static content at multiple URLs with &lt;a href=&quot;#devservercontentbasepublicpath&quot;&gt;&lt;code&gt;contentBasePublicPath&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc9c7ffaee78d96165a2216e51352d8b395f38a" translate="yes" xml:space="preserve">
          <source>It is also possible to serve from multiple directories:</source>
          <target state="translated">也可以从多个目录服务。</target>
        </trans-unit>
        <trans-unit id="c5a7a0721e38bd01fb0bbca3a054ca4ef21c267c" translate="yes" xml:space="preserve">
          <source>It is also possible to specify full path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37138d0a4f0dd83a1c06a45d1e4ff32678818985" translate="yes" xml:space="preserve">
          <source>It is also possible to use &lt;strong&gt;iframe mode&lt;/strong&gt;, which uses an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; under a notification bar with messages about the build. To switch to &lt;strong&gt;iframe mode&lt;/strong&gt;:</source>
          <target state="translated">也可以使用&lt;strong&gt;iframe模式&lt;/strong&gt;，该&lt;strong&gt;模式&lt;/strong&gt;在带有有关构建消息的通知栏下使用 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 。切换至&lt;strong&gt;iframe模式&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="49149dd4626f7752a92f0eeb094721e655d82977" translate="yes" xml:space="preserve">
          <source>It is also possible to use a full URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f410da5c43770d9c0794c6bf09aba7de18e7b0" translate="yes" xml:space="preserve">
          <source>It is also possible to use a full URL. This is necessary for Hot Module Replacement.</source>
          <target state="translated">也可以使用完整的URL。这对于热模块替换是必要的。</target>
        </trans-unit>
        <trans-unit id="89c31b18a44f8037228f03491608b5ce6fef754e" translate="yes" xml:space="preserve">
          <source>It is also possible to use multiple glob patterns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e18a1716a1b06b1c0a657661d1096e0f561c953" translate="yes" xml:space="preserve">
          <source>It is crucial to minimize your CSS for production. Please see the &lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;Minimizing for Production&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75197ef50ff24e1b96488526a298c6ef5d07ad5f" translate="yes" xml:space="preserve">
          <source>It is crucial to minimize your CSS on production, please see &lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;Minimizing for Production&lt;/a&gt; section.</source>
          <target state="translated">最小化生产中的CSS至关重要，请参阅&lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;最小化生产&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="8240558ea1fe05205084e8382ec88e201389bbe2" translate="yes" xml:space="preserve">
          <source>It is disabled by default.</source>
          <target state="translated">默认情况下是禁用的。</target>
        </trans-unit>
        <trans-unit id="c66465961a258c81d6a1c10201918890fd220b95" translate="yes" xml:space="preserve">
          <source>It is imporant to mention that &lt;code&gt;import { calculateTax } from './tax';&lt;/code&gt; will also get pruned because &lt;code&gt;calculateTax()&lt;/code&gt; call was in the dead branch and got eliminated.</source>
          <target state="translated">重要的是要提到 &lt;code&gt;import { calculateTax } from './tax';&lt;/code&gt; 也将被修剪，因为 &lt;code&gt;calculateTax()&lt;/code&gt; 调用位于死分支中并被消除了。</target>
        </trans-unit>
        <trans-unit id="88c408158a5dc9ca72ed7becb6e7548cc1f24615" translate="yes" xml:space="preserve">
          <source>It is important to mention that &lt;code&gt;import { calculateTax } from './tax';&lt;/code&gt; will also get pruned because &lt;code&gt;calculateTax()&lt;/code&gt; call was in the dead branch and got eliminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0b08ae67865e1431381201c7d4a153bc4d7df2" translate="yes" xml:space="preserve">
          <source>It is important to remember that when defining rules in your webpack config, you are defining them under &lt;code&gt;module.rules&lt;/code&gt; and not &lt;code&gt;rules&lt;/code&gt;. For your benefit, webpack will warn you if this is done incorrectly.</source>
          <target state="translated">重要的是要记住，在Webpack配置中定义规则时，您是在 &lt;code&gt;module.rules&lt;/code&gt; 而不是 &lt;code&gt;rules&lt;/code&gt; 下定义它们。为了您的利益，如果操作不正确，webpack会警告您。</target>
        </trans-unit>
        <trans-unit id="4da7cddd057ba923d00bc22bb7bd22ab1e62b496" translate="yes" xml:space="preserve">
          <source>It is inefficient to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2952cb6f1294217f30ecb360ff0072513cda17" translate="yes" xml:space="preserve">
          <source>It is not immediately apparent that the script depends on an external library.</source>
          <target state="translated">脚本依赖外部库的情况并不明显。</target>
        </trans-unit>
        <trans-unit id="030d81fd8e368ba5115a1993b8e4cf728175d536" translate="yes" xml:space="preserve">
          <source>It is not possible to use a fully dynamic import statement, such as &lt;code&gt;import(foo)&lt;/code&gt;. Because &lt;code&gt;foo&lt;/code&gt; could potentially be any path to any file in your system or project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70eac1f5d19e68ec0a0761368494da1212861ae" translate="yes" xml:space="preserve">
          <source>It is not recommended to use this syntax in application code. Inline request syntax is intended to only be used by loader generated code. Not following this recommendation will make your code webpack-specific and non-standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e450f246081a7409cb7f26023dac95ca5be96b" translate="yes" xml:space="preserve">
          <source>It is possible to configure advanced options for serving static files from &lt;code&gt;contentBase&lt;/code&gt;. See the &lt;a href=&quot;http://expressjs.com/en/4x/api.html#express.static&quot;&gt;Express documentation&lt;/a&gt; for the possible options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca5f77e9a1cd16ea41ed8f090bcf6b8c4d42026" translate="yes" xml:space="preserve">
          <source>It is possible to configure advanced options for serving static files from &lt;code&gt;contentBase&lt;/code&gt;. See the &lt;a href=&quot;http://expressjs.com/en/4x/api.html#express.static&quot;&gt;Express documentation&lt;/a&gt; for the possible options. An example:</source>
          <target state="translated">可以配置用于从 &lt;code&gt;contentBase&lt;/code&gt; 提供静态文件的高级选项。有关可能的选项，请参阅&lt;a href=&quot;http://expressjs.com/en/4x/api.html#express.static&quot;&gt;Express文档&lt;/a&gt;。一个例子：</target>
        </trans-unit>
        <trans-unit id="fb40bb70f7c51fb0e56edeb33d0e850ab41fc389" translate="yes" xml:space="preserve">
          <source>It is possible to create a folder structure by providing path prefixing the filename: &lt;code&gt;'js/vendor/bundle.js'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafa07ef9104c49d576d622a92bdb5bb66dc4633" translate="yes" xml:space="preserve">
          <source>It is possible to customize the printed output by passing different arguments to the &lt;code&gt;reportProgress&lt;/code&gt; function of &lt;a href=&quot;../plugins/progress-plugin&quot;&gt;&lt;code&gt;ProgressPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92bc84a6fac84f51e24e4744224917428995fb42" translate="yes" xml:space="preserve">
          <source>It is possible to define variables with values that rely on files and will be re-evaluated when such files change in the file system. This means webpack will rebuild when such watched files change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b826d7b48e39151f98854935267e105ac3e0721" translate="yes" xml:space="preserve">
          <source>It is possible to export multiple promises by wrapping them into &lt;code&gt;Promise.all([/* Your promises */]).&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759c4d144e113cfa72f5cf8c7d31afd7baad5a6b" translate="yes" xml:space="preserve">
          <source>It is possible to filter out placeholder replacement when you want to use one of the placeholders in the actual file name. For example, to output a file &lt;code&gt;[name].js&lt;/code&gt;, you have to escape the &lt;code&gt;[name]&lt;/code&gt; placeholder by adding backslashes between the brackets. So that &lt;code&gt;[\name\]&lt;/code&gt; generates &lt;code&gt;[name]&lt;/code&gt; instead of getting replaced with the &lt;code&gt;name&lt;/code&gt; of the asset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bb99fafda467a1690e234f22672742516bef53" translate="yes" xml:space="preserve">
          <source>It is possible to nest a container. Containers can use modules from other containers. Circular dependencies between container are also possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d76b4863e4725d8bcb924f78b1b67c047c61f9c" translate="yes" xml:space="preserve">
          <source>It is possible to provide a &lt;a href=&quot;../api/module-methods#dynamic-expressions-in-import&quot;&gt;dynamic expression&lt;/a&gt; to &lt;code&gt;import()&lt;/code&gt; when you might need to import specific module based on a computed variable later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5987aaed5ad05860ad273030bae45af2ca253432" translate="yes" xml:space="preserve">
          <source>It is possible to provide different types of files when using an array of values for &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;entry&lt;/a&gt; to achieve separate bundles for CSS and JavaScript (and other) files in applications that are not using &lt;code&gt;import&lt;/code&gt; for styles in JavaScript (pre Single Page Applications or different reasons).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b1128da663568b7f85651078c42fe47a55c169" translate="yes" xml:space="preserve">
          <source>It is possible to set any Node.js flags via &lt;code&gt;NODE_OPTIONS&lt;/code&gt;, for example, to configure &lt;code&gt;HTTP_MAX_HEADER_SIZE&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da17da8dc8eceb8e01856d74ae04aad52b1d5e30" translate="yes" xml:space="preserve">
          <source>It is possible to shorten build times by removing &lt;code&gt;ProgressPlugin&lt;/code&gt; from webpack's configuration. Keep in mind, &lt;code&gt;ProgressPlugin&lt;/code&gt; might not provide as much value for fast builds as well, so make sure you are leveraging the benefits of using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc4d86c6b81a5b60b7974fe06d071420b89bdd0e" translate="yes" xml:space="preserve">
          <source>It is possible to specify which information you want to see in the stats output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330d17a24d99a2df53a2fa6b4aeda3a243c159ca" translate="yes" xml:space="preserve">
          <source>It is possible to tell webpack that a function call is side-effect-free (pure) by using the &lt;code&gt;/*#__PURE__*/&lt;/code&gt; annotation. It can be put in front of function calls to mark them as side-effect-free. Arguments passed to the function are not being marked by the annotation and may need to be marked individually. When the initial value in a variable declaration of an unused variable is considered as side-effect-free (pure), it is getting marked as dead code, not executed and dropped by the minimizer. This behavior is enabled when &lt;a href=&quot;../configuration/optimization#optimizationinnergraph&quot;&gt;&lt;code&gt;optimization.innerGraph&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042e748e19c57ee8a466c6a121296afeb4470b5f" translate="yes" xml:space="preserve">
          <source>It is recommended that &lt;code&gt;devServer.publicPath&lt;/code&gt; is the same as &lt;a href=&quot;output#outputpublicpath&quot;&gt;&lt;code&gt;output.publicPath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2f5ad81d4f1e157defc5a74c453435792d4ba8" translate="yes" xml:space="preserve">
          <source>It is recommended that &lt;code&gt;devServer.publicPath&lt;/code&gt; is the same as &lt;code&gt;output.publicPath&lt;/code&gt;.</source>
          <target state="translated">建议 &lt;code&gt;devServer.publicPath&lt;/code&gt; 与 &lt;code&gt;output.publicPath&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="452355bce088b830005a3480b2ce1142352adde0" translate="yes" xml:space="preserve">
          <source>It is recommended to use an absolute path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68d875f3f812e2cb481b5f67a1351746ce411c2" translate="yes" xml:space="preserve">
          <source>It isn't as flexible and can't be used to dynamically split code with the core application logic.</source>
          <target state="translated">它没有那么灵活,不能用于动态拆分代码与核心应用逻辑。</target>
        </trans-unit>
        <trans-unit id="b8ef699ef491a8351dba15dfcb60edf5e5dfa093" translate="yes" xml:space="preserve">
          <source>It likely does not say &lt;code&gt;&quot;./Button&quot;&lt;/code&gt;, but the error message will look similar. This issue is typically seen if you are upgrading from webpack beta.16 to webpack beta.17.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8bb7bde792b33a64922ec7f3039d47f72ccce87" translate="yes" xml:space="preserve">
          <source>It might be useful to define your own function to control the behavior of what you want to externalize from webpack. &lt;a href=&quot;https://www.npmjs.com/package/webpack-node-externals&quot;&gt;webpack-node-externals&lt;/a&gt;, for example, excludes all modules from the &lt;code&gt;node_modules&lt;/code&gt; directory and provides options to whitelist packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3015015faa2c4b220f1009b41ef17141d3ae9eb4" translate="yes" xml:space="preserve">
          <source>It might be useful to define your own function to control the behavior of what you want to externalize from webpack. &lt;a href=&quot;https://www.npmjs.com/package/webpack-node-externals&quot;&gt;webpack-node-externals&lt;/a&gt;, for example, excludes all modules from the &lt;code&gt;node_modules&lt;/code&gt; directory and provides some options to, for example, whitelist packages.</source>
          <target state="translated">定义自己的功能来控制要从Webpack外部化的行为的行为可能会很有用。例如，&lt;a href=&quot;https://www.npmjs.com/package/webpack-node-externals&quot;&gt;webpack-node-externals&lt;/a&gt;从 &lt;code&gt;node_modules&lt;/code&gt; 目录中排除了所有模块，并提供了一些选项，例如，白名单软件包。</target>
        </trans-unit>
        <trans-unit id="4fb2a21242d1d0a81b89d79e88c46ad124f1bdad" translate="yes" xml:space="preserve">
          <source>It moves all the required &lt;code&gt;*.css&lt;/code&gt; modules in entry chunks into a separate CSS file. So your styles are no longer inlined into the JS bundle, but in a separate CSS file (&lt;code&gt;styles.css&lt;/code&gt;). If your total stylesheet volume is big, it will be faster because the CSS bundle is loaded in parallel to the JS bundle.</source>
          <target state="translated">它将条目块中所有必需的 &lt;code&gt;*.css&lt;/code&gt; 模块移动到单独的CSS文件中。因此，您的样式不再内联到JS包中，而是在一个单独的CSS文件（ &lt;code&gt;styles.css&lt;/code&gt; ）中。如果您的样式表总量很大，则会更快，因为CSS包与JS包并行加载。</target>
        </trans-unit>
        <trans-unit id="3f5a5d20ccf6738c768fb105c543d692e2ac1e59" translate="yes" xml:space="preserve">
          <source>It must have a &lt;code&gt;loader&lt;/code&gt; property being a string. It is resolved relative to the configuration &lt;a href=&quot;entry-context#context&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; with the loader resolving options (&lt;a href=&quot;resolve#resolveloader&quot;&gt;resolveLoader&lt;/a&gt;).</source>
          <target state="translated">它必须具有作为字符串的 &lt;code&gt;loader&lt;/code&gt; 属性。使用加载程序解析选项（&lt;a href=&quot;resolve#resolveloader&quot;&gt;resolveLoader&lt;/a&gt;）相对于配置&lt;a href=&quot;entry-context#context&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;进行解析。</target>
        </trans-unit>
        <trans-unit id="a9d4986150e770e593c55c12460fe30c9199b023" translate="yes" xml:space="preserve">
          <source>It quickly becomes a hassle to manually run &lt;code&gt;npm run build&lt;/code&gt; every time you want to compile your code.</source>
          <target state="translated">每当您要编译代码时，手动运行 &lt;code&gt;npm run build&lt;/code&gt; 很快就变得很麻烦。</target>
        </trans-unit>
        <trans-unit id="399cc8631484912dab1e7d1944933674cf45914f" translate="yes" xml:space="preserve">
          <source>It should be possible to expose and use any module type that webpack supports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed050a376f8ab04112220eab818b80e08e0584f" translate="yes" xml:space="preserve">
          <source>It still exposes filenames and structure for decompiling, but it doesn't expose the original code.</source>
          <target state="translated">它仍然暴露了反编译的文件名和结构,但它没有暴露原始代码。</target>
        </trans-unit>
        <trans-unit id="43221fc2c0c75bee1a5d58c386dd89120b0e941b" translate="yes" xml:space="preserve">
          <source>It sucks to</source>
          <target state="translated">糟糕的是</target>
        </trans-unit>
        <trans-unit id="05be56159343ef1f65c690e3c92a1b54bd2eca88" translate="yes" xml:space="preserve">
          <source>It supports &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings&quot;&gt;Node.js Buffers and Character Encodings&lt;/a&gt; which are &lt;code&gt;[&quot;utf8&quot;,&quot;utf16le&quot;,&quot;latin1&quot;,&quot;base64&quot;,&quot;hex&quot;,&quot;ascii&quot;,&quot;binary&quot;,&quot;ucs2&quot;]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8eff4efb7928a5f9bf98807dbc792f1abcc092" translate="yes" xml:space="preserve">
          <source>It will expose &lt;strong&gt;only&lt;/strong&gt;&lt;code&gt;map&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;find&lt;/code&gt; (under &lt;code&gt;myNameForFind&lt;/code&gt; name) methods to the global object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2673009ce780bedf4f009dec8b37af8495aebb7" translate="yes" xml:space="preserve">
          <source>It will now only compile the bundle when &lt;code&gt;/bundle.js&lt;/code&gt; is requested.</source>
          <target state="translated">现在，仅在请求 &lt;code&gt;/bundle.js&lt;/code&gt; 时才编译捆绑软件。</target>
        </trans-unit>
        <trans-unit id="770e4336f1001b56c9f2fbd995023e0bfa70d8f8" translate="yes" xml:space="preserve">
          <source>It will then display timeline stats and calls per plugin!</source>
          <target state="translated">然后会显示每个插件的时间轴统计和调用情况!</target>
        </trans-unit>
        <trans-unit id="136331992793c5382781910c0a30f4daa21cb5ef" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not allowed to watch or run again before the existing watcher has been closed or invalidated.</source>
          <target state="translated">在关闭或使现有观察器无效之前，不允许观看或再次运行。</target>
        </trans-unit>
        <trans-unit id="ff08921b0231db2c37fe597349ee2c2ce9f1514c" translate="yes" xml:space="preserve">
          <source>It's also good practice to extract third-party libraries, such as &lt;code&gt;lodash&lt;/code&gt; or &lt;code&gt;react&lt;/code&gt;, to a separate &lt;code&gt;vendor&lt;/code&gt; chunk as they are less likely to change than our local source code. This step will allow clients to request even less from the server to stay up to date. This can be done by using the &lt;a href=&quot;../plugins/split-chunks-plugin#splitchunks-cachegroups&quot;&gt;&lt;code&gt;cacheGroups&lt;/code&gt;&lt;/a&gt; option of the &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;&lt;code&gt;SplitChunksPlugin&lt;/code&gt;&lt;/a&gt; demonstrated in &lt;a href=&quot;../plugins/split-chunks-plugin#split-chunks-example-2&quot;&gt;Example 2 of SplitChunksPlugin&lt;/a&gt;. Lets add &lt;code&gt;optimization.splitChunks&lt;/code&gt; with &lt;code&gt;cacheGroups&lt;/code&gt; with next params and build:</source>
          <target state="translated">将第三方库（例如 &lt;code&gt;lodash&lt;/code&gt; 或 &lt;code&gt;react&lt;/code&gt; )提取到单独的 &lt;code&gt;vendor&lt;/code&gt; 块中也是一个好习惯，因为与我们的本地源代码相比，第三方供应商块的更改可能性较小。此步骤将允许客户端向服务器请求更少的请求以保持最新。这可以通过使用&lt;a href=&quot;../plugins/split-chunks-plugin#splitchunks-cachegroups&quot;&gt; &lt;code&gt;cacheGroups&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../plugins/split-chunks-plugin#split-chunks-example-2&quot;&gt;示例2中&lt;/a&gt;演示的&lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt; &lt;code&gt;SplitChunksPlugin&lt;/code&gt; &lt;/a&gt;的cacheGroups选项来完成。让我们使用带有下一个参数的 &lt;code&gt;cacheGroups&lt;/code&gt; 添加 &lt;code&gt;optimization.splitChunks&lt;/code&gt; 并构建：</target>
        </trans-unit>
        <trans-unit id="a26b57905c923ec029a933c9a4dccea9efc6f1e8" translate="yes" xml:space="preserve">
          <source>It's also good practice to extract third-party libraries, such as &lt;code&gt;lodash&lt;/code&gt; or &lt;code&gt;react&lt;/code&gt;, to a separate &lt;code&gt;vendor&lt;/code&gt; chunk as they are less likely to change than our local source code. This step will allow clients to request even less from the server to stay up to date. This can be done by using the &lt;a href=&quot;../plugins/split-chunks-plugin#splitchunkscachegroups&quot;&gt;&lt;code&gt;cacheGroups&lt;/code&gt;&lt;/a&gt; option of the &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;&lt;code&gt;SplitChunksPlugin&lt;/code&gt;&lt;/a&gt; demonstrated in &lt;a href=&quot;../plugins/split-chunks-plugin#split-chunks-example-2&quot;&gt;Example 2 of SplitChunksPlugin&lt;/a&gt;. Lets add &lt;code&gt;optimization.splitChunks&lt;/code&gt; with &lt;code&gt;cacheGroups&lt;/code&gt; with next params and build:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4360bf3a9e3a00e9323acec6366a5bd7b9adb0" translate="yes" xml:space="preserve">
          <source>It's also possible to add a URL &lt;code&gt;&amp;lt;link href=&quot;path/to/file.css&quot; rel=&quot;stylesheet&quot;&amp;gt;&lt;/code&gt; instead of inlining the CSS &lt;code&gt;{String}&lt;/code&gt; with &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">也可以添加URL &lt;code&gt;&amp;lt;link href=&quot;path/to/file.css&quot; rel=&quot;stylesheet&quot;&amp;gt;&lt;/code&gt; 而不是使用 &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; 标签将CSS &lt;code&gt;{String}&lt;/code&gt; 内联。</target>
        </trans-unit>
        <trans-unit id="3e5580d3a9962d2bf6a4bac5c86320e9ab2c4096" translate="yes" xml:space="preserve">
          <source>It's important to only prepend it with &lt;code&gt;~&lt;/code&gt;, because &lt;code&gt;~/&lt;/code&gt; resolves to the home directory. Webpack needs to distinguish between &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;~bootstrap&lt;/code&gt; because CSS and Sass files have no special syntax for importing relative files. Writing &lt;code&gt;@import &quot;style.scss&quot;&lt;/code&gt; is the same as &lt;code&gt;@import &quot;./style.scss&quot;;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117a69d417526aee9a6fa34094b81f363a012c0a" translate="yes" xml:space="preserve">
          <source>It's important to only prepend it with &lt;code&gt;~&lt;/code&gt;, because &lt;code&gt;~/&lt;/code&gt; resolves to the home directory. webpack needs to distinguish between &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;~bootstrap&lt;/code&gt; because CSS and Sass files have no special syntax for importing relative files. Writing &lt;code&gt;@import &quot;file&quot;&lt;/code&gt; is the same as &lt;code&gt;@import &quot;./file&quot;;&lt;/code&gt;</source>
          <target state="translated">仅在 &lt;code&gt;~&lt;/code&gt; 前面加上它很重要，因为 &lt;code&gt;~/&lt;/code&gt; 解析到主目录。的WebPack需要区分 &lt;code&gt;bootstrap&lt;/code&gt; 和 &lt;code&gt;~bootstrap&lt;/code&gt; ，因为CSS和萨斯文件的导入相对文件没有特殊的语法。编写 &lt;code&gt;@import &quot;file&quot;&lt;/code&gt; 与 &lt;code&gt;@import &quot;./file&quot;;&lt;/code&gt; 相同；</target>
        </trans-unit>
        <trans-unit id="5116af0e59c6155a39d0a2e75b2066537de99be9" translate="yes" xml:space="preserve">
          <source>It's important to only prepend it with &lt;code&gt;~&lt;/code&gt;, because &lt;code&gt;~/&lt;/code&gt; resolves to the home-directory. Webpack needs to distinguish between &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;~bootstrap&lt;/code&gt;, because CSS and Styl files have no special syntax for importing relative files. Writing &lt;code&gt;@import &quot;file&quot;&lt;/code&gt; is the same as &lt;code&gt;@import &quot;./file&quot;;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f240443ca6a35b3157d5d3750520604dee1dc7" translate="yes" xml:space="preserve">
          <source>It's important to only prepend it with &lt;code&gt;~&lt;/code&gt;, because &lt;code&gt;~/&lt;/code&gt; resolves to the home-directory. webpack needs to distinguish between &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;~bootstrap&lt;/code&gt;, because CSS and Less files have no special syntax for importing relative files. Writing &lt;code&gt;@import &quot;file&quot;&lt;/code&gt; is the same as &lt;code&gt;@import &quot;./file&quot;;&lt;/code&gt;</source>
          <target state="translated">仅在 &lt;code&gt;~&lt;/code&gt; 前面加上它很重要，因为 &lt;code&gt;~/&lt;/code&gt; 解析到主目录。的WebPack需要区分 &lt;code&gt;bootstrap&lt;/code&gt; 和 &lt;code&gt;~bootstrap&lt;/code&gt; ，因为CSS以及减档都导入相对文件没有特殊的语法。编写 &lt;code&gt;@import &quot;file&quot;&lt;/code&gt; 与 &lt;code&gt;@import &quot;./file&quot;;&lt;/code&gt; 相同；</target>
        </trans-unit>
        <trans-unit id="23999324e51bc2bd78ddff333ac24395b164de36" translate="yes" xml:space="preserve">
          <source>It's possible to import any &lt;code&gt;toml&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt; or &lt;code&gt;json5&lt;/code&gt; files as a JSON module by using a &lt;a href=&quot;../configuration/module#ruleparserparse&quot;&gt;custom parser&lt;/a&gt; instead of a specific webpack loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af902d8e6f67e03f698bf291d2e2d5d5ecac826" translate="yes" xml:space="preserve">
          <source>It's possible to override any loaders in the configuration by prefixing the entire rule with &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">通过在整个规则前面加上 &lt;code&gt;!&lt;/code&gt; ,可以覆盖配置中的所有加载程序。。</target>
        </trans-unit>
        <trans-unit id="f926f831f984210a9088c7359fbb89bab919f68c" translate="yes" xml:space="preserve">
          <source>It's possible to override any loaders, preLoaders and postLoaders from the &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;configuration&lt;/a&gt; by prefixing the inline &lt;code&gt;import&lt;/code&gt; statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d59a9049b97ef16cb11a8e26f31d4497ce80a1" translate="yes" xml:space="preserve">
          <source>It's possible to specify loaders in an &lt;code&gt;import&lt;/code&gt; statement, or any &lt;a href=&quot;../api/module-methods&quot;&gt;equivalent &quot;importing&quot; method&lt;/a&gt;. Separate loaders from the resource with &lt;code&gt;!&lt;/code&gt;. Each part is resolved relative to the current directory.</source>
          <target state="translated">可以在 &lt;code&gt;import&lt;/code&gt; 语句或任何&lt;a href=&quot;../api/module-methods&quot;&gt;等效的&amp;ldquo; importing&amp;rdquo;方法中&lt;/a&gt;指定加载程序。使用 &lt;code&gt;!&lt;/code&gt; 将加载器与资源分开 。相对于当前目录解析每个部分。</target>
        </trans-unit>
        <trans-unit id="58894037868a192a45659b079b800aa3dcb49518" translate="yes" xml:space="preserve">
          <source>It's recommended to combine &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; with the &lt;a href=&quot;../loaders/css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff305bfecde39d42cab1a12ec4740bb342f18fca" translate="yes" xml:space="preserve">
          <source>It's recommended to combine &lt;code&gt;style-loader&lt;/code&gt; with the &lt;a href=&quot;css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">建议将 &lt;code&gt;style-loader&lt;/code&gt; 和&lt;a href=&quot;css-loader&quot;&gt; &lt;code&gt;css-loader&lt;/code&gt; 结合使用&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40a78ee63600453645a13ff72996518210d7bd0d" translate="yes" xml:space="preserve">
          <source>It's recommended to set &lt;code&gt;cache.buildDependencies.config: [__filename]&lt;/code&gt; in your webpack configuration to get the latest configuration and all dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a059505f0224399159c1602c173a9404486d600" translate="yes" xml:space="preserve">
          <source>It's similar to &lt;code&gt;/*#__PURE__*/&lt;/code&gt; but on a module level instead of a statement level. It says (&lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; property): &quot;If no direct export from a module flagged with no-sideEffects is used, the bundler can skip evaluating the module for side effects.&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9a4774f419df1180567a92515e816dddc16265" translate="yes" xml:space="preserve">
          <source>JS &lt;code&gt;Worklet.addModule&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94ab4e96912f993f5e47a467394b036a0851aa5" translate="yes" xml:space="preserve">
          <source>JS &lt;code&gt;import()&lt;/code&gt; expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc76131f6afb4218e65ce8e90372015320e07a24" translate="yes" xml:space="preserve">
          <source>JS &lt;code&gt;new Worker(..., { type: &quot;module&quot; })&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="11e17b7ff5f01ffd4052941a6483e91b162c8636" translate="yes" xml:space="preserve">
          <source>JavaScript Module Systems Showdown</source>
          <target state="translated">JavaScript模块系统大比拼</target>
        </trans-unit>
        <trans-unit id="85162377231843ac49e1b78695d75bd80a88f1b8" translate="yes" xml:space="preserve">
          <source>JavaScript is taking over the world as a language, as a platform and as a way to rapidly develop and create fast applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d40dd7e7ccb174eb90d4b317bc6c7770e5372c" translate="yes" xml:space="preserve">
          <source>JavascriptParser Hooks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6890a4a97912975ce4ac978939b9e294c3007a94" translate="yes" xml:space="preserve">
          <source>JsonMinimizerWebpackPlugin</source>
          <target state="translated">JsonMinimizerWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="1eb4e01cfa28dde84451ecf461596f5422495ed6" translate="yes" xml:space="preserve">
          <source>JsonpTemplatePlugin</source>
          <target state="translated">JsonpTemplatePlugin</target>
        </trans-unit>
        <trans-unit id="7c4991d6dc8748cd02cde6a9bcf3612734e22440" translate="yes" xml:space="preserve">
          <source>Just &lt;code&gt;require('webpack-stream')&lt;/code&gt; instead of &lt;code&gt;webpack&lt;/code&gt; and optionally pass it an configuration:</source>
          <target state="translated">只是 &lt;code&gt;require('webpack-stream')&lt;/code&gt; 而不是 &lt;code&gt;webpack&lt;/code&gt; ,并且可以选择将其传递给配置：</target>
        </trans-unit>
        <trans-unit id="32e9b7a49d390dbfb9c27e74c5593acbe8bef69d" translate="yes" xml:space="preserve">
          <source>Just add the following plugin when building for production:</source>
          <target state="translated">在制作时加入以下插件即可。</target>
        </trans-unit>
        <trans-unit id="fb62942b2d428d6b89b4e88297101a5a93b34397" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;https://github.com/NMFR/optimize-css-assets-webpack-plugin&quot;&gt;optimize-css-assets-webpack-plugin&lt;/a&gt; but more accurate with source maps and assets using query string, allows to cache and works in parallel mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab0e0bd9561b09a12e44b9c5eaecf3e3f35bea0" translate="yes" xml:space="preserve">
          <source>Just provide the &lt;code&gt;mode&lt;/code&gt; option in the config:</source>
          <target state="translated">只需在配置中提供 &lt;code&gt;mode&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="835db6cf74c39f78cc6a89ccd0b07490be2e3f7d" translate="yes" xml:space="preserve">
          <source>Karma</source>
          <target state="translated">Karma</target>
        </trans-unit>
        <trans-unit id="d2b4618b6c686fe6f80c10a27208644197461fcf" translate="yes" xml:space="preserve">
          <source>Keep chunk size above the specified limit</source>
          <target state="translated">保持分块大小高于指定的限制</target>
        </trans-unit>
        <trans-unit id="abaefcddeaf558e60fd417d4d1f9f81856efe680" translate="yes" xml:space="preserve">
          <source>Keep chunk size above the specified limit by merging chunks that are smaller than the &lt;code&gt;minChunkSize&lt;/code&gt;.</source>
          <target state="translated">通过合并小于 &lt;code&gt;minChunkSize&lt;/code&gt; 的块，使块大小保持在指定限制之上。</target>
        </trans-unit>
        <trans-unit id="5464a45eec4ca360d66dce353930da2ad203b034" translate="yes" xml:space="preserve">
          <source>Keep in mind that this plugin will only be applied to &lt;a href=&quot;../api/module-methods#es6-recommended&quot;&gt;ES6 modules&lt;/a&gt; processed directly by webpack. When using a transpiler, you'll need to disable module processing (e.g. the &lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-env#modules&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt; option in Babel).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdcacb5f8128ae6f265323b548336596dd384637" translate="yes" xml:space="preserve">
          <source>Keep in mind that this plugin will only be applied to &lt;a href=&quot;../api/module-methods#es6-recommended-&quot;&gt;ES6 modules&lt;/a&gt; processed directly by webpack. When using a transpiler, you'll need to disable module processing (e.g. the &lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2015/#optionsmodules&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt; option in Babel).</source>
          <target state="translated">请记住，此插件仅适用于由webpack直接处理的&lt;a href=&quot;../api/module-methods#es6-recommended-&quot;&gt;ES6模块&lt;/a&gt;。使用编译器时，您需要禁用模块处理（例如Babel中的&lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2015/#optionsmodules&quot;&gt; &lt;code&gt;modules&lt;/code&gt; &lt;/a&gt;选项）。</target>
        </trans-unit>
        <trans-unit id="48f220ce746ea5291e9ddcb97cc436b3079085d3" translate="yes" xml:space="preserve">
          <source>Keep in mind that when using regex to match files, you may not quote it. i.e &lt;code&gt;/\.txt$/&lt;/code&gt; is not the same as &lt;code&gt;'/\.txt$/'&lt;/code&gt; or &lt;code&gt;&quot;/\.txt$/&quot;&lt;/code&gt;. The former instructs webpack to match any file that ends with .txt and the latter instructs webpack to match a single file with an absolute path '.txt'; this is likely not your intention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51974544eb4ab247473e19dcba638b1adc81587" translate="yes" xml:space="preserve">
          <source>Keep original name. Good for readablility and debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cba252bffcda2cb733471f2bbdd20e8f0e1caa" translate="yes" xml:space="preserve">
          <source>Keep the &lt;code&gt;name&lt;/code&gt; consistent with &lt;a href=&quot;../configuration/output#output-library&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">保持 &lt;code&gt;name&lt;/code&gt; 与&lt;a href=&quot;../configuration/output#output-library&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt;一致。</target>
        </trans-unit>
        <trans-unit id="50933af9612059732c2c4af2e94595c3b822652f" translate="yes" xml:space="preserve">
          <source>Keep the &lt;code&gt;name&lt;/code&gt; consistent with &lt;a href=&quot;../configuration/output#outputlibrary&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5cea3a792247933da57dffc4123ff9f58e0c509" translate="yes" xml:space="preserve">
          <source>Keeping chunk size above the specified limit is no longer a feature of this plugin. Use [MinChunkSizePlugin)[/plugins/min-chunk-size-plugin] instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0398ccd0f49298b10a3d76a47800d2ebecd49859" translate="yes" xml:space="preserve">
          <source>LICENSE</source>
          <target state="translated">LICENSE</target>
        </trans-unit>
        <trans-unit id="14f06ba0b5725a831c619733de5b3d4a0c598682" translate="yes" xml:space="preserve">
          <source>Labeled Modules</source>
          <target state="translated">标签模块</target>
        </trans-unit>
        <trans-unit id="6853fbdad8b108d6fe7a268a59f82fa611432f32" translate="yes" xml:space="preserve">
          <source>LabeledModulesPlugin</source>
          <target state="translated">LabeledModulesPlugin</target>
        </trans-unit>
        <trans-unit id="db07be184479f34078cd4fc76d248dc0975720e9" translate="yes" xml:space="preserve">
          <source>Languages</source>
          <target state="translated">Languages</target>
        </trans-unit>
        <trans-unit id="4b70141f0b8b8a8b06d37547500ca501f1fc5aba" translate="yes" xml:space="preserve">
          <source>Lastly, there are some modules that support multiple &lt;a href=&quot;../concepts/modules&quot;&gt;module styles&lt;/a&gt;; e.g. a combination of AMD, CommonJS, and legacy. In most of these cases, they first check for &lt;code&gt;define&lt;/code&gt; and then use some quirky code to export properties. In these cases, it could help to force the CommonJS path by setting &lt;code&gt;additionalCode=var%define%20=%20false;&lt;/code&gt; via the &lt;a href=&quot;../loaders/imports-loader&quot;&gt;&lt;code&gt;imports-loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3cbf7632d69cf215ab2098f34fa464c4de110a" translate="yes" xml:space="preserve">
          <source>Lastly, there are some modules that support multiple &lt;a href=&quot;../concepts/modules&quot;&gt;module styles&lt;/a&gt;; e.g. a combination of AMD, CommonJS, and legacy. In most of these cases, they first check for &lt;code&gt;define&lt;/code&gt; and then use some quirky code to export properties. In these cases, it could help to force the CommonJS path by setting &lt;code&gt;define=&amp;gt;false&lt;/code&gt; via the &lt;a href=&quot;../loaders/imports-loader&quot;&gt;&lt;code&gt;imports-loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最后，有些模块支持多种&lt;a href=&quot;../concepts/modules&quot;&gt;模块样式&lt;/a&gt;。例如AMD，CommonJS和旧版的组合。在大多数情况下，它们首先检查 &lt;code&gt;define&lt;/code&gt; ，然后使用一些古怪的代码导出属性。在这些情况下，可以通过&lt;a href=&quot;../loaders/imports-loader&quot;&gt; &lt;code&gt;imports-loader&lt;/code&gt; &lt;/a&gt;设置 &lt;code&gt;define=&amp;gt;false&lt;/code&gt; 来帮助强制CommonJS路径。</target>
        </trans-unit>
        <trans-unit id="53a754e3d992d869269c4cb92a2837bbd5a07aee" translate="yes" xml:space="preserve">
          <source>Lazy Loading</source>
          <target state="translated">懒惰加载</target>
        </trans-unit>
        <trans-unit id="a6814c4ce04cfb95ca6cbfcc3cc1eb059355893f" translate="yes" xml:space="preserve">
          <source>Lazy Loading ES2015 Modules in the Browser</source>
          <target state="translated">在浏览器中懒加载ES2015模块</target>
        </trans-unit>
        <trans-unit id="924e9b7ee1750df1b4535a32bfa737603c8f6140" translate="yes" xml:space="preserve">
          <source>Lazy, or &quot;on demand&quot;, loading is a great way to optimize your site or application. This practice essentially involves splitting your code at logical breakpoints, and then loading it once the user has done something that requires, or will require, a new block of code. This speeds up the initial load of the application and lightens its overall weight as some blocks may never even be loaded.</source>
          <target state="translated">懒惰,或 &quot;按需 &quot;加载是优化网站或应用程序的好方法。这种做法主要是在逻辑断点处拆分你的代码,一旦用户做了需要或将需要新代码块的事情,就加载它。这加快了应用程序的初始加载速度,并减轻了它的整体重量,因为一些块可能永远不会被加载。</target>
        </trans-unit>
        <trans-unit id="4ba79d94f0b82183e33f6b32baf653086df24f6a" translate="yes" xml:space="preserve">
          <source>Learn how &lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt; works.</source>
          <target state="translated">了解&lt;a href=&quot;../concepts/mode&quot;&gt;模式的&lt;/a&gt;工作原理。</target>
        </trans-unit>
        <trans-unit id="3698e2cbefbe2678a76d1e3e54e3e6044e93c491" translate="yes" xml:space="preserve">
          <source>Learn how &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca68b1ffeac8bb76bbc1d874030bcd8e3208d565" translate="yes" xml:space="preserve">
          <source>Learn more about JavaScript modules and webpack modules &lt;a href=&quot;modules&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;modules&quot;&gt;在此处&lt;/a&gt;了解有关JavaScript模块和webpack模块的更多信息。</target>
        </trans-unit>
        <trans-unit id="1d9b670b9c5644eb0eb99c62c6822bbac5029afd" translate="yes" xml:space="preserve">
          <source>Learn more about loaders!</source>
          <target state="translated">了解更多关于装载机的信息!</target>
        </trans-unit>
        <trans-unit id="25e4664e6b481a9acbe6acaf8e0e30c725c89359" translate="yes" xml:space="preserve">
          <source>Learn more about modules!</source>
          <target state="translated">了解更多关于模块的信息!</target>
        </trans-unit>
        <trans-unit id="981293c63de50a4b82c306939fa56898c25be66f" translate="yes" xml:space="preserve">
          <source>Learn more about plugins!</source>
          <target state="translated">了解更多关于插件的信息!</target>
        </trans-unit>
        <trans-unit id="a0581782018f23e44e6981dbddc6b7f35f10da43" translate="yes" xml:space="preserve">
          <source>Learn more about the &lt;a href=&quot;../configuration/mode&quot;&gt;mode configuration here&lt;/a&gt; and what optimizations take place on each value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2378dd02b67a4699cabc2adc239ce15d1c39d6" translate="yes" xml:space="preserve">
          <source>Learn more about the &lt;a href=&quot;mode&quot;&gt;mode configuration here&lt;/a&gt; and what optimizations take place on each value.</source>
          <target state="translated">&lt;a href=&quot;mode&quot;&gt;在此处&lt;/a&gt;了解有关模式配置的更多信息，以及对每个值进行哪些优化。</target>
        </trans-unit>
        <trans-unit id="71802cc29fa08933c8a912cfebb99454b2f8aec2" translate="yes" xml:space="preserve">
          <source>Learn more about the CLI!</source>
          <target state="translated">了解更多关于CLI的信息</target>
        </trans-unit>
        <trans-unit id="61149dfe1def596200b4820edbb47dbc0266a116" translate="yes" xml:space="preserve">
          <source>Learn more about the Node API!</source>
          <target state="translated">了解更多关于Node API的信息</target>
        </trans-unit>
        <trans-unit id="060660781c00c37e702af0748b2353c43ca45835" translate="yes" xml:space="preserve">
          <source>Learn more in the &lt;a href=&quot;entry-points&quot;&gt;entry points&lt;/a&gt; section.</source>
          <target state="translated">在&lt;a href=&quot;entry-points&quot;&gt;入口点&lt;/a&gt;部分了解更多信息。</target>
        </trans-unit>
        <trans-unit id="526cb7425ab8d8d55c981974917cba26fab9834e" translate="yes" xml:space="preserve">
          <source>Less</source>
          <target state="translated">Less</target>
        </trans-unit>
        <trans-unit id="c396dc3238368f1bf29085d3e3aa680459f65daa" translate="yes" xml:space="preserve">
          <source>Less resolver</source>
          <target state="translated">减去解析器</target>
        </trans-unit>
        <trans-unit id="b59060f93296c7da767d26fcb68bf783287278fd" translate="yes" xml:space="preserve">
          <source>Let's add a new utility file to our project, &lt;code&gt;src/math.js&lt;/code&gt;, that exports two functions:</source>
          <target state="translated">让我们向项目 &lt;code&gt;src/math.js&lt;/code&gt; 添加一个新的实用程序文件，该文件可以导出两个函数：</target>
        </trans-unit>
        <trans-unit id="200c218f1107d3bf9e02a4512147e1192f1039e9" translate="yes" xml:space="preserve">
          <source>Let's add a script to easily run the dev server as well:</source>
          <target state="translated">让我们添加一个脚本来轻松运行开发服务器。</target>
        </trans-unit>
        <trans-unit id="c54500b14535b89ad68efa849b9d7c70f6ba0231" translate="yes" xml:space="preserve">
          <source>Let's add an image to our project and see how this works, you can use any image you like:</source>
          <target state="translated">让我们为我们的项目添加一张图片,看看它是如何工作的,你可以使用任何你喜欢的图片。</target>
        </trans-unit>
        <trans-unit id="864ab2c557696cdcedbb70daf234bbfba7f78a8a" translate="yes" xml:space="preserve">
          <source>Let's add an npm script that will start webpack's Watch Mode:</source>
          <target state="translated">让我们添加一个npm脚本来启动webpack的观察模式。</target>
        </trans-unit>
        <trans-unit id="9d231761296ef683bf2ba9352fb7cbff2f3e657f" translate="yes" xml:space="preserve">
          <source>Let's add another module, &lt;code&gt;print.js&lt;/code&gt;, to our project:</source>
          <target state="translated">让我们向项目添加另一个模块 &lt;code&gt;print.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ace53f42c74d245c863b6c55ab81662641f6c56d" translate="yes" xml:space="preserve">
          <source>Let's add some logic to our &lt;code&gt;src/print.js&lt;/code&gt; file:</source>
          <target state="translated">让我们在 &lt;code&gt;src/print.js&lt;/code&gt; 文件中添加一些逻辑：</target>
        </trans-unit>
        <trans-unit id="cfba9b600ffa0d5c1b8bf48328f6711afba973bc" translate="yes" xml:space="preserve">
          <source>Let's add the Workbox webpack plugin and adjust the &lt;code&gt;webpack.config.js&lt;/code&gt; file:</source>
          <target state="translated">让我们添加Workbox Webpack插件并调整 &lt;code&gt;webpack.config.js&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="1a520e9c759609254074e7f9aef08bb59f0e8a30" translate="yes" xml:space="preserve">
          <source>Let's allow our Service Worker to come out and play by registering it. We'll do that by adding the registration code below:</source>
          <target state="translated">让我们通过注册的方式让我们的服务员出来玩吧。我们将通过添加下面的注册码来实现。</target>
        </trans-unit>
        <trans-unit id="d19df46c6e4ea1fe766d1f81d551d3dd9bb6a8f0" translate="yes" xml:space="preserve">
          <source>Let's also update our &lt;code&gt;dist/index.html&lt;/code&gt; file, in preparation for webpack to split out entries:</source>
          <target state="translated">我们还要更新 &lt;code&gt;dist/index.html&lt;/code&gt; 文件，以准备webpack拆分条目：</target>
        </trans-unit>
        <trans-unit id="1066d88aac816a03bf9ea21e38bdb3e6f07556db" translate="yes" xml:space="preserve">
          <source>Let's assume that you are writing a small library ,&lt;code&gt;webpack-numbers&lt;/code&gt;, that allows users to convert the numbers 1 through 5 from their numeric representation to a textual one and vice-versa, e.g. 2 to 'two'.</source>
          <target state="translated">假设您正在编写一个小的库 &lt;code&gt;webpack-numbers&lt;/code&gt; ，该库允许用户将数字1到5从其数字表示形式转换为文本形式的数字，反之亦然，例如，将2转换为&amp;ldquo; 2&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e885fba190464527a86f76f6e854ff2bf32a22ad" translate="yes" xml:space="preserve">
          <source>Let's create &lt;code&gt;bootstrap.js&lt;/code&gt; file and move contents of the entry into it, and import that bootstrap into the entry:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ed2a07bfb908c4c64525abb61dc0d144e86b7d" translate="yes" xml:space="preserve">
          <source>Let's create a new build and open up the &lt;code&gt;index.html&lt;/code&gt; file again:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e443793999c258c40a1ecc9d929d9fcb895c4d" translate="yes" xml:space="preserve">
          <source>Let's create a new build and open up the index.html file again:</source>
          <target state="translated">让我们创建一个新的build,再打开index.html文件。</target>
        </trans-unit>
        <trans-unit id="0dd35e22c0195a54682143b20cd7e5d594f3f00f" translate="yes" xml:space="preserve">
          <source>Let's get our project set up using the example from &lt;a href=&quot;getting-started&quot;&gt;getting started&lt;/a&gt; with the &lt;code&gt;plugins&lt;/code&gt; from &lt;a href=&quot;output-management&quot;&gt;output management&lt;/a&gt;, so we don't have to deal with maintaining our &lt;code&gt;index.html&lt;/code&gt; file manually:</source>
          <target state="translated">让我们我们的项目设置使用从示例&lt;a href=&quot;getting-started&quot;&gt;入门&lt;/a&gt;与 &lt;code&gt;plugins&lt;/code&gt; 从&lt;a href=&quot;output-management&quot;&gt;输出管理&lt;/a&gt;，所以我们没有处理好保持我们 &lt;code&gt;index.html&lt;/code&gt; 手动文件：</target>
        </trans-unit>
        <trans-unit id="c21715b06a69e1e53a376a9bde7c09697189c336" translate="yes" xml:space="preserve">
          <source>Let's go through some different viewpoints to understand exactly how HMR works...</source>
          <target state="translated">让我们通过一些不同的观点来了解HMR到底是如何工作的......</target>
        </trans-unit>
        <trans-unit id="4892d9bcf4690995186c028ca774b0bf83fec124" translate="yes" xml:space="preserve">
          <source>Let's imagine a component &lt;code&gt;ChartComponent&lt;/code&gt; which needs huge &lt;code&gt;ChartingLibrary&lt;/code&gt;. It displays a &lt;code&gt;LoadingIndicator&lt;/code&gt; when rendered and instantly does an on demand import of &lt;code&gt;ChartingLibrary&lt;/code&gt;:</source>
          <target state="translated">让我们想象一个需要巨大 &lt;code&gt;ChartingLibrary&lt;/code&gt; 的组件 &lt;code&gt;ChartComponent&lt;/code&gt; 。呈现时将显示 &lt;code&gt;LoadingIndicator&lt;/code&gt; ，并立即按需导入 &lt;code&gt;ChartingLibrary&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ef98ad0e4e5dc323a57bc97909fb5e5349a2eac3" translate="yes" xml:space="preserve">
          <source>Let's install &lt;code&gt;express&lt;/code&gt; and &lt;code&gt;webpack-dev-middleware&lt;/code&gt; so we can get started:</source>
          <target state="translated">让我们安装 &lt;code&gt;express&lt;/code&gt; 和 &lt;code&gt;webpack-dev-middleware&lt;/code&gt; ,以便我们开始：</target>
        </trans-unit>
        <trans-unit id="8faada5ce22391dd10d1415dea88312392993bd9" translate="yes" xml:space="preserve">
          <source>Let's investigate the result when running the previous &lt;code&gt;EnvironmentPlugin&lt;/code&gt; configuration on a test file &lt;code&gt;entry.js&lt;/code&gt;:</source>
          <target state="translated">让我们研究在测试文件 &lt;code&gt;entry.js&lt;/code&gt; 上运行先前的 &lt;code&gt;EnvironmentPlugin&lt;/code&gt; 配置时的结果：</target>
        </trans-unit>
        <trans-unit id="298915063ccecc95539f7fb0f68e07b97fb7a009" translate="yes" xml:space="preserve">
          <source>Let's load a &lt;code&gt;lodash&lt;/code&gt; from CDN:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba2bc2cbca42426e914f018d1807fcbce85333e" translate="yes" xml:space="preserve">
          <source>Let's make a minor change to our project before we get started:</source>
          <target state="translated">在开始之前,我们先对我们的项目做一个小小的改动。</target>
        </trans-unit>
        <trans-unit id="3d4cdbd0629dd3ebed64ef8e820a259d1903d958" translate="yes" xml:space="preserve">
          <source>Let's make an example. We have a PHP application with two page types: home and account. The home page has different layout and non-sharable JavaScript with the rest of the application (account page). We want to output &lt;code&gt;home.js&lt;/code&gt; and &lt;code&gt;home.css&lt;/code&gt; from our application files for the home page and &lt;code&gt;account.js&lt;/code&gt; and &lt;code&gt;account.css&lt;/code&gt; for account page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ea7b1a14f3ce2b2c663171be6e721b2185c042" translate="yes" xml:space="preserve">
          <source>Let's make an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590a0cf7cc81843fe3251841264d0e9ae677a277" translate="yes" xml:space="preserve">
          <source>Let's move on to &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt;</source>
          <target state="translated">让我们继续进行&lt;a href=&quot;output-management&quot;&gt;输出管理&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3125c87401ba053c594b21408d66ca55db7045a" translate="yes" xml:space="preserve">
          <source>Let's move our &lt;code&gt;import&lt;/code&gt; to a new file and add the &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;&lt;code&gt;whatwg-fetch&lt;/code&gt;&lt;/a&gt; polyfill:</source>
          <target state="translated">让我们 &lt;code&gt;import&lt;/code&gt; 移动到新文件并添加&lt;a href=&quot;https://github.com/github/fetch&quot;&gt; &lt;code&gt;whatwg-fetch&lt;/code&gt; polyfill&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="de9be29e070239fa61fbe9fde651678f8af4fecb" translate="yes" xml:space="preserve">
          <source>Let's run &lt;code&gt;npm run build&lt;/code&gt; and see what this generates:</source>
          <target state="translated">让我们运行 &lt;code&gt;npm run build&lt;/code&gt; 看看会产生什么：</target>
        </trans-unit>
        <trans-unit id="05b4091ebfe585ae03159d738539e58072f2cc91" translate="yes" xml:space="preserve">
          <source>Let's run another build to see our new &lt;code&gt;vendor&lt;/code&gt; bundle:</source>
          <target state="translated">让我们运行另一个构建，以查看我们的新 &lt;code&gt;vendor&lt;/code&gt; 捆绑包：</target>
        </trans-unit>
        <trans-unit id="23616ff7b451fb065dfd47b0c7c28b3535ab4f2f" translate="yes" xml:space="preserve">
          <source>Let's run another build to see the extracted &lt;code&gt;runtime&lt;/code&gt; bundle:</source>
          <target state="translated">让我们运行另一个构建，以查看提取的 &lt;code&gt;runtime&lt;/code&gt; 捆绑包：</target>
        </trans-unit>
        <trans-unit id="f8667f71f677ad25dd0ee6282c11ca61db7ae828" translate="yes" xml:space="preserve">
          <source>Let's run webpack to see &lt;code&gt;lodash&lt;/code&gt; separated out to a separate bundle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2c46a7029c196da23bacb642ca9d22f9c691bf" translate="yes" xml:space="preserve">
          <source>Let's say a library creates a global variable that it expects its consumers to use. We can add a small module to our setup to demonstrate this:</source>
          <target state="translated">比方说,一个库创建了一个全局变量,它希望它的消费者能够使用这个变量。我们可以在我们的设置中添加一个小模块来证明这一点。</target>
        </trans-unit>
        <trans-unit id="776d07f8864f55d567475975ff8c87e0521fdf09" translate="yes" xml:space="preserve">
          <source>Let's say you also want to expose it as &lt;code&gt;window.jQuery&lt;/code&gt; in addition to &lt;code&gt;window.$&lt;/code&gt;. For multiple expose you can use &lt;code&gt;!&lt;/code&gt; in loader string:</source>
          <target state="translated">比方说，你也想公开为 &lt;code&gt;window.jQuery&lt;/code&gt; 除了 &lt;code&gt;window.$&lt;/code&gt; 。对于多重暴露，您可以使用 &lt;code&gt;!&lt;/code&gt; 在加载程序字符串中：</target>
        </trans-unit>
        <trans-unit id="b8a766615ef9dff3e057a22ebd8956772beafad3" translate="yes" xml:space="preserve">
          <source>Let's say you have a &lt;code&gt;data.toml&lt;/code&gt;, a &lt;code&gt;data.yaml&lt;/code&gt; and a &lt;code&gt;data.json5&lt;/code&gt; files under &lt;code&gt;src&lt;/code&gt; folder:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10dd09185683439beae7b26603169e5b51b0f80d" translate="yes" xml:space="preserve">
          <source>Let's set up a simple configuration to support JSX and compile TypeScript down to ES5...</source>
          <target state="translated">让我们设置一个简单的配置来支持JSX,并将TypeScript编译到ES5......</target>
        </trans-unit>
        <trans-unit id="f59258da6cc89b2e4be16b8392b42cf322f93e52" translate="yes" xml:space="preserve">
          <source>Let's start by clearing up a common misconception. webpack is a module bundler like &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; or &lt;a href=&quot;http://brunch.io/&quot;&gt;Brunch&lt;/a&gt;. It is &lt;em&gt;not a task runner&lt;/em&gt; like &lt;a href=&quot;https://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt;, &lt;a href=&quot;https://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt;, or &lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;. Task runners handle automation of common development tasks such as linting, building, or testing your project. Compared to bundlers, task runners have a higher level focus. You can still benefit from their higher level tooling while leaving the problem of bundling to webpack.</source>
          <target state="translated">让我们首先清除一个常见的误解。webpack是类似于&lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt;或&lt;a href=&quot;http://brunch.io/&quot;&gt;Brunch&lt;/a&gt;的模块捆绑器。它&lt;em&gt;不是&lt;/em&gt;&lt;a href=&quot;https://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt;，&lt;a href=&quot;https://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt;或&lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp之&lt;/a&gt;类&lt;em&gt;的任务赛跑者&lt;/em&gt;。任务运行器负责自动化常见的开发任务，例如整理，构建或测试项目。与捆绑器相比，任务运行者具有更高的关注重点。您仍然可以从他们的高级工具中受益，同时将问题捆绑到webpack。</target>
        </trans-unit>
        <trans-unit id="dbc786ac9b3435f5a9140796e5c04e1f9d930ec0" translate="yes" xml:space="preserve">
          <source>Let's start by clearing up a common misconception. webpack is a module bundler like &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; or &lt;a href=&quot;https://brunch.io/&quot;&gt;Brunch&lt;/a&gt;. It is &lt;em&gt;not a task runner&lt;/em&gt; like &lt;a href=&quot;https://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt;, &lt;a href=&quot;https://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt;, or &lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;. Task runners handle automation of common development tasks such as linting, building, or testing your project. Compared to bundlers, task runners have a higher level focus. You can still benefit from their higher level tooling while leaving the problem of bundling to webpack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853f3c6d86100a64c1d5dec13779e87d731f7334" translate="yes" xml:space="preserve">
          <source>Let's start by going over &lt;code&gt;tapable&lt;/code&gt; utility, which provides the backbone of webpack's plugin interface.</source>
          <target state="translated">让我们 &lt;code&gt;tapable&lt;/code&gt; 实用程序开始，它提供了webpack插件界面的基础。</target>
        </trans-unit>
        <trans-unit id="14634cbd80692f23d4c30ffb14a82bc46651c8b4" translate="yes" xml:space="preserve">
          <source>Let's start by installing &lt;code&gt;webpack-merge&lt;/code&gt; and splitting out the bits we've already worked on in previous guides:</source>
          <target state="translated">让我们从安装 &lt;code&gt;webpack-merge&lt;/code&gt; 开始，并拆分出先前指南中已经处理过的部分：</target>
        </trans-unit>
        <trans-unit id="f3eea3fe86bd5f8f45fa0ca7ba204ab983853af1" translate="yes" xml:space="preserve">
          <source>Let's start by setting &lt;a href=&quot;../configuration/mode#mode-development&quot;&gt;&lt;code&gt;mode&lt;/code&gt; to &lt;code&gt;'development'&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;title&lt;/code&gt; to &lt;code&gt;'Development'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9402911d7f68b5de2aae4313daf24baa2ef78c11" translate="yes" xml:space="preserve">
          <source>Let's start with the first use case of shimming global variables. Before we do anything let's take another look at our project:</source>
          <target state="translated">让我们从第一个使用案例开始,即对全局变量进行微调。在我们做任何事情之前,让我们再看看我们的项目。</target>
        </trans-unit>
        <trans-unit id="1585320b59b8f2a00c80a5a11f4429712661343d" translate="yes" xml:space="preserve">
          <source>Let's take the example from &lt;a href=&quot;code-splitting#dynamic-imports&quot;&gt;Code Splitting&lt;/a&gt; and tweak it a bit to demonstrate this concept even more. The code there does cause a separate chunk, &lt;code&gt;lodash.bundle.js&lt;/code&gt;, to be generated and technically &quot;lazy-loads&quot; it as soon as the script is run. The trouble is that no user interaction is required to load the bundle -- meaning that every time the page is loaded, the request will fire. This doesn't help us too much and will impact performance negatively.</source>
          <target state="translated">让我们以&lt;a href=&quot;code-splitting#dynamic-imports&quot;&gt;代码拆分中&lt;/a&gt;的示例为例，并对其进行一些微调以进一步展示此概念。那里的代码确实会导致生成一个单独的块 &lt;code&gt;lodash.bundle.js&lt;/code&gt; ，并且从技术上讲，一旦脚本运行，它就会&amp;ldquo;延迟加载&amp;rdquo;。问题在于，无需用户交互即可加载该包-这意味着每次加载页面时，该请求都会触发。这对我们没有太大帮助，会对性能产生负面影响。</target>
        </trans-unit>
        <trans-unit id="f2575ec6a173ba3f717e212116d79db29ba7ccfe" translate="yes" xml:space="preserve">
          <source>Let's try it out by adding a new &lt;code&gt;style.css&lt;/code&gt; file to our project and import it in our &lt;code&gt;index.js&lt;/code&gt;:</source>
          <target state="translated">让我们通过在项目中添加一个新的 &lt;code&gt;style.css&lt;/code&gt; 文件并将其导入 &lt;code&gt;index.js&lt;/code&gt; 来进行尝试：</target>
        </trans-unit>
        <trans-unit id="6df435dd142351e74c95d5af3dddef706ca77152" translate="yes" xml:space="preserve">
          <source>Let's try something different. We'll add an interaction to log some text to the console when the user clicks a button. However, we'll wait to load that code (&lt;code&gt;print.js&lt;/code&gt;) until the interaction occurs for the first time. To do this we'll go back and rework the &lt;a href=&quot;code-splitting#dynamic-imports&quot;&gt;final &lt;em&gt;Dynamic Imports&lt;/em&gt; example&lt;/a&gt; from &lt;em&gt;Code Splitting&lt;/em&gt; and leave &lt;code&gt;lodash&lt;/code&gt; in the main chunk.</source>
          <target state="translated">让我们尝试一些不同的东西。当用户单击按钮时，我们将添加一个交互操作以将一些文本记录到控制台。但是，我们将等待加载该代码（ &lt;code&gt;print.js&lt;/code&gt; ），直到第一次进行交互为止。为此，我们将回过头来对&lt;em&gt;代码拆分中&lt;/em&gt;的&lt;a href=&quot;code-splitting#dynamic-imports&quot;&gt;最终&lt;em&gt;动态导入&lt;/em&gt;示例进行&lt;/a&gt;重做，并将 &lt;code&gt;lodash&lt;/code&gt; 留在主要块中。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4cf925ca2a61ded049c2b9c8be2bc04d2c7c78d6" translate="yes" xml:space="preserve">
          <source>Let's use webpack to manage these scripts instead.</source>
          <target state="translated">让我们用webpack来代替管理这些脚本。</target>
        </trans-unit>
        <trans-unit id="e9ab4958799f3eae9e6c85fee5051e48df52630d" translate="yes" xml:space="preserve">
          <source>Library authors usually provide a variable to modify the asset path. &lt;a href=&quot;https://github.com/twbs/bootstrap-sass&quot;&gt;bootstrap-sass&lt;/a&gt; for example has an &lt;code&gt;$icon-font-path&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda3cf2b1330f7df4e9c4ba482d22eceea1029f9" translate="yes" xml:space="preserve">
          <source>Library authors usually provide a variable to modify the asset path. &lt;a href=&quot;https://github.com/twbs/bootstrap-sass&quot;&gt;bootstrap-sass&lt;/a&gt; for example has an &lt;code&gt;$icon-font-path&lt;/code&gt;. Check out &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/master/test/bootstrapSass&quot;&gt;this working bootstrap example&lt;/a&gt;.</source>
          <target state="translated">图书馆作者通常提供一个变量来修改资产路径。例如，&lt;a href=&quot;https://github.com/twbs/bootstrap-sass&quot;&gt;bootstrap-sass&lt;/a&gt;具有 &lt;code&gt;$icon-font-path&lt;/code&gt; 。看看&lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/master/test/bootstrapSass&quot;&gt;这个工作的引导示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75de8b5f4d779f5ae4944b0b52b4a9235709f44e" translate="yes" xml:space="preserve">
          <source>LibraryTemplatePlugin</source>
          <target state="translated">LibraryTemplatePlugin</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">License</target>
        </trans-unit>
        <trans-unit id="e91f6ba4ec02c67a796600daa345b1a2b526d763" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution License 4.0.</source>
          <target state="translated">根据知识共享署名4.0授权。</target>
        </trans-unit>
        <trans-unit id="cb798772092fd7fd72c676c4c942bf151ab4a5c3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;maxSize&lt;/code&gt;, &lt;code&gt;maxAsyncSize&lt;/code&gt; can be applied globally (&lt;code&gt;splitChunks.maxAsyncSize&lt;/code&gt;), to cacheGroups (&lt;code&gt;splitChunks.cacheGroups.{cacheGroup}.maxAsyncSize&lt;/code&gt;), or to the fallback cache group (&lt;code&gt;splitChunks.fallbackCacheGroup.maxAsyncSize&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6c83ac4b6f4c4d7bccee4aa9cfe775196e5bb5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;maxSize&lt;/code&gt;, &lt;code&gt;maxInitialSize&lt;/code&gt; can be applied globally (&lt;code&gt;splitChunks.maxInitialSize&lt;/code&gt;), to cacheGroups (&lt;code&gt;splitChunks.cacheGroups.{cacheGroup}.maxInitialSize&lt;/code&gt;), or to the fallback cache group (&lt;code&gt;splitChunks.fallbackCacheGroup.maxInitialSize&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e000bfb2c71234bfa728e34259c747ffa13b98" translate="yes" xml:space="preserve">
          <source>Limit of assets displayed in chunk groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95efc95f54a56248789ba7e9cc95082d78e7bdf9" translate="yes" xml:space="preserve">
          <source>Limit the maximum number of chunks using a value greater than or equal to &lt;code&gt;1&lt;/code&gt;. Using &lt;code&gt;1&lt;/code&gt; will prevent any additional chunks from being added as the entry/main chunk is also included in the count.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a5d4d2895ae726d72e5f60e0d638c0f774d38d3" translate="yes" xml:space="preserve">
          <source>Limit the number of parallel processed modules. Can be used to fine tune performance or to get more reliable profiling results.</source>
          <target state="translated">限制并行处理模块的数量。可用于微调性能或获得更可靠的剖析结果。</target>
        </trans-unit>
        <trans-unit id="a2a1222d76b80e7fd40844198be5e6873ecfac18" translate="yes" xml:space="preserve">
          <source>LimitChunkCountPlugin</source>
          <target state="translated">LimitChunkCountPlugin</target>
        </trans-unit>
        <trans-unit id="a2cffd676e1510ccf968f218894d0b314324a9df" translate="yes" xml:space="preserve">
          <source>Limits the number of simultaneous requests to fs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8b8b6a5dbf94725cbcda1e9615dcec15325a3d4" translate="yes" xml:space="preserve">
          <source>Lint only changed files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f273f732af71f6c5621f77b602d8a6107ab34b1" translate="yes" xml:space="preserve">
          <source>Lint only changed files, skip lint on start.</source>
          <target state="translated">只对已更改的文件进行lint,启动时跳过lint。</target>
        </trans-unit>
        <trans-unit id="042b641dbb2ed8580d6aab21f1462f4a56a9e95e" translate="yes" xml:space="preserve">
          <source>Linting &amp;amp;&amp;amp; Testing</source>
          <target state="translated">整理和测试</target>
        </trans-unit>
        <trans-unit id="fd7d5f026b3ded3199dbda80418fe5eac819743a" translate="yes" xml:space="preserve">
          <source>List of chunk loading types enabled for use by entry points. Will be automatically filled by webpack. Only needed when using a function as entry option and returning chunkLoading option from there.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f949aadce6c932c7b22751500a59eeff1752c363" translate="yes" xml:space="preserve">
          <source>List of exports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abdd890adfdb2c4599192c129126f3687cfc8067" translate="yes" xml:space="preserve">
          <source>List of exports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580f7e33f06178aa42a97e11dfc3c37023ef5ce6" translate="yes" xml:space="preserve">
          <source>List of exposes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4576a1f6cd67553f22d78a49b2cc834a1228b298" translate="yes" xml:space="preserve">
          <source>List of exposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e849f87b5a60b5d7ed456261d0dc610183f0fbe6" translate="yes" xml:space="preserve">
          <source>List of imports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ecbc840192431f608670f4f4fd5ae4f3c965b3" translate="yes" xml:space="preserve">
          <source>List of imports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cb0d5573b5dd848b3951aacee519d5bd1e85ff" translate="yes" xml:space="preserve">
          <source>List of library types enabled for use by entry points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfe726c428a9387712e23978d623e71dd5ca3b4" translate="yes" xml:space="preserve">
          <source>List of wasm loading types enabled for use by entry points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9958a2677c3ef0351f8de1b9c79ba7331f155a4" translate="yes" xml:space="preserve">
          <source>Literate CoffeeScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1a72a677627588b1d87c98301583e3fa88eba4" translate="yes" xml:space="preserve">
          <source>Live Coding a Simple Module Bundler</source>
          <target state="translated">实时编码一个简单的模块捆绑器</target>
        </trans-unit>
        <trans-unit id="72986479acdb9edfa5ba3b6cdd0fbc9a02006d70" translate="yes" xml:space="preserve">
          <source>Load markdown through &lt;code&gt;remark&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2625ad5d0ca254becb883641b39ae3e49eb232ca" translate="yes" xml:space="preserve">
          <source>Load this &lt;a href=&quot;../configuration/plugins&quot;&gt;plugin&lt;/a&gt;</source>
          <target state="translated">加载此&lt;a href=&quot;../configuration/plugins&quot;&gt;插件&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec6f9069daa80029e880d76fc3bf6a0698a7d554" translate="yes" xml:space="preserve">
          <source>Loader</source>
          <target state="translated">Loader</target>
        </trans-unit>
        <trans-unit id="59fb9ad81b2126251218e6a1c17e8241d9602293" translate="yes" xml:space="preserve">
          <source>Loader API</source>
          <target state="translated">装载机API</target>
        </trans-unit>
        <trans-unit id="9e2a0de698da089eb7b79cf5a0a40fcafc427211" translate="yes" xml:space="preserve">
          <source>Loader API: this._compilation</source>
          <target state="translated">Loader API:this._compilation</target>
        </trans-unit>
        <trans-unit id="5e2dcf6c1a83820afd8fd70db164d7a1e38909a4" translate="yes" xml:space="preserve">
          <source>Loader API: this._compiler</source>
          <target state="translated">加载器API:this._compiler</target>
        </trans-unit>
        <trans-unit id="5fb3803d469519b6d21e613d1a1169c63e62dd7c" translate="yes" xml:space="preserve">
          <source>Loader API: this._module</source>
          <target state="translated">Loader API:this._module</target>
        </trans-unit>
        <trans-unit id="113c7b9eb07500696d46f9ae51649861c0da2675" translate="yes" xml:space="preserve">
          <source>Loader API: this.addContextDependency</source>
          <target state="translated">加载器API:this.addContextDependency。</target>
        </trans-unit>
        <trans-unit id="3f1e2a84ac5e1d8f14b9d349efedeb644b5152cc" translate="yes" xml:space="preserve">
          <source>Loader API: this.addDependency</source>
          <target state="translated">Loader API:this.addDependency。</target>
        </trans-unit>
        <trans-unit id="8e7dc3d534226c57937ea44296ee1c9e5ec56fbc" translate="yes" xml:space="preserve">
          <source>Loader API: this.async</source>
          <target state="translated">加载器API:this.async</target>
        </trans-unit>
        <trans-unit id="fcc91e71938e158b9223db640e97018e2374a36c" translate="yes" xml:space="preserve">
          <source>Loader API: this.cacheable</source>
          <target state="translated">Loader API:this.cacheable</target>
        </trans-unit>
        <trans-unit id="72f1f415951644307715108bc0d9be6d0ef998f9" translate="yes" xml:space="preserve">
          <source>Loader API: this.callback</source>
          <target state="translated">Loader API:this.callback</target>
        </trans-unit>
        <trans-unit id="0e91f66b9006e6f4f27bb836f73f9ce44049a31d" translate="yes" xml:space="preserve">
          <source>Loader API: this.clearDependencies</source>
          <target state="translated">Loader API:this.clearDependencies。</target>
        </trans-unit>
        <trans-unit id="63d74e02be6e015c4d9ef7e65e9af01a69711eb1" translate="yes" xml:space="preserve">
          <source>Loader API: this.context</source>
          <target state="translated">Loader API:this.context</target>
        </trans-unit>
        <trans-unit id="4b44f05dd995d5ea0c52b17be7e2cbb84c43ffb8" translate="yes" xml:space="preserve">
          <source>Loader API: this.data</source>
          <target state="translated">加载器API:this.data</target>
        </trans-unit>
        <trans-unit id="d33ff0f4b42beba7ad47650ec9c94e6418684a7f" translate="yes" xml:space="preserve">
          <source>Loader API: this.debug</source>
          <target state="translated">加载器API:this.debug</target>
        </trans-unit>
        <trans-unit id="51d260cd4b5d9c5c6c75fc839dd502007fab69dc" translate="yes" xml:space="preserve">
          <source>Loader API: this.emitError</source>
          <target state="translated">Loader API:this.emitError</target>
        </trans-unit>
        <trans-unit id="5e494538e939a2022e7f5a208d648bf015cd4b79" translate="yes" xml:space="preserve">
          <source>Loader API: this.emitFile</source>
          <target state="translated">Loader API:this.emitFile</target>
        </trans-unit>
        <trans-unit id="b5cb7c7a6af52d7a23c91198c55b188be1b4a7ee" translate="yes" xml:space="preserve">
          <source>Loader API: this.emitWarning</source>
          <target state="translated">Loader API:this.mitWarning</target>
        </trans-unit>
        <trans-unit id="860c8f3daa795ad6feee54ed91625fce5cdbe719" translate="yes" xml:space="preserve">
          <source>Loader API: this.exec</source>
          <target state="translated">Loader API:this.exec</target>
        </trans-unit>
        <trans-unit id="c8322deb3164815c4863bec78ce481557c0803ed" translate="yes" xml:space="preserve">
          <source>Loader API: this.fs</source>
          <target state="translated">加载API:this.fs</target>
        </trans-unit>
        <trans-unit id="2552f2f9f4456818ae2f6223067ca63d3092ee5f" translate="yes" xml:space="preserve">
          <source>Loader API: this.inputValue</source>
          <target state="translated">Loader API:this.inputValue</target>
        </trans-unit>
        <trans-unit id="1e5192027d81543759982da99ac9e159d9344b75" translate="yes" xml:space="preserve">
          <source>Loader API: this.loadModule</source>
          <target state="translated">加载器API:this.loadModule</target>
        </trans-unit>
        <trans-unit id="72bd55d0b6d300698178acb035877306b51468f8" translate="yes" xml:space="preserve">
          <source>Loader API: this.loaderIndex</source>
          <target state="translated">Loader API:this.loaderIndex</target>
        </trans-unit>
        <trans-unit id="416c1d88614507c0345ef8198254c4130b148e9a" translate="yes" xml:space="preserve">
          <source>Loader API: this.loaders</source>
          <target state="translated">加载器API:this.loaders</target>
        </trans-unit>
        <trans-unit id="d527d43de2f36195cb26f48ca1c4ea9289f254c5" translate="yes" xml:space="preserve">
          <source>Loader API: this.minimize</source>
          <target state="translated">加载API:this.minimize</target>
        </trans-unit>
        <trans-unit id="2d906042fe4b7b912e5db074680bb62d469d3d2d" translate="yes" xml:space="preserve">
          <source>Loader API: this.options</source>
          <target state="translated">加载器API:this.options</target>
        </trans-unit>
        <trans-unit id="f404fb748ceb73e72f3bd4e22ae713596ae4b0db" translate="yes" xml:space="preserve">
          <source>Loader API: this.query</source>
          <target state="translated">Loader API:this.query</target>
        </trans-unit>
        <trans-unit id="814cbe955ad67ec34eff69a545e136570fe3fe5b" translate="yes" xml:space="preserve">
          <source>Loader API: this.request</source>
          <target state="translated">Loader API:this.request</target>
        </trans-unit>
        <trans-unit id="23d5a5e6ea8d847afb18a0758dd8dec816437495" translate="yes" xml:space="preserve">
          <source>Loader API: this.resolve</source>
          <target state="translated">Loader API:this.resolve</target>
        </trans-unit>
        <trans-unit id="5d495b55aaf42f0e8e9721d0f71d35a7f70e4394" translate="yes" xml:space="preserve">
          <source>Loader API: this.resolveSync</source>
          <target state="translated">Loader API:this.resolveSync</target>
        </trans-unit>
        <trans-unit id="fa7a331766145671012dde09e34bbf9f409dd9af" translate="yes" xml:space="preserve">
          <source>Loader API: this.resource</source>
          <target state="translated">Loader API:this.resource</target>
        </trans-unit>
        <trans-unit id="248a9d34f750087194073bb4591f638e28becc8d" translate="yes" xml:space="preserve">
          <source>Loader API: this.resourcePath</source>
          <target state="translated">Loader API:this.resourcePath</target>
        </trans-unit>
        <trans-unit id="99f061dc8f80ae78b2aa8f530bd7042cb8675a71" translate="yes" xml:space="preserve">
          <source>Loader API: this.resourceQuery</source>
          <target state="translated">Loader API:this.resourceQuery</target>
        </trans-unit>
        <trans-unit id="45b84155f359bf710da1cfb9c23ea0f4a2424be3" translate="yes" xml:space="preserve">
          <source>Loader API: this.rootContext</source>
          <target state="translated">Loader API:this.rootContext</target>
        </trans-unit>
        <trans-unit id="f81f422249588113fa2f3592581e12aa3de00b0f" translate="yes" xml:space="preserve">
          <source>Loader API: this.sourceMap</source>
          <target state="translated">载入器API:this.sourceMap</target>
        </trans-unit>
        <trans-unit id="1089d0ca8d4710d2da54c93dac1cfbd2a4162e0b" translate="yes" xml:space="preserve">
          <source>Loader API: this.target</source>
          <target state="translated">Loader API:this.target</target>
        </trans-unit>
        <trans-unit id="0cfe16073d2288f5c25f52c42bf7092e9c927abd" translate="yes" xml:space="preserve">
          <source>Loader API: this.value</source>
          <target state="translated">Loader API:this.value</target>
        </trans-unit>
        <trans-unit id="97857623be671d98299df6e485fc69b5fa569a45" translate="yes" xml:space="preserve">
          <source>Loader API: this.version</source>
          <target state="translated">Loader API:this.version</target>
        </trans-unit>
        <trans-unit id="6e8ef33826832f7d3ca753b4f83081faf1a720f6" translate="yes" xml:space="preserve">
          <source>Loader API: this.webpack</source>
          <target state="translated">Loader API:this.webpack</target>
        </trans-unit>
        <trans-unit id="7b06b231c21bbc554c52089970417ff2a72db3a4" translate="yes" xml:space="preserve">
          <source>Loader Features</source>
          <target state="translated">装载机功能</target>
        </trans-unit>
        <trans-unit id="72c4ad8cd558bcf1b6d659a6c395945b1c244344" translate="yes" xml:space="preserve">
          <source>Loader Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52c12240d9cb856acdf285cb888ef1e21d8c735" translate="yes" xml:space="preserve">
          <source>Loader Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b67d98b64f11182f0bdc43d2a1f8afe67ea42c" translate="yes" xml:space="preserve">
          <source>Loader accepts a function that will have one argument: an array of eslint messages (object). The function must return the output as a string. You can use official eslint formatters.</source>
          <target state="translated">Loader接受一个有一个参数的函数:一个eslint消息(对象)数组。该函数必须以字符串的形式返回输出。你可以使用官方的eslint格式。</target>
        </trans-unit>
        <trans-unit id="436c4d54c32af7fd571edb588d9ec92b480977c7" translate="yes" xml:space="preserve">
          <source>Loader for &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; to process CSS with &lt;a href=&quot;https://postcss.org/&quot;&gt;PostCSS&lt;/a&gt;</source>
          <target state="translated">装载机&lt;a href=&quot;https://webpack.js.org/&quot;&gt;的WebPack&lt;/a&gt;与过程CSS &lt;a href=&quot;https://postcss.org/&quot;&gt;PostCSS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0678dd74394ca309b656affdbe65a97b171fcbb" translate="yes" xml:space="preserve">
          <source>Loader to process CSS with &lt;a href=&quot;https://github.com/postcss/postcss&quot;&gt;&lt;code&gt;PostCSS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e923b83d068def294e84ed0af39ef4d9d65f07" translate="yes" xml:space="preserve">
          <source>Loader will always return errors if this option is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果此选项设置为 &lt;code&gt;true&lt;/code&gt; ,则Loader始终会返回错误。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
