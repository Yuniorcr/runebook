<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="webpack">
    <body>
      <group id="webpack">
        <trans-unit id="b9875763f65e2307243db50cc2f2061578a690bb" translate="yes" xml:space="preserve">
          <source>It basically comes down to this:</source>
          <target state="translated">基本上是这样的。</target>
        </trans-unit>
        <trans-unit id="59dce9462293c25777c42b41526c5997bbec52db" translate="yes" xml:space="preserve">
          <source>It builds on top of a new webpack v4 feature (module types) and requires webpack 4 to work.</source>
          <target state="translated">它建立在一个新的webpack v4特性(模块类型)之上,并且需要webpack 4才能工作。</target>
        </trans-unit>
        <trans-unit id="705ee94eb78742d3eaa1b7c97fba1f7df0a66254" translate="yes" xml:space="preserve">
          <source>It can be hard to set up a complex webpack configuration for the first time. Writing advanced configurations to optimize performance could be even more difficult. The &lt;code&gt;init&lt;/code&gt; feature allows creating a webpack configuration by using customizable third-party initialization packages.</source>
          <target state="translated">初次设置复杂的Webpack配置可能很困难。编写高级配置以优化性能可能会更加困难。该 &lt;code&gt;init&lt;/code&gt; 功能允许创建通过使用自定义的第三方初始化包一个的WebPack配置。</target>
        </trans-unit>
        <trans-unit id="f879720d2904e8d40f82caa669a9fd39de13f749" translate="yes" xml:space="preserve">
          <source>It can be useful to pass an abstract syntax tree (AST), like &lt;a href=&quot;https://github.com/estree/estree&quot;&gt;&lt;code&gt;ESTree&lt;/code&gt;&lt;/a&gt;, as the fourth argument (&lt;code&gt;meta&lt;/code&gt;) to speed up the build time if you want to share common ASTs between loaders.</source>
          <target state="translated">如果要在加载程序之间共享常见的AST ，&lt;a href=&quot;https://github.com/estree/estree&quot;&gt; &lt;code&gt;ESTree&lt;/code&gt; &lt;/a&gt;类似于ESTree的抽象语法树（AST）作为第四个参数（ &lt;code&gt;meta&lt;/code&gt; ）传递可能会很有用。</target>
        </trans-unit>
        <trans-unit id="0c80fe031ec5dcb9765df0675771cd2a363d232a" translate="yes" xml:space="preserve">
          <source>It can have an &lt;code&gt;options&lt;/code&gt; property being a string or object. This value is passed to the loader, which should interpret it as loader options.</source>
          <target state="translated">它的 &lt;code&gt;options&lt;/code&gt; 属性可以是字符串或对象。该值传递给加载程序，加载程序应将其解释为加载程序选项。</target>
        </trans-unit>
        <trans-unit id="fdd23de19b5eb3042d866f8991836c1028466c9b" translate="yes" xml:space="preserve">
          <source>It defaults to &lt;code&gt;false&lt;/code&gt; for performance reasons.</source>
          <target state="translated">由于性能原因，它默认为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11825d38c53c00ce2a73d93d7cf76d39274a170e" translate="yes" xml:space="preserve">
          <source>It helps determinate ES-features that may be used to generate a runtime-code (all the chunks and modules are wrapped by runtime code).</source>
          <target state="translated">它有助于确定可能用于生成运行时代码的ES特性(所有的块和模块都被运行时代码所包裹)。</target>
        </trans-unit>
        <trans-unit id="ae9e7202715b24aa4688d675b7c9fbb8f280ed90" translate="yes" xml:space="preserve">
          <source>It instructs webpack on how to treat the stats</source>
          <target state="translated">它指导webpack如何处理stats。</target>
        </trans-unit>
        <trans-unit id="0ff34e3b2aa57d6a6b6b5cee7b428e2d8d0f38bd" translate="yes" xml:space="preserve">
          <source>It invokes &lt;code&gt;webpack-bundle-analyzer&lt;/code&gt; plugin to get bundle information</source>
          <target state="translated">它调用 &lt;code&gt;webpack-bundle-analyzer&lt;/code&gt; 插件来获取包信息</target>
        </trans-unit>
        <trans-unit id="339423019af5db7225052499f2a9f31de30818b9" translate="yes" xml:space="preserve">
          <source>It is also available as a CLI flag:</source>
          <target state="translated">它也可以作为CLI标志。</target>
        </trans-unit>
        <trans-unit id="945cc2239651cf32115bdee8cb704ddc32d0cb05" translate="yes" xml:space="preserve">
          <source>It is also possible to have and use multiple &lt;a href=&quot;https://github.com/micromatch/anymatch&quot;&gt;anymatch&lt;/a&gt; patterns:</source>
          <target state="translated">也可能具有并使用多个&lt;a href=&quot;https://github.com/micromatch/anymatch&quot;&gt;anymatch&lt;/a&gt;模式：</target>
        </trans-unit>
        <trans-unit id="246f08a6fcc4df6b67005d32c124da86dc8af3b4" translate="yes" xml:space="preserve">
          <source>It is also possible to serve from multiple directories in case you want to serve static content at multiple URLs with &lt;a href=&quot;#devservercontentbasepublicpath&quot;&gt;&lt;code&gt;contentBasePublicPath&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">如果您想使用&lt;a href=&quot;#devservercontentbasepublicpath&quot;&gt; &lt;code&gt;contentBasePublicPath&lt;/code&gt; &lt;/a&gt;在多个URL上提供静态内容，也可以从多个目录中提供服务：</target>
        </trans-unit>
        <trans-unit id="5dc9c7ffaee78d96165a2216e51352d8b395f38a" translate="yes" xml:space="preserve">
          <source>It is also possible to serve from multiple directories:</source>
          <target state="translated">也可以从多个目录服务。</target>
        </trans-unit>
        <trans-unit id="c5a7a0721e38bd01fb0bbca3a054ca4ef21c267c" translate="yes" xml:space="preserve">
          <source>It is also possible to specify full path:</source>
          <target state="translated">也可以指定完整的路径。</target>
        </trans-unit>
        <trans-unit id="37138d0a4f0dd83a1c06a45d1e4ff32678818985" translate="yes" xml:space="preserve">
          <source>It is also possible to use &lt;strong&gt;iframe mode&lt;/strong&gt;, which uses an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; under a notification bar with messages about the build. To switch to &lt;strong&gt;iframe mode&lt;/strong&gt;:</source>
          <target state="translated">也可以使用&lt;strong&gt;iframe模式&lt;/strong&gt;，该&lt;strong&gt;模式&lt;/strong&gt;在带有有关构建消息的通知栏下使用 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 。切换至&lt;strong&gt;iframe模式&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="49149dd4626f7752a92f0eeb094721e655d82977" translate="yes" xml:space="preserve">
          <source>It is also possible to use a full URL.</source>
          <target state="translated">也可以使用完整的URL。</target>
        </trans-unit>
        <trans-unit id="61f410da5c43770d9c0794c6bf09aba7de18e7b0" translate="yes" xml:space="preserve">
          <source>It is also possible to use a full URL. This is necessary for Hot Module Replacement.</source>
          <target state="translated">也可以使用完整的URL。这对于热模块替换是必要的。</target>
        </trans-unit>
        <trans-unit id="89c31b18a44f8037228f03491608b5ce6fef754e" translate="yes" xml:space="preserve">
          <source>It is also possible to use multiple glob patterns:</source>
          <target state="translated">也可以使用多个glob模式。</target>
        </trans-unit>
        <trans-unit id="0e18a1716a1b06b1c0a657661d1096e0f561c953" translate="yes" xml:space="preserve">
          <source>It is crucial to minimize your CSS for production. Please see the &lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;Minimizing for Production&lt;/a&gt; section.</source>
          <target state="translated">最小化生产CSS至关重要。请参阅&lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;最小化生产&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="75197ef50ff24e1b96488526a298c6ef5d07ad5f" translate="yes" xml:space="preserve">
          <source>It is crucial to minimize your CSS on production, please see &lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;Minimizing for Production&lt;/a&gt; section.</source>
          <target state="translated">最小化生产中的CSS至关重要，请参阅&lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;最小化生产&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="8240558ea1fe05205084e8382ec88e201389bbe2" translate="yes" xml:space="preserve">
          <source>It is disabled by default.</source>
          <target state="translated">默认情况下是禁用的。</target>
        </trans-unit>
        <trans-unit id="c66465961a258c81d6a1c10201918890fd220b95" translate="yes" xml:space="preserve">
          <source>It is imporant to mention that &lt;code&gt;import { calculateTax } from './tax';&lt;/code&gt; will also get pruned because &lt;code&gt;calculateTax()&lt;/code&gt; call was in the dead branch and got eliminated.</source>
          <target state="translated">重要的是要提到 &lt;code&gt;import { calculateTax } from './tax';&lt;/code&gt; 也将被修剪，因为 &lt;code&gt;calculateTax()&lt;/code&gt; 调用位于死分支中并被消除了。</target>
        </trans-unit>
        <trans-unit id="88c408158a5dc9ca72ed7becb6e7548cc1f24615" translate="yes" xml:space="preserve">
          <source>It is important to mention that &lt;code&gt;import { calculateTax } from './tax';&lt;/code&gt; will also get pruned because &lt;code&gt;calculateTax()&lt;/code&gt; call was in the dead branch and got eliminated.</source>
          <target state="translated">重要的是要提到 &lt;code&gt;import { calculateTax } from './tax';&lt;/code&gt; 也将被修剪，因为 &lt;code&gt;calculateTax()&lt;/code&gt; 调用位于死分支中并被消除了。</target>
        </trans-unit>
        <trans-unit id="be0b08ae67865e1431381201c7d4a153bc4d7df2" translate="yes" xml:space="preserve">
          <source>It is important to remember that when defining rules in your webpack config, you are defining them under &lt;code&gt;module.rules&lt;/code&gt; and not &lt;code&gt;rules&lt;/code&gt;. For your benefit, webpack will warn you if this is done incorrectly.</source>
          <target state="translated">重要的是要记住，在Webpack配置中定义规则时，您是在 &lt;code&gt;module.rules&lt;/code&gt; 而不是 &lt;code&gt;rules&lt;/code&gt; 下定义它们。为了您的利益，如果操作不正确，webpack会警告您。</target>
        </trans-unit>
        <trans-unit id="4da7cddd057ba923d00bc22bb7bd22ab1e62b496" translate="yes" xml:space="preserve">
          <source>It is inefficient to</source>
          <target state="translated">它的效率很低。</target>
        </trans-unit>
        <trans-unit id="0d2952cb6f1294217f30ecb360ff0072513cda17" translate="yes" xml:space="preserve">
          <source>It is not immediately apparent that the script depends on an external library.</source>
          <target state="translated">脚本依赖外部库的情况并不明显。</target>
        </trans-unit>
        <trans-unit id="030d81fd8e368ba5115a1993b8e4cf728175d536" translate="yes" xml:space="preserve">
          <source>It is not possible to use a fully dynamic import statement, such as &lt;code&gt;import(foo)&lt;/code&gt;. Because &lt;code&gt;foo&lt;/code&gt; could potentially be any path to any file in your system or project.</source>
          <target state="translated">不可能使用完全动态的import语句，例如 &lt;code&gt;import(foo)&lt;/code&gt; 。因为 &lt;code&gt;foo&lt;/code&gt; 可能是系统或项目中任何文件的任何路径。</target>
        </trans-unit>
        <trans-unit id="f70eac1f5d19e68ec0a0761368494da1212861ae" translate="yes" xml:space="preserve">
          <source>It is not recommended to use this syntax in application code. Inline request syntax is intended to only be used by loader generated code. Not following this recommendation will make your code webpack-specific and non-standard.</source>
          <target state="translated">不建议在应用程序代码中使用这种语法。内联请求语法只用于加载器生成的代码。不遵循这个建议会使你的代码成为webpack特有的和非标准的。</target>
        </trans-unit>
        <trans-unit id="c0087901908b55589a7f1f1be9c96d6d11f4c9b1" translate="yes" xml:space="preserve">
          <source>It is now reccomended to remove all inline loader syntax and use a resourceQuery condition to mimic the functionality of the inline syntax.</source>
          <target state="translated">现在建议去掉所有的内联加载器语法,使用资源Query条件来模仿内联语法的功能。</target>
        </trans-unit>
        <trans-unit id="e1e450f246081a7409cb7f26023dac95ca5be96b" translate="yes" xml:space="preserve">
          <source>It is possible to configure advanced options for serving static files from &lt;code&gt;contentBase&lt;/code&gt;. See the &lt;a href=&quot;http://expressjs.com/en/4x/api.html#express.static&quot;&gt;Express documentation&lt;/a&gt; for the possible options.</source>
          <target state="translated">可以配置用于从 &lt;code&gt;contentBase&lt;/code&gt; 提供静态文件的高级选项。有关可能的选项，请参阅&lt;a href=&quot;http://expressjs.com/en/4x/api.html#express.static&quot;&gt;Express文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aca5f77e9a1cd16ea41ed8f090bcf6b8c4d42026" translate="yes" xml:space="preserve">
          <source>It is possible to configure advanced options for serving static files from &lt;code&gt;contentBase&lt;/code&gt;. See the &lt;a href=&quot;http://expressjs.com/en/4x/api.html#express.static&quot;&gt;Express documentation&lt;/a&gt; for the possible options. An example:</source>
          <target state="translated">可以配置用于从 &lt;code&gt;contentBase&lt;/code&gt; 提供静态文件的高级选项。有关可能的选项，请参阅&lt;a href=&quot;http://expressjs.com/en/4x/api.html#express.static&quot;&gt;Express文档&lt;/a&gt;。一个例子：</target>
        </trans-unit>
        <trans-unit id="756621f80d1af298e895f35147a0a52fe33fae3f" translate="yes" xml:space="preserve">
          <source>It is possible to configure advanced options for serving static files from &lt;code&gt;contentBase&lt;/code&gt;. See the &lt;a href=&quot;https://expressjs.com/en/4x/api.html#express.static&quot;&gt;Express documentation&lt;/a&gt; for the possible options.</source>
          <target state="translated">可以配置用于从 &lt;code&gt;contentBase&lt;/code&gt; 提供静态文件的高级选项。有关可能的选项，请参阅&lt;a href=&quot;https://expressjs.com/en/4x/api.html#express.static&quot;&gt;Express文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb40bb70f7c51fb0e56edeb33d0e850ab41fc389" translate="yes" xml:space="preserve">
          <source>It is possible to create a folder structure by providing path prefixing the filename: &lt;code&gt;'js/vendor/bundle.js'&lt;/code&gt;.</source>
          <target state="translated">通过提供以文件名 &lt;code&gt;'js/vendor/bundle.js'&lt;/code&gt; 路径'js / vendor / bundle.js'，可以创建文件夹结构。</target>
        </trans-unit>
        <trans-unit id="fafa07ef9104c49d576d622a92bdb5bb66dc4633" translate="yes" xml:space="preserve">
          <source>It is possible to customize the printed output by passing different arguments to the &lt;code&gt;reportProgress&lt;/code&gt; function of &lt;a href=&quot;../plugins/progress-plugin&quot;&gt;&lt;code&gt;ProgressPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过将不同的参数传递给&lt;a href=&quot;../plugins/progress-plugin&quot;&gt; &lt;code&gt;ProgressPlugin&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;reportProgress&lt;/code&gt; 函数，可以自定义打印输出。</target>
        </trans-unit>
        <trans-unit id="92bc84a6fac84f51e24e4744224917428995fb42" translate="yes" xml:space="preserve">
          <source>It is possible to define variables with values that rely on files and will be re-evaluated when such files change in the file system. This means webpack will rebuild when such watched files change.</source>
          <target state="translated">可以定义一些依赖于文件的变量,当文件系统中的文件发生变化时,这些变量将被重新评估。这意味着当这些被监视的文件发生变化时,webpack将重建。</target>
        </trans-unit>
        <trans-unit id="4b826d7b48e39151f98854935267e105ac3e0721" translate="yes" xml:space="preserve">
          <source>It is possible to export multiple promises by wrapping them into &lt;code&gt;Promise.all([/* Your promises */]).&lt;/code&gt;</source>
          <target state="translated">可以通过将多个承诺包装到 &lt;code&gt;Promise.all([/* Your promises */]).&lt;/code&gt; 来导出多个承诺。</target>
        </trans-unit>
        <trans-unit id="759c4d144e113cfa72f5cf8c7d31afd7baad5a6b" translate="yes" xml:space="preserve">
          <source>It is possible to filter out placeholder replacement when you want to use one of the placeholders in the actual file name. For example, to output a file &lt;code&gt;[name].js&lt;/code&gt;, you have to escape the &lt;code&gt;[name]&lt;/code&gt; placeholder by adding backslashes between the brackets. So that &lt;code&gt;[\name\]&lt;/code&gt; generates &lt;code&gt;[name]&lt;/code&gt; instead of getting replaced with the &lt;code&gt;name&lt;/code&gt; of the asset.</source>
          <target state="translated">要在实际文件名中使用占位符之一时，可以过滤掉占位符替换。例如，要输出文件 &lt;code&gt;[name].js&lt;/code&gt; ，您必须通过在方括号之间添加反斜杠来转义 &lt;code&gt;[name]&lt;/code&gt; 占位符。这样 &lt;code&gt;[\name\]&lt;/code&gt; 生成 &lt;code&gt;[name]&lt;/code&gt; 而不是被资产 &lt;code&gt;name&lt;/code&gt; 替换。</target>
        </trans-unit>
        <trans-unit id="e6bb99fafda467a1690e234f22672742516bef53" translate="yes" xml:space="preserve">
          <source>It is possible to nest a container. Containers can use modules from other containers. Circular dependencies between container are also possible.</source>
          <target state="translated">可以嵌套一个容器。容器可以使用其他容器的模块。容器之间的循环依赖也是可能的。</target>
        </trans-unit>
        <trans-unit id="c05bb28e536a66e5c7bdce109eefc4281d7214fe" translate="yes" xml:space="preserve">
          <source>It is possible to nest a container. Containers can use modules from other containers. Circular dependencies between containers are also possible.</source>
          <target state="translated">可以嵌套一个容器。容器可以使用其他容器的模块。容器之间的循环依赖也是可能的。</target>
        </trans-unit>
        <trans-unit id="4d76b4863e4725d8bcb924f78b1b67c047c61f9c" translate="yes" xml:space="preserve">
          <source>It is possible to provide a &lt;a href=&quot;../api/module-methods#dynamic-expressions-in-import&quot;&gt;dynamic expression&lt;/a&gt; to &lt;code&gt;import()&lt;/code&gt; when you might need to import specific module based on a computed variable later.</source>
          <target state="translated">当您稍后可能需要基于计算变量导入特定模块时，可以为 &lt;code&gt;import()&lt;/code&gt; 提供&lt;a href=&quot;../api/module-methods#dynamic-expressions-in-import&quot;&gt;动态表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5987aaed5ad05860ad273030bae45af2ca253432" translate="yes" xml:space="preserve">
          <source>It is possible to provide different types of files when using an array of values for &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;entry&lt;/a&gt; to achieve separate bundles for CSS and JavaScript (and other) files in applications that are not using &lt;code&gt;import&lt;/code&gt; for styles in JavaScript (pre Single Page Applications or different reasons).</source>
          <target state="translated">在不使用JavaScript样式 &lt;code&gt;import&lt;/code&gt; 应用程序中，使用值数组&lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;输入条目&lt;/a&gt;以实现CSS和JavaScript（和其他）文件的单独捆绑包时，可以提供不同类型的文件（单页应用程序或其他原因） 。</target>
        </trans-unit>
        <trans-unit id="83b1128da663568b7f85651078c42fe47a55c169" translate="yes" xml:space="preserve">
          <source>It is possible to set any Node.js flags via &lt;code&gt;NODE_OPTIONS&lt;/code&gt;, for example, to configure &lt;code&gt;HTTP_MAX_HEADER_SIZE&lt;/code&gt;:</source>
          <target state="translated">可以通过 &lt;code&gt;NODE_OPTIONS&lt;/code&gt; 设置任何Node.js标志，例如，配置 &lt;code&gt;HTTP_MAX_HEADER_SIZE&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="da17da8dc8eceb8e01856d74ae04aad52b1d5e30" translate="yes" xml:space="preserve">
          <source>It is possible to shorten build times by removing &lt;code&gt;ProgressPlugin&lt;/code&gt; from webpack's configuration. Keep in mind, &lt;code&gt;ProgressPlugin&lt;/code&gt; might not provide as much value for fast builds as well, so make sure you are leveraging the benefits of using it.</source>
          <target state="translated">从webpack的配置中删除 &lt;code&gt;ProgressPlugin&lt;/code&gt; 可以缩短构建时间。请记住， &lt;code&gt;ProgressPlugin&lt;/code&gt; 可能也无法为快速构建提供太多价值，因此请确保您正在利用使用它的好处。</target>
        </trans-unit>
        <trans-unit id="cc4d86c6b81a5b60b7974fe06d071420b89bdd0e" translate="yes" xml:space="preserve">
          <source>It is possible to specify which information you want to see in the stats output.</source>
          <target state="translated">可以指定你想在统计输出中看到哪些信息。</target>
        </trans-unit>
        <trans-unit id="330d17a24d99a2df53a2fa6b4aeda3a243c159ca" translate="yes" xml:space="preserve">
          <source>It is possible to tell webpack that a function call is side-effect-free (pure) by using the &lt;code&gt;/*#__PURE__*/&lt;/code&gt; annotation. It can be put in front of function calls to mark them as side-effect-free. Arguments passed to the function are not being marked by the annotation and may need to be marked individually. When the initial value in a variable declaration of an unused variable is considered as side-effect-free (pure), it is getting marked as dead code, not executed and dropped by the minimizer. This behavior is enabled when &lt;a href=&quot;../configuration/optimization#optimizationinnergraph&quot;&gt;&lt;code&gt;optimization.innerGraph&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">通过使用 &lt;code&gt;/*#__PURE__*/&lt;/code&gt; 注释，可以告诉webpack函数调用是无副作用的（纯净的）。可以将其放在函数调用之前，以将其标记为无副作用。传递给函数的参数不会被注释标记，可能需要单独标记。当未使用变量的变量声明中的初始值被视为无副作用（纯净）时，它将被标记为无效代码，未被最小化器执行并丢弃。当&lt;a href=&quot;../configuration/optimization#optimizationinnergraph&quot;&gt; &lt;code&gt;optimization.innerGraph&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;true&lt;/code&gt; 时，将启用此行为。</target>
        </trans-unit>
        <trans-unit id="042e748e19c57ee8a466c6a121296afeb4470b5f" translate="yes" xml:space="preserve">
          <source>It is recommended that &lt;code&gt;devServer.publicPath&lt;/code&gt; is the same as &lt;a href=&quot;output#outputpublicpath&quot;&gt;&lt;code&gt;output.publicPath&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">建议 &lt;code&gt;devServer.publicPath&lt;/code&gt; 与&lt;a href=&quot;output#outputpublicpath&quot;&gt; &lt;code&gt;output.publicPath&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="8c2f5ad81d4f1e157defc5a74c453435792d4ba8" translate="yes" xml:space="preserve">
          <source>It is recommended that &lt;code&gt;devServer.publicPath&lt;/code&gt; is the same as &lt;code&gt;output.publicPath&lt;/code&gt;.</source>
          <target state="translated">建议 &lt;code&gt;devServer.publicPath&lt;/code&gt; 与 &lt;code&gt;output.publicPath&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="452355bce088b830005a3480b2ce1142352adde0" translate="yes" xml:space="preserve">
          <source>It is recommended to use an absolute path.</source>
          <target state="translated">建议使用绝对路径。</target>
        </trans-unit>
        <trans-unit id="d68d875f3f812e2cb481b5f67a1351746ce411c2" translate="yes" xml:space="preserve">
          <source>It isn't as flexible and can't be used to dynamically split code with the core application logic.</source>
          <target state="translated">它没有那么灵活,不能用于动态拆分代码与核心应用逻辑。</target>
        </trans-unit>
        <trans-unit id="b8ef699ef491a8351dba15dfcb60edf5e5dfa093" translate="yes" xml:space="preserve">
          <source>It likely does not say &lt;code&gt;&quot;./Button&quot;&lt;/code&gt;, but the error message will look similar. This issue is typically seen if you are upgrading from webpack beta.16 to webpack beta.17.</source>
          <target state="translated">它可能不会说 &lt;code&gt;&quot;./Button&quot;&lt;/code&gt; ，但是错误消息看起来很相似。如果从webpack beta.16升级到webpack beta.17，通常会出现此问题。</target>
        </trans-unit>
        <trans-unit id="b8bb7bde792b33a64922ec7f3039d47f72ccce87" translate="yes" xml:space="preserve">
          <source>It might be useful to define your own function to control the behavior of what you want to externalize from webpack. &lt;a href=&quot;https://www.npmjs.com/package/webpack-node-externals&quot;&gt;webpack-node-externals&lt;/a&gt;, for example, excludes all modules from the &lt;code&gt;node_modules&lt;/code&gt; directory and provides options to whitelist packages.</source>
          <target state="translated">定义自己的功能来控制要从Webpack外部化的行为的行为可能会很有用。例如，&lt;a href=&quot;https://www.npmjs.com/package/webpack-node-externals&quot;&gt;webpack-node-externals&lt;/a&gt;从 &lt;code&gt;node_modules&lt;/code&gt; 目录中排除所有模块，并提供将软件包列入白名单的选项。</target>
        </trans-unit>
        <trans-unit id="3015015faa2c4b220f1009b41ef17141d3ae9eb4" translate="yes" xml:space="preserve">
          <source>It might be useful to define your own function to control the behavior of what you want to externalize from webpack. &lt;a href=&quot;https://www.npmjs.com/package/webpack-node-externals&quot;&gt;webpack-node-externals&lt;/a&gt;, for example, excludes all modules from the &lt;code&gt;node_modules&lt;/code&gt; directory and provides some options to, for example, whitelist packages.</source>
          <target state="translated">定义自己的功能来控制要从Webpack外部化的行为的行为可能会很有用。例如，&lt;a href=&quot;https://www.npmjs.com/package/webpack-node-externals&quot;&gt;webpack-node-externals&lt;/a&gt;从 &lt;code&gt;node_modules&lt;/code&gt; 目录中排除了所有模块，并提供了一些选项，例如，白名单软件包。</target>
        </trans-unit>
        <trans-unit id="4fb2a21242d1d0a81b89d79e88c46ad124f1bdad" translate="yes" xml:space="preserve">
          <source>It moves all the required &lt;code&gt;*.css&lt;/code&gt; modules in entry chunks into a separate CSS file. So your styles are no longer inlined into the JS bundle, but in a separate CSS file (&lt;code&gt;styles.css&lt;/code&gt;). If your total stylesheet volume is big, it will be faster because the CSS bundle is loaded in parallel to the JS bundle.</source>
          <target state="translated">它将条目块中所有必需的 &lt;code&gt;*.css&lt;/code&gt; 模块移动到单独的CSS文件中。因此，您的样式不再内联到JS包中，而是在一个单独的CSS文件（ &lt;code&gt;styles.css&lt;/code&gt; ）中。如果您的样式表总量很大，则会更快，因为CSS包与JS包并行加载。</target>
        </trans-unit>
        <trans-unit id="3f5a5d20ccf6738c768fb105c543d692e2ac1e59" translate="yes" xml:space="preserve">
          <source>It must have a &lt;code&gt;loader&lt;/code&gt; property being a string. It is resolved relative to the configuration &lt;a href=&quot;entry-context#context&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; with the loader resolving options (&lt;a href=&quot;resolve#resolveloader&quot;&gt;resolveLoader&lt;/a&gt;).</source>
          <target state="translated">它必须具有作为字符串的 &lt;code&gt;loader&lt;/code&gt; 属性。使用加载程序解析选项（&lt;a href=&quot;resolve#resolveloader&quot;&gt;resolveLoader&lt;/a&gt;）相对于配置&lt;a href=&quot;entry-context#context&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;进行解析。</target>
        </trans-unit>
        <trans-unit id="a42e5a185a3c220796ba0e5aa8acad8d21c3878d" translate="yes" xml:space="preserve">
          <source>It provides access to the hash of the compilation.</source>
          <target state="translated">它提供了对汇编的哈希值的访问。</target>
        </trans-unit>
        <trans-unit id="a9d4986150e770e593c55c12460fe30c9199b023" translate="yes" xml:space="preserve">
          <source>It quickly becomes a hassle to manually run &lt;code&gt;npm run build&lt;/code&gt; every time you want to compile your code.</source>
          <target state="translated">每当您要编译代码时，手动运行 &lt;code&gt;npm run build&lt;/code&gt; 很快就变得很麻烦。</target>
        </trans-unit>
        <trans-unit id="399cc8631484912dab1e7d1944933674cf45914f" translate="yes" xml:space="preserve">
          <source>It should be possible to expose and use any module type that webpack supports.</source>
          <target state="translated">它应该可以暴露和使用任何webpack支持的模块类型。</target>
        </trans-unit>
        <trans-unit id="6ed050a376f8ab04112220eab818b80e08e0584f" translate="yes" xml:space="preserve">
          <source>It still exposes filenames and structure for decompiling, but it doesn't expose the original code.</source>
          <target state="translated">它仍然暴露了反编译的文件名和结构,但它没有暴露原始代码。</target>
        </trans-unit>
        <trans-unit id="43221fc2c0c75bee1a5d58c386dd89120b0e941b" translate="yes" xml:space="preserve">
          <source>It sucks to</source>
          <target state="translated">糟糕的是</target>
        </trans-unit>
        <trans-unit id="05be56159343ef1f65c690e3c92a1b54bd2eca88" translate="yes" xml:space="preserve">
          <source>It supports &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings&quot;&gt;Node.js Buffers and Character Encodings&lt;/a&gt; which are &lt;code&gt;[&quot;utf8&quot;,&quot;utf16le&quot;,&quot;latin1&quot;,&quot;base64&quot;,&quot;hex&quot;,&quot;ascii&quot;,&quot;binary&quot;,&quot;ucs2&quot;]&lt;/code&gt;.</source>
          <target state="translated">它支持&lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings&quot;&gt;Node.js缓冲区和字符编码&lt;/a&gt;，它们是 &lt;code&gt;[&quot;utf8&quot;,&quot;utf16le&quot;,&quot;latin1&quot;,&quot;base64&quot;,&quot;hex&quot;,&quot;ascii&quot;,&quot;binary&quot;,&quot;ucs2&quot;]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c8eff4efb7928a5f9bf98807dbc792f1abcc092" translate="yes" xml:space="preserve">
          <source>It will expose &lt;strong&gt;only&lt;/strong&gt;&lt;code&gt;map&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;find&lt;/code&gt; (under &lt;code&gt;myNameForFind&lt;/code&gt; name) methods to the global object.</source>
          <target state="translated">它将&lt;strong&gt;仅&lt;/strong&gt;向全局对象公开 &lt;code&gt;map&lt;/code&gt; ， &lt;code&gt;filter&lt;/code&gt; 和 &lt;code&gt;find&lt;/code&gt; 方法（在 &lt;code&gt;myNameForFind&lt;/code&gt; 名称下）。</target>
        </trans-unit>
        <trans-unit id="e2673009ce780bedf4f009dec8b37af8495aebb7" translate="yes" xml:space="preserve">
          <source>It will now only compile the bundle when &lt;code&gt;/bundle.js&lt;/code&gt; is requested.</source>
          <target state="translated">现在，仅在请求 &lt;code&gt;/bundle.js&lt;/code&gt; 时才编译捆绑软件。</target>
        </trans-unit>
        <trans-unit id="8339f6ab42721521f784062dcff0ba04444367de" translate="yes" xml:space="preserve">
          <source>It will output the version of &lt;code&gt;webpack-dev-server&lt;/code&gt; as well if you have it installed:</source>
          <target state="translated">如果已安装，它将输出 &lt;code&gt;webpack-dev-server&lt;/code&gt; 的版本：</target>
        </trans-unit>
        <trans-unit id="770e4336f1001b56c9f2fbd995023e0bfa70d8f8" translate="yes" xml:space="preserve">
          <source>It will then display timeline stats and calls per plugin!</source>
          <target state="translated">然后会显示每个插件的时间轴统计和调用情况!</target>
        </trans-unit>
        <trans-unit id="136331992793c5382781910c0a30f4daa21cb5ef" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s not allowed to watch or run again before the existing watcher has been closed or invalidated.</source>
          <target state="translated">在关闭或使现有观察器无效之前，不允许观看或再次运行。</target>
        </trans-unit>
        <trans-unit id="317422c9b2c5f61e9ec06f82de8012a187d5d146" translate="yes" xml:space="preserve">
          <source>It's allowed to configure those options in &lt;a href=&quot;module#ruleparser&quot;&gt;&lt;code&gt;Rule.parser&lt;/code&gt;&lt;/a&gt; as well to target specific modules.</source>
          <target state="translated">允许在&lt;a href=&quot;module#ruleparser&quot;&gt; &lt;code&gt;Rule.parser&lt;/code&gt; 中&lt;/a&gt;配置这些选项，并以特定模块为目标。</target>
        </trans-unit>
        <trans-unit id="ff08921b0231db2c37fe597349ee2c2ce9f1514c" translate="yes" xml:space="preserve">
          <source>It's also good practice to extract third-party libraries, such as &lt;code&gt;lodash&lt;/code&gt; or &lt;code&gt;react&lt;/code&gt;, to a separate &lt;code&gt;vendor&lt;/code&gt; chunk as they are less likely to change than our local source code. This step will allow clients to request even less from the server to stay up to date. This can be done by using the &lt;a href=&quot;../plugins/split-chunks-plugin#splitchunks-cachegroups&quot;&gt;&lt;code&gt;cacheGroups&lt;/code&gt;&lt;/a&gt; option of the &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;&lt;code&gt;SplitChunksPlugin&lt;/code&gt;&lt;/a&gt; demonstrated in &lt;a href=&quot;../plugins/split-chunks-plugin#split-chunks-example-2&quot;&gt;Example 2 of SplitChunksPlugin&lt;/a&gt;. Lets add &lt;code&gt;optimization.splitChunks&lt;/code&gt; with &lt;code&gt;cacheGroups&lt;/code&gt; with next params and build:</source>
          <target state="translated">将第三方库（例如 &lt;code&gt;lodash&lt;/code&gt; 或 &lt;code&gt;react&lt;/code&gt; )提取到单独的 &lt;code&gt;vendor&lt;/code&gt; 块中也是一个好习惯，因为与我们的本地源代码相比，第三方供应商块的更改可能性较小。此步骤将允许客户端向服务器请求更少的请求以保持最新。这可以通过使用&lt;a href=&quot;../plugins/split-chunks-plugin#splitchunks-cachegroups&quot;&gt; &lt;code&gt;cacheGroups&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../plugins/split-chunks-plugin#split-chunks-example-2&quot;&gt;示例2中&lt;/a&gt;演示的&lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt; &lt;code&gt;SplitChunksPlugin&lt;/code&gt; &lt;/a&gt;的cacheGroups选项来完成。让我们使用带有下一个参数的 &lt;code&gt;cacheGroups&lt;/code&gt; 添加 &lt;code&gt;optimization.splitChunks&lt;/code&gt; 并构建：</target>
        </trans-unit>
        <trans-unit id="a26b57905c923ec029a933c9a4dccea9efc6f1e8" translate="yes" xml:space="preserve">
          <source>It's also good practice to extract third-party libraries, such as &lt;code&gt;lodash&lt;/code&gt; or &lt;code&gt;react&lt;/code&gt;, to a separate &lt;code&gt;vendor&lt;/code&gt; chunk as they are less likely to change than our local source code. This step will allow clients to request even less from the server to stay up to date. This can be done by using the &lt;a href=&quot;../plugins/split-chunks-plugin#splitchunkscachegroups&quot;&gt;&lt;code&gt;cacheGroups&lt;/code&gt;&lt;/a&gt; option of the &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;&lt;code&gt;SplitChunksPlugin&lt;/code&gt;&lt;/a&gt; demonstrated in &lt;a href=&quot;../plugins/split-chunks-plugin#split-chunks-example-2&quot;&gt;Example 2 of SplitChunksPlugin&lt;/a&gt;. Lets add &lt;code&gt;optimization.splitChunks&lt;/code&gt; with &lt;code&gt;cacheGroups&lt;/code&gt; with next params and build:</source>
          <target state="translated">将第三方库（例如 &lt;code&gt;lodash&lt;/code&gt; 或 &lt;code&gt;react&lt;/code&gt; )提取到单独的 &lt;code&gt;vendor&lt;/code&gt; 块中也是一个好习惯，因为与我们的本地源代码相比，第三方供应商块的更改可能性较小。此步骤将允许客户端向服务器请求更少的请求以保持最新。这可以通过使用&lt;a href=&quot;../plugins/split-chunks-plugin#splitchunkscachegroups&quot;&gt; &lt;code&gt;cacheGroups&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../plugins/split-chunks-plugin#split-chunks-example-2&quot;&gt;示例2中&lt;/a&gt;演示的&lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt; &lt;code&gt;SplitChunksPlugin&lt;/code&gt; &lt;/a&gt;的cacheGroups选项来完成。让我们使用带有下一个参数的 &lt;code&gt;cacheGroups&lt;/code&gt; 添加 &lt;code&gt;optimization.splitChunks&lt;/code&gt; 并构建：</target>
        </trans-unit>
        <trans-unit id="7b4360bf3a9e3a00e9323acec6366a5bd7b9adb0" translate="yes" xml:space="preserve">
          <source>It's also possible to add a URL &lt;code&gt;&amp;lt;link href=&quot;path/to/file.css&quot; rel=&quot;stylesheet&quot;&amp;gt;&lt;/code&gt; instead of inlining the CSS &lt;code&gt;{String}&lt;/code&gt; with &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">也可以添加URL &lt;code&gt;&amp;lt;link href=&quot;path/to/file.css&quot; rel=&quot;stylesheet&quot;&amp;gt;&lt;/code&gt; 而不是使用 &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; 标签将CSS &lt;code&gt;{String}&lt;/code&gt; 内联。</target>
        </trans-unit>
        <trans-unit id="3e5580d3a9962d2bf6a4bac5c86320e9ab2c4096" translate="yes" xml:space="preserve">
          <source>It's important to only prepend it with &lt;code&gt;~&lt;/code&gt;, because &lt;code&gt;~/&lt;/code&gt; resolves to the home directory. Webpack needs to distinguish between &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;~bootstrap&lt;/code&gt; because CSS and Sass files have no special syntax for importing relative files. Writing &lt;code&gt;@import &quot;style.scss&quot;&lt;/code&gt; is the same as &lt;code&gt;@import &quot;./style.scss&quot;;&lt;/code&gt;</source>
          <target state="translated">仅在 &lt;code&gt;~&lt;/code&gt; 前面加上它很重要，因为 &lt;code&gt;~/&lt;/code&gt; 解析到主目录。需要的WebPack区分 &lt;code&gt;bootstrap&lt;/code&gt; 和 &lt;code&gt;~bootstrap&lt;/code&gt; ，因为CSS和萨斯文件的导入相对文件没有特殊的语法。编写 &lt;code&gt;@import &quot;style.scss&quot;&lt;/code&gt; 与 &lt;code&gt;@import &quot;./style.scss&quot;;&lt;/code&gt; 相同；</target>
        </trans-unit>
        <trans-unit id="117a69d417526aee9a6fa34094b81f363a012c0a" translate="yes" xml:space="preserve">
          <source>It's important to only prepend it with &lt;code&gt;~&lt;/code&gt;, because &lt;code&gt;~/&lt;/code&gt; resolves to the home directory. webpack needs to distinguish between &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;~bootstrap&lt;/code&gt; because CSS and Sass files have no special syntax for importing relative files. Writing &lt;code&gt;@import &quot;file&quot;&lt;/code&gt; is the same as &lt;code&gt;@import &quot;./file&quot;;&lt;/code&gt;</source>
          <target state="translated">仅在 &lt;code&gt;~&lt;/code&gt; 前面加上它很重要，因为 &lt;code&gt;~/&lt;/code&gt; 解析到主目录。的WebPack需要区分 &lt;code&gt;bootstrap&lt;/code&gt; 和 &lt;code&gt;~bootstrap&lt;/code&gt; ，因为CSS和萨斯文件的导入相对文件没有特殊的语法。编写 &lt;code&gt;@import &quot;file&quot;&lt;/code&gt; 与 &lt;code&gt;@import &quot;./file&quot;;&lt;/code&gt; 相同；</target>
        </trans-unit>
        <trans-unit id="5116af0e59c6155a39d0a2e75b2066537de99be9" translate="yes" xml:space="preserve">
          <source>It's important to only prepend it with &lt;code&gt;~&lt;/code&gt;, because &lt;code&gt;~/&lt;/code&gt; resolves to the home-directory. Webpack needs to distinguish between &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;~bootstrap&lt;/code&gt;, because CSS and Styl files have no special syntax for importing relative files. Writing &lt;code&gt;@import &quot;file&quot;&lt;/code&gt; is the same as &lt;code&gt;@import &quot;./file&quot;;&lt;/code&gt;</source>
          <target state="translated">仅在 &lt;code&gt;~&lt;/code&gt; 前面加上它很重要，因为 &lt;code&gt;~/&lt;/code&gt; 解析到主目录。的WebPack需要区分 &lt;code&gt;bootstrap&lt;/code&gt; 和 &lt;code&gt;~bootstrap&lt;/code&gt; ，因为CSS和STYL文件的导入相对文件没有特殊的语法。编写 &lt;code&gt;@import &quot;file&quot;&lt;/code&gt; 与 &lt;code&gt;@import &quot;./file&quot;;&lt;/code&gt; 相同；</target>
        </trans-unit>
        <trans-unit id="c3f240443ca6a35b3157d5d3750520604dee1dc7" translate="yes" xml:space="preserve">
          <source>It's important to only prepend it with &lt;code&gt;~&lt;/code&gt;, because &lt;code&gt;~/&lt;/code&gt; resolves to the home-directory. webpack needs to distinguish between &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;~bootstrap&lt;/code&gt;, because CSS and Less files have no special syntax for importing relative files. Writing &lt;code&gt;@import &quot;file&quot;&lt;/code&gt; is the same as &lt;code&gt;@import &quot;./file&quot;;&lt;/code&gt;</source>
          <target state="translated">仅在 &lt;code&gt;~&lt;/code&gt; 前面加上它很重要，因为 &lt;code&gt;~/&lt;/code&gt; 解析到主目录。的WebPack需要区分 &lt;code&gt;bootstrap&lt;/code&gt; 和 &lt;code&gt;~bootstrap&lt;/code&gt; ，因为CSS以及减档都导入相对文件没有特殊的语法。编写 &lt;code&gt;@import &quot;file&quot;&lt;/code&gt; 与 &lt;code&gt;@import &quot;./file&quot;;&lt;/code&gt; 相同；</target>
        </trans-unit>
        <trans-unit id="2c5bf6ede759f0a6cfd021a05989cc19a9c5dac9" translate="yes" xml:space="preserve">
          <source>It's possible to configure all generators' options in one place with a &lt;code&gt;module.generator&lt;/code&gt;.</source>
          <target state="translated">可以使用 &lt;code&gt;module.generator&lt;/code&gt; 在一处配置所有生成器的选项。</target>
        </trans-unit>
        <trans-unit id="7ff2c2175f2676ab2a711dea24d26069b2c464e9" translate="yes" xml:space="preserve">
          <source>It's possible to enable magic comments for &lt;code&gt;require&lt;/code&gt; as well, see &lt;a href=&quot;../configuration/module#moduleparserjavascriptcommonjsmagiccomments&quot;&gt;&lt;code&gt;module.parser.javascript.commonjsMagicComments&lt;/code&gt;&lt;/a&gt; for more.</source>
          <target state="translated">也可以为 &lt;code&gt;require&lt;/code&gt; 启用魔术注释，有关更多信息，请参见&lt;a href=&quot;../configuration/module#moduleparserjavascriptcommonjsmagiccomments&quot;&gt; &lt;code&gt;module.parser.javascript.commonjsMagicComments&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23999324e51bc2bd78ddff333ac24395b164de36" translate="yes" xml:space="preserve">
          <source>It's possible to import any &lt;code&gt;toml&lt;/code&gt;, &lt;code&gt;yaml&lt;/code&gt; or &lt;code&gt;json5&lt;/code&gt; files as a JSON module by using a &lt;a href=&quot;../configuration/module#ruleparserparse&quot;&gt;custom parser&lt;/a&gt; instead of a specific webpack loader.</source>
          <target state="translated">通过使用&lt;a href=&quot;../configuration/module#ruleparserparse&quot;&gt;自定义解析器&lt;/a&gt;而不是特定的webpack加载器，可以将任何 &lt;code&gt;toml&lt;/code&gt; ， &lt;code&gt;yaml&lt;/code&gt; 或 &lt;code&gt;json5&lt;/code&gt; 文件作为JSON模块导入。</target>
        </trans-unit>
        <trans-unit id="3af902d8e6f67e03f698bf291d2e2d5d5ecac826" translate="yes" xml:space="preserve">
          <source>It's possible to override any loaders in the configuration by prefixing the entire rule with &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">通过在整个规则前面加上 &lt;code&gt;!&lt;/code&gt; ,可以覆盖配置中的所有加载程序。。</target>
        </trans-unit>
        <trans-unit id="f926f831f984210a9088c7359fbb89bab919f68c" translate="yes" xml:space="preserve">
          <source>It's possible to override any loaders, preLoaders and postLoaders from the &lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;configuration&lt;/a&gt; by prefixing the inline &lt;code&gt;import&lt;/code&gt; statement:</source>
          <target state="translated">它可以覆盖从任何装载机，预加载和postLoaders&lt;a href=&quot;https://webpack.js.org/configuration&quot;&gt;配置&lt;/a&gt;由前缀直列 &lt;code&gt;import&lt;/code&gt; 语句：</target>
        </trans-unit>
        <trans-unit id="a7d59a9049b97ef16cb11a8e26f31d4497ce80a1" translate="yes" xml:space="preserve">
          <source>It's possible to specify loaders in an &lt;code&gt;import&lt;/code&gt; statement, or any &lt;a href=&quot;../api/module-methods&quot;&gt;equivalent &quot;importing&quot; method&lt;/a&gt;. Separate loaders from the resource with &lt;code&gt;!&lt;/code&gt;. Each part is resolved relative to the current directory.</source>
          <target state="translated">可以在 &lt;code&gt;import&lt;/code&gt; 语句或任何&lt;a href=&quot;../api/module-methods&quot;&gt;等效的&amp;ldquo; importing&amp;rdquo;方法中&lt;/a&gt;指定加载程序。使用 &lt;code&gt;!&lt;/code&gt; 将加载器与资源分开 。相对于当前目录解析每个部分。</target>
        </trans-unit>
        <trans-unit id="58894037868a192a45659b079b800aa3dcb49518" translate="yes" xml:space="preserve">
          <source>It's recommended to combine &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; with the &lt;a href=&quot;../loaders/css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">建议将 &lt;code&gt;mini-css-extract-plugin&lt;/code&gt; 与&lt;a href=&quot;../loaders/css-loader&quot;&gt; &lt;code&gt;css-loader&lt;/code&gt; 结合使用&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff305bfecde39d42cab1a12ec4740bb342f18fca" translate="yes" xml:space="preserve">
          <source>It's recommended to combine &lt;code&gt;style-loader&lt;/code&gt; with the &lt;a href=&quot;css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">建议将 &lt;code&gt;style-loader&lt;/code&gt; 和&lt;a href=&quot;css-loader&quot;&gt; &lt;code&gt;css-loader&lt;/code&gt; 结合使用&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40a78ee63600453645a13ff72996518210d7bd0d" translate="yes" xml:space="preserve">
          <source>It's recommended to set &lt;code&gt;cache.buildDependencies.config: [__filename]&lt;/code&gt; in your webpack configuration to get the latest configuration and all dependencies.</source>
          <target state="translated">建议在Webpack配置中设置 &lt;code&gt;cache.buildDependencies.config: [__filename]&lt;/code&gt; 以获得最新配置和所有依赖关系。</target>
        </trans-unit>
        <trans-unit id="6a059505f0224399159c1602c173a9404486d600" translate="yes" xml:space="preserve">
          <source>It's similar to &lt;code&gt;/*#__PURE__*/&lt;/code&gt; but on a module level instead of a statement level. It says (&lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; property): &quot;If no direct export from a module flagged with no-sideEffects is used, the bundler can skip evaluating the module for side effects.&quot;.</source>
          <target state="translated">它类似于 &lt;code&gt;/*#__PURE__*/&lt;/code&gt; 但在模块级别而不是语句级别。它说（ &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; 属性）：&amp;ldquo;如果未使用标记为no-sideEffects的模块的直接导出，则捆绑程序可以跳过评估模块的副作用。&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1a9a4774f419df1180567a92515e816dddc16265" translate="yes" xml:space="preserve">
          <source>JS &lt;code&gt;Worklet.addModule&lt;/code&gt;</source>
          <target state="translated">JS &lt;code&gt;Worklet.addModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b94ab4e96912f993f5e47a467394b036a0851aa5" translate="yes" xml:space="preserve">
          <source>JS &lt;code&gt;import()&lt;/code&gt; expression</source>
          <target state="translated">JS &lt;code&gt;import()&lt;/code&gt; 表达式</target>
        </trans-unit>
        <trans-unit id="fc76131f6afb4218e65ce8e90372015320e07a24" translate="yes" xml:space="preserve">
          <source>JS &lt;code&gt;new Worker(..., { type: &quot;module&quot; })&lt;/code&gt;</source>
          <target state="translated">JS &lt;code&gt;new Worker(..., { type: &quot;module&quot; })&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="11e17b7ff5f01ffd4052941a6483e91b162c8636" translate="yes" xml:space="preserve">
          <source>JavaScript Module Systems Showdown</source>
          <target state="translated">JavaScript模块系统大比拼</target>
        </trans-unit>
        <trans-unit id="85162377231843ac49e1b78695d75bd80a88f1b8" translate="yes" xml:space="preserve">
          <source>JavaScript is taking over the world as a language, as a platform and as a way to rapidly develop and create fast applications.</source>
          <target state="translated">JavaScript作为一种语言,作为一种平台,作为一种快速开发和创建快速应用的方式,正在风靡全球。</target>
        </trans-unit>
        <trans-unit id="45d40dd7e7ccb174eb90d4b317bc6c7770e5372c" translate="yes" xml:space="preserve">
          <source>JavascriptParser Hooks</source>
          <target state="translated">JavascriptParser Hooks</target>
        </trans-unit>
        <trans-unit id="6890a4a97912975ce4ac978939b9e294c3007a94" translate="yes" xml:space="preserve">
          <source>JsonMinimizerWebpackPlugin</source>
          <target state="translated">JsonMinimizerWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="1eb4e01cfa28dde84451ecf461596f5422495ed6" translate="yes" xml:space="preserve">
          <source>JsonpTemplatePlugin</source>
          <target state="translated">JsonpTemplatePlugin</target>
        </trans-unit>
        <trans-unit id="7c4991d6dc8748cd02cde6a9bcf3612734e22440" translate="yes" xml:space="preserve">
          <source>Just &lt;code&gt;require('webpack-stream')&lt;/code&gt; instead of &lt;code&gt;webpack&lt;/code&gt; and optionally pass it an configuration:</source>
          <target state="translated">只是 &lt;code&gt;require('webpack-stream')&lt;/code&gt; 而不是 &lt;code&gt;webpack&lt;/code&gt; ,并且可以选择将其传递给配置：</target>
        </trans-unit>
        <trans-unit id="32e9b7a49d390dbfb9c27e74c5593acbe8bef69d" translate="yes" xml:space="preserve">
          <source>Just add the following plugin when building for production:</source>
          <target state="translated">在制作时加入以下插件即可。</target>
        </trans-unit>
        <trans-unit id="fb62942b2d428d6b89b4e88297101a5a93b34397" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;https://github.com/NMFR/optimize-css-assets-webpack-plugin&quot;&gt;optimize-css-assets-webpack-plugin&lt;/a&gt; but more accurate with source maps and assets using query string, allows to cache and works in parallel mode.</source>
          <target state="translated">就像&lt;a href=&quot;https://github.com/NMFR/optimize-css-assets-webpack-plugin&quot;&gt;optimize-css-assets-webpack-plugin一样，&lt;/a&gt;但是使用查询字符串对源映射和资产更准确时，它可以缓存并在并行模式下工作。</target>
        </trans-unit>
        <trans-unit id="6ab0e0bd9561b09a12e44b9c5eaecf3e3f35bea0" translate="yes" xml:space="preserve">
          <source>Just provide the &lt;code&gt;mode&lt;/code&gt; option in the config:</source>
          <target state="translated">只需在配置中提供 &lt;code&gt;mode&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="835db6cf74c39f78cc6a89ccd0b07490be2e3f7d" translate="yes" xml:space="preserve">
          <source>Karma</source>
          <target state="translated">Karma</target>
        </trans-unit>
        <trans-unit id="d2b4618b6c686fe6f80c10a27208644197461fcf" translate="yes" xml:space="preserve">
          <source>Keep chunk size above the specified limit</source>
          <target state="translated">保持分块大小高于指定的限制</target>
        </trans-unit>
        <trans-unit id="abaefcddeaf558e60fd417d4d1f9f81856efe680" translate="yes" xml:space="preserve">
          <source>Keep chunk size above the specified limit by merging chunks that are smaller than the &lt;code&gt;minChunkSize&lt;/code&gt;.</source>
          <target state="translated">通过合并小于 &lt;code&gt;minChunkSize&lt;/code&gt; 的块，使块大小保持在指定限制之上。</target>
        </trans-unit>
        <trans-unit id="5464a45eec4ca360d66dce353930da2ad203b034" translate="yes" xml:space="preserve">
          <source>Keep in mind that this plugin will only be applied to &lt;a href=&quot;../api/module-methods#es6-recommended&quot;&gt;ES6 modules&lt;/a&gt; processed directly by webpack. When using a transpiler, you'll need to disable module processing (e.g. the &lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-env#modules&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt; option in Babel).</source>
          <target state="translated">请记住，此插件仅适用于由webpack直接处理的&lt;a href=&quot;../api/module-methods#es6-recommended&quot;&gt;ES6模块&lt;/a&gt;。使用编译器时，您需要禁用模块处理（例如Babel中的&lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-env#modules&quot;&gt; &lt;code&gt;modules&lt;/code&gt; &lt;/a&gt;选项）。</target>
        </trans-unit>
        <trans-unit id="cdcacb5f8128ae6f265323b548336596dd384637" translate="yes" xml:space="preserve">
          <source>Keep in mind that this plugin will only be applied to &lt;a href=&quot;../api/module-methods#es6-recommended-&quot;&gt;ES6 modules&lt;/a&gt; processed directly by webpack. When using a transpiler, you'll need to disable module processing (e.g. the &lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2015/#optionsmodules&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt; option in Babel).</source>
          <target state="translated">请记住，此插件仅适用于由webpack直接处理的&lt;a href=&quot;../api/module-methods#es6-recommended-&quot;&gt;ES6模块&lt;/a&gt;。使用编译器时，您需要禁用模块处理（例如Babel中的&lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2015/#optionsmodules&quot;&gt; &lt;code&gt;modules&lt;/code&gt; &lt;/a&gt;选项）。</target>
        </trans-unit>
        <trans-unit id="48f220ce746ea5291e9ddcb97cc436b3079085d3" translate="yes" xml:space="preserve">
          <source>Keep in mind that when using regex to match files, you may not quote it. i.e &lt;code&gt;/\.txt$/&lt;/code&gt; is not the same as &lt;code&gt;'/\.txt$/'&lt;/code&gt; or &lt;code&gt;&quot;/\.txt$/&quot;&lt;/code&gt;. The former instructs webpack to match any file that ends with .txt and the latter instructs webpack to match a single file with an absolute path '.txt'; this is likely not your intention.</source>
          <target state="translated">请记住，使用正则表达式匹配文件时，您可能不会引用它。即 &lt;code&gt;/\.txt$/&lt;/code&gt; 与 &lt;code&gt;'/\.txt$/'&lt;/code&gt; 或 &lt;code&gt;&quot;/\.txt$/&quot;&lt;/code&gt; 。前者指示webpack匹配以.txt结尾的任何文件，后者指示webpack匹配具有绝对路径&amp;ldquo; .txt&amp;rdquo;的单个文件；这可能不是您的意图。</target>
        </trans-unit>
        <trans-unit id="d51974544eb4ab247473e19dcba638b1adc81587" translate="yes" xml:space="preserve">
          <source>Keep original name. Good for readablility and debugging.</source>
          <target state="translated">保留原名。有利于可读性和调试。</target>
        </trans-unit>
        <trans-unit id="91cba252bffcda2cb733471f2bbdd20e8f0e1caa" translate="yes" xml:space="preserve">
          <source>Keep the &lt;code&gt;name&lt;/code&gt; consistent with &lt;a href=&quot;../configuration/output#output-library&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">保持 &lt;code&gt;name&lt;/code&gt; 与&lt;a href=&quot;../configuration/output#output-library&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt;一致。</target>
        </trans-unit>
        <trans-unit id="50933af9612059732c2c4af2e94595c3b822652f" translate="yes" xml:space="preserve">
          <source>Keep the &lt;code&gt;name&lt;/code&gt; consistent with &lt;a href=&quot;../configuration/output#outputlibrary&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">保持 &lt;code&gt;name&lt;/code&gt; 与&lt;a href=&quot;../configuration/output#outputlibrary&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt;一致。</target>
        </trans-unit>
        <trans-unit id="76d491fc70cf27c77d7364563124778bc3683fad" translate="yes" xml:space="preserve">
          <source>Keeping chunk size above the specified limit is no longer a feature of this plugin. Use &lt;a href=&quot;min-chunk-size-plugin&quot;&gt;MinChunkSizePlugin&lt;/a&gt; instead.</source>
          <target state="translated">保持块大小超过指定的限制不再是此插件的功能。请改用&lt;a href=&quot;min-chunk-size-plugin&quot;&gt;MinChunkSizePlugin&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b5cea3a792247933da57dffc4123ff9f58e0c509" translate="yes" xml:space="preserve">
          <source>Keeping chunk size above the specified limit is no longer a feature of this plugin. Use [MinChunkSizePlugin)[/plugins/min-chunk-size-plugin] instead.</source>
          <target state="translated">保持分块大小超过指定限制不再是这个插件的功能。使用[MinChunkSizePlugin)[/plugins/min-chunk-size-plugin]代替。</target>
        </trans-unit>
        <trans-unit id="0398ccd0f49298b10a3d76a47800d2ebecd49859" translate="yes" xml:space="preserve">
          <source>LICENSE</source>
          <target state="translated">LICENSE</target>
        </trans-unit>
        <trans-unit id="14f06ba0b5725a831c619733de5b3d4a0c598682" translate="yes" xml:space="preserve">
          <source>Labeled Modules</source>
          <target state="translated">标签模块</target>
        </trans-unit>
        <trans-unit id="6853fbdad8b108d6fe7a268a59f82fa611432f32" translate="yes" xml:space="preserve">
          <source>LabeledModulesPlugin</source>
          <target state="translated">LabeledModulesPlugin</target>
        </trans-unit>
        <trans-unit id="db07be184479f34078cd4fc76d248dc0975720e9" translate="yes" xml:space="preserve">
          <source>Languages</source>
          <target state="translated">Languages</target>
        </trans-unit>
        <trans-unit id="4b70141f0b8b8a8b06d37547500ca501f1fc5aba" translate="yes" xml:space="preserve">
          <source>Lastly, there are some modules that support multiple &lt;a href=&quot;../concepts/modules&quot;&gt;module styles&lt;/a&gt;; e.g. a combination of AMD, CommonJS, and legacy. In most of these cases, they first check for &lt;code&gt;define&lt;/code&gt; and then use some quirky code to export properties. In these cases, it could help to force the CommonJS path by setting &lt;code&gt;additionalCode=var%define%20=%20false;&lt;/code&gt; via the &lt;a href=&quot;../loaders/imports-loader&quot;&gt;&lt;code&gt;imports-loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最后，有些模块支持多种&lt;a href=&quot;../concepts/modules&quot;&gt;模块样式&lt;/a&gt;；例如AMD，CommonJS和旧版的组合。在大多数情况下，它们首先检查 &lt;code&gt;define&lt;/code&gt; ，然后使用一些古怪的代码导出属性。在这些情况下，通过设置 &lt;code&gt;additionalCode=var%define%20=%20false;&lt;/code&gt; 可以帮助强制CommonJS路径；通过&lt;a href=&quot;../loaders/imports-loader&quot;&gt; &lt;code&gt;imports-loader&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c3cbf7632d69cf215ab2098f34fa464c4de110a" translate="yes" xml:space="preserve">
          <source>Lastly, there are some modules that support multiple &lt;a href=&quot;../concepts/modules&quot;&gt;module styles&lt;/a&gt;; e.g. a combination of AMD, CommonJS, and legacy. In most of these cases, they first check for &lt;code&gt;define&lt;/code&gt; and then use some quirky code to export properties. In these cases, it could help to force the CommonJS path by setting &lt;code&gt;define=&amp;gt;false&lt;/code&gt; via the &lt;a href=&quot;../loaders/imports-loader&quot;&gt;&lt;code&gt;imports-loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最后，有些模块支持多种&lt;a href=&quot;../concepts/modules&quot;&gt;模块样式&lt;/a&gt;。例如AMD，CommonJS和旧版的组合。在大多数情况下，它们首先检查 &lt;code&gt;define&lt;/code&gt; ，然后使用一些古怪的代码导出属性。在这些情况下，可以通过&lt;a href=&quot;../loaders/imports-loader&quot;&gt; &lt;code&gt;imports-loader&lt;/code&gt; &lt;/a&gt;设置 &lt;code&gt;define=&amp;gt;false&lt;/code&gt; 来帮助强制CommonJS路径。</target>
        </trans-unit>
        <trans-unit id="53a754e3d992d869269c4cb92a2837bbd5a07aee" translate="yes" xml:space="preserve">
          <source>Lazy Loading</source>
          <target state="translated">懒惰加载</target>
        </trans-unit>
        <trans-unit id="a6814c4ce04cfb95ca6cbfcc3cc1eb059355893f" translate="yes" xml:space="preserve">
          <source>Lazy Loading ES2015 Modules in the Browser</source>
          <target state="translated">在浏览器中懒加载ES2015模块</target>
        </trans-unit>
        <trans-unit id="924e9b7ee1750df1b4535a32bfa737603c8f6140" translate="yes" xml:space="preserve">
          <source>Lazy, or &quot;on demand&quot;, loading is a great way to optimize your site or application. This practice essentially involves splitting your code at logical breakpoints, and then loading it once the user has done something that requires, or will require, a new block of code. This speeds up the initial load of the application and lightens its overall weight as some blocks may never even be loaded.</source>
          <target state="translated">懒惰,或 &quot;按需 &quot;加载是优化网站或应用程序的好方法。这种做法主要是在逻辑断点处拆分你的代码,一旦用户做了需要或将需要新代码块的事情,就加载它。这加快了应用程序的初始加载速度,并减轻了它的整体重量,因为一些块可能永远不会被加载。</target>
        </trans-unit>
        <trans-unit id="4ba79d94f0b82183e33f6b32baf653086df24f6a" translate="yes" xml:space="preserve">
          <source>Learn how &lt;a href=&quot;../concepts/mode&quot;&gt;mode&lt;/a&gt; works.</source>
          <target state="translated">了解&lt;a href=&quot;../concepts/mode&quot;&gt;模式的&lt;/a&gt;工作原理。</target>
        </trans-unit>
        <trans-unit id="3698e2cbefbe2678a76d1e3e54e3e6044e93c491" translate="yes" xml:space="preserve">
          <source>Learn how &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; works.</source>
          <target state="translated">了解&lt;a href=&quot;mode&quot;&gt;模式的&lt;/a&gt;工作原理。</target>
        </trans-unit>
        <trans-unit id="ca68b1ffeac8bb76bbc1d874030bcd8e3208d565" translate="yes" xml:space="preserve">
          <source>Learn more about JavaScript modules and webpack modules &lt;a href=&quot;modules&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;modules&quot;&gt;在此处&lt;/a&gt;了解有关JavaScript模块和webpack模块的更多信息。</target>
        </trans-unit>
        <trans-unit id="1d9b670b9c5644eb0eb99c62c6822bbac5029afd" translate="yes" xml:space="preserve">
          <source>Learn more about loaders!</source>
          <target state="translated">了解更多关于装载机的信息!</target>
        </trans-unit>
        <trans-unit id="25e4664e6b481a9acbe6acaf8e0e30c725c89359" translate="yes" xml:space="preserve">
          <source>Learn more about modules!</source>
          <target state="translated">了解更多关于模块的信息!</target>
        </trans-unit>
        <trans-unit id="981293c63de50a4b82c306939fa56898c25be66f" translate="yes" xml:space="preserve">
          <source>Learn more about plugins!</source>
          <target state="translated">了解更多关于插件的信息!</target>
        </trans-unit>
        <trans-unit id="a0581782018f23e44e6981dbddc6b7f35f10da43" translate="yes" xml:space="preserve">
          <source>Learn more about the &lt;a href=&quot;../configuration/mode&quot;&gt;mode configuration here&lt;/a&gt; and what optimizations take place on each value.</source>
          <target state="translated">&lt;a href=&quot;../configuration/mode&quot;&gt;在此处&lt;/a&gt;了解有关模式配置的更多信息，以及对每个值进行哪些优化。</target>
        </trans-unit>
        <trans-unit id="6c2378dd02b67a4699cabc2adc239ce15d1c39d6" translate="yes" xml:space="preserve">
          <source>Learn more about the &lt;a href=&quot;mode&quot;&gt;mode configuration here&lt;/a&gt; and what optimizations take place on each value.</source>
          <target state="translated">&lt;a href=&quot;mode&quot;&gt;在此处&lt;/a&gt;了解有关模式配置的更多信息，以及对每个值进行哪些优化。</target>
        </trans-unit>
        <trans-unit id="71802cc29fa08933c8a912cfebb99454b2f8aec2" translate="yes" xml:space="preserve">
          <source>Learn more about the CLI!</source>
          <target state="translated">了解更多关于CLI的信息</target>
        </trans-unit>
        <trans-unit id="61149dfe1def596200b4820edbb47dbc0266a116" translate="yes" xml:space="preserve">
          <source>Learn more about the Node API!</source>
          <target state="translated">了解更多关于Node API的信息</target>
        </trans-unit>
        <trans-unit id="060660781c00c37e702af0748b2353c43ca45835" translate="yes" xml:space="preserve">
          <source>Learn more in the &lt;a href=&quot;entry-points&quot;&gt;entry points&lt;/a&gt; section.</source>
          <target state="translated">在&lt;a href=&quot;entry-points&quot;&gt;入口点&lt;/a&gt;部分了解更多信息。</target>
        </trans-unit>
        <trans-unit id="526cb7425ab8d8d55c981974917cba26fab9834e" translate="yes" xml:space="preserve">
          <source>Less</source>
          <target state="translated">Less</target>
        </trans-unit>
        <trans-unit id="9e9a38fb0f47ac0d061be7b900e60567e9610d51" translate="yes" xml:space="preserve">
          <source>Less Resolver</source>
          <target state="translated">减去解析器</target>
        </trans-unit>
        <trans-unit id="c396dc3238368f1bf29085d3e3aa680459f65daa" translate="yes" xml:space="preserve">
          <source>Less resolver</source>
          <target state="translated">减去解析器</target>
        </trans-unit>
        <trans-unit id="b59060f93296c7da767d26fcb68bf783287278fd" translate="yes" xml:space="preserve">
          <source>Let's add a new utility file to our project, &lt;code&gt;src/math.js&lt;/code&gt;, that exports two functions:</source>
          <target state="translated">让我们向项目 &lt;code&gt;src/math.js&lt;/code&gt; 添加一个新的实用程序文件，该文件可以导出两个函数：</target>
        </trans-unit>
        <trans-unit id="200c218f1107d3bf9e02a4512147e1192f1039e9" translate="yes" xml:space="preserve">
          <source>Let's add a script to easily run the dev server as well:</source>
          <target state="translated">让我们添加一个脚本来轻松运行开发服务器。</target>
        </trans-unit>
        <trans-unit id="c54500b14535b89ad68efa849b9d7c70f6ba0231" translate="yes" xml:space="preserve">
          <source>Let's add an image to our project and see how this works, you can use any image you like:</source>
          <target state="translated">让我们为我们的项目添加一张图片,看看它是如何工作的,你可以使用任何你喜欢的图片。</target>
        </trans-unit>
        <trans-unit id="864ab2c557696cdcedbb70daf234bbfba7f78a8a" translate="yes" xml:space="preserve">
          <source>Let's add an npm script that will start webpack's Watch Mode:</source>
          <target state="translated">让我们添加一个npm脚本来启动webpack的观察模式。</target>
        </trans-unit>
        <trans-unit id="9d231761296ef683bf2ba9352fb7cbff2f3e657f" translate="yes" xml:space="preserve">
          <source>Let's add another module, &lt;code&gt;print.js&lt;/code&gt;, to our project:</source>
          <target state="translated">让我们向项目添加另一个模块 &lt;code&gt;print.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ace53f42c74d245c863b6c55ab81662641f6c56d" translate="yes" xml:space="preserve">
          <source>Let's add some logic to our &lt;code&gt;src/print.js&lt;/code&gt; file:</source>
          <target state="translated">让我们在 &lt;code&gt;src/print.js&lt;/code&gt; 文件中添加一些逻辑：</target>
        </trans-unit>
        <trans-unit id="cfba9b600ffa0d5c1b8bf48328f6711afba973bc" translate="yes" xml:space="preserve">
          <source>Let's add the Workbox webpack plugin and adjust the &lt;code&gt;webpack.config.js&lt;/code&gt; file:</source>
          <target state="translated">让我们添加Workbox Webpack插件并调整 &lt;code&gt;webpack.config.js&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="1a520e9c759609254074e7f9aef08bb59f0e8a30" translate="yes" xml:space="preserve">
          <source>Let's allow our Service Worker to come out and play by registering it. We'll do that by adding the registration code below:</source>
          <target state="translated">让我们通过注册的方式让我们的服务员出来玩吧。我们将通过添加下面的注册码来实现。</target>
        </trans-unit>
        <trans-unit id="d19df46c6e4ea1fe766d1f81d551d3dd9bb6a8f0" translate="yes" xml:space="preserve">
          <source>Let's also update our &lt;code&gt;dist/index.html&lt;/code&gt; file, in preparation for webpack to split out entries:</source>
          <target state="translated">我们还要更新 &lt;code&gt;dist/index.html&lt;/code&gt; 文件，以准备webpack拆分条目：</target>
        </trans-unit>
        <trans-unit id="1066d88aac816a03bf9ea21e38bdb3e6f07556db" translate="yes" xml:space="preserve">
          <source>Let's assume that you are writing a small library ,&lt;code&gt;webpack-numbers&lt;/code&gt;, that allows users to convert the numbers 1 through 5 from their numeric representation to a textual one and vice-versa, e.g. 2 to 'two'.</source>
          <target state="translated">假设您正在编写一个小的库 &lt;code&gt;webpack-numbers&lt;/code&gt; ，该库允许用户将数字1到5从其数字表示形式转换为文本形式的数字，反之亦然，例如，将2转换为&amp;ldquo; 2&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e885fba190464527a86f76f6e854ff2bf32a22ad" translate="yes" xml:space="preserve">
          <source>Let's create &lt;code&gt;bootstrap.js&lt;/code&gt; file and move contents of the entry into it, and import that bootstrap into the entry:</source>
          <target state="translated">让我们创建 &lt;code&gt;bootstrap.js&lt;/code&gt; 文件，并将条目的内容移入其中，然后将该bootstrap导入到条目中：</target>
        </trans-unit>
        <trans-unit id="d4ed2a07bfb908c4c64525abb61dc0d144e86b7d" translate="yes" xml:space="preserve">
          <source>Let's create a new build and open up the &lt;code&gt;index.html&lt;/code&gt; file again:</source>
          <target state="translated">让我们创建一个新版本，然后再次打开 &lt;code&gt;index.html&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="25e443793999c258c40a1ecc9d929d9fcb895c4d" translate="yes" xml:space="preserve">
          <source>Let's create a new build and open up the index.html file again:</source>
          <target state="translated">让我们创建一个新的build,再打开index.html文件。</target>
        </trans-unit>
        <trans-unit id="0dd35e22c0195a54682143b20cd7e5d594f3f00f" translate="yes" xml:space="preserve">
          <source>Let's get our project set up using the example from &lt;a href=&quot;getting-started&quot;&gt;getting started&lt;/a&gt; with the &lt;code&gt;plugins&lt;/code&gt; from &lt;a href=&quot;output-management&quot;&gt;output management&lt;/a&gt;, so we don't have to deal with maintaining our &lt;code&gt;index.html&lt;/code&gt; file manually:</source>
          <target state="translated">让我们我们的项目设置使用从示例&lt;a href=&quot;getting-started&quot;&gt;入门&lt;/a&gt;与 &lt;code&gt;plugins&lt;/code&gt; 从&lt;a href=&quot;output-management&quot;&gt;输出管理&lt;/a&gt;，所以我们没有处理好保持我们 &lt;code&gt;index.html&lt;/code&gt; 手动文件：</target>
        </trans-unit>
        <trans-unit id="c21715b06a69e1e53a376a9bde7c09697189c336" translate="yes" xml:space="preserve">
          <source>Let's go through some different viewpoints to understand exactly how HMR works...</source>
          <target state="translated">让我们通过一些不同的观点来了解HMR到底是如何工作的......</target>
        </trans-unit>
        <trans-unit id="4892d9bcf4690995186c028ca774b0bf83fec124" translate="yes" xml:space="preserve">
          <source>Let's imagine a component &lt;code&gt;ChartComponent&lt;/code&gt; which needs huge &lt;code&gt;ChartingLibrary&lt;/code&gt;. It displays a &lt;code&gt;LoadingIndicator&lt;/code&gt; when rendered and instantly does an on demand import of &lt;code&gt;ChartingLibrary&lt;/code&gt;:</source>
          <target state="translated">让我们想象一个需要巨大 &lt;code&gt;ChartingLibrary&lt;/code&gt; 的组件 &lt;code&gt;ChartComponent&lt;/code&gt; 。呈现时将显示 &lt;code&gt;LoadingIndicator&lt;/code&gt; ，并立即按需导入 &lt;code&gt;ChartingLibrary&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ef98ad0e4e5dc323a57bc97909fb5e5349a2eac3" translate="yes" xml:space="preserve">
          <source>Let's install &lt;code&gt;express&lt;/code&gt; and &lt;code&gt;webpack-dev-middleware&lt;/code&gt; so we can get started:</source>
          <target state="translated">让我们安装 &lt;code&gt;express&lt;/code&gt; 和 &lt;code&gt;webpack-dev-middleware&lt;/code&gt; ,以便我们开始：</target>
        </trans-unit>
        <trans-unit id="8faada5ce22391dd10d1415dea88312392993bd9" translate="yes" xml:space="preserve">
          <source>Let's investigate the result when running the previous &lt;code&gt;EnvironmentPlugin&lt;/code&gt; configuration on a test file &lt;code&gt;entry.js&lt;/code&gt;:</source>
          <target state="translated">让我们研究在测试文件 &lt;code&gt;entry.js&lt;/code&gt; 上运行先前的 &lt;code&gt;EnvironmentPlugin&lt;/code&gt; 配置时的结果：</target>
        </trans-unit>
        <trans-unit id="298915063ccecc95539f7fb0f68e07b97fb7a009" translate="yes" xml:space="preserve">
          <source>Let's load a &lt;code&gt;lodash&lt;/code&gt; from CDN:</source>
          <target state="translated">让我们从CDN加载 &lt;code&gt;lodash&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0ba2bc2cbca42426e914f018d1807fcbce85333e" translate="yes" xml:space="preserve">
          <source>Let's make a minor change to our project before we get started:</source>
          <target state="translated">在开始之前,我们先对我们的项目做一个小小的改动。</target>
        </trans-unit>
        <trans-unit id="3d4cdbd0629dd3ebed64ef8e820a259d1903d958" translate="yes" xml:space="preserve">
          <source>Let's make an example. We have a PHP application with two page types: home and account. The home page has different layout and non-sharable JavaScript with the rest of the application (account page). We want to output &lt;code&gt;home.js&lt;/code&gt; and &lt;code&gt;home.css&lt;/code&gt; from our application files for the home page and &lt;code&gt;account.js&lt;/code&gt; and &lt;code&gt;account.css&lt;/code&gt; for account page.</source>
          <target state="translated">让我们举个例子。我们有一个具有两种页面类型的PHP应用程序：主页和帐户。主页与其他应用程序（帐户页面）具有不同的布局和不可共享的JavaScript。我们要从应用程序文件中输出 &lt;code&gt;home.js&lt;/code&gt; 和 &lt;code&gt;home.css&lt;/code&gt; ，为帐户页面输出 &lt;code&gt;account.js&lt;/code&gt; 和 &lt;code&gt;account.css&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56ea7b1a14f3ce2b2c663171be6e721b2185c042" translate="yes" xml:space="preserve">
          <source>Let's make an example:</source>
          <target state="translated">我们来举个例子。</target>
        </trans-unit>
        <trans-unit id="590a0cf7cc81843fe3251841264d0e9ae677a277" translate="yes" xml:space="preserve">
          <source>Let's move on to &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt;</source>
          <target state="translated">让我们继续进行&lt;a href=&quot;output-management&quot;&gt;输出管理&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3125c87401ba053c594b21408d66ca55db7045a" translate="yes" xml:space="preserve">
          <source>Let's move our &lt;code&gt;import&lt;/code&gt; to a new file and add the &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;&lt;code&gt;whatwg-fetch&lt;/code&gt;&lt;/a&gt; polyfill:</source>
          <target state="translated">让我们 &lt;code&gt;import&lt;/code&gt; 移动到新文件并添加&lt;a href=&quot;https://github.com/github/fetch&quot;&gt; &lt;code&gt;whatwg-fetch&lt;/code&gt; polyfill&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="de9be29e070239fa61fbe9fde651678f8af4fecb" translate="yes" xml:space="preserve">
          <source>Let's run &lt;code&gt;npm run build&lt;/code&gt; and see what this generates:</source>
          <target state="translated">让我们运行 &lt;code&gt;npm run build&lt;/code&gt; 看看会产生什么：</target>
        </trans-unit>
        <trans-unit id="05b4091ebfe585ae03159d738539e58072f2cc91" translate="yes" xml:space="preserve">
          <source>Let's run another build to see our new &lt;code&gt;vendor&lt;/code&gt; bundle:</source>
          <target state="translated">让我们运行另一个构建，以查看我们的新 &lt;code&gt;vendor&lt;/code&gt; 捆绑包：</target>
        </trans-unit>
        <trans-unit id="23616ff7b451fb065dfd47b0c7c28b3535ab4f2f" translate="yes" xml:space="preserve">
          <source>Let's run another build to see the extracted &lt;code&gt;runtime&lt;/code&gt; bundle:</source>
          <target state="translated">让我们运行另一个构建，以查看提取的 &lt;code&gt;runtime&lt;/code&gt; 捆绑包：</target>
        </trans-unit>
        <trans-unit id="f8667f71f677ad25dd0ee6282c11ca61db7ae828" translate="yes" xml:space="preserve">
          <source>Let's run webpack to see &lt;code&gt;lodash&lt;/code&gt; separated out to a separate bundle:</source>
          <target state="translated">让我们运行webpack看看 &lt;code&gt;lodash&lt;/code&gt; 被分离到一个单独的包中：</target>
        </trans-unit>
        <trans-unit id="4c2c46a7029c196da23bacb642ca9d22f9c691bf" translate="yes" xml:space="preserve">
          <source>Let's say a library creates a global variable that it expects its consumers to use. We can add a small module to our setup to demonstrate this:</source>
          <target state="translated">比方说,一个库创建了一个全局变量,它希望它的消费者能够使用这个变量。我们可以在我们的设置中添加一个小模块来证明这一点。</target>
        </trans-unit>
        <trans-unit id="776d07f8864f55d567475975ff8c87e0521fdf09" translate="yes" xml:space="preserve">
          <source>Let's say you also want to expose it as &lt;code&gt;window.jQuery&lt;/code&gt; in addition to &lt;code&gt;window.$&lt;/code&gt;. For multiple expose you can use &lt;code&gt;!&lt;/code&gt; in loader string:</source>
          <target state="translated">比方说，你也想公开为 &lt;code&gt;window.jQuery&lt;/code&gt; 除了 &lt;code&gt;window.$&lt;/code&gt; 。对于多重暴露，您可以使用 &lt;code&gt;!&lt;/code&gt; 在加载程序字符串中：</target>
        </trans-unit>
        <trans-unit id="b8a766615ef9dff3e057a22ebd8956772beafad3" translate="yes" xml:space="preserve">
          <source>Let's say you have a &lt;code&gt;data.toml&lt;/code&gt;, a &lt;code&gt;data.yaml&lt;/code&gt; and a &lt;code&gt;data.json5&lt;/code&gt; files under &lt;code&gt;src&lt;/code&gt; folder:</source>
          <target state="translated">假设您在 &lt;code&gt;src&lt;/code&gt; 文件夹下有一个 &lt;code&gt;data.toml&lt;/code&gt; ，一个 &lt;code&gt;data.yaml&lt;/code&gt; 和一个 &lt;code&gt;data.json5&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="10dd09185683439beae7b26603169e5b51b0f80d" translate="yes" xml:space="preserve">
          <source>Let's set up a simple configuration to support JSX and compile TypeScript down to ES5...</source>
          <target state="translated">让我们设置一个简单的配置来支持JSX,并将TypeScript编译到ES5......</target>
        </trans-unit>
        <trans-unit id="f59258da6cc89b2e4be16b8392b42cf322f93e52" translate="yes" xml:space="preserve">
          <source>Let's start by clearing up a common misconception. webpack is a module bundler like &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; or &lt;a href=&quot;http://brunch.io/&quot;&gt;Brunch&lt;/a&gt;. It is &lt;em&gt;not a task runner&lt;/em&gt; like &lt;a href=&quot;https://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt;, &lt;a href=&quot;https://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt;, or &lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;. Task runners handle automation of common development tasks such as linting, building, or testing your project. Compared to bundlers, task runners have a higher level focus. You can still benefit from their higher level tooling while leaving the problem of bundling to webpack.</source>
          <target state="translated">让我们首先清除一个常见的误解。webpack是类似于&lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt;或&lt;a href=&quot;http://brunch.io/&quot;&gt;Brunch&lt;/a&gt;的模块捆绑器。它&lt;em&gt;不是&lt;/em&gt;&lt;a href=&quot;https://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt;，&lt;a href=&quot;https://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt;或&lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp之&lt;/a&gt;类&lt;em&gt;的任务赛跑者&lt;/em&gt;。任务运行器负责自动化常见的开发任务，例如整理，构建或测试项目。与捆绑器相比，任务运行者具有更高的关注重点。您仍然可以从他们的高级工具中受益，同时将问题捆绑到webpack。</target>
        </trans-unit>
        <trans-unit id="dbc786ac9b3435f5a9140796e5c04e1f9d930ec0" translate="yes" xml:space="preserve">
          <source>Let's start by clearing up a common misconception. webpack is a module bundler like &lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; or &lt;a href=&quot;https://brunch.io/&quot;&gt;Brunch&lt;/a&gt;. It is &lt;em&gt;not a task runner&lt;/em&gt; like &lt;a href=&quot;https://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt;, &lt;a href=&quot;https://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt;, or &lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;. Task runners handle automation of common development tasks such as linting, building, or testing your project. Compared to bundlers, task runners have a higher level focus. You can still benefit from their higher level tooling while leaving the problem of bundling to webpack.</source>
          <target state="translated">让我们首先清除一个常见的误解。webpack是类似于&lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt;或&lt;a href=&quot;https://brunch.io/&quot;&gt;Brunch&lt;/a&gt;的模块捆绑器。它&lt;em&gt;不是&lt;/em&gt;&lt;a href=&quot;https://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt;，&lt;a href=&quot;https://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt;或&lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp之&lt;/a&gt;类&lt;em&gt;的任务赛跑者&lt;/em&gt;。任务运行器处理常见的开发任务的自动化，例如整理，构建或测试项目。与捆绑器相比，任务运行者具有更高的关注重点。您仍然可以从他们的高级工具中受益，同时将捆绑问题留给webpack。</target>
        </trans-unit>
        <trans-unit id="853f3c6d86100a64c1d5dec13779e87d731f7334" translate="yes" xml:space="preserve">
          <source>Let's start by going over &lt;code&gt;tapable&lt;/code&gt; utility, which provides the backbone of webpack's plugin interface.</source>
          <target state="translated">让我们 &lt;code&gt;tapable&lt;/code&gt; 实用程序开始，它提供了webpack插件界面的基础。</target>
        </trans-unit>
        <trans-unit id="14634cbd80692f23d4c30ffb14a82bc46651c8b4" translate="yes" xml:space="preserve">
          <source>Let's start by installing &lt;code&gt;webpack-merge&lt;/code&gt; and splitting out the bits we've already worked on in previous guides:</source>
          <target state="translated">让我们从安装 &lt;code&gt;webpack-merge&lt;/code&gt; 开始，并拆分出先前指南中已经处理过的部分：</target>
        </trans-unit>
        <trans-unit id="f3eea3fe86bd5f8f45fa0ca7ba204ab983853af1" translate="yes" xml:space="preserve">
          <source>Let's start by setting &lt;a href=&quot;../configuration/mode#mode-development&quot;&gt;&lt;code&gt;mode&lt;/code&gt; to &lt;code&gt;'development'&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;title&lt;/code&gt; to &lt;code&gt;'Development'&lt;/code&gt;.</source>
          <target state="translated">让我们首先将&lt;a href=&quot;../configuration/mode#mode-development&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;code&gt;'development'&lt;/code&gt; &lt;/a&gt;设置为'development'并将 &lt;code&gt;title&lt;/code&gt; 为 &lt;code&gt;'Development'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9402911d7f68b5de2aae4313daf24baa2ef78c11" translate="yes" xml:space="preserve">
          <source>Let's start with the first use case of shimming global variables. Before we do anything let's take another look at our project:</source>
          <target state="translated">让我们从第一个使用案例开始,即对全局变量进行微调。在我们做任何事情之前,让我们再看看我们的项目。</target>
        </trans-unit>
        <trans-unit id="869b4a2ffdaee4d8a89b88f11b7bf301f2a3f586" translate="yes" xml:space="preserve">
          <source>Let's take the example from &lt;a href=&quot;code-splitting#dynamic-imports&quot;&gt;Code Splitting&lt;/a&gt; and tweak it a bit to demonstrate this concept even more. The code there does cause a separate chunk, &lt;code&gt;lodash.bundle.js&lt;/code&gt;, to be generated and technically &quot;lazy-loads&quot; it as soon as the script is run. The trouble is that no user interaction is required to load the bundle &amp;ndash; meaning that every time the page is loaded, the request will fire. This doesn't help us too much and will impact performance negatively.</source>
          <target state="translated">让我们以&lt;a href=&quot;code-splitting#dynamic-imports&quot;&gt;代码拆分中&lt;/a&gt;的示例为例，并对其进行一些微调以进一步展示此概念。那里的代码确实会导致生成一个单独的块 &lt;code&gt;lodash.bundle.js&lt;/code&gt; ，并且从技术上讲，一旦脚本运行，它就会&amp;ldquo;延迟加载&amp;rdquo;。问题在于，无需用户交互即可加载该包-这意味着每次加载页面时，该请求都会触发。这对我们没有太大帮助，会对性能产生负面影响。</target>
        </trans-unit>
        <trans-unit id="1585320b59b8f2a00c80a5a11f4429712661343d" translate="yes" xml:space="preserve">
          <source>Let's take the example from &lt;a href=&quot;code-splitting#dynamic-imports&quot;&gt;Code Splitting&lt;/a&gt; and tweak it a bit to demonstrate this concept even more. The code there does cause a separate chunk, &lt;code&gt;lodash.bundle.js&lt;/code&gt;, to be generated and technically &quot;lazy-loads&quot; it as soon as the script is run. The trouble is that no user interaction is required to load the bundle -- meaning that every time the page is loaded, the request will fire. This doesn't help us too much and will impact performance negatively.</source>
          <target state="translated">让我们以&lt;a href=&quot;code-splitting#dynamic-imports&quot;&gt;代码拆分中&lt;/a&gt;的示例为例，并对其进行一些微调以进一步展示此概念。那里的代码确实会导致生成一个单独的块 &lt;code&gt;lodash.bundle.js&lt;/code&gt; ，并且从技术上讲，一旦脚本运行，它就会&amp;ldquo;延迟加载&amp;rdquo;。问题在于，无需用户交互即可加载该包-这意味着每次加载页面时，该请求都会触发。这对我们没有太大帮助，会对性能产生负面影响。</target>
        </trans-unit>
        <trans-unit id="f2575ec6a173ba3f717e212116d79db29ba7ccfe" translate="yes" xml:space="preserve">
          <source>Let's try it out by adding a new &lt;code&gt;style.css&lt;/code&gt; file to our project and import it in our &lt;code&gt;index.js&lt;/code&gt;:</source>
          <target state="translated">让我们通过在项目中添加一个新的 &lt;code&gt;style.css&lt;/code&gt; 文件并将其导入 &lt;code&gt;index.js&lt;/code&gt; 来进行尝试：</target>
        </trans-unit>
        <trans-unit id="6df435dd142351e74c95d5af3dddef706ca77152" translate="yes" xml:space="preserve">
          <source>Let's try something different. We'll add an interaction to log some text to the console when the user clicks a button. However, we'll wait to load that code (&lt;code&gt;print.js&lt;/code&gt;) until the interaction occurs for the first time. To do this we'll go back and rework the &lt;a href=&quot;code-splitting#dynamic-imports&quot;&gt;final &lt;em&gt;Dynamic Imports&lt;/em&gt; example&lt;/a&gt; from &lt;em&gt;Code Splitting&lt;/em&gt; and leave &lt;code&gt;lodash&lt;/code&gt; in the main chunk.</source>
          <target state="translated">让我们尝试一些不同的东西。当用户单击按钮时，我们将添加一个交互操作以将一些文本记录到控制台。但是，我们将等待加载该代码（ &lt;code&gt;print.js&lt;/code&gt; ），直到第一次进行交互为止。为此，我们将回过头来对&lt;em&gt;代码拆分中&lt;/em&gt;的&lt;a href=&quot;code-splitting#dynamic-imports&quot;&gt;最终&lt;em&gt;动态导入&lt;/em&gt;示例进行&lt;/a&gt;重做，并将 &lt;code&gt;lodash&lt;/code&gt; 留在主要块中。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4cf925ca2a61ded049c2b9c8be2bc04d2c7c78d6" translate="yes" xml:space="preserve">
          <source>Let's use webpack to manage these scripts instead.</source>
          <target state="translated">让我们用webpack来代替管理这些脚本。</target>
        </trans-unit>
        <trans-unit id="e9ab4958799f3eae9e6c85fee5051e48df52630d" translate="yes" xml:space="preserve">
          <source>Library authors usually provide a variable to modify the asset path. &lt;a href=&quot;https://github.com/twbs/bootstrap-sass&quot;&gt;bootstrap-sass&lt;/a&gt; for example has an &lt;code&gt;$icon-font-path&lt;/code&gt;.</source>
          <target state="translated">图书馆作者通常提供一个变量来修改资产路径。例如，&lt;a href=&quot;https://github.com/twbs/bootstrap-sass&quot;&gt;bootstrap-sass&lt;/a&gt;具有 &lt;code&gt;$icon-font-path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bda3cf2b1330f7df4e9c4ba482d22eceea1029f9" translate="yes" xml:space="preserve">
          <source>Library authors usually provide a variable to modify the asset path. &lt;a href=&quot;https://github.com/twbs/bootstrap-sass&quot;&gt;bootstrap-sass&lt;/a&gt; for example has an &lt;code&gt;$icon-font-path&lt;/code&gt;. Check out &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/master/test/bootstrapSass&quot;&gt;this working bootstrap example&lt;/a&gt;.</source>
          <target state="translated">图书馆作者通常提供一个变量来修改资产路径。例如，&lt;a href=&quot;https://github.com/twbs/bootstrap-sass&quot;&gt;bootstrap-sass&lt;/a&gt;具有 &lt;code&gt;$icon-font-path&lt;/code&gt; 。看看&lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/master/test/bootstrapSass&quot;&gt;这个工作的引导示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75de8b5f4d779f5ae4944b0b52b4a9235709f44e" translate="yes" xml:space="preserve">
          <source>LibraryTemplatePlugin</source>
          <target state="translated">LibraryTemplatePlugin</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">License</target>
        </trans-unit>
        <trans-unit id="e91f6ba4ec02c67a796600daa345b1a2b526d763" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution License 4.0.</source>
          <target state="translated">根据知识共享署名4.0授权。</target>
        </trans-unit>
        <trans-unit id="cb798772092fd7fd72c676c4c942bf151ab4a5c3" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;maxSize&lt;/code&gt;, &lt;code&gt;maxAsyncSize&lt;/code&gt; can be applied globally (&lt;code&gt;splitChunks.maxAsyncSize&lt;/code&gt;), to cacheGroups (&lt;code&gt;splitChunks.cacheGroups.{cacheGroup}.maxAsyncSize&lt;/code&gt;), or to the fallback cache group (&lt;code&gt;splitChunks.fallbackCacheGroup.maxAsyncSize&lt;/code&gt;).</source>
          <target state="translated">像 &lt;code&gt;maxSize&lt;/code&gt; 一样， &lt;code&gt;maxAsyncSize&lt;/code&gt; 可以全局应用（ &lt;code&gt;splitChunks.maxAsyncSize&lt;/code&gt; ），cacheGroups（ &lt;code&gt;splitChunks.cacheGroups.{cacheGroup}.maxAsyncSize&lt;/code&gt; ）或后备缓存组（ &lt;code&gt;splitChunks.fallbackCacheGroup.maxAsyncSize&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cb6c83ac4b6f4c4d7bccee4aa9cfe775196e5bb5" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;maxSize&lt;/code&gt;, &lt;code&gt;maxInitialSize&lt;/code&gt; can be applied globally (&lt;code&gt;splitChunks.maxInitialSize&lt;/code&gt;), to cacheGroups (&lt;code&gt;splitChunks.cacheGroups.{cacheGroup}.maxInitialSize&lt;/code&gt;), or to the fallback cache group (&lt;code&gt;splitChunks.fallbackCacheGroup.maxInitialSize&lt;/code&gt;).</source>
          <target state="translated">像 &lt;code&gt;maxSize&lt;/code&gt; 一样， &lt;code&gt;maxInitialSize&lt;/code&gt; 可以全局应用（ &lt;code&gt;splitChunks.maxInitialSize&lt;/code&gt; ），cacheGroups（ &lt;code&gt;splitChunks.cacheGroups.{cacheGroup}.maxInitialSize&lt;/code&gt; ）或后备缓存组（ &lt;code&gt;splitChunks.fallbackCacheGroup.maxInitialSize&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b0e000bfb2c71234bfa728e34259c747ffa13b98" translate="yes" xml:space="preserve">
          <source>Limit of assets displayed in chunk groups.</source>
          <target state="translated">分块组中显示的资产限制。</target>
        </trans-unit>
        <trans-unit id="95efc95f54a56248789ba7e9cc95082d78e7bdf9" translate="yes" xml:space="preserve">
          <source>Limit the maximum number of chunks using a value greater than or equal to &lt;code&gt;1&lt;/code&gt;. Using &lt;code&gt;1&lt;/code&gt; will prevent any additional chunks from being added as the entry/main chunk is also included in the count.</source>
          <target state="translated">使用大于或等于 &lt;code&gt;1&lt;/code&gt; 的值限制最大块数。使用 &lt;code&gt;1&lt;/code&gt; 将防止添加任何其他大块，因为条目/主大块也包括在计数中。</target>
        </trans-unit>
        <trans-unit id="4a5d4d2895ae726d72e5f60e0d638c0f774d38d3" translate="yes" xml:space="preserve">
          <source>Limit the number of parallel processed modules. Can be used to fine tune performance or to get more reliable profiling results.</source>
          <target state="translated">限制并行处理模块的数量。可用于微调性能或获得更可靠的剖析结果。</target>
        </trans-unit>
        <trans-unit id="a2a1222d76b80e7fd40844198be5e6873ecfac18" translate="yes" xml:space="preserve">
          <source>LimitChunkCountPlugin</source>
          <target state="translated">LimitChunkCountPlugin</target>
        </trans-unit>
        <trans-unit id="a2cffd676e1510ccf968f218894d0b314324a9df" translate="yes" xml:space="preserve">
          <source>Limits the number of simultaneous requests to fs</source>
          <target state="translated">限制对fs的同时请求次数。</target>
        </trans-unit>
        <trans-unit id="b8b8b6a5dbf94725cbcda1e9615dcec15325a3d4" translate="yes" xml:space="preserve">
          <source>Lint only changed files</source>
          <target state="translated">Lint只修改文件</target>
        </trans-unit>
        <trans-unit id="1f273f732af71f6c5621f77b602d8a6107ab34b1" translate="yes" xml:space="preserve">
          <source>Lint only changed files, skip lint on start.</source>
          <target state="translated">只对已更改的文件进行lint,启动时跳过lint。</target>
        </trans-unit>
        <trans-unit id="042b641dbb2ed8580d6aab21f1462f4a56a9e95e" translate="yes" xml:space="preserve">
          <source>Linting &amp;amp;&amp;amp; Testing</source>
          <target state="translated">整理和测试</target>
        </trans-unit>
        <trans-unit id="fd7d5f026b3ded3199dbda80418fe5eac819743a" translate="yes" xml:space="preserve">
          <source>List of chunk loading types enabled for use by entry points. Will be automatically filled by webpack. Only needed when using a function as entry option and returning chunkLoading option from there.</source>
          <target state="translated">为入口点启用的分块加载类型列表。将由webpack自动填充。只有在使用函数作为入口选项并从那里返回chunkLoading选项时才需要。</target>
        </trans-unit>
        <trans-unit id="f949aadce6c932c7b22751500a59eeff1752c363" translate="yes" xml:space="preserve">
          <source>List of exports</source>
          <target state="translated">出口清单</target>
        </trans-unit>
        <trans-unit id="abdd890adfdb2c4599192c129126f3687cfc8067" translate="yes" xml:space="preserve">
          <source>List of exports.</source>
          <target state="translated">出口清单:</target>
        </trans-unit>
        <trans-unit id="580f7e33f06178aa42a97e11dfc3c37023ef5ce6" translate="yes" xml:space="preserve">
          <source>List of exposes</source>
          <target state="translated">暴露清单</target>
        </trans-unit>
        <trans-unit id="4576a1f6cd67553f22d78a49b2cc834a1228b298" translate="yes" xml:space="preserve">
          <source>List of exposes.</source>
          <target state="translated">曝光清单:</target>
        </trans-unit>
        <trans-unit id="e849f87b5a60b5d7ed456261d0dc610183f0fbe6" translate="yes" xml:space="preserve">
          <source>List of imports</source>
          <target state="translated">进口清单</target>
        </trans-unit>
        <trans-unit id="25ecbc840192431f608670f4f4fd5ae4f3c965b3" translate="yes" xml:space="preserve">
          <source>List of imports.</source>
          <target state="translated">进口清单:</target>
        </trans-unit>
        <trans-unit id="36cb0d5573b5dd848b3951aacee519d5bd1e85ff" translate="yes" xml:space="preserve">
          <source>List of library types enabled for use by entry points.</source>
          <target state="translated">可供入口点使用的库类型清单。</target>
        </trans-unit>
        <trans-unit id="ddfe726c428a9387712e23978d623e71dd5ca3b4" translate="yes" xml:space="preserve">
          <source>List of wasm loading types enabled for use by entry points.</source>
          <target state="translated">可供入口点使用的废物装载类型清单。</target>
        </trans-unit>
        <trans-unit id="f9958a2677c3ef0351f8de1b9c79ba7331f155a4" translate="yes" xml:space="preserve">
          <source>Literate CoffeeScript</source>
          <target state="translated">Literate CoffeeScript</target>
        </trans-unit>
        <trans-unit id="dd1a72a677627588b1d87c98301583e3fa88eba4" translate="yes" xml:space="preserve">
          <source>Live Coding a Simple Module Bundler</source>
          <target state="translated">实时编码一个简单的模块捆绑器</target>
        </trans-unit>
        <trans-unit id="72986479acdb9edfa5ba3b6cdd0fbc9a02006d70" translate="yes" xml:space="preserve">
          <source>Load markdown through &lt;code&gt;remark&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;remark&lt;/code&gt; 加载markdown 。</target>
        </trans-unit>
        <trans-unit id="2625ad5d0ca254becb883641b39ae3e49eb232ca" translate="yes" xml:space="preserve">
          <source>Load this &lt;a href=&quot;../configuration/plugins&quot;&gt;plugin&lt;/a&gt;</source>
          <target state="translated">加载此&lt;a href=&quot;../configuration/plugins&quot;&gt;插件&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec6f9069daa80029e880d76fc3bf6a0698a7d554" translate="yes" xml:space="preserve">
          <source>Loader</source>
          <target state="translated">Loader</target>
        </trans-unit>
        <trans-unit id="59fb9ad81b2126251218e6a1c17e8241d9602293" translate="yes" xml:space="preserve">
          <source>Loader API</source>
          <target state="translated">装载机API</target>
        </trans-unit>
        <trans-unit id="9e2a0de698da089eb7b79cf5a0a40fcafc427211" translate="yes" xml:space="preserve">
          <source>Loader API: this._compilation</source>
          <target state="translated">Loader API:this._compilation</target>
        </trans-unit>
        <trans-unit id="5e2dcf6c1a83820afd8fd70db164d7a1e38909a4" translate="yes" xml:space="preserve">
          <source>Loader API: this._compiler</source>
          <target state="translated">加载器API:this._compiler</target>
        </trans-unit>
        <trans-unit id="5fb3803d469519b6d21e613d1a1169c63e62dd7c" translate="yes" xml:space="preserve">
          <source>Loader API: this._module</source>
          <target state="translated">Loader API:this._module</target>
        </trans-unit>
        <trans-unit id="113c7b9eb07500696d46f9ae51649861c0da2675" translate="yes" xml:space="preserve">
          <source>Loader API: this.addContextDependency</source>
          <target state="translated">加载器API:this.addContextDependency。</target>
        </trans-unit>
        <trans-unit id="3f1e2a84ac5e1d8f14b9d349efedeb644b5152cc" translate="yes" xml:space="preserve">
          <source>Loader API: this.addDependency</source>
          <target state="translated">Loader API:this.addDependency。</target>
        </trans-unit>
        <trans-unit id="8e7dc3d534226c57937ea44296ee1c9e5ec56fbc" translate="yes" xml:space="preserve">
          <source>Loader API: this.async</source>
          <target state="translated">加载器API:this.async</target>
        </trans-unit>
        <trans-unit id="fcc91e71938e158b9223db640e97018e2374a36c" translate="yes" xml:space="preserve">
          <source>Loader API: this.cacheable</source>
          <target state="translated">Loader API:this.cacheable</target>
        </trans-unit>
        <trans-unit id="72f1f415951644307715108bc0d9be6d0ef998f9" translate="yes" xml:space="preserve">
          <source>Loader API: this.callback</source>
          <target state="translated">Loader API:this.callback</target>
        </trans-unit>
        <trans-unit id="0e91f66b9006e6f4f27bb836f73f9ce44049a31d" translate="yes" xml:space="preserve">
          <source>Loader API: this.clearDependencies</source>
          <target state="translated">Loader API:this.clearDependencies。</target>
        </trans-unit>
        <trans-unit id="63d74e02be6e015c4d9ef7e65e9af01a69711eb1" translate="yes" xml:space="preserve">
          <source>Loader API: this.context</source>
          <target state="translated">Loader API:this.context</target>
        </trans-unit>
        <trans-unit id="4b44f05dd995d5ea0c52b17be7e2cbb84c43ffb8" translate="yes" xml:space="preserve">
          <source>Loader API: this.data</source>
          <target state="translated">加载器API:this.data</target>
        </trans-unit>
        <trans-unit id="d33ff0f4b42beba7ad47650ec9c94e6418684a7f" translate="yes" xml:space="preserve">
          <source>Loader API: this.debug</source>
          <target state="translated">加载器API:this.debug</target>
        </trans-unit>
        <trans-unit id="51d260cd4b5d9c5c6c75fc839dd502007fab69dc" translate="yes" xml:space="preserve">
          <source>Loader API: this.emitError</source>
          <target state="translated">Loader API:this.emitError</target>
        </trans-unit>
        <trans-unit id="5e494538e939a2022e7f5a208d648bf015cd4b79" translate="yes" xml:space="preserve">
          <source>Loader API: this.emitFile</source>
          <target state="translated">Loader API:this.emitFile</target>
        </trans-unit>
        <trans-unit id="b5cb7c7a6af52d7a23c91198c55b188be1b4a7ee" translate="yes" xml:space="preserve">
          <source>Loader API: this.emitWarning</source>
          <target state="translated">Loader API:this.mitWarning</target>
        </trans-unit>
        <trans-unit id="860c8f3daa795ad6feee54ed91625fce5cdbe719" translate="yes" xml:space="preserve">
          <source>Loader API: this.exec</source>
          <target state="translated">Loader API:this.exec</target>
        </trans-unit>
        <trans-unit id="c8322deb3164815c4863bec78ce481557c0803ed" translate="yes" xml:space="preserve">
          <source>Loader API: this.fs</source>
          <target state="translated">加载API:this.fs</target>
        </trans-unit>
        <trans-unit id="2552f2f9f4456818ae2f6223067ca63d3092ee5f" translate="yes" xml:space="preserve">
          <source>Loader API: this.inputValue</source>
          <target state="translated">Loader API:this.inputValue</target>
        </trans-unit>
        <trans-unit id="1e5192027d81543759982da99ac9e159d9344b75" translate="yes" xml:space="preserve">
          <source>Loader API: this.loadModule</source>
          <target state="translated">加载器API:this.loadModule</target>
        </trans-unit>
        <trans-unit id="72bd55d0b6d300698178acb035877306b51468f8" translate="yes" xml:space="preserve">
          <source>Loader API: this.loaderIndex</source>
          <target state="translated">Loader API:this.loaderIndex</target>
        </trans-unit>
        <trans-unit id="416c1d88614507c0345ef8198254c4130b148e9a" translate="yes" xml:space="preserve">
          <source>Loader API: this.loaders</source>
          <target state="translated">加载器API:this.loaders</target>
        </trans-unit>
        <trans-unit id="d527d43de2f36195cb26f48ca1c4ea9289f254c5" translate="yes" xml:space="preserve">
          <source>Loader API: this.minimize</source>
          <target state="translated">加载API:this.minimize</target>
        </trans-unit>
        <trans-unit id="2d906042fe4b7b912e5db074680bb62d469d3d2d" translate="yes" xml:space="preserve">
          <source>Loader API: this.options</source>
          <target state="translated">加载器API:this.options</target>
        </trans-unit>
        <trans-unit id="f404fb748ceb73e72f3bd4e22ae713596ae4b0db" translate="yes" xml:space="preserve">
          <source>Loader API: this.query</source>
          <target state="translated">Loader API:this.query</target>
        </trans-unit>
        <trans-unit id="814cbe955ad67ec34eff69a545e136570fe3fe5b" translate="yes" xml:space="preserve">
          <source>Loader API: this.request</source>
          <target state="translated">Loader API:this.request</target>
        </trans-unit>
        <trans-unit id="23d5a5e6ea8d847afb18a0758dd8dec816437495" translate="yes" xml:space="preserve">
          <source>Loader API: this.resolve</source>
          <target state="translated">Loader API:this.resolve</target>
        </trans-unit>
        <trans-unit id="5d495b55aaf42f0e8e9721d0f71d35a7f70e4394" translate="yes" xml:space="preserve">
          <source>Loader API: this.resolveSync</source>
          <target state="translated">Loader API:this.resolveSync</target>
        </trans-unit>
        <trans-unit id="fa7a331766145671012dde09e34bbf9f409dd9af" translate="yes" xml:space="preserve">
          <source>Loader API: this.resource</source>
          <target state="translated">Loader API:this.resource</target>
        </trans-unit>
        <trans-unit id="248a9d34f750087194073bb4591f638e28becc8d" translate="yes" xml:space="preserve">
          <source>Loader API: this.resourcePath</source>
          <target state="translated">Loader API:this.resourcePath</target>
        </trans-unit>
        <trans-unit id="99f061dc8f80ae78b2aa8f530bd7042cb8675a71" translate="yes" xml:space="preserve">
          <source>Loader API: this.resourceQuery</source>
          <target state="translated">Loader API:this.resourceQuery</target>
        </trans-unit>
        <trans-unit id="45b84155f359bf710da1cfb9c23ea0f4a2424be3" translate="yes" xml:space="preserve">
          <source>Loader API: this.rootContext</source>
          <target state="translated">Loader API:this.rootContext</target>
        </trans-unit>
        <trans-unit id="f81f422249588113fa2f3592581e12aa3de00b0f" translate="yes" xml:space="preserve">
          <source>Loader API: this.sourceMap</source>
          <target state="translated">载入器API:this.sourceMap</target>
        </trans-unit>
        <trans-unit id="1089d0ca8d4710d2da54c93dac1cfbd2a4162e0b" translate="yes" xml:space="preserve">
          <source>Loader API: this.target</source>
          <target state="translated">Loader API:this.target</target>
        </trans-unit>
        <trans-unit id="0cfe16073d2288f5c25f52c42bf7092e9c927abd" translate="yes" xml:space="preserve">
          <source>Loader API: this.value</source>
          <target state="translated">Loader API:this.value</target>
        </trans-unit>
        <trans-unit id="97857623be671d98299df6e485fc69b5fa569a45" translate="yes" xml:space="preserve">
          <source>Loader API: this.version</source>
          <target state="translated">Loader API:this.version</target>
        </trans-unit>
        <trans-unit id="6e8ef33826832f7d3ca753b4f83081faf1a720f6" translate="yes" xml:space="preserve">
          <source>Loader API: this.webpack</source>
          <target state="translated">Loader API:this.webpack</target>
        </trans-unit>
        <trans-unit id="7b06b231c21bbc554c52089970417ff2a72db3a4" translate="yes" xml:space="preserve">
          <source>Loader Features</source>
          <target state="translated">装载机功能</target>
        </trans-unit>
        <trans-unit id="72c4ad8cd558bcf1b6d659a6c395945b1c244344" translate="yes" xml:space="preserve">
          <source>Loader Interface</source>
          <target state="translated">装载机接口</target>
        </trans-unit>
        <trans-unit id="a52c12240d9cb856acdf285cb888ef1e21d8c735" translate="yes" xml:space="preserve">
          <source>Loader Options</source>
          <target state="translated">装载机选项</target>
        </trans-unit>
        <trans-unit id="66b67d98b64f11182f0bdc43d2a1f8afe67ea42c" translate="yes" xml:space="preserve">
          <source>Loader accepts a function that will have one argument: an array of eslint messages (object). The function must return the output as a string. You can use official eslint formatters.</source>
          <target state="translated">Loader接受一个有一个参数的函数:一个eslint消息(对象)数组。该函数必须以字符串的形式返回输出。你可以使用官方的eslint格式。</target>
        </trans-unit>
        <trans-unit id="436c4d54c32af7fd571edb588d9ec92b480977c7" translate="yes" xml:space="preserve">
          <source>Loader for &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; to process CSS with &lt;a href=&quot;https://postcss.org/&quot;&gt;PostCSS&lt;/a&gt;</source>
          <target state="translated">装载机&lt;a href=&quot;https://webpack.js.org/&quot;&gt;的WebPack&lt;/a&gt;与过程CSS &lt;a href=&quot;https://postcss.org/&quot;&gt;PostCSS&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0678dd74394ca309b656affdbe65a97b171fcbb" translate="yes" xml:space="preserve">
          <source>Loader to process CSS with &lt;a href=&quot;https://github.com/postcss/postcss&quot;&gt;&lt;code&gt;PostCSS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">加载程序以使用&lt;a href=&quot;https://github.com/postcss/postcss&quot;&gt; &lt;code&gt;PostCSS&lt;/code&gt; &lt;/a&gt;处理CSS 。</target>
        </trans-unit>
        <trans-unit id="82e923b83d068def294e84ed0af39ef4d9d65f07" translate="yes" xml:space="preserve">
          <source>Loader will always return errors if this option is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">如果此选项设置为 &lt;code&gt;true&lt;/code&gt; ,则Loader始终会返回错误。</target>
        </trans-unit>
        <trans-unit id="97b5d99571d04e3ad13b05b4a25e852af90802b2" translate="yes" xml:space="preserve">
          <source>Loader will always return warnings if option is set to &lt;code&gt;true&lt;/code&gt;. If you're using hot module replacement, you may wish to enable this in development, or else updates will be skipped when there's an eslint error.</source>
          <target state="translated">如果option设置为 &lt;code&gt;true&lt;/code&gt; ,则加载程序将始终返回警告。如果您正在使用热模块更换，则可能希望在开发中启用此功能，否则在出现eslint错误时将跳过更新。</target>
        </trans-unit>
        <trans-unit id="fab75d863e028cfcbf3711da868849b30047bb42" translate="yes" xml:space="preserve">
          <source>Loader will cause the module build to fail if there are any eslint errors.</source>
          <target state="translated">如果有任何eslint错误,Loader将导致模块构建失败。</target>
        </trans-unit>
        <trans-unit id="2ebbee483dc69b53b99f32cc324cae36920adb68" translate="yes" xml:space="preserve">
          <source>Loader will cause the module build to fail if there are any eslint warnings.</source>
          <target state="translated">如果有任何eslint警告,Loader将导致模块构建失败。</target>
        </trans-unit>
        <trans-unit id="3ee4f2745233b1cb94ac8dfea64274f33a717f4e" translate="yes" xml:space="preserve">
          <source>Loader will process and report errors only and ignore warnings if this option is set to true</source>
          <target state="translated">如果该选项设置为 &quot;true&quot;,加载器将只处理和报告错误,而忽略警告。</target>
        </trans-unit>
        <trans-unit id="ce0bbf0a349ce71616c6f3a7a81100b1cf27a8e7" translate="yes" xml:space="preserve">
          <source>Loader(s) that should be used for converting the resource to a CSS exporting module &lt;em&gt;(required)&lt;/em&gt;</source>
          <target state="translated">应当用于将资源转换为CSS导出模块的加载器&lt;em&gt;（必需）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f4800e7ed94d46f7c8508b1f61aa9b4acd16f4e" translate="yes" xml:space="preserve">
          <source>Loader: Resolves a webpack &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;loader&lt;/a&gt;.</source>
          <target state="translated">加载程序：解析webpack &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;加载程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4cd722a1b5bd5ee06349060aa953bbaed56cee36" translate="yes" xml:space="preserve">
          <source>LoaderOptionsPlugin</source>
          <target state="translated">LoaderOptionsPlugin</target>
        </trans-unit>
        <trans-unit id="4f514b04ed6b877534da140af8e12cab5016f713" translate="yes" xml:space="preserve">
          <source>Loaders</source>
          <target state="translated">Loaders</target>
        </trans-unit>
        <trans-unit id="c591e4a3bcf5ed00d18d81e617c16d9f9fea20ec" translate="yes" xml:space="preserve">
          <source>Loaders allow more power in the JavaScript ecosystem through preprocessing functions (loaders). Users now have more flexibility to include fine-grained logic such as compression, packaging, language translations and &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;more&lt;/a&gt;.</source>
          <target state="translated">加载程序通过预处理功能（加载程序）在JavaScript生态系统中提供了更多功能。现在，用户可以更灵活地包括细粒度逻辑诸如压缩，包装，语言翻译和&lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;更多&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04236cd132afbaff5f807345c6cfcf629380f929" translate="yes" xml:space="preserve">
          <source>Loaders are &lt;strong&gt;always&lt;/strong&gt; called from right to left. There are some instances where the loader only cares about the &lt;strong&gt;metadata&lt;/strong&gt; behind a request and can ignore the results of the previous loader. The &lt;code&gt;pitch&lt;/code&gt; method on loaders is called from &lt;strong&gt;left to right&lt;/strong&gt; before the loaders are actually executed (from right to left).</source>
          <target state="translated">装载程序&lt;strong&gt;总是&lt;/strong&gt;从右到左调用。在某些情况下，加载器仅关心请求背后的&lt;strong&gt;元数据&lt;/strong&gt;，而可以忽略前一个加载器的结果。在实际执行加载程序之前&lt;strong&gt;，从左到右&lt;/strong&gt;调用加载程序上的 &lt;code&gt;pitch&lt;/code&gt; 方法（从右到左）。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a2826b8c59f1bc048b2d92251e589df2220343e5" translate="yes" xml:space="preserve">
          <source>Loaders are &lt;strong&gt;always&lt;/strong&gt; called from right to left. There are some instances where the loader only cares about the &lt;strong&gt;metadata&lt;/strong&gt; behind a request and can ignore the results of the previous loader. The &lt;code&gt;pitch&lt;/code&gt; method on loaders is called from &lt;strong&gt;left to right&lt;/strong&gt; before the loaders are actually executed (from right to left). For the following &lt;a href=&quot;../configuration/module#rule-use&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; configuration:</source>
          <target state="translated">装载程序&lt;strong&gt;总是&lt;/strong&gt;从右到左调用。在某些情况下，加载器仅关心请求背后的&lt;strong&gt;元数据&lt;/strong&gt;，而可以忽略前一个加载器的结果。在实际执行加载程序之前（从右到左）&lt;strong&gt;，从左到右&lt;/strong&gt;调用加载程序上的 &lt;code&gt;pitch&lt;/code&gt; 方法。对于以下&lt;a href=&quot;../configuration/module#rule-use&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt;配置：&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85433a4ab3591548b068d016fbf8d4c3304e1339" translate="yes" xml:space="preserve">
          <source>Loaders are activated by using &lt;code&gt;loadername!&lt;/code&gt; prefixes in &lt;code&gt;require()&lt;/code&gt; statements, or are automatically applied via regex from your webpack configuration &amp;ndash; see &lt;a href=&quot;../concepts/loaders#configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">通过使用 &lt;code&gt;loadername!&lt;/code&gt; 激活装载程序！前缀（在 &lt;code&gt;require()&lt;/code&gt; 语句中），或通过Webpack配置中的regex自动应用-请参见&lt;a href=&quot;../concepts/loaders#configuration&quot;&gt;configuration&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66584ef4a8adbc0535dc086bb6068fd801382a3a" translate="yes" xml:space="preserve">
          <source>Loaders are evaluated/executed from right to left (or from bottom to top). In the example below execution starts with sass-loader, continues with css-loader and finally ends with style-loader. See &lt;a href=&quot;loaders#loader-features&quot;&gt;&quot;Loader Features&quot;&lt;/a&gt; for more information about loaders order.</source>
          <target state="translated">加载程序从右到左（或从下到上）进行评估/执行。在下面的示例中，执行从sass-loader开始，从css-loader继续，最后以style-loader结束。有关装载机订单的更多信息，请参见&lt;a href=&quot;loaders#loader-features&quot;&gt;&amp;ldquo;装载机功能&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d2a9298a789b09dae9bd81b1e23298018b33574" translate="yes" xml:space="preserve">
          <source>Loaders are evaluated/executed from right to left. In the example below execution starts with sass-loader, continues with css-loader and finally ends with style-loader. See &lt;a href=&quot;loaders#loader-features&quot;&gt;&quot;Loader Features&quot;&lt;/a&gt; for more information about loaders order.</source>
          <target state="translated">加载程序从右到左进行评估/执行。在下面的示例中，执行从sass-loader开始，从css-loader继续，最后以style-loader结束。有关装载机订购的更多信息，请参见&lt;a href=&quot;loaders#loader-features&quot;&gt;&amp;ldquo;装载机功能&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85b2e5448f629cca6f3e4053499aa492264405ec" translate="yes" xml:space="preserve">
          <source>Loaders are transformations that are applied on the source code of a module. They allow you to pre-process files as you &lt;code&gt;import&lt;/code&gt; or &amp;ldquo;load&amp;rdquo; them. Thus, loaders are kind of like &amp;ldquo;tasks&amp;rdquo; in other build tools and provide a powerful way to handle front-end build steps. Loaders can transform files from a different language (like TypeScript) to JavaScript or inline images as data URLs. Loaders even allow you to do things like &lt;code&gt;import&lt;/code&gt; CSS files directly from your JavaScript modules!</source>
          <target state="translated">加载程序是应用于模块源代码的转换。它们允许您在 &lt;code&gt;import&lt;/code&gt; 或&amp;ldquo;加载&amp;rdquo; 文件时对其进行预处理。因此，加载程序有点像其他构建工具中的&amp;ldquo;任务&amp;rdquo;，并提供了一种强大的方式来处理前端构建步骤。加载程序可以将文件从其他语言（例如TypeScript）转换为JavaScript或嵌入式图像作为数据URL。加载程序甚至允许您执行诸如直接从JavaScript模块 &lt;code&gt;import&lt;/code&gt; CSS文件之类的操作！</target>
        </trans-unit>
        <trans-unit id="c12e476331b28e02146d294815ffcc541688961f" translate="yes" xml:space="preserve">
          <source>Loaders are transformations that are applied to the source code of a module. They allow you to pre-process files as you &lt;code&gt;import&lt;/code&gt; or &amp;ldquo;load&amp;rdquo; them. Thus, loaders are kind of like &amp;ldquo;tasks&amp;rdquo; in other build tools and provide a powerful way to handle front-end build steps. Loaders can transform files from a different language (like TypeScript) to JavaScript or load inline images as data URLs. Loaders even allow you to do things like &lt;code&gt;import&lt;/code&gt; CSS files directly from your JavaScript modules!</source>
          <target state="translated">加载程序是应用于模块源代码的转换。它们使您可以在 &lt;code&gt;import&lt;/code&gt; 或&amp;ldquo;加载&amp;rdquo;文件时对其进行预处理。因此，加载程序有点像其他构建工具中的&amp;ldquo;任务&amp;rdquo;，并提供了一种强大的方式来处理前端构建步骤。加载程序可以将文件从其他语言（如TypeScript）转换为JavaScript，也可以将内嵌图像作为数据URL加载。加载程序甚至允许您执行诸如直接从JavaScript模块 &lt;code&gt;import&lt;/code&gt; CSS文件之类的操作！</target>
        </trans-unit>
        <trans-unit id="105163e4c40315ef5103b9b810764f9517ba6631" translate="yes" xml:space="preserve">
          <source>Loaders are transformations that are applied to the source code of a module. They are written as functions that accept source code as a parameter and return a new version of that code with transformations applied.</source>
          <target state="translated">加载器是应用于模块的源代码的转换,它们被写成函数,接受源代码作为参数,并返回应用了转换的新版本代码。它们被写成函数,接受源代码作为参数,并返回应用了转换的新版本代码。</target>
        </trans-unit>
        <trans-unit id="4492533e2228d71b3b96dc5a018cc4fea5628474" translate="yes" xml:space="preserve">
          <source>Loaders can be chained by passing multiple loaders, which will be applied from right to left (last to first configured).</source>
          <target state="translated">加载器可以通过传递多个加载器进行连锁,将从右到左(最后一个到第一个配置)应用。</target>
        </trans-unit>
        <trans-unit id="1847aee657a68a67aa5b0d9bc1513fcf39b92a1e" translate="yes" xml:space="preserve">
          <source>Loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result (resource with applied transformations) to the next one, and so forth. Finally, webpack expects JavaScript to be returned by the last loader in the chain.</source>
          <target state="translated">加载器可以是链式的。链中的每个加载器都会对处理后的资源进行转换。一个链以相反的顺序执行。第一个加载器将它的结果(应用了转换的资源)传递给下一个加载器,以此类推。最后,webpack希望JavaScript能由链中最后一个加载器返回。</target>
        </trans-unit>
        <trans-unit id="9992fe8ca23caa87dd6c06cc85034e1179a05711" translate="yes" xml:space="preserve">
          <source>Loaders can be configured with an &lt;code&gt;options&lt;/code&gt; object (using &lt;code&gt;query&lt;/code&gt; parameters to set options is still supported but has been deprecated).</source>
          <target state="translated">可以使用 &lt;code&gt;options&lt;/code&gt; 对象配置装入程序（仍支持使用 &lt;code&gt;query&lt;/code&gt; 参数设置选项，但已弃用）。</target>
        </trans-unit>
        <trans-unit id="7cae65951a547f19a78fea06bfee949d1d0c7429" translate="yes" xml:space="preserve">
          <source>Loaders can be synchronous or asynchronous.</source>
          <target state="translated">加载器可以是同步的,也可以是异步的。</target>
        </trans-unit>
        <trans-unit id="3a4ffaac9a5d00e6d97999f76c729bfda323f67d" translate="yes" xml:space="preserve">
          <source>Loaders can emit additional arbitrary files.</source>
          <target state="translated">加载器可以发出额外的任意文件。</target>
        </trans-unit>
        <trans-unit id="1f7061ffc9f99eccda64c580b1a06d220651d256" translate="yes" xml:space="preserve">
          <source>Loaders cannot access the webpack options.</source>
          <target state="translated">加载器无法访问webpack选项。</target>
        </trans-unit>
        <trans-unit id="f1fbfd5a9c44d1d16d4fe66fb905eb642dbf48c2" translate="yes" xml:space="preserve">
          <source>Loaders cannot emit files.</source>
          <target state="translated">装载机不能发射文件。</target>
        </trans-unit>
        <trans-unit id="7eb0c6a6e419b2eb666eba1f3916c0671c3bda22" translate="yes" xml:space="preserve">
          <source>Loaders cannot use custom loader API (i. e. by plugins).</source>
          <target state="translated">加载器不能使用自定义加载器API(即由插件)。</target>
        </trans-unit>
        <trans-unit id="41eeba56dff96e9c38832b78aed764a72c0255f0" translate="yes" xml:space="preserve">
          <source>Loaders follow the standard &lt;a href=&quot;module-resolution&quot;&gt;module resolution&lt;/a&gt;. In most cases it will be loaded from the &lt;a href=&quot;module-resolution#module-paths&quot;&gt;module path&lt;/a&gt; (think &lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;node_modules&lt;/code&gt;).</source>
          <target state="translated">装载机遵循标准&lt;a href=&quot;module-resolution&quot;&gt;模块分辨率&lt;/a&gt;。在大多数情况下，它将从&lt;a href=&quot;module-resolution#module-paths&quot;&gt;模块路径&lt;/a&gt;加载（请考虑 &lt;code&gt;npm install&lt;/code&gt; ， &lt;code&gt;node_modules&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c2f940e33799a662cb1ad30c183523d439fd0dd0" translate="yes" xml:space="preserve">
          <source>Loaders follow the standard &lt;a href=&quot;module-resolution&quot;&gt;module resolution&lt;/a&gt;. In most cases it will be loaders from the &lt;a href=&quot;module-resolution#module-paths&quot;&gt;module path&lt;/a&gt; (think &lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;node_modules&lt;/code&gt;).</source>
          <target state="translated">装载机遵循标准&lt;a href=&quot;module-resolution&quot;&gt;模块分辨率&lt;/a&gt;。在大多数情况下，它将是&lt;a href=&quot;module-resolution#module-paths&quot;&gt;模块路径中的&lt;/a&gt;加载器（请考虑 &lt;code&gt;npm install&lt;/code&gt; ， &lt;code&gt;node_modules&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="280b79c628c88ba44079edd33fc5fff785933171" translate="yes" xml:space="preserve">
          <source>Loaders may be added inline in requests and disabled via inline prefixes, which will impact the order in which they are &quot;pitched&quot; and executed. See &lt;a href=&quot;../configuration/module#ruleenforce&quot;&gt;&lt;code&gt;Rule.enforce&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">可以在请求中内联添加加载程序，并通过内联前缀禁用加载程序，这将影响加载程序&amp;ldquo;变桨&amp;rdquo;和执行的顺序。有关更多详细信息，请参见&lt;a href=&quot;../configuration/module#ruleenforce&quot;&gt; &lt;code&gt;Rule.enforce&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fca8c8eeb996a4a1a7282cc32332e5f5a992a064" translate="yes" xml:space="preserve">
          <source>Loaders may use &lt;code&gt;this.getLogger('name')&lt;/code&gt; to get an independent logger with a child name. Loader path and processed file is still added.</source>
          <target state="translated">加载程序可以使用 &lt;code&gt;this.getLogger('name')&lt;/code&gt; 来获得带有子名称的独立记录器。加载程序路径和已处理的文件仍被添加。</target>
        </trans-unit>
        <trans-unit id="63e5dc9d3fa1229531222b1c2e765d56159a9411" translate="yes" xml:space="preserve">
          <source>Loaders may use special fallback logic for detecting logging support &lt;code&gt;this.getLogger() ? this.getLogger() : console&lt;/code&gt; to provide a fallback when an older webpack version is used which does not support &lt;code&gt;getLogger&lt;/code&gt; method.</source>
          <target state="translated">加载程序可以使用特殊的回退逻辑来检测日志记录是否支持 &lt;code&gt;this.getLogger() ? this.getLogger() : console&lt;/code&gt; 在使用不支持 &lt;code&gt;getLogger&lt;/code&gt; 方法的旧版Webpack时提供备用。</target>
        </trans-unit>
        <trans-unit id="c38496ed15a93530a8091bef21e49371ecc5e31b" translate="yes" xml:space="preserve">
          <source>Loaders provide a way to customize the output through their preprocessing functions. Users now have more flexibility to include fine-grained logic such as compression, packaging, language translations and &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;more&lt;/a&gt;.</source>
          <target state="translated">加载程序提供了一种通过其预处理功能来自定义输出的方法。现在，用户可以更灵活地包括细粒度逻辑诸如压缩，包装，语言翻译和&lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;更多&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81be1d2631fc99d0ffb905518327d6bdea76da2d" translate="yes" xml:space="preserve">
          <source>Loaders run in Node.js and can do everything that&amp;rsquo;s possible there.</source>
          <target state="translated">加载程序在Node.js中运行，可以执行所有可能的操作。</target>
        </trans-unit>
        <trans-unit id="af3ff785372e184c720ab72e8d8e6b85f3adc643" translate="yes" xml:space="preserve">
          <source>Loaders running in a worker pool are limited. Examples:</source>
          <target state="translated">在工人池中运行的加载器是有限的。例如:</target>
        </trans-unit>
        <trans-unit id="54ea0b910661d9aac53a3ca86c53b475f8fe56c6" translate="yes" xml:space="preserve">
          <source>Loaders should prefer to use &lt;code&gt;this.getLogger()&lt;/code&gt; for logging which is a shortcut to &lt;code&gt;compilation.getLogger()&lt;/code&gt; with loader path and processed file. This kind of logging is stored to the Stats and formatted accordingly. It can be filtered and exported by the webpack user.</source>
          <target state="translated">装载机应该更喜欢使用 &lt;code&gt;this.getLogger()&lt;/code&gt; 用于记录这是一个快捷方式 &lt;code&gt;compilation.getLogger()&lt;/code&gt; 与装载机路径和处理过的文件。这种日志记录存储到统计信息中并进行相应的格式化。Webpack用户可以对其进行过滤和导出。</target>
        </trans-unit>
        <trans-unit id="df05e5496cc277768c81c08b1521d94c41cf93b8" translate="yes" xml:space="preserve">
          <source>Loaders were originally designed to also work as Babel transforms. Therefore if you write a loader that works for both, you can use this property to know if there is access to additional loaderContext and webpack features.</source>
          <target state="translated">加载器最初被设计成也可以作为Babel变换工作。因此,如果你写的加载器可以同时适用于这两种情况,你可以使用这个属性来了解是否可以访问额外的 loaderContext 和 webpack 功能。</target>
        </trans-unit>
        <trans-unit id="1fd10bdf49779c69c5002cd39a74d7fbf13068d5" translate="yes" xml:space="preserve">
          <source>Loaders were originally designed to also work as Babel transforms. Therefore, if you write a loader that works for both, you can use this property to know if there is access to additional loaderContext and webpack features.</source>
          <target state="translated">加载器最初被设计成也可以作为巴别变换工作。因此,如果你写的加载器可以同时适用于这两种情况,你可以使用这个属性来了解是否可以访问额外的 loaderContext 和 webpack 功能。</target>
        </trans-unit>
        <trans-unit id="2dbd1e5053c497540c53b17284ee2f178ce2faff" translate="yes" xml:space="preserve">
          <source>Loaders were originally designed to work in synchronous loader pipelines, like Node.js (using &lt;a href=&quot;https://github.com/webpack/enhanced-require&quot;&gt;enhanced-require&lt;/a&gt;), &lt;em&gt;and&lt;/em&gt; asynchronous pipelines, like in webpack. However, since expensive synchronous computations are a bad idea in a single-threaded environment like Node.js, we advise making your loader asynchronous if possible. Synchronous loaders are ok if the amount of computation is trivial.</source>
          <target state="translated">加载程序最初设计为可在同步加载程序管道（如Node.js（使用&lt;a href=&quot;https://github.com/webpack/enhanced-require&quot;&gt;Enhanced-require&lt;/a&gt;））&lt;em&gt;和&lt;/em&gt;异步管道（如Webpack）中工作。但是，由于昂贵的同步计算在像Node.js这样的单线程环境中不是一个好主意，因此建议您尽可能使加载程序异步。如果计算量很小，那么同步加载程序就可以了。</target>
        </trans-unit>
        <trans-unit id="47a1fe72d58084ada50b31d636dfc360f476ba49" translate="yes" xml:space="preserve">
          <source>Loaders were originally designed to work in synchronous loader pipelines, like Node.js (using &lt;a href=&quot;https://github.com/webpack/enhanced-require&quot;&gt;enhanced-require&lt;/a&gt;), &lt;em&gt;and&lt;/em&gt; asynchronous pipelines, like in webpack. However, since expensive synchronous computations are a bad idea in a single-threaded environment like Node.js, we advise to make your loader asynchronously if possible. Synchronous loaders are ok if the amount of computation is trivial.</source>
          <target state="translated">加载程序最初设计为可在同步加载程序管道（如Node.js（使用&lt;a href=&quot;https://github.com/webpack/enhanced-require&quot;&gt;增强型require&lt;/a&gt;））&lt;em&gt;和&lt;/em&gt;异步管道（如webpack）中工作。但是，由于昂贵的同步计算在像Node.js这样的单线程环境中不是一个好主意，因此建议您尽可能使异步加载器成为可能。如果计算量很小，那么同步加载程序就可以了。</target>
        </trans-unit>
        <trans-unit id="ef1be60bbd337c65d9dc5b5f26b2a0b4b1b565d8" translate="yes" xml:space="preserve">
          <source>Loading (asynchronous)</source>
          <target state="translated">加载(异步)</target>
        </trans-unit>
        <trans-unit id="3e683799b6440bfdb45ff32020713072b7ad918e" translate="yes" xml:space="preserve">
          <source>Loading CSS</source>
          <target state="translated">加载CSS</target>
        </trans-unit>
        <trans-unit id="1bbec1f2925e33de29cc103440eaad38ddc86d8c" translate="yes" xml:space="preserve">
          <source>Loading Data</source>
          <target state="translated">加载数据</target>
        </trans-unit>
        <trans-unit id="7d51e9a993f0136e10372f7e9d94384de46c4c08" translate="yes" xml:space="preserve">
          <source>Loading Fonts</source>
          <target state="translated">加载字体</target>
        </trans-unit>
        <trans-unit id="f7a4ff542e1f688b5141f8e55e1a09aeafc365ff" translate="yes" xml:space="preserve">
          <source>Loading Images</source>
          <target state="translated">加载图片</target>
        </trans-unit>
        <trans-unit id="b71d9c5c490fb3ace55aaa4475ed74cd92ebc250" translate="yes" xml:space="preserve">
          <source>Loading Polyfills</source>
          <target state="translated">装入Polyfills</target>
        </trans-unit>
        <trans-unit id="dcae35a8da3975851c0568a2b9dc25768f4d8592" translate="yes" xml:space="preserve">
          <source>Loading remote modules is considered asynchronous operation. When using a remote module these asynchronous operations will be placed in the next chunk loading operation(s) that is between the remote module and the entrypoint. It's not possible to use a remote module without a chunk loading operation.</source>
          <target state="translated">加载远程模块被认为是异步操作。当使用远程模块时,这些异步操作将被放在远程模块和入口点之间的下一个分块加载操作中。不可能在没有分块加载操作的情况下使用远程模块。</target>
        </trans-unit>
        <trans-unit id="e3759a5621c7d8e195efc7544602f9a59f770ecf" translate="yes" xml:space="preserve">
          <source>Loads &lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; like JavaScript</source>
          <target state="translated">像JavaScript一样加载&lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95e1bd68466cd0f30bcf915449c36761daa19154" translate="yes" xml:space="preserve">
          <source>Loads a Sass/SCSS file and compiles it to CSS.</source>
          <target state="translated">加载Sass/SCSS文件并将其编译为CSS。</target>
        </trans-unit>
        <trans-unit id="6b2904edad9c782e3b8dc05eb8a40a537ce14354" translate="yes" xml:space="preserve">
          <source>Loads the imported bundle asynchronously</source>
          <target state="translated">异步加载导入的 bundle。</target>
        </trans-unit>
        <trans-unit id="a845830aac9034a343422233c2c770f1f95e729e" translate="yes" xml:space="preserve">
          <source>Local Installation</source>
          <target state="translated">本地安装</target>
        </trans-unit>
        <trans-unit id="fe8e780964b4db7bf4ccc85f44465753d35754db" translate="yes" xml:space="preserve">
          <source>Locations for the cache. Defaults to &lt;code&gt;path.resolve(cache.cacheDirectory, cache.name)&lt;/code&gt;.</source>
          <target state="translated">缓存的位置。默认为 &lt;code&gt;path.resolve(cache.cacheDirectory, cache.name)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e2f503db9aa3949f0c591890ed93126bd2b337b2" translate="yes" xml:space="preserve">
          <source>Locking Down Your Website Scripts with CSP, Hashes, Nonces and Report URI</source>
          <target state="translated">使用CSP、哈希值、Nonces和报告URI锁定您的网站脚本。</target>
        </trans-unit>
        <trans-unit id="efc845bda299735eb007caff62fd3c8e3838c793" translate="yes" xml:space="preserve">
          <source>Logger Interface</source>
          <target state="translated">记录仪接口</target>
        </trans-unit>
        <trans-unit id="a793db9f87d136f755e5433d27a904e7f15be4c7" translate="yes" xml:space="preserve">
          <source>Logger methods</source>
          <target state="translated">记录仪方法</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="c25c477d308d53c228d368bac18b43a50b2c2bbd" translate="yes" xml:space="preserve">
          <source>Logging API is available since the release of webpack 4.37. When &lt;code&gt;logging&lt;/code&gt; is enabled in &lt;a href=&quot;../configuration/stats#statslogging&quot;&gt;&lt;code&gt;stats configuration&lt;/code&gt;&lt;/a&gt; and/or when &lt;a href=&quot;../configuration/other-options#infrastructurelogging&quot;&gt;&lt;code&gt;infrastructure logging&lt;/code&gt;&lt;/a&gt; is enabled, loaders may log messages which will be printed out in the respective logger format (stats, infrastructure).</source>
          <target state="translated">自Webpack 4.37发行以来，日志记录API可用。当在&lt;a href=&quot;../configuration/stats#statslogging&quot;&gt; &lt;code&gt;stats configuration&lt;/code&gt; &lt;/a&gt;启用 &lt;code&gt;logging&lt;/code&gt; 和/或启用&lt;a href=&quot;../configuration/other-options#infrastructurelogging&quot;&gt; &lt;code&gt;infrastructure logging&lt;/code&gt; &lt;/a&gt;时，加载程序可能会记录消息，这些消息将以相应的记录器格式（统计信息，基础结构）打印出来。</target>
        </trans-unit>
        <trans-unit id="047f7d6400573cedc28a03f5aec30d3fe6bba8d9" translate="yes" xml:space="preserve">
          <source>Logging API is available since the release of webpack 4.37. When &lt;code&gt;logging&lt;/code&gt; is enabled in &lt;a href=&quot;../configuration/stats#statslogging&quot;&gt;&lt;code&gt;stats configuration&lt;/code&gt;&lt;/a&gt; and/or when &lt;a href=&quot;../configuration/other-options#infrastructurelogging&quot;&gt;&lt;code&gt;infrastructure logging&lt;/code&gt;&lt;/a&gt; is enabled, plugins may log messages which will be printed out in the respective logger format (stats, infrastructure).</source>
          <target state="translated">自Webpack 4.37发行以来，日志记录API可用。当在&lt;a href=&quot;../configuration/stats#statslogging&quot;&gt; &lt;code&gt;stats configuration&lt;/code&gt; &lt;/a&gt;启用 &lt;code&gt;logging&lt;/code&gt; 和/或启用&lt;a href=&quot;../configuration/other-options#infrastructurelogging&quot;&gt; &lt;code&gt;infrastructure logging&lt;/code&gt; &lt;/a&gt;时，插件可能会记录将以相应记录器格式（统计信息，基础结构）打印出来的消息。</target>
        </trans-unit>
        <trans-unit id="b74fdb99967614496cf58dee5c598239e13a6fec" translate="yes" xml:space="preserve">
          <source>Logging output exportable as part of the &lt;code&gt;stats.json&lt;/code&gt;</source>
          <target state="translated">记录输出可导出为 &lt;code&gt;stats.json&lt;/code&gt; 的一部分</target>
        </trans-unit>
        <trans-unit id="ea4a8335bf5055498dd63426ed5f6a590598fea6" translate="yes" xml:space="preserve">
          <source>Logging output is an additional way to display messages to the end users.</source>
          <target state="translated">日志输出是向终端用户显示信息的另一种方式。</target>
        </trans-unit>
        <trans-unit id="6499a1321bf7c41ee0316581d5232990396dc1f7" translate="yes" xml:space="preserve">
          <source>Long Term Caching</source>
          <target state="translated">长期缓存</target>
        </trans-unit>
        <trans-unit id="00f3ff48131c599bc893a3fab182268b3f63b83d" translate="yes" xml:space="preserve">
          <source>Longer compilation time</source>
          <target state="translated">编制时间较长</target>
        </trans-unit>
        <trans-unit id="0c31d5a4c93b2e22d597f2bbaf69e6630c087b1a" translate="yes" xml:space="preserve">
          <source>Looks complex, yes. We were already able to reduce some complexity due to a assumption we can make: Only &lt;code&gt;node&lt;/code&gt; need a CommonJs version and can detect production/development with &lt;code&gt;process.env&lt;/code&gt;.</source>
          <target state="translated">看起来很复杂，是的。由于我们可以做出这样的假设，我们已经能够降低一些复杂性：仅 &lt;code&gt;node&lt;/code&gt; 需要CommonJs版本，并且可以使用 &lt;code&gt;process.env&lt;/code&gt; 检测生产/开发。</target>
        </trans-unit>
        <trans-unit id="7c3e6e5dabb7bc746dff41b2a1ffb6076a8d492f" translate="yes" xml:space="preserve">
          <source>Low-level concepts</source>
          <target state="translated">低层次的概念</target>
        </trans-unit>
        <trans-unit id="89690ac571dcf4c9c40c842efed3f11171d07b29" translate="yes" xml:space="preserve">
          <source>MIT</source>
          <target state="translated">MIT</target>
        </trans-unit>
        <trans-unit id="f9cfe0891192e57a66acda3a681bb6fc527e509f" translate="yes" xml:space="preserve">
          <source>MIT (&lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;http://www.opensource.org/licenses/mit-license.php&lt;/a&gt;)</source>
          <target state="translated">麻省理工学院（&lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;http://www.opensource.org/licenses/mit-license.php&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="bedd57ad9d033edd85277ae8248cacaa182324f4" translate="yes" xml:space="preserve">
          <source>Magic Comments</source>
          <target state="translated">魔法评论</target>
        </trans-unit>
        <trans-unit id="3a814d392b75feac12692e66d6c20d77a8369430" translate="yes" xml:space="preserve">
          <source>Make all exports from the dependency available in the current scope. The &lt;code&gt;require&lt;/code&gt; label can occur before a string. The dependency must export values with the &lt;code&gt;export&lt;/code&gt; label. CommonJS or AMD modules cannot be consumed.</source>
          <target state="translated">使依赖项中的所有导出在当前作用域中可用。该 &lt;code&gt;require&lt;/code&gt; 的标签可以在字符串前发生。依赖项必须使用 &lt;code&gt;export&lt;/code&gt; 标签导出值。CommonJS或AMD模块不能使用。</target>
        </trans-unit>
        <trans-unit id="cfb2f4e4030c7b46dbf1ba28a2a8d9414c53cf56" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;devServer.publicPath&lt;/code&gt; always starts and ends with a forward slash.</source>
          <target state="translated">确保 &lt;code&gt;devServer.publicPath&lt;/code&gt; 始终以正斜杠开头和结尾。</target>
        </trans-unit>
        <trans-unit id="5b29ac58651e9cdaefcfd5d8e27916e8b2719912" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;publicPath&lt;/code&gt; always starts and ends with a forward slash.</source>
          <target state="translated">确保 &lt;code&gt;publicPath&lt;/code&gt; 始终以正斜杠开头和结尾。</target>
        </trans-unit>
        <trans-unit id="252d377f5608cfba2bee356f62a571cc39fafd2e" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;runtime&lt;/code&gt; must not point to an existing entry point name, for example the below config would throw an error:</source>
          <target state="translated">确保 &lt;code&gt;runtime&lt;/code&gt; 一定不要指向现有的入口点名称，例如，以下配置将引发错误：</target>
        </trans-unit>
        <trans-unit id="82de55ca19a0293cb580f6a86046535d6cadc76f" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;a href=&quot;#devserverhot&quot;&gt;&lt;code&gt;devServer.hot&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt; because &lt;code&gt;devServer.injectHot&lt;/code&gt; only works with HMR.</source>
          <target state="translated">确保将&lt;a href=&quot;#devserverhot&quot;&gt; &lt;code&gt;devServer.hot&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;true&lt;/code&gt; ,因为 &lt;code&gt;devServer.injectHot&lt;/code&gt; 仅适用于HMR。</target>
        </trans-unit>
        <trans-unit id="8d8a0220d8bd55d5aa0014b7718826f3edb161c8" translate="yes" xml:space="preserve">
          <source>Make sure that the hashing function will have &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;digest&lt;/code&gt; methods available.</source>
          <target state="translated">确保哈希函数将具有可用的 &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;digest&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="80ca581877d75fc77f1d3afdd7b023e6302f9de5" translate="yes" xml:space="preserve">
          <source>Make sure the entry chunk is cheap to emit by keeping it small. The following code block extracts a chunk containing only the runtime with &lt;em&gt;all other chunks as children&lt;/em&gt;:</source>
          <target state="translated">确保条目块很小，以使其便宜发出。以下代码块提取仅包含运行时的&lt;em&gt;块，&lt;/em&gt;并将&lt;em&gt;所有其他块作为子块&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="ae626bf4ec2fdd255e35ade6adc6ac167c376ee4" translate="yes" xml:space="preserve">
          <source>Make sure the entry chunk is cheap to emit by keeping it small. The following configuration creates an additional chunk for the runtime code, so it's cheap to generate:</source>
          <target state="translated">通过保持较小的入口chunk来确保其发出的便宜。以下配置为运行时代码创建了一个额外的chunk,所以它的生成很便宜。</target>
        </trans-unit>
        <trans-unit id="822583219da604edb033971af307b5c77720f385" translate="yes" xml:space="preserve">
          <source>Make sure to have a &lt;code&gt;webpack.config.js&lt;/code&gt; file. If you haven't already, use this as a minimal example to get started:</source>
          <target state="translated">确保有一个 &lt;code&gt;webpack.config.js&lt;/code&gt; 文件。如果您还没有，请使用以下示例作为入门：</target>
        </trans-unit>
        <trans-unit id="946510ee236f1819da59b74df08b6c7513b1e8b6" translate="yes" xml:space="preserve">
          <source>Make sure to read the &lt;a href=&quot;../guides/caching&quot;&gt;Caching guide&lt;/a&gt; for details. There are more steps involved than just setting this option.</source>
          <target state="translated">请务必阅读&lt;a href=&quot;../guides/caching&quot;&gt;缓存指南&lt;/a&gt;以获取详细信息。不仅仅是设置此选项，还涉及更多步骤。</target>
        </trans-unit>
        <trans-unit id="eb7f65d09dd256be015476f59d3999b13b6a1f01" translate="yes" xml:space="preserve">
          <source>Make sure you are transforming as few files as possible. Because you are probably matching &lt;code&gt;/\.js$/&lt;/code&gt;, you might be transforming the &lt;code&gt;node_modules&lt;/code&gt; folder or other unwanted source.</source>
          <target state="translated">确保要转换的文件越少越好。因为您可能匹配 &lt;code&gt;/\.js$/&lt;/code&gt; ，所以您可能正在转换 &lt;code&gt;node_modules&lt;/code&gt; 文件夹或其他不需要的源。</target>
        </trans-unit>
        <trans-unit id="b79b7df1fb608455d299605f686bab5b4592d01d" translate="yes" xml:space="preserve">
          <source>Make sure you are transforming as few files as possible. Because you are probably matching &lt;code&gt;/\.m?js$/&lt;/code&gt;, you might be transforming the &lt;code&gt;node_modules&lt;/code&gt; folder or other unwanted source.</source>
          <target state="translated">确保您要转换的文件越少越好。因为您可能匹配 &lt;code&gt;/\.m?js$/&lt;/code&gt; ，所以您可能正在转换 &lt;code&gt;node_modules&lt;/code&gt; 文件夹或其他不需要的源。</target>
        </trans-unit>
        <trans-unit id="f3d9587519bf75c639601b005cda3332a332b465" translate="yes" xml:space="preserve">
          <source>Make sure you have &lt;code&gt;webpack-bundle-analyzer&lt;/code&gt; installed in your project else CLI will prompt you to install it.</source>
          <target state="translated">确保在项目中安装了 &lt;code&gt;webpack-bundle-analyzer&lt;/code&gt; ，否则CLI会提示您安装它。</target>
        </trans-unit>
        <trans-unit id="f6280c01bee59d3b53076e6acddc249d8696da16" translate="yes" xml:space="preserve">
          <source>Make webpack_public_path, webpack_require, webpack_modules and webpack_chunk_load accessible. Ensures that &lt;code&gt;require.valueOf&lt;/code&gt; and &lt;code&gt;require.onError&lt;/code&gt; are not processed by other plugins.</source>
          <target state="translated">使webpack_public_path，webpack_require，webpack_modules和webpack_chunk_load可以访问。确保其他插件 &lt;code&gt;require.valueOf&lt;/code&gt; 和 &lt;code&gt;require.onError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e0acb01ff22fcc4a87589193b7ce051d619e6d0" translate="yes" xml:space="preserve">
          <source>Management API</source>
          <target state="translated">管理API</target>
        </trans-unit>
        <trans-unit id="e63e4519432a184f2c433088dda29083ad55f057" translate="yes" xml:space="preserve">
          <source>Manifest</source>
          <target state="translated">Manifest</target>
        </trans-unit>
        <trans-unit id="ca8b8b1969d3152a412da63d28e3ba85c007c8b9" translate="yes" xml:space="preserve">
          <source>Manifest file</source>
          <target state="translated">舱单文件</target>
        </trans-unit>
        <trans-unit id="87f354d46c42fbfb1bf5c0671d9c6ee8315ef72f" translate="yes" xml:space="preserve">
          <source>ManifestPlugin source</source>
          <target state="translated">来源ManifestPlugin</target>
        </trans-unit>
        <trans-unit id="6e60b4736a71b102618c37faacacdef5579361f4" translate="yes" xml:space="preserve">
          <source>Manually Bundling an Application</source>
          <target state="translated">手动捆绑应用程序</target>
        </trans-unit>
        <trans-unit id="310107ae364d0440f15c70ce87c9748401da211c" translate="yes" xml:space="preserve">
          <source>Many applications share a common components library which could be built as a container with each component exposed. Each application consumes components from the components library container. Changes to the components library can be separately deployed without the need to re-deploy all applications. The application automatically uses the up-to-date version of the components library.</source>
          <target state="translated">许多应用程序共享一个共同的组件库,它可以作为一个容器来构建,每个组件都暴露出来。每个应用程序都会消耗组件库容器中的组件。对组件库的更改可以单独部署,而不需要重新部署所有的应用程序。应用程序自动使用最新版本的组件库。</target>
        </trans-unit>
        <trans-unit id="5b2b1ee7a308a1557b02668d7c099c79efcc8803" translate="yes" xml:space="preserve">
          <source>Many frameworks and libraries have their own recommendations on how this should be accomplished within their methodologies. Here are a few examples:</source>
          <target state="translated">许多框架和库对如何在其方法论中实现这一点有自己的建议。下面是几个例子。</target>
        </trans-unit>
        <trans-unit id="14e014cc20f71d8ca3dd7c0b71a405ab4ab920a4" translate="yes" xml:space="preserve">
          <source>Many libraries will key off the &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; variable to determine what should be included in the library. For example, when &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; is not set to &lt;code&gt;'production'&lt;/code&gt; some libraries may add additional logging and testing to make debugging easier. However, with &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; set to &lt;code&gt;'production'&lt;/code&gt; they might drop or add significant portions of code to optimize how things run for your actual users. Since webpack v4, specifying &lt;a href=&quot;../configuration/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; automatically configures &lt;a href=&quot;../plugins/define-plugin&quot;&gt;&lt;code&gt;DefinePlugin&lt;/code&gt;&lt;/a&gt; for you:</source>
          <target state="translated">许多库将取消 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 变量的作用，以确定应在库中包含哪些内容。例如，当 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 未设置为 &lt;code&gt;'production'&lt;/code&gt; 某些库可能会添加其他日志记录和测试，从而使调试更加容易。但是，将 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 设置为 &lt;code&gt;'production'&lt;/code&gt; 它们可能会删除或添加大量代码，以优化实际用户的运行方式。从webpack v4开始，指定&lt;a href=&quot;../configuration/mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;自动为您配置&lt;a href=&quot;../plugins/define-plugin&quot;&gt; &lt;code&gt;DefinePlugin&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f9f96c5a8fb4fc499147bb5f30b9e2af4b9ea3d7" translate="yes" xml:space="preserve">
          <source>Many libraries will key off the &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; variable to determine what should be included in the library. For example, when not in &lt;em&gt;production&lt;/em&gt; some libraries may add additional logging and testing to make debugging easier. However, with &lt;code&gt;process.env.NODE_ENV === 'production'&lt;/code&gt; they might drop or add significant portions of code to optimize how things run for your actual users. Since webpack v4, specifying &lt;a href=&quot;../concepts/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; automatically configures &lt;a href=&quot;../plugins/define-plugin&quot;&gt;&lt;code&gt;DefinePlugin&lt;/code&gt;&lt;/a&gt; for you:</source>
          <target state="translated">许多库将取消 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 变量的作用，以确定应在库中包含哪些内容。例如，当不在&lt;em&gt;生产中&lt;/em&gt;时，某些库可能会添加其他日志记录和测试，以使调试更加容易。但是，使用 &lt;code&gt;process.env.NODE_ENV === 'production'&lt;/code&gt; 他们可能会删除或添加大量代码以优化实际用户的运行方式。从webpack v4开始，指定&lt;a href=&quot;../concepts/mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;自动为您配置&lt;a href=&quot;../plugins/define-plugin&quot;&gt; &lt;code&gt;DefinePlugin&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="1d4059026c1213bbae9cc7ab637dd03047c82897" translate="yes" xml:space="preserve">
          <source>Many of the options described above can be set as command line arguments. For example, &lt;a href=&quot;../configuration/optimization#optimizationminimize&quot;&gt;&lt;code&gt;optimization.minimize&lt;/code&gt;&lt;/a&gt; can be set with &lt;code&gt;--optimization-minimize&lt;/code&gt;, and &lt;a href=&quot;../configuration/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; can be set with &lt;code&gt;--mode&lt;/code&gt;. Run &lt;code&gt;npx webpack --help=verbose&lt;/code&gt; for a full list of CLI arguments.</source>
          <target state="translated">可以将上述许多选项设置为命令行参数。例如，&lt;a href=&quot;../configuration/optimization#optimizationminimize&quot;&gt; &lt;code&gt;optimization.minimize&lt;/code&gt; &lt;/a&gt;可以与设置 &lt;code&gt;--optimization-minimize&lt;/code&gt; ，并且&lt;a href=&quot;../configuration/mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;可与设置 &lt;code&gt;--mode&lt;/code&gt; 。运行 &lt;code&gt;npx webpack --help=verbose&lt;/code&gt; 获取CLI参数的完整列表。</target>
        </trans-unit>
        <trans-unit id="6d780701301972713cdbc0ae3c7389b66619eebb" translate="yes" xml:space="preserve">
          <source>Mapped Mode</source>
          <target state="translated">映射模式</target>
        </trans-unit>
        <trans-unit id="963d9a6c8a34a6ed30c515af04dca56c70bf84f8" translate="yes" xml:space="preserve">
          <source>Mark a function call as side-effect-free</source>
          <target state="translated">将函数调用标记为无副作用。</target>
        </trans-unit>
        <trans-unit id="618608e69b340a9be424c8115af4e3f3a5860027" translate="yes" xml:space="preserve">
          <source>Mark the file as side-effect-free</source>
          <target state="translated">将文件标记为无副作用</target>
        </trans-unit>
        <trans-unit id="17364a0ed47cace4977b52b7d04c3e4c0cf9a601" translate="yes" xml:space="preserve">
          <source>Markdown to HTML</source>
          <target state="translated">Markdown转HTML</target>
        </trans-unit>
        <trans-unit id="cc36dd72b53517c1d6192a8b7d906e1e7a0da7de" translate="yes" xml:space="preserve">
          <source>Markdown to Markdown</source>
          <target state="translated">Markdown到Markdown</target>
        </trans-unit>
        <trans-unit id="0a92293de8b4136e55553e18bf8625efa4074a82" translate="yes" xml:space="preserve">
          <source>Maximum number of concurrency optimization processes in one time</source>
          <target state="translated">一次最大并发优化进程数。</target>
        </trans-unit>
        <trans-unit id="9d97f3faa457c6067ea392c7bf35316b89c3cd88" translate="yes" xml:space="preserve">
          <source>Maximum number of concurrency optimization processes in one time.</source>
          <target state="translated">一次并发优化进程的最大数量。</target>
        </trans-unit>
        <trans-unit id="417a27fd94237019eac2aeb48145618064ce770e" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests at an entry point.</source>
          <target state="translated">一个切入点的最大并行请求数。</target>
        </trans-unit>
        <trans-unit id="39b4b99fb5a7c36ca7c820930ef486c0de5aa72d" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests at initial page load would be lower or equal to 3</source>
          <target state="translated">在初始页面加载时,并行请求的最大数量将小于或等于3个</target>
        </trans-unit>
        <trans-unit id="6b42a920d5f02e51f74d406360d946d17663d1e5" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests at initial page load would be lower or equal to 30</source>
          <target state="translated">初始页面加载时的最大并行请求数将低于或等于30次</target>
        </trans-unit>
        <trans-unit id="8b5988ecf09f5540a687dd0626ea109922c2f60c" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests when loading chunks on demand would be lower or equal to 30</source>
          <target state="translated">当按需加载块时,并行请求的最大数量将小于或等于30个</target>
        </trans-unit>
        <trans-unit id="4acff09df4af5d153c122c644a57ed6cbb73ab80" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests when loading chunks on demand would be lower or equal to 5</source>
          <target state="translated">当按需加载块时,并行请求的最大数量将小于或等于5个</target>
        </trans-unit>
        <trans-unit id="53e5d801cf66de5587e63c1241deca456bf33b9b" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests when on-demand loading.</source>
          <target state="translated">按需加载时的最大并行请求数。</target>
        </trans-unit>
        <trans-unit id="0aeceb4e4aabcb87b823ae720128ab6afd46bbe4" translate="yes" xml:space="preserve">
          <source>May or may not have a performance benefit since the incremental build times are pretty fast.</source>
          <target state="translated">可能会或不可能有性能上的好处,因为增量构建时间相当快。</target>
        </trans-unit>
        <trans-unit id="7deb2bdf4473183bac7f21bf1e7f2410c5696b08" translate="yes" xml:space="preserve">
          <source>Media Query Plugin</source>
          <target state="translated">媒体查询插件</target>
        </trans-unit>
        <trans-unit id="74d83fb1fba3fd8c10c28fbbc94d7844236c4d6b" translate="yes" xml:space="preserve">
          <source>Media Query Splitting Plugin</source>
          <target state="translated">媒体查询拆分插件</target>
        </trans-unit>
        <trans-unit id="89b6a31a2385bb15bff920bf63dc3c7fd8f71e62" translate="yes" xml:space="preserve">
          <source>MemoryCachePlugin</source>
          <target state="translated">MemoryCachePlugin</target>
        </trans-unit>
        <trans-unit id="1866f4cdcdf728e084eb4ddfe898153c121f9828" translate="yes" xml:space="preserve">
          <source>Merge chunks limit chunk count is lower than &lt;code&gt;options.maxChunks&lt;/code&gt;.</source>
          <target state="translated">合并块限制块数低于 &lt;code&gt;options.maxChunks&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f58d3872c3cffa3f3fb3907eea11a667876119e" translate="yes" xml:space="preserve">
          <source>Merge two or more configurations using webpack-merge e.g. &lt;code&gt;-c ./webpack.config.js -c ./webpack.test.config.js&lt;/code&gt;</source>
          <target state="translated">使用webpack-merge合并两个或多个配置，例如 &lt;code&gt;-c ./webpack.config.js -c ./webpack.test.config.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="72c15c26b1be17ec93256af96a27f44809134b52" translate="yes" xml:space="preserve">
          <source>MergeDuplicateChunksPlugin</source>
          <target state="translated">MergeDuplicateChunksPlugin</target>
        </trans-unit>
        <trans-unit id="6b2944822c2268fc33a870d79c11dc89f6d193c3" translate="yes" xml:space="preserve">
          <source>Merges chunks until each chunk has the minimum size of &lt;code&gt;minChunkSize&lt;/code&gt;.</source>
          <target state="translated">合并块，直到每个块的最小大小都为 &lt;code&gt;minChunkSize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5302240a42ef72c577209d8faf3e2380ec6d565" translate="yes" xml:space="preserve">
          <source>Migrate a configuration to a new version</source>
          <target state="translated">将配置迁移到新版本</target>
        </trans-unit>
        <trans-unit id="9578660b5607a28e9e8e3c2c9d41e3b29d296190" translate="yes" xml:space="preserve">
          <source>Migrate from &lt;code&gt;eslint-loader&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;eslint-loader&lt;/code&gt; 迁移</target>
        </trans-unit>
        <trans-unit id="bd8872c1945c6f1032933a096e68ec27f1eff364" translate="yes" xml:space="preserve">
          <source>Mimicking django's &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;, a value beginning with &lt;code&gt;.&lt;/code&gt; can be used as a subdomain wildcard. &lt;code&gt;.host.com&lt;/code&gt; will match &lt;code&gt;host.com&lt;/code&gt;, &lt;code&gt;www.host.com&lt;/code&gt;, and any other subdomain of &lt;code&gt;host.com&lt;/code&gt;.</source>
          <target state="translated">模仿django的 &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; （以开头的值） &lt;code&gt;.&lt;/code&gt; 可以用作子域通配符。 &lt;code&gt;.host.com&lt;/code&gt; 将匹配 &lt;code&gt;host.com&lt;/code&gt; ， &lt;code&gt;www.host.com&lt;/code&gt; 以及 &lt;code&gt;host.com&lt;/code&gt; 的任何其他子域。</target>
        </trans-unit>
        <trans-unit id="897d2e3b770f8d706d0588208662011475130755" translate="yes" xml:space="preserve">
          <source>MinChunkSizePlugin</source>
          <target state="translated">MinChunkSizePlugin</target>
        </trans-unit>
        <trans-unit id="23b5f7513083e7dfd8776fabc70196ac391d848d" translate="yes" xml:space="preserve">
          <source>MiniCssExtractPlugin</source>
          <target state="translated">MiniCssExtractPlugin</target>
        </trans-unit>
        <trans-unit id="7a3ea5ae4bbcb0b6c68d07df01c97a3626e4c95d" translate="yes" xml:space="preserve">
          <source>Minification</source>
          <target state="translated">Minification</target>
        </trans-unit>
        <trans-unit id="e530b56795c0e4512b9667907810a828b4609938" translate="yes" xml:space="preserve">
          <source>Minification with &lt;a href=&quot;https://github.com/babel/minify&quot;&gt;babel-minify&lt;/a&gt;</source>
          <target state="translated">用&lt;a href=&quot;https://github.com/babel/minify&quot;&gt;babel-minify缩小&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="107d6db35d646d528c9a51a63651dabd529d73be" translate="yes" xml:space="preserve">
          <source>Minify the Output</source>
          <target state="translated">最小化输出</target>
        </trans-unit>
        <trans-unit id="fcbb0549ad4161e42e588161939dc9c2778e58f5" translate="yes" xml:space="preserve">
          <source>Minimal Entry Chunk</source>
          <target state="translated">最小的进入块</target>
        </trans-unit>
        <trans-unit id="4c9b2f2cc924fdc5ae54de76fd616b11e14910ae" translate="yes" xml:space="preserve">
          <source>Minimal example</source>
          <target state="translated">最小的例子</target>
        </trans-unit>
        <trans-unit id="cbffcdb92559ac9186d82d2c23b42f651fca8808" translate="yes" xml:space="preserve">
          <source>Minimize CSS</source>
          <target state="translated">最小化CSS</target>
        </trans-unit>
        <trans-unit id="20c5acdf828152e49115784fc07b87c2d883e33d" translate="yes" xml:space="preserve">
          <source>Minimize javascript and switches loaders to minimizing</source>
          <target state="translated">最小化javascript并将加载器切换到最小化。</target>
        </trans-unit>
        <trans-unit id="a6ffa937e9ecc8d7e999b7abdd2959fc92f51275" translate="yes" xml:space="preserve">
          <source>Minimize the number of items in &lt;code&gt;resolve.modules&lt;/code&gt;, &lt;code&gt;resolve.extensions&lt;/code&gt;, &lt;code&gt;resolve.mainFiles&lt;/code&gt;, &lt;code&gt;resolve.descriptionFiles&lt;/code&gt; as they increase the number of filesystem calls.</source>
          <target state="translated">最小化 &lt;code&gt;resolve.modules&lt;/code&gt; ， &lt;code&gt;resolve.extensions&lt;/code&gt; ， &lt;code&gt;resolve.mainFiles&lt;/code&gt; ， &lt;code&gt;resolve.descriptionFiles&lt;/code&gt; 中的项目数，因为它们增加了文件系统调用的数量。</target>
        </trans-unit>
        <trans-unit id="3f8926d4f7df52b4d4427797a32c9c5b26cde838" translate="yes" xml:space="preserve">
          <source>Minimize the number of items in &lt;code&gt;resolve.modules&lt;/code&gt;, &lt;code&gt;resolve.extensions&lt;/code&gt;, &lt;code&gt;resolve.mainFiles&lt;/code&gt;, &lt;code&gt;resolve.descriptionFiles&lt;/code&gt;, as they increase the number of filesystem calls.</source>
          <target state="translated">最小化 &lt;code&gt;resolve.modules&lt;/code&gt; ， &lt;code&gt;resolve.extensions&lt;/code&gt; ， &lt;code&gt;resolve.mainFiles&lt;/code&gt; ， &lt;code&gt;resolve.descriptionFiles&lt;/code&gt; 中的项目数量，因为它们增加了文件系统调用的数量。</target>
        </trans-unit>
        <trans-unit id="8c97536d4a74005bbc859f9f508fe582df2fc09a" translate="yes" xml:space="preserve">
          <source>Minimize the number of preset/plugins</source>
          <target state="translated">尽量减少预设/插件的数量。</target>
        </trans-unit>
        <trans-unit id="06e3dae400a146ac9ee6b047a952a5c0082cebd0" translate="yes" xml:space="preserve">
          <source>Minimizes the chunks with &lt;code&gt;uglify.js&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;uglify.js&lt;/code&gt; 最小化块。</target>
        </trans-unit>
        <trans-unit id="4b3525bb3744266dcd052765cb2e967f4f415796" translate="yes" xml:space="preserve">
          <source>Minimizing For Production</source>
          <target state="translated">为生产而最小化</target>
        </trans-unit>
        <trans-unit id="f810335097d91ac6e93fe8a1e2e38603eee5be4f" translate="yes" xml:space="preserve">
          <source>Minimum number of chunks that must share a module before splitting.</source>
          <target state="translated">分割前必须共享一个模块的最小块数。</target>
        </trans-unit>
        <trans-unit id="60cabd1ecf30b7a89543cad33d76871146ea270c" translate="yes" xml:space="preserve">
          <source>Minimum size, in bytes, for a chunk to be generated.</source>
          <target state="translated">要生成的块的最小尺寸,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="814d5c9075ac58da08deb4e3d88f6089a78f380d" translate="yes" xml:space="preserve">
          <source>Mocha</source>
          <target state="translated">Mocha</target>
        </trans-unit>
        <trans-unit id="a7b93d2128e820f861fc8dfccd9f5521e89ad21f" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">Mode</target>
        </trans-unit>
        <trans-unit id="9ee01a8f4adb7ccb780dcbb703b82c147dd8837e" translate="yes" xml:space="preserve">
          <source>Mode to use</source>
          <target state="translated">使用模式</target>
        </trans-unit>
        <trans-unit id="e49038ebac8be34038eea485a820fd93f01def3f" translate="yes" xml:space="preserve">
          <source>Mode to use, either &quot;development&quot; or &quot;production&quot;</source>
          <target state="translated">使用模式,&quot;开发 &quot;或 &quot;生产&quot;</target>
        </trans-unit>
        <trans-unit id="c26cc3dae872232e9a0604d9099b87507b59d66a" translate="yes" xml:space="preserve">
          <source>Mode: development</source>
          <target state="translated">模式:发展</target>
        </trans-unit>
        <trans-unit id="c8c73771af79c4409a259ba6e572fbb79e19d3f6" translate="yes" xml:space="preserve">
          <source>Mode: none</source>
          <target state="translated">模式:无</target>
        </trans-unit>
        <trans-unit id="bb28adf7bbf9194f1592a3c19f4f63f75be0fca8" translate="yes" xml:space="preserve">
          <source>Mode: production</source>
          <target state="translated">模式:生产</target>
        </trans-unit>
        <trans-unit id="12be477918e3e557f481ef5393ea168e4142eb3c" translate="yes" xml:space="preserve">
          <source>Modernizr</source>
          <target state="translated">Modernizr</target>
        </trans-unit>
        <trans-unit id="79f5b225cffab11e22dc40b6f05abef1d33d1561" translate="yes" xml:space="preserve">
          <source>Modes</source>
          <target state="translated">Modes</target>
        </trans-unit>
        <trans-unit id="4822c7226bb2bbcfff3cd9616657a72a7e9a5988" translate="yes" xml:space="preserve">
          <source>Modify &lt;code&gt;tsconfig.json&lt;/code&gt;.</source>
          <target state="translated">修改 &lt;code&gt;tsconfig.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b07b0fa775d0050d5b01788a8d05c9619a09411b" translate="yes" xml:space="preserve">
          <source>Modify filename</source>
          <target state="translated">修改文件名</target>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="7ee83fed2e8bf53e577b314dd959ae5c55d31275" translate="yes" xml:space="preserve">
          <source>Module API</source>
          <target state="translated">模块API</target>
        </trans-unit>
        <trans-unit id="b646710f158e4e70a3d65e8db78db8f19e1de68c" translate="yes" xml:space="preserve">
          <source>Module Concatenation also applies. So that these 4 modules plus the entry module (and probably more dependencies) can be concatenated. &lt;strong&gt;&lt;code&gt;index.js&lt;/code&gt; has no code generated in the end&lt;/strong&gt;.</source>
          <target state="translated">模块串联也适用。这样就可以将这4个模块和入口模块（可能还有更多的依赖项）串联在一起。&lt;strong&gt; &lt;code&gt;index.js&lt;/code&gt; 最终没有生成任何代码&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="f4adaadd50180c6b35d9ed9d021b97f0ef636e2c" translate="yes" xml:space="preserve">
          <source>Module Contexts</source>
          <target state="translated">模块背景</target>
        </trans-unit>
        <trans-unit id="79664e04507d8c1100019dbeb51f9cb573abd95d" translate="yes" xml:space="preserve">
          <source>Module Definition Systems</source>
          <target state="translated">模块定义系统</target>
        </trans-unit>
        <trans-unit id="43378ad6990197335258de6b3ccc8f84184825b8" translate="yes" xml:space="preserve">
          <source>Module Federation</source>
          <target state="translated">模块联盟</target>
        </trans-unit>
        <trans-unit id="8204368a794ea2cb8e6559e5661f43a2445c7f87" translate="yes" xml:space="preserve">
          <source>Module Federation YouTube Playlist</source>
          <target state="translated">模块联盟YouTube播放列表</target>
        </trans-unit>
        <trans-unit id="fd61fca308543f04ec5078e95c6f6477a1b57472" translate="yes" xml:space="preserve">
          <source>Module Grouping Algorithm</source>
          <target state="translated">模块分组算法</target>
        </trans-unit>
        <trans-unit id="8a9d06dd836568efeccdb8afcf254285349fb16b" translate="yes" xml:space="preserve">
          <source>Module ID is a number in webpack (in contrast to NodeJS where it is a string -- the filename).</source>
          <target state="translated">模块ID在webpack中是一个数字(与NodeJS相反,在NodeJS中它是一个字符串--文件名)。</target>
        </trans-unit>
        <trans-unit id="471a50479d9fbae5891a0e77842ad130c3bc60a2" translate="yes" xml:space="preserve">
          <source>Module ID's type can be a &lt;code&gt;number&lt;/code&gt; or a &lt;code&gt;string&lt;/code&gt; depending on the &lt;a href=&quot;../configuration/optimization#optimizationmoduleids&quot;&gt;&lt;code&gt;optimization.moduleIds&lt;/code&gt;&lt;/a&gt; configuration.</source>
          <target state="translated">模块ID的类型可以是 &lt;code&gt;number&lt;/code&gt; 或 &lt;code&gt;string&lt;/code&gt; 具体取决于&lt;a href=&quot;../configuration/optimization#optimizationmoduleids&quot;&gt; &lt;code&gt;optimization.moduleIds&lt;/code&gt; &lt;/a&gt;配置。</target>
        </trans-unit>
        <trans-unit id="410f8eb19b4a638554cd700e8ba88f0ef130c290" translate="yes" xml:space="preserve">
          <source>Module Identifiers</source>
          <target state="translated">模块标识符</target>
        </trans-unit>
        <trans-unit id="b3c0d8ccd032afe728bc7677d8f1b82146252c2e" translate="yes" xml:space="preserve">
          <source>Module Methods</source>
          <target state="translated">模块方法</target>
        </trans-unit>
        <trans-unit id="ecd286e5b576aa168a3e80ebd6b8b9bef1e63dc4" translate="yes" xml:space="preserve">
          <source>Module Methods: export</source>
          <target state="translated">模块方法:导出</target>
        </trans-unit>
        <trans-unit id="945e0c3613d86df1ee95a47f2c0475a9e0e17749" translate="yes" xml:space="preserve">
          <source>Module Methods: import</source>
          <target state="translated">模块方法:导入</target>
        </trans-unit>
        <trans-unit id="0d57150cecad5465f78b64ad698220c2e9229222" translate="yes" xml:space="preserve">
          <source>Module Methods: import()</source>
          <target state="translated">模块方法:导入()</target>
        </trans-unit>
        <trans-unit id="9640648ce09230d5d92af45be6406d0ee61c2db2" translate="yes" xml:space="preserve">
          <source>Module Methods: require</source>
          <target state="translated">模块方法:需要</target>
        </trans-unit>
        <trans-unit id="abcaa7bd7f40b253308bbd0709b1d33e3a8d639d" translate="yes" xml:space="preserve">
          <source>Module Methods: require.cache</source>
          <target state="translated">模块方法:require.cache</target>
        </trans-unit>
        <trans-unit id="50b49ca3cff4218a18f3ff873b9927756ddb4009" translate="yes" xml:space="preserve">
          <source>Module Methods: require.context</source>
          <target state="translated">模块方法:require.context</target>
        </trans-unit>
        <trans-unit id="3623f20eabc51ba424dcb8e7cf729bdf14a91263" translate="yes" xml:space="preserve">
          <source>Module Methods: require.ensure</source>
          <target state="translated">模块方法:require.sure</target>
        </trans-unit>
        <trans-unit id="ba82f440989dc3a33ec2656360dff40b1815eed5" translate="yes" xml:space="preserve">
          <source>Module Methods: require.include</source>
          <target state="translated">模块方法:require.include</target>
        </trans-unit>
        <trans-unit id="1245c5418d703043405edcc532ff2cbceebb869d" translate="yes" xml:space="preserve">
          <source>Module Methods: require.resolve</source>
          <target state="translated">模块方法:require.resolve</target>
        </trans-unit>
        <trans-unit id="f109203fd3ac3a8580ea8b9542e1cafa496e5d73" translate="yes" xml:space="preserve">
          <source>Module Methods: require.resolveWeak</source>
          <target state="translated">模块方法:require.resolveWeak</target>
        </trans-unit>
        <trans-unit id="b5e362a11fb712a29a6a7c3e785bb6ff30aa5eae" translate="yes" xml:space="preserve">
          <source>Module Objects</source>
          <target state="translated">模块对象</target>
        </trans-unit>
        <trans-unit id="15d7561ef70bec9f7ca7c6066aca420c78fe0cbf" translate="yes" xml:space="preserve">
          <source>Module Options</source>
          <target state="translated">模块选项</target>
        </trans-unit>
        <trans-unit id="288e4a8c6676ea4eb83392ffcf2395bf08c232ab" translate="yes" xml:space="preserve">
          <source>Module Resolution</source>
          <target state="translated">模块分辨率</target>
        </trans-unit>
        <trans-unit id="be778ece53ab9c5d58fb887a3aea4ee7cb771a1b" translate="yes" xml:space="preserve">
          <source>Module Variables</source>
          <target state="translated">模块变量</target>
        </trans-unit>
        <trans-unit id="ce0ddf2557a4c8392f5626e1536ebc449604872d" translate="yes" xml:space="preserve">
          <source>Module and Chunk information</source>
          <target state="translated">模块和块信息</target>
        </trans-unit>
        <trans-unit id="d14e420dd26410ed804a420f2a1a3311b5e89311" translate="yes" xml:space="preserve">
          <source>Module loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result (resource with applied transformations) to the next one, and so forth. Finally, webpack expects JavaScript to be returned by the last loader in the chain.</source>
          <target state="translated">模块加载器可以连锁。链中的每个加载器都会对处理过的资源进行转换。一个链以相反的顺序执行。第一个加载器将它的结果(应用了转换的资源)传递给下一个加载器,以此类推。最后,webpack希望JavaScript能由链中最后一个加载器返回。</target>
        </trans-unit>
        <trans-unit id="fcb0e5932cf3bd36e4da09bd5f327d6bd14f174c" translate="yes" xml:space="preserve">
          <source>Module names are hashed into small numeric values.</source>
          <target state="translated">模块名称被哈希成小数值。</target>
        </trans-unit>
        <trans-unit id="c7e1fc9a33becfe3c9b761e74ed828d7c64ecc1a" translate="yes" xml:space="preserve">
          <source>Module paths</source>
          <target state="translated">模块路径</target>
        </trans-unit>
        <trans-unit id="c4b27dc35a86c4ced295147d986884bc2abd55cf" translate="yes" xml:space="preserve">
          <source>Module proof library.</source>
          <target state="translated">模块证明库。</target>
        </trans-unit>
        <trans-unit id="19faa7f6d4eb5a774076d466ac8eb4fd017c1f43" translate="yes" xml:space="preserve">
          <source>Module request</source>
          <target state="translated">模块请求</target>
        </trans-unit>
        <trans-unit id="c3de759bd2bd5a702bb8b6648d1223097f812b3e" translate="yes" xml:space="preserve">
          <source>Module requests in shared:</source>
          <target state="translated">模块请求在共享。</target>
        </trans-unit>
        <trans-unit id="9566babfeec0cbd65144281e6c12569d5ca92e82" translate="yes" xml:space="preserve">
          <source>Module requests with trailing &lt;code&gt;/&lt;/code&gt; in shared will match all module requests with this prefix.</source>
          <target state="translated">尾随 &lt;code&gt;/&lt;/code&gt; in共享的模块请求将匹配所有带有此前缀的模块请求。</target>
        </trans-unit>
        <trans-unit id="c778ecf88b04fc7e521411638a1b843652b456c7" translate="yes" xml:space="preserve">
          <source>ModuleConcatenationPlugin</source>
          <target state="translated">ModuleConcatenationPlugin</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="cb2bca09fe58c99a48713d7ecdb369a58396da80" translate="yes" xml:space="preserve">
          <source>Modules are searched for inside all directories specified in &lt;a href=&quot;../configuration/resolve#resolve-modules&quot;&gt;&lt;code&gt;resolve.modules&lt;/code&gt;&lt;/a&gt;. You can replace the original module path by an alternate path by creating an alias for it using &lt;a href=&quot;../configuration/resolve#resolve-alias&quot;&gt;&lt;code&gt;resolve.alias&lt;/code&gt;&lt;/a&gt; configuration option.</source>
          <target state="translated">在&lt;a href=&quot;../configuration/resolve#resolve-modules&quot;&gt; &lt;code&gt;resolve.modules&lt;/code&gt; 中&lt;/a&gt;指定的所有目录中搜索模块。您可以使用&lt;a href=&quot;../configuration/resolve#resolve-alias&quot;&gt; &lt;code&gt;resolve.alias&lt;/code&gt; &lt;/a&gt;配置选项为其创建别名，从而用替代路径替换原始模块路径。</target>
        </trans-unit>
        <trans-unit id="16d6fba6b0bedb48cbb1415276d6c585d1e5edc4" translate="yes" xml:space="preserve">
          <source>Modules are searched for inside all directories specified in &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt;&lt;code&gt;resolve.modules&lt;/code&gt;&lt;/a&gt;. You can replace the original module path by an alternate path by creating an alias for it using the &lt;a href=&quot;../configuration/resolve#resolvealias&quot;&gt;&lt;code&gt;resolve.alias&lt;/code&gt;&lt;/a&gt; configuration option.</source>
          <target state="translated">在&lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt; &lt;code&gt;resolve.modules&lt;/code&gt; 中&lt;/a&gt;指定的所有目录中搜索模块。您可以使用&lt;a href=&quot;../configuration/resolve#resolvealias&quot;&gt; &lt;code&gt;resolve.alias&lt;/code&gt; &lt;/a&gt;配置选项为其创建别名，从而用替代路径替换原始模块路径。</target>
        </trans-unit>
        <trans-unit id="ec16722362e1438cf1ffdf48e33b168fc8353eff" translate="yes" xml:space="preserve">
          <source>Modules that are included in every parent chunk are removed from the chunk.</source>
          <target state="translated">每个父块中包含的模块都会从该块中删除。</target>
        </trans-unit>
        <trans-unit id="dc0e90da593346f66fc7676c144617eafa287ccf" translate="yes" xml:space="preserve">
          <source>More &lt;a href=&quot;#examples&quot;&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">更多&lt;a href=&quot;#examples&quot;&gt; &lt;code&gt;examples&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="65607507695dbb68853f7200e33956e39fd6a15d" translate="yes" xml:space="preserve">
          <source>More Examples</source>
          <target state="translated">更多例子</target>
        </trans-unit>
        <trans-unit id="aecacc578fafc86000f18d7278b20350137419df" translate="yes" xml:space="preserve">
          <source>More information about the &lt;code&gt;ignoreWarnings&lt;/code&gt; option can be found &lt;a href=&quot;../configuration/other-options#ignorewarnings&quot;&gt;here&lt;/a&gt;</source>
          <target state="translated">可以在&lt;a href=&quot;../configuration/other-options#ignorewarnings&quot;&gt;这里&lt;/a&gt;找到有关 &lt;code&gt;ignoreWarnings&lt;/code&gt; 选项的更多信息。</target>
        </trans-unit>
        <trans-unit id="70522f34120a549e2600e547c248ca78f144af63" translate="yes" xml:space="preserve">
          <source>More information and examples &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">更多信息和示例&lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;在这里&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="979e421e3c8ef44e0883aba3714dcb57450f1e48" translate="yes" xml:space="preserve">
          <source>More likely you will be disrupted by this second issue. It is natural to expect relative references to be resolved against the &lt;code&gt;.scss&lt;/code&gt; file in which they are specified (like in regular &lt;code&gt;.css&lt;/code&gt; files). Thankfully there are a two solutions to this problem:</source>
          <target state="translated">第二个问题很有可能会打扰您。很自然地希望相对引用会针对指定了它们的 &lt;code&gt;.scss&lt;/code&gt; 文件进行解析（就像在常规 &lt;code&gt;.css&lt;/code&gt; 文件中一样）。幸运的是，有两个解决方案可以解决此问题：</target>
        </trans-unit>
        <trans-unit id="2c01f4257ff180535de3f5b45fd1bee6f7933c67" translate="yes" xml:space="preserve">
          <source>Most tools get the ESM version. Node.js is an exception here. It gets a CommonJs version when using &lt;code&gt;require()&lt;/code&gt;. This will lead to two instances of these package when referencing it with &lt;code&gt;require()&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt;, but that doesn't hurt as the package doesn't have state.</source>
          <target state="translated">大多数工具会获得ESM版本。Node.js在这里是一个例外。使用 &lt;code&gt;require()&lt;/code&gt; 时，它将获得CommonJs版本。当使用 &lt;code&gt;require()&lt;/code&gt; 和 &lt;code&gt;import&lt;/code&gt; 引用这些包时，将导致这些包的两个实例，但这不会造成伤害，因为该包没有状态。</target>
        </trans-unit>
        <trans-unit id="d6a06199cc127e571d3588aef63c79108675eabc" translate="yes" xml:space="preserve">
          <source>Motivation</source>
          <target state="translated">Motivation</target>
        </trans-unit>
        <trans-unit id="b9e79b0fb30bd5b519b2cc3654c5e8b6ad96cbc3" translate="yes" xml:space="preserve">
          <source>Move common modules into the parent chunk</source>
          <target state="translated">将通用模块移动到父块中</target>
        </trans-unit>
        <trans-unit id="32cd6988ffa7e6963a92d2c5062e0af6c93ddf04" translate="yes" xml:space="preserve">
          <source>Moved to &lt;a href=&quot;#managedpaths&quot;&gt;snapshot.managedPaths&lt;/a&gt;</source>
          <target state="translated">移至&lt;a href=&quot;#managedpaths&quot;&gt;snapshot.managedPaths&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14d62d3acc8060c89746323fa3392fffb7aa3569" translate="yes" xml:space="preserve">
          <source>Multi Page Application</source>
          <target state="translated">多页应用</target>
        </trans-unit>
        <trans-unit id="51244434835571b55673043584edfd8145243326" translate="yes" xml:space="preserve">
          <source>MultiCompiler</source>
          <target state="translated">MultiCompiler</target>
        </trans-unit>
        <trans-unit id="af261911aa86e4785c88244cbcfad54e0b65d198" translate="yes" xml:space="preserve">
          <source>MultiEntryPlugin</source>
          <target state="translated">MultiEntryPlugin</target>
        </trans-unit>
        <trans-unit id="31bec9db1d695359396d3a884e25be81f75fa5c4" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;DllPlugins&lt;/code&gt; and multiple &lt;code&gt;DllReferencePlugins&lt;/code&gt;.</source>
          <target state="translated">多个 &lt;code&gt;DllPlugins&lt;/code&gt; 和多个 &lt;code&gt;DllReferencePlugins&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7d0845e7fa07727d2f4c51ad7c374c8efded058" translate="yes" xml:space="preserve">
          <source>Multiple Common Chunks</source>
          <target state="translated">多个共同块</target>
        </trans-unit>
        <trans-unit id="70919a073b717374fafc07a125e1979358461434" translate="yes" xml:space="preserve">
          <source>Multiple Compilations</source>
          <target state="translated">多重汇编</target>
        </trans-unit>
        <trans-unit id="33e334d48711f0b0422dd14c11adb7d2e27859ad" translate="yes" xml:space="preserve">
          <source>Multiple Entry Points</source>
          <target state="translated">多个入口点</target>
        </trans-unit>
        <trans-unit id="d0254d4ee6b52c76a42b92fe63abfae1fba4ee5e" translate="yes" xml:space="preserve">
          <source>Multiple Entry Points with Commons Chunk</source>
          <target state="translated">多个入口点与Commons Chunk</target>
        </trans-unit>
        <trans-unit id="9f602c068fcc7878bf5f40d9c133c2474881e45a" translate="yes" xml:space="preserve">
          <source>Multiple Instances</source>
          <target state="translated">多个实例</target>
        </trans-unit>
        <trans-unit id="074fe87b70c09f5b65ca99d9e5bdd7e02086a9ed" translate="yes" xml:space="preserve">
          <source>Multiple Output Languages</source>
          <target state="translated">多种输出语言</target>
        </trans-unit>
        <trans-unit id="52629750e553b3ad6a766ef3b9111c449d4aef13" translate="yes" xml:space="preserve">
          <source>Multiple Targets</source>
          <target state="translated">多个目标</target>
        </trans-unit>
        <trans-unit id="7af4468c4f3ebf1ae604743e81c25292dbff7615" translate="yes" xml:space="preserve">
          <source>Multiple callbacks can be added. They will be executed in the order of addition.</source>
          <target state="translated">可以添加多个回调。它们将按照添加的顺序执行。</target>
        </trans-unit>
        <trans-unit id="8e64779794799dba0693b7d9156859c1a67af6a8" translate="yes" xml:space="preserve">
          <source>Multiple compressed versions of assets for different algorithm</source>
          <target state="translated">不同算法的资产的多个压缩版本</target>
        </trans-unit>
        <trans-unit id="f32a7f7893816cdc2e78105a9f31fd95e5aa5e86" translate="yes" xml:space="preserve">
          <source>Multiple configurations will &lt;strong&gt;not be run in parallel&lt;/strong&gt;. Each configuration is only processed after the previous one has finished processing. To process them in parallel, you can use a third-party solution like &lt;a href=&quot;https://www.npmjs.com/package/parallel-webpack&quot;&gt;parallel-webpack&lt;/a&gt;.</source>
          <target state="translated">多个配置&lt;strong&gt;不会并行运行&lt;/strong&gt;。仅在上一个配置完成处理后才处理每个配置。要并行处理它们，可以使用第三方解决方案，例如&lt;a href=&quot;https://www.npmjs.com/package/parallel-webpack&quot;&gt;parallel-webpack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f0d561fb483e8f39bc1167c92ff7be77ecdb9b1" translate="yes" xml:space="preserve">
          <source>Multiple file types per entry</source>
          <target state="translated">每个条目有多种文件类型</target>
        </trans-unit>
        <trans-unit id="d81a1d105716cb263dbe1b2bcae71f3051d276df" translate="yes" xml:space="preserve">
          <source>Multiple requires of the same module result in only one module execution and only one export. Therefore a cache in the runtime exists. Removing values from this cache causes new module execution and a new export.</source>
          <target state="translated">同一个模块的多个需求只会导致一个模块的执行和一个输出。因此在运行时存在一个缓存。从这个缓存中删除数值会导致新的模块执行和新的输出。</target>
        </trans-unit>
        <trans-unit id="a940006e1d223c8e4389d42329fa987d078d3a15" translate="yes" xml:space="preserve">
          <source>Multiple requires to the same module result in only one module execution and only one export. Therefore a cache in the runtime exists. Removing values from this cache cause new module execution and a new export.</source>
          <target state="translated">对同一模块的多个需求导致只执行一个模块,只输出一个模块。因此在运行时存在一个缓存。从这个缓存中删除值会导致新的模块执行和新的输出。</target>
        </trans-unit>
        <trans-unit id="ef4711aaf3e1de533c5916f2318f8a44b1e8bee7" translate="yes" xml:space="preserve">
          <source>Multiple separate builds should form a single application. These separate builds should not have dependencies between each other, so they can be developed and deployed individually.</source>
          <target state="translated">多个独立的构建应该形成一个单一的应用程序。这些独立的构建体之间不应该有相互依赖性,所以它们可以单独开发和部署。</target>
        </trans-unit>
        <trans-unit id="a58c3aebae89adf1783eda829ec1aa946f07d85a" translate="yes" xml:space="preserve">
          <source>Multiple values</source>
          <target state="translated">多值</target>
        </trans-unit>
        <trans-unit id="e6aabb6231f5fbabca099e4a40902fa7f067fa46" translate="yes" xml:space="preserve">
          <source>Multiple values are separated by comma &lt;code&gt;,&lt;/code&gt;:</source>
          <target state="translated">多个值用逗号分隔 &lt;code&gt;,&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8a48de75961541f5fed42a29a4ad8970e83c4ee8" translate="yes" xml:space="preserve">
          <source>NODE_ENV</source>
          <target state="translated">NODE_ENV</target>
        </trans-unit>
        <trans-unit id="1b6c0dee98a89366fdcbfe05541aac72db6bd774" translate="yes" xml:space="preserve">
          <source>NPM Scripts</source>
          <target state="translated">NPM脚本</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="2fe190513dc5fb4be8606e06fb2fa0282d381d10" translate="yes" xml:space="preserve">
          <source>Name for the cache. Different names will lead to different coexisting caches. Defaults to &lt;code&gt;${config.name}-${config.mode}&lt;/code&gt;. Using &lt;code&gt;cache.name&lt;/code&gt; makes sense when you have multiple configurations which should have independent caches.</source>
          <target state="translated">缓存的名称。不同的名称将导致不同的共存缓存。默认为 &lt;code&gt;${config.name}-${config.mode}&lt;/code&gt; 。当您具有多个应该具有独立缓存的配置时，使用 &lt;code&gt;cache.name&lt;/code&gt; 才有意义。</target>
        </trans-unit>
        <trans-unit id="eab392df02227f5ad3cb6358e14f9a92174d6852" translate="yes" xml:space="preserve">
          <source>Name of global coverage variable</source>
          <target state="translated">全球覆盖率变量的名称</target>
        </trans-unit>
        <trans-unit id="7e1a44922703aaf3623955916847b597113ab53b" translate="yes" xml:space="preserve">
          <source>Name of the config to use</source>
          <target state="translated">要使用的配置名称</target>
        </trans-unit>
        <trans-unit id="b7bf5a539760602c09ecd1bd214b71e58ad411d4" translate="yes" xml:space="preserve">
          <source>Name of the configuration to use</source>
          <target state="translated">要使用的配置名称</target>
        </trans-unit>
        <trans-unit id="f30498404f874c12104c3113ab4953a15aad64f2" translate="yes" xml:space="preserve">
          <source>Name of the configuration. Used when loading multiple configurations</source>
          <target state="translated">配置的名称。在加载多个配置时使用。</target>
        </trans-unit>
        <trans-unit id="a9a7931127e1910a3873ee4c1d6b374592c79a90" translate="yes" xml:space="preserve">
          <source>Name of the configuration. Used when loading multiple configurations.</source>
          <target state="translated">配置的名称。在加载多个配置时使用。</target>
        </trans-unit>
        <trans-unit id="9d44691a48dbbbf5f47f7a24dd531d771b3f214c" translate="yes" xml:space="preserve">
          <source>Name of the result file. May contain &lt;code&gt;[name]&lt;/code&gt;, &lt;code&gt;[id]&lt;/code&gt; and &lt;code&gt;[contenthash]&lt;/code&gt;</source>
          <target state="translated">结果文件的名称。可能包含 &lt;code&gt;[name]&lt;/code&gt; ， &lt;code&gt;[id]&lt;/code&gt; 和 &lt;code&gt;[contenthash]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88f2f30ba49708ae97f8d92b8a8a72e7ddff53df" translate="yes" xml:space="preserve">
          <source>Named Exports</source>
          <target state="translated">已命名的出口</target>
        </trans-unit>
        <trans-unit id="2b7c08c3ab75f37e2da656c1aab228f5f3a793b1" translate="yes" xml:space="preserve">
          <source>Names</source>
          <target state="translated">Names</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="3f00f6db4253d512042a42d232fed179ec641838" translate="yes" xml:space="preserve">
          <source>Need to find up to date examples of these webpack targets being used in live code or boilerplates.</source>
          <target state="translated">需要找到这些webpack目标在实时代码或锅炉模板中使用的最新例子。</target>
        </trans-unit>
        <trans-unit id="d628bf62008786841d73ec8667ca991353d4c476" translate="yes" xml:space="preserve">
          <source>Negated Flags</source>
          <target state="translated">否定旗</target>
        </trans-unit>
        <trans-unit id="84d29c136b7823e0b84ef5144085552dadbb118f" translate="yes" xml:space="preserve">
          <source>Neither &lt;code&gt;import&lt;/code&gt; nor &lt;code&gt;export&lt;/code&gt; is available</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; 或 &lt;code&gt;export&lt;/code&gt; 均不可用</target>
        </trans-unit>
        <trans-unit id="20a9426fd36cfd43c82000b4ec5e4c77b1ba9c76" translate="yes" xml:space="preserve">
          <source>Nested conditional syntax</source>
          <target state="translated">嵌套条件语法</target>
        </trans-unit>
        <trans-unit id="f0b610f173b363c6d397168ae6e235e8c6ca1741" translate="yes" xml:space="preserve">
          <source>Nested rules</source>
          <target state="translated">嵌套规则</target>
        </trans-unit>
        <trans-unit id="9bc81968c8a5c717216ba60c9fa6a03c720c9f2d" translate="yes" xml:space="preserve">
          <source>Nested rules can be specified under the properties &lt;a href=&quot;#rule-rules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#rule-oneof&quot;&gt;&lt;code&gt;oneOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以在属性&lt;a href=&quot;#rule-rules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#rule-oneof&quot;&gt; &lt;code&gt;oneOf&lt;/code&gt; &lt;/a&gt;下指定嵌套规则。</target>
        </trans-unit>
        <trans-unit id="ed50f3cfbdfe9128da4e446fe212a92e3c38ab93" translate="yes" xml:space="preserve">
          <source>Nested rules can be specified under the properties &lt;a href=&quot;#rulerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ruleoneof&quot;&gt;&lt;code&gt;oneOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以在属性&lt;a href=&quot;#rulerules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#ruleoneof&quot;&gt; &lt;code&gt;oneOf&lt;/code&gt; &lt;/a&gt;下指定嵌套规则。</target>
        </trans-unit>
        <trans-unit id="6430e6ba2eca0f752109cbeff222419b7cdd6a00" translate="yes" xml:space="preserve">
          <source>Never provide different APIs or semantics for different conditions.</source>
          <target state="translated">千万不要为不同的条件提供不同的API或语义。</target>
        </trans-unit>
        <trans-unit id="00907d2f7ec21d6725161c6f37cc92464bd4d1ae" translate="yes" xml:space="preserve">
          <source>New chunk can be shared OR modules are from the &lt;code&gt;node_modules&lt;/code&gt; folder</source>
          <target state="translated">可以共享新块，或者模块来自 &lt;code&gt;node_modules&lt;/code&gt; 文件夹</target>
        </trans-unit>
        <trans-unit id="9f427faf928378120c80ebfa35762eaf54d8aad2" translate="yes" xml:space="preserve">
          <source>New chunk would be bigger than 20kb (before min+gz)</source>
          <target state="translated">新块将大于20kb(在min+gz之前)。</target>
        </trans-unit>
        <trans-unit id="86c73a39bd8e318e6fcb6fcbe6773a9ca427f4e5" translate="yes" xml:space="preserve">
          <source>New chunk would be bigger than 30kb (before min+gz)</source>
          <target state="translated">新块将大于30kb(在min+gz之前)。</target>
        </trans-unit>
        <trans-unit id="571fead9fa6a14ef560201d8a4e1dd845f9c7248" translate="yes" xml:space="preserve">
          <source>New to webpack? Check out our guide to some of webpack's &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;core concepts&lt;/a&gt; to get started!</source>
          <target state="translated">Webpack的新手？查看我们有关webpack &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;核心概念的&lt;/a&gt;指南，以开始使用！</target>
        </trans-unit>
        <trans-unit id="3f170caead65df254d786032a409a6f6d204bca6" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="translated">下一步工作</target>
        </trans-unit>
        <trans-unit id="6a3128d5f090a6c16b2185917486ee462fd298bd" translate="yes" xml:space="preserve">
          <source>Next guide</source>
          <target state="translated">下一个指南</target>
        </trans-unit>
        <trans-unit id="5dc6891fdd39c9b29837e7de49331ca036b6b993" translate="yes" xml:space="preserve">
          <source>Next, install &lt;code&gt;webpack&lt;/code&gt; and &lt;code&gt;webpack-dev-server&lt;/code&gt; in your project;</source>
          <target state="translated">接下来，在您的项目中安装 &lt;code&gt;webpack&lt;/code&gt; 和 &lt;code&gt;webpack-dev-server&lt;/code&gt; ；</target>
        </trans-unit>
        <trans-unit id="33f0138c6fc828d4afddc3fc8af24ccc31c883b9" translate="yes" xml:space="preserve">
          <source>Next, install webpack and webpack-dev-server in your project;</source>
          <target state="translated">接下来,在你的项目中安装webpack和webpack-dev-server。</target>
        </trans-unit>
        <trans-unit id="4fb574714b149672d840ad6cb312f36fb2ba2fda" translate="yes" xml:space="preserve">
          <source>No CommonJS allowed, for example, you can't use &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;module.exports&lt;/code&gt; or &lt;code&gt;exports&lt;/code&gt;</source>
          <target state="translated">不允许使用CommonJS，例如，您不能使用 &lt;code&gt;require&lt;/code&gt; ， &lt;code&gt;module.exports&lt;/code&gt; 或 &lt;code&gt;exports&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="804c2c8ab9ef0272963f533f9dfd8b2e19c9dd60" translate="yes" xml:space="preserve">
          <source>No Hot Module Replacement</source>
          <target state="translated">无热模块更换</target>
        </trans-unit>
        <trans-unit id="5bc47d91d609ef5c45bef5028203b34749457ba8" translate="yes" xml:space="preserve">
          <source>No additional options required on the &lt;code&gt;postcss-loader&lt;/code&gt; side. To make them work properly, either add the &lt;code&gt;css-loader&lt;/code&gt;&amp;rsquo;s &lt;code&gt;importLoaders&lt;/code&gt; option.</source>
          <target state="translated">在 &lt;code&gt;postcss-loader&lt;/code&gt; 端不需要其他选项。为使它们正常工作，请添加 &lt;code&gt;css-loader&lt;/code&gt; 的 &lt;code&gt;importLoaders&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="ee59db2039b1fa34759ff51a5830d5e56fce1a5a" translate="yes" xml:space="preserve">
          <source>No devtooling should be included.</source>
          <target state="translated">不应包括开发工具。</target>
        </trans-unit>
        <trans-unit id="af837962cb7659664d3ba4b0e86a956a19477f2f" translate="yes" xml:space="preserve">
          <source>No duplicate compilation (performance)</source>
          <target state="translated">无重复编译(性能)</target>
        </trans-unit>
        <trans-unit id="f70b38d79e57a2e98ad3b37d8bff4f55372cb23e" translate="yes" xml:space="preserve">
          <source>No hint warnings or errors are shown.</source>
          <target state="translated">不显示提示警告或错误。</target>
        </trans-unit>
        <trans-unit id="2f7e326b06ee31b812a51e928faca53522e0e814" translate="yes" xml:space="preserve">
          <source>No options for loader.</source>
          <target state="translated">没有装载机的选项。</target>
        </trans-unit>
        <trans-unit id="8104f56c0ada9376364e684058a3d77044c3bb13" translate="yes" xml:space="preserve">
          <source>No runtime public path modification</source>
          <target state="translated">无运行时公共路径修改</target>
        </trans-unit>
        <trans-unit id="ebc046e475dd358e850aac51c226f01e448c129e" translate="yes" xml:space="preserve">
          <source>NoEmitOnErrorsPlugin</source>
          <target state="translated">NoEmitOnErrorsPlugin</target>
        </trans-unit>
        <trans-unit id="90f576dec2e189b6269427581c1778c8eee5e26c" translate="yes" xml:space="preserve">
          <source>NoErrorsPlugin</source>
          <target state="translated">NoErrorsPlugin</target>
        </trans-unit>
        <trans-unit id="b906849891db9257c38231dc0326e872f2c1954f" translate="yes" xml:space="preserve">
          <source>NoHotModuleReplacementPlugin</source>
          <target state="translated">NoHotModuleReplacementPlugin</target>
        </trans-unit>
        <trans-unit id="260f7a8cd4f6938b3cc185a619847cb83d670219" translate="yes" xml:space="preserve">
          <source>Node</source>
          <target state="translated">Node</target>
        </trans-unit>
        <trans-unit id="b4a14d1c7daa5e3aed6a02f994a61d4a7af7497f" translate="yes" xml:space="preserve">
          <source>Node 10.16.0 and later has &lt;a href=&quot;https://nodejs.org/api/zlib.html#zlib_zlib_createbrotlicompress_options&quot;&gt;native support&lt;/a&gt; for Brotli compression in its zlib module.</source>
          <target state="translated">节点10.16.0及更高版本在其zlib模块中具有对Brotli压缩的&lt;a href=&quot;https://nodejs.org/api/zlib.html#zlib_zlib_createbrotlicompress_options&quot;&gt;本机支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="850fae31c96276a74dcd3f2dd75d52f10ee5355f" translate="yes" xml:space="preserve">
          <source>Node API</source>
          <target state="translated">节点API</target>
        </trans-unit>
        <trans-unit id="d0564fdb4244508c08aeaa8927f1c092e11b3e3d" translate="yes" xml:space="preserve">
          <source>Node Built-Ins</source>
          <target state="translated">节点内置</target>
        </trans-unit>
        <trans-unit id="fd6dab3668cffeb48fcc1d10a52beb549df45fe7" translate="yes" xml:space="preserve">
          <source>Node Interface</source>
          <target state="translated">节点接口</target>
        </trans-unit>
        <trans-unit id="a0e630bed791b33794053f86df1a1211214699df" translate="yes" xml:space="preserve">
          <source>Node built-ins, like &lt;code&gt;process&lt;/code&gt;, can be polyfilled right directly from your configuration file without the use of any special loaders or plugins. See the &lt;a href=&quot;../configuration/node&quot;&gt;node configuration page&lt;/a&gt; for more information and examples.</source>
          <target state="translated">可以直接从配置文件中直接填充Node内置程序（例如 &lt;code&gt;process&lt;/code&gt; )，而无需使用任何特殊的加载程序或插件。有关更多信息和示例，请参见&lt;a href=&quot;../configuration/node&quot;&gt;节点配置页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc6ce541a53b0a46f3bd7b6f35f64b0c4a5a02ed" translate="yes" xml:space="preserve">
          <source>Node-Zopfli plugin for Webpack.</source>
          <target state="translated">Webpack的Node-Zopfli插件。</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="8b8214b8e226c143da7ac208d7ccfff6ed28e492" translate="yes" xml:space="preserve">
          <source>Node.js API</source>
          <target state="translated">Node.js API</target>
        </trans-unit>
        <trans-unit id="87071e07a65768f326680b05ba31e7a4f6cc3cf6" translate="yes" xml:space="preserve">
          <source>Node.js API: stats.hasErrors()</source>
          <target state="translated">Node.js API:stats.hasErrors()</target>
        </trans-unit>
        <trans-unit id="a6f76c4d171ff100d2d8598052b88a576d19f91e" translate="yes" xml:space="preserve">
          <source>Node.js API: stats.hasWarnings()</source>
          <target state="translated">Node.js API:stats.hasWarnings()</target>
        </trans-unit>
        <trans-unit id="874db793cb9663801ec056096724681c755baa5d" translate="yes" xml:space="preserve">
          <source>Node.js API: stats.toJson()</source>
          <target state="translated">Node.js API:stats.toJson()</target>
        </trans-unit>
        <trans-unit id="e82fa7cdc3d0c984d0e77dd15e9c0a25db6f0303" translate="yes" xml:space="preserve">
          <source>Node.js API: stats.toString()</source>
          <target state="translated">Node.js API:stats.toString()</target>
        </trans-unit>
        <trans-unit id="33337a2400bf85cb9c9403498611758b81bc19d8" translate="yes" xml:space="preserve">
          <source>Node.js API: webpack()</source>
          <target state="translated">Node.js API:webpack()</target>
        </trans-unit>
        <trans-unit id="0dc2614c3f82904fc30cf2ab7f01d80f39e0a4f3" translate="yes" xml:space="preserve">
          <source>Node.js Version</source>
          <target state="translated">Node.js版本</target>
        </trans-unit>
        <trans-unit id="3ec4ba3870817026eeb522fa388342c010a965a8" translate="yes" xml:space="preserve">
          <source>Node.js Versions 8.9.10-9.11.1</source>
          <target state="translated">Node.js 8.9.10-9.11.1版本。</target>
        </trans-unit>
        <trans-unit id="dc83b71e88de4ff5f1440e6fa73b94999dbaddc0" translate="yes" xml:space="preserve">
          <source>Node.js allows to detection production/development mode at runtime via &lt;code&gt;process.env.NODE_ENV&lt;/code&gt;, so we use that as fallback in Node.js. Sync conditional importing ESM is not possible and we don't want to load the package twice, so we have to use CommonJs for the runtime detection.</source>
          <target state="translated">Node.js允许在运行时通过 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 检测生产/开发模式，因此我们将其用作Node.js的后备。同步条件导入ESM是不可能的，并且我们不想两次加载程序包，因此我们必须使用CommonJs进行运行时检测。</target>
        </trans-unit>
        <trans-unit id="fef636983e0aece722046e6acc0075f8581f6b03" translate="yes" xml:space="preserve">
          <source>Node.js established a way of explicitly setting the module type of files by using a property in the &lt;code&gt;package.json&lt;/code&gt;. Setting &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; in a package.json does force all files below this package.json to be ECMAScript Modules. Setting &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt; will instead force them to be CommonJS Modules.</source>
          <target state="translated">Node.js建立了一种通过使用 &lt;code&gt;package.json&lt;/code&gt; 中的属性来显式设置文件的模块类型的方法。在package.json中设置 &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; 会强制该package.json下的所有文件均为ECMAScript模块。设置 &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt; 将会强制它们成为CommonJS模块。</target>
        </trans-unit>
        <trans-unit id="8b6e57f0637f7555f24bbcac81965e8f1f7ed333" translate="yes" xml:space="preserve">
          <source>Node.js has supported modular programming almost since its inception. On the web, however, support for &lt;em&gt;modules&lt;/em&gt; has been slow to arrive. Multiple tools exist that support modular JavaScript on the web, with a variety of benefits and limitations. webpack builds on lessons learned from these systems and applies the concept of &lt;em&gt;modules&lt;/em&gt; to any file in your project.</source>
          <target state="translated">自其诞生以来，Node.js就一直支持模块化编程。但是，在Web上，对&lt;em&gt;模块的&lt;/em&gt;支持一直很缓慢。存在多种支持Web上的模块化JavaScript的工具，具有各种优点和局限性。webpack基于从这些系统中汲取的经验教训，并将&lt;em&gt;模块&lt;/em&gt;的概念应用于项目中的任何文件。</target>
        </trans-unit>
        <trans-unit id="39c8c6ea43e40e418da16ba328593865a23e7fb9" translate="yes" xml:space="preserve">
          <source>Node.js, webpack, rollup</source>
          <target state="translated">Node.js,webpack,rollup</target>
        </trans-unit>
        <trans-unit id="a96f4aa7acf30614f54caa0812687a24e5445f7c" translate="yes" xml:space="preserve">
          <source>Node.js, webpack, rollup, &lt;strike&gt;esinstall&lt;/strike&gt;&lt;sup&gt;(4)&lt;/sup&gt;</source>
          <target state="translated">Node.js，Webpack，汇总， &lt;strike&gt; esinstall &lt;/strike&gt;&lt;sup&gt;（4）&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="45efd264a765f8aeadc425b1ee6ce6f93c0990a0" translate="yes" xml:space="preserve">
          <source>Node.js, webpack, rollup, esinstall</source>
          <target state="translated">Node.js,webpack,rollup,esinstall等。</target>
        </trans-unit>
        <trans-unit id="a1283f17433fbc953b9967b8d1ed95b20aeb8b5c" translate="yes" xml:space="preserve">
          <source>Node.js, webpack, rollup, esinstall, wmr</source>
          <target state="translated">Node.js,webpack,rollup,esinstall,wmr。</target>
        </trans-unit>
        <trans-unit id="d95e00f313eb2c827db31d5757d773759dc92aa2" translate="yes" xml:space="preserve">
          <source>Node.js, webpack, rollup, esinstall, wmr&lt;sup&gt;(7)&lt;/sup&gt;</source>
          <target state="translated">Node.js，Webpack，汇总，esinstall，WMR &lt;sup&gt;（7）&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="35bfd6c463b68225461fe9f13979c1f8f9b79e7b" translate="yes" xml:space="preserve">
          <source>Node.js, webpack, rollup, esinstall&lt;sup&gt;(1)&lt;/sup&gt;, wmr&lt;sup&gt;(1)&lt;/sup&gt;</source>
          <target state="translated">Node.js，Webpack，汇总，esinstall &lt;sup&gt;（1）&lt;/sup&gt;，WMR &lt;sup&gt;（1）&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="701e7b32ec31d19c5304c0cd7b2c494b53db00be" translate="yes" xml:space="preserve">
          <source>Node.js, webpack, rollup, wmr&lt;sup&gt;(5)&lt;/sup&gt;</source>
          <target state="translated">Node.js，Webpack，汇总，WMR &lt;sup&gt;（5）&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="4ae29a008a60862ce675c1d5d3e15caeb7f26dac" translate="yes" xml:space="preserve">
          <source>Node.js, webpack, rollup, wmr&lt;sup&gt;(6)&lt;/sup&gt;</source>
          <target state="translated">Node.js，Webpack，汇总，WMR &lt;sup&gt;（6）&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="108eddeb4a3d9fc01a7a107ee3a04265b32f213f" translate="yes" xml:space="preserve">
          <source>Node.js, webpack, wmr&lt;sup&gt;(2)&lt;/sup&gt;</source>
          <target state="translated">Node.js, webpack, wmr&lt;sup&gt;(2)&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="d5308b124dd35f1296bae0df852d5eddb4f5883c" translate="yes" xml:space="preserve">
          <source>Node.js&lt;sup&gt;(1)&lt;/sup&gt;, webpack, rollup, esinstall&lt;sup&gt;(2)&lt;/sup&gt;, wmr&lt;sup&gt;(3)&lt;/sup&gt;</source>
          <target state="translated">Node.js &lt;sup&gt;（1）&lt;/sup&gt;，Webpack，汇总，esinstall &lt;sup&gt;（2）&lt;/sup&gt;，WMR &lt;sup&gt;（3）&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="6ae2e38b7821fa717a5aa645014a1bdf10f0f239" translate="yes" xml:space="preserve">
          <source>NodeEnvironmentPlugin</source>
          <target state="translated">NodeEnvironmentPlugin</target>
        </trans-unit>
        <trans-unit id="92be2ff0932240f7b34b5c49458059cf598eee7c" translate="yes" xml:space="preserve">
          <source>NodeSourcePlugin</source>
          <target state="translated">NodeSourcePlugin</target>
        </trans-unit>
        <trans-unit id="ae8bec24f2ee247b94044a1b6ff74699e6f4b135" translate="yes" xml:space="preserve">
          <source>NodeStuffPlugin</source>
          <target state="translated">NodeStuffPlugin</target>
        </trans-unit>
        <trans-unit id="214d0b567fb66dc03b30346846a5d3c25f4e31d5" translate="yes" xml:space="preserve">
          <source>NodeTargetPlugin</source>
          <target state="translated">NodeTargetPlugin</target>
        </trans-unit>
        <trans-unit id="482965fe4f0c4859d2f2dd3cb272dae043c9b49e" translate="yes" xml:space="preserve">
          <source>NodeTemplatePlugin</source>
          <target state="translated">NodeTemplatePlugin</target>
        </trans-unit>
        <trans-unit id="e3ae200166946e46ecee5a2f3114865f5816a047" translate="yes" xml:space="preserve">
          <source>Non ES6 Module</source>
          <target state="translated">非ES6模块</target>
        </trans-unit>
        <trans-unit id="fe020d9d97d984e56393ffb459e021eef78bf161" translate="yes" xml:space="preserve">
          <source>Non-Less imports</source>
          <target state="translated">非低价进口</target>
        </trans-unit>
        <trans-unit id="8bce85a3e5089506190e145b0d61abbc0b7f3d4b" translate="yes" xml:space="preserve">
          <source>Non-initial chunk for &lt;code&gt;./app.jsx&lt;/code&gt; is created as this module is imported dynamically.</source>
          <target state="translated">当动态导入此模块时，将创建 &lt;code&gt;./app.jsx&lt;/code&gt; 的非初始块。</target>
        </trans-unit>
        <trans-unit id="3aed2d569b849133740d313dce09008039ab6a8c" translate="yes" xml:space="preserve">
          <source>Nonce</source>
          <target state="translated">Nonce</target>
        </trans-unit>
        <trans-unit id="d82cb533541568577c64f151d64e056c75d3d6c2" translate="yes" xml:space="preserve">
          <source>Nonce purpose explained</source>
          <target state="translated">Nonce目的解释</target>
        </trans-unit>
        <trans-unit id="5278c6a3d91b0458bd2785a13d8f492582e05b86" translate="yes" xml:space="preserve">
          <source>Normal chunks will show up using the &lt;code&gt;filename&lt;/code&gt; rule above, and be named according to their &lt;code&gt;[chunkname]&lt;/code&gt;.</source>
          <target state="translated">普通块将使用上述 &lt;code&gt;filename&lt;/code&gt; 规则显示，并根据其 &lt;code&gt;[chunkname]&lt;/code&gt; 命名。</target>
        </trans-unit>
        <trans-unit id="c0f303fa1b9d5e7c7d2af3d5f3bff064547caca1" translate="yes" xml:space="preserve">
          <source>Normal modules can export a loader in addition to the normal &lt;code&gt;main&lt;/code&gt; via &lt;code&gt;package.json&lt;/code&gt; with the &lt;code&gt;loader&lt;/code&gt; field.</source>
          <target state="translated">普通模块除了可以通过具有 &lt;code&gt;loader&lt;/code&gt; 字段的 &lt;code&gt;package.json&lt;/code&gt; 导出普通 &lt;code&gt;main&lt;/code&gt; 模块之外，还可以导出一个加载器。</target>
        </trans-unit>
        <trans-unit id="a02711b68e878a39c755e6da3bdbef4c42dab125" translate="yes" xml:space="preserve">
          <source>Normal usage</source>
          <target state="translated">正常使用</target>
        </trans-unit>
        <trans-unit id="529562fc788c0037cdc4dd136b538f9ce9051cf6" translate="yes" xml:space="preserve">
          <source>Normal: Resolves a module via an absolute or relative path.</source>
          <target state="translated">正常情况下,通过绝对路径或相对路径解决模块。通过绝对或相对路径解决模块问题。</target>
        </trans-unit>
        <trans-unit id="9d1fb0393bd3b10629653271ec64c9f7b75fac04" translate="yes" xml:space="preserve">
          <source>NormalModuleFactory Hooks</source>
          <target state="translated">NormalModuleFactory Hooks</target>
        </trans-unit>
        <trans-unit id="30d60585216ded2742f1b02ef32a4dcc96ad433d" translate="yes" xml:space="preserve">
          <source>NormalModuleReplacementPlugin</source>
          <target state="translated">NormalModuleReplacementPlugin</target>
        </trans-unit>
        <trans-unit id="ae09e88873e192fca022c562a00fdd791f13c3eb" translate="yes" xml:space="preserve">
          <source>NormaleModuleFactory creates &lt;code&gt;Parser&lt;/code&gt; and &lt;code&gt;Generator&lt;/code&gt; instances which can be accessed by HookMaps. Identifier must be passed to tap into these:</source>
          <target state="translated">NormaleModuleFactory创建可以由HookMaps访问的 &lt;code&gt;Parser&lt;/code&gt; 和 &lt;code&gt;Generator&lt;/code&gt; 实例。必须传递标识符才能使用以下代码：</target>
        </trans-unit>
        <trans-unit id="bab4f507bbd881c8083bf7220fcbee50da827017" translate="yes" xml:space="preserve">
          <source>Not Enough Watchers</source>
          <target state="translated">守望者不足</target>
        </trans-unit>
        <trans-unit id="6b3ddc8a018382c58e740f7711bcae204d99c659" translate="yes" xml:space="preserve">
          <source>Not all Polymer Elements have been written to execute as a module and will require changes to work with webpack. The most common issue encountered is because modules do not execute in the global scope. Variables, functions and classes will no longer be global unless they are declared as properties on the global object (window).</source>
          <target state="translated">并非所有的聚合元素都被写成模块来执行,因此需要进行修改才能与webpack一起工作。最常遇到的问题是由于模块不在全局范围内执行。变量、函数和类将不再是全局的,除非它们被声明为全局对象(窗口)上的属性。</target>
        </trans-unit>
        <trans-unit id="f2b61a928a512aa3a0276491deb88494572fe8ff" translate="yes" xml:space="preserve">
          <source>Not all conditions are supported by every tool.</source>
          <target state="translated">并非所有工具都支持所有条件。</target>
        </trans-unit>
        <trans-unit id="3ca4b4364fc0e61ca1656e48b898704fd88e6450" translate="yes" xml:space="preserve">
          <source>Not all targets may be mixed for now.</source>
          <target state="translated">目前并不是所有的目标都可能是混合的。</target>
        </trans-unit>
        <trans-unit id="39be7ae447e29d59682d504af836c0434c9219cc" translate="yes" xml:space="preserve">
          <source>Not every Node global supports all four options. The compiler will throw an error for property-value combinations that aren't supported (e.g. &lt;code&gt;process: 'empty'&lt;/code&gt;). See the sections below for more details.</source>
          <target state="translated">并非每个节点全局都支持所有四个选项。对于不支持的属性值组合，编译器将引发错误（例如， &lt;code&gt;process: 'empty'&lt;/code&gt; ）。有关更多详细信息，请参见以下各节。</target>
        </trans-unit>
        <trans-unit id="2542658903eae3c6e87f29e552acca72278034cf" translate="yes" xml:space="preserve">
          <source>Not specifying the environment variable raises an &quot;&lt;code&gt;EnvironmentPlugin&lt;/code&gt; - &lt;code&gt;${key}&lt;/code&gt; environment variable is undefined&quot; error.</source>
          <target state="translated">不指定环境变量提出了一个&amp;ldquo; &lt;code&gt;EnvironmentPlugin&lt;/code&gt; - &lt;code&gt;${key}&lt;/code&gt; 环境变量未定义&amp;rdquo;错误。</target>
        </trans-unit>
        <trans-unit id="0cd6c671c0517610d3e84d57d2e0d74543efa362" translate="yes" xml:space="preserve">
          <source>Note : ProfilingPlugin accepts only absolute paths.</source>
          <target state="translated">注:ProfilingPlugin只接受绝对路径。</target>
        </trans-unit>
        <trans-unit id="911a457fc9400f3750248193688794b3e8af4fbc" translate="yes" xml:space="preserve">
          <source>Note about source maps</source>
          <target state="translated">关于源地图的说明</target>
        </trans-unit>
        <trans-unit id="9b016b01d592034dd8180ce9e0be296e560a090d" translate="yes" xml:space="preserve">
          <source>Note by default an empty string is used. Using some kind of indentation makes bundles look more pretty, but will cause issues with multi-line strings.</source>
          <target state="translated">请注意,默认情况下使用的是一个空字符串。使用某种缩进使捆绑看起来更漂亮,但会导致多行字符串的问题。</target>
        </trans-unit>
        <trans-unit id="816ed993175a9247db3da6d37bfd0f132460717a" translate="yes" xml:space="preserve">
          <source>Note it also adds some info about tree shaking to the generated bundle.</source>
          <target state="translated">请注意,它还在生成的捆绑中添加了一些关于树形摇动的信息。</target>
        </trans-unit>
        <trans-unit id="5348decbdcdd082d9f7035794934fd43b2a59d8f" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt;&lt;code&gt;webpack.HotModuleReplacementPlugin&lt;/code&gt;&lt;/a&gt; is required to fully enable HMR. If &lt;code&gt;webpack&lt;/code&gt; or &lt;code&gt;webpack-dev-server&lt;/code&gt; are launched with the &lt;code&gt;--hot&lt;/code&gt; option, this plugin will be added automatically, so you may not need to add this to your &lt;code&gt;webpack.config.js&lt;/code&gt;. See the &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;HMR concepts page&lt;/a&gt; for more information.</source>
          <target state="translated">请注意，需要&lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt; &lt;code&gt;webpack.HotModuleReplacementPlugin&lt;/code&gt; &lt;/a&gt;才能完全启用HMR。如果使用 &lt;code&gt;--hot&lt;/code&gt; 选项启动了 &lt;code&gt;webpack&lt;/code&gt; 或 &lt;code&gt;webpack-dev-server&lt;/code&gt; ，则该插件将自动添加，因此您可能不需要将其添加到 &lt;code&gt;webpack.config.js&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;HMR概念页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2d04f5026f8ef24badc822ccbb529920b2478349" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;[fullhash]&lt;/code&gt; in this parameter will be replaced with a hash of the compilation. See the &lt;a href=&quot;../guides/caching&quot;&gt;Caching guide&lt;/a&gt; for details.</source>
          <target state="translated">请注意，此参数中的 &lt;code&gt;[fullhash]&lt;/code&gt; 将被编译的哈希替换。有关详细信息，请参见&lt;a href=&quot;../guides/caching&quot;&gt;缓存指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="266f9b4b866d55f38dde035b7cb3e007584f2195" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;[hash]&lt;/code&gt; in this parameter will be replaced with an hash of the compilation. See the &lt;a href=&quot;../guides/caching&quot;&gt;Caching guide&lt;/a&gt; for details.</source>
          <target state="translated">请注意，此参数中的 &lt;code&gt;[hash]&lt;/code&gt; 将被编译的哈希替换。有关详细信息，请参见&lt;a href=&quot;../guides/caching&quot;&gt;缓存指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="075d3a49ae8cc897a9efe3ca7c3363f471f32789" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;_entry_return_&lt;/code&gt; in the example code below is the value returned by the entry point. In the bundle itself, it is the output of the function that is generated by webpack from the entry point.</source>
          <target state="translated">请注意，以下示例代码中的 &lt;code&gt;_entry_return_&lt;/code&gt; 是入口点返回的值。在包本身中，是webpack从入口点生成的函数的输出。</target>
        </trans-unit>
        <trans-unit id="5c29793f6e2e8523fe44cf9e24bf324b93057188" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;output.library&lt;/code&gt; can't be used with this particular &lt;code&gt;output.libraryTarget&lt;/code&gt;, for further details, please &lt;a href=&quot;https://github.com/webpack/webpack/issues/11800&quot;&gt;read this issue&lt;/a&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;output.library&lt;/code&gt; 不能与此特定的 &lt;code&gt;output.libraryTarget&lt;/code&gt; 一起使用，有关更多详细信息，请&lt;a href=&quot;https://github.com/webpack/webpack/issues/11800&quot;&gt;阅读本期&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3a4dfa2d5d308b8872b7d3f96a487ce35091157b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;output.library&lt;/code&gt; is omitted, thus it is not required for this particular &lt;code&gt;output.libraryTarget&lt;/code&gt;.</source>
          <target state="translated">请注意，省略了 &lt;code&gt;output.library&lt;/code&gt; ，因此此特定 &lt;code&gt;output.libraryTarget&lt;/code&gt; 不需要此属性。</target>
        </trans-unit>
        <trans-unit id="b2751d556c9a4a5d365a752d826f29d001305698" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;webpack.HotModuleReplacementPlugin&lt;/code&gt; is required to fully enable HMR. If &lt;code&gt;webpack&lt;/code&gt; or &lt;code&gt;webpack-dev-server&lt;/code&gt; are launched with the &lt;code&gt;--hot&lt;/code&gt; option, this plugin will be added automatically, so you may not need to add this to your &lt;code&gt;webpack.config.js&lt;/code&gt;. See the &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;HMR concepts page&lt;/a&gt; for more information.</source>
          <target state="translated">请注意，要完全启用HMR，需要 &lt;code&gt;webpack.HotModuleReplacementPlugin&lt;/code&gt; 。如果使用 &lt;code&gt;--hot&lt;/code&gt; 选项启动 &lt;code&gt;webpack&lt;/code&gt; 或 &lt;code&gt;webpack-dev-server&lt;/code&gt; ，则该插件将自动添加，因此您可能不需要将其添加到 &lt;code&gt;webpack.config.js&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;HMR概念页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="915a95fc0fbd9c8b3fb4c3076e9abfaa2b5a683f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;webpackInclude&lt;/code&gt; and &lt;code&gt;webpackExclude&lt;/code&gt; options do not interfere with the prefix. eg: &lt;code&gt;./locale&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;webpackInclude&lt;/code&gt; 和 &lt;code&gt;webpackExclude&lt;/code&gt; 选项不会干扰前缀。例如： &lt;code&gt;./locale&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d953943d6a687c6fbf1a1eea53cff9f3c84432f" translate="yes" xml:space="preserve">
          <source>Note that Command Line Interface has a higher precedence for the arguments you use it with than your configuration file. For instance, if you pass &lt;a href=&quot;../concepts/mode#usage&quot;&gt;&lt;code&gt;--mode=&quot;production&quot;&lt;/code&gt;&lt;/a&gt; to webpack CLI and your configuration file uses &lt;code&gt;development&lt;/code&gt;, &lt;code&gt;production&lt;/code&gt; will be used.</source>
          <target state="translated">请注意，与配置文件一起使用时，命令行界面的参数优先级更高。例如，如果您将&lt;a href=&quot;../concepts/mode#usage&quot;&gt; &lt;code&gt;--mode=&quot;production&quot;&lt;/code&gt; &lt;/a&gt;传递到webpack CLI，并且您的配置文件使用 &lt;code&gt;development&lt;/code&gt; ，那么将使用 &lt;code&gt;production&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc9c9d131a05f2c747800a9a466f5ba3ec68013b" translate="yes" xml:space="preserve">
          <source>Note that Command Line Interface has a higher precedence for the arguments you use it with than your configuration file. For instance, if you pass &lt;a href=&quot;../configuration/mode#usage&quot;&gt;&lt;code&gt;--mode=&quot;production&quot;&lt;/code&gt;&lt;/a&gt; to webpack CLI and your configuration file uses &lt;code&gt;development&lt;/code&gt;, &lt;code&gt;production&lt;/code&gt; will be used.</source>
          <target state="translated">请注意，与配置文件一起使用时，命令行界面的参数优先级更高。例如，如果您将&lt;a href=&quot;../configuration/mode#usage&quot;&gt; &lt;code&gt;--mode=&quot;production&quot;&lt;/code&gt; &lt;/a&gt;传递到webpack CLI，并且您的配置文件使用 &lt;code&gt;development&lt;/code&gt; ，那么将使用 &lt;code&gt;production&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8aa4ec7484f1ea4b5661c878af3565f393a16583" translate="yes" xml:space="preserve">
          <source>Note that all options can be combined like so &lt;code&gt;/* webpackMode: &quot;lazy-once&quot;, webpackChunkName: &quot;all-i18n-data&quot; */&lt;/code&gt;. This is wrapped in a JavaScript object and executed using &lt;a href=&quot;https://nodejs.org/dist/latest-v8.x/docs/api/vm.html&quot;&gt;node VM&lt;/a&gt;. You do not need to add curly brackets.</source>
          <target state="translated">请注意，所有选项都可以像这样组合 &lt;code&gt;/* webpackMode: &quot;lazy-once&quot;, webpackChunkName: &quot;all-i18n-data&quot; */&lt;/code&gt; 。它包装在JavaScript对象中，并使用&lt;a href=&quot;https://nodejs.org/dist/latest-v8.x/docs/api/vm.html&quot;&gt;节点VM&lt;/a&gt;执行。您不需要添加大括号。</target>
        </trans-unit>
        <trans-unit id="b0050ffdb59952b6db4588c5188bd976451ec071" translate="yes" xml:space="preserve">
          <source>Note that although this file is generated by the compiler, you may still want to track it in source control to keep a history of how it has changed over time.</source>
          <target state="translated">请注意,虽然这个文件是由编译器生成的,但你可能仍然想在源码控制中跟踪它,以保存它随时间变化的历史。</target>
        </trans-unit>
        <trans-unit id="787d6f4b802d53736bc69bf773d6877de85b0cf4" translate="yes" xml:space="preserve">
          <source>Note that any imported file is subject to tree shaking. This means if you use something like &lt;code&gt;css-loader&lt;/code&gt; in your project and import a CSS file, it needs to be added to the side effect list so it will not be unintentionally dropped in production mode:</source>
          <target state="translated">请注意，任何导入的文件都容易摇晃。这意味着，如果您在项目中使用 &lt;code&gt;css-loader&lt;/code&gt; 之类的东西并导入CSS文件，则需要将其添加到副作用列表中，这样就不会在生产模式中无意中将其删除：</target>
        </trans-unit>
        <trans-unit id="06e104e93b785ab965e90cd350cfdd1b4f52a187" translate="yes" xml:space="preserve">
          <source>Note that because the plugin does a direct text replacement, the value given to it must include &lt;strong&gt;actual quotes&lt;/strong&gt; inside of the string itself. Typically, this is done either with alternate quotes, such as &lt;code&gt;'&quot;production&quot;'&lt;/code&gt;, or by using &lt;code&gt;JSON.stringify('production')&lt;/code&gt;.</source>
          <target state="translated">请注意，由于该插件会直接替换文本，因此为其提供的值必须在字符串本身内部包含&lt;strong&gt;实际引号&lt;/strong&gt;。通常，这可以通过使用引号（例如 &lt;code&gt;'&quot;production&quot;'&lt;/code&gt; ）或使用 &lt;code&gt;JSON.stringify('production')&lt;/code&gt; 来完成。</target>
        </trans-unit>
        <trans-unit id="9d5265cc3c589b3157b3c19cac6f7b25593a489a" translate="yes" xml:space="preserve">
          <source>Note that despite using &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; and &lt;code&gt;.js&lt;/code&gt; for &lt;code&gt;dist-bundle.js&lt;/code&gt; this file is not in ESM format. It should use globals to allow direct consumption as script tag.</source>
          <target state="translated">请注意，尽管对 &lt;code&gt;dist-bundle.js&lt;/code&gt; 使用了 &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; 和 &lt;code&gt;.js&lt;/code&gt; ，但该文件不是ESM格式。它应该使用全局变量以允许直接使用作为脚本标签。</target>
        </trans-unit>
        <trans-unit id="687fb3498eb11cbb7e0017e0f0c3c4492e599d18" translate="yes" xml:space="preserve">
          <source>Note that here stateless also means class instances are not tested with &lt;code&gt;instanceof&lt;/code&gt; as there can be two different classes because of the double module instantiation.</source>
          <target state="translated">请注意，这里的无状态状态也意味着类实例不使用 &lt;code&gt;instanceof&lt;/code&gt; 进行测试，因为双模块实例化可能存在两个不同的类。</target>
        </trans-unit>
        <trans-unit id="b0ad380c7a6cb3c537de672fb7c99cd763c00a14" translate="yes" xml:space="preserve">
          <source>Note that if an &lt;code&gt;array&lt;/code&gt; is provided as an &lt;code&gt;entry&lt;/code&gt; point, only the last module in the array will be exposed. If an &lt;code&gt;object&lt;/code&gt; is provided, it can be exposed using an &lt;code&gt;array&lt;/code&gt; syntax (see &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/multi-part-library&quot;&gt;this example&lt;/a&gt; for details).</source>
          <target state="translated">请注意，如果将 &lt;code&gt;array&lt;/code&gt; 作为 &lt;code&gt;entry&lt;/code&gt; 点提供，则仅公开数组中的最后一个模块。如果提供了一个 &lt;code&gt;object&lt;/code&gt; ，则可以使用 &lt;code&gt;array&lt;/code&gt; 语法将其公开（有关详细信息，请参见此&lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/multi-part-library&quot;&gt;示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="fe54629278d6a0f3443a9d602ec6d824b446247f" translate="yes" xml:space="preserve">
          <source>Note that if an &lt;code&gt;array&lt;/code&gt; is provided as an &lt;code&gt;entry&lt;/code&gt; point, only the last module in the array will be exposed. If an &lt;code&gt;object&lt;/code&gt; is provided, it can exposed using an &lt;code&gt;array&lt;/code&gt; syntax (see &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/multi-part-library&quot;&gt;this example&lt;/a&gt; for details).</source>
          <target state="translated">请注意，如果将 &lt;code&gt;array&lt;/code&gt; 作为 &lt;code&gt;entry&lt;/code&gt; 点提供，则仅公开数组中的最后一个模块。如果提供了一个 &lt;code&gt;object&lt;/code&gt; ，则可以使用 &lt;code&gt;array&lt;/code&gt; 语法公开它（有关详细信息，请参见此&lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/multi-part-library&quot;&gt;示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9bc846aff25b011d48d8282943be738f9a4f3c73" translate="yes" xml:space="preserve">
          <source>Note that if you only plan on using your library as a dependency in another webpack bundle, you may specify &lt;code&gt;externals&lt;/code&gt; as an array.</source>
          <target state="translated">请注意，如果仅打算将库用作另一个Webpack捆绑包中的依赖项，则可以将 &lt;code&gt;externals&lt;/code&gt; 指定为数组。</target>
        </trans-unit>
        <trans-unit id="3f5ec0016aae345af6536a3352f24fac7175c53c" translate="yes" xml:space="preserve">
          <source>Note that if you're already using &lt;a href=&quot;https://github.com/babel/babel-loader&quot;&gt;&lt;code&gt;babel-loader&lt;/code&gt;&lt;/a&gt; to transpile your code, you can use &lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-typescript&quot;&gt;&lt;code&gt;@babel/preset-typescript&lt;/code&gt;&lt;/a&gt; and let Babel handle both your JavaScript and TypeScript files instead of using an additional loader. Keep in mind that, contrary to &lt;code&gt;ts-loader&lt;/code&gt;, the underlying &lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-typescript&quot;&gt;&lt;code&gt;@babel/plugin-transform-typescript&lt;/code&gt;&lt;/a&gt; plugin does not perform any type checking.</source>
          <target state="translated">请注意，如果您已经在使用&lt;a href=&quot;https://github.com/babel/babel-loader&quot;&gt; &lt;code&gt;babel-loader&lt;/code&gt; &lt;/a&gt;来转译代码，则可以使用&lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-typescript&quot;&gt; &lt;code&gt;@babel/preset-typescript&lt;/code&gt; &lt;/a&gt;并让Babel处理您的JavaScript和TypeScript文件，而不是使用其他加载器。请记住，与 &lt;code&gt;ts-loader&lt;/code&gt; 相反，底层的&lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-typescript&quot;&gt; &lt;code&gt;@babel/plugin-transform-typescript&lt;/code&gt; &lt;/a&gt;插件不执行任何类型检查。</target>
        </trans-unit>
        <trans-unit id="384028427db3cca31497bce1f23e06ed1825ba0b" translate="yes" xml:space="preserve">
          <source>Note that it is recommended to use an absolute path.</source>
          <target state="translated">注意,建议使用绝对路径。</target>
        </trans-unit>
        <trans-unit id="acbd7f974dd59e0ac2d3984303cbc4896a08b113" translate="yes" xml:space="preserve">
          <source>Note that not setting a &lt;code&gt;output.library&lt;/code&gt; will cause all properties returned by the entry point to be assigned to the given object; there are no checks against existing property names.</source>
          <target state="translated">注意，不设置 &lt;code&gt;output.library&lt;/code&gt; 将导致入口点返回的所有属性都分配给给定对象。没有针对现有属性名称的检查。</target>
        </trans-unit>
        <trans-unit id="ddf01da2392ef523caf78b978f951fa469ae26c8" translate="yes" xml:space="preserve">
          <source>Note that omitting &lt;code&gt;library&lt;/code&gt; will result in the assignment of all properties returned by the entry point be assigned directly to the root object, as documented under the &lt;a href=&quot;#expose-via-object-assignment&quot;&gt;object assignment section&lt;/a&gt;. Example:</source>
          <target state="translated">请注意，省略 &lt;code&gt;library&lt;/code&gt; 将导致将由入口点返回的所有属性的分配直接分配给根对象，如&lt;a href=&quot;#expose-via-object-assignment&quot;&gt;对象分配部分所述&lt;/a&gt;。例：</target>
        </trans-unit>
        <trans-unit id="e767def27e359bdc8c0e82872888a5602ece2c7b" translate="yes" xml:space="preserve">
          <source>Note that only &lt;code&gt;webpackIgnore&lt;/code&gt; comment is supported at the moment:</source>
          <target state="translated">请注意，目前仅支持 &lt;code&gt;webpackIgnore&lt;/code&gt; 注释：</target>
        </trans-unit>
        <trans-unit id="964b8eced835f538755eef4e98f31c85af24a90e" translate="yes" xml:space="preserve">
          <source>Note that only a subset of compiler and compilation hooks support the &lt;code&gt;reportProgress&lt;/code&gt; function. See &lt;a href=&quot;../plugins/progress-plugin#supported-hooks&quot;&gt;&lt;code&gt;ProgressPlugin&lt;/code&gt;&lt;/a&gt; for a full list.</source>
          <target state="translated">请注意，只有一部分编译器和编译钩子支持 &lt;code&gt;reportProgress&lt;/code&gt; 函数。有关完整列表，请参见&lt;a href=&quot;../plugins/progress-plugin#supported-hooks&quot;&gt; &lt;code&gt;ProgressPlugin&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="758cffe442417bb62cf8f39d175f12055742e81e" translate="yes" xml:space="preserve">
          <source>Note that requests to root won't be proxied by default. To enable root proxying, the &lt;code&gt;devServer.index&lt;/code&gt; option should be specified as a falsy value:</source>
          <target state="translated">请注意，默认情况下不会代理对root的请求。要启用根代理， &lt;code&gt;devServer.index&lt;/code&gt; 选项指定为伪造值：</target>
        </trans-unit>
        <trans-unit id="78636c2679b019eade6f5fbc4307de1f1a9ea4fc" translate="yes" xml:space="preserve">
          <source>Note that setting &lt;code&gt;webpackIgnore&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; opts out of code splitting.</source>
          <target state="translated">请注意，将 &lt;code&gt;webpackIgnore&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 会选择退出代码拆分。</target>
        </trans-unit>
        <trans-unit id="8b6a69d7db5fe1c39fda06afa060931402ec1168" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;--optimize-minimize&lt;/code&gt; flag can be used to enable &lt;code&gt;TerserPlugin&lt;/code&gt; as well.</source>
          <target state="translated">请注意，-- &lt;code&gt;--optimize-minimize&lt;/code&gt; 标志也可用于启用 &lt;code&gt;TerserPlugin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a15fafa9795ad7cbd7426a60e87bb18e9f648b1" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;--optimize-minimize&lt;/code&gt; flag can be used to enable &lt;code&gt;UglifyJSPlugin&lt;/code&gt; as well.</source>
          <target state="translated">请注意，-- &lt;code&gt;--optimize-minimize&lt;/code&gt; 标志也可以用于启用 &lt;code&gt;UglifyJSPlugin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f978b09c59db24f0fbd2c8a00e53b80cf02654e1" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;library&lt;/code&gt; setup is tied to the &lt;code&gt;entry&lt;/code&gt; configuration. For most libraries, specifying a single entry point is sufficient. While &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/multi-part-library&quot;&gt;multi-part libraries&lt;/a&gt; are possible, it is simpler to expose partial exports through an &lt;a href=&quot;https://stackoverflow.com/questions/34072598/es6-exporting-importing-in-index-file&quot;&gt;index script&lt;/a&gt; that serves as a single entry point. Using an &lt;code&gt;array&lt;/code&gt; as an &lt;code&gt;entry&lt;/code&gt; point for a library is &lt;strong&gt;not recommended&lt;/strong&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;library&lt;/code&gt; 设置与 &lt;code&gt;entry&lt;/code&gt; 配置有关。对于大多数库而言，指定一个入口点就足够了。尽管可以使用&lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/multi-part-library&quot;&gt;多部分库&lt;/a&gt;，但通过用作单个入口点的&lt;a href=&quot;https://stackoverflow.com/questions/34072598/es6-exporting-importing-in-index-file&quot;&gt;索引脚本&lt;/a&gt;公开部分导出更为简单。&lt;strong&gt;不建议&lt;/strong&gt;将 &lt;code&gt;array&lt;/code&gt; 用作库的 &lt;code&gt;entry&lt;/code&gt; 点。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17e86feb079de3a67809220e7c21e0e2f6d008c4" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;resolve&lt;/code&gt; configuration affects the &lt;code&gt;normal&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; resolvers while &lt;code&gt;resolveLoader&lt;/code&gt; is used to modify the &lt;code&gt;loader&lt;/code&gt; resolver.</source>
          <target state="translated">请注意，使用 &lt;code&gt;resolveLoader&lt;/code&gt; 修改 &lt;code&gt;loader&lt;/code&gt; 解析程序时， &lt;code&gt;resolve&lt;/code&gt; 配置会影响 &lt;code&gt;normal&lt;/code&gt; 解析程序和 &lt;code&gt;context&lt;/code&gt; 解析程序。</target>
        </trans-unit>
        <trans-unit id="8509cd543cc9b56264081c691f816da113399cd5" translate="yes" xml:space="preserve">
          <source>Note that the ability to &lt;code&gt;import&lt;/code&gt; any type of module, e.g. &lt;code&gt;.css&lt;/code&gt; files, is a feature specific to webpack and may not be supported by other bundlers or task runners. We feel this extension of the language is warranted as it allows developers to build a more accurate dependency graph.</source>
          <target state="translated">请注意， &lt;code&gt;import&lt;/code&gt; 任何类型的模块（例如 &lt;code&gt;.css&lt;/code&gt; 文件）的功能是Webpack特有的功能，其他捆绑程序或任务运行程序可能不支持。我们认为这种语言的扩展是必要的，因为它允许开发人员构建更准确的依赖关系图。</target>
        </trans-unit>
        <trans-unit id="7d09f710d5ae467255e57b13aa1d28e2ae25c40c" translate="yes" xml:space="preserve">
          <source>Note that the config option you provide will be passed to the &lt;code&gt;CLIEngine&lt;/code&gt;. This is a different set of options than what you'd specify in &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;.eslintrc&lt;/code&gt;. See the &lt;a href=&quot;http://eslint.org/docs/developer-guide/nodejs-api#cliengine&quot;&gt;eslint docs&lt;/a&gt; for more detail.</source>
          <target state="translated">请注意，您提供的config选项将传递给 &lt;code&gt;CLIEngine&lt;/code&gt; 。这是一组与您在 &lt;code&gt;package.json&lt;/code&gt; 或 &lt;code&gt;.eslintrc&lt;/code&gt; 中指定的选项不同的选项。有关更多详细信息，请参见&lt;a href=&quot;http://eslint.org/docs/developer-guide/nodejs-api#cliengine&quot;&gt;eslint文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ea543a863e4925495bec6bac2009be9c41d9dd6" translate="yes" xml:space="preserve">
          <source>Note that the config option you provide will be passed to the &lt;code&gt;ESLint&lt;/code&gt; class. This is a different set of options than what you'd specify in &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;.eslintrc&lt;/code&gt;. See the &lt;a href=&quot;https://eslint.org/docs/developer-guide/nodejs-api#%e2%97%86-new-eslint-options&quot;&gt;eslint docs&lt;/a&gt; for more details.</source>
          <target state="translated">请注意，您提供的config选项将传递给 &lt;code&gt;ESLint&lt;/code&gt; 类。这是一组与您在 &lt;code&gt;package.json&lt;/code&gt; 或 &lt;code&gt;.eslintrc&lt;/code&gt; 中指定的选项不同的选项。有关更多详细信息，请参见&lt;a href=&quot;https://eslint.org/docs/developer-guide/nodejs-api#%e2%97%86-new-eslint-options&quot;&gt;eslint文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d72a508ec6140fd1f1933aef1975aff818954974" translate="yes" xml:space="preserve">
          <source>Note that the make event triggers when webpack starts and for every invalidation when &lt;a href=&quot;watch&quot;&gt;watching for file changes&lt;/a&gt;.</source>
          <target state="translated">请注意，make事件在webpack启动时触发，并且在&lt;a href=&quot;watch&quot;&gt;监视文件更改&lt;/a&gt;时触发每个无效事件。</target>
        </trans-unit>
        <trans-unit id="de4fcf0e4d243e20240d785c75d914ebd0b52f6c" translate="yes" xml:space="preserve">
          <source>Note that the stack traces are removed when &lt;code&gt;errorDetails: false&lt;/code&gt; is passed to the &lt;code&gt;toJson&lt;/code&gt; method. The &lt;code&gt;errorDetails&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">请注意，当将 &lt;code&gt;errorDetails: false&lt;/code&gt; 传递给 &lt;code&gt;toJson&lt;/code&gt; 方法时，将删除堆栈跟踪。默认情况下， &lt;code&gt;errorDetails&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="abeb24c631d05b8d431bdd08e14e4b71085e0102" translate="yes" xml:space="preserve">
          <source>Note that the stack traces are removed when &lt;code&gt;errorStack: false&lt;/code&gt; is passed to the &lt;code&gt;toJson&lt;/code&gt; method. The &lt;code&gt;errorStack&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">请注意，当将 &lt;code&gt;errorStack: false&lt;/code&gt; 传递给 &lt;code&gt;toJson&lt;/code&gt; 方法时，将删除堆栈跟踪。默认情况下， &lt;code&gt;errorStack&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="717ed114bc2f03d33bdd35dbdd4283add55cbeb7" translate="yes" xml:space="preserve">
          <source>Note that the warnings will not be displayed if &lt;code&gt;stats.warnings&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, or some other omit setting is used to &lt;code&gt;stats&lt;/code&gt; such as &lt;code&gt;none&lt;/code&gt; or &lt;code&gt;errors-only&lt;/code&gt;. See the &lt;a href=&quot;../configuration/stats#stats-presets&quot;&gt;stats presets configuration&lt;/a&gt;.</source>
          <target state="translated">请注意，如果将 &lt;code&gt;stats.warnings&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 或对 &lt;code&gt;stats&lt;/code&gt; 使用某些其他省略设置（例如 &lt;code&gt;none&lt;/code&gt; 或 &lt;code&gt;errors-only&lt;/code&gt; error），则不会显示警告。请参阅&lt;a href=&quot;../configuration/stats#stats-presets&quot;&gt;统计信息预设配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7f24bd96d4a78ed4ce05d1f924ac60175d349ab" translate="yes" xml:space="preserve">
          <source>Note that these filenames need to be generated at runtime to send the requests for chunks. Because of this, placeholders like &lt;code&gt;[name]&lt;/code&gt; and &lt;code&gt;[chunkhash]&lt;/code&gt; need to add a mapping from chunk id to placeholder value to the output bundle with the webpack runtime. This increases the size and may invalidate the bundle when placeholder value for any chunk changes.</source>
          <target state="translated">请注意，需要在运行时生成这些文件名，以发送对块的请求。因此，需要使用webpack运行时将 &lt;code&gt;[name]&lt;/code&gt; 和 &lt;code&gt;[chunkhash]&lt;/code&gt; 之类的占位符添加从块ID到占位符值的映射到输出包。这会增加大小，并且在更改任何块的占位符值时可能会使捆绑软件无效。</target>
        </trans-unit>
        <trans-unit id="df034a14f13d952f15a4f3e1f3651a904e26f33a" translate="yes" xml:space="preserve">
          <source>Note that this approach prioritizes correctness over bundle size. To be safe and robust, polyfills/shims must run &lt;strong&gt;before all other code&lt;/strong&gt;, and thus either need to load synchronously, or, all app code needs to load after all polyfills/shims load. There are many misconceptions in the community, as well, that modern browsers &quot;don't need&quot; polyfills, or that polyfills/shims merely serve to add missing features - in fact, they often &lt;em&gt;repair broken implementations&lt;/em&gt;, even in the most modern of browsers. The best practice thus remains to unconditionally and synchronously load all polyfills/shims, despite the bundle size cost this incurs.</source>
          <target state="translated">请注意，此方法优先于包大小优先考虑正确性。为了安全可靠，polyfills / shims必须&lt;strong&gt;在所有其他代码之前&lt;/strong&gt;运行，因此要么需要同步加载，要么所有应用程序代码都必须在所有polyfills / shims加载之后加载。社区中也有很多误解，现代浏览器&amp;ldquo;不需要&amp;rdquo; polyfill，或者polyfill / shim只是用来添加缺少的功能-实际上，即使在最现代的浏览器中，它们也经常&lt;em&gt;修复损坏的实现&lt;/em&gt;。 。因此，最佳做法仍然是无条件且同步地加载所有填充物/垫片，尽管这会产生捆束尺寸成本。</target>
        </trans-unit>
        <trans-unit id="4451dc4533817a0ccf2b768dc135202cb785a231" translate="yes" xml:space="preserve">
          <source>Note that this feature is not fully supported yet, please track the progress in &lt;a href=&quot;https://github.com/webpack/webpack/issues/2933#issuecomment-774253975&quot;&gt;this thread&lt;/a&gt;.</source>
          <target state="translated">请注意，尚不完全支持此功能，请跟踪&lt;a href=&quot;https://github.com/webpack/webpack/issues/2933#issuecomment-774253975&quot;&gt;该线程&lt;/a&gt;的进度。</target>
        </trans-unit>
        <trans-unit id="7d2309d88dad882bc95da6b400b819c84331ed3a" translate="yes" xml:space="preserve">
          <source>Note that this is &lt;strong&gt;not a recommended practice&lt;/strong&gt;. Installing globally locks you down to a specific version of webpack and could fail in projects that use a different version.</source>
          <target state="translated">请注意，这&lt;strong&gt;不是推荐的做法&lt;/strong&gt;。全局安装会限制您使用特定版本的webpack，并且在使用其他版本的项目中可能会失败。</target>
        </trans-unit>
        <trans-unit id="d7565aecd96737d3289c05dacbd434f1ec973bfa" translate="yes" xml:space="preserve">
          <source>Note that this is only available in ESM. CommonJS is not supported by neither webpack nor Node.js.</source>
          <target state="translated">注意,这只在ESM中可用。webpack和Node.js都不支持CommonJS。</target>
        </trans-unit>
        <trans-unit id="066dbb2e1b71f7da4fb144c41f6b93050ac49a40" translate="yes" xml:space="preserve">
          <source>Note that this is what &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;webpack-dev-middleware&lt;/a&gt;, used by &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and many other packages, uses to mysteriously hide your files but continue serving them up to the browser!</source>
          <target state="translated">请注意，这是&lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;和许多其他软件包使用的&lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;webpack-dev-middleware&lt;/a&gt;用来神秘地隐藏文件，但继续将其提供给浏览器！</target>
        </trans-unit>
        <trans-unit id="0b4874e35211a1b1d3deb29114f373ba89f2f4f9" translate="yes" xml:space="preserve">
          <source>Note that we &lt;strong&gt;did not &lt;code&gt;import&lt;/code&gt; the &lt;code&gt;square&lt;/code&gt; method&lt;/strong&gt; from the &lt;code&gt;src/math.js&lt;/code&gt; module. That function is what's known as &quot;dead code&quot;, meaning an unused &lt;code&gt;export&lt;/code&gt; that should be dropped. Now let's run our npm script, &lt;code&gt;npm run build&lt;/code&gt;, and inspect the output bundle:</source>
          <target state="translated">需要注意的是，我们&lt;strong&gt;并没有 &lt;code&gt;import&lt;/code&gt; 的 &lt;code&gt;square&lt;/code&gt; 方法&lt;/strong&gt;从 &lt;code&gt;src/math.js&lt;/code&gt; 模块。该功能就是所谓的&amp;ldquo;死代码&amp;rdquo;，意味着应该删除未使用的 &lt;code&gt;export&lt;/code&gt; 。现在让我们运行npm脚本， &lt;code&gt;npm run build&lt;/code&gt; ，并检查输出包：</target>
        </trans-unit>
        <trans-unit id="815a010a6890c7fb0bb273198983260098b36578" translate="yes" xml:space="preserve">
          <source>Note that we aren't binding the &lt;code&gt;import&lt;/code&gt; to a variable. This is because polyfills simply run on their own, prior to the rest of the code base, allowing us to then assume certain native functionality exists.</source>
          <target state="translated">请注意，我们没有将 &lt;code&gt;import&lt;/code&gt; 绑定到变量。这是因为polyfill只是在其余代码库之前单独运行，因此我们可以假定存在某些本机功能。</target>
        </trans-unit>
        <trans-unit id="08c14f96276e39f6955bc4d3255fd1a5b89cc829" translate="yes" xml:space="preserve">
          <source>Note that we can also configure it to expose the library in the following ways:</source>
          <target state="translated">需要注意的是,我们还可以通过以下方式配置它来暴露库。</target>
        </trans-unit>
        <trans-unit id="c2cf40e81d1e5cda60a908f6f5fa124c8461d158" translate="yes" xml:space="preserve">
          <source>Note that webpack ignores the &lt;code&gt;name&lt;/code&gt; argument.</source>
          <target state="translated">请注意，webpack会忽略 &lt;code&gt;name&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="ac899dc9773859ad0e8500c80c621206fa2dafd1" translate="yes" xml:space="preserve">
          <source>Note that webpack needs to generate a unique module identifier from the resource and all loaders including options. It tries to do this with a &lt;code&gt;JSON.stringify&lt;/code&gt; of the options object. This is fine in 99.9% of cases, but may be not unique if you apply the same loaders with different options to the resource and the options have some stringified values.</source>
          <target state="translated">请注意，webpack需要从资源和所有加载程序（包括选项）生成唯一的模块标识符。它尝试使用options对象的 &lt;code&gt;JSON.stringify&lt;/code&gt; 做到这一点。在99.9％的情况下，这是可以的，但如果您对资源应用相同的加载程序但具有不同的选项，并且这些选项具有一些字符串化的值，则可能不是唯一的。</target>
        </trans-unit>
        <trans-unit id="379dfff92fa76807854690cb65ec373a68670eb8" translate="yes" xml:space="preserve">
          <source>Note that webpack will not alter any code other than &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; statements. If you are using other &lt;a href=&quot;http://es6-features.org/&quot;&gt;ES2015 features&lt;/a&gt;, make sure to &lt;a href=&quot;https://webpack.js.org/loaders/#transpiling&quot;&gt;use a transpiler&lt;/a&gt; such as &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; or &lt;a href=&quot;https://buble.surge.sh/guide/&quot;&gt;Bubl&amp;eacute;&lt;/a&gt; via webpack's &lt;a href=&quot;../concepts/loaders&quot;&gt;loader system&lt;/a&gt;.</source>
          <target state="translated">请注意，除了 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 语句外，webpack不会更改任何代码。如果您正在使用&lt;a href=&quot;http://es6-features.org/&quot;&gt;ES2015的&lt;/a&gt;其他功能，请确保通过webpack的&lt;a href=&quot;../concepts/loaders&quot;&gt;加载程序系统&lt;/a&gt;&lt;a href=&quot;https://webpack.js.org/loaders/#transpiling&quot;&gt;使用&lt;/a&gt;诸如&lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt;或&lt;a href=&quot;https://buble.surge.sh/guide/&quot;&gt;Bubl&amp;eacute;之类的&lt;/a&gt;编译器。</target>
        </trans-unit>
        <trans-unit id="0854b71012c3e8bbf3bd935a2a7c85cc8fddb8cf" translate="yes" xml:space="preserve">
          <source>Note that when using &lt;code&gt;import()&lt;/code&gt; on ES6 modules you must reference the &lt;code&gt;.default&lt;/code&gt; property as it's the actual &lt;code&gt;module&lt;/code&gt; object that will be returned when the promise is resolved.</source>
          <target state="translated">请注意，在ES6模块上使用 &lt;code&gt;import()&lt;/code&gt; 时，必须引用 &lt;code&gt;.default&lt;/code&gt; 属性，因为它是解决承诺后将返回的实际 &lt;code&gt;module&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="181b9d41c14d59f6b2ca5a895ba4ff388763a02d" translate="yes" xml:space="preserve">
          <source>Note that when using &lt;code&gt;sass&lt;/code&gt; (&lt;code&gt;Dart Sass&lt;/code&gt;), &lt;strong&gt;synchronous compilation is twice as fast as asynchronous compilation&lt;/strong&gt; by default, due to the overhead of asynchronous callbacks. To avoid this overhead, you can use the &lt;a href=&quot;https://www.npmjs.com/package/fibers&quot;&gt;fibers&lt;/a&gt; package to call asynchronous importers from the synchronous code path.</source>
          <target state="translated">请注意，使用 &lt;code&gt;sass&lt;/code&gt; （ &lt;code&gt;Dart Sass&lt;/code&gt; ）时，由于异步回调的开销，默认情况下，&lt;strong&gt;同步编译的速度是异步编译速度的两倍&lt;/strong&gt;。为了避免这种开销，您可以使用&lt;a href=&quot;https://www.npmjs.com/package/fibers&quot;&gt;Fiber&lt;/a&gt;包从同步代码路径中调用异步导入程序。</target>
        </trans-unit>
        <trans-unit id="0ec0f798cfee84fd48386363fdae0cc7310d4de1" translate="yes" xml:space="preserve">
          <source>Note that when using Dart Sass, &lt;strong&gt;synchronous compilation is twice as fast as asynchronous compilation&lt;/strong&gt; by default, due to the overhead of asynchronous callbacks. To avoid this overhead, you can use the &lt;a href=&quot;https://www.npmjs.com/package/fibers&quot;&gt;&lt;code&gt;fibers&lt;/code&gt;&lt;/a&gt; package to call asynchronous importers from the synchronous code path. To enable this, pass the &lt;code&gt;Fiber&lt;/code&gt; class to the &lt;code&gt;fiber&lt;/code&gt; option:</source>
          <target state="translated">请注意，使用Dart Sass时，由于异步回调的开销，默认情况下，&lt;strong&gt;同步编译的速度是异步编译速度的两倍&lt;/strong&gt;。为了避免这种开销，您可以使用&lt;a href=&quot;https://www.npmjs.com/package/fibers&quot;&gt; &lt;code&gt;fibers&lt;/code&gt; &lt;/a&gt;包从同步代码路径中调用异步导入程序。要启用此功能，请将 &lt;code&gt;Fiber&lt;/code&gt; 类传递给 &lt;code&gt;fiber&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="2ec411ef85897da6129ea32da4ad9fba0146403e" translate="yes" xml:space="preserve">
          <source>Note that while the &lt;a href=&quot;../plugins/terser-webpack-plugin&quot;&gt;&lt;code&gt;TerserPlugin&lt;/code&gt;&lt;/a&gt; is a great place to start for minification and being used by default, there are other options out there:</source>
          <target state="translated">请注意，虽然&lt;a href=&quot;../plugins/terser-webpack-plugin&quot;&gt; &lt;code&gt;TerserPlugin&lt;/code&gt; &lt;/a&gt;是开始进行缩小和默认情况下使用的好地方，但还有其他选项：</target>
        </trans-unit>
        <trans-unit id="7e888bdd78e1b01aca9023fb72d8bb1a201c25f1" translate="yes" xml:space="preserve">
          <source>Note that while the &lt;a href=&quot;../plugins/uglifyjs-webpack-plugin&quot;&gt;&lt;code&gt;UglifyJSPlugin&lt;/code&gt;&lt;/a&gt; is a great place to start for minification and being used by default, there are other options out there. Here are a few more popular ones:</source>
          <target state="translated">请注意，虽然&lt;a href=&quot;../plugins/uglifyjs-webpack-plugin&quot;&gt; &lt;code&gt;UglifyJSPlugin&lt;/code&gt; &lt;/a&gt;是开始进行最小化和默认情况下使用的好地方，但这里还有其他选项。这里有一些更受欢迎的：</target>
        </trans-unit>
        <trans-unit id="8df64e9b197c087418dffb7ce19eb91dc4ca6fef" translate="yes" xml:space="preserve">
          <source>Note that you also need to create an &lt;code&gt;app.js&lt;/code&gt; file.</source>
          <target state="translated">请注意，您还需要创建一个 &lt;code&gt;app.js&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="5958176f7c67ad08a6a4c97eb5a2909303d51d04" translate="yes" xml:space="preserve">
          <source>Note that you can use alias here and other features familiar from resolve. For example &lt;code&gt;{ txt: 'raw-loader' }&lt;/code&gt; would shim &lt;code&gt;txt!templates/demo.txt&lt;/code&gt; to use &lt;code&gt;raw-loader&lt;/code&gt;.</source>
          <target state="translated">请注意，您可以在此处使用别名以及resolve熟悉的其他功能。例如 &lt;code&gt;{ txt: 'raw-loader' }&lt;/code&gt; 将使 &lt;code&gt;txt!templates/demo.txt&lt;/code&gt; 填充以使用 &lt;code&gt;raw-loader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ff3aaf421f7178e18f94e0d1844e0be69d80d2f" translate="yes" xml:space="preserve">
          <source>Note that you can, and in most cases should, &lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;minimize css&lt;/a&gt; for better load times in production. On top of that, loaders exist for pretty much any flavor of CSS you can think of &amp;ndash; &lt;a href=&quot;../loaders/postcss-loader&quot;&gt;postcss&lt;/a&gt;, &lt;a href=&quot;../loaders/sass-loader&quot;&gt;sass&lt;/a&gt;, and &lt;a href=&quot;../loaders/less-loader&quot;&gt;less&lt;/a&gt; to name a few.</source>
          <target state="translated">请注意，您可以并且在大多数情况下应该&lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;最小化css&lt;/a&gt;，以缩短生产中的加载时间。最重要的是，你能想到的CSS的几乎所有的味道存在装载机- &lt;a href=&quot;../loaders/postcss-loader&quot;&gt;postcss&lt;/a&gt;，&lt;a href=&quot;../loaders/sass-loader&quot;&gt;青菜&lt;/a&gt;，和&lt;a href=&quot;../loaders/less-loader&quot;&gt;少&lt;/a&gt;仅举几例。</target>
        </trans-unit>
        <trans-unit id="dd6c6e3cb2fb6fc112fa914c9dd0f7aeea8587c3" translate="yes" xml:space="preserve">
          <source>Note that you can, and in most cases should, &lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;minimize css&lt;/a&gt; for better load times in production. On top of that, loaders exist for pretty much any flavor of CSS you can think of -- &lt;a href=&quot;../loaders/postcss-loader&quot;&gt;postcss&lt;/a&gt;, &lt;a href=&quot;../loaders/sass-loader&quot;&gt;sass&lt;/a&gt;, and &lt;a href=&quot;../loaders/less-loader&quot;&gt;less&lt;/a&gt; to name a few.</source>
          <target state="translated">请注意，您可以并且在大多数情况下应该&lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;最小化CSS&lt;/a&gt;，以缩短生产中的加载时间。最重要的是，你能想到的CSS的几乎所有的味道存在装载机- &lt;a href=&quot;../loaders/postcss-loader&quot;&gt;postcss&lt;/a&gt;，&lt;a href=&quot;../loaders/sass-loader&quot;&gt;青菜&lt;/a&gt;，和&lt;a href=&quot;../loaders/less-loader&quot;&gt;少&lt;/a&gt;仅举几例。</target>
        </trans-unit>
        <trans-unit id="0e4350d7392391ca19e12f242d2d5cf23848d0ba" translate="yes" xml:space="preserve">
          <source>Note that you'll also need to check your &lt;code&gt;tsconfig.json&lt;/code&gt; file. If the &lt;code&gt;module&lt;/code&gt; in &lt;code&gt;compilerOptions&lt;/code&gt; in &lt;code&gt;tsconfig.json&lt;/code&gt; is &lt;code&gt;commonjs&lt;/code&gt;, the setting is complete, else webpack will fail with an error. This occurs because &lt;code&gt;ts-node&lt;/code&gt; does not support any module syntax other than &lt;code&gt;commonjs&lt;/code&gt;.</source>
          <target state="translated">请注意，您还需要检查 &lt;code&gt;tsconfig.json&lt;/code&gt; 文件。如果 &lt;code&gt;module&lt;/code&gt; 在 &lt;code&gt;compilerOptions&lt;/code&gt; 在 &lt;code&gt;tsconfig.json&lt;/code&gt; 是 &lt;code&gt;commonjs&lt;/code&gt; ，设置完成后，其他的WebPack将失败与错误。发生这种情况是因为 &lt;code&gt;ts-node&lt;/code&gt; 除了 &lt;code&gt;commonjs&lt;/code&gt; 之外不支持任何模块语法。</target>
        </trans-unit>
        <trans-unit id="8cbe56a819a9cacdccb119ca76713cb5f7e07f92" translate="yes" xml:space="preserve">
          <source>Note that you'll also need to check your &lt;code&gt;tsconfig.json&lt;/code&gt; file. If the module in &lt;code&gt;compilerOptions&lt;/code&gt; in &lt;code&gt;tsconfig.json&lt;/code&gt; is &lt;code&gt;commonjs&lt;/code&gt;, the setting is complete, else webpack will fail with an error. This occurs because &lt;code&gt;ts-node&lt;/code&gt; does not support any module syntax other than &lt;code&gt;commonjs&lt;/code&gt;.</source>
          <target state="translated">请注意，您还需要检查 &lt;code&gt;tsconfig.json&lt;/code&gt; 文件。如果模块 &lt;code&gt;compilerOptions&lt;/code&gt; 在 &lt;code&gt;tsconfig.json&lt;/code&gt; 是 &lt;code&gt;commonjs&lt;/code&gt; ，设置完成后，其他的WebPack将失败与错误。发生这种情况是因为 &lt;code&gt;ts-node&lt;/code&gt; 除了 &lt;code&gt;commonjs&lt;/code&gt; 之外不支持任何模块语法。</target>
        </trans-unit>
        <trans-unit id="6f66b816c2a36ab4b8c44090b95a9ba474da5377" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;unused harmony export square&lt;/code&gt; comment above. If you look at the code below it, you'll notice that &lt;code&gt;square&lt;/code&gt; is not being imported, however, it is still included in the bundle. We'll fix that in the next section.</source>
          <target state="translated">注意上面 &lt;code&gt;unused harmony export square&lt;/code&gt; 注释。如果查看其下面的代码，您会注意到 &lt;code&gt;square&lt;/code&gt; 没有被导入，但是，它仍然包含在捆绑包中。我们将在下一部分中对其进行修复。</target>
        </trans-unit>
        <trans-unit id="f48a6e716c077c9d9a1978a8abd790a7b794e196" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;chunkFilename&lt;/code&gt;, which determines the name of non-entry chunk files. For more information on &lt;code&gt;chunkFilename&lt;/code&gt;, see &lt;a href=&quot;../configuration/output#output-chunkfilename&quot;&gt;output documentation&lt;/a&gt;. We'll also update our project to remove the now unused files:</source>
          <target state="translated">请注意， &lt;code&gt;chunkFilename&lt;/code&gt; 的使用确定了非输入块文件的名称。有关 &lt;code&gt;chunkFilename&lt;/code&gt; 的更多信息，请参见&lt;a href=&quot;../configuration/output#output-chunkfilename&quot;&gt;输出文档&lt;/a&gt;。我们还将更新项目，以删除现在未使用的文件：</target>
        </trans-unit>
        <trans-unit id="4587cc54b0123929cfcbfec9a5a3be8af98046c6" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;merge()&lt;/code&gt; calls in the environment-specific configurations to include our common configuration in &lt;code&gt;webpack.dev.js&lt;/code&gt; and &lt;code&gt;webpack.prod.js&lt;/code&gt;. The &lt;code&gt;webpack-merge&lt;/code&gt; tool offers a variety of advanced features for merging but for our use case we won't need any of that.</source>
          <target state="translated">请注意，在特定于环境的配置中使用 &lt;code&gt;merge()&lt;/code&gt; 调用，以将我们的常见配置包含在 &lt;code&gt;webpack.dev.js&lt;/code&gt; 和 &lt;code&gt;webpack.prod.js&lt;/code&gt; 中。该 &lt;code&gt;webpack-merge&lt;/code&gt; 工具提供了多种高级功能合并，但为我所用的情况下，我们将不再需要任何的。</target>
        </trans-unit>
        <trans-unit id="d0bb6c2d31383d9a9ef191d6f4abefdb96c47040" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;merge()&lt;/code&gt; in the environment-specific configurations to easily include our common configuration in &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;prod&lt;/code&gt;. The &lt;code&gt;webpack-merge&lt;/code&gt; tool offers a variety of advanced features for merging but for our use case we won't need any of that.</source>
          <target state="translated">请注意，在特定于环境的配置中使用 &lt;code&gt;merge()&lt;/code&gt; 可以轻松地在 &lt;code&gt;dev&lt;/code&gt; 和 &lt;code&gt;prod&lt;/code&gt; 中包含我们的通用配置。该 &lt;code&gt;webpack-merge&lt;/code&gt; 工具提供了多种高级功能合并，但为我所用的情况下，我们将不再需要任何的。</target>
        </trans-unit>
        <trans-unit id="e1f83b85255c055aa0dd4ca3bf0926d6f9b529f9" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;webpackChunkName&lt;/code&gt; in the comment. This will cause our separate bundle to be named &lt;code&gt;lodash.bundle.js&lt;/code&gt; instead of just &lt;code&gt;[id].bundle.js&lt;/code&gt;. For more information on &lt;code&gt;webpackChunkName&lt;/code&gt; and the other available options, see the &lt;a href=&quot;../api/module-methods#import-&quot;&gt;&lt;code&gt;import()&lt;/code&gt; documentation&lt;/a&gt;. Let's run webpack to see &lt;code&gt;lodash&lt;/code&gt; separated out to a separate bundle:</source>
          <target state="translated">注意注释中 &lt;code&gt;webpackChunkName&lt;/code&gt; 的使用。这将导致我们单独的捆绑包被命名为 &lt;code&gt;lodash.bundle.js&lt;/code&gt; ,而不仅仅是 &lt;code&gt;[id].bundle.js&lt;/code&gt; 。有关 &lt;code&gt;webpackChunkName&lt;/code&gt; 和其他可用选项的更多信息，请参见&lt;a href=&quot;../api/module-methods#import-&quot;&gt; &lt;code&gt;import()&lt;/code&gt; 文档&lt;/a&gt;。让我们运行webpack看看 &lt;code&gt;lodash&lt;/code&gt; 被分离到一个单独的包中：</target>
        </trans-unit>
        <trans-unit id="9f5400c0110f4aed7f5036b112b3b9ea47989a12" translate="yes" xml:space="preserve">
          <source>Note this option does not affect output files for on-demand-loaded chunks. For these files the &lt;a href=&quot;#output-chunkfilename&quot;&gt;&lt;code&gt;output.chunkFilename&lt;/code&gt;&lt;/a&gt; option is used. Files created by loaders also aren't affected. In this case you would have to try the specific loader's available options.</source>
          <target state="translated">请注意，此选项不会影响按需加载的块的输出文件。对于这些文件，使用&lt;a href=&quot;#output-chunkfilename&quot;&gt; &lt;code&gt;output.chunkFilename&lt;/code&gt; &lt;/a&gt;选项。加载程序创建的文件也不受影响。在这种情况下，您将不得不尝试特定加载程序的可用选项。</target>
        </trans-unit>
        <trans-unit id="d68ef24affd81aa9ec0ac1e315381bce93016298" translate="yes" xml:space="preserve">
          <source>Note this option does not affect output files for on-demand-loaded chunks. It only affects output files that are initially loaded. For on-demand-loaded chunk files the &lt;a href=&quot;#outputchunkfilename&quot;&gt;&lt;code&gt;output.chunkFilename&lt;/code&gt;&lt;/a&gt; option is used. Files created by loaders also aren't affected. In this case you would have to try the specific loader's available options.</source>
          <target state="translated">请注意，此选项不会影响按需加载的块的输出文件。它仅影响最初加载的输出文件。对于按需加载的块文件，使用&lt;a href=&quot;#outputchunkfilename&quot;&gt; &lt;code&gt;output.chunkFilename&lt;/code&gt; &lt;/a&gt;选项。加载程序创建的文件也不会受到影响。在这种情况下，您将不得不尝试特定加载程序的可用选项。</target>
        </trans-unit>
        <trans-unit id="b1ecfcf85915f7191f0d04d5647a8f68d75f6d5e" translate="yes" xml:space="preserve">
          <source>Note this option is called filename but you are still allowed to use something like &lt;code&gt;&quot;js/[name]/bundle.js&quot;&lt;/code&gt; to create a folder structure.</source>
          <target state="translated">请注意，此选项称为文件名，但仍然可以使用 &lt;code&gt;&quot;js/[name]/bundle.js&quot;&lt;/code&gt; 来创建文件夹结构。</target>
        </trans-unit>
        <trans-unit id="f2f889220bcb1a257e3dd5df63c21308173e5413" translate="yes" xml:space="preserve">
          <source>Note this option is called filename but you are still allowed to use something like &lt;code&gt;'js/[name]/bundle.js'&lt;/code&gt; to create a folder structure.</source>
          <target state="translated">请注意，此选项称为文件名，但仍然可以使用 &lt;code&gt;'js/[name]/bundle.js'&lt;/code&gt; 来创建文件夹结构。</target>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="c3b04644c043c2b78efb2d6b3f1ac6702eb2b70e" translate="yes" xml:space="preserve">
          <source>Note: &lt;a href=&quot;../configuration/dev-server&quot;&gt;webpack DevServer&lt;/a&gt; writes in-memory by default. We'll need to enable &lt;a href=&quot;../configuration/dev-server#devserverwritetodisk-&quot;&gt;writeToDisk&lt;/a&gt; option in order for http-server to be able to serve files from &lt;code&gt;./dist&lt;/code&gt; directory.</source>
          <target state="translated">注意：默认情况下，&lt;a href=&quot;../configuration/dev-server&quot;&gt;webpack DevServer&lt;/a&gt;写入内存。我们需要启用&lt;a href=&quot;../configuration/dev-server#devserverwritetodisk-&quot;&gt;writeToDisk&lt;/a&gt;选项，以使http-server能够处理 &lt;code&gt;./dist&lt;/code&gt; 目录中的文件。</target>
        </trans-unit>
        <trans-unit id="1f25a706f1d9eb54c7ea9d5344c0c0fc94aab5c2" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;electron&lt;/code&gt;, &lt;code&gt;worker&lt;/code&gt; and &lt;code&gt;worklet&lt;/code&gt; comes combined with either &lt;code&gt;node&lt;/code&gt; or &lt;code&gt;browser&lt;/code&gt;, depending on the context.</source>
          <target state="translated">注意： &lt;code&gt;electron&lt;/code&gt; ic， &lt;code&gt;worker&lt;/code&gt; 和 &lt;code&gt;worklet&lt;/code&gt; 可以与 &lt;code&gt;node&lt;/code&gt; 或 &lt;code&gt;browser&lt;/code&gt; 结合使用，具体取决于上下文。</target>
        </trans-unit>
        <trans-unit id="9fa37790c2d905a8e403ed8d2cae24a805ebdb9c" translate="yes" xml:space="preserve">
          <source>Note: HMR is automatically supported in webpack 5. No need to configure it. Skip the following:</source>
          <target state="translated">注:在webpack 5中自动支持HMR。不需要对它进行配置。跳过以下内容。</target>
        </trans-unit>
        <trans-unit id="14da4a871de5dba95b15a703ecaef4355b68badc" translate="yes" xml:space="preserve">
          <source>Note: It's only applied to dynamically loaded css chunks, if you want to modify link attributes inside html file, please using &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin&quot;&gt;html-webpack-plugin&lt;/a&gt;</source>
          <target state="translated">注意：它仅适用于动态加载的CSS块，如果要修改html文件中的链接属性，请使用&lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin&quot;&gt;html-webpack-plugin&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="efdb0c93069c7696135c98479c69e6fa546e23fb" translate="yes" xml:space="preserve">
          <source>Note: Only the first valid result will be used, not all valid results.</source>
          <target state="translated">注意:只使用第一个有效结果,而不是所有有效结果。</target>
        </trans-unit>
        <trans-unit id="4a508da31fbbc7d2749229c9372fdff832cca96e" translate="yes" xml:space="preserve">
          <source>Note: Providing only a ESM comes with restrictions for node.js. Such a package would only work in Node.js &amp;gt;= 14 and only when using &lt;code&gt;import&lt;/code&gt;. It won't work with &lt;code&gt;require()&lt;/code&gt;.</source>
          <target state="translated">注意：仅提供ESM附带了node.js的限制。这样的程序包仅在Node.js&amp;gt; = 14中有效，并且仅在使用 &lt;code&gt;import&lt;/code&gt; 时有效。它不适用于 &lt;code&gt;require()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bf6d6bb7792aab4d7ec1514397af56c2f0ecc75" translate="yes" xml:space="preserve">
          <source>Note: Since &lt;code&gt;production&lt;/code&gt; and &lt;code&gt;development&lt;/code&gt; is not supported by everyone, no assumption should be made when none of these is set.</source>
          <target state="translated">注意：由于并非所有人都支持 &lt;code&gt;production&lt;/code&gt; 和 &lt;code&gt;development&lt;/code&gt; 在未设置任何条件的情况下，请勿进行任何假设。</target>
        </trans-unit>
        <trans-unit id="b7045840c5a80e8b4884c07fbcf31511f977e190" translate="yes" xml:space="preserve">
          <source>Note: These are the flags with webpack v4, starting v5 CLI also supports &lt;a href=&quot;cli#core-flags&quot;&gt;core flags&lt;/a&gt;</source>
          <target state="translated">注意：这些是webpack v4的标志，从v5开始，CLI也支持&lt;a href=&quot;cli#core-flags&quot;&gt;核心标志&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e902f7ddd19ae6525e8540c00b2d75d1642a670b" translate="yes" xml:space="preserve">
          <source>Note: This page only discusses using plugins, however if you are interested in writing your own please visit &lt;a href=&quot;https://webpack.js.org/contribute/writing-a-plugin/&quot;&gt;Writing a Plugin&lt;/a&gt;.</source>
          <target state="translated">注意：此页面仅讨论使用插件，但是，如果您有兴趣编写自己&lt;a href=&quot;https://webpack.js.org/contribute/writing-a-plugin/&quot;&gt;的插件，&lt;/a&gt;请访问编写插件。</target>
        </trans-unit>
        <trans-unit id="15eb3bf90deb8ee595f45bf48e24cec08c3ce209" translate="yes" xml:space="preserve">
          <source>Note: This page only discusses using plugins, however if you are interested in writing your own please visit &lt;a href=&quot;https://webpack.js.org/development/how-to-write-a-plugin/&quot;&gt;Writing a Plugin&lt;/a&gt;.</source>
          <target state="translated">注意：此页面仅讨论使用插件，但是，如果您有兴趣编写自己&lt;a href=&quot;https://webpack.js.org/development/how-to-write-a-plugin/&quot;&gt;的插件，&lt;/a&gt;请访问编写插件。</target>
        </trans-unit>
        <trans-unit id="fe24033bacbfa2d35049038ddfa9c6e799872e63" translate="yes" xml:space="preserve">
          <source>Note: the &lt;code&gt;ts-loader&lt;/code&gt; documentation suggests the use of &lt;code&gt;cache-loader&lt;/code&gt;, but this actually slows the incremental builds down with disk writes.</source>
          <target state="translated">注意： &lt;code&gt;ts-loader&lt;/code&gt; 文档建议使用 &lt;code&gt;cache-loader&lt;/code&gt; ，但这实际上会降低磁盘写入的增量生成速度。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="e8bfaa60c4750e819f443d8e6798a0c1a5b2e589" translate="yes" xml:space="preserve">
          <source>Notes about ordering</source>
          <target state="translated">订购须知</target>
        </trans-unit>
        <trans-unit id="5e049edb6a232b51d2fcf3e47575f1899cfd4c9c" translate="yes" xml:space="preserve">
          <source>Nothing to see here .... yet</source>
          <target state="translated">没什么好看的......但</target>
        </trans-unit>
        <trans-unit id="b0cc522d30303e76a33c00b323d39df208ae966a" translate="yes" xml:space="preserve">
          <source>Notice anything different about &lt;code&gt;dist/bundle.js&lt;/code&gt;? Clearly the whole bundle is now minified and mangled, but, if you look carefully, you won't see the &lt;code&gt;square&lt;/code&gt; function included but will see a mangled version of the &lt;code&gt;cube&lt;/code&gt; function (&lt;code&gt;function r(e){return e*e*e}n.a=r&lt;/code&gt;). With minification and tree shaking our bundle is now a few bytes smaller! While that may not seem like much in this contrived example, tree shaking can yield a significant decrease in bundle size when working on larger applications with complex dependency trees.</source>
          <target state="translated">注意 &lt;code&gt;dist/bundle.js&lt;/code&gt; 有什么不同吗？显然，整个捆绑包现在已缩小并变形了，但是，如果仔细看，您将看不到所包含的 &lt;code&gt;square&lt;/code&gt; 函数，但是会看到 &lt;code&gt;cube&lt;/code&gt; 函数的变形版本（ &lt;code&gt;function r(e){return e*e*e}n.a=r&lt;/code&gt; ）。随着缩小和摇树，我们的捆绑包现在缩小了几个字节！尽管在这个人为的示例中看起来并不多，但是当在具有复杂依赖树的大型应用程序上工作时，树状摇动可以大大减少捆绑的大小。</target>
        </trans-unit>
        <trans-unit id="db1bc419110e06495e99172056f769c76fe73160" translate="yes" xml:space="preserve">
          <source>Notice anything different about &lt;code&gt;dist/bundle.js&lt;/code&gt;? Clearly the whole bundle is now minified and mangled, but, if you look carefully, you won't see the &lt;code&gt;square&lt;/code&gt; function included but will see a mangled version of the &lt;code&gt;cube&lt;/code&gt; function (&lt;code&gt;function r(e){return e*e*e}n.a=r&lt;/code&gt;). With minification and tree shaking, our bundle is now a few bytes smaller! While that may not seem like much in this contrived example, tree shaking can yield a significant decrease in bundle size when working on larger applications with complex dependency trees.</source>
          <target state="translated">注意 &lt;code&gt;dist/bundle.js&lt;/code&gt; 有什么不同吗？显然，整个捆绑包现在已缩小并变形了，但是，如果仔细看，您将看不到包含的 &lt;code&gt;square&lt;/code&gt; 函数，但是会看到 &lt;code&gt;cube&lt;/code&gt; 函数的变形版本（ &lt;code&gt;function r(e){return e*e*e}n.a=r&lt;/code&gt; ）。随着缩小和摇树，我们的捆绑包现在减小了几个字节！尽管在这个人为的示例中看起来并不多，但是当在具有复杂依赖树的大型应用程序上工作时，树状摇动可以大大减少捆绑包的大小。</target>
        </trans-unit>
        <trans-unit id="64d7b4aee25c9561263ab9551fbbdd6475155528" translate="yes" xml:space="preserve">
          <source>Notice that many array configurations allow to reference the default value via &lt;code&gt;&quot;...&quot;&lt;/code&gt;.</source>
          <target state="translated">请注意，许多阵列配置都允许通过 &lt;code&gt;&quot;...&quot;&lt;/code&gt; 引用默认值。</target>
        </trans-unit>
        <trans-unit id="6bfed1ae1a19ae18e28dbbf171ef56bb79109e3c" translate="yes" xml:space="preserve">
          <source>Notice that throughout the configuration we use Node's built-in &lt;a href=&quot;https://nodejs.org/api/path.html&quot;&gt;path module&lt;/a&gt; and prefix it with the &lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html#globals_dirname&quot;&gt;__dirname&lt;/a&gt; global. This prevents file path issues between operating systems and allows relative paths to work as expected. See &lt;a href=&quot;https://nodejs.org/api/path.html#path_windows_vs_posix&quot;&gt;this section&lt;/a&gt; for more info on POSIX vs. Windows paths.</source>
          <target state="translated">请注意，在整个配置过程中，我们使用Node的内置&lt;a href=&quot;https://nodejs.org/api/path.html&quot;&gt;路径模块&lt;/a&gt;，并以&lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html#globals_dirname&quot;&gt;__dirname&lt;/a&gt;全局前缀作为前缀。这样可以防止操作系统之间出现文件路径问题，并允许相对路径按预期工作。有关POSIX与Windows路径的更多信息，请参见&lt;a href=&quot;https://nodejs.org/api/path.html#path_windows_vs_posix&quot;&gt;本节&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="226a214c4e2eb4b79e49b7c5e1ed81d16a12d8da" translate="yes" xml:space="preserve">
          <source>Now add an npm script to make it a little easier to run the server:</source>
          <target state="translated">现在添加一个npm脚本,让它更容易运行服务器。</target>
        </trans-unit>
        <trans-unit id="ba9c969ad9ef2052b981443836f1219eef634594" translate="yes" xml:space="preserve">
          <source>Now adjust the config. We'll be adding our &lt;code&gt;src/print.js&lt;/code&gt; as a new entry point (&lt;code&gt;print&lt;/code&gt;) and we'll change the output as well, so that it will dynamically generate bundle names, based on the entry point names:</source>
          <target state="translated">现在调整配置。我们将把 &lt;code&gt;src/print.js&lt;/code&gt; 添加为新的入口点（ &lt;code&gt;print&lt;/code&gt; ），并且还将更改输出，以便其将基于入口点名称动态生成捆绑包名称：</target>
        </trans-unit>
        <trans-unit id="56cdab68da3bdbc6b411b84827c94a87dc498241" translate="yes" xml:space="preserve">
          <source>Now all &lt;code&gt;.svg&lt;/code&gt; files will be encoded by &lt;code&gt;mini-svg-data-uri&lt;/code&gt; package.</source>
          <target state="translated">现在，所有 &lt;code&gt;.svg&lt;/code&gt; 文件都将通过 &lt;code&gt;mini-svg-data-uri&lt;/code&gt; 包进行编码。</target>
        </trans-unit>
        <trans-unit id="ccc79ac956503a03e31c1d81aeba58819266faca" translate="yes" xml:space="preserve">
          <source>Now fire up your browser and go to &lt;code&gt;http://localhost:3000&lt;/code&gt;. You should see your webpack app running and functioning!</source>
          <target state="translated">现在启动浏览器并转到 &lt;code&gt;http://localhost:3000&lt;/code&gt; 。您应该看到您的webpack应用正在运行并正常运行！</target>
        </trans-unit>
        <trans-unit id="0034d36f4a8922a018612029cd5aa20507ba293d" translate="yes" xml:space="preserve">
          <source>Now from within our entry script (i.e. &lt;code&gt;src/index.js&lt;/code&gt;), we could &lt;code&gt;import { file, parse } from './globals.js';&lt;/code&gt; and all should work smoothly.</source>
          <target state="translated">现在，从输入脚本（即 &lt;code&gt;src/index.js&lt;/code&gt; ）中，我们可以 &lt;code&gt;import { file, parse } from './globals.js';&lt;/code&gt; 所有工作都应该顺利进行。</target>
        </trans-unit>
        <trans-unit id="8687eb2354de2500d8e7c20fcc02617bc38c54e1" translate="yes" xml:space="preserve">
          <source>Now from within our entry script (i.e. &lt;code&gt;src/index.js&lt;/code&gt;), we could use &lt;code&gt;const { file, parse } = require('./globals.js');&lt;/code&gt; and all should work smoothly.</source>
          <target state="translated">现在，从我们的输入脚本（即 &lt;code&gt;src/index.js&lt;/code&gt; ）中，我们可以使用 &lt;code&gt;const { file, parse } = require('./globals.js');&lt;/code&gt; 所有工作都应该顺利进行。</target>
        </trans-unit>
        <trans-unit id="77fd810b85b608ae4a0e8b00b4265d713751a351" translate="yes" xml:space="preserve">
          <source>Now in your terminal run &lt;code&gt;npm run server&lt;/code&gt;, it should give you an output similar to this:</source>
          <target state="translated">现在在您的终端中运行 &lt;code&gt;npm run server&lt;/code&gt; ，它应该给您类似以下的输出：</target>
        </trans-unit>
        <trans-unit id="18401d6763e56a1b0d4bad8ebaaa66901cb3b871" translate="yes" xml:space="preserve">
          <source>Now let's bundle this library in a way that will achieve the following goals:</source>
          <target state="translated">现在让我们以实现以下目标的方式来捆绑这个库。</target>
        </trans-unit>
        <trans-unit id="a70cc89b388022d69a6163728328a8c05948be7a" translate="yes" xml:space="preserve">
          <source>Now let's configure webpack to handle TypeScript:</source>
          <target state="translated">现在让我们配置webpack来处理TypeScript。</target>
        </trans-unit>
        <trans-unit id="9df3f71d4a04568b0e39f6f47c094d9602a090cd" translate="yes" xml:space="preserve">
          <source>Now let's make sure we have something to debug, so let's create an error in our &lt;code&gt;print.js&lt;/code&gt; file:</source>
          <target state="translated">现在，确保我们有一些要调试的东西，因此让我们在 &lt;code&gt;print.js&lt;/code&gt; 文件中创建一个错误：</target>
        </trans-unit>
        <trans-unit id="3229a4dbd70f76dcc03ac5f7aa8eb2f27ed80939" translate="yes" xml:space="preserve">
          <source>Now let's repoint our &lt;code&gt;scripts&lt;/code&gt; to the new configurations. We'll use the &lt;em&gt;development&lt;/em&gt; one for our &lt;code&gt;webpack-dev-server&lt;/code&gt;, &lt;code&gt;npm start&lt;/code&gt;, script and the &lt;em&gt;production&lt;/em&gt; one for our &lt;code&gt;npm run build&lt;/code&gt; script:</source>
          <target state="translated">现在，让我们将 &lt;code&gt;scripts&lt;/code&gt; 重新指向新配置。我们将使用&lt;em&gt;开发&lt;/em&gt;一个为我们 &lt;code&gt;webpack-dev-server&lt;/code&gt; ， &lt;code&gt;npm start&lt;/code&gt; ，脚本和&lt;em&gt;生产&lt;/em&gt;一个为我们的 &lt;code&gt;npm run build&lt;/code&gt; 脚本：</target>
        </trans-unit>
        <trans-unit id="c6c1d1cc7ab59c528e90c3b472368fa33a7ed117" translate="yes" xml:space="preserve">
          <source>Now let's run webpack and check out our new lazy-loading functionality:</source>
          <target state="translated">现在让我们运行webpack,检查一下我们新的懒加载功能。</target>
        </trans-unit>
        <trans-unit id="b357dbc2857140b0c90d8fb740c1c50892deaf49" translate="yes" xml:space="preserve">
          <source>Now let's update the &lt;code&gt;index.js&lt;/code&gt; file so that when a change inside &lt;code&gt;print.js&lt;/code&gt; is detected we tell webpack to accept the updated module.</source>
          <target state="translated">现在，让我们更新 &lt;code&gt;index.js&lt;/code&gt; 文件，使内部的变化时 &lt;code&gt;print.js&lt;/code&gt; 检测，我们告诉的WebPack接受更新模块。</target>
        </trans-unit>
        <trans-unit id="71b5c89b181903b4550c4426aa8f370a3e20c41e" translate="yes" xml:space="preserve">
          <source>Now let's update the configuration file to make use of the loader.</source>
          <target state="translated">现在让我们更新配置文件来使用加载器。</target>
        </trans-unit>
        <trans-unit id="2f5e58b0899a174e83a3c9184dc846dd0eba8237" translate="yes" xml:space="preserve">
          <source>Now lets change the import of &lt;code&gt;lodash&lt;/code&gt; in our &lt;code&gt;./index.ts&lt;/code&gt; due to the fact that there is no default export present in &lt;code&gt;lodash&lt;/code&gt; definitions.</source>
          <target state="translated">现在，让我们改变进口 &lt;code&gt;lodash&lt;/code&gt; 我们 &lt;code&gt;./index.ts&lt;/code&gt; 由于事实，那就是目前在没有默认出口 &lt;code&gt;lodash&lt;/code&gt; 定义。</target>
        </trans-unit>
        <trans-unit id="6e465855273d6f2a32129306059f1f12d5ae5391" translate="yes" xml:space="preserve">
          <source>Now open the resulting &lt;code&gt;index.html&lt;/code&gt; file in your browser. Click the button and look in your console where the error is displayed. The error should say something like this:</source>
          <target state="translated">现在，在浏览器中打开生成的 &lt;code&gt;index.html&lt;/code&gt; 文件。单击该按钮，然后在控制台中查看显示错误的位置。该错误应显示如下内容：</target>
        </trans-unit>
        <trans-unit id="4e7301a0388be473c7b02660fc1b9c005fb15f3f" translate="yes" xml:space="preserve">
          <source>Now run &lt;code&gt;npm run watch&lt;/code&gt; from the command line and see how webpack compiles your code. You can see that it doesn't exit the command line because the script is currently watching your files.</source>
          <target state="translated">现在从命令行运行 &lt;code&gt;npm run watch&lt;/code&gt; ，看看webpack如何编译您的代码。您可以看到它没有退出命令行，因为脚本当前正在监视您的文件。</target>
        </trans-unit>
        <trans-unit id="a8819a3694737e7abc14d60fcbf8c0bb4201c624" translate="yes" xml:space="preserve">
          <source>Now run a new build and let's see if webpack handled our fonts:</source>
          <target state="translated">现在运行一个新的构建,让我们看看webpack是否处理了我们的字体。</target>
        </trans-unit>
        <trans-unit id="8bc10b3505d1b8a53aea70ead4b91821f2ae548d" translate="yes" xml:space="preserve">
          <source>Now run an &lt;code&gt;npm run build&lt;/code&gt; and inspect the &lt;code&gt;/dist&lt;/code&gt; folder. If everything went well you should now only see the files generated from the build and no more old files!</source>
          <target state="translated">现在运行 &lt;code&gt;npm run build&lt;/code&gt; 并检查 &lt;code&gt;/dist&lt;/code&gt; 文件夹。如果一切顺利，您现在应该只看到从构建生成的文件，而不再看到旧文件！</target>
        </trans-unit>
        <trans-unit id="c980596675b42b015fa33b5ec44395e051396087" translate="yes" xml:space="preserve">
          <source>Now run the following command and see if your script alias works:</source>
          <target state="translated">现在运行以下命令,看看你的脚本别名是否有效。</target>
        </trans-unit>
        <trans-unit id="51925bf23211310f8cdb3feec20b576227cc12df" translate="yes" xml:space="preserve">
          <source>Now run your build command:</source>
          <target state="translated">现在运行你的构建命令。</target>
        </trans-unit>
        <trans-unit id="8bc24f3703809a27283cf6928903a1da64a677fa" translate="yes" xml:space="preserve">
          <source>Now save your file and check the terminal window. You should see that webpack automatically recompiles the changed module!</source>
          <target state="translated">现在保存你的文件并检查终端窗口。你应该看到webpack会自动重新编译修改后的模块。</target>
        </trans-unit>
        <trans-unit id="b0a22991df6a10bea7b0cd5b6859050cd2788ab5" translate="yes" xml:space="preserve">
          <source>Now that you have a basic build together you should move on to the next guide &lt;a href=&quot;asset-management&quot;&gt;&lt;code&gt;Asset Management&lt;/code&gt;&lt;/a&gt; to learn how to manage assets like images and fonts with webpack. At this point, your project should look like this:</source>
          <target state="translated">现在，您已经拥有了基本的构建，现在应该继续阅读下一个指南&amp;ldquo; &lt;a href=&quot;asset-management&quot;&gt; &lt;code&gt;Asset Management&lt;/code&gt; &lt;/a&gt;以了解如何使用webpack管理诸如图像和字体之类的资产。此时，您的项目应如下所示：</target>
        </trans-unit>
        <trans-unit id="63f3473f5e6ea29aae9778ab6ce863473f1f035c" translate="yes" xml:space="preserve">
          <source>Now that you've learned about dynamically adding bundles to your HTML, let's dive into the &lt;a href=&quot;development&quot;&gt;development guide&lt;/a&gt;. Or, if you want to dig into more advanced topics, we would recommend heading over to the &lt;a href=&quot;code-splitting&quot;&gt;code splitting guide&lt;/a&gt;.</source>
          <target state="translated">现在，您已经了解了如何将捆绑包动态添加到HTML中，让我们深入研究&lt;a href=&quot;development&quot;&gt;开发指南&lt;/a&gt;。或者，如果您想深入研究更高级的主题，我们建议您转到&lt;a href=&quot;code-splitting&quot;&gt;代码拆分指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8fd584df8d9df719d43b557d48ad32300a5aa0a" translate="yes" xml:space="preserve">
          <source>Now that you've learned how to automatically compile your code and run a simple development server, you can check out the next guide, which will cover &lt;a href=&quot;code-splitting&quot;&gt;Code Splitting&lt;/a&gt;.</source>
          <target state="translated">既然您已经了解了如何自动编译代码并运行简单的开发服务器，那么您可以查看下一个指南，该指南将介绍&lt;a href=&quot;code-splitting&quot;&gt;Code Splitting&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e6078b764dd6ee14190b4f56b64b8835f7f586a" translate="yes" xml:space="preserve">
          <source>Now that you've learned how to automatically compile your code and run a simple development server, you can check out the next guide, which will cover &lt;a href=&quot;hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt;.</source>
          <target state="translated">既然您已经了解了如何自动编译代码并运行简单的开发服务器，那么您可以查看下一个指南，该指南将介绍&lt;a href=&quot;hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a68fcc5f419a8da05abd5181c9cc69d770f8fd8f" translate="yes" xml:space="preserve">
          <source>Now that your server is working, you might want to give &lt;a href=&quot;hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; a try!</source>
          <target state="translated">现在您的服务器正在运行，您可能想尝试&lt;a href=&quot;hot-module-replacement&quot;&gt;热模块更换&lt;/a&gt;！</target>
        </trans-unit>
        <trans-unit id="a2d984465f0c1b21f3d0ec45a0fe32d762bf606b" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;npm run build&lt;/code&gt; command can be used in place of the &lt;code&gt;npx&lt;/code&gt; command we used earlier. Note that within &lt;code&gt;scripts&lt;/code&gt; we can reference locally installed npm packages by name the same way we did with &lt;code&gt;npx&lt;/code&gt;. This convention is the standard in most npm-based projects because it allows all contributors to use the same set of common scripts (each with flags like &lt;code&gt;--config&lt;/code&gt; if necessary).</source>
          <target state="translated">现在，可以使用 &lt;code&gt;npm run build&lt;/code&gt; 命令代替我们之前使用的 &lt;code&gt;npx&lt;/code&gt; 命令。请注意，在 &lt;code&gt;scripts&lt;/code&gt; 我们可以按名称引用本地安装的npm软件包，就像对 &lt;code&gt;npx&lt;/code&gt; 一样。该约定是大多数基于npm的项目中的标准，因为它允许所有贡献者使用同一组通用脚本（如有必要，每个脚本都带有 &lt;code&gt;--config&lt;/code&gt; 之类的标志）。</target>
        </trans-unit>
        <trans-unit id="e7c36cf17ca76d0db87bec101748d0bfa22867c3" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;npm run build&lt;/code&gt; command can be used in place of the &lt;code&gt;npx&lt;/code&gt; command we used earlier. Note that within &lt;code&gt;scripts&lt;/code&gt; we can reference locally installed npm packages by name the same way we did with &lt;code&gt;npx&lt;/code&gt;. This convention is the standard in most npm-based projects because it allows all contributors to use the same set of common scripts.</source>
          <target state="translated">现在可以使用 &lt;code&gt;npm run build&lt;/code&gt; 命令代替我们之前使用的 &lt;code&gt;npx&lt;/code&gt; 命令。请注意，在 &lt;code&gt;scripts&lt;/code&gt; 我们可以使用与 &lt;code&gt;npx&lt;/code&gt; 相同的名称引用本地安装的npm软件包。该约定是大多数基于npm的项目中的标准，因为它允许所有贡献者使用同一组通用脚本。</target>
        </trans-unit>
        <trans-unit id="e270bde6ce552781a474737a3e2add61123b1002" translate="yes" xml:space="preserve">
          <source>Now to test it. Stop your server and refresh your page. If your browser supports Service Workers then you should still be looking at your application. However, it has been served up by your Service Worker and &lt;strong&gt;not&lt;/strong&gt; by the server.</source>
          <target state="translated">现在进行测试。停止服务器并刷新页面。如果您的浏览器支持Service Workers，那么您仍应在查看您的应用程序。但是，它已由您的服务工作者提供，而&lt;strong&gt;不是&lt;/strong&gt;由服务器提供。</target>
        </trans-unit>
        <trans-unit id="3429ffa15c0495b0937445ca31923a90c00d6386" translate="yes" xml:space="preserve">
          <source>Now we can &lt;code&gt;fetch&lt;/code&gt; some data within our entry script:</source>
          <target state="translated">现在我们可以在输入脚本中 &lt;code&gt;fetch&lt;/code&gt; 一些数据：</target>
        </trans-unit>
        <trans-unit id="f093f6e8b13dfdaefb7b274645cdc1f312a7f06f" translate="yes" xml:space="preserve">
          <source>Now we can run &lt;code&gt;npm start&lt;/code&gt; from the command line and we will see our browser automatically loading up our page. If you now change any of the source files and save them, the web server will automatically reload after the code has been compiled. Give it a try!</source>
          <target state="translated">现在我们可以从命令行 &lt;code&gt;npm start&lt;/code&gt; ，我们将看到浏览器自动加载页面。如果现在更改任何源文件并保存它们，则在编译代码后，Web服务器将自动重新加载。试试看！</target>
        </trans-unit>
        <trans-unit id="2f28031dc5f208149117e7b6980c34e1b46cf0d9" translate="yes" xml:space="preserve">
          <source>Now we need to make some adjustments to our webpack configuration file in order to make sure the middleware will function correctly:</source>
          <target state="translated">现在,我们需要对webpack配置文件进行一些调整,以确保中间件能够正常运行。</target>
        </trans-unit>
        <trans-unit id="faeadf5a50de73054f1905eac6886f957bfced3b" translate="yes" xml:space="preserve">
          <source>Now we need to tell webpack to extract these source maps and include in our final bundle:</source>
          <target state="translated">现在我们需要告诉webpack提取这些源码图,并将其包含在我们的最终捆绑包中。</target>
        </trans-unit>
        <trans-unit id="6803b16f69e184ab5c2f00b5adc4e2e50fea89fd" translate="yes" xml:space="preserve">
          <source>Now we need to tell webpack to extract these source maps and into our final bundle:</source>
          <target state="translated">现在我们需要告诉webpack将这些源码图解压到我们的最终捆绑包中。</target>
        </trans-unit>
        <trans-unit id="daa2cc1ebd5f54388aa2a4c401a9c199eb5e43d4" translate="yes" xml:space="preserve">
          <source>Now we'll create the following directory structure, files and their contents:</source>
          <target state="translated">现在我们将创建以下目录结构、文件及其内容。</target>
        </trans-unit>
        <trans-unit id="6562086000c2c226ec3f442cf46f81b89bd3de6e" translate="yes" xml:space="preserve">
          <source>Now we'll modify the directory structure &amp;amp; the configuration files:</source>
          <target state="translated">现在，我们将修改目录结构和配置文件：</target>
        </trans-unit>
        <trans-unit id="c1c0259376514fcbb277498cdd385758d7f38c97" translate="yes" xml:space="preserve">
          <source>Now webpack will automatically choose between &lt;code&gt;resource&lt;/code&gt; and &lt;code&gt;inline&lt;/code&gt; by following a default condition: a file with size less than 8kb will be treated as a &lt;code&gt;inline&lt;/code&gt; module type and &lt;code&gt;resource&lt;/code&gt; module type otherwise.</source>
          <target state="translated">现在，webpack将通过遵循默认条件自动在 &lt;code&gt;resource&lt;/code&gt; 和 &lt;code&gt;inline&lt;/code&gt; 之间进行选择：文件大小小于8kb的文件将被视为 &lt;code&gt;inline&lt;/code&gt; 模块类型，否则将被视为 &lt;code&gt;resource&lt;/code&gt; 模块类型。</target>
        </trans-unit>
        <trans-unit id="31b35117645d81df56c33faf2b4b4d353a9955cf" translate="yes" xml:space="preserve">
          <source>Now while this is one approach, &lt;strong&gt;including polyfills in the main bundle is not recommended&lt;/strong&gt; because this penalizes modern browsers users by making them download a bigger file with unneeded scripts.</source>
          <target state="translated">现在，尽管这是一种方法，&lt;strong&gt;但不建议在主捆绑包中包含polyfill，&lt;/strong&gt;因为这会使现代的浏览器用户受到惩罚，因为他们会让他们使用不需要的脚本来下载更大的文件。</target>
        </trans-unit>
        <trans-unit id="c017ac0b58a1e44fd17a64785c17d91b2434e315" translate="yes" xml:space="preserve">
          <source>Now you can &lt;a href=&quot;https://docs.npmjs.com/getting-started/publishing-npm-packages&quot;&gt;publish it as an npm package&lt;/a&gt; and find it at &lt;a href=&quot;https://unpkg.com/#/&quot;&gt;unpkg.com&lt;/a&gt; to distribute it to your users.</source>
          <target state="translated">现在，您可以&lt;a href=&quot;https://docs.npmjs.com/getting-started/publishing-npm-packages&quot;&gt;将其发布为npm软件包&lt;/a&gt;，并在&lt;a href=&quot;https://unpkg.com/#/&quot;&gt;unpkg.com&lt;/a&gt;上找到它以将其分发给您的用户。</target>
        </trans-unit>
        <trans-unit id="c56a5281cd3189f4c2a26baaf0f26739acba3635" translate="yes" xml:space="preserve">
          <source>Now you can &lt;code&gt;import&lt;/code&gt; any one of those four types of data (JSON, CSV, TSV, XML) and the &lt;code&gt;Data&lt;/code&gt; variable you import it to will contain parsed JSON for easy consumption:</source>
          <target state="translated">现在，您可以 &lt;code&gt;import&lt;/code&gt; 这四种数据类型（JSON，CSV，TSV，XML）中的任何一种，并且导入到其中的 &lt;code&gt;Data&lt;/code&gt; 变量将包含已解析的JSON，以便于使用：</target>
        </trans-unit>
        <trans-unit id="d9970898e87d8cc7da44535b873ed439e8a04414" translate="yes" xml:space="preserve">
          <source>Now you can &lt;code&gt;import&lt;/code&gt; any one of those four types of data (JSON, CSV, TSV, XML) and the &lt;code&gt;Data&lt;/code&gt; variable you import, will contain parsed JSON for easy consumption:</source>
          <target state="translated">现在，您可以 &lt;code&gt;import&lt;/code&gt; 这四种数据类型（JSON，CSV，TSV，XML）中的任何一种，并且导入的 &lt;code&gt;Data&lt;/code&gt; 变量将包含已解析的JSON，以便于使用：</target>
        </trans-unit>
        <trans-unit id="265845569f199bb01e68a398054540a25437c594" translate="yes" xml:space="preserve">
          <source>Now, despite any new local dependencies, our &lt;code&gt;vendor&lt;/code&gt; hash should stay consistent between builds:</source>
          <target state="translated">现在，尽管有任何新的本地依赖关系，我们的 &lt;code&gt;vendor&lt;/code&gt; 哈希值仍应在各个版本之间保持一致：</target>
        </trans-unit>
        <trans-unit id="f761146f1614b48479a5e6ca2bd6ebf8ba49cee3" translate="yes" xml:space="preserve">
          <source>Now, if you run &lt;code&gt;webpack&lt;/code&gt;, you will find that a largish bundle is created. If you inspect the file, you'll see that lodash has been bundled along with your code. In this case, we'd prefer to treat &lt;code&gt;lodash&lt;/code&gt; as a &lt;code&gt;peerDependency&lt;/code&gt;. Meaning that the consumer should already have &lt;code&gt;lodash&lt;/code&gt; installed. Hence you would want to give up control of this external library to the consumer of your library.</source>
          <target state="translated">现在，如果您运行 &lt;code&gt;webpack&lt;/code&gt; ，您会发现创建了一个小包。如果您检查文件，将会看到lodash与代码捆绑在一起。在这种情况下，我们希望将 &lt;code&gt;lodash&lt;/code&gt; 视为 &lt;code&gt;peerDependency&lt;/code&gt; 。这意味着使用者应该已经安装了 &lt;code&gt;lodash&lt;/code&gt; 。因此，您想将对该外部库的控制权交给该库的使用者。</target>
        </trans-unit>
        <trans-unit id="a629b8ca075bd87b327deed9d51fd9489a0a6b97" translate="yes" xml:space="preserve">
          <source>Now, instead of statically importing &lt;code&gt;lodash&lt;/code&gt;, we'll use dynamic importing to separate a chunk:</source>
          <target state="translated">现在，我们将使用动态导入来分隔一个块，而不是静态导入 &lt;code&gt;lodash&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0cd00ca893b2a0749390d1af07518b98228e0602" translate="yes" xml:space="preserve">
          <source>Now, instead of using relative paths when importing like so:</source>
          <target state="translated">现在,导入时不用再像这样使用相对路径了。</target>
        </trans-unit>
        <trans-unit id="b20ecdfe2808997838121f90cdf0692edefe9ec9" translate="yes" xml:space="preserve">
          <source>Now, let's import &lt;code&gt;lodash&lt;/code&gt; in our script:</source>
          <target state="translated">现在，让我们在脚本中导入 &lt;code&gt;lodash&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="adabbcf9ec455aa4d0fad9c1ed9fdf5b17ad2bfc" translate="yes" xml:space="preserve">
          <source>Now, let's modify our npm scripts to use the new configuration files. For the &lt;code&gt;start&lt;/code&gt; script, which runs &lt;code&gt;webpack-dev-server&lt;/code&gt;, we will use &lt;code&gt;webpack.dev.js&lt;/code&gt;, and for the &lt;code&gt;build&lt;/code&gt; script, which runs &lt;code&gt;webpack&lt;/code&gt; to create a production build, we will use &lt;code&gt;webpack.prod.js&lt;/code&gt;:</source>
          <target state="translated">现在，让我们修改npm脚本以使用新的配置文件。对于运行 &lt;code&gt;webpack-dev-server&lt;/code&gt; 的 &lt;code&gt;start&lt;/code&gt; 脚本，我们将使用 &lt;code&gt;webpack.dev.js&lt;/code&gt; ；对于运行 &lt;code&gt;webpack&lt;/code&gt; 的 &lt;code&gt;build&lt;/code&gt; 脚本，我们将使用 &lt;code&gt;webpack.prod.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="874226ce9b8d4f709d901e4a8f3b465be18e2ead" translate="yes" xml:space="preserve">
          <source>Now, let's run the build again but instead using our new configuration file:</source>
          <target state="translated">现在,让我们再次运行构建,但使用我们的新配置文件。</target>
        </trans-unit>
        <trans-unit id="986bf8dcf09bfee2a81153f0cc4b7d4079a76fdd" translate="yes" xml:space="preserve">
          <source>Now, let's run the server:</source>
          <target state="translated">现在,让我们来运行服务器。</target>
        </trans-unit>
        <trans-unit id="1680bb02d344f54fd6614cf2db07f6f8b483e824" translate="yes" xml:space="preserve">
          <source>Now, lets import &lt;code&gt;lodash&lt;/code&gt; in our script:</source>
          <target state="translated">现在，让我们在脚本中导入 &lt;code&gt;lodash&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c3a524c91d6d4686d61a055b1eccdee27c5871f7" translate="yes" xml:space="preserve">
          <source>Now, since we'll be bundling our scripts, we have to update our &lt;code&gt;index.html&lt;/code&gt; file. Let's remove the lodash &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, as we now &lt;code&gt;import&lt;/code&gt; it, and modify the other &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to load the bundle, instead of the raw &lt;code&gt;./src&lt;/code&gt; file:</source>
          <target state="translated">现在，由于我们将捆绑脚本，因此我们必须更新 &lt;code&gt;index.html&lt;/code&gt; 文件。让我们删除lodash &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; ，现在我们 &lt;code&gt;import&lt;/code&gt; 其导入，并修改另一个 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记以加载捆绑包，而不是原始的 &lt;code&gt;./src&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="3329ecf744f220187e0a153c22fffbf77657a9cd" translate="yes" xml:space="preserve">
          <source>Now, since we'll be bundling our scripts, we have to update our &lt;code&gt;index.html&lt;/code&gt; file. Let's remove the lodash &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, as we now &lt;code&gt;import&lt;/code&gt; it, and modify the other &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to load the bundle, instead of the raw &lt;code&gt;/src&lt;/code&gt; file:</source>
          <target state="translated">现在，由于我们将捆绑脚本，因此我们必须更新 &lt;code&gt;index.html&lt;/code&gt; 文件。让我们删除lodash &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; ，现在我们 &lt;code&gt;import&lt;/code&gt; 其导入，并修改另一个 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记以加载捆绑包，而不是原始的 &lt;code&gt;/src&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="b6aed7a8c232d4f22dcc8c9e16fdd539b90239b3" translate="yes" xml:space="preserve">
          <source>Now, when you &lt;code&gt;import MyImage from './my-image.png'&lt;/code&gt;, that image will be processed and added to your &lt;code&gt;output&lt;/code&gt; directory &lt;em&gt;and&lt;/em&gt; the &lt;code&gt;MyImage&lt;/code&gt; variable will contain the final url of that image after processing. When using the &lt;a href=&quot;../loaders/css-loader&quot;&gt;css-loader&lt;/a&gt;, as shown above, a similar process will occur for &lt;code&gt;url('./my-image.png')&lt;/code&gt; within your CSS. The loader will recognize this is a local file, and replace the &lt;code&gt;'./my-image.png'&lt;/code&gt; path with the final path to the image in your &lt;code&gt;output&lt;/code&gt; directory. The &lt;a href=&quot;../loaders/html-loader&quot;&gt;html-loader&lt;/a&gt; handles &lt;code&gt;&amp;lt;img src=&quot;./my-image.png&quot; /&amp;gt;&lt;/code&gt; in the same manner.</source>
          <target state="translated">现在，当您 &lt;code&gt;import MyImage from './my-image.png'&lt;/code&gt; 时，该图像将被处理并添加到您的 &lt;code&gt;output&lt;/code&gt; 目录中&lt;em&gt;，&lt;/em&gt;并且 &lt;code&gt;MyImage&lt;/code&gt; 变量将包含处理后该图像的最终URL。如上所示，使用&lt;a href=&quot;../loaders/css-loader&quot;&gt;css-loader时&lt;/a&gt;，CSS中的 &lt;code&gt;url('./my-image.png')&lt;/code&gt; 也会发生类似的过程。加载程序将识别出这是一个本地文件，并将 &lt;code&gt;'./my-image.png'&lt;/code&gt; 路径替换为 &lt;code&gt;output&lt;/code&gt; 目录中图像的最终路径。的&lt;a href=&quot;../loaders/html-loader&quot;&gt;HTML加载器&lt;/a&gt;手柄 &lt;code&gt;&amp;lt;img src=&quot;./my-image.png&quot; /&amp;gt;&lt;/code&gt; 以相同的方式。</target>
        </trans-unit>
        <trans-unit id="6b7da57438c329ba7464308376a362cbddd7baa9" translate="yes" xml:space="preserve">
          <source>Now, while webpack is watching your files, let's remove the error we introduced earlier:</source>
          <target state="translated">现在,当webpack在观察你的文件时,让我们删除前面介绍的错误。</target>
        </trans-unit>
        <trans-unit id="d81b4a09efa67c7104acb6c4bee17b6c13687d8f" translate="yes" xml:space="preserve">
          <source>Now, while you'd likely never do this in your own source code, you may encounter a dated library you'd like to use that contains similar code to what's shown above. In this case, we can use &lt;a href=&quot;../loaders/exports-loader&quot;&gt;&lt;code&gt;exports-loader&lt;/code&gt;&lt;/a&gt;, to export that global variable as a normal module export. For instance, in order to export &lt;code&gt;file&lt;/code&gt; as &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;helpers.parse&lt;/code&gt; as &lt;code&gt;parse&lt;/code&gt;:</source>
          <target state="translated">现在，虽然您可能永远不会在自己的源代码中执行此操作，但是您可能会遇到一个想要使用的过时的库，其中包含与上面显示的代码类似的代码。在这种情况下，我们可以使用&lt;a href=&quot;../loaders/exports-loader&quot;&gt; &lt;code&gt;exports-loader&lt;/code&gt; &lt;/a&gt;将该全局变量导出为常规模块导出。例如，为了将 &lt;code&gt;file&lt;/code&gt; 导出为 &lt;code&gt;file&lt;/code&gt; 并将 &lt;code&gt;helpers.parse&lt;/code&gt; 导出为 &lt;code&gt;parse&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="399d20d411a9c4dff19abde6554a5d895eb38571" translate="yes" xml:space="preserve">
          <source>NpmInstallWebpackPlugin</source>
          <target state="translated">NpmInstallWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="be3a794df3289dcdea5cded366c1d14e024a75cc" translate="yes" xml:space="preserve">
          <source>Number of concurrent runs.</source>
          <target state="translated">同时运行的次数。</target>
        </trans-unit>
        <trans-unit id="0dd75d7fe90f97130245d0b8fb2d960bf44b4a9b" translate="yes" xml:space="preserve">
          <source>Number of loaders applied before CSS loader</source>
          <target state="translated">在CSS加载器之前应用的加载器数量</target>
        </trans-unit>
        <trans-unit id="1b52ac3b1bd1ab12ad0b5dd55afd7d6dde5b1b25" translate="yes" xml:space="preserve">
          <source>Number of milliseconds before chunk request expires, defaults to 120 000. This option is supported since webpack 2.6.0.</source>
          <target state="translated">分块请求过期前的毫秒数,默认为120 000。从webpack 2.6.0开始支持这个选项。</target>
        </trans-unit>
        <trans-unit id="901f17aa3f91e65ae1ee66189fc0f089dcf0c02a" translate="yes" xml:space="preserve">
          <source>Number of milliseconds before chunk request expires. This option is supported since webpack 2.6.0.</source>
          <target state="translated">分块请求过期前的毫秒数。从webpack 2.6.0开始支持这个选项。</target>
        </trans-unit>
        <trans-unit id="0212cd646bc12e7ab81418c0727de624e88b46fd" translate="yes" xml:space="preserve">
          <source>Numeric ids focused on minimal initial download size.</source>
          <target state="translated">数值ID集中在最小的初始下载大小。</target>
        </trans-unit>
        <trans-unit id="279e2a8042e6c1e723f14430d3457cf6f78830df" translate="yes" xml:space="preserve">
          <source>Numeric ids in order of usage.</source>
          <target state="translated">按使用顺序排列的数字ID。</target>
        </trans-unit>
        <trans-unit id="68654e143c9a95a12dddf5b994152ad350c30fec" translate="yes" xml:space="preserve">
          <source>Object Syntax</source>
          <target state="translated">对象语法</target>
        </trans-unit>
        <trans-unit id="8afd3dd49c477e002270c0d5f378c9d16db538c4" translate="yes" xml:space="preserve">
          <source>Objects are made using strings, while strings are made using double strings. This means that in order for you to create a string, you have to wrap it inside another string for us to validate it correctly.</source>
          <target state="translated">对象是用字符串制作的,而字符串是用双字符串制作的。这意味着,为了让你创建一个字符串,你必须把它包在另一个字符串里面,这样我们才能正确验证它。</target>
        </trans-unit>
        <trans-unit id="7947d508a33ca1ae0b7138218e54d2bb97876b9c" translate="yes" xml:space="preserve">
          <source>OccurenceOrderPlugin</source>
          <target state="translated">OccurenceOrderPlugin</target>
        </trans-unit>
        <trans-unit id="dc2284b54a904eb3a4b7df2c787412d7142025db" translate="yes" xml:space="preserve">
          <source>Offers a pseudo &lt;code&gt;console&lt;/code&gt; if it is not available.</source>
          <target state="translated">提供伪 &lt;code&gt;console&lt;/code&gt; 如果不可用）。</target>
        </trans-unit>
        <trans-unit id="c1721ea0ada849ea800504498417a4b2c890ec62" translate="yes" xml:space="preserve">
          <source>Often webpack users use npm &lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt;&lt;code&gt;scripts&lt;/code&gt;&lt;/a&gt; as their task runner. This is a good starting point. Cross-platform support can become a problem, but there are several workarounds for that. Many, if not most users, get by with simple npm &lt;code&gt;scripts&lt;/code&gt; and various levels of webpack configuration and tooling.</source>
          <target state="translated">Webpack用户通常将npm &lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt; &lt;code&gt;scripts&lt;/code&gt; &lt;/a&gt;用作任务运行器。这是一个很好的起点。跨平台支持可能会成为一个问题，但是有几种解决方法。许多（如果不是大多数）用户可以使用简单的npm &lt;code&gt;scripts&lt;/code&gt; 以及各种级别的webpack配置和工具来解决。</target>
        </trans-unit>
        <trans-unit id="af40757d14939f1cc0546783a2c27d00cfd0e05d" translate="yes" xml:space="preserve">
          <source>Old school Task Runners and even Google Closure Compiler requires you to manually declare all dependencies upfront. While bundlers like webpack automatically builds and infer your &lt;a href=&quot;dependency-graph&quot;&gt;dependency graph&lt;/a&gt; based on what is imported and exported. This along with other &lt;a href=&quot;plugins&quot;&gt;plugins&lt;/a&gt; and &lt;a href=&quot;loaders&quot;&gt;loaders&lt;/a&gt; make for a great developer experience.</source>
          <target state="translated">老式的Task Runners甚至Google Closure Compiler都要求您预先手动声明所有依赖项。虽然像webpack这样的捆绑器会根据导入和导出的内容自动构建并推断您的&lt;a href=&quot;dependency-graph&quot;&gt;依赖关系图&lt;/a&gt;。这与其他&lt;a href=&quot;plugins&quot;&gt;插件&lt;/a&gt;和&lt;a href=&quot;loaders&quot;&gt;加载器一起&lt;/a&gt;为开发人员带来了绝佳的体验。</target>
        </trans-unit>
        <trans-unit id="566e35e9fccc6a22d2edc58ef12adc599069b6ed" translate="yes" xml:space="preserve">
          <source>Old version of &lt;code&gt;stats.cachedModules&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stats.cachedModules&lt;/code&gt; 的旧版本。</target>
        </trans-unit>
        <trans-unit id="8cacfd7b2aa9def28f5bf082992036b355875999" translate="yes" xml:space="preserve">
          <source>Older Versions</source>
          <target state="translated">旧版本</target>
        </trans-unit>
        <trans-unit id="f4feaa47f1e0f091d117b8cee638f02e96b61670" translate="yes" xml:space="preserve">
          <source>On The Fly</source>
          <target state="translated">在飞行中</target>
        </trans-unit>
        <trans-unit id="7de9397c7392465a52ccc17659d99604f9bc08a6" translate="yes" xml:space="preserve">
          <source>On macOS, folders can get corrupted in certain scenarios. See &lt;a href=&quot;https://github.com/livereload/livereload-site/blob/master/livereload.com/_articles/troubleshooting/os-x-fsevents-bug-may-prevent-monitoring-of-certain-folders.md&quot;&gt;this article&lt;/a&gt;.</source>
          <target state="translated">在macOS上，在某些情况下文件夹可能会损坏。看到&lt;a href=&quot;https://github.com/livereload/livereload-site/blob/master/livereload.com/_articles/troubleshooting/os-x-fsevents-bug-may-prevent-monitoring-of-certain-folders.md&quot;&gt;这篇文章&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84b858cc3d43880aa44f3a030f7d826f5e1d7470" translate="yes" xml:space="preserve">
          <source>On some machines Vim is preconfigured with the &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'backupcopy'&quot;&gt;backupcopy option&lt;/a&gt; set to &lt;code&gt;auto&lt;/code&gt;. This could potentially cause problems with the system's file watching mechanism. Switching this option to &lt;code&gt;yes&lt;/code&gt; will make sure a copy of the file is made and the original one overwritten on save.</source>
          <target state="translated">在某些计算机上，Vim预先配置了&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'backupcopy'&quot;&gt;backupcopy选项&lt;/a&gt;设置为 &lt;code&gt;auto&lt;/code&gt; 。这可能会导致系统的文件监视机制出现问题。将此选项切换为&amp;ldquo; &lt;code&gt;yes&lt;/code&gt; 将确保已复制文件，并且原始文件在保存时被覆盖。</target>
        </trans-unit>
        <trans-unit id="d6798ad6de81322dfee53e4558a7194dfe6d9bb6" translate="yes" xml:space="preserve">
          <source>On the Insecurity of Whitelists and the Future of Content Security Policy</source>
          <target state="translated">论白名单的不安全性和内容安全政策的未来发展方向</target>
        </trans-unit>
        <trans-unit id="a6c980b247f3551dd7e4427a00e75136a1cdaf07" translate="yes" xml:space="preserve">
          <source>On the other hand, if you want to externalise a library that is available as a CommonJS module, you can provide the external library type together with the library name.</source>
          <target state="translated">另一方面,如果你想外部化一个作为CommonJS模块的库,你可以提供外部库类型和库名。</target>
        </trans-unit>
        <trans-unit id="0aa558b005274b7fbff68234975b9efb7bb566c5" translate="yes" xml:space="preserve">
          <source>On the other hand, the provider of the replacement modules, will only provide asynchronous loading functions. It allows the container to load replacement modules only when they are needed. The provider will manage replacement modules in a way that they do not need to be downloaded at all when they are not requested by the container. This usually happens by placing them into separate chunks.</source>
          <target state="translated">另一方面,替换模块的提供者,将只提供异步加载功能。它允许容器只在需要替换模块时才加载它们。提供者将以这样的方式管理替换模块,即当它们不被容器请求时,根本不需要下载它们。这通常是通过将它们放入单独的块中来实现的。</target>
        </trans-unit>
        <trans-unit id="ff78f30ec56f6105598ce29b71aaed70575b3650" translate="yes" xml:space="preserve">
          <source>Once more &lt;code&gt;npm run build&lt;/code&gt; to build a version of the app including the registration code. Then serve it with &lt;code&gt;npm start&lt;/code&gt;. Navigate to &lt;code&gt;http://localhost:8080&lt;/code&gt; and take a look at the console. Somewhere in there you should see:</source>
          <target state="translated">再 &lt;code&gt;npm run build&lt;/code&gt; 一次npm运行build以构建包含注册代码的应用程序版本。然后将其与 &lt;code&gt;npm start&lt;/code&gt; 一起使用。导航到 &lt;code&gt;http://localhost:8080&lt;/code&gt; 并查看控制台。您应该在其中的某个地方看到：</target>
        </trans-unit>
        <trans-unit id="02ed0e62fa33898ffdff4abc0a942e61293061af" translate="yes" xml:space="preserve">
          <source>Once the path is resolved based on the above rule, the resolver checks to see if the path points to a file or a directory. If the path points to a file:</source>
          <target state="translated">根据上述规则解析出路径后,解析器会检查该路径是指向文件还是目录。如果路径指向的是一个文件。</target>
        </trans-unit>
        <trans-unit id="56fd850a2bc86a27439d2644ee02a9390b380522" translate="yes" xml:space="preserve">
          <source>Once you start splitting your code, it can be useful to analyze the output to check where modules have ended up. The &lt;a href=&quot;https://github.com/webpack/analyse&quot;&gt;official analyze tool&lt;/a&gt; is a good place to start. There are some other community-supported options out there as well:</source>
          <target state="translated">一旦开始分割代码，分析输出以检查模块在哪里结束将很有用。该&lt;a href=&quot;https://github.com/webpack/analyse&quot;&gt;负责人分析工具，&lt;/a&gt;是一个良好的开端。还有一些其他社区支持的选项：</target>
        </trans-unit>
        <trans-unit id="a92e2a532d9a2d7da6d336c155a1bb7133d7dffc" translate="yes" xml:space="preserve">
          <source>Once your application hits the browser in the form of &lt;code&gt;index.html&lt;/code&gt; file, some bundles and a variety of other assets required by your application must be loaded and linked somehow. That &lt;code&gt;/src&lt;/code&gt; directory you meticulously laid out is now bundled, minified and maybe even split into smaller chunks for lazy-loading by webpack's &lt;a href=&quot;../configuration/optimization&quot;&gt;&lt;code&gt;optimization&lt;/code&gt;&lt;/a&gt;. So how does webpack manage the interaction between all of your required modules? This is where the manifest data comes in...</source>
          <target state="translated">一旦您的应用程序以 &lt;code&gt;index.html&lt;/code&gt; 文件的形式出现在浏览器中，就必须以某种方式加载和链接应用程序所需的某些捆绑包和各种其他资产。那 &lt;code&gt;/src&lt;/code&gt; 目录你精心布置的目录现在捆绑，精缩，甚至通过的WebPack的分成懒加载小块&lt;a href=&quot;../configuration/optimization&quot;&gt; &lt;code&gt;optimization&lt;/code&gt; &lt;/a&gt;。那么webpack如何管理所有必需模块之间的交互？这是清单数据的来源...</target>
        </trans-unit>
        <trans-unit id="a1718ef4adbff4d61ad5bd148b2c67b6b67258b9" translate="yes" xml:space="preserve">
          <source>One approach is to have a &quot;bootstrap&quot; step in your application that would first override the default globals before your application:</source>
          <target state="translated">一种方法是在你的应用中设置一个 &quot;引导 &quot;步骤,在你的应用之前首先覆盖默认的 globals。</target>
        </trans-unit>
        <trans-unit id="0f14bc5e6856343e7743f14ac37a82c3e6d19aef" translate="yes" xml:space="preserve">
          <source>One chunk group with the &lt;code&gt;main&lt;/code&gt; name created (&lt;code&gt;main&lt;/code&gt; is the default name for an entry point). This chunk group contains &lt;code&gt;./index.js&lt;/code&gt; module. As the parser handles imports inside &lt;code&gt;./index.js&lt;/code&gt; new modules are added into this chunk.</source>
          <target state="translated">创建了一个具有 &lt;code&gt;main&lt;/code&gt; 名称的块组（ &lt;code&gt;main&lt;/code&gt; 是入口点的默认名称）。该块组包含 &lt;code&gt;./index.js&lt;/code&gt; 模块。当解析器处理 &lt;code&gt;./index.js&lt;/code&gt; 内部的导入时，新模块将添加到该块中。</target>
        </trans-unit>
        <trans-unit id="4531651baf39d17079af5571a1ae03ef90e06710" translate="yes" xml:space="preserve">
          <source>One of the coolest webpack features is that you can also &lt;em&gt;include any other type of file&lt;/em&gt;, besides JavaScript, for which there is a loader or built-in &lt;a href=&quot;asset-modules&quot;&gt;Asset Modules&lt;/a&gt; support. This means that the same benefits listed above for JavaScript (e.g. explicit dependencies) can be applied to everything used in building a website or web app. Let's start with CSS, as you may already be familiar with that setup.</source>
          <target state="translated">Webpack最酷的功能之一是，除了JavaScript之外，您还可以&lt;em&gt;包括任何其他类型的文件&lt;/em&gt;，对此文件有加载程序或内置的&lt;a href=&quot;asset-modules&quot;&gt;Asset Modules&lt;/a&gt;支持。这意味着上面列出的针对JavaScript的相同好处（例如，显式依赖项）可以应用于构建网站或网络应用程序时使用的所有内容。让我们从CSS开始，因为您可能已经熟悉该设置。</target>
        </trans-unit>
        <trans-unit id="f3776ba2e5eb3b8a3f40e34afed5eb5f87063a3f" translate="yes" xml:space="preserve">
          <source>One of the coolest webpack features is that you can also &lt;em&gt;include any other type of file&lt;/em&gt;, besides JavaScript, for which there is a loader. This means that the same benefits listed above for JavaScript (e.g. explicit dependencies) can be applied to everything used in building a website or web app. Let's start with CSS, as you may already be familiar with that setup.</source>
          <target state="translated">Webpack的最酷功能之一是，除了JavaScript之外，您还可以&lt;em&gt;包含任何其他类型的文件&lt;/em&gt;，该&lt;em&gt;文件&lt;/em&gt;带有加载程序。这意味着上面列出的针对JavaScript的相同好处（例如，显式依赖项）可以应用于构建网站或网络应用程序时使用的所有内容。让我们从CSS开始，因为您可能已经熟悉该设置。</target>
        </trans-unit>
        <trans-unit id="576a8fe2fe4d578fc19500517015b3726300014b" translate="yes" xml:space="preserve">
          <source>One of these conditions is set depending on the syntax used to reference the module:</source>
          <target state="translated">其中一个条件是根据引用模块的语法来设置的。</target>
        </trans-unit>
        <trans-unit id="ed5f9f967dca918d1a0a08adbea84bed21743aa6" translate="yes" xml:space="preserve">
          <source>One option is to export a function from your webpack config instead of exporting an object. The function will be invoked with two arguments:</source>
          <target state="translated">一种方法是从webpack配置中导出一个函数,而不是导出一个对象。该函数将被调用,有两个参数。</target>
        </trans-unit>
        <trans-unit id="612198311a82878b10253f704f7c51f3eac1a819" translate="yes" xml:space="preserve">
          <source>One option is to export a function from your webpack configuration instead of exporting an object. The function will be invoked with two arguments:</source>
          <target state="translated">一个选择是从你的webpack配置中导出一个函数,而不是导出一个对象。该函数将被调用,有两个参数。</target>
        </trans-unit>
        <trans-unit id="040483fac8d867e7e6b1daab52fb6ad30eec5e47" translate="yes" xml:space="preserve">
          <source>One or more updated chunks (JavaScript)</source>
          <target state="translated">一个或多个更新的块(JavaScript)</target>
        </trans-unit>
        <trans-unit id="c6560e0c28982b656a84c6a7c15954ea75bcb147" translate="yes" xml:space="preserve">
          <source>One use for this loader is to silence modules imported by a dependency. Say, for example, your project relies on an ES6 library that imports a polyfill you don't need, so removing it will cause no loss in functionality.</source>
          <target state="translated">这个加载器的一个用途是屏蔽依赖关系导入的模块。例如,您的项目依赖于一个 ES6 库,该库导入了一个您不需要的 polyfill,因此删除它不会造成功能损失。</target>
        </trans-unit>
        <trans-unit id="d350ea6dc25a31449ba8604ef5f474c7ed0faed5" translate="yes" xml:space="preserve">
          <source>Only assets bigger than this size are processed (in bytes)</source>
          <target state="translated">只有大于这个大小的资产才会被处理(单位:字节)。</target>
        </trans-unit>
        <trans-unit id="e1b83cd24068c9b978d886a0bd94b55712e1db34" translate="yes" xml:space="preserve">
          <source>Only assets bigger than this size are processed. In bytes.</source>
          <target state="translated">只有大于这个大小的资产才会被处理。以字节为单位。</target>
        </trans-unit>
        <trans-unit id="2e2e63658df77bf50c344780d23a9604a6170078" translate="yes" xml:space="preserve">
          <source>Only assets that compress better than this ratio are processed</source>
          <target state="translated">只有压缩程度优于此比例的资产才会被处理。</target>
        </trans-unit>
        <trans-unit id="d8666ae151a48562e1053672bed0338e0b536c72" translate="yes" xml:space="preserve">
          <source>Only assets that compress better than this ratio are processed (&lt;code&gt;minRatio = Compressed Size / Original Size&lt;/code&gt;)</source>
          <target state="translated">仅压缩比该比率更好的资产（ &lt;code&gt;minRatio = Compressed Size / Original Size&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="39d5e500187857ccedea27d7fa41bc7266054931" translate="yes" xml:space="preserve">
          <source>Only assets that compress better than this ratio are processed (&lt;code&gt;minRatio = Compressed Size / Original Size&lt;/code&gt;). Example: you have &lt;code&gt;image.png&lt;/code&gt; file with 1024b size, compressed version of file has 768b size, so &lt;code&gt;minRatio&lt;/code&gt; equal &lt;code&gt;0.75&lt;/code&gt;. In other words assets will be processed when the &lt;code&gt;Compressed Size / Original Size&lt;/code&gt; value less &lt;code&gt;minRatio&lt;/code&gt; value.</source>
          <target state="translated">仅压缩比该比率更好的资产（ &lt;code&gt;minRatio = Compressed Size / Original Size&lt;/code&gt; ）。示例：您有 &lt;code&gt;image.png&lt;/code&gt; 文件，其大小为1024b，压缩版本的文件为768b，因此 &lt;code&gt;minRatio&lt;/code&gt; 等于 &lt;code&gt;0.75&lt;/code&gt; 。换句话说，当&amp;ldquo; &lt;code&gt;Compressed Size / Original Size&lt;/code&gt; 值减去 &lt;code&gt;minRatio&lt;/code&gt; 值时，将处理资产。</target>
        </trans-unit>
        <trans-unit id="97e6798a4f980e571a4a636162ced9361ccc439b" translate="yes" xml:space="preserve">
          <source>Only compile the part of the code you are currently developing on.</source>
          <target state="translated">只编译你当前正在开发的那部分代码。</target>
        </trans-unit>
        <trans-unit id="61c1e7d7392692a95473f806657e1449980d9bfb" translate="yes" xml:space="preserve">
          <source>Only dashes in class names will be camelized</source>
          <target state="translated">只有班级名称中的破折号才会被美化。</target>
        </trans-unit>
        <trans-unit id="7afbeeae1d39f150036e7fe719aa53391e6f9399" translate="yes" xml:space="preserve">
          <source>Only filename (including extensions), without path</source>
          <target state="translated">只有文件名(包括扩展名),不含路径</target>
        </trans-unit>
        <trans-unit id="e6016169fd3a62ba77b6a3f3d028d2a274eea872" translate="yes" xml:space="preserve">
          <source>Only filename without extension or path</source>
          <target state="translated">只有文件名没有扩展名或路径</target>
        </trans-unit>
        <trans-unit id="d826406f0ea3a738e060dd7805b2b1562dcc0df3" translate="yes" xml:space="preserve">
          <source>Only output errors and warnings happen</source>
          <target state="translated">只发生输出错误和警告</target>
        </trans-unit>
        <trans-unit id="f089d5d3b8770cd7906985a887353c0a9d20281e" translate="yes" xml:space="preserve">
          <source>Only output when errors happen</source>
          <target state="translated">只在发生错误时输出</target>
        </trans-unit>
        <trans-unit id="cfcb6326610bc03851fa8954054544e885702fa2" translate="yes" xml:space="preserve">
          <source>Only output when errors or new compilation happen</source>
          <target state="translated">只有当错误或新的编译发生时才会输出</target>
        </trans-unit>
        <trans-unit id="ebd955a05966f7588fa307f24b531b102307f8f8" translate="yes" xml:space="preserve">
          <source>Only path, without filename</source>
          <target state="translated">只有路径,没有文件名</target>
        </trans-unit>
        <trans-unit id="b546a6601b7dc9286f26fd787228157e2df88187" translate="yes" xml:space="preserve">
          <source>Only the &quot;default&quot; export can be imported from non-ESM. Named exports are not available.</source>
          <target state="translated">只有 &quot;默认 &quot;出口可以从非ESM导入。不提供命名的出口。</target>
        </trans-unit>
        <trans-unit id="3984d4a7e3308cfdeb588dfd22318c1196ac7752" translate="yes" xml:space="preserve">
          <source>Only the default export of JSON modules can be used without warning.</source>
          <target state="translated">只能使用默认的JSON模块导出,没有警告。</target>
        </trans-unit>
        <trans-unit id="1135f9e80ad08fccc85c2fcaeac17355f34cdb0e" translate="yes" xml:space="preserve">
          <source>Only used when &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'web'&lt;/code&gt;, which uses JSONP for loading hot updates.</source>
          <target state="translated">仅在&lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;'web'&lt;/code&gt; 时使用，该网站使用JSONP加载热更新。</target>
        </trans-unit>
        <trans-unit id="80824d5ebb068ab46c8bc4b8718f11156726de00" translate="yes" xml:space="preserve">
          <source>Only used when &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; is web, which uses JSONP for loading hot updates.</source>
          <target state="translated">仅当&lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;是Web 时使用，Web使用JSONP加载热更新。</target>
        </trans-unit>
        <trans-unit id="b4c0bb3058fa40f5ee2924cef03211c948d76975" translate="yes" xml:space="preserve">
          <source>Only used when &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; is web, which uses JSONP for loading on-demand chunks, by adding script tags.</source>
          <target state="translated">仅在&lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;是web时使用，该网站使用JSONP通过添加脚本标签来加载按需块。</target>
        </trans-unit>
        <trans-unit id="89058d6a1647a90cdda9b88c640802187e5b05c2" translate="yes" xml:space="preserve">
          <source>Only used when &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; is web, which uses JSONP for loading on-demand chunks.</source>
          <target state="translated">仅在&lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;是Web 时使用，Web使用JSONP加载按需块。</target>
        </trans-unit>
        <trans-unit id="720ecb138c7bba6e94ce7293dbf933b55062d699" translate="yes" xml:space="preserve">
          <source>Only warnings</source>
          <target state="translated">只有警告</target>
        </trans-unit>
        <trans-unit id="ef5d396d661fb86ab806c8e1fa431eff7e8b332f" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;index.html&lt;/code&gt; from the &lt;code&gt;dist&lt;/code&gt; directory in your browser and, if everything went right, you should see the following text: &lt;code&gt;'Hello webpack'&lt;/code&gt;.</source>
          <target state="translated">从浏览器的 &lt;code&gt;dist&lt;/code&gt; 目录中打开 &lt;code&gt;index.html&lt;/code&gt; ，如果一切正常，则应该看到以下文本： &lt;code&gt;'Hello webpack'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="274d9630257af836b1de0bed223b12743fdae53d" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;index.html&lt;/code&gt; in your browser and, if everything went right, you should see the following text: 'Hello webpack'.</source>
          <target state="translated">在浏览器中打开 &lt;code&gt;index.html&lt;/code&gt; ，如果一切正常，则应该看到以下文本：&amp;ldquo; Hello webpack&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d3b6ed9e8ad949fbe912759ab46ac452f75c1378" translate="yes" xml:space="preserve">
          <source>Open up &lt;code&gt;dist/index.html&lt;/code&gt; again and see if our &lt;code&gt;Hello webpack&lt;/code&gt; text has changed to the new font. If all is well, you should see the changes.</source>
          <target state="translated">再次打开 &lt;code&gt;dist/index.html&lt;/code&gt; ，看看我们的 &lt;code&gt;Hello webpack&lt;/code&gt; 文本是否已更改为新字体。如果一切顺利，您应该会看到所做的更改。</target>
        </trans-unit>
        <trans-unit id="31202570e0f452929111fb1c8df0e557d0e0fdb1" translate="yes" xml:space="preserve">
          <source>Open up &lt;code&gt;dist/index.html&lt;/code&gt; in your browser again and you should see that &lt;code&gt;Hello webpack&lt;/code&gt; is now styled in red. To see what webpack did, inspect the page (don't view the page source, as it won't show you the result, because the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag is dynamically created by JavaScript) and look at the page's head tags. It should contain the style block that we imported in &lt;code&gt;index.js&lt;/code&gt;.</source>
          <target state="translated">再次在浏览器中打开 &lt;code&gt;dist/index.html&lt;/code&gt; ，您应该看到 &lt;code&gt;Hello webpack&lt;/code&gt; 现在以红色样式显示。要查看webpack的功能，请检查页面（不要查看页面源，因为 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 标签是由JavaScript动态创建的，因此不会显示结果），然后查看页面的head标签。它应该包含我们在 &lt;code&gt;index.js&lt;/code&gt; 中导入的样式块。</target>
        </trans-unit>
        <trans-unit id="402378c983e9601aae273e89aafca5f70c4c2f06" translate="yes" xml:space="preserve">
          <source>Open up &lt;code&gt;index.html&lt;/code&gt; again and see if our &lt;code&gt;Hello webpack&lt;/code&gt; text has changed to the new font. If all is well, you should see the changes.</source>
          <target state="translated">再次打开 &lt;code&gt;index.html&lt;/code&gt; ，看看我们的 &lt;code&gt;Hello webpack&lt;/code&gt; 文本是否已更改为新字体。如果一切顺利，您应该会看到更改。</target>
        </trans-unit>
        <trans-unit id="4f0b1f6ef524b7ad893b022bdbb5a64fe9665026" translate="yes" xml:space="preserve">
          <source>Open up &lt;code&gt;index.html&lt;/code&gt; in your browser again and you should see that &lt;code&gt;Hello webpack&lt;/code&gt; is now styled in red. To see what webpack did, inspect the page (don't view the page source, as it won't show you the result) and look at the page's head tags. It should contain our style block that we imported in &lt;code&gt;index.js&lt;/code&gt;.</source>
          <target state="translated">再次在浏览器中打开 &lt;code&gt;index.html&lt;/code&gt; ，您应该看到 &lt;code&gt;Hello webpack&lt;/code&gt; 现在以红色设置。要查看webpack的功能，请检查页面（不要查看页面源，因为它不会显示结果），并查看页面的head标签。它应该包含我们在 &lt;code&gt;index.js&lt;/code&gt; 中导入的样式块。</target>
        </trans-unit>
        <trans-unit id="52c576dc894326d738bd3c38a9fdc8b8854e92fc" translate="yes" xml:space="preserve">
          <source>Optimising your application bundle size with webpack</source>
          <target state="translated">使用webpack优化你的应用程序捆绑包大小</target>
        </trans-unit>
        <trans-unit id="fdf5e093149fa15365c797b12b39a00d5ec3a138" translate="yes" xml:space="preserve">
          <source>Optimization</source>
          <target state="translated">Optimization</target>
        </trans-unit>
        <trans-unit id="2018aa12a93a299b080f1a99fe99de979c8aa449" translate="yes" xml:space="preserve">
          <source>Optimization Bailouts</source>
          <target state="translated">优化保送</target>
        </trans-unit>
        <trans-unit id="66bdfd204469d2e3186766fc9966aa4616ba82b6" translate="yes" xml:space="preserve">
          <source>Optimizations</source>
          <target state="translated">Optimizations</target>
        </trans-unit>
        <trans-unit id="ad5d64c18d8c90fca4d0a1bde311c0f5fdd9ddff" translate="yes" xml:space="preserve">
          <source>Optimize Options</source>
          <target state="translated">优化选项</target>
        </trans-unit>
        <trans-unit id="d4d38b717f02cf8261dd2e7ac72a70cd4848f266" translate="yes" xml:space="preserve">
          <source>Optimize all assets stored in &lt;code&gt;compilation.assets&lt;/code&gt;.</source>
          <target state="translated">优化存储在所有资产 &lt;code&gt;compilation.assets&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c2f9bfdc9f4d18d243868d843f5047875784f34" translate="yes" xml:space="preserve">
          <source>Optimize and transform images to &lt;code&gt;webp&lt;/code&gt;</source>
          <target state="translated">优化图像并将其转换为 &lt;code&gt;webp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a86800fc867452deb1318b3a05f1bf6cac2de884" translate="yes" xml:space="preserve">
          <source>Optimize any chunk assets. The assets are stored in &lt;code&gt;compilation.assets&lt;/code&gt;. A &lt;code&gt;Chunk&lt;/code&gt; has a property &lt;code&gt;files&lt;/code&gt; which points to all files created by a chunk. Any additional chunk assets are stored in &lt;code&gt;compilation.additionalChunkAssets&lt;/code&gt;.</source>
          <target state="translated">优化任何大块资产。资产存储在 &lt;code&gt;compilation.assets&lt;/code&gt; 中。一 &lt;code&gt;Chunk&lt;/code&gt; 有一个属性 &lt;code&gt;files&lt;/code&gt; 指向一个数据块创建的所有文件。任何其他大块资产都存储在 &lt;code&gt;compilation.additionalChunkAssets&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="724b34c0ab3440d5bcbd5ac7fbcc160345fadd2a" translate="yes" xml:space="preserve">
          <source>Optimize images based on size</source>
          <target state="translated">根据尺寸优化图像</target>
        </trans-unit>
        <trans-unit id="02058675b730ae8ac907d0b2e007189193540d7b" translate="yes" xml:space="preserve">
          <source>Optimize the &lt;code&gt;id&lt;/code&gt; of each chunk.</source>
          <target state="translated">优化每个块的 &lt;code&gt;id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5eb06ba6c776b15c11031bbe7138c977ccc0a979" translate="yes" xml:space="preserve">
          <source>Optimize the chunks.</source>
          <target state="translated">优化分块。</target>
        </trans-unit>
        <trans-unit id="fd9dbc164928d45873317234ebbf7096161d5c77" translate="yes" xml:space="preserve">
          <source>Optimize the dependency tree asynchronously.</source>
          <target state="translated">异步优化依赖树。</target>
        </trans-unit>
        <trans-unit id="063ab40ae2e6475433c23fe6c9bef7c86b59b89c" translate="yes" xml:space="preserve">
          <source>Optimize your output for production by following the steps in the &lt;a href=&quot;production&quot;&gt;production guide&lt;/a&gt;. Let's also add the path to your generated bundle as the package's &lt;code&gt;main&lt;/code&gt; field in with our &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">按照&lt;a href=&quot;production&quot;&gt;生产指南中&lt;/a&gt;的步骤优化生产的产量。我们还要在 &lt;code&gt;package.json&lt;/code&gt; 中将生成的包的路径添加为包的 &lt;code&gt;main&lt;/code&gt; 字段</target>
        </trans-unit>
        <trans-unit id="53f379104414e051be5841978392501ef6c17882" translate="yes" xml:space="preserve">
          <source>Optimize your output for production by following the steps mentioned in the &lt;a href=&quot;production&quot;&gt;production guide&lt;/a&gt;. Let's also add the path to your generated bundle as the package's &lt;code&gt;main&lt;/code&gt; field in with the &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">按照&lt;a href=&quot;production&quot;&gt;生产指南中&lt;/a&gt;提到的步骤优化生产的产量。我们还要在 &lt;code&gt;package.json&lt;/code&gt; 中将生成的包的路径添加为包的 &lt;code&gt;main&lt;/code&gt; 字段</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="5f18b0ec67d95838519b6ef7873dab9057e68dcf" translate="yes" xml:space="preserve">
          <source>Option Arguments</source>
          <target state="translated">选项参数</target>
        </trans-unit>
        <trans-unit id="f1027b2f404b6734997453ccd2fa019511d55439" translate="yes" xml:space="preserve">
          <source>Option to set the method of loading WebAssembly Modules. Methods included by default are &lt;code&gt;'fetch'&lt;/code&gt; (web/WebWorker), &lt;code&gt;'async-node'&lt;/code&gt; (Node.js), but others might be added by plugins.</source>
          <target state="translated">用于设置加载WebAssembly模块的方法的选项。默认情况下包括的方法是 &lt;code&gt;'fetch'&lt;/code&gt; （web / WebWorker）， &lt;code&gt;'async-node'&lt;/code&gt; （Node.js），但其他方法可能由插件添加。</target>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="translated">Optional</target>
        </trans-unit>
        <trans-unit id="e237493bf5b50b1bc0dd5ea6715309334ed442ef" translate="yes" xml:space="preserve">
          <source>Optional: The fourth option, ignored by webpack, can be anything (e.g. some meta data).</source>
          <target state="translated">可选。第四个选项,webpack会忽略,可以是任何东西(比如一些元数据)。</target>
        </trans-unit>
        <trans-unit id="c28aca8e2b3470f97278ecb5949f21d90c3d742f" translate="yes" xml:space="preserve">
          <source>Optional: The fourth option, ignored by webpack, can be anything (e.g. some metadata).</source>
          <target state="translated">可选。第四个选项,webpack会忽略,可以是任何东西(例如一些元数据)。</target>
        </trans-unit>
        <trans-unit id="57c96856f7855749616363c3434cab642b19c9a6" translate="yes" xml:space="preserve">
          <source>Optional: The third argument must be a source map that is parsable by &lt;a href=&quot;https://github.com/mozilla/source-map&quot;&gt;this module&lt;/a&gt;.</source>
          <target state="translated">可选：第三个参数必须是可&lt;a href=&quot;https://github.com/mozilla/source-map&quot;&gt;由此模块&lt;/a&gt;解析的源映射。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="9728f61984c5ad16463d1875a69c3a86230894b1" translate="yes" xml:space="preserve">
          <source>Options are the same as &lt;a href=&quot;node#stats-tojson-options-&quot;&gt;&lt;code&gt;stats.toJson(options)&lt;/code&gt;&lt;/a&gt; with one addition:</source>
          <target state="translated">选项与&lt;a href=&quot;node#stats-tojson-options-&quot;&gt; &lt;code&gt;stats.toJson(options)&lt;/code&gt; &lt;/a&gt;相同，但增加了一个：</target>
        </trans-unit>
        <trans-unit id="b97e258b2ce87f8a54f145c314bfbfbb0f476b00" translate="yes" xml:space="preserve">
          <source>Options are the same as &lt;a href=&quot;node#statstojsonoptions&quot;&gt;&lt;code&gt;stats.toJson(options)&lt;/code&gt;&lt;/a&gt; with one addition:</source>
          <target state="translated">选项与&lt;a href=&quot;node#statstojsonoptions&quot;&gt; &lt;code&gt;stats.toJson(options)&lt;/code&gt; &lt;/a&gt;相同，但增加了一个：</target>
        </trans-unit>
        <trans-unit id="c3dde2ada91abc98feb765994fec65c53be9633a" translate="yes" xml:space="preserve">
          <source>Options can be passed with a query parameter, e.g. &lt;code&gt;?key=value&amp;amp;foo=bar&lt;/code&gt;, or a JSON object, e.g. &lt;code&gt;?{&quot;key&quot;:&quot;value&quot;,&quot;foo&quot;:&quot;bar&quot;}&lt;/code&gt;.</source>
          <target state="translated">可以使用查询参数（例如 &lt;code&gt;?key=value&amp;amp;foo=bar&lt;/code&gt; ）或JSON对象（例如 &lt;code&gt;?{&quot;key&quot;:&quot;value&quot;,&quot;foo&quot;:&quot;bar&quot;}&lt;/code&gt; 传递选项。</target>
        </trans-unit>
        <trans-unit id="e36286bb829208d28d77f1fe8e59ce104bcafce2" translate="yes" xml:space="preserve">
          <source>Options for &lt;a href=&quot;http://sass-lang.com/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; or &lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt; implementation.</source>
          <target state="translated">&lt;a href=&quot;http://sass-lang.com/dart-sass&quot;&gt;Dart Sass&lt;/a&gt;或&lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt;实施的选项。</target>
        </trans-unit>
        <trans-unit id="55a66a8875fa2e0ee2113d2e8b7f0bf0c09a7627" translate="yes" xml:space="preserve">
          <source>Options for &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;&lt;code&gt;imagemin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt; &lt;code&gt;imagemin&lt;/code&gt; 的&lt;/a&gt;选项</target>
        </trans-unit>
        <trans-unit id="592ff757532821d86a1cb12f11ebb3467b72f91f" translate="yes" xml:space="preserve">
          <source>Options for &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;&lt;code&gt;imagemin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt; &lt;code&gt;imagemin&lt;/code&gt; 的&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="8a601f3e0a6d16366ccf4f1d294cd61df081fb15" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;imagemin&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;imagemin&lt;/code&gt; 的选项</target>
        </trans-unit>
        <trans-unit id="ab4346c2b052486fca121be218a0ed84af77f938" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;imagemin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;imagemin&lt;/code&gt; 的选项。</target>
        </trans-unit>
        <trans-unit id="9851b6fb3be9721af920d66f41ecb00764c3a248" translate="yes" xml:space="preserve">
          <source>Options for CoffeeScript. All possible options you can find &lt;a href=&quot;https://coffeescript.org/#nodejs-usage&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">CoffeeScript的选项。您可以在&lt;a href=&quot;https://coffeescript.org/#nodejs-usage&quot;&gt;此处&lt;/a&gt;找到所有可能的选项。</target>
        </trans-unit>
        <trans-unit id="63ff0503c4890e9094d92d01412003d6b099a512" translate="yes" xml:space="preserve">
          <source>Options for Less.</source>
          <target state="translated">少的选择。</target>
        </trans-unit>
        <trans-unit id="f9b8f13aee9301a2ebf3c08aaf6bcc1bc3a0c704" translate="yes" xml:space="preserve">
          <source>Options for Sass.</source>
          <target state="translated">萨斯的选项。</target>
        </trans-unit>
        <trans-unit id="5778b9f4d476271a40a2d2465ba751c62d6fed89" translate="yes" xml:space="preserve">
          <source>Options for Stylus.</source>
          <target state="translated">手写笔的选项。</target>
        </trans-unit>
        <trans-unit id="e58e69ae18979ae5b651ffa878ebdea4581226da" translate="yes" xml:space="preserve">
          <source>Options for infrastructure level logging.</source>
          <target state="translated">基础设施一级记录的选择;</target>
        </trans-unit>
        <trans-unit id="4f09726e23e1758c56bec1c40448535de02fb708" translate="yes" xml:space="preserve">
          <source>Options like &lt;code&gt;output.chunkLoadTimeout&lt;/code&gt;, &lt;code&gt;output.crossOriginLoading&lt;/code&gt; and &lt;code&gt;output.scriptType&lt;/code&gt; will also have effect on the external scripts loaded this way.</source>
          <target state="translated">诸如 &lt;code&gt;output.chunkLoadTimeout&lt;/code&gt; ， &lt;code&gt;output.crossOriginLoading&lt;/code&gt; 和 &lt;code&gt;output.scriptType&lt;/code&gt; 之类的选项也将对以这种方式加载的外部脚本产生影响。</target>
        </trans-unit>
        <trans-unit id="0d51d23e73cbeb258bb034bea38efe63c1162dce" translate="yes" xml:space="preserve">
          <source>Options that are compatible with &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;webpack-dev-middleware&lt;/a&gt; have 🔑 next to them.</source>
          <target state="translated">与&lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;webpack-dev-middleware&lt;/a&gt;兼容的选项旁边带有🔑。</target>
        </trans-unit>
        <trans-unit id="e831b002187c1ca07dd471e05e620b151a2f0c77" translate="yes" xml:space="preserve">
          <source>Options to pass to the html-loader. See &lt;a href=&quot;html-loader&quot;&gt;html-loader&lt;/a&gt;.</source>
          <target state="translated">传递给html-loader的选项。参见&lt;a href=&quot;html-loader&quot;&gt;html-loader&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="c2bc580e657734cab7c68b6414f5f6be06a4b56d" translate="yes" xml:space="preserve">
          <source>Opts out of any default optimization options</source>
          <target state="translated">退出任何默认的优化选项</target>
        </trans-unit>
        <trans-unit id="579cb1f521aecef786a714d13307176b814063cc" translate="yes" xml:space="preserve">
          <source>Or a substitution string:</source>
          <target state="translated">或者是一个替换字符串。</target>
        </trans-unit>
        <trans-unit id="62ee7f941acd3740b5979aa010ab34bed7802486" translate="yes" xml:space="preserve">
          <source>Or add the loader to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</source>
          <target state="translated">或将加载程序添加到您的 &lt;code&gt;webpack&lt;/code&gt; 配置中。例如：</target>
        </trans-unit>
        <trans-unit id="88048597ca66db3d3f0e2283073e6ad3280ebf5d" translate="yes" xml:space="preserve">
          <source>Or from the command-line:</source>
          <target state="translated">或从命令行。</target>
        </trans-unit>
        <trans-unit id="4299e2e925756675f72d5cd238eb192203bb0f93" translate="yes" xml:space="preserve">
          <source>Or if you prefer ES2015:</source>
          <target state="translated">或者如果你喜欢ES2015。</target>
        </trans-unit>
        <trans-unit id="42b400c4fd0735f1d89abd8c4714b4a52afceca7" translate="yes" xml:space="preserve">
          <source>Or on the command-line:</source>
          <target state="translated">或者在命令行上。</target>
        </trans-unit>
        <trans-unit id="a927e15e4fef4d4d541af825a8ccd81e41fe57ec" translate="yes" xml:space="preserve">
          <source>Or pass an error to the callback in async mode:</source>
          <target state="translated">或者在异步模式下向回调传递一个错误。</target>
        </trans-unit>
        <trans-unit id="e3ff562d21ab08937a5659caeb58bb2ea81f3323" translate="yes" xml:space="preserve">
          <source>Or provide a chunk name within a &lt;code&gt;name&lt;/code&gt; query parameter:</source>
          <target state="translated">或者在 &lt;code&gt;name&lt;/code&gt; 查询参数中提供块名称：</target>
        </trans-unit>
        <trans-unit id="0f5ba6d7de5a002758743861114c3c6db71f8931" translate="yes" xml:space="preserve">
          <source>Or specify the proxied components in your configuration:</source>
          <target state="translated">或者在配置中指定代理组件。</target>
        </trans-unit>
        <trans-unit id="d51d3af226498a76e24107125e840dcd31bd8233" translate="yes" xml:space="preserve">
          <source>Or using a &lt;code&gt;Function&lt;/code&gt;:</source>
          <target state="translated">或使用 &lt;code&gt;Function&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a3e30ba9d574feb7c422f9e4dd767cfcd41fb76c" translate="yes" xml:space="preserve">
          <source>Or you can apply specific plugins you want:</source>
          <target state="translated">或者你可以应用你想要的特定插件。</target>
        </trans-unit>
        <trans-unit id="548b8be6712aca1d87a33596575b4f0b286e4a6c" translate="yes" xml:space="preserve">
          <source>Or you can create a global module and symlink to the local one:</source>
          <target state="translated">或者你可以创建一个全局模块,并将其链接到本地模块。</target>
        </trans-unit>
        <trans-unit id="bd629f04ae3d7bf51edb089b4c17c8770562b864" translate="yes" xml:space="preserve">
          <source>Or, as function:</source>
          <target state="translated">或者,作为功能。</target>
        </trans-unit>
        <trans-unit id="fb1d5ca32ce0b0094f78920f00238713e52e2c68" translate="yes" xml:space="preserve">
          <source>Or, in case of just a &lt;code&gt;from&lt;/code&gt; with the default destination, you can also use a &lt;code&gt;{String}&lt;/code&gt; as shorthand instead of an &lt;code&gt;{Object}&lt;/code&gt;</source>
          <target state="translated">或者，如果仅使用默认目的地的 &lt;code&gt;from&lt;/code&gt; ，则也可以使用 &lt;code&gt;{String}&lt;/code&gt; 作为速记来代替 &lt;code&gt;{Object}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7dc586b794d0f2f0123ec40266bce0de0311da18" translate="yes" xml:space="preserve">
          <source>Or, to add as standard module as per &lt;a href=&quot;https://github.com/dherman/defense-of-dot-js/blob/master/proposal.md#typical-usage&quot;&gt;this guide&lt;/a&gt;:</source>
          <target state="translated">或者，按照&lt;a href=&quot;https://github.com/dherman/defense-of-dot-js/blob/master/proposal.md#typical-usage&quot;&gt;本指南&lt;/a&gt;添加为标准模块：</target>
        </trans-unit>
        <trans-unit id="1c61f78a7c6406901d52386c92a5f1b9810c0e03" translate="yes" xml:space="preserve">
          <source>Or, to add it as a standard module as per &lt;a href=&quot;https://github.com/dherman/defense-of-dot-js/blob/master/proposal.md#typical-usage&quot;&gt;this guide&lt;/a&gt;:</source>
          <target state="translated">或者，按照&lt;a href=&quot;https://github.com/dherman/defense-of-dot-js/blob/master/proposal.md#typical-usage&quot;&gt;本指南&lt;/a&gt;将其添加为标准模块：</target>
        </trans-unit>
        <trans-unit id="2769995d7aa4f59c417df977dc581a297b53e205" translate="yes" xml:space="preserve">
          <source>Order the modules and chunks by occurrence. This saves space, because often referenced modules and chunks get smaller ids.</source>
          <target state="translated">按发生次数对模块和chunks进行排序。这可以节省空间,因为经常被引用的模块和chunks的id比较小。</target>
        </trans-unit>
        <trans-unit id="2967fb6b9dbc531fdccdc62a709f0b9b3f045265" translate="yes" xml:space="preserve">
          <source>Originally, chunks (and modules imported inside them) were connected by a parent-child relationship in the internal webpack graph. The &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; was used to avoid duplicated dependencies across them, but further optimizations were not possible</source>
          <target state="translated">最初，块（及其内部导入的模块）是通过内部Webpack图形中的父子关系连接的。该 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 被用来避免在这些重复的依赖，但进一步的优化是不可能的</target>
        </trans-unit>
        <trans-unit id="2b0118aed61196f5eed6f43529150f0d1186014c" translate="yes" xml:space="preserve">
          <source>Originally, chunks (and modules imported inside them) were connected by a parent-child relationship in the internal webpack graph. The &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; was used to avoid duplicated dependencies across them, but further optimizations were not possible.</source>
          <target state="translated">最初，大块（及其内部导入的模块）是通过内部Webpack图形中的父子关系连接的。该 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 被用来避免在这些重复的依赖，但进一步的优化是不可能的。</target>
        </trans-unit>
        <trans-unit id="bbcf81a9103052a3ce5b11d9884ce8fb6379af91" translate="yes" xml:space="preserve">
          <source>Other Code and Frameworks</source>
          <target state="translated">其他代码和框架</target>
        </trans-unit>
        <trans-unit id="9cb6f2fb01dfa81e12bc1e11f0e7b676e54669fd" translate="yes" xml:space="preserve">
          <source>Other Options</source>
          <target state="translated">其他选择</target>
        </trans-unit>
        <trans-unit id="9f43af92a10e29a062869a02d2b19f320ff7d737" translate="yes" xml:space="preserve">
          <source>Other Targets</source>
          <target state="translated">其他目标</target>
        </trans-unit>
        <trans-unit id="a6a3346524b28d21d18a28316c1731fc127a349f" translate="yes" xml:space="preserve">
          <source>Other Utilities</source>
          <target state="translated">其他公用事业</target>
        </trans-unit>
        <trans-unit id="d9c2e3a6f8b3ea9219d86ce1d7f7a3f8de962df1" translate="yes" xml:space="preserve">
          <source>Other examples using different module formats:</source>
          <target state="translated">其他使用不同模块格式的例子。</target>
        </trans-unit>
        <trans-unit id="164b7710bcd6917de534087ff1e2ed001f404c41" translate="yes" xml:space="preserve">
          <source>Other node core libraries</source>
          <target state="translated">其他节点核心库</target>
        </trans-unit>
        <trans-unit id="748e927e98cf6fa8a8a6ea344312832b4e6a6f35" translate="yes" xml:space="preserve">
          <source>Other tips for Use</source>
          <target state="translated">其他使用技巧</target>
        </trans-unit>
        <trans-unit id="4653e7976f9770f2699c713bdc5215cd4f6c2d22" translate="yes" xml:space="preserve">
          <source>Otherwise, the file extension is resolved using the &lt;a href=&quot;../configuration/resolve#resolve-extensions&quot;&gt;&lt;code&gt;resolve.extensions&lt;/code&gt;&lt;/a&gt; option, which tells the resolver which extensions (eg - &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;) are acceptable for resolution.</source>
          <target state="translated">否则，文件扩展名是使用解决&lt;a href=&quot;../configuration/resolve#resolve-extensions&quot;&gt; &lt;code&gt;resolve.extensions&lt;/code&gt; &lt;/a&gt;（ -如选项，它告诉解析器实现了扩展 &lt;code&gt;.js&lt;/code&gt; ， &lt;code&gt;.jsx&lt;/code&gt; ）是分辨率可以接受的。</target>
        </trans-unit>
        <trans-unit id="d7c2d976aa8ed2aa5de9a29e172e195a80941ad2" translate="yes" xml:space="preserve">
          <source>Otherwise, the file extension is resolved using the &lt;a href=&quot;../configuration/resolve#resolveextensions&quot;&gt;&lt;code&gt;resolve.extensions&lt;/code&gt;&lt;/a&gt; option, which tells the resolver which extensions are acceptable for resolution e.g. &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;.</source>
          <target state="translated">否则，使用&lt;a href=&quot;../configuration/resolve#resolveextensions&quot;&gt; &lt;code&gt;resolve.extensions&lt;/code&gt; &lt;/a&gt;选项解析文件扩展名，该选项告诉解析器哪些扩展名可用于解析，例如 &lt;code&gt;.js&lt;/code&gt; ， &lt;code&gt;.jsx&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72be90f155341141ab65b4cd9267be474f7c66e0" translate="yes" xml:space="preserve">
          <source>Out of the box &lt;code&gt;SplitChunksPlugin&lt;/code&gt; should work great for most users.</source>
          <target state="translated">开箱即用的 &lt;code&gt;SplitChunksPlugin&lt;/code&gt; 应该适合大多数用户。</target>
        </trans-unit>
        <trans-unit id="c29222847046578467b267aa47d594172f93cfd2" translate="yes" xml:space="preserve">
          <source>Out of the box &lt;code&gt;SplitChunksPlugin&lt;/code&gt; should work well for most users.</source>
          <target state="translated">开箱即用的 &lt;code&gt;SplitChunksPlugin&lt;/code&gt; 应该适合大多数用户使用。</target>
        </trans-unit>
        <trans-unit id="6cf81e2a4d48ca5dfb4018a0b5da4dc3d759f6dd" translate="yes" xml:space="preserve">
          <source>Out of the box, webpack only understands JavaScript and JSON files. &lt;strong&gt;Loaders&lt;/strong&gt; allow webpack to process other types of files and convert them into valid &lt;a href=&quot;modules&quot;&gt;modules&lt;/a&gt; that can be consumed by your application and added to the dependency graph.</source>
          <target state="translated">开箱即用的webpack仅能理解JavaScript和JSON文件。&lt;strong&gt;装载机&lt;/strong&gt;允许的WebPack处理其他类型的文件，并将其转换为有效的&lt;a href=&quot;modules&quot;&gt;模块&lt;/a&gt;，可以通过您的应用程序消耗并添加到依赖关系图。</target>
        </trans-unit>
        <trans-unit id="2dea8748bb619371cecdb1a800acca07d21d1d14" translate="yes" xml:space="preserve">
          <source>Out of the box, webpack only understands JavaScript files. &lt;strong&gt;Loaders&lt;/strong&gt; allow webpack to process other types of files and convert them into valid &lt;a href=&quot;modules&quot;&gt;modules&lt;/a&gt; that can be consumed by your application and added to the dependency graph.</source>
          <target state="translated">开箱即用的webpack仅能理解JavaScript文件。&lt;strong&gt;装载机&lt;/strong&gt;允许的WebPack处理其他类型的文件，并将其转换为有效的&lt;a href=&quot;modules&quot;&gt;模块&lt;/a&gt;，可以通过您的应用程序消耗并添加到依赖关系图。</target>
        </trans-unit>
        <trans-unit id="aa55ace273d955497ca2efda61e6d78947e927c7" translate="yes" xml:space="preserve">
          <source>Out of the box, webpack won't require you to use a configuration file. However, it will assume the entry point of your project is &lt;code&gt;src/index.js&lt;/code&gt; and will output the result in &lt;code&gt;dist/main.js&lt;/code&gt; minified and optimized for production.</source>
          <target state="translated">开箱即用，webpack不需要您使用配置文件。但是，它将假定项目的入口点是 &lt;code&gt;src/index.js&lt;/code&gt; ，并将结果 &lt;code&gt;dist/main.js&lt;/code&gt; 并优化后用于生产的dist / main.js中输出。</target>
        </trans-unit>
        <trans-unit id="82b7d4b68bfe648eaf6de08120bde75436bb94ff" translate="yes" xml:space="preserve">
          <source>Out of the box, webpack won't require you to use a configuration file. However, it will assume the entry point of your project is &lt;code&gt;src/index&lt;/code&gt; and will output the result in &lt;code&gt;dist/main.js&lt;/code&gt; minified and optimized for production.</source>
          <target state="translated">Webpack开箱即用，不需要您使用配置文件。但是，它将假定项目的入口点是 &lt;code&gt;src/index&lt;/code&gt; ，并将结果 &lt;code&gt;dist/main.js&lt;/code&gt; 并优化后用于生产的dist / main.js中输出。</target>
        </trans-unit>
        <trans-unit id="d3f0610632bbef35bfaa389ca89023fd50c6dd62" translate="yes" xml:space="preserve">
          <source>Outcome</source>
          <target state="translated">Outcome</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="418725af62e59558e3437fe1eae1f6b5a4f94ecd" translate="yes" xml:space="preserve">
          <source>Output ES Module. Make sure to enable &lt;a href=&quot;experiments&quot;&gt;experiments.outputModule&lt;/a&gt; beforehand.</source>
          <target state="translated">输出ES模块。确保事先启用&lt;a href=&quot;experiments&quot;&gt;experiments.outputModule&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31907ec3a5be78cc563099c264375fdb7886f469" translate="yes" xml:space="preserve">
          <source>Output Filenames</source>
          <target state="translated">输出文件名</target>
        </trans-unit>
        <trans-unit id="02dce9a95ab9cf8a495ec84b0106cfec3f2a9bd1" translate="yes" xml:space="preserve">
          <source>Output JavaScript files as module type. Disabled by default as it's an experimental feature.</source>
          <target state="translated">以模块类型输出JavaScript文件。由于是实验性功能,默认为禁用。</target>
        </trans-unit>
        <trans-unit id="aa36220cfc69d0a1ee678254e922b40c3459f898" translate="yes" xml:space="preserve">
          <source>Output Management</source>
          <target state="translated">产出管理</target>
        </trans-unit>
        <trans-unit id="fcd12607f17f8ae3c1aae3e2ae27e439345801a6" translate="yes" xml:space="preserve">
          <source>Output Options</source>
          <target state="translated">输出选项</target>
        </trans-unit>
        <trans-unit id="5cefca5bd5c8ac5f884cdd9e5d63fca191c4cdad" translate="yes" xml:space="preserve">
          <source>Output Without Path Info</source>
          <target state="translated">无路径信息的输出</target>
        </trans-unit>
        <trans-unit id="78d777aae91ea576ceaee3d45b01ad3435e7cce3" translate="yes" xml:space="preserve">
          <source>Output cli information. It is enabled by default.</source>
          <target state="translated">输出Cli信息。默认情况下是启用的。</target>
        </trans-unit>
        <trans-unit id="94e22a6ec6fd2d9123ea673737e219c0d79bdced" translate="yes" xml:space="preserve">
          <source>Output everything</source>
          <target state="translated">输出一切</target>
        </trans-unit>
        <trans-unit id="661892806f66f11faaf25d11ac89a058b9057641" translate="yes" xml:space="preserve">
          <source>Output everything except &lt;code&gt;chunkModules&lt;/code&gt; and &lt;code&gt;chunkRootModules&lt;/code&gt;</source>
          <target state="translated">输出除 &lt;code&gt;chunkModules&lt;/code&gt; 和 &lt;code&gt;chunkRootModules&lt;/code&gt; 之外的所有内容</target>
        </trans-unit>
        <trans-unit id="85df5e35434c1a5376977b90aa2f2b4d2996ced1" translate="yes" xml:space="preserve">
          <source>Output filename</source>
          <target state="translated">输出文件名</target>
        </trans-unit>
        <trans-unit id="7e99a80b3fe54f415b43b27097f41e8c986da395" translate="yes" xml:space="preserve">
          <source>Output location of the file generated by webpack e.g. &lt;code&gt;./dist&lt;/code&gt;</source>
          <target state="translated">由webpack生成的文件的输出位置，例如 &lt;code&gt;./dist&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5acfe12ea07fb8ea46b335a837e4d39082cb4b4e" translate="yes" xml:space="preserve">
          <source>Output may differ depending on your current webpack version. Newer versions may not have all the same issues with hashing as some older versions, but we still recommend the following steps to be safe.</source>
          <target state="translated">输出可能会根据您当前的webpack版本而有所不同。新的版本可能不会像一些旧版本那样存在同样的哈希问题,但为了安全起见,我们还是建议采取以下步骤。</target>
        </trans-unit>
        <trans-unit id="b01cd12e0a3c672d6fd96717a91de6f52cff5761" translate="yes" xml:space="preserve">
          <source>Output nothing</source>
          <target state="translated">不输出任何东西</target>
        </trans-unit>
        <trans-unit id="2bfe6cbb19179698183561457ded58623acee62f" translate="yes" xml:space="preserve">
          <source>Output path.</source>
          <target state="translated">输出路径:</target>
        </trans-unit>
        <trans-unit id="283c87d1343db905c99fd3e4c33c0ff5f92a966e" translate="yes" xml:space="preserve">
          <source>Output root if &lt;code&gt;from&lt;/code&gt; is file or dir, resolved glob path if &lt;code&gt;from&lt;/code&gt; is glob</source>
          <target state="translated">输出根如果 &lt;code&gt;from&lt;/code&gt; 是文件或目录，解决了水珠的路径，如果 &lt;code&gt;from&lt;/code&gt; 是水珠</target>
        </trans-unit>
        <trans-unit id="987b8eef83e7f7a3b02b84875c2c2c3993b6e4b2" translate="yes" xml:space="preserve">
          <source>Output running progress to console.</source>
          <target state="translated">将运行进度输出到控制台。</target>
        </trans-unit>
        <trans-unit id="3a4d69ed8d9632fb96d85cda226c3a3b61fb79ce" translate="yes" xml:space="preserve">
          <source>Output the version number of &lt;code&gt;webpack&lt;/code&gt;, &lt;code&gt;webpack-cli&lt;/code&gt; and &lt;code&gt;webpack-dev-server&lt;/code&gt;.</source>
          <target state="translated">输出 &lt;code&gt;webpack&lt;/code&gt; ， &lt;code&gt;webpack-cli&lt;/code&gt; 和 &lt;code&gt;webpack-dev-server&lt;/code&gt; 的版本号。</target>
        </trans-unit>
        <trans-unit id="ca183338cc7471eed6101c7fd1bbac8e1f8b9554" translate="yes" xml:space="preserve">
          <source>Output webpack version, warnings count and errors count</source>
          <target state="translated">输出webpack版本,警告数和错误数。</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="a3b4424f964b81cc5bcfe2b439496a6ff469dacc" translate="yes" xml:space="preserve">
          <source>Outputs information about your system and dependencies</source>
          <target state="translated">输出有关您的系统和依赖性的信息</target>
        </trans-unit>
        <trans-unit id="df8367b269efaec204f3649d856e0a730fc65b65" translate="yes" xml:space="preserve">
          <source>Outputs information about your system.</source>
          <target state="translated">输出有关系统的信息。</target>
        </trans-unit>
        <trans-unit id="40b4688fb4497807a4c8c9d68a435271e457deec" translate="yes" xml:space="preserve">
          <source>Outputs list of supported flags and commands</source>
          <target state="translated">输出支持的标志和命令列表</target>
        </trans-unit>
        <trans-unit id="e6450af99eaaf4c4b937428ec7e5d80bb469e468" translate="yes" xml:space="preserve">
          <source>Override default minify function - use &lt;code&gt;uglify-js&lt;/code&gt; for minification.</source>
          <target state="translated">覆盖默认的缩小功能-使用 &lt;code&gt;uglify-js&lt;/code&gt; 进行缩小。</target>
        </trans-unit>
        <trans-unit id="e41d0c69ce84028ee812f50e08e3c0fe2856797b" translate="yes" xml:space="preserve">
          <source>Override the &lt;code&gt;publicPath&lt;/code&gt; setting for this loader</source>
          <target state="translated">覆盖此加载程序的 &lt;code&gt;publicPath&lt;/code&gt; 设置</target>
        </trans-unit>
        <trans-unit id="7a7d47fce48acf58b47aa4b2613746aa85bf70fa" translate="yes" xml:space="preserve">
          <source>Override the inferred context of a &lt;code&gt;require&lt;/code&gt; expression</source>
          <target state="translated">覆盖 &lt;code&gt;require&lt;/code&gt; 表达式的推断上下文</target>
        </trans-unit>
        <trans-unit id="3e7169a4fd509319454fce735451cddb14ece56f" translate="yes" xml:space="preserve">
          <source>Overrides are provided in a similar way as the container exposes modules, separated into two steps:</source>
          <target state="translated">覆盖是以类似容器暴露模块的方式提供的,分为两个步骤。</target>
        </trans-unit>
        <trans-unit id="e55a541144e6bf0b62180c479324b41db153070f" translate="yes" xml:space="preserve">
          <source>Overrides must be provided before the modules of the container are loaded. Overridables that are used in initial chunk, can only be overridden by a synchronous module override that doesn't use Promises. Once evaluated, overridables are no longer overridable.</source>
          <target state="translated">必须在容器的模块加载之前提供覆盖。在初始分块中使用的可覆盖项,只能通过不使用Promises的同步模块覆盖来覆盖。一旦被评估,可覆盖项就不能再被覆盖了。</target>
        </trans-unit>
        <trans-unit id="4548704a9cf96f5c80e64da876d62bd8a09f9fd5" translate="yes" xml:space="preserve">
          <source>Overrides the path from which worker scripts are downloaded. If not specified, the same public path used for other webpack assets is used.</source>
          <target state="translated">重写下载 Worker 脚本的路径。如果没有指定,则使用与其他webpack资产相同的公共路径。</target>
        </trans-unit>
        <trans-unit id="c6135137749f44ab01770866a1a5ad05ffe9fd2a" translate="yes" xml:space="preserve">
          <source>Overriding</source>
          <target state="translated">Overriding</target>
        </trans-unit>
        <trans-unit id="17f304384bc4e2686063ab1f4a2a78f9db0327d8" translate="yes" xml:space="preserve">
          <source>Overriding modules is a one-directional operation.</source>
          <target state="translated">覆盖模块是一个单向的操作。</target>
        </trans-unit>
        <trans-unit id="fc7f5dcce2431faa8c81e362f061ec0d6c7ca706" translate="yes" xml:space="preserve">
          <source>Overwrites files already in &lt;code&gt;compilation.assets&lt;/code&gt; (usually added by other plugins/loaders)</source>
          <target state="translated">覆盖文件已经在 &lt;code&gt;compilation.assets&lt;/code&gt; （通常由其他插件/装载机加）</target>
        </trans-unit>
        <trans-unit id="dc2451a0334508fc6e4069e13d9f5a761b0d9e13" translate="yes" xml:space="preserve">
          <source>Overwrites files already in &lt;code&gt;compilation.assets&lt;/code&gt; (usually added by other plugins/loaders).</source>
          <target state="translated">覆盖文件已经在 &lt;code&gt;compilation.assets&lt;/code&gt; （通常由其他插件/装载机添加）。</target>
        </trans-unit>
        <trans-unit id="cb9f6fa5a3ce578a059be19b7a65f2fb3934a0f5" translate="yes" xml:space="preserve">
          <source>Package entry points in Node.js</source>
          <target state="translated">Node.js中的包入口点</target>
        </trans-unit>
        <trans-unit id="8464afe7016605580e6dba139c430ce6bdf714d1" translate="yes" xml:space="preserve">
          <source>Package exports</source>
          <target state="translated">包装出口</target>
        </trans-unit>
        <trans-unit id="48804509ff7043f630d59176ab8fe0388d9722f4" translate="yes" xml:space="preserve">
          <source>Packages are rotting.</source>
          <target state="translated">包裹都腐烂了。</target>
        </trans-unit>
        <trans-unit id="b62df9105ffbe0ac3ff022061a5b5adbce84148b" translate="yes" xml:space="preserve">
          <source>Paired with &lt;code&gt;--progress&lt;/code&gt;, &lt;code&gt;--profile&lt;/code&gt; gives you an in depth idea of which step in the compilation is taking how long. This can help you optimise your build in a more informed manner.</source>
          <target state="translated">与配对 &lt;code&gt;--progress&lt;/code&gt; ， &lt;code&gt;--profile&lt;/code&gt; 为您提供了一个深入了解哪些步骤编译多久服用。这可以帮助您以更明智的方式优化构建。</target>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="translated">Parameter</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="c991f93c6f2615505243143a75c3501413eb1c2a" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;assets&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;assets&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90d5ef260713b6cedae194a2cbad71df445f4f77" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;ast&lt;/code&gt;&lt;code&gt;comments&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;ast&lt;/code&gt; &lt;code&gt;comments&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73e275dcbd3f5bf47f5505559e9504642b8e930b" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;childCompiler&lt;/code&gt;&lt;code&gt;compilerName&lt;/code&gt;&lt;code&gt;compilerIndex&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;childCompiler&lt;/code&gt; &lt;code&gt;compilerName&lt;/code&gt; &lt;code&gt;compilerIndex&lt;/code&gt; 名称CompilerIndex</target>
        </trans-unit>
        <trans-unit id="c79f0b6f9e31573d9ffa15a9fb789159922bd31e" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;chunk&lt;/code&gt;&lt;code&gt;chunkHash&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;chunk&lt;/code&gt; &lt;code&gt;chunkHash&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c5de9353c41900f7cc9830f0646bc0fa669708d" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;chunk&lt;/code&gt;&lt;code&gt;filename&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;chunk&lt;/code&gt; &lt;code&gt;filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="750d84381779421de68c42062c5ddab4698e3486" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;chunks&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;chunks&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e5636940b4dc3dc9e0f4427f619d2ebaa33db5c" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;chunks&lt;/code&gt;&lt;code&gt;modules&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;chunks&lt;/code&gt; &lt;code&gt;modules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43c826f3755620ba502465d8fdd73de0f745b8a6" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;chunks&lt;/code&gt;&lt;code&gt;records&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;chunks&lt;/code&gt; &lt;code&gt;records&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="134cac6025b323774eb8179251b0f6fb2bf96d01" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;compilation&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;compilation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2727aeb16aadf78295c5bd4a2c75012e55cab33" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;compilation&lt;/code&gt;&lt;code&gt;records&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;compilation&lt;/code&gt; &lt;code&gt;records&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2604ad91c4fb4f7140b65b8321f116f6bbdb49a" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;compilationParams&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;compilationParams&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="358aeccf97432c4567cbfb2ba6011fde70b7a9e5" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;compiler&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;compiler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d83fb6de943f2454a64388c12c7bd216e69a47d6" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;context&lt;/code&gt;, &lt;code&gt;entry&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;context&lt;/code&gt; ， &lt;code&gt;entry&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3881d0d3fb7b473209e5f26fc9b60107b12dd717" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;contextModuleFactory&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;contextModuleFactory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e500e62253beff7e7b5cdb1136378a640915ec4" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;declaration&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;declaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93b7b50f6f2c327b7a133c81eeca3d4f25c8238c" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;depRef&lt;/code&gt;&lt;code&gt;dependency&lt;/code&gt;&lt;code&gt;module&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;depRef&lt;/code&gt; &lt;code&gt;dependency&lt;/code&gt; &lt;code&gt;module&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95c1249b8cda0474a3c8ed88c0cb58c97638ee49" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;error&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;error&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d2965c99dc7348b590c60e8ebb0897c992044d5" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;expression&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ccdb3ed547f580cdabef52c215215c64efa3c4c" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;expression&lt;/code&gt;&lt;code&gt;param&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;expression&lt;/code&gt; &lt;code&gt;param&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fd8dbb04e1aba5ca2a1c485f742ded6bd2b3ec0" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;fileName&lt;/code&gt;, &lt;code&gt;changeTime&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;fileName&lt;/code&gt; ， &lt;code&gt;changeTime&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8040cb4bbacc51d2af2b339355655aaad2fbdc9" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;filename&lt;/code&gt;&lt;code&gt;data&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;filename&lt;/code&gt; &lt;code&gt;data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f72e57dbf055f2ab852992315ef092fed313809b" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;initExpression&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;initExpression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07f6255d8e468a3d3a5efe6c994ef655705935d7" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;loaderContext&lt;/code&gt;&lt;code&gt;module&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;loaderContext&lt;/code&gt; &lt;code&gt;module&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a72008dac1303eb45b36ce62dbc5c678c1fbe85e" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;module&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;module&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="183eeba3bcdd63b435c108f06511e3def4ff6a3e" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;module&lt;/code&gt;&lt;code&gt;error&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;module&lt;/code&gt; &lt;code&gt;error&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0678017eab5a67be4284d37b217ad58da0a1264" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;module&lt;/code&gt;&lt;code&gt;filename&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;module&lt;/code&gt; &lt;code&gt;filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="393e20853c024b1e61234fc6dbc4a239218482dd" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;modules&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;modules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45c6ad20b68012384f24f03273152bff0670a28d" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;modules&lt;/code&gt;&lt;code&gt;records&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;modules&lt;/code&gt; &lt;code&gt;records&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe7d7aacb1a5e33fbf0b36e2c9f6570cebc159d6" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;normalModuleFactory&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;normalModuleFactory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33836371ac0c080ece95dd435ca0a7783875bb9e" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;records&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;records&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50ff59b8d5d6842b64d4779f3ab7252d6a51f359" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bbaf0fbeec68fba8045c7439ee421648ae5aeb57" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;&lt;code&gt;declaration&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt; &lt;code&gt;declaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44b3f428537530948b885defbb5b94e5a0192b4c" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;&lt;code&gt;identifierName&lt;/code&gt;&lt;code&gt;exportName&lt;/code&gt;&lt;code&gt;index&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt; &lt;code&gt;identifierName&lt;/code&gt; &lt;code&gt;exportName&lt;/code&gt; &lt;code&gt;index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8a370f0db751365267990ae5e925f09c0bc0b03" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;&lt;code&gt;source&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt; &lt;code&gt;source&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65bf8ac879e1b4ddebbe4cff09b464b8bd66db9e" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;&lt;code&gt;source&lt;/code&gt;&lt;code&gt;exportName&lt;/code&gt;&lt;code&gt;identifierName&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt; &lt;code&gt;source&lt;/code&gt; &lt;code&gt;exportName&lt;/code&gt; &lt;code&gt;identifierName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07a3f15cf76a6ec9ba4f52e3b74ad9df5140a75f" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;&lt;code&gt;source&lt;/code&gt;&lt;code&gt;identifierName&lt;/code&gt;&lt;code&gt;exportName&lt;/code&gt;&lt;code&gt;index&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt; &lt;code&gt;source&lt;/code&gt; &lt;code&gt;identifierName&lt;/code&gt; &lt;code&gt;exportName&lt;/code&gt; &lt;code&gt;index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8c0bb41ee59e42c76f4f0b0da6f3fa83f528532" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;stats&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;stats&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b3cf5033ed01a4fcbff3f2957e66cfe44af45a9" translate="yes" xml:space="preserve">
          <source>Parser</source>
          <target state="translated">Parser</target>
        </trans-unit>
        <trans-unit id="671507423a5ce51b91d522731ab85745d3d74657" translate="yes" xml:space="preserve">
          <source>Parser options: An options object which should be used to create the parser for this module.</source>
          <target state="translated">解析器选项。一个选项对象,用于创建本模块的解析器。</target>
        </trans-unit>
        <trans-unit id="43bc94b7434511df8e3fc1fa270f99760c5db1de" translate="yes" xml:space="preserve">
          <source>Parsers may inspect these options and disable or reconfigure themselves accordingly. Most of the default plugins interpret the values as follows:</source>
          <target state="translated">解析器可以检查这些选项,并相应地禁用或重新配置自己。大多数默认插件对这些值的解释如下:</target>
        </trans-unit>
        <trans-unit id="3d91a80c9424b0cd790f2d89ceb18365f304810a" translate="yes" xml:space="preserve">
          <source>Pass &lt;a href=&quot;https://github.com/remarkjs/remark/tree/main/packages/remark-stringify#options&quot;&gt;&lt;code&gt;remark-stringify&lt;/code&gt; options&lt;/a&gt; and &lt;a href=&quot;https://github.com/remarkjs/remark/tree/main/packages/remark-parse#options&quot;&gt;&lt;code&gt;remark-parse&lt;/code&gt; options&lt;/a&gt; options to the &lt;code&gt;remark&lt;/code&gt;.</source>
          <target state="translated">将&lt;a href=&quot;https://github.com/remarkjs/remark/tree/main/packages/remark-stringify#options&quot;&gt; &lt;code&gt;remark-stringify&lt;/code&gt; 选项&lt;/a&gt;和&lt;a href=&quot;https://github.com/remarkjs/remark/tree/main/packages/remark-parse#options&quot;&gt; &lt;code&gt;remark-parse&lt;/code&gt; 选项&lt;/a&gt;选项传递给 &lt;code&gt;remark&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a87c77193cd00bddf1f009ea53e0eae7bb5cdcf" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;loaderContext&lt;/code&gt; in plugin.</source>
          <target state="translated">在插件中传递 &lt;code&gt;loaderContext&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecc2b82cdbbdc82a8a4bb8c0a2e4f9a8d35144ff" translate="yes" xml:space="preserve">
          <source>Pass CLI arguments to Node.js</source>
          <target state="translated">将CLI参数传递给Node.js。</target>
        </trans-unit>
        <trans-unit id="8f37fa03d741e390b4646ce553be76d46bc93b97" translate="yes" xml:space="preserve">
          <source>Pass a boolean to enable or disable this feature for all modules (defaults to &lt;code&gt;false&lt;/code&gt;). An object with &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;exclude&lt;/code&gt; is also allowed. For example, to enable this feature for all javascript files within a certain directory:</source>
          <target state="translated">传递一个布尔值以为所有模块启用或禁用此功能（默认为 &lt;code&gt;false&lt;/code&gt; ）。也允许带有 &lt;code&gt;test&lt;/code&gt; ， &lt;code&gt;include&lt;/code&gt; ， &lt;code&gt;exclude&lt;/code&gt; 的对象。例如，要为某个目录内的所有javascript文件启用此功能：</target>
        </trans-unit>
        <trans-unit id="4361e47b71597632ec2c755166dece322371eb56" translate="yes" xml:space="preserve">
          <source>Pass values to the next loader. If you know what your result exports if executed as a module, set this value here (as an only element array).</source>
          <target state="translated">将值传递给下一个加载器。如果你知道你的结果作为一个模块执行时的输出结果,请在这里设置这个值(作为一个唯一的元素数组)。</target>
        </trans-unit>
        <trans-unit id="b936ea14312d991018d6db2aecbac5ce71bd65bc" translate="yes" xml:space="preserve">
          <source>Pass values to the next loader. If you know what your result exports if executed as module, set this value here (as a only element array).</source>
          <target state="translated">将值传递给下一个加载器。如果你知道你的结果作为模块执行时的输出内容,请在这里设置这个值(作为一个唯一的元素数组)。</target>
        </trans-unit>
        <trans-unit id="aaf0f8e2dd7690a96babc2d12d436898010ee0d1" translate="yes" xml:space="preserve">
          <source>Passed from the last loader. If you would execute the input argument as a module, consider reading this variable for a shortcut (for performance).</source>
          <target state="translated">从最后一个加载器传递过来的。如果你想把输入参数作为一个模块来执行,请考虑读取这个变量以获得快捷方式(为了性能)。</target>
        </trans-unit>
        <trans-unit id="44985ac8eb7552b2ccc31a28f6ff40c010ff5141" translate="yes" xml:space="preserve">
          <source>Passed from the last loader. If you would execute the input argument as module, consider reading this variable for a shortcut (for performance).</source>
          <target state="translated">从最后一个加载器传递过来的。如果你想以模块的形式执行输入参数,请考虑读取这个变量以获得快捷方式(为了性能)。</target>
        </trans-unit>
        <trans-unit id="ccddcde23a3566aa4120d1946a6cfb7c456fe6f4" translate="yes" xml:space="preserve">
          <source>Passing a string (i.e. &lt;code&gt;use: [ &quot;style-loader&quot; ]&lt;/code&gt;) is a shortcut to the loader property (i.e. &lt;code&gt;use: [ { loader: &quot;style-loader &quot;} ]&lt;/code&gt;).</source>
          <target state="translated">传递字符串（即 &lt;code&gt;use: [ &quot;style-loader&quot; ]&lt;/code&gt; ）是loader属性的快捷方式（即 &lt;code&gt;use: [ { loader: &quot;style-loader &quot;} ]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ea2f772453c4c9a18e9af02a7be2ffdb0b433f7d" translate="yes" xml:space="preserve">
          <source>Passing a string (i.e. &lt;code&gt;use: [ 'style-loader' ]&lt;/code&gt;) is a shortcut to the loader property (i.e. &lt;code&gt;use: [ { loader: 'style-loader '} ]&lt;/code&gt;).</source>
          <target state="translated">传递字符串（即 &lt;code&gt;use: [ 'style-loader' ]&lt;/code&gt; ）是loader属性的快捷方式（即 &lt;code&gt;use: [ { loader: 'style-loader '} ]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0b04e6e4c7567222f24f018866d959fba17be475" translate="yes" xml:space="preserve">
          <source>Passing the &lt;code&gt;minChunks&lt;/code&gt; property a function</source>
          <target state="translated">将 &lt;code&gt;minChunks&lt;/code&gt; 属性传递给函数</target>
        </trans-unit>
        <trans-unit id="b68bd7e9f8b4dc2c3ce3d7a6e613390ad93621a5" translate="yes" xml:space="preserve">
          <source>Patches ties of module and chunk after removing dependency reasons. Called automatically by &lt;code&gt;removeReasonsOfDependencyBlock&lt;/code&gt;.</source>
          <target state="translated">删除依赖关系原因后，对模块和块的关系进行修补。由 &lt;code&gt;removeReasonsOfDependencyBlock&lt;/code&gt; 自动调用。</target>
        </trans-unit>
        <trans-unit id="077ec1c8819909c0b00fb6343c88050511bbba5b" translate="yes" xml:space="preserve">
          <source>Path Order</source>
          <target state="translated">路径顺序</target>
        </trans-unit>
        <trans-unit id="761dfb7e989b01b8713a72591a10c87329ed9a59" translate="yes" xml:space="preserve">
          <source>Path Translations</source>
          <target state="translated">路径翻译</target>
        </trans-unit>
        <trans-unit id="eebf4eccd786dfcb9ed1df853f98d2125c371483" translate="yes" xml:space="preserve">
          <source>Path to &lt;code&gt;eslint&lt;/code&gt; instance that will be used for linting.</source>
          <target state="translated">&lt;code&gt;eslint&lt;/code&gt; 实例的路径，将用于整理。</target>
        </trans-unit>
        <trans-unit id="86834b835aa4d0a4ee663bfae4efaddc93a34eee" translate="yes" xml:space="preserve">
          <source>Path to &lt;code&gt;eslint&lt;/code&gt; instance that will be used for linting. If the &lt;code&gt;eslintPath&lt;/code&gt; is a folder like a official eslint, or specify a &lt;code&gt;formatter&lt;/code&gt; option. now you dont have to install &lt;code&gt;eslint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eslint&lt;/code&gt; 实例的路径，该实例将用于linting。如果 &lt;code&gt;eslintPath&lt;/code&gt; 是官方eslint之类的文件夹，请指定 &lt;code&gt;formatter&lt;/code&gt; 选项。现在您不必安装 &lt;code&gt;eslint&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06993c089bb935f882ce99f8d4e951b05bdcd530" translate="yes" xml:space="preserve">
          <source>Path to &lt;code&gt;stylelint&lt;/code&gt; instance that will be used for linting.</source>
          <target state="translated">&lt;code&gt;stylelint&lt;/code&gt; 实例的路径，该实例将用于掉毛。</target>
        </trans-unit>
        <trans-unit id="12ce615fbd4de707138cf2519532f0642d38a706" translate="yes" xml:space="preserve">
          <source>Path to cache directory.</source>
          <target state="translated">缓存目录的路径。</target>
        </trans-unit>
        <trans-unit id="561fb7d4495d192d7e6dab825d4b99213cf43235" translate="yes" xml:space="preserve">
          <source>Path to the config file</source>
          <target state="translated">配置文件的路径</target>
        </trans-unit>
        <trans-unit id="c1e2d1dce001279bae94ea8e6b3b641b9bbed875" translate="yes" xml:space="preserve">
          <source>Path to the configuration file</source>
          <target state="translated">配置文件的路径</target>
        </trans-unit>
        <trans-unit id="1a8bfd55f37472276f7b8ae263add7e0f0d412d7" translate="yes" xml:space="preserve">
          <source>Path to the records file</source>
          <target state="translated">记录文件的路径</target>
        </trans-unit>
        <trans-unit id="b388b4324a9ca3ee8c5ec5a3752ef62a520c3006" translate="yes" xml:space="preserve">
          <source>Path to the records file (reading)</source>
          <target state="translated">记录文件的路径(读取</target>
        </trans-unit>
        <trans-unit id="e41acbf6a6ed59dd01f7f7eb75acaebd59a6e898" translate="yes" xml:space="preserve">
          <source>Path to the records file (writing)</source>
          <target state="translated">记录文件的路径(写)</target>
        </trans-unit>
        <trans-unit id="b95fd68a6e7f6a610c51b680d468fe0bb34b236e" translate="yes" xml:space="preserve">
          <source>Pattern for extracting elements to be used in &lt;code&gt;to&lt;/code&gt; templates</source>
          <target state="translated">模式用于提取元素中使用 &lt;code&gt;to&lt;/code&gt; 的模板</target>
        </trans-unit>
        <trans-unit id="4d34f7a2b0b3b6df62a051917d7e7ac2de8a38df" translate="yes" xml:space="preserve">
          <source>Patterns</source>
          <target state="translated">Patterns</target>
        </trans-unit>
        <trans-unit id="720ba31b8c84226b1a83066ab9e1da80a8ba85c9" translate="yes" xml:space="preserve">
          <source>Percentage calculation</source>
          <target state="translated">百分比计算</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="44f841c0a9265fe3a73e5c54d51edf6763b78ba7" translate="yes" xml:space="preserve">
          <source>Persistent cache</source>
          <target state="translated">永久性缓存</target>
        </trans-unit>
        <trans-unit id="8d96fe182eadd6337a10c14835f72230352ca486" translate="yes" xml:space="preserve">
          <source>Pitching Loader</source>
          <target state="translated">投掷式装载机</target>
        </trans-unit>
        <trans-unit id="b62930d0710de4268cfd1b4505b2a2ad7a57660d" translate="yes" xml:space="preserve">
          <source>Placeholders</source>
          <target state="translated">Placeholders</target>
        </trans-unit>
        <trans-unit id="fb37135e0ea40744f1df3c3ff8b6e3e548e435d1" translate="yes" xml:space="preserve">
          <source>Please consult documentation before using them:</source>
          <target state="translated">使用前请先查阅文件。</target>
        </trans-unit>
        <trans-unit id="1dcbfad7a98fe256dfb32d31c12ca3bb5ce5f97f" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;sideEffects&lt;/code&gt; should be in the npm module's &lt;code&gt;package.json&lt;/code&gt; file and doesn't mean that you need to set &lt;code&gt;sideEffects&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in your own project's &lt;code&gt;package.json&lt;/code&gt; which requires that big module.</source>
          <target state="translated">请注意， &lt;code&gt;sideEffects&lt;/code&gt; 应该位于npm模块的 &lt;code&gt;package.json&lt;/code&gt; 文件中，并不意味着您需要在自己项目的 &lt;code&gt;package.json&lt;/code&gt; 中将 &lt;code&gt;sideEffects&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ，这需要该大模块。</target>
        </trans-unit>
        <trans-unit id="afa9b2adb3fe687dd4a8cc44484250444f9b490d" translate="yes" xml:space="preserve">
          <source>Please note that CSPs are not enabled by default. A corresponding header &lt;code&gt;Content-Security-Policy&lt;/code&gt; or meta tag &lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Security-Policy&quot; ...&amp;gt;&lt;/code&gt; needs to be sent with the document to instruct the browser to enable the CSP. Here's an example of what a CSP header including a CDN white-listed URL might look like:</source>
          <target state="translated">请注意，默认情况下未启用CSP。需要将相应的标头 &lt;code&gt;Content-Security-Policy&lt;/code&gt; 或元标记 &lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Security-Policy&quot; ...&amp;gt;&lt;/code&gt; 与文档一起发送，以指示浏览器启用CSP。这是一个包含CDN白名单URL的CSP标头可能看起来像的示例：</target>
        </trans-unit>
        <trans-unit id="89198c5e36e1acda22c27507afb89934d4ad455b" translate="yes" xml:space="preserve">
          <source>Please note that using these webpack specific properties will have a negative impact on your loaders compatibility.</source>
          <target state="translated">请注意,使用这些webpack的特定属性将对您的加载器的兼容性产生负面影响。</target>
        </trans-unit>
        <trans-unit id="d792a7b7ee2ee5a7c18e906c3b790687a371ade2" translate="yes" xml:space="preserve">
          <source>Please remember that setting &lt;code&gt;NODE_ENV&lt;/code&gt; doesn't automatically set &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">请记住，设置 &lt;code&gt;NODE_ENV&lt;/code&gt; 不会自动设置 &lt;code&gt;mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a24274736159e5bb51eec33d2965184b8a8d058e" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://github.com/webpack/tapable&quot;&gt;documentation&lt;/a&gt; to learn more. An understanding of the three &lt;code&gt;tap&lt;/code&gt; methods, as well as the hooks that provide them is crucial. The objects that extend &lt;code&gt;Tapable&lt;/code&gt; (e.g. the compiler), the hooks they provide, and each hook's type (e.g. the &lt;code&gt;SyncHook&lt;/code&gt;) will be noted.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://github.com/webpack/tapable&quot;&gt;文档&lt;/a&gt;以了解更多信息。了解这三种 &lt;code&gt;tap&lt;/code&gt; 方法以及提供它们的钩子至关重要。将记录扩展 &lt;code&gt;Tapable&lt;/code&gt; 的对象（例如，编译器），它们提供的钩子以及每个钩子的类型（例如 &lt;code&gt;SyncHook&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="816d3788bc2a66d5d32f8636b9ad86456c99d342" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://github.com/webpack/tapable&quot;&gt;documentation&lt;/a&gt; to learn more. An understanding of the three &lt;code&gt;tap&lt;/code&gt; methods, as well as the hooks that provide them, is crucial. The objects that extend &lt;code&gt;Tapable&lt;/code&gt; (e.g. the compiler), the hooks they provide, and each hook's type (e.g. the &lt;code&gt;SyncHook&lt;/code&gt;) will be noted.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://github.com/webpack/tapable&quot;&gt;文档&lt;/a&gt;以了解更多信息。对这三种 &lt;code&gt;tap&lt;/code&gt; 方法以及提供它们的钩子的理解至关重要。将记录扩展 &lt;code&gt;Tapable&lt;/code&gt; 的对象（例如，编译器），它们提供的钩子以及每个钩子的类型（例如 &lt;code&gt;SyncHook&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fffc7ee52fbc0aedea28ea9911628bb68279c2b4" translate="yes" xml:space="preserve">
          <source>Please take a moment to read our contributing guidelines if you haven't yet done so.</source>
          <target state="translated">如果您还没有阅读我们的投稿指南,请花点时间阅读。</target>
        </trans-unit>
        <trans-unit id="a21c1554b28d950bc6b8f1592fbd61855a698e7a" translate="yes" xml:space="preserve">
          <source>Plugin API</source>
          <target state="translated">插件API</target>
        </trans-unit>
        <trans-unit id="1919972ec1dd4693c387449ffdc80e4f8d7b507d" translate="yes" xml:space="preserve">
          <source>Plugin Options</source>
          <target state="translated">插件选项</target>
        </trans-unit>
        <trans-unit id="be6507fa53943d340c7520bd623ecbdeab4dec46" translate="yes" xml:space="preserve">
          <source>Plugin Types</source>
          <target state="translated">插件类型</target>
        </trans-unit>
        <trans-unit id="8c96a6157436f12625ad7a92518b6d47e74e44d2" translate="yes" xml:space="preserve">
          <source>Plugin Used</source>
          <target state="translated">使用的插件</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="c2cb3e9ddef62f8ce6bd053ccea1880266085973" translate="yes" xml:space="preserve">
          <source>Plugins affecting the compiler</source>
          <target state="translated">影响编译器的插件</target>
        </trans-unit>
        <trans-unit id="dc8500781fb9e8845460f9283bc4673626152f3c" translate="yes" xml:space="preserve">
          <source>Plugins affecting the environment of the compiler.</source>
          <target state="translated">影响编译器环境的插件。</target>
        </trans-unit>
        <trans-unit id="c4404580c2d6e4293219d6520fbb0e555befbc4e" translate="yes" xml:space="preserve">
          <source>Plugins affecting the source code of modules.</source>
          <target state="translated">影响模块源码的插件。</target>
        </trans-unit>
        <trans-unit id="1d817c41f95a536f92d934d7bdecc85177145725" translate="yes" xml:space="preserve">
          <source>Plugins are a key piece of the webpack ecosystem and provide the community with a powerful way to tap into webpack's compilation process. A plugin is able to &lt;a href=&quot;compiler-hooks#hooks&quot;&gt;hook&lt;/a&gt; into key events that are fired throughout each compilation. Every step of the way, the plugin will have full access to the &lt;code&gt;compiler&lt;/code&gt; and, when applicable, the current &lt;code&gt;compilation&lt;/code&gt;.</source>
          <target state="translated">插件是webpack生态系统的关键部分，为社区提供了一种强大的方式来利用webpack的编译过程。插件是可以&lt;a href=&quot;compiler-hooks#hooks&quot;&gt;勾&lt;/a&gt;成遍及每个编译解雇关键事件。在此过程的每一步中，插件都将拥有对 &lt;code&gt;compiler&lt;/code&gt; 以及当前 &lt;code&gt;compilation&lt;/code&gt; （如果适用）的完全访问权限。</target>
        </trans-unit>
        <trans-unit id="7b17783ac43427bdebaad1531b6522097f0e521f" translate="yes" xml:space="preserve">
          <source>Plugins can affect logging capturing and display level</source>
          <target state="translated">插件会影响日志采集和显示级别。</target>
        </trans-unit>
        <trans-unit id="055ffa60e6263553e57e82581ec69a162848c83d" translate="yes" xml:space="preserve">
          <source>Plugins can give loaders more features.</source>
          <target state="translated">插件可以赋予装载机更多的功能。</target>
        </trans-unit>
        <trans-unit id="7581e6d44c3d8c9f3a085997fe4657a2df4f71a9" translate="yes" xml:space="preserve">
          <source>Plugins can report progress via &lt;a href=&quot;../plugins/progress-plugin&quot;&gt;&lt;code&gt;ProgressPlugin&lt;/code&gt;&lt;/a&gt;, which prints progress messages to stderr by default. In order to enable progress reporting, pass a &lt;code&gt;--progress&lt;/code&gt; argument when running the &lt;a href=&quot;cli&quot;&gt;webpack CLI&lt;/a&gt;.</source>
          <target state="translated">插件可以通过&lt;a href=&quot;../plugins/progress-plugin&quot;&gt; &lt;code&gt;ProgressPlugin&lt;/code&gt; &lt;/a&gt;报告进度，默认情况下，该进程将进度消息打印到stderr。为了启用进度报告，请在运行&lt;a href=&quot;cli&quot;&gt;webpack CLI&lt;/a&gt;时传递 &lt;code&gt;--progress&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="f4d08e2fd6ca2947e138e3124a13332506d96368" translate="yes" xml:space="preserve">
          <source>Plugins may use special fallback logic for detecting logging support &lt;code&gt;compilation.getLogger ? compilation.getLogger('PluginName') : console&lt;/code&gt; to provide a fallback for cases when an older webpack version is used which does not support &lt;code&gt;getLogger&lt;/code&gt; method on &lt;code&gt;compilation&lt;/code&gt; object.</source>
          <target state="translated">插件可以使用特殊的后备逻辑来检测日志记录支持 &lt;code&gt;compilation.getLogger ? compilation.getLogger('PluginName') : console&lt;/code&gt; 用于在使用较旧的Webpack版本（不支持 &lt;code&gt;compilation&lt;/code&gt; 对象的 &lt;code&gt;getLogger&lt;/code&gt; 方法）的情况下提供备用的控制台。</target>
        </trans-unit>
        <trans-unit id="5d695fb20cb4e9f6d6aa995bc1644f7cafa7fd78" translate="yes" xml:space="preserve">
          <source>Plugins may use the &lt;code&gt;compiler.getInfrastructureLogger('PluginName')&lt;/code&gt; for logging. Using &lt;code&gt;infrastructure&lt;/code&gt; logging is not stored in the Stats and therefore not formatted. It's usually logged to the console/dashboard/GUI directly. It can be filtered by the user.</source>
          <target state="translated">插件可以使用 &lt;code&gt;compiler.getInfrastructureLogger('PluginName')&lt;/code&gt; 进行日志记录。使用 &lt;code&gt;infrastructure&lt;/code&gt; 日志记录未存储在统计信息中，因此未格式化。通常将其直接记录到控制台/仪表板/ GUI。可以由用户过滤。</target>
        </trans-unit>
        <trans-unit id="f5305f5fda5e1d05e7a85ff68d81b72ddb3f38fb" translate="yes" xml:space="preserve">
          <source>Plugins should prefer to use &lt;code&gt;compilation.getLogger('PluginName')&lt;/code&gt; for logging. This kind of logging is stored in the Stats and formatted accordingly. It can be filtered and exported by the user.</source>
          <target state="translated">插件应该更喜欢使用 &lt;code&gt;compilation.getLogger('PluginName')&lt;/code&gt; 进行日志记录。这种日志记录存储在统计信息中并进行相应的格式化。用户可以对其进行过滤和导出。</target>
        </trans-unit>
        <trans-unit id="f07d29b36b7cbbcceae194206d11fd573dcaa16c" translate="yes" xml:space="preserve">
          <source>Plugins, which add entry chunks to the compilation.</source>
          <target state="translated">插件,在编译中增加条目块。</target>
        </trans-unit>
        <trans-unit id="c4581375b4816f15ef5ddb7e1f1d5df233c6d846" translate="yes" xml:space="preserve">
          <source>Polyfills for Node.js core libraries from &lt;a href=&quot;https://github.com/webpack/node-libs-browser&quot;&gt;&lt;code&gt;node-libs-browser&lt;/code&gt;&lt;/a&gt; are used if available, when the &lt;code&gt;NodeSourcePlugin&lt;/code&gt; plugin is enabled. See the list of &lt;a href=&quot;https://github.com/webpack/node-libs-browser#readme&quot;&gt;Node.js core libraries and their polyfills&lt;/a&gt;.</source>
          <target state="translated">启用 &lt;code&gt;NodeSourcePlugin&lt;/code&gt; 插件时，将使用来自&lt;a href=&quot;https://github.com/webpack/node-libs-browser&quot;&gt; &lt;code&gt;node-libs-browser&lt;/code&gt; 的&lt;/a&gt; Polyfills for Node.js核心库。请参见&lt;a href=&quot;https://github.com/webpack/node-libs-browser#readme&quot;&gt;Node.js核心库及其polyfill&lt;/a&gt;的列表。</target>
        </trans-unit>
        <trans-unit id="5cdc8c9771e90aa5514263ea66a94f5c8993d324" translate="yes" xml:space="preserve">
          <source>Possible choice when publishing a single file</source>
          <target state="translated">发布单个文件时可能的选择</target>
        </trans-unit>
        <trans-unit id="160cfd965a52624aba72d107e3e6897da4a4c83e" translate="yes" xml:space="preserve">
          <source>Possible default identifiers:</source>
          <target state="translated">可能的默认标识符:</target>
        </trans-unit>
        <trans-unit id="ab8d78f09547b614a67fbed794e3840d047b64b0" translate="yes" xml:space="preserve">
          <source>Possible return values - &lt;code&gt;local&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, and &lt;code&gt;pure&lt;/code&gt;.</source>
          <target state="translated">可能的返回值- &lt;code&gt;local&lt;/code&gt; ， &lt;code&gt;global&lt;/code&gt; 和 &lt;code&gt;pure&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ab50c08f5ec3364602cec4a1fa198fe04bdb04b" translate="yes" xml:space="preserve">
          <source>Possible values - &lt;code&gt;commonjs&lt;/code&gt; (CommonJS module syntax) and &lt;code&gt;module&lt;/code&gt; (ES module syntax).</source>
          <target state="translated">可能的值 &lt;code&gt;commonjs&lt;/code&gt; （CommonJS模块语法）和 &lt;code&gt;module&lt;/code&gt; （ES模块语法）。</target>
        </trans-unit>
        <trans-unit id="edfaf99a1b4fe5b1cee002e250257d86314eca04" translate="yes" xml:space="preserve">
          <source>Possible values - &lt;code&gt;local&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, and &lt;code&gt;pure&lt;/code&gt;.</source>
          <target state="translated">可能的值- &lt;code&gt;local&lt;/code&gt; ， &lt;code&gt;global&lt;/code&gt; 和 &lt;code&gt;pure&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52e48d38205497d57aaf4d5a030c4760892250a1" translate="yes" xml:space="preserve">
          <source>Possible values are &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt; or &lt;code&gt;info&lt;/code&gt; (default).</source>
          <target state="translated">可能的值是 &lt;code&gt;none&lt;/code&gt; ， &lt;code&gt;error&lt;/code&gt; ， &lt;code&gt;warning&lt;/code&gt; 或 &lt;code&gt;info&lt;/code&gt; （默认值）。</target>
        </trans-unit>
        <trans-unit id="361ae0458f5cb658b86063a130349c701509544c" translate="yes" xml:space="preserve">
          <source>Possible values for &lt;code&gt;mode&lt;/code&gt; are: &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;development&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt;(default).</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; 可能值为： &lt;code&gt;none&lt;/code&gt; ， &lt;code&gt;development&lt;/code&gt; 或 &lt;code&gt;production&lt;/code&gt; （默认）。</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">可能的数值:</target>
        </trans-unit>
        <trans-unit id="01f9ff5d0c9bc041f1daf305969f4fa700c1d939" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;&quot;pre&quot; | &quot;post&quot;&lt;/code&gt;</source>
          <target state="translated">可能的值： &lt;code&gt;&quot;pre&quot; | &quot;post&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b94ddeb918dd715d4c7ff032f89b35e099b3216f" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;'javascript/auto' | 'javascript/dynamic' | 'javascript/esm' | 'json' | 'webassembly/sync' | 'webassembly/async' | 'asset' | 'asset/source' | 'asset/resource' | 'asset/inline'&lt;/code&gt;</source>
          <target state="translated">可能的值： &lt;code&gt;'javascript/auto' | 'javascript/dynamic' | 'javascript/esm' | 'json' | 'webassembly/sync' | 'webassembly/async' | 'asset' | 'asset/source' | 'asset/resource' | 'asset/inline'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2e8adfddad0e93b9444b7f0c980bba0a3afc1c3b" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;'pre' | 'post'&lt;/code&gt;</source>
          <target state="translated">可能的值： &lt;code&gt;'pre' | 'post'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e6ac80011a82730dead6d5226911e67bbcc4833" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;'production'&lt;/code&gt;, &lt;code&gt;'development'&lt;/code&gt;, &lt;code&gt;'none'&lt;/code&gt;</source>
          <target state="translated">可能的值： &lt;code&gt;'production'&lt;/code&gt; ， &lt;code&gt;'development'&lt;/code&gt; ， &lt;code&gt;'none'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fcacfeba5279113a917547a96db5eccae811287e" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;false | an array of paths&lt;/code&gt;</source>
          <target state="translated">可能的值： &lt;code&gt;false | an array of paths&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c713b7f15b91ef1b78375ae2913bd6c4dc47fd01" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;text/css&lt;/code&gt;</source>
          <target state="translated">可能的值： &lt;code&gt;text/css&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a63334f4d8d2bcbbf74cc54685bb9f57072b610b" translate="yes" xml:space="preserve">
          <source>PostCSS Config Context</source>
          <target state="translated">后CSS配置上下文</target>
        </trans-unit>
        <trans-unit id="8ab8978a6c7d7e66fd1556156f7ed50176905046" translate="yes" xml:space="preserve">
          <source>PostCSS Config Directory</source>
          <target state="translated">PostCSS配置目录</target>
        </trans-unit>
        <trans-unit id="912919666e167a7390e4d6411897bca3889ebf2a" translate="yes" xml:space="preserve">
          <source>PostCSS Preset Env</source>
          <target state="translated">PostCSS预设环境</target>
        </trans-unit>
        <trans-unit id="0367efaf2680a1275ac2425768b15c6e4a159e2f" translate="yes" xml:space="preserve">
          <source>PostCSS chat:</source>
          <target state="translated">后CSS聊天。</target>
        </trans-unit>
        <trans-unit id="e70349debbb7710ab99a0726718f99d8ef564eef" translate="yes" xml:space="preserve">
          <source>PostHTML</source>
          <target state="translated">PostHTML</target>
        </trans-unit>
        <trans-unit id="2cfc6ae03601619aa86eab49f8cdcba160ca42e1" translate="yes" xml:space="preserve">
          <source>Pre-requisites</source>
          <target state="translated">Pre-requisites</target>
        </trans-unit>
        <trans-unit id="168bca5d8ffe7fcf0777b9490e3f8b20abb180c5" translate="yes" xml:space="preserve">
          <source>Predictable Long Term Caching with Webpack</source>
          <target state="translated">使用Webpack进行可预测的长期缓存</target>
        </trans-unit>
        <trans-unit id="cced56938ba773eb91c966bb6742dd7ec74f46eb" translate="yes" xml:space="preserve">
          <source>Predictable Long Term Caching with webpack</source>
          <target state="translated">使用webpack进行可预测的长期缓存</target>
        </trans-unit>
        <trans-unit id="c8ff2f0af0d6780c3d974bee941b8caf374e8e88" translate="yes" xml:space="preserve">
          <source>Prefer absolute paths to &lt;a href=&quot;#resolveroots&quot;&gt;&lt;code&gt;resolve.roots&lt;/code&gt;&lt;/a&gt; when resolving.</source>
          <target state="translated">解析时，建议使用绝对路径来解决&lt;a href=&quot;#resolveroots&quot;&gt; &lt;code&gt;resolve.roots&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a017516a26209a27675e5f8f9dfe745e80fc9c14" translate="yes" xml:space="preserve">
          <source>Preferred usage is via a &lt;code&gt;module.loaders&lt;/code&gt;:</source>
          <target state="translated">首选用法是通过 &lt;code&gt;module.loaders&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c466b70d8bb3283413094bfff0c5894318615fbd" translate="yes" xml:space="preserve">
          <source>Prefetch normal module requests, causing them to be resolved and built before the first &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; of that module occurs. Using this plugin can boost performance. Try to profile the build first to determine clever prefetching points.</source>
          <target state="translated">预取正常的模块请求，导致在该模块的首次 &lt;code&gt;import&lt;/code&gt; 或 &lt;code&gt;require&lt;/code&gt; 发生之前对其进行解析和构建。使用此插件可以提高性能。首先尝试对构建进行概要分析，以确定巧妙的预取点。</target>
        </trans-unit>
        <trans-unit id="2937d90e96f47b36d8430320e9d4fdca15f49193" translate="yes" xml:space="preserve">
          <source>Prefetch the particular file</source>
          <target state="translated">预取特定文件</target>
        </trans-unit>
        <trans-unit id="46bf6ceee65f725ba28743e5056cd65872592a9b" translate="yes" xml:space="preserve">
          <source>Prefetch this request</source>
          <target state="translated">预取这个请求</target>
        </trans-unit>
        <trans-unit id="390d835e9a58404f924bf8560cf971bb0c05dc03" translate="yes" xml:space="preserve">
          <source>PrefetchPlugin</source>
          <target state="translated">PrefetchPlugin</target>
        </trans-unit>
        <trans-unit id="f969b8b04b2e4eac51e6857c173d1cc50a449955" translate="yes" xml:space="preserve">
          <source>Prefetches &lt;code&gt;request&lt;/code&gt; and dependencies to enable a more parallel compilation. It doesn't create any chunk. The module is resolved from &lt;code&gt;request&lt;/code&gt; in &lt;code&gt;context&lt;/code&gt; (absolute path).</source>
          <target state="translated">预取 &lt;code&gt;request&lt;/code&gt; 和依赖项以启用更多并行编译。它不会创建任何块。该模块是 &lt;code&gt;request&lt;/code&gt; &lt;code&gt;context&lt;/code&gt; （绝对路径）中的请求进行解析的。</target>
        </trans-unit>
        <trans-unit id="d4fc1d5078b2cdd1ec28d3674e875c70ed032f2b" translate="yes" xml:space="preserve">
          <source>Prefetching/Preloading modules</source>
          <target state="translated">预取/预装模块</target>
        </trans-unit>
        <trans-unit id="b0e853977c39285eb7d3ccd3ae2600e4eb4d8a8d" translate="yes" xml:space="preserve">
          <source>Prefixing with &lt;code&gt;!!&lt;/code&gt; will disable all configured loaders (preLoaders, loaders, postLoaders)</source>
          <target state="translated">前缀为 &lt;code&gt;!!&lt;/code&gt; 将禁用所有已配置的加载程序（preLoaders，loaders，postLoaders）</target>
        </trans-unit>
        <trans-unit id="00d679688026b8b57fa53c6952dcd7c75c77557b" translate="yes" xml:space="preserve">
          <source>Prefixing with &lt;code&gt;!&lt;/code&gt; will disable all configured normal loaders</source>
          <target state="translated">带 &lt;code&gt;!&lt;/code&gt; 前缀 将禁用所有已配置的普通加载器</target>
        </trans-unit>
        <trans-unit id="8fed604dc5b39a47a532f23858c9e4db5f65cc19" translate="yes" xml:space="preserve">
          <source>Prefixing with &lt;code&gt;-!&lt;/code&gt; will disable all configured preLoaders and loaders but not postLoaders</source>
          <target state="translated">以 &lt;code&gt;-!&lt;/code&gt; 开头的前缀！将禁用所有已配置的preLoader和Loader，但不会禁用postLoader</target>
        </trans-unit>
        <trans-unit id="b557f72e4bb86d25ee92b61deb79f7d6f99e2a55" translate="yes" xml:space="preserve">
          <source>Preload directive has a bunch of differences compared to prefetch:</source>
          <target state="translated">预加载指令与预取指令相比,有一堆不同之处。</target>
        </trans-unit>
        <trans-unit id="93eafead7d994fc1c76cb5885f9101f436b01dc5" translate="yes" xml:space="preserve">
          <source>Preload one or more modules before loading the webpack configuration</source>
          <target state="translated">在加载webpack配置之前,预先加载一个或多个模块。</target>
        </trans-unit>
        <trans-unit id="19de4fcee88ae1bb0a8818fdccdf802f842045ea" translate="yes" xml:space="preserve">
          <source>Preload, Prefetch And Priorities in Chrome</source>
          <target state="translated">Chrome浏览器中的预加载、预取和优先权</target>
        </trans-unit>
        <trans-unit id="9179293a16d129b230ef624d17e3d317d40674d0" translate="yes" xml:space="preserve">
          <source>Preloading content with rel=&quot;preload&quot;</source>
          <target state="translated">用rel=&quot;preload &quot;预装内容。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
