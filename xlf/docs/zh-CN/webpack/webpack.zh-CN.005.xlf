<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="webpack">
    <body>
      <group id="webpack">
        <trans-unit id="97b5d99571d04e3ad13b05b4a25e852af90802b2" translate="yes" xml:space="preserve">
          <source>Loader will always return warnings if option is set to &lt;code&gt;true&lt;/code&gt;. If you're using hot module replacement, you may wish to enable this in development, or else updates will be skipped when there's an eslint error.</source>
          <target state="translated">如果option设置为 &lt;code&gt;true&lt;/code&gt; ,则加载程序将始终返回警告。如果您正在使用热模块更换，则可能希望在开发中启用此功能，否则在出现eslint错误时将跳过更新。</target>
        </trans-unit>
        <trans-unit id="fab75d863e028cfcbf3711da868849b30047bb42" translate="yes" xml:space="preserve">
          <source>Loader will cause the module build to fail if there are any eslint errors.</source>
          <target state="translated">如果有任何eslint错误,Loader将导致模块构建失败。</target>
        </trans-unit>
        <trans-unit id="2ebbee483dc69b53b99f32cc324cae36920adb68" translate="yes" xml:space="preserve">
          <source>Loader will cause the module build to fail if there are any eslint warnings.</source>
          <target state="translated">如果有任何eslint警告,Loader将导致模块构建失败。</target>
        </trans-unit>
        <trans-unit id="3ee4f2745233b1cb94ac8dfea64274f33a717f4e" translate="yes" xml:space="preserve">
          <source>Loader will process and report errors only and ignore warnings if this option is set to true</source>
          <target state="translated">如果该选项设置为 &quot;true&quot;,加载器将只处理和报告错误,而忽略警告。</target>
        </trans-unit>
        <trans-unit id="ce0bbf0a349ce71616c6f3a7a81100b1cf27a8e7" translate="yes" xml:space="preserve">
          <source>Loader(s) that should be used for converting the resource to a CSS exporting module &lt;em&gt;(required)&lt;/em&gt;</source>
          <target state="translated">应当用于将资源转换为CSS导出模块的加载器&lt;em&gt;（必需）&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f4800e7ed94d46f7c8508b1f61aa9b4acd16f4e" translate="yes" xml:space="preserve">
          <source>Loader: Resolves a webpack &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;loader&lt;/a&gt;.</source>
          <target state="translated">加载程序：解析webpack &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;加载程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4cd722a1b5bd5ee06349060aa953bbaed56cee36" translate="yes" xml:space="preserve">
          <source>LoaderOptionsPlugin</source>
          <target state="translated">LoaderOptionsPlugin</target>
        </trans-unit>
        <trans-unit id="4f514b04ed6b877534da140af8e12cab5016f713" translate="yes" xml:space="preserve">
          <source>Loaders</source>
          <target state="translated">Loaders</target>
        </trans-unit>
        <trans-unit id="c591e4a3bcf5ed00d18d81e617c16d9f9fea20ec" translate="yes" xml:space="preserve">
          <source>Loaders allow more power in the JavaScript ecosystem through preprocessing functions (loaders). Users now have more flexibility to include fine-grained logic such as compression, packaging, language translations and &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;more&lt;/a&gt;.</source>
          <target state="translated">加载程序通过预处理功能（加载程序）在JavaScript生态系统中提供了更多功能。现在，用户可以更灵活地包括细粒度逻辑诸如压缩，包装，语言翻译和&lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;更多&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04236cd132afbaff5f807345c6cfcf629380f929" translate="yes" xml:space="preserve">
          <source>Loaders are &lt;strong&gt;always&lt;/strong&gt; called from right to left. There are some instances where the loader only cares about the &lt;strong&gt;metadata&lt;/strong&gt; behind a request and can ignore the results of the previous loader. The &lt;code&gt;pitch&lt;/code&gt; method on loaders is called from &lt;strong&gt;left to right&lt;/strong&gt; before the loaders are actually executed (from right to left).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2826b8c59f1bc048b2d92251e589df2220343e5" translate="yes" xml:space="preserve">
          <source>Loaders are &lt;strong&gt;always&lt;/strong&gt; called from right to left. There are some instances where the loader only cares about the &lt;strong&gt;metadata&lt;/strong&gt; behind a request and can ignore the results of the previous loader. The &lt;code&gt;pitch&lt;/code&gt; method on loaders is called from &lt;strong&gt;left to right&lt;/strong&gt; before the loaders are actually executed (from right to left). For the following &lt;a href=&quot;../configuration/module#rule-use&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; configuration:</source>
          <target state="translated">装载程序&lt;strong&gt;总是&lt;/strong&gt;从右到左调用。在某些情况下，加载器仅关心请求背后的&lt;strong&gt;元数据&lt;/strong&gt;，而可以忽略前一个加载器的结果。在实际执行加载程序之前（从右到左）&lt;strong&gt;，从左到右&lt;/strong&gt;调用加载程序上的 &lt;code&gt;pitch&lt;/code&gt; 方法。对于以下&lt;a href=&quot;../configuration/module#rule-use&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt;配置：&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85433a4ab3591548b068d016fbf8d4c3304e1339" translate="yes" xml:space="preserve">
          <source>Loaders are activated by using &lt;code&gt;loadername!&lt;/code&gt; prefixes in &lt;code&gt;require()&lt;/code&gt; statements, or are automatically applied via regex from your webpack configuration &amp;ndash; see &lt;a href=&quot;../concepts/loaders#configuration&quot;&gt;configuration&lt;/a&gt;.</source>
          <target state="translated">通过使用 &lt;code&gt;loadername!&lt;/code&gt; 激活装载程序！前缀（在 &lt;code&gt;require()&lt;/code&gt; 语句中），或通过Webpack配置中的regex自动应用-请参见&lt;a href=&quot;../concepts/loaders#configuration&quot;&gt;configuration&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66584ef4a8adbc0535dc086bb6068fd801382a3a" translate="yes" xml:space="preserve">
          <source>Loaders are evaluated/executed from right to left (or from bottom to top). In the example below execution starts with sass-loader, continues with css-loader and finally ends with style-loader. See &lt;a href=&quot;loaders#loader-features&quot;&gt;&quot;Loader Features&quot;&lt;/a&gt; for more information about loaders order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2a9298a789b09dae9bd81b1e23298018b33574" translate="yes" xml:space="preserve">
          <source>Loaders are evaluated/executed from right to left. In the example below execution starts with sass-loader, continues with css-loader and finally ends with style-loader. See &lt;a href=&quot;loaders#loader-features&quot;&gt;&quot;Loader Features&quot;&lt;/a&gt; for more information about loaders order.</source>
          <target state="translated">加载程序从右到左进行评估/执行。在下面的示例中，执行从sass-loader开始，从css-loader继续，最后以style-loader结束。有关装载机订购的更多信息，请参见&lt;a href=&quot;loaders#loader-features&quot;&gt;&amp;ldquo;装载机功能&amp;rdquo;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="85b2e5448f629cca6f3e4053499aa492264405ec" translate="yes" xml:space="preserve">
          <source>Loaders are transformations that are applied on the source code of a module. They allow you to pre-process files as you &lt;code&gt;import&lt;/code&gt; or &amp;ldquo;load&amp;rdquo; them. Thus, loaders are kind of like &amp;ldquo;tasks&amp;rdquo; in other build tools and provide a powerful way to handle front-end build steps. Loaders can transform files from a different language (like TypeScript) to JavaScript or inline images as data URLs. Loaders even allow you to do things like &lt;code&gt;import&lt;/code&gt; CSS files directly from your JavaScript modules!</source>
          <target state="translated">加载程序是应用于模块源代码的转换。它们允许您在 &lt;code&gt;import&lt;/code&gt; 或&amp;ldquo;加载&amp;rdquo; 文件时对其进行预处理。因此，加载程序有点像其他构建工具中的&amp;ldquo;任务&amp;rdquo;，并提供了一种强大的方式来处理前端构建步骤。加载程序可以将文件从其他语言（例如TypeScript）转换为JavaScript或嵌入式图像作为数据URL。加载程序甚至允许您执行诸如直接从JavaScript模块 &lt;code&gt;import&lt;/code&gt; CSS文件之类的操作！</target>
        </trans-unit>
        <trans-unit id="c12e476331b28e02146d294815ffcc541688961f" translate="yes" xml:space="preserve">
          <source>Loaders are transformations that are applied to the source code of a module. They allow you to pre-process files as you &lt;code&gt;import&lt;/code&gt; or &amp;ldquo;load&amp;rdquo; them. Thus, loaders are kind of like &amp;ldquo;tasks&amp;rdquo; in other build tools and provide a powerful way to handle front-end build steps. Loaders can transform files from a different language (like TypeScript) to JavaScript or load inline images as data URLs. Loaders even allow you to do things like &lt;code&gt;import&lt;/code&gt; CSS files directly from your JavaScript modules!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="105163e4c40315ef5103b9b810764f9517ba6631" translate="yes" xml:space="preserve">
          <source>Loaders are transformations that are applied to the source code of a module. They are written as functions that accept source code as a parameter and return a new version of that code with transformations applied.</source>
          <target state="translated">加载器是应用于模块的源代码的转换,它们被写成函数,接受源代码作为参数,并返回应用了转换的新版本代码。它们被写成函数,接受源代码作为参数,并返回应用了转换的新版本代码。</target>
        </trans-unit>
        <trans-unit id="4492533e2228d71b3b96dc5a018cc4fea5628474" translate="yes" xml:space="preserve">
          <source>Loaders can be chained by passing multiple loaders, which will be applied from right to left (last to first configured).</source>
          <target state="translated">加载器可以通过传递多个加载器进行连锁,将从右到左(最后一个到第一个配置)应用。</target>
        </trans-unit>
        <trans-unit id="1847aee657a68a67aa5b0d9bc1513fcf39b92a1e" translate="yes" xml:space="preserve">
          <source>Loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result (resource with applied transformations) to the next one, and so forth. Finally, webpack expects JavaScript to be returned by the last loader in the chain.</source>
          <target state="translated">加载器可以是链式的。链中的每个加载器都会对处理后的资源进行转换。一个链以相反的顺序执行。第一个加载器将它的结果(应用了转换的资源)传递给下一个加载器,以此类推。最后,webpack希望JavaScript能由链中最后一个加载器返回。</target>
        </trans-unit>
        <trans-unit id="9992fe8ca23caa87dd6c06cc85034e1179a05711" translate="yes" xml:space="preserve">
          <source>Loaders can be configured with an &lt;code&gt;options&lt;/code&gt; object (using &lt;code&gt;query&lt;/code&gt; parameters to set options is still supported but has been deprecated).</source>
          <target state="translated">可以使用 &lt;code&gt;options&lt;/code&gt; 对象配置装入程序（仍支持使用 &lt;code&gt;query&lt;/code&gt; 参数设置选项，但已弃用）。</target>
        </trans-unit>
        <trans-unit id="7cae65951a547f19a78fea06bfee949d1d0c7429" translate="yes" xml:space="preserve">
          <source>Loaders can be synchronous or asynchronous.</source>
          <target state="translated">加载器可以是同步的,也可以是异步的。</target>
        </trans-unit>
        <trans-unit id="3a4ffaac9a5d00e6d97999f76c729bfda323f67d" translate="yes" xml:space="preserve">
          <source>Loaders can emit additional arbitrary files.</source>
          <target state="translated">加载器可以发出额外的任意文件。</target>
        </trans-unit>
        <trans-unit id="1f7061ffc9f99eccda64c580b1a06d220651d256" translate="yes" xml:space="preserve">
          <source>Loaders cannot access the webpack options.</source>
          <target state="translated">加载器无法访问webpack选项。</target>
        </trans-unit>
        <trans-unit id="f1fbfd5a9c44d1d16d4fe66fb905eb642dbf48c2" translate="yes" xml:space="preserve">
          <source>Loaders cannot emit files.</source>
          <target state="translated">装载机不能发射文件。</target>
        </trans-unit>
        <trans-unit id="7eb0c6a6e419b2eb666eba1f3916c0671c3bda22" translate="yes" xml:space="preserve">
          <source>Loaders cannot use custom loader API (i. e. by plugins).</source>
          <target state="translated">加载器不能使用自定义加载器API(即由插件)。</target>
        </trans-unit>
        <trans-unit id="41eeba56dff96e9c38832b78aed764a72c0255f0" translate="yes" xml:space="preserve">
          <source>Loaders follow the standard &lt;a href=&quot;module-resolution&quot;&gt;module resolution&lt;/a&gt;. In most cases it will be loaded from the &lt;a href=&quot;module-resolution#module-paths&quot;&gt;module path&lt;/a&gt; (think &lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;node_modules&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f940e33799a662cb1ad30c183523d439fd0dd0" translate="yes" xml:space="preserve">
          <source>Loaders follow the standard &lt;a href=&quot;module-resolution&quot;&gt;module resolution&lt;/a&gt;. In most cases it will be loaders from the &lt;a href=&quot;module-resolution#module-paths&quot;&gt;module path&lt;/a&gt; (think &lt;code&gt;npm install&lt;/code&gt;, &lt;code&gt;node_modules&lt;/code&gt;).</source>
          <target state="translated">装载机遵循标准&lt;a href=&quot;module-resolution&quot;&gt;模块分辨率&lt;/a&gt;。在大多数情况下，它将是&lt;a href=&quot;module-resolution#module-paths&quot;&gt;模块路径中的&lt;/a&gt;加载器（请考虑 &lt;code&gt;npm install&lt;/code&gt; ， &lt;code&gt;node_modules&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="280b79c628c88ba44079edd33fc5fff785933171" translate="yes" xml:space="preserve">
          <source>Loaders may be added inline in requests and disabled via inline prefixes, which will impact the order in which they are &quot;pitched&quot; and executed. See &lt;a href=&quot;../configuration/module#ruleenforce&quot;&gt;&lt;code&gt;Rule.enforce&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca8c8eeb996a4a1a7282cc32332e5f5a992a064" translate="yes" xml:space="preserve">
          <source>Loaders may use &lt;code&gt;this.getLogger('name')&lt;/code&gt; to get an independent logger with a child name. Loader path and processed file is still added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e5dc9d3fa1229531222b1c2e765d56159a9411" translate="yes" xml:space="preserve">
          <source>Loaders may use special fallback logic for detecting logging support &lt;code&gt;this.getLogger() ? this.getLogger() : console&lt;/code&gt; to provide a fallback when an older webpack version is used which does not support &lt;code&gt;getLogger&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38496ed15a93530a8091bef21e49371ecc5e31b" translate="yes" xml:space="preserve">
          <source>Loaders provide a way to customize the output through their preprocessing functions. Users now have more flexibility to include fine-grained logic such as compression, packaging, language translations and &lt;a href=&quot;https://webpack.js.org/loaders&quot;&gt;more&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81be1d2631fc99d0ffb905518327d6bdea76da2d" translate="yes" xml:space="preserve">
          <source>Loaders run in Node.js and can do everything that&amp;rsquo;s possible there.</source>
          <target state="translated">加载程序在Node.js中运行，可以执行所有可能的操作。</target>
        </trans-unit>
        <trans-unit id="af3ff785372e184c720ab72e8d8e6b85f3adc643" translate="yes" xml:space="preserve">
          <source>Loaders running in a worker pool are limited. Examples:</source>
          <target state="translated">在工人池中运行的加载器是有限的。例如:</target>
        </trans-unit>
        <trans-unit id="54ea0b910661d9aac53a3ca86c53b475f8fe56c6" translate="yes" xml:space="preserve">
          <source>Loaders should prefer to use &lt;code&gt;this.getLogger()&lt;/code&gt; for logging which is a shortcut to &lt;code&gt;compilation.getLogger()&lt;/code&gt; with loader path and processed file. This kind of logging is stored to the Stats and formatted accordingly. It can be filtered and exported by the webpack user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df05e5496cc277768c81c08b1521d94c41cf93b8" translate="yes" xml:space="preserve">
          <source>Loaders were originally designed to also work as Babel transforms. Therefore if you write a loader that works for both, you can use this property to know if there is access to additional loaderContext and webpack features.</source>
          <target state="translated">加载器最初被设计成也可以作为Babel变换工作。因此,如果你写的加载器可以同时适用于这两种情况,你可以使用这个属性来了解是否可以访问额外的 loaderContext 和 webpack 功能。</target>
        </trans-unit>
        <trans-unit id="1fd10bdf49779c69c5002cd39a74d7fbf13068d5" translate="yes" xml:space="preserve">
          <source>Loaders were originally designed to also work as Babel transforms. Therefore, if you write a loader that works for both, you can use this property to know if there is access to additional loaderContext and webpack features.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbd1e5053c497540c53b17284ee2f178ce2faff" translate="yes" xml:space="preserve">
          <source>Loaders were originally designed to work in synchronous loader pipelines, like Node.js (using &lt;a href=&quot;https://github.com/webpack/enhanced-require&quot;&gt;enhanced-require&lt;/a&gt;), &lt;em&gt;and&lt;/em&gt; asynchronous pipelines, like in webpack. However, since expensive synchronous computations are a bad idea in a single-threaded environment like Node.js, we advise making your loader asynchronous if possible. Synchronous loaders are ok if the amount of computation is trivial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a1fe72d58084ada50b31d636dfc360f476ba49" translate="yes" xml:space="preserve">
          <source>Loaders were originally designed to work in synchronous loader pipelines, like Node.js (using &lt;a href=&quot;https://github.com/webpack/enhanced-require&quot;&gt;enhanced-require&lt;/a&gt;), &lt;em&gt;and&lt;/em&gt; asynchronous pipelines, like in webpack. However, since expensive synchronous computations are a bad idea in a single-threaded environment like Node.js, we advise to make your loader asynchronously if possible. Synchronous loaders are ok if the amount of computation is trivial.</source>
          <target state="translated">加载程序最初设计为可在同步加载程序管道（如Node.js（使用&lt;a href=&quot;https://github.com/webpack/enhanced-require&quot;&gt;增强型require&lt;/a&gt;））&lt;em&gt;和&lt;/em&gt;异步管道（如webpack）中工作。但是，由于昂贵的同步计算在像Node.js这样的单线程环境中不是一个好主意，因此建议您尽可能使异步加载器成为可能。如果计算量很小，那么同步加载程序就可以了。</target>
        </trans-unit>
        <trans-unit id="ef1be60bbd337c65d9dc5b5f26b2a0b4b1b565d8" translate="yes" xml:space="preserve">
          <source>Loading (asynchronous)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e683799b6440bfdb45ff32020713072b7ad918e" translate="yes" xml:space="preserve">
          <source>Loading CSS</source>
          <target state="translated">加载CSS</target>
        </trans-unit>
        <trans-unit id="1bbec1f2925e33de29cc103440eaad38ddc86d8c" translate="yes" xml:space="preserve">
          <source>Loading Data</source>
          <target state="translated">加载数据</target>
        </trans-unit>
        <trans-unit id="7d51e9a993f0136e10372f7e9d94384de46c4c08" translate="yes" xml:space="preserve">
          <source>Loading Fonts</source>
          <target state="translated">加载字体</target>
        </trans-unit>
        <trans-unit id="f7a4ff542e1f688b5141f8e55e1a09aeafc365ff" translate="yes" xml:space="preserve">
          <source>Loading Images</source>
          <target state="translated">加载图片</target>
        </trans-unit>
        <trans-unit id="b71d9c5c490fb3ace55aaa4475ed74cd92ebc250" translate="yes" xml:space="preserve">
          <source>Loading Polyfills</source>
          <target state="translated">装入Polyfills</target>
        </trans-unit>
        <trans-unit id="dcae35a8da3975851c0568a2b9dc25768f4d8592" translate="yes" xml:space="preserve">
          <source>Loading remote modules is considered asynchronous operation. When using a remote module these asynchronous operations will be placed in the next chunk loading operation(s) that is between the remote module and the entrypoint. It's not possible to use a remote module without a chunk loading operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3759a5621c7d8e195efc7544602f9a59f770ecf" translate="yes" xml:space="preserve">
          <source>Loads &lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; like JavaScript</source>
          <target state="translated">像JavaScript一样加载&lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="95e1bd68466cd0f30bcf915449c36761daa19154" translate="yes" xml:space="preserve">
          <source>Loads a Sass/SCSS file and compiles it to CSS.</source>
          <target state="translated">加载Sass/SCSS文件并将其编译为CSS。</target>
        </trans-unit>
        <trans-unit id="6b2904edad9c782e3b8dc05eb8a40a537ce14354" translate="yes" xml:space="preserve">
          <source>Loads the imported bundle asynchronously</source>
          <target state="translated">异步加载导入的 bundle。</target>
        </trans-unit>
        <trans-unit id="a845830aac9034a343422233c2c770f1f95e729e" translate="yes" xml:space="preserve">
          <source>Local Installation</source>
          <target state="translated">本地安装</target>
        </trans-unit>
        <trans-unit id="fe8e780964b4db7bf4ccc85f44465753d35754db" translate="yes" xml:space="preserve">
          <source>Locations for the cache. Defaults to &lt;code&gt;path.resolve(cache.cacheDirectory, cache.name)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f503db9aa3949f0c591890ed93126bd2b337b2" translate="yes" xml:space="preserve">
          <source>Locking Down Your Website Scripts with CSP, Hashes, Nonces and Report URI</source>
          <target state="translated">使用CSP、哈希值、Nonces和报告URI锁定您的网站脚本。</target>
        </trans-unit>
        <trans-unit id="efc845bda299735eb007caff62fd3c8e3838c793" translate="yes" xml:space="preserve">
          <source>Logger Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a793db9f87d136f755e5433d27a904e7f15be4c7" translate="yes" xml:space="preserve">
          <source>Logger methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="c25c477d308d53c228d368bac18b43a50b2c2bbd" translate="yes" xml:space="preserve">
          <source>Logging API is available since the release of webpack 4.37. When &lt;code&gt;logging&lt;/code&gt; is enabled in &lt;a href=&quot;../configuration/stats#statslogging&quot;&gt;&lt;code&gt;stats configuration&lt;/code&gt;&lt;/a&gt; and/or when &lt;a href=&quot;../configuration/other-options#infrastructurelogging&quot;&gt;&lt;code&gt;infrastructure logging&lt;/code&gt;&lt;/a&gt; is enabled, loaders may log messages which will be printed out in the respective logger format (stats, infrastructure).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="047f7d6400573cedc28a03f5aec30d3fe6bba8d9" translate="yes" xml:space="preserve">
          <source>Logging API is available since the release of webpack 4.37. When &lt;code&gt;logging&lt;/code&gt; is enabled in &lt;a href=&quot;../configuration/stats#statslogging&quot;&gt;&lt;code&gt;stats configuration&lt;/code&gt;&lt;/a&gt; and/or when &lt;a href=&quot;../configuration/other-options#infrastructurelogging&quot;&gt;&lt;code&gt;infrastructure logging&lt;/code&gt;&lt;/a&gt; is enabled, plugins may log messages which will be printed out in the respective logger format (stats, infrastructure).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74fdb99967614496cf58dee5c598239e13a6fec" translate="yes" xml:space="preserve">
          <source>Logging output exportable as part of the &lt;code&gt;stats.json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea4a8335bf5055498dd63426ed5f6a590598fea6" translate="yes" xml:space="preserve">
          <source>Logging output is an additional way to display messages to the end users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6499a1321bf7c41ee0316581d5232990396dc1f7" translate="yes" xml:space="preserve">
          <source>Long Term Caching</source>
          <target state="translated">长期缓存</target>
        </trans-unit>
        <trans-unit id="00f3ff48131c599bc893a3fab182268b3f63b83d" translate="yes" xml:space="preserve">
          <source>Longer compilation time</source>
          <target state="translated">编制时间较长</target>
        </trans-unit>
        <trans-unit id="0c31d5a4c93b2e22d597f2bbaf69e6630c087b1a" translate="yes" xml:space="preserve">
          <source>Looks complex, yes. We were already able to reduce some complexity due to a assumption we can make: Only &lt;code&gt;node&lt;/code&gt; need a CommonJs version and can detect production/development with &lt;code&gt;process.env&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3e6e5dabb7bc746dff41b2a1ffb6076a8d492f" translate="yes" xml:space="preserve">
          <source>Low-level concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89690ac571dcf4c9c40c842efed3f11171d07b29" translate="yes" xml:space="preserve">
          <source>MIT</source>
          <target state="translated">MIT</target>
        </trans-unit>
        <trans-unit id="f9cfe0891192e57a66acda3a681bb6fc527e509f" translate="yes" xml:space="preserve">
          <source>MIT (&lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;http://www.opensource.org/licenses/mit-license.php&lt;/a&gt;)</source>
          <target state="translated">麻省理工学院（&lt;a href=&quot;http://www.opensource.org/licenses/mit-license.php&quot;&gt;http://www.opensource.org/licenses/mit-license.php&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="bedd57ad9d033edd85277ae8248cacaa182324f4" translate="yes" xml:space="preserve">
          <source>Magic Comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a814d392b75feac12692e66d6c20d77a8369430" translate="yes" xml:space="preserve">
          <source>Make all exports from the dependency available in the current scope. The &lt;code&gt;require&lt;/code&gt; label can occur before a string. The dependency must export values with the &lt;code&gt;export&lt;/code&gt; label. CommonJS or AMD modules cannot be consumed.</source>
          <target state="translated">使依赖项中的所有导出在当前作用域中可用。该 &lt;code&gt;require&lt;/code&gt; 的标签可以在字符串前发生。依赖项必须使用 &lt;code&gt;export&lt;/code&gt; 标签导出值。CommonJS或AMD模块不能使用。</target>
        </trans-unit>
        <trans-unit id="cfb2f4e4030c7b46dbf1ba28a2a8d9414c53cf56" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;devServer.publicPath&lt;/code&gt; always starts and ends with a forward slash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b29ac58651e9cdaefcfd5d8e27916e8b2719912" translate="yes" xml:space="preserve">
          <source>Make sure &lt;code&gt;publicPath&lt;/code&gt; always starts and ends with a forward slash.</source>
          <target state="translated">确保 &lt;code&gt;publicPath&lt;/code&gt; 始终以正斜杠开头和结尾。</target>
        </trans-unit>
        <trans-unit id="82de55ca19a0293cb580f6a86046535d6cadc76f" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;a href=&quot;#devserverhot&quot;&gt;&lt;code&gt;devServer.hot&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt; because &lt;code&gt;devServer.injectHot&lt;/code&gt; only works with HMR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8a0220d8bd55d5aa0014b7718826f3edb161c8" translate="yes" xml:space="preserve">
          <source>Make sure that the hashing function will have &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;digest&lt;/code&gt; methods available.</source>
          <target state="translated">确保哈希函数将具有可用的 &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;digest&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="80ca581877d75fc77f1d3afdd7b023e6302f9de5" translate="yes" xml:space="preserve">
          <source>Make sure the entry chunk is cheap to emit by keeping it small. The following code block extracts a chunk containing only the runtime with &lt;em&gt;all other chunks as children&lt;/em&gt;:</source>
          <target state="translated">确保条目块很小，以使其便宜发出。以下代码块提取仅包含运行时的&lt;em&gt;块，&lt;/em&gt;并将&lt;em&gt;所有其他块作为子块&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="ae626bf4ec2fdd255e35ade6adc6ac167c376ee4" translate="yes" xml:space="preserve">
          <source>Make sure the entry chunk is cheap to emit by keeping it small. The following configuration creates an additional chunk for the runtime code, so it's cheap to generate:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822583219da604edb033971af307b5c77720f385" translate="yes" xml:space="preserve">
          <source>Make sure to have a &lt;code&gt;webpack.config.js&lt;/code&gt; file. If you haven't already, use this as a minimal example to get started:</source>
          <target state="translated">确保有一个 &lt;code&gt;webpack.config.js&lt;/code&gt; 文件。如果您还没有，请使用以下示例作为入门：</target>
        </trans-unit>
        <trans-unit id="946510ee236f1819da59b74df08b6c7513b1e8b6" translate="yes" xml:space="preserve">
          <source>Make sure to read the &lt;a href=&quot;../guides/caching&quot;&gt;Caching guide&lt;/a&gt; for details. There are more steps involved than just setting this option.</source>
          <target state="translated">请务必阅读&lt;a href=&quot;../guides/caching&quot;&gt;缓存指南&lt;/a&gt;以获取详细信息。不仅仅是设置此选项，还涉及更多步骤。</target>
        </trans-unit>
        <trans-unit id="eb7f65d09dd256be015476f59d3999b13b6a1f01" translate="yes" xml:space="preserve">
          <source>Make sure you are transforming as few files as possible. Because you are probably matching &lt;code&gt;/\.js$/&lt;/code&gt;, you might be transforming the &lt;code&gt;node_modules&lt;/code&gt; folder or other unwanted source.</source>
          <target state="translated">确保要转换的文件越少越好。因为您可能匹配 &lt;code&gt;/\.js$/&lt;/code&gt; ，所以您可能正在转换 &lt;code&gt;node_modules&lt;/code&gt; 文件夹或其他不需要的源。</target>
        </trans-unit>
        <trans-unit id="b79b7df1fb608455d299605f686bab5b4592d01d" translate="yes" xml:space="preserve">
          <source>Make sure you are transforming as few files as possible. Because you are probably matching &lt;code&gt;/\.m?js$/&lt;/code&gt;, you might be transforming the &lt;code&gt;node_modules&lt;/code&gt; folder or other unwanted source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d9587519bf75c639601b005cda3332a332b465" translate="yes" xml:space="preserve">
          <source>Make sure you have &lt;code&gt;webpack-bundle-analyzer&lt;/code&gt; installed in your project else CLI will prompt you to install it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6280c01bee59d3b53076e6acddc249d8696da16" translate="yes" xml:space="preserve">
          <source>Make webpack_public_path, webpack_require, webpack_modules and webpack_chunk_load accessible. Ensures that &lt;code&gt;require.valueOf&lt;/code&gt; and &lt;code&gt;require.onError&lt;/code&gt; are not processed by other plugins.</source>
          <target state="translated">使webpack_public_path，webpack_require，webpack_modules和webpack_chunk_load可以访问。确保其他插件 &lt;code&gt;require.valueOf&lt;/code&gt; 和 &lt;code&gt;require.onError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e0acb01ff22fcc4a87589193b7ce051d619e6d0" translate="yes" xml:space="preserve">
          <source>Management API</source>
          <target state="translated">管理API</target>
        </trans-unit>
        <trans-unit id="e63e4519432a184f2c433088dda29083ad55f057" translate="yes" xml:space="preserve">
          <source>Manifest</source>
          <target state="translated">Manifest</target>
        </trans-unit>
        <trans-unit id="ca8b8b1969d3152a412da63d28e3ba85c007c8b9" translate="yes" xml:space="preserve">
          <source>Manifest file</source>
          <target state="translated">舱单文件</target>
        </trans-unit>
        <trans-unit id="87f354d46c42fbfb1bf5c0671d9c6ee8315ef72f" translate="yes" xml:space="preserve">
          <source>ManifestPlugin source</source>
          <target state="translated">来源ManifestPlugin</target>
        </trans-unit>
        <trans-unit id="6e60b4736a71b102618c37faacacdef5579361f4" translate="yes" xml:space="preserve">
          <source>Manually Bundling an Application</source>
          <target state="translated">手动捆绑应用程序</target>
        </trans-unit>
        <trans-unit id="310107ae364d0440f15c70ce87c9748401da211c" translate="yes" xml:space="preserve">
          <source>Many applications share a common components library which could be built as a container with each component exposed. Each application consumes components from the components library container. Changes to the components library can be separately deployed without the need to re-deploy all applications. The application automatically uses the up-to-date version of the components library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2b1ee7a308a1557b02668d7c099c79efcc8803" translate="yes" xml:space="preserve">
          <source>Many frameworks and libraries have their own recommendations on how this should be accomplished within their methodologies. Here are a few examples:</source>
          <target state="translated">许多框架和库对如何在其方法论中实现这一点有自己的建议。下面是几个例子。</target>
        </trans-unit>
        <trans-unit id="14e014cc20f71d8ca3dd7c0b71a405ab4ab920a4" translate="yes" xml:space="preserve">
          <source>Many libraries will key off the &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; variable to determine what should be included in the library. For example, when &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; is not set to &lt;code&gt;'production'&lt;/code&gt; some libraries may add additional logging and testing to make debugging easier. However, with &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; set to &lt;code&gt;'production'&lt;/code&gt; they might drop or add significant portions of code to optimize how things run for your actual users. Since webpack v4, specifying &lt;a href=&quot;../configuration/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; automatically configures &lt;a href=&quot;../plugins/define-plugin&quot;&gt;&lt;code&gt;DefinePlugin&lt;/code&gt;&lt;/a&gt; for you:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f96c5a8fb4fc499147bb5f30b9e2af4b9ea3d7" translate="yes" xml:space="preserve">
          <source>Many libraries will key off the &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; variable to determine what should be included in the library. For example, when not in &lt;em&gt;production&lt;/em&gt; some libraries may add additional logging and testing to make debugging easier. However, with &lt;code&gt;process.env.NODE_ENV === 'production'&lt;/code&gt; they might drop or add significant portions of code to optimize how things run for your actual users. Since webpack v4, specifying &lt;a href=&quot;../concepts/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; automatically configures &lt;a href=&quot;../plugins/define-plugin&quot;&gt;&lt;code&gt;DefinePlugin&lt;/code&gt;&lt;/a&gt; for you:</source>
          <target state="translated">许多库将取消 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; 变量的作用，以确定应在库中包含哪些内容。例如，当不在&lt;em&gt;生产中&lt;/em&gt;时，某些库可能会添加其他日志记录和测试，以使调试更加容易。但是，使用 &lt;code&gt;process.env.NODE_ENV === 'production'&lt;/code&gt; 他们可能会删除或添加大量代码以优化实际用户的运行方式。从webpack v4开始，指定&lt;a href=&quot;../concepts/mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;自动为您配置&lt;a href=&quot;../plugins/define-plugin&quot;&gt; &lt;code&gt;DefinePlugin&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="6d780701301972713cdbc0ae3c7389b66619eebb" translate="yes" xml:space="preserve">
          <source>Mapped Mode</source>
          <target state="translated">映射模式</target>
        </trans-unit>
        <trans-unit id="963d9a6c8a34a6ed30c515af04dca56c70bf84f8" translate="yes" xml:space="preserve">
          <source>Mark a function call as side-effect-free</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618608e69b340a9be424c8115af4e3f3a5860027" translate="yes" xml:space="preserve">
          <source>Mark the file as side-effect-free</source>
          <target state="translated">将文件标记为无副作用</target>
        </trans-unit>
        <trans-unit id="17364a0ed47cace4977b52b7d04c3e4c0cf9a601" translate="yes" xml:space="preserve">
          <source>Markdown to HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc36dd72b53517c1d6192a8b7d906e1e7a0da7de" translate="yes" xml:space="preserve">
          <source>Markdown to Markdown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a92293de8b4136e55553e18bf8625efa4074a82" translate="yes" xml:space="preserve">
          <source>Maximum number of concurrency optimization processes in one time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d97f3faa457c6067ea392c7bf35316b89c3cd88" translate="yes" xml:space="preserve">
          <source>Maximum number of concurrency optimization processes in one time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417a27fd94237019eac2aeb48145618064ce770e" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests at an entry point.</source>
          <target state="translated">一个切入点的最大并行请求数。</target>
        </trans-unit>
        <trans-unit id="39b4b99fb5a7c36ca7c820930ef486c0de5aa72d" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests at initial page load would be lower or equal to 3</source>
          <target state="translated">在初始页面加载时,并行请求的最大数量将小于或等于3个</target>
        </trans-unit>
        <trans-unit id="6b42a920d5f02e51f74d406360d946d17663d1e5" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests at initial page load would be lower or equal to 30</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b5988ecf09f5540a687dd0626ea109922c2f60c" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests when loading chunks on demand would be lower or equal to 30</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acff09df4af5d153c122c644a57ed6cbb73ab80" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests when loading chunks on demand would be lower or equal to 5</source>
          <target state="translated">当按需加载块时,并行请求的最大数量将小于或等于5个</target>
        </trans-unit>
        <trans-unit id="53e5d801cf66de5587e63c1241deca456bf33b9b" translate="yes" xml:space="preserve">
          <source>Maximum number of parallel requests when on-demand loading.</source>
          <target state="translated">按需加载时的最大并行请求数。</target>
        </trans-unit>
        <trans-unit id="0aeceb4e4aabcb87b823ae720128ab6afd46bbe4" translate="yes" xml:space="preserve">
          <source>May or may not have a performance benefit since the incremental build times are pretty fast.</source>
          <target state="translated">可能会或不可能有性能上的好处,因为增量构建时间相当快。</target>
        </trans-unit>
        <trans-unit id="7deb2bdf4473183bac7f21bf1e7f2410c5696b08" translate="yes" xml:space="preserve">
          <source>Media Query Plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d83fb1fba3fd8c10c28fbbc94d7844236c4d6b" translate="yes" xml:space="preserve">
          <source>Media Query Splitting Plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b6a31a2385bb15bff920bf63dc3c7fd8f71e62" translate="yes" xml:space="preserve">
          <source>MemoryCachePlugin</source>
          <target state="translated">MemoryCachePlugin</target>
        </trans-unit>
        <trans-unit id="1866f4cdcdf728e084eb4ddfe898153c121f9828" translate="yes" xml:space="preserve">
          <source>Merge chunks limit chunk count is lower than &lt;code&gt;options.maxChunks&lt;/code&gt;.</source>
          <target state="translated">合并块限制块数低于 &lt;code&gt;options.maxChunks&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f58d3872c3cffa3f3fb3907eea11a667876119e" translate="yes" xml:space="preserve">
          <source>Merge two or more configurations using webpack-merge e.g. &lt;code&gt;-c ./webpack.config.js -c ./webpack.test.config.js&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c15c26b1be17ec93256af96a27f44809134b52" translate="yes" xml:space="preserve">
          <source>MergeDuplicateChunksPlugin</source>
          <target state="translated">MergeDuplicateChunksPlugin</target>
        </trans-unit>
        <trans-unit id="6b2944822c2268fc33a870d79c11dc89f6d193c3" translate="yes" xml:space="preserve">
          <source>Merges chunks until each chunk has the minimum size of &lt;code&gt;minChunkSize&lt;/code&gt;.</source>
          <target state="translated">合并块，直到每个块的最小大小都为 &lt;code&gt;minChunkSize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c5302240a42ef72c577209d8faf3e2380ec6d565" translate="yes" xml:space="preserve">
          <source>Migrate a configuration to a new version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9578660b5607a28e9e8e3c2c9d41e3b29d296190" translate="yes" xml:space="preserve">
          <source>Migrate from &lt;code&gt;eslint-loader&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8872c1945c6f1032933a096e68ec27f1eff364" translate="yes" xml:space="preserve">
          <source>Mimicking django's &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt;, a value beginning with &lt;code&gt;.&lt;/code&gt; can be used as a subdomain wildcard. &lt;code&gt;.host.com&lt;/code&gt; will match &lt;code&gt;host.com&lt;/code&gt;, &lt;code&gt;www.host.com&lt;/code&gt;, and any other subdomain of &lt;code&gt;host.com&lt;/code&gt;.</source>
          <target state="translated">模仿django的 &lt;code&gt;ALLOWED_HOSTS&lt;/code&gt; （以开头的值） &lt;code&gt;.&lt;/code&gt; 可以用作子域通配符。 &lt;code&gt;.host.com&lt;/code&gt; 将匹配 &lt;code&gt;host.com&lt;/code&gt; ， &lt;code&gt;www.host.com&lt;/code&gt; 以及 &lt;code&gt;host.com&lt;/code&gt; 的任何其他子域。</target>
        </trans-unit>
        <trans-unit id="897d2e3b770f8d706d0588208662011475130755" translate="yes" xml:space="preserve">
          <source>MinChunkSizePlugin</source>
          <target state="translated">MinChunkSizePlugin</target>
        </trans-unit>
        <trans-unit id="23b5f7513083e7dfd8776fabc70196ac391d848d" translate="yes" xml:space="preserve">
          <source>MiniCssExtractPlugin</source>
          <target state="translated">MiniCssExtractPlugin</target>
        </trans-unit>
        <trans-unit id="7a3ea5ae4bbcb0b6c68d07df01c97a3626e4c95d" translate="yes" xml:space="preserve">
          <source>Minification</source>
          <target state="translated">Minification</target>
        </trans-unit>
        <trans-unit id="e530b56795c0e4512b9667907810a828b4609938" translate="yes" xml:space="preserve">
          <source>Minification with &lt;a href=&quot;https://github.com/babel/minify&quot;&gt;babel-minify&lt;/a&gt;</source>
          <target state="translated">用&lt;a href=&quot;https://github.com/babel/minify&quot;&gt;babel-minify缩小&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="107d6db35d646d528c9a51a63651dabd529d73be" translate="yes" xml:space="preserve">
          <source>Minify the Output</source>
          <target state="translated">最小化输出</target>
        </trans-unit>
        <trans-unit id="fcbb0549ad4161e42e588161939dc9c2778e58f5" translate="yes" xml:space="preserve">
          <source>Minimal Entry Chunk</source>
          <target state="translated">最小的进入块</target>
        </trans-unit>
        <trans-unit id="4c9b2f2cc924fdc5ae54de76fd616b11e14910ae" translate="yes" xml:space="preserve">
          <source>Minimal example</source>
          <target state="translated">最小的例子</target>
        </trans-unit>
        <trans-unit id="cbffcdb92559ac9186d82d2c23b42f651fca8808" translate="yes" xml:space="preserve">
          <source>Minimize CSS</source>
          <target state="translated">最小化CSS</target>
        </trans-unit>
        <trans-unit id="20c5acdf828152e49115784fc07b87c2d883e33d" translate="yes" xml:space="preserve">
          <source>Minimize javascript and switches loaders to minimizing</source>
          <target state="translated">最小化javascript并将加载器切换到最小化。</target>
        </trans-unit>
        <trans-unit id="a6ffa937e9ecc8d7e999b7abdd2959fc92f51275" translate="yes" xml:space="preserve">
          <source>Minimize the number of items in &lt;code&gt;resolve.modules&lt;/code&gt;, &lt;code&gt;resolve.extensions&lt;/code&gt;, &lt;code&gt;resolve.mainFiles&lt;/code&gt;, &lt;code&gt;resolve.descriptionFiles&lt;/code&gt; as they increase the number of filesystem calls.</source>
          <target state="translated">最小化 &lt;code&gt;resolve.modules&lt;/code&gt; ， &lt;code&gt;resolve.extensions&lt;/code&gt; ， &lt;code&gt;resolve.mainFiles&lt;/code&gt; ， &lt;code&gt;resolve.descriptionFiles&lt;/code&gt; 中的项目数，因为它们增加了文件系统调用的数量。</target>
        </trans-unit>
        <trans-unit id="3f8926d4f7df52b4d4427797a32c9c5b26cde838" translate="yes" xml:space="preserve">
          <source>Minimize the number of items in &lt;code&gt;resolve.modules&lt;/code&gt;, &lt;code&gt;resolve.extensions&lt;/code&gt;, &lt;code&gt;resolve.mainFiles&lt;/code&gt;, &lt;code&gt;resolve.descriptionFiles&lt;/code&gt;, as they increase the number of filesystem calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c97536d4a74005bbc859f9f508fe582df2fc09a" translate="yes" xml:space="preserve">
          <source>Minimize the number of preset/plugins</source>
          <target state="translated">尽量减少预设/插件的数量。</target>
        </trans-unit>
        <trans-unit id="06e3dae400a146ac9ee6b047a952a5c0082cebd0" translate="yes" xml:space="preserve">
          <source>Minimizes the chunks with &lt;code&gt;uglify.js&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;uglify.js&lt;/code&gt; 最小化块。</target>
        </trans-unit>
        <trans-unit id="4b3525bb3744266dcd052765cb2e967f4f415796" translate="yes" xml:space="preserve">
          <source>Minimizing For Production</source>
          <target state="translated">为生产而最小化</target>
        </trans-unit>
        <trans-unit id="f810335097d91ac6e93fe8a1e2e38603eee5be4f" translate="yes" xml:space="preserve">
          <source>Minimum number of chunks that must share a module before splitting.</source>
          <target state="translated">分割前必须共享一个模块的最小块数。</target>
        </trans-unit>
        <trans-unit id="60cabd1ecf30b7a89543cad33d76871146ea270c" translate="yes" xml:space="preserve">
          <source>Minimum size, in bytes, for a chunk to be generated.</source>
          <target state="translated">要生成的块的最小尺寸,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="814d5c9075ac58da08deb4e3d88f6089a78f380d" translate="yes" xml:space="preserve">
          <source>Mocha</source>
          <target state="translated">Mocha</target>
        </trans-unit>
        <trans-unit id="a7b93d2128e820f861fc8dfccd9f5521e89ad21f" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">Mode</target>
        </trans-unit>
        <trans-unit id="9ee01a8f4adb7ccb780dcbb703b82c147dd8837e" translate="yes" xml:space="preserve">
          <source>Mode to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49038ebac8be34038eea485a820fd93f01def3f" translate="yes" xml:space="preserve">
          <source>Mode to use, either &quot;development&quot; or &quot;production&quot;</source>
          <target state="translated">使用模式,&quot;开发 &quot;或 &quot;生产&quot;</target>
        </trans-unit>
        <trans-unit id="c26cc3dae872232e9a0604d9099b87507b59d66a" translate="yes" xml:space="preserve">
          <source>Mode: development</source>
          <target state="translated">模式:发展</target>
        </trans-unit>
        <trans-unit id="c8c73771af79c4409a259ba6e572fbb79e19d3f6" translate="yes" xml:space="preserve">
          <source>Mode: none</source>
          <target state="translated">模式:无</target>
        </trans-unit>
        <trans-unit id="bb28adf7bbf9194f1592a3c19f4f63f75be0fca8" translate="yes" xml:space="preserve">
          <source>Mode: production</source>
          <target state="translated">模式:生产</target>
        </trans-unit>
        <trans-unit id="12be477918e3e557f481ef5393ea168e4142eb3c" translate="yes" xml:space="preserve">
          <source>Modernizr</source>
          <target state="translated">Modernizr</target>
        </trans-unit>
        <trans-unit id="79f5b225cffab11e22dc40b6f05abef1d33d1561" translate="yes" xml:space="preserve">
          <source>Modes</source>
          <target state="translated">Modes</target>
        </trans-unit>
        <trans-unit id="4822c7226bb2bbcfff3cd9616657a72a7e9a5988" translate="yes" xml:space="preserve">
          <source>Modify &lt;code&gt;tsconfig.json&lt;/code&gt;.</source>
          <target state="translated">修改 &lt;code&gt;tsconfig.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b07b0fa775d0050d5b01788a8d05c9619a09411b" translate="yes" xml:space="preserve">
          <source>Modify filename</source>
          <target state="translated">修改文件名</target>
        </trans-unit>
        <trans-unit id="b8ff02892916ff59f7fbd4e617fccd01f6bca576" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Module</target>
        </trans-unit>
        <trans-unit id="7ee83fed2e8bf53e577b314dd959ae5c55d31275" translate="yes" xml:space="preserve">
          <source>Module API</source>
          <target state="translated">模块API</target>
        </trans-unit>
        <trans-unit id="b646710f158e4e70a3d65e8db78db8f19e1de68c" translate="yes" xml:space="preserve">
          <source>Module Concatenation also applies. So that these 4 modules plus the entry module (and probably more dependencies) can be concatenated. &lt;strong&gt;&lt;code&gt;index.js&lt;/code&gt; has no code generated in the end&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4adaadd50180c6b35d9ed9d021b97f0ef636e2c" translate="yes" xml:space="preserve">
          <source>Module Contexts</source>
          <target state="translated">模块背景</target>
        </trans-unit>
        <trans-unit id="79664e04507d8c1100019dbeb51f9cb573abd95d" translate="yes" xml:space="preserve">
          <source>Module Definition Systems</source>
          <target state="translated">模块定义系统</target>
        </trans-unit>
        <trans-unit id="43378ad6990197335258de6b3ccc8f84184825b8" translate="yes" xml:space="preserve">
          <source>Module Federation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8204368a794ea2cb8e6559e5661f43a2445c7f87" translate="yes" xml:space="preserve">
          <source>Module Federation YouTube Playlist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd61fca308543f04ec5078e95c6f6477a1b57472" translate="yes" xml:space="preserve">
          <source>Module Grouping Algorithm</source>
          <target state="translated">模块分组算法</target>
        </trans-unit>
        <trans-unit id="8a9d06dd836568efeccdb8afcf254285349fb16b" translate="yes" xml:space="preserve">
          <source>Module ID is a number in webpack (in contrast to NodeJS where it is a string -- the filename).</source>
          <target state="translated">模块ID在webpack中是一个数字(与NodeJS相反,在NodeJS中它是一个字符串--文件名)。</target>
        </trans-unit>
        <trans-unit id="471a50479d9fbae5891a0e77842ad130c3bc60a2" translate="yes" xml:space="preserve">
          <source>Module ID's type can be a &lt;code&gt;number&lt;/code&gt; or a &lt;code&gt;string&lt;/code&gt; depending on the &lt;a href=&quot;../configuration/optimization#optimizationmoduleids&quot;&gt;&lt;code&gt;optimization.moduleIds&lt;/code&gt;&lt;/a&gt; configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410f8eb19b4a638554cd700e8ba88f0ef130c290" translate="yes" xml:space="preserve">
          <source>Module Identifiers</source>
          <target state="translated">模块标识符</target>
        </trans-unit>
        <trans-unit id="b3c0d8ccd032afe728bc7677d8f1b82146252c2e" translate="yes" xml:space="preserve">
          <source>Module Methods</source>
          <target state="translated">模块方法</target>
        </trans-unit>
        <trans-unit id="ecd286e5b576aa168a3e80ebd6b8b9bef1e63dc4" translate="yes" xml:space="preserve">
          <source>Module Methods: export</source>
          <target state="translated">模块方法:导出</target>
        </trans-unit>
        <trans-unit id="945e0c3613d86df1ee95a47f2c0475a9e0e17749" translate="yes" xml:space="preserve">
          <source>Module Methods: import</source>
          <target state="translated">模块方法:导入</target>
        </trans-unit>
        <trans-unit id="0d57150cecad5465f78b64ad698220c2e9229222" translate="yes" xml:space="preserve">
          <source>Module Methods: import()</source>
          <target state="translated">模块方法:导入()</target>
        </trans-unit>
        <trans-unit id="9640648ce09230d5d92af45be6406d0ee61c2db2" translate="yes" xml:space="preserve">
          <source>Module Methods: require</source>
          <target state="translated">模块方法:需要</target>
        </trans-unit>
        <trans-unit id="abcaa7bd7f40b253308bbd0709b1d33e3a8d639d" translate="yes" xml:space="preserve">
          <source>Module Methods: require.cache</source>
          <target state="translated">模块方法:require.cache</target>
        </trans-unit>
        <trans-unit id="50b49ca3cff4218a18f3ff873b9927756ddb4009" translate="yes" xml:space="preserve">
          <source>Module Methods: require.context</source>
          <target state="translated">模块方法:require.context</target>
        </trans-unit>
        <trans-unit id="3623f20eabc51ba424dcb8e7cf729bdf14a91263" translate="yes" xml:space="preserve">
          <source>Module Methods: require.ensure</source>
          <target state="translated">模块方法:require.sure</target>
        </trans-unit>
        <trans-unit id="ba82f440989dc3a33ec2656360dff40b1815eed5" translate="yes" xml:space="preserve">
          <source>Module Methods: require.include</source>
          <target state="translated">模块方法:require.include</target>
        </trans-unit>
        <trans-unit id="1245c5418d703043405edcc532ff2cbceebb869d" translate="yes" xml:space="preserve">
          <source>Module Methods: require.resolve</source>
          <target state="translated">模块方法:require.resolve</target>
        </trans-unit>
        <trans-unit id="f109203fd3ac3a8580ea8b9542e1cafa496e5d73" translate="yes" xml:space="preserve">
          <source>Module Methods: require.resolveWeak</source>
          <target state="translated">模块方法:require.resolveWeak</target>
        </trans-unit>
        <trans-unit id="b5e362a11fb712a29a6a7c3e785bb6ff30aa5eae" translate="yes" xml:space="preserve">
          <source>Module Objects</source>
          <target state="translated">模块对象</target>
        </trans-unit>
        <trans-unit id="15d7561ef70bec9f7ca7c6066aca420c78fe0cbf" translate="yes" xml:space="preserve">
          <source>Module Options</source>
          <target state="translated">模块选项</target>
        </trans-unit>
        <trans-unit id="288e4a8c6676ea4eb83392ffcf2395bf08c232ab" translate="yes" xml:space="preserve">
          <source>Module Resolution</source>
          <target state="translated">模块分辨率</target>
        </trans-unit>
        <trans-unit id="be778ece53ab9c5d58fb887a3aea4ee7cb771a1b" translate="yes" xml:space="preserve">
          <source>Module Variables</source>
          <target state="translated">模块变量</target>
        </trans-unit>
        <trans-unit id="ce0ddf2557a4c8392f5626e1536ebc449604872d" translate="yes" xml:space="preserve">
          <source>Module and Chunk information</source>
          <target state="translated">模块和块信息</target>
        </trans-unit>
        <trans-unit id="d14e420dd26410ed804a420f2a1a3311b5e89311" translate="yes" xml:space="preserve">
          <source>Module loaders can be chained. Each loader in the chain applies transformations to the processed resource. A chain is executed in reverse order. The first loader passes its result (resource with applied transformations) to the next one, and so forth. Finally, webpack expects JavaScript to be returned by the last loader in the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb0e5932cf3bd36e4da09bd5f327d6bd14f174c" translate="yes" xml:space="preserve">
          <source>Module names are hashed into small numeric values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e1fc9a33becfe3c9b761e74ed828d7c64ecc1a" translate="yes" xml:space="preserve">
          <source>Module paths</source>
          <target state="translated">模块路径</target>
        </trans-unit>
        <trans-unit id="c4b27dc35a86c4ced295147d986884bc2abd55cf" translate="yes" xml:space="preserve">
          <source>Module proof library.</source>
          <target state="translated">模块证明库。</target>
        </trans-unit>
        <trans-unit id="19faa7f6d4eb5a774076d466ac8eb4fd017c1f43" translate="yes" xml:space="preserve">
          <source>Module request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3de759bd2bd5a702bb8b6648d1223097f812b3e" translate="yes" xml:space="preserve">
          <source>Module requests in shared:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9566babfeec0cbd65144281e6c12569d5ca92e82" translate="yes" xml:space="preserve">
          <source>Module requests with trailing &lt;code&gt;/&lt;/code&gt; in shared will match all module requests with this prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c778ecf88b04fc7e521411638a1b843652b456c7" translate="yes" xml:space="preserve">
          <source>ModuleConcatenationPlugin</source>
          <target state="translated">ModuleConcatenationPlugin</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="cb2bca09fe58c99a48713d7ecdb369a58396da80" translate="yes" xml:space="preserve">
          <source>Modules are searched for inside all directories specified in &lt;a href=&quot;../configuration/resolve#resolve-modules&quot;&gt;&lt;code&gt;resolve.modules&lt;/code&gt;&lt;/a&gt;. You can replace the original module path by an alternate path by creating an alias for it using &lt;a href=&quot;../configuration/resolve#resolve-alias&quot;&gt;&lt;code&gt;resolve.alias&lt;/code&gt;&lt;/a&gt; configuration option.</source>
          <target state="translated">在&lt;a href=&quot;../configuration/resolve#resolve-modules&quot;&gt; &lt;code&gt;resolve.modules&lt;/code&gt; 中&lt;/a&gt;指定的所有目录中搜索模块。您可以使用&lt;a href=&quot;../configuration/resolve#resolve-alias&quot;&gt; &lt;code&gt;resolve.alias&lt;/code&gt; &lt;/a&gt;配置选项为其创建别名，从而用替代路径替换原始模块路径。</target>
        </trans-unit>
        <trans-unit id="16d6fba6b0bedb48cbb1415276d6c585d1e5edc4" translate="yes" xml:space="preserve">
          <source>Modules are searched for inside all directories specified in &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt;&lt;code&gt;resolve.modules&lt;/code&gt;&lt;/a&gt;. You can replace the original module path by an alternate path by creating an alias for it using the &lt;a href=&quot;../configuration/resolve#resolvealias&quot;&gt;&lt;code&gt;resolve.alias&lt;/code&gt;&lt;/a&gt; configuration option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec16722362e1438cf1ffdf48e33b168fc8353eff" translate="yes" xml:space="preserve">
          <source>Modules that are included in every parent chunk are removed from the chunk.</source>
          <target state="translated">每个父块中包含的模块都会从该块中删除。</target>
        </trans-unit>
        <trans-unit id="dc0e90da593346f66fc7676c144617eafa287ccf" translate="yes" xml:space="preserve">
          <source>More &lt;a href=&quot;#examples&quot;&gt;&lt;code&gt;examples&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65607507695dbb68853f7200e33956e39fd6a15d" translate="yes" xml:space="preserve">
          <source>More Examples</source>
          <target state="translated">更多例子</target>
        </trans-unit>
        <trans-unit id="aecacc578fafc86000f18d7278b20350137419df" translate="yes" xml:space="preserve">
          <source>More information about the &lt;code&gt;ignoreWarnings&lt;/code&gt; option can be found &lt;a href=&quot;../configuration/other-options#ignorewarnings&quot;&gt;here&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70522f34120a549e2600e547c248ca78f144af63" translate="yes" xml:space="preserve">
          <source>More information and examples &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979e421e3c8ef44e0883aba3714dcb57450f1e48" translate="yes" xml:space="preserve">
          <source>More likely you will be disrupted by this second issue. It is natural to expect relative references to be resolved against the &lt;code&gt;.scss&lt;/code&gt; file in which they are specified (like in regular &lt;code&gt;.css&lt;/code&gt; files). Thankfully there are a two solutions to this problem:</source>
          <target state="translated">第二个问题很有可能会打扰您。很自然地希望相对引用会针对指定了它们的 &lt;code&gt;.scss&lt;/code&gt; 文件进行解析（就像在常规 &lt;code&gt;.css&lt;/code&gt; 文件中一样）。幸运的是，有两个解决方案可以解决此问题：</target>
        </trans-unit>
        <trans-unit id="2c01f4257ff180535de3f5b45fd1bee6f7933c67" translate="yes" xml:space="preserve">
          <source>Most tools get the ESM version. Node.js is an exception here. It gets a CommonJs version when using &lt;code&gt;require()&lt;/code&gt;. This will lead to two instances of these package when referencing it with &lt;code&gt;require()&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt;, but that doesn't hurt as the package doesn't have state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a06199cc127e571d3588aef63c79108675eabc" translate="yes" xml:space="preserve">
          <source>Motivation</source>
          <target state="translated">Motivation</target>
        </trans-unit>
        <trans-unit id="b9e79b0fb30bd5b519b2cc3654c5e8b6ad96cbc3" translate="yes" xml:space="preserve">
          <source>Move common modules into the parent chunk</source>
          <target state="translated">将通用模块移动到父块中</target>
        </trans-unit>
        <trans-unit id="32cd6988ffa7e6963a92d2c5062e0af6c93ddf04" translate="yes" xml:space="preserve">
          <source>Moved to &lt;a href=&quot;#managedpaths&quot;&gt;snapshot.managedPaths&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d62d3acc8060c89746323fa3392fffb7aa3569" translate="yes" xml:space="preserve">
          <source>Multi Page Application</source>
          <target state="translated">多页应用</target>
        </trans-unit>
        <trans-unit id="51244434835571b55673043584edfd8145243326" translate="yes" xml:space="preserve">
          <source>MultiCompiler</source>
          <target state="translated">MultiCompiler</target>
        </trans-unit>
        <trans-unit id="af261911aa86e4785c88244cbcfad54e0b65d198" translate="yes" xml:space="preserve">
          <source>MultiEntryPlugin</source>
          <target state="translated">MultiEntryPlugin</target>
        </trans-unit>
        <trans-unit id="31bec9db1d695359396d3a884e25be81f75fa5c4" translate="yes" xml:space="preserve">
          <source>Multiple &lt;code&gt;DllPlugins&lt;/code&gt; and multiple &lt;code&gt;DllReferencePlugins&lt;/code&gt;.</source>
          <target state="translated">多个 &lt;code&gt;DllPlugins&lt;/code&gt; 和多个 &lt;code&gt;DllReferencePlugins&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7d0845e7fa07727d2f4c51ad7c374c8efded058" translate="yes" xml:space="preserve">
          <source>Multiple Common Chunks</source>
          <target state="translated">多个共同块</target>
        </trans-unit>
        <trans-unit id="70919a073b717374fafc07a125e1979358461434" translate="yes" xml:space="preserve">
          <source>Multiple Compilations</source>
          <target state="translated">多重汇编</target>
        </trans-unit>
        <trans-unit id="33e334d48711f0b0422dd14c11adb7d2e27859ad" translate="yes" xml:space="preserve">
          <source>Multiple Entry Points</source>
          <target state="translated">多个入口点</target>
        </trans-unit>
        <trans-unit id="d0254d4ee6b52c76a42b92fe63abfae1fba4ee5e" translate="yes" xml:space="preserve">
          <source>Multiple Entry Points with Commons Chunk</source>
          <target state="translated">多个入口点与Commons Chunk</target>
        </trans-unit>
        <trans-unit id="9f602c068fcc7878bf5f40d9c133c2474881e45a" translate="yes" xml:space="preserve">
          <source>Multiple Instances</source>
          <target state="translated">多个实例</target>
        </trans-unit>
        <trans-unit id="074fe87b70c09f5b65ca99d9e5bdd7e02086a9ed" translate="yes" xml:space="preserve">
          <source>Multiple Output Languages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52629750e553b3ad6a766ef3b9111c449d4aef13" translate="yes" xml:space="preserve">
          <source>Multiple Targets</source>
          <target state="translated">多个目标</target>
        </trans-unit>
        <trans-unit id="7af4468c4f3ebf1ae604743e81c25292dbff7615" translate="yes" xml:space="preserve">
          <source>Multiple callbacks can be added. They will be executed in the order of addition.</source>
          <target state="translated">可以添加多个回调。它们将按照添加的顺序执行。</target>
        </trans-unit>
        <trans-unit id="8e64779794799dba0693b7d9156859c1a67af6a8" translate="yes" xml:space="preserve">
          <source>Multiple compressed versions of assets for different algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32a7f7893816cdc2e78105a9f31fd95e5aa5e86" translate="yes" xml:space="preserve">
          <source>Multiple configurations will &lt;strong&gt;not be run in parallel&lt;/strong&gt;. Each configuration is only processed after the previous one has finished processing. To process them in parallel, you can use a third-party solution like &lt;a href=&quot;https://www.npmjs.com/package/parallel-webpack&quot;&gt;parallel-webpack&lt;/a&gt;.</source>
          <target state="translated">多个配置&lt;strong&gt;不会并行运行&lt;/strong&gt;。仅在上一个配置完成处理后才处理每个配置。要并行处理它们，可以使用第三方解决方案，例如&lt;a href=&quot;https://www.npmjs.com/package/parallel-webpack&quot;&gt;parallel-webpack&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0f0d561fb483e8f39bc1167c92ff7be77ecdb9b1" translate="yes" xml:space="preserve">
          <source>Multiple file types per entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81a1d105716cb263dbe1b2bcae71f3051d276df" translate="yes" xml:space="preserve">
          <source>Multiple requires of the same module result in only one module execution and only one export. Therefore a cache in the runtime exists. Removing values from this cache causes new module execution and a new export.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a940006e1d223c8e4389d42329fa987d078d3a15" translate="yes" xml:space="preserve">
          <source>Multiple requires to the same module result in only one module execution and only one export. Therefore a cache in the runtime exists. Removing values from this cache cause new module execution and a new export.</source>
          <target state="translated">对同一模块的多个需求导致只执行一个模块,只输出一个模块。因此在运行时存在一个缓存。从这个缓存中删除值会导致新的模块执行和新的输出。</target>
        </trans-unit>
        <trans-unit id="ef4711aaf3e1de533c5916f2318f8a44b1e8bee7" translate="yes" xml:space="preserve">
          <source>Multiple separate builds should form a single application. These separate builds should not have dependencies between each other, so they can be developed and deployed individually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58c3aebae89adf1783eda829ec1aa946f07d85a" translate="yes" xml:space="preserve">
          <source>Multiple values</source>
          <target state="translated">多值</target>
        </trans-unit>
        <trans-unit id="e6aabb6231f5fbabca099e4a40902fa7f067fa46" translate="yes" xml:space="preserve">
          <source>Multiple values are separated by comma &lt;code&gt;,&lt;/code&gt;:</source>
          <target state="translated">多个值用逗号分隔 &lt;code&gt;,&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1b6c0dee98a89366fdcbfe05541aac72db6bd774" translate="yes" xml:space="preserve">
          <source>NPM Scripts</source>
          <target state="translated">NPM脚本</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="2fe190513dc5fb4be8606e06fb2fa0282d381d10" translate="yes" xml:space="preserve">
          <source>Name for the cache. Different names will lead to different coexisting caches. Defaults to &lt;code&gt;${config.name}-${config.mode}&lt;/code&gt;. Using &lt;code&gt;cache.name&lt;/code&gt; makes sense when you have multiple configurations which should have independent caches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab392df02227f5ad3cb6358e14f9a92174d6852" translate="yes" xml:space="preserve">
          <source>Name of global coverage variable</source>
          <target state="translated">全球覆盖率变量的名称</target>
        </trans-unit>
        <trans-unit id="7e1a44922703aaf3623955916847b597113ab53b" translate="yes" xml:space="preserve">
          <source>Name of the config to use</source>
          <target state="translated">要使用的配置名称</target>
        </trans-unit>
        <trans-unit id="b7bf5a539760602c09ecd1bd214b71e58ad411d4" translate="yes" xml:space="preserve">
          <source>Name of the configuration to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30498404f874c12104c3113ab4953a15aad64f2" translate="yes" xml:space="preserve">
          <source>Name of the configuration. Used when loading multiple configurations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a7931127e1910a3873ee4c1d6b374592c79a90" translate="yes" xml:space="preserve">
          <source>Name of the configuration. Used when loading multiple configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d44691a48dbbbf5f47f7a24dd531d771b3f214c" translate="yes" xml:space="preserve">
          <source>Name of the result file. May contain &lt;code&gt;[name]&lt;/code&gt;, &lt;code&gt;[id]&lt;/code&gt; and &lt;code&gt;[contenthash]&lt;/code&gt;</source>
          <target state="translated">结果文件的名称。可能包含 &lt;code&gt;[name]&lt;/code&gt; ， &lt;code&gt;[id]&lt;/code&gt; 和 &lt;code&gt;[contenthash]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="88f2f30ba49708ae97f8d92b8a8a72e7ddff53df" translate="yes" xml:space="preserve">
          <source>Named Exports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7c08c3ab75f37e2da656c1aab228f5f3a793b1" translate="yes" xml:space="preserve">
          <source>Names</source>
          <target state="translated">Names</target>
        </trans-unit>
        <trans-unit id="8b4617b659a51d0b5756991a46730570511eef04" translate="yes" xml:space="preserve">
          <source>Naming</source>
          <target state="translated">Naming</target>
        </trans-unit>
        <trans-unit id="3f00f6db4253d512042a42d232fed179ec641838" translate="yes" xml:space="preserve">
          <source>Need to find up to date examples of these webpack targets being used in live code or boilerplates.</source>
          <target state="translated">需要找到这些webpack目标在实时代码或锅炉模板中使用的最新例子。</target>
        </trans-unit>
        <trans-unit id="d628bf62008786841d73ec8667ca991353d4c476" translate="yes" xml:space="preserve">
          <source>Negated Flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d29c136b7823e0b84ef5144085552dadbb118f" translate="yes" xml:space="preserve">
          <source>Neither &lt;code&gt;import&lt;/code&gt; nor &lt;code&gt;export&lt;/code&gt; is available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b610f173b363c6d397168ae6e235e8c6ca1741" translate="yes" xml:space="preserve">
          <source>Nested rules</source>
          <target state="translated">嵌套规则</target>
        </trans-unit>
        <trans-unit id="9bc81968c8a5c717216ba60c9fa6a03c720c9f2d" translate="yes" xml:space="preserve">
          <source>Nested rules can be specified under the properties &lt;a href=&quot;#rule-rules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#rule-oneof&quot;&gt;&lt;code&gt;oneOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以在属性&lt;a href=&quot;#rule-rules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#rule-oneof&quot;&gt; &lt;code&gt;oneOf&lt;/code&gt; &lt;/a&gt;下指定嵌套规则。</target>
        </trans-unit>
        <trans-unit id="ed50f3cfbdfe9128da4e446fe212a92e3c38ab93" translate="yes" xml:space="preserve">
          <source>Nested rules can be specified under the properties &lt;a href=&quot;#rulerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ruleoneof&quot;&gt;&lt;code&gt;oneOf&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6430e6ba2eca0f752109cbeff222419b7cdd6a00" translate="yes" xml:space="preserve">
          <source>Never provide different APIs or semantics for different conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00907d2f7ec21d6725161c6f37cc92464bd4d1ae" translate="yes" xml:space="preserve">
          <source>New chunk can be shared OR modules are from the &lt;code&gt;node_modules&lt;/code&gt; folder</source>
          <target state="translated">可以共享新块，或者模块来自 &lt;code&gt;node_modules&lt;/code&gt; 文件夹</target>
        </trans-unit>
        <trans-unit id="9f427faf928378120c80ebfa35762eaf54d8aad2" translate="yes" xml:space="preserve">
          <source>New chunk would be bigger than 20kb (before min+gz)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86c73a39bd8e318e6fcb6fcbe6773a9ca427f4e5" translate="yes" xml:space="preserve">
          <source>New chunk would be bigger than 30kb (before min+gz)</source>
          <target state="translated">新块将大于30kb(在min+gz之前)。</target>
        </trans-unit>
        <trans-unit id="571fead9fa6a14ef560201d8a4e1dd845f9c7248" translate="yes" xml:space="preserve">
          <source>New to webpack? Check out our guide to some of webpack's &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;core concepts&lt;/a&gt; to get started!</source>
          <target state="translated">Webpack的新手？查看我们有关webpack &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;核心概念的&lt;/a&gt;指南，以开始使用！</target>
        </trans-unit>
        <trans-unit id="3f170caead65df254d786032a409a6f6d204bca6" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="translated">下一步工作</target>
        </trans-unit>
        <trans-unit id="6a3128d5f090a6c16b2185917486ee462fd298bd" translate="yes" xml:space="preserve">
          <source>Next guide</source>
          <target state="translated">下一个指南</target>
        </trans-unit>
        <trans-unit id="5dc6891fdd39c9b29837e7de49331ca036b6b993" translate="yes" xml:space="preserve">
          <source>Next, install &lt;code&gt;webpack&lt;/code&gt; and &lt;code&gt;webpack-dev-server&lt;/code&gt; in your project;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f0138c6fc828d4afddc3fc8af24ccc31c883b9" translate="yes" xml:space="preserve">
          <source>Next, install webpack and webpack-dev-server in your project;</source>
          <target state="translated">接下来,在你的项目中安装webpack和webpack-dev-server。</target>
        </trans-unit>
        <trans-unit id="4fb574714b149672d840ad6cb312f36fb2ba2fda" translate="yes" xml:space="preserve">
          <source>No CommonJS allowed, for example, you can't use &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;module.exports&lt;/code&gt; or &lt;code&gt;exports&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804c2c8ab9ef0272963f533f9dfd8b2e19c9dd60" translate="yes" xml:space="preserve">
          <source>No Hot Module Replacement</source>
          <target state="translated">无热模块更换</target>
        </trans-unit>
        <trans-unit id="5bc47d91d609ef5c45bef5028203b34749457ba8" translate="yes" xml:space="preserve">
          <source>No additional options required on the &lt;code&gt;postcss-loader&lt;/code&gt; side. To make them work properly, either add the &lt;code&gt;css-loader&lt;/code&gt;&amp;rsquo;s &lt;code&gt;importLoaders&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee59db2039b1fa34759ff51a5830d5e56fce1a5a" translate="yes" xml:space="preserve">
          <source>No devtooling should be included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af837962cb7659664d3ba4b0e86a956a19477f2f" translate="yes" xml:space="preserve">
          <source>No duplicate compilation (performance)</source>
          <target state="translated">无重复编译(性能)</target>
        </trans-unit>
        <trans-unit id="f70b38d79e57a2e98ad3b37d8bff4f55372cb23e" translate="yes" xml:space="preserve">
          <source>No hint warnings or errors are shown.</source>
          <target state="translated">不显示提示警告或错误。</target>
        </trans-unit>
        <trans-unit id="2f7e326b06ee31b812a51e928faca53522e0e814" translate="yes" xml:space="preserve">
          <source>No options for loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8104f56c0ada9376364e684058a3d77044c3bb13" translate="yes" xml:space="preserve">
          <source>No runtime public path modification</source>
          <target state="translated">无运行时公共路径修改</target>
        </trans-unit>
        <trans-unit id="ebc046e475dd358e850aac51c226f01e448c129e" translate="yes" xml:space="preserve">
          <source>NoEmitOnErrorsPlugin</source>
          <target state="translated">NoEmitOnErrorsPlugin</target>
        </trans-unit>
        <trans-unit id="90f576dec2e189b6269427581c1778c8eee5e26c" translate="yes" xml:space="preserve">
          <source>NoErrorsPlugin</source>
          <target state="translated">NoErrorsPlugin</target>
        </trans-unit>
        <trans-unit id="b906849891db9257c38231dc0326e872f2c1954f" translate="yes" xml:space="preserve">
          <source>NoHotModuleReplacementPlugin</source>
          <target state="translated">NoHotModuleReplacementPlugin</target>
        </trans-unit>
        <trans-unit id="260f7a8cd4f6938b3cc185a619847cb83d670219" translate="yes" xml:space="preserve">
          <source>Node</source>
          <target state="translated">Node</target>
        </trans-unit>
        <trans-unit id="b4a14d1c7daa5e3aed6a02f994a61d4a7af7497f" translate="yes" xml:space="preserve">
          <source>Node 10.16.0 and later has &lt;a href=&quot;https://nodejs.org/api/zlib.html#zlib_zlib_createbrotlicompress_options&quot;&gt;native support&lt;/a&gt; for Brotli compression in its zlib module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850fae31c96276a74dcd3f2dd75d52f10ee5355f" translate="yes" xml:space="preserve">
          <source>Node API</source>
          <target state="translated">节点API</target>
        </trans-unit>
        <trans-unit id="d0564fdb4244508c08aeaa8927f1c092e11b3e3d" translate="yes" xml:space="preserve">
          <source>Node Built-Ins</source>
          <target state="translated">节点内置</target>
        </trans-unit>
        <trans-unit id="fd6dab3668cffeb48fcc1d10a52beb549df45fe7" translate="yes" xml:space="preserve">
          <source>Node Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e630bed791b33794053f86df1a1211214699df" translate="yes" xml:space="preserve">
          <source>Node built-ins, like &lt;code&gt;process&lt;/code&gt;, can be polyfilled right directly from your configuration file without the use of any special loaders or plugins. See the &lt;a href=&quot;../configuration/node&quot;&gt;node configuration page&lt;/a&gt; for more information and examples.</source>
          <target state="translated">可以直接从配置文件中直接填充Node内置程序（例如 &lt;code&gt;process&lt;/code&gt; )，而无需使用任何特殊的加载程序或插件。有关更多信息和示例，请参见&lt;a href=&quot;../configuration/node&quot;&gt;节点配置页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc6ce541a53b0a46f3bd7b6f35f64b0c4a5a02ed" translate="yes" xml:space="preserve">
          <source>Node-Zopfli plugin for Webpack.</source>
          <target state="translated">Webpack的Node-Zopfli插件。</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="8b8214b8e226c143da7ac208d7ccfff6ed28e492" translate="yes" xml:space="preserve">
          <source>Node.js API</source>
          <target state="translated">Node.js API</target>
        </trans-unit>
        <trans-unit id="87071e07a65768f326680b05ba31e7a4f6cc3cf6" translate="yes" xml:space="preserve">
          <source>Node.js API: stats.hasErrors()</source>
          <target state="translated">Node.js API:stats.hasErrors()</target>
        </trans-unit>
        <trans-unit id="a6f76c4d171ff100d2d8598052b88a576d19f91e" translate="yes" xml:space="preserve">
          <source>Node.js API: stats.hasWarnings()</source>
          <target state="translated">Node.js API:stats.hasWarnings()</target>
        </trans-unit>
        <trans-unit id="874db793cb9663801ec056096724681c755baa5d" translate="yes" xml:space="preserve">
          <source>Node.js API: stats.toJson()</source>
          <target state="translated">Node.js API:stats.toJson()</target>
        </trans-unit>
        <trans-unit id="e82fa7cdc3d0c984d0e77dd15e9c0a25db6f0303" translate="yes" xml:space="preserve">
          <source>Node.js API: stats.toString()</source>
          <target state="translated">Node.js API:stats.toString()</target>
        </trans-unit>
        <trans-unit id="33337a2400bf85cb9c9403498611758b81bc19d8" translate="yes" xml:space="preserve">
          <source>Node.js API: webpack()</source>
          <target state="translated">Node.js API:webpack()</target>
        </trans-unit>
        <trans-unit id="0dc2614c3f82904fc30cf2ab7f01d80f39e0a4f3" translate="yes" xml:space="preserve">
          <source>Node.js Version</source>
          <target state="translated">Node.js版本</target>
        </trans-unit>
        <trans-unit id="3ec4ba3870817026eeb522fa388342c010a965a8" translate="yes" xml:space="preserve">
          <source>Node.js Versions 8.9.10-9.11.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc83b71e88de4ff5f1440e6fa73b94999dbaddc0" translate="yes" xml:space="preserve">
          <source>Node.js allows to detection production/development mode at runtime via &lt;code&gt;process.env.NODE_ENV&lt;/code&gt;, so we use that as fallback in Node.js. Sync conditional importing ESM is not possible and we don't want to load the package twice, so we have to use CommonJs for the runtime detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef636983e0aece722046e6acc0075f8581f6b03" translate="yes" xml:space="preserve">
          <source>Node.js established a way of explicitly setting the module type of files by using a property in the &lt;code&gt;package.json&lt;/code&gt;. Setting &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; in a package.json does force all files below this package.json to be ECMAScript Modules. Setting &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt; will instead force them to be CommonJS Modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6e57f0637f7555f24bbcac81965e8f1f7ed333" translate="yes" xml:space="preserve">
          <source>Node.js has supported modular programming almost since its inception. On the web, however, support for &lt;em&gt;modules&lt;/em&gt; has been slow to arrive. Multiple tools exist that support modular JavaScript on the web, with a variety of benefits and limitations. webpack builds on lessons learned from these systems and applies the concept of &lt;em&gt;modules&lt;/em&gt; to any file in your project.</source>
          <target state="translated">自其诞生以来，Node.js就一直支持模块化编程。但是，在Web上，对&lt;em&gt;模块的&lt;/em&gt;支持一直很缓慢。存在多种支持Web上的模块化JavaScript的工具，具有各种优点和局限性。webpack基于从这些系统中汲取的经验教训，并将&lt;em&gt;模块&lt;/em&gt;的概念应用于项目中的任何文件。</target>
        </trans-unit>
        <trans-unit id="6ae2e38b7821fa717a5aa645014a1bdf10f0f239" translate="yes" xml:space="preserve">
          <source>NodeEnvironmentPlugin</source>
          <target state="translated">NodeEnvironmentPlugin</target>
        </trans-unit>
        <trans-unit id="92be2ff0932240f7b34b5c49458059cf598eee7c" translate="yes" xml:space="preserve">
          <source>NodeSourcePlugin</source>
          <target state="translated">NodeSourcePlugin</target>
        </trans-unit>
        <trans-unit id="ae8bec24f2ee247b94044a1b6ff74699e6f4b135" translate="yes" xml:space="preserve">
          <source>NodeStuffPlugin</source>
          <target state="translated">NodeStuffPlugin</target>
        </trans-unit>
        <trans-unit id="214d0b567fb66dc03b30346846a5d3c25f4e31d5" translate="yes" xml:space="preserve">
          <source>NodeTargetPlugin</source>
          <target state="translated">NodeTargetPlugin</target>
        </trans-unit>
        <trans-unit id="482965fe4f0c4859d2f2dd3cb272dae043c9b49e" translate="yes" xml:space="preserve">
          <source>NodeTemplatePlugin</source>
          <target state="translated">NodeTemplatePlugin</target>
        </trans-unit>
        <trans-unit id="e3ae200166946e46ecee5a2f3114865f5816a047" translate="yes" xml:space="preserve">
          <source>Non ES6 Module</source>
          <target state="translated">非ES6模块</target>
        </trans-unit>
        <trans-unit id="fe020d9d97d984e56393ffb459e021eef78bf161" translate="yes" xml:space="preserve">
          <source>Non-Less imports</source>
          <target state="translated">非低价进口</target>
        </trans-unit>
        <trans-unit id="8bce85a3e5089506190e145b0d61abbc0b7f3d4b" translate="yes" xml:space="preserve">
          <source>Non-initial chunk for &lt;code&gt;./app.jsx&lt;/code&gt; is created as this module is imported dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aed2d569b849133740d313dce09008039ab6a8c" translate="yes" xml:space="preserve">
          <source>Nonce</source>
          <target state="translated">Nonce</target>
        </trans-unit>
        <trans-unit id="d82cb533541568577c64f151d64e056c75d3d6c2" translate="yes" xml:space="preserve">
          <source>Nonce purpose explained</source>
          <target state="translated">Nonce目的解释</target>
        </trans-unit>
        <trans-unit id="5278c6a3d91b0458bd2785a13d8f492582e05b86" translate="yes" xml:space="preserve">
          <source>Normal chunks will show up using the &lt;code&gt;filename&lt;/code&gt; rule above, and be named according to their &lt;code&gt;[chunkname]&lt;/code&gt;.</source>
          <target state="translated">普通块将使用上述 &lt;code&gt;filename&lt;/code&gt; 规则显示，并根据其 &lt;code&gt;[chunkname]&lt;/code&gt; 命名。</target>
        </trans-unit>
        <trans-unit id="c0f303fa1b9d5e7c7d2af3d5f3bff064547caca1" translate="yes" xml:space="preserve">
          <source>Normal modules can export a loader in addition to the normal &lt;code&gt;main&lt;/code&gt; via &lt;code&gt;package.json&lt;/code&gt; with the &lt;code&gt;loader&lt;/code&gt; field.</source>
          <target state="translated">普通模块除了可以通过具有 &lt;code&gt;loader&lt;/code&gt; 字段的 &lt;code&gt;package.json&lt;/code&gt; 导出普通 &lt;code&gt;main&lt;/code&gt; 模块之外，还可以导出一个加载器。</target>
        </trans-unit>
        <trans-unit id="a02711b68e878a39c755e6da3bdbef4c42dab125" translate="yes" xml:space="preserve">
          <source>Normal usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529562fc788c0037cdc4dd136b538f9ce9051cf6" translate="yes" xml:space="preserve">
          <source>Normal: Resolves a module via an absolute or relative path.</source>
          <target state="translated">正常情况下,通过绝对路径或相对路径解决模块。通过绝对或相对路径解决模块问题。</target>
        </trans-unit>
        <trans-unit id="30d60585216ded2742f1b02ef32a4dcc96ad433d" translate="yes" xml:space="preserve">
          <source>NormalModuleReplacementPlugin</source>
          <target state="translated">NormalModuleReplacementPlugin</target>
        </trans-unit>
        <trans-unit id="bab4f507bbd881c8083bf7220fcbee50da827017" translate="yes" xml:space="preserve">
          <source>Not Enough Watchers</source>
          <target state="translated">守望者不足</target>
        </trans-unit>
        <trans-unit id="6b3ddc8a018382c58e740f7711bcae204d99c659" translate="yes" xml:space="preserve">
          <source>Not all Polymer Elements have been written to execute as a module and will require changes to work with webpack. The most common issue encountered is because modules do not execute in the global scope. Variables, functions and classes will no longer be global unless they are declared as properties on the global object (window).</source>
          <target state="translated">并非所有的聚合元素都被写成模块来执行,因此需要进行修改才能与webpack一起工作。最常遇到的问题是由于模块不在全局范围内执行。变量、函数和类将不再是全局的,除非它们被声明为全局对象(窗口)上的属性。</target>
        </trans-unit>
        <trans-unit id="f2b61a928a512aa3a0276491deb88494572fe8ff" translate="yes" xml:space="preserve">
          <source>Not all conditions are supported by every tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca4b4364fc0e61ca1656e48b898704fd88e6450" translate="yes" xml:space="preserve">
          <source>Not all targets may be mixed for now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39be7ae447e29d59682d504af836c0434c9219cc" translate="yes" xml:space="preserve">
          <source>Not every Node global supports all four options. The compiler will throw an error for property-value combinations that aren't supported (e.g. &lt;code&gt;process: 'empty'&lt;/code&gt;). See the sections below for more details.</source>
          <target state="translated">并非每个节点全局都支持所有四个选项。对于不支持的属性值组合，编译器将引发错误（例如， &lt;code&gt;process: 'empty'&lt;/code&gt; ）。有关更多详细信息，请参见以下各节。</target>
        </trans-unit>
        <trans-unit id="2542658903eae3c6e87f29e552acca72278034cf" translate="yes" xml:space="preserve">
          <source>Not specifying the environment variable raises an &quot;&lt;code&gt;EnvironmentPlugin&lt;/code&gt; - &lt;code&gt;${key}&lt;/code&gt; environment variable is undefined&quot; error.</source>
          <target state="translated">不指定环境变量提出了一个&amp;ldquo; &lt;code&gt;EnvironmentPlugin&lt;/code&gt; - &lt;code&gt;${key}&lt;/code&gt; 环境变量未定义&amp;rdquo;错误。</target>
        </trans-unit>
        <trans-unit id="0cd6c671c0517610d3e84d57d2e0d74543efa362" translate="yes" xml:space="preserve">
          <source>Note : ProfilingPlugin accepts only absolute paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911a457fc9400f3750248193688794b3e8af4fbc" translate="yes" xml:space="preserve">
          <source>Note about source maps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b016b01d592034dd8180ce9e0be296e560a090d" translate="yes" xml:space="preserve">
          <source>Note by default an empty string is used. Using some kind of indentation makes bundles look more pretty, but will cause issues with multi-line strings.</source>
          <target state="translated">请注意,默认情况下使用的是一个空字符串。使用某种缩进使捆绑看起来更漂亮,但会导致多行字符串的问题。</target>
        </trans-unit>
        <trans-unit id="816ed993175a9247db3da6d37bfd0f132460717a" translate="yes" xml:space="preserve">
          <source>Note it also adds some info about tree shaking to the generated bundle.</source>
          <target state="translated">请注意,它还在生成的捆绑中添加了一些关于树形摇动的信息。</target>
        </trans-unit>
        <trans-unit id="5348decbdcdd082d9f7035794934fd43b2a59d8f" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;../plugins/hot-module-replacement-plugin&quot;&gt;&lt;code&gt;webpack.HotModuleReplacementPlugin&lt;/code&gt;&lt;/a&gt; is required to fully enable HMR. If &lt;code&gt;webpack&lt;/code&gt; or &lt;code&gt;webpack-dev-server&lt;/code&gt; are launched with the &lt;code&gt;--hot&lt;/code&gt; option, this plugin will be added automatically, so you may not need to add this to your &lt;code&gt;webpack.config.js&lt;/code&gt;. See the &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;HMR concepts page&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d04f5026f8ef24badc822ccbb529920b2478349" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;[fullhash]&lt;/code&gt; in this parameter will be replaced with a hash of the compilation. See the &lt;a href=&quot;../guides/caching&quot;&gt;Caching guide&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266f9b4b866d55f38dde035b7cb3e007584f2195" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;[hash]&lt;/code&gt; in this parameter will be replaced with an hash of the compilation. See the &lt;a href=&quot;../guides/caching&quot;&gt;Caching guide&lt;/a&gt; for details.</source>
          <target state="translated">请注意，此参数中的 &lt;code&gt;[hash]&lt;/code&gt; 将被编译的哈希替换。有关详细信息，请参见&lt;a href=&quot;../guides/caching&quot;&gt;缓存指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="075d3a49ae8cc897a9efe3ca7c3363f471f32789" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;_entry_return_&lt;/code&gt; in the example code below is the value returned by the entry point. In the bundle itself, it is the output of the function that is generated by webpack from the entry point.</source>
          <target state="translated">请注意，以下示例代码中的 &lt;code&gt;_entry_return_&lt;/code&gt; 是入口点返回的值。在包本身中，是webpack从入口点生成的函数的输出。</target>
        </trans-unit>
        <trans-unit id="3a4dfa2d5d308b8872b7d3f96a487ce35091157b" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;output.library&lt;/code&gt; is omitted, thus it is not required for this particular &lt;code&gt;output.libraryTarget&lt;/code&gt;.</source>
          <target state="translated">请注意，省略了 &lt;code&gt;output.library&lt;/code&gt; ，因此此特定 &lt;code&gt;output.libraryTarget&lt;/code&gt; 不需要此属性。</target>
        </trans-unit>
        <trans-unit id="b2751d556c9a4a5d365a752d826f29d001305698" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;webpack.HotModuleReplacementPlugin&lt;/code&gt; is required to fully enable HMR. If &lt;code&gt;webpack&lt;/code&gt; or &lt;code&gt;webpack-dev-server&lt;/code&gt; are launched with the &lt;code&gt;--hot&lt;/code&gt; option, this plugin will be added automatically, so you may not need to add this to your &lt;code&gt;webpack.config.js&lt;/code&gt;. See the &lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;HMR concepts page&lt;/a&gt; for more information.</source>
          <target state="translated">请注意，要完全启用HMR，需要 &lt;code&gt;webpack.HotModuleReplacementPlugin&lt;/code&gt; 。如果使用 &lt;code&gt;--hot&lt;/code&gt; 选项启动 &lt;code&gt;webpack&lt;/code&gt; 或 &lt;code&gt;webpack-dev-server&lt;/code&gt; ，则该插件将自动添加，因此您可能不需要将其添加到 &lt;code&gt;webpack.config.js&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;../concepts/hot-module-replacement&quot;&gt;HMR概念页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="915a95fc0fbd9c8b3fb4c3076e9abfaa2b5a683f" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;webpackInclude&lt;/code&gt; and &lt;code&gt;webpackExclude&lt;/code&gt; options do not interfere with the prefix. eg: &lt;code&gt;./locale&lt;/code&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;webpackInclude&lt;/code&gt; 和 &lt;code&gt;webpackExclude&lt;/code&gt; 选项不会干扰前缀。例如： &lt;code&gt;./locale&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d953943d6a687c6fbf1a1eea53cff9f3c84432f" translate="yes" xml:space="preserve">
          <source>Note that Command Line Interface has a higher precedence for the arguments you use it with than your configuration file. For instance, if you pass &lt;a href=&quot;../concepts/mode#usage&quot;&gt;&lt;code&gt;--mode=&quot;production&quot;&lt;/code&gt;&lt;/a&gt; to webpack CLI and your configuration file uses &lt;code&gt;development&lt;/code&gt;, &lt;code&gt;production&lt;/code&gt; will be used.</source>
          <target state="translated">请注意，与配置文件一起使用时，命令行界面的参数优先级更高。例如，如果您将&lt;a href=&quot;../concepts/mode#usage&quot;&gt; &lt;code&gt;--mode=&quot;production&quot;&lt;/code&gt; &lt;/a&gt;传递到webpack CLI，并且您的配置文件使用 &lt;code&gt;development&lt;/code&gt; ，那么将使用 &lt;code&gt;production&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc9c9d131a05f2c747800a9a466f5ba3ec68013b" translate="yes" xml:space="preserve">
          <source>Note that Command Line Interface has a higher precedence for the arguments you use it with than your configuration file. For instance, if you pass &lt;a href=&quot;../configuration/mode#usage&quot;&gt;&lt;code&gt;--mode=&quot;production&quot;&lt;/code&gt;&lt;/a&gt; to webpack CLI and your configuration file uses &lt;code&gt;development&lt;/code&gt;, &lt;code&gt;production&lt;/code&gt; will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa4ec7484f1ea4b5661c878af3565f393a16583" translate="yes" xml:space="preserve">
          <source>Note that all options can be combined like so &lt;code&gt;/* webpackMode: &quot;lazy-once&quot;, webpackChunkName: &quot;all-i18n-data&quot; */&lt;/code&gt;. This is wrapped in a JavaScript object and executed using &lt;a href=&quot;https://nodejs.org/dist/latest-v8.x/docs/api/vm.html&quot;&gt;node VM&lt;/a&gt;. You do not need to add curly brackets.</source>
          <target state="translated">请注意，所有选项都可以像这样组合 &lt;code&gt;/* webpackMode: &quot;lazy-once&quot;, webpackChunkName: &quot;all-i18n-data&quot; */&lt;/code&gt; 。它包装在JavaScript对象中，并使用&lt;a href=&quot;https://nodejs.org/dist/latest-v8.x/docs/api/vm.html&quot;&gt;节点VM&lt;/a&gt;执行。您不需要添加大括号。</target>
        </trans-unit>
        <trans-unit id="b0050ffdb59952b6db4588c5188bd976451ec071" translate="yes" xml:space="preserve">
          <source>Note that although this file is generated by the compiler, you may still want to track it in source control to keep a history of how it has changed over time.</source>
          <target state="translated">请注意,虽然这个文件是由编译器生成的,但你可能仍然想在源码控制中跟踪它,以保存它随时间变化的历史。</target>
        </trans-unit>
        <trans-unit id="787d6f4b802d53736bc69bf773d6877de85b0cf4" translate="yes" xml:space="preserve">
          <source>Note that any imported file is subject to tree shaking. This means if you use something like &lt;code&gt;css-loader&lt;/code&gt; in your project and import a CSS file, it needs to be added to the side effect list so it will not be unintentionally dropped in production mode:</source>
          <target state="translated">请注意，任何导入的文件都容易摇晃。这意味着，如果您在项目中使用 &lt;code&gt;css-loader&lt;/code&gt; 之类的东西并导入CSS文件，则需要将其添加到副作用列表中，这样就不会在生产模式中无意中将其删除：</target>
        </trans-unit>
        <trans-unit id="06e104e93b785ab965e90cd350cfdd1b4f52a187" translate="yes" xml:space="preserve">
          <source>Note that because the plugin does a direct text replacement, the value given to it must include &lt;strong&gt;actual quotes&lt;/strong&gt; inside of the string itself. Typically, this is done either with alternate quotes, such as &lt;code&gt;'&quot;production&quot;'&lt;/code&gt;, or by using &lt;code&gt;JSON.stringify('production')&lt;/code&gt;.</source>
          <target state="translated">请注意，由于该插件会直接替换文本，因此为其提供的值必须在字符串本身内部包含&lt;strong&gt;实际引号&lt;/strong&gt;。通常，这可以通过使用引号（例如 &lt;code&gt;'&quot;production&quot;'&lt;/code&gt; ）或使用 &lt;code&gt;JSON.stringify('production')&lt;/code&gt; 来完成。</target>
        </trans-unit>
        <trans-unit id="9d5265cc3c589b3157b3c19cac6f7b25593a489a" translate="yes" xml:space="preserve">
          <source>Note that despite using &lt;code&gt;&quot;type&quot;: &quot;module&quot;&lt;/code&gt; and &lt;code&gt;.js&lt;/code&gt; for &lt;code&gt;dist-bundle.js&lt;/code&gt; this file is not in ESM format. It should use globals to allow direct consumption as script tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687fb3498eb11cbb7e0017e0f0c3c4492e599d18" translate="yes" xml:space="preserve">
          <source>Note that here stateless also means class instances are not tested with &lt;code&gt;instanceof&lt;/code&gt; as there can be two different classes because of the double module instantiation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ad380c7a6cb3c537de672fb7c99cd763c00a14" translate="yes" xml:space="preserve">
          <source>Note that if an &lt;code&gt;array&lt;/code&gt; is provided as an &lt;code&gt;entry&lt;/code&gt; point, only the last module in the array will be exposed. If an &lt;code&gt;object&lt;/code&gt; is provided, it can be exposed using an &lt;code&gt;array&lt;/code&gt; syntax (see &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/multi-part-library&quot;&gt;this example&lt;/a&gt; for details).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe54629278d6a0f3443a9d602ec6d824b446247f" translate="yes" xml:space="preserve">
          <source>Note that if an &lt;code&gt;array&lt;/code&gt; is provided as an &lt;code&gt;entry&lt;/code&gt; point, only the last module in the array will be exposed. If an &lt;code&gt;object&lt;/code&gt; is provided, it can exposed using an &lt;code&gt;array&lt;/code&gt; syntax (see &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/multi-part-library&quot;&gt;this example&lt;/a&gt; for details).</source>
          <target state="translated">请注意，如果将 &lt;code&gt;array&lt;/code&gt; 作为 &lt;code&gt;entry&lt;/code&gt; 点提供，则仅公开数组中的最后一个模块。如果提供了一个 &lt;code&gt;object&lt;/code&gt; ，则可以使用 &lt;code&gt;array&lt;/code&gt; 语法公开它（有关详细信息，请参见此&lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/multi-part-library&quot;&gt;示例&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9bc846aff25b011d48d8282943be738f9a4f3c73" translate="yes" xml:space="preserve">
          <source>Note that if you only plan on using your library as a dependency in another webpack bundle, you may specify &lt;code&gt;externals&lt;/code&gt; as an array.</source>
          <target state="translated">请注意，如果仅打算将库用作另一个Webpack捆绑包中的依赖项，则可以将 &lt;code&gt;externals&lt;/code&gt; 指定为数组。</target>
        </trans-unit>
        <trans-unit id="3f5ec0016aae345af6536a3352f24fac7175c53c" translate="yes" xml:space="preserve">
          <source>Note that if you're already using &lt;a href=&quot;https://github.com/babel/babel-loader&quot;&gt;&lt;code&gt;babel-loader&lt;/code&gt;&lt;/a&gt; to transpile your code, you can use &lt;a href=&quot;https://babeljs.io/docs/en/babel-preset-typescript&quot;&gt;&lt;code&gt;@babel/preset-typescript&lt;/code&gt;&lt;/a&gt; and let Babel handle both your JavaScript and TypeScript files instead of using an additional loader. Keep in mind that, contrary to &lt;code&gt;ts-loader&lt;/code&gt;, the underlying &lt;a href=&quot;https://babeljs.io/docs/en/babel-plugin-transform-typescript&quot;&gt;&lt;code&gt;@babel/plugin-transform-typescript&lt;/code&gt;&lt;/a&gt; plugin does not perform any type checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="384028427db3cca31497bce1f23e06ed1825ba0b" translate="yes" xml:space="preserve">
          <source>Note that it is recommended to use an absolute path.</source>
          <target state="translated">注意,建议使用绝对路径。</target>
        </trans-unit>
        <trans-unit id="acbd7f974dd59e0ac2d3984303cbc4896a08b113" translate="yes" xml:space="preserve">
          <source>Note that not setting a &lt;code&gt;output.library&lt;/code&gt; will cause all properties returned by the entry point to be assigned to the given object; there are no checks against existing property names.</source>
          <target state="translated">注意，不设置 &lt;code&gt;output.library&lt;/code&gt; 将导致入口点返回的所有属性都分配给给定对象。没有针对现有属性名称的检查。</target>
        </trans-unit>
        <trans-unit id="ddf01da2392ef523caf78b978f951fa469ae26c8" translate="yes" xml:space="preserve">
          <source>Note that omitting &lt;code&gt;library&lt;/code&gt; will result in the assignment of all properties returned by the entry point be assigned directly to the root object, as documented under the &lt;a href=&quot;#expose-via-object-assignment&quot;&gt;object assignment section&lt;/a&gt;. Example:</source>
          <target state="translated">请注意，省略 &lt;code&gt;library&lt;/code&gt; 将导致将由入口点返回的所有属性的分配直接分配给根对象，如&lt;a href=&quot;#expose-via-object-assignment&quot;&gt;对象分配部分所述&lt;/a&gt;。例：</target>
        </trans-unit>
        <trans-unit id="964b8eced835f538755eef4e98f31c85af24a90e" translate="yes" xml:space="preserve">
          <source>Note that only a subset of compiler and compilation hooks support the &lt;code&gt;reportProgress&lt;/code&gt; function. See &lt;a href=&quot;../plugins/progress-plugin#supported-hooks&quot;&gt;&lt;code&gt;ProgressPlugin&lt;/code&gt;&lt;/a&gt; for a full list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="758cffe442417bb62cf8f39d175f12055742e81e" translate="yes" xml:space="preserve">
          <source>Note that requests to root won't be proxied by default. To enable root proxying, the &lt;code&gt;devServer.index&lt;/code&gt; option should be specified as a falsy value:</source>
          <target state="translated">请注意，默认情况下不会代理对root的请求。要启用根代理， &lt;code&gt;devServer.index&lt;/code&gt; 选项指定为伪造值：</target>
        </trans-unit>
        <trans-unit id="78636c2679b019eade6f5fbc4307de1f1a9ea4fc" translate="yes" xml:space="preserve">
          <source>Note that setting &lt;code&gt;webpackIgnore&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; opts out of code splitting.</source>
          <target state="translated">请注意，将 &lt;code&gt;webpackIgnore&lt;/code&gt; 设置为 &lt;code&gt;true&lt;/code&gt; 会选择退出代码拆分。</target>
        </trans-unit>
        <trans-unit id="8b6a69d7db5fe1c39fda06afa060931402ec1168" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;--optimize-minimize&lt;/code&gt; flag can be used to enable &lt;code&gt;TerserPlugin&lt;/code&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a15fafa9795ad7cbd7426a60e87bb18e9f648b1" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;--optimize-minimize&lt;/code&gt; flag can be used to enable &lt;code&gt;UglifyJSPlugin&lt;/code&gt; as well.</source>
          <target state="translated">请注意，-- &lt;code&gt;--optimize-minimize&lt;/code&gt; 标志也可以用于启用 &lt;code&gt;UglifyJSPlugin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f978b09c59db24f0fbd2c8a00e53b80cf02654e1" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;library&lt;/code&gt; setup is tied to the &lt;code&gt;entry&lt;/code&gt; configuration. For most libraries, specifying a single entry point is sufficient. While &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/multi-part-library&quot;&gt;multi-part libraries&lt;/a&gt; are possible, it is simpler to expose partial exports through an &lt;a href=&quot;https://stackoverflow.com/questions/34072598/es6-exporting-importing-in-index-file&quot;&gt;index script&lt;/a&gt; that serves as a single entry point. Using an &lt;code&gt;array&lt;/code&gt; as an &lt;code&gt;entry&lt;/code&gt; point for a library is &lt;strong&gt;not recommended&lt;/strong&gt;.</source>
          <target state="translated">请注意， &lt;code&gt;library&lt;/code&gt; 设置与 &lt;code&gt;entry&lt;/code&gt; 配置有关。对于大多数库而言，指定一个入口点就足够了。尽管可以使用&lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/multi-part-library&quot;&gt;多部分库&lt;/a&gt;，但通过用作单个入口点的&lt;a href=&quot;https://stackoverflow.com/questions/34072598/es6-exporting-importing-in-index-file&quot;&gt;索引脚本&lt;/a&gt;公开部分导出更为简单。&lt;strong&gt;不建议&lt;/strong&gt;将 &lt;code&gt;array&lt;/code&gt; 用作库的 &lt;code&gt;entry&lt;/code&gt; 点。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17e86feb079de3a67809220e7c21e0e2f6d008c4" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;resolve&lt;/code&gt; configuration affects the &lt;code&gt;normal&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt; resolvers while &lt;code&gt;resolveLoader&lt;/code&gt; is used to modify the &lt;code&gt;loader&lt;/code&gt; resolver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8509cd543cc9b56264081c691f816da113399cd5" translate="yes" xml:space="preserve">
          <source>Note that the ability to &lt;code&gt;import&lt;/code&gt; any type of module, e.g. &lt;code&gt;.css&lt;/code&gt; files, is a feature specific to webpack and may not be supported by other bundlers or task runners. We feel this extension of the language is warranted as it allows developers to build a more accurate dependency graph.</source>
          <target state="translated">请注意， &lt;code&gt;import&lt;/code&gt; 任何类型的模块（例如 &lt;code&gt;.css&lt;/code&gt; 文件）的功能是Webpack特有的功能，其他捆绑程序或任务运行程序可能不支持。我们认为这种语言的扩展是必要的，因为它允许开发人员构建更准确的依赖关系图。</target>
        </trans-unit>
        <trans-unit id="7d09f710d5ae467255e57b13aa1d28e2ae25c40c" translate="yes" xml:space="preserve">
          <source>Note that the config option you provide will be passed to the &lt;code&gt;CLIEngine&lt;/code&gt;. This is a different set of options than what you'd specify in &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;.eslintrc&lt;/code&gt;. See the &lt;a href=&quot;http://eslint.org/docs/developer-guide/nodejs-api#cliengine&quot;&gt;eslint docs&lt;/a&gt; for more detail.</source>
          <target state="translated">请注意，您提供的config选项将传递给 &lt;code&gt;CLIEngine&lt;/code&gt; 。这是一组与您在 &lt;code&gt;package.json&lt;/code&gt; 或 &lt;code&gt;.eslintrc&lt;/code&gt; 中指定的选项不同的选项。有关更多详细信息，请参见&lt;a href=&quot;http://eslint.org/docs/developer-guide/nodejs-api#cliengine&quot;&gt;eslint文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ea543a863e4925495bec6bac2009be9c41d9dd6" translate="yes" xml:space="preserve">
          <source>Note that the config option you provide will be passed to the &lt;code&gt;ESLint&lt;/code&gt; class. This is a different set of options than what you'd specify in &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;.eslintrc&lt;/code&gt;. See the &lt;a href=&quot;https://eslint.org/docs/developer-guide/nodejs-api#%e2%97%86-new-eslint-options&quot;&gt;eslint docs&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72a508ec6140fd1f1933aef1975aff818954974" translate="yes" xml:space="preserve">
          <source>Note that the make event triggers when webpack starts and for every invalidation when &lt;a href=&quot;watch&quot;&gt;watching for file changes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4fcf0e4d243e20240d785c75d914ebd0b52f6c" translate="yes" xml:space="preserve">
          <source>Note that the stack traces are removed when &lt;code&gt;errorDetails: false&lt;/code&gt; is passed to the &lt;code&gt;toJson&lt;/code&gt; method. The &lt;code&gt;errorDetails&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">请注意，当将 &lt;code&gt;errorDetails: false&lt;/code&gt; 传递给 &lt;code&gt;toJson&lt;/code&gt; 方法时，将删除堆栈跟踪。默认情况下， &lt;code&gt;errorDetails&lt;/code&gt; 选项设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="abeb24c631d05b8d431bdd08e14e4b71085e0102" translate="yes" xml:space="preserve">
          <source>Note that the stack traces are removed when &lt;code&gt;errorStack: false&lt;/code&gt; is passed to the &lt;code&gt;toJson&lt;/code&gt; method. The &lt;code&gt;errorStack&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717ed114bc2f03d33bdd35dbdd4283add55cbeb7" translate="yes" xml:space="preserve">
          <source>Note that the warnings will not be displayed if &lt;code&gt;stats.warnings&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, or some other omit setting is used to &lt;code&gt;stats&lt;/code&gt; such as &lt;code&gt;none&lt;/code&gt; or &lt;code&gt;errors-only&lt;/code&gt;. See the &lt;a href=&quot;../configuration/stats#stats-presets&quot;&gt;stats presets configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f24bd96d4a78ed4ce05d1f924ac60175d349ab" translate="yes" xml:space="preserve">
          <source>Note that these filenames need to be generated at runtime to send the requests for chunks. Because of this, placeholders like &lt;code&gt;[name]&lt;/code&gt; and &lt;code&gt;[chunkhash]&lt;/code&gt; need to add a mapping from chunk id to placeholder value to the output bundle with the webpack runtime. This increases the size and may invalidate the bundle when placeholder value for any chunk changes.</source>
          <target state="translated">请注意，需要在运行时生成这些文件名，以发送对块的请求。因此，需要使用webpack运行时将 &lt;code&gt;[name]&lt;/code&gt; 和 &lt;code&gt;[chunkhash]&lt;/code&gt; 之类的占位符添加从块ID到占位符值的映射到输出包。这会增加大小，并且在更改任何块的占位符值时可能会使捆绑软件无效。</target>
        </trans-unit>
        <trans-unit id="df034a14f13d952f15a4f3e1f3651a904e26f33a" translate="yes" xml:space="preserve">
          <source>Note that this approach prioritizes correctness over bundle size. To be safe and robust, polyfills/shims must run &lt;strong&gt;before all other code&lt;/strong&gt;, and thus either need to load synchronously, or, all app code needs to load after all polyfills/shims load. There are many misconceptions in the community, as well, that modern browsers &quot;don't need&quot; polyfills, or that polyfills/shims merely serve to add missing features - in fact, they often &lt;em&gt;repair broken implementations&lt;/em&gt;, even in the most modern of browsers. The best practice thus remains to unconditionally and synchronously load all polyfills/shims, despite the bundle size cost this incurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2309d88dad882bc95da6b400b819c84331ed3a" translate="yes" xml:space="preserve">
          <source>Note that this is &lt;strong&gt;not a recommended practice&lt;/strong&gt;. Installing globally locks you down to a specific version of webpack and could fail in projects that use a different version.</source>
          <target state="translated">请注意，这&lt;strong&gt;不是推荐的做法&lt;/strong&gt;。全局安装会限制您使用特定版本的webpack，并且在使用其他版本的项目中可能会失败。</target>
        </trans-unit>
        <trans-unit id="066dbb2e1b71f7da4fb144c41f6b93050ac49a40" translate="yes" xml:space="preserve">
          <source>Note that this is what &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;webpack-dev-middleware&lt;/a&gt;, used by &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and many other packages, uses to mysteriously hide your files but continue serving them up to the browser!</source>
          <target state="translated">请注意，这是&lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;和许多其他软件包使用的&lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;webpack-dev-middleware&lt;/a&gt;用来神秘地隐藏文件，但继续将其提供给浏览器！</target>
        </trans-unit>
        <trans-unit id="0b4874e35211a1b1d3deb29114f373ba89f2f4f9" translate="yes" xml:space="preserve">
          <source>Note that we &lt;strong&gt;did not &lt;code&gt;import&lt;/code&gt; the &lt;code&gt;square&lt;/code&gt; method&lt;/strong&gt; from the &lt;code&gt;src/math.js&lt;/code&gt; module. That function is what's known as &quot;dead code&quot;, meaning an unused &lt;code&gt;export&lt;/code&gt; that should be dropped. Now let's run our npm script, &lt;code&gt;npm run build&lt;/code&gt;, and inspect the output bundle:</source>
          <target state="translated">需要注意的是，我们&lt;strong&gt;并没有 &lt;code&gt;import&lt;/code&gt; 的 &lt;code&gt;square&lt;/code&gt; 方法&lt;/strong&gt;从 &lt;code&gt;src/math.js&lt;/code&gt; 模块。该功能就是所谓的&amp;ldquo;死代码&amp;rdquo;，意味着应该删除未使用的 &lt;code&gt;export&lt;/code&gt; 。现在让我们运行npm脚本， &lt;code&gt;npm run build&lt;/code&gt; ，并检查输出包：</target>
        </trans-unit>
        <trans-unit id="815a010a6890c7fb0bb273198983260098b36578" translate="yes" xml:space="preserve">
          <source>Note that we aren't binding the &lt;code&gt;import&lt;/code&gt; to a variable. This is because polyfills simply run on their own, prior to the rest of the code base, allowing us to then assume certain native functionality exists.</source>
          <target state="translated">请注意，我们没有将 &lt;code&gt;import&lt;/code&gt; 绑定到变量。这是因为polyfill只是在其余代码库之前单独运行，因此我们可以假定存在某些本机功能。</target>
        </trans-unit>
        <trans-unit id="08c14f96276e39f6955bc4d3255fd1a5b89cc829" translate="yes" xml:space="preserve">
          <source>Note that we can also configure it to expose the library in the following ways:</source>
          <target state="translated">需要注意的是,我们还可以通过以下方式配置它来暴露库。</target>
        </trans-unit>
        <trans-unit id="c2cf40e81d1e5cda60a908f6f5fa124c8461d158" translate="yes" xml:space="preserve">
          <source>Note that webpack ignores the &lt;code&gt;name&lt;/code&gt; argument.</source>
          <target state="translated">请注意，webpack会忽略 &lt;code&gt;name&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="ac899dc9773859ad0e8500c80c621206fa2dafd1" translate="yes" xml:space="preserve">
          <source>Note that webpack needs to generate a unique module identifier from the resource and all loaders including options. It tries to do this with a &lt;code&gt;JSON.stringify&lt;/code&gt; of the options object. This is fine in 99.9% of cases, but may be not unique if you apply the same loaders with different options to the resource and the options have some stringified values.</source>
          <target state="translated">请注意，webpack需要从资源和所有加载程序（包括选项）生成唯一的模块标识符。它尝试使用options对象的 &lt;code&gt;JSON.stringify&lt;/code&gt; 做到这一点。在99.9％的情况下，这是可以的，但如果您对资源应用相同的加载程序但具有不同的选项，并且这些选项具有一些字符串化的值，则可能不是唯一的。</target>
        </trans-unit>
        <trans-unit id="379dfff92fa76807854690cb65ec373a68670eb8" translate="yes" xml:space="preserve">
          <source>Note that webpack will not alter any code other than &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; statements. If you are using other &lt;a href=&quot;http://es6-features.org/&quot;&gt;ES2015 features&lt;/a&gt;, make sure to &lt;a href=&quot;https://webpack.js.org/loaders/#transpiling&quot;&gt;use a transpiler&lt;/a&gt; such as &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt; or &lt;a href=&quot;https://buble.surge.sh/guide/&quot;&gt;Bubl&amp;eacute;&lt;/a&gt; via webpack's &lt;a href=&quot;../concepts/loaders&quot;&gt;loader system&lt;/a&gt;.</source>
          <target state="translated">请注意，除了 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 语句外，webpack不会更改任何代码。如果您正在使用&lt;a href=&quot;http://es6-features.org/&quot;&gt;ES2015的&lt;/a&gt;其他功能，请确保通过webpack的&lt;a href=&quot;../concepts/loaders&quot;&gt;加载程序系统&lt;/a&gt;&lt;a href=&quot;https://webpack.js.org/loaders/#transpiling&quot;&gt;使用&lt;/a&gt;诸如&lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt;或&lt;a href=&quot;https://buble.surge.sh/guide/&quot;&gt;Bubl&amp;eacute;之类的&lt;/a&gt;编译器。</target>
        </trans-unit>
        <trans-unit id="0854b71012c3e8bbf3bd935a2a7c85cc8fddb8cf" translate="yes" xml:space="preserve">
          <source>Note that when using &lt;code&gt;import()&lt;/code&gt; on ES6 modules you must reference the &lt;code&gt;.default&lt;/code&gt; property as it's the actual &lt;code&gt;module&lt;/code&gt; object that will be returned when the promise is resolved.</source>
          <target state="translated">请注意，在ES6模块上使用 &lt;code&gt;import()&lt;/code&gt; 时，必须引用 &lt;code&gt;.default&lt;/code&gt; 属性，因为它是解决承诺后将返回的实际 &lt;code&gt;module&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="181b9d41c14d59f6b2ca5a895ba4ff388763a02d" translate="yes" xml:space="preserve">
          <source>Note that when using &lt;code&gt;sass&lt;/code&gt; (&lt;code&gt;Dart Sass&lt;/code&gt;), &lt;strong&gt;synchronous compilation is twice as fast as asynchronous compilation&lt;/strong&gt; by default, due to the overhead of asynchronous callbacks. To avoid this overhead, you can use the &lt;a href=&quot;https://www.npmjs.com/package/fibers&quot;&gt;fibers&lt;/a&gt; package to call asynchronous importers from the synchronous code path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec0f798cfee84fd48386363fdae0cc7310d4de1" translate="yes" xml:space="preserve">
          <source>Note that when using Dart Sass, &lt;strong&gt;synchronous compilation is twice as fast as asynchronous compilation&lt;/strong&gt; by default, due to the overhead of asynchronous callbacks. To avoid this overhead, you can use the &lt;a href=&quot;https://www.npmjs.com/package/fibers&quot;&gt;&lt;code&gt;fibers&lt;/code&gt;&lt;/a&gt; package to call asynchronous importers from the synchronous code path. To enable this, pass the &lt;code&gt;Fiber&lt;/code&gt; class to the &lt;code&gt;fiber&lt;/code&gt; option:</source>
          <target state="translated">请注意，使用Dart Sass时，由于异步回调的开销，默认情况下，&lt;strong&gt;同步编译的速度是异步编译速度的两倍&lt;/strong&gt;。为了避免这种开销，您可以使用&lt;a href=&quot;https://www.npmjs.com/package/fibers&quot;&gt; &lt;code&gt;fibers&lt;/code&gt; &lt;/a&gt;包从同步代码路径中调用异步导入程序。要启用此功能，请将 &lt;code&gt;Fiber&lt;/code&gt; 类传递给 &lt;code&gt;fiber&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="2ec411ef85897da6129ea32da4ad9fba0146403e" translate="yes" xml:space="preserve">
          <source>Note that while the &lt;a href=&quot;../plugins/terser-webpack-plugin&quot;&gt;&lt;code&gt;TerserPlugin&lt;/code&gt;&lt;/a&gt; is a great place to start for minification and being used by default, there are other options out there:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e888bdd78e1b01aca9023fb72d8bb1a201c25f1" translate="yes" xml:space="preserve">
          <source>Note that while the &lt;a href=&quot;../plugins/uglifyjs-webpack-plugin&quot;&gt;&lt;code&gt;UglifyJSPlugin&lt;/code&gt;&lt;/a&gt; is a great place to start for minification and being used by default, there are other options out there. Here are a few more popular ones:</source>
          <target state="translated">请注意，虽然&lt;a href=&quot;../plugins/uglifyjs-webpack-plugin&quot;&gt; &lt;code&gt;UglifyJSPlugin&lt;/code&gt; &lt;/a&gt;是开始进行最小化和默认情况下使用的好地方，但这里还有其他选项。这里有一些更受欢迎的：</target>
        </trans-unit>
        <trans-unit id="8df64e9b197c087418dffb7ce19eb91dc4ca6fef" translate="yes" xml:space="preserve">
          <source>Note that you also need to create an &lt;code&gt;app.js&lt;/code&gt; file.</source>
          <target state="translated">请注意，您还需要创建一个 &lt;code&gt;app.js&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="5958176f7c67ad08a6a4c97eb5a2909303d51d04" translate="yes" xml:space="preserve">
          <source>Note that you can use alias here and other features familiar from resolve. For example &lt;code&gt;{ txt: 'raw-loader' }&lt;/code&gt; would shim &lt;code&gt;txt!templates/demo.txt&lt;/code&gt; to use &lt;code&gt;raw-loader&lt;/code&gt;.</source>
          <target state="translated">请注意，您可以在此处使用别名以及resolve熟悉的其他功能。例如 &lt;code&gt;{ txt: 'raw-loader' }&lt;/code&gt; 将使 &lt;code&gt;txt!templates/demo.txt&lt;/code&gt; 填充以使用 &lt;code&gt;raw-loader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd6c6e3cb2fb6fc112fa914c9dd0f7aeea8587c3" translate="yes" xml:space="preserve">
          <source>Note that you can, and in most cases should, &lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;minimize css&lt;/a&gt; for better load times in production. On top of that, loaders exist for pretty much any flavor of CSS you can think of -- &lt;a href=&quot;../loaders/postcss-loader&quot;&gt;postcss&lt;/a&gt;, &lt;a href=&quot;../loaders/sass-loader&quot;&gt;sass&lt;/a&gt;, and &lt;a href=&quot;../loaders/less-loader&quot;&gt;less&lt;/a&gt; to name a few.</source>
          <target state="translated">请注意，您可以并且在大多数情况下应该&lt;a href=&quot;../plugins/mini-css-extract-plugin#minimizing-for-production&quot;&gt;最小化CSS&lt;/a&gt;，以缩短生产中的加载时间。最重要的是，你能想到的CSS的几乎所有的味道存在装载机- &lt;a href=&quot;../loaders/postcss-loader&quot;&gt;postcss&lt;/a&gt;，&lt;a href=&quot;../loaders/sass-loader&quot;&gt;青菜&lt;/a&gt;，和&lt;a href=&quot;../loaders/less-loader&quot;&gt;少&lt;/a&gt;仅举几例。</target>
        </trans-unit>
        <trans-unit id="8cbe56a819a9cacdccb119ca76713cb5f7e07f92" translate="yes" xml:space="preserve">
          <source>Note that you'll also need to check your &lt;code&gt;tsconfig.json&lt;/code&gt; file. If the module in &lt;code&gt;compilerOptions&lt;/code&gt; in &lt;code&gt;tsconfig.json&lt;/code&gt; is &lt;code&gt;commonjs&lt;/code&gt;, the setting is complete, else webpack will fail with an error. This occurs because &lt;code&gt;ts-node&lt;/code&gt; does not support any module syntax other than &lt;code&gt;commonjs&lt;/code&gt;.</source>
          <target state="translated">请注意，您还需要检查 &lt;code&gt;tsconfig.json&lt;/code&gt; 文件。如果模块 &lt;code&gt;compilerOptions&lt;/code&gt; 在 &lt;code&gt;tsconfig.json&lt;/code&gt; 是 &lt;code&gt;commonjs&lt;/code&gt; ，设置完成后，其他的WebPack将失败与错误。发生这种情况是因为 &lt;code&gt;ts-node&lt;/code&gt; 除了 &lt;code&gt;commonjs&lt;/code&gt; 之外不支持任何模块语法。</target>
        </trans-unit>
        <trans-unit id="6f66b816c2a36ab4b8c44090b95a9ba474da5377" translate="yes" xml:space="preserve">
          <source>Note the &lt;code&gt;unused harmony export square&lt;/code&gt; comment above. If you look at the code below it, you'll notice that &lt;code&gt;square&lt;/code&gt; is not being imported, however, it is still included in the bundle. We'll fix that in the next section.</source>
          <target state="translated">注意上面 &lt;code&gt;unused harmony export square&lt;/code&gt; 注释。如果查看其下面的代码，您会注意到 &lt;code&gt;square&lt;/code&gt; 没有被导入，但是，它仍然包含在捆绑包中。我们将在下一部分中对其进行修复。</target>
        </trans-unit>
        <trans-unit id="f48a6e716c077c9d9a1978a8abd790a7b794e196" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;chunkFilename&lt;/code&gt;, which determines the name of non-entry chunk files. For more information on &lt;code&gt;chunkFilename&lt;/code&gt;, see &lt;a href=&quot;../configuration/output#output-chunkfilename&quot;&gt;output documentation&lt;/a&gt;. We'll also update our project to remove the now unused files:</source>
          <target state="translated">请注意， &lt;code&gt;chunkFilename&lt;/code&gt; 的使用确定了非输入块文件的名称。有关 &lt;code&gt;chunkFilename&lt;/code&gt; 的更多信息，请参见&lt;a href=&quot;../configuration/output#output-chunkfilename&quot;&gt;输出文档&lt;/a&gt;。我们还将更新项目，以删除现在未使用的文件：</target>
        </trans-unit>
        <trans-unit id="4587cc54b0123929cfcbfec9a5a3be8af98046c6" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;merge()&lt;/code&gt; calls in the environment-specific configurations to include our common configuration in &lt;code&gt;webpack.dev.js&lt;/code&gt; and &lt;code&gt;webpack.prod.js&lt;/code&gt;. The &lt;code&gt;webpack-merge&lt;/code&gt; tool offers a variety of advanced features for merging but for our use case we won't need any of that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0bb6c2d31383d9a9ef191d6f4abefdb96c47040" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;merge()&lt;/code&gt; in the environment-specific configurations to easily include our common configuration in &lt;code&gt;dev&lt;/code&gt; and &lt;code&gt;prod&lt;/code&gt;. The &lt;code&gt;webpack-merge&lt;/code&gt; tool offers a variety of advanced features for merging but for our use case we won't need any of that.</source>
          <target state="translated">请注意，在特定于环境的配置中使用 &lt;code&gt;merge()&lt;/code&gt; 可以轻松地在 &lt;code&gt;dev&lt;/code&gt; 和 &lt;code&gt;prod&lt;/code&gt; 中包含我们的通用配置。该 &lt;code&gt;webpack-merge&lt;/code&gt; 工具提供了多种高级功能合并，但为我所用的情况下，我们将不再需要任何的。</target>
        </trans-unit>
        <trans-unit id="e1f83b85255c055aa0dd4ca3bf0926d6f9b529f9" translate="yes" xml:space="preserve">
          <source>Note the use of &lt;code&gt;webpackChunkName&lt;/code&gt; in the comment. This will cause our separate bundle to be named &lt;code&gt;lodash.bundle.js&lt;/code&gt; instead of just &lt;code&gt;[id].bundle.js&lt;/code&gt;. For more information on &lt;code&gt;webpackChunkName&lt;/code&gt; and the other available options, see the &lt;a href=&quot;../api/module-methods#import-&quot;&gt;&lt;code&gt;import()&lt;/code&gt; documentation&lt;/a&gt;. Let's run webpack to see &lt;code&gt;lodash&lt;/code&gt; separated out to a separate bundle:</source>
          <target state="translated">注意注释中 &lt;code&gt;webpackChunkName&lt;/code&gt; 的使用。这将导致我们单独的捆绑包被命名为 &lt;code&gt;lodash.bundle.js&lt;/code&gt; ,而不仅仅是 &lt;code&gt;[id].bundle.js&lt;/code&gt; 。有关 &lt;code&gt;webpackChunkName&lt;/code&gt; 和其他可用选项的更多信息，请参见&lt;a href=&quot;../api/module-methods#import-&quot;&gt; &lt;code&gt;import()&lt;/code&gt; 文档&lt;/a&gt;。让我们运行webpack看看 &lt;code&gt;lodash&lt;/code&gt; 被分离到一个单独的包中：</target>
        </trans-unit>
        <trans-unit id="9f5400c0110f4aed7f5036b112b3b9ea47989a12" translate="yes" xml:space="preserve">
          <source>Note this option does not affect output files for on-demand-loaded chunks. For these files the &lt;a href=&quot;#output-chunkfilename&quot;&gt;&lt;code&gt;output.chunkFilename&lt;/code&gt;&lt;/a&gt; option is used. Files created by loaders also aren't affected. In this case you would have to try the specific loader's available options.</source>
          <target state="translated">请注意，此选项不会影响按需加载的块的输出文件。对于这些文件，使用&lt;a href=&quot;#output-chunkfilename&quot;&gt; &lt;code&gt;output.chunkFilename&lt;/code&gt; &lt;/a&gt;选项。加载程序创建的文件也不受影响。在这种情况下，您将不得不尝试特定加载程序的可用选项。</target>
        </trans-unit>
        <trans-unit id="d68ef24affd81aa9ec0ac1e315381bce93016298" translate="yes" xml:space="preserve">
          <source>Note this option does not affect output files for on-demand-loaded chunks. It only affects output files that are initially loaded. For on-demand-loaded chunk files the &lt;a href=&quot;#outputchunkfilename&quot;&gt;&lt;code&gt;output.chunkFilename&lt;/code&gt;&lt;/a&gt; option is used. Files created by loaders also aren't affected. In this case you would have to try the specific loader's available options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ecfcf85915f7191f0d04d5647a8f68d75f6d5e" translate="yes" xml:space="preserve">
          <source>Note this option is called filename but you are still allowed to use something like &lt;code&gt;&quot;js/[name]/bundle.js&quot;&lt;/code&gt; to create a folder structure.</source>
          <target state="translated">请注意，此选项称为文件名，但仍然可以使用 &lt;code&gt;&quot;js/[name]/bundle.js&quot;&lt;/code&gt; 来创建文件夹结构。</target>
        </trans-unit>
        <trans-unit id="f2f889220bcb1a257e3dd5df63c21308173e5413" translate="yes" xml:space="preserve">
          <source>Note this option is called filename but you are still allowed to use something like &lt;code&gt;'js/[name]/bundle.js'&lt;/code&gt; to create a folder structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="c3b04644c043c2b78efb2d6b3f1ac6702eb2b70e" translate="yes" xml:space="preserve">
          <source>Note: &lt;a href=&quot;../configuration/dev-server&quot;&gt;webpack DevServer&lt;/a&gt; writes in-memory by default. We'll need to enable &lt;a href=&quot;../configuration/dev-server#devserverwritetodisk-&quot;&gt;writeToDisk&lt;/a&gt; option in order for http-server to be able to serve files from &lt;code&gt;./dist&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f25a706f1d9eb54c7ea9d5344c0c0fc94aab5c2" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;electron&lt;/code&gt;, &lt;code&gt;worker&lt;/code&gt; and &lt;code&gt;worklet&lt;/code&gt; comes combined with either &lt;code&gt;node&lt;/code&gt; or &lt;code&gt;browser&lt;/code&gt;, depending on the context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa37790c2d905a8e403ed8d2cae24a805ebdb9c" translate="yes" xml:space="preserve">
          <source>Note: HMR is automatically supported in webpack 5. No need to configure it. Skip the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14da4a871de5dba95b15a703ecaef4355b68badc" translate="yes" xml:space="preserve">
          <source>Note: It's only applied to dynamically loaded css chunks, if you want to modify link attributes inside html file, please using &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin&quot;&gt;html-webpack-plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efdb0c93069c7696135c98479c69e6fa546e23fb" translate="yes" xml:space="preserve">
          <source>Note: Only the first valid result will be used, not all valid results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a508da31fbbc7d2749229c9372fdff832cca96e" translate="yes" xml:space="preserve">
          <source>Note: Providing only a ESM comes with restrictions for node.js. Such a package would only work in Node.js &amp;gt;= 14 and only when using &lt;code&gt;import&lt;/code&gt;. It won't work with &lt;code&gt;require()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf6d6bb7792aab4d7ec1514397af56c2f0ecc75" translate="yes" xml:space="preserve">
          <source>Note: Since &lt;code&gt;production&lt;/code&gt; and &lt;code&gt;development&lt;/code&gt; is not supported by everyone, no assumption should be made when none of these is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7045840c5a80e8b4884c07fbcf31511f977e190" translate="yes" xml:space="preserve">
          <source>Note: These are the flags with webpack v4, starting v5 CLI also supports &lt;a href=&quot;cli#core-flags&quot;&gt;core flags&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e902f7ddd19ae6525e8540c00b2d75d1642a670b" translate="yes" xml:space="preserve">
          <source>Note: This page only discusses using plugins, however if you are interested in writing your own please visit &lt;a href=&quot;https://webpack.js.org/contribute/writing-a-plugin/&quot;&gt;Writing a Plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15eb3bf90deb8ee595f45bf48e24cec08c3ce209" translate="yes" xml:space="preserve">
          <source>Note: This page only discusses using plugins, however if you are interested in writing your own please visit &lt;a href=&quot;https://webpack.js.org/development/how-to-write-a-plugin/&quot;&gt;Writing a Plugin&lt;/a&gt;.</source>
          <target state="translated">注意：此页面仅讨论使用插件，但是，如果您有兴趣编写自己&lt;a href=&quot;https://webpack.js.org/development/how-to-write-a-plugin/&quot;&gt;的插件，&lt;/a&gt;请访问编写插件。</target>
        </trans-unit>
        <trans-unit id="fe24033bacbfa2d35049038ddfa9c6e799872e63" translate="yes" xml:space="preserve">
          <source>Note: the &lt;code&gt;ts-loader&lt;/code&gt; documentation suggests the use of &lt;code&gt;cache-loader&lt;/code&gt;, but this actually slows the incremental builds down with disk writes.</source>
          <target state="translated">注意： &lt;code&gt;ts-loader&lt;/code&gt; 文档建议使用 &lt;code&gt;cache-loader&lt;/code&gt; ，但这实际上会降低磁盘写入的增量生成速度。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="e8bfaa60c4750e819f443d8e6798a0c1a5b2e589" translate="yes" xml:space="preserve">
          <source>Notes about ordering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e049edb6a232b51d2fcf3e47575f1899cfd4c9c" translate="yes" xml:space="preserve">
          <source>Nothing to see here .... yet</source>
          <target state="translated">没什么好看的......但</target>
        </trans-unit>
        <trans-unit id="b0cc522d30303e76a33c00b323d39df208ae966a" translate="yes" xml:space="preserve">
          <source>Notice anything different about &lt;code&gt;dist/bundle.js&lt;/code&gt;? Clearly the whole bundle is now minified and mangled, but, if you look carefully, you won't see the &lt;code&gt;square&lt;/code&gt; function included but will see a mangled version of the &lt;code&gt;cube&lt;/code&gt; function (&lt;code&gt;function r(e){return e*e*e}n.a=r&lt;/code&gt;). With minification and tree shaking our bundle is now a few bytes smaller! While that may not seem like much in this contrived example, tree shaking can yield a significant decrease in bundle size when working on larger applications with complex dependency trees.</source>
          <target state="translated">注意 &lt;code&gt;dist/bundle.js&lt;/code&gt; 有什么不同吗？显然，整个捆绑包现在已缩小并变形了，但是，如果仔细看，您将看不到所包含的 &lt;code&gt;square&lt;/code&gt; 函数，但是会看到 &lt;code&gt;cube&lt;/code&gt; 函数的变形版本（ &lt;code&gt;function r(e){return e*e*e}n.a=r&lt;/code&gt; ）。随着缩小和摇树，我们的捆绑包现在缩小了几个字节！尽管在这个人为的示例中看起来并不多，但是当在具有复杂依赖树的大型应用程序上工作时，树状摇动可以大大减少捆绑的大小。</target>
        </trans-unit>
        <trans-unit id="db1bc419110e06495e99172056f769c76fe73160" translate="yes" xml:space="preserve">
          <source>Notice anything different about &lt;code&gt;dist/bundle.js&lt;/code&gt;? Clearly the whole bundle is now minified and mangled, but, if you look carefully, you won't see the &lt;code&gt;square&lt;/code&gt; function included but will see a mangled version of the &lt;code&gt;cube&lt;/code&gt; function (&lt;code&gt;function r(e){return e*e*e}n.a=r&lt;/code&gt;). With minification and tree shaking, our bundle is now a few bytes smaller! While that may not seem like much in this contrived example, tree shaking can yield a significant decrease in bundle size when working on larger applications with complex dependency trees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d7b4aee25c9561263ab9551fbbdd6475155528" translate="yes" xml:space="preserve">
          <source>Notice that many array configurations allow to reference the default value via &lt;code&gt;&quot;...&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfed1ae1a19ae18e28dbbf171ef56bb79109e3c" translate="yes" xml:space="preserve">
          <source>Notice that throughout the configuration we use Node's built-in &lt;a href=&quot;https://nodejs.org/api/path.html&quot;&gt;path module&lt;/a&gt; and prefix it with the &lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html#globals_dirname&quot;&gt;__dirname&lt;/a&gt; global. This prevents file path issues between operating systems and allows relative paths to work as expected. See &lt;a href=&quot;https://nodejs.org/api/path.html#path_windows_vs_posix&quot;&gt;this section&lt;/a&gt; for more info on POSIX vs. Windows paths.</source>
          <target state="translated">请注意，在整个配置过程中，我们使用Node的内置&lt;a href=&quot;https://nodejs.org/api/path.html&quot;&gt;路径模块&lt;/a&gt;，并以&lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html#globals_dirname&quot;&gt;__dirname&lt;/a&gt;全局前缀作为前缀。这样可以防止操作系统之间出现文件路径问题，并允许相对路径按预期工作。有关POSIX与Windows路径的更多信息，请参见&lt;a href=&quot;https://nodejs.org/api/path.html#path_windows_vs_posix&quot;&gt;本节&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="226a214c4e2eb4b79e49b7c5e1ed81d16a12d8da" translate="yes" xml:space="preserve">
          <source>Now add an npm script to make it a little easier to run the server:</source>
          <target state="translated">现在添加一个npm脚本,让它更容易运行服务器。</target>
        </trans-unit>
        <trans-unit id="ba9c969ad9ef2052b981443836f1219eef634594" translate="yes" xml:space="preserve">
          <source>Now adjust the config. We'll be adding our &lt;code&gt;src/print.js&lt;/code&gt; as a new entry point (&lt;code&gt;print&lt;/code&gt;) and we'll change the output as well, so that it will dynamically generate bundle names, based on the entry point names:</source>
          <target state="translated">现在调整配置。我们将把 &lt;code&gt;src/print.js&lt;/code&gt; 添加为新的入口点（ &lt;code&gt;print&lt;/code&gt; ），并且还将更改输出，以便其将基于入口点名称动态生成捆绑包名称：</target>
        </trans-unit>
        <trans-unit id="56cdab68da3bdbc6b411b84827c94a87dc498241" translate="yes" xml:space="preserve">
          <source>Now all &lt;code&gt;.svg&lt;/code&gt; files will be encoded by &lt;code&gt;mini-svg-data-uri&lt;/code&gt; package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc79ac956503a03e31c1d81aeba58819266faca" translate="yes" xml:space="preserve">
          <source>Now fire up your browser and go to &lt;code&gt;http://localhost:3000&lt;/code&gt;. You should see your webpack app running and functioning!</source>
          <target state="translated">现在启动浏览器并转到 &lt;code&gt;http://localhost:3000&lt;/code&gt; 。您应该看到您的webpack应用正在运行并正常运行！</target>
        </trans-unit>
        <trans-unit id="0034d36f4a8922a018612029cd5aa20507ba293d" translate="yes" xml:space="preserve">
          <source>Now from within our entry script (i.e. &lt;code&gt;src/index.js&lt;/code&gt;), we could &lt;code&gt;import { file, parse } from './globals.js';&lt;/code&gt; and all should work smoothly.</source>
          <target state="translated">现在，从输入脚本（即 &lt;code&gt;src/index.js&lt;/code&gt; ）中，我们可以 &lt;code&gt;import { file, parse } from './globals.js';&lt;/code&gt; 所有工作都应该顺利进行。</target>
        </trans-unit>
        <trans-unit id="8687eb2354de2500d8e7c20fcc02617bc38c54e1" translate="yes" xml:space="preserve">
          <source>Now from within our entry script (i.e. &lt;code&gt;src/index.js&lt;/code&gt;), we could use &lt;code&gt;const { file, parse } = require('./globals.js');&lt;/code&gt; and all should work smoothly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77fd810b85b608ae4a0e8b00b4265d713751a351" translate="yes" xml:space="preserve">
          <source>Now in your terminal run &lt;code&gt;npm run server&lt;/code&gt;, it should give you an output similar to this:</source>
          <target state="translated">现在在您的终端中运行 &lt;code&gt;npm run server&lt;/code&gt; ，它应该给您类似以下的输出：</target>
        </trans-unit>
        <trans-unit id="18401d6763e56a1b0d4bad8ebaaa66901cb3b871" translate="yes" xml:space="preserve">
          <source>Now let's bundle this library in a way that will achieve the following goals:</source>
          <target state="translated">现在让我们以实现以下目标的方式来捆绑这个库。</target>
        </trans-unit>
        <trans-unit id="a70cc89b388022d69a6163728328a8c05948be7a" translate="yes" xml:space="preserve">
          <source>Now let's configure webpack to handle TypeScript:</source>
          <target state="translated">现在让我们配置webpack来处理TypeScript。</target>
        </trans-unit>
        <trans-unit id="9df3f71d4a04568b0e39f6f47c094d9602a090cd" translate="yes" xml:space="preserve">
          <source>Now let's make sure we have something to debug, so let's create an error in our &lt;code&gt;print.js&lt;/code&gt; file:</source>
          <target state="translated">现在，确保我们有一些要调试的东西，因此让我们在 &lt;code&gt;print.js&lt;/code&gt; 文件中创建一个错误：</target>
        </trans-unit>
        <trans-unit id="3229a4dbd70f76dcc03ac5f7aa8eb2f27ed80939" translate="yes" xml:space="preserve">
          <source>Now let's repoint our &lt;code&gt;scripts&lt;/code&gt; to the new configurations. We'll use the &lt;em&gt;development&lt;/em&gt; one for our &lt;code&gt;webpack-dev-server&lt;/code&gt;, &lt;code&gt;npm start&lt;/code&gt;, script and the &lt;em&gt;production&lt;/em&gt; one for our &lt;code&gt;npm run build&lt;/code&gt; script:</source>
          <target state="translated">现在，让我们将 &lt;code&gt;scripts&lt;/code&gt; 重新指向新配置。我们将使用&lt;em&gt;开发&lt;/em&gt;一个为我们 &lt;code&gt;webpack-dev-server&lt;/code&gt; ， &lt;code&gt;npm start&lt;/code&gt; ，脚本和&lt;em&gt;生产&lt;/em&gt;一个为我们的 &lt;code&gt;npm run build&lt;/code&gt; 脚本：</target>
        </trans-unit>
        <trans-unit id="c6c1d1cc7ab59c528e90c3b472368fa33a7ed117" translate="yes" xml:space="preserve">
          <source>Now let's run webpack and check out our new lazy-loading functionality:</source>
          <target state="translated">现在让我们运行webpack,检查一下我们新的懒加载功能。</target>
        </trans-unit>
        <trans-unit id="b357dbc2857140b0c90d8fb740c1c50892deaf49" translate="yes" xml:space="preserve">
          <source>Now let's update the &lt;code&gt;index.js&lt;/code&gt; file so that when a change inside &lt;code&gt;print.js&lt;/code&gt; is detected we tell webpack to accept the updated module.</source>
          <target state="translated">现在，让我们更新 &lt;code&gt;index.js&lt;/code&gt; 文件，使内部的变化时 &lt;code&gt;print.js&lt;/code&gt; 检测，我们告诉的WebPack接受更新模块。</target>
        </trans-unit>
        <trans-unit id="71b5c89b181903b4550c4426aa8f370a3e20c41e" translate="yes" xml:space="preserve">
          <source>Now let's update the configuration file to make use of the loader.</source>
          <target state="translated">现在让我们更新配置文件来使用加载器。</target>
        </trans-unit>
        <trans-unit id="2f5e58b0899a174e83a3c9184dc846dd0eba8237" translate="yes" xml:space="preserve">
          <source>Now lets change the import of &lt;code&gt;lodash&lt;/code&gt; in our &lt;code&gt;./index.ts&lt;/code&gt; due to the fact that there is no default export present in &lt;code&gt;lodash&lt;/code&gt; definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e465855273d6f2a32129306059f1f12d5ae5391" translate="yes" xml:space="preserve">
          <source>Now open the resulting &lt;code&gt;index.html&lt;/code&gt; file in your browser. Click the button and look in your console where the error is displayed. The error should say something like this:</source>
          <target state="translated">现在，在浏览器中打开生成的 &lt;code&gt;index.html&lt;/code&gt; 文件。单击该按钮，然后在控制台中查看显示错误的位置。该错误应显示如下内容：</target>
        </trans-unit>
        <trans-unit id="4e7301a0388be473c7b02660fc1b9c005fb15f3f" translate="yes" xml:space="preserve">
          <source>Now run &lt;code&gt;npm run watch&lt;/code&gt; from the command line and see how webpack compiles your code. You can see that it doesn't exit the command line because the script is currently watching your files.</source>
          <target state="translated">现在从命令行运行 &lt;code&gt;npm run watch&lt;/code&gt; ，看看webpack如何编译您的代码。您可以看到它没有退出命令行，因为脚本当前正在监视您的文件。</target>
        </trans-unit>
        <trans-unit id="a8819a3694737e7abc14d60fcbf8c0bb4201c624" translate="yes" xml:space="preserve">
          <source>Now run a new build and let's see if webpack handled our fonts:</source>
          <target state="translated">现在运行一个新的构建,让我们看看webpack是否处理了我们的字体。</target>
        </trans-unit>
        <trans-unit id="8bc10b3505d1b8a53aea70ead4b91821f2ae548d" translate="yes" xml:space="preserve">
          <source>Now run an &lt;code&gt;npm run build&lt;/code&gt; and inspect the &lt;code&gt;/dist&lt;/code&gt; folder. If everything went well you should now only see the files generated from the build and no more old files!</source>
          <target state="translated">现在运行 &lt;code&gt;npm run build&lt;/code&gt; 并检查 &lt;code&gt;/dist&lt;/code&gt; 文件夹。如果一切顺利，您现在应该只看到从构建生成的文件，而不再看到旧文件！</target>
        </trans-unit>
        <trans-unit id="c980596675b42b015fa33b5ec44395e051396087" translate="yes" xml:space="preserve">
          <source>Now run the following command and see if your script alias works:</source>
          <target state="translated">现在运行以下命令,看看你的脚本别名是否有效。</target>
        </trans-unit>
        <trans-unit id="51925bf23211310f8cdb3feec20b576227cc12df" translate="yes" xml:space="preserve">
          <source>Now run your build command:</source>
          <target state="translated">现在运行你的构建命令。</target>
        </trans-unit>
        <trans-unit id="8bc24f3703809a27283cf6928903a1da64a677fa" translate="yes" xml:space="preserve">
          <source>Now save your file and check the terminal window. You should see that webpack automatically recompiles the changed module!</source>
          <target state="translated">现在保存你的文件并检查终端窗口。你应该看到webpack会自动重新编译修改后的模块。</target>
        </trans-unit>
        <trans-unit id="b0a22991df6a10bea7b0cd5b6859050cd2788ab5" translate="yes" xml:space="preserve">
          <source>Now that you have a basic build together you should move on to the next guide &lt;a href=&quot;asset-management&quot;&gt;&lt;code&gt;Asset Management&lt;/code&gt;&lt;/a&gt; to learn how to manage assets like images and fonts with webpack. At this point, your project should look like this:</source>
          <target state="translated">现在，您已经拥有了基本的构建，现在应该继续阅读下一个指南&amp;ldquo; &lt;a href=&quot;asset-management&quot;&gt; &lt;code&gt;Asset Management&lt;/code&gt; &lt;/a&gt;以了解如何使用webpack管理诸如图像和字体之类的资产。此时，您的项目应如下所示：</target>
        </trans-unit>
        <trans-unit id="63f3473f5e6ea29aae9778ab6ce863473f1f035c" translate="yes" xml:space="preserve">
          <source>Now that you've learned about dynamically adding bundles to your HTML, let's dive into the &lt;a href=&quot;development&quot;&gt;development guide&lt;/a&gt;. Or, if you want to dig into more advanced topics, we would recommend heading over to the &lt;a href=&quot;code-splitting&quot;&gt;code splitting guide&lt;/a&gt;.</source>
          <target state="translated">现在，您已经了解了如何将捆绑包动态添加到HTML中，让我们深入研究&lt;a href=&quot;development&quot;&gt;开发指南&lt;/a&gt;。或者，如果您想深入研究更高级的主题，我们建议您转到&lt;a href=&quot;code-splitting&quot;&gt;代码拆分指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c8fd584df8d9df719d43b557d48ad32300a5aa0a" translate="yes" xml:space="preserve">
          <source>Now that you've learned how to automatically compile your code and run a simple development server, you can check out the next guide, which will cover &lt;a href=&quot;code-splitting&quot;&gt;Code Splitting&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e6078b764dd6ee14190b4f56b64b8835f7f586a" translate="yes" xml:space="preserve">
          <source>Now that you've learned how to automatically compile your code and run a simple development server, you can check out the next guide, which will cover &lt;a href=&quot;hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt;.</source>
          <target state="translated">既然您已经了解了如何自动编译代码并运行简单的开发服务器，那么您可以查看下一个指南，该指南将介绍&lt;a href=&quot;hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a68fcc5f419a8da05abd5181c9cc69d770f8fd8f" translate="yes" xml:space="preserve">
          <source>Now that your server is working, you might want to give &lt;a href=&quot;hot-module-replacement&quot;&gt;Hot Module Replacement&lt;/a&gt; a try!</source>
          <target state="translated">现在您的服务器正在运行，您可能想尝试&lt;a href=&quot;hot-module-replacement&quot;&gt;热模块更换&lt;/a&gt;！</target>
        </trans-unit>
        <trans-unit id="a2d984465f0c1b21f3d0ec45a0fe32d762bf606b" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;npm run build&lt;/code&gt; command can be used in place of the &lt;code&gt;npx&lt;/code&gt; command we used earlier. Note that within &lt;code&gt;scripts&lt;/code&gt; we can reference locally installed npm packages by name the same way we did with &lt;code&gt;npx&lt;/code&gt;. This convention is the standard in most npm-based projects because it allows all contributors to use the same set of common scripts (each with flags like &lt;code&gt;--config&lt;/code&gt; if necessary).</source>
          <target state="translated">现在，可以使用 &lt;code&gt;npm run build&lt;/code&gt; 命令代替我们之前使用的 &lt;code&gt;npx&lt;/code&gt; 命令。请注意，在 &lt;code&gt;scripts&lt;/code&gt; 我们可以按名称引用本地安装的npm软件包，就像对 &lt;code&gt;npx&lt;/code&gt; 一样。该约定是大多数基于npm的项目中的标准，因为它允许所有贡献者使用同一组通用脚本（如有必要，每个脚本都带有 &lt;code&gt;--config&lt;/code&gt; 之类的标志）。</target>
        </trans-unit>
        <trans-unit id="e7c36cf17ca76d0db87bec101748d0bfa22867c3" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;npm run build&lt;/code&gt; command can be used in place of the &lt;code&gt;npx&lt;/code&gt; command we used earlier. Note that within &lt;code&gt;scripts&lt;/code&gt; we can reference locally installed npm packages by name the same way we did with &lt;code&gt;npx&lt;/code&gt;. This convention is the standard in most npm-based projects because it allows all contributors to use the same set of common scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e270bde6ce552781a474737a3e2add61123b1002" translate="yes" xml:space="preserve">
          <source>Now to test it. Stop your server and refresh your page. If your browser supports Service Workers then you should still be looking at your application. However, it has been served up by your Service Worker and &lt;strong&gt;not&lt;/strong&gt; by the server.</source>
          <target state="translated">现在进行测试。停止服务器并刷新页面。如果您的浏览器支持Service Workers，那么您仍应在查看您的应用程序。但是，它已由您的服务工作者提供，而&lt;strong&gt;不是&lt;/strong&gt;由服务器提供。</target>
        </trans-unit>
        <trans-unit id="3429ffa15c0495b0937445ca31923a90c00d6386" translate="yes" xml:space="preserve">
          <source>Now we can &lt;code&gt;fetch&lt;/code&gt; some data within our entry script:</source>
          <target state="translated">现在我们可以在输入脚本中 &lt;code&gt;fetch&lt;/code&gt; 一些数据：</target>
        </trans-unit>
        <trans-unit id="f093f6e8b13dfdaefb7b274645cdc1f312a7f06f" translate="yes" xml:space="preserve">
          <source>Now we can run &lt;code&gt;npm start&lt;/code&gt; from the command line and we will see our browser automatically loading up our page. If you now change any of the source files and save them, the web server will automatically reload after the code has been compiled. Give it a try!</source>
          <target state="translated">现在我们可以从命令行 &lt;code&gt;npm start&lt;/code&gt; ，我们将看到浏览器自动加载页面。如果现在更改任何源文件并保存它们，则在编译代码后，Web服务器将自动重新加载。试试看！</target>
        </trans-unit>
        <trans-unit id="2f28031dc5f208149117e7b6980c34e1b46cf0d9" translate="yes" xml:space="preserve">
          <source>Now we need to make some adjustments to our webpack configuration file in order to make sure the middleware will function correctly:</source>
          <target state="translated">现在,我们需要对webpack配置文件进行一些调整,以确保中间件能够正常运行。</target>
        </trans-unit>
        <trans-unit id="faeadf5a50de73054f1905eac6886f957bfced3b" translate="yes" xml:space="preserve">
          <source>Now we need to tell webpack to extract these source maps and include in our final bundle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6803b16f69e184ab5c2f00b5adc4e2e50fea89fd" translate="yes" xml:space="preserve">
          <source>Now we need to tell webpack to extract these source maps and into our final bundle:</source>
          <target state="translated">现在我们需要告诉webpack将这些源码图解压到我们的最终捆绑包中。</target>
        </trans-unit>
        <trans-unit id="daa2cc1ebd5f54388aa2a4c401a9c199eb5e43d4" translate="yes" xml:space="preserve">
          <source>Now we'll create the following directory structure, files and their contents:</source>
          <target state="translated">现在我们将创建以下目录结构、文件及其内容。</target>
        </trans-unit>
        <trans-unit id="6562086000c2c226ec3f442cf46f81b89bd3de6e" translate="yes" xml:space="preserve">
          <source>Now we'll modify the directory structure &amp;amp; the configuration files:</source>
          <target state="translated">现在，我们将修改目录结构和配置文件：</target>
        </trans-unit>
        <trans-unit id="c1c0259376514fcbb277498cdd385758d7f38c97" translate="yes" xml:space="preserve">
          <source>Now webpack will automatically choose between &lt;code&gt;resource&lt;/code&gt; and &lt;code&gt;inline&lt;/code&gt; by following a default condition: a file with size less than 8kb will be treated as a &lt;code&gt;inline&lt;/code&gt; module type and &lt;code&gt;resource&lt;/code&gt; module type otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b35117645d81df56c33faf2b4b4d353a9955cf" translate="yes" xml:space="preserve">
          <source>Now while this is one approach, &lt;strong&gt;including polyfills in the main bundle is not recommended&lt;/strong&gt; because this penalizes modern browsers users by making them download a bigger file with unneeded scripts.</source>
          <target state="translated">现在，尽管这是一种方法，&lt;strong&gt;但不建议在主捆绑包中包含polyfill，&lt;/strong&gt;因为这会使现代的浏览器用户受到惩罚，因为他们会让他们使用不需要的脚本来下载更大的文件。</target>
        </trans-unit>
        <trans-unit id="c017ac0b58a1e44fd17a64785c17d91b2434e315" translate="yes" xml:space="preserve">
          <source>Now you can &lt;a href=&quot;https://docs.npmjs.com/getting-started/publishing-npm-packages&quot;&gt;publish it as an npm package&lt;/a&gt; and find it at &lt;a href=&quot;https://unpkg.com/#/&quot;&gt;unpkg.com&lt;/a&gt; to distribute it to your users.</source>
          <target state="translated">现在，您可以&lt;a href=&quot;https://docs.npmjs.com/getting-started/publishing-npm-packages&quot;&gt;将其发布为npm软件包&lt;/a&gt;，并在&lt;a href=&quot;https://unpkg.com/#/&quot;&gt;unpkg.com&lt;/a&gt;上找到它以将其分发给您的用户。</target>
        </trans-unit>
        <trans-unit id="c56a5281cd3189f4c2a26baaf0f26739acba3635" translate="yes" xml:space="preserve">
          <source>Now you can &lt;code&gt;import&lt;/code&gt; any one of those four types of data (JSON, CSV, TSV, XML) and the &lt;code&gt;Data&lt;/code&gt; variable you import it to will contain parsed JSON for easy consumption:</source>
          <target state="translated">现在，您可以 &lt;code&gt;import&lt;/code&gt; 这四种数据类型（JSON，CSV，TSV，XML）中的任何一种，并且导入到其中的 &lt;code&gt;Data&lt;/code&gt; 变量将包含已解析的JSON，以便于使用：</target>
        </trans-unit>
        <trans-unit id="d9970898e87d8cc7da44535b873ed439e8a04414" translate="yes" xml:space="preserve">
          <source>Now you can &lt;code&gt;import&lt;/code&gt; any one of those four types of data (JSON, CSV, TSV, XML) and the &lt;code&gt;Data&lt;/code&gt; variable you import, will contain parsed JSON for easy consumption:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265845569f199bb01e68a398054540a25437c594" translate="yes" xml:space="preserve">
          <source>Now, despite any new local dependencies, our &lt;code&gt;vendor&lt;/code&gt; hash should stay consistent between builds:</source>
          <target state="translated">现在，尽管有任何新的本地依赖关系，我们的 &lt;code&gt;vendor&lt;/code&gt; 哈希值仍应在各个版本之间保持一致：</target>
        </trans-unit>
        <trans-unit id="f761146f1614b48479a5e6ca2bd6ebf8ba49cee3" translate="yes" xml:space="preserve">
          <source>Now, if you run &lt;code&gt;webpack&lt;/code&gt;, you will find that a largish bundle is created. If you inspect the file, you'll see that lodash has been bundled along with your code. In this case, we'd prefer to treat &lt;code&gt;lodash&lt;/code&gt; as a &lt;code&gt;peerDependency&lt;/code&gt;. Meaning that the consumer should already have &lt;code&gt;lodash&lt;/code&gt; installed. Hence you would want to give up control of this external library to the consumer of your library.</source>
          <target state="translated">现在，如果您运行 &lt;code&gt;webpack&lt;/code&gt; ，您会发现创建了一个小包。如果您检查文件，将会看到lodash与代码捆绑在一起。在这种情况下，我们希望将 &lt;code&gt;lodash&lt;/code&gt; 视为 &lt;code&gt;peerDependency&lt;/code&gt; 。这意味着使用者应该已经安装了 &lt;code&gt;lodash&lt;/code&gt; 。因此，您想将对该外部库的控制权交给该库的使用者。</target>
        </trans-unit>
        <trans-unit id="a629b8ca075bd87b327deed9d51fd9489a0a6b97" translate="yes" xml:space="preserve">
          <source>Now, instead of statically importing &lt;code&gt;lodash&lt;/code&gt;, we'll use dynamic importing to separate a chunk:</source>
          <target state="translated">现在，我们将使用动态导入来分隔一个块，而不是静态导入 &lt;code&gt;lodash&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0cd00ca893b2a0749390d1af07518b98228e0602" translate="yes" xml:space="preserve">
          <source>Now, instead of using relative paths when importing like so:</source>
          <target state="translated">现在,导入时不用再像这样使用相对路径了。</target>
        </trans-unit>
        <trans-unit id="b20ecdfe2808997838121f90cdf0692edefe9ec9" translate="yes" xml:space="preserve">
          <source>Now, let's import &lt;code&gt;lodash&lt;/code&gt; in our script:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adabbcf9ec455aa4d0fad9c1ed9fdf5b17ad2bfc" translate="yes" xml:space="preserve">
          <source>Now, let's modify our npm scripts to use the new configuration files. For the &lt;code&gt;start&lt;/code&gt; script, which runs &lt;code&gt;webpack-dev-server&lt;/code&gt;, we will use &lt;code&gt;webpack.dev.js&lt;/code&gt;, and for the &lt;code&gt;build&lt;/code&gt; script, which runs &lt;code&gt;webpack&lt;/code&gt; to create a production build, we will use &lt;code&gt;webpack.prod.js&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874226ce9b8d4f709d901e4a8f3b465be18e2ead" translate="yes" xml:space="preserve">
          <source>Now, let's run the build again but instead using our new configuration file:</source>
          <target state="translated">现在,让我们再次运行构建,但使用我们的新配置文件。</target>
        </trans-unit>
        <trans-unit id="986bf8dcf09bfee2a81153f0cc4b7d4079a76fdd" translate="yes" xml:space="preserve">
          <source>Now, let's run the server:</source>
          <target state="translated">现在,让我们来运行服务器。</target>
        </trans-unit>
        <trans-unit id="1680bb02d344f54fd6614cf2db07f6f8b483e824" translate="yes" xml:space="preserve">
          <source>Now, lets import &lt;code&gt;lodash&lt;/code&gt; in our script:</source>
          <target state="translated">现在，让我们在脚本中导入 &lt;code&gt;lodash&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c3a524c91d6d4686d61a055b1eccdee27c5871f7" translate="yes" xml:space="preserve">
          <source>Now, since we'll be bundling our scripts, we have to update our &lt;code&gt;index.html&lt;/code&gt; file. Let's remove the lodash &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, as we now &lt;code&gt;import&lt;/code&gt; it, and modify the other &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to load the bundle, instead of the raw &lt;code&gt;./src&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3329ecf744f220187e0a153c22fffbf77657a9cd" translate="yes" xml:space="preserve">
          <source>Now, since we'll be bundling our scripts, we have to update our &lt;code&gt;index.html&lt;/code&gt; file. Let's remove the lodash &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, as we now &lt;code&gt;import&lt;/code&gt; it, and modify the other &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to load the bundle, instead of the raw &lt;code&gt;/src&lt;/code&gt; file:</source>
          <target state="translated">现在，由于我们将捆绑脚本，因此我们必须更新 &lt;code&gt;index.html&lt;/code&gt; 文件。让我们删除lodash &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; ，现在我们 &lt;code&gt;import&lt;/code&gt; 其导入，并修改另一个 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记以加载捆绑包，而不是原始的 &lt;code&gt;/src&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="b6aed7a8c232d4f22dcc8c9e16fdd539b90239b3" translate="yes" xml:space="preserve">
          <source>Now, when you &lt;code&gt;import MyImage from './my-image.png'&lt;/code&gt;, that image will be processed and added to your &lt;code&gt;output&lt;/code&gt; directory &lt;em&gt;and&lt;/em&gt; the &lt;code&gt;MyImage&lt;/code&gt; variable will contain the final url of that image after processing. When using the &lt;a href=&quot;../loaders/css-loader&quot;&gt;css-loader&lt;/a&gt;, as shown above, a similar process will occur for &lt;code&gt;url('./my-image.png')&lt;/code&gt; within your CSS. The loader will recognize this is a local file, and replace the &lt;code&gt;'./my-image.png'&lt;/code&gt; path with the final path to the image in your &lt;code&gt;output&lt;/code&gt; directory. The &lt;a href=&quot;../loaders/html-loader&quot;&gt;html-loader&lt;/a&gt; handles &lt;code&gt;&amp;lt;img src=&quot;./my-image.png&quot; /&amp;gt;&lt;/code&gt; in the same manner.</source>
          <target state="translated">现在，当您 &lt;code&gt;import MyImage from './my-image.png'&lt;/code&gt; 时，该图像将被处理并添加到您的 &lt;code&gt;output&lt;/code&gt; 目录中&lt;em&gt;，&lt;/em&gt;并且 &lt;code&gt;MyImage&lt;/code&gt; 变量将包含处理后该图像的最终URL。如上所示，使用&lt;a href=&quot;../loaders/css-loader&quot;&gt;css-loader时&lt;/a&gt;，CSS中的 &lt;code&gt;url('./my-image.png')&lt;/code&gt; 也会发生类似的过程。加载程序将识别出这是一个本地文件，并将 &lt;code&gt;'./my-image.png'&lt;/code&gt; 路径替换为 &lt;code&gt;output&lt;/code&gt; 目录中图像的最终路径。的&lt;a href=&quot;../loaders/html-loader&quot;&gt;HTML加载器&lt;/a&gt;手柄 &lt;code&gt;&amp;lt;img src=&quot;./my-image.png&quot; /&amp;gt;&lt;/code&gt; 以相同的方式。</target>
        </trans-unit>
        <trans-unit id="6b7da57438c329ba7464308376a362cbddd7baa9" translate="yes" xml:space="preserve">
          <source>Now, while webpack is watching your files, let's remove the error we introduced earlier:</source>
          <target state="translated">现在,当webpack在观察你的文件时,让我们删除前面介绍的错误。</target>
        </trans-unit>
        <trans-unit id="d81b4a09efa67c7104acb6c4bee17b6c13687d8f" translate="yes" xml:space="preserve">
          <source>Now, while you'd likely never do this in your own source code, you may encounter a dated library you'd like to use that contains similar code to what's shown above. In this case, we can use &lt;a href=&quot;../loaders/exports-loader&quot;&gt;&lt;code&gt;exports-loader&lt;/code&gt;&lt;/a&gt;, to export that global variable as a normal module export. For instance, in order to export &lt;code&gt;file&lt;/code&gt; as &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;helpers.parse&lt;/code&gt; as &lt;code&gt;parse&lt;/code&gt;:</source>
          <target state="translated">现在，虽然您可能永远不会在自己的源代码中执行此操作，但是您可能会遇到一个想要使用的过时的库，其中包含与上面显示的代码类似的代码。在这种情况下，我们可以使用&lt;a href=&quot;../loaders/exports-loader&quot;&gt; &lt;code&gt;exports-loader&lt;/code&gt; &lt;/a&gt;将该全局变量导出为常规模块导出。例如，为了将 &lt;code&gt;file&lt;/code&gt; 导出为 &lt;code&gt;file&lt;/code&gt; 并将 &lt;code&gt;helpers.parse&lt;/code&gt; 导出为 &lt;code&gt;parse&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="399d20d411a9c4dff19abde6554a5d895eb38571" translate="yes" xml:space="preserve">
          <source>NpmInstallWebpackPlugin</source>
          <target state="translated">NpmInstallWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="be3a794df3289dcdea5cded366c1d14e024a75cc" translate="yes" xml:space="preserve">
          <source>Number of concurrent runs.</source>
          <target state="translated">同时运行的次数。</target>
        </trans-unit>
        <trans-unit id="0dd75d7fe90f97130245d0b8fb2d960bf44b4a9b" translate="yes" xml:space="preserve">
          <source>Number of loaders applied before CSS loader</source>
          <target state="translated">在CSS加载器之前应用的加载器数量</target>
        </trans-unit>
        <trans-unit id="1b52ac3b1bd1ab12ad0b5dd55afd7d6dde5b1b25" translate="yes" xml:space="preserve">
          <source>Number of milliseconds before chunk request expires, defaults to 120 000. This option is supported since webpack 2.6.0.</source>
          <target state="translated">分块请求过期前的毫秒数,默认为120 000。从webpack 2.6.0开始支持这个选项。</target>
        </trans-unit>
        <trans-unit id="901f17aa3f91e65ae1ee66189fc0f089dcf0c02a" translate="yes" xml:space="preserve">
          <source>Number of milliseconds before chunk request expires. This option is supported since webpack 2.6.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0212cd646bc12e7ab81418c0727de624e88b46fd" translate="yes" xml:space="preserve">
          <source>Numeric ids focused on minimal initial download size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279e2a8042e6c1e723f14430d3457cf6f78830df" translate="yes" xml:space="preserve">
          <source>Numeric ids in order of usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68654e143c9a95a12dddf5b994152ad350c30fec" translate="yes" xml:space="preserve">
          <source>Object Syntax</source>
          <target state="translated">对象语法</target>
        </trans-unit>
        <trans-unit id="8afd3dd49c477e002270c0d5f378c9d16db538c4" translate="yes" xml:space="preserve">
          <source>Objects are made using strings, while strings are made using double strings. This means that in order for you to create a string, you have to wrap it inside another string for us to validate it correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7947d508a33ca1ae0b7138218e54d2bb97876b9c" translate="yes" xml:space="preserve">
          <source>OccurenceOrderPlugin</source>
          <target state="translated">OccurenceOrderPlugin</target>
        </trans-unit>
        <trans-unit id="dc2284b54a904eb3a4b7df2c787412d7142025db" translate="yes" xml:space="preserve">
          <source>Offers a pseudo &lt;code&gt;console&lt;/code&gt; if it is not available.</source>
          <target state="translated">提供伪 &lt;code&gt;console&lt;/code&gt; 如果不可用）。</target>
        </trans-unit>
        <trans-unit id="c1721ea0ada849ea800504498417a4b2c890ec62" translate="yes" xml:space="preserve">
          <source>Often webpack users use npm &lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt;&lt;code&gt;scripts&lt;/code&gt;&lt;/a&gt; as their task runner. This is a good starting point. Cross-platform support can become a problem, but there are several workarounds for that. Many, if not most users, get by with simple npm &lt;code&gt;scripts&lt;/code&gt; and various levels of webpack configuration and tooling.</source>
          <target state="translated">Webpack用户通常将npm &lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot;&gt; &lt;code&gt;scripts&lt;/code&gt; &lt;/a&gt;用作任务运行器。这是一个很好的起点。跨平台支持可能会成为一个问题，但是有几种解决方法。许多（如果不是大多数）用户可以使用简单的npm &lt;code&gt;scripts&lt;/code&gt; 以及各种级别的webpack配置和工具来解决。</target>
        </trans-unit>
        <trans-unit id="af40757d14939f1cc0546783a2c27d00cfd0e05d" translate="yes" xml:space="preserve">
          <source>Old school Task Runners and even Google Closure Compiler requires you to manually declare all dependencies upfront. While bundlers like webpack automatically builds and infer your &lt;a href=&quot;dependency-graph&quot;&gt;dependency graph&lt;/a&gt; based on what is imported and exported. This along with other &lt;a href=&quot;plugins&quot;&gt;plugins&lt;/a&gt; and &lt;a href=&quot;loaders&quot;&gt;loaders&lt;/a&gt; make for a great developer experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cacfd7b2aa9def28f5bf082992036b355875999" translate="yes" xml:space="preserve">
          <source>Older Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4feaa47f1e0f091d117b8cee638f02e96b61670" translate="yes" xml:space="preserve">
          <source>On The Fly</source>
          <target state="translated">在飞行中</target>
        </trans-unit>
        <trans-unit id="7de9397c7392465a52ccc17659d99604f9bc08a6" translate="yes" xml:space="preserve">
          <source>On macOS, folders can get corrupted in certain scenarios. See &lt;a href=&quot;https://github.com/livereload/livereload-site/blob/master/livereload.com/_articles/troubleshooting/os-x-fsevents-bug-may-prevent-monitoring-of-certain-folders.md&quot;&gt;this article&lt;/a&gt;.</source>
          <target state="translated">在macOS上，在某些情况下文件夹可能会损坏。看到&lt;a href=&quot;https://github.com/livereload/livereload-site/blob/master/livereload.com/_articles/troubleshooting/os-x-fsevents-bug-may-prevent-monitoring-of-certain-folders.md&quot;&gt;这篇文章&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84b858cc3d43880aa44f3a030f7d826f5e1d7470" translate="yes" xml:space="preserve">
          <source>On some machines Vim is preconfigured with the &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'backupcopy'&quot;&gt;backupcopy option&lt;/a&gt; set to &lt;code&gt;auto&lt;/code&gt;. This could potentially cause problems with the system's file watching mechanism. Switching this option to &lt;code&gt;yes&lt;/code&gt; will make sure a copy of the file is made and the original one overwritten on save.</source>
          <target state="translated">在某些计算机上，Vim预先配置了&lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/options.html#'backupcopy'&quot;&gt;backupcopy选项&lt;/a&gt;设置为 &lt;code&gt;auto&lt;/code&gt; 。这可能会导致系统的文件监视机制出现问题。将此选项切换为&amp;ldquo; &lt;code&gt;yes&lt;/code&gt; 将确保已复制文件，并且原始文件在保存时被覆盖。</target>
        </trans-unit>
        <trans-unit id="d6798ad6de81322dfee53e4558a7194dfe6d9bb6" translate="yes" xml:space="preserve">
          <source>On the Insecurity of Whitelists and the Future of Content Security Policy</source>
          <target state="translated">论白名单的不安全性和内容安全政策的未来发展方向</target>
        </trans-unit>
        <trans-unit id="a6c980b247f3551dd7e4427a00e75136a1cdaf07" translate="yes" xml:space="preserve">
          <source>On the other hand, if you want to externalise a library that is available as a CommonJS module, you can provide the external library type together with the library name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa558b005274b7fbff68234975b9efb7bb566c5" translate="yes" xml:space="preserve">
          <source>On the other hand, the provider of the replacement modules, will only provide asynchronous loading functions. It allows the container to load replacement modules only when they are needed. The provider will manage replacement modules in a way that they do not need to be downloaded at all when they are not requested by the container. This usually happens by placing them into separate chunks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff78f30ec56f6105598ce29b71aaed70575b3650" translate="yes" xml:space="preserve">
          <source>Once more &lt;code&gt;npm run build&lt;/code&gt; to build a version of the app including the registration code. Then serve it with &lt;code&gt;npm start&lt;/code&gt;. Navigate to &lt;code&gt;http://localhost:8080&lt;/code&gt; and take a look at the console. Somewhere in there you should see:</source>
          <target state="translated">再 &lt;code&gt;npm run build&lt;/code&gt; 一次npm运行build以构建包含注册代码的应用程序版本。然后将其与 &lt;code&gt;npm start&lt;/code&gt; 一起使用。导航到 &lt;code&gt;http://localhost:8080&lt;/code&gt; 并查看控制台。您应该在其中的某个地方看到：</target>
        </trans-unit>
        <trans-unit id="02ed0e62fa33898ffdff4abc0a942e61293061af" translate="yes" xml:space="preserve">
          <source>Once the path is resolved based on the above rule, the resolver checks to see if the path points to a file or a directory. If the path points to a file:</source>
          <target state="translated">根据上述规则解析出路径后,解析器会检查该路径是指向文件还是目录。如果路径指向的是一个文件。</target>
        </trans-unit>
        <trans-unit id="56fd850a2bc86a27439d2644ee02a9390b380522" translate="yes" xml:space="preserve">
          <source>Once you start splitting your code, it can be useful to analyze the output to check where modules have ended up. The &lt;a href=&quot;https://github.com/webpack/analyse&quot;&gt;official analyze tool&lt;/a&gt; is a good place to start. There are some other community-supported options out there as well:</source>
          <target state="translated">一旦开始分割代码，分析输出以检查模块在哪里结束将很有用。该&lt;a href=&quot;https://github.com/webpack/analyse&quot;&gt;负责人分析工具，&lt;/a&gt;是一个良好的开端。还有一些其他社区支持的选项：</target>
        </trans-unit>
        <trans-unit id="a92e2a532d9a2d7da6d336c155a1bb7133d7dffc" translate="yes" xml:space="preserve">
          <source>Once your application hits the browser in the form of &lt;code&gt;index.html&lt;/code&gt; file, some bundles and a variety of other assets required by your application must be loaded and linked somehow. That &lt;code&gt;/src&lt;/code&gt; directory you meticulously laid out is now bundled, minified and maybe even split into smaller chunks for lazy-loading by webpack's &lt;a href=&quot;../configuration/optimization&quot;&gt;&lt;code&gt;optimization&lt;/code&gt;&lt;/a&gt;. So how does webpack manage the interaction between all of your required modules? This is where the manifest data comes in...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1718ef4adbff4d61ad5bd148b2c67b6b67258b9" translate="yes" xml:space="preserve">
          <source>One approach is to have a &quot;bootstrap&quot; step in your application that would first override the default globals before your application:</source>
          <target state="translated">一种方法是在你的应用中设置一个 &quot;引导 &quot;步骤,在你的应用之前首先覆盖默认的 globals。</target>
        </trans-unit>
        <trans-unit id="0f14bc5e6856343e7743f14ac37a82c3e6d19aef" translate="yes" xml:space="preserve">
          <source>One chunk group with the &lt;code&gt;main&lt;/code&gt; name created (&lt;code&gt;main&lt;/code&gt; is the default name for an entry point). This chunk group contains &lt;code&gt;./index.js&lt;/code&gt; module. As the parser handles imports inside &lt;code&gt;./index.js&lt;/code&gt; new modules are added into this chunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4531651baf39d17079af5571a1ae03ef90e06710" translate="yes" xml:space="preserve">
          <source>One of the coolest webpack features is that you can also &lt;em&gt;include any other type of file&lt;/em&gt;, besides JavaScript, for which there is a loader or built-in &lt;a href=&quot;asset-modules&quot;&gt;Asset Modules&lt;/a&gt; support. This means that the same benefits listed above for JavaScript (e.g. explicit dependencies) can be applied to everything used in building a website or web app. Let's start with CSS, as you may already be familiar with that setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3776ba2e5eb3b8a3f40e34afed5eb5f87063a3f" translate="yes" xml:space="preserve">
          <source>One of the coolest webpack features is that you can also &lt;em&gt;include any other type of file&lt;/em&gt;, besides JavaScript, for which there is a loader. This means that the same benefits listed above for JavaScript (e.g. explicit dependencies) can be applied to everything used in building a website or web app. Let's start with CSS, as you may already be familiar with that setup.</source>
          <target state="translated">Webpack的最酷功能之一是，除了JavaScript之外，您还可以&lt;em&gt;包含任何其他类型的文件&lt;/em&gt;，该&lt;em&gt;文件&lt;/em&gt;带有加载程序。这意味着上面列出的针对JavaScript的相同好处（例如，显式依赖项）可以应用于构建网站或网络应用程序时使用的所有内容。让我们从CSS开始，因为您可能已经熟悉该设置。</target>
        </trans-unit>
        <trans-unit id="576a8fe2fe4d578fc19500517015b3726300014b" translate="yes" xml:space="preserve">
          <source>One of these conditions is set depending on the syntax used to reference the module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5f9f967dca918d1a0a08adbea84bed21743aa6" translate="yes" xml:space="preserve">
          <source>One option is to export a function from your webpack config instead of exporting an object. The function will be invoked with two arguments:</source>
          <target state="translated">一种方法是从webpack配置中导出一个函数,而不是导出一个对象。该函数将被调用,有两个参数。</target>
        </trans-unit>
        <trans-unit id="612198311a82878b10253f704f7c51f3eac1a819" translate="yes" xml:space="preserve">
          <source>One option is to export a function from your webpack configuration instead of exporting an object. The function will be invoked with two arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040483fac8d867e7e6b1daab52fb6ad30eec5e47" translate="yes" xml:space="preserve">
          <source>One or more updated chunks (JavaScript)</source>
          <target state="translated">一个或多个更新的块(JavaScript)</target>
        </trans-unit>
        <trans-unit id="c6560e0c28982b656a84c6a7c15954ea75bcb147" translate="yes" xml:space="preserve">
          <source>One use for this loader is to silence modules imported by a dependency. Say, for example, your project relies on an ES6 library that imports a polyfill you don't need, so removing it will cause no loss in functionality.</source>
          <target state="translated">这个加载器的一个用途是屏蔽依赖关系导入的模块。例如,您的项目依赖于一个 ES6 库,该库导入了一个您不需要的 polyfill,因此删除它不会造成功能损失。</target>
        </trans-unit>
        <trans-unit id="d350ea6dc25a31449ba8604ef5f474c7ed0faed5" translate="yes" xml:space="preserve">
          <source>Only assets bigger than this size are processed (in bytes)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b83cd24068c9b978d886a0bd94b55712e1db34" translate="yes" xml:space="preserve">
          <source>Only assets bigger than this size are processed. In bytes.</source>
          <target state="translated">只有大于这个大小的资产才会被处理。以字节为单位。</target>
        </trans-unit>
        <trans-unit id="2e2e63658df77bf50c344780d23a9604a6170078" translate="yes" xml:space="preserve">
          <source>Only assets that compress better than this ratio are processed</source>
          <target state="translated">只有压缩程度优于此比例的资产才会被处理。</target>
        </trans-unit>
        <trans-unit id="d8666ae151a48562e1053672bed0338e0b536c72" translate="yes" xml:space="preserve">
          <source>Only assets that compress better than this ratio are processed (&lt;code&gt;minRatio = Compressed Size / Original Size&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d5e500187857ccedea27d7fa41bc7266054931" translate="yes" xml:space="preserve">
          <source>Only assets that compress better than this ratio are processed (&lt;code&gt;minRatio = Compressed Size / Original Size&lt;/code&gt;). Example: you have &lt;code&gt;image.png&lt;/code&gt; file with 1024b size, compressed version of file has 768b size, so &lt;code&gt;minRatio&lt;/code&gt; equal &lt;code&gt;0.75&lt;/code&gt;. In other words assets will be processed when the &lt;code&gt;Compressed Size / Original Size&lt;/code&gt; value less &lt;code&gt;minRatio&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e6798a4f980e571a4a636162ced9361ccc439b" translate="yes" xml:space="preserve">
          <source>Only compile the part of the code you are currently developing on.</source>
          <target state="translated">只编译你当前正在开发的那部分代码。</target>
        </trans-unit>
        <trans-unit id="61c1e7d7392692a95473f806657e1449980d9bfb" translate="yes" xml:space="preserve">
          <source>Only dashes in class names will be camelized</source>
          <target state="translated">只有班级名称中的破折号才会被美化。</target>
        </trans-unit>
        <trans-unit id="7afbeeae1d39f150036e7fe719aa53391e6f9399" translate="yes" xml:space="preserve">
          <source>Only filename (including extensions), without path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6016169fd3a62ba77b6a3f3d028d2a274eea872" translate="yes" xml:space="preserve">
          <source>Only filename without extension or path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d826406f0ea3a738e060dd7805b2b1562dcc0df3" translate="yes" xml:space="preserve">
          <source>Only output errors and warnings happen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f089d5d3b8770cd7906985a887353c0a9d20281e" translate="yes" xml:space="preserve">
          <source>Only output when errors happen</source>
          <target state="translated">只在发生错误时输出</target>
        </trans-unit>
        <trans-unit id="cfcb6326610bc03851fa8954054544e885702fa2" translate="yes" xml:space="preserve">
          <source>Only output when errors or new compilation happen</source>
          <target state="translated">只有当错误或新的编译发生时才会输出</target>
        </trans-unit>
        <trans-unit id="ebd955a05966f7588fa307f24b531b102307f8f8" translate="yes" xml:space="preserve">
          <source>Only path, without filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b546a6601b7dc9286f26fd787228157e2df88187" translate="yes" xml:space="preserve">
          <source>Only the &quot;default&quot; export can be imported from non-ESM. Named exports are not available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3984d4a7e3308cfdeb588dfd22318c1196ac7752" translate="yes" xml:space="preserve">
          <source>Only the default export of JSON modules can be used without warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1135f9e80ad08fccc85c2fcaeac17355f34cdb0e" translate="yes" xml:space="preserve">
          <source>Only used when &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;'web'&lt;/code&gt;, which uses JSONP for loading hot updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80824d5ebb068ab46c8bc4b8718f11156726de00" translate="yes" xml:space="preserve">
          <source>Only used when &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; is web, which uses JSONP for loading hot updates.</source>
          <target state="translated">仅当&lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;是Web 时使用，Web使用JSONP加载热更新。</target>
        </trans-unit>
        <trans-unit id="b4c0bb3058fa40f5ee2924cef03211c948d76975" translate="yes" xml:space="preserve">
          <source>Only used when &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; is web, which uses JSONP for loading on-demand chunks, by adding script tags.</source>
          <target state="translated">仅在&lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;是web时使用，该网站使用JSONP通过添加脚本标签来加载按需块。</target>
        </trans-unit>
        <trans-unit id="89058d6a1647a90cdda9b88c640802187e5b05c2" translate="yes" xml:space="preserve">
          <source>Only used when &lt;a href=&quot;target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; is web, which uses JSONP for loading on-demand chunks.</source>
          <target state="translated">仅在&lt;a href=&quot;target&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;是Web 时使用，Web使用JSONP加载按需块。</target>
        </trans-unit>
        <trans-unit id="720ecb138c7bba6e94ce7293dbf933b55062d699" translate="yes" xml:space="preserve">
          <source>Only warnings</source>
          <target state="translated">只有警告</target>
        </trans-unit>
        <trans-unit id="ef5d396d661fb86ab806c8e1fa431eff7e8b332f" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;index.html&lt;/code&gt; from the &lt;code&gt;dist&lt;/code&gt; directory in your browser and, if everything went right, you should see the following text: &lt;code&gt;'Hello webpack'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274d9630257af836b1de0bed223b12743fdae53d" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;index.html&lt;/code&gt; in your browser and, if everything went right, you should see the following text: 'Hello webpack'.</source>
          <target state="translated">在浏览器中打开 &lt;code&gt;index.html&lt;/code&gt; ，如果一切正常，则应该看到以下文本：&amp;ldquo; Hello webpack&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="d3b6ed9e8ad949fbe912759ab46ac452f75c1378" translate="yes" xml:space="preserve">
          <source>Open up &lt;code&gt;dist/index.html&lt;/code&gt; again and see if our &lt;code&gt;Hello webpack&lt;/code&gt; text has changed to the new font. If all is well, you should see the changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31202570e0f452929111fb1c8df0e557d0e0fdb1" translate="yes" xml:space="preserve">
          <source>Open up &lt;code&gt;dist/index.html&lt;/code&gt; in your browser again and you should see that &lt;code&gt;Hello webpack&lt;/code&gt; is now styled in red. To see what webpack did, inspect the page (don't view the page source, as it won't show you the result, because the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag is dynamically created by JavaScript) and look at the page's head tags. It should contain the style block that we imported in &lt;code&gt;index.js&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402378c983e9601aae273e89aafca5f70c4c2f06" translate="yes" xml:space="preserve">
          <source>Open up &lt;code&gt;index.html&lt;/code&gt; again and see if our &lt;code&gt;Hello webpack&lt;/code&gt; text has changed to the new font. If all is well, you should see the changes.</source>
          <target state="translated">再次打开 &lt;code&gt;index.html&lt;/code&gt; ，看看我们的 &lt;code&gt;Hello webpack&lt;/code&gt; 文本是否已更改为新字体。如果一切顺利，您应该会看到更改。</target>
        </trans-unit>
        <trans-unit id="4f0b1f6ef524b7ad893b022bdbb5a64fe9665026" translate="yes" xml:space="preserve">
          <source>Open up &lt;code&gt;index.html&lt;/code&gt; in your browser again and you should see that &lt;code&gt;Hello webpack&lt;/code&gt; is now styled in red. To see what webpack did, inspect the page (don't view the page source, as it won't show you the result) and look at the page's head tags. It should contain our style block that we imported in &lt;code&gt;index.js&lt;/code&gt;.</source>
          <target state="translated">再次在浏览器中打开 &lt;code&gt;index.html&lt;/code&gt; ，您应该看到 &lt;code&gt;Hello webpack&lt;/code&gt; 现在以红色设置。要查看webpack的功能，请检查页面（不要查看页面源，因为它不会显示结果），并查看页面的head标签。它应该包含我们在 &lt;code&gt;index.js&lt;/code&gt; 中导入的样式块。</target>
        </trans-unit>
        <trans-unit id="52c576dc894326d738bd3c38a9fdc8b8854e92fc" translate="yes" xml:space="preserve">
          <source>Optimising your application bundle size with webpack</source>
          <target state="translated">使用webpack优化你的应用程序捆绑包大小</target>
        </trans-unit>
        <trans-unit id="fdf5e093149fa15365c797b12b39a00d5ec3a138" translate="yes" xml:space="preserve">
          <source>Optimization</source>
          <target state="translated">Optimization</target>
        </trans-unit>
        <trans-unit id="2018aa12a93a299b080f1a99fe99de979c8aa449" translate="yes" xml:space="preserve">
          <source>Optimization Bailouts</source>
          <target state="translated">优化保送</target>
        </trans-unit>
        <trans-unit id="66bdfd204469d2e3186766fc9966aa4616ba82b6" translate="yes" xml:space="preserve">
          <source>Optimizations</source>
          <target state="translated">Optimizations</target>
        </trans-unit>
        <trans-unit id="ad5d64c18d8c90fca4d0a1bde311c0f5fdd9ddff" translate="yes" xml:space="preserve">
          <source>Optimize Options</source>
          <target state="translated">优化选项</target>
        </trans-unit>
        <trans-unit id="d4d38b717f02cf8261dd2e7ac72a70cd4848f266" translate="yes" xml:space="preserve">
          <source>Optimize all assets stored in &lt;code&gt;compilation.assets&lt;/code&gt;.</source>
          <target state="translated">优化存储在所有资产 &lt;code&gt;compilation.assets&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c2f9bfdc9f4d18d243868d843f5047875784f34" translate="yes" xml:space="preserve">
          <source>Optimize and transform images to &lt;code&gt;webp&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86800fc867452deb1318b3a05f1bf6cac2de884" translate="yes" xml:space="preserve">
          <source>Optimize any chunk assets. The assets are stored in &lt;code&gt;compilation.assets&lt;/code&gt;. A &lt;code&gt;Chunk&lt;/code&gt; has a property &lt;code&gt;files&lt;/code&gt; which points to all files created by a chunk. Any additional chunk assets are stored in &lt;code&gt;compilation.additionalChunkAssets&lt;/code&gt;.</source>
          <target state="translated">优化任何大块资产。资产存储在 &lt;code&gt;compilation.assets&lt;/code&gt; 中。一 &lt;code&gt;Chunk&lt;/code&gt; 有一个属性 &lt;code&gt;files&lt;/code&gt; 指向一个数据块创建的所有文件。任何其他大块资产都存储在 &lt;code&gt;compilation.additionalChunkAssets&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="724b34c0ab3440d5bcbd5ac7fbcc160345fadd2a" translate="yes" xml:space="preserve">
          <source>Optimize images based on size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02058675b730ae8ac907d0b2e007189193540d7b" translate="yes" xml:space="preserve">
          <source>Optimize the &lt;code&gt;id&lt;/code&gt; of each chunk.</source>
          <target state="translated">优化每个块的 &lt;code&gt;id&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5eb06ba6c776b15c11031bbe7138c977ccc0a979" translate="yes" xml:space="preserve">
          <source>Optimize the chunks.</source>
          <target state="translated">优化分块。</target>
        </trans-unit>
        <trans-unit id="fd9dbc164928d45873317234ebbf7096161d5c77" translate="yes" xml:space="preserve">
          <source>Optimize the dependency tree asynchronously.</source>
          <target state="translated">异步优化依赖树。</target>
        </trans-unit>
        <trans-unit id="063ab40ae2e6475433c23fe6c9bef7c86b59b89c" translate="yes" xml:space="preserve">
          <source>Optimize your output for production by following the steps in the &lt;a href=&quot;production&quot;&gt;production guide&lt;/a&gt;. Let's also add the path to your generated bundle as the package's &lt;code&gt;main&lt;/code&gt; field in with our &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">按照&lt;a href=&quot;production&quot;&gt;生产指南中&lt;/a&gt;的步骤优化生产的产量。我们还要在 &lt;code&gt;package.json&lt;/code&gt; 中将生成的包的路径添加为包的 &lt;code&gt;main&lt;/code&gt; 字段</target>
        </trans-unit>
        <trans-unit id="53f379104414e051be5841978392501ef6c17882" translate="yes" xml:space="preserve">
          <source>Optimize your output for production by following the steps mentioned in the &lt;a href=&quot;production&quot;&gt;production guide&lt;/a&gt;. Let's also add the path to your generated bundle as the package's &lt;code&gt;main&lt;/code&gt; field in with the &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="5f18b0ec67d95838519b6ef7873dab9057e68dcf" translate="yes" xml:space="preserve">
          <source>Option Arguments</source>
          <target state="translated">选项参数</target>
        </trans-unit>
        <trans-unit id="f1027b2f404b6734997453ccd2fa019511d55439" translate="yes" xml:space="preserve">
          <source>Option to set the method of loading WebAssembly Modules. Methods included by default are &lt;code&gt;'fetch'&lt;/code&gt; (web/WebWorker), &lt;code&gt;'async-node'&lt;/code&gt; (Node.js), but others might be added by plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="translated">Optional</target>
        </trans-unit>
        <trans-unit id="e237493bf5b50b1bc0dd5ea6715309334ed442ef" translate="yes" xml:space="preserve">
          <source>Optional: The fourth option, ignored by webpack, can be anything (e.g. some meta data).</source>
          <target state="translated">可选。第四个选项,webpack会忽略,可以是任何东西(比如一些元数据)。</target>
        </trans-unit>
        <trans-unit id="c28aca8e2b3470f97278ecb5949f21d90c3d742f" translate="yes" xml:space="preserve">
          <source>Optional: The fourth option, ignored by webpack, can be anything (e.g. some metadata).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57c96856f7855749616363c3434cab642b19c9a6" translate="yes" xml:space="preserve">
          <source>Optional: The third argument must be a source map that is parsable by &lt;a href=&quot;https://github.com/mozilla/source-map&quot;&gt;this module&lt;/a&gt;.</source>
          <target state="translated">可选：第三个参数必须是可&lt;a href=&quot;https://github.com/mozilla/source-map&quot;&gt;由此模块&lt;/a&gt;解析的源映射。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="9728f61984c5ad16463d1875a69c3a86230894b1" translate="yes" xml:space="preserve">
          <source>Options are the same as &lt;a href=&quot;node#stats-tojson-options-&quot;&gt;&lt;code&gt;stats.toJson(options)&lt;/code&gt;&lt;/a&gt; with one addition:</source>
          <target state="translated">选项与&lt;a href=&quot;node#stats-tojson-options-&quot;&gt; &lt;code&gt;stats.toJson(options)&lt;/code&gt; &lt;/a&gt;相同，但增加了一个：</target>
        </trans-unit>
        <trans-unit id="b97e258b2ce87f8a54f145c314bfbfbb0f476b00" translate="yes" xml:space="preserve">
          <source>Options are the same as &lt;a href=&quot;node#statstojsonoptions&quot;&gt;&lt;code&gt;stats.toJson(options)&lt;/code&gt;&lt;/a&gt; with one addition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dde2ada91abc98feb765994fec65c53be9633a" translate="yes" xml:space="preserve">
          <source>Options can be passed with a query parameter, e.g. &lt;code&gt;?key=value&amp;amp;foo=bar&lt;/code&gt;, or a JSON object, e.g. &lt;code&gt;?{&quot;key&quot;:&quot;value&quot;,&quot;foo&quot;:&quot;bar&quot;}&lt;/code&gt;.</source>
          <target state="translated">可以使用查询参数（例如 &lt;code&gt;?key=value&amp;amp;foo=bar&lt;/code&gt; ）或JSON对象（例如 &lt;code&gt;?{&quot;key&quot;:&quot;value&quot;,&quot;foo&quot;:&quot;bar&quot;}&lt;/code&gt; 传递选项。</target>
        </trans-unit>
        <trans-unit id="e36286bb829208d28d77f1fe8e59ce104bcafce2" translate="yes" xml:space="preserve">
          <source>Options for &lt;a href=&quot;http://sass-lang.com/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; or &lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt; implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a66a8875fa2e0ee2113d2e8b7f0bf0c09a7627" translate="yes" xml:space="preserve">
          <source>Options for &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;&lt;code&gt;imagemin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="592ff757532821d86a1cb12f11ebb3467b72f91f" translate="yes" xml:space="preserve">
          <source>Options for &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;&lt;code&gt;imagemin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a601f3e0a6d16366ccf4f1d294cd61df081fb15" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;imagemin&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4346c2b052486fca121be218a0ed84af77f938" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;imagemin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9851b6fb3be9721af920d66f41ecb00764c3a248" translate="yes" xml:space="preserve">
          <source>Options for CoffeeScript. All possible options you can find &lt;a href=&quot;https://coffeescript.org/#nodejs-usage&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ff0503c4890e9094d92d01412003d6b099a512" translate="yes" xml:space="preserve">
          <source>Options for Less.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b8f13aee9301a2ebf3c08aaf6bcc1bc3a0c704" translate="yes" xml:space="preserve">
          <source>Options for Sass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5778b9f4d476271a40a2d2465ba751c62d6fed89" translate="yes" xml:space="preserve">
          <source>Options for Stylus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58e69ae18979ae5b651ffa878ebdea4581226da" translate="yes" xml:space="preserve">
          <source>Options for infrastructure level logging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f09726e23e1758c56bec1c40448535de02fb708" translate="yes" xml:space="preserve">
          <source>Options like &lt;code&gt;output.chunkLoadTimeout&lt;/code&gt;, &lt;code&gt;output.crossOriginLoading&lt;/code&gt; and &lt;code&gt;output.scriptType&lt;/code&gt; will also have effect on the external scripts loaded this way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d51d23e73cbeb258bb034bea38efe63c1162dce" translate="yes" xml:space="preserve">
          <source>Options that are compatible with &lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;webpack-dev-middleware&lt;/a&gt; have 🔑 next to them.</source>
          <target state="translated">与&lt;a href=&quot;https://github.com/webpack/webpack-dev-middleware&quot;&gt;webpack-dev-middleware&lt;/a&gt;兼容的选项旁边带有🔑。</target>
        </trans-unit>
        <trans-unit id="e831b002187c1ca07dd471e05e620b151a2f0c77" translate="yes" xml:space="preserve">
          <source>Options to pass to the html-loader. See &lt;a href=&quot;html-loader&quot;&gt;html-loader&lt;/a&gt;.</source>
          <target state="translated">传递给html-loader的选项。参见&lt;a href=&quot;html-loader&quot;&gt;html-loader&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="c2bc580e657734cab7c68b6414f5f6be06a4b56d" translate="yes" xml:space="preserve">
          <source>Opts out of any default optimization options</source>
          <target state="translated">退出任何默认的优化选项</target>
        </trans-unit>
        <trans-unit id="579cb1f521aecef786a714d13307176b814063cc" translate="yes" xml:space="preserve">
          <source>Or a substitution string:</source>
          <target state="translated">或者是一个替换字符串。</target>
        </trans-unit>
        <trans-unit id="62ee7f941acd3740b5979aa010ab34bed7802486" translate="yes" xml:space="preserve">
          <source>Or add the loader to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</source>
          <target state="translated">或将加载程序添加到您的 &lt;code&gt;webpack&lt;/code&gt; 配置中。例如：</target>
        </trans-unit>
        <trans-unit id="88048597ca66db3d3f0e2283073e6ad3280ebf5d" translate="yes" xml:space="preserve">
          <source>Or from the command-line:</source>
          <target state="translated">或从命令行。</target>
        </trans-unit>
        <trans-unit id="4299e2e925756675f72d5cd238eb192203bb0f93" translate="yes" xml:space="preserve">
          <source>Or if you prefer ES2015:</source>
          <target state="translated">或者如果你喜欢ES2015。</target>
        </trans-unit>
        <trans-unit id="42b400c4fd0735f1d89abd8c4714b4a52afceca7" translate="yes" xml:space="preserve">
          <source>Or on the command-line:</source>
          <target state="translated">或者在命令行上。</target>
        </trans-unit>
        <trans-unit id="a927e15e4fef4d4d541af825a8ccd81e41fe57ec" translate="yes" xml:space="preserve">
          <source>Or pass an error to the callback in async mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ff562d21ab08937a5659caeb58bb2ea81f3323" translate="yes" xml:space="preserve">
          <source>Or provide a chunk name within a &lt;code&gt;name&lt;/code&gt; query parameter:</source>
          <target state="translated">或者在 &lt;code&gt;name&lt;/code&gt; 查询参数中提供块名称：</target>
        </trans-unit>
        <trans-unit id="0f5ba6d7de5a002758743861114c3c6db71f8931" translate="yes" xml:space="preserve">
          <source>Or specify the proxied components in your configuration:</source>
          <target state="translated">或者在配置中指定代理组件。</target>
        </trans-unit>
        <trans-unit id="d51d3af226498a76e24107125e840dcd31bd8233" translate="yes" xml:space="preserve">
          <source>Or using a &lt;code&gt;Function&lt;/code&gt;:</source>
          <target state="translated">或使用 &lt;code&gt;Function&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a3e30ba9d574feb7c422f9e4dd767cfcd41fb76c" translate="yes" xml:space="preserve">
          <source>Or you can apply specific plugins you want:</source>
          <target state="translated">或者你可以应用你想要的特定插件。</target>
        </trans-unit>
        <trans-unit id="548b8be6712aca1d87a33596575b4f0b286e4a6c" translate="yes" xml:space="preserve">
          <source>Or you can create a global module and symlink to the local one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd629f04ae3d7bf51edb089b4c17c8770562b864" translate="yes" xml:space="preserve">
          <source>Or, as function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1d5ca32ce0b0094f78920f00238713e52e2c68" translate="yes" xml:space="preserve">
          <source>Or, in case of just a &lt;code&gt;from&lt;/code&gt; with the default destination, you can also use a &lt;code&gt;{String}&lt;/code&gt; as shorthand instead of an &lt;code&gt;{Object}&lt;/code&gt;</source>
          <target state="translated">或者，如果仅使用默认目的地的 &lt;code&gt;from&lt;/code&gt; ，则也可以使用 &lt;code&gt;{String}&lt;/code&gt; 作为速记来代替 &lt;code&gt;{Object}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7dc586b794d0f2f0123ec40266bce0de0311da18" translate="yes" xml:space="preserve">
          <source>Or, to add as standard module as per &lt;a href=&quot;https://github.com/dherman/defense-of-dot-js/blob/master/proposal.md#typical-usage&quot;&gt;this guide&lt;/a&gt;:</source>
          <target state="translated">或者，按照&lt;a href=&quot;https://github.com/dherman/defense-of-dot-js/blob/master/proposal.md#typical-usage&quot;&gt;本指南&lt;/a&gt;添加为标准模块：</target>
        </trans-unit>
        <trans-unit id="1c61f78a7c6406901d52386c92a5f1b9810c0e03" translate="yes" xml:space="preserve">
          <source>Or, to add it as a standard module as per &lt;a href=&quot;https://github.com/dherman/defense-of-dot-js/blob/master/proposal.md#typical-usage&quot;&gt;this guide&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2769995d7aa4f59c417df977dc581a297b53e205" translate="yes" xml:space="preserve">
          <source>Order the modules and chunks by occurrence. This saves space, because often referenced modules and chunks get smaller ids.</source>
          <target state="translated">按发生次数对模块和chunks进行排序。这可以节省空间,因为经常被引用的模块和chunks的id比较小。</target>
        </trans-unit>
        <trans-unit id="2967fb6b9dbc531fdccdc62a709f0b9b3f045265" translate="yes" xml:space="preserve">
          <source>Originally, chunks (and modules imported inside them) were connected by a parent-child relationship in the internal webpack graph. The &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; was used to avoid duplicated dependencies across them, but further optimizations were not possible</source>
          <target state="translated">最初，块（及其内部导入的模块）是通过内部Webpack图形中的父子关系连接的。该 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 被用来避免在这些重复的依赖，但进一步的优化是不可能的</target>
        </trans-unit>
        <trans-unit id="2b0118aed61196f5eed6f43529150f0d1186014c" translate="yes" xml:space="preserve">
          <source>Originally, chunks (and modules imported inside them) were connected by a parent-child relationship in the internal webpack graph. The &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; was used to avoid duplicated dependencies across them, but further optimizations were not possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcf81a9103052a3ce5b11d9884ce8fb6379af91" translate="yes" xml:space="preserve">
          <source>Other Code and Frameworks</source>
          <target state="translated">其他代码和框架</target>
        </trans-unit>
        <trans-unit id="9cb6f2fb01dfa81e12bc1e11f0e7b676e54669fd" translate="yes" xml:space="preserve">
          <source>Other Options</source>
          <target state="translated">其他选择</target>
        </trans-unit>
        <trans-unit id="9f43af92a10e29a062869a02d2b19f320ff7d737" translate="yes" xml:space="preserve">
          <source>Other Targets</source>
          <target state="translated">其他目标</target>
        </trans-unit>
        <trans-unit id="a6a3346524b28d21d18a28316c1731fc127a349f" translate="yes" xml:space="preserve">
          <source>Other Utilities</source>
          <target state="translated">其他公用事业</target>
        </trans-unit>
        <trans-unit id="d9c2e3a6f8b3ea9219d86ce1d7f7a3f8de962df1" translate="yes" xml:space="preserve">
          <source>Other examples using different module formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164b7710bcd6917de534087ff1e2ed001f404c41" translate="yes" xml:space="preserve">
          <source>Other node core libraries</source>
          <target state="translated">其他节点核心库</target>
        </trans-unit>
        <trans-unit id="748e927e98cf6fa8a8a6ea344312832b4e6a6f35" translate="yes" xml:space="preserve">
          <source>Other tips for Use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4653e7976f9770f2699c713bdc5215cd4f6c2d22" translate="yes" xml:space="preserve">
          <source>Otherwise, the file extension is resolved using the &lt;a href=&quot;../configuration/resolve#resolve-extensions&quot;&gt;&lt;code&gt;resolve.extensions&lt;/code&gt;&lt;/a&gt; option, which tells the resolver which extensions (eg - &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;) are acceptable for resolution.</source>
          <target state="translated">否则，文件扩展名是使用解决&lt;a href=&quot;../configuration/resolve#resolve-extensions&quot;&gt; &lt;code&gt;resolve.extensions&lt;/code&gt; &lt;/a&gt;（ -如选项，它告诉解析器实现了扩展 &lt;code&gt;.js&lt;/code&gt; ， &lt;code&gt;.jsx&lt;/code&gt; ）是分辨率可以接受的。</target>
        </trans-unit>
        <trans-unit id="d7c2d976aa8ed2aa5de9a29e172e195a80941ad2" translate="yes" xml:space="preserve">
          <source>Otherwise, the file extension is resolved using the &lt;a href=&quot;../configuration/resolve#resolveextensions&quot;&gt;&lt;code&gt;resolve.extensions&lt;/code&gt;&lt;/a&gt; option, which tells the resolver which extensions are acceptable for resolution e.g. &lt;code&gt;.js&lt;/code&gt;, &lt;code&gt;.jsx&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72be90f155341141ab65b4cd9267be474f7c66e0" translate="yes" xml:space="preserve">
          <source>Out of the box &lt;code&gt;SplitChunksPlugin&lt;/code&gt; should work great for most users.</source>
          <target state="translated">开箱即用的 &lt;code&gt;SplitChunksPlugin&lt;/code&gt; 应该适合大多数用户。</target>
        </trans-unit>
        <trans-unit id="c29222847046578467b267aa47d594172f93cfd2" translate="yes" xml:space="preserve">
          <source>Out of the box &lt;code&gt;SplitChunksPlugin&lt;/code&gt; should work well for most users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf81e2a4d48ca5dfb4018a0b5da4dc3d759f6dd" translate="yes" xml:space="preserve">
          <source>Out of the box, webpack only understands JavaScript and JSON files. &lt;strong&gt;Loaders&lt;/strong&gt; allow webpack to process other types of files and convert them into valid &lt;a href=&quot;modules&quot;&gt;modules&lt;/a&gt; that can be consumed by your application and added to the dependency graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dea8748bb619371cecdb1a800acca07d21d1d14" translate="yes" xml:space="preserve">
          <source>Out of the box, webpack only understands JavaScript files. &lt;strong&gt;Loaders&lt;/strong&gt; allow webpack to process other types of files and convert them into valid &lt;a href=&quot;modules&quot;&gt;modules&lt;/a&gt; that can be consumed by your application and added to the dependency graph.</source>
          <target state="translated">开箱即用的webpack仅能理解JavaScript文件。&lt;strong&gt;装载机&lt;/strong&gt;允许的WebPack处理其他类型的文件，并将其转换为有效的&lt;a href=&quot;modules&quot;&gt;模块&lt;/a&gt;，可以通过您的应用程序消耗并添加到依赖关系图。</target>
        </trans-unit>
        <trans-unit id="aa55ace273d955497ca2efda61e6d78947e927c7" translate="yes" xml:space="preserve">
          <source>Out of the box, webpack won't require you to use a configuration file. However, it will assume the entry point of your project is &lt;code&gt;src/index.js&lt;/code&gt; and will output the result in &lt;code&gt;dist/main.js&lt;/code&gt; minified and optimized for production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b7d4b68bfe648eaf6de08120bde75436bb94ff" translate="yes" xml:space="preserve">
          <source>Out of the box, webpack won't require you to use a configuration file. However, it will assume the entry point of your project is &lt;code&gt;src/index&lt;/code&gt; and will output the result in &lt;code&gt;dist/main.js&lt;/code&gt; minified and optimized for production.</source>
          <target state="translated">Webpack开箱即用，不需要您使用配置文件。但是，它将假定项目的入口点是 &lt;code&gt;src/index&lt;/code&gt; ，并将结果 &lt;code&gt;dist/main.js&lt;/code&gt; 并优化后用于生产的dist / main.js中输出。</target>
        </trans-unit>
        <trans-unit id="d3f0610632bbef35bfaa389ca89023fd50c6dd62" translate="yes" xml:space="preserve">
          <source>Outcome</source>
          <target state="translated">Outcome</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="31907ec3a5be78cc563099c264375fdb7886f469" translate="yes" xml:space="preserve">
          <source>Output Filenames</source>
          <target state="translated">输出文件名</target>
        </trans-unit>
        <trans-unit id="aa36220cfc69d0a1ee678254e922b40c3459f898" translate="yes" xml:space="preserve">
          <source>Output Management</source>
          <target state="translated">产出管理</target>
        </trans-unit>
        <trans-unit id="fcd12607f17f8ae3c1aae3e2ae27e439345801a6" translate="yes" xml:space="preserve">
          <source>Output Options</source>
          <target state="translated">输出选项</target>
        </trans-unit>
        <trans-unit id="5cefca5bd5c8ac5f884cdd9e5d63fca191c4cdad" translate="yes" xml:space="preserve">
          <source>Output Without Path Info</source>
          <target state="translated">无路径信息的输出</target>
        </trans-unit>
        <trans-unit id="78d777aae91ea576ceaee3d45b01ad3435e7cce3" translate="yes" xml:space="preserve">
          <source>Output cli information. It is enabled by default.</source>
          <target state="translated">输出Cli信息。默认情况下是启用的。</target>
        </trans-unit>
        <trans-unit id="94e22a6ec6fd2d9123ea673737e219c0d79bdced" translate="yes" xml:space="preserve">
          <source>Output everything</source>
          <target state="translated">输出一切</target>
        </trans-unit>
        <trans-unit id="661892806f66f11faaf25d11ac89a058b9057641" translate="yes" xml:space="preserve">
          <source>Output everything except &lt;code&gt;chunkModules&lt;/code&gt; and &lt;code&gt;chunkRootModules&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85df5e35434c1a5376977b90aa2f2b4d2996ced1" translate="yes" xml:space="preserve">
          <source>Output filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e99a80b3fe54f415b43b27097f41e8c986da395" translate="yes" xml:space="preserve">
          <source>Output location of the file generated by webpack e.g. &lt;code&gt;./dist&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5acfe12ea07fb8ea46b335a837e4d39082cb4b4e" translate="yes" xml:space="preserve">
          <source>Output may differ depending on your current webpack version. Newer versions may not have all the same issues with hashing as some older versions, but we still recommend the following steps to be safe.</source>
          <target state="translated">输出可能会根据您当前的webpack版本而有所不同。新的版本可能不会像一些旧版本那样存在同样的哈希问题,但为了安全起见,我们还是建议采取以下步骤。</target>
        </trans-unit>
        <trans-unit id="b01cd12e0a3c672d6fd96717a91de6f52cff5761" translate="yes" xml:space="preserve">
          <source>Output nothing</source>
          <target state="translated">不输出任何东西</target>
        </trans-unit>
        <trans-unit id="2bfe6cbb19179698183561457ded58623acee62f" translate="yes" xml:space="preserve">
          <source>Output path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283c87d1343db905c99fd3e4c33c0ff5f92a966e" translate="yes" xml:space="preserve">
          <source>Output root if &lt;code&gt;from&lt;/code&gt; is file or dir, resolved glob path if &lt;code&gt;from&lt;/code&gt; is glob</source>
          <target state="translated">输出根如果 &lt;code&gt;from&lt;/code&gt; 是文件或目录，解决了水珠的路径，如果 &lt;code&gt;from&lt;/code&gt; 是水珠</target>
        </trans-unit>
        <trans-unit id="987b8eef83e7f7a3b02b84875c2c2c3993b6e4b2" translate="yes" xml:space="preserve">
          <source>Output running progress to console.</source>
          <target state="translated">将运行进度输出到控制台。</target>
        </trans-unit>
        <trans-unit id="f3c8c95c5e534bcd2ea0034a0d83177efa6923f4" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Output:</target>
        </trans-unit>
        <trans-unit id="a3b4424f964b81cc5bcfe2b439496a6ff469dacc" translate="yes" xml:space="preserve">
          <source>Outputs information about your system and dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b4688fb4497807a4c8c9d68a435271e457deec" translate="yes" xml:space="preserve">
          <source>Outputs list of supported flags and commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6450af99eaaf4c4b937428ec7e5d80bb469e468" translate="yes" xml:space="preserve">
          <source>Override default minify function - use &lt;code&gt;uglify-js&lt;/code&gt; for minification.</source>
          <target state="translated">覆盖默认的缩小功能-使用 &lt;code&gt;uglify-js&lt;/code&gt; 进行缩小。</target>
        </trans-unit>
        <trans-unit id="e41d0c69ce84028ee812f50e08e3c0fe2856797b" translate="yes" xml:space="preserve">
          <source>Override the &lt;code&gt;publicPath&lt;/code&gt; setting for this loader</source>
          <target state="translated">覆盖此加载程序的 &lt;code&gt;publicPath&lt;/code&gt; 设置</target>
        </trans-unit>
        <trans-unit id="7a7d47fce48acf58b47aa4b2613746aa85bf70fa" translate="yes" xml:space="preserve">
          <source>Override the inferred context of a &lt;code&gt;require&lt;/code&gt; expression</source>
          <target state="translated">覆盖 &lt;code&gt;require&lt;/code&gt; 表达式的推断上下文</target>
        </trans-unit>
        <trans-unit id="3e7169a4fd509319454fce735451cddb14ece56f" translate="yes" xml:space="preserve">
          <source>Overrides are provided in a similar way as the container exposes modules, separated into two steps:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55a541144e6bf0b62180c479324b41db153070f" translate="yes" xml:space="preserve">
          <source>Overrides must be provided before the modules of the container are loaded. Overridables that are used in initial chunk, can only be overridden by a synchronous module override that doesn't use Promises. Once evaluated, overridables are no longer overridable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4548704a9cf96f5c80e64da876d62bd8a09f9fd5" translate="yes" xml:space="preserve">
          <source>Overrides the path from which worker scripts are downloaded. If not specified, the same public path used for other webpack assets is used.</source>
          <target state="translated">重写下载 Worker 脚本的路径。如果没有指定,则使用与其他webpack资产相同的公共路径。</target>
        </trans-unit>
        <trans-unit id="c6135137749f44ab01770866a1a5ad05ffe9fd2a" translate="yes" xml:space="preserve">
          <source>Overriding</source>
          <target state="translated">Overriding</target>
        </trans-unit>
        <trans-unit id="17f304384bc4e2686063ab1f4a2a78f9db0327d8" translate="yes" xml:space="preserve">
          <source>Overriding modules is a one-directional operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7f5dcce2431faa8c81e362f061ec0d6c7ca706" translate="yes" xml:space="preserve">
          <source>Overwrites files already in &lt;code&gt;compilation.assets&lt;/code&gt; (usually added by other plugins/loaders)</source>
          <target state="translated">覆盖文件已经在 &lt;code&gt;compilation.assets&lt;/code&gt; （通常由其他插件/装载机加）</target>
        </trans-unit>
        <trans-unit id="dc2451a0334508fc6e4069e13d9f5a761b0d9e13" translate="yes" xml:space="preserve">
          <source>Overwrites files already in &lt;code&gt;compilation.assets&lt;/code&gt; (usually added by other plugins/loaders).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9f6fa5a3ce578a059be19b7a65f2fb3934a0f5" translate="yes" xml:space="preserve">
          <source>Package entry points in Node.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8464afe7016605580e6dba139c430ce6bdf714d1" translate="yes" xml:space="preserve">
          <source>Package exports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48804509ff7043f630d59176ab8fe0388d9722f4" translate="yes" xml:space="preserve">
          <source>Packages are rotting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62df9105ffbe0ac3ff022061a5b5adbce84148b" translate="yes" xml:space="preserve">
          <source>Paired with &lt;code&gt;--progress&lt;/code&gt;, &lt;code&gt;--profile&lt;/code&gt; gives you an in depth idea of which step in the compilation is taking how long. This can help you optimise your build in a more informed manner.</source>
          <target state="translated">与配对 &lt;code&gt;--progress&lt;/code&gt; ， &lt;code&gt;--profile&lt;/code&gt; 为您提供了一个深入了解哪些步骤编译多久服用。这可以帮助您以更明智的方式优化构建。</target>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="translated">Parameter</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="c991f93c6f2615505243143a75c3501413eb1c2a" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;assets&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;assets&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90d5ef260713b6cedae194a2cbad71df445f4f77" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;ast&lt;/code&gt;&lt;code&gt;comments&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;ast&lt;/code&gt; &lt;code&gt;comments&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73e275dcbd3f5bf47f5505559e9504642b8e930b" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;childCompiler&lt;/code&gt;&lt;code&gt;compilerName&lt;/code&gt;&lt;code&gt;compilerIndex&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;childCompiler&lt;/code&gt; &lt;code&gt;compilerName&lt;/code&gt; &lt;code&gt;compilerIndex&lt;/code&gt; 名称CompilerIndex</target>
        </trans-unit>
        <trans-unit id="c79f0b6f9e31573d9ffa15a9fb789159922bd31e" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;chunk&lt;/code&gt;&lt;code&gt;chunkHash&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;chunk&lt;/code&gt; &lt;code&gt;chunkHash&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c5de9353c41900f7cc9830f0646bc0fa669708d" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;chunk&lt;/code&gt;&lt;code&gt;filename&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;chunk&lt;/code&gt; &lt;code&gt;filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="750d84381779421de68c42062c5ddab4698e3486" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;chunks&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;chunks&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e5636940b4dc3dc9e0f4427f619d2ebaa33db5c" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;chunks&lt;/code&gt;&lt;code&gt;modules&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;chunks&lt;/code&gt; &lt;code&gt;modules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="43c826f3755620ba502465d8fdd73de0f745b8a6" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;chunks&lt;/code&gt;&lt;code&gt;records&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;chunks&lt;/code&gt; &lt;code&gt;records&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="134cac6025b323774eb8179251b0f6fb2bf96d01" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;compilation&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;compilation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2727aeb16aadf78295c5bd4a2c75012e55cab33" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;compilation&lt;/code&gt;&lt;code&gt;records&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;compilation&lt;/code&gt; &lt;code&gt;records&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e2604ad91c4fb4f7140b65b8321f116f6bbdb49a" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;compilationParams&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;compilationParams&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="358aeccf97432c4567cbfb2ba6011fde70b7a9e5" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;compiler&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;compiler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d83fb6de943f2454a64388c12c7bd216e69a47d6" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;context&lt;/code&gt;, &lt;code&gt;entry&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3881d0d3fb7b473209e5f26fc9b60107b12dd717" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;contextModuleFactory&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;contextModuleFactory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e500e62253beff7e7b5cdb1136378a640915ec4" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;declaration&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;declaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93b7b50f6f2c327b7a133c81eeca3d4f25c8238c" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;depRef&lt;/code&gt;&lt;code&gt;dependency&lt;/code&gt;&lt;code&gt;module&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;depRef&lt;/code&gt; &lt;code&gt;dependency&lt;/code&gt; &lt;code&gt;module&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95c1249b8cda0474a3c8ed88c0cb58c97638ee49" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;error&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;error&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d2965c99dc7348b590c60e8ebb0897c992044d5" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;expression&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;expression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ccdb3ed547f580cdabef52c215215c64efa3c4c" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;expression&lt;/code&gt;&lt;code&gt;param&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;expression&lt;/code&gt; &lt;code&gt;param&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fd8dbb04e1aba5ca2a1c485f742ded6bd2b3ec0" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;fileName&lt;/code&gt;, &lt;code&gt;changeTime&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;fileName&lt;/code&gt; ， &lt;code&gt;changeTime&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c8040cb4bbacc51d2af2b339355655aaad2fbdc9" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;filename&lt;/code&gt;&lt;code&gt;data&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;filename&lt;/code&gt; &lt;code&gt;data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f72e57dbf055f2ab852992315ef092fed313809b" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;initExpression&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;initExpression&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07f6255d8e468a3d3a5efe6c994ef655705935d7" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;loaderContext&lt;/code&gt;&lt;code&gt;module&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;loaderContext&lt;/code&gt; &lt;code&gt;module&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a72008dac1303eb45b36ce62dbc5c678c1fbe85e" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;module&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;module&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="183eeba3bcdd63b435c108f06511e3def4ff6a3e" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;module&lt;/code&gt;&lt;code&gt;error&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;module&lt;/code&gt; &lt;code&gt;error&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0678017eab5a67be4284d37b217ad58da0a1264" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;module&lt;/code&gt;&lt;code&gt;filename&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;module&lt;/code&gt; &lt;code&gt;filename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="393e20853c024b1e61234fc6dbc4a239218482dd" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;modules&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;modules&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="45c6ad20b68012384f24f03273152bff0670a28d" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;modules&lt;/code&gt;&lt;code&gt;records&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;modules&lt;/code&gt; &lt;code&gt;records&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe7d7aacb1a5e33fbf0b36e2c9f6570cebc159d6" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;normalModuleFactory&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;normalModuleFactory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="33836371ac0c080ece95dd435ca0a7783875bb9e" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;records&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;records&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50ff59b8d5d6842b64d4779f3ab7252d6a51f359" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bbaf0fbeec68fba8045c7439ee421648ae5aeb57" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;&lt;code&gt;declaration&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt; &lt;code&gt;declaration&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44b3f428537530948b885defbb5b94e5a0192b4c" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;&lt;code&gt;identifierName&lt;/code&gt;&lt;code&gt;exportName&lt;/code&gt;&lt;code&gt;index&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt; &lt;code&gt;identifierName&lt;/code&gt; &lt;code&gt;exportName&lt;/code&gt; &lt;code&gt;index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8a370f0db751365267990ae5e925f09c0bc0b03" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;&lt;code&gt;source&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt; &lt;code&gt;source&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65bf8ac879e1b4ddebbe4cff09b464b8bd66db9e" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;&lt;code&gt;source&lt;/code&gt;&lt;code&gt;exportName&lt;/code&gt;&lt;code&gt;identifierName&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt; &lt;code&gt;source&lt;/code&gt; &lt;code&gt;exportName&lt;/code&gt; &lt;code&gt;identifierName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07a3f15cf76a6ec9ba4f52e3b74ad9df5140a75f" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;statement&lt;/code&gt;&lt;code&gt;source&lt;/code&gt;&lt;code&gt;identifierName&lt;/code&gt;&lt;code&gt;exportName&lt;/code&gt;&lt;code&gt;index&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;statement&lt;/code&gt; &lt;code&gt;source&lt;/code&gt; &lt;code&gt;identifierName&lt;/code&gt; &lt;code&gt;exportName&lt;/code&gt; &lt;code&gt;index&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8c0bb41ee59e42c76f4f0b0da6f3fa83f528532" translate="yes" xml:space="preserve">
          <source>Parameters: &lt;code&gt;stats&lt;/code&gt;</source>
          <target state="translated">参数： &lt;code&gt;stats&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1b3cf5033ed01a4fcbff3f2957e66cfe44af45a9" translate="yes" xml:space="preserve">
          <source>Parser</source>
          <target state="translated">Parser</target>
        </trans-unit>
        <trans-unit id="671507423a5ce51b91d522731ab85745d3d74657" translate="yes" xml:space="preserve">
          <source>Parser options: An options object which should be used to create the parser for this module.</source>
          <target state="translated">解析器选项。一个选项对象,用于创建本模块的解析器。</target>
        </trans-unit>
        <trans-unit id="43bc94b7434511df8e3fc1fa270f99760c5db1de" translate="yes" xml:space="preserve">
          <source>Parsers may inspect these options and disable or reconfigure themselves accordingly. Most of the default plugins interpret the values as follows:</source>
          <target state="translated">解析器可以检查这些选项,并相应地禁用或重新配置自己。大多数默认插件对这些值的解释如下:</target>
        </trans-unit>
        <trans-unit id="3d91a80c9424b0cd790f2d89ceb18365f304810a" translate="yes" xml:space="preserve">
          <source>Pass &lt;a href=&quot;https://github.com/remarkjs/remark/tree/main/packages/remark-stringify#options&quot;&gt;&lt;code&gt;remark-stringify&lt;/code&gt; options&lt;/a&gt; and &lt;a href=&quot;https://github.com/remarkjs/remark/tree/main/packages/remark-parse#options&quot;&gt;&lt;code&gt;remark-parse&lt;/code&gt; options&lt;/a&gt; options to the &lt;code&gt;remark&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a87c77193cd00bddf1f009ea53e0eae7bb5cdcf" translate="yes" xml:space="preserve">
          <source>Pass &lt;code&gt;loaderContext&lt;/code&gt; in plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc2b82cdbbdc82a8a4bb8c0a2e4f9a8d35144ff" translate="yes" xml:space="preserve">
          <source>Pass CLI arguments to Node.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f37fa03d741e390b4646ce553be76d46bc93b97" translate="yes" xml:space="preserve">
          <source>Pass a boolean to enable or disable this feature for all modules (defaults to &lt;code&gt;false&lt;/code&gt;). An object with &lt;code&gt;test&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;exclude&lt;/code&gt; is also allowed. For example, to enable this feature for all javascript files within a certain directory:</source>
          <target state="translated">传递一个布尔值以为所有模块启用或禁用此功能（默认为 &lt;code&gt;false&lt;/code&gt; ）。也允许带有 &lt;code&gt;test&lt;/code&gt; ， &lt;code&gt;include&lt;/code&gt; ， &lt;code&gt;exclude&lt;/code&gt; 的对象。例如，要为某个目录内的所有javascript文件启用此功能：</target>
        </trans-unit>
        <trans-unit id="4361e47b71597632ec2c755166dece322371eb56" translate="yes" xml:space="preserve">
          <source>Pass values to the next loader. If you know what your result exports if executed as a module, set this value here (as an only element array).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b936ea14312d991018d6db2aecbac5ce71bd65bc" translate="yes" xml:space="preserve">
          <source>Pass values to the next loader. If you know what your result exports if executed as module, set this value here (as a only element array).</source>
          <target state="translated">将值传递给下一个加载器。如果你知道你的结果作为模块执行时的输出内容,请在这里设置这个值(作为一个唯一的元素数组)。</target>
        </trans-unit>
        <trans-unit id="aaf0f8e2dd7690a96babc2d12d436898010ee0d1" translate="yes" xml:space="preserve">
          <source>Passed from the last loader. If you would execute the input argument as a module, consider reading this variable for a shortcut (for performance).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44985ac8eb7552b2ccc31a28f6ff40c010ff5141" translate="yes" xml:space="preserve">
          <source>Passed from the last loader. If you would execute the input argument as module, consider reading this variable for a shortcut (for performance).</source>
          <target state="translated">从最后一个加载器传递过来的。如果你想以模块的形式执行输入参数,请考虑读取这个变量以获得快捷方式(为了性能)。</target>
        </trans-unit>
        <trans-unit id="ccddcde23a3566aa4120d1946a6cfb7c456fe6f4" translate="yes" xml:space="preserve">
          <source>Passing a string (i.e. &lt;code&gt;use: [ &quot;style-loader&quot; ]&lt;/code&gt;) is a shortcut to the loader property (i.e. &lt;code&gt;use: [ { loader: &quot;style-loader &quot;} ]&lt;/code&gt;).</source>
          <target state="translated">传递字符串（即 &lt;code&gt;use: [ &quot;style-loader&quot; ]&lt;/code&gt; ）是loader属性的快捷方式（即 &lt;code&gt;use: [ { loader: &quot;style-loader &quot;} ]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ea2f772453c4c9a18e9af02a7be2ffdb0b433f7d" translate="yes" xml:space="preserve">
          <source>Passing a string (i.e. &lt;code&gt;use: [ 'style-loader' ]&lt;/code&gt;) is a shortcut to the loader property (i.e. &lt;code&gt;use: [ { loader: 'style-loader '} ]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b04e6e4c7567222f24f018866d959fba17be475" translate="yes" xml:space="preserve">
          <source>Passing the &lt;code&gt;minChunks&lt;/code&gt; property a function</source>
          <target state="translated">将 &lt;code&gt;minChunks&lt;/code&gt; 属性传递给函数</target>
        </trans-unit>
        <trans-unit id="b68bd7e9f8b4dc2c3ce3d7a6e613390ad93621a5" translate="yes" xml:space="preserve">
          <source>Patches ties of module and chunk after removing dependency reasons. Called automatically by &lt;code&gt;removeReasonsOfDependencyBlock&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761dfb7e989b01b8713a72591a10c87329ed9a59" translate="yes" xml:space="preserve">
          <source>Path Translations</source>
          <target state="translated">路径翻译</target>
        </trans-unit>
        <trans-unit id="eebf4eccd786dfcb9ed1df853f98d2125c371483" translate="yes" xml:space="preserve">
          <source>Path to &lt;code&gt;eslint&lt;/code&gt; instance that will be used for linting.</source>
          <target state="translated">&lt;code&gt;eslint&lt;/code&gt; 实例的路径，将用于整理。</target>
        </trans-unit>
        <trans-unit id="86834b835aa4d0a4ee663bfae4efaddc93a34eee" translate="yes" xml:space="preserve">
          <source>Path to &lt;code&gt;eslint&lt;/code&gt; instance that will be used for linting. If the &lt;code&gt;eslintPath&lt;/code&gt; is a folder like a official eslint, or specify a &lt;code&gt;formatter&lt;/code&gt; option. now you dont have to install &lt;code&gt;eslint&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06993c089bb935f882ce99f8d4e951b05bdcd530" translate="yes" xml:space="preserve">
          <source>Path to &lt;code&gt;stylelint&lt;/code&gt; instance that will be used for linting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ce615fbd4de707138cf2519532f0642d38a706" translate="yes" xml:space="preserve">
          <source>Path to cache directory.</source>
          <target state="translated">缓存目录的路径。</target>
        </trans-unit>
        <trans-unit id="561fb7d4495d192d7e6dab825d4b99213cf43235" translate="yes" xml:space="preserve">
          <source>Path to the config file</source>
          <target state="translated">配置文件的路径</target>
        </trans-unit>
        <trans-unit id="c1e2d1dce001279bae94ea8e6b3b641b9bbed875" translate="yes" xml:space="preserve">
          <source>Path to the configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8bfd55f37472276f7b8ae263add7e0f0d412d7" translate="yes" xml:space="preserve">
          <source>Path to the records file</source>
          <target state="translated">记录文件的路径</target>
        </trans-unit>
        <trans-unit id="b388b4324a9ca3ee8c5ec5a3752ef62a520c3006" translate="yes" xml:space="preserve">
          <source>Path to the records file (reading)</source>
          <target state="translated">记录文件的路径(读取</target>
        </trans-unit>
        <trans-unit id="e41acbf6a6ed59dd01f7f7eb75acaebd59a6e898" translate="yes" xml:space="preserve">
          <source>Path to the records file (writing)</source>
          <target state="translated">记录文件的路径(写)</target>
        </trans-unit>
        <trans-unit id="b95fd68a6e7f6a610c51b680d468fe0bb34b236e" translate="yes" xml:space="preserve">
          <source>Pattern for extracting elements to be used in &lt;code&gt;to&lt;/code&gt; templates</source>
          <target state="translated">模式用于提取元素中使用 &lt;code&gt;to&lt;/code&gt; 的模板</target>
        </trans-unit>
        <trans-unit id="4d34f7a2b0b3b6df62a051917d7e7ac2de8a38df" translate="yes" xml:space="preserve">
          <source>Patterns</source>
          <target state="translated">Patterns</target>
        </trans-unit>
        <trans-unit id="720ba31b8c84226b1a83066ab9e1da80a8ba85c9" translate="yes" xml:space="preserve">
          <source>Percentage calculation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="44f841c0a9265fe3a73e5c54d51edf6763b78ba7" translate="yes" xml:space="preserve">
          <source>Persistent cache</source>
          <target state="translated">永久性缓存</target>
        </trans-unit>
        <trans-unit id="8d96fe182eadd6337a10c14835f72230352ca486" translate="yes" xml:space="preserve">
          <source>Pitching Loader</source>
          <target state="translated">投掷式装载机</target>
        </trans-unit>
        <trans-unit id="b62930d0710de4268cfd1b4505b2a2ad7a57660d" translate="yes" xml:space="preserve">
          <source>Placeholders</source>
          <target state="translated">Placeholders</target>
        </trans-unit>
        <trans-unit id="fb37135e0ea40744f1df3c3ff8b6e3e548e435d1" translate="yes" xml:space="preserve">
          <source>Please consult documentation before using them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcbfad7a98fe256dfb32d31c12ca3bb5ce5f97f" translate="yes" xml:space="preserve">
          <source>Please note that &lt;code&gt;sideEffects&lt;/code&gt; should be in the npm module's &lt;code&gt;package.json&lt;/code&gt; file and doesn't mean that you need to set &lt;code&gt;sideEffects&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in your own project's &lt;code&gt;package.json&lt;/code&gt; which requires that big module.</source>
          <target state="translated">请注意， &lt;code&gt;sideEffects&lt;/code&gt; 应该位于npm模块的 &lt;code&gt;package.json&lt;/code&gt; 文件中，并不意味着您需要在自己项目的 &lt;code&gt;package.json&lt;/code&gt; 中将 &lt;code&gt;sideEffects&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; ，这需要该大模块。</target>
        </trans-unit>
        <trans-unit id="afa9b2adb3fe687dd4a8cc44484250444f9b490d" translate="yes" xml:space="preserve">
          <source>Please note that CSPs are not enabled by default. A corresponding header &lt;code&gt;Content-Security-Policy&lt;/code&gt; or meta tag &lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Security-Policy&quot; ...&amp;gt;&lt;/code&gt; needs to be sent with the document to instruct the browser to enable the CSP. Here's an example of what a CSP header including a CDN white-listed URL might look like:</source>
          <target state="translated">请注意，默认情况下未启用CSP。需要将相应的标头 &lt;code&gt;Content-Security-Policy&lt;/code&gt; 或元标记 &lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Security-Policy&quot; ...&amp;gt;&lt;/code&gt; 与文档一起发送，以指示浏览器启用CSP。这是一个包含CDN白名单URL的CSP标头可能看起来像的示例：</target>
        </trans-unit>
        <trans-unit id="d792a7b7ee2ee5a7c18e906c3b790687a371ade2" translate="yes" xml:space="preserve">
          <source>Please remember that setting &lt;code&gt;NODE_ENV&lt;/code&gt; doesn't automatically set &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">请记住，设置 &lt;code&gt;NODE_ENV&lt;/code&gt; 不会自动设置 &lt;code&gt;mode&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a24274736159e5bb51eec33d2965184b8a8d058e" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://github.com/webpack/tapable&quot;&gt;documentation&lt;/a&gt; to learn more. An understanding of the three &lt;code&gt;tap&lt;/code&gt; methods, as well as the hooks that provide them is crucial. The objects that extend &lt;code&gt;Tapable&lt;/code&gt; (e.g. the compiler), the hooks they provide, and each hook's type (e.g. the &lt;code&gt;SyncHook&lt;/code&gt;) will be noted.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://github.com/webpack/tapable&quot;&gt;文档&lt;/a&gt;以了解更多信息。了解这三种 &lt;code&gt;tap&lt;/code&gt; 方法以及提供它们的钩子至关重要。将记录扩展 &lt;code&gt;Tapable&lt;/code&gt; 的对象（例如，编译器），它们提供的钩子以及每个钩子的类型（例如 &lt;code&gt;SyncHook&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="816d3788bc2a66d5d32f8636b9ad86456c99d342" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;https://github.com/webpack/tapable&quot;&gt;documentation&lt;/a&gt; to learn more. An understanding of the three &lt;code&gt;tap&lt;/code&gt; methods, as well as the hooks that provide them, is crucial. The objects that extend &lt;code&gt;Tapable&lt;/code&gt; (e.g. the compiler), the hooks they provide, and each hook's type (e.g. the &lt;code&gt;SyncHook&lt;/code&gt;) will be noted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fffc7ee52fbc0aedea28ea9911628bb68279c2b4" translate="yes" xml:space="preserve">
          <source>Please take a moment to read our contributing guidelines if you haven't yet done so.</source>
          <target state="translated">如果您还没有阅读我们的投稿指南,请花点时间阅读。</target>
        </trans-unit>
        <trans-unit id="a21c1554b28d950bc6b8f1592fbd61855a698e7a" translate="yes" xml:space="preserve">
          <source>Plugin API</source>
          <target state="translated">插件API</target>
        </trans-unit>
        <trans-unit id="1919972ec1dd4693c387449ffdc80e4f8d7b507d" translate="yes" xml:space="preserve">
          <source>Plugin Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6507fa53943d340c7520bd623ecbdeab4dec46" translate="yes" xml:space="preserve">
          <source>Plugin Types</source>
          <target state="translated">插件类型</target>
        </trans-unit>
        <trans-unit id="8c96a6157436f12625ad7a92518b6d47e74e44d2" translate="yes" xml:space="preserve">
          <source>Plugin Used</source>
          <target state="translated">使用的插件</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="c2cb3e9ddef62f8ce6bd053ccea1880266085973" translate="yes" xml:space="preserve">
          <source>Plugins affecting the compiler</source>
          <target state="translated">影响编译器的插件</target>
        </trans-unit>
        <trans-unit id="dc8500781fb9e8845460f9283bc4673626152f3c" translate="yes" xml:space="preserve">
          <source>Plugins affecting the environment of the compiler.</source>
          <target state="translated">影响编译器环境的插件。</target>
        </trans-unit>
        <trans-unit id="c4404580c2d6e4293219d6520fbb0e555befbc4e" translate="yes" xml:space="preserve">
          <source>Plugins affecting the source code of modules.</source>
          <target state="translated">影响模块源码的插件。</target>
        </trans-unit>
        <trans-unit id="1d817c41f95a536f92d934d7bdecc85177145725" translate="yes" xml:space="preserve">
          <source>Plugins are a key piece of the webpack ecosystem and provide the community with a powerful way to tap into webpack's compilation process. A plugin is able to &lt;a href=&quot;compiler-hooks#hooks&quot;&gt;hook&lt;/a&gt; into key events that are fired throughout each compilation. Every step of the way, the plugin will have full access to the &lt;code&gt;compiler&lt;/code&gt; and, when applicable, the current &lt;code&gt;compilation&lt;/code&gt;.</source>
          <target state="translated">插件是webpack生态系统的关键部分，为社区提供了一种强大的方式来利用webpack的编译过程。插件是可以&lt;a href=&quot;compiler-hooks#hooks&quot;&gt;勾&lt;/a&gt;成遍及每个编译解雇关键事件。在此过程的每一步中，插件都将拥有对 &lt;code&gt;compiler&lt;/code&gt; 以及当前 &lt;code&gt;compilation&lt;/code&gt; （如果适用）的完全访问权限。</target>
        </trans-unit>
        <trans-unit id="7b17783ac43427bdebaad1531b6522097f0e521f" translate="yes" xml:space="preserve">
          <source>Plugins can affect logging capturing and display level</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="055ffa60e6263553e57e82581ec69a162848c83d" translate="yes" xml:space="preserve">
          <source>Plugins can give loaders more features.</source>
          <target state="translated">插件可以赋予装载机更多的功能。</target>
        </trans-unit>
        <trans-unit id="7581e6d44c3d8c9f3a085997fe4657a2df4f71a9" translate="yes" xml:space="preserve">
          <source>Plugins can report progress via &lt;a href=&quot;../plugins/progress-plugin&quot;&gt;&lt;code&gt;ProgressPlugin&lt;/code&gt;&lt;/a&gt;, which prints progress messages to stderr by default. In order to enable progress reporting, pass a &lt;code&gt;--progress&lt;/code&gt; argument when running the &lt;a href=&quot;cli&quot;&gt;webpack CLI&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d08e2fd6ca2947e138e3124a13332506d96368" translate="yes" xml:space="preserve">
          <source>Plugins may use special fallback logic for detecting logging support &lt;code&gt;compilation.getLogger ? compilation.getLogger('PluginName') : console&lt;/code&gt; to provide a fallback for cases when an older webpack version is used which does not support &lt;code&gt;getLogger&lt;/code&gt; method on &lt;code&gt;compilation&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d695fb20cb4e9f6d6aa995bc1644f7cafa7fd78" translate="yes" xml:space="preserve">
          <source>Plugins may use the &lt;code&gt;compiler.getInfrastructureLogger('PluginName')&lt;/code&gt; for logging. Using &lt;code&gt;infrastructure&lt;/code&gt; logging is not stored in the Stats and therefore not formatted. It's usually logged to the console/dashboard/GUI directly. It can be filtered by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5305f5fda5e1d05e7a85ff68d81b72ddb3f38fb" translate="yes" xml:space="preserve">
          <source>Plugins should prefer to use &lt;code&gt;compilation.getLogger('PluginName')&lt;/code&gt; for logging. This kind of logging is stored in the Stats and formatted accordingly. It can be filtered and exported by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07d29b36b7cbbcceae194206d11fd573dcaa16c" translate="yes" xml:space="preserve">
          <source>Plugins, which add entry chunks to the compilation.</source>
          <target state="translated">插件,在编译中增加条目块。</target>
        </trans-unit>
        <trans-unit id="c4581375b4816f15ef5ddb7e1f1d5df233c6d846" translate="yes" xml:space="preserve">
          <source>Polyfills for Node.js core libraries from &lt;a href=&quot;https://github.com/webpack/node-libs-browser&quot;&gt;&lt;code&gt;node-libs-browser&lt;/code&gt;&lt;/a&gt; are used if available, when the &lt;code&gt;NodeSourcePlugin&lt;/code&gt; plugin is enabled. See the list of &lt;a href=&quot;https://github.com/webpack/node-libs-browser#readme&quot;&gt;Node.js core libraries and their polyfills&lt;/a&gt;.</source>
          <target state="translated">启用 &lt;code&gt;NodeSourcePlugin&lt;/code&gt; 插件时，将使用来自&lt;a href=&quot;https://github.com/webpack/node-libs-browser&quot;&gt; &lt;code&gt;node-libs-browser&lt;/code&gt; 的&lt;/a&gt; Polyfills for Node.js核心库。请参见&lt;a href=&quot;https://github.com/webpack/node-libs-browser#readme&quot;&gt;Node.js核心库及其polyfill&lt;/a&gt;的列表。</target>
        </trans-unit>
        <trans-unit id="ab8d78f09547b614a67fbed794e3840d047b64b0" translate="yes" xml:space="preserve">
          <source>Possible return values - &lt;code&gt;local&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, and &lt;code&gt;pure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab50c08f5ec3364602cec4a1fa198fe04bdb04b" translate="yes" xml:space="preserve">
          <source>Possible values - &lt;code&gt;commonjs&lt;/code&gt; (CommonJS module syntax) and &lt;code&gt;module&lt;/code&gt; (ES module syntax).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfaf99a1b4fe5b1cee002e250257d86314eca04" translate="yes" xml:space="preserve">
          <source>Possible values - &lt;code&gt;local&lt;/code&gt;, &lt;code&gt;global&lt;/code&gt;, and &lt;code&gt;pure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e48d38205497d57aaf4d5a030c4760892250a1" translate="yes" xml:space="preserve">
          <source>Possible values are &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt; or &lt;code&gt;info&lt;/code&gt; (default).</source>
          <target state="translated">可能的值是 &lt;code&gt;none&lt;/code&gt; ， &lt;code&gt;error&lt;/code&gt; ， &lt;code&gt;warning&lt;/code&gt; 或 &lt;code&gt;info&lt;/code&gt; （默认值）。</target>
        </trans-unit>
        <trans-unit id="361ae0458f5cb658b86063a130349c701509544c" translate="yes" xml:space="preserve">
          <source>Possible values for &lt;code&gt;mode&lt;/code&gt; are: &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;development&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt;(default).</source>
          <target state="translated">&lt;code&gt;mode&lt;/code&gt; 可能值为： &lt;code&gt;none&lt;/code&gt; ， &lt;code&gt;development&lt;/code&gt; 或 &lt;code&gt;production&lt;/code&gt; （默认）。</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">可能的数值:</target>
        </trans-unit>
        <trans-unit id="01f9ff5d0c9bc041f1daf305969f4fa700c1d939" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;&quot;pre&quot; | &quot;post&quot;&lt;/code&gt;</source>
          <target state="translated">可能的值： &lt;code&gt;&quot;pre&quot; | &quot;post&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b94ddeb918dd715d4c7ff032f89b35e099b3216f" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;'javascript/auto' | 'javascript/dynamic' | 'javascript/esm' | 'json' | 'webassembly/sync' | 'webassembly/async' | 'asset' | 'asset/source' | 'asset/resource' | 'asset/inline'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8adfddad0e93b9444b7f0c980bba0a3afc1c3b" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;'pre' | 'post'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e6ac80011a82730dead6d5226911e67bbcc4833" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;'production'&lt;/code&gt;, &lt;code&gt;'development'&lt;/code&gt;, &lt;code&gt;'none'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcacfeba5279113a917547a96db5eccae811287e" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;false | an array of paths&lt;/code&gt;</source>
          <target state="translated">可能的值： &lt;code&gt;false | an array of paths&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c713b7f15b91ef1b78375ae2913bd6c4dc47fd01" translate="yes" xml:space="preserve">
          <source>Possible values: &lt;code&gt;text/css&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63334f4d8d2bcbbf74cc54685bb9f57072b610b" translate="yes" xml:space="preserve">
          <source>PostCSS Config Context</source>
          <target state="translated">后CSS配置上下文</target>
        </trans-unit>
        <trans-unit id="8ab8978a6c7d7e66fd1556156f7ed50176905046" translate="yes" xml:space="preserve">
          <source>PostCSS Config Directory</source>
          <target state="translated">PostCSS配置目录</target>
        </trans-unit>
        <trans-unit id="912919666e167a7390e4d6411897bca3889ebf2a" translate="yes" xml:space="preserve">
          <source>PostCSS Preset Env</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0367efaf2680a1275ac2425768b15c6e4a159e2f" translate="yes" xml:space="preserve">
          <source>PostCSS chat:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70349debbb7710ab99a0726718f99d8ef564eef" translate="yes" xml:space="preserve">
          <source>PostHTML</source>
          <target state="translated">PostHTML</target>
        </trans-unit>
        <trans-unit id="2cfc6ae03601619aa86eab49f8cdcba160ca42e1" translate="yes" xml:space="preserve">
          <source>Pre-requisites</source>
          <target state="translated">Pre-requisites</target>
        </trans-unit>
        <trans-unit id="168bca5d8ffe7fcf0777b9490e3f8b20abb180c5" translate="yes" xml:space="preserve">
          <source>Predictable Long Term Caching with Webpack</source>
          <target state="translated">使用Webpack进行可预测的长期缓存</target>
        </trans-unit>
        <trans-unit id="cced56938ba773eb91c966bb6742dd7ec74f46eb" translate="yes" xml:space="preserve">
          <source>Predictable Long Term Caching with webpack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a017516a26209a27675e5f8f9dfe745e80fc9c14" translate="yes" xml:space="preserve">
          <source>Preferred usage is via a &lt;code&gt;module.loaders&lt;/code&gt;:</source>
          <target state="translated">首选用法是通过 &lt;code&gt;module.loaders&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c466b70d8bb3283413094bfff0c5894318615fbd" translate="yes" xml:space="preserve">
          <source>Prefetch normal module requests, causing them to be resolved and built before the first &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; of that module occurs. Using this plugin can boost performance. Try to profile the build first to determine clever prefetching points.</source>
          <target state="translated">预取正常的模块请求，导致在该模块的首次 &lt;code&gt;import&lt;/code&gt; 或 &lt;code&gt;require&lt;/code&gt; 发生之前对其进行解析和构建。使用此插件可以提高性能。首先尝试对构建进行概要分析，以确定巧妙的预取点。</target>
        </trans-unit>
        <trans-unit id="2937d90e96f47b36d8430320e9d4fdca15f49193" translate="yes" xml:space="preserve">
          <source>Prefetch the particular file</source>
          <target state="translated">预取特定文件</target>
        </trans-unit>
        <trans-unit id="46bf6ceee65f725ba28743e5056cd65872592a9b" translate="yes" xml:space="preserve">
          <source>Prefetch this request</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390d835e9a58404f924bf8560cf971bb0c05dc03" translate="yes" xml:space="preserve">
          <source>PrefetchPlugin</source>
          <target state="translated">PrefetchPlugin</target>
        </trans-unit>
        <trans-unit id="f969b8b04b2e4eac51e6857c173d1cc50a449955" translate="yes" xml:space="preserve">
          <source>Prefetches &lt;code&gt;request&lt;/code&gt; and dependencies to enable a more parallel compilation. It doesn't create any chunk. The module is resolved from &lt;code&gt;request&lt;/code&gt; in &lt;code&gt;context&lt;/code&gt; (absolute path).</source>
          <target state="translated">预取 &lt;code&gt;request&lt;/code&gt; 和依赖项以启用更多并行编译。它不会创建任何块。该模块是 &lt;code&gt;request&lt;/code&gt; &lt;code&gt;context&lt;/code&gt; （绝对路径）中的请求进行解析的。</target>
        </trans-unit>
        <trans-unit id="d4fc1d5078b2cdd1ec28d3674e875c70ed032f2b" translate="yes" xml:space="preserve">
          <source>Prefetching/Preloading modules</source>
          <target state="translated">预取/预装模块</target>
        </trans-unit>
        <trans-unit id="b0e853977c39285eb7d3ccd3ae2600e4eb4d8a8d" translate="yes" xml:space="preserve">
          <source>Prefixing with &lt;code&gt;!!&lt;/code&gt; will disable all configured loaders (preLoaders, loaders, postLoaders)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d679688026b8b57fa53c6952dcd7c75c77557b" translate="yes" xml:space="preserve">
          <source>Prefixing with &lt;code&gt;!&lt;/code&gt; will disable all configured normal loaders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fed604dc5b39a47a532f23858c9e4db5f65cc19" translate="yes" xml:space="preserve">
          <source>Prefixing with &lt;code&gt;-!&lt;/code&gt; will disable all configured preLoaders and loaders but not postLoaders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b557f72e4bb86d25ee92b61deb79f7d6f99e2a55" translate="yes" xml:space="preserve">
          <source>Preload directive has a bunch of differences compared to prefetch:</source>
          <target state="translated">预加载指令与预取指令相比,有一堆不同之处。</target>
        </trans-unit>
        <trans-unit id="93eafead7d994fc1c76cb5885f9101f436b01dc5" translate="yes" xml:space="preserve">
          <source>Preload one or more modules before loading the webpack configuration</source>
          <target state="translated">在加载webpack配置之前,预先加载一个或多个模块。</target>
        </trans-unit>
        <trans-unit id="19de4fcee88ae1bb0a8818fdccdf802f842045ea" translate="yes" xml:space="preserve">
          <source>Preload, Prefetch And Priorities in Chrome</source>
          <target state="translated">Chrome浏览器中的预加载、预取和优先权</target>
        </trans-unit>
        <trans-unit id="9179293a16d129b230ef624d17e3d317d40674d0" translate="yes" xml:space="preserve">
          <source>Preloading content with rel=&quot;preload&quot;</source>
          <target state="translated">用rel=&quot;preload &quot;预装内容。</target>
        </trans-unit>
        <trans-unit id="a8bc382020aaaa716a496826f97b0c9d436c31a9" translate="yes" xml:space="preserve">
          <source>Preparation</source>
          <target state="translated">Preparation</target>
        </trans-unit>
        <trans-unit id="6117f4d694ff7c17ec6c519ced028d6cac0c5651" translate="yes" xml:space="preserve">
          <source>Prepare compressed versions of assets to serve them with Content-Encoding</source>
          <target state="translated">准备资产的压缩版本,以便通过内容编码来提供服务。</target>
        </trans-unit>
        <trans-unit id="bd64ff9d3407f6c6943e73f5137b7fdf87f6014e" translate="yes" xml:space="preserve">
          <source>Prepare compressed versions of assets to serve them with Content-Encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865ef8e3f389be8778673b464053850270e87967" translate="yes" xml:space="preserve">
          <source>Prepare compressed versions of assets using &lt;code&gt;zopfli&lt;/code&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb928f8c004dc86eed502a7a8287d9ea7438109" translate="yes" xml:space="preserve">
          <source>Prepare compressed versions of assets with node-zopfli</source>
          <target state="translated">使用node-zopfli准备资产的压缩版本。</target>
        </trans-unit>
        <trans-unit id="27f7a1893bf46ce7bed54721bd66b70ede8794dc" translate="yes" xml:space="preserve">
          <source>Prepends &lt;code&gt;Less&lt;/code&gt; code before the actual entry file. In this case, the &lt;code&gt;less-loader&lt;/code&gt; will not override the source but just &lt;strong&gt;prepend&lt;/strong&gt; the entry's content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f860d32d135d77090a0e816e958fb9b72322f6" translate="yes" xml:space="preserve">
          <source>Prepends &lt;code&gt;Sass&lt;/code&gt;/&lt;code&gt;SCSS&lt;/code&gt; code before the actual entry file. In this case, the &lt;code&gt;sass-loader&lt;/code&gt; will not override the &lt;code&gt;data&lt;/code&gt; option but just &lt;strong&gt;prepend&lt;/strong&gt; the entry's content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bb9275a790fcf5669556d8cd406a143a1a608f" translate="yes" xml:space="preserve">
          <source>Prepends &lt;code&gt;Stylus&lt;/code&gt; code before the actual entry file. In this case, the &lt;code&gt;stylus-loader&lt;/code&gt; will not override the source but just &lt;strong&gt;prepend&lt;/strong&gt; the entry's content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddfc3c6ab87aff7dbe5ce84f1f8f85d74985d4bb" translate="yes" xml:space="preserve">
          <source>Prepends/Appends &lt;code&gt;Less&lt;/code&gt; code to the actual entry file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4018fcb4ff60cbe10013b2151c27d638ed0deb2f" translate="yes" xml:space="preserve">
          <source>Prepends/Appends &lt;code&gt;Sass&lt;/code&gt;/&lt;code&gt;SCSS&lt;/code&gt; code before the actual entry file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f34e53c3f6c0f8bbcdbda0ebffd0834ed6bd0f" translate="yes" xml:space="preserve">
          <source>Prepends/Appends &lt;code&gt;Stylus&lt;/code&gt; code to the actual entry file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="d75c22389c793a2795b276e8fa347d15c2cc8eb2" translate="yes" xml:space="preserve">
          <source>Preserve Comments</source>
          <target state="translated">保留意见</target>
        </trans-unit>
        <trans-unit id="6745a9b78ef3aa773e5a4469128d054d7aae731a" translate="yes" xml:space="preserve">
          <source>Preserve comments in &lt;code&gt;output&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;output&lt;/code&gt; 保留注释</target>
        </trans-unit>
        <trans-unit id="bca788763dd46b6bb079756ca4b68a206414f9a1" translate="yes" xml:space="preserve">
          <source>Preset</source>
          <target state="translated">Preset</target>
        </trans-unit>
        <trans-unit id="4c5b71d76433aa5873dea6b786d7419754f62e09" translate="yes" xml:space="preserve">
          <source>Prevent</source>
          <target state="translated">Prevent</target>
        </trans-unit>
        <trans-unit id="c2794e00cc8740613554b35b277da05b59754f41" translate="yes" xml:space="preserve">
          <source>Prevent Duplication</source>
          <target state="translated">防止复制</target>
        </trans-unit>
        <trans-unit id="4e4fc1d7fdfa37b74648dbf42fcaf4e9b410067a" translate="yes" xml:space="preserve">
          <source>Prevent Duplication: Use the &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;&lt;code&gt;SplitChunks&lt;/code&gt;&lt;/a&gt; to dedupe and split chunks.</source>
          <target state="translated">防止重复：使用&lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt; &lt;code&gt;SplitChunks&lt;/code&gt; &lt;/a&gt;进行重复数据删除和拆分。</target>
        </trans-unit>
        <trans-unit id="2f6099ca376518163d3dfa8c1f36e6250e904c68" translate="yes" xml:space="preserve">
          <source>Prevent generation of modules for &lt;code&gt;import&lt;/code&gt; or &lt;code&gt;require&lt;/code&gt; calls matching the following regular expressions:</source>
          <target state="translated">阻止生成用于 &lt;code&gt;import&lt;/code&gt; 的模块或 &lt;code&gt;require&lt;/code&gt; 匹配以下正则表达式的调用：</target>
        </trans-unit>
        <trans-unit id="70d92421da8673a13334c0b7f2dc0443d3edd923" translate="yes" xml:space="preserve">
          <source>Prevent webpack from parsing any files matching the given regular expression(s). Ignored files &lt;strong&gt;should not&lt;/strong&gt; have calls to &lt;code&gt;import&lt;/code&gt;, &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;define&lt;/code&gt; or any other importing mechanism. This can boost build performance when ignoring large libraries.</source>
          <target state="translated">阻止webpack解析与给定正则表达式匹配的任何文件。被忽略的文件&lt;strong&gt;不应&lt;/strong&gt;具有 &lt;code&gt;import&lt;/code&gt; ， &lt;code&gt;require&lt;/code&gt; ， &lt;code&gt;define&lt;/code&gt; 或任何其他导入机制的调用。忽略大型库时，这可以提高构建性能。</target>
        </trans-unit>
        <trans-unit id="f09555c71ab8f697b706fe0a465afb403257e4a7" translate="yes" xml:space="preserve">
          <source>Print compilation progress during build</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fa8a294b54a501062999c9b542b8080d036f21" translate="yes" xml:space="preserve">
          <source>Print compilation progress in percentage</source>
          <target state="translated">以百分比打印编译进度</target>
        </trans-unit>
        <trans-unit id="5c33e1916b7874178fa90f9435a4ee34e6c9d5bc" translate="yes" xml:space="preserve">
          <source>Prints result as JSON or store it in a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deef4bd45d7f04aaa754a8c8151d330d6833406" translate="yes" xml:space="preserve">
          <source>Prior to webpack 5 it was common to use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f12c5698b1446efc9c136ce5e53ec1fbe6adbe" translate="yes" xml:space="preserve">
          <source>Prior to webpack, front-end developers would use tools like &lt;a href=&quot;https://gruntjs.com/&quot;&gt;grunt&lt;/a&gt; and &lt;a href=&quot;https://gulpjs.com/&quot;&gt;gulp&lt;/a&gt; to process these assets and move them from their &lt;code&gt;/src&lt;/code&gt; folder into their &lt;code&gt;/dist&lt;/code&gt; or &lt;code&gt;/build&lt;/code&gt; directory. The same idea was used for JavaScript modules, but tools like webpack will &lt;strong&gt;dynamically bundle&lt;/strong&gt; all dependencies (creating what's known as a &lt;a href=&quot;../concepts/dependency-graph&quot;&gt;dependency graph&lt;/a&gt;). This is great because every module now &lt;em&gt;explicitly states its dependencies&lt;/em&gt; and we'll avoid bundling modules that aren't in use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853d057077a85b703ffdc0dbc6602a2799b5ea75" translate="yes" xml:space="preserve">
          <source>Prior to webpack, front-end developers would use tools like grunt and gulp to process these assets and move them from their &lt;code&gt;/src&lt;/code&gt; folder into their &lt;code&gt;/dist&lt;/code&gt; or &lt;code&gt;/build&lt;/code&gt; directory. The same idea was used for JavaScript modules, but tools like webpack will &lt;strong&gt;dynamically bundle&lt;/strong&gt; all dependencies (creating what's known as a &lt;a href=&quot;../concepts/dependency-graph&quot;&gt;dependency graph&lt;/a&gt;). This is great because every module now &lt;em&gt;explicitly states its dependencies&lt;/em&gt; and we'll avoid bundling modules that aren't in use.</source>
          <target state="translated">在使用webpack之前，前端开发人员将使用grunt和gulp之类的工具来处理这些资产，并将其从 &lt;code&gt;/src&lt;/code&gt; 文件夹移至 &lt;code&gt;/dist&lt;/code&gt; 或 &lt;code&gt;/build&lt;/code&gt; 目录。JavaScript模块使用了相同的想法，但是webpack之类的工具将&lt;strong&gt;动态捆绑&lt;/strong&gt;所有依赖项（创建所谓的&lt;a href=&quot;../concepts/dependency-graph&quot;&gt;依赖关系图&lt;/a&gt;）。这非常好，因为每个模块现在都&lt;em&gt;明确声明了其依赖关系&lt;/em&gt;，我们将避免捆绑未使用的模块。</target>
        </trans-unit>
        <trans-unit id="5bc14c6a8a73b39710c3f86c823755dd32a2486d" translate="yes" xml:space="preserve">
          <source>Problems with &lt;code&gt;url(...)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;url(...)&lt;/code&gt; 问题（...）</target>
        </trans-unit>
        <trans-unit id="d9d5a1a4e8294b7d8b0b015f9f5ba3bd419c7e5e" translate="yes" xml:space="preserve">
          <source>Process &lt;code&gt;script&lt;/code&gt; and &lt;code&gt;link&lt;/code&gt; tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48e6dc9905a9c0bfe2196cd194579a3ba092721" translate="yes" xml:space="preserve">
          <source>Process the given module dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdf135e040b8a04f9a9379941ff8ed8bea4b387" translate="yes" xml:space="preserve">
          <source>Processed by webpack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df70fc7991d3f1476ee9b62f9991c5a0f2c589e0" translate="yes" xml:space="preserve">
          <source>Production</source>
          <target state="translated">Production</target>
        </trans-unit>
        <trans-unit id="5f2ef3e2f3577a2d2bd8b959bd3e440184953d37" translate="yes" xml:space="preserve">
          <source>Production &amp;gt; Development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26e233131491c824870820a3e2b3a31b5923ca6" translate="yes" xml:space="preserve">
          <source>Profile them to not introduce a performance problem here.</source>
          <target state="translated">剖析他们,以免在这里引入性能问题。</target>
        </trans-unit>
        <trans-unit id="cea5295b78ec1b99a624dda73a7e6d10f18cdf3f" translate="yes" xml:space="preserve">
          <source>Profiling</source>
          <target state="translated">Profiling</target>
        </trans-unit>
        <trans-unit id="eb4b2578141e01fd0c09daab7c2b1fcc38468689" translate="yes" xml:space="preserve">
          <source>ProfilingPlugin</source>
          <target state="translated">ProfilingPlugin</target>
        </trans-unit>
        <trans-unit id="1b90271d66cf2d3ac755d49a550fe5f31b9eca5f" translate="yes" xml:space="preserve">
          <source>Progress</source>
          <target state="translated">Progress</target>
        </trans-unit>
        <trans-unit id="b4ae6e1536b4c5b8bb447006ff7c7d0e54e98966" translate="yes" xml:space="preserve">
          <source>Progress plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee50a58f4658425f2606deb72485539d209a46d0" translate="yes" xml:space="preserve">
          <source>ProgressPlugin</source>
          <target state="translated">ProgressPlugin</target>
        </trans-unit>
        <trans-unit id="9ce7fc34d5a940a43c1c9a5378b9ba9f8ad51b8a" translate="yes" xml:space="preserve">
          <source>Progressive Web Application</source>
          <target state="translated">渐进式网络应用</target>
        </trans-unit>
        <trans-unit id="a1d47544cbf8518c826a49f4542afebff6574602" translate="yes" xml:space="preserve">
          <source>Progressive Web Applications (or PWAs) are web apps that deliver an experience similar to native applications. There are many things that can contribute to that. Of these, the most significant is the ability for an app to be able to function when &lt;strong&gt;offline&lt;/strong&gt;. This is achieved through the use of a web technology called &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;Service Workers&lt;/a&gt;.</source>
          <target state="translated">渐进式Web应用程序（或PWA）是可提供与本机应用程序相似的体验的Web应用程序。有很多事情可以促成这一点。在这些功能中，最重要的是使应用能够在&lt;strong&gt;离线状态下运行的能力&lt;/strong&gt;。这是通过使用称为&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/&quot;&gt;Service Workers&lt;/a&gt;的网络技术来实现的。</target>
        </trans-unit>
        <trans-unit id="351f56a6fefd5127c90506d3e91990f1d7631787" translate="yes" xml:space="preserve">
          <source>Properties:</source>
          <target state="translated">Properties:</target>
        </trans-unit>
        <trans-unit id="b2e2405ab7402f6ab230b6398229a23b1c3e9380" translate="yes" xml:space="preserve">
          <source>Property in the &lt;code&gt;this&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; 对象中的属性。</target>
        </trans-unit>
        <trans-unit id="b71bc359101e7e3543bb1c11cd760c55850d45a2" translate="yes" xml:space="preserve">
          <source>Property in the global object, for node.</source>
          <target state="translated">全局对象中的属性,对于节点。</target>
        </trans-unit>
        <trans-unit id="41e1e744dda7cd8949e21e9c59e08d6fbb8371a1" translate="yes" xml:space="preserve">
          <source>Provide Babel presets and plugins</source>
          <target state="translated">提供Babel预设和插件</target>
        </trans-unit>
        <trans-unit id="f71aba112975c3f77f3e63ba1d059603e20d8ce5" translate="yes" xml:space="preserve">
          <source>Provide a cache directory where cache items should be stored (used for default read/write implementation)</source>
          <target state="translated">提供一个存放缓存项目的缓存目录(用于默认的读/写执行)。</target>
        </trans-unit>
        <trans-unit id="21146cf496888628c11aeec78d6ad39f64f9113c" translate="yes" xml:space="preserve">
          <source>Provide a handler function which will be called when hooks report progress. &lt;code&gt;handler&lt;/code&gt; function arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911f482221520b259e4f50cced432d989a75a6ca" translate="yes" xml:space="preserve">
          <source>Provide an array of strings in case you have multiple static folders set in &lt;a href=&quot;#devservercontentbase&quot;&gt;&lt;code&gt;contentBase&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e73e398ff413d23360495d7730d96a04b3fa96d" translate="yes" xml:space="preserve">
          <source>Provide an invalidation identifier which is used to generate the hashes. You can use it for extra dependencies of loaders (used for default read/write implementation)</source>
          <target state="translated">提供一个用于生成哈希值的无效标识符。您可以将其用于加载器的额外依赖(用于默认的读/写实现)。</target>
        </trans-unit>
        <trans-unit id="002518b5702e29c2b3cc421d6438705e64215ff1" translate="yes" xml:space="preserve">
          <source>Provide browser name to use instead of the default one:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95356976c75eef71cd7567f26cf1af85f3b0149" translate="yes" xml:space="preserve">
          <source>Provide labels &lt;code&gt;require:&lt;/code&gt; and &lt;code&gt;exports:&lt;/code&gt; to modules.</source>
          <target state="translated">提供标签 &lt;code&gt;require:&lt;/code&gt; 并将 &lt;code&gt;exports:&lt;/code&gt; 到模块。</target>
        </trans-unit>
        <trans-unit id="e70aa82f2d754cac2d596498c239f9fdcb217838" translate="yes" xml:space="preserve">
          <source>Provide path to a webpack configuration file e.g. &lt;code&gt;./webpack.config.js&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f85a610445d7ff2881c62d6d72f3622d17fb80" translate="yes" xml:space="preserve">
          <source>Provide stuff that is normally available in Node.js modules.</source>
          <target state="translated">提供Node.js模块中通常可用的东西。</target>
        </trans-unit>
        <trans-unit id="28921ddb834c3ca83287ff2ccb648a91d484d86b" translate="yes" xml:space="preserve">
          <source>Provide stuff that is normally available in require.js.</source>
          <target state="translated">提供通常在require.js中可用的东西。</target>
        </trans-unit>
        <trans-unit id="9c18bd1e4db6173bb75ba6a0ac988bd0c8ce1e7f" translate="yes" xml:space="preserve">
          <source>Provide the &lt;code&gt;mode&lt;/code&gt; option in the config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b16c44f29505f28172dc6d40099bf222dd0c68" translate="yes" xml:space="preserve">
          <source>Provide these modules as globals, see &lt;a href=&quot;../guides/shimming&quot;&gt;shimming&lt;/a&gt;</source>
          <target state="translated">将这些模块作为全局变量提供，请参见&lt;a href=&quot;../guides/shimming&quot;&gt;垫片&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2eaf0c1fa27bf97557973ef692273e812d50197f" translate="yes" xml:space="preserve">
          <source>Provide your own certificate using the &lt;a href=&quot;#devserverhttps&quot;&gt;https&lt;/a&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e23b3c84c3ec72742e36387d71dff6a0095f93d" translate="yes" xml:space="preserve">
          <source>ProvidePlugin</source>
          <target state="translated">ProvidePlugin</target>
        </trans-unit>
        <trans-unit id="00b2d96c2e0bb46b5b8efa6185b7476aea3c8dca" translate="yes" xml:space="preserve">
          <source>Provides &lt;code&gt;require.context&lt;/code&gt;. The parameter &lt;code&gt;modulesDirectories&lt;/code&gt; and &lt;code&gt;extensions&lt;/code&gt; are used to find alternative requests for files. It's useful to provide the same arrays as you provide to the resolver.</source>
          <target state="translated">提供 &lt;code&gt;require.context&lt;/code&gt; 。参数 &lt;code&gt;modulesDirectories&lt;/code&gt; 和 &lt;code&gt;extensions&lt;/code&gt; 用于查找对文件的替代请求。提供与解析器相同的数组很有用。</target>
        </trans-unit>
        <trans-unit id="ccac1bffde4b46feae3d37ac89d8a797666697ad" translate="yes" xml:space="preserve">
          <source>Provides &lt;code&gt;require.ensure&lt;/code&gt;.</source>
          <target state="translated">提供 &lt;code&gt;require.ensure&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="caea413a4ea18be73d6426da779623f518a353d0" translate="yes" xml:space="preserve">
          <source>Provides &lt;code&gt;require.include&lt;/code&gt;.</source>
          <target state="translated">提供 &lt;code&gt;require.include&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f35c08902b87030a7f86cd35a275b18c6461b0d" translate="yes" xml:space="preserve">
          <source>Provides AMD-style &lt;code&gt;define&lt;/code&gt; and &lt;code&gt;require&lt;/code&gt; to modules. Also bind &lt;code&gt;require.amd&lt;/code&gt;, &lt;code&gt;define.amd&lt;/code&gt; and webpack_amd_options## to the &lt;code&gt;options&lt;/code&gt; passed as parameter.</source>
          <target state="translated">提供AMD样式的模块 &lt;code&gt;define&lt;/code&gt; 和 &lt;code&gt;require&lt;/code&gt; 。还结合 &lt;code&gt;require.amd&lt;/code&gt; ， &lt;code&gt;define.amd&lt;/code&gt; 和webpack_amd_options ##的 &lt;code&gt;options&lt;/code&gt; 作为参数传递。</target>
        </trans-unit>
        <trans-unit id="3d4acf80bc5ea0f22c1e5e92813f8cc30ff36540" translate="yes" xml:space="preserve">
          <source>Provides CommonJs-style &lt;code&gt;require&lt;/code&gt; to modules.</source>
          <target state="translated">为模块提供CommonJs样式的 &lt;code&gt;require&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6b841085b8de02e0934f48155663289e02a0aae8" translate="yes" xml:space="preserve">
          <source>Provides an option to execute a custom function when &lt;code&gt;webpack-dev-server&lt;/code&gt; starts listening for connections on a port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c6c2b56fa620cfe65b896f633e3baef406a8ba" translate="yes" xml:space="preserve">
          <source>Provides the ability to execute custom middleware after all other middleware internally within the server.</source>
          <target state="translated">提供在服务器内部所有其他中间件之后执行自定义中间件的能力。</target>
        </trans-unit>
        <trans-unit id="651b73c46abd2e0cc12c0978ce9833dcabb3b6c5" translate="yes" xml:space="preserve">
          <source>Provides the ability to execute custom middleware prior to all other middleware internally within the server. This could be used to define custom handlers, for example:</source>
          <target state="translated">提供在服务器内部所有其他中间件之前执行自定义中间件的能力。例如,这可以用来定义自定义处理程序。</target>
        </trans-unit>
        <trans-unit id="27c5da97c8cbc3a2dcec75df0aec821674e88c63" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;&quot;type&quot;: &quot;commonjs&quot;&lt;/code&gt; helps to statically detect CommonJs files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b70e13c4e40ca0300ca86b06595400545e33cc" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;function&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9301000f0a00583a5810ba795051e5ddf296854" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;object&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f283e529244feedb24615d14b30d3b3994db93" translate="yes" xml:space="preserve">
          <source>Providing CommonJs and ESM version (stateful)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf9b66224e1f58ad0acce8bf8195532997f3c62" translate="yes" xml:space="preserve">
          <source>Providing CommonJs and ESM version (stateless)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1fcd9698a2c8d58f9f604888ddebf51fbb9e81" translate="yes" xml:space="preserve">
          <source>Providing Node.js, WebWorker and browser versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c11420be22335090496e30d7617a0fab733fbf" translate="yes" xml:space="preserve">
          <source>Providing Node.js, browser and electron versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a88384655b879fbdde4ceffb8fe0825f47575f" translate="yes" xml:space="preserve">
          <source>Providing a &lt;code&gt;Function&lt;/code&gt; to &lt;code&gt;devServer.writeToDisk&lt;/code&gt; can be used for filtering. The function follows the same premise as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter&quot;&gt;&lt;code&gt;Array#filter&lt;/code&gt;&lt;/a&gt; in which a boolean return value tells if the file should be written to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d13e48eb5a0269f84fb1bead3062dc01f49ea59" translate="yes" xml:space="preserve">
          <source>Providing a &lt;code&gt;RegExp&lt;/code&gt; to &lt;code&gt;{cacheGroup}.test&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbc27ea9e33622affb475282330db222c29f3bc" translate="yes" xml:space="preserve">
          <source>Providing a bundled script version for direct browser consumption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89fd29501af0069be131ddb911929200aa72130f" translate="yes" xml:space="preserve">
          <source>Providing a function to&lt;code&gt;{cacheGroup}.test&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdbd7c5236fc2901a235f32ab1b08a7a1cfea96" translate="yes" xml:space="preserve">
          <source>Providing a string or a function allows you to use a custom name. Specifying either a string or a function that always returns the same string will merge all common modules and vendors into a single chunk. This might lead to bigger initial downloads and slow down page loads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c9af82b1a5034915099508bdf1641efc8402c8" translate="yes" xml:space="preserve">
          <source>Providing a string to &lt;code&gt;devServer.transportMode&lt;/code&gt; is a shortcut to setting both &lt;code&gt;devServer.transportMode.client&lt;/code&gt; and &lt;code&gt;devServer.transportMode.server&lt;/code&gt; to the given string value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf54727443488c5dfc569d208ed89ce7f5cb60bd" translate="yes" xml:space="preserve">
          <source>Providing devtools or production optimizations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb402035c6abd0f5d9fb50947b86a8d8a8ecdf5" translate="yes" xml:space="preserve">
          <source>Providing different versions depending on target environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6bbd4586493e9c9676fb86cd19dfd11176c13da" translate="yes" xml:space="preserve">
          <source>Providing only a CommonJs version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fa7b193de0bbe33d459acb490297a712187679" translate="yes" xml:space="preserve">
          <source>Providing only an ESM version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4142b96f54c15dc4e11fe1b44786bc0167f9f4cb" translate="yes" xml:space="preserve">
          <source>Providing the &lt;code&gt;mode&lt;/code&gt; configuration option tells webpack to use its built-in optimizations accordingly.</source>
          <target state="translated">提供 &lt;code&gt;mode&lt;/code&gt; 配置选项会告诉webpack相应地使用其内置优化。</target>
        </trans-unit>
        <trans-unit id="cc5d66bd095ccf64cdaf8dab20ee18d4ee9f3910" translate="yes" xml:space="preserve">
          <source>Proxying some URLs can be useful when you have a separate API backend development server and you want to send API requests on the same domain.</source>
          <target state="translated">当你有一个单独的API后台开发服务器,并且你想在同一个域上发送API请求时,代理一些URL是很有用的。</target>
        </trans-unit>
        <trans-unit id="138809ef784cde88aec7f588f1644dcbf06a9730" translate="yes" xml:space="preserve">
          <source>Public Path</source>
          <target state="translated">公共路径</target>
        </trans-unit>
        <trans-unit id="2733766caea16feb51903ce34a90c101ba2bf76f" translate="yes" xml:space="preserve">
          <source>Pure CSS, CSS modules and PostCSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad627c5524aadbdba72f875f9cde8011754d0e5" translate="yes" xml:space="preserve">
          <source>Put this loader in front of other loaders. The following loaders run in a worker pool.</source>
          <target state="translated">将此装载机放在其他装载机前面。以下装载机在一个工人池中运行。</target>
        </trans-unit>
        <trans-unit id="53fb27ed3568a98ac19274e39a58d83510ec0c2f" translate="yes" xml:space="preserve">
          <source>Putting the content of &lt;code&gt;helpers&lt;/code&gt; into each chunk will result into its code being downloaded twice. By using a separate chunk this will only happen once. We pay the cost of an additional request, which could be considered a tradeoff. That's why there is a minimum size of 30kb.</source>
          <target state="translated">将 &lt;code&gt;helpers&lt;/code&gt; 的内容放入每个块中将导致其代码被下载两次。通过使用单独的块，这只会发生一次。我们会支付额外请求的费用，这可以视为一种折衷。这就是为什么最小大小为30kb的原因。</target>
        </trans-unit>
        <trans-unit id="8a9b6130aa6732b5b6bc6d3b954216477743ad28" translate="yes" xml:space="preserve">
          <source>Qualities</source>
          <target state="translated">Qualities</target>
        </trans-unit>
        <trans-unit id="14a1c21a1304ad0ee741ad05bda442f60c1f277e" translate="yes" xml:space="preserve">
          <source>Query Options</source>
          <target state="translated">查询选项</target>
        </trans-unit>
        <trans-unit id="f9547326220882df69495a2dd01e3a453ece7043" translate="yes" xml:space="preserve">
          <source>Query value</source>
          <target state="translated">查询值</target>
        </trans-unit>
        <trans-unit id="287b9a538493902223664f10fed505869d105145" translate="yes" xml:space="preserve">
          <source>Query with leading &lt;code&gt;?&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138f14b0b01ba7ad70311f3aabaa6e572b2cb47c" translate="yes" xml:space="preserve">
          <source>QueryString Options</source>
          <target state="translated">查询字符串选项</target>
        </trans-unit>
        <trans-unit id="4fcb8c79d68fd4d6d6033a1d4be369eaa8ad224e" translate="yes" xml:space="preserve">
          <source>Rather, because &lt;code&gt;moment&lt;/code&gt; imports with this code:</source>
          <target state="translated">而是，因为 &lt;code&gt;moment&lt;/code&gt; 用以下代码导入：</target>
        </trans-unit>
        <trans-unit id="9b9ded6d2425a046da4a82a8457d4dd2a87d3a49" translate="yes" xml:space="preserve">
          <source>Re-run the &lt;code&gt;npm run build&lt;/code&gt; command and open &lt;code&gt;dist/index.html&lt;/code&gt;. If you look at the console in your developer tools, you should be able to see your imported data being logged to the console!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19cedad67ef9438f5103b1c7e5b4186a79fbb85" translate="yes" xml:space="preserve">
          <source>Re-run the &lt;code&gt;npm run build&lt;/code&gt; command and open &lt;code&gt;dist/index.html&lt;/code&gt;. You should be able to see your imported data being logged to the console!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d9c05e89f890070a589388790c9ebfd8a65725" translate="yes" xml:space="preserve">
          <source>React: &lt;a href=&quot;https://reacttraining.com/react-router/web/guides/code-splitting&quot;&gt;Code Splitting and Lazy Loading&lt;/a&gt;</source>
          <target state="translated">React：&lt;a href=&quot;https://reacttraining.com/react-router/web/guides/code-splitting&quot;&gt;代码拆分和延迟加载&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c39d343ee23cf54872e3b0b82688f0bee8855736" translate="yes" xml:space="preserve">
          <source>Read More about Extending Configuration Files</source>
          <target state="translated">了解更多关于扩展配置文件的信息</target>
        </trans-unit>
        <trans-unit id="d39e943de60c8e1353fd4906db8f2f19a2b751fc" translate="yes" xml:space="preserve">
          <source>Read in which &lt;a href=&quot;../configuration/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; webpack is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d02b469c10ccab1651045b7f003a41b5defb2b" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;../guides/author-libraries&quot;&gt;authoring libraries guide&lt;/a&gt; guide for more information on &lt;code&gt;output.library&lt;/code&gt; as well as &lt;code&gt;output.libraryTarget&lt;/code&gt;.</source>
          <target state="translated">阅读&lt;a href=&quot;../guides/author-libraries&quot;&gt;创作库指南&lt;/a&gt;，以获取有关 &lt;code&gt;output.library&lt;/code&gt; 以及 &lt;code&gt;output.libraryTarget&lt;/code&gt; 的更多信息。</target>
        </trans-unit>
        <trans-unit id="76c9e6b091f8555f8022635989382563379e3c96" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;../guides/installation&quot;&gt;installation guide&lt;/a&gt; if you don't already have webpack and CLI installed.</source>
          <target state="translated">如果尚未安装Webpack和CLI，请阅读&lt;a href=&quot;../guides/installation&quot;&gt;安装指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="23f14c205e758becbd08e59f44cdd7e8887044c2" translate="yes" xml:space="preserve">
          <source>Readable ids for better debugging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9831e6175fa654bc52da1f11e26f428496ffea" translate="yes" xml:space="preserve">
          <source>Recently, &lt;code&gt;ts-loader&lt;/code&gt; has started to consume the internal TypeScript watch mode APIs which dramatically decreases the number of modules to be rebuilt on each iteration. This &lt;code&gt;experimentalWatchApi&lt;/code&gt; shares the same logic as the normal TypeScript watch mode itself and is quite stable for development use. Turn on &lt;code&gt;transpileOnly&lt;/code&gt; as well for truly fast incremental builds.</source>
          <target state="translated">最近， &lt;code&gt;ts-loader&lt;/code&gt; 已开始使用内部TypeScript监视模式API，该API大大减少了每次迭代中要重建的模块数量。这 &lt;code&gt;experimentalWatchApi&lt;/code&gt; 共享相同的逻辑正常打字稿计时模式本身是用于开发相当稳定。 &lt;code&gt;transpileOnly&lt;/code&gt; 打开transpileOn，才能真正快速地进行增量构建。</target>
        </trans-unit>
        <trans-unit id="06210493d8afafd3fbe9c98e7aefe7e12c50cb5e" translate="yes" xml:space="preserve">
          <source>Recommendations:</source>
          <target state="translated">Recommendations:</target>
        </trans-unit>
        <trans-unit id="bbb37b6d15db38153847eeb919d56d5328c44951" translate="yes" xml:space="preserve">
          <source>RecordIdsPlugin</source>
          <target state="translated">RecordIdsPlugin</target>
        </trans-unit>
        <trans-unit id="500dd454daedf0b0d7fb544e9ac14192f693de18" translate="yes" xml:space="preserve">
          <source>Records are particularly useful if you have a complex setup that leverages &lt;a href=&quot;../guides/code-splitting&quot;&gt;Code Splitting&lt;/a&gt;. The data can be used to ensure the split bundles are achieving the &lt;a href=&quot;../guides/caching&quot;&gt;caching&lt;/a&gt; behavior you need.</source>
          <target state="translated">如果您具有利用&lt;a href=&quot;../guides/code-splitting&quot;&gt;代码拆分&lt;/a&gt;的复杂设置，则记录特别有用。数据可用于确保拆分束实现所需的&lt;a href=&quot;../guides/caching&quot;&gt;缓存&lt;/a&gt;行为。</target>
        </trans-unit>
        <trans-unit id="a9db278849628f2a8889e6faa10f8ec74e43e5ba" translate="yes" xml:space="preserve">
          <source>Redirect module requests when normal resolving fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251a6acd424a17f027e411b68bb69d330d579ec2" translate="yes" xml:space="preserve">
          <source>Reference syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29edf14ed2cf63f8c57f91d622484b33ec5b610d" translate="yes" xml:space="preserve">
          <source>Reference the &lt;a href=&quot;https://github.com/webpack-contrib/polymer-webpack-loader/blob/master/demo/src/index.ejs&quot;&gt;demo html file&lt;/a&gt; for the proper loading sequence.</source>
          <target state="translated">请参考&lt;a href=&quot;https://github.com/webpack-contrib/polymer-webpack-loader/blob/master/demo/src/index.ejs&quot;&gt;演示html文件&lt;/a&gt;以获取正确的加载顺序。</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="806430f89bd9b62c7cfb2eed31236525d29c5c5e" translate="yes" xml:space="preserve">
          <source>References a dll manifest file to map dependency names to module ids, then requires them as needed using the internal &lt;code&gt;__webpack_require__&lt;/code&gt; function.</source>
          <target state="translated">引用dll清单文件以将依赖项名称映射到模块ID，然后根据需要使用内部 &lt;code&gt;__webpack_require__&lt;/code&gt; 函数来要求它们。</target>
        </trans-unit>
        <trans-unit id="ca5db4fe93ba98fe1b576309acf2388052f2a36a" translate="yes" xml:space="preserve">
          <source>RegExp</source>
          <target state="translated">RegExp</target>
        </trans-unit>
        <trans-unit id="e84924bdbf290769f17a9fea046a3d8be57d31f9" translate="yes" xml:space="preserve">
          <source>Register a function to listen for changes in &lt;code&gt;status&lt;/code&gt;.</source>
          <target state="translated">注册一个函数以监听 &lt;code&gt;status&lt;/code&gt; 变化。</target>
        </trans-unit>
        <trans-unit id="dd7bb9e1d6de0940bf8cc7f5d552eac3e907a3df" translate="yes" xml:space="preserve">
          <source>Registering Our Service Worker</source>
          <target state="translated">注册我们的服务人员</target>
        </trans-unit>
        <trans-unit id="743f247412091cd63d9bf68867401d2b01423153" translate="yes" xml:space="preserve">
          <source>Regular Expression or function (see previous point)</source>
          <target state="translated">正则表达式或函数(见前一点)</target>
        </trans-unit>
        <trans-unit id="95fcb99c97c4f07e4429e3498285f25058bba00f" translate="yes" xml:space="preserve">
          <source>Reject updates for itself.</source>
          <target state="translated">为自己拒绝更新。</target>
        </trans-unit>
        <trans-unit id="b3ef9adaf388e07f00bd633ecc44a2dc9a571661" translate="yes" xml:space="preserve">
          <source>Reject updates for the given &lt;code&gt;dependencies&lt;/code&gt; forcing the update to fail with a &lt;code&gt;'decline'&lt;/code&gt; code.</source>
          <target state="translated">拒绝给定 &lt;code&gt;dependencies&lt;/code&gt; 的更新，强制更新失败，并带有 &lt;code&gt;'decline'&lt;/code&gt; 代码。</target>
        </trans-unit>
        <trans-unit id="70f0ed160475c6161f66688a2c223afbe6e09df0" translate="yes" xml:space="preserve">
          <source>Relative and absolute request in shared:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7ddb7603d2a26315f2455b522c75c84a223953" translate="yes" xml:space="preserve">
          <source>Relative paths</source>
          <target state="translated">相对路径</target>
        </trans-unit>
        <trans-unit id="28f532ce0d092b46958fd0924da15d44647f02ef" translate="yes" xml:space="preserve">
          <source>Remark options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcba3363466313bbee18b56da6fe5fcd17afe12" translate="yes" xml:space="preserve">
          <source>Remark settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c803a932f775316c5574b371e7a05f33a94460c4" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;lodash&lt;/code&gt; package we were using? For demonstration purposes, let's say we wanted to instead provide this as a global throughout our application. To do this, we can use &lt;code&gt;ProvidePlugin&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0c95bb60fa0d6b00c6679fde1ebeb8ea6f6483" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;lodash&lt;/code&gt; package we were using? For demonstration purposes, let's say we wanted to instead provide this as a global throughout our application. To do this, we can use the &lt;code&gt;ProvidePlugin&lt;/code&gt;.</source>
          <target state="translated">还记得我们使用的 &lt;code&gt;lodash&lt;/code&gt; 软件包吗？出于演示目的，假设我们想在整个应用程序中以全局方式提供此功能。为此，我们可以使用 &lt;code&gt;ProvidePlugin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="298f8a952e11c47a146509416894334060fae16f" translate="yes" xml:space="preserve">
          <source>Remember that when using the &lt;a href=&quot;uglifyjs-webpack-plugin&quot;&gt;&lt;code&gt;UglifyJSPlugin&lt;/code&gt;&lt;/a&gt;, you must utilize the &lt;code&gt;sourceMap&lt;/code&gt; option.</source>
          <target state="translated">请记住，在使用&lt;a href=&quot;uglifyjs-webpack-plugin&quot;&gt; &lt;code&gt;UglifyJSPlugin&lt;/code&gt; 时&lt;/a&gt;，必须利用 &lt;code&gt;sourceMap&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="14eb068727f7a2bff087dc7929a503653ac0d93f" translate="yes" xml:space="preserve">
          <source>Remove Comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1bf2ebd26895dc8a02563899957f33ea0e0c98" translate="yes" xml:space="preserve">
          <source>Remove Order Warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb653885eebaad4002e035fda284819c80e2d0a" translate="yes" xml:space="preserve">
          <source>Remove Order Warnings. See &lt;a href=&quot;#remove-order-warnings&quot;&gt;examples&lt;/a&gt; below for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc75d441bfa1f4e69943b8c637e62baed6d344e6" translate="yes" xml:space="preserve">
          <source>Remove a registered status handler.</source>
          <target state="translated">删除已注册的状态处理程序。</target>
        </trans-unit>
        <trans-unit id="951160e8e157b090bce49601ac412fb326933d88" translate="yes" xml:space="preserve">
          <source>Remove all comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a506118dc12b3458ed102b999454c8f5e8eb85" translate="yes" xml:space="preserve">
          <source>Remove all comments (including comments starting with &lt;code&gt;/*!&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fb10795d80f5150953e92b0a60d102c8ab0e34" translate="yes" xml:space="preserve">
          <source>Remove all dependencies of the loader result, even initial dependencies and those of other loaders. Consider using &lt;code&gt;pitch&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86dc7ac837ee3922e692052e5a72685c918b97be" translate="yes" xml:space="preserve">
          <source>Remove all dependencies of the loader result. Even initial dependencies and these of other loaders. Consider using &lt;code&gt;pitch&lt;/code&gt;.</source>
          <target state="translated">删除加载程序结果的所有依赖项。甚至最初的依赖关系以及其他加载程序的依赖关系。考虑使用 &lt;code&gt;pitch&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1b70966df9914059f3a56bdbe3648fc360eeeb9d" translate="yes" xml:space="preserve">
          <source>Remove removeFrontMatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db11da02660881778d9f70873ecc4531e5238be0" translate="yes" xml:space="preserve">
          <source>Remove the callback added via &lt;code&gt;dispose&lt;/code&gt; or &lt;code&gt;addDisposeHandler&lt;/code&gt;.</source>
          <target state="translated">删除通过 &lt;code&gt;dispose&lt;/code&gt; 或 &lt;code&gt;addDisposeHandler&lt;/code&gt; 添加的回调。</target>
        </trans-unit>
        <trans-unit id="f5c91dd968a212f3e4523598d02cb09445533b05" translate="yes" xml:space="preserve">
          <source>Remove the handler added via &lt;code&gt;dispose&lt;/code&gt; or &lt;code&gt;addDisposeHandler&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf7471dcec5264f0fa3ba99680a0ed28646fcad" translate="yes" xml:space="preserve">
          <source>Remove unused code.</source>
          <target state="translated">删除未使用的代码。</target>
        </trans-unit>
        <trans-unit id="9873cfd7e2a458e89691e96ea4c58199b748b3b5" translate="yes" xml:space="preserve">
          <source>RemoveEmptyChunksPlugin</source>
          <target state="translated">RemoveEmptyChunksPlugin</target>
        </trans-unit>
        <trans-unit id="4b1b88f2caf58898b919ce55b6f39569c329c34b" translate="yes" xml:space="preserve">
          <source>Removed in webpack 5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da760a26bf6534d21a9780897c53ec553f4e69d" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes from &lt;code&gt;&amp;lt;svg /&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&amp;lt;svg /&amp;gt;&lt;/code&gt; 中删除 &lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;height&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="40c44544cf83a888a824dcd0249281fc3f07fc0f" translate="yes" xml:space="preserve">
          <source>Removes all directory references and only copies file names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ebcc27454ebc01bfe9f2d91aa1f18208ce3e7b" translate="yes" xml:space="preserve">
          <source>Removes all directory references and only copies file names.⚠️ If files have the same name, the result is non-deterministic</source>
          <target state="translated">移除所有目录引用,只复制文件名。⚠️如果文件有相同的名字,结果是非确定的。</target>
        </trans-unit>
        <trans-unit id="482cb600588ab8afaba15a68fed4f3c483e3091b" translate="yes" xml:space="preserve">
          <source>Removes attributes from inside the &lt;code&gt;&amp;lt;svg /&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&amp;lt;svg /&amp;gt;&lt;/code&gt; 内部删除属性。</target>
        </trans-unit>
        <trans-unit id="268092faa00134f23e24fe804b9814f9b0030e53" translate="yes" xml:space="preserve">
          <source>Removes given chunk from a dependencies block module and chunks after removing dependency reasons. Called automatically by &lt;code&gt;removeReasonsOfDependencyBlock&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf5c863a1cfe6467aa4fb4c2da2f389cc6793c8" translate="yes" xml:space="preserve">
          <source>Removes relation of the module to the dependency block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47c65a2b82a9efef40fc0ae3bf527fada456fc3" translate="yes" xml:space="preserve">
          <source>Removes specified tags and its children. You can specify tags by setting &lt;code&gt;removingTags&lt;/code&gt; query array.</source>
          <target state="translated">删除指定的标签及其子级。您可以通过设置 &lt;code&gt;removingTags&lt;/code&gt; 查询数组来指定标签。</target>
        </trans-unit>
        <trans-unit id="fc6c4d451ecb6322a8275648f0407eaad844edc0" translate="yes" xml:space="preserve">
          <source>Replace a specific module when building for a &lt;a href=&quot;../guides/production&quot;&gt;development environment&lt;/a&gt;.</source>
          <target state="translated">为&lt;a href=&quot;../guides/production&quot;&gt;开发环境&lt;/a&gt;构建时，请替换特定的模块。</target>
        </trans-unit>
        <trans-unit id="65bb0f4d7377e6cf9a90c603a8225b5f6fdc198a" translate="yes" xml:space="preserve">
          <source>Replace resource(s) that matches a regexp</source>
          <target state="translated">替换符合regexp的资源。</target>
        </trans-unit>
        <trans-unit id="1697458e975ac729b88e562177f723a8da0c34ce" translate="yes" xml:space="preserve">
          <source>Replaces</source>
          <target state="translated">Replaces</target>
        </trans-unit>
        <trans-unit id="f82e0d3f0e9fada0dd733074d215716c61325f4b" translate="yes" xml:space="preserve">
          <source>Report compilation progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e2d170ab822648a868ed17db41712a1e458ed56" translate="yes" xml:space="preserve">
          <source>Reporting Progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cadbf146f2e9bf53e4c1e34c9cf81f8d0c1c270" translate="yes" xml:space="preserve">
          <source>Request is issued from CommonJs/AMD syntax or similar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0eab6027cee8b369f4abf48867b6ee932e0efa" translate="yes" xml:space="preserve">
          <source>Request is issued from ESM syntax or similar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ec6fd4ae24572fecbac6493706cf9394cd70f3" translate="yes" xml:space="preserve">
          <source>Request is issued from a asset reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2683236e52396f3df8a92dd39e65878c3cd5e1" translate="yes" xml:space="preserve">
          <source>Request is issued from a normal script tag without module system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2391ee9ae9594615dc6c8d1e3b2b99e3deacb838" translate="yes" xml:space="preserve">
          <source>Request is issued from a sass stylesheet reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c351a47e1050eb546221d3873c2d57c428b8fda" translate="yes" xml:space="preserve">
          <source>Request is issued from a stylesheet reference.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f9634608216ccd57fa218280ce513d3bfef3da" translate="yes" xml:space="preserve">
          <source>Request is issued from typescript that is interested in type declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d215bfefc3b3a7abea4550cb0a623d9fe3adff7" translate="yes" xml:space="preserve">
          <source>Requests to packages e.g. &lt;code&gt;import &quot;lodash&quot;&lt;/code&gt; are still supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff5c4dd0585a4f0e68311b683e36c85f477b138" translate="yes" xml:space="preserve">
          <source>Require</source>
          <target state="translated">Require</target>
        </trans-unit>
        <trans-unit id="6010f42941314bd2e16a40b0ac73a734cd7cb6c7" translate="yes" xml:space="preserve">
          <source>Require a fallback for non-worker supporting environments</source>
          <target state="translated">要求为非工人支持环境提供后备支持。</target>
        </trans-unit>
        <trans-unit id="6c9edaf3770164ff37deb0cb23c37bafead4971a" translate="yes" xml:space="preserve">
          <source>RequireContextPlugin</source>
          <target state="translated">RequireContextPlugin</target>
        </trans-unit>
        <trans-unit id="43238921b568ca4ba900a9a52844c2058db99e54" translate="yes" xml:space="preserve">
          <source>RequireEnsurePlugin</source>
          <target state="translated">RequireEnsurePlugin</target>
        </trans-unit>
        <trans-unit id="a30b8d4cc6e89bbfda1b96a1316ab0c6ac1f872f" translate="yes" xml:space="preserve">
          <source>RequireIncludePlugin</source>
          <target state="translated">RequireIncludePlugin</target>
        </trans-unit>
        <trans-unit id="bd3796ebdfb294f6f69fa91710a470fe5978b2e8" translate="yes" xml:space="preserve">
          <source>RequireJsStuffPlugin</source>
          <target state="translated">RequireJsStuffPlugin</target>
        </trans-unit>
        <trans-unit id="eed6bfb41051ed5b74447340f3c2e29d11e99a7c" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="translated">Required</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="ac7f958cc028becfb4b2bec9c474bd2d5e8b6095" translate="yes" xml:space="preserve">
          <source>Resolve</source>
          <target state="translated">Resolve</target>
        </trans-unit>
        <trans-unit id="3432aff5199021e62327737e81355e2fee54208f" translate="yes" xml:space="preserve">
          <source>Resolve Options</source>
          <target state="translated">解决选项</target>
        </trans-unit>
        <trans-unit id="f4143195790e7b1a6c2f12714b89024432e0904e" translate="yes" xml:space="preserve">
          <source>Resolve a request like a require expression.</source>
          <target state="translated">像解决一个require表达式一样解决一个请求。</target>
        </trans-unit>
        <trans-unit id="4117aecbdcd5c2a14a49abe3ae181356d5211b71" translate="yes" xml:space="preserve">
          <source>Resolve unresolved URLs using an alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47ecade1ed39b604db07f2373e6d2388db12b9e7" translate="yes" xml:space="preserve">
          <source>Resolvers</source>
          <target state="translated">Resolvers</target>
        </trans-unit>
        <trans-unit id="0a04022c4e0e7bb30e09b8de97fac5544e03cab9" translate="yes" xml:space="preserve">
          <source>Resolvers are created using the &lt;code&gt;enhanced-resolve&lt;/code&gt; package. The &lt;code&gt;Resolver&lt;/code&gt; class extends the &lt;code&gt;tapable&lt;/code&gt; class and uses &lt;code&gt;tapable&lt;/code&gt; to provide a few hooks. The &lt;code&gt;enhanced-resolve&lt;/code&gt; package can be used directly to create new resolvers, however any &lt;a href=&quot;node#compiler-instance&quot;&gt;&lt;code&gt;compiler&lt;/code&gt; instance&lt;/a&gt; has a few resolver instances that can be tapped into.</source>
          <target state="translated">解析器是使用 &lt;code&gt;enhanced-resolve&lt;/code&gt; 包创建的。该 &lt;code&gt;Resolver&lt;/code&gt; 类扩展 &lt;code&gt;tapable&lt;/code&gt; 类，并使用 &lt;code&gt;tapable&lt;/code&gt; 提供一些挂钩。该 &lt;code&gt;enhanced-resolve&lt;/code&gt; 封装，可直接用于创建新的解析器，但是任何&lt;a href=&quot;node#compiler-instance&quot;&gt; &lt;code&gt;compiler&lt;/code&gt; 实例&lt;/a&gt;有可以挖掘到一些解析器实例。</target>
        </trans-unit>
        <trans-unit id="4827063ce86796eddb67161665ffc39e58f2551c" translate="yes" xml:space="preserve">
          <source>Resolves the given request to a module, applies all configured loaders and calls back with the generated source, the sourceMap and the module instance (usually an instance of &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NormalModule.js&quot;&gt;&lt;code&gt;NormalModule&lt;/code&gt;&lt;/a&gt;). Use this function if you need to know the source code of another module to generate the result.</source>
          <target state="translated">将给定的请求解析为模块，应用所有已配置的加载器，并使用生成的源，sourceMap和模块实例（通常是&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NormalModule.js&quot;&gt; &lt;code&gt;NormalModule&lt;/code&gt; &lt;/a&gt;的实例）进行回调。如果您需要了解另一个模块的源代码来生成结果，请使用此功能。</target>
        </trans-unit>
        <trans-unit id="0496ee3fee946976397fbaaafbfe520ed9cd2a64" translate="yes" xml:space="preserve">
          <source>Resolving</source>
          <target state="translated">Resolving</target>
        </trans-unit>
        <trans-unit id="03526a520b1e29f683904d55de8cd70d13d05e91" translate="yes" xml:space="preserve">
          <source>Resolving &lt;code&gt;import&lt;/code&gt; at-rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cfe8adaeb34b5dae64dfd3df0c12c06cc6dde4" translate="yes" xml:space="preserve">
          <source>Resolving Loaders</source>
          <target state="translated">解决装载机的问题</target>
        </trans-unit>
        <trans-unit id="c8fc3308d20a53544e752db6e62fce4448dae15d" translate="yes" xml:space="preserve">
          <source>Resolving can be configured on module level. See all available options on &lt;a href=&quot;resolve#resolve&quot;&gt;resolve configuration page&lt;/a&gt;. All applied resolve options get deeply merged with higher level &lt;a href=&quot;resolve#resolve&quot;&gt;resolve&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f0ec17c944bb807b10be302d71736723bc4c6f" translate="yes" xml:space="preserve">
          <source>Resolving rules in webpack</source>
          <target state="translated">解决webpack中的规则</target>
        </trans-unit>
        <trans-unit id="7ecbb921622abc017c4c2b33f2ec863736468500" translate="yes" xml:space="preserve">
          <source>Resource assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="023439148eb14eee98cc632e2b3413bd7104e53f" translate="yes" xml:space="preserve">
          <source>Restore chunk information from records.</source>
          <target state="translated">恢复记录中的分块信息。</target>
        </trans-unit>
        <trans-unit id="1a6c030e3332163797f8d8b087994cef1d3091a1" translate="yes" xml:space="preserve">
          <source>Restore module information from records.</source>
          <target state="translated">从记录中恢复模块信息。</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="577482eb2da290972a209ca84bc32745dcf1b0f9" translate="yes" xml:space="preserve">
          <source>Result when run with &lt;code&gt;NAMESPACE=dev&lt;/code&gt; env variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2af9a593316bd316e52266427663ed4abdca32b" translate="yes" xml:space="preserve">
          <source>Result when run with &lt;code&gt;NAMESPACE=prod&lt;/code&gt; env variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="a6e4a9f3687ba5f929d9c85fef2366beb0a84bca" translate="yes" xml:space="preserve">
          <source>Resulting environment</source>
          <target state="translated">结果环境</target>
        </trans-unit>
        <trans-unit id="6feaf1b4c25f3b349afc2efaa914a5d94e7222b9" translate="yes" xml:space="preserve">
          <source>Retain application state which is lost during a full reload.</source>
          <target state="translated">保留在完全重装时丢失的应用状态。</target>
        </trans-unit>
        <trans-unit id="2dbf5cf165d9e17cc3cfaabca2751bab59dfc4e0" translate="yes" xml:space="preserve">
          <source>Retrieve the current status of the hot module replacement process.</source>
          <target state="translated">检索热模块更换过程的当前状态。</target>
        </trans-unit>
        <trans-unit id="0e4d3f812e26361f76a5608d2dfeae4f8821cd30" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;false&lt;/code&gt; to produce a 404 error for the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0447e8646ff1ce85b535874c579dc5619b75ff5e" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; to continue processing the request with proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcb9afc838142060775af07b2bc42dd3fc0ed71" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;true&lt;/code&gt; to optimize the image, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729789ff7741b8f4ac5d5c9840807831eb2784ac" translate="yes" xml:space="preserve">
          <source>Return Object Properties</source>
          <target state="translated">返回对象属性</target>
        </trans-unit>
        <trans-unit id="d2bb2d59b83c91698e1f179bf315584db4cf8a18" translate="yes" xml:space="preserve">
          <source>Return a path to serve from, instead of continuing to proxy the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b619e134e1e3b42bf929ca7457d10d3175902d1" translate="yes" xml:space="preserve">
          <source>Returning a &lt;code&gt;Promise&lt;/code&gt; only works when using webpack via CLI. &lt;a href=&quot;../api/node#webpack&quot;&gt;&lt;code&gt;webpack()&lt;/code&gt;&lt;/a&gt; expects an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56348477fc96c31a09a1ee4040b1c193e0ee2163" translate="yes" xml:space="preserve">
          <source>Returns Stats object for the current compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6daf6530c152e098b9400577d9405899c652f052" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Promise&lt;/code&gt;, which resolves with an &lt;code&gt;Object&lt;/code&gt; containing:</source>
          <target state="translated">返回一个 &lt;code&gt;Promise&lt;/code&gt; ，它使用包含以下内容的 &lt;code&gt;Object&lt;/code&gt; 进行解析：</target>
        </trans-unit>
        <trans-unit id="74604c341dd520194f23eabd2da656c294f75fbc" translate="yes" xml:space="preserve">
          <source>Returns a formatted string of the compilation information (similar to &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; output).</source>
          <target state="translated">返回编译信息的格式化字符串（类似于&lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt;输出）。</target>
        </trans-unit>
        <trans-unit id="4a719dbe53c2e86e1066f3929996605c6a077a86" translate="yes" xml:space="preserve">
          <source>Returns array of all assets under the current compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e2c5131a5350cd343ea668874739fbeb829662" translate="yes" xml:space="preserve">
          <source>Returns compilation information as a JSON object. &lt;code&gt;options&lt;/code&gt; can be either a string (a preset) or an object for more granular control:</source>
          <target state="translated">以JSON对象的形式返回编译信息。 &lt;code&gt;options&lt;/code&gt; 可以是字符串（预设），也可以是用于更精细控制的对象：</target>
        </trans-unit>
        <trans-unit id="926f61b289e6bfeb4dd9a0c124fb1cf1c71df012" translate="yes" xml:space="preserve">
          <source>Returns interpolated path and asset information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f55b91e171f97bc16dec40f715d6868ac0cfb6" translate="yes" xml:space="preserve">
          <source>Returns the absolute &lt;code&gt;file:&lt;/code&gt; URL of the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0560aef0471e79c3f5465c7cc5f1dc615dd56526" translate="yes" xml:space="preserve">
          <source>Returns the interpolated path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4208043c3833bb406ab1a8759edd052044068e9c" translate="yes" xml:space="preserve">
          <source>Returns the reference to the dependency from a given module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbb2fc8b563942786024066c32f70fba001d676" translate="yes" xml:space="preserve">
          <source>Returns the webpack version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed6c8d9b592e3818013d15eb20c2a8448226eda" translate="yes" xml:space="preserve">
          <source>Reuses a single &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; element, instead of adding/removing individual elements for each required module.</source>
          <target state="translated">重用单个 &lt;code&gt;&amp;lt;style&amp;gt;&amp;lt;/style&amp;gt;&lt;/code&gt; 元素，而不是为每个所需模块添加/删除单个元素。</target>
        </trans-unit>
        <trans-unit id="d210935e26b0bb103a3faa0d965a18c756f8cbfd" translate="yes" xml:space="preserve">
          <source>Reward modern browser users script</source>
          <target state="translated">奖励现代浏览器用户脚本</target>
        </trans-unit>
        <trans-unit id="e96857c58f716104caead648ee6aa61ab8e41cdc" translate="yes" xml:space="preserve">
          <source>Root</source>
          <target state="translated">Root</target>
        </trans-unit>
        <trans-unit id="39b01d31286bea2204885e06646cdafb357d538b" translate="yes" xml:space="preserve">
          <source>Round &lt;code&gt;mtime&lt;/code&gt; by this number of milliseconds both for &lt;code&gt;stats&lt;/code&gt; and &lt;code&gt;dep&lt;/code&gt; before passing those params to the comparing function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e1790e29a5541b6d02348fc3f45f18445709f4" translate="yes" xml:space="preserve">
          <source>Rule</source>
          <target state="translated">Rule</target>
        </trans-unit>
        <trans-unit id="e2d20b6772074cf8de6f88e6a258855345fac21b" translate="yes" xml:space="preserve">
          <source>Rule Conditions</source>
          <target state="translated">规则条件</target>
        </trans-unit>
        <trans-unit id="a6328ec24079df0f6c1e7d850b422bd7d296967e" translate="yes" xml:space="preserve">
          <source>Rule results</source>
          <target state="translated">规则结果</target>
        </trans-unit>
        <trans-unit id="b425d5f98c8e7887f024f258ef9ba80eebb288ec" translate="yes" xml:space="preserve">
          <source>Rule results are used only when the Rule condition matches.</source>
          <target state="translated">只有当规则条件匹配时,才会使用规则结果。</target>
        </trans-unit>
        <trans-unit id="24ffaa84e3b73d917eb7bd902d377fe6df94ed89" translate="yes" xml:space="preserve">
          <source>Rule.enforce</source>
          <target state="translated">Rule.enforce</target>
        </trans-unit>
        <trans-unit id="73586767a5cffaa218dcaff111d74b6ed4165beb" translate="yes" xml:space="preserve">
          <source>Rule.exclude</source>
          <target state="translated">Rule.exclude</target>
        </trans-unit>
        <trans-unit id="0cca4d081709c5839763ff49059502f3e7b79184" translate="yes" xml:space="preserve">
          <source>Rule.generator.dataUrl</source>
          <target state="translated">Rule.generator.dataUrl</target>
        </trans-unit>
        <trans-unit id="35466691a754fa0dfc222f095952019f82667b3f" translate="yes" xml:space="preserve">
          <source>Rule.generator.filename</source>
          <target state="translated">Rule.generator.filename</target>
        </trans-unit>
        <trans-unit id="93c486eeb37fd7ff3941f797699b1d4a54750f4f" translate="yes" xml:space="preserve">
          <source>Rule.include</source>
          <target state="translated">Rule.include</target>
        </trans-unit>
        <trans-unit id="4fe4e6b0471c3b4ef44dd94ec56b1026d9ad262c" translate="yes" xml:space="preserve">
          <source>Rule.issuer</source>
          <target state="translated">Rule.issuer</target>
        </trans-unit>
        <trans-unit id="12e311d24954ff2b485dfa03eeeb22bbc1fc448d" translate="yes" xml:space="preserve">
          <source>Rule.loader</source>
          <target state="translated">Rule.loader</target>
        </trans-unit>
        <trans-unit id="93c5ed6b2b726b4301a2c0e8dba75a8f762cc517" translate="yes" xml:space="preserve">
          <source>Rule.loaders</source>
          <target state="translated">Rule.loaders</target>
        </trans-unit>
        <trans-unit id="6460aa61adce34b02c861b624236aea9edb37adc" translate="yes" xml:space="preserve">
          <source>Rule.mimetype</source>
          <target state="translated">Rule.mimetype</target>
        </trans-unit>
        <trans-unit id="8d82e3fe7db79a38063be185a78a1787b48434cc" translate="yes" xml:space="preserve">
          <source>Rule.oneOf</source>
          <target state="translated">Rule.oneOf</target>
        </trans-unit>
        <trans-unit id="a2073776e20d522c196308af0d11686e173d3cac" translate="yes" xml:space="preserve">
          <source>Rule.options</source>
          <target state="translated">Rule.options</target>
        </trans-unit>
        <trans-unit id="7712fe61ac58ff25076907afa23c57fe2858ec68" translate="yes" xml:space="preserve">
          <source>Rule.parser</source>
          <target state="translated">Rule.parser</target>
        </trans-unit>
        <trans-unit id="6a3c8116831e83365233a54ff673bbe62dbeb169" translate="yes" xml:space="preserve">
          <source>Rule.parser.dataUrlCondition</source>
          <target state="translated">Rule.parser.dataUrlCondition</target>
        </trans-unit>
        <trans-unit id="86973dcbb4d35aae63a4eb7ed15d0e5aa2a688f8" translate="yes" xml:space="preserve">
          <source>Rule.parser.parse</source>
          <target state="translated">Rule.parser.parse</target>
        </trans-unit>
        <trans-unit id="4206e0bd278c5485bb09773f1889014ba566639c" translate="yes" xml:space="preserve">
          <source>Rule.resolve</source>
          <target state="translated">Rule.resolve</target>
        </trans-unit>
        <trans-unit id="6ad3eb959ec26fbac17179d5a9a5d1485a161a58" translate="yes" xml:space="preserve">
          <source>Rule.resource</source>
          <target state="translated">Rule.resource</target>
        </trans-unit>
        <trans-unit id="6be5a7bec6e23d9ee0a8d042cd9bb03000f5c259" translate="yes" xml:space="preserve">
          <source>Rule.resourceQuery</source>
          <target state="translated">Rule.resourceQuery</target>
        </trans-unit>
        <trans-unit id="f13b889b4166c1ccec685b85f460df06f0401346" translate="yes" xml:space="preserve">
          <source>Rule.rules</source>
          <target state="translated">Rule.rules</target>
        </trans-unit>
        <trans-unit id="1ed77fc86a78da80e27b4a7df0b906420a85b328" translate="yes" xml:space="preserve">
          <source>Rule.sideEffects</source>
          <target state="translated">Rule.sideEffects</target>
        </trans-unit>
        <trans-unit id="f5a8c1e6b4789569d31a590ea24a49a7fdf74e8c" translate="yes" xml:space="preserve">
          <source>Rule.test</source>
          <target state="translated">Rule.test</target>
        </trans-unit>
        <trans-unit id="4c9127fb0f0e958cc7ba3919d41d6ff1d6986373" translate="yes" xml:space="preserve">
          <source>Rule.type</source>
          <target state="translated">Rule.type</target>
        </trans-unit>
        <trans-unit id="ebb25b320bb483820b96caf30356b652ae859834" translate="yes" xml:space="preserve">
          <source>Rule.use</source>
          <target state="translated">Rule.use</target>
        </trans-unit>
        <trans-unit id="b1b392607deaf29a7e81453e069b7c07a32a6b18" translate="yes" xml:space="preserve">
          <source>Run</source>
          <target state="translated">Run</target>
        </trans-unit>
        <trans-unit id="a4beada2c3e7bea1ecb31b03bcff67579986be59" translate="yes" xml:space="preserve">
          <source>Run an &lt;code&gt;npm run build&lt;/code&gt;, it should compile to something like this:</source>
          <target state="translated">运行一个 &lt;code&gt;npm run build&lt;/code&gt; ，它应该编译成这样：</target>
        </trans-unit>
        <trans-unit id="f4da09cb4ffc22e80dea2e1d9b18a1c41cdb6504" translate="yes" xml:space="preserve">
          <source>Run the webpack Dev Server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c615aafa765a1ef5bd603e8ab85525c53f3f7e6" translate="yes" xml:space="preserve">
          <source>Run webpack with &lt;code&gt;ProfilingPlugin&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;ProfilingPlugin&lt;/code&gt; 运行webpack 。</target>
        </trans-unit>
        <trans-unit id="4223bf04315af633cdf56c0cb6b2371651e75eca" translate="yes" xml:space="preserve">
          <source>Run when a module build has failed.</source>
          <target state="translated">当模块构建失败时运行。</target>
        </trans-unit>
        <trans-unit id="74b15e59c3f98a89ecdc64d02cfef8e614ad6cf4" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;DEBUG=false webpack&lt;/code&gt; yields:</source>
          <target state="translated">运行 &lt;code&gt;DEBUG=false webpack&lt;/code&gt; 会产生：</target>
        </trans-unit>
        <trans-unit id="36eba79702d998367df8aa0f5fede84f46a9671e" translate="yes" xml:space="preserve">
          <source>Running a scaffold</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62cfe94a89c2f8f8baf2bb5ba03598065c5affc6" translate="yes" xml:space="preserve">
          <source>Running a scaffold from npm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47cd3a1b0865b976940b075435f5b4c76fced8d" translate="yes" xml:space="preserve">
          <source>Running a scaffold locally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d448bb65599d3c2d4d28c7ff4e481e6cb7233e" translate="yes" xml:space="preserve">
          <source>Running another build, we would expect only our &lt;code&gt;main&lt;/code&gt; bundle's hash to change, however...</source>
          <target state="translated">运行另一个构建，我们希望仅更改 &lt;code&gt;main&lt;/code&gt; 捆绑包的哈希，但是...</target>
        </trans-unit>
        <trans-unit id="e46f1249c2bce48b0c72e84ec66adb21c8a07be8" translate="yes" xml:space="preserve">
          <source>Running our build script, &lt;code&gt;npm run build&lt;/code&gt;, with this configuration should produce the following output:</source>
          <target state="translated">使用此配置运行我们的构建脚本 &lt;code&gt;npm run build&lt;/code&gt; ，将产生以下输出：</target>
        </trans-unit>
        <trans-unit id="48dd916c96025b1e57f8d56813d8611d15c051e4" translate="yes" xml:space="preserve">
          <source>Running the Server</source>
          <target state="translated">运行服务器</target>
        </trans-unit>
        <trans-unit id="db0631586335dd1b31b5cd7052a80f954e3cd573" translate="yes" xml:space="preserve">
          <source>Running webpack with above configuration will output into &lt;code&gt;./dist&lt;/code&gt; as we did not specify different output path. &lt;code&gt;./dist&lt;/code&gt; directory will now contain four files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d62fcf289c89e8206a10eba8b3811f5b803bea" translate="yes" xml:space="preserve">
          <source>Running webpack with following &lt;code&gt;splitChunks&lt;/code&gt; configuration would also output a chunk of the group common with next name: &lt;code&gt;commons-main-lodash.js.e7519d2bb8777058fa27.js&lt;/code&gt; (hash given as an example of real world output).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d18616653bcb10fc6fbe1539f6e9a8f5ffcfb19" translate="yes" xml:space="preserve">
          <source>Runs a given &lt;code&gt;callback&lt;/code&gt; function when the given module was built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ae1afc2e3bb7d11b4e8528dc9983432837bc12" translate="yes" xml:space="preserve">
          <source>Runs a plugin after a &lt;code&gt;ContextModuleFactory&lt;/code&gt; is created.</source>
          <target state="translated">创建 &lt;code&gt;ContextModuleFactory&lt;/code&gt; 后运行插件。</target>
        </trans-unit>
        <trans-unit id="8ca58b434c15088e58f38aa7f532bc972a311118" translate="yes" xml:space="preserve">
          <source>Runs a plugin after a &lt;code&gt;NormalModuleFactory&lt;/code&gt; is created.</source>
          <target state="translated">创建 &lt;code&gt;NormalModuleFactory&lt;/code&gt; 后运行插件。</target>
        </trans-unit>
        <trans-unit id="7c500584678e2cd47e693b1d2eed1eedd098b1c2" translate="yes" xml:space="preserve">
          <source>Runs a plugin after a compilation has been created.</source>
          <target state="translated">在创建编译后运行插件。</target>
        </trans-unit>
        <trans-unit id="397728565e08bf27344855050d471e79cad556c2" translate="yes" xml:space="preserve">
          <source>Runs a plugin after setting up initial set of plugins.</source>
          <target state="translated">设置好初始插件集后运行插件。</target>
        </trans-unit>
        <trans-unit id="993a446b7721cdab57479b0e3635714e3dbbb5ba" translate="yes" xml:space="preserve">
          <source>Runs a plugin before the environment is prepared.</source>
          <target state="translated">在环境准备好之前,运行一个插件。</target>
        </trans-unit>
        <trans-unit id="15ce3ca884317bc6dab4f37e69a27a020bb27b78" translate="yes" xml:space="preserve">
          <source>Runs the following loaders in a worker pool.</source>
          <target state="translated">在 Worker 池中运行以下加载器。</target>
        </trans-unit>
        <trans-unit id="c4740e4ca28c9c8d6a8447aef5c33425e6de4802" translate="yes" xml:space="preserve">
          <source>Runtime</source>
          <target state="translated">Runtime</target>
        </trans-unit>
        <trans-unit id="2b73ad79bcc0cbd015a6c3ce83f74940d57410ef" translate="yes" xml:space="preserve">
          <source>Runtime Logger API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df35deb21c8cc6d3aca3dce8e7f9ce284fd89e8" translate="yes" xml:space="preserve">
          <source>Runtime logger API is only intended to be used as a development tool, it is not intended to be included in &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt;production mode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e8e62c7b35e672102d34f26b3e6e726562969b" translate="yes" xml:space="preserve">
          <source>Runtime values via &lt;code&gt;runtimeValue&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fce6d02899850101b1865a947b45128c5350eb" translate="yes" xml:space="preserve">
          <source>SVG</source>
          <target state="translated">SVG</target>
        </trans-unit>
        <trans-unit id="1e5443f19149eeed454e6a8973bab1bc1d8b5d2a" translate="yes" xml:space="preserve">
          <source>SVG can be compressed into a more compact output, avoiding &lt;code&gt;base64&lt;/code&gt;. You can read about it more &lt;a href=&quot;https://css-tricks.com/probably-dont-base64-svg/&quot;&gt;here&lt;/a&gt;. You can do it using &lt;a href=&quot;https://github.com/tigt/mini-svg-data-uri&quot;&gt;mini-svg-data-uri&lt;/a&gt; package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0e2a1c1809b57e59a8137d296e845f8d7b8d0c" translate="yes" xml:space="preserve">
          <source>Sadly there is no &lt;code&gt;node-js&lt;/code&gt; condition for Node.js as runtime. This would simplify creating exceptions for Node.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760e6deb986333d493e4ea72f11abc6783cf819e" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;'deterministic'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fe53a9039acdd0fa1e733c4e2e68417b5b8673" translate="yes" xml:space="preserve">
          <source>Same as above, but with a customizable number of emojis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65cbe4ac130d64784aadc67ad7bcc3c4df11faf" translate="yes" xml:space="preserve">
          <source>Same, but deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eeeb3abd2a7bc179a6b6d5c56488b5f8c903a7" translate="yes" xml:space="preserve">
          <source>Sass</source>
          <target state="translated">Sass</target>
        </trans-unit>
        <trans-unit id="c73806b360250b5461e84c22b01e85d08e039783" translate="yes" xml:space="preserve">
          <source>Save valuable development time by only updating what's changed.</source>
          <target state="translated">只更新更改的内容,节省宝贵的开发时间。</target>
        </trans-unit>
        <trans-unit id="32de35db37c33913cc7d051c2b6e5dde7e069a2f" translate="yes" xml:space="preserve">
          <source>Saves and restores module and chunk ids from records.</source>
          <target state="translated">保存和恢复记录中的模块和块ID。</target>
        </trans-unit>
        <trans-unit id="3aacb738658584a773378169bb21a20b60ca2bb3" translate="yes" xml:space="preserve">
          <source>Saving in WebStorm</source>
          <target state="translated">保存在WebStorm中</target>
        </trans-unit>
        <trans-unit id="ede302b5bf410f699067da258c658766d6178ded" translate="yes" xml:space="preserve">
          <source>Say you have a config file &lt;code&gt;some/path/config.development.module.js&lt;/code&gt; and a special version for production in &lt;code&gt;some/path/config.production.module.js&lt;/code&gt;</source>
          <target state="translated">假设您有一个配置文件 &lt;code&gt;some/path/config.development.module.js&lt;/code&gt; ,并在 &lt;code&gt;some/path/config.production.module.js&lt;/code&gt; 中有一个用于生产的特殊版本</target>
        </trans-unit>
        <trans-unit id="8e672d15214b20132a8f5db4786b9223653a64d8" translate="yes" xml:space="preserve">
          <source>Say you have a configuration file &lt;code&gt;some/path/config.development.module.js&lt;/code&gt; and a special version for production in &lt;code&gt;some/path/config.production.module.js&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0c01ac9bc4fb92c646eb47610077862dcf8269" translate="yes" xml:space="preserve">
          <source>Say you want a configuration with specific values for different build targets.</source>
          <target state="translated">假设你想要一个针对不同构建目标的特定值的配置。</target>
        </trans-unit>
        <trans-unit id="95118618360eaeae1d74b75f8ea5a74b0c4ed657" translate="yes" xml:space="preserve">
          <source>Scaffold a loader repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaa32752e044abc58264d57592533431599875b" translate="yes" xml:space="preserve">
          <source>Scaffold a plugin repository</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c5f3f6b5f85b10ef97ae46467458dd4f624965" translate="yes" xml:space="preserve">
          <source>Scaffolding</source>
          <target state="translated">Scaffolding</target>
        </trans-unit>
        <trans-unit id="2dd4a83d012acd714fbd600cfb9847611783fea3" translate="yes" xml:space="preserve">
          <source>Scenarios</source>
          <target state="translated">Scenarios</target>
        </trans-unit>
        <trans-unit id="e91f7eacbf166e117424593ae1ded03e4599622d" translate="yes" xml:space="preserve">
          <source>Scope hoisting fallback trigger (since webpack 3.0.0)</source>
          <target state="translated">范围提升回调触发器(自webpack 3.0起)</target>
        </trans-unit>
        <trans-unit id="f6d1fd21e54c6955d5974d21955e39f3c73e8ce2" translate="yes" xml:space="preserve">
          <source>Scope hoisting is specifically a feature made possible by ECMAScript Module syntax. Because of this webpack may fallback to normal bundling based on what kind of modules you are using, and &lt;a href=&quot;https://medium.com/webpack/webpack-freelancing-log-book-week-5-7-4764be3266f5&quot;&gt;other conditions&lt;/a&gt;.</source>
          <target state="translated">范围吊装是ECMAScript Module语法特有的功能。因此，根据您使用的是哪种模块以及&lt;a href=&quot;https://medium.com/webpack/webpack-freelancing-log-book-week-5-7-4764be3266f5&quot;&gt;其他条件&lt;/a&gt;，该webpack可能会退回到常规捆绑。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
