<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="webpack">
    <body>
      <group id="webpack">
        <trans-unit id="0acfe5a92bfd936f558865b7784ff994e921d19f" translate="yes" xml:space="preserve">
          <source>The same shortcut as an array can be used for the return value (i.e. &lt;code&gt;use: [ 'style-loader' ]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b665da5e519d5e540da3b313a41a99cd0ecf3a1" translate="yes" xml:space="preserve">
          <source>The sass-loader requires &lt;a href=&quot;https://github.com/webpack&quot;&gt;webpack&lt;/a&gt; as a &lt;a href=&quot;https://docs.npmjs.com/files/package.json#peerdependencies&quot;&gt;&lt;code&gt;peerDependency&lt;/code&gt;&lt;/a&gt; and it requires you to install either &lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt; or &lt;a href=&quot;https://github.com/sass/dart-sass&quot;&gt;Dart Sass&lt;/a&gt; on your own. This allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.</source>
          <target state="translated">sass-loader需要&lt;a href=&quot;https://github.com/webpack&quot;&gt;webpack&lt;/a&gt;作为&lt;a href=&quot;https://docs.npmjs.com/files/package.json#peerdependencies&quot;&gt; &lt;code&gt;peerDependency&lt;/code&gt; &lt;/a&gt;，它要求您自行安装&lt;a href=&quot;https://github.com/sass/node-sass&quot;&gt;Node Sass&lt;/a&gt;或&lt;a href=&quot;https://github.com/sass/dart-sass&quot;&gt;Dart Sass&lt;/a&gt;。这使您可以控制所有依赖项的版本，并选择要使用的Sass实现。</target>
        </trans-unit>
        <trans-unit id="34aa382924eb34a97b5ff040bbe8c678d0951eb6" translate="yes" xml:space="preserve">
          <source>The second argument a &lt;code&gt;string&lt;/code&gt; or a &lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">第二个参数是 &lt;code&gt;string&lt;/code&gt; 或&lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9f40ba461a9658ddbae40cc1a6452af405d39a0a" translate="yes" xml:space="preserve">
          <source>The second argument is a &lt;code&gt;string&lt;/code&gt; or a &lt;a href=&quot;https://nodejs.org/api/buffer.html&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df04995c9f49009e24f0c183707f430b6ea80c03" translate="yes" xml:space="preserve">
          <source>The second argument is an array of file paths to watch for. Pass &lt;code&gt;true&lt;/code&gt; instead of &lt;code&gt;[string]&lt;/code&gt; here to flag the module as uncacheable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb3a2178fb08052e95c8397dfaf7a97e66d1c0a" translate="yes" xml:space="preserve">
          <source>The server should be accessible on &lt;code&gt;http://10.10.10.61:8080&lt;/code&gt; now. If you make a change in &lt;code&gt;app.js&lt;/code&gt;, it should live reload.</source>
          <target state="translated">现在应该可以从 &lt;code&gt;http://10.10.10.61:8080&lt;/code&gt; 访问该服务器。如果您对 &lt;code&gt;app.js&lt;/code&gt; 进行更改，则应该重新加载。</target>
        </trans-unit>
        <trans-unit id="36694462fb15a2bc75a3fea2f02d4342fbda1a03" translate="yes" xml:space="preserve">
          <source>The single entry syntax for the &lt;code&gt;entry&lt;/code&gt; property is a shorthand for:</source>
          <target state="translated">&lt;code&gt;entry&lt;/code&gt; 属性的单项语法是以下内容的简写：</target>
        </trans-unit>
        <trans-unit id="115c455da79a8006628c20e59f638f4b9b64b4d0" translate="yes" xml:space="preserve">
          <source>The source code you, and maybe your team, have written.</source>
          <target state="translated">你,也许还有你的团队,所写的源代码。</target>
        </trans-unit>
        <trans-unit id="28cb8cd49852f753c9f2be8f92238b51bbe3f7ae" translate="yes" xml:space="preserve">
          <source>The spec for &lt;code&gt;import&lt;/code&gt; doesn't allow control over the chunk's name or other properties as &quot;chunks&quot; are only a concept within webpack. Luckily webpack allows some special parameters via comments so as to not break the spec:</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; 规范不允许控制块的名称或其他属性，因为&amp;ldquo;块&amp;rdquo;只是webpack中的一个概念。幸运的是，webpack允许通过注释添加一些特殊参数，以免破坏规格：</target>
        </trans-unit>
        <trans-unit id="3b0675c0031efa142feb44abd09373964cd599c1" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;implementation&lt;/code&gt; option determines which implementation of Sass to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13755577ac5a47dc78ee4c995fe1dfc9e99d9c04" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;implementation&lt;/code&gt; option determines which implementation of Sass to use. It takes either a [Node Sass][] or a [Dart Sass][] module. For example, to use Dart Sass, you'd pass:</source>
          <target state="translated">特殊的 &lt;code&gt;implementation&lt;/code&gt; 选项确定使用哪个Sass实现。它需要[Node Sass] []或[Dart Sass] []模块。例如，要使用Dart Sass，您需要传递：</target>
        </trans-unit>
        <trans-unit id="5c4b162f681173ae925ce59ee2d62441d980bbc0" translate="yes" xml:space="preserve">
          <source>The steps above would be shortened to:</source>
          <target state="translated">上述步骤将缩短为:</target>
        </trans-unit>
        <trans-unit id="c086ef368c2e61193dc23f5a88ecd75a1567c8f6" translate="yes" xml:space="preserve">
          <source>The syntax &lt;code&gt;:local(.className)&lt;/code&gt; can be used to declare &lt;code&gt;className&lt;/code&gt; in the local scope. The local identifiers are exported by the module.</source>
          <target state="translated">语法 &lt;code&gt;:local(.className)&lt;/code&gt; 可以用于在本地范围内声明 &lt;code&gt;className&lt;/code&gt; 。本地标识符由模块导出。</target>
        </trans-unit>
        <trans-unit id="6c080a2f2285ca1d1604a8b397e768aea30b9793" translate="yes" xml:space="preserve">
          <source>The syntax is as follows:</source>
          <target state="translated">语法如下:</target>
        </trans-unit>
        <trans-unit id="a1a16d57fa62224eed23c5bf7c1e111292049ad9" translate="yes" xml:space="preserve">
          <source>The target asset filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2716905e673426c395a43315d25accc4c07f4a9b" translate="yes" xml:space="preserve">
          <source>The target asset filename.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636a5736cf2581279ebfb2a0261adf16ae389bb9" translate="yes" xml:space="preserve">
          <source>The target asset name. &lt;code&gt;[file]&lt;/code&gt; is replaced with the original asset. &lt;code&gt;[path]&lt;/code&gt; is replaced with the path of the original asset and &lt;code&gt;[query]&lt;/code&gt; with the query</source>
          <target state="translated">目标资产名称。 &lt;code&gt;[file]&lt;/code&gt; 被替换为原始资产。 &lt;code&gt;[path]&lt;/code&gt; 替换为原始资产的路径， &lt;code&gt;[query]&lt;/code&gt; 替换为查询</target>
        </trans-unit>
        <trans-unit id="177bdd7144528e0a066a492e3ba76b2ce123f46a" translate="yes" xml:space="preserve">
          <source>The target module is called with two arguments: &lt;code&gt;(options, loaderContext)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba2325dc692f9ab9bafbbb2beda8299b674eba5" translate="yes" xml:space="preserve">
          <source>The third-party &lt;a href=&quot;https://github.com/mrsteele/dotenv-webpack&quot;&gt;&lt;code&gt;DotenvPlugin&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;dotenv-webpack&lt;/code&gt;) allows you to expose (a subset of) &lt;a href=&quot;https://www.npmjs.com/package/dotenv&quot;&gt;dotenv variables&lt;/a&gt;:</source>
          <target state="translated">第三方&lt;a href=&quot;https://github.com/mrsteele/dotenv-webpack&quot;&gt; &lt;code&gt;DotenvPlugin&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;dotenv-webpack&lt;/code&gt; ）允许您公开&lt;a href=&quot;https://www.npmjs.com/package/dotenv&quot;&gt;dotenv变量&lt;/a&gt;（的一部分）：</target>
        </trans-unit>
        <trans-unit id="ba0623dec4dcfaa3539a27d267af37d4a6c6159b" translate="yes" xml:space="preserve">
          <source>The tools in this guide are &lt;strong&gt;only meant for development&lt;/strong&gt;, please &lt;strong&gt;avoid&lt;/strong&gt; using them in production!</source>
          <target state="translated">本指南中的工具&lt;strong&gt;仅用于开发&lt;/strong&gt;，请&lt;strong&gt;避免&lt;/strong&gt;在生产中使用它们！</target>
        </trans-unit>
        <trans-unit id="d03833fb081139e2861c0b6bac6df6e16c42c69b" translate="yes" xml:space="preserve">
          <source>The top-level &lt;code&gt;output&lt;/code&gt; key contains set of options instructing webpack on how and where it should output your bundles, assets and anything else you bundle or load with webpack.</source>
          <target state="translated">顶层 &lt;code&gt;output&lt;/code&gt; 键包含一组选项，这些选项可指示webpack如何以及在何处输出包，资产以及您随webpack捆绑或加载的其他内容。</target>
        </trans-unit>
        <trans-unit id="23ddc8426f41fcf0c2f24729e02738cbc0c4ea94" translate="yes" xml:space="preserve">
          <source>The top-level structure of the output JSON file is fairly straightforward but there are a few nested data structures as well. Each nested structure has a dedicated section below to make this document more consumable. Note that you can click links within the top-level structure below to jump to relevant sections and documentation:</source>
          <target state="translated">输出JSON文件的顶层结构相当简单,但也有一些嵌套的数据结构。每个嵌套结构在下面都有专门的章节,以使本文档更易消耗。注意,你可以点击下面顶层结构内的链接,跳转到相关的章节和文档。</target>
        </trans-unit>
        <trans-unit id="21fac4f66ee3d2ee67766bb850f5c7ffd7ea15c9" translate="yes" xml:space="preserve">
          <source>The total modules count is unknown in advance and changes during the build. This may cause inaccurate progress percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc561d5b45341ac9ae52e7eceff1b71c210b154" translate="yes" xml:space="preserve">
          <source>The type for exposing the exports of the entry point as library</source>
          <target state="translated">将入口点的出口以库的形式公开的类型。</target>
        </trans-unit>
        <trans-unit id="1b0130c377a6b1943c155f390a9bb614091aca89" translate="yes" xml:space="preserve">
          <source>The type of hash that the has function should use. Valid values include: &lt;code&gt;md4&lt;/code&gt;, &lt;code&gt;md5&lt;/code&gt;, &lt;code&gt;sha1&lt;/code&gt;, &lt;code&gt;sha256&lt;/code&gt;, and &lt;code&gt;sha512&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52496825e602d46c2484208661a0dbf58d19c31d" translate="yes" xml:space="preserve">
          <source>The type of hash that the has function should use. Valid values include: md5, sha1, sha256, and sha512.</source>
          <target state="translated">哈希函数应该使用的哈希类型。有效值包括:md5、sha1、sha256和sha512。</target>
        </trans-unit>
        <trans-unit id="eb1ba693e91aeced7bfd7d3c4973add619d0c630" translate="yes" xml:space="preserve">
          <source>The update is prepared and available</source>
          <target state="translated">编写并提供最新资料</target>
        </trans-unit>
        <trans-unit id="61a9637f0952375cb9aed04469dd726cfd952673" translate="yes" xml:space="preserve">
          <source>The updated &lt;a href=&quot;manifest&quot;&gt;manifest&lt;/a&gt; (JSON)</source>
          <target state="translated">更新的&lt;a href=&quot;manifest&quot;&gt;清单&lt;/a&gt;（JSON）</target>
        </trans-unit>
        <trans-unit id="b7f04ddab5440093506974af2f71afb5c69d6443" translate="yes" xml:space="preserve">
          <source>The usage of these properties is highly discouraged since we are planning to remove them from the context. They are still listed here for documentation purposes.</source>
          <target state="translated">由于我们正计划从上下文中删除这些属性,因此非常不鼓励使用这些属性。在此仍将它们列在这里,以备记录之用。</target>
        </trans-unit>
        <trans-unit id="09a01ba6fc5ac28730420b58f620f492ea97a0a5" translate="yes" xml:space="preserve">
          <source>The usage specification for the library use will be as follows:</source>
          <target state="translated">库使用的使用规范如下。</target>
        </trans-unit>
        <trans-unit id="ad8f6ee6214c162258ff694b7015ecaf7841b5c9" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;System.import&lt;/code&gt; in webpack &lt;a href=&quot;https://github.com/webpack/webpack/issues/2163&quot;&gt;did not fit the proposed spec&lt;/a&gt;, so it was deprecated in webpack &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v2.1.0-beta.28&quot;&gt;2.1.0-beta.28&lt;/a&gt; in favor of &lt;code&gt;import()&lt;/code&gt;.</source>
          <target state="translated">在webpack中使用 &lt;code&gt;System.import&lt;/code&gt; &lt;a href=&quot;https://github.com/webpack/webpack/issues/2163&quot;&gt;不符合建议的规范&lt;/a&gt;，因此在webpack &lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v2.1.0-beta.28&quot;&gt;2.1.0-beta.28&lt;/a&gt;中已弃用它，转而使用 &lt;code&gt;import()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29aed52fbed5a1ee08cf94c8c33cc34833f0cd7d" translate="yes" xml:space="preserve">
          <source>The use of IIFEs led to tools like Make, Gulp, Grunt, Broccoli or Brunch. These tools are known as task runners, and they concatenate all your project files together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ce4cf602e81313a6d20c96af3f2f1a73a256a9" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;&quot;single&quot;&lt;/code&gt; instead creates a runtime file to be shared for all generated chunks. This setting is an alias for:</source>
          <target state="translated">相反，值 &lt;code&gt;&quot;single&quot;&lt;/code&gt; 创建一个运行时文件，以供所有生成的块共享。此设置是以下项的别名：</target>
        </trans-unit>
        <trans-unit id="790b8c06e5a192fd1f0e912883db250944958c91" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;'single'&lt;/code&gt; instead creates a runtime file to be shared for all generated chunks. This setting is an alias for:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0781638151e5add1c7a964dc64eef876b353008e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;BUILT_AT&lt;/code&gt; would be the time at which the &lt;code&gt;'sample.txt'&lt;/code&gt; was last updated in the file system, e.g. &lt;code&gt;1597953013291&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1229e71274c5a0848ada24997f99c0e90c13985" translate="yes" xml:space="preserve">
          <source>The value of the option is prefixed to every URL created by the runtime or loaders. Because of this &lt;strong&gt;the value of this option ends with &lt;code&gt;/&lt;/code&gt;&lt;/strong&gt; in most cases.</source>
          <target state="translated">该选项的值以运行时或加载程序创建的每个URL为前缀。因此，在大多数情况下&lt;strong&gt;，此选项的值以 &lt;code&gt;/&lt;/code&gt; &lt;/strong&gt;&lt;strong&gt;结尾&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="89761bd1af99839698fc977f7b95894b8d804bab" translate="yes" xml:space="preserve">
          <source>The values will be inlined into the code allowing a minification pass to remove the redundant conditional.</source>
          <target state="translated">这些值将被内嵌到代码中,允许通过最小化来删除多余的条件。</target>
        </trans-unit>
        <trans-unit id="a9aa12557f06576dffeddc570ca96e258d06e4f9" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;MyLibrary&lt;/code&gt; will be bound with the return value of your entry file, if the resulting output is included as a script tag in an HTML page.</source>
          <target state="translated">如果结果输出作为脚本标记包含在HTML页面中，则变量 &lt;code&gt;MyLibrary&lt;/code&gt; 将与条目文件的返回值绑定。</target>
        </trans-unit>
        <trans-unit id="adc4f01ea35788d18caa049991ad53d743ab4a33" translate="yes" xml:space="preserve">
          <source>The way this is accomplished is the &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; package.json property.</source>
          <target state="translated">完成方法是 &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; package.json属性。</target>
        </trans-unit>
        <trans-unit id="cc0f8180a2809a16c731d6f278b809d648c76948" translate="yes" xml:space="preserve">
          <source>The webcomponent polyfills must be added in a specific order. If you do not delay loading the main bundle with your components, you will see the following exceptions in the browser console:</source>
          <target state="translated">Web组件的polyfills必须按照特定的顺序添加。如果您没有延迟加载带有组件的主捆绑包,您将在浏览器控制台中看到以下异常。</target>
        </trans-unit>
        <trans-unit id="891b65ff2555253127d610f04559b1a2a11cfb73" translate="yes" xml:space="preserve">
          <source>The webpack 2 release came with built-in support for ES2015 modules (alias &lt;em&gt;harmony modules&lt;/em&gt;) as well as unused module export detection. The new webpack 4 release expands on this capability with a way to provide hints to the compiler via the &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt;&lt;code&gt;package.json&lt;/code&gt; property to denote which files in your project are &quot;pure&quot; and therefore safe to prune if unused.</source>
          <target state="translated">webpack 2版本附带对ES2015模块（别名&lt;em&gt;和声模块&lt;/em&gt;）的内置支持以及未使用的模块导出检测。新的webpack 4版本在此功能上进行了扩展，并通过 &lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt; &lt;code&gt;package.json&lt;/code&gt; 属性向编译器提供了提示，以指示项目中的哪些文件是&amp;ldquo;纯&amp;rdquo;的，因此如果不使用它们可以安全地进行修剪。</target>
        </trans-unit>
        <trans-unit id="478a5519b2320811d6017390c8de571fe8e886eb" translate="yes" xml:space="preserve">
          <source>The webpack &lt;code&gt;target&lt;/code&gt; property is not to be confused with the &lt;code&gt;output.libraryTarget&lt;/code&gt; property. For more information see &lt;a href=&quot;output&quot;&gt;our guide&lt;/a&gt; on the &lt;code&gt;output&lt;/code&gt; property.</source>
          <target state="translated">不要将webpack &lt;code&gt;target&lt;/code&gt; 属性与 &lt;code&gt;output.libraryTarget&lt;/code&gt; 属性混淆。有关更多信息，请参见有关 &lt;code&gt;output&lt;/code&gt; 属性的&lt;a href=&quot;output&quot;&gt;指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8eed51fad4553755fee39d9ff56da10a140db934" translate="yes" xml:space="preserve">
          <source>The webpack command line &lt;a href=&quot;../api/cli#environment-options&quot;&gt;environment option&lt;/a&gt;&lt;code&gt;--env&lt;/code&gt; allows you to pass in as many environment variables as you like. Environment variables will be made accessible in your &lt;code&gt;webpack.config.js&lt;/code&gt;. For example, &lt;code&gt;--env production&lt;/code&gt; or &lt;code&gt;--env NODE_ENV=local&lt;/code&gt; (&lt;code&gt;NODE_ENV&lt;/code&gt; is conventionally used to define the environment type, see &lt;a href=&quot;https://dzone.com/articles/what-you-should-know-about-node-env&quot;&gt;here&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d0c64e1b2084b3dd8a7172e708b0db5df6c2ff" translate="yes" xml:space="preserve">
          <source>The webpack command line &lt;a href=&quot;../api/cli#environment-options&quot;&gt;environment option&lt;/a&gt;&lt;code&gt;--env&lt;/code&gt; allows you to pass in as many environment variables as you like. Environment variables will be made accessible in your &lt;code&gt;webpack.config.js&lt;/code&gt;. For example, &lt;code&gt;--env.production&lt;/code&gt; or &lt;code&gt;--env.NODE_ENV=local&lt;/code&gt; (&lt;code&gt;NODE_ENV&lt;/code&gt; is conventionally used to define the environment type, see &lt;a href=&quot;https://dzone.com/articles/what-you-should-know-about-node-env&quot;&gt;here&lt;/a&gt;.)</source>
          <target state="translated">webpack命令行&lt;a href=&quot;../api/cli#environment-options&quot;&gt;环境选项&lt;/a&gt; &lt;code&gt;--env&lt;/code&gt; 允许您传入任意多个环境变量。您可以在 &lt;code&gt;webpack.config.js&lt;/code&gt; 中访问环境变量。例如，-- &lt;code&gt;--env.production&lt;/code&gt; 或 &lt;code&gt;--env.NODE_ENV=local&lt;/code&gt; （通常使用 &lt;code&gt;NODE_ENV&lt;/code&gt; 定义环境类型，请参见&lt;a href=&quot;https://dzone.com/articles/what-you-should-know-about-node-env&quot;&gt;此处&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="2fd569f3866762654c84dc07b32b03a8679ee57a" translate="yes" xml:space="preserve">
          <source>The webpack repository contains an &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/source-map&quot;&gt;example showing the effect of all &lt;code&gt;devtool&lt;/code&gt; variants&lt;/a&gt;. Those examples will likely help you to understand the differences.</source>
          <target state="translated">webpack存储库包含一个&lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/source-map&quot;&gt;示例，显示所有 &lt;code&gt;devtool&lt;/code&gt; 变体的效果&lt;/a&gt;。这些示例可能会帮助您理解差异。</target>
        </trans-unit>
        <trans-unit id="2124200555434f2d7def0b1a661c16c179c98b22" translate="yes" xml:space="preserve">
          <source>The webpack-dev-server also takes a hint from &lt;code&gt;publicPath&lt;/code&gt;, using it to determine where to serve the output files from.</source>
          <target state="translated">webpack-dev-server还从 &lt;code&gt;publicPath&lt;/code&gt; 中获取提示，使用它来确定从何处提供输出文件。</target>
        </trans-unit>
        <trans-unit id="a1a810a24b9f17b1d07f0266bc2e5374f6b81734" translate="yes" xml:space="preserve">
          <source>The worker file can import dependencies just like any other file:</source>
          <target state="translated">工人文件可以像其他文件一样导入依赖关系。</target>
        </trans-unit>
        <trans-unit id="f318d1321d0bcb60d6c6c01420fcb068660bff69" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;import&lt;/code&gt; the target file somewhere in your app:</source>
          <target state="translated">然后 &lt;code&gt;import&lt;/code&gt; 目标文件导入应用程序中的某个位置：</target>
        </trans-unit>
        <trans-unit id="09595a03296cb3c16fa26d3351525c0c0ce44925" translate="yes" xml:space="preserve">
          <source>Then add the loader and the plugin to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a1f0c3e9f53d1794b531be56e8b463d1ffeef7" translate="yes" xml:space="preserve">
          <source>Then add the loader to the desired &lt;code&gt;import&lt;/code&gt; statement or &lt;code&gt;require&lt;/code&gt; calls. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f38ddf8489e854be4dc0f70af5f6fa83090c8f" translate="yes" xml:space="preserve">
          <source>Then add the loader to the desired &lt;code&gt;require&lt;/code&gt; calls. For example:</source>
          <target state="translated">然后将加载程序添加到所需的 &lt;code&gt;require&lt;/code&gt; 调用中。例如：</target>
        </trans-unit>
        <trans-unit id="ffad5e3e9f9bce8ff26817bbf8bcb40fe6825333" translate="yes" xml:space="preserve">
          <source>Then add the loader to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</source>
          <target state="translated">然后将加载程序添加到您的 &lt;code&gt;webpack&lt;/code&gt; 配置中。例如：</target>
        </trans-unit>
        <trans-unit id="8ea0023f11d6d17c7ac2dae0c06423102bd8bdcb" translate="yes" xml:space="preserve">
          <source>Then add the loader to your Webpack configuration. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecc72b143ba414bace5339e99ab892cad6a01ae" translate="yes" xml:space="preserve">
          <source>Then add the plugin to your &lt;code&gt;webpack&lt;/code&gt; config. For example:</source>
          <target state="translated">然后将插件添加到您的 &lt;code&gt;webpack&lt;/code&gt; 配置中。例如：</target>
        </trans-unit>
        <trans-unit id="0b2c9085fe12a59ddcd2718f3bb1bb0dfc95a710" translate="yes" xml:space="preserve">
          <source>Then add the plugin to your &lt;code&gt;webpack&lt;/code&gt; configuration. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa553c5c8715ed65e20b9514b424640be97e4c70" translate="yes" xml:space="preserve">
          <source>Then import that config using the keyword you're looking for in the regexp:</source>
          <target state="translated">然后使用你在regexp中寻找的关键字导入该配置。</target>
        </trans-unit>
        <trans-unit id="c8f64d12495baa2edb4cc73d230c9c5b8f381f64" translate="yes" xml:space="preserve">
          <source>Then import that configuration using the keyword you're looking for in the regexp:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2125d4922a805933e12a6b7b007a9414ad8b65" translate="yes" xml:space="preserve">
          <source>Then in any of our source code:</source>
          <target state="translated">然后在我们的任何一个源码中。</target>
        </trans-unit>
        <trans-unit id="eba20bf51e1fac8e7c59f5ae2aa0c0f1ac3c67fd" translate="yes" xml:space="preserve">
          <source>Then invoke the loader through a require like so:</source>
          <target state="translated">然后通过require这样的方式调用加载器。</target>
        </trans-unit>
        <trans-unit id="d73eb206650f19435ae7b09b1dd4c91b4d7875da" translate="yes" xml:space="preserve">
          <source>Then modify your &lt;code&gt;webpack.config.js&lt;/code&gt;:</source>
          <target state="translated">然后修改您的 &lt;code&gt;webpack.config.js&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8ece6c64eaee4ab7ee3f8b124192a78d7721667b" translate="yes" xml:space="preserve">
          <source>Then register a configuration and load the task:</source>
          <target state="translated">然后注册一个配置并加载任务。</target>
        </trans-unit>
        <trans-unit id="1079055dbdfefa1ebd4ed5f99bb4f3a3ab94f6aa" translate="yes" xml:space="preserve">
          <source>Then require the webpack module in your Node.js script:</source>
          <target state="translated">然后在你的Node.js脚本中要求使用webpack模块。</target>
        </trans-unit>
        <trans-unit id="59ed0740687cc965bad0e350a9024363567dd315" translate="yes" xml:space="preserve">
          <source>Then set the environment variable &lt;code&gt;process.env.TS_NODE_PROJECT&lt;/code&gt; provided by &lt;code&gt;tsconfig-path&lt;/code&gt; like so:</source>
          <target state="translated">然后设置 &lt;code&gt;tsconfig-path&lt;/code&gt; 提供的环境变量 &lt;code&gt;process.env.TS_NODE_PROJECT&lt;/code&gt; ，如下所示：</target>
        </trans-unit>
        <trans-unit id="8a9898e443fcd095f3f8aadd44457f429c751689" translate="yes" xml:space="preserve">
          <source>Then set the environment variable &lt;code&gt;process.env.TS_NODE_PROJECT&lt;/code&gt; provided by &lt;code&gt;tsconfig-paths&lt;/code&gt; like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf2753baac23274b2f50819a0b259179670e04c" translate="yes" xml:space="preserve">
          <source>Then the build output will also display the error (Similar to &lt;code&gt;this.emitError&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d06c116838f1f06f475188bff07edbe869d71d5" translate="yes" xml:space="preserve">
          <source>Then use &lt;code&gt;this.answer&lt;/code&gt; to get its value in the loader:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188304fa613a9305300549e92dfb0591f625001b" translate="yes" xml:space="preserve">
          <source>Then use it in code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667f02d92bdbdede5b7c2dd5cadd7691d23cc47e" translate="yes" xml:space="preserve">
          <source>Then you can easily disable the AMD path by writing</source>
          <target state="translated">然后你可以通过写下</target>
        </trans-unit>
        <trans-unit id="7ab49abdc1733cccc9bfac6c1720ae703f04d3a7" translate="yes" xml:space="preserve">
          <source>Then you can inject the &lt;code&gt;jquery&lt;/code&gt; value into the module by configuring the &lt;code&gt;imports-loader&lt;/code&gt; using two approaches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51ce7f29090f5b48fe3eae8cd4bcd7660d2697a" translate="yes" xml:space="preserve">
          <source>Then you can use the &lt;code&gt;expose-loader&lt;/code&gt; using two approaches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da73ede351abacaec57b8883eebc3e85b7c8c032" translate="yes" xml:space="preserve">
          <source>There are a couple of different options available in webpack that help you automatically compile your code whenever it changes:</source>
          <target state="translated">在webpack中,有几个不同的选项可以帮助你在代码变化时自动编译。</target>
        </trans-unit>
        <trans-unit id="98fc5926f0ed61dca265bd1d5a8cfdd128aec8ab" translate="yes" xml:space="preserve">
          <source>There are a few other tools that can help when dealing with legacy modules.</source>
          <target state="translated">在处理遗留模块时,还有一些其他的工具可以提供帮助。</target>
        </trans-unit>
        <trans-unit id="0a1d4e9ccad0c8085ac2c42a3a84ab4c7625d32e" translate="yes" xml:space="preserve">
          <source>There are a few use cases in real applications where this feature becomes especially neat. Essentially, every file emitted to your &lt;code&gt;output.path&lt;/code&gt; directory will be referenced from the &lt;code&gt;output.publicPath&lt;/code&gt; location. This includes child chunks (created via &lt;a href=&quot;code-splitting&quot;&gt;code splitting&lt;/a&gt;) and any other assets (e.g. images, fonts, etc.) that are a part of your dependency graph.</source>
          <target state="translated">在实际应用中，有一些用例使此功能变得特别简洁。本质上，将在 &lt;code&gt;output.publicPath&lt;/code&gt; 位置引用发射到 &lt;code&gt;output.path&lt;/code&gt; 目录的每个文件。这包括子块（通过&lt;a href=&quot;code-splitting&quot;&gt;代码拆分&lt;/a&gt;创建）和依赖图的一部分的任何其他资产（例如图像，字体等）。</target>
        </trans-unit>
        <trans-unit id="f59b5b432af60faa3acb5fbb371c18c640f63351" translate="yes" xml:space="preserve">
          <source>There are a lot of &lt;a href=&quot;../configuration/devtool&quot;&gt;different options&lt;/a&gt; available when it comes to source maps. Be sure to check them out so you can configure them to your needs.</source>
          <target state="translated">关于源地图，有很多&lt;a href=&quot;../configuration/devtool&quot;&gt;不同的选项&lt;/a&gt;可用。确保将它们签出，以便您可以根据需要进行配置。</target>
        </trans-unit>
        <trans-unit id="8d407574a6dd2574ff77db703ce9dc21ace6991e" translate="yes" xml:space="preserve">
          <source>There are different export formats available:</source>
          <target state="translated">有不同的导出格式可供选择。</target>
        </trans-unit>
        <trans-unit id="2ec1856436537a88e242c66fae83ad8d15cb9bb3" translate="yes" xml:space="preserve">
          <source>There are many modules that check for a &lt;code&gt;define&lt;/code&gt; function before using CommonJS. Since webpack is capable of both, they default to AMD in this case, which can be a problem if the implementation is quirky.</source>
          <target state="translated">在使用CommonJS之前，有许多模块会检查 &lt;code&gt;define&lt;/code&gt; 函数。由于webpack能够同时支持这两种功能，因此在这种情况下，它们默认为AMD，如果实现古怪，则可能会出现问题。</target>
        </trans-unit>
        <trans-unit id="231f8d33886d63700143f71de278ecc37e1e9ea7" translate="yes" xml:space="preserve">
          <source>There are many other loaders and examples out in the community to make HMR interact smoothly with a variety of frameworks and libraries...</source>
          <target state="translated">社区里还有很多其他的加载器和例子,可以让HMR与各种框架和库顺利交互。</target>
        </trans-unit>
        <trans-unit id="53aa2c97152f93fa32cbf84d5d7317fbd59e3f34" translate="yes" xml:space="preserve">
          <source>There are many plugins that webpack provides out of the box! Check out the &lt;a href=&quot;https://webpack.js.org/plugins&quot;&gt;list of plugins&lt;/a&gt;.</source>
          <target state="translated">webpack提供了许多开箱即用的插件！查看&lt;a href=&quot;https://webpack.js.org/plugins&quot;&gt;插件列表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="71e77a34d84d086ac72c127ae4906c48c99dd408" translate="yes" xml:space="preserve">
          <source>There are multiple optimizations in production mode regarding dead branches:</source>
          <target state="translated">在生产模式下,关于死支的优化有多种。</target>
        </trans-unit>
        <trans-unit id="3bcc2fea8cf939a9d3651476df04dc1a6ee79e59" translate="yes" xml:space="preserve">
          <source>There are problems with managing JavaScript projects this way:</source>
          <target state="translated">这样管理JavaScript项目是有问题的。</target>
        </trans-unit>
        <trans-unit id="8d8a5e694fb4dd9cf39f7fab90a3bcd585a74cb9" translate="yes" xml:space="preserve">
          <source>There are some cases in which using ES modules is beneficial, like in the case of &lt;a href=&quot;../plugins/module-concatenation-plugin&quot;&gt;module concatenation&lt;/a&gt; and &lt;a href=&quot;../guides/tree-shaking&quot;&gt;tree shaking&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4993d4d2cc5cb72c5891a9d1ab5d8f7272cf5966" translate="yes" xml:space="preserve">
          <source>There are some issues with Source Maps in Chrome. &lt;a href=&quot;https://github.com/webpack/webpack/issues/3165&quot;&gt;We need your help!&lt;/a&gt;.</source>
          <target state="translated">Chrome中的源地图存在一些问题。&lt;a href=&quot;https://github.com/webpack/webpack/issues/3165&quot;&gt;我们需要您的帮助！&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9295a056060a1cd9d98ae0dd581e17215a4f5384" translate="yes" xml:space="preserve">
          <source>There are some presets available to use as a shortcut. Use them like this:</source>
          <target state="translated">有一些预设可以作为快捷方式使用。像这样使用它们。</target>
        </trans-unit>
        <trans-unit id="635b1a30cc14512dd700d2c6b33056a04cc5290a" translate="yes" xml:space="preserve">
          <source>There are three general approaches to code splitting available:</source>
          <target state="translated">现有的代码拆分方法一般有三种。</target>
        </trans-unit>
        <trans-unit id="267e07e43a45d9a1ca7399cfda987a9aee4304fd" translate="yes" xml:space="preserve">
          <source>There are three types of built-in resolvers available on the &lt;code&gt;compiler&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;compiler&lt;/code&gt; 类上提供了三种类型的内置解析器：</target>
        </trans-unit>
        <trans-unit id="4f92300c3888d24aa7e5e015926b4dda7365ed5a" translate="yes" xml:space="preserve">
          <source>There are three ways to use loaders in your application:</source>
          <target state="translated">在应用程序中使用加载器有三种方法。</target>
        </trans-unit>
        <trans-unit id="cfbf2ca72bd8b5e52cf781d5d1d0ed6763357e5f" translate="yes" xml:space="preserve">
          <source>There are two input values for the conditions:</source>
          <target state="translated">条件有两个输入值。</target>
        </trans-unit>
        <trans-unit id="3c7bd6cb5a385da0b04381463b8a65bb5f007ab0" translate="yes" xml:space="preserve">
          <source>There are two output values of a Rule:</source>
          <target state="translated">一个规则有两个输出值。</target>
        </trans-unit>
        <trans-unit id="421884df0658635b32d095b666151cd8fdaeb897" translate="yes" xml:space="preserve">
          <source>There are two phases that all loaders enter one after the other:</source>
          <target state="translated">所有装载机都会相继进入两个阶段。</target>
        </trans-unit>
        <trans-unit id="b6af33372ea92fb3a1592ac062e55d75a6290f0e" translate="yes" xml:space="preserve">
          <source>There are two possibilities to extract a style sheet from the bundle:</source>
          <target state="translated">从捆绑包中提取样式表有两种可能。</target>
        </trans-unit>
        <trans-unit id="b2d870d1394aaba2ab5f8a4c5504447f9a976509" translate="yes" xml:space="preserve">
          <source>There are two solutions to this issue:</source>
          <target state="translated">这个问题有两种解决办法。</target>
        </trans-unit>
        <trans-unit id="5887025a3ed16f628b946b1010aa383ff70a6420" translate="yes" xml:space="preserve">
          <source>There are two way to add dependencies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab0314c79cc74488806140e45e7d806b8fb6d8c" translate="yes" xml:space="preserve">
          <source>There are two ways to run JavaScript in a browser. First, include a script for each functionality; this solution is hard to scale because loading too many scripts can cause a network bottleneck. The second option is to use a big &lt;code&gt;.js&lt;/code&gt; file containing all your project code, but this leads to problems in scope, size, readability and maintainability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9347f0cc0834919ebc20e81c6b93cbb9b7aeb89b" translate="yes" xml:space="preserve">
          <source>There are two ways to work with &lt;code&gt;nonce&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5634a53b77237f4e15313722897fff9e4771845" translate="yes" xml:space="preserve">
          <source>There are two workarounds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087002361fdbdb981291d1d8ab5e2c39508ac8de" translate="yes" xml:space="preserve">
          <source>There are various resources where you can learn how to write a scaffold, you can start by reading &lt;a href=&quot;https://webpack.js.org/contribute/writing-a-scaffold/&quot;&gt;Writing a Scaffold&lt;/a&gt; tutorial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f079b98b93fb7f704da117338a35992b2e29f7" translate="yes" xml:space="preserve">
          <source>There has been a &lt;a href=&quot;https://github.com/nodejs/node/issues/19769&quot;&gt;performance regression&lt;/a&gt; in the latest stable versions of Node.js and its ES2015 &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; implementations. A fix has been merged in master, but a release has yet to be made. In the meantime, to get the most out of incremental build speeds, try to stick with version 8.9.x (problem exists between 8.9.10 - 9.11.1). webpack has moved to using those ES2015 data structures liberally, and it will improve the initial build times as well.</source>
          <target state="translated">最新稳定版本的Node.js及其ES2015 &lt;code&gt;Map&lt;/code&gt; 和 &lt;code&gt;Set&lt;/code&gt; 实现存在&lt;a href=&quot;https://github.com/nodejs/node/issues/19769&quot;&gt;性能&lt;/a&gt;下降。修复程序已合并到master中，但尚未发布。同时，为了最大程度地利用增量构建速度，请尝试使用8.9.x版本（8.9.10-9.11.1之间存在问题）。webpack已开始自由使用这些ES2015数据结构，并且还将缩短初始构建时间。</target>
        </trans-unit>
        <trans-unit id="d9d05322318799384d1e0b0c5b64e4a53b00f44d" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;https://github.com/TypeStrong/ts-loader/tree/master/examples/fast-incremental-builds&quot;&gt;full example&lt;/a&gt; on the ts-loader github repository</source>
          <target state="translated">ts-loader github存储库上有一个&lt;a href=&quot;https://github.com/TypeStrong/ts-loader/tree/master/examples/fast-incremental-builds&quot;&gt;完整的示例&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24f6afef7bfd23746f67918b835f6fc6565a3d0e" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;https://github.com/TypeStrong/ts-loader/tree/master/examples/fork-ts-checker-webpack-plugin&quot;&gt;full example&lt;/a&gt; on the &lt;code&gt;ts-loader&lt;/code&gt; GitHub repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028fda8bd113b7126322aeb6aa11e8851c9e9ab8" translate="yes" xml:space="preserve">
          <source>There is a known problem with Less and &lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS modules&lt;/a&gt; regarding relative file paths in &lt;code&gt;url(...)&lt;/code&gt; statements. &lt;a href=&quot;https://github.com/webpack-contrib/less-loader/issues/109#issuecomment-253797335&quot;&gt;See this issue for an explanation&lt;/a&gt;.</source>
          <target state="translated">Less和&lt;a href=&quot;https://github.com/css-modules/css-modules&quot;&gt;CSS模块存在&lt;/a&gt;有关 &lt;code&gt;url(...)&lt;/code&gt; 语句中相对文件路径的已知问题。&lt;a href=&quot;https://github.com/webpack-contrib/less-loader/issues/109#issuecomment-253797335&quot;&gt;请参阅此问题以获取解释&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="272aa1d3353918deab85d3eb9bbe747c9dc3ae29" translate="yes" xml:space="preserve">
          <source>There is a slight difference between the &lt;code&gt;sass&lt;/code&gt; (&lt;code&gt;dart-sass&lt;/code&gt;) and &lt;code&gt;node-sass&lt;/code&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f98e90c6aa491e1ad9072a05a6ec97f5153bcc4" translate="yes" xml:space="preserve">
          <source>There is also an &lt;code&gt;extract&lt;/code&gt; function on the instance. You should use this if you have more than one instance of &lt;code&gt;ExtractTextPlugin&lt;/code&gt;.</source>
          <target state="translated">实例上还有一个 &lt;code&gt;extract&lt;/code&gt; 功能。如果您有多个 &lt;code&gt;ExtractTextPlugin&lt;/code&gt; 实例，则应使用此方法。</target>
        </trans-unit>
        <trans-unit id="aca6f0f8988a8ba1fdf3cdcb454b3a2847afa5c5" translate="yes" xml:space="preserve">
          <source>There is also an additional category &quot;inlined loader&quot; which are loaders applied inline of the import/require.</source>
          <target state="translated">还有一个额外的类别 &quot;内联加载器&quot;,这是应用于导入/需求的内联加载器。</target>
        </trans-unit>
        <trans-unit id="63dc4b8122508bfde5c2b3cd6c0dbba7d8b69700" translate="yes" xml:space="preserve">
          <source>There is currently exactly one option: &lt;code&gt;publicPath&lt;/code&gt;. If you are using a relative &lt;code&gt;publicPath&lt;/code&gt; in webpack's &lt;a href=&quot;../configuration/output#output-publicpath&quot;&gt;output options&lt;/a&gt; and extracting to a file with the &lt;code&gt;file-loader&lt;/code&gt;, you might need this to account for the location of your extracted file.</source>
          <target state="translated">当前只有一种选择： &lt;code&gt;publicPath&lt;/code&gt; 。如果要在webpack的&lt;a href=&quot;../configuration/output#output-publicpath&quot;&gt;输出选项&lt;/a&gt;中使用相对的 &lt;code&gt;publicPath&lt;/code&gt; 并使用 &lt;code&gt;file-loader&lt;/code&gt; 提取到文件中，则可能需要这样做来说明提取文件的位置。</target>
        </trans-unit>
        <trans-unit id="ed255eb1347137d75a802ce92f40bff602d6e7bf" translate="yes" xml:space="preserve">
          <source>There is currently exactly one option: &lt;code&gt;publicPath&lt;/code&gt;. If you are using a relative &lt;code&gt;publicPath&lt;/code&gt; in webpack's &lt;a href=&quot;../configuration/output#outputpublicpath&quot;&gt;output options&lt;/a&gt; and extracting to a file with the &lt;code&gt;file-loader&lt;/code&gt;, you might need this to account for the location of your extracted file. &lt;code&gt;publicPath&lt;/code&gt; may be defined as a string or a function that accepts current &lt;a href=&quot;../api/loaders#the-loader-context&quot;&gt;loader context&lt;/a&gt; as single argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b97843cd1416b0f8c95b15bcea142c8b9e09f01" translate="yes" xml:space="preserve">
          <source>There is no need to change it.</source>
          <target state="translated">没有必要改变它。</target>
        </trans-unit>
        <trans-unit id="46994b7b987e4c2023ce27e138386b6cdc8bd10d" translate="yes" xml:space="preserve">
          <source>There is no option to provide a chunk name.</source>
          <target state="translated">没有提供块名的选项。</target>
        </trans-unit>
        <trans-unit id="b8ed6d814eca2d0cbf9ffca110d21faeddc6d1fe" translate="yes" xml:space="preserve">
          <source>There is one change that you will have to make to your webpack config. Typically, &lt;code&gt;module.exports&lt;/code&gt; points to the configuration object. To use the &lt;code&gt;env&lt;/code&gt; variable, you must convert &lt;code&gt;module.exports&lt;/code&gt; to a function:</source>
          <target state="translated">您必须对Webpack配置进行一项更改。通常， &lt;code&gt;module.exports&lt;/code&gt; 指向配置对象。要使用 &lt;code&gt;env&lt;/code&gt; 变量，必须将 &lt;code&gt;module.exports&lt;/code&gt; 转换为函数：</target>
        </trans-unit>
        <trans-unit id="7e73630e624742075c75e7bc3771463c12b92f4a" translate="yes" xml:space="preserve">
          <source>There might be more than one chunk in a chunk group. For example &lt;a href=&quot;../plugins/split-chunks-plugin&quot;&gt;SplitChunksPlugin&lt;/a&gt; splits a chunk into one or more chunks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70753b8f31e00036ee915afbab312783b5229ca" translate="yes" xml:space="preserve">
          <source>There was a &lt;a href=&quot;https://github.com/nodejs/node/issues/19769&quot;&gt;performance regression&lt;/a&gt; in Node.js versions 8.9.10 - 9.11.1 in the ES2015 &lt;code&gt;Map&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; implementations. webpack uses those data structures liberally, so this regression affects compile times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70ba15e08cd0adf83a907141216d6e816aef455" translate="yes" xml:space="preserve">
          <source>There're many stages to use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebe232476ab6d5eab4f199f18a86b0873c75900" translate="yes" xml:space="preserve">
          <source>There's a lot of ways to load polyfills. For example, to include the &lt;a href=&quot;https://babeljs.io/docs/en/babel-polyfill/&quot;&gt;&lt;code&gt;babel-polyfill&lt;/code&gt;&lt;/a&gt; we might simply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52799d35176455f8706d99232f96e666a9d333a5" translate="yes" xml:space="preserve">
          <source>There's a lot of ways to load polyfills. For example, to include the &lt;a href=&quot;https://babeljs.io/docs/usage/polyfill/&quot;&gt;&lt;code&gt;babel-polyfill&lt;/code&gt;&lt;/a&gt; we might simply:</source>
          <target state="translated">有很多方法可以加载polyfill。例如，要包含&lt;a href=&quot;https://babeljs.io/docs/usage/polyfill/&quot;&gt; &lt;code&gt;babel-polyfill&lt;/code&gt; ,&lt;/a&gt;我们可以简单地：</target>
        </trans-unit>
        <trans-unit id="d94ad9229ad8612f68566c5b1de57d970fdc31a1" translate="yes" xml:space="preserve">
          <source>These allow you to configure the webpack &lt;a href=&quot;../configuration/resolve&quot;&gt;resolver&lt;/a&gt; with aliases and extensions.</source>
          <target state="translated">这些允许您使用别名和扩展名配置webpack &lt;a href=&quot;../configuration/resolve&quot;&gt;解析器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2566a954a0d02deae7eb0cd9561460980b0c8c7b" translate="yes" xml:space="preserve">
          <source>These are the defaults:</source>
          <target state="translated">这些都是默认值。</target>
        </trans-unit>
        <trans-unit id="5c0bd375a87af39a4fcc4d939a8d4bc34eb2793b" translate="yes" xml:space="preserve">
          <source>These are the remaining configuration options supported by webpack.</source>
          <target state="translated">这些是webpack支持的其余配置选项。</target>
        </trans-unit>
        <trans-unit id="febcff69af775a3bfcf0e1a7bf703ea42925d2f8" translate="yes" xml:space="preserve">
          <source>These conditions might also be set additionally:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf6d61b4ad3823e787101eb37a3b1386c459707" translate="yes" xml:space="preserve">
          <source>These options allow webpack to display various &lt;a href=&quot;../configuration/stats&quot;&gt;stats&lt;/a&gt; and style them differently in the console output.</source>
          <target state="translated">这些选项使webpack可以显示各种&lt;a href=&quot;../configuration/stats&quot;&gt;统计信息，&lt;/a&gt;并在控制台输出中为其设置不同的样式。</target>
        </trans-unit>
        <trans-unit id="2e0869eb46e5f04ea6e2b1f165c826b5b338ead2" translate="yes" xml:space="preserve">
          <source>These options allow you to bind &lt;a href=&quot;../configuration/module&quot;&gt;modules&lt;/a&gt; as allowed by webpack</source>
          <target state="translated">这些选项使您可以根据webpack 绑定&lt;a href=&quot;../configuration/module&quot;&gt;模块&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8bf2146c955380560f55188ae1ce7347c666b6e" translate="yes" xml:space="preserve">
          <source>These options allow you to manipulate optimisations for a production build using webpack</source>
          <target state="translated">这些选项允许你使用webpack对生产构建进行优化操作。</target>
        </trans-unit>
        <trans-unit id="1007a4ad40966f93fd98a21ab15571601e8096f3" translate="yes" xml:space="preserve">
          <source>These options allows you to control how webpack notifies you of assets and entry points that exceed a specific file limit. This feature was inspired by the idea of &lt;a href=&quot;https://github.com/webpack/webpack/issues/3216&quot;&gt;webpack Performance Budgets&lt;/a&gt;.</source>
          <target state="translated">这些选项使您可以控制webpack如何通知您超过特定文件限制的资产和入口点。此功能的灵感来自&lt;a href=&quot;https://github.com/webpack/webpack/issues/3216&quot;&gt;webpack性能预算&lt;/a&gt;的想法。</target>
        </trans-unit>
        <trans-unit id="79407cc7a6ab20b192d9e99545132870bb628e82" translate="yes" xml:space="preserve">
          <source>These options are experimental and may be deprecated. As mentioned above, they are typically not necessary and including a &lt;code&gt;new webpack.HotModuleReplacementPlugin()&lt;/code&gt; is enough.</source>
          <target state="translated">这些选项是实验性的，可能不建议使用。如上所述，它们通常不是必需的，包括一个 &lt;code&gt;new webpack.HotModuleReplacementPlugin()&lt;/code&gt; 就足够了。</target>
        </trans-unit>
        <trans-unit id="0103698eace700deceff10513d7687368a419e01" translate="yes" xml:space="preserve">
          <source>These options are typically used in production:</source>
          <target state="translated">这些选项通常在生产中使用。</target>
        </trans-unit>
        <trans-unit id="a79b628e2c2b80d262daaaf5e89a2b05a2721975" translate="yes" xml:space="preserve">
          <source>These options assign the return value of the entry point (e.g. whatever the entry point exported) to a specific object under the name defined by &lt;code&gt;output.library&lt;/code&gt;.</source>
          <target state="translated">这些选项以 &lt;code&gt;output.library&lt;/code&gt; 定义的名称将入口点的返回值（例如，导出的入口点返回）分配给特定对象。</target>
        </trans-unit>
        <trans-unit id="22b90ab37b5ba5275785aeca2a1aaf4ff18b86db" translate="yes" xml:space="preserve">
          <source>These options assign the return value of the entry point (e.g. whatever the entry point exported) to the name provided by &lt;code&gt;output.library&lt;/code&gt; at whatever scope the bundle was included at.</source>
          <target state="translated">这些选项在包含捆绑包的任何范围内，将入口点的返回值（例如，导出的入口点）分配给由 &lt;code&gt;output.library&lt;/code&gt; 提供的名称。</target>
        </trans-unit>
        <trans-unit id="a7d8234fcb48114f73a0a6667f67ab696c51cde7" translate="yes" xml:space="preserve">
          <source>These options change how modules are resolved. webpack provides reasonable defaults, but it is possible to change the resolving in detail. Have a look at &lt;a href=&quot;../concepts/module-resolution&quot;&gt;Module Resolution&lt;/a&gt; for more explanation of how the resolver works.</source>
          <target state="translated">这些选项更改了解决模块的方式。webpack提供了合理的默认值，但可以更改详细解析。请查看&lt;a href=&quot;../concepts/module-resolution&quot;&gt;模块分辨率，&lt;/a&gt;以获取有关解析器工作原理的更多说明。</target>
        </trans-unit>
        <trans-unit id="502f606f9f22867ba7b4202ff6f348f30f97e661" translate="yes" xml:space="preserve">
          <source>These options configure whether to polyfill or mock certain &lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html&quot;&gt;Node.js globals&lt;/a&gt; and modules. This allows code originally written for the Node.js environment to run in other environments like the browser.</source>
          <target state="translated">这些选项配置是要填充还是模拟某些&lt;a href=&quot;https://nodejs.org/docs/latest/api/globals.html&quot;&gt;Node.js全局变量&lt;/a&gt;和模块。这使最初为Node.js环境编写的代码可以在其他环境（例如浏览器）中运行。</target>
        </trans-unit>
        <trans-unit id="5748337f019e8736c4c08ddb1aaa946717932550" translate="yes" xml:space="preserve">
          <source>These options describe the default settings for the context created when a dynamic dependency is encountered.</source>
          <target state="translated">这些选项描述了遇到动态依赖时创建的上下文的默认设置。</target>
        </trans-unit>
        <trans-unit id="fe61c54946c1acdaaac5a110beb75c2abe251578" translate="yes" xml:space="preserve">
          <source>These options determine how the &lt;a href=&quot;../concepts/modules&quot;&gt;different types of modules&lt;/a&gt; within a project will be treated.</source>
          <target state="translated">这些选项确定如何处理项目中&lt;a href=&quot;../concepts/modules&quot;&gt;不同类型的模块&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f6511d8b476377c46f5d4c2dc3654f0c2d86dd1" translate="yes" xml:space="preserve">
          <source>These options makes the build &lt;a href=&quot;../configuration/watch&quot;&gt;watch&lt;/a&gt; for changes in files of the dependency graph and perform the build again.</source>
          <target state="translated">这些选项使构建&lt;a href=&quot;../configuration/watch&quot;&gt;监视&lt;/a&gt;依赖关系图文件中的更改并再次执行构建。</target>
        </trans-unit>
        <trans-unit id="454c972b24168045e7370d16bc161582d1d9c81e" translate="yes" xml:space="preserve">
          <source>These options will result in a bundle that comes with a more complete header to ensure compatibility with various module systems. The &lt;code&gt;output.library&lt;/code&gt; option will take on a different meaning under the following &lt;code&gt;output.libraryTarget&lt;/code&gt; options.</source>
          <target state="translated">这些选项将导致捆绑包带有更完整的标头，以确保与各种模块系统的兼容性。该 &lt;code&gt;output.library&lt;/code&gt; 选项将采取按下列不同的含义 &lt;code&gt;output.libraryTarget&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="106c4e5dbb58168e46b7c5c9dadb7d240d1978c2" translate="yes" xml:space="preserve">
          <source>These pattern are based on the following list of goals/assumptions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9132b5d3865d002e95b734e01e6504c0fcb71cd0" translate="yes" xml:space="preserve">
          <source>These pattern should be used as guide not as strict ruleset. They can be adapted to the individual packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42263b58dfe9ecaa589cb4cac45029b77ee6aa8e" translate="yes" xml:space="preserve">
          <source>These patterns make sense for packages that do not use environment specific APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f26efe3ba05c2068ab581177a9b790860ec5ce5" translate="yes" xml:space="preserve">
          <source>These patterns make sense when a package contains two versions, one for development and one for production. E. g. the development version could include additional code for better error message or additional warnings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08cf024ae104b7e9e8a8a0d48311f520b3337630" translate="yes" xml:space="preserve">
          <source>These properties affect the loaders: &lt;a href=&quot;#rule-loader&quot;&gt;&lt;code&gt;loader&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-options-rule-query&quot;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#rule-use&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">这些属性会影响加载程序：&lt;a href=&quot;#rule-loader&quot;&gt; &lt;code&gt;loader&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#rule-options-rule-query&quot;&gt; &lt;code&gt;options&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#rule-use&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6bd4f2e0f0514e3e6f6ce0621c32a64266577737" translate="yes" xml:space="preserve">
          <source>These properties affect the loaders: &lt;a href=&quot;#ruleloader&quot;&gt;&lt;code&gt;loader&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleoptions--rulequery&quot;&gt;&lt;code&gt;options&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ruleuse&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057e3f7528fc7e3767f893e10ed751260d9bd0d5" translate="yes" xml:space="preserve">
          <source>These rules are evaluated only when the parent Rule condition matches. Each nested rule can contain its own conditions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f724bae2af621776d8e318cd6c0f8e5bb1bcca74" translate="yes" xml:space="preserve">
          <source>These rules are evaluated when the Rule condition matches.</source>
          <target state="translated">当规则条件匹配时,这些规则将被评估。</target>
        </trans-unit>
        <trans-unit id="012c1550965907b42ec6d480f2bfaac07754c8c0" translate="yes" xml:space="preserve">
          <source>These steps would occur:</source>
          <target state="translated">这些步骤会发生。</target>
        </trans-unit>
        <trans-unit id="57d372ece1047febfc2ceef2a98e5fe436082e4a" translate="yes" xml:space="preserve">
          <source>These two parameters can be used together to redirect requests in a more targeted way. The &lt;code&gt;newContentCreateContextMap&lt;/code&gt; allows you to map runtime requests to compile requests in the form of an object:</source>
          <target state="translated">这两个参数可以一起使用，以更有针对性的方式重定向请求。该 &lt;code&gt;newContentCreateContextMap&lt;/code&gt; 允许你映射运行时请求以对象的形式编译请求：</target>
        </trans-unit>
        <trans-unit id="f2417bbde2d2cb573d2628acc3066e13e3600335" translate="yes" xml:space="preserve">
          <source>They also serve the purpose of doing &lt;strong&gt;anything else&lt;/strong&gt; that a &lt;a href=&quot;loaders&quot;&gt;loader&lt;/a&gt; cannot do.</source>
          <target state="translated">它们也是这样做的目的&lt;strong&gt;别的&lt;/strong&gt;，一个&lt;a href=&quot;loaders&quot;&gt;装载机&lt;/a&gt;无法做到的。</target>
        </trans-unit>
        <trans-unit id="3d4c374abb62de5d26d0baf6648ec4bfbb523c24" translate="yes" xml:space="preserve">
          <source>They are not enabled by default because they expose a runtime overhead and increase in bundle size (JS source maps do not). In addition to that relative paths are buggy and you need to use an absolute public path which include the server URL.</source>
          <target state="translated">它们默认不启用,因为它们会暴露出运行时的开销并增加捆绑包的大小(JS源码图不会)。此外,相对路径是有问题的,你需要使用绝对的公共路径,包括服务器的URL。</target>
        </trans-unit>
        <trans-unit id="3be8d3fafa2f11f4d807cab33b9addaeb88267eb" translate="yes" xml:space="preserve">
          <source>They must not point to files outside of the package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6967131bc5ac15c7eedbcd99737fb8d7b6bcbf81" translate="yes" xml:space="preserve">
          <source>Third party addons</source>
          <target state="translated">第三方附加组件</target>
        </trans-unit>
        <trans-unit id="7049c64126a5ef56b2771dde6ee8579603f61c49" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;stats&lt;/code&gt; object exposes the following methods:</source>
          <target state="translated">此 &lt;code&gt;stats&lt;/code&gt; 对象公开以下方法：</target>
        </trans-unit>
        <trans-unit id="c856cbc45e829c1fa37cb33d1001f29567b6f09e" translate="yes" xml:space="preserve">
          <source>This CANNOT be used in an async function.</source>
          <target state="translated">这不能用于异步函数中。</target>
        </trans-unit>
        <trans-unit id="5ede9a9f06a97791ce57472a51006e343016b504" translate="yes" xml:space="preserve">
          <source>This CANNOT be used in an asynchronous function.</source>
          <target state="translated">这个不能用在异步函数中。</target>
        </trans-unit>
        <trans-unit id="d6fcf631173dfe5541552e3cd115c778ac244bb4" translate="yes" xml:space="preserve">
          <source>This Webpack loader inlines SVG as module. If you use Adobe suite or Sketch to export SVGs, you will get auto-generated, unneeded crusts. This loader removes it for you, too.</source>
          <target state="translated">这个Webpack加载器将SVG作为模块内联。如果你使用Adobe套件或Sketch来导出SVG,你会得到自动生成的、不需要的壳。这个加载器也可以帮你去除它。</target>
        </trans-unit>
        <trans-unit id="8c495b2f5e535333feb3a4586360cff0743ba26a" translate="yes" xml:space="preserve">
          <source>This allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bbc872ea1fac7265c2fd82e9ad634bb871e11e4" translate="yes" xml:space="preserve">
          <source>This article will focus on the last of these three parts, the runtime and in particular the manifest.</source>
          <target state="translated">本文将重点介绍这三部分中的最后一部分,即运行时,尤其是清单。</target>
        </trans-unit>
        <trans-unit id="2e37d12719405c39b28ec72e5b413bbc6c7508c4" translate="yes" xml:space="preserve">
          <source>This article will focus on the last of these three parts: the runtime and, in particular, the manifest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21549500935266e3533d6a74c4979f993c4dcf4" translate="yes" xml:space="preserve">
          <source>This becomes a problem when the module is executed in a CommonJS context where &lt;code&gt;this&lt;/code&gt; is equal to &lt;code&gt;module.exports&lt;/code&gt;. In this case you can override &lt;code&gt;this&lt;/code&gt; using the &lt;a href=&quot;../loaders/imports-loader&quot;&gt;&lt;code&gt;imports-loader&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">当在CommonJS上下文中执行模块时， &lt;code&gt;this&lt;/code&gt; 等于 &lt;code&gt;module.exports&lt;/code&gt; ,这将成为一个问题。在这种情况下，您可以使用&lt;a href=&quot;../loaders/imports-loader&quot;&gt; &lt;code&gt;imports-loader&lt;/code&gt; &lt;/a&gt;覆盖 &lt;code&gt;this&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="baec1fec2435cd7acf759f93d8b8be9e1c4855c5" translate="yes" xml:space="preserve">
          <source>This boolean is set to true when this is compiled by webpack.</source>
          <target state="translated">这个布尔值在webpack编译时被设置为true。</target>
        </trans-unit>
        <trans-unit id="f899d8d2c6f2c05b71df74eabdec78e2e7328f65" translate="yes" xml:space="preserve">
          <source>This boots the max number of workers in the pool and loads specified modules into the node.js module cache.</source>
          <target state="translated">这将启动池中的最大工人数量,并将指定的模块加载到node.js模块缓存中。</target>
        </trans-unit>
        <trans-unit id="c0bc6ef24b6b80a9bf49aeb98312bc918d80974b" translate="yes" xml:space="preserve">
          <source>This bundle will not work as expected, or not work at all (in the case of the almond loader) if loaded directly with a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. It will only work through a RequireJS compatible asynchronous module loader through the actual path to that file, so in this case, the &lt;code&gt;output.path&lt;/code&gt; and &lt;code&gt;output.filename&lt;/code&gt; may become important for this particular setup if these are exposed directly on the server.</source>
          <target state="translated">如果直接使用 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 标记加载，则该捆绑包将无法正常工作，或者根本无法工作（对于杏仁加载器）。它只能通过与该文件的实际路径一起使用的RequireJS兼容异步模块加载器来工作，因此在这种情况下，如果直接在服务器上公开它们，则 &lt;code&gt;output.path&lt;/code&gt; 和 &lt;code&gt;output.filename&lt;/code&gt; 对于此特定设置可能很重要。</target>
        </trans-unit>
        <trans-unit id="01881267fbb71bd4e8be6e5ecca674685a340399" translate="yes" xml:space="preserve">
          <source>This can be achieved by using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;mini-css-extract-plugin&lt;/a&gt; to extract the CSS when running in production mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbdfa3acc96c26d61ba3ce08b93f184f93f43db" translate="yes" xml:space="preserve">
          <source>This can be done using the &lt;code&gt;externals&lt;/code&gt; configuration:</source>
          <target state="translated">这可以使用 &lt;code&gt;externals&lt;/code&gt; 配置来完成：</target>
        </trans-unit>
        <trans-unit id="9580dc90d48db5f49636b2d7b71da6ad0884a869" translate="yes" xml:space="preserve">
          <source>This can be especially helpful when implementing some sort of data visualization using a tool like &lt;a href=&quot;https://github.com/d3&quot;&gt;d3&lt;/a&gt;. Instead of making an ajax request and parsing the data at runtime you can load it into your module during the build process so that the parsed data is ready to go as soon as the module hits the browser.</source>
          <target state="translated">当使用&lt;a href=&quot;https://github.com/d3&quot;&gt;d3之&lt;/a&gt;类的工具实施某种形式的数据可视化时，这尤其有用。您可以在构建过程中将其加载到模块中，而不用在运行时发出ajax请求并解析数据，以便在模块到达浏览器后就可以将解析后的数据准备就绪。</target>
        </trans-unit>
        <trans-unit id="7e1bf4407126d15752d86781be25b8cf248f1d37" translate="yes" xml:space="preserve">
          <source>This can be fixed by using Node's &lt;code&gt;--preserve-symlinks&lt;/code&gt; flag which will allow you to develop cross-module, without experiencing inconsistencies when comparing against a normal, non-linked install:</source>
          <target state="translated">可以使用Node的 &lt;code&gt;--preserve-symlinks&lt;/code&gt; 标志修复该问题，该标志将允许您开发跨模块，而与常规的非链接安装相比不会出现不一致的情况：</target>
        </trans-unit>
        <trans-unit id="eb1652868b3142e361ae8e70d6e1db4dfbc49f14" translate="yes" xml:space="preserve">
          <source>This can be useful for allowing different behaviour between builds.</source>
          <target state="translated">这对于允许不同构建之间的不同行为是很有用的。</target>
        </trans-unit>
        <trans-unit id="44f088e20304c744db728f5661a86aa4d21f05b1" translate="yes" xml:space="preserve">
          <source>This can be useful if you want to require all files in a directory or matching a pattern, Example:</source>
          <target state="translated">如果你想要求一个目录中的所有文件或匹配一个模式,这可能是有用的,例如。</target>
        </trans-unit>
        <trans-unit id="8676024628a920433edffaa7ae6a6bad09d7f6a9" translate="yes" xml:space="preserve">
          <source>This can either be a &lt;code&gt;boolean&lt;/code&gt; value or the cache directory path(ex: &lt;code&gt;'./.eslint-loader-cache'&lt;/code&gt;).</source>
          <target state="translated">这可以是 &lt;code&gt;boolean&lt;/code&gt; 值，也可以是缓存目录路径（例如： &lt;code&gt;'./.eslint-loader-cache'&lt;/code&gt; . eslint-loader-cache'）。</target>
        </trans-unit>
        <trans-unit id="00fe4f196235a0bd98a186c356729387256cb42f" translate="yes" xml:space="preserve">
          <source>This can improve performance in some cases. Use it with caution because aliases and &lt;code&gt;@import&lt;/code&gt; at-rules starting with &lt;code&gt;~&lt;/code&gt; will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90feb19f191bf3c2f898593139ee44562c490b72" translate="yes" xml:space="preserve">
          <source>This can improve performance in some cases. Use it with caution because aliases and &lt;code&gt;@import&lt;/code&gt; at-rules starting with &lt;code&gt;~&lt;/code&gt; will not work. You can pass own &lt;code&gt;importer&lt;/code&gt; to solve this (see &lt;a href=&quot;https://github.com/sass/node-sass#importer--v200---experimental&quot;&gt;&lt;code&gt;importer docs&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa95a44f7b56fa270e7540b0c4516d6afc23ae5" translate="yes" xml:space="preserve">
          <source>This concatenation behavior is called &amp;ldquo;scope hoisting.&amp;rdquo;</source>
          <target state="translated">这种串联行为称为&amp;ldquo;吊环&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a1b60edc5c47b09819f1b28410a8fcf699414214" translate="yes" xml:space="preserve">
          <source>This concept may be used to obtain implicit common vendor chunks:</source>
          <target state="translated">这个概念可以用来获得隐含的普通厂商块。</target>
        </trans-unit>
        <trans-unit id="d59c040af16a3e1a5f7645e2762906f183f9fd1b" translate="yes" xml:space="preserve">
          <source>This condition should be used when looking for a javascript file that can be injected as script tag in a HTML page without additional preprocessing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b14c6199ca975479eddf0911297de4ba6c2b77a" translate="yes" xml:space="preserve">
          <source>This configuration can enlarge your initial bundles, it is recommended to use dynamic imports when a module is not immediately needed.</source>
          <target state="translated">这个配置可以扩大你的初始捆绑,建议在不需要模块的时候使用动态导入。</target>
        </trans-unit>
        <trans-unit id="f8178aeab727f5b2ae39ef8a55f0f3db44980db5" translate="yes" xml:space="preserve">
          <source>This configuration object represents the default behavior of the &lt;code&gt;SplitChunksPlugin&lt;/code&gt;.</source>
          <target state="translated">此配置对象表示 &lt;code&gt;SplitChunksPlugin&lt;/code&gt; 的默认行为。</target>
        </trans-unit>
        <trans-unit id="b426c6694d3980dd6d187a7b69ccfdfdc20ed06a" translate="yes" xml:space="preserve">
          <source>This configuration would output a single &lt;code&gt;bundle.js&lt;/code&gt; file into the &lt;code&gt;dist&lt;/code&gt; directory.</source>
          <target state="translated">此配置会将单个 &lt;code&gt;bundle.js&lt;/code&gt; 文件输出到 &lt;code&gt;dist&lt;/code&gt; 目录。</target>
        </trans-unit>
        <trans-unit id="fa12d5e0203ded4efe2f2beb27f665fe78f5300e" translate="yes" xml:space="preserve">
          <source>This document is intended to give a &lt;strong&gt;high-level&lt;/strong&gt; overview of these concepts, while providing links to detailed concept specific use cases.</source>
          <target state="translated">本文档旨在提供这些概念&lt;strong&gt;的高级&lt;/strong&gt;概述，同时提供指向详细概念特定用例的链接。</target>
        </trans-unit>
        <trans-unit id="6f90b031461d4914e663e4293c5ba433153cecd3" translate="yes" xml:space="preserve">
          <source>This document is intended to give a &lt;strong&gt;high-level&lt;/strong&gt; overview of these concepts, while providing links to detailed concept-specific use cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b55640f7b32656e0d1d0d69041cf653588b5957" translate="yes" xml:space="preserve">
          <source>This doesn't result in any change to the CSS itself but exports multiple classnames.</source>
          <target state="translated">这不会导致CSS本身的任何变化,但会导出多个类名。</target>
        </trans-unit>
        <trans-unit id="599f08e0438def7468d189bca38955cb98998e6b" translate="yes" xml:space="preserve">
          <source>This enables local scoped CSS by default. (You can switch it off with &lt;code&gt;:global(...)&lt;/code&gt; or &lt;code&gt;:global&lt;/code&gt; for selectors and/or rules.).</source>
          <target state="translated">默认情况下，这将启用本地范围的CSS。（您可以使用 &lt;code&gt;:global(...)&lt;/code&gt; 或 &lt;code&gt;:global&lt;/code&gt; 来关闭选择器和/或规则。）</target>
        </trans-unit>
        <trans-unit id="3bad9fc6c6d0140a761114db8b4526c2bdc7ed1a" translate="yes" xml:space="preserve">
          <source>This enables you to &lt;code&gt;import './style.css'&lt;/code&gt; into the file that depends on that styling. Now, when that module is run, a &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; tag with the stringified css will be inserted into the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your html file.</source>
          <target state="translated">这使您可以 &lt;code&gt;import './style.css'&lt;/code&gt; 导入依赖于该样式的文件中。现在，当该模块运行时，带有字符串化CSS 的 &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; 标记将插入到html文件的 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="bd65cf352aa69ab40ac2d0a4ed9c1dfdf6de6cea" translate="yes" xml:space="preserve">
          <source>This exposes your library bundle available as a global variable named &lt;code&gt;webpackNumbers&lt;/code&gt; when imported. To make the library compatible with other environments, add &lt;code&gt;libraryTarget&lt;/code&gt; property to the config. This will add the different options about how the library can be exposed.</source>
          <target state="translated">导入时，这 &lt;code&gt;webpackNumbers&lt;/code&gt; 您的库包公开为名为webpackNumbers的全局变量。为了使库与其他环境兼容，请将 &lt;code&gt;libraryTarget&lt;/code&gt; 属性添加到配置中。这将添加有关如何公开库的不同选项。</target>
        </trans-unit>
        <trans-unit id="e4f8fee3199cc793be9ddd412547afaade1fd229" translate="yes" xml:space="preserve">
          <source>This exposes your library bundle available as a global variable named &lt;code&gt;webpackNumbers&lt;/code&gt; when imported. To make the library compatible with other environments, add &lt;code&gt;libraryTarget&lt;/code&gt; property to the config. This will add various options about how the library can be exposed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b052c558cba2236dd392c04e60b71c7d78db1ae" translate="yes" xml:space="preserve">
          <source>This expression will trigger the hook:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ef084d40688e7b5d5d8996554e04e0ca6cfd1c" translate="yes" xml:space="preserve">
          <source>This feature is great for productivity. All we need to do is update our &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; configuration, and use webpack's built in HMR plugin. We'll also remove the entry point for &lt;code&gt;print.js&lt;/code&gt; as it will now be consumed by the &lt;code&gt;index.js&lt;/code&gt; module.</source>
          <target state="translated">此功能非常适合提高生产率。我们需要做的就是更新我们的&lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;配置，并使用webpack的内置HMR插件。我们还将删除 &lt;code&gt;print.js&lt;/code&gt; 的入口点，因为它现在将由 &lt;code&gt;index.js&lt;/code&gt; 模块使用。</target>
        </trans-unit>
        <trans-unit id="c92b3bdf66deb3e19c2225ce04f1e41433492b7e" translate="yes" xml:space="preserve">
          <source>This feature is great for productivity. All we need to do is update our &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; configuration, and use webpack's built-in HMR plugin. We'll also remove the entry point for &lt;code&gt;print.js&lt;/code&gt; as it will now be consumed by the &lt;code&gt;index.js&lt;/code&gt; module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="404dddeb1ceb60699ded778054d7f5ef9fc9fa12" translate="yes" xml:space="preserve">
          <source>This feature is provided by webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js&quot;&gt;&lt;code&gt;NodeStuffPlugin&lt;/code&gt;&lt;/a&gt; plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ad76420d55e87371fad64492f2963aea24c4eb" translate="yes" xml:space="preserve">
          <source>This feature is provided by webpack's internal &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js&quot;&gt;&lt;code&gt;NodeStuffPlugin&lt;/code&gt;&lt;/a&gt; plugin. If the target is &quot;web&quot; (default) or &quot;webworker&quot;, the &lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/node/NodeSourcePlugin.js&quot;&gt;&lt;code&gt;NodeSourcePlugin&lt;/code&gt;&lt;/a&gt; plugin is also activated.</source>
          <target state="translated">此功能由webpack的内部&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/NodeStuffPlugin.js&quot;&gt; &lt;code&gt;NodeStuffPlugin&lt;/code&gt; &lt;/a&gt;插件提供。如果目标是&amp;ldquo; web&amp;rdquo;（默认）或&amp;ldquo; webworker&amp;rdquo;，则&lt;a href=&quot;https://github.com/webpack/webpack/blob/master/lib/node/NodeSourcePlugin.js&quot;&gt; &lt;code&gt;NodeSourcePlugin&lt;/code&gt; &lt;/a&gt;插件也会被激活。</target>
        </trans-unit>
        <trans-unit id="b704dfb503dd69b6a849b0e22a57a5d32765f8b9" translate="yes" xml:space="preserve">
          <source>This feature relies on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; internally. If you use &lt;code&gt;import()&lt;/code&gt; with older browsers, remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">此功能在内部依赖于&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。如果您在较旧的浏览器中使用 &lt;code&gt;import()&lt;/code&gt; ，请记住使用诸如&lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt;或&lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise- &lt;/a&gt;polyfill之类的polyfill填充 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a46c09f986aa73dc78c4b47b58c94cabba924769" translate="yes" xml:space="preserve">
          <source>This feature relies on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; internally. If you use &lt;code&gt;require.ensure&lt;/code&gt; with older browsers, remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">此功能在内部依赖于&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。如果您在较旧的浏览器上使用 &lt;code&gt;require.ensure&lt;/code&gt; ，请记住使用诸如&lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt;或&lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise- &lt;/a&gt;polyfill之类的polyfill填充 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1784fa4ee081d52871ddd8875156431960fca6ae" translate="yes" xml:space="preserve">
          <source>This feature relies on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; internally. If you use AMD with older browsers (e.g. Internet Explorer 11), remember to shim &lt;code&gt;Promise&lt;/code&gt; using a polyfill such as &lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;es6-promise&lt;/a&gt; or &lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise-polyfill&lt;/a&gt;.</source>
          <target state="translated">此功能在内部依赖于&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。如果您将AMD与较旧的浏览器（例如Internet Explorer 11）一起使用，请记住使用&lt;a href=&quot;https://github.com/stefanpenner/es6-promise&quot;&gt;polyfill（&lt;/a&gt;例如es6-promise或&lt;a href=&quot;https://github.com/taylorhakes/promise-polyfill&quot;&gt;promise- &lt;/a&gt;polyfill）填充 &lt;code&gt;Promise&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f10d727220baca2938b1a342e008a2d35949f1c" translate="yes" xml:space="preserve">
          <source>This follows the same rules as those specified for file resolution. But the &lt;a href=&quot;../configuration/resolve#resolveloader&quot;&gt;&lt;code&gt;resolveLoader&lt;/code&gt;&lt;/a&gt; configuration option can be used to have separate resolution rules for loaders.</source>
          <target state="translated">这遵循与为文件解析指定的规则相同的规则。但是&lt;a href=&quot;../configuration/resolve#resolveloader&quot;&gt; &lt;code&gt;resolveLoader&lt;/code&gt; &lt;/a&gt;配置选项可用于为加载程序设置单独的解析规则。</target>
        </trans-unit>
        <trans-unit id="f32268d39ceea09d3d6306eb50cca10ac3efd123" translate="yes" xml:space="preserve">
          <source>This guide contains some useful tips for improving build/compilation performance.</source>
          <target state="translated">本指南包含一些提高构建/编译性能的有用提示。</target>
        </trans-unit>
        <trans-unit id="6e74ee278b6483e63e246262d4b0558794583866" translate="yes" xml:space="preserve">
          <source>This guide extends on code examples found in the &lt;a href=&quot;asset-management&quot;&gt;&lt;code&gt;Asset Management&lt;/code&gt;&lt;/a&gt; guide.</source>
          <target state="translated">本指南扩展了《&lt;a href=&quot;asset-management&quot;&gt; &lt;code&gt;Asset Management&lt;/code&gt; &lt;/a&gt;指南中的代码示例。</target>
        </trans-unit>
        <trans-unit id="5b251b76cf265164795401de844aec084670ed8b" translate="yes" xml:space="preserve">
          <source>This guide extends on code examples found in the &lt;a href=&quot;development&quot;&gt;Development&lt;/a&gt; guide.</source>
          <target state="translated">本指南扩展了《&lt;a href=&quot;development&quot;&gt;开发&lt;/a&gt;指南》中的代码示例。</target>
        </trans-unit>
        <trans-unit id="e695885af13bd16faad41148a2a86747da0469ea" translate="yes" xml:space="preserve">
          <source>This guide extends on code examples found in the &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt; guide.</source>
          <target state="translated">本指南扩展了&amp;ldquo; &lt;a href=&quot;output-management&quot;&gt;输出管理&amp;rdquo;&lt;/a&gt;指南中的代码示例。</target>
        </trans-unit>
        <trans-unit id="8177ec7567235499917c71e39fc37b8bec828620" translate="yes" xml:space="preserve">
          <source>This guide extends the example provided in &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt;. Please make sure you are at least familiar with the example provided there and the &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt; chapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e586717908f30e2eb3dae17b0c51e6aa57c70149" translate="yes" xml:space="preserve">
          <source>This guide extends the examples provided in &lt;a href=&quot;getting-started&quot;&gt;Getting Started&lt;/a&gt; and &lt;a href=&quot;output-management&quot;&gt;Output Management&lt;/a&gt;. Please make sure you are at least familiar with the examples provided in them.</source>
          <target state="translated">本指南扩展了&amp;ldquo; &lt;a href=&quot;getting-started&quot;&gt;入门&lt;/a&gt;和&lt;a href=&quot;output-management&quot;&gt;输出管理&amp;rdquo;中&lt;/a&gt;提供的示例。请确保您至少熟悉其中提供的示例。</target>
        </trans-unit>
        <trans-unit id="b10dfffc8f2cd75e2c9419cc6320a9b42af80acc" translate="yes" xml:space="preserve">
          <source>This guide focuses on the configuration needed to ensure files produced by webpack compilation can remain cached unless their content has changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73feb60d4ff54e1bed9cecb930b3d4cb4688b9bd" translate="yes" xml:space="preserve">
          <source>This guide focuses on the configuration needed to ensure files produced by webpack compilation can remain cached unless their contents has changed.</source>
          <target state="translated">本指南主要介绍了确保webpack编译产生的文件能够保持缓存所需的配置,除非它们的内容发生了变化。</target>
        </trans-unit>
        <trans-unit id="28ff626f461f33c15358e30a2a67dd11c6916c34" translate="yes" xml:space="preserve">
          <source>This guide goes through the various methods used to install webpack.</source>
          <target state="translated">本指南将介绍安装webpack的各种方法。</target>
        </trans-unit>
        <trans-unit id="04ab105d2ba31796ba8058507be23bb87f5478d3" translate="yes" xml:space="preserve">
          <source>This guide is a small follow-up to &lt;a href=&quot;code-splitting&quot;&gt;Code Splitting&lt;/a&gt;. If you have not yet read through that guide, please do so now.</source>
          <target state="translated">本指南是&lt;a href=&quot;code-splitting&quot;&gt;&amp;ldquo;代码拆分&amp;rdquo;的&lt;/a&gt;一个小后续。如果您尚未阅读该指南，请立即阅读。</target>
        </trans-unit>
        <trans-unit id="9515b6e28f5a9f26a4966a59ee8efe94d078667b" translate="yes" xml:space="preserve">
          <source>This guide stems from the &lt;a href=&quot;getting-started&quot;&gt;&lt;em&gt;Getting Started&lt;/em&gt;&lt;/a&gt; guide.</source>
          <target state="translated">本指南源于《&lt;a href=&quot;getting-started&quot;&gt;&lt;em&gt;入门&lt;/em&gt;&lt;/a&gt;指南》。</target>
        </trans-unit>
        <trans-unit id="6a5c8a77e65080c1a87ac1b102bd2352b9720587" translate="yes" xml:space="preserve">
          <source>This hook allows you to do a one more additional pass of the build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54dabb78d9165f59094c77b77fbfd1102990aee5" translate="yes" xml:space="preserve">
          <source>This hook can be used to add/modify the compilation parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db5a0744cb411b222f5ddf37115a92427f093c9" translate="yes" xml:space="preserve">
          <source>This indicates which chunks will be selected for optimization. If a string is provided, possible values are &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;async&lt;/code&gt;, and &lt;code&gt;initial&lt;/code&gt;. Providing &lt;code&gt;all&lt;/code&gt; can be particularly powerful because it means that chunks can be shared even between async and non-async chunks.</source>
          <target state="translated">这表明将选择哪些块进行优化。如果提供了字符串，则可能的值为 &lt;code&gt;all&lt;/code&gt; ， &lt;code&gt;async&lt;/code&gt; 和 &lt;code&gt;initial&lt;/code&gt; 。提供 &lt;code&gt;all&lt;/code&gt; 功能特别强大，因为这意味着即使在异步和非异步块之间也可以共享块。</target>
        </trans-unit>
        <trans-unit id="6f1794885ce10056eb9bb0faddc4d3cad727c4ef" translate="yes" xml:space="preserve">
          <source>This indicates which chunks will be selected for optimization. When a string is provided, valid values are &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;async&lt;/code&gt;, and &lt;code&gt;initial&lt;/code&gt;. Providing &lt;code&gt;all&lt;/code&gt; can be particularly powerful, because it means that chunks can be shared even between async and non-async chunks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df877acd9008859a1bdb1efea3293a6acf64ffc" translate="yes" xml:space="preserve">
          <source>This is &lt;code&gt;false&lt;/code&gt; if the module is currently executing, and &lt;code&gt;true&lt;/code&gt; if the sync execution has finished.</source>
          <target state="translated">如果模块当前正在执行，则为 &lt;code&gt;false&lt;/code&gt; ;如果同步执行已完成，则为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecb3ef0422ffd6e3c5b0a329b020146b6b6f51bb" translate="yes" xml:space="preserve">
          <source>This is &lt;code&gt;true&lt;/code&gt; by default in &lt;code&gt;production&lt;/code&gt; mode.</source>
          <target state="translated">在 &lt;code&gt;production&lt;/code&gt; 模式下，默认情况下是 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df1f3325933036ef23805a4ec9f47646d400ceed" translate="yes" xml:space="preserve">
          <source>This is a great choice when you are looking to quickly setup a webpack configuration for an application or tool with one entry point (i.e., a library). However, there is not much flexibility in extending or scaling your configuration with this syntax.</source>
          <target state="translated">当你想通过一个入口点(例如,一个库)为应用程序或工具快速设置webpack配置时,这是一个很好的选择。然而,使用这种语法来扩展或扩大你的配置,并没有多少灵活性。</target>
        </trans-unit>
        <trans-unit id="c87ce6ad59d4ba0a8d22cf3002d88ef702a80d86" translate="yes" xml:space="preserve">
          <source>This is a list of plugins which are used by webpack internally.</source>
          <target state="translated">这是一个webpack内部使用的插件列表。</target>
        </trans-unit>
        <trans-unit id="cc7419b23a9e92d52227ca5c5b7cee9ef1527623" translate="yes" xml:space="preserve">
          <source>This is an example for a package that has optimizations for production and development usage with runtime detection for &lt;code&gt;process.env&lt;/code&gt; and also ships a CommonJs and ESM version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd6e99edd725757c93ffeb71735a604163063ec" translate="yes" xml:space="preserve">
          <source>This is an example for a package that supports Node.js, browser and electron, has optimizations for production and development usage with runtime detection for &lt;code&gt;process.env&lt;/code&gt; and also ships a CommonJs and ESM version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8886144b094f0f97dada64e907fc12e5eda8ec9e" translate="yes" xml:space="preserve">
          <source>This is an important option when using on-demand-loading or loading external resources like images, files, etc. If an incorrect value is specified you'll receive 404 errors while loading these resources.</source>
          <target state="translated">当使用按需加载或加载外部资源(如图像、文件等)时,这是一个重要的选项。如果指定了一个不正确的值,你将在加载这些资源时收到404错误。</target>
        </trans-unit>
        <trans-unit id="0757868f46be2aa16e1835586e0d7a20832c2a91" translate="yes" xml:space="preserve">
          <source>This is an object where each property is the name of a Node global or module and each value may be one of the following...</source>
          <target state="translated">这是一个对象,其中每个属性都是Node全局或模块的名称,每个值可能是下面的一个...</target>
        </trans-unit>
        <trans-unit id="48cde90b57a464eb3fff794ce73eb3c3ac1fa916" translate="yes" xml:space="preserve">
          <source>This is because webpack includes certain boilerplate, specifically the runtime and manifest, in the entry chunk.</source>
          <target state="translated">这是因为webpack在入口chunk中包含了某些boilerplate,特别是运行时和manifest。</target>
        </trans-unit>
        <trans-unit id="53b087237e060748cf7c076f6a909fb930480aaf" translate="yes" xml:space="preserve">
          <source>This is by far the easiest and most intuitive way to split code. However, it is more manual and has some pitfalls we will go over. Let's take a look at how we might split another module from the main bundle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560b1952bb069ebc7dec6531e687fec09448474f" translate="yes" xml:space="preserve">
          <source>This is by far the easiest, and most intuitive, way to split code. However, it is more manual and has some pitfalls we will go over. Let's take a look at how we might split another module from the main bundle:</source>
          <target state="translated">这是目前最简单,也是最直观的拆分代码的方法。然而,它更多的是手工操作,并且有一些陷阱,我们将一一介绍。让我们来看看如何从主捆绑包中拆分出另一个模块。</target>
        </trans-unit>
        <trans-unit id="ca9966a9a13a33427ba2eee45f8d198dd3978467" translate="yes" xml:space="preserve">
          <source>This is discouraged in webpack 4. Instead, the &lt;a href=&quot;../configuration/optimization#optimizationsplitchunks&quot;&gt;&lt;code&gt;optimization.splitChunks&lt;/code&gt;&lt;/a&gt; option takes care of separating vendors and app modules and creating a separate file. &lt;strong&gt;Do not&lt;/strong&gt; create an entry for vendors or other stuff that is not the starting point of execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e22332e1691cc2177c430d4688ce63cb96fe89c0" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following &lt;code&gt;DefinePlugin&lt;/code&gt; application:</source>
          <target state="translated">这等效于以下 &lt;code&gt;DefinePlugin&lt;/code&gt; 应用程序：</target>
        </trans-unit>
        <trans-unit id="19b0d712c36cad578318f77cf36dd5f57263a1e8" translate="yes" xml:space="preserve">
          <source>This is especially useful when some of your Less variables depend on the environment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b2fe2586ad8a0f46131537b6cfc86b305d7d08" translate="yes" xml:space="preserve">
          <source>This is especially useful when some of your Sass variables depend on the environment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0161a59d14f3b8c460f7f5aa031fcaab9998c8" translate="yes" xml:space="preserve">
          <source>This is especially useful when some of your Stylus variables depend on the environment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a247f4b44e6328f72d37accf666f7af5287fe2f2" translate="yes" xml:space="preserve">
          <source>This is happening because the button's &lt;code&gt;onclick&lt;/code&gt; event handler is still bound to the original &lt;code&gt;printMe&lt;/code&gt; function.</source>
          <target state="translated">发生这种情况是因为按钮的 &lt;code&gt;onclick&lt;/code&gt; 事件处理程序仍绑定到原始的 &lt;code&gt;printMe&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="cfbbab771cd3e0d8e7090c42bd261a535ae96610" translate="yes" xml:space="preserve">
          <source>This is just one example, but there are many others that can easily trip people up. Luckily, there are a lot of loaders out there (some of which are mentioned below) that will make hot module replacement much easier.</source>
          <target state="translated">这只是一个例子,但还有很多其他的例子,很容易让人绊倒。幸运的是,有很多装载机(下面提到的一些装载机)会让热模块的更换变得更加容易。</target>
        </trans-unit>
        <trans-unit id="bcb367cbad1664c6b3ecb131586bd7694252d3ae" translate="yes" xml:space="preserve">
          <source>This is often known as Micro-Frontends, but is not limited to that.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed595ad5f73af435979138b3d3627bf88533699b" translate="yes" xml:space="preserve">
          <source>This is only needed in rare cases for compatibility!</source>
          <target state="translated">只有在极少数情况下才需要这样的兼容性!</target>
        </trans-unit>
        <trans-unit id="8b0007fbd5e6cd4e550680e629295f8a99260ae0" translate="yes" xml:space="preserve">
          <source>This is the entry point your configuration, initialize it inside the constructor of your generator in order for the CLI to work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a04aff2cecd73b8ca74cfcee6fa3f22d2d86581" translate="yes" xml:space="preserve">
          <source>This is useful for third-party modules that rely on global variables like &lt;code&gt;$&lt;/code&gt; or &lt;code&gt;this&lt;/code&gt; being the &lt;code&gt;window&lt;/code&gt; object. The imports loader can add the necessary &lt;code&gt;require('whatever')&lt;/code&gt; calls, so those modules work with webpack.</source>
          <target state="translated">这对于依赖于全局变量（例如 &lt;code&gt;$&lt;/code&gt; 或 &lt;code&gt;this&lt;/code&gt; 是 &lt;code&gt;window&lt;/code&gt; 对象）的第三方模块很有用。导入加载程序可以添加必要的 &lt;code&gt;require('whatever')&lt;/code&gt; 调用，因此这些模块可与webpack一起使用。</target>
        </trans-unit>
        <trans-unit id="5c2df09178c8def03e43ef498bdd896740082e04" translate="yes" xml:space="preserve">
          <source>This is what we aim to change. Once we reach the end of this module we should be able to stop the server, hit refresh and still see our application.</source>
          <target state="translated">这就是我们要改变的。一旦我们到达这个模块的终点,我们应该能够停止服务器,点击刷新,仍然可以看到我们的应用程序。</target>
        </trans-unit>
        <trans-unit id="a59dc7c1a8af0ea046bb3f848c62fef2a133578c" translate="yes" xml:space="preserve">
          <source>This is why webpack exists. It's a tool that lets you bundle your JavaScript applications (supporting both ESM and CommonJS), and it can be extended to support many different assets such as images, fonts and stylesheets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea053504b20d1c076639a62986210dce7e9fa8e" translate="yes" xml:space="preserve">
          <source>This is your scaffold, you add the options that the CLI will transform into a webpack configuration here. You can have many different scaffolds named as you prefer, representing different configurations like &lt;code&gt;dev.config&lt;/code&gt; or &lt;code&gt;prod.config&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b668cc02a4cd081db5c06a436730503d648f4ee3" translate="yes" xml:space="preserve">
          <source>This isn't a problem for most tools, but Node.js is again an exception here. For Node.js we always use the CommonJs version and expose named exports in the ESM with a ESM wrapper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45f7eb5f9affbddb392058c7d7f4abfaa7fad00" translate="yes" xml:space="preserve">
          <source>This leaves any dependent modules unchanged, i.e. the code shown below will still work:</source>
          <target state="translated">这将使任何依赖的模块保持不变,也就是说,下面显示的代码仍然可以工作。</target>
        </trans-unit>
        <trans-unit id="a70c73df8117e18869be65bde0f3fe97bb191d83" translate="yes" xml:space="preserve">
          <source>This leaves any dependent modules unchanged, i.e. the code shown below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a3f41a9605c3c4e04a060a9596421064960a0d" translate="yes" xml:space="preserve">
          <source>This loader [cannot be used] with [CSS Modules] out of the box due to the way &lt;code&gt;css-loader&lt;/code&gt; processes file imports. To make them work properly, either add the css-loader&amp;rsquo;s [&lt;code&gt;importLoaders&lt;/code&gt;] option.</source>
          <target state="translated">由于 &lt;code&gt;css-loader&lt;/code&gt; 处理文件导入的方式，此加载器无法与[CSS模块]一起使用。为了使其正常工作，请添加css-loader的[ &lt;code&gt;importLoaders&lt;/code&gt; ]选项。</target>
        </trans-unit>
        <trans-unit id="5d190b8c7f6d0f3902b044fdeec81f5b5fe3f35d" translate="yes" xml:space="preserve">
          <source>This loader allows use of &lt;a href=&quot;https://github.com/substack/node-browserify/wiki/list-of-transforms&quot;&gt;browserify transforms&lt;/a&gt; via a webpack loader.</source>
          <target state="translated">该加载器允许通过webpack加载器使用browserify &lt;a href=&quot;https://github.com/substack/node-browserify/wiki/list-of-transforms&quot;&gt;转换&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fe9d535f7bc40b833c73bb475459fe6f55acdbac" translate="yes" xml:space="preserve">
          <source>This loader also supports the following loader-specific option:</source>
          <target state="translated">该加载器还支持以下加载器专用选项。</target>
        </trans-unit>
        <trans-unit id="7f1d3b58142cc368ab79e7a3d3404472a3fa8c0c" translate="yes" xml:space="preserve">
          <source>This loader is especially useful when using 3rd-party libraries having their own source maps. If not extracted and processed into the source map of the webpack bundle, browsers may misinterpret source map data. &lt;code&gt;source-map-loader&lt;/code&gt; allows webpack to maintain source map data continuity across libraries so ease of debugging is preserved.</source>
          <target state="translated">当使用具有自己的源映射的第三方库时，此加载器特别有用。如果未提取并处理到webpack捆绑包的源地图中，浏览器可能会误解源地图数据。 &lt;code&gt;source-map-loader&lt;/code&gt; 允许webpack跨库维护源地图数据的连续性，从而保留了调试的便利性。</target>
        </trans-unit>
        <trans-unit id="d7a42ee1ed1780a3d402296f3b86d6e6d37090a0" translate="yes" xml:space="preserve">
          <source>This makes the server only accessible on &lt;code&gt;127.0.0.1&lt;/code&gt;, which is fine because nginx takes care of making it available on your host PC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13ed36167d63c496c0f6f91ea0830c119623ac7" translate="yes" xml:space="preserve">
          <source>This makes the server only accessible on &lt;code&gt;127.0.0.1&lt;/code&gt;, which is fine, because nginx takes care of making it available on your host PC.</source>
          <target state="translated">这使得服务器只能在 &lt;code&gt;127.0.0.1&lt;/code&gt; 上访问，这很好，因为nginx会使其在主机PC上可用。</target>
        </trans-unit>
        <trans-unit id="b8fc2cdf752fdcd706973b9e47dcc84ed0a7d59a" translate="yes" xml:space="preserve">
          <source>This may change in the future when the module system (i. e. webpack) supports loader matching by origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d2ee006876cf0259837350ed2e7e14e3c6e566" translate="yes" xml:space="preserve">
          <source>This may change in the future, when the module system (i. e. webpack) supports loader matching by origin.</source>
          <target state="translated">当模块系统(例如webpack)支持按来源匹配加载器时,这种情况在未来可能会改变。</target>
        </trans-unit>
        <trans-unit id="aa062b6d5cead179ec54169c8e5af773c2ed6f12" translate="yes" xml:space="preserve">
          <source>This may degrade build performance.</source>
          <target state="translated">这可能会降低构建性能。</target>
        </trans-unit>
        <trans-unit id="c215681acf404e7577ad3619555fa95e88e52edf" translate="yes" xml:space="preserve">
          <source>This means dynamic requires are supported but will cause all matching modules to be included in the bundle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33959ca5bc487e790d0b48b89538a6812c28404" translate="yes" xml:space="preserve">
          <source>This means dynamic requires are supported but will cause all possible modules to be included in the bundle.</source>
          <target state="translated">这意味着支持动态需求,但会导致所有可能的模块都包含在捆绑包中。</target>
        </trans-unit>
        <trans-unit id="d283638a7cf787c4d96d0cb34244baab95292b27" translate="yes" xml:space="preserve">
          <source>This means that when we &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt; this will really resolve to the file in the &lt;code&gt;browser&lt;/code&gt; property. The &lt;code&gt;browser&lt;/code&gt; property takes precedence here because it's the first item in &lt;code&gt;mainFields&lt;/code&gt;. Meanwhile, a Node.js application bundled by webpack will resolve by default to the file in the &lt;code&gt;module&lt;/code&gt; field.</source>
          <target state="translated">这意味着当我们 &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt; 这实际上将解析为 &lt;code&gt;browser&lt;/code&gt; 属性中的文件。该 &lt;code&gt;browser&lt;/code&gt; 属性优先位置，因为它是第一项 &lt;code&gt;mainFields&lt;/code&gt; 。同时，默认情况下，webpack捆绑的Node.js应用程序将解析为 &lt;code&gt;module&lt;/code&gt; 字段中的文件。</target>
        </trans-unit>
        <trans-unit id="a5409a29ade1ec4c17b7eaa00e7d86e1af4d2f79" translate="yes" xml:space="preserve">
          <source>This means that your library expects a dependency named &lt;code&gt;lodash&lt;/code&gt; to be available in the consumer's environment.</source>
          <target state="translated">这意味着您的库期望在使用者的环境中有一个名为 &lt;code&gt;lodash&lt;/code&gt; 的依赖项。</target>
        </trans-unit>
        <trans-unit id="b223fb461d993b0f22bdb24ced3b1fa69b9e092f" translate="yes" xml:space="preserve">
          <source>This method works but can have limitations or drawbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f777fcccade65135ca746231b68bbfa503391afc" translate="yes" xml:space="preserve">
          <source>This might result in a large chunk containing all external packages. It is recommended to only include your core frameworks and utilities and dynamically load the rest of the dependencies.</source>
          <target state="translated">这可能会导致一个包含所有外部包的大块。建议只包含你的核心框架和实用程序,并动态加载其余的依赖关系。</target>
        </trans-unit>
        <trans-unit id="d526e1e403decb2661013c42f1e3e331b6d3a771" translate="yes" xml:space="preserve">
          <source>This module adds stuff from Node.js that is not available in non Node.js environments.</source>
          <target state="translated">这个模块从Node.js中添加了一些在非Node.js环境中不可用的东西。</target>
        </trans-unit>
        <trans-unit id="6ab0268836547089f2dcf783f9be200724a579dd" translate="yes" xml:space="preserve">
          <source>This module can support non-standard JavaScript file formats when a compatible compiler is registered via the &lt;code&gt;require&lt;/code&gt; option. If the option is defined, &lt;code&gt;config-loader&lt;/code&gt; will attempt to require the specified module(s) before the target config is found and loaded.</source>
          <target state="translated">通过 &lt;code&gt;require&lt;/code&gt; 选项注册兼容的编译器时，此模块可以支持非标准JavaScript文件格式。如果定义了该选项，则 &lt;code&gt;config-loader&lt;/code&gt; 将在找到并加载目标config之前尝试要求指定的模块。</target>
        </trans-unit>
        <trans-unit id="f45c003c14dd79dda08fe5ed461cf012badc0fdf" translate="yes" xml:space="preserve">
          <source>This module is exposed as &lt;code&gt;webpack.Compiler&lt;/code&gt; and can be used directly. See &lt;a href=&quot;https://github.com/pksjce/webpack-internal-examples/tree/master/compiler-example&quot;&gt;this example&lt;/a&gt; for more information.</source>
          <target state="translated">该模块作为 &lt;code&gt;webpack.Compiler&lt;/code&gt; 公开，可以直接使用。有关更多信息，请参&lt;a href=&quot;https://github.com/pksjce/webpack-internal-examples/tree/master/compiler-example&quot;&gt;见此示例&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6cba27f11c42ca7da5420b0f4d9f2641d3844e73" translate="yes" xml:space="preserve">
          <source>This module requires a minimum of Node v6.9.0 and Webpack v4.0.0.</source>
          <target state="translated">这个模块至少需要Node v6.9.0和Webpack v4.0.0。</target>
        </trans-unit>
        <trans-unit id="b3a35d9e538001d0d628d180d914a08e8f5c0837" translate="yes" xml:space="preserve">
          <source>This module requires a minimum of Node v6.9.0 and webpack v4.0.0.</source>
          <target state="translated">该模块至少需要Node v6.9.0和webpack v4.0.0。</target>
        </trans-unit>
        <trans-unit id="f881a340456fac03baeb3dd035c116286f43e93a" translate="yes" xml:space="preserve">
          <source>This module requires a minimum of Node v6.9.0 and works with Webpack v3 and Webpack v4.</source>
          <target state="translated">该模块至少需要Node v6.9.0,并可与Webpack v3和Webpack v4一起使用。</target>
        </trans-unit>
        <trans-unit id="c109cc9d524df5e8821464e562a600dcd9557732" translate="yes" xml:space="preserve">
          <source>This module supports extending webpack configuration files with &lt;a href=&quot;https://eslint.org/docs/user-guide/configuring#extending-configuration-files&quot;&gt;ESLint-style&lt;/a&gt;&lt;code&gt;extends&lt;/code&gt; functionality. This feature allows users to create a &quot;base&quot; config and in essence, &quot;inherit&quot; from that base config in a separate config. A bare-bones example:</source>
          <target state="translated">该模块支持具有&lt;a href=&quot;https://eslint.org/docs/user-guide/configuring#extending-configuration-files&quot;&gt;ESLint样式&lt;/a&gt; &lt;code&gt;extends&lt;/code&gt; 功能的扩展Webpack配置文件。此功能允许用户创建一个&amp;ldquo;基本&amp;rdquo;配置，实质上是从一个单独的配置中&amp;ldquo;继承&amp;rdquo;该基本配置。一个简单的例子：</target>
        </trans-unit>
        <trans-unit id="0dba5974c2e26fd236ce4621f1e4d99eac196b30" translate="yes" xml:space="preserve">
          <source>This module utilizes &lt;a href=&quot;https://github.com/davidtheclark/cosmiconfig&quot;&gt;&lt;code&gt;cosmiconfig&lt;/code&gt;&lt;/a&gt; which supports declaring a webpack configuration in a number of different file formats including; &lt;code&gt;.webpackrc&lt;/code&gt;, &lt;code&gt;webpack.config.js&lt;/code&gt;, and a &lt;code&gt;webpack&lt;/code&gt; property in a &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">该模块利用了&lt;a href=&quot;https://github.com/davidtheclark/cosmiconfig&quot;&gt; &lt;code&gt;cosmiconfig&lt;/code&gt; &lt;/a&gt;，它支持以多种不同的文件格式声明Webpack配置，包括： &lt;code&gt;.webpackrc&lt;/code&gt; ， &lt;code&gt;webpack.config.js&lt;/code&gt; 和 &lt;code&gt;package.json&lt;/code&gt; 中的 &lt;code&gt;webpack&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="005b9fb11eab47f37d7ae0f0642a6320e8d309df" translate="yes" xml:space="preserve">
          <source>This needs to be changed if multiple webpack runtimes (from different compilation) are used on the same webpage.</source>
          <target state="translated">如果在同一个网页上使用了多个webpack运行时(来自不同的编译版本),则需要更改此功能。</target>
        </trans-unit>
        <trans-unit id="c74a7f7edee3d3ffa14340a6baee7f2198b5a2fb" translate="yes" xml:space="preserve">
          <source>This object has the same format as a regular webpack &lt;a href=&quot;https://webpack.js.org/configuration/&quot;&gt;configuration&lt;/a&gt;. Declare the properties that you want to scaffold here, e.g. &lt;code&gt;entry&lt;/code&gt;, &lt;code&gt;output&lt;/code&gt; and &lt;code&gt;context&lt;/code&gt;. You can initialize this inside a yeoman method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fade0e5971b52e5136488a11c9a7a0a582ad3d8b" translate="yes" xml:space="preserve">
          <source>This object is passed straight to Node.js HTTPS module, so see the &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS documentation&lt;/a&gt; for more information.</source>
          <target state="translated">该对象直接传递给Node.js HTTPS模块，因此请参阅&lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS文档&lt;/a&gt;以获取更多信息。</target>
        </trans-unit>
        <trans-unit id="685cd065e94f550102a632c29e095a4cbc23cdf9" translate="yes" xml:space="preserve">
          <source>This only works when using &lt;a href=&quot;#devservercontentbase&quot;&gt;&lt;code&gt;devServer.contentBase&lt;/code&gt;&lt;/a&gt; as a &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4aaf96997e7b0c90746fd6c3567a4f7aa2c8ac4" translate="yes" xml:space="preserve">
          <source>This only works when using &lt;code&gt;contentBase&lt;/code&gt; as a &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">这仅在将 &lt;code&gt;contentBase&lt;/code&gt; 用作 &lt;code&gt;string&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec5d2041cc832230955cf30ad539432dc4dd1fba" translate="yes" xml:space="preserve">
          <source>This option allows loading asynchronous chunks with a custom link type, such as &amp;lt;link type=&quot;text/css&quot; ...&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196e634a22e9d51b4ed72f6eb5f594f4af592b70" translate="yes" xml:space="preserve">
          <source>This option allows loading asynchronous chunks with a custom script type, such as &lt;code&gt;&amp;lt;script type=&quot;module&quot; ...&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67294efb05edc94de65dd07b8ff77f19fd6be87" translate="yes" xml:space="preserve">
          <source>This option allows us either to choose the current &lt;code&gt;devServer&lt;/code&gt; transport mode for client/server individually or to provide custom client/server implementation. This allows to specify how browser or other client communicates with the &lt;code&gt;devServer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79925c99f93c2ec0087ae0ffced8f00ba5d1c9ed" translate="yes" xml:space="preserve">
          <source>This option allows you to set the key your module looks for to a truthy value. As it happens, the AMD support in webpack ignores the defined name anyways.</source>
          <target state="translated">这个选项可以让你把你的模块寻找的key设置成一个truthhy值。碰巧的是,webpack中的AMD支持会忽略任何定义的名称。</target>
        </trans-unit>
        <trans-unit id="a6afd747886b88535614a5e26c65d541e9551535" translate="yes" xml:space="preserve">
          <source>This option allows you to whitelist services that are allowed to access the dev server.</source>
          <target state="translated">此选项允许您将允许访问开发服务器的服务列入白名单。</target>
        </trans-unit>
        <trans-unit id="91fe393093d77872ac5f2cd6643dfc72c4819f36" translate="yes" xml:space="preserve">
          <source>This option broadcasts the server via &lt;a href=&quot;http://www.zeroconf.org/&quot;&gt;ZeroConf&lt;/a&gt; networking on start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ebe300973eaab68c9516ed46654327e6a950da" translate="yes" xml:space="preserve">
          <source>This option broadcasts the server via ZeroConf networking on start</source>
          <target state="translated">该选项在启动时通过ZeroConf网络广播服务器。</target>
        </trans-unit>
        <trans-unit id="4922f9a5470048d8fffcf5c1830182dbd96b1c5a" translate="yes" xml:space="preserve">
          <source>This option can also be set globally in &lt;code&gt;splitChunks.filename&lt;/code&gt;, but this isn't recommended and will likely lead to an error if &lt;a href=&quot;#splitchunkschunks&quot;&gt;&lt;code&gt;splitChunks.chunks&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;'initial'&lt;/code&gt;. Avoid setting it globally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea6a426438d914faf36d6b6546285906e19b322a" translate="yes" xml:space="preserve">
          <source>This option can be used to apply loaders to the dependencies of a specific module or set of modules.</source>
          <target state="translated">这个选项可以用来将加载器应用到特定模块或模块集的依赖关系中。</target>
        </trans-unit>
        <trans-unit id="6c5b0689cf315f1fa55cc15e5495f2b28e91801e" translate="yes" xml:space="preserve">
          <source>This option closes the server when stdin ends.</source>
          <target state="translated">这个选项在stdin结束时关闭服务器。</target>
        </trans-unit>
        <trans-unit id="e40c156196854884ee36846872a829a5ea05f019" translate="yes" xml:space="preserve">
          <source>This option controls if and how source maps are generated.</source>
          <target state="translated">该选项控制是否以及如何生成源地图。</target>
        </trans-unit>
        <trans-unit id="25a84ffd7582fe4058e843c749db628513a0ab92" translate="yes" xml:space="preserve">
          <source>This option determines the modules namespace used with the &lt;a href=&quot;#output-devtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;. When not specified, it will default to the value of: &lt;a href=&quot;#output-library&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt;. It's used to prevent source file path collisions in source maps when loading multiple libraries built with webpack.</source>
          <target state="translated">此选项确定与&lt;a href=&quot;#output-devtoolmodulefilenametemplate&quot;&gt; &lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt; 一起&lt;/a&gt;使用的模块名称空间。如果未指定，则默认值为：&lt;a href=&quot;#output-library&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt;。当加载多个使用webpack构建的库时，它用于防止源映射中的源文件路径冲突。</target>
        </trans-unit>
        <trans-unit id="b798351fdd70c6c1546c48e9fb9352acce8a0d9a" translate="yes" xml:space="preserve">
          <source>This option determines the modules namespace used with the &lt;a href=&quot;#outputdevtoolmodulefilenametemplate&quot;&gt;&lt;code&gt;output.devtoolModuleFilenameTemplate&lt;/code&gt;&lt;/a&gt;. When not specified, it will default to the value of: &lt;a href=&quot;#outputlibrary&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt;. It's used to prevent source file path collisions in sourcemaps when loading multiple libraries built with webpack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e871c5ed20a0fe73dfb6f10eee67818e5bb0feee" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output CSS file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9253fc678dd3f1afddea078670e8fc30e7bbc955" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output CSS file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b05266442b54b0e6cddc19a8b33de324b93c206" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output bundle. The bundle is written to the directory specified by the &lt;a href=&quot;#output-path&quot;&gt;&lt;code&gt;output.path&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">此选项确定每个输出包的名称。捆绑软件将写入到&lt;a href=&quot;#output-path&quot;&gt; &lt;code&gt;output.path&lt;/code&gt; &lt;/a&gt;选项指定的目录中。</target>
        </trans-unit>
        <trans-unit id="60241ba64e943004863c8b69a47d6d28d8ba2161" translate="yes" xml:space="preserve">
          <source>This option determines the name of each output bundle. The bundle is written to the directory specified by the &lt;a href=&quot;#outputpath&quot;&gt;&lt;code&gt;output.path&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ed67201ea950fac924dc321c8d6d5c052e39fd" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-entry chunk files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abc716259255844aa6458bc599fc9537f73a262" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-entry chunk files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="134a18d88afd40fa1eb2c26f1e4104950925ab2d" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-entry chunk files. See &lt;a href=&quot;#output-filename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; option for details on the possible values.</source>
          <target state="translated">此选项确定非输入块文件的名称。有关可能的值的详细信息，请参见&lt;a href=&quot;#output-filename&quot;&gt; &lt;code&gt;output.filename&lt;/code&gt; &lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit id="82c7b9bcf9864d6fe60a43dee4779cc300d255d6" translate="yes" xml:space="preserve">
          <source>This option determines the name of non-initial chunk files. See &lt;a href=&quot;#outputfilename&quot;&gt;&lt;code&gt;output.filename&lt;/code&gt;&lt;/a&gt; option for details on the possible values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e4e471712f459632f09e0c39bf27d36a6dbdb0" translate="yes" xml:space="preserve">
          <source>This option does not have any effect when using the Node.js API.</source>
          <target state="translated">当使用Node.js API时,这个选项没有任何效果。</target>
        </trans-unit>
        <trans-unit id="5458bee731a283c4d30a78fb34bb6abbb6b5e834" translate="yes" xml:space="preserve">
          <source>This option has no effect when used with &lt;code&gt;quiet&lt;/code&gt; or &lt;code&gt;noInfo&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;quiet&lt;/code&gt; 或 &lt;code&gt;noInfo&lt;/code&gt; 一起使用时，此选项无效。</target>
        </trans-unit>
        <trans-unit id="7889b2624541bc39b33a2e993ca202b95b6a36e3" translate="yes" xml:space="preserve">
          <source>This option is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;a href=&quot;#devserverbefore&quot;&gt;&lt;code&gt;devServer.before&lt;/code&gt;&lt;/a&gt; and will be removed in v3.0.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfcabd6c992e600f41a1aa251ee7329a7ba5fb6" translate="yes" xml:space="preserve">
          <source>This option is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;code&gt;Rule.use&lt;/code&gt;.</source>
          <target state="translated">此选项&lt;strong&gt;不建议使用&lt;/strong&gt;有利于 &lt;code&gt;Rule.use&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b2615cafe4c11a02e3c6b641329caeb2b73812b" translate="yes" xml:space="preserve">
          <source>This option is &lt;strong&gt;deprecated&lt;/strong&gt; in favor of &lt;code&gt;before&lt;/code&gt; and will be removed in v3.0.0.</source>
          <target state="translated">此选项&lt;strong&gt;弃用&lt;/strong&gt;赞成 &lt;code&gt;before&lt;/code&gt; ，将在V3.0.0中删除。</target>
        </trans-unit>
        <trans-unit id="eeeee94e8478cf5a5c7d08179d6f3b8a21bf53e1" translate="yes" xml:space="preserve">
          <source>This option is only activated (via &lt;code&gt;NodeSourcePlugin&lt;/code&gt;) when the target is unspecified, &quot;web&quot; or &quot;webworker&quot;.</source>
          <target state="translated">仅当未指定目标&amp;ldquo; web&amp;rdquo;或&amp;ldquo; webworker&amp;rdquo;时，才激活此选项（通过 &lt;code&gt;NodeSourcePlugin&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a526b9466ed989feda820cb55f9f69f26039a4f1" translate="yes" xml:space="preserve">
          <source>This option is only used when &lt;a href=&quot;devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt; uses a SourceMap option which writes an output file.</source>
          <target state="translated">仅当&lt;a href=&quot;devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt;使用写输出文件的SourceMap选项时，才使用此选项。</target>
        </trans-unit>
        <trans-unit id="9d105f5fd42ba76d220e6270bcb29980c2aad7c5" translate="yes" xml:space="preserve">
          <source>This option is only used when &lt;a href=&quot;devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt; uses an options which requires module names.</source>
          <target state="translated">仅当&lt;a href=&quot;devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt;使用需要模块名称的选项时，才使用此选项。</target>
        </trans-unit>
        <trans-unit id="de31799adc89f7a4cd6058f2c07e2539b194dca6" translate="yes" xml:space="preserve">
          <source>This option is useful when you want to have fine-grained control over how the CommonsChunk algorithm determines where modules should be moved to.</source>
          <target state="translated">当你想精细控制CommonsChunk算法如何决定模块的移动位置时,这个选项很有用。</target>
        </trans-unit>
        <trans-unit id="fc94bd5f6db752fb7c18f0955317532502daaadf" translate="yes" xml:space="preserve">
          <source>This option lets the browser open with your local IP.</source>
          <target state="translated">这个选项可以让浏览器用你的本地IP打开。</target>
        </trans-unit>
        <trans-unit id="28aab3ea772c4e463a58a18eed36c7b2231756dc" translate="yes" xml:space="preserve">
          <source>This option lets you precisely control what bundle information gets displayed. This can be a nice middle ground if you want some bundle information, but not all of it.</source>
          <target state="translated">这个选项可以让你精确地控制显示哪些捆绑信息。如果你想要一些捆绑信息,但不想要全部的信息,这可能是一个不错的中间地带。</target>
        </trans-unit>
        <trans-unit id="7109dd2cd4f2ad4d9088875a13900004670acc13" translate="yes" xml:space="preserve">
          <source>This option lets you reduce the compilations in &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;. By default in &lt;a href=&quot;#devserverlazy-&quot;&gt;lazy mode&lt;/a&gt;, every request results in a new compilation. With &lt;code&gt;filename&lt;/code&gt;, it's possible to only compile when a certain file is requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7179b6103bce281929f60e10386c1b58232fbfd9" translate="yes" xml:space="preserve">
          <source>This option lets you reduce the compilations in &lt;strong&gt;lazy mode&lt;/strong&gt;. By default in &lt;strong&gt;lazy mode&lt;/strong&gt;, every request results in a new compilation. With &lt;code&gt;filename&lt;/code&gt;, it's possible to only compile when a certain file is requested.</source>
          <target state="translated">此选项使您可以在&lt;strong&gt;惰性模式下&lt;/strong&gt;减少编译。缺省情况下，在&lt;strong&gt;惰性模式下&lt;/strong&gt;，每个请求都将导致一个新的编译。使用 &lt;code&gt;filename&lt;/code&gt; ，可以仅在请求特定文件时进行编译。</target>
        </trans-unit>
        <trans-unit id="792f455240a68f9b61e21b9e79e2fc861945d378" translate="yes" xml:space="preserve">
          <source>This option specifies the &lt;strong&gt;public URL&lt;/strong&gt; of the output directory when referenced in a browser. A relative URL is resolved relative to the HTML page (or &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; tag). Server-relative URLs, protocol-relative URLs or absolute URLs are also possible and sometimes required, i. e. when hosting assets on a CDN.</source>
          <target state="translated">该选项指定在浏览器中引用时输出目录的&lt;strong&gt;公共URL&lt;/strong&gt;。相对URL相对于HTML页面（或 &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; 标记）进行解析。相对于服务器的URL，相对于协议的URL或绝对URL也是可能的，有时甚至是必需的，即在CDN上托管资产时。</target>
        </trans-unit>
        <trans-unit id="60acf0ba0bbca59f35e19be67e124a4e268482f8" translate="yes" xml:space="preserve">
          <source>This option will enable &lt;a href=&quot;http://eslint.org/docs/user-guide/command-line-interface#fix&quot;&gt;ESLint autofix feature&lt;/a&gt;.</source>
          <target state="translated">此选项将启用&lt;a href=&quot;http://eslint.org/docs/user-guide/command-line-interface#fix&quot;&gt;ESLint自动修复功能&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e44d33ad69dc261c348171441ef0d4d67723a9af" translate="yes" xml:space="preserve">
          <source>This option will enable caching of the linting results into a file. This is particularly useful in reducing linting time when doing a full build.</source>
          <target state="translated">这个选项可以将linting结果缓存到一个文件中。这对减少完整构建时的偷懒时间特别有用。</target>
        </trans-unit>
        <trans-unit id="b43f40ea06f007473435e0404327c4b4d96e7f5c" translate="yes" xml:space="preserve">
          <source>This package allows transpiling JavaScript files using &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt; and &lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;webpack&lt;/a&gt;.</source>
          <target state="translated">该软件包允许使用&lt;a href=&quot;https://github.com/babel/babel&quot;&gt;Babel&lt;/a&gt;和&lt;a href=&quot;https://github.com/webpack/webpack&quot;&gt;webpack&lt;/a&gt;转换JavaScript文件。</target>
        </trans-unit>
        <trans-unit id="e114be6f0d2032ec10de78d94815095479360859" translate="yes" xml:space="preserve">
          <source>This page describes the options that affect the behavior of webpack-dev-server (short: dev-server).</source>
          <target state="translated">本页描述了影响webpack-dev-server(简称:dev-server)行为的选项。</target>
        </trans-unit>
        <trans-unit id="a824680e81d3e233a63095d5ac7ebc89dee47393" translate="yes" xml:space="preserve">
          <source>This plugin adds specific references to containers as externals and allows to import remote modules from these containers. It also calls the &lt;code&gt;override&lt;/code&gt; API of these containers to provide overrides to them. Local overrides (via &lt;code&gt;__webpack_override__&lt;/code&gt; or &lt;code&gt;override&lt;/code&gt; API when build is also a container) and specified overrides are provided to all referenced containers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fbd038fa70bb58f9637ee789bafc084098c6e1" translate="yes" xml:space="preserve">
          <source>This plugin and it's options can also be invoked via the &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee9d72cff11504900ba3d87265458efdd7aab58" translate="yes" xml:space="preserve">
          <source>This plugin and it's options can also be invoked via the CLI:</source>
          <target state="translated">这个插件和它的选项也可以通过CLI调用。</target>
        </trans-unit>
        <trans-unit id="8d6ec8e843f819d7e74de36d5d13f0736352ecb7" translate="yes" xml:space="preserve">
          <source>This plugin can be used in two different modes, &lt;em&gt;scoped&lt;/em&gt; and &lt;em&gt;mapped&lt;/em&gt;.</source>
          <target state="translated">该插件可以在两种不同的模式下使用：&lt;em&gt;scoped&lt;/em&gt;和&lt;em&gt;mapping&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8a797b2fc195f28c7da8671fb5c79b902eebe34d" translate="yes" xml:space="preserve">
          <source>This plugin combines &lt;code&gt;ContainerPlugin&lt;/code&gt; and &lt;code&gt;ContainerReferencePlugin&lt;/code&gt;. Overrides and overridables are combined into a single list of specified shared modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7140c8d286fb2760850dbfe926da824f55b8f42d" translate="yes" xml:space="preserve">
          <source>This plugin creates an additional container entry with the specified exposed modules. It also uses the &lt;code&gt;OverridablesPlugin&lt;/code&gt; internally and exposes the &lt;code&gt;override&lt;/code&gt; API to consumer of the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda8ea39c72e0e691ebbc3795728b5fc978d18df" translate="yes" xml:space="preserve">
          <source>This plugin creates bundles with translations baked in. So you can serve the translated bundle to your clients.</source>
          <target state="translated">这个插件可以创建带有翻译的捆绑包。所以你可以将翻译好的捆绑包提供给你的客户。</target>
        </trans-unit>
        <trans-unit id="46f3843161330f7496c2a700471ef010db97a960" translate="yes" xml:space="preserve">
          <source>This plugin enables more fine grained control of source map generation. It is also enabled automatically by certain settings of the &lt;a href=&quot;../configuration/devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt; configuration option.</source>
          <target state="translated">这个插件可以更精细地控制源地图的生成。&lt;a href=&quot;../configuration/devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt;配置选项的某些设置也会自动启用它。</target>
        </trans-unit>
        <trans-unit id="308436c86675d805a1b54d3185c57d08f2121250" translate="yes" xml:space="preserve">
          <source>This plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.</source>
          <target state="translated">这个插件将CSS提取成单独的文件。它为每个包含CSS的JS文件创建一个CSS文件。它支持CSS和SourceMaps的按需加载。</target>
        </trans-unit>
        <trans-unit id="52604672e0fee1f1648352992bdf12b764549a3c" translate="yes" xml:space="preserve">
          <source>This plugin is used in a separate webpack config exclusively to create a dll-only-bundle. It creates a &lt;code&gt;manifest.json&lt;/code&gt; file, which is used by the &lt;a href=&quot;dll-plugin#dllreferenceplugin&quot;&gt;&lt;code&gt;DllReferencePlugin&lt;/code&gt;&lt;/a&gt; to map dependencies.</source>
          <target state="translated">此插件仅在单独的webpack配置中用于创建dll-only-bundle。它创建一个 &lt;code&gt;manifest.json&lt;/code&gt; 文件，&lt;a href=&quot;dll-plugin#dllreferenceplugin&quot;&gt; &lt;code&gt;DllReferencePlugin&lt;/code&gt; &lt;/a&gt;使用它来映射依赖关系。</target>
        </trans-unit>
        <trans-unit id="81adc70be0ff9e1f95105beec6a31427593ebda0" translate="yes" xml:space="preserve">
          <source>This plugin is used in a separate webpack configuration exclusively to create a dll-only-bundle. It creates a &lt;code&gt;manifest.json&lt;/code&gt; file, which is used by the &lt;a href=&quot;#dllreferenceplugin&quot;&gt;&lt;code&gt;DllReferencePlugin&lt;/code&gt;&lt;/a&gt; to map dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ab448688001829beed83209692c645fd511719" translate="yes" xml:space="preserve">
          <source>This plugin is used in the primary webpack config, it references the dll-only-bundle(s) to require pre-built dependencies.</source>
          <target state="translated">这个插件用于主webpack配置,它引用dll-only-bundle(s)来要求预先建立的依赖关系。</target>
        </trans-unit>
        <trans-unit id="2a588056406d111134a66418e199500eed93ea9b" translate="yes" xml:space="preserve">
          <source>This plugin makes specific modules &quot;overridable&quot;. A local API (&lt;code&gt;__webpack_override__&lt;/code&gt;) allows to provide overrides.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f11ee21edd3718f762dd02cff0cac34b96334ca" translate="yes" xml:space="preserve">
          <source>This plugin should be used only on &lt;code&gt;production&lt;/code&gt; builds without &lt;code&gt;style-loader&lt;/code&gt; in the loaders chain, especially if you want to have HMR in &lt;code&gt;development&lt;/code&gt;.</source>
          <target state="translated">此插件应仅在 &lt;code&gt;style-loader&lt;/code&gt; 链中没有样式装载器的 &lt;code&gt;production&lt;/code&gt; 版本上使用，尤其是当您要在 &lt;code&gt;development&lt;/code&gt; 使用HMR时。</target>
        </trans-unit>
        <trans-unit id="678af3938c3be10d5d0d4625ea9d01b638693180" translate="yes" xml:space="preserve">
          <source>This plugin should not be used with &lt;code&gt;style-loader&lt;/code&gt; in the loaders chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5cca03718053fc9520367846f9709b01dcb7529" translate="yes" xml:space="preserve">
          <source>This plugin supports the following options:</source>
          <target state="translated">此插件支持以下选项。</target>
        </trans-unit>
        <trans-unit id="feee9da7ca86409cd9c2790742caad4fc594057c" translate="yes" xml:space="preserve">
          <source>This plugin supports the use of Google's Closure Tools with webpack.</source>
          <target state="translated">此插件支持使用谷歌的Closure工具与webpack。</target>
        </trans-unit>
        <trans-unit id="9d78bb9481a5f3f627cce3d98de1d0a37c73f18f" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://cssnano.co/&quot;&gt;cssnano&lt;/a&gt; to optimize and minify your CSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03210a1e739a155ac82e779ddeef11361c965db2" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;JSON.stringify()&lt;/a&gt; to minify your JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06506995ff20545e054b285bfd17c9d57869022" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/fabiosantoscode/terser&quot;&gt;terser&lt;/a&gt; to minify your JavaScript.</source>
          <target state="translated">该插件使用&lt;a href=&quot;https://github.com/fabiosantoscode/terser&quot;&gt;terser&lt;/a&gt;来缩小JavaScript。</target>
        </trans-unit>
        <trans-unit id="c537f96d0b90551bdb8c425afb315d141ed85e22" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/imagemin/imagemin&quot;&gt;imagemin&lt;/a&gt; to optimize your images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccca80fad8f11ea1ca02f91ea558e659f64b4f4" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony&quot;&gt;UglifyJS v3 &lt;/a&gt;&lt;a href=&quot;https://npmjs.com/package/uglify-es&quot;&gt;(&lt;code&gt;uglify-es&lt;/code&gt;)&lt;/a&gt; to minify your JavaScript</source>
          <target state="translated">该插件使用&lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony&quot;&gt;UglifyJS v3 &lt;/a&gt;&lt;a href=&quot;https://npmjs.com/package/uglify-es&quot;&gt;（ &lt;code&gt;uglify-es&lt;/code&gt; ）&lt;/a&gt;来缩小JavaScript</target>
        </trans-unit>
        <trans-unit id="7a92893dc06658363c932ed4b067127319ce2731" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/terser-js/terser&quot;&gt;terser&lt;/a&gt; to minify your JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1f3177c67193f6bb115a3f0c3321ffe0b2f66b" translate="yes" xml:space="preserve">
          <source>This plugin uses &lt;a href=&quot;https://github.com/terser/html-minifier-terser&quot;&gt;html-minifier-terser&lt;/a&gt; to optimize and minify your HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87a75bf8d2601bfb557a819c4f455325b79b898" translate="yes" xml:space="preserve">
          <source>This plugin will be removed in the future as it only exists for migration.</source>
          <target state="translated">这个插件将来会被删除,因为它只是为了迁移而存在。</target>
        </trans-unit>
        <trans-unit id="417ca5f69549104dc84916c24cec679ccbbff0a8" translate="yes" xml:space="preserve">
          <source>This plugin will cause hashes to be based on the relative path of the module, generating a four character string as the module id. Suggested for use in production.</source>
          <target state="translated">该插件将使哈希基于模块的相对路径,生成一个四字符的字符串作为模块id。建议在生产中使用。</target>
        </trans-unit>
        <trans-unit id="69190150b569dd2720829fe25dc4429844f6fdb0" translate="yes" xml:space="preserve">
          <source>This plugin will enable the same concatenation behavior in webpack.</source>
          <target state="translated">这个插件将在webpack中实现同样的连接行为。</target>
        </trans-unit>
        <trans-unit id="79648c5f02c1648bcbbf1396b0968514a67250e6" translate="yes" xml:space="preserve">
          <source>This plugin will enable the same concatenation behavior in webpack. By default this plugin is already enabled in &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt;production &lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; and disabled otherwise. If you need to override the production &lt;code&gt;mode&lt;/code&gt; optimization, set the &lt;a href=&quot;../configuration/optimization#optimizationconcatenatemodules&quot;&gt;&lt;code&gt;optimization.concatenateModules&lt;/code&gt; option&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;. To enable concatenation behavior in other modes, you can add &lt;code&gt;ModuleConcatenationPlugin&lt;/code&gt; manually or use the &lt;code&gt;optimization.concatenateModules&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20365f34269feb4c5eead0efe10e444b9130e1c" translate="yes" xml:space="preserve">
          <source>This project was inspired by, and is a heavily modified version of &lt;code&gt;sasslint-webpack-plugin&lt;/code&gt;.</source>
          <target state="translated">这个项目的灵感来自 &lt;code&gt;sasslint-webpack-plugin&lt;/code&gt; ，并且是它的重大修改版本。</target>
        </trans-unit>
        <trans-unit id="7bdb7bc7b7c2ba2cfe5e9ae00a3972492e0d233d" translate="yes" xml:space="preserve">
          <source>This project was inspired the following open source work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790283d62998f77b2077ace49fbf145534de7451" translate="yes" xml:space="preserve">
          <source>This property allows webpack to control what files are used to calculate performance hints. The default function is seen below:</source>
          <target state="translated">这个属性允许webpack控制哪些文件被用来计算性能提示。默认的功能如下所示。</target>
        </trans-unit>
        <trans-unit id="4a8a42a8482756c98603a8fd3196d37d5d11f455" translate="yes" xml:space="preserve">
          <source>This property allows webpack to control what files are used to calculate performance hints. The default function is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1939ad5234336835a3746ffcaab10be52bf776" translate="yes" xml:space="preserve">
          <source>This section contains guides for understanding and mastering the wide variety of tools and features that webpack offers. The first is a simple guide that takes you through &lt;a href=&quot;guides/getting-started&quot;&gt;getting started&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce7936b8dd1ab00c6a839051bb3b049b5d0046c" translate="yes" xml:space="preserve">
          <source>This section contains guides for understanding and mastering the wide variety of tools and features that webpack offers. The first is a simple guide that takes you through &lt;a href=&quot;guides/installation&quot;&gt;installation&lt;/a&gt;.</source>
          <target state="translated">本节包含用于理解和掌握webpack提供的各种工具和功能的指南。第一个是简单的指南，可指导您完成&lt;a href=&quot;guides/installation&quot;&gt;安装&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="766149f8898bac17386a9e716229c762e8f543e5" translate="yes" xml:space="preserve">
          <source>This section covers all &lt;strong&gt;variables&lt;/strong&gt; available in code compiled with webpack. Modules will have access to certain data from the compilation process through &lt;code&gt;module&lt;/code&gt; and other variables.</source>
          <target state="translated">本节介绍了使用webpack编译的代码中可用的所有&lt;strong&gt;变量&lt;/strong&gt;。模块将可以通过 &lt;code&gt;module&lt;/code&gt; 和其他变量访问编译过程中的某些数据。</target>
        </trans-unit>
        <trans-unit id="2a158e22d6effe6b38eb57854423c9c249557bde" translate="yes" xml:space="preserve">
          <source>This section covers all methods available in code compiled with webpack. When using webpack to bundle your application, you can pick from a variety of module syntax styles including &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015&quot;&gt;ES6&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/CommonJS&quot;&gt;CommonJS&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Asynchronous_module_definition&quot;&gt;AMD&lt;/a&gt;.</source>
          <target state="translated">本节介绍了使用webpack编译的代码中可用的所有方法。使用webpack捆绑应用程序时，可以从多种模块语法样式中进行选择，包括&lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript#6th_Edition_-_ECMAScript_2015&quot;&gt;ES6&lt;/a&gt;，&lt;a href=&quot;https://en.wikipedia.org/wiki/CommonJS&quot;&gt;CommonJS&lt;/a&gt;和&lt;a href=&quot;https://en.wikipedia.org/wiki/Asynchronous_module_definition&quot;&gt;AMD&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1dc3345120a2ce199a3597985ded51c910d2491c" translate="yes" xml:space="preserve">
          <source>This section describes webpack internals and can be useful for plugin developers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a104a27c2cf4c551b1216d744083e3310b40f0" translate="yes" xml:space="preserve">
          <source>This section will focus on adding an offline experience to our app. We'll achieve this using a Google project called &lt;a href=&quot;https://github.com/GoogleChrome/workbox&quot;&gt;Workbox&lt;/a&gt; which provides tools that help make offline support for web apps easier to setup.</source>
          <target state="translated">本节将重点介绍为我们的应用程序添加离线体验。我们将通过一个名为&lt;a href=&quot;https://github.com/GoogleChrome/workbox&quot;&gt;Workbox&lt;/a&gt;的Google项目来实现这一目标，该项目提供的工具可帮助简化对Web应用程序的离线支持。</target>
        </trans-unit>
        <trans-unit id="3efc36ab784fb7c924e3fdee5581efb69eaec3d5" translate="yes" xml:space="preserve">
          <source>This set of options allows you to better debug the application containing assets compiled with webpack</source>
          <target state="translated">这组选项允许你更好地调试包含用webpack编译的assets的应用程序。</target>
        </trans-unit>
        <trans-unit id="98aa68cf05a9c0e5328953ace43257566681626c" translate="yes" xml:space="preserve">
          <source>This set of options allows you to manipulate certain &lt;a href=&quot;../configuration/output&quot;&gt;output&lt;/a&gt; parameters of your build.</source>
          <target state="translated">这组选项使您可以操纵构建的某些&lt;a href=&quot;../configuration/output&quot;&gt;输出&lt;/a&gt;参数。</target>
        </trans-unit>
        <trans-unit id="2e6daec4f6bdcb4007ef4577b7c389610dcd3bc0" translate="yes" xml:space="preserve">
          <source>This set of options is identical to the &lt;code&gt;resolve&lt;/code&gt; property set above, but is used only to resolve webpack's &lt;a href=&quot;../concepts/loaders&quot;&gt;loader&lt;/a&gt; packages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7899ac54672adc98b8151b2866a403aa9d27ff" translate="yes" xml:space="preserve">
          <source>This set of options is identical to the &lt;code&gt;resolve&lt;/code&gt; property set above, but is used only to resolve webpack's &lt;a href=&quot;../concepts/loaders&quot;&gt;loader&lt;/a&gt; packages. Default:</source>
          <target state="translated">这组选项与上面设置的 &lt;code&gt;resolve&lt;/code&gt; 属性相同，但是仅用于解析webpack的&lt;a href=&quot;../concepts/loaders&quot;&gt;加载程序&lt;/a&gt;包。默认：</target>
        </trans-unit>
        <trans-unit id="e8b7b6e71fdb01ac9c18b2d93058863c80b0f482" translate="yes" xml:space="preserve">
          <source>This set of options is picked up by &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and can be used to change its behavior in various ways. Here's a simple example that gzips and serves everything from our &lt;code&gt;dist/&lt;/code&gt; directory in the project root:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f833ed9c75f47b94fbdc43cd56d37d70b51115f" translate="yes" xml:space="preserve">
          <source>This set of options is picked up by &lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt; and can be used to change its behavior in various ways. Here's a simple example that gzips and serves everything from our &lt;code&gt;dist/&lt;/code&gt; directory:</source>
          <target state="translated">这组选项由&lt;a href=&quot;https://github.com/webpack/webpack-dev-server&quot;&gt;webpack-dev-server&lt;/a&gt;拾取，可用于以各种方式更改其行为。这是一个简单的示例，它gzip压缩并提供 &lt;code&gt;dist/&lt;/code&gt; 目录中的所有内容：</target>
        </trans-unit>
        <trans-unit id="a8eecff3ab5954bf0b0246b89e983ae677f253d2" translate="yes" xml:space="preserve">
          <source>This setting is primarily used as a workaround for &lt;a href=&quot;https://github.com/webpack-contrib/style-loader/issues/163&quot;&gt;css clashes&lt;/a&gt; when using one or more &lt;a href=&quot;https://robertknight.github.io/posts/webpack-dll-plugins/&quot;&gt;DllPlugin&lt;/a&gt;'s. &lt;code&gt;base&lt;/code&gt; allows you to prevent either the &lt;em&gt;app&lt;/em&gt;'s css (or &lt;em&gt;DllPlugin2&lt;/em&gt;'s css) from overwriting &lt;em&gt;DllPlugin1&lt;/em&gt;'s css by specifying a css module id base which is greater than the range used by &lt;em&gt;DllPlugin1&lt;/em&gt; e.g.:</source>
          <target state="translated">使用一个或多个&lt;a href=&quot;https://robertknight.github.io/posts/webpack-dll-plugins/&quot;&gt;DllPlugin&lt;/a&gt;时，此设置主要用作&lt;a href=&quot;https://github.com/webpack-contrib/style-loader/issues/163&quot;&gt;css冲突&lt;/a&gt;的解决方法。 &lt;code&gt;base&lt;/code&gt; 允许您通过指定css模块id base大于&lt;em&gt;DllPlugin1&lt;/em&gt;使用的范围，来防止&lt;em&gt;应用程序&lt;/em&gt;的css（或&lt;em&gt;DllPlugin2&lt;/em&gt;的css）覆盖&lt;em&gt;DllPlugin1&lt;/em&gt;的css，例如：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f8fccd0349e08bbe9dad684332c1fd923a8ec939" translate="yes" xml:space="preserve">
          <source>This setup makes your code a lot more portable as everything that is closely coupled now lives together. Let's say you want to use &lt;code&gt;/my-component&lt;/code&gt; in another project, simply copy or move it into the &lt;code&gt;/components&lt;/code&gt; directory over there. As long as you've installed any &lt;em&gt;external dependencies&lt;/em&gt; and your &lt;em&gt;configuration has the same loaders&lt;/em&gt; defined, you should be good to go.</source>
          <target state="translated">这种设置使您的代码更易于移植，因为紧密耦合的所有内容现在都在一起生活。假设您要在另一个项目中使用 &lt;code&gt;/my-component&lt;/code&gt; ，只需将其复制或移动到那里的 &lt;code&gt;/components&lt;/code&gt; 目录中。只要您已经安装了任何&lt;em&gt;外部依赖项，&lt;/em&gt;并且您的&lt;em&gt;配置&lt;/em&gt;定义&lt;em&gt;了相同的加载程序&lt;/em&gt;，那么您就应该很好。</target>
        </trans-unit>
        <trans-unit id="5ea123abc7292c6bf233ab48356c85638b29b540" translate="yes" xml:space="preserve">
          <source>This simply prepends &lt;code&gt;var $ = require(&quot;jquery&quot;);&lt;/code&gt; to &lt;code&gt;example.js&lt;/code&gt;.</source>
          <target state="translated">这只是为 &lt;code&gt;var $ = require(&quot;jquery&quot;);&lt;/code&gt; 到 &lt;code&gt;example.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e10024d095957cbce567008893996f42ae796af8" translate="yes" xml:space="preserve">
          <source>This small library is a core utility in webpack but can also be used elsewhere to provide a similar plugin interface. Many objects in webpack extend the &lt;code&gt;Tapable&lt;/code&gt; class. The class exposes &lt;code&gt;tap&lt;/code&gt;, &lt;code&gt;tapAsync&lt;/code&gt;, and &lt;code&gt;tapPromise&lt;/code&gt; methods which plugins can use to inject custom build steps that will be fired throughout a compilation.</source>
          <target state="translated">这个小型库是webpack中的核心实用程序，但也可以在其他地方使用以提供类似的插件界面。 Webpack中的许多对象扩展了 &lt;code&gt;Tapable&lt;/code&gt; 类。该类公开了 &lt;code&gt;tap&lt;/code&gt; ， &lt;code&gt;tapAsync&lt;/code&gt; 和 &lt;code&gt;tapPromise&lt;/code&gt; 方法，插件可以使用这些方法注入自定义构建步骤，这些步骤将在整个编译过程中触发。</target>
        </trans-unit>
        <trans-unit id="e5ea9cb5352fb456a9a9457c25f28a4bfdc7c1d4" translate="yes" xml:space="preserve">
          <source>This syntax is used to describe all the possible ways that an external library can be available. &lt;code&gt;lodash&lt;/code&gt; here is available as &lt;code&gt;lodash&lt;/code&gt; under AMD and CommonJS module systems but available as &lt;code&gt;_&lt;/code&gt; in a global variable form. &lt;code&gt;subtract&lt;/code&gt; here is available via the property &lt;code&gt;subtract&lt;/code&gt; under the global &lt;code&gt;math&lt;/code&gt; object (e.g. &lt;code&gt;window['math']['subtract']&lt;/code&gt;).</source>
          <target state="translated">该语法用于描述外部库可用的所有可能方式。 &lt;code&gt;lodash&lt;/code&gt; 在AMD和CommonJS模块系统下可作为 &lt;code&gt;lodash&lt;/code&gt; 使用，但在全局变量形式中可作为 &lt;code&gt;_&lt;/code&gt; 使用。 &lt;code&gt;subtract&lt;/code&gt; 这里通过属性可 &lt;code&gt;subtract&lt;/code&gt; 全局下 &lt;code&gt;math&lt;/code&gt; 对象（例如 &lt;code&gt;window['math']['subtract']&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="36e03fd539edd94f1786822559caa0e0ba678475" translate="yes" xml:space="preserve">
          <source>This syntax is used to describe all the possible ways that an external library can be made available. &lt;code&gt;lodash&lt;/code&gt; here is available as &lt;code&gt;lodash&lt;/code&gt; under AMD and CommonJS module systems but available as &lt;code&gt;_&lt;/code&gt; in a global variable form. &lt;code&gt;subtract&lt;/code&gt; here is available via the property &lt;code&gt;subtract&lt;/code&gt; under the global &lt;code&gt;math&lt;/code&gt; object (e.g. &lt;code&gt;window['math']['subtract']&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427ef31c4a006d01b5992ffbd53818e83fa34ef1" translate="yes" xml:space="preserve">
          <source>This tells &lt;code&gt;webpack-dev-server&lt;/code&gt; to serve the files from the &lt;code&gt;dist&lt;/code&gt; directory on &lt;code&gt;localhost:8080&lt;/code&gt;.</source>
          <target state="translated">这告诉 &lt;code&gt;webpack-dev-server&lt;/code&gt; 从 &lt;code&gt;localhost:8080&lt;/code&gt; 上的 &lt;code&gt;dist&lt;/code&gt; 目录提供文件。</target>
        </trans-unit>
        <trans-unit id="25afacdd59de37cfa49edcf6f68266b1dd1e952a" translate="yes" xml:space="preserve">
          <source>This translates to something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc861c1f2b80d6e02a543239491223597388780" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;jade-loader&lt;/code&gt; for &lt;code&gt;.jade&lt;/code&gt; files, and the &lt;a href=&quot;../loaders/style-loader&quot;&gt;&lt;code&gt;style-loader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../loaders/css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="translated">本品采用 &lt;code&gt;jade-loader&lt;/code&gt; 的 &lt;code&gt;.jade&lt;/code&gt; 文件和&lt;a href=&quot;../loaders/style-loader&quot;&gt; &lt;code&gt;style-loader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../loaders/css-loader&quot;&gt; &lt;code&gt;css-loader&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;.css&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="f9e99c7cf1029abbb4fbb5d7e231d7ca99dccb10" translate="yes" xml:space="preserve">
          <source>This uses the &lt;code&gt;pug-loader&lt;/code&gt; for &lt;code&gt;.jade&lt;/code&gt; files, and the &lt;a href=&quot;../loaders/style-loader&quot;&gt;&lt;code&gt;style-loader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../loaders/css-loader&quot;&gt;&lt;code&gt;css-loader&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;.css&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c17361464bcd8285937109314dec7f4ead3d25c" translate="yes" xml:space="preserve">
          <source>This variable is equal to default value of &lt;code&gt;module.exports&lt;/code&gt; (i.e. an object). If &lt;code&gt;module.exports&lt;/code&gt; gets overwritten, &lt;code&gt;exports&lt;/code&gt; will no longer be exported.</source>
          <target state="translated">此变量等于 &lt;code&gt;module.exports&lt;/code&gt; （即对象）的默认值。如果 &lt;code&gt;module.exports&lt;/code&gt; 被覆盖，则 &lt;code&gt;exports&lt;/code&gt; 将不再被导出。</target>
        </trans-unit>
        <trans-unit id="f73885cf12c1cd2817d5d1be8d01158624c8f077" translate="yes" xml:space="preserve">
          <source>This variable is equal to the default value of &lt;code&gt;module.exports&lt;/code&gt; (i.e. an object). If &lt;code&gt;module.exports&lt;/code&gt; gets overwritten, &lt;code&gt;exports&lt;/code&gt; will no longer be exported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39d49f3373eb27aa1cf74db3b29f828968cc1a8" translate="yes" xml:space="preserve">
          <source>This variable is only available with the &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; or the &lt;code&gt;ExtendedAPIPlugin&lt;/code&gt;. It provides access to the hash of the compilation.</source>
          <target state="translated">该变量仅可用于 &lt;code&gt;HotModuleReplacementPlugin&lt;/code&gt; 或 &lt;code&gt;ExtendedAPIPlugin&lt;/code&gt; 。它提供对编译散列的访问。</target>
        </trans-unit>
        <trans-unit id="c7b6d958a04307a8e984f741ba381d787423c0c9" translate="yes" xml:space="preserve">
          <source>This walkthrough stems from &lt;a href=&quot;tree-shaking&quot;&gt;Tree Shaking&lt;/a&gt; and &lt;a href=&quot;development&quot;&gt;Development&lt;/a&gt;. Please ensure you are familiar with the concepts/setup introduced in those guides before continuing on.</source>
          <target state="translated">本演练源于&amp;ldquo; &lt;a href=&quot;tree-shaking&quot;&gt;树的震动&lt;/a&gt;与&lt;a href=&quot;development&quot;&gt;发展&amp;rdquo;&lt;/a&gt;。在继续之前，请确保您熟悉这些指南中介绍的概念/设置。</target>
        </trans-unit>
        <trans-unit id="9530095a465e229292ca12606b608bacc0045a8a" translate="yes" xml:space="preserve">
          <source>This way you could dynamically load an A/B test which provides a different version of a shared module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b032e2d15b2635b3b2ab29289187ca5c1a282c" translate="yes" xml:space="preserve">
          <source>This will add a dependency to &lt;code&gt;extract-style-loader/getStyles!./file.js&lt;/code&gt; and treat the result as &lt;code&gt;file.js.css&lt;/code&gt;. Because &lt;a href=&quot;../configuration/module#modulerules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt;&lt;/a&gt; has a rule matching &lt;code&gt;/\.css$/&lt;/code&gt; and it will apply to this dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ba31004997005b6c7977fd4e63f3ec4f27b1b2" translate="yes" xml:space="preserve">
          <source>This will bundle your source code with entry as &lt;code&gt;index.js&lt;/code&gt; and the output bundle file will have a path of &lt;code&gt;dist&lt;/code&gt; and the filename will be &lt;code&gt;bundle.js&lt;/code&gt;</source>
          <target state="translated">这会将您的源代码与 &lt;code&gt;index.js&lt;/code&gt; 条目捆绑在一起，并且输出捆绑文件的路径将为 &lt;code&gt;dist&lt;/code&gt; ，文件名将为 &lt;code&gt;bundle.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="af43d0785eaf13b9ffe0c34aa1c2ebf9013d579c" translate="yes" xml:space="preserve">
          <source>This will bundle your source code with entry as &lt;code&gt;index.js&lt;/code&gt;, and the output bundle file will have a path of &lt;code&gt;dist&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974910be502dc0a84469dbdf2c5a0b42eda9befe" translate="yes" xml:space="preserve">
          <source>This will direct webpack to &lt;em&gt;enter&lt;/em&gt; through &lt;code&gt;./index.ts&lt;/code&gt;, &lt;em&gt;load&lt;/em&gt; all &lt;code&gt;.ts&lt;/code&gt; and &lt;code&gt;.tsx&lt;/code&gt; files through the &lt;code&gt;ts-loader&lt;/code&gt;, and &lt;em&gt;output&lt;/em&gt; a &lt;code&gt;bundle.js&lt;/code&gt; file in our current directory.</source>
          <target state="translated">这将直接的WebPack到&lt;em&gt;进入&lt;/em&gt;通过 &lt;code&gt;./index.ts&lt;/code&gt; ，&lt;em&gt;加载&lt;/em&gt;所有 &lt;code&gt;.ts&lt;/code&gt; 和 &lt;code&gt;.tsx&lt;/code&gt; 通过文件 &lt;code&gt;ts-loader&lt;/code&gt; ，并&lt;em&gt;输出&lt;/em&gt;一个 &lt;code&gt;bundle.js&lt;/code&gt; 在我们的当前目录中的文件。</target>
        </trans-unit>
        <trans-unit id="edf3fb18a3410f577281b1111c384f0b6a24b89d" translate="yes" xml:space="preserve">
          <source>This will enable CSS optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0b4fa31173e3380b49ecab8f7606a590fbbd56" translate="yes" xml:space="preserve">
          <source>This will enable CSS optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1718346a9979d283f39dc2471103c14f678ca38" translate="yes" xml:space="preserve">
          <source>This will enable HTML optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a33e18425357f58a8da5ab2270892ccffc68f88a" translate="yes" xml:space="preserve">
          <source>This will enable JSON optimization only in production mode. If you want to run it also in development set the &lt;code&gt;optimization.minimize&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f886a1ec8370f98de9de4e1874a73184be8854" translate="yes" xml:space="preserve">
          <source>This will force webpack to exit its bundling process.</source>
          <target state="translated">这将迫使webpack退出其捆绑过程。</target>
        </trans-unit>
        <trans-unit id="00541a540816f3e9bbd4c867606284cd75c32912" translate="yes" xml:space="preserve">
          <source>This will form the bundle with both the files as separate entry points.</source>
          <target state="translated">这样就会形成以两个文件为独立切入点的捆绑。</target>
        </trans-unit>
        <trans-unit id="7f4446d56893c546a3bc2bc1c768154f63d09482" translate="yes" xml:space="preserve">
          <source>This will generate a file &lt;code&gt;dist/index.html&lt;/code&gt; containing the following:</source>
          <target state="translated">这将生成一个包含以下内容的文件 &lt;code&gt;dist/index.html&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7160226d2ca3d86e071b9fa526002cfef710b369" translate="yes" xml:space="preserve">
          <source>This will result in &lt;code&gt;&amp;lt;link rel=&quot;prefetch&quot; href=&quot;login-modal-chunk.js&quot;&amp;gt;&lt;/code&gt; being appended in the head of the page, which will instruct the browser to prefetch in idle time the &lt;code&gt;login-modal-chunk.js&lt;/code&gt; file.</source>
          <target state="translated">这将导致 &lt;code&gt;&amp;lt;link rel=&quot;prefetch&quot; href=&quot;login-modal-chunk.js&quot;&amp;gt;&lt;/code&gt; 附加在页面顶部，这将指示浏览器在空闲时间预取 &lt;code&gt;login-modal-chunk.js&lt;/code&gt; 。文件。</target>
        </trans-unit>
        <trans-unit id="c85e87d9ec602f1d997bca703285880f56410641" translate="yes" xml:space="preserve">
          <source>This will result in following output:</source>
          <target state="translated">这将导致以下输出。</target>
        </trans-unit>
        <trans-unit id="4ac30989a90a0b71fb88d88da6109d1c138e172f" translate="yes" xml:space="preserve">
          <source>This will result in splitting &lt;code&gt;react&lt;/code&gt; and &lt;code&gt;react-dom&lt;/code&gt; into a separate chunk. If you're not sure what packages have been included in a chunk you may refer to &lt;a href=&quot;../guides/code-splitting#bundle-analysis&quot;&gt;Bundle Analysis&lt;/a&gt; section for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="899806b06bf180ab4287827d162ab9f78154c6bd" translate="yes" xml:space="preserve">
          <source>This will result in the following output:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd75db9f1ff33f0b55c972ee38e1768f886c967a" translate="yes" xml:space="preserve">
          <source>This will simply export the provided &lt;code&gt;value&lt;/code&gt;. The &lt;code&gt;value&lt;/code&gt; here can be anything except a function.</source>
          <target state="translated">这将简单地导出提供的 &lt;code&gt;value&lt;/code&gt; 。此处的 &lt;code&gt;value&lt;/code&gt; 可以是函数以外的任何值。</target>
        </trans-unit>
        <trans-unit id="7416b1d07afa4e2b0585443cfa1b58ec3bd5d4db" translate="yes" xml:space="preserve">
          <source>This will trigger the &lt;code&gt;evaluateTypeof&lt;/code&gt; hook:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efed152efc8461a74df43e343c4dd0ad810e7a79" translate="yes" xml:space="preserve">
          <source>This will yield the following build result:</source>
          <target state="translated">这将产生以下构建结果。</target>
        </trans-unit>
        <trans-unit id="9bbe133d1fd6efcfd0e829d8259bc2e5163a63ab" translate="yes" xml:space="preserve">
          <source>This won't trigger:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df81b30369adbeaf367a4758423836e4cb12a34" translate="yes" xml:space="preserve">
          <source>This would allow to remove this piece of code. But there are still questions with the imports which need to be included/evaluated because they could contain side effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945fcbc1787185641ce61384de9325b8f50d7afe" translate="yes" xml:space="preserve">
          <source>This would expose your index.html file to the polymer-webpack-loader based on the process used by the html-loader. In this case you would need to exclude your html file from the polymer-webpack-loader or look for other ways to avoid this conflict. See: &lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md&quot;&gt;html-webpack-plugin template options&lt;/a&gt;</source>
          <target state="translated">这将根据html-loader使用的过程将index.html文件暴露给polymer-webpack-loader。在这种情况下，您将需要从Polymer-webpack-loader中排除html文件，或者寻找其他方法来避免这种冲突。请参阅：&lt;a href=&quot;https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md&quot;&gt;html-webpack-plugin模板选项&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2ea4357ef4b413d69e9589461b2acd2f1ec82b54" translate="yes" xml:space="preserve">
          <source>This would go nicely with &lt;a href=&quot;tree-shaking&quot;&gt;Tree Shaking&lt;/a&gt; as the rest of the &lt;code&gt;lodash&lt;/code&gt; library should get dropped.</source>
          <target state="translated">这与&lt;a href=&quot;tree-shaking&quot;&gt;Tree Shaking&lt;/a&gt;很好地配合，因为应该删除 &lt;code&gt;lodash&lt;/code&gt; 库的其余部分。</target>
        </trans-unit>
        <trans-unit id="b166a6d72bc0ecd96b32dc3dc3968cf48187e1f5" translate="yes" xml:space="preserve">
          <source>This wraps the &lt;code&gt;require('file.js')&lt;/code&gt; in a &lt;code&gt;require.ensure&lt;/code&gt; block</source>
          <target state="translated">这将 &lt;code&gt;require('file.js')&lt;/code&gt; &lt;code&gt;require.ensure&lt;/code&gt; '）包装在require.ensure块中</target>
        </trans-unit>
        <trans-unit id="db0f1255d05986e69c5d921d1eea45817e63296f" translate="yes" xml:space="preserve">
          <source>This: available through the &lt;code&gt;this&lt;/code&gt; object (&lt;code&gt;libraryTarget:'this'&lt;/code&gt;).</source>
          <target state="translated">这：可通过 &lt;code&gt;this&lt;/code&gt; 对象（ &lt;code&gt;libraryTarget:'this'&lt;/code&gt; ）获得。</target>
        </trans-unit>
        <trans-unit id="0705c3b770969e27f7a00fe2cf8c2bc003dbc17b" translate="yes" xml:space="preserve">
          <source>Those exports will trigger this hook:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ffef249f4c6fcea2923ee5d65836d74d834ecab" translate="yes" xml:space="preserve">
          <source>Three simple ways to inspect a webpack bundle</source>
          <target state="translated">检查webpack bundle的三种简单方法</target>
        </trans-unit>
        <trans-unit id="22975e15fe01eb83dd38a4fdd63bcdb34c745980" translate="yes" xml:space="preserve">
          <source>Throughout the Guides we will use &lt;code&gt;diff&lt;/code&gt; blocks to show you what changes we're making to directories, files, and code.</source>
          <target state="translated">在本指南中，我们将使用 &lt;code&gt;diff&lt;/code&gt; 块向您展示我们对目录，文件和代码所做的更改。</target>
        </trans-unit>
        <trans-unit id="8c6fde5245f850996f4fa47b43e3d6f2119f9b90" translate="yes" xml:space="preserve">
          <source>Throughout the Guides we will use &lt;strong&gt;&lt;code&gt;diff&lt;/code&gt;&lt;/strong&gt; blocks to show you what changes we're making to directories, files, and code. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098329a4e0a780055cca74efd7b36afeccfbe21e" translate="yes" xml:space="preserve">
          <source>Throwing an error from loader:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921008c663ca39740d7eff1fc3116a1d5032c017" translate="yes" xml:space="preserve">
          <source>Thus, &lt;code&gt;window.$&lt;/code&gt; is then available in the browser console.</source>
          <target state="translated">因此，然后在浏览器控制台中可以使用 &lt;code&gt;window.$&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c929173c9f4dfa1ce427bc6782df85c0786c6b97" translate="yes" xml:space="preserve">
          <source>Time in milliseconds. &lt;code&gt;cache.idleTimeout&lt;/code&gt; denotes the time period after which the cache storing should happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be05cb967fa89095d05e7e54631c6f7bc59b4d38" translate="yes" xml:space="preserve">
          <source>Time in milliseconds. &lt;code&gt;cache.idleTimeoutForInitialStore&lt;/code&gt; is the time period after which the initial cache storing should happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03dcb8ddd180c79b7cbef1fbef09bd9b811c6229" translate="yes" xml:space="preserve">
          <source>Timeout for gathering changes while watching</source>
          <target state="translated">边看边收集变化的超时</target>
        </trans-unit>
        <trans-unit id="661d4063b8ec8980f63428513015c42d7d7a39d4" translate="yes" xml:space="preserve">
          <source>Timings</source>
          <target state="translated">Timings</target>
        </trans-unit>
        <trans-unit id="54963bcda5c44c101aba88a7600754b4d08bd65b" translate="yes" xml:space="preserve">
          <source>Tips for Use</source>
          <target state="translated">使用技巧</target>
        </trans-unit>
        <trans-unit id="b2660960645189e282a8a216a50f1f554af01560" translate="yes" xml:space="preserve">
          <source>To approach this problem you can easily use a good old environment variable. Let's say we have a variable &lt;code&gt;ASSET_PATH&lt;/code&gt;:</source>
          <target state="translated">要解决此问题，您可以轻松使用一个好的旧环境变量。假设我们有一个变量 &lt;code&gt;ASSET_PATH&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="dcbc79a6d6d80f687151d525406640646c99705e" translate="yes" xml:space="preserve">
          <source>To automatically load &lt;code&gt;jquery&lt;/code&gt; we can simply point both variables it exposes to the corresponding node module:</source>
          <target state="translated">为了自动加载 &lt;code&gt;jquery&lt;/code&gt; ,我们可以简单地将它公开的两个变量都指向相应的节点模块：</target>
        </trans-unit>
        <trans-unit id="2cff0b80a6edf97df3a239f888cd3d2406dca34c" translate="yes" xml:space="preserve">
          <source>To be compatible with existing css files (if not in CSS Module mode).</source>
          <target state="translated">要与现有的css文件兼容(如果不是在CSS模块模式下)。</target>
        </trans-unit>
        <trans-unit id="07015a6889ed2ed55c54e13b2a92e0506c83e9bb" translate="yes" xml:space="preserve">
          <source>To be safe, you can use &lt;code&gt;enforce: &quot;pre&quot;&lt;/code&gt; section to check source files, not modified by other loaders (like &lt;code&gt;babel-loader&lt;/code&gt;)</source>
          <target state="translated">为了安全起见，您可以使用 &lt;code&gt;enforce: &quot;pre&quot;&lt;/code&gt; 部分来检查未经其他加载程序（例如 &lt;code&gt;babel-loader&lt;/code&gt; ）修改的源文件。</target>
        </trans-unit>
        <trans-unit id="8cc256b5ec71d9d9a4b9f72f7f96365afb242e4a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;@gfx/zopfli&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300217b5e3ca451bfede33b8a39b09a6509dd6a3" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;cache-loader&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72aac05bc13982f6c6a5067c2ddd9e569185b48a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;coffeescript&lt;/code&gt; and &lt;code&gt;coffee-loader&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9601d39f4fea47b62aff47d6c20f03c448c47e46" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;compression-webpack-plugin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82bf60baa207e3a2a73e2e85ad00daef03147bec" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;config-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;config-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fb3f78b10623af49e63dfb9f9c6ea2b45590fdac" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;copy-webpack-plugin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb549bbd66f44aa000a2e44c782cff06519919f1" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;css-loader&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8394811af31096e15488fd4006bd1cd5812a2b" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;css-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce74b425fc9b393fe6da8939201756b11c8ae82" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;exports-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;exports-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="411e791be25b2b16d7093ec79dbcbde9a51e71f2" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;expose-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;expose-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0fc7fc961b47a051b19e226656bde393653c4789" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;file-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;file-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d371f2a3cfa7666741ca0629308aa3441dce2dbd" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;html-loader&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549e68511a14dbc3601a5558ba8c50a965161b29" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;html-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca628ea3f00b632b6b81454cd714c9799755185" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;image-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372f0605496cf13295d68fa17070ff1afbf41d0f" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;imports-loader&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94d3f896c040c5941000c3f6d1a93ff1345b8612" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;jshint-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;jshint-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d89de220ed59f227e2f0883cba7f15e710771f4a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;json-minimizer-webpack-plugin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbbf4b1854d000f1b0f5b51db964f7aa3e8cf1e" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;json5-loader&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41ac440dc6238694d68258e618bb49fc94caf83" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;less-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;less-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="966ccb2b770321693105fb2146058043db61d21d" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;less&lt;/code&gt; and &lt;code&gt;less-loader&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b262c7ab30ff7bd247b5f85aaa7cc70b115efc69" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;mini-css-extract-plugin&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549149f55ee616dfb950726ec9162fa32d17da0d" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;mocha-loader&lt;/code&gt; and &lt;code&gt;mocha&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746daaee86d341274baa9bbbb6cb39c7d79f5f35" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;mocha-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;mocha-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="89e5dc0915c471dd5741c80947af93e44d49291a" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;multi-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;multi-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="00fb7c36e27d5f602e02b051008f9368bbec1510" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;node-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;node-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ac04354afe29bdc0eb01bb123082874b29e12c09" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;null-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;null-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3f4caa2d4531e6a67c0096ffd202479b086289cf" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;postcss-loader&lt;/code&gt; and &lt;code&gt;postcss&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9f11b49e3b0ac8754e0ab515a232c4c7bab089" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;raw-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;raw-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="5336d91f3599dbace4c9133e6c80c99d248c2d4f" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;react-proxy-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;react-proxy-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8cb07cd9d5847e41c7193ffd78f6a5328bbf55e2" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;sass-loader&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecf4f291c2cf94cfdee052bf9ea1afec889db8d" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;source-map-loader&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a998a4ac2f536dd8aaf633bc8007df7c8bde21" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;style-loader&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f54944c9d87a57b6782a0d8c4ab4d25eb93f5f" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;stylelint-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;stylelint-webpack-plugin&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="36231f4a116c3e0b429bb1621d54bfcf456d6f2e" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;stylus&lt;/code&gt; and &lt;code&gt;stylus-loader&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38782f5d9cd214d47d0d542d22e218c43a6dee53" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;terser-webpack-plugin&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;terser-webpack-plugin&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ee9d1d253ebff7e4e9d72665d987bd70ba4b9a08" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;transform-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;transform-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3c3ed3c5eaa5eefb4adabc155747e61cb046b303" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;url-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;url-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e5d36d38e77ff2fe0084bc1096c8a1da57aa1351" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;val-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;val-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="829c18e6ac496ea95656902cbe84d34833c84385" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;worker-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;worker-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bfeceae384afd1256e3e284ec202d194d889bbda" translate="yes" xml:space="preserve">
          <source>To begin, you'll need to install &lt;code&gt;yaml-frontmatter-loader&lt;/code&gt;:</source>
          <target state="translated">首先，您需要安装 &lt;code&gt;yaml-frontmatter-loader&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="06c638119ebe6bdd9660a0f8df0f71a8e0b13de5" translate="yes" xml:space="preserve">
          <source>To bundle the &lt;code&gt;lodash&lt;/code&gt; dependency with &lt;code&gt;index.js&lt;/code&gt;, we'll need to install the library locally:</source>
          <target state="translated">要将 &lt;code&gt;lodash&lt;/code&gt; 依赖项与 &lt;code&gt;index.js&lt;/code&gt; 捆绑在一起，我们需要在本地安装该库：</target>
        </trans-unit>
        <trans-unit id="f5a5b45b7f4a04dd9e2ce0185126dc8553156c30" translate="yes" xml:space="preserve">
          <source>To check the progress of any webpack compilation you can use the &lt;code&gt;--progress&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459eedab9edc3e65ea20dcf600414bd17dc32d72" translate="yes" xml:space="preserve">
          <source>To collect profile data for progress steps you can pass &lt;code&gt;profile&lt;/code&gt; as value to &lt;code&gt;--progress&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa7d608afec42e0cdc2c58c9c250dda0d690d1a" translate="yes" xml:space="preserve">
          <source>To completely disable tag-attribute processing (for instance, if you're handling image loading on the client side) you can pass in &lt;code&gt;attrs=false&lt;/code&gt;.</source>
          <target state="translated">要完全禁用标签属性处理（例如，如果要在客户端上处理图像加载），则可以传入 &lt;code&gt;attrs=false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1309003de522e7c17d3c5a1287a3717198d9d74b" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;scaffold&lt;/code&gt;, you must create a &lt;a href=&quot;http://yeoman.io/authoring/&quot;&gt;&lt;code&gt;yeoman-generator&lt;/code&gt;&lt;/a&gt;. Thanks to it, you can optionally extend your generator to include methods from the &lt;a href=&quot;http://yeoman.io/learning/&quot;&gt;Yeoman API&lt;/a&gt;. It's worth noting that we support all the properties of a regular webpack configuration. In order for us to do this, there's a thing you need to remember:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72579134926fff1a800442bd52c8ff45bbcd816" translate="yes" xml:space="preserve">
          <source>To create a code coverage report for all components (even for those for which you have no tests yet) you have to require all the 1) sources and 2) tests. Something like it's described in &lt;a href=&quot;https://github.com/webpack/karma-webpack#alternative-usage&quot;&gt;&quot;alternative usage&quot; of karma-webpack&lt;/a&gt;</source>
          <target state="translated">要为所有组件（甚至还没有测试的组件）创建代码覆盖率报告，您必须要求所有1）源和2）测试。&lt;a href=&quot;https://github.com/webpack/karma-webpack#alternative-usage&quot;&gt;业力Webpack的&amp;ldquo;替代用法&amp;rdquo;中&lt;/a&gt;描述了类似的内容</target>
        </trans-unit>
        <trans-unit id="97cfbbf176fb99a211b09905e5e5c9dfcaa08a80" translate="yes" xml:space="preserve">
          <source>To create a custom client implementation, create a class that extends &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/blob/master/client-src/clients/BaseClient.js&quot;&gt;&lt;code&gt;BaseClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3dac4cd8002b11b5009a5f3065cd8cbade1f61" translate="yes" xml:space="preserve">
          <source>To create a custom server implementation, create a class that extends &lt;a href=&quot;https://github.com/webpack/webpack-dev-server/blob/master/lib/servers/BaseServer.js&quot;&gt;&lt;code&gt;BaseServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b16bf8ed307590d7c4c616d19178c256a1d1f3" translate="yes" xml:space="preserve">
          <source>To determine the structure from which the found resources will be copied to the destination folder, the &lt;code&gt;context&lt;/code&gt; option is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869e6e2ac6874691b0a280a2def88cb61d298df9" translate="yes" xml:space="preserve">
          <source>To disable &lt;code&gt;@import&lt;/code&gt; resolving by &lt;code&gt;css-loader&lt;/code&gt; set the option to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">要禁用 &lt;code&gt;css-loader&lt;/code&gt; 的 &lt;code&gt;@import&lt;/code&gt; 解析，请将选项设置为 &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="361551aaf1d19b454740101d98c789ddb47cdcd1" translate="yes" xml:space="preserve">
          <source>To disable &lt;code&gt;contentBase&lt;/code&gt;:</source>
          <target state="translated">禁用 &lt;code&gt;contentBase&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fe870f47c32f3704bff3eff2d3ef13906efa0316" translate="yes" xml:space="preserve">
          <source>To disable &lt;code&gt;url()&lt;/code&gt; resolving by &lt;code&gt;css-loader&lt;/code&gt; set the option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">要禁用 &lt;code&gt;css-loader&lt;/code&gt; 解析的 &lt;code&gt;url()&lt;/code&gt; ，请将选项设置为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e02862c99560640eb94080cfcb8a40ef213be8f5" translate="yes" xml:space="preserve">
          <source>To disable this feature in some common editors, see the list below:</source>
          <target state="translated">要在一些常用的编辑器中禁用此功能,请看下面的列表。</target>
        </trans-unit>
        <trans-unit id="41c8815ef9e8f8a631a2f83b99b5626c9ea326d0" translate="yes" xml:space="preserve">
          <source>To disambiguate in your &lt;code&gt;webpack.config.js&lt;/code&gt; between &lt;a href=&quot;development&quot;&gt;development&lt;/a&gt; and &lt;a href=&quot;production&quot;&gt;production builds&lt;/a&gt; you may use environment variables.</source>
          <target state="translated">为了在&lt;a href=&quot;development&quot;&gt;开发&lt;/a&gt;和&lt;a href=&quot;production&quot;&gt;生产版本&lt;/a&gt;之间消除 &lt;code&gt;webpack.config.js&lt;/code&gt; 中的歧义，可以使用环境变量。</target>
        </trans-unit>
        <trans-unit id="500ff0470316e19a35544952710d7f6e843d15e4" translate="yes" xml:space="preserve">
          <source>To enable CSS source maps, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; option to the &lt;code&gt;less-loader&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; the &lt;code&gt;css-loader&lt;/code&gt;. Your &lt;code&gt;webpack.config.js&lt;/code&gt; should look like this:</source>
          <target state="translated">为了使CSS源的地图，你需要将通过 &lt;code&gt;sourceMap&lt;/code&gt; 选项将 &lt;code&gt;less-loader&lt;/code&gt; &lt;em&gt;和&lt;/em&gt;的 &lt;code&gt;css-loader&lt;/code&gt; 。您的 &lt;code&gt;webpack.config.js&lt;/code&gt; 应该如下所示：</target>
        </trans-unit>
        <trans-unit id="e6f9cb39ea18350ef2bbae97768a1f50000995d1" translate="yes" xml:space="preserve">
          <source>To enable CSS source maps, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; option to the &lt;code&gt;sass-loader&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; the css-loader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ddb3ba3e454446fe1a7da01fa6a7ea800f1aca" translate="yes" xml:space="preserve">
          <source>To enable CSS source maps, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; option to the sass-loader &lt;em&gt;and&lt;/em&gt; the css-loader. Your &lt;code&gt;webpack.config.js&lt;/code&gt; should look like this:</source>
          <target state="translated">要启用CSS源映射，您需要将 &lt;code&gt;sourceMap&lt;/code&gt; 选项传递给sass-loader &lt;em&gt;和&lt;/em&gt; css-loader。您的 &lt;code&gt;webpack.config.js&lt;/code&gt; 应该如下所示：</target>
        </trans-unit>
        <trans-unit id="5f7892b1e37621678647b50e59d05e015a186798" translate="yes" xml:space="preserve">
          <source>To enable HMR, you also need to modify your webpack configuration object to include the HMR entry points. The &lt;code&gt;webpack-dev-server&lt;/code&gt; package includes a method called &lt;code&gt;addDevServerEntrypoints&lt;/code&gt; which you can use to do this. Here's a small example of how that might look:</source>
          <target state="translated">要启用HMR，还需要修改Webpack配置对象以包括HMR入口点。该 &lt;code&gt;webpack-dev-server&lt;/code&gt; 软件包包括一个名为方法 &lt;code&gt;addDevServerEntrypoints&lt;/code&gt; ，你可以用它来做到这一点。这是一个看起来像的小例子：</target>
        </trans-unit>
        <trans-unit id="b2fc05b2ff61f26beeae4af670843b3d9e871698" translate="yes" xml:space="preserve">
          <source>To enable source maps, we must configure TypeScript to output inline source maps to our compiled JavaScript files. The following line must be added to our TypeScript configuration:</source>
          <target state="translated">要启用源码图,我们必须配置TypeScript来输出内联源码图到我们的编译JavaScript文件。下面的行必须被添加到我们的TypeScript配置中。</target>
        </trans-unit>
        <trans-unit id="c0f0f5be6d78b1c705d6d755ee8f1d70e5d8fdf8" translate="yes" xml:space="preserve">
          <source>To enable sourcemaps for CSS, you'll need to pass the &lt;code&gt;sourceMap&lt;/code&gt; property in the loader's options. If this is not passed, the loader will respect the setting for webpack source maps, set in &lt;code&gt;devtool&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a389a84023632649f39402ea3de4ce188a82054" translate="yes" xml:space="preserve">
          <source>To exclude &lt;code&gt;node_modules&lt;/code&gt;, see the &lt;code&gt;exclude&lt;/code&gt; option in the &lt;code&gt;loaders&lt;/code&gt; config as documented above.</source>
          <target state="translated">要排除 &lt;code&gt;node_modules&lt;/code&gt; ，请参见上文所述的 &lt;code&gt;loaders&lt;/code&gt; 配置中的 &lt;code&gt;exclude&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="c69b5dfdb2bfb7ff464008d2cd81168638addc9d" translate="yes" xml:space="preserve">
          <source>To exclude assets that came from new URL calls from the asset loaders add &lt;code&gt;dependency: { not: ['url'] }&lt;/code&gt; to the loader configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6c1a6b4127fd44ba0769c8077129ced921f313" translate="yes" xml:space="preserve">
          <source>To exclude sourcemaps from compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a9c27a9e0ab77f048bbdd92dbf6f8e9201f83c" translate="yes" xml:space="preserve">
          <source>To expose stylesheets associated with your library, the &lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt;&lt;code&gt;ExtractTextPlugin&lt;/code&gt;&lt;/a&gt; should be used. Users can then consume and load these as they would any other stylesheet.</source>
          <target state="translated">要公开与您的库关联的样式表，应使用&lt;a href=&quot;../plugins/extract-text-webpack-plugin&quot;&gt; &lt;code&gt;ExtractTextPlugin&lt;/code&gt; &lt;/a&gt;。然后，用户可以像使用其他任何样式表一样使用和加载这些内容。</target>
        </trans-unit>
        <trans-unit id="e290f5e27fdf132aed76f6df77c9e1ce86165b82" translate="yes" xml:space="preserve">
          <source>To expose stylesheets associated with your library, the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;&lt;code&gt;MiniCssExtractPlugin&lt;/code&gt;&lt;/a&gt; should be used. Users can then consume and load these as they would any other stylesheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58c10e9810b7cd86447de7048c410bbfbdf9685" translate="yes" xml:space="preserve">
          <source>To extract the webpack bootstrap logic into a separate file, use the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; on a &lt;code&gt;name&lt;/code&gt; which is not defined as &lt;code&gt;entry&lt;/code&gt;. Commonly the name &lt;code&gt;manifest&lt;/code&gt; is used. See the &lt;a href=&quot;../guides/caching&quot;&gt;caching guide&lt;/a&gt; for details.</source>
          <target state="translated">要将webpack引导程序逻辑提取到一个单独的文件中， &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 对未定义为 &lt;code&gt;entry&lt;/code&gt; 的 &lt;code&gt;name&lt;/code&gt; 使用CommonsChunkPlugin。通常使用名称 &lt;code&gt;manifest&lt;/code&gt; 。有关详细信息，请参见&lt;a href=&quot;../guides/caching&quot;&gt;缓存指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="38ed89ed4d2d579580e96d0f69f192abda5d4002" translate="yes" xml:space="preserve">
          <source>To fix this you should uninstall the npm package &lt;code&gt;babel&lt;/code&gt; as it is deprecated in babel v6. (instead install &lt;code&gt;babel-cli&lt;/code&gt; or &lt;code&gt;babel-core&lt;/code&gt;) In the case one of your dependencies is installing &lt;code&gt;babel&lt;/code&gt; and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:</source>
          <target state="translated">要解决此问题，您应该卸载babel v6中不推荐使用的npm软件包 &lt;code&gt;babel&lt;/code&gt; 。（而不是install &lt;code&gt;babel-cli&lt;/code&gt; 或 &lt;code&gt;babel-core&lt;/code&gt; ）如果您的依赖项之一是安装 &lt;code&gt;babel&lt;/code&gt; 而您不能自己卸载它，请在webpack配置中使用加载程序的完整名称：</target>
        </trans-unit>
        <trans-unit id="1471f3354f1fee4747c660cc657f7ec5e39d8aba" translate="yes" xml:space="preserve">
          <source>To fix this, you should uninstall the npm package &lt;code&gt;babel&lt;/code&gt;, as it is deprecated in Babel v6. (Instead, install &lt;code&gt;@babel/cli&lt;/code&gt; or &lt;code&gt;@babel/core&lt;/code&gt;.) In the case one of your dependencies is installing &lt;code&gt;babel&lt;/code&gt; and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0d84621b40671cd3f4fbb8a84b74dd3ba1a2e8" translate="yes" xml:space="preserve">
          <source>To force override the value that is already present in the global object you can set the &lt;code&gt;override&lt;/code&gt; option to the &lt;code&gt;true&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6021058192262f03686a1a0bd715439d2f2cf191" translate="yes" xml:space="preserve">
          <source>To gain typechecking again, use the &lt;a href=&quot;https://www.npmjs.com/package/fork-ts-checker-webpack-plugin&quot;&gt;&lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">要再次获得类型检查，请使用&lt;a href=&quot;https://www.npmjs.com/package/fork-ts-checker-webpack-plugin&quot;&gt; &lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c5a8d8bcb7e0b4e71b403076278fddf67b12775e" translate="yes" xml:space="preserve">
          <source>To generate and compress the original assets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d651b67a431c78e3bd983224bcba2b0132dfb37c" translate="yes" xml:space="preserve">
          <source>To get html, need to add &lt;a href=&quot;https://github.com/wooorm/remark-html&quot;&gt;&lt;code&gt;remark-html&lt;/code&gt;&lt;/a&gt; to the remark plugins and add &lt;a href=&quot;html-loader&quot;&gt;&lt;code&gt;html-loader&lt;/code&gt;&lt;/a&gt; to the &lt;code&gt;webpack.config&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a1f2b68224bef3bc79c709c34bf3103ba22925" translate="yes" xml:space="preserve">
          <source>To get started you only need to understand its &lt;strong&gt;Core Concepts&lt;/strong&gt;:</source>
          <target state="translated">首先，您只需要了解其&lt;strong&gt;核心概念&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="257ccb781a8edd61b316f2c1ae7c4bfadcec5946" translate="yes" xml:space="preserve">
          <source>To ignore warnings, you can use the following configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348e1ea64c185f95f73506889858e9ce259285e2" translate="yes" xml:space="preserve">
          <source>To import a built-in module, use &lt;a href=&quot;../api/module-variables#__non_webpack_require__-webpack-specific-&quot;&gt;&lt;code&gt;__non_webpack_require__&lt;/code&gt;&lt;/a&gt;, i.e. &lt;code&gt;__non_webpack_require__('modulename')&lt;/code&gt; instead of &lt;code&gt;require('modulename')&lt;/code&gt;.</source>
          <target state="translated">要导入内置模块，请使用&lt;a href=&quot;../api/module-variables#__non_webpack_require__-webpack-specific-&quot;&gt; &lt;code&gt;__non_webpack_require__&lt;/code&gt; &lt;/a&gt;，即 &lt;code&gt;__non_webpack_require__('modulename')&lt;/code&gt; 而不是 &lt;code&gt;require('modulename')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5ae4d7aa8a104c8ccb3aa651a7bc57b7fa04613" translate="yes" xml:space="preserve">
          <source>To import a local classname from another module.</source>
          <target state="translated">从其他模块导入本地类名。</target>
        </trans-unit>
        <trans-unit id="49cba4d2623a4fdecd91fd15da0c4fa945088144" translate="yes" xml:space="preserve">
          <source>To import assets from a &lt;code&gt;node_modules&lt;/code&gt; path (include &lt;code&gt;resolve.modules&lt;/code&gt;) and for &lt;code&gt;alias&lt;/code&gt;, prefix it with a &lt;code&gt;~&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c64aae8fc990d22b375b4c008a28a50ef2b4f0" translate="yes" xml:space="preserve">
          <source>To import from multiple modules use multiple &lt;code&gt;composes:&lt;/code&gt; rules.</source>
          <target state="translated">要从多个模块导入，请使用多个 &lt;code&gt;composes:&lt;/code&gt; 规则。</target>
        </trans-unit>
        <trans-unit id="e7df80ba57a4d21c600ef74569b1a8d6021c36bf" translate="yes" xml:space="preserve">
          <source>To import styles from a &lt;code&gt;node_modules&lt;/code&gt; path (include &lt;code&gt;resolve.modules&lt;/code&gt;) and for &lt;code&gt;alias&lt;/code&gt;, prefix it with a &lt;code&gt;~&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59ea396c382cc546a109b1b257f90cc44f98106" translate="yes" xml:space="preserve">
          <source>To improve the build time when using &lt;code&gt;ts-loader&lt;/code&gt;, use the &lt;code&gt;transpileOnly&lt;/code&gt; loader option. On its own, this option turns off type checking. To gain type checking again, use the &lt;a href=&quot;https://www.npmjs.com/package/fork-ts-checker-webpack-plugin&quot;&gt;&lt;code&gt;ForkTsCheckerWebpackPlugin&lt;/code&gt;&lt;/a&gt;. This speeds up TypeScript type checking and ESLint linting by moving each to a separate process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e9aa3b08def6333cf943d0fb6cd429f52aa435" translate="yes" xml:space="preserve">
          <source>To include source maps set the &lt;code&gt;sourceMap&lt;/code&gt; option.</source>
          <target state="translated">要包括源地图，请设置 &lt;code&gt;sourceMap&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="a1015f4201a74cca3e3ac70cdc79b7f3b6a6d867" translate="yes" xml:space="preserve">
          <source>To install the latest release or a specific version, run one of the following commands:</source>
          <target state="translated">要安装最新版本或特定版本,请运行以下命令之一。</target>
        </trans-unit>
        <trans-unit id="1884df3f25a3bbb6d7b71df607746c88bfb41cb2" translate="yes" xml:space="preserve">
          <source>To integrate with TypeScript, you will need to define a custom module for the exports of your worker</source>
          <target state="translated">要与TypeScript集成,你需要为你的worker的导出定义一个自定义模块。</target>
        </trans-unit>
        <trans-unit id="5bbe431ff9314e12f762f84eabbf4794bcc69b80" translate="yes" xml:space="preserve">
          <source>To integrate with TypeScript, you will need to define a custom module for the exports of your worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bcc914a800145c90ef98d17eac32a8bc02e16aa" translate="yes" xml:space="preserve">
          <source>To learn more about source maps, see the &lt;a href=&quot;development&quot;&gt;development guide&lt;/a&gt;.</source>
          <target state="translated">要了解有关源地图的更多信息，请参见&lt;a href=&quot;development&quot;&gt;开发指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3a177cf38e45191d1a14eeceb328a37a99ad1a1a" translate="yes" xml:space="preserve">
          <source>To learn more about webpack configuration, see the &lt;a href=&quot;../concepts/configuration&quot;&gt;configuration concepts&lt;/a&gt;.</source>
          <target state="translated">要了解有关Webpack配置的更多信息，请参阅&lt;a href=&quot;../concepts/configuration&quot;&gt;配置概念&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4f6d9d37d8ba6374305d57b794829b7bce4b11d2" translate="yes" xml:space="preserve">
          <source>To make imports do this by default and keep &lt;code&gt;import _ from 'lodash';&lt;/code&gt; syntax in TypeScript, set &lt;code&gt;&quot;allowSyntheticDefaultImports&quot; : true&lt;/code&gt; and &lt;code&gt;&quot;esModuleInterop&quot; : true&lt;/code&gt; in your &lt;strong&gt;tsconfig.json&lt;/strong&gt; file. This is related to TypeScript configuration and mentioned in our guide only for your information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e748d8b605e30f64d9404df3cdd168090d45ff8" translate="yes" xml:space="preserve">
          <source>To make this work with HMR we need to update that binding to the new &lt;code&gt;printMe&lt;/code&gt; function using &lt;code&gt;module.hot.accept&lt;/code&gt;:</source>
          <target state="translated">为了使此功能与HMR一起使用，我们需要使用 &lt;code&gt;module.hot.accept&lt;/code&gt; 将其绑定更新为新的 &lt;code&gt;printMe&lt;/code&gt; 函数：</target>
        </trans-unit>
        <trans-unit id="b00037db6e6c3f6baec9ee9566ee8706baef31c4" translate="yes" xml:space="preserve">
          <source>To mimic a more production-like environment, it is also possible to proxy the &lt;code&gt;webpack-dev-server&lt;/code&gt; with nginx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ca871bf3949e7877aca45fc526601107359dd1" translate="yes" xml:space="preserve">
          <source>To mimic a more production-like environment, it is also possible to proxy the webpack-dev-server with nginx.</source>
          <target state="translated">为了模仿更像生产环境的环境,也可以用nginx代理webpack-dev-server。</target>
        </trans-unit>
        <trans-unit id="ae527e4c710ed9a7353edef23e497137a1f06dfe" translate="yes" xml:space="preserve">
          <source>To minify the output, use a plugin like &lt;a href=&quot;css-minimizer-webpack-plugin&quot;&gt;css-minimizer-webpack-plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628c7d2253f28d8603b993e75263711dfb0ad973" translate="yes" xml:space="preserve">
          <source>To only use the manual flag and do not analyse source code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5cefa57cd7873c74c9575f3d9b2d6d222b5caf" translate="yes" xml:space="preserve">
          <source>To opt-out from used exports analysis per runtime:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc330b2b1a81faa80abe33d44510a51885be8781" translate="yes" xml:space="preserve">
          <source>To pass arguments directly to Node.js process, you can use the &lt;code&gt;NODE_OPTIONS&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c9385d34fe76b0b46414f529a97ef068c93512" translate="yes" xml:space="preserve">
          <source>To pass your own certificate via CLI, use the following options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f8115b103436185bc4f73cf8023e4431cc5a22" translate="yes" xml:space="preserve">
          <source>To pass your own certificate via the CLI use the following options</source>
          <target state="translated">要通过CLI传递你自己的证书,使用以下选项</target>
        </trans-unit>
        <trans-unit id="6647a87d1cb201b2abb16749321598ec33fa1589" translate="yes" xml:space="preserve">
          <source>To prevent the high delay when booting workers it possible to warmup the worker pool.</source>
          <target state="translated">为了防止启动工人时的高延迟,可以对工人池进行预热。</target>
        </trans-unit>
        <trans-unit id="1016a714864b36370272ce33473888774449f263" translate="yes" xml:space="preserve">
          <source>To report progress, a plugin must &lt;code&gt;tap&lt;/code&gt; into a hook using the &lt;code&gt;context: true&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6472c575009f9527693ccb1eb7975cf2b5bb6a74" translate="yes" xml:space="preserve">
          <source>To run the local installation of webpack you can access its bin version as &lt;code&gt;node_modules/.bin/webpack&lt;/code&gt;.</source>
          <target state="translated">要运行webpack的本地安装，您可以访问其bin版本为 &lt;code&gt;node_modules/.bin/webpack&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="14c3502b5d0c3ef1e7cca5247b15e5302cae180a" translate="yes" xml:space="preserve">
          <source>To run the local installation of webpack you can access its binary version as &lt;code&gt;node_modules/.bin/webpack&lt;/code&gt;. Alternatively, if you are using npm v5.2.0 or greater, you can run &lt;code&gt;npx webpack&lt;/code&gt; to do it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fe53d810ee24cc9207067a8d95fa1e63e196ff" translate="yes" xml:space="preserve">
          <source>To see code examples please refer to &lt;a href=&quot;https://github.com/webpack/webpack/tree/master/examples/source-map&quot;&gt;webpack repository&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6e637bcd7f8c82f7ecb2b72b80d94077bbbc98" translate="yes" xml:space="preserve">
          <source>To set a custom name for the output script, use the &lt;code&gt;name&lt;/code&gt; parameter. The name may contain the string &lt;code&gt;[hash]&lt;/code&gt;, which will be replaced with a content dependent hash for caching purposes. When using &lt;code&gt;name&lt;/code&gt; alone &lt;code&gt;[hash]&lt;/code&gt; is omitted.</source>
          <target state="translated">要为输出脚本设置自定义名称，请使用 &lt;code&gt;name&lt;/code&gt; 参数。该名称可能包含字符串 &lt;code&gt;[hash]&lt;/code&gt; ，将其替换为与内容相关的哈希值以用于缓存。当单独使用 &lt;code&gt;name&lt;/code&gt; 时，将忽略 &lt;code&gt;[hash]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dac38352ca87e4dd20fd92ae4b4d17c3a6910808" translate="yes" xml:space="preserve">
          <source>To set the &lt;code&gt;target&lt;/code&gt; property, you simply set the target value in your webpack config:</source>
          <target state="translated">要设置 &lt;code&gt;target&lt;/code&gt; 属性，只需在webpack配置中设置目标值：</target>
        </trans-unit>
        <trans-unit id="d7739566e3958f0e427ab0f8fd3a0e62883980cf" translate="yes" xml:space="preserve">
          <source>To show only errors in your bundle:</source>
          <target state="translated">只显示捆绑中的错误。</target>
        </trans-unit>
        <trans-unit id="aebf79cbf09ef128e596372a5721d38fb978a82d" translate="yes" xml:space="preserve">
          <source>To solve this problem &lt;code&gt;ProgressPlugin&lt;/code&gt; caches the last known total modules count and reuses this value on the next build. The first build will warm the cache but the following builds will use and update this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="144def8245316e56bae55c0aa633ce63f74cdd87" translate="yes" xml:space="preserve">
          <source>To specify an unset default value, use &lt;code&gt;null&lt;/code&gt; instead of &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">要指定未设置的默认值，请使用 &lt;code&gt;null&lt;/code&gt; 而不是 &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80ba1fc80757c6220f2d25b4d686f35e12c0c9a4" translate="yes" xml:space="preserve">
          <source>To start using the webpack Node.js API, first install webpack if you haven&amp;rsquo;t yet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7929162fe7ecd963c36f31e3a8c0790d5dcf5b99" translate="yes" xml:space="preserve">
          <source>To start using webpack Node.js API, first install webpack if you haven&amp;rsquo;t yet:</source>
          <target state="translated">要开始使用webpack Node.js API，请先安装webpack（如果尚未安装）：</target>
        </trans-unit>
        <trans-unit id="9c156f8d22007693b411c0a6e5d1ef4987eb8bdf" translate="yes" xml:space="preserve">
          <source>To start, make sure that the &lt;code&gt;Vagrantfile&lt;/code&gt; has a static IP;</source>
          <target state="translated">首先，请确保 &lt;code&gt;Vagrantfile&lt;/code&gt; 具有静态IP。</target>
        </trans-unit>
        <trans-unit id="1051af58ed5337486309cda3c2d1ba1cd6199906" translate="yes" xml:space="preserve">
          <source>To tackle this, we use the &lt;a href=&quot;tree-shaking#mark-the-file-as-side-effect-free&quot;&gt;&lt;code&gt;&quot;sideEffects&quot;&lt;/code&gt;&lt;/a&gt; property in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40ceb97056440b94d088a384a85d5fd8c3add01" translate="yes" xml:space="preserve">
          <source>To understand why you should use webpack, let's recap how we used JavaScript on the web before bundlers were a thing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559f3ffdd386200d39a9e0ed2f0bf1bcfb8133ef" translate="yes" xml:space="preserve">
          <source>To use non-code assets with TypeScript, we need to defer the type for these imports. This requires a &lt;code&gt;custom.d.ts&lt;/code&gt; file which signifies custom definitions for TypeScript in our project. Let's set up a declaration for &lt;code&gt;.svg&lt;/code&gt; files:</source>
          <target state="translated">要将非代码资产与TypeScript一起使用，我们需要推迟这些导入的类型。这需要一个 &lt;code&gt;custom.d.ts&lt;/code&gt; 文件，该文件表示我们项目中TypeScript的自定义定义。让我们为 &lt;code&gt;.svg&lt;/code&gt; 文件设置一个声明：</target>
        </trans-unit>
        <trans-unit id="f47e2685aba87fc596fb60b79c57346015b6eeaf" translate="yes" xml:space="preserve">
          <source>To use this option with the CLI pass the &lt;code&gt;--allowed-hosts&lt;/code&gt; option a comma-delimited string.</source>
          <target state="translated">要在CLI中使用此选项，请给 &lt;code&gt;--allowed-hosts&lt;/code&gt; 选项传递一个逗号分隔的字符串。</target>
        </trans-unit>
        <trans-unit id="c7251e927f90574f1c93d0aab322bd244ce7bc38" translate="yes" xml:space="preserve">
          <source>To wait until the chunk is available (and get the exports) you need to async wait for it.</source>
          <target state="translated">要等到chunk可用(并获得出口),你需要异步等待它。</target>
        </trans-unit>
        <trans-unit id="2861b68689f07956f2c1c5c688dc56b07fc7f5de" translate="yes" xml:space="preserve">
          <source>To write a asset from PostCSS plugin to the webpack, need to add a message in &lt;code&gt;result.messages&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12cf88bed11b20e54e263c18116589d8c63d4211" translate="yes" xml:space="preserve">
          <source>To write the webpack configuration in &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, you would first install the necessary dependencies, i.e., TypeScript and the relevant type definitions from the &lt;a href=&quot;https://definitelytyped.org/&quot;&gt;DefinitelyTyped&lt;/a&gt; project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9583a28cf56d89a0848b6749cfcca0381af814" translate="yes" xml:space="preserve">
          <source>To write the webpack configuration in &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;, you would first install the necessary dependencies:</source>
          <target state="translated">要在&lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript中&lt;/a&gt;编写webpack配置，您首先需要安装必要的依赖项：</target>
        </trans-unit>
        <trans-unit id="b3ca19b09afec2f63af696e7e940998ab6ae784f" translate="yes" xml:space="preserve">
          <source>Toggle between the dev-server's two different modes. By default the application will be served with &lt;em&gt;inline mode&lt;/em&gt; enabled. This means that a script will be inserted in your bundle to take care of live reloading, and build messages will appear in the browser console.</source>
          <target state="translated">在开发服务器的两种不同模式之间切换。默认情况下，将在启用&lt;em&gt;内联模式的&lt;/em&gt;情况下为应用程序提供服务。这意味着将在您的捆绑软件中插入脚本以进行实时重新加载，并且构建消息将出现在浏览器控制台中。</target>
        </trans-unit>
        <trans-unit id="64ef870ae95d6fc2864d94e9edd1f087d3109f10" translate="yes" xml:space="preserve">
          <source>Toggle between the dev-server's two different modes. By default, the application will be served with &lt;em&gt;inline mode&lt;/em&gt; enabled. This means that a script will be inserted in your bundle to take care of live reloading, and build messages will appear in the browser console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a830c714bb2b52b8f817649335855437ebcb701" translate="yes" xml:space="preserve">
          <source>Tool</source>
          <target state="translated">Tool</target>
        </trans-unit>
        <trans-unit id="1a02f440362f76dd74ced4f9fbfee17146a758be" translate="yes" xml:space="preserve">
          <source>Transform/Conditionally load CSS by passing a transform/condition function</source>
          <target state="translated">通过传递transform/condition函数来转换/条件加载CSS。</target>
        </trans-unit>
        <trans-unit id="626a681bf03395c3c640839f0d5ec24dccbb5e1f" translate="yes" xml:space="preserve">
          <source>Transpiling</source>
          <target state="translated">Transpiling</target>
        </trans-unit>
        <trans-unit id="238d67a83a75343b4c8e8402f4d70c59f71583f1" translate="yes" xml:space="preserve">
          <source>Treat &lt;code&gt;NW.js&lt;/code&gt; legacy &lt;code&gt;nw.gui&lt;/code&gt; module as external and load it via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f16b9ff027c997e1c9d6f0bceb088b55cf14aa" translate="yes" xml:space="preserve">
          <source>Treat common electron built-in modules in main and preload context like &lt;code&gt;electron&lt;/code&gt;, &lt;code&gt;ipc&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f41ae02b90a760fcabd383b15366a234d56ecd" translate="yes" xml:space="preserve">
          <source>Treat electron built-in modules in the main context like &lt;code&gt;app&lt;/code&gt;, &lt;code&gt;ipc-main&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee569634d3cf0444081dd9cc64a066fc484cabbf" translate="yes" xml:space="preserve">
          <source>Treat electron built-in modules in the preload context like &lt;code&gt;web-frame&lt;/code&gt;, &lt;code&gt;ipc-renderer&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via require() when used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9991d90656eeda9f407b7adf531ad346ce9d05f8" translate="yes" xml:space="preserve">
          <source>Treat electron built-in modules in the renderer context like &lt;code&gt;web-frame&lt;/code&gt;, &lt;code&gt;ipc-renderer&lt;/code&gt; or &lt;code&gt;shell&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c517d46707745686e1a7a1e2283d08565be6aa3" translate="yes" xml:space="preserve">
          <source>Treat node.js built-in modules like &lt;code&gt;fs&lt;/code&gt;, &lt;code&gt;path&lt;/code&gt; or &lt;code&gt;vm&lt;/code&gt; as external and load them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f15f4ea76883ddf6eed88e2cd6c93acefa401ed" translate="yes" xml:space="preserve">
          <source>Treat references to 'http(s)://...' and 'std:...' as external and load them via &lt;code&gt;async import()&lt;/code&gt; when used &lt;strong&gt;(Note that this external type is an &lt;code&gt;async&lt;/code&gt; module, which has various effects on the execution)&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5b85afca38d7c1fd75ac57da3aa838b7ac9ad9" translate="yes" xml:space="preserve">
          <source>Treat references to &lt;code&gt;http(s)://...&lt;/code&gt; and &lt;code&gt;std:...&lt;/code&gt; as external and load them via &lt;code&gt;import&lt;/code&gt; when used. &lt;strong&gt;(Note that this changes execution order as externals are executed before any other code in the chunk)&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0342403a32191cb5b268774041560f46a913b84c" translate="yes" xml:space="preserve">
          <source>Tree Shaking</source>
          <target state="translated">摇钱树</target>
        </trans-unit>
        <trans-unit id="92ee5435c87b7237526ef2d2b3c89bdeda428523" translate="yes" xml:space="preserve">
          <source>Tries to evaluate expressions in &lt;code&gt;if (...)&lt;/code&gt; statements and ternaries to replace them with &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; for further possible dead branch elimination using hooks fired by the parser.</source>
          <target state="translated">尝试在 &lt;code&gt;if (...)&lt;/code&gt; 语句和三进制中对表达式求值，以用 &lt;code&gt;true&lt;/code&gt; / &lt;code&gt;false&lt;/code&gt; 替换它们，以便使用解析器触发的钩子进一步消除死分支。</target>
        </trans-unit>
        <trans-unit id="f48dbb4a06d50125f4b45400d23b5309c350e2b5" translate="yes" xml:space="preserve">
          <source>Triggered after chunk &lt;code&gt;id&lt;/code&gt; optimization has finished.</source>
          <target state="translated">块 &lt;code&gt;id&lt;/code&gt; 优化完成后触发。</target>
        </trans-unit>
        <trans-unit id="7d61f3536f41d0452d7d9b53a7eecd3906189939" translate="yes" xml:space="preserve">
          <source>Triggered after resolver setup is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016425652fe92febb10e1a63fc9cd2be53ec09b2" translate="yes" xml:space="preserve">
          <source>Triggered at the beginning of the optimization phase.</source>
          <target state="translated">在优化阶段开始时触发。</target>
        </trans-unit>
        <trans-unit id="56011266a2b4eca29eee0fd1e875499fc201e75f" translate="yes" xml:space="preserve">
          <source>Triggered before a module build has started, can be used to modify the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728b9f27106bfa00dc2e96b9deec761104277599" translate="yes" xml:space="preserve">
          <source>Triggered before a module build has started.</source>
          <target state="translated">在模块构建开始前触发。</target>
        </trans-unit>
        <trans-unit id="6fd7fc94807f7511ee573ecde4a783dbf2b73661" translate="yes" xml:space="preserve">
          <source>Triggered before renaming an identifier to determine if the renaming is allowed. This is usually used together with the &lt;code&gt;rename&lt;/code&gt; hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e4ce8c8ac65e98f4f7ccf18c4f4bb82a1b7ef3" translate="yes" xml:space="preserve">
          <source>Triggered to emit the hash for each chunk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062b6f416211a2b05dbf4d9f9fecffbdfd04964e" translate="yes" xml:space="preserve">
          <source>Triggered when an asset from a chunk was added to the compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51bc6ac2c044f6b9afa7de612939dadb10997045" translate="yes" xml:space="preserve">
          <source>Triggered when evaluating an expression consisting in a &lt;code&gt;typeof&lt;/code&gt; of a free variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a030d567f426ffe99aba462766d8b8c251af8b" translate="yes" xml:space="preserve">
          <source>Triggered when parsing a call to a member function of an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6db867a66d00712678ba838427fd977f1c8d65" translate="yes" xml:space="preserve">
          <source>Triggered when parsing the &lt;code&gt;typeof&lt;/code&gt; of an identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44825eac0a17d933f58f835331868e14e67ea739" translate="yes" xml:space="preserve">
          <source>Triggered when renaming to get the new identifier. This hook will be called only if &lt;code&gt;canRename&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e56bcdca9e64b81d4b708a360cc55517cb3865c" translate="yes" xml:space="preserve">
          <source>Triggers a re-build of the module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="ffb2ecf6611790daff972e263d7001c037770c42" translate="yes" xml:space="preserve">
          <source>Try to keep the chunk count below a limit</source>
          <target state="translated">尽量将块数控制在一个限制范围内。</target>
        </trans-unit>
        <trans-unit id="b525bcfcdd619ae45cbe7b652f2a2e93cc867f70" translate="yes" xml:space="preserve">
          <source>Try to keep the chunk size above a limit</source>
          <target state="translated">尽量保持块的大小超过一个限度</target>
        </trans-unit>
        <trans-unit id="d72027e0c8836ef57ef4be1e1d4b0be280682157" translate="yes" xml:space="preserve">
          <source>Turn on &lt;a href=&quot;https://en.wikipedia.org/wiki/Polling_(computer_science)&quot;&gt;polling&lt;/a&gt; by passing &lt;code&gt;true&lt;/code&gt;, or specifying a poll interval in milliseconds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b517438de5f4b79f54fb3ec50b752a1392cebdf" translate="yes" xml:space="preserve">
          <source>Turn on &lt;a href=&quot;https://whatis.techtarget.com/definition/polling&quot;&gt;polling&lt;/a&gt; by passing &lt;code&gt;true&lt;/code&gt;, or specifying a poll interval in milliseconds:</source>
          <target state="translated">通过传递 &lt;code&gt;true&lt;/code&gt; 或指定轮询间隔（以毫秒为单位）来打开&lt;a href=&quot;https://whatis.techtarget.com/definition/polling&quot;&gt;轮询&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="38fca6ee99a8e2eb5692ba03fc79c782860fdf0d" translate="yes" xml:space="preserve">
          <source>Turn on debugging mode</source>
          <target state="translated">开启调试模式</target>
        </trans-unit>
        <trans-unit id="2b8055ed62d8e4280ad68eb434e81c48a5a0540b" translate="yes" xml:space="preserve">
          <source>Turn on watch mode. This means that after the initial build, webpack will continue to watch for changes in any of the resolved files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b364042060d283631bdc472627fff2ec14242bf" translate="yes" xml:space="preserve">
          <source>Turn on watch mode. This means that after the initial build, webpack will continue to watch for changes in any of the resolved files. Watch mode is turned off by default:</source>
          <target state="translated">开启观察模式。这意味着在初始构建后,webpack将继续观察任何已解决文件的变化。默认情况下,观察模式是关闭的。</target>
        </trans-unit>
        <trans-unit id="5745eba8f5a78750634eaf8eae2c0b439123ade7" translate="yes" xml:space="preserve">
          <source>Turns hints on/off. In addition, tells webpack to throw either an error or a warning when hints are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9173d10bd7a6471f8b2bcda45935dfcb7aa6ea4" translate="yes" xml:space="preserve">
          <source>Turns hints on/off. In addition, tells webpack to throw either an error or a warning when hints are found. This property is set to &lt;code&gt;&quot;warning&quot;&lt;/code&gt; by default.</source>
          <target state="translated">打开/关闭提示。另外，告诉webpack在找到提示时抛出错误或警告。默认情况下，此属性设置为 &lt;code&gt;&quot;warning&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ce6d5323234bd0947f55f8ac9407c285c721c2b" translate="yes" xml:space="preserve">
          <source>Tweak styling faster -- almost comparable to changing styles in the browser's debugger.</source>
          <target state="translated">调整样式的速度更快--几乎可以与在浏览器的调试器中改变样式相媲美。</target>
        </trans-unit>
        <trans-unit id="7e9716466491e421116d059d46096213e7207c3f" translate="yes" xml:space="preserve">
          <source>Two chunk groups with names &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;about&lt;/code&gt; are created. Each of them has a chunk with a module - &lt;code&gt;./home.js&lt;/code&gt; for &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;./about.js&lt;/code&gt; for &lt;code&gt;about&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1a738f77891efb46fed43843ce712380ab54a1" translate="yes" xml:space="preserve">
          <source>Two similar techniques are supported by webpack when it comes to dynamic code splitting. The first and recommended approach is to use the &lt;a href=&quot;../api/module-methods#import-&quot;&gt;&lt;code&gt;import()&lt;/code&gt; syntax&lt;/a&gt; that conforms to the &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ECMAScript proposal&lt;/a&gt; for dynamic imports. The legacy, webpack-specific approach is to use &lt;a href=&quot;../api/module-methods#require-ensure&quot;&gt;&lt;code&gt;require.ensure&lt;/code&gt;&lt;/a&gt;. Let's try using the first of these two approaches...</source>
          <target state="translated">对于动态代码拆分，webpack支持两种类似的技术。第一种推荐的方法是使用符合&lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ECMAScript建议&lt;/a&gt;的&lt;a href=&quot;../api/module-methods#import-&quot;&gt; &lt;code&gt;import()&lt;/code&gt; 语法&lt;/a&gt;进行动态导入。特定于&lt;a href=&quot;../api/module-methods#require-ensure&quot;&gt; &lt;code&gt;require.ensure&lt;/code&gt; &lt;/a&gt;的传统方法是使用require.ensure。让我们尝试使用这两种方法中的第一种...</target>
        </trans-unit>
        <trans-unit id="79f786196af9807f2487c7f9f2c9c5b0e6bcefa0" translate="yes" xml:space="preserve">
          <source>Two similar techniques are supported by webpack when it comes to dynamic code splitting. The first and recommended approach is to use the &lt;a href=&quot;../api/module-methods#import-1&quot;&gt;&lt;code&gt;import()&lt;/code&gt; syntax&lt;/a&gt; that conforms to the &lt;a href=&quot;https://github.com/tc39/proposal-dynamic-import&quot;&gt;ECMAScript proposal&lt;/a&gt; for dynamic imports. The legacy, webpack-specific approach is to use &lt;a href=&quot;../api/module-methods#requireensure&quot;&gt;&lt;code&gt;require.ensure&lt;/code&gt;&lt;/a&gt;. Let's try using the first of these two approaches...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="428777bf43ef12ea8627eb1b9ee0316b607ca80d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;'fallback' | 'no-fallback'&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae1b145c4a39b0e7e83ae72e8f4111b86eed8e4" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;'module' | 'icss'&lt;/code&gt; Default: &lt;code&gt;'module'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d797f14d50313225620e9264aa69fc680580d0c8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&amp;lt;String\|Array&amp;gt;&lt;/code&gt; Default: &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b66e2538b107060adcf2b101da9724ea50ebdbb" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array&lt;/code&gt; Default: &lt;a href=&quot;#attributes&quot;&gt;supported tags and attributes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a229b08fb0895570dee34d92dd44e883395943" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array[Function]&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Array[Function]&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f15a23ea737e87dd7451dd5e0e9e29e27f4055b6" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array[Object]&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Array[Object]&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99b4afaa36767e15dfc4084c10fbd22041b73af8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Array[String]&lt;/code&gt; Default: &lt;code&gt;[]&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Array[String]&lt;/code&gt; 默认值： &lt;code&gt;[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea43aa3b9bbcad220f5118da59721ce74d5876e8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean | 'keep-source-map'&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1786d5f336b7023a095ff9d273b42e018467359" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Boolean&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48f390c9de4ea544dff9d1ec37c3523911fa118e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Boolean&lt;/code&gt; 值默认值： &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f822f4d91655775283eeb9acc861e91bb8593e6" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Boolean&lt;/code&gt; 值默认值： &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24d4453466129b8bf2e49bdf3cd712902713dd56" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Boolean&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="93214bd39518ce99d8068fefd7f1edc5a8a7f3f1" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean&lt;/code&gt; Default: depends on the &lt;code&gt;compiler.devtool&lt;/code&gt; value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0cd7a32d303176f22a8a47fdbbc0c0402bf5df0" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean\|String&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3a84f78b9d3e392a8a1e606b20988e0735c342" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Function&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84b9bc7aaebed88083d6cb3754bfb6954242dfe" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Number&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Boolean|Number&lt;/code&gt; 默认值： &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c62e5b8c87e9d032ff183d6f9cd74472f99bd24d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Number&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d862ded5f60594aaa5a4aabca994ffc0c7fb32" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Number|String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faedbfd673ffabf3607ce178a4072cbd053dfb2d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4d0914369c702e38a062873836b30ee0b138b5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt; (see below for details around &lt;code&gt;devtool&lt;/code&gt; value and &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; plugin)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca87b7b4cae45a1d3ccaaab1fe59d018992a8a4" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7511ed55d65f2776bfe6abe75b8133b9740c4f53" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt; in production mode, otherwise &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3e2c3627ef890c719fc9b134a179935ff2387a5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|RegExp|Function&lt;/code&gt; Default: &lt;code&gt;'true'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057522ad3882aff07200321caa3a07f469a2cead" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;'auto'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a30c25942f7bc483ed30429fb6dc547c6680a4e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;base64&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45789cbb27a158b6b7a1d196c4567be588ed494" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Boolean|String&lt;/code&gt; 默认值： &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6fb36b090b010171442989619a012304a77f870f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c6f014e4aa52e4a8bc8886f59fb01087a593d8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bc98d2d5284dfada844aa73542007514bbde53" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String&lt;/code&gt; Default: based from &lt;a href=&quot;https://github.com/jshttp/mime-types&quot;&gt;mime-types&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c102d3840abe1451f84b0caecaf1f118a0f7975e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/*! For license information please see ${commentsFile} */&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Boolean|String|Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; 默认值： &lt;code&gt;/*! For license information please see ${commentsFile} */&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89d948d309ca4eaddf50a8918ca60c8e8f6d2f83" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc391969d33770757256cb055768d96590ebb7a3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad21ca15fec76b4ab2909c223d32ff5cbcd86b2" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|Object&lt;/code&gt; Default: based on filename, &lt;code&gt;true&lt;/code&gt; for all files matching &lt;code&gt;/\.module\.\w+$/i.test(filename)&lt;/code&gt; regular expression, more information you can read &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#auto&quot;&gt;here&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8868d15eb3fe0352c846a246f7ea008f1e7c3180" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2765b2640ca4d35ed492a2c7d20819253ddc2db8" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;&lt;/code&gt; 默认值： &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2ce1551a2de3757ecac787eb21b737c666f1d63" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Boolean|String|RegExp|Function&amp;lt;(node, comment) -&amp;gt; Boolean|Object&amp;gt;|Object&lt;/code&gt; Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260402fdd52f9d5162c6febf7c4529ca530706d0" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&amp;lt;(defaultCacheKeys, file) -&amp;gt; Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;defaultCacheKeys =&amp;gt; defaultCacheKeys&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Function&amp;lt;(defaultCacheKeys, file) -&amp;gt; Object&amp;gt;&lt;/code&gt; 默认值： &lt;code&gt;defaultCacheKeys =&amp;gt; defaultCacheKeys&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="232775346e1ad8a667d0d298e7c0e473ece45de5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&amp;lt;(warning, file, source) -&amp;gt; Boolean&amp;gt;&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b22bb98280473acea9cd815eda355202cba26a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&amp;lt;(warning, source) -&amp;gt; Boolean&amp;gt;&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Function&amp;lt;(warning, source) -&amp;gt; Boolean&amp;gt;&lt;/code&gt; 默认值： &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21907eb9edf04f7610f5c798fdb575c9852fcaa9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;() =&amp;gt; true&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487fc2d2b16308cc82996b1776bbdb64fed169d9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;(mimetype, encoding, content, resourcePath) =&amp;gt; mimetype;encoding,base64_content&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed6bae83b76c8a2fcf92f4b5e1cf90a0af91066" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Function&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Function&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68be30dbb80b283998a4620ae5f2cdfd8a10de7a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Number&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32ff5d99cf47a5f4a586c2e015fec8c7af2f831d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;0.8&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a975206f2485cebaf2024e62ab2604b7a355028" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c50fda292f228e964a3c134d2d898e59768354f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;9999&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Number&lt;/code&gt; 默认值： &lt;code&gt;9999&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c6e568c15b55b37e63744b174b2e3ca5a7ffc31" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;Math.max(1, os.cpus().length - 1)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df7a0769e52452e3df73f39fb7b1a59df2977b3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Number&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Number&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87a72a4a194580af6f23ca7095e7565efd80de57" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Object&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa1722ad0036438a3b69cf0e3b5d3e0af63f80d4" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;a href=&quot;https://github.com/fabiosantoscode/terser#minify-options&quot;&gt;default&lt;/a&gt;</source>
          <target state="translated">类型： &lt;code&gt;Object&lt;/code&gt; 默认值：&lt;a href=&quot;https://github.com/fabiosantoscode/terser#minify-options&quot;&gt;默认&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f3586819985ed75b8b2d02a46f0e8aaf553b492" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;a href=&quot;https://github.com/terser-js/terser#minify-options&quot;&gt;default&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690a74e8c6ac1a54d1b06a87192c7609fc70939c" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;require('stylelint').formatters.string&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Object&lt;/code&gt; 默认值： &lt;code&gt;require('stylelint').formatters.string&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e767c91c234faccef21d5915638af3d37264e2cd" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;sass&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00bf287d8473e657b95694eeeebd890a935fbff" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Object&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="00286afe4bf29a7632e5621860e7cf14fbbeb610" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ bare: true }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac88d9846b5205b48538e6913fecc3b59ec6b9fe" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ caseSensitive: true, collapseWhitespace: true, conservativeCollapse: true, keepClosingSlash: true, minifyCSS: true, minifyJS: true, removeComments: true, removeScriptTypeAttributes: true, removeStyleLinkTypeAttributes: true, }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383bd82c3075c01f42b60082fe4014b73dff736e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ level: 9 }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f88059faf76f0131224a4309063319047c83e5f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ plugins: [] }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be10b6ef21673118a1241c6f0b47058097bddac1" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ preset: 'default' }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55dffc0c58cd2987f27cc35a619490ed080aa712" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{ replacer: null, space: null }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bbb462263241cd2ba3ee41e7774865902f57d06" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3090c9a1f4e5c2003962edd1f7ff139b04f44e6b" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7cf8ded73876568c09a569a8a085e063aae549" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;{ relativeUrls: true }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb52c5e9b3ebe3a7d25c0a508a20473276138ca9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80c0b8a01c0dab53d1f380627bfecbf1beb280a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Object|Function&lt;/code&gt; Default: defaults values for Sass implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e7391bdda68bf329c48bd6c9153a513715a424" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;RegExp&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;RegExp&lt;/code&gt; 默认： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ad0c59a95b0e6d486f10a3a9d7eba6a82efa298" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Regex|Function&amp;lt;(string) -&amp;gt; {String}&amp;gt;&lt;/code&gt; Default: &lt;code&gt;${file}.LICENSE&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Regex|Function&amp;lt;(string) -&amp;gt; {String}&amp;gt;&lt;/code&gt; 默认值： &lt;code&gt;${file}.LICENSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9497118568642094db37dca1d955af12afd5eca" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.js(\?.*)?$/i&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; 默认值：/ &lt;code&gt;/\.js(\?.*)?$/i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ec6af7a195975bd36af2b460624abae040ba7ce" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;Sting|RegExp|Array&amp;lt;RegExp&amp;gt;&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c3e574cd51824e490cce46575d42da6d5fbe4e3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String | Array[String]&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String | Array[String]&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dad081ed1244c0f0182b6af2ed80d0835e74f031" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b67b322475209b0ccffe39f447c84533fd7ff84d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;a href=&quot;../configuration/entry-context#context&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值：&lt;a href=&quot;../configuration/entry-context#context&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9daedfc49f97abea259191b53260374e4b184e0b" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'[hash:base64]'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c20abb3d6638283db62af7b659a1c54606b93ac9" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'[path][name][ext]'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54223bad6aa67e8e06b399d5a079e2fe042e5381" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'file-loader'&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值： &lt;code&gt;'file-loader'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3450d9d063d640321d1424d901a3cc0370a43af5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'hex'&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值： &lt;code&gt;'hex'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eef1e4b6ef8dbdfffcb778a4aa5c069e90145b08" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'md4'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09c525848a9e04af4422213f7421822bdec9703" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;'md5'&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值： &lt;code&gt;'md5'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d338a21826be5e359d37d9946a8a9cc06244641e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;(file extension)&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值：（ &lt;code&gt;(file extension)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="458860cc8794fa1dce5c93964ce4854602e52c79" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;[hash].worker.js&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值： &lt;code&gt;[hash].worker.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64522537628ac15d313112de255758c15749456e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;compiler.context&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值： &lt;code&gt;compiler.context&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8032c017e30faabb2408749fe2fd317dc850d226" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;compiler.options.output&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2eabe9055d6691bbf54d928e4538a230fed05fc" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.basename&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值： &lt;code&gt;file.basename&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="585c4c6c689042508af37c0e2edc914428880476" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.directory&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3afefe72790380f9808b4dff5a61622b6267d7" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.dirname&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值： &lt;code&gt;file.dirname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8b5890ce141620217849910ef33a2967576fd9f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.extname&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值： &lt;code&gt;file.extname&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb9b2142304351efc8abbda97c00399b5e2d96a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.folder&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93524c6dfbaa1799587fcb958863ba6a56259b4a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;file.query&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3c7cf42bbb64710fedd3042e2fade6c248c662" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;md4&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97332f91a7fb4d7a6f0a6ca1c07ca2d66755569" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;module&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b40e8955703b7795ceda160c5ceadbd272eab79" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值： &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80a2859cf2d6869eaf9638fb16620ffcf5277e9f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;options.context|compiler.options.context&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8388c10e54000d4de84160be8aca57b37c6901be" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;process.cwd()&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值： &lt;code&gt;process.cwd()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c585da8fcefc2ed263792cc9c85853571e8fbb7a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;styleTag&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856eda01ea92fee417c94b9f976fd41b8817e945" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="59b2e26d84b0121a329aae253cc8ee15c7293d87" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: based on &lt;code&gt;output.chunkFilename&lt;/code&gt;, adding &lt;code&gt;worker&lt;/code&gt; suffix, for example - &lt;code&gt;output.chunkFilename: '[id].js'&lt;/code&gt; value of this option will be &lt;code&gt;[id].worker.js&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf40b3ba9663df4bddd3abf6f23c4f31bf0756a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String&lt;/code&gt; Default: based on the &lt;code&gt;modules.namedExport&lt;/code&gt; option value, if &lt;code&gt;true&lt;/code&gt; - &lt;code&gt;camelCaseOnly&lt;/code&gt;, otherwise &lt;code&gt;asIs&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83500ee648aa9833c754108f00ba4c21bd0bf50" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array&amp;lt;String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f6e2158fdac0cc588821ccc5e6373f2e06c702" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28844db8ffd87c45124157ecf76d46da54a4dbc2" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array[String]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8cb2d531af0482fa5e26cb76d4c1b4bd4ddf6e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Array[String]&lt;/code&gt; Default: &lt;code&gt;'**/*.s?(a|c)ss'&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String|Array[String]&lt;/code&gt; 默认值： &lt;code&gt;'**/*.s?(a|c)ss'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5d6a274566e694fad73aaf0e1a035f901d9c71f" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Boolean&lt;/code&gt; Default: &lt;code&gt;text/css&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfd43f77b19279843713625949db91e7de44cbc" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Buffer&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;&lt;em&gt;Required&lt;/em&gt;</source>
          <target state="translated">类型： &lt;code&gt;String|Buffer&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt; &lt;em&gt;必填&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c952db2a957a0e68fdbb0804459d83d2054a50d1" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&amp;lt;(string) -&amp;gt; String&amp;gt;&lt;/code&gt; Default: &lt;code&gt;[file].LICENSE.txt[query]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373ac4265a6b36cab996be0158efe1f99468c92d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03450e5e444ce147a92117d35e5438de7eba23b" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;a href=&quot;../api/module-variables#__webpack_public_path__-webpack-specific&quot;&gt;&lt;code&gt;__webpack_public_path__&lt;/code&gt;&lt;/a&gt;+outputPath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28283229d6030ab5c7fc80576b4f1863027b6f9e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;a href=&quot;../api/module-variables#__webpack_public_path__-webpack-specific-&quot;&gt;&lt;code&gt;__webpack_public_path__&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">类型： &lt;code&gt;String|Function&lt;/code&gt; 默认值：&lt;a href=&quot;../api/module-variables#__webpack_public_path__-webpack-specific-&quot;&gt; &lt;code&gt;__webpack_public_path__&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a87da5454f7f257aef151e60977c28421e51cf00" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;&quot;[path][base].gz&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbad5e6df88ebed3953aa4a84674b9f46ceba6db" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'[contenthash].[ext]'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360ab5e9d49ff583c21f7d76eb3d326afea79f20" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'[hash].[ext]'&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String|Function&lt;/code&gt; 默认值： &lt;code&gt;'[hash].[ext]'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d341e5b91c99fdd338e2c267ab557fac452e24d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;'local'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d12f3fc3362d6b95cbc5af61377f814a08add6" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;[name].css&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea08d8cc38de763c51013295d9c833262fa93f3" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;based on filename&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ca759aa7b4b478627f625fc693bb2ed73b5e4d" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;document.head.appendChild(linkTag);&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b593763afcd5e05cb97fb6b1c8b1f326f003b86e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;gzip&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab7e59215eaf65fb923d90715d7a93c7dd88efc" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;head&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3091c75d84d793177ba7ea3b610ff90640c8fc55" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String|Function&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d32626a800691e23867c96cc5b1de72fff7c4412" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: based on &lt;code&gt;output.filename&lt;/code&gt;, adding &lt;code&gt;worker&lt;/code&gt; suffix, for example - &lt;code&gt;output.filename: '[name].js'&lt;/code&gt; value of this option will be &lt;code&gt;[name].worker.js&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18c13b5d9fc9e0eb2c8c94f63d67e46c10feb91" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: based on &lt;code&gt;output.publicPath&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26e9e323968365324d822faa5945c81e808ecd5" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Function&lt;/code&gt; Default: the &lt;code&gt;publicPath&lt;/code&gt; in &lt;code&gt;webpackOptions.output&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee550ce7ace209afcbb5ab7d70ad24c469493180" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Object&lt;/code&gt; Default: &lt;code&gt;Worker&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f94280a8675aa87217323d81e29676113f9a627" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|Object|Array&amp;lt;String|Object&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e93852aca3bd1f3b2c32924cd64f9dcb7f9a63" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8113ae3d265d1a67acc2263bc2ca536d74c3ff2a" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String,RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">类型： &lt;code&gt;String|RegExp|Array&amp;lt;String,RegExp&amp;gt;&lt;/code&gt; 默认值： &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5fe0a0f05442268f580aa161cdc944b91702948" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.css(\?.*)?$/i&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb6ecbfcdbe169219c53a75e898160feb271bea" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.html(\?.*)?$/i&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d106a5ab125b4c4095e2d5da1adb13324e300f6e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; - default: &lt;code&gt;/\.json(\?.*)?$/i&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca9efcb50f187a5f0d48d1fdd2486fd7af1ab13" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.(jpe?g\|png\|gif\|tif\|webp\|svg\|avif)\$/i&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320946a2f8aa42823718e5ab474d626b42e6baff" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;/\.m?js(\?.*)?$/i&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce081b1c4c31411700b2d458dd1888a6339363e" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;String|RegExp|Array&amp;lt;String|RegExp&amp;gt;&lt;/code&gt; Default: &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a86cb946d4af4766f6a695502b64f3ea0cd58b" translate="yes" xml:space="preserve">
          <source>TypeScript</source>
          <target state="translated">TypeScript</target>
        </trans-unit>
        <trans-unit id="c2d9ac914c647cad0dbcbcb87931238e275c6336" translate="yes" xml:space="preserve">
          <source>TypeScript Loader</source>
          <target state="translated">TypeScript加载器</target>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="1f7c2dd82181496d2b141ba86b492b3af4761c11" translate="yes" xml:space="preserve">
          <source>Typical Use Cases</source>
          <target state="translated">典型用例</target>
        </trans-unit>
        <trans-unit id="bdc2668b0893170109e3358e3f8b6cc8e3f68770" translate="yes" xml:space="preserve">
          <source>Typically you don't need to change &lt;code&gt;output.hotUpdateChunkFilename&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80832d1efef1dbec926f99fc3dd7765908e985ec" translate="yes" xml:space="preserve">
          <source>Typically you don't need to change &lt;code&gt;output.hotUpdateMainFilename&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e8fa7ca58f14dbe0e88e31b82253c2fe8330c7" translate="yes" xml:space="preserve">
          <source>Typically you don't need to change &lt;code&gt;output.sourcePrefix&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1515c87f6a7ea85127e01e963023637ee473a4" translate="yes" xml:space="preserve">
          <source>Typically, only one master &lt;code&gt;Compiler&lt;/code&gt; instance is created, although child compilers can be created in order to delegate specific tasks. The &lt;code&gt;Compiler&lt;/code&gt; is ultimately just a function which performs bare minimum functionality to keep a lifecycle running. It delegates all the loading, bundling, and writing work to registered plugins.</source>
          <target state="translated">通常，仅创建一个主 &lt;code&gt;Compiler&lt;/code&gt; 实例，尽管可以创建子编译器以委派特定任务。所述 &lt;code&gt;Compiler&lt;/code&gt; 是最终只执行最低限度的功能，以保持一个生命周期运行的功能。它将所有加载，捆绑和写入工作委托给注册的插件。</target>
        </trans-unit>
        <trans-unit id="c3f8e78bf56c04e550ab81796136efb41f9da8c9" translate="yes" xml:space="preserve">
          <source>UMD: available after AMD or CommonJS &lt;code&gt;require&lt;/code&gt; (&lt;code&gt;libraryTarget:'umd'&lt;/code&gt;).</source>
          <target state="translated">UMD：在AMD或CommonJS &lt;code&gt;require&lt;/code&gt; 之后可用（ &lt;code&gt;libraryTarget:'umd'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="f94ecfbd0d2bcb50a727f623eb96ddebf3c848c2" translate="yes" xml:space="preserve">
          <source>URL assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7306d507f537995a908cdc2c667543de98fc215" translate="yes" xml:space="preserve">
          <source>UglifyJsPlugin</source>
          <target state="translated">UglifyJsPlugin</target>
        </trans-unit>
        <trans-unit id="3d9844683293513f543c7b29de1eca0738819eb5" translate="yes" xml:space="preserve">
          <source>UglifyjsWebpackPlugin</source>
          <target state="translated">UglifyjsWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="6269c568a3b218ceca1f87557b01a5fd9630fc75" translate="yes" xml:space="preserve">
          <source>Under The Hood</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97df0e9ab39030d7a23b49ea204e7804ae6467e" translate="yes" xml:space="preserve">
          <source>Unfortunately, Less doesn't map all options 1-by-1 to camelCase. When in doubt, &lt;a href=&quot;https://github.com/less/less.js/blob/3.x/bin/lessc&quot;&gt;check their executable&lt;/a&gt; and search for the dash-case option.</source>
          <target state="translated">不幸的是，Less并没有将所有选项1比1映射到camelCase。如有疑问，&lt;a href=&quot;https://github.com/less/less.js/blob/3.x/bin/lessc&quot;&gt;请检查其可执行文件&lt;/a&gt;并搜索破折号选项。</target>
        </trans-unit>
        <trans-unit id="02b28fce43a60e9b67980e224a3271b9d05a18d1" translate="yes" xml:space="preserve">
          <source>Unique ident for this plugin instance. (For advanced usage only, by default automatically generated)</source>
          <target state="translated">这个插件实例的唯一标识。(仅用于高级使用,默认为自动生成)</target>
        </trans-unit>
        <trans-unit id="38096a0782d24be3f1ac8a005109a6f9e98a2e3c" translate="yes" xml:space="preserve">
          <source>Unlicense</source>
          <target state="translated">Unlicense</target>
        </trans-unit>
        <trans-unit id="87275ae56cb19d69dde22669d78018993c53c041" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;define-plugin&quot;&gt;&lt;code&gt;DefinePlugin&lt;/code&gt;&lt;/a&gt;, default values are applied to &lt;code&gt;JSON.stringify&lt;/code&gt; by the &lt;code&gt;EnvironmentPlugin&lt;/code&gt;.</source>
          <target state="translated">不像&lt;a href=&quot;define-plugin&quot;&gt; &lt;code&gt;DefinePlugin&lt;/code&gt; &lt;/a&gt;，默认值应用到 &lt;code&gt;JSON.stringify&lt;/code&gt; 由 &lt;code&gt;EnvironmentPlugin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3f04a0cd74b23ebbf601fa4c959ce4e4655cc47" translate="yes" xml:space="preserve">
          <source>Unlike throwing an Error directly, it will NOT interrupt the compilation process of the current module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67460e2fd161078fefa4bc5f650d2ab4df1bb707" translate="yes" xml:space="preserve">
          <source>Unseals the compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97906c9c9c0bfb96fc8e4c7b67d7ad433d30558b" translate="yes" xml:space="preserve">
          <source>Updates style &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;</source>
          <target state="translated">更新样式 &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a64583707dd31180fe5a0ab3c47efa644fc29e01" translate="yes" xml:space="preserve">
          <source>Usable in web, Node.js, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="855dfd5dbc4d5f3c81b2429eeef839b85bd8fb6b" translate="yes" xml:space="preserve">
          <source>Usage as a function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3439e83eddd9b986dc9a370152a22cf7dcf9b189" translate="yes" xml:space="preserve">
          <source>Usage example</source>
          <target state="translated">用例</target>
        </trans-unit>
        <trans-unit id="9de2343e3dff906827854d6f9144e5566b51cab5" translate="yes" xml:space="preserve">
          <source>Usage via CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41cb38aef0f43893edb2a921684f2f6f40f9e95c" translate="yes" xml:space="preserve">
          <source>Usage via the CLI</source>
          <target state="translated">通过CLI使用</target>
        </trans-unit>
        <trans-unit id="049f5e1baa1376397ff904e81ced9390d85660bb" translate="yes" xml:space="preserve">
          <source>Usage with config file</source>
          <target state="translated">配置文件的用法</target>
        </trans-unit>
        <trans-unit id="420dc5d6f5dd5e472ab220d4ffe705c20bd6dcc7" translate="yes" xml:space="preserve">
          <source>Usage with default values</source>
          <target state="translated">默认值的使用方法</target>
        </trans-unit>
        <trans-unit id="f0bda72188507cba1ef2ddbd4e83a886112b7438" translate="yes" xml:space="preserve">
          <source>Usage with require statement loader prefix</source>
          <target state="translated">使用require语句加载器前缀的用法</target>
        </trans-unit>
        <trans-unit id="785ae0c3486e73e9f8b768557933a332df04dc7d" translate="yes" xml:space="preserve">
          <source>Usage without config file</source>
          <target state="translated">无配置文件的使用方法</target>
        </trans-unit>
        <trans-unit id="821e5fac998dd151dcf624b207788a33d5618f3d" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: string | [string]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ee1172757fd42561b9cf137f9ab461f5d586e7" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: string|Array&amp;lt;string&amp;gt;&lt;/code&gt;</source>
          <target state="translated">用法： &lt;code&gt;entry: string|Array&amp;lt;string&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c731a73c08ff4c5db49b52bc479ab6f7d72672d6" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: { &amp;lt;entryChunkName&amp;gt; string | [string] } | {}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e054d435d046f8777136e4b00386b25fc845a634" translate="yes" xml:space="preserve">
          <source>Usage: &lt;code&gt;entry: {[entryChunkName: string]: string|Array&amp;lt;string&amp;gt;}&lt;/code&gt;</source>
          <target state="translated">用法： &lt;code&gt;entry: {[entryChunkName: string]: string|Array&amp;lt;string&amp;gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="048a95d8e63a18a35214152fa9cdd1ca3affe9c9" translate="yes" xml:space="preserve">
          <source>Usage: Lodash Map</source>
          <target state="translated">使用方法 Lodash地图</target>
        </trans-unit>
        <trans-unit id="bd71a2d8f7fdfbd229f3ddfe2c52c1ebc36f92b1" translate="yes" xml:space="preserve">
          <source>Usage: Vue.js</source>
          <target state="translated">用途:Vue.js</target>
        </trans-unit>
        <trans-unit id="c71a7f709525e96282aab1489390403a74f7af5e" translate="yes" xml:space="preserve">
          <source>Usage: custom &lt;code&gt;outputPath&lt;/code&gt;</source>
          <target state="translated">用法：自定义 &lt;code&gt;outputPath&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6074933fbc4d7ed357713b8393150012a221bc81" translate="yes" xml:space="preserve">
          <source>Usage: default</source>
          <target state="translated">用法:默认</target>
        </trans-unit>
        <trans-unit id="97aa9139b5759d53264af935bc8b66d67296c1c9" translate="yes" xml:space="preserve">
          <source>Usage: jQuery</source>
          <target state="translated">使用方法:jQuery</target>
        </trans-unit>
        <trans-unit id="c9948b5c3a0efb386160d78d9e95149d8988754d" translate="yes" xml:space="preserve">
          <source>Usage: jQuery with Angular 1</source>
          <target state="translated">使用方法:jQuery与Angular 1</target>
        </trans-unit>
        <trans-unit id="10e8c6c7100f2e71b8c6dc58009dbebb98bbfdda" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/webpack/webpack-cli/tree/master/packages/init#cli-via-webpack-cli&quot;&gt;webpack-cli's &lt;code&gt;init&lt;/code&gt; command&lt;/a&gt; to rapidly generate webpack configuration file for your project requirements, it will ask you a couple of questions before creating a configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0d2dcef687f9ba1414902a7a171079ca116b9ab" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;script type=&quot;module&quot; src=&quot;es6_out_path.js&quot;&amp;gt;&lt;/code&gt; to target modern browsers and &lt;code&gt;&amp;lt;script nomodule src=&quot;es5_out_path.js&quot;&amp;gt;&lt;/code&gt; for older browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72ddf696321a9a37dbaaa9b99e33eac9435e6327" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;'ws'&lt;/code&gt; mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90283442f2ef3d264ecbf048521f8735be3ab70f" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; to create bundles of shared application code between each page. Multi-page applications that reuse a lot of code/modules between entry points can greatly benefit from these techniques, as the amount of entry points increase.</source>
          <target state="translated">使用 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 在每个页面之间创建共享应用程序代码包。随着入口点数量的增加，在入口点之间重用大量代码/模块的多页面应用程序可以从这些技术中受益匪浅。</target>
        </trans-unit>
        <trans-unit id="6f1fed208551ff106887d8af5e80ff7ef296a976" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;module.rules&lt;/code&gt; whenever possible, as this will reduce boilerplate in your source code and allow you to debug or locate a loader faster if something goes south.</source>
          <target state="translated">尽可能使用 &lt;code&gt;module.rules&lt;/code&gt; ，因为这会减少源代码中的样板，并且如果出现问题，可让您更快地调试或定位装载程序。</target>
        </trans-unit>
        <trans-unit id="f901fde6dfa9e5f040de87dda47b0543bb37dc53" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;resolve.conditionNames&lt;/code&gt; configuration option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3b4f270b753c9ce570c3f37d9231f10a431dfc" translate="yes" xml:space="preserve">
          <source>Use Case: Git Version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5c0671a0be6041e5f1d3866fb7667e4202e512d" translate="yes" xml:space="preserve">
          <source>Use Cases</source>
          <target state="translated">使用案例</target>
        </trans-unit>
        <trans-unit id="9c64fb613f74d09a8921c473b4932e24ac5d67e8" translate="yes" xml:space="preserve">
          <source>Use ES modules syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77d20ba66c81e5da2236c506b4a70906c3dff0e" translate="yes" xml:space="preserve">
          <source>Use ES modules syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e804363a0734db33e7dd8b2cf9fa692e9bd07cc6" translate="yes" xml:space="preserve">
          <source>Use ES2015 module syntax (i.e. &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt;).</source>
          <target state="translated">使用ES2015模块语法（即 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8e3799199c2fd1385ca8a6679a7569bf770dc434" translate="yes" xml:space="preserve">
          <source>Use a &lt;code&gt;eval-source-map&lt;/code&gt; variant for incremental builds.</source>
          <target state="translated">使用 &lt;code&gt;eval-source-map&lt;/code&gt; 变体进行增量构建。</target>
        </trans-unit>
        <trans-unit id="3823015acd2a8397f2d349e0faf7bde67ec1677e" translate="yes" xml:space="preserve">
          <source>Use a different service URL in production/development builds:</source>
          <target state="translated">在生产/开发构建中使用不同的服务URL。</target>
        </trans-unit>
        <trans-unit id="29b08ddff54d134786e6d97bb5f981c57e922b1d" translate="yes" xml:space="preserve">
          <source>Use a value of &lt;code&gt;Infinity&lt;/code&gt; to process all assets even if they are larger than the original size or their original size is &lt;code&gt;0&lt;/code&gt; bytes (useful when you are pre-zipping all assets for AWS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2445d385b53a4de72ebd7423a5eb95275a6bf0e0" translate="yes" xml:space="preserve">
          <source>Use a value of &lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt; to process all assets even if they are larger than the original size, excluding assets with their original size is &lt;code&gt;0&lt;/code&gt; bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063f130f568e21683ee17bec01662f407d588a04" translate="yes" xml:space="preserve">
          <source>Use an object to pass options through to Less.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429433a3edb72c952be8fecdafc78c0a4adecac1" translate="yes" xml:space="preserve">
          <source>Use an object to pass options through to Stylus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e3a7aa8dc52f6313e8349c7c4d4b9e51cb4f88" translate="yes" xml:space="preserve">
          <source>Use and object for the Sass implementation setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a29ba383c84d15925a42f871530f52904ae908" translate="yes" xml:space="preserve">
          <source>Use cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3423fcc4dce73b33f44b7a08148fbae5735d3851" translate="yes" xml:space="preserve">
          <source>Use different config file</source>
          <target state="translated">使用不同的配置文件</target>
        </trans-unit>
        <trans-unit id="781efd5f450e0f981441f9f3b7b5fe1e6e74e82d" translate="yes" xml:space="preserve">
          <source>Use different configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f963deeb0b38ab886479137bc92905c39af1075" translate="yes" xml:space="preserve">
          <source>Use fewer/smaller libraries.</source>
          <target state="translated">使用较少/较小的图书馆。</target>
        </trans-unit>
        <trans-unit id="8fe70a122d979d6c4f0829a11979f8862aee57f2" translate="yes" xml:space="preserve">
          <source>Use it &lt;strong&gt;before&lt;/strong&gt;&lt;code&gt;css-loader&lt;/code&gt; and &lt;code&gt;style-loader&lt;/code&gt;, but &lt;strong&gt;after&lt;/strong&gt; other preprocessor loaders like e.g &lt;code&gt;sass|less|stylus-loader&lt;/code&gt;, if you use any (since &lt;a href=&quot;../concepts/loaders#configuration&quot;&gt;webpack loaders evaluate right to left/bottom to top&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea91fd51d88210a0f6118413452bbea9e27499b" translate="yes" xml:space="preserve">
          <source>Use modules without having to use import/require</source>
          <target state="translated">使用模块,而不必使用导入/需求。</target>
        </trans-unit>
        <trans-unit id="e2734a5814e4bc497b1db8f46457c27f5b96b2b7" translate="yes" xml:space="preserve">
          <source>Use multi-process parallel running to improve the build speed</source>
          <target state="translated">使用多进程并行运行,提高构建速度。</target>
        </trans-unit>
        <trans-unit id="2f56bfa52ab19a884eb17c40d6e8a950a0ccd1d4" translate="yes" xml:space="preserve">
          <source>Use multi-process parallel running to improve the build speed. Default number of concurrent runs: &lt;code&gt;os.cpus().length - 1&lt;/code&gt;.</source>
          <target state="translated">使用多进程并行运行可提高构建速度。并发运行的默认数量： &lt;code&gt;os.cpus().length - 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="852a5e5247d5f01d785e00d48cebc874527016c3" translate="yes" xml:space="preserve">
          <source>Use of HtmlWebpackPlugin</source>
          <target state="translated">使用HtmlWebpackPlugin</target>
        </trans-unit>
        <trans-unit id="b8a1bc5d1840853cc471934d460a60e714be6e6f" translate="yes" xml:space="preserve">
          <source>Use source maps to map error message locations to modules (This slows down the compilation) ⚠️ &lt;strong&gt;&lt;code&gt;cheap-source-map&lt;/code&gt; options don't work with this plugin&lt;/strong&gt;</source>
          <target state="translated">使用源映射将错误消息位置映射到模块（这会减慢编译速度）⚠️cheap &lt;strong&gt; &lt;code&gt;cheap-source-map&lt;/code&gt; 选项不适用于此插件&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3568250533b173a47606070650342da08e05889e" translate="yes" xml:space="preserve">
          <source>Use source maps to map error message locations to modules (this slows down the compilation). If you use your own &lt;code&gt;minify&lt;/code&gt; function please read the &lt;code&gt;minify&lt;/code&gt; section for handling source maps correctly.</source>
          <target state="translated">使用源映射将错误消息位置映射到模块（这会减慢编译速度）。如果您使用自己的 &lt;code&gt;minify&lt;/code&gt; 功能，请阅读 &lt;code&gt;minify&lt;/code&gt; 部分以正确处理源地图。</target>
        </trans-unit>
        <trans-unit id="4c67aa0dbdd4d1f54297f868de879176bff2b4de" translate="yes" xml:space="preserve">
          <source>Use sourcemaps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b6dd9102de00b202f93084bc9cf07017df3a8b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../configuration/mode#mode-production&quot;&gt;&lt;code&gt;production&lt;/code&gt;&lt;/a&gt;&lt;code&gt;mode&lt;/code&gt; configuration option to enable &lt;a href=&quot;../configuration/mode#usage&quot;&gt;various optimizations&lt;/a&gt; including minification and tree shaking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03afd1f2b8a63af2efbeb43ec2fe23408b535c2c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../guides/shimming#exports-loader&quot;&gt;exports-loader&lt;/a&gt; to add a module export to components which expect a symbol to be global.</source>
          <target state="translated">使用&lt;a href=&quot;../guides/shimming#exports-loader&quot;&gt;exports-loader&lt;/a&gt;将模块导出添加到期望符号为全局符号的组件。</target>
        </trans-unit>
        <trans-unit id="7047a6a883604b0b16f8494074ad551fccc60e76" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../guides/shimming#imports-loader&quot;&gt;imports-loader&lt;/a&gt; when a script expects the &lt;code&gt;this&lt;/code&gt; keyword to reference &lt;code&gt;window&lt;/code&gt;.</source>
          <target state="translated">当脚本希望 &lt;code&gt;this&lt;/code&gt; 关键字引用 &lt;code&gt;window&lt;/code&gt; 时，请使用&lt;a href=&quot;../guides/shimming#imports-loader&quot;&gt;imports-loader&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29623b48270f1002c1bd8b54dc602f32f7ba9205" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../guides/shimming#provideplugin&quot;&gt;ProvidePlugin&lt;/a&gt; to add a module import statement when a script expects a variable to be globally defined (but is now a module export).</source>
          <target state="translated">当脚本期望全局定义变量（但现在是模块导出）时，请使用&lt;a href=&quot;../guides/shimming#provideplugin&quot;&gt;ProvidePlugin&lt;/a&gt;添加模块导入语句。</target>
        </trans-unit>
        <trans-unit id="0f67fa4b9fb64dd98c2eb5ca8cdaa686cedc2d0b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../plugins/normal-module-replacement-plugin&quot;&gt;NormalModuleReplacementPlugin&lt;/a&gt; to have webpack swap a module-compliant version for a script.</source>
          <target state="translated">使用&lt;a href=&quot;../plugins/normal-module-replacement-plugin&quot;&gt;NormalModuleReplacementPlugin&lt;/a&gt;使Webpack交换脚本的模块兼容版本。</target>
        </trans-unit>
        <trans-unit id="a4c5aca3b91a835fa0116cb085e98809d051f74f" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../plugins/source-map-dev-tool-plugin&quot;&gt;&lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt;&lt;/a&gt; for a more fine grained configuration. See the &lt;a href=&quot;../loaders/source-map-loader&quot;&gt;&lt;code&gt;source-map-loader&lt;/code&gt;&lt;/a&gt; to deal with existing source maps.</source>
          <target state="translated">使用&lt;a href=&quot;../plugins/source-map-dev-tool-plugin&quot;&gt; &lt;code&gt;SourceMapDevToolPlugin&lt;/code&gt; &lt;/a&gt;获得更细粒度的配置。请参阅&lt;a href=&quot;../loaders/source-map-loader&quot;&gt; &lt;code&gt;source-map-loader&lt;/code&gt; &lt;/a&gt;处理现有的源地图。</target>
        </trans-unit>
        <trans-unit id="a3fae1281abf983ea68fc5840def5bfe64a255ab" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;css-loader&quot;&gt;css-loader&lt;/a&gt; or the &lt;a href=&quot;raw-loader&quot;&gt;raw-loader&lt;/a&gt; to turn it into a JS module and the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt; to extract it into a separate file. Looking for the webpack 1 loader? Check out the &lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/archive/webpack-1&quot;&gt;archive/webpack-1 branch&lt;/a&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;css-loader&quot;&gt;css-loader&lt;/a&gt;或&lt;a href=&quot;raw-loader&quot;&gt;raw-loader&lt;/a&gt;将其转换为JS模块，并使用&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;将其提取为单独的文件。寻找webpack 1装载机吗？检出&lt;a href=&quot;https://github.com/webpack-contrib/sass-loader/tree/archive/webpack-1&quot;&gt;archive / webpack-1分支&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e8f5053cc9a5b3edfd022be6aa3ad7bbe8a89ce2" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://github.com/webpack/loader-utils#getoptions&quot;&gt;&lt;code&gt;getOptions&lt;/code&gt; method&lt;/a&gt; from &lt;code&gt;loader-utils&lt;/code&gt; to extract given loader options.</source>
          <target state="translated">使用&lt;a href=&quot;https://github.com/webpack/loader-utils#getoptions&quot;&gt; &lt;code&gt;getOptions&lt;/code&gt; 方法&lt;/a&gt;从 &lt;code&gt;loader-utils&lt;/code&gt; 提取给出加载程序选项。</target>
        </trans-unit>
        <trans-unit id="d3246b4d7c38981b18ae1ec1216216ce55f906be" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://www.npmjs.com/package/stats-webpack-plugin&quot;&gt;StatsPlugin&lt;/a&gt; for more control over the generated profile.</source>
          <target state="translated">使用&lt;a href=&quot;https://www.npmjs.com/package/stats-webpack-plugin&quot;&gt;StatsPlugin&lt;/a&gt;对生成的配置文件进行更多控制。</target>
        </trans-unit>
        <trans-unit id="860721991110aab1ff27b582970ee9eb61d78c8b" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; in &lt;code&gt;async&lt;/code&gt; mode in Multi-Page Applications.</source>
          <target state="translated">在多页面应用程序中以 &lt;code&gt;async&lt;/code&gt; 模式使用 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="951dd6398ced88957c9859db052edccc7d1f697e" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; in Multi-Page Applications.</source>
          <target state="translated">在多页面应用程序中使用 &lt;code&gt;CommonsChunkPlugin&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="407ed185a0e815fd28205b6737de4f430df23ea0" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;DllPlugin&lt;/code&gt; to move code that is changed less often into a separate compilation. This will improve the application's compilation speed, although it does increase complexity of the build process.</source>
          <target state="translated">使用 &lt;code&gt;DllPlugin&lt;/code&gt; 将更改较少的代码移动到单独的编译中。尽管这确实会增加构建过程的复杂性，但这将提高应用程序的编译速度。</target>
        </trans-unit>
        <trans-unit id="5deb8470305817c4868baebdaee2ceecb3ad5836" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;SplitChunksPlugin&lt;/code&gt; in &lt;code&gt;async&lt;/code&gt; mode in Multi-Page Applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee86b374b58871f6c0609f27d2e0d89331fb78d" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;SplitChunksPlugin&lt;/code&gt; in Multi-Page Applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5dba36cefe992d08bc8c0b9e38d294640a1015" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;fork-ts-checker-webpack-plugin&lt;/code&gt; for type checking in a separate process.</source>
          <target state="translated">使用 &lt;code&gt;fork-ts-checker-webpack-plugin&lt;/code&gt; 在单独的进程中进行类型检查。</target>
        </trans-unit>
        <trans-unit id="22116d89c5b9c5171f2fcb19c49f120558979cfa" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;fork-ts-checker-webpack-plugin&lt;/code&gt; for typechecking in a separate process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3fc2640668db5a714dcb9a0de5b946c89e2776" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;include&lt;/code&gt; field to only apply the loader modules that actually need to be transformed by it:</source>
          <target state="translated">使用 &lt;code&gt;include&lt;/code&gt; 字段仅应用实际需要由其转换的加载器模块：</target>
        </trans-unit>
        <trans-unit id="6b4ec7e4501faec29866e0df60d895bdba3b09ce" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;optimization.emitOnErrors&lt;/code&gt; to emit assets whenever there are errors while compiling. This ensures that erroring assets are emitted. Critical errors are emitted into the generated code and will cause errors at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbfaa0dda995af3ea65e98d5191ff5346c703c6" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;optimization.noEmitOnErrors&lt;/code&gt; to skip the emitting phase whenever there are errors while compiling. This ensures that no erroring assets are emitted. The &lt;code&gt;emitted&lt;/code&gt; flag in the stats is &lt;code&gt;false&lt;/code&gt; for all assets.</source>
          <target state="translated">编译时出现错误时，请使用 &lt;code&gt;optimization.noEmitOnErrors&lt;/code&gt; 跳过发射阶段。这样可以确保不会发出错误的资产。该 &lt;code&gt;emitted&lt;/code&gt; 的统计标志是 &lt;code&gt;false&lt;/code&gt; 的所有资产。</target>
        </trans-unit>
        <trans-unit id="2c737b0d8095d696499c652bd5e9095b5f62e204" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;output&lt;/code&gt; option to change the filenames of specific plugin instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3913a299d09b9025220f8c50bb09dcf00287f0af" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;ts-loader&lt;/code&gt; in &lt;code&gt;happyPackMode: true&lt;/code&gt; / &lt;code&gt;transpileOnly: true&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;happyPackMode: true&lt;/code&gt; / &lt;code&gt;transpileOnly: true&lt;/code&gt; 使用 &lt;code&gt;ts-loader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bdf28e3536c978c9d5da7c7b4624bdcdb610692" translate="yes" xml:space="preserve">
          <source>Use the correct separators. I.e. &lt;code&gt;path.resolve(__dirname, &quot;app/folder&quot;)&lt;/code&gt; or &lt;code&gt;path.join(__dirname, &quot;app&quot;, &quot;folder&quot;)&lt;/code&gt;.</source>
          <target state="translated">使用正确的分隔符。即 &lt;code&gt;path.resolve(__dirname, &quot;app/folder&quot;)&lt;/code&gt; 或 &lt;code&gt;path.join(__dirname, &quot;app&quot;, &quot;folder&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22307d7e5f9df5400081ef23d6fd7ceb1e6e265c" translate="yes" xml:space="preserve">
          <source>Use the correct separators. I.e. &lt;code&gt;path.resolve(__dirname, 'app/folder')&lt;/code&gt; or &lt;code&gt;path.join(__dirname, 'app', 'folder')&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb44873658f96e0f3ed2aaf4b748dd1802eafd11" translate="yes" xml:space="preserve">
          <source>Use the latest webpack version. We are always making performance improvements. The latest recommended version of webpack is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7379d2ab48a8375408752658fb495bfcc4fe6e48" translate="yes" xml:space="preserve">
          <source>Use the latest webpack version. We are always making performance improvements. The latest stable version of webpack is:</source>
          <target state="translated">使用最新的webpack版本。我们一直在改进性能。最新的webpack稳定版本是。</target>
        </trans-unit>
        <trans-unit id="3794e2f2ca3183e0a2f1f8a8ff68c88df08489dd" translate="yes" xml:space="preserve">
          <source>Use these features when appropriate.</source>
          <target state="translated">适当时使用这些功能。</target>
        </trans-unit>
        <trans-unit id="44fb7f40b16f86e3c9d1a67800ba6d4f22b2a36d" translate="yes" xml:space="preserve">
          <source>Use this loader only for expensive operations!</source>
          <target state="translated">只在昂贵的操作中使用此装载机!</target>
        </trans-unit>
        <trans-unit id="23a2d77df48f7534d7a83a9705ec7e9b4fd634be" translate="yes" xml:space="preserve">
          <source>Use this option to generate a JSON file containing webpack &quot;records&quot; -- pieces of data used to store module identifiers across multiple builds. You can use this file to track how modules change between builds. To generate one, simply specify a location:</source>
          <target state="translated">使用这个选项可以生成一个包含webpack &quot;记录 &quot;的JSON文件--用于存储多个构建中的模块标识符的数据片段。你可以使用这个文件来跟踪模块在构建之间的变化。要生成一个文件,只需指定一个位置。</target>
        </trans-unit>
        <trans-unit id="9610bd59c5133421c8f3e6dfbbb7d9634045caa3" translate="yes" xml:space="preserve">
          <source>Use webpack's watch mode. Don't use other tools to watch your files and invoke webpack. The built in watch mode will keep track of timestamps and passes this information to the compilation for cache invalidation.</source>
          <target state="translated">使用webpack的监视模式。不要使用其他工具来监视你的文件并调用webpack。内置的监视模式会跟踪时间戳,并将这些信息传递给编译,以便缓存无效。</target>
        </trans-unit>
        <trans-unit id="c32f58919dcf2dfd0b16dcfb070b3f7cbbf098d3" translate="yes" xml:space="preserve">
          <source>Use webpack's watch mode. Don't use other tools to watch your files and invoke webpack. The built-in watch mode will keep track of timestamps and passes this information to the compilation for cache invalidation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b84f3bf4e0289f82295c4c1d5a1ffdb875f6fdb" translate="yes" xml:space="preserve">
          <source>Use with Babel (or other JS transpilers)</source>
          <target state="translated">与Babel(或其他JS转码器)一起使用</target>
        </trans-unit>
        <trans-unit id="35ca8091dbc2b566405680dbf80285e8b18d7b4b" translate="yes" xml:space="preserve">
          <source>UseEntry</source>
          <target state="translated">UseEntry</target>
        </trans-unit>
        <trans-unit id="e38960e325cc0f68417b6b1b71d40ee9740591d0" translate="yes" xml:space="preserve">
          <source>Used for migrating from webpack 1 to 2</source>
          <target state="translated">用于从webpack 1迁移到2。</target>
        </trans-unit>
        <trans-unit id="7f595079968f3d9213466d2c5e54c9237bc84032" translate="yes" xml:space="preserve">
          <source>Useful when a source file does not contain exports or something does not export.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5625e334052514a17c6f9f3ca6f42e9e6e306a18" translate="yes" xml:space="preserve">
          <source>Users have a choice between two CLI packages:</source>
          <target state="translated">用户可以在两个CLI包中选择。</target>
        </trans-unit>
        <trans-unit id="9c479f2d1ca6fe32e92cc9e767302871801f04b1" translate="yes" xml:space="preserve">
          <source>Users may also specify a length for the computed hash.</source>
          <target state="translated">用户也可以为计算出的哈希值指定一个长度。</target>
        </trans-unit>
        <trans-unit id="e34d429e95d5b4e9d20547a9fa999b4ed8b00884" translate="yes" xml:space="preserve">
          <source>Uses ES modules syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387e02566971155ce3659e487753ddfaa5b359a4" translate="yes" xml:space="preserve">
          <source>Uses Terser to minify the JS in your project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3cdd5350c2b6106de1f562e722761ec8a15825" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;&lt;code&gt;mini-css-extract-plugin&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c166b3ef0053607efc557de01ce674fe87ed69" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://github.com/postcss/sugarss&quot;&gt;&lt;code&gt;SugarSS&lt;/code&gt;&lt;/a&gt; syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c309e3d87f058ff51546089072d4faec76a7b4" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;loaders#thisemiterror&quot;&gt;this.emitError&lt;/a&gt;. Will report the errors without interrupting module's compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f19a1425f83492a6dc46912f460f17b0da49482" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;...&lt;/code&gt; syntax allows you to extend &lt;a href=&quot;#attributes&quot;&gt;default supported tags and attributes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c2660241dfe28d85f8e01f088c35d9527a0f22" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Function&lt;/code&gt; notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991744bf0a475de8d6b3da6d73264b6855cacd5d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;Object&lt;/code&gt; notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be0faa338209b9e368cd67cf97e4d24ab36aba4d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;callback&lt;/code&gt; (in async mode). Pass an error to the callback will also cause module compilation failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ae43a361f7f98f7a19d9d0f97e82b984f74fce" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;enhanced-resolve&lt;/code&gt;, webpack can resolve three kinds of file paths:</source>
          <target state="translated">使用 &lt;code&gt;enhanced-resolve&lt;/code&gt; ，webpack可以解析三种文件路径：</target>
        </trans-unit>
        <trans-unit id="592ad84b68126878fbfdffb1f8716ad6233721a2" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;eval()&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;eval()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c34744d5c3820008c58709f64e15c880454dd825" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;externals&lt;/code&gt; to avoid bundling &lt;code&gt;lodash&lt;/code&gt;, so the consumer is required to load it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b29040b482ffe5f51c894270bc7be4230de55f" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;false&lt;/code&gt; value increase performance because we avoid parsing &lt;strong&gt;CSS Modules&lt;/strong&gt; features, it will be useful for developers who use vanilla css or use other technologies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1933541d83ea871a9366e228923568909cbe9007" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;local&lt;/code&gt; value requires you to specify &lt;code&gt;:global&lt;/code&gt; classes. Using &lt;code&gt;global&lt;/code&gt; value requires you to specify &lt;code&gt;:local&lt;/code&gt; classes. Using &lt;code&gt;pure&lt;/code&gt; value requires selectors must contain at least one local class or id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62baa148726c0cc221de557fa5a44fdc43b80c8d" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;maxSize&lt;/code&gt; (either globally &lt;code&gt;optimization.splitChunks.maxSize&lt;/code&gt; per cache group &lt;code&gt;optimization.splitChunks.cacheGroups[x].maxSize&lt;/code&gt; or for the fallback cache group &lt;code&gt;optimization.splitChunks.fallbackCacheGroup.maxSize&lt;/code&gt;) tells webpack to try to split chunks bigger than &lt;code&gt;maxSize&lt;/code&gt; bytes into smaller parts. Parts will be at least &lt;code&gt;minSize&lt;/code&gt; (next to &lt;code&gt;maxSize&lt;/code&gt;) in size. The algorithm is deterministic and changes to the modules will only have local impact. So that it is usable when using long term caching and doesn't require records. &lt;code&gt;maxSize&lt;/code&gt; is only a hint and could be violated when modules are bigger than &lt;code&gt;maxSize&lt;/code&gt; or splitting would violate &lt;code&gt;minSize&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe814a133302a983806b7c5cad0cad9106094c3b" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;maxSize&lt;/code&gt; (either globally &lt;code&gt;optimization.splitChunks.maxSize&lt;/code&gt; per cache group &lt;code&gt;optimization.splitChunks.cacheGroups[x].maxSize&lt;/code&gt; or for the fallback cache group &lt;code&gt;optimization.splitChunks.fallbackCacheGroup.maxSize&lt;/code&gt;) tells webpack to try to split chunks bigger than &lt;code&gt;maxSize&lt;/code&gt; into smaller parts. Parts will be at least &lt;code&gt;minSize&lt;/code&gt; (next to &lt;code&gt;maxSize&lt;/code&gt;) in size. The algorithm is deterministic and changes to the modules will only have local impact. So that it is usable when using long term caching and doesn't require records. &lt;code&gt;maxSize&lt;/code&gt; is only a hint and could be violated when modules are bigger than &lt;code&gt;maxSize&lt;/code&gt; or splitting would violate &lt;code&gt;minSize&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;maxSize&lt;/code&gt; （无论是全球 &lt;code&gt;optimization.splitChunks.maxSize&lt;/code&gt; 每个高速缓存组 &lt;code&gt;optimization.splitChunks.cacheGroups[x].maxSize&lt;/code&gt; 或回退缓存组 &lt;code&gt;optimization.splitChunks.fallbackCacheGroup.maxSize&lt;/code&gt; ）讲述的WebPack尝试分割块比更大 &lt;code&gt;maxSize&lt;/code&gt; 成较小的部分。部件的大小至少应为 &lt;code&gt;minSize&lt;/code&gt; （在 &lt;code&gt;maxSize&lt;/code&gt; 之后）。该算法是确定性的，对模块的更改只会产生局部影响。这样，在使用长期缓存时就可以使用它并且不需要记录。 &lt;code&gt;maxSize&lt;/code&gt; 只是一个提示，当模块大于 &lt;code&gt;maxSize&lt;/code&gt; 时可能会被违反或拆分会违反 &lt;code&gt;minSize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="740b61df4875ad440f461c1b5ae6eff138988a5c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;node&lt;/code&gt; preset will not bundle built-in modules and treats them as external and loads them via &lt;code&gt;require()&lt;/code&gt; when used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7745d5bf45766a5bdfd3a5a65bd99defea5262" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;throw&lt;/code&gt; (or other uncaught exception). Throwing an error while a loader is running will cause current module compilation failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb388b7faf3e23b214a33a0d5906abfaadad16a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;watching.invalidate&lt;/code&gt;, you can manually invalidate the current compiling round, without stopping the watch process:</source>
          <target state="translated">使用 &lt;code&gt;watching.invalidate&lt;/code&gt; ，您可以手动使当前的编译回合无效，而无需停止监视过程：</target>
        </trans-unit>
        <trans-unit id="60644ada565ccf86b1df97c9413263c37b65e43a" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;webpackPreload&lt;/code&gt; incorrectly can actually hurt performance, so be careful when using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61da05151fc0b4111508fca3f92835f1a473106b" translate="yes" xml:space="preserve">
          <source>Using Brotli</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4d9b578d4cbb835fbc9838e1bc9660f731175c" translate="yes" xml:space="preserve">
          <source>Using Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4864b84ad761309fe1200c9530d9247e825fecc4" translate="yes" xml:space="preserve">
          <source>Using Loaders</source>
          <target state="translated">使用加载器</target>
        </trans-unit>
        <trans-unit id="5855328d71e4db4f6dd615c5093f235d0d05f9d0" translate="yes" xml:space="preserve">
          <source>Using Records</source>
          <target state="translated">使用记录</target>
        </trans-unit>
        <trans-unit id="1dca7cbbab7fbff23530018b99c23edf26c5aec3" translate="yes" xml:space="preserve">
          <source>Using Third Party Libraries</source>
          <target state="translated">使用第三方库</target>
        </trans-unit>
        <trans-unit id="8824c9d16039f13af26e6689d843673db147de08" translate="yes" xml:space="preserve">
          <source>Using Watch Mode</source>
          <target state="translated">使用手表模式</target>
        </trans-unit>
        <trans-unit id="dcf2baa87ac7edb1ea2511e3e5ed43f68568b57c" translate="yes" xml:space="preserve">
          <source>Using Zopfli</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9017fb4a027adbde133dec30bfbabf7edbf77ed6" translate="yes" xml:space="preserve">
          <source>Using a Configuration</source>
          <target state="translated">使用配置</target>
        </trans-unit>
        <trans-unit id="07f359d92bfecc39a52b2101c2e2de1b8742bd60" translate="yes" xml:space="preserve">
          <source>Using an alternative to &lt;code&gt;file-loader&lt;/code&gt; is enabled via the &lt;code&gt;fallback&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6178a9f37c34f2b7890f00cce3ba62fe11247e9a" translate="yes" xml:space="preserve">
          <source>Using both &lt;code&gt;CSS Module&lt;/code&gt; functionality as well as SCSS variables directly in JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d4e6efe497b458825a8cf329561b94dbb8de49" translate="yes" xml:space="preserve">
          <source>Using cache directly from eslint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786d20a41b7020b1c743e573c5784e25c770332d" translate="yes" xml:space="preserve">
          <source>Using class exported by &lt;code&gt;CustomServer.js&lt;/code&gt;, a custom WebSocket server implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; client:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516aa555e14c6fd98d2549428ce368ad3f773027" translate="yes" xml:space="preserve">
          <source>Using context replacement module for date-fns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9706633cff4e06c11d980c44e48ba7953e61907d" translate="yes" xml:space="preserve">
          <source>Using custom minifier &lt;a href=&quot;https://github.com/css/csso&quot;&gt;csso&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04882b482b4707c71134fe4969bffc50584b937e" translate="yes" xml:space="preserve">
          <source>Using custom minifier &lt;a href=&quot;https://github.com/jakubpawlowicz/clean-css&quot;&gt;clean-css&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1659fbe0af74bd202b9666719b03cd69f763eda7" translate="yes" xml:space="preserve">
          <source>Using custom, compatible WebSocket client and server implementations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a246793c7f0a39182d1aa8715b1258b8f768f028" translate="yes" xml:space="preserve">
          <source>Using entry name:</source>
          <target state="translated">使用条目名称。</target>
        </trans-unit>
        <trans-unit id="472a33aa02e08edf1df7f17782b30f24d454043d" translate="yes" xml:space="preserve">
          <source>Using filter functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="441250bf314d4863c43a078bd39c6b6a70ad2c6a" translate="yes" xml:space="preserve">
          <source>Using function to return the filename:</source>
          <target state="translated">使用函数返回文件名。</target>
        </trans-unit>
        <trans-unit id="86144617cdddceef8ae1a3144422cf66197f56c7" translate="yes" xml:space="preserve">
          <source>Using function you can insert the styles into a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot&quot;&gt;ShadowRoot&lt;/a&gt;, e.g</source>
          <target state="translated">使用函数，您可以将样式插入&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot&quot;&gt;ShadowRoot中&lt;/a&gt;，例如</target>
        </trans-unit>
        <trans-unit id="3d0d49e6e3cd8df3d8c1dbd9691bc35d8fa6302a" translate="yes" xml:space="preserve">
          <source>Using hashes based on each chunks' content:</source>
          <target state="translated">根据每个chunks的内容使用哈希。</target>
        </trans-unit>
        <trans-unit id="519add25ba62dcd513c51cda4eb83bad8ae41195" translate="yes" xml:space="preserve">
          <source>Using hashes generated for extracted content:</source>
          <target state="translated">使用为提取的内容生成的哈希值。</target>
        </trans-unit>
        <trans-unit id="4693e82c52452a804721ac31b4bd67215e75eb6e" translate="yes" xml:space="preserve">
          <source>Using hashes generated from the generated content:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7eaf4ab9e3973e2bee8828b33d1738fc29e3c6" translate="yes" xml:space="preserve">
          <source>Using internal chunk id:</source>
          <target state="translated">使用内部chunk id。</target>
        </trans-unit>
        <trans-unit id="700c14ddf1b1e6edd056f1272f178fca24f039ef" translate="yes" xml:space="preserve">
          <source>Using it asynchronously may not have the expected effect.</source>
          <target state="translated">异步使用可能达不到预期效果。</target>
        </trans-unit>
        <trans-unit id="3200ec535332fa85a3bbf6cae69a6073171e40a3" translate="yes" xml:space="preserve">
          <source>Using it in an async function may not have the expected effect.</source>
          <target state="translated">在异步函数中使用它可能不会有预期的效果。</target>
        </trans-unit>
        <trans-unit id="f42e9968a263682c986dcf34ddb43fad454c41b0" translate="yes" xml:space="preserve">
          <source>Using javascript as entrypoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f37283471b990c6e063058bb25d6de2808d4c3" translate="yes" xml:space="preserve">
          <source>Using nib with stylus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cff08e29703580b7ac86809f0f79615642a204" translate="yes" xml:space="preserve">
          <source>Using npm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ceb1cc3d8510d4682fc763f7e2829dbfbad46e" translate="yes" xml:space="preserve">
          <source>Using other Configuration Languages</source>
          <target state="translated">使用其他配置语言</target>
        </trans-unit>
        <trans-unit id="f3c8dad7dd1400a4fb43c3cb7e34a6fd72165a56" translate="yes" xml:space="preserve">
          <source>Using path to &lt;code&gt;CustomClient.js&lt;/code&gt;, a custom WebSocket client implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; server:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f58ff12aec9e1a423859725083d77e9e8da7b5" translate="yes" xml:space="preserve">
          <source>Using path to &lt;code&gt;CustomServer.js&lt;/code&gt;, a custom WebSocket server implementation, along with the compatible &lt;code&gt;'ws'&lt;/code&gt; client:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c2cac5921f99904e0b4511c5a819676e6bd84b" translate="yes" xml:space="preserve">
          <source>Using plugins in your webpack config is straightforward - however, there are many use cases that are worth further exploration. &lt;a href=&quot;plugins&quot;&gt;Learn more about them here&lt;/a&gt;.</source>
          <target state="translated">在Webpack配置中使用插件非常简单-但是，有许多用例值得进一步探讨。&lt;a href=&quot;plugins&quot;&gt;在此处了解有关它们的更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="765412d29ec5d2eee3c85edab48a13e4ed4b7c64" translate="yes" xml:space="preserve">
          <source>Using plugins in your webpack configuration is straightforward. However, there are many use cases that are worth further exploration. &lt;a href=&quot;plugins&quot;&gt;Learn more about them here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b8fdfd9b45b02f1be508c46368a7a4c4e384c6" translate="yes" xml:space="preserve">
          <source>Using preloaded or inlined CSS</source>
          <target state="translated">使用预加载或内嵌的CSS</target>
        </trans-unit>
        <trans-unit id="18988fc8caaba44179708163dbb1aad1050b3dcd" translate="yes" xml:space="preserve">
          <source>Using regular expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a981b01629c77966f89ccc6d2a2de1a77159b1fa" translate="yes" xml:space="preserve">
          <source>Using some kind of indentation makes bundles look prettier, but will cause issues with multi-line strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6518a5f2dc3744728446f85190c9fd202a9294a6" translate="yes" xml:space="preserve">
          <source>Using source maps</source>
          <target state="translated">使用源地图</target>
        </trans-unit>
        <trans-unit id="80648489b1305d89e61e8b827ce72a3324581812" translate="yes" xml:space="preserve">
          <source>Using supported &lt;code&gt;devtool&lt;/code&gt; values enable source map generation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800f2b20749e8702f136a958be32bb1a50fe2d6b" translate="yes" xml:space="preserve">
          <source>Using the &lt;a href=&quot;module-methods#magic-comments&quot;&gt;&lt;code&gt;webpackInclude&lt;/code&gt; and &lt;code&gt;webpackExclude&lt;/code&gt;&lt;/a&gt; options allows you to add regex patterns that reduce the number of files that webpack will bundle for this import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467ce8c78e13c791befca2fb2c3b67684c469445" translate="yes" xml:space="preserve">
          <source>Using the unique hash generated for every build:</source>
          <target state="translated">使用为每次构建生成的唯一哈希值。</target>
        </trans-unit>
        <trans-unit id="6536132a79bf8af96ab8bfdefdbfab7d325013b8" translate="yes" xml:space="preserve">
          <source>Using these inline directives while declaring your imports allows webpack to output &amp;ldquo;Resource Hint&amp;rdquo; which tells the browser that for:</source>
          <target state="translated">在声明您的导入时使用这些内联指​​令可以使webpack输出&amp;ldquo; Resource Hint&amp;rdquo;，它告诉浏览器：</target>
        </trans-unit>
        <trans-unit id="d07483f679e606d7fb7e14d9533f6ea9b743b89b" translate="yes" xml:space="preserve">
          <source>Using this callback we can dynamically redirect requests to a new location:</source>
          <target state="translated">使用这个回调,我们可以动态地将请求重定向到一个新的位置。</target>
        </trans-unit>
        <trans-unit id="c37734e5b4af8b8564bb62e88c0cf685f75a0550" translate="yes" xml:space="preserve">
          <source>Using this will &lt;strong&gt;override the default array&lt;/strong&gt;, meaning that webpack will no longer try to resolve modules using the default extensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1583a8e9f680bc09e6e3a1d5f218c361dd96f3b1" translate="yes" xml:space="preserve">
          <source>Using this will &lt;strong&gt;override the default array&lt;/strong&gt;, meaning that webpack will no longer try to resolve modules using the default extensions. For modules that are imported with their extension, e.g. &lt;code&gt;import SomeFile from &quot;./somefile.ext&quot;&lt;/code&gt;, to be properly resolved, a string containing &quot;*&quot; must be included in the array.</source>
          <target state="translated">使用它会&lt;strong&gt;覆盖默认数组&lt;/strong&gt;，这意味着webpack将不再尝试使用默认扩展名解析模块。对于以扩展名导入的模块，例如 &lt;code&gt;import SomeFile from &quot;./somefile.ext&quot;&lt;/code&gt; ，要对其进行正确解析，必须在数组中包含一个包含&amp;ldquo; *&amp;rdquo;的字符串。</target>
        </trans-unit>
        <trans-unit id="5d3bed423980b935928474859e7c216545e36176" translate="yes" xml:space="preserve">
          <source>Using webpack's resolver, you can import any file type. You just need a loader that exports valid Less code. Often, you will also want to set the &lt;code&gt;issuer&lt;/code&gt; condition to ensure that this rule is only applied on imports originating from Less files:</source>
          <target state="translated">使用webpack的解析器，您可以导入任何文件类型。您只需要一个导出有效的Less代码的加载程序。通常，您还需要设置 &lt;code&gt;issuer&lt;/code&gt; 条件，以确保此规则仅适用于源自Less文件的导入：</target>
        </trans-unit>
        <trans-unit id="c7564130d0af85566bd3d5159841f2a0c0d22b57" translate="yes" xml:space="preserve">
          <source>Using webpack-dev-middleware</source>
          <target state="translated">使用webpack-dev-middleware</target>
        </trans-unit>
        <trans-unit id="929b482a17818f7e179581abb73aad4f5bba1a17" translate="yes" xml:space="preserve">
          <source>Using webpack-dev-server</source>
          <target state="translated">使用webpack-dev-server</target>
        </trans-unit>
        <trans-unit id="56404f43d6b2ed55415737b5df747c000d609a1b" translate="yes" xml:space="preserve">
          <source>Using webpackPreload incorrectly can actually hurt performance, so be careful when using it.</source>
          <target state="translated">错误地使用webpackPreload实际上会损害性能,所以使用时要小心。</target>
        </trans-unit>
        <trans-unit id="6a1672b1ef280cd31470e59f7fa4d154c08f1d09" translate="yes" xml:space="preserve">
          <source>Using yarn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1727983f3b0fbe806fa9f0e578aa1c2905c45395" translate="yes" xml:space="preserve">
          <source>Usually your projects will need to extend this functionality, for this you can create a &lt;code&gt;webpack.config.js&lt;/code&gt; file in the root folder and webpack will automatically use it.</source>
          <target state="translated">通常，您的项目将需要扩展此功能，为此，您可以在根文件夹中创建一个 &lt;code&gt;webpack.config.js&lt;/code&gt; 文件，然后webpack会自动使用它。</target>
        </trans-unit>
        <trans-unit id="130ffa8a755784a8fff6c2f1afcbd6b0f4165b82" translate="yes" xml:space="preserve">
          <source>Usually, it's recommended to extract the style sheets into a dedicated file in production using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;. This way your styles are not dependent on JavaScript.</source>
          <target state="translated">通常，建议使用&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;将样式表提取到生产中的专用文件中。这样，您的样式就不必依赖JavaScript。</target>
        </trans-unit>
        <trans-unit id="230c0f6708f899e4998611800c671e1627e66bfb" translate="yes" xml:space="preserve">
          <source>Usually, it's recommended to extract the style sheets into a dedicated file in production using the &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;. This way your styles are not dependent on JavaScript:</source>
          <target state="translated">通常，建议使用&lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;MiniCssExtractPlugin&lt;/a&gt;将样式表提取到生产中的专用文件中。这样，您的样式就不会依赖JavaScript：</target>
        </trans-unit>
        <trans-unit id="1b0e3aa76a2d97a44a5da8cd5260f85eb167e2d5" translate="yes" xml:space="preserve">
          <source>Variable: as a global variable made available by a &lt;code&gt;script&lt;/code&gt; tag (&lt;code&gt;libraryTarget:'var'&lt;/code&gt;).</source>
          <target state="translated">变量：作为全局变量，可以通过 &lt;code&gt;script&lt;/code&gt; 标签使用（ &lt;code&gt;libraryTarget:'var'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c1f31ae1f6a8b752e2c38c54066881ab58d1532d" translate="yes" xml:space="preserve">
          <source>Variables coming from &lt;code&gt;process.env&lt;/code&gt; are always strings.</source>
          <target state="translated">来自 &lt;code&gt;process.env&lt;/code&gt; 的变量始终是字符串。</target>
        </trans-unit>
        <trans-unit id="eab065a9a4d4690f9b81041691e90f286b2d778b" translate="yes" xml:space="preserve">
          <source>Verify that webpack is not being notified of changes by running webpack with the --progress flag. If progress shows on save but no files are outputted, it is likely a configuration issue, not a file watching issue.</source>
          <target state="translated">通过使用--progress标志运行webpack来验证webpack是否没有被通知更改。如果保存时有进度显示,但没有文件输出,那可能是配置问题,而不是文件观察问题。</target>
        </trans-unit>
        <trans-unit id="2f649eb36cd354b29c703f5db06d75d8bb5d8758" translate="yes" xml:space="preserve">
          <source>Verify that you have enough available watchers in your system. If this value is too low, the file watcher in Webpack won't recognize the changes:</source>
          <target state="translated">验证你的系统中是否有足够的可用监视器。如果这个值太低,Webpack中的文件监视器将无法识别这些变化。</target>
        </trans-unit>
        <trans-unit id="a9ad94597042a491f4c55e15e6796d1220ef197e" translate="yes" xml:space="preserve">
          <source>Version 2 of webpack supports ES6 module syntax natively, meaning you can use &lt;code&gt;import&lt;/code&gt; and &lt;code&gt;export&lt;/code&gt; without a tool like babel to handle this for you. Keep in mind that you will still probably need babel for other ES6+ features. The following methods are supported by webpack:</source>
          <target state="translated">webpack的版本2本机支持ES6模块语法，这意味着您可以使用 &lt;code&gt;import&lt;/code&gt; 和 &lt;code&gt;export&lt;/code&gt; 而无需像babel这样的工具来为您处理。请记住，您可能仍然需要babel才能使用其他ES6 +功能。webpack支持以下方法：</target>
        </trans-unit>
        <trans-unit id="b9e3937b398d8372e385fec3cba5f2c5a3933b47" translate="yes" xml:space="preserve">
          <source>Version of the cache data. Different versions won't allow to reuse the cache and override existing content. Update the version when configuration changed in a way which doesn't allow to reuse cache. This will invalidate the cache.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b716503145807543ea3a2f18e364920799166f3a" translate="yes" xml:space="preserve">
          <source>Very detailed debugging info</source>
          <target state="translated">非常详细的调试信息</target>
        </trans-unit>
        <trans-unit id="24756aad73cd051a11a3ab3c84b08e6eccd66d67" translate="yes" xml:space="preserve">
          <source>Via the Node.js API</source>
          <target state="translated">通过Node.js API</target>
        </trans-unit>
        <trans-unit id="a78ad277616170813560c5fab7aabae8ac9cfb23" translate="yes" xml:space="preserve">
          <source>Vim</source>
          <target state="translated">Vim</target>
        </trans-unit>
        <trans-unit id="5761ff1a7f5b6160ce8e6d3a6a69b9769b16ee3a" translate="yes" xml:space="preserve">
          <source>Vue: &lt;a href=&quot;https://alexjoverm.github.io/2017/07/16/Lazy-load-in-Vue-using-Webpack-s-code-splitting/&quot;&gt;Lazy Load in Vue using Webpack's code splitting&lt;/a&gt;</source>
          <target state="translated">Vue：&lt;a href=&quot;https://alexjoverm.github.io/2017/07/16/Lazy-load-in-Vue-using-Webpack-s-code-splitting/&quot;&gt;使用Webpack的代码拆分在Vue中进行延迟加载&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5afa9363b9313213d774ca18cfaadf46a10d5e78" translate="yes" xml:space="preserve">
          <source>Vue: &lt;a href=&quot;https://vuedose.tips/tips/dynamic-imports-in-vue-js-for-better-performance/&quot;&gt;Dynamic Imports in Vue.js for better performance&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbdcc7862fb1c14cc7943c7d3048725c557d8d4" translate="yes" xml:space="preserve">
          <source>WASM &lt;code&gt;import&lt;/code&gt; section</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3e8c2c2fbe1c9fcd99b8675926cd59a846aa38" translate="yes" xml:space="preserve">
          <source>Want to rapidly generate webpack configuration file for your project requirements with few clicks away.</source>
          <target state="translated">想要快速生成符合项目要求的webpack配置文件,只需点击几下即可。</target>
        </trans-unit>
        <trans-unit id="3f5d8257134cdb4ea1e1eef0dd093276a302a5ad" translate="yes" xml:space="preserve">
          <source>Warn for dynamic dependencies: &lt;code&gt;wrappedContextCritical: true&lt;/code&gt;.</source>
          <target state="translated">警告动态依赖项： &lt;code&gt;wrappedContextCritical: true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="201d07914ddb690a7ce7fc96defe98625d72e806" translate="yes" xml:space="preserve">
          <source>Warns to console about attributes from inside the &lt;code&gt;&amp;lt;svg /&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">警告从 &lt;code&gt;&amp;lt;svg /&amp;gt;&lt;/code&gt; 内部安慰属性。</target>
        </trans-unit>
        <trans-unit id="1e2aae0cdb6f3a79d62e669c768545f8953beef6" translate="yes" xml:space="preserve">
          <source>Watch Options</source>
          <target state="translated">观察选项</target>
        </trans-unit>
        <trans-unit id="106bff2cd8202eecc0e264527e1aa359ef59b79d" translate="yes" xml:space="preserve">
          <source>Watch and WatchOptions</source>
          <target state="translated">手表和手表选项</target>
        </trans-unit>
        <trans-unit id="2bc4d4d7a4c4d5f9a1769fc308fa26c2a0867f00" translate="yes" xml:space="preserve">
          <source>Watch compilation has been invalidated.</source>
          <target state="translated">观察汇编已经失效。</target>
        </trans-unit>
        <trans-unit id="427cebc1061b0e5b5851880b9f0dfb68e6f2a55d" translate="yes" xml:space="preserve">
          <source>Watch for file changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b437f78f9d520f5fcbaf0f0382cb781be53b36aa" translate="yes" xml:space="preserve">
          <source>Watch mode has stopped.</source>
          <target state="translated">手表模式已经停止。</target>
        </trans-unit>
        <trans-unit id="1cd42ab7e86a7c69fdc818850cdaebf6ab4df744" translate="yes" xml:space="preserve">
          <source>Watch the filesystem for changes</source>
          <target state="translated">观察文件系统的变化</target>
        </trans-unit>
        <trans-unit id="95597606870fb7c27f696ca54f1d8fcb4ed539c0" translate="yes" xml:space="preserve">
          <source>WatchIgnorePlugin</source>
          <target state="translated">WatchIgnorePlugin</target>
        </trans-unit>
        <trans-unit id="96d9e027ee25023055aac45ad3d6c069c69e6c19" translate="yes" xml:space="preserve">
          <source>Watching</source>
          <target state="translated">Watching</target>
        </trans-unit>
        <trans-unit id="6d03d61c1bf166452be4ae04b24c13ac9975c1c5" translate="yes" xml:space="preserve">
          <source>We Don't Work Offline Now</source>
          <target state="translated">我们现在不离线工作</target>
        </trans-unit>
        <trans-unit id="f430b691523ff1d9375dbaa59f361157ef2f8356" translate="yes" xml:space="preserve">
          <source>We also need to adjust our &lt;code&gt;package.json&lt;/code&gt; file in order to make sure we mark our package as &lt;code&gt;private&lt;/code&gt;, as well as removing the &lt;code&gt;main&lt;/code&gt; entry. This is to prevent an accidental publish of your code.</source>
          <target state="translated">我们还需要调整 &lt;code&gt;package.json&lt;/code&gt; 文件，以确保将包标记为 &lt;code&gt;private&lt;/code&gt; ，并删除 &lt;code&gt;main&lt;/code&gt; 条目。这是为了防止意外发布您的代码。</target>
        </trans-unit>
        <trans-unit id="b467e0eb44fa319c7ebd09d36ac9fb75025a6e72" translate="yes" xml:space="preserve">
          <source>We assume at some point packages are no longer being maintained, but they are continued to be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e659eafed1e06cd2eccf15fc3f46a5e90a86c159" translate="yes" xml:space="preserve">
          <source>We assume the following fallback make sense in general:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f13113c31128431fc9d0a255c1789dcd5c5794" translate="yes" xml:space="preserve">
          <source>We automatically inject the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt;&lt;code&gt;fibers&lt;/code&gt;&lt;/a&gt; package (setup &lt;code&gt;sassOptions.fiber&lt;/code&gt;) if is possible (i.e. you need install the &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot;&gt;&lt;code&gt;fibers&lt;/code&gt;&lt;/a&gt; package).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f11e7092e64e702c19ee5bf892367a156e5b70" translate="yes" xml:space="preserve">
          <source>We can also pass an array of file paths to the &lt;code&gt;entry&lt;/code&gt; property which creates what is known as a &lt;strong&gt;&quot;multi-main entry&quot;&lt;/strong&gt;. This is useful when you would like to inject multiple dependent files together and graph their dependencies into one &quot;chunk&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b83254e75e5a19d5c4cfaa006d12f741f4d823" translate="yes" xml:space="preserve">
          <source>We can also use the &lt;code&gt;ProvidePlugin&lt;/code&gt; to expose a single export of a module by configuring it with an &quot;array path&quot; (e.g. &lt;code&gt;[module, child, ...children?]&lt;/code&gt;). So let's imagine we only wanted to provide the &lt;code&gt;join&lt;/code&gt; method from &lt;code&gt;lodash&lt;/code&gt; wherever it's invoked:</source>
          <target state="translated">我们还可以使用 &lt;code&gt;ProvidePlugin&lt;/code&gt; 通过使用&amp;ldquo;数组路径&amp;rdquo;（例如 &lt;code&gt;[module, child, ...children?]&lt;/code&gt; ）配置模块来公开模块的单个导出。因此，让我们想象一下，无论在哪里调用它，我们都只想提供来自 &lt;code&gt;lodash&lt;/code&gt; 的 &lt;code&gt;join&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="db530b33066f02b7472ab75814989f01e865334c" translate="yes" xml:space="preserve">
          <source>We can now see that our &lt;code&gt;main&lt;/code&gt; bundle does not contain &lt;code&gt;vendor&lt;/code&gt; code from &lt;code&gt;node_modules&lt;/code&gt; directory and is down in size to &lt;code&gt;240 bytes&lt;/code&gt;!</source>
          <target state="translated">现在我们可以看到我们的 &lt;code&gt;main&lt;/code&gt; 捆绑包不包含来自 &lt;code&gt;node_modules&lt;/code&gt; 目录的 &lt;code&gt;vendor&lt;/code&gt; 代码，并且大小减小到 &lt;code&gt;240 bytes&lt;/code&gt; ！</target>
        </trans-unit>
        <trans-unit id="fe8c7c24676ac8c961e015d8356f493d6e9b7176" translate="yes" xml:space="preserve">
          <source>We can see that both builds yielded &lt;code&gt;55e79e5927a639d21a1b&lt;/code&gt; in the &lt;code&gt;vendor&lt;/code&gt; bundle's filename.</source>
          <target state="translated">我们可以看到，两个版本在 &lt;code&gt;vendor&lt;/code&gt; 捆绑包的文件名中都产生了 &lt;code&gt;55e79e5927a639d21a1b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="751dd31f009f8d6497b7e09f7c2379b83804fcb7" translate="yes" xml:space="preserve">
          <source>We can see that the error also contains a reference to the file (&lt;code&gt;print.js&lt;/code&gt;) and line number (2) where the error occurred. This is great because now we know exactly where to look in order to fix the issue.</source>
          <target state="translated">我们可以看到该错误还包含对文件（ &lt;code&gt;print.js&lt;/code&gt; ）的引用以及发生错误的行号（2）。这非常好，因为现在我们确切知道了要解决该问题的位置。</target>
        </trans-unit>
        <trans-unit id="ca2f28e217702f1ad5e4a98510fd7c1dab1700ed" translate="yes" xml:space="preserve">
          <source>We can see that webpack generates our &lt;code&gt;print.bundle.js&lt;/code&gt; and &lt;code&gt;app.bundle.js&lt;/code&gt; files, which we also specified in our &lt;code&gt;index.html&lt;/code&gt; file. if you open &lt;code&gt;index.html&lt;/code&gt; in your browser, you can see what happens when you click the button.</source>
          <target state="translated">我们可以看到webpack生成了我们的 &lt;code&gt;print.bundle.js&lt;/code&gt; 和 &lt;code&gt;app.bundle.js&lt;/code&gt; 文件，我们也在 &lt;code&gt;index.html&lt;/code&gt; 文件中指定了它们。如果您在浏览器中打开 &lt;code&gt;index.html&lt;/code&gt; ，则可以看到单击按钮会发生什么。</target>
        </trans-unit>
        <trans-unit id="13ac810ac2827e8a4338aacc2a70cb3e9f51aa19" translate="yes" xml:space="preserve">
          <source>We can see that webpack generates our &lt;code&gt;print.bundle.js&lt;/code&gt; and &lt;code&gt;index.bundle.js&lt;/code&gt; files, which we also specified in our &lt;code&gt;index.html&lt;/code&gt; file. if you open &lt;code&gt;index.html&lt;/code&gt; in your browser, you can see what happens when you click the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a91536621f215bce27491619c8b48f6ef07ef93" translate="yes" xml:space="preserve">
          <source>We can start with this basic webpack configuration:</source>
          <target state="translated">我们可以从这个基本的webpack配置开始。</target>
        </trans-unit>
        <trans-unit id="e7939d70e5fa1891e68b4dea435faa4c40a99fa4" translate="yes" xml:space="preserve">
          <source>We can take advantage of this built-in support for Brotli in Node 10.16.0 and later by just passing in the appropriate &lt;code&gt;algorithm&lt;/code&gt; to the CompressionPlugin:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657bde688727955cba856cb54db5a72d4d37167c" translate="yes" xml:space="preserve">
          <source>We can use the &lt;code&gt;output.filename&lt;/code&gt;&lt;a href=&quot;../configuration/output#outputfilename&quot;&gt;substitutions&lt;/a&gt; setting to define the names of our output files. webpack provides a method of templating the filenames using bracketed strings called &lt;strong&gt;substitutions&lt;/strong&gt;. The &lt;code&gt;[contenthash]&lt;/code&gt; substitution will add a unique hash based on the content of an asset. When the asset's content changes, &lt;code&gt;[contenthash]&lt;/code&gt; will change as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981fc9b2fc1796f07ef53b6d65996fa373499c5f" translate="yes" xml:space="preserve">
          <source>We distinguish between local and remote modules. Local modules are normal modules which are part of the current build. Remote modules are modules that are not part of the current build and loaded from a so-called container at the runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177ca5503ba9b50d48c9680cb6075d126fe313df" translate="yes" xml:space="preserve">
          <source>We encourage you to have source maps enabled in production, as they are useful for debugging as well as running benchmark tests. That said, you should choose one with a fairly quick build speed that's recommended for production use (see &lt;a href=&quot;../configuration/devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt;). For this guide, we'll use the &lt;code&gt;source-map&lt;/code&gt; option in &lt;em&gt;production&lt;/em&gt; as opposed to the &lt;code&gt;inline-source-map&lt;/code&gt; we used in &lt;em&gt;development&lt;/em&gt;:</source>
          <target state="translated">我们建议您在生产中启用源映射，因为它们对于调试以及运行基准测试非常有用。就是说，您应该选择一个推荐用于生产的相当快的构建速度（请参阅&lt;a href=&quot;../configuration/devtool&quot;&gt; &lt;code&gt;devtool&lt;/code&gt; &lt;/a&gt;）。对于本指南，我们将在&lt;em&gt;生产中&lt;/em&gt;使用 &lt;code&gt;source-map&lt;/code&gt; 选项，而不是在&lt;em&gt;开发中&lt;/em&gt;使用的 &lt;code&gt;inline-source-map&lt;/code&gt; ：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8d106b8f94e9705433e844dfdd49f6de112e6d76" translate="yes" xml:space="preserve">
          <source>We encourage you to have source maps enabled in production, as they are useful for debugging as well as running benchmark tests. That said, you should choose one with a fairly quick build speed that's recommended for production use (see &lt;a href=&quot;../configuration/devtool&quot;&gt;&lt;code&gt;devtool&lt;/code&gt;&lt;/a&gt;). For this guide, we'll use the &lt;code&gt;source-map&lt;/code&gt; option in the &lt;em&gt;production&lt;/em&gt; as opposed to the &lt;code&gt;inline-source-map&lt;/code&gt; we used in the &lt;em&gt;development&lt;/em&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccc239d831b8ab166a08dcb2f1c35699644be4a" translate="yes" xml:space="preserve">
          <source>We expect a certain pattern when validate devtool name, pay attention and dont mix up the sequence of devtool string. The pattern is: &lt;code&gt;[inline-|hidden-|eval-][nosources-][cheap-[module-]]source-map&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54e01dd03622ce6cba87877008ad2897307c563" translate="yes" xml:space="preserve">
          <source>We had been getting reports that &lt;code&gt;TS_NODE_PROJECT&lt;/code&gt; might not work with &lt;code&gt;&quot;TS_NODE_PROJECT&quot; unrecognized command&lt;/code&gt; error. Therefore running it with &lt;code&gt;cross-env&lt;/code&gt; seems to fix the issue, for more info &lt;a href=&quot;https://github.com/webpack/webpack.js.org/issues/2733&quot;&gt;see this issue&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa2b226b3d4a6d958d1587b687dc8f773d58f1d" translate="yes" xml:space="preserve">
          <source>We made the Vagrant box accessible from a static IP, and then made &lt;code&gt;webpack-dev-server&lt;/code&gt; publicly accessible so it is reachable from a browser. We then tackled a common problem that VirtualBox doesn't send out filesystem events, causing the server to not reload on file changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282749558ba5da53eeeb6f04c218363bf29d42ee" translate="yes" xml:space="preserve">
          <source>We made the Vagrant box accessible from a static IP, and then made webpack-dev-server publicly accessible so it is reachable from a browser. We then tackled a common problem that VirtualBox doesn't send out filesystem events, causing the server to not reload on file changes.</source>
          <target state="translated">我们让Vagrant盒子可以通过静态IP访问,然后让webpack-dev-server可以公开访问,这样就可以通过浏览器访问。然后我们解决了一个常见的问题,即VirtualBox不发送文件系统事件,导致服务器在文件变化时不重载。</target>
        </trans-unit>
        <trans-unit id="c1b70298e0fffa726b0a5545ddec5a20ae1b479a" translate="yes" xml:space="preserve">
          <source>We no longer support any &lt;code&gt;react&lt;/code&gt; specific features. Please see the wonderful &lt;a href=&quot;https://mdxjs.com/&quot;&gt;MDX&lt;/a&gt; project if you're interested in mixing JSX with Markdown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d422e0a1ddfb7d2994c16935e1081df8a6a2917" translate="yes" xml:space="preserve">
          <source>We prefer static detection of production/development mode via the &lt;code&gt;production&lt;/code&gt; or &lt;code&gt;development&lt;/code&gt; condition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb6a26a13705b56eaa896556f1c8c62488a1eba" translate="yes" xml:space="preserve">
          <source>We recommend do not specify &lt;code&gt;from&lt;/code&gt;, &lt;code&gt;to&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt; options, because this can lead to wrong path in source maps. If you need source maps please use the &lt;a href=&quot;#sourcemap&quot;&gt;&lt;code&gt;sourcemap&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62bfe828a31deb892992ffc5da3d8f564a5fdc92" translate="yes" xml:space="preserve">
          <source>We recommend use prefix &lt;code&gt;v-&lt;/code&gt; for values, &lt;code&gt;s-&lt;/code&gt; for selectors and &lt;code&gt;m-&lt;/code&gt; for media at-rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0fb8beee0ab69bd80149b7439291404838e0099" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;code&gt;percentBy: 'entries'&lt;/code&gt; setting for projects with &lt;a href=&quot;../configuration/entry-context#entry&quot;&gt;multiple configured entry points&lt;/a&gt;. Percentage calculation will become more accurate because the amount of entry points is known in advance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bdb9a9e4156622feff4a7d00b8dba672256e8c9" translate="yes" xml:space="preserve">
          <source>We recommend using DllPlugin only with &lt;code&gt;entryOnly: true&lt;/code&gt;, otherwise tree shaking in the DLL won't work as all the exports might be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ec5a34b709daa03d071a04f64967ef28de8f14" translate="yes" xml:space="preserve">
          <source>We strongly recommend using an asynchronous boundary. It will split out the initialization code of a larger chunk to avoid any additional round trips and improve performance in general.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98ff645900335c9d3e150d717301208cee1a585" translate="yes" xml:space="preserve">
          <source>We support yarn PnP version 3 &lt;a href=&quot;https://next.yarnpkg.com/features/pnp&quot;&gt;&lt;code&gt;yarn 2 berry&lt;/code&gt;&lt;/a&gt; for persistent caching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0be727f5fc53615fcc78dcf536f6d74c3da629c" translate="yes" xml:space="preserve">
          <source>We use &lt;code&gt;ts-loader&lt;/code&gt; in this guide as it makes enabling additional webpack features, such as importing other web assets, a bit easier.</source>
          <target state="translated">我们在本指南中使用 &lt;code&gt;ts-loader&lt;/code&gt; ，因为它使启用其他Webpack功能（例如导入其他Web资产）更加容易。</target>
        </trans-unit>
        <trans-unit id="11c4352cb28f270b585c580614a1eb8f880ba669" translate="yes" xml:space="preserve">
          <source>We use the &lt;code&gt;module&lt;/code&gt; condition as optimization again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2451e4fe5b333bbb87a5328bbd6a54561cf3d37" translate="yes" xml:space="preserve">
          <source>We will use &lt;a href=&quot;../plugins/mini-css-extract-plugin&quot;&gt;&lt;code&gt;MiniCssExtractPlugin&lt;/code&gt;&lt;/a&gt; in &lt;code&gt;production&lt;/code&gt; mode for css as a best practice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835362acb732e8765a43852621862db6316a6aa4" translate="yes" xml:space="preserve">
          <source>We won't go through a full example of how to use this plugin within your projects, but you can read up on &lt;a href=&quot;../concepts/manifest&quot;&gt;the concept page&lt;/a&gt; and the &lt;a href=&quot;caching&quot;&gt;caching guide&lt;/a&gt; to find out how this ties into long term caching.</source>
          <target state="translated">我们不会在项目中使用如何使用此插件的完整示例，但是您可以&lt;a href=&quot;../concepts/manifest&quot;&gt;在概念页&lt;/a&gt;和&lt;a href=&quot;caching&quot;&gt;缓存指南上阅读&lt;/a&gt;以了解其与长期缓存的关系。</target>
        </trans-unit>
        <trans-unit id="29b47e47027f09109359877353a39b7379316d3c" translate="yes" xml:space="preserve">
          <source>We'll also update our project to remove the now unused files:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a824bbf65f1269cef05402d818ccc1920e22bd0" translate="yes" xml:space="preserve">
          <source>WebAssembly modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecd172656b0bb7ce4a53fbe55278abe78cbe5dc" translate="yes" xml:space="preserve">
          <source>WebWorkerTemplatePlugin</source>
          <target state="translated">WebWorkerTemplatePlugin</target>
        </trans-unit>
        <trans-unit id="642803d03826095e048310e6f6fdb2336f081224" translate="yes" xml:space="preserve">
          <source>Webpack</source>
          <target state="translated">Webpack</target>
        </trans-unit>
        <trans-unit id="50c9ef00c547d40f6538d1f95175ecf069daf741" translate="yes" xml:space="preserve">
          <source>Webpack 5 Module Federation: A game-changer in JavaScript architecture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f4015b28e6a5391e9b051524576637eb061010" translate="yes" xml:space="preserve">
          <source>Webpack chat:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82b6b2e18d79f25873504926b5f944fcf9abaaba" translate="yes" xml:space="preserve">
          <source>Webpack is capable of adding &lt;code&gt;nonce&lt;/code&gt; to all scripts that it loads. To activate the feature set a &lt;code&gt;__webpack_nonce__&lt;/code&gt; variable needs to be included in your entry script. A unique hash based nonce should be generated and provided for each unique page view this is why &lt;code&gt;__webpack_nonce__&lt;/code&gt; is specified in the entry file and not in the configuration. Please note that &lt;code&gt;nonce&lt;/code&gt; should always be a base64-encoded string.</source>
          <target state="translated">Webpack能够将 &lt;code&gt;nonce&lt;/code&gt; 添加到它加载的所有脚本中。要激活功能集，需要在您的输入脚本中包含 &lt;code&gt;__webpack_nonce__&lt;/code&gt; 变量。应该生成一个基于哈希的唯一随机数，并为每个唯一的页面视图提供该随机数，这就是为什么在条目文件中而不是在配置中指定 &lt;code&gt;__webpack_nonce__&lt;/code&gt; 的原因。请注意， &lt;code&gt;nonce&lt;/code&gt; 应始终为base64编码的字符串。</target>
        </trans-unit>
        <trans-unit id="158e95469747971b9e26b9ccc964ebc1f958f27d" translate="yes" xml:space="preserve">
          <source>Webpack is used to compile JavaScript modules. Once &lt;a href=&quot;installation&quot;&gt;installed&lt;/a&gt;, you can interface with webpack either from its &lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt; or &lt;a href=&quot;../api/node&quot;&gt;API&lt;/a&gt;. If you're still new to webpack, please read through the &lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;core concepts&lt;/a&gt; and &lt;a href=&quot;https://webpack.js.org/comparison&quot;&gt;this comparison&lt;/a&gt; to learn why you might use it over the other tools that are out in the community.</source>
          <target state="translated">Webpack用于编译JavaScript模块。一旦&lt;a href=&quot;installation&quot;&gt;安装&lt;/a&gt;，你可以用的WebPack无论是从它的接口&lt;a href=&quot;../api/cli&quot;&gt;CLI&lt;/a&gt;或&lt;a href=&quot;../api/node&quot;&gt;API&lt;/a&gt;。如果您仍然不熟悉Webpack，请通读&lt;a href=&quot;https://webpack.js.org/concepts&quot;&gt;核心概念&lt;/a&gt;和&lt;a href=&quot;https://webpack.js.org/comparison&quot;&gt;此比较&lt;/a&gt;以了解为什么您可能会在社区中其他工具上使用它。</target>
        </trans-unit>
        <trans-unit id="a314c0c0bef387cef98f2fd46509bd9f90f50109" translate="yes" xml:space="preserve">
          <source>Webpack provides an &lt;a href=&quot;../concepts/module-resolution&quot;&gt;advanced mechanism to resolve files&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6cf8f28b1b8913ae0ae026a0b390c951e74c15c" translate="yes" xml:space="preserve">
          <source>Webpack provides an &lt;a href=&quot;../configuration/resolve&quot;&gt;advanced mechanism to resolve files&lt;/a&gt;. The &lt;code&gt;stylus-loader&lt;/code&gt; applies the webpack resolver when processing queries. Thus you can import your Stylus modules from &lt;code&gt;node_modules&lt;/code&gt;. Just prepend them with a &lt;code&gt;~&lt;/code&gt; which tells webpack to look up the &lt;a href=&quot;../configuration/resolve#resolvemodules&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da2df5d302968b86d91eb2e28fbbf6b441efdb8" translate="yes" xml:space="preserve">
          <source>Webpack supports bundling multiple &lt;a href=&quot;../concepts/targets&quot;&gt;targets&lt;/a&gt;. For cases where you may want different Babel configurations for each target (like &lt;code&gt;web&lt;/code&gt;&lt;em&gt;and&lt;/em&gt;&lt;code&gt;node&lt;/code&gt;), this loader provides a &lt;code&gt;target&lt;/code&gt; property via Babel's &lt;a href=&quot;https://babeljs.io/docs/en/config-files#apicallercb&quot;&gt;caller&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c5210e932b790099cb080bd655498066252fad" translate="yes" xml:space="preserve">
          <source>Webpack then tries to load the &lt;code&gt;babel&lt;/code&gt; package instead of the &lt;code&gt;babel-loader&lt;/code&gt;.</source>
          <target state="translated">然后，Webpack尝试加载 &lt;code&gt;babel&lt;/code&gt; 软件包而不是 &lt;code&gt;babel-loader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f93227f09a36564ddcbcc64edc8672d9a999d0d9" translate="yes" xml:space="preserve">
          <source>Webpack's Devtool Source Map</source>
          <target state="translated">Webpack的Devtool源码图</target>
        </trans-unit>
        <trans-unit id="a57d36dd7547d0d01d63f5a0dca33743ac6b0190" translate="yes" xml:space="preserve">
          <source>What does that mean?</source>
          <target state="translated">这意味着什么?</target>
        </trans-unit>
        <trans-unit id="e23722e1d334532d959d84961060e3ab54e8b4a7" translate="yes" xml:space="preserve">
          <source>What good would these statistics be without some description of the compiled application's actual modules? Each module in the dependency graph is represented by the following structure:</source>
          <target state="translated">如果不对编译后的应用程序的实际模块进行一些描述,这些统计数据有什么用呢?依赖关系图中的每个模块都用下面的结构来表示。</target>
        </trans-unit>
        <trans-unit id="8a4ea7253eb5ae4c52f474dda583f9916cc9b4a3" translate="yes" xml:space="preserve">
          <source>What is &lt;code&gt;CSS Modules&lt;/code&gt;? Please &lt;a href=&quot;https://github.com/webpack-contrib/css-loader#modules&quot;&gt;read&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80025f04bda332bda95338dd0b53da22365259c7" translate="yes" xml:space="preserve">
          <source>What is &lt;code&gt;progressive&lt;/code&gt; image? &lt;a href=&quot;https://jmperezperez.com/medium-image-progressive-loading-placeholder/&quot;&gt;&lt;code&gt;Answer here&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c405e511522608969dda969a09ff67810928f7b" translate="yes" xml:space="preserve">
          <source>What is a webpack Module</source>
          <target state="translated">什么是webpack模块</target>
        </trans-unit>
        <trans-unit id="a15063f1f366503c5eca45c22ee9ce5c854143a3" translate="yes" xml:space="preserve">
          <source>What we've essentially done here is tell webpack...</source>
          <target state="translated">我们在这里主要做的是告诉webpack...</target>
        </trans-unit>
        <trans-unit id="3f6cf47fe8f7eb3ed631b1c9020062f7333087c0" translate="yes" xml:space="preserve">
          <source>What's the reasoning behind this? &lt;code&gt;react&lt;/code&gt; probably won't change as often as your application code. By moving it into a separate chunk this chunk can be cached separately from your app code (assuming you are using chunkhash, records, Cache-Control or other long term cache approach).</source>
          <target state="translated">这背后的原因是什么？ &lt;code&gt;react&lt;/code&gt; 可能不会像您的应用程序代码那样频繁地更改。通过将其移动到单独的块中，可以将该块与应用程序代码分开进行缓存（假设您使用的是块哈希，记录，Cache-Control或其他长期缓存方法）。</target>
        </trans-unit>
        <trans-unit id="82ad2275dbd931d707609a926126e7d7fd192347" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;mode&quot;&gt;mode&lt;/a&gt; is set to &lt;code&gt;'none'&lt;/code&gt;, &lt;code&gt;optimization.nodeEnv&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3405963c0dcff8e80cd7e973f9b3a813e4e89a0d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Button&lt;/code&gt; is unused you can effectively remove the &lt;code&gt;export { Button$1 };&lt;/code&gt; which leaves all the remaining code. So the question is &quot;Does this code have any side effects or can it be safely removed?&quot;. Difficult to say, especially because of this line &lt;code&gt;withAppProvider()(Button)&lt;/code&gt;. &lt;code&gt;withAppProvider&lt;/code&gt; is called and the return value is also called. Are there any side effects when calling &lt;code&gt;merge&lt;/code&gt; or &lt;code&gt;hoistStatics&lt;/code&gt;? Are there side effects when assigning &lt;code&gt;WithProvider.contextTypes&lt;/code&gt; (Setter?) or when reading &lt;code&gt;WrappedComponent.contextTypes&lt;/code&gt; (Getter?).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4f3ee1049ce087946296ad68f926f35642de55" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Rule.generator.dataUrl&lt;/code&gt; is used as an object, you can configure two properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779590cabbfa59a5afb0bd916287b5bff4554d11" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;devServer.lazy&lt;/code&gt; is enabled, the dev-server will only compile the bundle when it gets requested. This means that webpack will not watch any file changes. We call this &lt;strong&gt;lazy mode&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac79235f4bf956b13921f4562bf7915c76ae5e6" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;invalidate&lt;/code&gt; is called, the &lt;a href=&quot;#dispose-or-adddisposehandler&quot;&gt;&lt;code&gt;dispose&lt;/code&gt;&lt;/a&gt; handler will be eventually called and fill &lt;code&gt;module.hot.data&lt;/code&gt;. If &lt;a href=&quot;#dispose-or-adddisposehandler&quot;&gt;&lt;code&gt;dispose&lt;/code&gt;&lt;/a&gt; handler is not registered, an empty object will be supplied to &lt;code&gt;module.hot.data&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097e7a8a57c079b0550af45266e062d2a4b75f4b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;lazy&lt;/code&gt; is enabled, the dev-server will only compile the bundle when it gets requested. This means that webpack will not watch any file changes. We call this &lt;strong&gt;lazy mode&lt;/strong&gt;.</source>
          <target state="translated">当 &lt;code&gt;lazy&lt;/code&gt; 使能时，它就会要求DEV-服务器将只编译软件包。这意味着webpack将不会监视任何文件更改。我们称这种&lt;strong&gt;懒惰模式&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="a918636379f114af885a0d73833efa42c23d80cd" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;open&lt;/code&gt; is enabled, the dev server will open the browser.</source>
          <target state="translated">当 &lt;code&gt;open&lt;/code&gt; 启用，开发服务器将打开浏览器。</target>
        </trans-unit>
        <trans-unit id="0370da265ef18c491f7b37b03ff50fe7bf0a9e2a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;stats.entrypoints&lt;/code&gt; is set to &lt;code&gt;'auto'&lt;/code&gt;, webpack will decide automatically whether to display the entry points in the stats output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea2d3428fe315d551def013906b1f4d310fc261" translate="yes" xml:space="preserve">
          <source>When Node.js was released a new era started, and it came with new challenges. Now that JavaScript is not running in a browser, how are Node applications supposed to load new chunks of code? There are no html files and script tags that can be added to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f990327c881b65364364e79333e5e612769712" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;matchResource&lt;/code&gt; is set, it will be used to match with the &lt;a href=&quot;../configuration/module#modulerules&quot;&gt;&lt;code&gt;module.rules&lt;/code&gt;&lt;/a&gt; instead of the original resource. This can be useful if further loaders should be applied to the resource, or if the module type needs to be changed. It's also displayed in the stats and used for matching &lt;a href=&quot;../configuration/module#ruleissuer&quot;&gt;&lt;code&gt;Rule.issuer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../plugins/split-chunks-plugin#splitchunkscachegroupscachegrouptest&quot;&gt;&lt;code&gt;test&lt;/code&gt; in &lt;code&gt;splitChunks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6541e3fc3548f8ffed0cb7a3c4975a90c82ea4" translate="yes" xml:space="preserve">
          <source>When a function is given, returning &lt;code&gt;true&lt;/code&gt; tells webpack to inject the module into the bundle as Base64-encoded string, otherwise module file will be emitted into the output directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936d0ae63cdd310640f2be4edcef55d8a668d108" translate="yes" xml:space="preserve">
          <source>When a page which uses the &lt;code&gt;ChartComponent&lt;/code&gt; is requested, the charting-library-chunk is also requested via &lt;code&gt;&amp;lt;link rel=&quot;preload&quot;&amp;gt;&lt;/code&gt;. Assuming the page-chunk is smaller and finishes faster, the page will be displayed with a &lt;code&gt;LoadingIndicator&lt;/code&gt;, until the already requested &lt;code&gt;charting-library-chunk&lt;/code&gt; finishes. This will give a little load time boost since it only needs one round-trip instead of two. Especially in high-latency environments.</source>
          <target state="translated">当请求使用 &lt;code&gt;ChartComponent&lt;/code&gt; 的页面时，还可以通过 &lt;code&gt;&amp;lt;link rel=&quot;preload&quot;&amp;gt;&lt;/code&gt; 来请求charting -library-chunk 。假设页面块较小并且完成得更快，该页面将显示一个 &lt;code&gt;LoadingIndicator&lt;/code&gt; ，直到已经请求的 &lt;code&gt;charting-library-chunk&lt;/code&gt; 完成为止。这将增加一点加载时间，因为它只需要一个往返而不是两个。特别是在高延迟环境中。</target>
        </trans-unit>
        <trans-unit id="4254af549da477b1173d6e70e64d52344b144aaf" translate="yes" xml:space="preserve">
          <source>When assigning equal names to different split chunks, all vendor modules are placed into a single shared chunk, though it's not recommend since it can result in more code downloaded.</source>
          <target state="translated">当给不同的拆分块分配相等的名称时,所有的厂商模块都会被放入一个共享的块中,不过不建议这样做,因为这会导致下载更多的代码。</target>
        </trans-unit>
        <trans-unit id="9d5b09223038225769f84c1f42ba9ae582c3aa8e" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;check&lt;/code&gt; state, this module will be added to the update when an update is available. If no update is available it will create a new update. HMR will enter the &lt;code&gt;ready&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77d259475896e07ef292a542d6c6f90531181e2" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;dispose&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt; state, HMR will pick it up after getting out of those states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629b51e2c6676a4cd198f2c07be845c738c575dc" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;idle&lt;/code&gt; state, a new HMR update will be created containing this module. HMR will enter the &lt;code&gt;ready&lt;/code&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="252c5755307a122a2d89471e3b65082f4f711175" translate="yes" xml:space="preserve">
          <source>When called during the &lt;code&gt;ready&lt;/code&gt; or &lt;code&gt;prepare&lt;/code&gt; state, this module will be added to the current HMR update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a1936d8933244dd718faf821e675520875717c" translate="yes" xml:space="preserve">
          <source>When combining with the &lt;a href=&quot;output#output-library&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt; option: If an array is passed only the last item is exported.</source>
          <target state="translated">与&lt;a href=&quot;output#output-library&quot;&gt; &lt;code&gt;output.library&lt;/code&gt; &lt;/a&gt;选项结合使用时：如果传递数组，则仅导出最后一项。</target>
        </trans-unit>
        <trans-unit id="eae6f736854059427f8c986bd296d99a4dd905c2" translate="yes" xml:space="preserve">
          <source>When combining with the &lt;a href=&quot;output#outputlibrary&quot;&gt;&lt;code&gt;output.library&lt;/code&gt;&lt;/a&gt; option: If an array is passed only the last item is exported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3546bb0ca2be567641a97a2d03578b6e40ea329f" translate="yes" xml:space="preserve">
          <source>When compiling source code with webpack, users can generate a JSON file containing statistics about modules. These statistics can be used to analyze an application's dependency graph as well as to optimize compilation speed. The file is typically generated with the following CLI command:</source>
          <target state="translated">当使用webpack编译源代码时,用户可以生成一个包含模块统计信息的JSON文件。这些统计数据可以用来分析应用程序的依赖关系图以及优化编译速度。该文件通常通过以下CLI命令生成。</target>
        </trans-unit>
        <trans-unit id="4c7353a246265e00b25d23635b72209bd3daa993" translate="yes" xml:space="preserve">
          <source>When consuming &lt;a href=&quot;https://github.com/webpack/webpack-sources&quot;&gt;&lt;code&gt;webpack-sources&lt;/code&gt;&lt;/a&gt; package in plugins, use &lt;code&gt;require('webpack').sources&lt;/code&gt; instead of &lt;code&gt;require('webpack-sources')&lt;/code&gt; to avoid version conflicts for persistent caching.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afdd0296e171de866c508b740b84b8c21d1e603" translate="yes" xml:space="preserve">
          <source>When creating a bundle with this configuration, &lt;code&gt;console.log(footer)&lt;/code&gt; will output 'default footer'. Let's set &lt;code&gt;Rule.resolve&lt;/code&gt; for &lt;code&gt;.js&lt;/code&gt; files, and alias &lt;code&gt;footer&lt;/code&gt; to &lt;code&gt;overridden.js&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac6a0a96ff5121dc13611a26f4cb1cfba3482ec" translate="yes" xml:space="preserve">
          <source>When creating a bundle with updated configuration, &lt;code&gt;console.log(footer)&lt;/code&gt; will output 'overridden footer'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713580f1a6d5ae54743a4b9083ebeacf1983bef9" translate="yes" xml:space="preserve">
          <source>When declaring a local classname you can compose a local class from another local classname.</source>
          <target state="translated">当声明一个本地类名时,你可以从另一个本地类名组成一个本地类。</target>
        </trans-unit>
        <trans-unit id="7a64d141b958f5e87111733dd5f7d8d676c38709" translate="yes" xml:space="preserve">
          <source>When defining values for &lt;code&gt;process&lt;/code&gt; prefer &lt;code&gt;'process.env.NODE_ENV': JSON.stringify('production')&lt;/code&gt; over &lt;code&gt;process: { env: { NODE_ENV: JSON.stringify('production') } }&lt;/code&gt;. Using the latter will overwrite the &lt;code&gt;process&lt;/code&gt; object which can break compatibility with some modules that expect other values on the process object to be defined.</source>
          <target state="translated">在为 &lt;code&gt;process&lt;/code&gt; 定义值时，最好使用 &lt;code&gt;'process.env.NODE_ENV': JSON.stringify('production')&lt;/code&gt; 不是 &lt;code&gt;process: { env: { NODE_ENV: JSON.stringify('production') } }&lt;/code&gt; 。使用后者将覆盖 &lt;code&gt;process&lt;/code&gt; 对象，这可能会破坏与期望在过程对象上定义其他值的某些模块的兼容性。</target>
        </trans-unit>
        <trans-unit id="250af6c15c6b77347d259b8cfa2de3ce234b9bd0" translate="yes" xml:space="preserve">
          <source>When developing a plugin for webpack, you might want to know where each hook is called. To learn this, search for &lt;code&gt;hooks.&amp;lt;hook name&amp;gt;.call&lt;/code&gt; across the webpack source</source>
          <target state="translated">在为webpack开发插件时，您可能想知道每个钩子的调用位置。要了解这一点，请在Webpack源代码中搜索 &lt;code&gt;hooks.&amp;lt;hook name&amp;gt;.call&lt;/code&gt; .call</target>
        </trans-unit>
        <trans-unit id="eac506339aaf8ca2ceab108281956c6327d3d307" translate="yes" xml:space="preserve">
          <source>When enabled, symlinked resources are resolved to their &lt;em&gt;real&lt;/em&gt; path, not their symlinked location. Note that this may cause module resolution to fail when using tools that symlink packages (like &lt;code&gt;npm link&lt;/code&gt;).</source>
          <target state="translated">启用后，符号链接的资源将解析到其&lt;em&gt;实际&lt;/em&gt;路径，而不是符号链接的位置。请注意，当使用符号链接软件包的工具（例如 &lt;code&gt;npm link&lt;/code&gt; ）时，这可能导致模块解析失败。</target>
        </trans-unit>
        <trans-unit id="0867e331fe64e063109c858345bb69d7dc4cc24b" translate="yes" xml:space="preserve">
          <source>When enabled, webpack would prefer to resolve module requests as relative requests instead of using modules from &lt;code&gt;node_modules&lt;/code&gt; directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5298ec46ae9b14121ccdf8dcced94e35877a3bb" translate="yes" xml:space="preserve">
          <source>When enabled, you should provide the file extension when &lt;code&gt;import&lt;/code&gt;ing a module in &lt;code&gt;.mjs&lt;/code&gt; files or any other &lt;code&gt;.js&lt;/code&gt; files when their nearest parent &lt;code&gt;package.json&lt;/code&gt; file contains a &lt;code&gt;&quot;type&quot;&lt;/code&gt; field with a value of &lt;code&gt;&quot;module&quot;&lt;/code&gt;, otherwise webpack would fail the compiling with a &lt;code&gt;Module not found&lt;/code&gt; error. And webpack won't resolve directories with filenames defined in the &lt;a href=&quot;resolve#resolvemainfiles&quot;&gt;&lt;code&gt;resolve.mainFiles&lt;/code&gt;&lt;/a&gt;, you have to specify the filename yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4f213b38880204a9cc2ff95ea9d365e1a4a280" translate="yes" xml:space="preserve">
          <source>When executing &lt;code&gt;NODE_ENV=production webpack&lt;/code&gt; in the terminal to build, &lt;code&gt;entry.js&lt;/code&gt; becomes this:</source>
          <target state="translated">在要构建的终端中执行 &lt;code&gt;NODE_ENV=production webpack&lt;/code&gt; 时， &lt;code&gt;entry.js&lt;/code&gt; 变为：</target>
        </trans-unit>
        <trans-unit id="c0da06ca020ed0939df108b2df2d651ec354c048" translate="yes" xml:space="preserve">
          <source>When files paths are processed by webpack, they always contain &lt;code&gt;/&lt;/code&gt; on Unix systems and &lt;code&gt;\&lt;/code&gt; on Windows. That's why using &lt;code&gt;[\\/]&lt;/code&gt; in &lt;code&gt;{cacheGroup}.test&lt;/code&gt; fields is necessary to represent a path separator. &lt;code&gt;/&lt;/code&gt; or &lt;code&gt;\&lt;/code&gt; in &lt;code&gt;{cacheGroup}.test&lt;/code&gt; will cause issues when used cross-platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7276358ec6a6b1b20a6f229f493f5bc89ee0a7a3" translate="yes" xml:space="preserve">
          <source>When following &lt;code&gt;require()&lt;/code&gt; call is evaluated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0a8c8cee49129be667bdabcc325bc5a1ea3345" translate="yes" xml:space="preserve">
          <source>When importing from an npm package, e.g. &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt;, this option will determine which fields in its &lt;code&gt;package.json&lt;/code&gt; are checked. The default values will vary based upon the &lt;a href=&quot;../concepts/targets&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; specified in your webpack configuration.</source>
          <target state="translated">从npm包 &lt;code&gt;import * as D3 from &quot;d3&quot;&lt;/code&gt; ，例如从&amp;ldquo; d3&amp;rdquo;导入*作为D3，此选项将确定检查 &lt;code&gt;package.json&lt;/code&gt; 中的哪些字段。默认值将根据Webpack配置中指定的&lt;a href=&quot;../concepts/targets&quot;&gt; &lt;code&gt;target&lt;/code&gt; &lt;/a&gt;而有所不同。</target>
        </trans-unit>
        <trans-unit id="914299b827acf5949a2c3b90c84f3a98237eb0db" translate="yes" xml:space="preserve">
          <source>When importing from an npm package, e.g. &lt;code&gt;import * as D3 from 'd3'&lt;/code&gt;, this option will determine which fields in its &lt;code&gt;package.json&lt;/code&gt; are checked. The default values will vary based upon the &lt;a href=&quot;../concepts/targets&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; specified in your webpack configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aac832abcc21fcde37f9dc201dae0be38b70997a" translate="yes" xml:space="preserve">
          <source>When installing a package that will be bundled into your production bundle, you should use &lt;code&gt;npm install --save&lt;/code&gt;. If you're installing a package for development purposes (e.g. a linter, testing libraries, etc.) then you should use &lt;code&gt;npm install --save-dev&lt;/code&gt;. More information can be found in the &lt;a href=&quot;https://docs.npmjs.com/cli/install&quot;&gt;npm documentation&lt;/a&gt;.</source>
          <target state="translated">安装将捆绑到生产捆绑包中的软件包时，应使用 &lt;code&gt;npm install --save&lt;/code&gt; 。如果您出于开发目的安装软件包（例如，lint，测试库等），则应使用 &lt;code&gt;npm install --save-dev&lt;/code&gt; 。可以在&lt;a href=&quot;https://docs.npmjs.com/cli/install&quot;&gt;npm文档中&lt;/a&gt;找到更多信息。</target>
        </trans-unit>
        <trans-unit id="ebd7d0c9e10b1536745313e0c7501b34e45c3140" translate="yes" xml:space="preserve">
          <source>When installing third party libraries from npm, it is important to remember to install the typing definition for that library. These definitions can be found at &lt;a href=&quot;http://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;.</source>
          <target state="translated">从npm安装第三方库时，记住为该库安装类型定义很重要。这些定义可以在&lt;a href=&quot;http://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;上找到。</target>
        </trans-unit>
        <trans-unit id="fba0b8b2797c9869cb7c60cf7f36728c3d9990c2" translate="yes" xml:space="preserve">
          <source>When installing third party libraries from npm, it is important to remember to install the typing definition for that library. These definitions can be found at &lt;a href=&quot;https://microsoft.github.io/TypeSearch/&quot;&gt;TypeSearch&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d63f2c961d1c468e0c64be6d7c2e3208937f14" translate="yes" xml:space="preserve">
          <source>When it's not possible to detect mode we fallback to the production version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3063869d9861574f92e937bd8e766cc68f510b" translate="yes" xml:space="preserve">
          <source>When loading code with HTML &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags, the webpack runtime will try to find an existing &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag that matches the &lt;code&gt;src&lt;/code&gt; attribute or has a specific &lt;code&gt;data-webpack&lt;/code&gt; attribute. For chunk loading &lt;code&gt;data-webpack&lt;/code&gt; attribute would have value of &lt;code&gt;'[output.uniqueName]:chunk-[chunkId]'&lt;/code&gt; while external script has value of &lt;code&gt;'[output.uniqueName]:[global]'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ac815eb5669924512d67d056cd9a159cb6e5a9" translate="yes" xml:space="preserve">
          <source>When multiple targets are passed, then common subset of features will be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cf5ef4c81052dc0bb8e2761917ad0bfb136bf3" translate="yes" xml:space="preserve">
          <source>When nesting is used, providing overrides to one container will automatically override the modules with the same &quot;name&quot; in the nested container(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54640db1624976533d90e49a88cd547e9b0d501" translate="yes" xml:space="preserve">
          <source>When no information about the target or the &lt;a href=&quot;output#outputenvironment&quot;&gt;environment&lt;/a&gt; features is provided, then ES2015 will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d2f82c23530b7b38fd825319b0c93915066903" translate="yes" xml:space="preserve">
          <source>When only a single entry (&lt;code&gt;&quot;.&quot;&lt;/code&gt;) into the package should be supported the &lt;code&gt;{ &quot;.&quot;: ... }&lt;/code&gt; object nesting can be omitted:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58456700867017ff4232dd40aae854d5f72d63f9" translate="yes" xml:space="preserve">
          <source>When processing modules with webpack, it is important to understand the different module syntaxes -- specifically the &lt;a href=&quot;module-methods&quot;&gt;methods&lt;/a&gt; and &lt;a href=&quot;module-variables&quot;&gt;variables&lt;/a&gt; -- that are supported.</source>
          <target state="translated">使用webpack处理模块时，重要的是要了解所支持的不同模块语法-特别是&lt;a href=&quot;module-methods&quot;&gt;方法&lt;/a&gt;和&lt;a href=&quot;module-variables&quot;&gt;变量&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28a57690cf9a948bf2bff9b360fff7054ca3f0d5" translate="yes" xml:space="preserve">
          <source>When providing a custom client and server implementation make sure that they are compatible with one another to communicate successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef1efdebab988b74943d54fbfbcfff3b7721d936" translate="yes" xml:space="preserve">
          <source>When providing an &lt;code&gt;object&lt;/code&gt; to the &lt;code&gt;ProgressPlugin&lt;/code&gt;, following properties are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f74f8cf364bb2c3b358ef9a5c871a34dd697e0" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;false&lt;/code&gt;, the module is not removed from cache, which results in the exception getting thrown only on the first &lt;code&gt;require&lt;/code&gt; call (making it incompatible with node.js).</source>
          <target state="translated">如果将其设置为 &lt;code&gt;false&lt;/code&gt; ，则不会从缓存中删除该模块，这将导致仅在第一个 &lt;code&gt;require&lt;/code&gt; 调用时引发该异常（使其与node.js不兼容）。</target>
        </trans-unit>
        <trans-unit id="f25a86f18aa4d9b660bcbd13b61019472052de54" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt; tells webpack to reduce the size of WASM by changing imports to shorter strings. It mangles module and export names.</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 时,告诉webpack通过将导入更改为较短的字符串来减小WASM的大小。它破坏模块和导出名称。</target>
        </trans-unit>
        <trans-unit id="6cfe5772eea6ac5b62145d24a208f58602379411" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;true&lt;/code&gt; this option bypasses host checking. &lt;strong&gt;THIS IS NOT RECOMMENDED&lt;/strong&gt; as apps that do not check the host are vulnerable to DNS rebinding attacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7756a0e6c1383ff6ce25f15f9104db9b4b9ff2" translate="yes" xml:space="preserve">
          <source>When set to true this option bypasses host checking. THIS IS NOT RECOMMENDED as apps that do not check the host are vulnerable to DNS rebinding attacks.</source>
          <target state="translated">当设置为 &quot;true &quot;时,该选项可绕过主机检查。不推荐这样做,因为不检查主机的应用程序很容易受到DNS重绑定攻击。</target>
        </trans-unit>
        <trans-unit id="a588827db4b10cf66e831c829a9e2a0293b21c20" translate="yes" xml:space="preserve">
          <source>When targeting a library, especially when &lt;code&gt;libraryTarget&lt;/code&gt; is &lt;code&gt;'umd'&lt;/code&gt;, this option indicates what global object will be used to mount the library. To make UMD build available on both browsers and Node.js, set &lt;code&gt;output.globalObject&lt;/code&gt; option to &lt;code&gt;'this'&lt;/code&gt;. Defaults to &lt;code&gt;self&lt;/code&gt; for Web-like targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838a0b02527f2c7edbcf02a32ebfc1e276d9e6dd" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;development&lt;/code&gt; condition is supported we use the version enhanced for development. Otherwise, in production or when mode is unknown, we use the optimized version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139d0667f1eace4da938902de629746ba602a883" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;exports&lt;/code&gt; field is specified, only these module requests are available. Any other requests will lead to a ModuleNotFound Error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8598222c4a511535ba42795fcaa12ff829a8437c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;target&lt;/code&gt; property is set to &lt;code&gt;webworker&lt;/code&gt;, &lt;code&gt;web&lt;/code&gt;, or left unspecified:</source>
          <target state="translated">当 &lt;code&gt;target&lt;/code&gt; 属性设置为 &lt;code&gt;webworker&lt;/code&gt; ， &lt;code&gt;web&lt;/code&gt; 或未指定时：</target>
        </trans-unit>
        <trans-unit id="06701e817af0679d68717f1453f2f36525b99925" translate="yes" xml:space="preserve">
          <source>When the chunk has a name already, each part will get a new name derived from that name. Depending on the value of &lt;code&gt;optimization.splitChunks.hidePathInfo&lt;/code&gt; it will add a key derived from the first module name or a hash of it.</source>
          <target state="translated">当该块已经有一个名称时，每个部分将获得一个从该名称派生的新名称。根据 &lt;code&gt;optimization.splitChunks.hidePathInfo&lt;/code&gt; 的值，它将添加从第一个模块名称或其哈希值派生的键。</target>
        </trans-unit>
        <trans-unit id="deae5e0c9571595315c2198df6ddb413a1808f20" translate="yes" xml:space="preserve">
          <source>When the scaffold package is in your local file system you should point &lt;code&gt;init&lt;/code&gt; to its path:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3fc46744fdb3b1a110fd3c2978521c4e860cb8" translate="yes" xml:space="preserve">
          <source>When the server is started, there will be a message prior to the list of resolved modules:</source>
          <target state="translated">当服务器启动时,在解析模块列表前会有一条信息。</target>
        </trans-unit>
        <trans-unit id="0eaea81b241689b7665ce3045340a1e191fe43f4" translate="yes" xml:space="preserve">
          <source>When the webpack configuration &lt;a href=&quot;../configuration/configuration-types#exporting-a-function&quot;&gt;exports a function&lt;/a&gt;, an &quot;environment&quot; may be passed to it.</source>
          <target state="translated">当webpack配置&lt;a href=&quot;../configuration/configuration-types#exporting-a-function&quot;&gt;导出功能时&lt;/a&gt;，&amp;ldquo;环境&amp;rdquo;可能会传递给它。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
