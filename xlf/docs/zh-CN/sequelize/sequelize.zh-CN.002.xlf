<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="sequelize">
    <body>
      <group id="sequelize">
        <trans-unit id="baf542c6a886f2170e6594b0cd4c2ad52976c234" translate="yes" xml:space="preserve">
          <source>Having options</source>
          <target state="translated">有选择</target>
        </trans-unit>
        <trans-unit id="8421e2a51a8261b6660fa9c0a9fd6e14eb653c86" translate="yes" xml:space="preserve">
          <source>Helper functions for use inside getter and setter definitions</source>
          <target state="translated">在getter和setter定义中使用的辅助函数。</target>
        </trans-unit>
        <trans-unit id="24c3d9b4e0e40c927afc8e7965f44190f7b0a7ad" translate="yes" xml:space="preserve">
          <source>Helper method to determine if a instance is &quot;soft deleted&quot;.</source>
          <target state="translated">确定实例是否被 &quot;软删除 &quot;的辅助方法。</target>
        </trans-unit>
        <trans-unit id="15900e9e0261074339464c903170431feba6def9" translate="yes" xml:space="preserve">
          <source>Helper method to determine if a instance is &quot;soft deleted&quot;. This is particularly useful if the implementer renamed the &lt;code&gt;deletedAt&lt;/code&gt; attribute to something different. This method requires &lt;code&gt;paranoid&lt;/code&gt; to be enabled.</source>
          <target state="translated">确定实例是否被&amp;ldquo;软删除&amp;rdquo;的辅助方法。如果实现者将 &lt;code&gt;deletedAt&lt;/code&gt; 属性重命名为其他名称，则这特别有用。此方法需要启用 &lt;code&gt;paranoid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74b5b0e337605288491d3919c18791d4428323a7" translate="yes" xml:space="preserve">
          <source>Here is an example demonstrating use cases of BelongsTo and HasOne.</source>
          <target state="translated">下面是一个演示BelongsTo和HasOne用例的例子。</target>
        </trans-unit>
        <trans-unit id="c526e01d78df0d88e184c85be4505b4a091ed47f" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;deleted&lt;/code&gt; scope is merged with the finder. If we were to pass &lt;code&gt;where: { firstName: 'john', deleted: false }&lt;/code&gt; to the finder, the &lt;code&gt;deleted&lt;/code&gt; scope would be overwritten.</source>
          <target state="translated">在这里， &lt;code&gt;deleted&lt;/code&gt; 的合并范围将与查找程序合并。如果我们将 &lt;code&gt;where: { firstName: 'john', deleted: false }&lt;/code&gt; 传递给查找器，则 &lt;code&gt;deleted&lt;/code&gt; 范围将被覆盖。</target>
        </trans-unit>
        <trans-unit id="9afa5e334e28c0ce37c5ef76de0154fcbd75e3db" translate="yes" xml:space="preserve">
          <source>Here, our user model is called &lt;code&gt;user&lt;/code&gt;, with a lowercase u - This means that the property in the object should also be &lt;code&gt;user&lt;/code&gt;. If the name given to &lt;code&gt;sequelize.define&lt;/code&gt; was &lt;code&gt;User&lt;/code&gt;, the key in the object should also be &lt;code&gt;User&lt;/code&gt;. Likewise for &lt;code&gt;addresses&lt;/code&gt;, except it's pluralized being a &lt;code&gt;hasMany&lt;/code&gt; association.</source>
          <target state="translated">在这里，我们的用户模型称为 &lt;code&gt;user&lt;/code&gt; ，具有小写的u-这意味着对象中的属性也应该是 &lt;code&gt;user&lt;/code&gt; 。如果给 &lt;code&gt;sequelize.define&lt;/code&gt; 的名称是 &lt;code&gt;User&lt;/code&gt; ，则对象中的键也应该是 &lt;code&gt;User&lt;/code&gt; 。对于 &lt;code&gt;addresses&lt;/code&gt; ，除了它是 &lt;code&gt;hasMany&lt;/code&gt; 关联的复数形式。</target>
        </trans-unit>
        <trans-unit id="139103af93155175db170f4086701037ce627db7" translate="yes" xml:space="preserve">
          <source>Hierarchies</source>
          <target state="translated">Hierarchies</target>
        </trans-unit>
        <trans-unit id="4c2c702395b304a44afd07f98c51e1749b23060d" translate="yes" xml:space="preserve">
          <source>Historical records / Time travel</source>
          <target state="translated">历史记录/时间旅行</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="4212538b69426994af61524680ab6c713fab4826" translate="yes" xml:space="preserve">
          <source>Hooks (also known as lifecycle events), are functions which are called before and after calls in sequelize are executed. For example, if you want to always set a value on a model before saving it, you can add a &lt;code&gt;beforeUpdate&lt;/code&gt; hook.</source>
          <target state="translated">挂钩（也称为生命周期事件）是在执行sequelize中的调用之前和之后调用的函数。例如，如果要在保存之前始终在模型上设置值，则可以添加 &lt;code&gt;beforeUpdate&lt;/code&gt; 挂钩。</target>
        </trans-unit>
        <trans-unit id="f00c9b0e6957fcef4079e622b05e8f359ef558dc" translate="yes" xml:space="preserve">
          <source>HostNotFoundError</source>
          <target state="translated">HostNotFoundError</target>
        </trans-unit>
        <trans-unit id="df98405c75e3d2293644f3903f9ba376eecd65dd" translate="yes" xml:space="preserve">
          <source>HostNotReachableError</source>
          <target state="translated">HostNotReachableError</target>
        </trans-unit>
        <trans-unit id="deb41f9eccd872d97cae66101673dc591a3dd320" translate="yes" xml:space="preserve">
          <source>How many rows to delete</source>
          <target state="translated">要删除多少行</target>
        </trans-unit>
        <trans-unit id="55c6fc1c78b7f02391f35f14b313aa07ac416870" translate="yes" xml:space="preserve">
          <source>How many rows to undelete (only for mysql)</source>
          <target state="translated">要取消删除多少行(仅适用于mysql)</target>
        </trans-unit>
        <trans-unit id="c74419ff22ba551918695ec2d4d452f7e5aafa8c" translate="yes" xml:space="preserve">
          <source>How many rows to update (only for mysql and mariadb, implemented as TOP(n) for MSSQL; for sqlite it is supported only when rowid is present)</source>
          <target state="translated">更新多少行(只适用于mysql和mariadb,MSSQL实现为TOP(n),sqlite只有当rowid存在时才支持)</target>
        </trans-unit>
        <trans-unit id="6ae043fac4f95946de2cb5d70a20b98cbb4b4075" translate="yes" xml:space="preserve">
          <source>How many times a failing query is automatically retried.</source>
          <target state="translated">一个失败的查询会自动重试多少次。</target>
        </trans-unit>
        <trans-unit id="bcd7ff308853d4934c2fcd304af01bbf8af438f7" translate="yes" xml:space="preserve">
          <source>How many times a failing query is automatically retried. Set to 0 to disable retrying on SQL_BUSY error.</source>
          <target state="translated">一个失败的查询会自动重试多少次。设置为0可以在SQL_BUSY错误时禁止重试。</target>
        </trans-unit>
        <trans-unit id="cb9871e1bb1811c7e92e66eae26e9dbdc2227fce" translate="yes" xml:space="preserve">
          <source>However, adding &lt;code&gt;hooks: true&lt;/code&gt; explicitly tells Sequelize that optimization is not of your concern and will perform a &lt;code&gt;SELECT&lt;/code&gt; on the associated objects and destroy each instance one by one in order to be able to call the hooks with the right parameters.</source>
          <target state="translated">但是，添加 &lt;code&gt;hooks: true&lt;/code&gt; 明确告诉Sequelize您不必担心优化，它将对关联的对象执行 &lt;code&gt;SELECT&lt;/code&gt; 并逐个销毁每个实例，以便能够使用正确的参数来调用hooks。</target>
        </trans-unit>
        <trans-unit id="c2b8ea142713d4e18b2a52407b042919ba804f65" translate="yes" xml:space="preserve">
          <source>However, if getters and/or setters are defined for &lt;code&gt;field&lt;/code&gt; they will be invoked, instead of returning the value from &lt;code&gt;dataValues&lt;/code&gt;. Accessing properties directly or using &lt;code&gt;get&lt;/code&gt; is preferred for regular use, &lt;code&gt;getDataValue&lt;/code&gt; should only be used for custom getters.</source>
          <target state="translated">但是，如果为 &lt;code&gt;field&lt;/code&gt; 定义了getter和/或setter，则将调用它们，而不是从 &lt;code&gt;dataValues&lt;/code&gt; 返回值。直接访问属性或使用 &lt;code&gt;get&lt;/code&gt; 是常规使用的首选， &lt;code&gt;getDataValue&lt;/code&gt; 仅应用于自定义getter。</target>
        </trans-unit>
        <trans-unit id="3d191358a866703a8af0d57f25666c38b8499366" translate="yes" xml:space="preserve">
          <source>However, please note that whenever you get back a value that is range you will receive:</source>
          <target state="translated">但是,请注意,每当你返回一个范围内的值时,你会收到。</target>
        </trans-unit>
        <trans-unit id="971b6559af147ead7fa90d836302f41e54b0377c" translate="yes" xml:space="preserve">
          <source>However, the code above will result in the following error: &lt;code&gt;Cyclic dependency found. documents is dependent of itself. Dependency chain: documents -&amp;gt; versions =&amp;gt; documents&lt;/code&gt;.</source>
          <target state="translated">但是，上面的代码将导致以下错误： &lt;code&gt;Cyclic dependency found. documents is dependent of itself. Dependency chain: documents -&amp;gt; versions =&amp;gt; documents&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9226f99dd645a71848cf0585c15059d7de868f4" translate="yes" xml:space="preserve">
          <source>IGNORE</source>
          <target state="translated">IGNORE</target>
        </trans-unit>
        <trans-unit id="8ae3e8381a64e36db57a5344790db89d7de90954" translate="yes" xml:space="preserve">
          <source>IMMEDIATE</source>
          <target state="translated">IMMEDIATE</target>
        </trans-unit>
        <trans-unit id="8f3bb7db433392fa9cd059cb669816e6111bb633" translate="yes" xml:space="preserve">
          <source>INET</source>
          <target state="translated">INET</target>
        </trans-unit>
        <trans-unit id="69c8af3292fb9fef906812e99c9acfa99a66fd97" translate="yes" xml:space="preserve">
          <source>INITIALLY_DEFERRED</source>
          <target state="translated">INITIALLY_DEFERRED</target>
        </trans-unit>
        <trans-unit id="d0a0d37857e35a2dc02ec4fe0c913bf1991b276e" translate="yes" xml:space="preserve">
          <source>INITIALLY_IMMEDIATE</source>
          <target state="translated">INITIALLY_IMMEDIATE</target>
        </trans-unit>
        <trans-unit id="c20ea07e32d25c072a65368c234d6f5a88f4521a" translate="yes" xml:space="preserve">
          <source>INSERT</source>
          <target state="translated">INSERT</target>
        </trans-unit>
        <trans-unit id="0fe37e40e5dab3ac411c2ddca6d21991e811acfa" translate="yes" xml:space="preserve">
          <source>INTEGER</source>
          <target state="translated">INTEGER</target>
        </trans-unit>
        <trans-unit id="06b6ace8ca3f18249e8ba4ea9090c0f34564ce1c" translate="yes" xml:space="preserve">
          <source>Identifier</source>
          <target state="translated">Identifier</target>
        </trans-unit>
        <trans-unit id="d9fdf457bfc8e4d5000783186983c15ac6bcde12" translate="yes" xml:space="preserve">
          <source>If a particular field of a model is set to not allow null (with &lt;code&gt;allowNull: false&lt;/code&gt;) and that value has been set to &lt;code&gt;null&lt;/code&gt;, all validators will be skipped and a &lt;code&gt;ValidationError&lt;/code&gt; will be thrown.</source>
          <target state="translated">如果将模型的特定字段设置为不允许null（使用 &lt;code&gt;allowNull: false&lt;/code&gt; ）并且该值已设置为 &lt;code&gt;null&lt;/code&gt; ，则将跳过所有验证器，并抛出 &lt;code&gt;ValidationError&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80d19fa71b3b212078b2af9bb47612878b596815" translate="yes" xml:space="preserve">
          <source>If a single default schema per model is needed, set the &lt;code&gt;options.schema='schema'&lt;/code&gt; parameter during the &lt;code&gt;define()&lt;/code&gt; call for the model.</source>
          <target state="translated">如果每个模型需要单个默认架构，请在模型的 &lt;code&gt;define()&lt;/code&gt; 调用期间设置 &lt;code&gt;options.schema='schema'&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="8ec2460c5c0105c3640d21141a54ba2c766998ff" translate="yes" xml:space="preserve">
          <source>If a string is provided, that column is decremented by the value of &lt;code&gt;by&lt;/code&gt; given in options. If an array is provided, the same is true for each column. If and object is provided, each column is decremented by the value given</source>
          <target state="translated">如果提供一个字符串，该列由价值递减 &lt;code&gt;by&lt;/code&gt; 在选项中给出。如果提供数组，则每一列都适用。如果提供了和对象，则每列都会减少给定的值</target>
        </trans-unit>
        <trans-unit id="a038ac481096e063842e82236359d80e84de916c" translate="yes" xml:space="preserve">
          <source>If a string is provided, that column is incremented by the value of &lt;code&gt;by&lt;/code&gt; given in options. If an array is provided, the same is true for each column. If and object is provided, each column is incremented by the value given.</source>
          <target state="translated">如果提供一个字符串，该列由的值递增 &lt;code&gt;by&lt;/code&gt; 在选项给出。如果提供数组，则每一列都适用。如果提供和对象，则每列将增加给定的值。</target>
        </trans-unit>
        <trans-unit id="d3f8b21413ef2d75f353e547b63ad8a094ceae96" translate="yes" xml:space="preserve">
          <source>If an array is passed, &lt;code&gt;$1&lt;/code&gt; is bound to the 1st element in the array (&lt;code&gt;bind[0]&lt;/code&gt;)</source>
          <target state="translated">如果传递了数组，则将 &lt;code&gt;$1&lt;/code&gt; 绑定到数组中的第一个元素（ &lt;code&gt;bind[0]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="04ff1e23f5982cac50100dca79c353131b430203" translate="yes" xml:space="preserve">
          <source>If an array is passed, &lt;code&gt;?&lt;/code&gt; will be replaced in the order that they appear in the array</source>
          <target state="translated">如果数组传递， &lt;code&gt;?&lt;/code&gt; 将按照它们在数组中出现的顺序进行替换</target>
        </trans-unit>
        <trans-unit id="021622889c30d11d413d8e307364ba9ff4ad40e3" translate="yes" xml:space="preserve">
          <source>If an association is aliased (using the &lt;code&gt;as&lt;/code&gt; option), you must specify this alias when including the model. Notice how the user's &lt;code&gt;Tool&lt;/code&gt;s are aliased as &lt;code&gt;Instruments&lt;/code&gt; above. In order to get that right you have to specify the model you want to load, as well as the alias:</source>
          <target state="translated">如果关联是别名的（使用 &lt;code&gt;as&lt;/code&gt; 选项），则在包含模型时必须指定此别名。注意，此时的用户的 &lt;code&gt;Tool&lt;/code&gt; s的别名为 &lt;code&gt;Instruments&lt;/code&gt; 上面。为了做到这一点，您必须指定要加载的模型以及别名：</target>
        </trans-unit>
        <trans-unit id="c54b915fccb2e4ddf42da3781b85ba11c94eff3f" translate="yes" xml:space="preserve">
          <source>If an attribute name of the table contains dots, the resulting objects will be nested. This is due to the usage of &lt;a href=&quot;https://github.com/mickhansen/dottie.js/&quot;&gt;dottie.js&lt;/a&gt; under the hood. See below:</source>
          <target state="translated">如果表的属性名称包含点，则将嵌套结果对象。这是由于&lt;a href=&quot;https://github.com/mickhansen/dottie.js/&quot;&gt;引擎盖&lt;/a&gt;下使用dottie.js。见下文：</target>
        </trans-unit>
        <trans-unit id="7e8f4a0270879aa34288ff325e1734fc57abfc56" translate="yes" xml:space="preserve">
          <source>If an object is passed, &lt;code&gt;$key&lt;/code&gt; is bound to &lt;code&gt;object['key']&lt;/code&gt;. Each key must begin with a non-numeric char. &lt;code&gt;$1&lt;/code&gt; is not a valid key, even if &lt;code&gt;object['1']&lt;/code&gt; exists.</source>
          <target state="translated">如果传递了对象，则 &lt;code&gt;$key&lt;/code&gt; 绑定到 &lt;code&gt;object['key']&lt;/code&gt; 。每个键必须以非数字字符开头。 &lt;code&gt;$1&lt;/code&gt; 不是有效的密钥，即使 &lt;code&gt;object['1']&lt;/code&gt; 存在。</target>
        </trans-unit>
        <trans-unit id="6e127f4ede46c56ba8a869fe2aad272d846c5e9a" translate="yes" xml:space="preserve">
          <source>If an object is passed, &lt;code&gt;:key&lt;/code&gt; will be replaced with the keys from that object. If the object contains keys not found in the query or vice versa, an exception will be thrown.</source>
          <target state="translated">如果传递了一个对象， &lt;code&gt;:key&lt;/code&gt; 将被该对象的键替换。如果对象包含在查询中找不到的键，反之亦然，则将引发异常。</target>
        </trans-unit>
        <trans-unit id="9304ce1affc25db6aa67ee93e8d468669f898fd5" translate="yes" xml:space="preserve">
          <source>If called with a dot.separated key on a JSON/JSONB attribute it will set the value nested and flag the entire object as changed.</source>
          <target state="translated">如果在JSON/JSONB属性上用dot.separated key调用,它将设置嵌套的值,并将整个对象标记为改变。</target>
        </trans-unit>
        <trans-unit id="300a90b91f546fafc57ddf54696a6ab280b20fc2" translate="yes" xml:space="preserve">
          <source>If called without a key, returns the previous values for all values which have changed</source>
          <target state="translated">如果在没有键的情况下调用,则返回所有改变过的值的前值。</target>
        </trans-unit>
        <trans-unit id="db0b72801ce4daab0ede65373af164330463fbaa" translate="yes" xml:space="preserve">
          <source>If changed is called with a string it will return a boolean indicating whether the value of that key in &lt;code&gt;dataValues&lt;/code&gt; is different from the value in &lt;code&gt;_previousDataValues&lt;/code&gt;.</source>
          <target state="translated">如果改变是带一个弦，它就会返回一个布尔值，表示该键的值是否 &lt;code&gt;dataValues&lt;/code&gt; 是从价值不同 &lt;code&gt;_previousDataValues&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b57e7f29c55e30f10a44c4cebddd8704ddabfd60" translate="yes" xml:space="preserve">
          <source>If changed is called without an argument and no keys have changed, it will return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">如果在没有参数的情况下调用changed，并且没有键已更改，则它将返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb8a52b4f780a30671fc27031ceae2a7e48b802e" translate="yes" xml:space="preserve">
          <source>If changed is called without an argument, it will return an array of keys that have changed.</source>
          <target state="translated">如果调用changed没有参数,它将返回一个已经改变的键数组。</target>
        </trans-unit>
        <trans-unit id="20c37c0197f08cf51e26c1e2044ffa20d35483f5" translate="yes" xml:space="preserve">
          <source>If false do not prepend the query with the search_path (Postgres only)</source>
          <target state="translated">如果为false,不在查询前加上search_path(仅Postgres)。</target>
        </trans-unit>
        <trans-unit id="657ba5fa03244f7aee9eb6c421c8a628fdb8a23e" translate="yes" xml:space="preserve">
          <source>If false, the column will have a NOT NULL constraint, and a not null validation will be run before an instance is saved.</source>
          <target state="translated">如果为false,该列将有一个NOT NULL约束,并且在保存实例之前将运行一个非空验证。</target>
        </trans-unit>
        <trans-unit id="b7040facc6b4350a46a2def78c5b8c73e7bcb1a8" translate="yes" xml:space="preserve">
          <source>If false, validations won't be run.</source>
          <target state="translated">如果为假,则不会运行验证。</target>
        </trans-unit>
        <trans-unit id="44cd1fb91500ac78a5a510a589057a193ab6aa6d" translate="yes" xml:space="preserve">
          <source>If force is true, any existing functions with the same parameters will be replaced. For postgres, this means using &lt;code&gt;CREATE OR REPLACE FUNCTION&lt;/code&gt; instead of &lt;code&gt;CREATE FUNCTION&lt;/code&gt;. Default is false</source>
          <target state="translated">如果force为true，则将替换所有具有相同参数的现有功能。对于postgres，这意味着使用 &lt;code&gt;CREATE OR REPLACE FUNCTION&lt;/code&gt; 代替 &lt;code&gt;CREATE FUNCTION&lt;/code&gt; 。默认为假</target>
        </trans-unit>
        <trans-unit id="6e07f5f6020b14d25df9a8addee707cdd889572f" translate="yes" xml:space="preserve">
          <source>If force is true, each Model will run &lt;code&gt;DROP TABLE IF EXISTS&lt;/code&gt;, before it tries to create its own table</source>
          <target state="translated">如果force为true，则每个模型都将在尝试创建自己的表之前运行 &lt;code&gt;DROP TABLE IF EXISTS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e59b7682415bc819345577fa12bec6b2f9cba27" translate="yes" xml:space="preserve">
          <source>If freezeTableName is true, sequelize will not try to alter the model name to get the table name. Otherwise, the model name will be pluralized</source>
          <target state="translated">如果freezeTableName为true,sequelize将不会尝试改变模型名来获取表名。否则,模型名将被复数化。</target>
        </trans-unit>
        <trans-unit id="674d7115644f88b378cc58e55b691d817654dfdd" translate="yes" xml:space="preserve">
          <source>If hooks is true then beforeSync, afterSync, beforeBulkSync, afterBulkSync hooks will be called</source>
          <target state="translated">如果hooks为true,那么beforeSync、afterSync、beforeBulkSync、afterBulkSync钩子将被调用。</target>
        </trans-unit>
        <trans-unit id="2e6f9f406f5bd815e7f824d0bfb0ffc5524dc505" translate="yes" xml:space="preserve">
          <source>If key is given and a field or virtual getter is present for the key it will call that getter - else it will return the value for key.</source>
          <target state="translated">如果给定key,并且key存在一个字段或虚拟getter,它将调用该getter,否则将返回key的值。</target>
        </trans-unit>
        <trans-unit id="128a3eaafb2aa713f5d89656e1b713c3a3e56e43" translate="yes" xml:space="preserve">
          <source>If no key is given, returns all values of the instance, also invoking virtual getters.</source>
          <target state="translated">如果没有给定键,则返回实例的所有值,也调用虚拟获取器。</target>
        </trans-unit>
        <trans-unit id="894bd939fc9fbd940725facf4300464356fb6a66" translate="yes" xml:space="preserve">
          <source>If no transaction is passed in the &lt;code&gt;options&lt;/code&gt; object, a new transaction will be created internally, to prevent the race condition where a matching row is created by another connection after the find but before the insert call. However, it is not always possible to handle this case in SQLite, specifically if one transaction inserts and another tries to select before the first one has committed. In this case, an instance of sequelize. TimeoutError will be thrown instead. If a transaction is created, a savepoint will be created instead, and any unique constraint violation will be handled internally.</source>
          <target state="translated">如果未在 &lt;code&gt;options&lt;/code&gt; 对象中传递任何事务，则将在内部创建一个新事务，以防止出现竞争情况，即在find之后但在insert调用之前，另一个连接创建了匹配的行。但是，并非总是可以在SQLite中处理这种情况，特别是如果一个事务插入并且另一个事务在第一个事务提交之前试图选择的话。在这种情况下，出现sequelize实例。而是抛出TimeoutError。如果创建了事务，则将创建一个保存点，并且将在内部处理任何唯一约束冲突。</target>
        </trans-unit>
        <trans-unit id="55f7b072e47da9d3a76ee479789dd9f0b9a7718b" translate="yes" xml:space="preserve">
          <source>If set is called with an object, it will loop over the object, and call set recursively for each key, value pair. If you set raw to true, the underlying dataValues will either be set directly to the object passed, or used to extend dataValues, if dataValues already contain values.</source>
          <target state="translated">如果用一个对象调用set,就会在这个对象上循环,并对每个键、值对递归调用set。如果将raw设置为true,那么底层的dataValues将直接设置为传递的对象,或者如果dataValues已经包含值,则用于扩展dataValues。</target>
        </trans-unit>
        <trans-unit id="391fbbeca7f5b84a6e11a9f54c2e0f1487c1d4cc" translate="yes" xml:space="preserve">
          <source>If set to true, destroy will SELECT all records matching the where parameter and will execute before / after destroy hooks on each row</source>
          <target state="translated">如果设置为 &quot;true&quot;,destroy将SELECT所有与where参数匹配的记录,并在每条记录上执行destroy前/后的钩子。</target>
        </trans-unit>
        <trans-unit id="06b008b34268e778c426cab5ae74a85c1075bda2" translate="yes" xml:space="preserve">
          <source>If set to true, dialects that support it will use TRUNCATE instead of DELETE FROM. If a table is truncated the where and limit options are ignored</source>
          <target state="translated">如果设置为true,支持它的方言将使用TRUNCATE代替DELETE FROM。如果一个表被截断,where和limit选项将被忽略。</target>
        </trans-unit>
        <trans-unit id="38d8c40738b16274aefd629da92a6bb29ab47eb3" translate="yes" xml:space="preserve">
          <source>If set to true, field and virtual setters will be ignored</source>
          <target state="translated">如果设置为 &quot;true&quot;,字段和虚拟设置器将被忽略。</target>
        </trans-unit>
        <trans-unit id="27b3827a991183e8f28bbcc85806f70fa71c8f62" translate="yes" xml:space="preserve">
          <source>If set to true, included instances will be returned as plain objects</source>
          <target state="translated">如果设置为 &quot;true&quot;,包含的实例将作为普通对象返回。</target>
        </trans-unit>
        <trans-unit id="eb40b80fd32cf8e71525ff0fe2f8efca5a8f93fe" translate="yes" xml:space="preserve">
          <source>If set to true, paranoid models will actually be deleted</source>
          <target state="translated">如果设置为 &quot;true&quot;,偏执的模型实际上会被删除。</target>
        </trans-unit>
        <trans-unit id="a720a3ae5cb54b9f1a92c2a8683add3f1fa36c95" translate="yes" xml:space="preserve">
          <source>If set to true, restore will find all records within the where parameter and will execute before / after bulkRestore hooks on each row</source>
          <target state="translated">如果设置为 &quot;true&quot;,reduce将在where参数范围内找到所有记录,并在每一行的bulkRestore钩子之前/之后执行。</target>
        </trans-unit>
        <trans-unit id="c3f750e72324e6657c8b56d788253264d692f468" translate="yes" xml:space="preserve">
          <source>If set to true, values will ignore field and virtual setters.</source>
          <target state="translated">如果设置为 &quot;true&quot;,数值将忽略字段和虚拟设置器。</target>
        </trans-unit>
        <trans-unit id="2a225688455376882530e8dba312211d2bcbc470" translate="yes" xml:space="preserve">
          <source>If set, sequelize will map the attribute name to a different name in the database</source>
          <target state="translated">如果设置,sequelize将把属性名映射到数据库中的不同名称。</target>
        </trans-unit>
        <trans-unit id="cc207bb584dc6def0a25ec33cd2870eeed91a21b" translate="yes" xml:space="preserve">
          <source>If specified, load the dialect library from this path. For example, if you want to use pg.js instead of pg when connecting to a pg database, you should specify '/path/to/pg.js' here</source>
          <target state="translated">如果指定,则从这个路径加载方言库。例如,如果你想在连接pg数据库时使用pg.js而不是pg,你应该在这里指定'/path/to/pg.js'。</target>
        </trans-unit>
        <trans-unit id="5220457eb8ff7b1a3c9c11e68260aadf24c052ae" translate="yes" xml:space="preserve">
          <source>If specified, use this dialect library. For example, if you want to use pg.js instead of pg when connecting to a pg database, you should specify 'require(&quot;pg.js&quot;)' here</source>
          <target state="translated">如果指定了,就使用这个方言库。例如,如果你想在连接到pg数据库时使用pg.js而不是pg,你应该在这里指定'require(&quot;pg.js&quot;)'。</target>
        </trans-unit>
        <trans-unit id="1dae209bc98d06b2e47281691116b5fbe149490d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;paranoid&lt;/code&gt; options is true, the object will not be deleted, instead the &lt;code&gt;deletedAt&lt;/code&gt; column will be set to the current timestamp. To force the deletion, you can pass &lt;code&gt;force: true&lt;/code&gt; to the destroy call:</source>
          <target state="translated">如果 &lt;code&gt;paranoid&lt;/code&gt; 选项为true，则不会删除该对象，而是将 &lt;code&gt;deletedAt&lt;/code&gt; 列设置为当前时间戳。要强制删除，您可以将 &lt;code&gt;force: true&lt;/code&gt; 传递给destroy调用：</target>
        </trans-unit>
        <trans-unit id="89216aed70fb8c41aa23d73029989645c25f0d2e" translate="yes" xml:space="preserve">
          <source>If the hook has been called in the process of a transacted operation, this makes sure that your dependent read/write is a part of that same transaction. If the hook is not transacted, you have simply specified &lt;code&gt;{ transaction: null }&lt;/code&gt; and can expect the default behaviour.</source>
          <target state="translated">如果在事务处理过程中调用了该挂钩，则可以确保依赖的读/写是同一事务的一部分。如果未处理该挂钩，则只需指定 &lt;code&gt;{ transaction: null }&lt;/code&gt; ，即可获得默认行为。</target>
        </trans-unit>
        <trans-unit id="2755694b8eb30539d0dbf98759fe01c4187fb45f" translate="yes" xml:space="preserve">
          <source>If this column references another table, provide it here as a Model, or a string</source>
          <target state="translated">如果这一列引用了另一个表,请在这里以Model或字符串的形式提供。</target>
        </trans-unit>
        <trans-unit id="1c2890cf339691d4d47faf2398abe6e1b023205e" translate="yes" xml:space="preserve">
          <source>If true a unique key will be generated from the foreign keys used (might want to turn this off and create specific unique keys when using scopes)</source>
          <target state="translated">如果为真,将从所使用的外键中生成一个唯一的密钥(在使用作用域时,可能需要关闭此功能并创建特定的唯一密钥)</target>
        </trans-unit>
        <trans-unit id="2856a473591152d31ef4a0266e32a8671fc7732b" translate="yes" xml:space="preserve">
          <source>If true, append RETURNING &amp;lt;model columns&amp;gt; to get back all defined values; if an array of column names, append RETURNING &amp;lt;columns&amp;gt; to get back specific columns (Postgres only)</source>
          <target state="translated">如果为true，则附加RETURNING &amp;lt;模型列&amp;gt;以获取所有定义的值；否则，返回0。如果是列名称数组，则附加RETURNING &amp;lt;columns&amp;gt;以获取特定的列（仅适用于Postgres）</target>
        </trans-unit>
        <trans-unit id="ac32e94080083f62fd15d534737523a9a47f0b0e" translate="yes" xml:space="preserve">
          <source>If true, combined with autoIncrement=true, will use Postgres &lt;code&gt;GENERATED BY DEFAULT AS IDENTITY&lt;/code&gt; instead of &lt;code&gt;SERIAL&lt;/code&gt;. Postgres 10+ only.</source>
          <target state="translated">如果为true，则与autoIncrement = true结合使用，将使用 &lt;code&gt;GENERATED BY DEFAULT AS IDENTITY&lt;/code&gt; Postgres 作为 ID 而不是 &lt;code&gt;SERIAL&lt;/code&gt; 。仅适用于Postgres 10+。</target>
        </trans-unit>
        <trans-unit id="4df84c739c5fec04cd33156cf8d026bf97b1a13f" translate="yes" xml:space="preserve">
          <source>If true, converts to a right join if dialect support it. Ignored if &lt;code&gt;include.required&lt;/code&gt; is true.</source>
          <target state="translated">如果为true，则在方言支持的情况下转换为右连接。如果 &lt;code&gt;include.required&lt;/code&gt; 为true，则忽略。</target>
        </trans-unit>
        <trans-unit id="3e0dc1c538227d7485952dc6d28c4c1abd9d5955" translate="yes" xml:space="preserve">
          <source>If true, converts to an inner join, which means that the parent model will only be loaded if it has any matching children. True if &lt;code&gt;include.where&lt;/code&gt; is set, false otherwise.</source>
          <target state="translated">如果为true，则转换为内部联接，这意味着仅当具有任何匹配的子代时才加载父模型。如果设置了 &lt;code&gt;include.where&lt;/code&gt; ,则为true，否则为false。</target>
        </trans-unit>
        <trans-unit id="81d2e26a6f45fb983320c358ee03e36d4177246b" translate="yes" xml:space="preserve">
          <source>If true, fetches back auto generated values (Postgres only)</source>
          <target state="translated">如果为真,取回自动生成的值(仅Postgres)。</target>
        </trans-unit>
        <trans-unit id="9493e0278e049ef4ff4652a3baff31d06e297e09" translate="yes" xml:space="preserve">
          <source>If true, only non-deleted records will be returned. If false, both deleted and non-deleted records will be returned. Only applies if &lt;code&gt;options.paranoid&lt;/code&gt; is true for the model.</source>
          <target state="translated">如果为true，则仅返回未删除的记录。如果为false，则将返回已删除和未删除的记录。仅当 &lt;code&gt;options.paranoid&lt;/code&gt; 对模型为true时适用。</target>
        </trans-unit>
        <trans-unit id="8ce8f96e01d05bf135e8ac150e4e97d603a39cd8" translate="yes" xml:space="preserve">
          <source>If true, only non-deleted records will be updated. If false, both deleted and non-deleted records will be updated. Only applies if &lt;code&gt;options.paranoid&lt;/code&gt; is true for the model.</source>
          <target state="translated">如果为true，则仅更新未删除的记录。如果为false，则将更新已删除和未删除的记录。仅当 &lt;code&gt;options.paranoid&lt;/code&gt; 对模型为true时适用。</target>
        </trans-unit>
        <trans-unit id="e6c3614407ad68627e43871b206c08231a35fcb2" translate="yes" xml:space="preserve">
          <source>If true, runs a separate query to fetch the associated instances, only supported for hasMany associations</source>
          <target state="translated">如果为true,运行一个单独的查询来获取关联的实例,只支持hasMany关联。</target>
        </trans-unit>
        <trans-unit id="647d7c653d76bc8224e8446161299293bf7a8229" translate="yes" xml:space="preserve">
          <source>If true, sequelize will not try to format the results of the query, or build an instance of a model from the result</source>
          <target state="translated">如果为真,sequelize将不会尝试格式化查询结果,也不会从结果中构建一个模型的实例。</target>
        </trans-unit>
        <trans-unit id="0ba0bbc2d0ad37b59e2f4202a1fa65789943978b" translate="yes" xml:space="preserve">
          <source>If true, the column will get a unique constraint. If a string is provided, the column will be part of a composite unique index. If multiple columns have the same string, they will be part of the same unique index</source>
          <target state="translated">如果为true,列将获得一个唯一的约束。如果提供了一个字符串,该列将成为复合唯一索引的一部分。如果多个列有相同的字符串,它们将成为同一个唯一索引的一部分。</target>
        </trans-unit>
        <trans-unit id="beb79f16ad3fb0f8cdb6f793480ca423b3cb5429" translate="yes" xml:space="preserve">
          <source>If true, the updatedAt timestamp will not be updated.</source>
          <target state="translated">如果为真,则不会更新updateAt时间戳。</target>
        </trans-unit>
        <trans-unit id="d05e957cd328c4b4ff8ea91a8a38cc0b12d2f924" translate="yes" xml:space="preserve">
          <source>If true, this attribute will be marked as primary key</source>
          <target state="translated">如果为真,该属性将被标记为主键。</target>
        </trans-unit>
        <trans-unit id="08f9a9c95786ae05c26d607345400a2e23ad1516" translate="yes" xml:space="preserve">
          <source>If true, this column will be set to auto increment</source>
          <target state="translated">如果为 &quot;true&quot;,此列将被设置为自动递增。</target>
        </trans-unit>
        <trans-unit id="75c4ea047705366df87e56ce4937449851e86344" translate="yes" xml:space="preserve">
          <source>If true, transforms objects with &lt;code&gt;.&lt;/code&gt; separated property names into nested objects using &lt;a href=&quot;https://github.com/mickhansen/dottie.js&quot;&gt;dottie.js&lt;/a&gt;. For example { 'user.username': 'john' } becomes { user: { username: 'john' }}. When &lt;code&gt;nest&lt;/code&gt; is true, the query type is assumed to be &lt;code&gt;'SELECT'&lt;/code&gt;, unless otherwise specified</source>
          <target state="translated">如果为true，则使用转换对象 &lt;code&gt;.&lt;/code&gt; 使用&lt;a href=&quot;https://github.com/mickhansen/dottie.js&quot;&gt;dottie.js&lt;/a&gt;将属性名称分隔为嵌套对象。例如，{'user.username'：'john'}变为{user：{username：'john'}}。当 &lt;code&gt;nest&lt;/code&gt; 为true时，除非另外指定，否则查询类型假定为 &lt;code&gt;'SELECT'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32198f81d975b55d40ec70c7e2308553a94edcba" translate="yes" xml:space="preserve">
          <source>If validation fails, the promise is rejected with an array-like &lt;a href=&quot;http://bluebirdjs.com/docs/api/aggregateerror.html&quot;&gt;AggregateError&lt;/a&gt;</source>
          <target state="translated">如果验证失败，则通过类似数组的&lt;a href=&quot;http://bluebirdjs.com/docs/api/aggregateerror.html&quot;&gt;AggregateError&lt;/a&gt;拒绝promise</target>
        </trans-unit>
        <trans-unit id="0186aab835641bad03f7589f88e576215349c709" translate="yes" xml:space="preserve">
          <source>If we had not included the transaction option in our call to &lt;code&gt;User.update&lt;/code&gt; in the preceding code, no change would have occurred, since our newly created user does not exist in the database until the pending transaction has been committed.</source>
          <target state="translated">如果在前面的代码中对 &lt;code&gt;User.update&lt;/code&gt; 的调用中未包含交易选项，则不会发生任何更改，因为在提交未决交易之前，数据库中不存在我们新创建的用户。</target>
        </trans-unit>
        <trans-unit id="bb6b5c50fe4ab3f465e27baa8bc48b315568f529" translate="yes" xml:space="preserve">
          <source>If you are accepting values directly from the user, it might be beneficial to limit the columns that you want to actually insert.&lt;code&gt;bulkCreate()&lt;/code&gt;accepts an options object as the second parameter. The object can have a &lt;code&gt;fields&lt;/code&gt; parameter, (an array) to let it know which fields you want to build explicitly</source>
          <target state="translated">如果您直接从用户接受值，则限制要实际插入的列可能会有所帮助。 &lt;code&gt;bulkCreate()&lt;/code&gt; 接受一个options对象作为第二个参数。该对象可以具有 &lt;code&gt;fields&lt;/code&gt; 参数（一个数组），以使其知道要显式构建的字段</target>
        </trans-unit>
        <trans-unit id="5ac8d819fedae82d2ebf0ab77182ee9f429b9d81" translate="yes" xml:space="preserve">
          <source>If you are running a type of query where you don't need the metadata, for example a &lt;code&gt;SELECT&lt;/code&gt; query, you can pass in a query type to make sequelize format the results:</source>
          <target state="translated">如果您在运行不需要元数据的查询类型（例如 &lt;code&gt;SELECT&lt;/code&gt; 查询），则可以传入查询类型以对结果进行序列化格式化：</target>
        </trans-unit>
        <trans-unit id="c6462f72311ba7a8cddf624ea0257e29162d1f7f" translate="yes" xml:space="preserve">
          <source>If you are working with the PostgreSQL TIMESTAMP WITHOUT TIME ZONE and you need to parse it to a different timezone, please use the pg library's own parser:</source>
          <target state="translated">如果你使用的是PostgreSQL的TIMESTAMP WITHOUT TIME ZONE,需要解析到不同的时区,请使用pg库自带的解析器。</target>
        </trans-unit>
        <trans-unit id="74ddcd65a25eb03b0ad2ef462e8d2c98a3998a61" translate="yes" xml:space="preserve">
          <source>If you do not want timestamps on your models, only want some timestamps, or you are working with an existing database where the columns are named something else, jump straight on to &lt;a href=&quot;models-definition#configuration&quot;&gt;configuration&lt;/a&gt; to see how to do that.</source>
          <target state="translated">如果您不想在模型上使用时间戳，而只想要一些时间戳，或者您正在使用现有的数据库（其中的列被命名为其他名称），请直接进入&lt;a href=&quot;models-definition#configuration&quot;&gt;配置&lt;/a&gt;以了解如何做。</target>
        </trans-unit>
        <trans-unit id="f3c5e7d03c6a36a4f0cced22fb56e3a7206de7ed" translate="yes" xml:space="preserve">
          <source>If you have &lt;a href=&quot;https://github.com/Jeff-Lewis/cls-hooked&quot;&gt;CLS&lt;/a&gt; enabled, the transaction will automatically be passed to any query that runs within the callback</source>
          <target state="translated">如果启用了&lt;a href=&quot;https://github.com/Jeff-Lewis/cls-hooked&quot;&gt;CLS&lt;/a&gt;，则事务将自动传递给回调中运行的任何查询</target>
        </trans-unit>
        <trans-unit id="89ecba0f6c4969c1946f16a7277505b83b58a142" translate="yes" xml:space="preserve">
          <source>If you have any general settings that apply to all replicas you do not need to provide them for each instance. In the code above, database name and port is propagated to all replicas. The same will happen for user and password, if you leave them out for any of the replicas. Each replica has the following options:&lt;code&gt;host&lt;/code&gt;,&lt;code&gt;port&lt;/code&gt;,&lt;code&gt;username&lt;/code&gt;,&lt;code&gt;password&lt;/code&gt;,&lt;code&gt;database&lt;/code&gt;.</source>
          <target state="translated">如果您具有适用于所有副本的任何常规设置，则无需为每个实例提供它们。在上面的代码中，数据库名称和端口将传播到所有副本。如果将用户名和密码留给任何副本，则同样会发生。每个副本都有以下选项： &lt;code&gt;host&lt;/code&gt; ， &lt;code&gt;port&lt;/code&gt; ， &lt;code&gt;username&lt;/code&gt; ， &lt;code&gt;password&lt;/code&gt; ， &lt;code&gt;database&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9bb5e89572ab05d67a9192d69c8e80c0b0d84ee4" translate="yes" xml:space="preserve">
          <source>If you have soft-deleted an instance of a model with &lt;code&gt;paranoid: true&lt;/code&gt;, and would like to undo the deletion, use the &lt;code&gt;restore&lt;/code&gt; method:</source>
          <target state="translated">如果您已使用 &lt;code&gt;paranoid: true&lt;/code&gt; 软删除了模型的实例，并想撤消删除操作，请使用 &lt;code&gt;restore&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="83a275a19fc7524ebcb47eee01b5247c06418a43" translate="yes" xml:space="preserve">
          <source>If you know that a model will always use the same alias in associations, you can provide it when creating the model</source>
          <target state="translated">如果您知道一个模型将始终在关联中使用相同的别名,您可以在创建模型时提供它。</target>
        </trans-unit>
        <trans-unit id="d0d51269897d4509e5bc63cdb1763b5e6f2abee2" translate="yes" xml:space="preserve">
          <source>If you log an instance you will notice, that there is a lot of additional stuff. In order to hide such stuff and reduce it to the very interesting information, you can use the&lt;code&gt;get&lt;/code&gt;-attribute. Calling it with the option &lt;code&gt;plain&lt;/code&gt; = true will only return the values of an instance.</source>
          <target state="translated">如果您记录一个实例，您会注意到，还有很多其他的东西。为了隐藏此类内容并将其简化为非常有趣的信息，可以使用 &lt;code&gt;get&lt;/code&gt; -attribute。使用 &lt;code&gt;plain&lt;/code&gt; = true 选项调用它只会返回实例的值。</target>
        </trans-unit>
        <trans-unit id="6b08bb3d2e947f978268c076db082fbb034c017e" translate="yes" xml:space="preserve">
          <source>If you need to get your instance in sync, you can use the method&lt;code&gt;reload&lt;/code&gt;. It will fetch the current data from the database and overwrite the attributes of the model on which the method has been called on.</source>
          <target state="translated">如果需要同步实例，则可以使用 &lt;code&gt;reload&lt;/code&gt; 方法。它将从数据库中获取当前数据，并覆盖调用该方法的模型的属性。</target>
        </trans-unit>
        <trans-unit id="2916bd0b55b8aca641a06d58426ff56557b254b3" translate="yes" xml:space="preserve">
          <source>If you only need some of the attributes from the join table, you can provide an array with the attributes you want:</source>
          <target state="translated">如果你只需要连接表中的一些属性,你可以提供一个包含你想要的属性的数组。</target>
        </trans-unit>
        <trans-unit id="fa84e598877d14dc3cb73bc586151be45d2ecb1a" translate="yes" xml:space="preserve">
          <source>If you provide an &lt;code&gt;include&lt;/code&gt; option, the number of matching associations will be counted instead.</source>
          <target state="translated">如果提供了 &lt;code&gt;include&lt;/code&gt; 选项，则将计算匹配的关联数。</target>
        </trans-unit>
        <trans-unit id="d863b772f59c7c1fea122e1663917c43efb011ee" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;Model.bulkCreate(...)&lt;/code&gt; with the &lt;code&gt;updateOnDuplicate&lt;/code&gt; option, changes made in the hook to fields that aren't given in the &lt;code&gt;updateOnDuplicate&lt;/code&gt; array will not be persisted to the database. However it is possible to change the updateOnDuplicate option inside the hook if this is what you want.</source>
          <target state="translated">如果将 &lt;code&gt;Model.bulkCreate(...)&lt;/code&gt; 与 &lt;code&gt;updateOnDuplicate&lt;/code&gt; 选项一起使用，则在钩子中对 &lt;code&gt;updateOnDuplicate&lt;/code&gt; 数组中未提供的字段所做的更改将不会持久保存到数据库中。但是，如果需要的话，可以在挂钩中更改updateOnDuplicate选项。</target>
        </trans-unit>
        <trans-unit id="afab7da99be65b4a2073f953b17af81dc02a3ed5" translate="yes" xml:space="preserve">
          <source>If you want Sequelize to automatically create the table (or modify it as needed) according to your model definition, you can use the &lt;code&gt;sync&lt;/code&gt; method, as follows:</source>
          <target state="translated">如果希望Sequelize根据模型定义自动创建表（或根据需要对其进行修改），则可以使用 &lt;code&gt;sync&lt;/code&gt; 方法，如下所示：</target>
        </trans-unit>
        <trans-unit id="f75ef969d5f06d081d766c60d1dd21fc30d0d354" translate="yes" xml:space="preserve">
          <source>If you want additional attributes in your join table, you can define a model for the join table in sequelize, before you define the association, and then tell sequelize that it should use that model for joining, instead of creating a new one:</source>
          <target state="translated">如果你想在你的联接表中有额外的属性,你可以在定义关联之前,在sequelize中为联接表定义一个模型,然后告诉sequelize它应该使用该模型进行联接,而不是创建一个新的模型。</target>
        </trans-unit>
        <trans-unit id="7cb72ec6577efe47bd8b75930fe054e841bde6bc" translate="yes" xml:space="preserve">
          <source>If you want sequelize to handle timestamps, but only want some of them, or want your timestamps to be called something else, you can override each column individually:</source>
          <target state="translated">如果你想让sequelize处理时间戳,但只想要其中的一部分,或者想让你的时间戳被称为其他的东西,你可以单独覆盖每一列。</target>
        </trans-unit>
        <trans-unit id="b777ec494ddce543c16902d51c471905b16fa9a5" translate="yes" xml:space="preserve">
          <source>If you want to apply another scope alongside the default scope, pass the key &lt;code&gt;defaultScope&lt;/code&gt; to &lt;code&gt;.scope&lt;/code&gt;:</source>
          <target state="translated">如果要在默认范围之外应用另一个范围，请将键 &lt;code&gt;defaultScope&lt;/code&gt; 传递给 &lt;code&gt;.scope&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0e3d2491ffbe91ae6541c30645933c5644c07ab6" translate="yes" xml:space="preserve">
          <source>If you want to create a belongs to many relationship that does not use the default primary key some setup work is required. You must set the &lt;code&gt;sourceKey&lt;/code&gt; (optionally &lt;code&gt;targetKey&lt;/code&gt;) appropriately for the two ends of the belongs to many. Further you must also ensure you have appropriate indexes created on your relationships. For example:</source>
          <target state="translated">如果要创建一个不使用默认主键的&amp;ldquo;属于多个&amp;rdquo;关系，则需要进行一些设置工作。您必须为属于多的两端正确设置 &lt;code&gt;sourceKey&lt;/code&gt; （可选的 &lt;code&gt;targetKey&lt;/code&gt; ）。此外，您还必须确保在关系上创建了适当的索引。例如：</target>
        </trans-unit>
        <trans-unit id="f61f98f630678b685e1f3828dff3238a64205ed5" translate="yes" xml:space="preserve">
          <source>If you want to create a shortcut method to a scope on an associated model, you can pass the scoped model to the association. Consider a shortcut to get all deleted posts for a user:</source>
          <target state="translated">如果你想在关联模型上创建一个作用域的快捷方法,你可以将作用域模型传递给关联。考虑一个获取用户所有已删除帖子的快捷方法。</target>
        </trans-unit>
        <trans-unit id="3b08f9c79138d7fcde3ec61eeae485a38887f673" translate="yes" xml:space="preserve">
          <source>If you want to emit hooks for each individual record, along with the bulk hooks you can pass &lt;code&gt;individualHooks: true&lt;/code&gt; to the call.</source>
          <target state="translated">如果您要为每个单独的记录发出钩子，以及批量钩子，则可以将 &lt;code&gt;individualHooks: true&lt;/code&gt; 传递：true传递给调用。</target>
        </trans-unit>
        <trans-unit id="3b540c12693f5dbf831dc4cc9ca6c1eee425fd4d" translate="yes" xml:space="preserve">
          <source>If you want to modify these, you can pass pool as an options when instantiating Sequelize, as shown above.</source>
          <target state="translated">如果你想修改这些,你可以在实例化Sequelize时将pool作为一个选项传递,如上图所示。</target>
        </trans-unit>
        <trans-unit id="32c8896a0675e31aae1b24c2ac3e8559745e143a" translate="yes" xml:space="preserve">
          <source>If you want to set several target instances, but with different attributes you have to set the attributes on the instance, using a property with the name of the through model:</source>
          <target state="translated">如果你想设置多个目标实例,但属性不同,你必须在实例上设置属性,使用一个带有通模名称的属性。</target>
        </trans-unit>
        <trans-unit id="1ef93ea1c2614431873c694ec0744cd661b60763" translate="yes" xml:space="preserve">
          <source>If you wish to undo a specific seed</source>
          <target state="translated">如果你想撤销一个特定的种子</target>
        </trans-unit>
        <trans-unit id="af863edfd5d71d3f8a26804bb152ee2c2da87ad3" translate="yes" xml:space="preserve">
          <source>If you wish to undo all seeds</source>
          <target state="translated">如果你想撤销所有的种子</target>
        </trans-unit>
        <trans-unit id="c9da777accf0b16f64be8bca9d27fc688c0fd0ba" translate="yes" xml:space="preserve">
          <source>If you wish to undo most recent seed</source>
          <target state="translated">如果你想撤销最近的种子</target>
        </trans-unit>
        <trans-unit id="90e2d3d4a47e5a21011e831e9e97b42a42afde35" translate="yes" xml:space="preserve">
          <source>If you're connecting to the database from a single process, you should create only one Sequelize instance. Sequelize will set up a connection pool on initialization. This connection pool can be configured through the constructor's &lt;code&gt;options&lt;/code&gt; parameter (using &lt;code&gt;options.pool&lt;/code&gt;), as is shown in the following example:</source>
          <target state="translated">如果要从单个进程连接到数据库，则应仅创建一个Sequelize实例。Sequelize将在初始化时建立连接池。可以通过构造函数的 &lt;code&gt;options&lt;/code&gt; 参数（使用 &lt;code&gt;options.pool&lt;/code&gt; ）配置此连接池，如以下示例所示：</target>
        </trans-unit>
        <trans-unit id="6291ffc47760cc842fcd3a2e455f4f99cfb8ed05" translate="yes" xml:space="preserve">
          <source>If you're using SQLite, you should use the following instead:</source>
          <target state="translated">如果你使用的是SQLite,你应该使用下面的方法来代替。</target>
        </trans-unit>
        <trans-unit id="a343e00321955b7beffbdeeb13a0fcb432790e92" translate="yes" xml:space="preserve">
          <source>If your association is of type &lt;code&gt;n:m&lt;/code&gt;, you may be interested in firing hooks on the through model when using the &lt;code&gt;remove&lt;/code&gt; call. Internally, sequelize is using &lt;code&gt;Model.destroy&lt;/code&gt; resulting in calling the &lt;code&gt;bulkDestroy&lt;/code&gt; instead of the &lt;code&gt;before/afterDestroy&lt;/code&gt; hooks on each through instance.</source>
          <target state="translated">如果您的关联类型为 &lt;code&gt;n:m&lt;/code&gt; ，则在使用 &lt;code&gt;remove&lt;/code&gt; 调用时，您可能会对在直通模型上触发钩子感兴趣。在内部，sequelize使用 &lt;code&gt;Model.destroy&lt;/code&gt; 导致对每个直通实例调用 &lt;code&gt;bulkDestroy&lt;/code&gt; 而不是 &lt;code&gt;before/afterDestroy&lt;/code&gt; 挂钩。</target>
        </trans-unit>
        <trans-unit id="833407a04cbfb532aa3ab0eb509e48f853b7c95d" translate="yes" xml:space="preserve">
          <source>Ignore duplicate values for primary keys? (not supported by MSSQL or Postgres &amp;lt; 9.5)</source>
          <target state="translated">忽略主键的重复值？（MSSQL或Postgres &amp;lt;9.5不支持）</target>
        </trans-unit>
        <trans-unit id="d6fbc9d2bdd580e18ed0bc5805dc26db323d6f5f" translate="yes" xml:space="preserve">
          <source>Import</source>
          <target state="translated">Import</target>
        </trans-unit>
        <trans-unit id="b24a78bf1cbe20b658f9d8b812c79312cafb4997" translate="yes" xml:space="preserve">
          <source>Imported model, returned from cache if was already imported</source>
          <target state="translated">导入的模型,如果已经导入,则从缓存中返回。</target>
        </trans-unit>
        <trans-unit id="42ef05cf1be558b6ed91a4aeffccb1e4cfc64023" translate="yes" xml:space="preserve">
          <source>Imports a model defined in another file.</source>
          <target state="translated">导入另一个文件中定义的模型。</target>
        </trans-unit>
        <trans-unit id="4561455fcd06ac6b99fef1b4ec3f086730adf57a" translate="yes" xml:space="preserve">
          <source>Imports a model defined in another file. Imported models are cached, so multiple calls to import with the same path will not load the file multiple times.</source>
          <target state="translated">导入在另一个文件中定义的模型。导入的模型会被缓存,所以用相同路径多次调用导入不会多次加载文件。</target>
        </trans-unit>
        <trans-unit id="fc449382c5d7c01bc4ed7505e87c889bf281a9c7" translate="yes" xml:space="preserve">
          <source>In PostGIS, the GeoJSON is parsed using the PostGIS function &lt;code&gt;ST_GeomFromGeoJSON&lt;/code&gt;. In MySQL it is parsed using the function &lt;code&gt;GeomFromText&lt;/code&gt;.</source>
          <target state="translated">在PostGIS中，使用PostGIS函数 &lt;code&gt;ST_GeomFromGeoJSON&lt;/code&gt; 解析GeoJSON 。在MySQL中，使用功能 &lt;code&gt;GeomFromText&lt;/code&gt; 对其进行解析。</target>
        </trans-unit>
        <trans-unit id="fc15714391598577351e70a8f34d6238fcc77cd0" translate="yes" xml:space="preserve">
          <source>In Sequelize 1:1 relationship can be set using HasOne and BelongsTo. They are suitable for different scenarios. Lets study this difference using an example.</source>
          <target state="translated">在Sequelize中,可以使用HasOne和BelongsTo设置1:1关系。它们适用于不同的场景。让我们用一个例子来研究这个区别。</target>
        </trans-unit>
        <trans-unit id="774bb87b46000c449a45f969a8e44a0806f3930d" translate="yes" xml:space="preserve">
          <source>In addition to the type mentioned above, integer, bigint, float and double also support unsigned and zerofill properties, which can be combined in any order: Be aware that this does not apply for PostgreSQL!</source>
          <target state="translated">除了上面提到的类型外,integer、bigint、float和double还支持无符号和zerofill属性,可以任意顺序组合。请注意,这不适用于PostgreSQL!</target>
        </trans-unit>
        <trans-unit id="4af5be18db1ad6a1a653687156ac599be363d197" translate="yes" xml:space="preserve">
          <source>In addition to updating a single instance, you can also create, update, and delete multiple instances at once. The functions you are looking for are called</source>
          <target state="translated">除了更新单个实例外,您还可以同时创建、更新和删除多个实例。您正在寻找的函数被称为</target>
        </trans-unit>
        <trans-unit id="608a03c2fd0a19b5347676b81f1f4afcab08cd8a" translate="yes" xml:space="preserve">
          <source>In all cases the default foreign key can be overwritten with the &lt;code&gt;foreignKey&lt;/code&gt; option. When the foreign key option is used, Sequelize will use it as-is:</source>
          <target state="translated">在所有情况下，都可以使用 &lt;code&gt;foreignKey&lt;/code&gt; 选项覆盖默认外键。使用外键选项时，Sequelize将按原样使用它：</target>
        </trans-unit>
        <trans-unit id="95d034948d56093f4fd3a267db42db031dc3b1e0" translate="yes" xml:space="preserve">
          <source>In case you want to eager load soft deleted records you can do that by setting &lt;code&gt;include.paranoid&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">如果您想加载软删除的记录，可以通过将 &lt;code&gt;include.paranoid&lt;/code&gt; 设置为 &lt;code&gt;false&lt;/code&gt; 来完成</target>
        </trans-unit>
        <trans-unit id="779cd792541f894ff6ecc7d1a09d6d1d76f26c8a" translate="yes" xml:space="preserve">
          <source>In cases where &lt;code&gt;as&lt;/code&gt; has been defined it will be used in place of the target model name.</source>
          <target state="translated">在情况下， &lt;code&gt;as&lt;/code&gt; 已经定义它将代替目标型号名称的使用。</target>
        </trans-unit>
        <trans-unit id="a6e18661df62cf03ad1b8c1dfaac6d64093d6a9e" translate="yes" xml:space="preserve">
          <source>In cases where you don't need to access the metadata you can pass in a query type to tell sequelize how to format the results. For example, for a simple select query you could do:</source>
          <target state="translated">在你不需要访问元数据的情况下,你可以通过查询类型来告诉 sequelize 如何格式化结果。例如,对于一个简单的选择查询,你可以这样做。</target>
        </trans-unit>
        <trans-unit id="038d4951b867c417185b9b9bd15b882b51593a33" translate="yes" xml:space="preserve">
          <source>In either case &lt;code&gt;$$&lt;/code&gt; can be used to escape a literal &lt;code&gt;$&lt;/code&gt; sign.</source>
          <target state="translated">无论哪种情况， &lt;code&gt;$$&lt;/code&gt; 都可用于转义文字 &lt;code&gt;$&lt;/code&gt; 符号。</target>
        </trans-unit>
        <trans-unit id="fb22fea74b5a18e9648dd5f3f86b3ca5f73fef84" translate="yes" xml:space="preserve">
          <source>In last step you have create a seed file. It's still not committed to database. To do that we need to run a simple command.</source>
          <target state="translated">在最后一步,你已经创建了一个种子文件。它仍然没有提交到数据库。要做到这一点,我们需要运行一个简单的命令。</target>
        </trans-unit>
        <trans-unit id="555e8f73359937df389576f9575dd78b1cbb04a0" translate="yes" xml:space="preserve">
          <source>In most case you won't need to access &lt;code&gt;namespace.get('transaction')&lt;/code&gt; directly, since all queries will automatically look for a transaction on the namespace:</source>
          <target state="translated">在大多数情况下，您不需要直接访问 &lt;code&gt;namespace.get('transaction')&lt;/code&gt; ，因为所有查询都会自动在命名空间上查找事务：</target>
        </trans-unit>
        <trans-unit id="0ffa4116223b3446ad2774ab40fc1bea5b948a6e" translate="yes" xml:space="preserve">
          <source>In order to alleviate that, we can pass &lt;code&gt;constraints: false&lt;/code&gt; to one of the associations:</source>
          <target state="translated">为了缓解这种情况，我们可以将 &lt;code&gt;constraints: false&lt;/code&gt; 传递给以下关联之一：</target>
        </trans-unit>
        <trans-unit id="cc83ae9f1cd3ae67a5a6e4bc972a56286990ab33" translate="yes" xml:space="preserve">
          <source>In order to avoid installation bloat for non TS users, you must install the following typing packages manually:</source>
          <target state="translated">为了避免非TS用户安装臃肿,您必须手动安装以下打字包。</target>
        </trans-unit>
        <trans-unit id="d6af6a905ac1e115cb3fd844cc79b49b4cf1c9fa" translate="yes" xml:space="preserve">
          <source>In order to calculate the sum over a specific column of a table, you can use the &lt;code&gt;sum&lt;/code&gt; method.</source>
          <target state="translated">为了计算表的特定列上的 &lt;code&gt;sum&lt;/code&gt; ，可以使用sum方法。</target>
        </trans-unit>
        <trans-unit id="ba6b9538578934a76cde7cf0edf5896fb565e928" translate="yes" xml:space="preserve">
          <source>In order to create instances of defined classes just do as follows. You might recognize the syntax if you coded Ruby in the past. Using the &lt;code&gt;build&lt;/code&gt;-method will return an unsaved object, which you explicitly have to save.</source>
          <target state="translated">为了创建已定义类的实例，只需执行以下操作。如果您过去编写过Ruby，则可能会识别语法。使用 &lt;code&gt;build&lt;/code&gt; -method将返回未保存的对象，您必须明确保存该对象。</target>
        </trans-unit>
        <trans-unit id="cf259232b5059754d2a1edf8525451aaa2799fec" translate="yes" xml:space="preserve">
          <source>In order to decrement values of an instance without running into concurrency issues, you may use &lt;code&gt;decrement&lt;/code&gt;.</source>
          <target state="translated">为了减少实例的值而不会遇到并发问题，可以使用 &lt;code&gt;decrement&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca261ceb2eaf2ec423490304b525cf11f77c0268" translate="yes" xml:space="preserve">
          <source>In order to get Sequelize working nicely together with MySQL, you'll need to install&lt;code&gt;mysql2@^1.5.2&lt;/code&gt;or higher. Once that's done you can use it like this:</source>
          <target state="translated">为了使Sequelize与MySQL良好配合，您需要安装 &lt;code&gt;mysql2@^1.5.2&lt;/code&gt; 或更高版本。完成后，您可以像这样使用它：</target>
        </trans-unit>
        <trans-unit id="d50628c2ff499beb4c82368b3c407f6af0a795fe" translate="yes" xml:space="preserve">
          <source>In order to increment values of an instance without running into concurrency issues, you may use &lt;code&gt;increment&lt;/code&gt;.</source>
          <target state="translated">为了增加实例的值而不会遇到并发问题，可以使用 &lt;code&gt;increment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="149d9edd63e09e594388c8c59f6205a3c7d42014" translate="yes" xml:space="preserve">
          <source>In production, you might want to consider using Migrations instead of calling &lt;code&gt;sync()&lt;/code&gt; in your code. Learn more in the &lt;a href=&quot;migrations&quot;&gt;Migrations&lt;/a&gt; guide.</source>
          <target state="translated">在生产中，您可能需要考虑使用Migrations而不是在代码中调用 &lt;code&gt;sync()&lt;/code&gt; 。在&lt;a href=&quot;migrations&quot;&gt;迁移&lt;/a&gt;指南中了解更多信息。</target>
        </trans-unit>
        <trans-unit id="c86642a07888e6db73277af0c0eaac74cefb4e90" translate="yes" xml:space="preserve">
          <source>In the API reference below, add the name of the association to the method, e.g. for &lt;code&gt;User.belongsTo(Project)&lt;/code&gt; the getter will be &lt;code&gt;user.getProject()&lt;/code&gt;.</source>
          <target state="translated">在下面的API参考中，将关联的名称添加到方法中，例如，对于 &lt;code&gt;User.belongsTo(Project)&lt;/code&gt; ，getter将为 &lt;code&gt;user.getProject()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cef52cd717c629d67a98f43d7d2a3b36773181e1" translate="yes" xml:space="preserve">
          <source>In the API reference below, add the name of the association to the method, e.g. for &lt;code&gt;User.belongsToMany(Project)&lt;/code&gt; the getter will be &lt;code&gt;user.getProjects()&lt;/code&gt;.</source>
          <target state="translated">在下面的API参考中，将关联的名称添加到方法中，例如，对于 &lt;code&gt;User.belongsToMany(Project)&lt;/code&gt; ，getter将为 &lt;code&gt;user.getProjects()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b69de6ffb712491cc4ee70ce75bcc223197f419" translate="yes" xml:space="preserve">
          <source>In the API reference below, add the name of the association to the method, e.g. for &lt;code&gt;User.hasMany(Project)&lt;/code&gt; the getter will be &lt;code&gt;user.getProjects()&lt;/code&gt;. If the association is aliased, use the alias instead, e.g. &lt;code&gt;User.hasMany(Project, { as: 'jobs' })&lt;/code&gt; will be &lt;code&gt;user.getJobs()&lt;/code&gt;.</source>
          <target state="translated">在下面的API参考中，将关联的名称添加到方法中，例如，对于 &lt;code&gt;User.hasMany(Project)&lt;/code&gt; ，getter将为 &lt;code&gt;user.getProjects()&lt;/code&gt; 。如果关联是别名，请改用别名，例如 &lt;code&gt;User.hasMany(Project, { as: 'jobs' })&lt;/code&gt; 将是 &lt;code&gt;user.getJobs()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b19bcc7ba2b18c1f0e8b5d37540fdada124f6fcc" translate="yes" xml:space="preserve">
          <source>In the API reference below, add the name of the association to the method, e.g. for &lt;code&gt;User.hasOne(Project)&lt;/code&gt; the getter will be &lt;code&gt;user.getProject()&lt;/code&gt;. This is almost the same as &lt;code&gt;belongsTo&lt;/code&gt; with one exception - The foreign key will be defined on the target model.</source>
          <target state="translated">在下面的API参考中，将关联的名称添加到方法中，例如，对于 &lt;code&gt;User.hasOne(Project)&lt;/code&gt; ，getter将为 &lt;code&gt;user.getProject()&lt;/code&gt; 。这几乎与 &lt;code&gt;belongsTo&lt;/code&gt; 相同，但有一个例外-外键将在目标模型上定义。</target>
        </trans-unit>
        <trans-unit id="02da87402808a84b0a74230cb43a995fdad4b31d" translate="yes" xml:space="preserve">
          <source>In the case of a one-to-many relationship.</source>
          <target state="translated">在一对多关系的情况下。</target>
        </trans-unit>
        <trans-unit id="5ae509345fb49ae661568fc4744caa7cb1b9656b" translate="yes" xml:space="preserve">
          <source>In the case of many-to-many joins, you are also able to sort by attributes in the through table.</source>
          <target state="translated">在多对多连接的情况下,你还可以在直通表中按属性排序。</target>
        </trans-unit>
        <trans-unit id="317c1f0442c62b94ccf6c9fc8c9140770a26fb3e" translate="yes" xml:space="preserve">
          <source>In the example above we have specified that a user belongs to his profile picture. Conceptually, this might not make sense, but since we want to add the foreign key to the user model this is the way to do it.</source>
          <target state="translated">在上面的例子中,我们已经指定了一个用户属于他的资料图片。从概念上讲,这可能没有意义,但既然我们想把外键添加到用户模型中,就应该这样做。</target>
        </trans-unit>
        <trans-unit id="ce0b3ed97c0ca3b3cfb4f4a1a06ba62b0ecd8f3c" translate="yes" xml:space="preserve">
          <source>In the examples above, the transaction is still manually passed, by passing &lt;code&gt;{ transaction: t }&lt;/code&gt; as the second argument. To automatically pass the transaction to all queries you must install the &lt;a href=&quot;https://github.com/Jeff-Lewis/cls-hooked&quot;&gt;cls-hooked&lt;/a&gt; (CLS) module and instantiate a namespace in your own code:</source>
          <target state="translated">在上面的示例中，仍然通过传递 &lt;code&gt;{ transaction: t }&lt;/code&gt; 作为第二个参数来手动传递事务。要将事务自动传递给所有查询，您必须安装&lt;a href=&quot;https://github.com/Jeff-Lewis/cls-hooked&quot;&gt;cls-hooked&lt;/a&gt;（CLS）模块并在自己的代码中实例化一个名称空间：</target>
        </trans-unit>
        <trans-unit id="2a0dce9e1d09c8edbde67374cb81c49870755238" translate="yes" xml:space="preserve">
          <source>In this document we'll explore what finder methods can do:</source>
          <target state="translated">在本文档中,我们将探讨查找方法的作用。</target>
        </trans-unit>
        <trans-unit id="8ccb67d5f9158b5bfef3f61c07b44ac9e4f30373" translate="yes" xml:space="preserve">
          <source>In this example the name of the postgres range type is &lt;code&gt;newtype_range&lt;/code&gt; and the name of the underlying postgres datatype is &lt;code&gt;pg_new_type&lt;/code&gt;. The key of &lt;code&gt;subtypes&lt;/code&gt; and &lt;code&gt;castTypes&lt;/code&gt; is the key of the Sequelize datatype &lt;code&gt;DataTypes.NEWTYPE.key&lt;/code&gt;, in lower case.</source>
          <target state="translated">在此示例中，postgres范围类型的名称为 &lt;code&gt;newtype_range&lt;/code&gt; ，而基础postgres数据类型的名称为 &lt;code&gt;pg_new_type&lt;/code&gt; 。的关键 &lt;code&gt;subtypes&lt;/code&gt; 和 &lt;code&gt;castTypes&lt;/code&gt; 是Sequelize数据类型的键 &lt;code&gt;DataTypes.NEWTYPE.key&lt;/code&gt; ，小写。</target>
        </trans-unit>
        <trans-unit id="f06d44df54aba38c2a1a5e52366770a4c55d5686" translate="yes" xml:space="preserve">
          <source>In this simple case an object fails validation if either latitude or longitude is given, but not both. If we try to build one with an out-of-range latitude and no longitude, &lt;code&gt;raging_bullock_arms.validate()&lt;/code&gt; might return</source>
          <target state="translated">在这种简单情况下，如果给定了纬度或经度，则不能验证对象，但不能同时给出两者。如果我们尝试构建的纬度超出范围且没有经度，则 &lt;code&gt;raging_bullock_arms.validate()&lt;/code&gt; 可能会返回</target>
        </trans-unit>
        <trans-unit id="3851d0f94c7be9ec7c5ead977d92fb894f0d89fb" translate="yes" xml:space="preserve">
          <source>In this tutorial you will learn to make a simple setup of Sequelize to learn the basics.</source>
          <target state="translated">在本教程中,你将学会对Sequelize进行简单的设置,学习基础知识。</target>
        </trans-unit>
        <trans-unit id="4f5430a6a9d01363455824822c75737cf9c8f435" translate="yes" xml:space="preserve">
          <source>Include all also supports nested loading:</source>
          <target state="translated">包括所有也支持嵌套加载。</target>
        </trans-unit>
        <trans-unit id="ee22d111d4c8367bcfece43e25265c1b1b970179" translate="yes" xml:space="preserve">
          <source>Include options. See &lt;code&gt;find&lt;/code&gt; for details</source>
          <target state="translated">包括选项。见 &lt;code&gt;find&lt;/code&gt; 详细信息</target>
        </trans-unit>
        <trans-unit id="f4eea4e4d711cc1ecb5cda0e5dbfb9571c247ac3" translate="yes" xml:space="preserve">
          <source>Includes are merged recursively based on the models being included. This is a very powerful merge, added on v5, and is better understood with an example.</source>
          <target state="translated">包含是根据被包含的模型递归合并的。这是一个非常强大的合并功能,是在v5上增加的,通过一个例子可以更好的理解。</target>
        </trans-unit>
        <trans-unit id="027827ecd07b15695c7b030f1a2f763df4b19097" translate="yes" xml:space="preserve">
          <source>Including everything</source>
          <target state="translated">包括一切</target>
        </trans-unit>
        <trans-unit id="c00227cf95dc381c6c30d2e5768223f461bcb57c" translate="yes" xml:space="preserve">
          <source>Including soft deleted records</source>
          <target state="translated">包括软删除记录</target>
        </trans-unit>
        <trans-unit id="54a09acba666b3479a71fa90551496293ff3b39c" translate="yes" xml:space="preserve">
          <source>Increment the value of one or more columns.</source>
          <target state="translated">增加一列或多列的值。</target>
        </trans-unit>
        <trans-unit id="787e3b938ace632df3c30ed406921fc264679317" translate="yes" xml:space="preserve">
          <source>Increment the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The increment is done using a</source>
          <target state="translated">增加一个或多个列的值。这是在数据库中完成的,这意味着它不使用当前存储在Instance上的值。递增是使用</target>
        </trans-unit>
        <trans-unit id="76bdd22b4e3260f69cfe386f60459acba6de3c0d" translate="yes" xml:space="preserve">
          <source>Increment the value of one or more columns. This is done in the database, which means it does not use the values currently stored on the Instance. The increment is done using a &lt;code&gt;SET column = column + X WHERE foo = 'bar'&lt;/code&gt; query. To get the correct value after an increment into the Instance you should do a reload.</source>
          <target state="translated">增加一或多个列的值。这是在数据库中完成的，这意味着它不使用实例上当前存储的值。使用 &lt;code&gt;SET column = column + X WHERE foo = 'bar'&lt;/code&gt; 查询可完成增量。为了在实例增加后获得正确的值，您应该重新加载。</target>
        </trans-unit>
        <trans-unit id="a8ff72a665bb30731770e7705fe338083cf89b76" translate="yes" xml:space="preserve">
          <source>Incrementing</source>
          <target state="translated">Incrementing</target>
        </trans-unit>
        <trans-unit id="60049830fb2701db5de1c9bccb71b67fcbb23036" translate="yes" xml:space="preserve">
          <source>Index Hints</source>
          <target state="translated">索引提示</target>
        </trans-unit>
        <trans-unit id="15ed187841ecb74c7b628c9d39e663a146a445d1" translate="yes" xml:space="preserve">
          <source>Index hints &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/index-hints.html&quot;&gt;override the default behavior of the mysql query optimizer&lt;/a&gt;.</source>
          <target state="translated">索引提示将&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/index-hints.html&quot;&gt;覆盖mysql查询优化器的默认行为&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27bf949a8c6bbf392cd9bbfb0a23ac87298c9ae6" translate="yes" xml:space="preserve">
          <source>Index name</source>
          <target state="translated">索引名称</target>
        </trans-unit>
        <trans-unit id="2a9a9e601e879f8a25e6b88cecfaa9477d0b69b6" translate="yes" xml:space="preserve">
          <source>Index operator</source>
          <target state="translated">索引运算符</target>
        </trans-unit>
        <trans-unit id="3db988cf9ae171debdcc20214fccade20a6d5743" translate="yes" xml:space="preserve">
          <source>Index type. Only used by mysql. One of &lt;code&gt;UNIQUE&lt;/code&gt;, &lt;code&gt;FULLTEXT&lt;/code&gt; and &lt;code&gt;SPATIAL&lt;/code&gt;</source>
          <target state="translated">索引类型。仅由mysql使用。其中的 &lt;code&gt;UNIQUE&lt;/code&gt; ， &lt;code&gt;FULLTEXT&lt;/code&gt; 和 &lt;code&gt;SPATIAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cbd5e44bf0af97c76997bc5bf5b67484d7bd41fd" translate="yes" xml:space="preserve">
          <source>IndexHints</source>
          <target state="translated">IndexHints</target>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="d546d086737ecd71ea685f7ecca5e406efe04475" translate="yes" xml:space="preserve">
          <source>Indirect Subclass:</source>
          <target state="translated">间接子类。</target>
        </trans-unit>
        <trans-unit id="5f86be890f5fca505337bd96fadab61d81d1721f" translate="yes" xml:space="preserve">
          <source>Inherited Summary</source>
          <target state="translated">继承摘要</target>
        </trans-unit>
        <trans-unit id="31f1c8a556d0112856c008a3ad8749f41bf60b3f" translate="yes" xml:space="preserve">
          <source>Initialize a model, representing a table in the DB, with attributes and options.</source>
          <target state="translated">初始化一个模型,代表DB中的一个表,带有属性和选项。</target>
        </trans-unit>
        <trans-unit id="34082efdebc41766317697316140da8f26c3e107" translate="yes" xml:space="preserve">
          <source>Insert multiple records into a table</source>
          <target state="translated">在一个表中插入多个记录</target>
        </trans-unit>
        <trans-unit id="7ec8753d3a44c87c9473adfa6c44b60942d04fe3" translate="yes" xml:space="preserve">
          <source>Insert or update a single row.</source>
          <target state="translated">插入或更新单行。</target>
        </trans-unit>
        <trans-unit id="2dd5c9df09dccb9c155c03e0ece1aeed6a35cf5c" translate="yes" xml:space="preserve">
          <source>Insert or update a single row. An update will be executed if a row which matches the supplied values on either the primary key or a unique key is found. Note that the unique index must be defined in your sequelize model and not just in the table. Otherwise you may experience a unique constraint violation, because sequelize fails to identify the row that should be updated.</source>
          <target state="translated">插入或更新一条记录。如果在主键或唯一键上找到了与所提供的值相匹配的记录,就会执行更新。请注意,唯一索引必须在你的sequelize模型中定义,而不仅仅是在表中。否则你可能会遇到唯一约束的违反,因为sequelize无法识别应该更新的行。</target>
        </trans-unit>
        <trans-unit id="0fcf41de510c5775db6e05c056c7c1d5562270b3" translate="yes" xml:space="preserve">
          <source>Insert several rows and return all columns (Postgres only):</source>
          <target state="translated">插入几行并返回所有列(仅限Postgres)。</target>
        </trans-unit>
        <trans-unit id="82c27a49773b27db4a4892eb51537165bf561a05" translate="yes" xml:space="preserve">
          <source>Insert several rows and return specific columns (Postgres only):</source>
          <target state="translated">插入几行并返回特定的列(仅Postgres)。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="e38432618ce4d39079fc324e614d4d92a2815160" translate="yes" xml:space="preserve">
          <source>Installing</source>
          <target state="translated">Installing</target>
        </trans-unit>
        <trans-unit id="738e880dd4e789ec957d300caa68fee228a78956" translate="yes" xml:space="preserve">
          <source>Installing CLI</source>
          <target state="translated">安装CLI</target>
        </trans-unit>
        <trans-unit id="ccb890bc332682567d34290c45bd65a654e962bd" translate="yes" xml:space="preserve">
          <source>Instance build options</source>
          <target state="translated">实例构建选项</target>
        </trans-unit>
        <trans-unit id="5ac629af8667053ca02646726c3c988282dc7f26" translate="yes" xml:space="preserve">
          <source>Instance hooks</source>
          <target state="translated">实例钩子</target>
        </trans-unit>
        <trans-unit id="274ad4dd86f2d3421e19dbc845f0539216d205f2" translate="yes" xml:space="preserve">
          <source>InstanceError</source>
          <target state="translated">InstanceError</target>
        </trans-unit>
        <trans-unit id="86d67413e7f102d37a19a41e92518fd07b196a5a" translate="yes" xml:space="preserve">
          <source>Instances</source>
          <target state="translated">Instances</target>
        </trans-unit>
        <trans-unit id="9e8467d590d4be1587eaf02bbcf552bcc1c6e813" translate="yes" xml:space="preserve">
          <source>Instantiate sequelize with name of database, username and password.</source>
          <target state="translated">用数据库名称、用户名和密码实例化 sequelize。</target>
        </trans-unit>
        <trans-unit id="b3094ee388cfb121e08aa8acc192a2cdfc0b8210" translate="yes" xml:space="preserve">
          <source>Instead of calling &lt;code&gt;sync()&lt;/code&gt; for every model, you can call &lt;code&gt;sequelize.sync()&lt;/code&gt; which will automatically sync all models.</source>
          <target state="translated">您可以调用 &lt;code&gt;sequelize.sync()&lt;/code&gt; 来自动同步所有模型，而不是为每个模型调用 &lt;code&gt;sync()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="490af473232b6a93643f272bee98388cd223e9fd" translate="yes" xml:space="preserve">
          <source>Internal Transactions</source>
          <target state="translated">内部交易</target>
        </trans-unit>
        <trans-unit id="3d3960679eb413b74946e3c8863bed548577df5d" translate="yes" xml:space="preserve">
          <source>Internally, &lt;code&gt;sequelize.define&lt;/code&gt; calls &lt;code&gt;Model.init&lt;/code&gt;.</source>
          <target state="translated">在内部， &lt;code&gt;sequelize.define&lt;/code&gt; 调用 &lt;code&gt;Model.init&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a26b8650a9de522981bcafa08f85067a7ddceb6" translate="yes" xml:space="preserve">
          <source>InvalidConnectionError</source>
          <target state="translated">InvalidConnectionError</target>
        </trans-unit>
        <trans-unit id="9211e9fa56459ab7c08f8f8f8b73301a55b7ccfe" translate="yes" xml:space="preserve">
          <source>Is this a new record</source>
          <target state="translated">这是新的记录吗?</target>
        </trans-unit>
        <trans-unit id="afe7a6e84bced131db798b6f4a5218b8ba604521" translate="yes" xml:space="preserve">
          <source>Is this binary?</source>
          <target state="translated">这是二进制的吗?</target>
        </trans-unit>
        <trans-unit id="6930c839f5926a5dbc3973abed70a968ebe27fcd" translate="yes" xml:space="preserve">
          <source>Is this new record</source>
          <target state="translated">这是新纪录吗?</target>
        </trans-unit>
        <trans-unit id="ff65e83635da6a16fc4326dabfbf055783a3b67f" translate="yes" xml:space="preserve">
          <source>Is unsigned?</source>
          <target state="translated">是无符号的?</target>
        </trans-unit>
        <trans-unit id="e43b3654cb7e64fdddd41aa99284538c43372f9f" translate="yes" xml:space="preserve">
          <source>Is zero filled?</source>
          <target state="translated">零点满了吗?</target>
        </trans-unit>
        <trans-unit id="bc950c72cafdb1b72d875b5f0116396b3dcf31bd" translate="yes" xml:space="preserve">
          <source>Isolation levels</source>
          <target state="translated">隔离水平</target>
        </trans-unit>
        <trans-unit id="ceb55c4968b36fcfbb8bfa38dd67ef748266db4a" translate="yes" xml:space="preserve">
          <source>Isolation levels can be set per-transaction by passing &lt;code&gt;options.isolationLevel&lt;/code&gt; to &lt;code&gt;sequelize.transaction&lt;/code&gt;.</source>
          <target state="translated">可以通过将 &lt;code&gt;options.isolationLevel&lt;/code&gt; 传递给 &lt;code&gt;sequelize.transaction&lt;/code&gt; 来设置每个事务的隔离级别。</target>
        </trans-unit>
        <trans-unit id="7de7da7cce1fe9bf748f458bb4ef7c345ecf4b72" translate="yes" xml:space="preserve">
          <source>Isolation levels can be set per-transaction by passing &lt;code&gt;options.isolationLevel&lt;/code&gt; to &lt;code&gt;sequelize.transaction&lt;/code&gt;. Sequelize uses the default isolation level of the database, you can override this by passing &lt;code&gt;options.isolationLevel&lt;/code&gt; in Sequelize constructor options.</source>
          <target state="translated">可以通过将 &lt;code&gt;options.isolationLevel&lt;/code&gt; 传递给 &lt;code&gt;sequelize.transaction&lt;/code&gt; 来设置每个事务的隔离级别。Sequelize使用数据库的默认隔离级别，您可以通过在Sequelize构造函数选项中传递 &lt;code&gt;options.isolationLevel&lt;/code&gt; 来覆盖此默认级别。</target>
        </trans-unit>
        <trans-unit id="8c4c047702785b929a273515b1a82e520030e139" translate="yes" xml:space="preserve">
          <source>It is also possible to define which attributes can be set via the create method. This can be especially very handy if you create database entries based on a form which can be filled by a user. Using that would for example allow you to restrict the &lt;code&gt;User&lt;/code&gt; model to set only a username and an address but not an admin flag:</source>
          <target state="translated">也可以定义可以通过create方法设置的属性。如果您根据用户可以填写的表单创建数据库条目，这将特别方便。例如，使用该名称将允许您限制 &lt;code&gt;User&lt;/code&gt; 模型，使其仅设置用户名和地址，而不设置admin标志：</target>
        </trans-unit>
        <trans-unit id="458150e56a3d316de3d7363070d164f7fb22c292" translate="yes" xml:space="preserve">
          <source>It is also possible to include scoped models in a scope definition. This allows you to avoid duplicating &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;attributes&lt;/code&gt; or &lt;code&gt;where&lt;/code&gt; definitions. Using the above example, and invoking the &lt;code&gt;active&lt;/code&gt; scope on the included User model (rather than specifying the condition directly in that include object):</source>
          <target state="translated">也可以在范围定义中包括范围模型。这样可以避免重复 &lt;code&gt;include&lt;/code&gt; ， &lt;code&gt;attributes&lt;/code&gt; 或 &lt;code&gt;where&lt;/code&gt; 定义。使用上面的示例，并在包含的用户模型上调用 &lt;code&gt;active&lt;/code&gt; 范围（而不是直接在该包含对象中指定条件）：</target>
        </trans-unit>
        <trans-unit id="ddee74f90f8a0f9498567c187f111536a9989a76" translate="yes" xml:space="preserve">
          <source>It is possible to define 'object-property' getters and setter functions on your models, these can be used both for 'protecting' properties that map to database fields and for defining 'pseudo' properties.</source>
          <target state="translated">可以在您的模型上定义 &quot;对象-属性 &quot;获取器和设置器函数,这些函数既可以用于 &quot;保护 &quot;映射到数据库字段的属性,也可以用于定义 &quot;伪 &quot;属性。</target>
        </trans-unit>
        <trans-unit id="74a71f5d94391e3a53655bde1f0b03cfbba3c3e0" translate="yes" xml:space="preserve">
          <source>It is very important to recognize that sequelize may make use of transactions internally for certain operations such as &lt;code&gt;Model.findOrCreate&lt;/code&gt;. If your hook functions execute read or write operations that rely on the object's presence in the database, or modify the object's stored values like the example in the preceding section, you should always specify &lt;code&gt;{ transaction: options.transaction }&lt;/code&gt;.</source>
          <target state="translated">重要的是要认识到，sequelize可以在内部对某些操作（例如 &lt;code&gt;Model.findOrCreate&lt;/code&gt; )使用事务。如果钩子函数执行依赖于数据库中对象存在的读取或写入操作，或者像上一节中的示例一样修改对象的存储值，则应始终指定 &lt;code&gt;{ transaction: options.transaction }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f7799cf6357af0cca9dd406aa99d1e281329530" translate="yes" xml:space="preserve">
          <source>It support includes. Only the includes that are marked as &lt;code&gt;required&lt;/code&gt; will be added to the count part:</source>
          <target state="translated">它支持包括。仅将标记为 &lt;code&gt;required&lt;/code&gt; 的包括项添加到计数部分：</target>
        </trans-unit>
        <trans-unit id="01152ec68278f8c0093062867b00c1b97313670b" translate="yes" xml:space="preserve">
          <source>It's also possible to define which attributes should be saved when calling &lt;code&gt;save&lt;/code&gt;, by passing an array of column names. This is useful when you set attributes based on a previously defined object. E.g. if you get the values of an object via a form of a web app. Furthermore this is used internally for &lt;code&gt;update&lt;/code&gt;. This is how it looks like:</source>
          <target state="translated">也可以通过传递列名数组来定义在调用 &lt;code&gt;save&lt;/code&gt; 时应保存哪些属性。当您基于先前定义的对象设置属性时，这很有用。例如，如果您通过Web应用程序的形式获取对象的值。此外，它在内部用于 &lt;code&gt;update&lt;/code&gt; 。它是这样的：</target>
        </trans-unit>
        <trans-unit id="186c4dfd035ca2147d8122391c159c1157303e72" translate="yes" xml:space="preserve">
          <source>It's also possible to generate complex AND/OR conditions by nesting sets of &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;and&lt;/code&gt;&lt;code&gt;Operators&lt;/code&gt;.</source>
          <target state="translated">也可以通过嵌套 &lt;code&gt;or&lt;/code&gt; 和 &lt;code&gt;and&lt;/code&gt; &lt;code&gt;Operators&lt;/code&gt; 集合来生成复杂的AND / OR条件。</target>
        </trans-unit>
        <trans-unit id="ad75613877702555cf316afa651fd68d8ed8a686" translate="yes" xml:space="preserve">
          <source>It's possible to do complex where queries with multiple levels of nested AND, OR and NOT conditions. In order to do that you can use &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt; or &lt;code&gt;not&lt;/code&gt;&lt;code&gt;Operators&lt;/code&gt;:</source>
          <target state="translated">在具有多层嵌套AND，OR和NOT条件的查询中，可能会很复杂。为了做到这一点，你可以使用 &lt;code&gt;or&lt;/code&gt; ， &lt;code&gt;and&lt;/code&gt; 或 &lt;code&gt;not&lt;/code&gt; &lt;code&gt;Operators&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="33734b6b70c0dff634a36534b531693609e70498" translate="yes" xml:space="preserve">
          <source>Its only supported with PostgreSQL.</source>
          <target state="translated">它只支持PostgreSQL。</target>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="translated">JSON</target>
        </trans-unit>
        <trans-unit id="6a54171212861b9d4356ac5edc1e9c7b38716888" translate="yes" xml:space="preserve">
          <source>JSONB</source>
          <target state="translated">JSONB</target>
        </trans-unit>
        <trans-unit id="8f235f39a2853ef490db9713b7ebbf2012bdcd6a" translate="yes" xml:space="preserve">
          <source>JSONB can be queried in three different ways.</source>
          <target state="translated">JSONB可以通过三种不同的方式进行查询。</target>
        </trans-unit>
        <trans-unit id="6b46dddcae84eab844147b41df08409aa05a20dc" translate="yes" xml:space="preserve">
          <source>JSONTYPE</source>
          <target state="translated">JSONTYPE</target>
        </trans-unit>
        <trans-unit id="b7bddeac6e43c3fc69422d0e6157627a2408995d" translate="yes" xml:space="preserve">
          <source>Just like you use Git / SVN to manage changes in your source code, you can use migrations to keep track of changes to the database. With migrations you can transfer your existing database into another state and vice versa: Those state transitions are saved in migration files, which describe how to get to the new state and how to revert the changes in order to get back to the old state.</source>
          <target state="translated">就像你使用Git/SVN来管理源代码的变化一样,你也可以使用迁移来跟踪数据库的变化。通过迁移,你可以将你现有的数据库转移到另一个状态,反之亦然:这些状态转换被保存在迁移文件中,它描述了如何进入新的状态,以及如何恢复变化以回到旧的状态。</target>
        </trans-unit>
        <trans-unit id="7a005acb56700e9225239e9495e645f1d56cb1fd" translate="yes" xml:space="preserve">
          <source>KEY_SHARE</source>
          <target state="translated">KEY_SHARE</target>
        </trans-unit>
        <trans-unit id="1aad7db5cd6d6405bc949aa858fe80dadf3e960b" translate="yes" xml:space="preserve">
          <source>Keep in mind, the provided range value can &lt;a href=&quot;data-types#range-types&quot;&gt;define the bound inclusion/exclusion&lt;/a&gt; as well.</source>
          <target state="translated">请记住，提供的范围值也可以&lt;a href=&quot;data-types#range-types&quot;&gt;定义绑定的包含/排除&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a251ad95f6b7bd7655523b67ea7799fe5cf895ed" translate="yes" xml:space="preserve">
          <source>Learn more in the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;API Reference for the Sequelize constructor&lt;/a&gt;. If you're connecting to the database from multiple processes, you'll have to create one instance per process, but each instance should have a maximum connection pool size of such that the total maximum size is respected. For example, if you want a max connection pool size of 90 and you have three processes, the Sequelize instance of each process should have a max connection pool size of 30.</source>
          <target state="translated">&lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;在Sequelize构造函数&lt;/a&gt;的API参考中了解更多信息。如果要从多个进程连接到数据库，则必须为每个进程创建一个实例，但是每个实例的最大连接池大小应达到最大总大小。例如，如果您希望最大连接池大小为90，并且有三个进程，则每个进程的Sequelize实例的最大连接池大小应为30。</target>
        </trans-unit>
        <trans-unit id="485d34bd5489f8e0226bedab13b81d0bca93aff5" translate="yes" xml:space="preserve">
          <source>Let's assume we have an empty database with a &lt;code&gt;User&lt;/code&gt; model which has a &lt;code&gt;username&lt;/code&gt; and a &lt;code&gt;job&lt;/code&gt;.</source>
          <target state="translated">假设我们有一个带 &lt;code&gt;User&lt;/code&gt; 模型的空数据库，其中有一个 &lt;code&gt;username&lt;/code&gt; 和一个 &lt;code&gt;job&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2203a28193ce384212442ecbf1bb9f0fad5d8a3" translate="yes" xml:space="preserve">
          <source>Let's create a model named &lt;code&gt;User&lt;/code&gt;.</source>
          <target state="translated">让我们创建一个名为 &lt;code&gt;User&lt;/code&gt; 的模型。</target>
        </trans-unit>
        <trans-unit id="f35d6d8183466326bcc0a6d0a3f462695c8d381b" translate="yes" xml:space="preserve">
          <source>Let's create a seed file which will add a demo user to our &lt;code&gt;User&lt;/code&gt; table.</source>
          <target state="translated">让我们创建一个种子文件，它将一个演示用户添加到我们的 &lt;code&gt;User&lt;/code&gt; 表中。</target>
        </trans-unit>
        <trans-unit id="be20a5757d775035047e08bf42879daa6e2f59aa" translate="yes" xml:space="preserve">
          <source>Let's first begin with a basic concept that you will see used in most associations, &lt;strong&gt;source&lt;/strong&gt; and &lt;strong&gt;target&lt;/strong&gt; model. Suppose you are trying to add an association between two Models. Here we are adding a &lt;code&gt;hasOne&lt;/code&gt; association between &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Project&lt;/code&gt;.</source>
          <target state="translated">首先让我们从一个基本概念开始，您将在大多数关联，&lt;strong&gt;源&lt;/strong&gt;模型和&lt;strong&gt;目标&lt;/strong&gt;模型中看到该基本概念。假设您试图在两个模型之间添加关联。在这里，我们在 &lt;code&gt;User&lt;/code&gt; 和 &lt;code&gt;Project&lt;/code&gt; 之间添加了 &lt;code&gt;hasOne&lt;/code&gt; 关联。</target>
        </trans-unit>
        <trans-unit id="1c450eed0e9c2a25ffab9271fad2fadc6b27a9d2" translate="yes" xml:space="preserve">
          <source>Let's introduce the ability to associate a product with many tags. Setting up the models could look like:</source>
          <target state="translated">我们来介绍一下一个产品可以关联很多标签的功能。设置模型可以是这样的。</target>
        </trans-unit>
        <trans-unit id="87aac229dd1d4995475dbcc51641de5b2c4552f0" translate="yes" xml:space="preserve">
          <source>Let's modify last example to use &lt;code&gt;underscored&lt;/code&gt; option.</source>
          <target state="translated">让我们修改最后一个示例以使用带 &lt;code&gt;underscored&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="5a82db14e28117aaba1b3a12ce0a9553639d87b7" translate="yes" xml:space="preserve">
          <source>Let's say the name of the new datatype is &lt;code&gt;pg_new_type&lt;/code&gt; in the postgres database. That name has to be mapped to &lt;code&gt;DataTypes.NEWTYPE&lt;/code&gt;. Additionally, it is required to create a child postgres-specific datatype.</source>
          <target state="translated">假设新数据类型的名称在postgres数据库中为 &lt;code&gt;pg_new_type&lt;/code&gt; 。该名称必须映射到 &lt;code&gt;DataTypes.NEWTYPE&lt;/code&gt; 。此外，还需要创建特定于Postgres的子数据类型。</target>
        </trans-unit>
        <trans-unit id="46dbb18d37841e79a9d96e647e55be1608250c26" translate="yes" xml:space="preserve">
          <source>Let's start with installing CLI, you can find instructions &lt;a href=&quot;https://github.com/sequelize/cli&quot;&gt;here&lt;/a&gt;. Most preferred way is installing locally like this</source>
          <target state="translated">让我们从安装CLI开始，您可以在&lt;a href=&quot;https://github.com/sequelize/cli&quot;&gt;此处&lt;/a&gt;找到说明。最优选的方式是像这样在本地安装</target>
        </trans-unit>
        <trans-unit id="3dc80430a2ae5ef7084165f4e5c699da1d9acc78" translate="yes" xml:space="preserve">
          <source>Library for MariaDB is &lt;code&gt;mariadb&lt;/code&gt;.</source>
          <target state="translated">MariaDB的库是 &lt;code&gt;mariadb&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">根据麻省理工学院许可证授权。</target>
        </trans-unit>
        <trans-unit id="c0f639fe70cb19d3a7d5bb33f35f4fcb35b0d6fb" translate="yes" xml:space="preserve">
          <source>Limit for result</source>
          <target state="translated">结果的限制</target>
        </trans-unit>
        <trans-unit id="1aeadbc7b1706711e989275655be9254c82690d6" translate="yes" xml:space="preserve">
          <source>Limit the joined rows, only supported with include.separate=true</source>
          <target state="translated">限制加入的行,仅支持include.separate=true。</target>
        </trans-unit>
        <trans-unit id="c6fd3870c86e7422a0146e1e2a052437fb8e51e2" translate="yes" xml:space="preserve">
          <source>Lines</source>
          <target state="translated">Lines</target>
        </trans-unit>
        <trans-unit id="9dab3b0aa2150bf658272546827c1ef560b7cbe7" translate="yes" xml:space="preserve">
          <source>List of attributes to add index on</source>
          <target state="translated">要添加索引的属性列表</target>
        </trans-unit>
        <trans-unit id="3ce91f8ce5685aa3c7ae6bebf7959c99739d2884" translate="yes" xml:space="preserve">
          <source>List of declared variables. Each variable should be an object with string fields &lt;code&gt;type&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;, and optionally having a &lt;code&gt;default&lt;/code&gt; field as well.</source>
          <target state="translated">声明的变量列表。每个变量应该是一个对象，其字符串字段的 &lt;code&gt;type&lt;/code&gt; &lt;code&gt;name&lt;/code&gt; 和name，并且还可以选择具有 &lt;code&gt;default&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="075dd91e787bf6243a7752780ea0c8bba33ec184" translate="yes" xml:space="preserve">
          <source>List of objects (key/value pairs) to create instances from</source>
          <target state="translated">要创建实例的对象列表(键/值对)。</target>
        </trans-unit>
        <trans-unit id="efd6defff3588a82427cedf6cb66687edafa5f0a" translate="yes" xml:space="preserve">
          <source>List of parameters declared for SQL function</source>
          <target state="translated">为SQL函数声明的参数列表</target>
        </trans-unit>
        <trans-unit id="a01e2b9e9c9931427b664651a40032e3447516ac" translate="yes" xml:space="preserve">
          <source>List of records to insert</source>
          <target state="translated">要插入的记录清单</target>
        </trans-unit>
        <trans-unit id="756dc1b93051a84503f4ee0647cfc663c3af6b9d" translate="yes" xml:space="preserve">
          <source>List of table to skip</source>
          <target state="translated">跳过的表格列表</target>
        </trans-unit>
        <trans-unit id="a516eb0d586f3d22305a538c09c709ee6782c824" translate="yes" xml:space="preserve">
          <source>Load further nested related models</source>
          <target state="translated">装入更多嵌套的相关模型</target>
        </trans-unit>
        <trans-unit id="3c9c5fc6308d5bcf9e048b826209d636266946b5" translate="yes" xml:space="preserve">
          <source>Lock the selected rows. Possible options are transaction.LOCK.UPDATE and transaction.LOCK.SHARE. Postgres also supports transaction.LOCK.KEY_SHARE, transaction.LOCK.NO_KEY_UPDATE and specific model locks with joins. See &lt;a href=&quot;../../transaction#lock&quot;&gt;transaction.LOCK for an example&lt;/a&gt;</source>
          <target state="translated">锁定选定的行。可能的选项是transaction.LOCK.UPDATE和transaction.LOCK.SHARE。Postgres还支持transaction.LOCK.KEY_SHARE，transaction.LOCK.NO_KEY_UPDATE和具有联接的特定模型锁。有关&lt;a href=&quot;../../transaction#lock&quot;&gt;示例，&lt;/a&gt;请参见transaction.LOCK。</target>
        </trans-unit>
        <trans-unit id="01175ae5bc13842f1a68f275d49e45971292d2c1" translate="yes" xml:space="preserve">
          <source>Locks</source>
          <target state="translated">Locks</target>
        </trans-unit>
        <trans-unit id="381f51fe7d2e48a40efecb0f6ec5b0e10560328f" translate="yes" xml:space="preserve">
          <source>MACADDR</source>
          <target state="translated">MACADDR</target>
        </trans-unit>
        <trans-unit id="fb533649ca2f9e73b11b6bb948adb363f958ac9f" translate="yes" xml:space="preserve">
          <source>MEDIUMINT</source>
          <target state="translated">MEDIUMINT</target>
        </trans-unit>
        <trans-unit id="5e10df029a02645d6284a04ec967bdb813352d80" translate="yes" xml:space="preserve">
          <source>MSSQL</source>
          <target state="translated">MSSQL</target>
        </trans-unit>
        <trans-unit id="d338a8206f4d51fb083279011e9504adb9b8bc21" translate="yes" xml:space="preserve">
          <source>MSSQL - Implemented as a single query using &lt;code&gt;MERGE&lt;/code&gt; and &lt;code&gt;WHEN (NOT) MATCHED THEN&lt;/code&gt;&lt;strong&gt;Note&lt;/strong&gt; that SQLite returns undefined for created, no matter if the row was created or updated. This is because SQLite always runs INSERT OR IGNORE + UPDATE, in a single query, so there is no way to know whether the row was inserted or not.</source>
          <target state="translated">MSSQL-使用 &lt;code&gt;MERGE&lt;/code&gt; 并实现 &lt;code&gt;WHEN (NOT) MATCHED THEN&lt;/code&gt; 实现为单个查询。&lt;strong&gt;请注意&lt;/strong&gt;，无论创建还是更新该行，SQLite都会为创建返回未定义的查询。这是因为SQLite始终在单个查询中运行INSERT或IGNORE + UPDATE，因此无法知道是否插入了该行。</target>
        </trans-unit>
        <trans-unit id="991df59282ae7659f4a3c3ddbd655d8dab601328" translate="yes" xml:space="preserve">
          <source>MSSQL does not have a JSON data type, however it does provide support for JSON stored as strings through certain functions since SQL Server 2016. Using these functions, you will be able to query the JSON stored in the string, but any returned values will need to be parsed seperately.</source>
          <target state="translated">MSSQL没有JSON数据类型,然而自SQL Server 2016以来,它通过某些函数为存储为字符串的JSON提供支持。使用这些函数,您将能够查询存储在字符串中的JSON,但任何返回的值都需要单独解析。</target>
        </trans-unit>
        <trans-unit id="a2b1fa2c3a6d1e1afc6275611ca02b5fdffb139c" translate="yes" xml:space="preserve">
          <source>Managed transaction (auto-callback)</source>
          <target state="translated">管理交易(自动回调</target>
        </trans-unit>
        <trans-unit id="8ea330d8bd2304f1ff715165a6ab5db327917663" translate="yes" xml:space="preserve">
          <source>Managed transactions handle committing or rolling back the transaction automatically. You start a managed transaction by passing a callback to &lt;code&gt;sequelize.transaction&lt;/code&gt;.</source>
          <target state="translated">托管事务自动处理提交或回滚事务。通过将回调传递给 &lt;code&gt;sequelize.transaction&lt;/code&gt; 来启动托管事务。</target>
        </trans-unit>
        <trans-unit id="0cc59cf8eacc13611e26eb5e7be4726fc40e2011" translate="yes" xml:space="preserve">
          <source>Manipulating the dataset with limit, offset, order and group</source>
          <target state="translated">用极限、偏移、顺序和分组来操纵数据集。</target>
        </trans-unit>
        <trans-unit id="4e836fdc2572ab23d5dc8c36bd613ac6b0f82d63" translate="yes" xml:space="preserve">
          <source>Manual</source>
          <target state="translated">Manual</target>
        </trans-unit>
        <trans-unit id="377bf4b05aa29004e36d9244e2d88732601654cd" translate="yes" xml:space="preserve">
          <source>Many-to-many association with a join table.</source>
          <target state="translated">多对多关联,有一个连接表。</target>
        </trans-unit>
        <trans-unit id="a2c278e4b750406933592c346d173c2e67747cad" translate="yes" xml:space="preserve">
          <source>Map returned fields to arbitrary names for &lt;code&gt;SELECT&lt;/code&gt; query type.</source>
          <target state="translated">将返回的字段映射为 &lt;code&gt;SELECT&lt;/code&gt; 查询类型的任意名称。</target>
        </trans-unit>
        <trans-unit id="be596405e95a78e6e3fd716d1f964da33dac24e3" translate="yes" xml:space="preserve">
          <source>Map returned fields to model's fields if &lt;code&gt;options.model&lt;/code&gt; or &lt;code&gt;options.instance&lt;/code&gt; is present. Mapping will occur before building the model instance.</source>
          <target state="translated">如果存在 &lt;code&gt;options.model&lt;/code&gt; 或 &lt;code&gt;options.instance&lt;/code&gt; ,则将返回的字段映射到模型的字段。映射将在构建模型实例之前发生。</target>
        </trans-unit>
        <trans-unit id="7f00002bb6ad2eec19a19de8a03c7d6fad15adff" translate="yes" xml:space="preserve">
          <source>MariaDB</source>
          <target state="translated">MariaDB</target>
        </trans-unit>
        <trans-unit id="8f7e6ef50178ceaac3c27a6e48b1989cccb85ff6" translate="yes" xml:space="preserve">
          <source>Mark the include as duplicating, will prevent a subquery from being used.</source>
          <target state="translated">将包含标记为重复,将防止子查询被使用。</target>
        </trans-unit>
        <trans-unit id="1da7a96c09b4e4634e58cd74016bd7905cd29f3a" translate="yes" xml:space="preserve">
          <source>Match a regex against the database name before syncing, a safety check for cases where force: true is used in tests but not live code</source>
          <target state="translated">在同步之前,根据数据库名称匹配一个regex,这是一个安全检查,适用于在测试中使用force:true,但不是实时代码的情况。</target>
        </trans-unit>
        <trans-unit id="47f4c6f36bdf82bb2ab12a74bce5359bd3e3baea" translate="yes" xml:space="preserve">
          <source>Maximum number of connection in pool</source>
          <target state="translated">池中最大连接数</target>
        </trans-unit>
        <trans-unit id="97738b59f60343e4146991bad8d071fcf74e0ab8" translate="yes" xml:space="preserve">
          <source>Member Summary</source>
          <target state="translated">成员摘要</target>
        </trans-unit>
        <trans-unit id="40de0d4de887a374168bf79e72c7aa0fa4594d6e" translate="yes" xml:space="preserve">
          <source>Merging</source>
          <target state="translated">Merging</target>
        </trans-unit>
        <trans-unit id="5646c6f729482a25c89d910db627247645097c06" translate="yes" xml:space="preserve">
          <source>Merging includes</source>
          <target state="translated">合并包括</target>
        </trans-unit>
        <trans-unit id="8102ea6074090f4681ab70e02ebe6ece740ec91c" translate="yes" xml:space="preserve">
          <source>Method Summary</source>
          <target state="translated">方法摘要</target>
        </trans-unit>
        <trans-unit id="7ee71f3365c47f24bea17f31665feff788530ffb" translate="yes" xml:space="preserve">
          <source>Migration Skeleton</source>
          <target state="translated">迁移骨架</target>
        </trans-unit>
        <trans-unit id="c32d7ce630147bbc439f44b57c3dd404394c0d9b" translate="yes" xml:space="preserve">
          <source>Migration Storage</source>
          <target state="translated">迁移存储</target>
        </trans-unit>
        <trans-unit id="dca984afd74a0089c1d5a5816e4de2e8d46a60b5" translate="yes" xml:space="preserve">
          <source>Migrations</source>
          <target state="translated">Migrations</target>
        </trans-unit>
        <trans-unit id="fdaa1ef022ef7283a9b451dc1daff1a42f1e129d" translate="yes" xml:space="preserve">
          <source>Minimum number of connection in pool</source>
          <target state="translated">池中的最小连接数</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="4142158426158729ca79c5ce805fd286f210430c" translate="yes" xml:space="preserve">
          <source>Model definition</source>
          <target state="translated">模型定义</target>
        </trans-unit>
        <trans-unit id="d5b42cbdc48b29ec85aa8da6533d3aa5c7e63a91" translate="yes" xml:space="preserve">
          <source>Model hooks</source>
          <target state="translated">模型钩</target>
        </trans-unit>
        <trans-unit id="0a75c07ee5b0146bfd4157f900acbbac80d86138" translate="yes" xml:space="preserve">
          <source>Model instances operate with the concept of a &lt;code&gt;dataValues&lt;/code&gt; property, which stores the actual values represented by the instance. By default, the values from dataValues can also be accessed directly from the Instance, that is:</source>
          <target state="translated">模型实例使用 &lt;code&gt;dataValues&lt;/code&gt; 属性的概念进行操作，该属性存储由实例表示的实际值。默认情况下，也可以直接从实例访问dataValues中的值，即：</target>
        </trans-unit>
        <trans-unit id="b86c2670dd4b42d8a914c0eec8b73c34afe4cef4" translate="yes" xml:space="preserve">
          <source>Model to upsert on</source>
          <target state="translated">上传的模型</target>
        </trans-unit>
        <trans-unit id="a07e44c48da57fac1360b4b859e20027ab13a678" translate="yes" xml:space="preserve">
          <source>Model usage</source>
          <target state="translated">模型使用</target>
        </trans-unit>
        <trans-unit id="a53b41efe74bb25e6882a6eee3070bdffdb51b7f" translate="yes" xml:space="preserve">
          <source>Model validations allow you to specify format/content/inheritance validations for each attribute of the model.</source>
          <target state="translated">模型验证允许您为模型的每个属性指定格式/内容/继承验证。</target>
        </trans-unit>
        <trans-unit id="21ce518813b59ff7892d35ddffbbfb5e60400474" translate="yes" xml:space="preserve">
          <source>Model validator methods are called with the model object's context and are deemed to fail if they throw an error, otherwise pass. This is just the same as with custom field-specific validators.</source>
          <target state="translated">模型验证器方法在调用模型对象的上下文时,如果抛出错误,则视为失败,否则为通过。这和自定义字段专用验证器一样。</target>
        </trans-unit>
        <trans-unit id="a823acb606efcdb0eb853730193b3ca0d95a9686" translate="yes" xml:space="preserve">
          <source>Model#create for a full explanation of options</source>
          <target state="translated">模型#create,以了解选项的完整解释。</target>
        </trans-unit>
        <trans-unit id="8af76ef4fdb319b9698a20f8340797dab906080c" translate="yes" xml:space="preserve">
          <source>Model#get</source>
          <target state="translated">Model#get</target>
        </trans-unit>
        <trans-unit id="3cb30668d05a4e893eb0a96404decd8e56821285" translate="yes" xml:space="preserve">
          <source>Model#reload</source>
          <target state="translated">Model#reload</target>
        </trans-unit>
        <trans-unit id="4f584a3efe16470d969227bf5c8fd863f8da7ead" translate="yes" xml:space="preserve">
          <source>Model#save</source>
          <target state="translated">Model#save</target>
        </trans-unit>
        <trans-unit id="4d5283314738ecf76503ebc98257bde975737cb3" translate="yes" xml:space="preserve">
          <source>Model#set</source>
          <target state="translated">Model#set</target>
        </trans-unit>
        <trans-unit id="7fcf673bb86044c610823a0d2fc30026edfb6398" translate="yes" xml:space="preserve">
          <source>Model#where</source>
          <target state="translated">Model#where</target>
        </trans-unit>
        <trans-unit id="9e763be04a0228a99af47fdea7072bbd2305daba" translate="yes" xml:space="preserve">
          <source>Model-wide validations</source>
          <target state="translated">全模型验证</target>
        </trans-unit>
        <trans-unit id="8253b756d3ad33e6e7017ccdafc1a90fc90f96c7" translate="yes" xml:space="preserve">
          <source>Model.belongsTo</source>
          <target state="translated">Model.belongsTo</target>
        </trans-unit>
        <trans-unit id="454a1355d18fe035a3d709bc71b45145b8aa70a6" translate="yes" xml:space="preserve">
          <source>Model.belongsToMany</source>
          <target state="translated">Model.belongsToMany</target>
        </trans-unit>
        <trans-unit id="338a4bdb9701251c42339f0107d0cab2dfc70bd6" translate="yes" xml:space="preserve">
          <source>Model.build</source>
          <target state="translated">Model.build</target>
        </trans-unit>
        <trans-unit id="e1b94c3211965ce0df3e43428bf03ab75c9411f6" translate="yes" xml:space="preserve">
          <source>Model.findAll</source>
          <target state="translated">Model.findAll</target>
        </trans-unit>
        <trans-unit id="e1b2d659c60c1fcfe515ae54f50c22008b1758d0" translate="yes" xml:space="preserve">
          <source>Model.hasMany</source>
          <target state="translated">Model.hasMany</target>
        </trans-unit>
        <trans-unit id="4c16d25a9fc250497c7ca38d6f46e1f59a466e24" translate="yes" xml:space="preserve">
          <source>Model.hasOne</source>
          <target state="translated">Model.hasOne</target>
        </trans-unit>
        <trans-unit id="fae0e3c371dd4093bef01bf73725ab76001c9cc8" translate="yes" xml:space="preserve">
          <source>Model.increment</source>
          <target state="translated">Model.increment</target>
        </trans-unit>
        <trans-unit id="098dd694d5c2ce27262982062cf5e8f57cabde98" translate="yes" xml:space="preserve">
          <source>Model.save</source>
          <target state="translated">Model.save</target>
        </trans-unit>
        <trans-unit id="fefb16c53c032c568ad0842061992d2b085291e3" translate="yes" xml:space="preserve">
          <source>Model.schema</source>
          <target state="translated">Model.schema</target>
        </trans-unit>
        <trans-unit id="c9a517d625d0bd2320f055ed68c71f3399c8a1e1" translate="yes" xml:space="preserve">
          <source>Modeling a table</source>
          <target state="translated">建立表格模型</target>
        </trans-unit>
        <trans-unit id="b8ac15e7b4962a2e2baf204f84d2215049c4ac38" translate="yes" xml:space="preserve">
          <source>Models are stored here under the name given to &lt;code&gt;sequelize.define&lt;/code&gt;</source>
          <target state="translated">模型以指定给 &lt;code&gt;sequelize.define&lt;/code&gt; 的名称存储在此处</target>
        </trans-unit>
        <trans-unit id="cc9169ab2687ee0ff11fb74d9665fc408f0ddcdc" translate="yes" xml:space="preserve">
          <source>More examples, &lt;a href=&quot;https://sequelize.org/manual/tutorial/models-definition.html&quot;&gt;Model Definition&lt;/a&gt;</source>
          <target state="translated">更多示例，&lt;a href=&quot;https://sequelize.org/manual/tutorial/models-definition.html&quot;&gt;模型定义&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7e49c63d7a388fe61b0e185917e856c5555045a" translate="yes" xml:space="preserve">
          <source>More scopes, defined in the same way as defaultScope above. See &lt;code&gt;Model.scope&lt;/code&gt; for more information about how scopes are defined, and what you can do with them</source>
          <target state="translated">更多范围，以与上述defaultScope相同的方式定义。有关如何定义范围以及如何使用范围的更多信息，请参见 &lt;code&gt;Model.scope&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06e96031e3182ce6001f4ff143c003c41585330f" translate="yes" xml:space="preserve">
          <source>Most likely the type you are trying to implement is already included in &lt;a href=&quot;data-types&quot;&gt;DataTypes&lt;/a&gt;. If a new datatype is not included, this manual will show how to write it yourself.</source>
          <target state="translated">您最想实现的类型很可能已经包含在&lt;a href=&quot;data-types&quot;&gt;DataTypes中&lt;/a&gt;。如果不包括新的数据类型，本手册将说明如何自己编写它。</target>
        </trans-unit>
        <trans-unit id="deaa0c393a6613972aaccbf1fecfdad67aa21e88" translate="yes" xml:space="preserve">
          <source>MySQL</source>
          <target state="translated">MySQL</target>
        </trans-unit>
        <trans-unit id="d9d495ec80ad0df93c05d8abe97089135bb60400" translate="yes" xml:space="preserve">
          <source>MySQL - Implemented as a single query &lt;code&gt;INSERT values ON DUPLICATE KEY UPDATE values&lt;/code&gt;</source>
          <target state="translated">MySQL-实现为单个查询 &lt;code&gt;INSERT values ON DUPLICATE KEY UPDATE values&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd408e0f9d0af499eda4bb5b3feec4a587a895de" translate="yes" xml:space="preserve">
          <source>NOEXPAND</source>
          <target state="translated">NOEXPAND</target>
        </trans-unit>
        <trans-unit id="75b8d58ed5ac16a53fb00f7e374f5a6e16d7f254" translate="yes" xml:space="preserve">
          <source>NOLOCK</source>
          <target state="translated">NOLOCK</target>
        </trans-unit>
        <trans-unit id="969e7d8dee132181523a501a068fec75bded3005" translate="yes" xml:space="preserve">
          <source>NOT</source>
          <target state="translated">NOT</target>
        </trans-unit>
        <trans-unit id="9841c4209305816a8e9adbf24362646952f05b27" translate="yes" xml:space="preserve">
          <source>NOW</source>
          <target state="translated">NOW</target>
        </trans-unit>
        <trans-unit id="a2af9a6115134a71b0d62f68e143c19efff1f954" translate="yes" xml:space="preserve">
          <source>NOWAIT</source>
          <target state="translated">NOWAIT</target>
        </trans-unit>
        <trans-unit id="b26f87d0c59f90fdc5143250b4f83e7b4def44dc" translate="yes" xml:space="preserve">
          <source>NO_KEY_UPDATE</source>
          <target state="translated">NO_KEY_UPDATE</target>
        </trans-unit>
        <trans-unit id="6c2496a022b02739f43ed430676315b0c3b34a08" translate="yes" xml:space="preserve">
          <source>NUMBER</source>
          <target state="translated">NUMBER</target>
        </trans-unit>
        <trans-unit id="42ead8566c2a2f546d0123a49496ab3f43750da0" translate="yes" xml:space="preserve">
          <source>NUMBER#constructor</source>
          <target state="translated">NUMBER#constructor</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="ed585ba39b11c2180b849eb53de424e3c71e081f" translate="yes" xml:space="preserve">
          <source>Name of SQL function to create</source>
          <target state="translated">要创建的SQL函数名称</target>
        </trans-unit>
        <trans-unit id="ec874e4030f9772c022ffc4fd75b709664407142" translate="yes" xml:space="preserve">
          <source>Name of SQL function to drop</source>
          <target state="translated">要删除的SQL函数名称</target>
        </trans-unit>
        <trans-unit id="1dc36a90ec6c0522dcf70c1022a4f52a8ebd611e" translate="yes" xml:space="preserve">
          <source>Name of table to create</source>
          <target state="translated">要创建的表的名称</target>
        </trans-unit>
        <trans-unit id="b1fb57d5dc0386d03765076aea0e86c354422228" translate="yes" xml:space="preserve">
          <source>Name of the constraint. If not specified, sequelize automatically creates a named constraint based on constraint type, table &amp;amp; column names</source>
          <target state="translated">约束的名称。如果未指定，sequelize会根据约束类型，表和列名称自动创建一个命名约束</target>
        </trans-unit>
        <trans-unit id="4f9d1ae98e9da4b2bbe6a3af8fc9c757c82ce573" translate="yes" xml:space="preserve">
          <source>Name of the index. Default is &amp;lt;table&amp;gt;&lt;em&gt;&amp;lt;attr1&amp;gt;&lt;/em&gt;&amp;lt;attr2&amp;gt;</source>
          <target state="translated">索引名称。默认值为&amp;lt;table&amp;gt; &lt;em&gt;&amp;lt;attr1&amp;gt;&lt;/em&gt; &amp;lt;attr2&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2caed30fdd66bcf9c63c21b3cf8cfd9c614e4500" translate="yes" xml:space="preserve">
          <source>Name of the schema</source>
          <target state="translated">模式名称</target>
        </trans-unit>
        <trans-unit id="83417c5bdb0fb8b5e66747ac85c9affcdf83a6c6" translate="yes" xml:space="preserve">
          <source>Naming strategy</source>
          <target state="translated">命名战略</target>
        </trans-unit>
        <trans-unit id="e3dc9c09a90c87b9a68571340476b7334d583546" translate="yes" xml:space="preserve">
          <source>Nested eager loading</source>
          <target state="translated">嵌套式急切装载</target>
        </trans-unit>
        <trans-unit id="a04f6031a8e00febd6c589cf09c4d65ef201ad6b" translate="yes" xml:space="preserve">
          <source>Nested key</source>
          <target state="translated">嵌套键</target>
        </trans-unit>
        <trans-unit id="fb2662973950c773f223cbb622d456ea8595339e" translate="yes" xml:space="preserve">
          <source>Nested object</source>
          <target state="translated">嵌套对象</target>
        </trans-unit>
        <trans-unit id="03677879a39a6dfcf623a67df9dc3d5704326271" translate="yes" xml:space="preserve">
          <source>New column name</source>
          <target state="translated">新栏目名称</target>
        </trans-unit>
        <trans-unit id="8708814fcaebc0970f0c7c817ceb87f8487aaf17" translate="yes" xml:space="preserve">
          <source>New name from table</source>
          <target state="translated">表中的新名称</target>
        </trans-unit>
        <trans-unit id="6201a9f7432baaca8091c6a78cc0f9fb26eaa3a1" translate="yes" xml:space="preserve">
          <source>New name of function</source>
          <target state="translated">职能的新名称</target>
        </trans-unit>
        <trans-unit id="ed47500954469451016c880a7f5051ccc16a64cf" translate="yes" xml:space="preserve">
          <source>Newly defined model</source>
          <target state="translated">新定义的模式</target>
        </trans-unit>
        <trans-unit id="fb17233bc810f24085dbf005a9031819e384f852" translate="yes" xml:space="preserve">
          <source>Next thing: Loading of data with many-to-something associations!</source>
          <target state="translated">下一件事:加载数据时要有多对多的关联!</target>
        </trans-unit>
        <trans-unit id="e16b1a945e5b22bb16b245f22dd7211090c45d44" translate="yes" xml:space="preserve">
          <source>Normally this is done on process exit, so you only need to call this method if you are creating multiple instances, and want to garbage collect some of them.</source>
          <target state="translated">通常这是在进程退出时完成的,所以只有当你正在创建多个实例,并且想对其中的一些实例进行垃圾回收时,才需要调用这个方法。</target>
        </trans-unit>
        <trans-unit id="44df5fc237f6e69bd9d791f7eb38e4498268a792" translate="yes" xml:space="preserve">
          <source>Note for production</source>
          <target state="translated">生产说明</target>
        </trans-unit>
        <trans-unit id="6c85945356462ad75525821c104b7dfcd213da7d" translate="yes" xml:space="preserve">
          <source>Note how &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;age&lt;/code&gt; are overwritten by &lt;code&gt;scope2&lt;/code&gt;, while &lt;code&gt;firstName&lt;/code&gt; is preserved. The &lt;code&gt;limit&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;, &lt;code&gt;order&lt;/code&gt;, &lt;code&gt;paranoid&lt;/code&gt;, &lt;code&gt;lock&lt;/code&gt; and &lt;code&gt;raw&lt;/code&gt; fields are overwritten, while &lt;code&gt;where&lt;/code&gt; is shallowly merged (meaning that identical keys will be overwritten). The merge strategy for &lt;code&gt;include&lt;/code&gt; will be discussed later on.</source>
          <target state="translated">请注意，在保留 &lt;code&gt;firstName&lt;/code&gt; 的同时， &lt;code&gt;scope2&lt;/code&gt; 将如何覆盖 &lt;code&gt;limit&lt;/code&gt; 和 &lt;code&gt;age&lt;/code&gt; 。的 &lt;code&gt;limit&lt;/code&gt; ， &lt;code&gt;offset&lt;/code&gt; ， &lt;code&gt;order&lt;/code&gt; ， &lt;code&gt;paranoid&lt;/code&gt; ， &lt;code&gt;lock&lt;/code&gt; 和 &lt;code&gt;raw&lt;/code&gt; 字段被覆盖，而 &lt;code&gt;where&lt;/code&gt; 被浅浅合并（这意味着相同的密钥将被覆盖）。 &lt;code&gt;include&lt;/code&gt; 的合并策略将在后面讨论。</target>
        </trans-unit>
        <trans-unit id="ef9ad9b0ed9a592756067e7688004b19c87f4919" translate="yes" xml:space="preserve">
          <source>Note how we also specified &lt;code&gt;constraints: false&lt;/code&gt; for profile picture. This is because we add a foreign key from user to picture (profilePictureId), and from picture to user (userId). If we were to add foreign keys to both, it would create a cyclic dependency, and sequelize would not know which table to create first, since user depends on picture, and picture depends on user. These kinds of problems are detected by sequelize before the models are synced to the database, and you will get an error along the lines of &lt;code&gt;Error: Cyclic dependency found. 'users' is dependent of itself&lt;/code&gt;. If you encounter this, you should either disable some constraints, or rethink your associations completely.</source>
          <target state="translated">请注意我们如何指定 &lt;code&gt;constraints: false&lt;/code&gt; 个人资料图片为false。这是因为我们在用户和图片之间添加了外键（profilePictureId），在图片和用户之间添加了外键（userId）。如果我们要向两者都添加外键，则会创建循环依赖关系，而后继化将不知道首先创建哪个表，因为用户取决于图片，而图片取决于用户。在将模型同步到数据库之前，通过sequelize检测到这些类型的问题，并且您将在 &lt;code&gt;Error: Cyclic dependency found. 'users' is dependent of itself&lt;/code&gt; 遇到错误。 &amp;ldquo;用户&amp;rdquo;取决于自己。如果遇到这种情况，则应该禁用某些约束，或者完全重新考虑关联。</target>
        </trans-unit>
        <trans-unit id="eb9144a05775de68ebca958a87e5360db80e40b3" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;attributes&lt;/code&gt; keys of multiple applied scopes are merged in such a way that &lt;code&gt;attributes.exclude&lt;/code&gt; are always preserved. This allows merging several scopes and never leaking sensitive fields in final scope.</source>
          <target state="translated">注意，多个应用范围的 &lt;code&gt;attributes&lt;/code&gt; 键以始终保留 &lt;code&gt;attributes.exclude&lt;/code&gt; 的方式合并。这允许合并多个合并范围，并且永远不会泄漏最终合并范围中的敏感字段。</target>
        </trans-unit>
        <trans-unit id="85958c9a7874f5c0d22b6bd6bca1113ce4f88dd0" translate="yes" xml:space="preserve">
          <source>Note that if you are using Sequelize migrations you will need to add the &lt;code&gt;createdAt&lt;/code&gt; and &lt;code&gt;updatedAt&lt;/code&gt; fields to your migration definition:</source>
          <target state="translated">请注意，如果你正在使用Sequelize迁移，你将需要添加 &lt;code&gt;createdAt&lt;/code&gt; 和 &lt;code&gt;updatedAt&lt;/code&gt; 领域迁移的定义：</target>
        </trans-unit>
        <trans-unit id="107947aedcad482a28cbbd5ea34b917a3cb7b194" translate="yes" xml:space="preserve">
          <source>Note that many model operations in Sequelize allow you to specify a transaction in the options parameter of the method. If a transaction _is_ specified in the original call, it will be present in the options parameter passed to the hook function. For example, consider the following snippet:</source>
          <target state="translated">请注意,Sequelize中的许多模型操作允许你在方法的选项参数中指定一个事务。如果在原始调用中指定了一个事务,那么它就会出现在传递给钩子函数的选项参数中。例如,考虑以下片段。</target>
        </trans-unit>
        <trans-unit id="e4a2d5cf04ad438df329fae57d33930a1cee82dc" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;this.firstname&lt;/code&gt; and &lt;code&gt;this.lastname&lt;/code&gt; references in the &lt;code&gt;fullName&lt;/code&gt; getter function will trigger a call to the respective getter functions. If you do not want that then use the &lt;code&gt;getDataValue()&lt;/code&gt; method to access the raw value (see below).</source>
          <target state="translated">请注意， &lt;code&gt;fullName&lt;/code&gt; getter函数中的 &lt;code&gt;this.firstname&lt;/code&gt; 和 &lt;code&gt;this.lastname&lt;/code&gt; 引用将触发对相应getter函数的调用。如果您不希望这样做，请使用 &lt;code&gt;getDataValue()&lt;/code&gt; 方法访问原始值（请参见下文）。</target>
        </trans-unit>
        <trans-unit id="c3f41755f136f1dc7c83971f78c9422549830be4" translate="yes" xml:space="preserve">
          <source>Note that the Image -&amp;gt; Comment and Post -&amp;gt; Comment relations define a scope, &lt;code&gt;commentable: 'image'&lt;/code&gt; and &lt;code&gt;commentable: 'post'&lt;/code&gt; respectively. This scope is automatically applied when using the association functions:</source>
          <target state="translated">注意，图像-&amp;gt;注释和发布-&amp;gt;注释关系定义了一个范围，分别是 &lt;code&gt;commentable: 'image'&lt;/code&gt; 和 &lt;code&gt;commentable: 'post'&lt;/code&gt; 。使用关联函数时，将自动应用此范围：</target>
        </trans-unit>
        <trans-unit id="4f0b731694e383aebdfdb192c03dcf6b1ffbcb0d" translate="yes" xml:space="preserve">
          <source>Note that where multiple arguments need to be passed to the built-in validation functions, the arguments to be passed must be in an array. But if a single array argument is to be passed, for instance an array of acceptable strings for &lt;code&gt;isIn&lt;/code&gt;, this will be interpreted as multiple string arguments instead of one array argument. To work around this pass a single-length array of arguments, such as &lt;code&gt;[['one', 'two']]&lt;/code&gt; as shown above.</source>
          <target state="translated">请注意，在需要将多个参数传递给内置验证函数的情况下，要传递的参数必须位于数组中。但是，如果要传递单个数组参数，例如 &lt;code&gt;isIn&lt;/code&gt; 可接受的字符串数组，则将其解释为多个字符串参数，而不是一个数组参数。要解决此问题，请传递一个单长度的参数数组，例如，如上所示的 &lt;code&gt;[['one', 'two']]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acc671783544f4659031c39424988278f5682f5d" translate="yes" xml:space="preserve">
          <source>Note: connection pool (production)</source>
          <target state="translated">注:连接池(生产)</target>
        </trans-unit>
        <trans-unit id="f17a025ad4dbded90c801ce4da0060642aed6add" translate="yes" xml:space="preserve">
          <source>Note: setting up SQLite</source>
          <target state="translated">注意:设置SQLite</target>
        </trans-unit>
        <trans-unit id="598ee651f3662bc62e474c319bd8bfacefa4b7fa" translate="yes" xml:space="preserve">
          <source>Notice how in the two examples above, the string provided is inserted verbatim into the query, i.e. column names are not escaped. When you provide a string to order/group, this will always be the case. If you want to escape column names, you should provide an array of arguments, even though you only want to order/group by a single column</source>
          <target state="translated">请注意,在上面的两个例子中,所提供的字符串是逐字插入到查询中的,也就是说,列名没有被转义。当你为order/group提供一个字符串时,情况总是如此。如果你想转义列名,你应该提供一个参数数组,即使你只想按单列排序/分组。</target>
        </trans-unit>
        <trans-unit id="ea75bd7ff48126d9026a71c0c8a132e1bf24ae80" translate="yes" xml:space="preserve">
          <source>Notice how the callback passed to &lt;code&gt;transaction&lt;/code&gt; returns a promise chain, and does not explicitly call &lt;code&gt;t.commit()&lt;/code&gt; nor &lt;code&gt;t.rollback()&lt;/code&gt;. If all promises in the returned chain are resolved successfully the transaction is committed. If one or several of the promises are rejected, the transaction is rolled back.</source>
          <target state="translated">注意传递给 &lt;code&gt;transaction&lt;/code&gt; 的回调如何返回承诺链，并且没有显式调用 &lt;code&gt;t.commit()&lt;/code&gt; 或 &lt;code&gt;t.rollback()&lt;/code&gt; 。如果成功解决了返回链中的所有承诺，则提交事务。如果一项或多项承诺被拒绝，则交易将回滚。</target>
        </trans-unit>
        <trans-unit id="11f0b22a1229e459ff86618d87a61e6308c98004" translate="yes" xml:space="preserve">
          <source>Notice that the accessor (the &lt;code&gt;Tasks&lt;/code&gt; property in the resulting instance) is plural because the association is many-to-something.</source>
          <target state="translated">请注意，访问器（结果实例中的 &lt;code&gt;Tasks&lt;/code&gt; 属性）是复数形式，因为关联是多对多的。</target>
        </trans-unit>
        <trans-unit id="db89be52a41833866fcb78f0286f7fdf07513336" translate="yes" xml:space="preserve">
          <source>Notice that the accessor (the &lt;code&gt;User&lt;/code&gt; property in the resulting instance) is singular because the association is one-to-something.</source>
          <target state="translated">请注意，访问器（结果实例中的 &lt;code&gt;User&lt;/code&gt; 属性）是单数的，因为关联是一对一的。</target>
        </trans-unit>
        <trans-unit id="4848a0b9c04bb727fb8adec90477785147fef5df" translate="yes" xml:space="preserve">
          <source>Notice that the scoped column (&lt;code&gt;taggable&lt;/code&gt;) is now on the through model (&lt;code&gt;ItemTag&lt;/code&gt;).</source>
          <target state="translated">注意，作用域列（ &lt;code&gt;taggable&lt;/code&gt; ）现在位于直通模型（ &lt;code&gt;ItemTag&lt;/code&gt; ）上。</target>
        </trans-unit>
        <trans-unit id="0cf25bfe98d9e52a1f895ec51fb4362193792880" translate="yes" xml:space="preserve">
          <source>Notice, that the &lt;code&gt;useCLS()&lt;/code&gt; method is on the &lt;em&gt;constructor&lt;/em&gt;, not on an instance of sequelize. This means that all instances will share the same namespace, and that CLS is all-or-nothing - you cannot enable it only for some instances.</source>
          <target state="translated">注意， &lt;code&gt;useCLS()&lt;/code&gt; 方法在&lt;em&gt;构造函数上&lt;/em&gt;，而不在sequelize实例上。这意味着所有实例将共享相同的名称空间，并且CLS是全有或全无-您不能仅对某些实例启用它。</target>
        </trans-unit>
        <trans-unit id="e2ed15a30fc301b436665dd5c0c8498b757d5988" translate="yes" xml:space="preserve">
          <source>Now CLI will be able to run ES6/ES7 code from migrations/seeders etc. Please keep in mind this depends upon your configuration of &lt;code&gt;.babelrc&lt;/code&gt;. Please read more about that at &lt;a href=&quot;https://babeljs.io&quot;&gt;babeljs.io&lt;/a&gt;.</source>
          <target state="translated">现在，CLI将能够从迁移/播种程序等运行ES6 / ES7代码。请记住，这取决于您对 &lt;code&gt;.babelrc&lt;/code&gt; 的配置。请在&lt;a href=&quot;https://babeljs.io&quot;&gt;babeljs.io上&lt;/a&gt;阅读有关此内容的更多信息。</target>
        </trans-unit>
        <trans-unit id="0dda3fffe72b1e2fffc081cac72bf40762b93a93" translate="yes" xml:space="preserve">
          <source>Now Sequelize CLI will load &lt;code&gt;config/config.js&lt;/code&gt; for getting configuration options. Since this is a JS file you can have any code executed and export final dynamic configuration file.</source>
          <target state="translated">现在，Sequelize CLI将加载 &lt;code&gt;config/config.js&lt;/code&gt; 以获取配置选项。由于这是一个JS文件，因此您可以执行任何代码并导出最终的动态配置文件。</target>
        </trans-unit>
        <trans-unit id="95b3edba890e41548c10bf9b3b3625f9aa2f773c" translate="yes" xml:space="preserve">
          <source>Now edit this file and set correct database credentials and dialect. The keys of the objects(ex. &quot;development&quot;) are used on &lt;code&gt;model/index.js&lt;/code&gt; for matching &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; (When undefined, &quot;development&quot; is a default value.).</source>
          <target state="translated">现在，编辑此文件并设置正确的数据库凭据和方言。对象的键（例如&amp;ldquo; development&amp;rdquo;）在 &lt;code&gt;model/index.js&lt;/code&gt; 上用于匹配 &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; （未定义时，&amp;ldquo; development&amp;rdquo;是默认值。）。</target>
        </trans-unit>
        <trans-unit id="8bcf1d33260995a6c3b8643c00cc70d1a34e6ef9" translate="yes" xml:space="preserve">
          <source>Now include &lt;code&gt;babel-register&lt;/code&gt; setup in this file</source>
          <target state="translated">现在在此文件中包含 &lt;code&gt;babel-register&lt;/code&gt; 设置</target>
        </trans-unit>
        <trans-unit id="464a349af324240ebd3cbae6fce3308732c7d91a" translate="yes" xml:space="preserve">
          <source>Now let's create &lt;code&gt;.sequelizerc&lt;/code&gt; file, it can include any configuration you may want to change for &lt;code&gt;sequelize-cli&lt;/code&gt; but in addition to that we want it to register babel for our codebase. Something like this</source>
          <target state="translated">现在让我们创建 &lt;code&gt;.sequelizerc&lt;/code&gt; 文件，它可以包含您可能要为 &lt;code&gt;sequelize-cli&lt;/code&gt; 更改的任何配置，但除此之外，我们还希望它为我们的代码库注册babel。像这样</target>
        </trans-unit>
        <trans-unit id="20a6638a8729006ac3616971ef324f0cd3930e50" translate="yes" xml:space="preserve">
          <source>Now let's work with an example config.</source>
          <target state="translated">现在让我们用一个配置示例来工作。</target>
        </trans-unit>
        <trans-unit id="aff9acc4bc5c9d94727af20f35602137e8690ce9" translate="yes" xml:space="preserve">
          <source>Now lets change some values and save changes to the database... There are two ways to do that:</source>
          <target state="translated">现在,让我们改变一些值并保存到数据库中......。有两种方法可以做到这一点。</target>
        </trans-unit>
        <trans-unit id="d4fb15abf10ea3e08624eaff19cd79bb8fba56a4" translate="yes" xml:space="preserve">
          <source>Now our table has been created and saved in database. With migration you can revert to old state by just running a command.</source>
          <target state="translated">现在我们的表已经被创建并保存在数据库中。通过迁移,你只需要运行一个命令就可以恢复到以前的状态。</target>
        </trans-unit>
        <trans-unit id="548b3c2a852af460195d73e56956f24676cc3d49" translate="yes" xml:space="preserve">
          <source>Now we can create a product with multiple tags in the following way:</source>
          <target state="translated">现在我们可以通过以下方式创建一个具有多个标签的产品。</target>
        </trans-unit>
        <trans-unit id="f114dbd008171ea170c4bc3c4396af90c7dda1af" translate="yes" xml:space="preserve">
          <source>Now we should edit this file to insert demo user to &lt;code&gt;User&lt;/code&gt; table.</source>
          <target state="translated">现在，我们应该编辑该文件，以将演示用户插入到 &lt;code&gt;User&lt;/code&gt; 表中。</target>
        </trans-unit>
        <trans-unit id="5fbb7a53e1f2decb02a350e377272f4a1343c317" translate="yes" xml:space="preserve">
          <source>Now you know how to use &lt;code&gt;.sequelizerc&lt;/code&gt; file. Now let's see how to use this file to use babel with &lt;code&gt;sequelize-cli&lt;/code&gt; setup. This will allow you to write migrations and seeders with ES6/ES7 syntax.</source>
          <target state="translated">现在您知道了如何使用 &lt;code&gt;.sequelizerc&lt;/code&gt; 文件。现在，让我们看看如何使用此文件在 &lt;code&gt;sequelize-cli&lt;/code&gt; 设置中使用babel 。这将允许您使用ES6 / ES7语法编写迁移和种子。</target>
        </trans-unit>
        <trans-unit id="fa5d7518e3108590d0f1160b265811a870cd538d" translate="yes" xml:space="preserve">
          <source>Now, consider the following four scopes defined on Foo:</source>
          <target state="translated">现在,考虑以下四个在Foo上定义的范围。</target>
        </trans-unit>
        <trans-unit id="5582432c4864632f5e1a23cfc9dcba9e1ce92437" translate="yes" xml:space="preserve">
          <source>OK. So, first of all, let's load all tasks with their associated user.</source>
          <target state="translated">好吧,那么,首先,让我们把所有的任务与它们的关联用户一起加载。那么,首先,让我们把所有的任务和他们的关联用户一起加载。</target>
        </trans-unit>
        <trans-unit id="2883f191bc5ebfdc16c0813eff659b35363ea69b" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="translated">Object</target>
        </trans-unit>
        <trans-unit id="524631efa40fbbd074c7d379858504a629448858" translate="yes" xml:space="preserve">
          <source>Object -</source>
          <target state="translated">对象 -</target>
        </trans-unit>
        <trans-unit id="7798f73e59ce895af4d9b669167864b8821ca276" translate="yes" xml:space="preserve">
          <source>Object representing a list of table attributes to create</source>
          <target state="translated">代表要创建的表格属性列表的对象</target>
        </trans-unit>
        <trans-unit id="a7b5e01cccb77400ad2465a66ef4eff96ddff3da" translate="yes" xml:space="preserve">
          <source>Object specifying target table, column name to create foreign key constraint</source>
          <target state="translated">指定目标表、列名以创建外键约束的对象。</target>
        </trans-unit>
        <trans-unit id="c785ae6c15b6aed10bfae737959e2db229782bf3" translate="yes" xml:space="preserve">
          <source>Object with multiple variables.</source>
          <target state="translated">有多个变量的对象。</target>
        </trans-unit>
        <trans-unit id="e3816c117ac9693a36bb6ad26b815f39c6a83f3f" translate="yes" xml:space="preserve">
          <source>Observe how the four scopes were merged into one. The includes of scopes are merged based on the model being included. If one scope includes model A and another includes model B, the merged result will include both models A and B. On the other hand, if both scopes include the same model A, but with different options (such as nested includes or other attributes), those will be merged recursively, as shown above.</source>
          <target state="translated">观察四个范围是如何合并成一个范围的。范围的包含是基于被包含的模型而合并的。如果一个作用域包括模型A,而另一个作用域包括模型B,合并后的结果将包括模型A和B。另一方面,如果两个作用域都包括相同的模型A,但有不同的选项(如嵌套的包括或其他属性),这些将被递归合并,如上所示。</target>
        </trans-unit>
        <trans-unit id="3ec9751cae190e1dbc9d9b803b5cc2115aae8a88" translate="yes" xml:space="preserve">
          <source>Of course you can also access the instance's data and generate virtual getters:</source>
          <target state="translated">当然你也可以访问实例的数据并生成虚拟的获取器。</target>
        </trans-unit>
        <trans-unit id="ef0e1f62d7337f2b1182d77e752df8ade90bdfe4" translate="yes" xml:space="preserve">
          <source>Of course you can also define self references with belongsToMany:</source>
          <target state="translated">当然你也可以用 belongsToMany来定义自我引用。</target>
        </trans-unit>
        <trans-unit id="fb5654b91a94e76ab0d91f9617ed39a9eb1b3449" translate="yes" xml:space="preserve">
          <source>Offset for result</source>
          <target state="translated">结果的偏移</target>
        </trans-unit>
        <trans-unit id="6a8127eb43bf543e2cf1dbb0892cd7b8b334689a" translate="yes" xml:space="preserve">
          <source>On success, the callback will be called with this instance. On validation error, the callback will be called with an instance of &lt;code&gt;Sequelize.ValidationError&lt;/code&gt;. This error will have a property for each of the fields for which validation failed, with the error message for that field.</source>
          <target state="translated">成功后，将使用此实例调用回调。发生验证错误时，将使用 &lt;code&gt;Sequelize.ValidationError&lt;/code&gt; 实例调用回调。该错误将为验证失败的每个字段提供一个属性，并带有该字段的错误消息。</target>
        </trans-unit>
        <trans-unit id="a6e8712ec2c54c580ef45527e2407d442845c74b" translate="yes" xml:space="preserve">
          <source>On the other hand, if it is set to allow null (with &lt;code&gt;allowNull: true&lt;/code&gt;) and that value has been set to &lt;code&gt;null&lt;/code&gt;, only the built-in validators will be skipped, while the custom validators will still run.</source>
          <target state="translated">另一方面，如果将其设置为允许null（使用 &lt;code&gt;allowNull: true&lt;/code&gt; ）并且该值已设置为 &lt;code&gt;null&lt;/code&gt; ，则仅将跳过内置验证器，而自定义验证器仍将运行。</target>
        </trans-unit>
        <trans-unit id="07f665a8c99eed865083f085d98ec8fca0015d7c" translate="yes" xml:space="preserve">
          <source>Once you created an object and got a reference to it, you can delete it from the database. The relevant method is &lt;code&gt;destroy&lt;/code&gt;:</source>
          <target state="translated">创建对象并获得对它的引用后，可以将其从数据库中删除。相关方法是 &lt;code&gt;destroy&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1f9b5321949a967ef42f55010f8e75dec29c3613" translate="yes" xml:space="preserve">
          <source>Once you have properly configured CLI config file you are ready to create your first migration. It's as simple as executing a simple command.</source>
          <target state="translated">一旦你正确配置了CLI配置文件,你就可以创建你的第一次迁移了。这就像执行一个简单的命令一样简单。</target>
        </trans-unit>
        <trans-unit id="a99024618c2527f3bc655af2bf9a61a350050032" translate="yes" xml:space="preserve">
          <source>One-To-Many associations (hasMany)</source>
          <target state="translated">一对多协会(hasMany)</target>
        </trans-unit>
        <trans-unit id="b04078f82acb5642e470ea54f09be546dc7432a7" translate="yes" xml:space="preserve">
          <source>One-To-Many associations are connecting one source with multiple targets. The targets however are again connected to exactly one specific source.</source>
          <target state="translated">一对多关联是将一个源与多个目标连接起来。然而,这些目标又恰恰连接到一个特定的源。</target>
        </trans-unit>
        <trans-unit id="159ce298fdb55c0ace2cae5b9eeddb9085ed1b07" translate="yes" xml:space="preserve">
          <source>One-To-One associations</source>
          <target state="translated">一对一协会</target>
        </trans-unit>
        <trans-unit id="7ac7134636ef26e8db79e47ff7c804d75176aa8d" translate="yes" xml:space="preserve">
          <source>One-To-One associations are associations between exactly two models connected by a single foreign key.</source>
          <target state="translated">一对一关联是指由一个外键连接的正好两个模型之间的关联。</target>
        </trans-unit>
        <trans-unit id="2309e67cc0497393678cf4861e18785cba42982e" translate="yes" xml:space="preserve">
          <source>One-to-many association</source>
          <target state="translated">一对多关联</target>
        </trans-unit>
        <trans-unit id="52422157c5551a74edd9efae050fd0cbd45e6b6a" translate="yes" xml:space="preserve">
          <source>One-to-one association</source>
          <target state="translated">一对一关联</target>
        </trans-unit>
        <trans-unit id="80c2f522b0cc71f97fccf4d0cc3b4b1a1a723e86" translate="yes" xml:space="preserve">
          <source>Only a hook with name param can be removed.</source>
          <target state="translated">只有带有name param的钩子才能被删除。</target>
        </trans-unit>
        <trans-unit id="d7c3ed5082d4c21101247c805bae6a1b4e6471d0" translate="yes" xml:space="preserve">
          <source>Only available for Postgres</source>
          <target state="translated">仅适用于Postgres</target>
        </trans-unit>
        <trans-unit id="78606afd96fe0f52ff679e248222b3ca8c9d2f35" translate="yes" xml:space="preserve">
          <source>Only retry a query if the error matches one of these strings.</source>
          <target state="translated">只有当错误符合这些字符串之一时,才会重试查询。</target>
        </trans-unit>
        <trans-unit id="ef20bd5977f69845fb3605c4d34d8da2e99079ec" translate="yes" xml:space="preserve">
          <source>Only used by sqlite. Defaults to ':memory:'</source>
          <target state="translated">仅由 sqlite 使用。默认为':memory:'。</target>
        </trans-unit>
        <trans-unit id="72994e2f28b83f1f262ee9b3a2e57ad75ee09f35" translate="yes" xml:space="preserve">
          <source>Only used in conjunction with TRUNCATE. Automatically restart sequences owned by columns of the truncated table.</source>
          <target state="translated">仅与TRUNCATE一起使用。自动重新启动被截断表的列所拥有的序列。</target>
        </trans-unit>
        <trans-unit id="659fa6ab2bfaf4a00c71607875bf9ee544072de3" translate="yes" xml:space="preserve">
          <source>Only used in conjunction with TRUNCATE. Truncates all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.</source>
          <target state="translated">仅与TRUNCATE一起使用。截断所有对指定表有外键引用的表,或由于CASCADE而添加到组中的任何表。</target>
        </trans-unit>
        <trans-unit id="1e5c03c4ca5dbc17c5a6129ff8dbe16f01a71ebd" translate="yes" xml:space="preserve">
          <source>Op</source>
          <target state="translated">Op</target>
        </trans-unit>
        <trans-unit id="8fe26ec471775c33716aff2e25b307500cb8f70b" translate="yes" xml:space="preserve">
          <source>Operator symbols to be used when querying data</source>
          <target state="translated">查询数据时要使用的运算符符号。</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="7cbeab9a20efe2e2217d5d299f851a542c5447fe" translate="yes" xml:space="preserve">
          <source>Operators Aliases</source>
          <target state="translated">操作员别名</target>
        </trans-unit>
        <trans-unit id="72687734b357dface3249321a849ea8462093c98" translate="yes" xml:space="preserve">
          <source>Operators for possible operators __Alias__: _all_ The promise is resolved with an array of Model instances if the query succeeds._</source>
          <target state="translated">可能的操作符的操作符 __Alias__。_all_如果查询成功,则用Model实例的数组来解决这个承诺。</target>
        </trans-unit>
        <trans-unit id="09a779d716fb827fb88714d6257f33d91fa93ea1" translate="yes" xml:space="preserve">
          <source>Operators security</source>
          <target state="translated">经营者安全</target>
        </trans-unit>
        <trans-unit id="778c618117429ef2dedad8c828b71d5371cf6e0f" translate="yes" xml:space="preserve">
          <source>Optimistic Locking</source>
          <target state="translated">乐观的锁定</target>
        </trans-unit>
        <trans-unit id="6140cd6be492f81e9de5ce4e733267b4f93e5075" translate="yes" xml:space="preserve">
          <source>Optimistic locking allows concurrent access to model records for edits and prevents conflicts from overwriting data. It does this by checking whether another process has made changes to a record since it was read and throws an OptimisticLockError when a conflict is detected.</source>
          <target state="translated">优化锁定允许并发访问模型记录进行编辑,并防止冲突覆盖数据。它通过检查自读取记录后是否有另一个进程对其进行了更改,并在检测到冲突时抛出乐观锁错误(OptimisticLockError)来实现。</target>
        </trans-unit>
        <trans-unit id="a45991670c71fc0c7f3eb11ef210b0020884d66a" translate="yes" xml:space="preserve">
          <source>OptimisticLockError</source>
          <target state="translated">OptimisticLockError</target>
        </trans-unit>
        <trans-unit id="5182cc6f458b27f798ef769e48426d170adaca6f" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;returning: true&lt;/code&gt; will no longer return attributes that are not defined in the model. Old behavior can be restored by using &lt;code&gt;returning: ['*']&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;returning: true&lt;/code&gt; 选项：true将不再返回模型中未定义的属性。可以通过使用以下命令恢复旧行为 &lt;code&gt;returning: ['*']&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2573f9c5c9739bda23063f4ec6575c5d4fcbe3c1" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;target.create&lt;/code&gt;</source>
          <target state="translated">传递给 &lt;code&gt;target.create&lt;/code&gt; 的选项</target>
        </trans-unit>
        <trans-unit id="fc281780c58169a65a5387bce961e7af93c4bb24" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;target.create&lt;/code&gt; and setAssociation.</source>
          <target state="translated">选项传递给 &lt;code&gt;target.create&lt;/code&gt; 和setAssociation。</target>
        </trans-unit>
        <trans-unit id="40b503e9df444ee2d315f6badf5d3e76b933fb08" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;target.findAll&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt;.</source>
          <target state="translated">选项传递给 &lt;code&gt;target.findAll&lt;/code&gt; 和 &lt;code&gt;update&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0f7d5ec9760408cef1a3917f12f6c577fe6b6b15" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;target.update&lt;/code&gt;</source>
          <target state="translated">传递给 &lt;code&gt;target.update&lt;/code&gt; 的选项</target>
        </trans-unit>
        <trans-unit id="5943acc368ef8e8a62d06081b8cac9a14bc7c85f" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;target.update&lt;/code&gt;.</source>
          <target state="translated">选项传递给 &lt;code&gt;target.update&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a4f8685a8ba251504870ba17fa94124cb574705" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;through.destroy&lt;/code&gt;</source>
          <target state="translated">选项传递给 &lt;code&gt;through.destroy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0115f779a0e49b0656989e51e294eb81c64793d7" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;through.findAll&lt;/code&gt;, &lt;code&gt;bulkCreate&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt;</source>
          <target state="translated">传递给选项 &lt;code&gt;through.findAll&lt;/code&gt; ， &lt;code&gt;bulkCreate&lt;/code&gt; 和 &lt;code&gt;update&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26176f8cc30b890f9a9b8e35a52a1de2b863ffe7" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;through.findAll&lt;/code&gt;, &lt;code&gt;bulkCreate&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt;</source>
          <target state="translated">选项传递给 &lt;code&gt;through.findAll&lt;/code&gt; ， &lt;code&gt;bulkCreate&lt;/code&gt; ， &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;destroy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a4b33ed3ca527fbd4b9245bafffeee52768cf1a" translate="yes" xml:space="preserve">
          <source>Options passed to create and add</source>
          <target state="translated">为创建和添加而通过的选项</target>
        </trans-unit>
        <trans-unit id="474d03cde40320ee091013efe8d0db26cc7d0b45" translate="yes" xml:space="preserve">
          <source>Options passed to getAssociation and &lt;code&gt;target.save&lt;/code&gt;</source>
          <target state="translated">传递给getAssociation和 &lt;code&gt;target.save&lt;/code&gt; 的选项</target>
        </trans-unit>
        <trans-unit id="fee507ed9dc18ea297e1ba8190f5aa49edd68423" translate="yes" xml:space="preserve">
          <source>Options passed to getAssociations</source>
          <target state="translated">传递给getAssociations的选项</target>
        </trans-unit>
        <trans-unit id="06fee8d775b90a83eb6e0500643ad5937a039f32" translate="yes" xml:space="preserve">
          <source>Options that are passed on to &lt;code&gt;Model.find&lt;/code&gt;</source>
          <target state="translated">传递给 &lt;code&gt;Model.find&lt;/code&gt; 的选项</target>
        </trans-unit>
        <trans-unit id="ee8bbce524fef6ba7c6dbac58492250221aae721" translate="yes" xml:space="preserve">
          <source>Options that are passed to the validator</source>
          <target state="translated">传递给验证器的选项</target>
        </trans-unit>
        <trans-unit id="a2025fe246c877972310ec609eb48f54489ec039" translate="yes" xml:space="preserve">
          <source>Options to describe the scope of the search.</source>
          <target state="translated">描述搜索范围的选项。</target>
        </trans-unit>
        <trans-unit id="bec1ed99ae879b5c4b91ae857a753fb5fb51217b" translate="yes" xml:space="preserve">
          <source>Or you can use a connection string as well with a path:</source>
          <target state="translated">或者你也可以使用连接字符串与路径。</target>
        </trans-unit>
        <trans-unit id="9f1762b33b20d79d93b528934ab2323b45f0b56c" translate="yes" xml:space="preserve">
          <source>Order of Operations</source>
          <target state="translated">行动顺序</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="7c3e631356b9b789997f759381378ec61789d79c" translate="yes" xml:space="preserve">
          <source>Ordering Eager Loaded Associations</source>
          <target state="translated">订购急切加载的关联</target>
        </trans-unit>
        <trans-unit id="96c2ab3009653c0dea9ef2fbe566de5309b08a8e" translate="yes" xml:space="preserve">
          <source>Other instance to compare against</source>
          <target state="translated">其他实例比较</target>
        </trans-unit>
        <trans-unit id="79eda91bb3b93164ab196b3ef5ed4437b5cbffeb" translate="yes" xml:space="preserve">
          <source>Our goal is to use environment variables for various database secrets and not accidentally check them in to source control.</source>
          <target state="translated">我们的目标是将环境变量用于各种数据库秘密,而不是在源码控制中意外地检查它们。</target>
        </trans-unit>
        <trans-unit id="2fe96ce51692a16cb282a2ceab2dbe87dd4dadd4" translate="yes" xml:space="preserve">
          <source>Override the name of the createdAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.</source>
          <target state="translated">如果提供了字符串,则覆盖createAt属性的名称,如果为false则禁用。时间戳必须为真。下划线字段将用下划线设置。</target>
        </trans-unit>
        <trans-unit id="573d8c9affd76cce2150107ed262b77798164d37" translate="yes" xml:space="preserve">
          <source>Override the name of the deletedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.</source>
          <target state="translated">如果提供了字符串,则覆盖deleteAt属性的名称,如果为false,则禁用它。时间戳必须为真。下划线字段将用下划线设置。</target>
        </trans-unit>
        <trans-unit id="9f80d4c656e4b0f6cdab55224c8d4d9902552192" translate="yes" xml:space="preserve">
          <source>Override the name of the updatedAt attribute if a string is provided, or disable it if false. Timestamps must be true. Underscored field will be set with underscored setting.</source>
          <target state="translated">如果提供了字符串,则覆盖updateAt属性的名称,如果为false则禁用。时间戳必须为真。下划线字段将用下划线设置。</target>
        </trans-unit>
        <trans-unit id="f94554b14ce5d5015d5ba9e9470606d7ad0f4f6f" translate="yes" xml:space="preserve">
          <source>Override:</source>
          <target state="translated">Override:</target>
        </trans-unit>
        <trans-unit id="191bd4c23022d0bfd4c0afc357cdedc311221c89" translate="yes" xml:space="preserve">
          <source>PAGLOCK</source>
          <target state="translated">PAGLOCK</target>
        </trans-unit>
        <trans-unit id="6216de0ea276035ad6c650404d1fb576170506d9" translate="yes" xml:space="preserve">
          <source>PRIMARY KEY</source>
          <target state="translated">主键</target>
        </trans-unit>
        <trans-unit id="a39ae88eaa033344f483111a662c38ecc2c9da40" translate="yes" xml:space="preserve">
          <source>Pagination / Limiting</source>
          <target state="translated">分页/限制</target>
        </trans-unit>
        <trans-unit id="23c7082125dc9cf874bbe14ba3786fba1a079619" translate="yes" xml:space="preserve">
          <source>Parameters used with the BUILT-IN validator function, if applicable</source>
          <target state="translated">与BUILT-IN验证器函数一起使用的参数(如果适用)。</target>
        </trans-unit>
        <trans-unit id="ad73fd1a2c6d31eae746e734e09a693793745bd9" translate="yes" xml:space="preserve">
          <source>Params:</source>
          <target state="translated">Params:</target>
        </trans-unit>
        <trans-unit id="ca1853065cda963bd9f055b6bd7dc1d954164536" translate="yes" xml:space="preserve">
          <source>Pass CONCURRENT so other operations run while the index is created</source>
          <target state="translated">传递 CONCURRENT,以便在创建索引的同时执行其他操作。</target>
        </trans-unit>
        <trans-unit id="482ca0567201b23a9b0f90cc3e4ca6ff3ea7504f" translate="yes" xml:space="preserve">
          <source>Pass in the desired level as the first argument:</source>
          <target state="translated">传入所需的级别作为第一个参数。</target>
        </trans-unit>
        <trans-unit id="d0b6a5930843ead542631eccaa522d64b6f4c225" translate="yes" xml:space="preserve">
          <source>Pass query execution time in milliseconds as second argument to logging function (options.logging).</source>
          <target state="translated">将查询执行时间作为第二个参数传递给日志记录函数(options.logging),单位为毫秒。</target>
        </trans-unit>
        <trans-unit id="72708499ef443e45b95abcad90f88639d4ced03b" translate="yes" xml:space="preserve">
          <source>Passing Dialect Specific Options</source>
          <target state="translated">通过方言特定选项</target>
        </trans-unit>
        <trans-unit id="0427d4c2f4fb6701afcb9d1d7b13d90257f569fd" translate="yes" xml:space="preserve">
          <source>Per-attribute validations</source>
          <target state="translated">按属性验证</target>
        </trans-unit>
        <trans-unit id="ad41972eed6cb608026300559fabcca9c731ee78" translate="yes" xml:space="preserve">
          <source>Per-attribute validators and &lt;code&gt;allowNull&lt;/code&gt;</source>
          <target state="translated">每个属性的验证器和 &lt;code&gt;allowNull&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9808bafa8bd1f406e228ff5597a4f9e053ba72a0" translate="yes" xml:space="preserve">
          <source>Permanent Hooks (Sequelize.addHook)</source>
          <target state="translated">永久性钩子(Sequelize.addHook)</target>
        </trans-unit>
        <trans-unit id="323bca2fecb8aed065297c5c4721eea1b95a7140" translate="yes" xml:space="preserve">
          <source>Permanent hooks may also be defined in &lt;code&gt;Sequelize.options&lt;/code&gt;:</source>
          <target state="translated">永久挂钩也可以在 &lt;code&gt;Sequelize.options&lt;/code&gt; 中定义：</target>
        </trans-unit>
        <trans-unit id="63d6ff4863ed30fb76c61de7b9ed4a9c45048878" translate="yes" xml:space="preserve">
          <source>Please note that this function will return &lt;code&gt;false&lt;/code&gt; when a property from a nested (for example JSON) property was edited manually, you must call &lt;code&gt;changed('key', true)&lt;/code&gt; manually in these cases. Writing an entirely new object (eg. deep cloned) will be detected.</source>
          <target state="translated">请注意，当手动编辑嵌套（例如JSON）属性中的属性时，此函数将返回 &lt;code&gt;false&lt;/code&gt; &lt;code&gt;changed('key', true)&lt;/code&gt; 在这种情况下，您必须手动调用changed（'key'，true）。将检测到写入一个全新的对象（例如，深度克隆）。</target>
        </trans-unit>
        <trans-unit id="ea229a60fffb397f7382a9347e16ab4efb875578" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;transaction.js~transaction#static-get-LOCK&quot;&gt;Transaction.LOCK&lt;/a&gt;</source>
          <target state="translated">请参阅&lt;a href=&quot;transaction.js~transaction#static-get-LOCK&quot;&gt;Transaction.LOCK&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a633c5c9226ef96e26ef67982c0b1fbf31148bdb" translate="yes" xml:space="preserve">
          <source>Plural name for model</source>
          <target state="translated">模型的复数名称</target>
        </trans-unit>
        <trans-unit id="6b41bd077261ccb7ed7f04853c7e531e9e12131b" translate="yes" xml:space="preserve">
          <source>Possible options for row locking.</source>
          <target state="translated">锁定行的可能选择。</target>
        </trans-unit>
        <trans-unit id="16e0a7b633c76d649ce1e522d7ec681ae462f811" translate="yes" xml:space="preserve">
          <source>Possible options for row locking. Used in conjunction with &lt;code&gt;find&lt;/code&gt; calls:</source>
          <target state="translated">行锁定的可能选项。与 &lt;code&gt;find&lt;/code&gt; 调用结合使用：</target>
        </trans-unit>
        <trans-unit id="620b5af6e3139187a47774b9079769bc03158a5a" translate="yes" xml:space="preserve">
          <source>PostGIS 1.5 introduced a new spatial type called geography, which uses geodetic measurement instead of Cartesian measurement. Coordinate points in the geography type are always represented in WGS 84 lon lat degrees (SRID 4326), but measurement functions and relationships ST_Distance, ST_DWithin, ST_Length, and ST_Area always return answers in meters or assume inputs in meters.</source>
          <target state="translated">PostGIS 1.5引入了一种新的空间类型,称为地理学,它使用大地测量而不是笛卡尔测量。地理类型中的坐标点总是以WGS 84 lon纬度(SRID 4326)表示,但测量函数和关系ST_Distance、ST_DWithin、ST_Length和ST_Area总是以米为单位返回答案或假设输入为米。</target>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="translated">PostgreSQL</target>
        </trans-unit>
        <trans-unit id="073df06d9f717170d0ac65398d7e552d09431498" translate="yes" xml:space="preserve">
          <source>PostgreSQL - Implemented as a temporary function with exception handling: INSERT EXCEPTION WHEN unique_constraint UPDATE</source>
          <target state="translated">PostgreSQL-作为一个临时函数,实现了异常处理。INSERT EXCEPTION WHEN unique_constraint UPDATE</target>
        </trans-unit>
        <trans-unit id="1502dc34bce3e1346fc0014a7cc5ee3e3ea95fbe" translate="yes" xml:space="preserve">
          <source>Postgres 9.3+ only</source>
          <target state="translated">仅限Postgres 9.3以上</target>
        </trans-unit>
        <trans-unit id="b8ce2814112b89374b10c38bb5cca295a3fcd5eb" translate="yes" xml:space="preserve">
          <source>Postgres also supports specific locks while eager loading by using OF:</source>
          <target state="translated">Postgres还支持特定的锁,同时通过使用OF来急切加载。</target>
        </trans-unit>
        <trans-unit id="2a407251115e1be28c5504b5f9e9199614279ede" translate="yes" xml:space="preserve">
          <source>PostgresSQL will build the index without taking any write locks. Postgres only</source>
          <target state="translated">PostgresSQL将在不占用任何写锁的情况下建立索引。Postgres只</target>
        </trans-unit>
        <trans-unit id="69f98f62216cced84a4a7664fbea7b244d38cc2f" translate="yes" xml:space="preserve">
          <source>Primary Key</source>
          <target state="translated">主键</target>
        </trans-unit>
        <trans-unit id="e517ee5fd3782b5ee136558aa5e08fab77ad1688" translate="yes" xml:space="preserve">
          <source>Primary keys</source>
          <target state="translated">主键</target>
        </trans-unit>
        <trans-unit id="9ab910186508b83730a0e5f6ef1718f45b1e0c1c" translate="yes" xml:space="preserve">
          <source>Production Usages</source>
          <target state="translated">生产用途</target>
        </trans-unit>
        <trans-unit id="554abf30e877116873c3de42924d6ac948059d03" translate="yes" xml:space="preserve">
          <source>Programmatic use</source>
          <target state="translated">方案使用</target>
        </trans-unit>
        <trans-unit id="fe5671922bc7f67cfabfa60ab97a9542ac21f39f" translate="yes" xml:space="preserve">
          <source>Promise</source>
          <target state="translated">Promise</target>
        </trans-unit>
        <trans-unit id="75f955c70fe0ea79083fa7fabe3a05900585c010" translate="yes" xml:space="preserve">
          <source>Promises and async/await</source>
          <target state="translated">承诺和异步/等待</target>
        </trans-unit>
        <trans-unit id="351f56a6fefd5127c90506d3e91990f1d7631787" translate="yes" xml:space="preserve">
          <source>Properties:</source>
          <target state="translated">Properties:</target>
        </trans-unit>
        <trans-unit id="ee08d4050cbb6098526e1137d5e2d585350759ed" translate="yes" xml:space="preserve">
          <source>Property name of the BUILT-IN validator function that caused the validation error (e.g.</source>
          <target state="translated">导致验证错误的BUILT-IN验证器函数的属性名(例如</target>
        </trans-unit>
        <trans-unit id="21dd1ed33063eaf0fec2b627562e02d732b0d02a" translate="yes" xml:space="preserve">
          <source>Property name of the BUILT-IN validator function that caused the validation error (e.g. &quot;in&quot; or &quot;len&quot;), if applicable</source>
          <target state="translated">导致验证错误的BUILT-IN验证器函数的属性名(如 &quot;in &quot;或 &quot;len&quot;),如果适用。</target>
        </trans-unit>
        <trans-unit id="b39befe85559d7a7d7f870921dd09f561ee705ee" translate="yes" xml:space="preserve">
          <source>Provide a custom getter for this column. Use &lt;code&gt;this.getDataValue(String)&lt;/code&gt; to manipulate the underlying values.</source>
          <target state="translated">为此列提供一个自定义的获取方法。使用 &lt;code&gt;this.getDataValue(String)&lt;/code&gt; 来操纵基础值。</target>
        </trans-unit>
        <trans-unit id="b5698adaf1c9e505751601dcfd1ade05d46fb2b2" translate="yes" xml:space="preserve">
          <source>Provide a custom setter for this column. Use &lt;code&gt;this.setDataValue(String, Value)&lt;/code&gt; to manipulate the underlying values.</source>
          <target state="translated">为该列提供一个自定义设置器。使用 &lt;code&gt;this.setDataValue(String, Value)&lt;/code&gt; 来操纵基础值。</target>
        </trans-unit>
        <trans-unit id="7806d20a5b3b834f1cf4cd79c6e14a14852dd900" translate="yes" xml:space="preserve">
          <source>Public Constructor</source>
          <target state="translated">公共构造函数</target>
        </trans-unit>
        <trans-unit id="f98f741af3e683a633762397b6b19a8a0d84038a" translate="yes" xml:space="preserve">
          <source>Public Constructors</source>
          <target state="translated">公共建筑商</target>
        </trans-unit>
        <trans-unit id="6e05889c9b4dc3e125f9019b8d38b3bb729194a7" translate="yes" xml:space="preserve">
          <source>Public Members</source>
          <target state="translated">公众成员</target>
        </trans-unit>
        <trans-unit id="400be4997716cf3bb5a0c05bf961e2a62c95f6c8" translate="yes" xml:space="preserve">
          <source>Public Methods</source>
          <target state="translated">公共方法</target>
        </trans-unit>
        <trans-unit id="63d5fc813429798ad09082a4ce6d7789993afa8a" translate="yes" xml:space="preserve">
          <source>Queries using OR</source>
          <target state="translated">使用OR查询</target>
        </trans-unit>
        <trans-unit id="23495b5214e112ada524d83f47869be27fbc912f" translate="yes" xml:space="preserve">
          <source>Queries within a &lt;code&gt;transaction&lt;/code&gt; can be performed with locks</source>
          <target state="translated">&lt;code&gt;transaction&lt;/code&gt; 内的查询可以使用锁执行</target>
        </trans-unit>
        <trans-unit id="9240311f3ef167d8f58165e9bce953c0badf6a4a" translate="yes" xml:space="preserve">
          <source>Queries within a transaction can skip locked rows</source>
          <target state="translated">事务中的查询可以跳过锁定的记录</target>
        </trans-unit>
        <trans-unit id="d12354bd5e0d0c4f4a34bf8e9705cc16c24598ce" translate="yes" xml:space="preserve">
          <source>Query Interface</source>
          <target state="translated">查询界面</target>
        </trans-unit>
        <trans-unit id="0969ef4dddd33716783dd28b66ec0aaeafb4bd86" translate="yes" xml:space="preserve">
          <source>Query option</source>
          <target state="translated">查询选项</target>
        </trans-unit>
        <trans-unit id="720143b0891d96ea816e381d60d6c88f81a3db6f" translate="yes" xml:space="preserve">
          <source>Query options</source>
          <target state="translated">查询选项</target>
        </trans-unit>
        <trans-unit id="e078f5ce4da3bbd9092168dc7caa7d58d0c3218d" translate="yes" xml:space="preserve">
          <source>Query options.</source>
          <target state="translated">查询选项:</target>
        </trans-unit>
        <trans-unit id="aacae2c5528cab9ee4d1056bb3fe97d662b13033" translate="yes" xml:space="preserve">
          <source>Query options. See sequelize.query for full options</source>
          <target state="translated">查询选项。完整的选项请参见 sequelize.query</target>
        </trans-unit>
        <trans-unit id="1e0418715c69e9b17e7730738c56f3d4f4b9d704" translate="yes" xml:space="preserve">
          <source>QueryError</source>
          <target state="translated">QueryError</target>
        </trans-unit>
        <trans-unit id="e0905a933a3f10834e2d58cddd1bfbace4c6ce1e" translate="yes" xml:space="preserve">
          <source>QueryInterface</source>
          <target state="translated">QueryInterface</target>
        </trans-unit>
        <trans-unit id="956e52cb6dce6420ffdbd1c53f487158ffdca0ce" translate="yes" xml:space="preserve">
          <source>QueryTypes</source>
          <target state="translated">QueryTypes</target>
        </trans-unit>
        <trans-unit id="cc6835ce045ca407e1aa42cf034a40b2dc968c7d" translate="yes" xml:space="preserve">
          <source>Querying</source>
          <target state="translated">Querying</target>
        </trans-unit>
        <trans-unit id="8f1e1ff9d000b44617e8ef8f0ce02e30146ecaef" translate="yes" xml:space="preserve">
          <source>Quick example</source>
          <target state="translated">快速示例</target>
        </trans-unit>
        <trans-unit id="578e6dad8d99e7211a3086f6ebcd1836a6b2b2b0" translate="yes" xml:space="preserve">
          <source>RANGE</source>
          <target state="translated">RANGE</target>
        </trans-unit>
        <trans-unit id="c5db7969dcd30635e5d7867040b6cc76158dd175" translate="yes" xml:space="preserve">
          <source>RAW</source>
          <target state="translated">RAW</target>
        </trans-unit>
        <trans-unit id="85071fc9642a31aeb812a32870f392506932a628" translate="yes" xml:space="preserve">
          <source>READCOMMITTED</source>
          <target state="translated">READCOMMITTED</target>
        </trans-unit>
        <trans-unit id="c81fcd11275974e0c42fe3b69f4579fb5562a008" translate="yes" xml:space="preserve">
          <source>READPAST</source>
          <target state="translated">READPAST</target>
        </trans-unit>
        <trans-unit id="0c97d219d43b5c2d780f866829caf6659ccd95b4" translate="yes" xml:space="preserve">
          <source>READUNCOMMITTED</source>
          <target state="translated">READUNCOMMITTED</target>
        </trans-unit>
        <trans-unit id="98576b173a3704ed9c7a7b2cf51bf056c70f0d68" translate="yes" xml:space="preserve">
          <source>READ_COMMITTED</source>
          <target state="translated">READ_COMMITTED</target>
        </trans-unit>
        <trans-unit id="61855051443526ce1354c6dfbbb1385589d20c72" translate="yes" xml:space="preserve">
          <source>READ_UNCOMMITTED</source>
          <target state="translated">READ_UNCOMMITTED</target>
        </trans-unit>
        <trans-unit id="3b330731a188b19fdf61999609e5e9b932bb400b" translate="yes" xml:space="preserve">
          <source>REAL</source>
          <target state="translated">REAL</target>
        </trans-unit>
        <trans-unit id="35818f41399b7623be79d4ece6708799ff65422b" translate="yes" xml:space="preserve">
          <source>REPEATABLEREAD</source>
          <target state="translated">REPEATABLEREAD</target>
        </trans-unit>
        <trans-unit id="7933c8f4eeae479160924ccc01192513271103d0" translate="yes" xml:space="preserve">
          <source>REPEATABLE_READ</source>
          <target state="translated">REPEATABLE_READ</target>
        </trans-unit>
        <trans-unit id="d2de16710476e50096c7fcc23018a457762110cf" translate="yes" xml:space="preserve">
          <source>ROWLOCK</source>
          <target state="translated">ROWLOCK</target>
        </trans-unit>
        <trans-unit id="639e3ac9bf3c15f412dffa9f6f9c04017303eefc" translate="yes" xml:space="preserve">
          <source>Range Operators</source>
          <target state="translated">靶场操作员</target>
        </trans-unit>
        <trans-unit id="48652fff66c0aa4370d5c8fba0d573037de8ea3f" translate="yes" xml:space="preserve">
          <source>Range types</source>
          <target state="translated">范围类型</target>
        </trans-unit>
        <trans-unit id="96c99c450dc81023477ef685e69a7671928973e9" translate="yes" xml:space="preserve">
          <source>Range types are data types representing a range of values of some element type (called the range's subtype). Only available in Postgres. See &lt;a href=&quot;http://www.postgresql.org/docs/9.4/static/rangetypes.html&quot;&gt;the Postgres documentation&lt;/a&gt; for more details</source>
          <target state="translated">范围类型是表示某种元素类型（称为范围的子类型）的值的范围的数据类型。仅在Postgres中可用。有关更多详细信息，请参见&lt;a href=&quot;http://www.postgresql.org/docs/9.4/static/rangetypes.html&quot;&gt;Postgres文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5a7377dcba549345dfcab0dfa8460d8f871eb24f" translate="yes" xml:space="preserve">
          <source>Range types can be queried with all supported operators.</source>
          <target state="translated">范围类型可以用所有支持的运算符进行查询。</target>
        </trans-unit>
        <trans-unit id="0d5fda95e3940bc09dc1ccc22666813c0b54f73d" translate="yes" xml:space="preserve">
          <source>Ranges</source>
          <target state="translated">Ranges</target>
        </trans-unit>
        <trans-unit id="9f5ef9cd3f272e59c3c26c12902db3ba7d565d10" translate="yes" xml:space="preserve">
          <source>Raw queries</source>
          <target state="translated">原始查询</target>
        </trans-unit>
        <trans-unit id="4248bae998e3d216240b6c47e05b15e9130b7194" translate="yes" xml:space="preserve">
          <source>Raw will be added verbatim without quoting</source>
          <target state="translated">生将逐字添加,不加引号。</target>
        </trans-unit>
        <trans-unit id="9663c8f2ab80910477b1274bc8c092ea181f86b5" translate="yes" xml:space="preserve">
          <source>Read replication</source>
          <target state="translated">改为复制</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="031a37f39bcb7e10adf807d3e8cce401989e3336" translate="yes" xml:space="preserve">
          <source>Refresh the current instance in-place, i.e.</source>
          <target state="translated">在原地刷新当前实例,即</target>
        </trans-unit>
        <trans-unit id="e3bead0d664a82f06306287d9173002e149764e1" translate="yes" xml:space="preserve">
          <source>Refresh the current instance in-place, i.e. update the object with current data from the DB and return the same object. This is different from doing a &lt;code&gt;find(Instance.id)&lt;/code&gt;, because that would create and return a new instance. With this method, all references to the Instance are updated with the new data and no new objects are created.</source>
          <target state="translated">就地刷新当前实例，即使用DB中的当前数据更新对象并返回相同的对象。这与执行 &lt;code&gt;find(Instance.id)&lt;/code&gt; 不同，因为那样会创建并返回一个新实例。使用此方法，将使用新数据更新对实例的所有引用，并且不会创建新对象。</target>
        </trans-unit>
        <trans-unit id="ca5db4fe93ba98fe1b576309acf2388052f2a36a" translate="yes" xml:space="preserve">
          <source>RegExp</source>
          <target state="translated">RegExp</target>
        </trans-unit>
        <trans-unit id="1e86d1ab3e14027eebaead6774b3afb37da45758" translate="yes" xml:space="preserve">
          <source>Relations / Associations</source>
          <target state="translated">关系/协会</target>
        </trans-unit>
        <trans-unit id="bc1c1bb509a7c9eefcd8074bcef69cd86f8f19ac" translate="yes" xml:space="preserve">
          <source>Reloading instances</source>
          <target state="translated">重新加载实例</target>
        </trans-unit>
        <trans-unit id="14458dc7478ac57fde39eddb8f546bb3fd24be23" translate="yes" xml:space="preserve">
          <source>Remember, that using &lt;code&gt;as&lt;/code&gt; to change the name of the association will also change the name of the foreign key. When using &lt;code&gt;as&lt;/code&gt;, it is safest to also specify the foreign key.</source>
          <target state="translated">请记住，使用 &lt;code&gt;as&lt;/code&gt; 来更改关联的名称也将更改外键的名称。当使用 &lt;code&gt;as&lt;/code&gt; 时，最安全的是还要指定外键。</target>
        </trans-unit>
        <trans-unit id="6d92b3105e7267474045640ff596b8906e7af063" translate="yes" xml:space="preserve">
          <source>Remove a column from a table</source>
          <target state="translated">从表中删除一列</target>
        </trans-unit>
        <trans-unit id="bff645f20c7a1972d6d88b3b0359efc0ee0f30bb" translate="yes" xml:space="preserve">
          <source>Remove a constraint from a table</source>
          <target state="translated">从表中删除一个约束</target>
        </trans-unit>
        <trans-unit id="cb9d2380c9de310077c9efa21538ee05180de069" translate="yes" xml:space="preserve">
          <source>Remove an already existing index from a table</source>
          <target state="translated">从表中删除一个已经存在的索引</target>
        </trans-unit>
        <trans-unit id="ab78daa0ae196a56f47e13a630c4d49dbadeaa77" translate="yes" xml:space="preserve">
          <source>Remove attribute from model definition</source>
          <target state="translated">从模型定义中删除属性</target>
        </trans-unit>
        <trans-unit id="2973fb8de042ab579cc70360faec4d4d03145016" translate="yes" xml:space="preserve">
          <source>Removing hooks</source>
          <target state="translated">拆卸钩子</target>
        </trans-unit>
        <trans-unit id="91662afa90e2669fafb0bf327ba36d683b24d55a" translate="yes" xml:space="preserve">
          <source>Rename a column</source>
          <target state="translated">重新命名一列</target>
        </trans-unit>
        <trans-unit id="ef6f539bacc24cc94df1896ca6fcc25c1857460e" translate="yes" xml:space="preserve">
          <source>Rename a table</source>
          <target state="translated">重新命名一个表</target>
        </trans-unit>
        <trans-unit id="5c789b825fe6ffb7af34dec8ebebc9922c5740fd" translate="yes" xml:space="preserve">
          <source>Rename an SQL function</source>
          <target state="translated">重命名一个SQL函数</target>
        </trans-unit>
        <trans-unit id="844abd7b464a7e3dcdf7de2a8921961f223adea8" translate="yes" xml:space="preserve">
          <source>Replacements</source>
          <target state="translated">Replacements</target>
        </trans-unit>
        <trans-unit id="d70b63d60d5bb03bf369a3221e7e9fa6befeb5ae" translate="yes" xml:space="preserve">
          <source>Replacements in a query can be done in two different ways, either using named parameters (starting with &lt;code&gt;:&lt;/code&gt;), or unnamed, represented by a &lt;code&gt;?&lt;/code&gt;. Replacements are passed in the options object.</source>
          <target state="translated">查询中的替换可以通过两种不同的方式完成，或者使用命名参数（以 &lt;code&gt;:&lt;/code&gt; 开头），或者使用以 &lt;code&gt;?&lt;/code&gt; 表示的未命名参数。。替换在options对象中传递。</target>
        </trans-unit>
        <trans-unit id="c8dd3270a29ae39ef2c23cbc1c10e9c2f5688a7c" translate="yes" xml:space="preserve">
          <source>Resolves an array with &amp;lt;created, primaryKey&amp;gt;</source>
          <target state="translated">用&amp;lt;created，primaryKey&amp;gt;解析数组</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="bc5668827c21fe1f8f36ea7324d4d8a3dcb11ecd" translate="yes" xml:space="preserve">
          <source>Restore multiple instances if &lt;code&gt;paranoid&lt;/code&gt; is enabled.</source>
          <target state="translated">如果启用了 &lt;code&gt;paranoid&lt;/code&gt; 还原多个实例。</target>
        </trans-unit>
        <trans-unit id="37be80d158033bb193c3d7ed1a4181d957c6440e" translate="yes" xml:space="preserve">
          <source>Restore the row corresponding to this instance.</source>
          <target state="translated">还原该实例对应的行。</target>
        </trans-unit>
        <trans-unit id="d2363df61524d7567e5af8c230d6ffbc8c9156fc" translate="yes" xml:space="preserve">
          <source>Restore the row corresponding to this instance. Only available for paranoid models.</source>
          <target state="translated">恢复该实例对应的行。仅适用于偏执的模型。</target>
        </trans-unit>
        <trans-unit id="4634f89378d1924436e5804ae4532bb1debc2947" translate="yes" xml:space="preserve">
          <source>Restoring soft-deleted instances</source>
          <target state="translated">恢复软删除的实例</target>
        </trans-unit>
        <trans-unit id="f26f5c5c95a911b7185dd088fa0b3f892ac47881" translate="yes" xml:space="preserve">
          <source>Return Properties:</source>
          <target state="translated">返回属性。</target>
        </trans-unit>
        <trans-unit id="f664f9ed85db7232f7addc0c9bbae995ff292379" translate="yes" xml:space="preserve">
          <source>Return raw result. See sequelize.query for more information.</source>
          <target state="translated">返回原始结果。更多信息请参见sequelize.query。</target>
        </trans-unit>
        <trans-unit id="9d2d96565dc06a866465216373028dc31bfc11ee" translate="yes" xml:space="preserve">
          <source>Return:</source>
          <target state="translated">Return:</target>
        </trans-unit>
        <trans-unit id="a1d9b7652dc04e48059f4b18dea69d8b483420d4" translate="yes" xml:space="preserve">
          <source>ReturnType</source>
          <target state="translated">ReturnType</target>
        </trans-unit>
        <trans-unit id="f32e3242c5f0d8fcfb58c28d4f50b845b239aea2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the row was created or updated. For MySQL/MariaDB, it returns &lt;code&gt;true&lt;/code&gt; when inserted and &lt;code&gt;false&lt;/code&gt; when updated. For Postgres/MSSQL with &lt;code&gt;options.returning&lt;/code&gt; true, it returns record and created boolean with signature &lt;code&gt;&amp;lt;Model, created&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">返回一个布尔值，指示该行是已创建还是已更新。对于MySQL / MariaDB，插入时返回 &lt;code&gt;true&lt;/code&gt; ，更新时返回 &lt;code&gt;false&lt;/code&gt; 。对于具有 &lt;code&gt;options.returning&lt;/code&gt; true的Postgres / MSSQL ，它返回记录并创建带有签名 &lt;code&gt;&amp;lt;Model, created&amp;gt;&lt;/code&gt; 布尔值。</target>
        </trans-unit>
        <trans-unit id="92777933f98de40e5798a074519518b08312bfd8" translate="yes" xml:space="preserve">
          <source>Returns an instance of QueryInterface.</source>
          <target state="translated">返回一个QueryInterface的实例。</target>
        </trans-unit>
        <trans-unit id="c322d13eab7a672964dca2772283f58dabee793f" translate="yes" xml:space="preserve">
          <source>Returns the aggregate result cast to &lt;code&gt;options.dataType&lt;/code&gt;, unless &lt;code&gt;options.plain&lt;/code&gt; is false, in which case the complete data result is returned.</source>
          <target state="translated">返回 &lt;code&gt;options.dataType&lt;/code&gt; 为options.dataType的聚合结果，除非 &lt;code&gt;options.plain&lt;/code&gt; 为false，在这种情况下，将返回完整的数据结果。</target>
        </trans-unit>
        <trans-unit id="103e0065273bcd078037909cef8d4cc766b70922" translate="yes" xml:space="preserve">
          <source>Returns the database name.</source>
          <target state="translated">返回数据库名称。</target>
        </trans-unit>
        <trans-unit id="a10c7b621ae5ef9b30ad1471df3f082cfe770ea5" translate="yes" xml:space="preserve">
          <source>Returns the previous value for key from &lt;code&gt;_previousDataValues&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;_previousDataValues&lt;/code&gt; 返回键的先前值。</target>
        </trans-unit>
        <trans-unit id="9099a16ce517a4d9ac59414ac4a523117d0007b1" translate="yes" xml:space="preserve">
          <source>Returns the specified dialect.</source>
          <target state="translated">返回指定的方言。</target>
        </trans-unit>
        <trans-unit id="4310720bd11331b7ae73d54f73813dcad1e1e28a" translate="yes" xml:space="preserve">
          <source>Returns true if model is already defined, otherwise false</source>
          <target state="translated">如果模型已经被定义,则返回true,否则返回false。</target>
        </trans-unit>
        <trans-unit id="bf0e4991b938c50573d09edc06ace4eb0dbd811c" translate="yes" xml:space="preserve">
          <source>Returns true if this instance has not yet been persisted to the database</source>
          <target state="translated">如果该实例尚未被持久化到数据库,则返回true。</target>
        </trans-unit>
        <trans-unit id="2007b5e3da27ad8963cdb311ba2a3128e7cda7e9" translate="yes" xml:space="preserve">
          <source>Rollback (abort) the transaction</source>
          <target state="translated">回滚</target>
        </trans-unit>
        <trans-unit id="8e0cccf120979b3af77ad8a694a8e18cdc3b513e" translate="yes" xml:space="preserve">
          <source>Run a describe query on the table.</source>
          <target state="translated">在表上运行描述查询。</target>
        </trans-unit>
        <trans-unit id="8169f81a04275d99535c5a4211bee013dce2d9d3" translate="yes" xml:space="preserve">
          <source>Run an aggregation method on the specified field</source>
          <target state="translated">在指定的字段上运行一个聚合方法</target>
        </trans-unit>
        <trans-unit id="3439b8e48e17b209e3887f10db99898a3f33d4e1" translate="yes" xml:space="preserve">
          <source>Run before / after bulk create hooks?</source>
          <target state="translated">在批量创建钩子之前/之后运行?</target>
        </trans-unit>
        <trans-unit id="5a75a9b600e3260d17089015df07ae23e6d3703c" translate="yes" xml:space="preserve">
          <source>Run before / after bulk destroy hooks?</source>
          <target state="translated">在批量销毁钩子之前/之后运行?</target>
        </trans-unit>
        <trans-unit id="e52da5177ddbb46f0bf29b8b84e6c8fb0b7bd630" translate="yes" xml:space="preserve">
          <source>Run before / after bulk restore hooks?</source>
          <target state="translated">运行前/后批量还原钩?</target>
        </trans-unit>
        <trans-unit id="58269ada070e42bd9ffb7febed75e9d2c7c689e1" translate="yes" xml:space="preserve">
          <source>Run before / after bulk update hooks?</source>
          <target state="translated">在批量更新钩子之前/之后运行?</target>
        </trans-unit>
        <trans-unit id="18d6ef3bc4c10e371b0cd91efbfe8df85e68a008" translate="yes" xml:space="preserve">
          <source>Run before / after create hooks for each individual Instance? BulkCreate hooks will still be run if options.hooks is true.</source>
          <target state="translated">为每个单独的Instance创建钩子之前/之后运行?如果options.hooks为true,BulkCreate钩子仍然会被运行。</target>
        </trans-unit>
        <trans-unit id="0b8459e34068807e1eb3c85fad215b35c650ee7e" translate="yes" xml:space="preserve">
          <source>Run before / after update hooks?. If true, this will execute a SELECT followed by individual UPDATEs. A select is needed, because the row data needs to be passed to the hooks</source>
          <target state="translated">在更新钩子之前/之后运行?如果为真,这将执行一个SELECT,然后是各个UPDATE。选择是需要的,因为行数据需要传递给钩子。</target>
        </trans-unit>
        <trans-unit id="e5cedd10390a9d3b239800334f224886fe370712" translate="yes" xml:space="preserve">
          <source>Run before / after upsert hooks?</source>
          <target state="translated">在upsert hooks之前/之后运行?</target>
        </trans-unit>
        <trans-unit id="a944f09a5a793cb75f92d040f95fa4f35da5420c" translate="yes" xml:space="preserve">
          <source>Run before and after create / update + validate hooks</source>
          <target state="translated">在创建/更新+验证钩子之前和之后运行。</target>
        </trans-unit>
        <trans-unit id="2ae7654b4055b38aa79d971e21b65027b2ca1df7" translate="yes" xml:space="preserve">
          <source>Run before and after validate hooks</source>
          <target state="translated">在验证钩子之前和之后运行</target>
        </trans-unit>
        <trans-unit id="eb7bcd25188536a53fb43bbd3bb4651b7f53eae7" translate="yes" xml:space="preserve">
          <source>Run built-in type validators on insert and update, and select with where clause, e.g. validate that arguments passed to integer fields are integer-like.</source>
          <target state="translated">在插入和更新时运行内置的类型验证器,并使用where子句进行选择,例如验证传递给整数字段的参数是否是类似整数的。</target>
        </trans-unit>
        <trans-unit id="b6577a96503f5049bd73f30cf24b51eebe5f6b78" translate="yes" xml:space="preserve">
          <source>Run validation for the join model</source>
          <target state="translated">运行加入模型的验证</target>
        </trans-unit>
        <trans-unit id="85489a3587bf76a40730b08a2f8006ba1c2c454c" translate="yes" xml:space="preserve">
          <source>Run validation for the join model.</source>
          <target state="translated">运行加入模型的验证。</target>
        </trans-unit>
        <trans-unit id="8b1ee002e28b50380a23fec36c627e6248c45e67" translate="yes" xml:space="preserve">
          <source>Run validations before the row is inserted</source>
          <target state="translated">在插入行之前运行验证</target>
        </trans-unit>
        <trans-unit id="309084555a84115c15bd76ae9ab2d30a30649897" translate="yes" xml:space="preserve">
          <source>Running Migrations</source>
          <target state="translated">运行迁移</target>
        </trans-unit>
        <trans-unit id="c58ea185833c0872e448165cd1c7703ab76a90b8" translate="yes" xml:space="preserve">
          <source>Running Seeds</source>
          <target state="translated">奔跑的种子</target>
        </trans-unit>
        <trans-unit id="a4942c26d0735947d8a22a2fbe2735a12e381808" translate="yes" xml:space="preserve">
          <source>SELECT</source>
          <target state="translated">SELECT</target>
        </trans-unit>
        <trans-unit id="d5a57bf501dacfbda90f27fd318b8cd457a96a1b" translate="yes" xml:space="preserve">
          <source>SERIALIZABLE</source>
          <target state="translated">SERIALIZABLE</target>
        </trans-unit>
        <trans-unit id="a9b25d35e6e01edfdd65178492d182aba6d34218" translate="yes" xml:space="preserve">
          <source>SET NULL if foreignKey allows nulls, CASCADE if otherwise</source>
          <target state="translated">如果foreignKey允许空值,则设置为NULL,否则设置为CASCADE。</target>
        </trans-unit>
        <trans-unit id="516cdbb3e5db4db95fd51e4b0171ee222656aff6" translate="yes" xml:space="preserve">
          <source>SET NULL if foreignKey allows nulls, NO ACTION if otherwise</source>
          <target state="translated">如果foreignKey允许nulls,则SET NULL,否则NO ACTION。</target>
        </trans-unit>
        <trans-unit id="4171eb087f6af62c707c7159e3b00d2346badde5" translate="yes" xml:space="preserve">
          <source>SET_DEFERRED</source>
          <target state="translated">SET_DEFERRED</target>
        </trans-unit>
        <trans-unit id="68149187501fb70315f6e8131bbf9fe48348ed17" translate="yes" xml:space="preserve">
          <source>SET_IMMEDIATE</source>
          <target state="translated">SET_IMMEDIATE</target>
        </trans-unit>
        <trans-unit id="dd19b86ae45a271261a2769df9693b7eeeac1d33" translate="yes" xml:space="preserve">
          <source>SHARE</source>
          <target state="translated">SHARE</target>
        </trans-unit>
        <trans-unit id="212e619789f81c3e0d20848be5f4e29b8020d588" translate="yes" xml:space="preserve">
          <source>SHOWCONSTRAINTS</source>
          <target state="translated">SHOWCONSTRAINTS</target>
        </trans-unit>
        <trans-unit id="f7b0cacf516079a8ab39ad0cda85a7099d7671b2" translate="yes" xml:space="preserve">
          <source>SHOWINDEXES</source>
          <target state="translated">SHOWINDEXES</target>
        </trans-unit>
        <trans-unit id="e786763f51c96fb966cfe9993f619969600fcb2d" translate="yes" xml:space="preserve">
          <source>SHOWTABLES</source>
          <target state="translated">SHOWTABLES</target>
        </trans-unit>
        <trans-unit id="9e170c7c7025a1a5f7c3857f8315cf4ac6db1d72" translate="yes" xml:space="preserve">
          <source>SMALLINT</source>
          <target state="translated">SMALLINT</target>
        </trans-unit>
        <trans-unit id="f956ed3dc3c576285c7137ae67e24c69f9266d1d" translate="yes" xml:space="preserve">
          <source>SNAPSHOT</source>
          <target state="translated">SNAPSHOT</target>
        </trans-unit>
        <trans-unit id="fb9477462cfa5f60b14431efb98e90a54887f14e" translate="yes" xml:space="preserve">
          <source>SQL type of function returned value</source>
          <target state="translated">SQL类型的函数返回值</target>
        </trans-unit>
        <trans-unit id="9f09ccbd1cfb65aced3eb531305e671e40b95dd3" translate="yes" xml:space="preserve">
          <source>SQLite</source>
          <target state="translated">SQLite</target>
        </trans-unit>
        <trans-unit id="b751b9c16bf3667739f71a4e1c056e70944f0120" translate="yes" xml:space="preserve">
          <source>SQLite - Implemented as two queries &lt;code&gt;INSERT; UPDATE&lt;/code&gt;. This means that the update is executed regardless of whether the row already existed or not</source>
          <target state="translated">SQLite-实现为两个查询 &lt;code&gt;INSERT; UPDATE&lt;/code&gt; 。这意味着无论行是否已经存在，都将执行更新</target>
        </trans-unit>
        <trans-unit id="adfd5586a4984b594806377be1a9f4e09a8df4c1" translate="yes" xml:space="preserve">
          <source>SRID of type</source>
          <target state="translated">SRID类型</target>
        </trans-unit>
        <trans-unit id="da5aba16204ebd88821d2bbf3642268c4231fb1f" translate="yes" xml:space="preserve">
          <source>STRING</source>
          <target state="translated">STRING</target>
        </trans-unit>
        <trans-unit id="1d61ec39e663f6e58702a7ad1738531fa768fb9c" translate="yes" xml:space="preserve">
          <source>STRING A variable length string</source>
          <target state="translated">STRING 一个可变长度的字符串</target>
        </trans-unit>
        <trans-unit id="d41f19dfee39725e336978083f9a8c5f6b3be7a4" translate="yes" xml:space="preserve">
          <source>STRING#constructor</source>
          <target state="translated">STRING#constructor</target>
        </trans-unit>
        <trans-unit id="0bf4823535962139cb43d7dd88554175707982d1" translate="yes" xml:space="preserve">
          <source>Schema name to create</source>
          <target state="translated">要创建的模式名称</target>
        </trans-unit>
        <trans-unit id="6c80a5b04edfdb2a6f83ba6280a271386f52ac29" translate="yes" xml:space="preserve">
          <source>Schema name to drop</source>
          <target state="translated">要删除的模式名称</target>
        </trans-unit>
        <trans-unit id="6e28871105300b1a9e39344d8c2f862f59f05a20" translate="yes" xml:space="preserve">
          <source>Scope Error.</source>
          <target state="translated">范围错误。</target>
        </trans-unit>
        <trans-unit id="89f9f3e1b3d3732f4f20df80017d0f8219871f92" translate="yes" xml:space="preserve">
          <source>Scope Error. Thrown when the sequelize cannot query the specified scope.</source>
          <target state="translated">范围错误。当sequelize不能查询指定的作用域时抛出。</target>
        </trans-unit>
        <trans-unit id="c23540e5fb551edff0ac95649a1d551f9736d55e" translate="yes" xml:space="preserve">
          <source>Scopes</source>
          <target state="translated">Scopes</target>
        </trans-unit>
        <trans-unit id="0da8a5956aaa3c85b91d3f215267b4fade7bdd85" translate="yes" xml:space="preserve">
          <source>Scopes apply to &lt;code&gt;.find&lt;/code&gt;, &lt;code&gt;.findAll&lt;/code&gt;, &lt;code&gt;.count&lt;/code&gt;, &lt;code&gt;.update&lt;/code&gt;, &lt;code&gt;.increment&lt;/code&gt; and &lt;code&gt;.destroy&lt;/code&gt;.</source>
          <target state="translated">范围适用于 &lt;code&gt;.find&lt;/code&gt; ， &lt;code&gt;.findAll&lt;/code&gt; ， &lt;code&gt;.count&lt;/code&gt; ， &lt;code&gt;.update&lt;/code&gt; ， &lt;code&gt;.increment&lt;/code&gt; 和 &lt;code&gt;.destroy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e8a81b0184917a8413801eb97f5c4f1a30e16de" translate="yes" xml:space="preserve">
          <source>Scopes are applied by calling &lt;code&gt;.scope&lt;/code&gt; on the model definition, passing the name of one or more scopes. &lt;code&gt;.scope&lt;/code&gt; returns a fully functional model instance with all the regular methods: &lt;code&gt;.findAll&lt;/code&gt;, &lt;code&gt;.update&lt;/code&gt;, &lt;code&gt;.count&lt;/code&gt;, &lt;code&gt;.destroy&lt;/code&gt; etc. You can save this model instance and reuse it later:</source>
          <target state="translated">通过在模型定义上调用 &lt;code&gt;.scope&lt;/code&gt; 并传递一个或多个范围的名称来应用范围。 &lt;code&gt;.scope&lt;/code&gt; 将返回所有的常规方法，一个功能齐全的模型实例： &lt;code&gt;.findAll&lt;/code&gt; ， &lt;code&gt;.update&lt;/code&gt; ， &lt;code&gt;.count&lt;/code&gt; ， &lt;code&gt;.destroy&lt;/code&gt; 等，你可以保存这个模型的实例，并且之后重用它：</target>
        </trans-unit>
        <trans-unit id="120923523c35c563d8ac081091bf3511da3a4321" translate="yes" xml:space="preserve">
          <source>Scopes are defined in the model definition and can be finder objects, or functions returning finder objects - except for the default scope, which can only be an object:</source>
          <target state="translated">作用域是在模型定义中定义的,可以是查找对象,也可以是返回查找对象的函数--除了默认的作用域,它只能是一个对象。</target>
        </trans-unit>
        <trans-unit id="c3a5b1f2c5fdd9c8b47aa2b2dc6c11a18f6dd918" translate="yes" xml:space="preserve">
          <source>Scopes which are functions can be invoked in two ways. If the scope does not take any arguments it can be invoked as normally. If the scope takes arguments, pass an object:</source>
          <target state="translated">作为函数的作用域可以以两种方式被调用。如果作用域不接受任何参数,它可以像正常情况一样被调用。如果作用域接受参数,则传递一个对象。</target>
        </trans-unit>
        <trans-unit id="a39e965661725cc234f9253f0b7566cfa5aa18e4" translate="yes" xml:space="preserve">
          <source>Scoping allows you to define commonly used queries that you can easily use later. Scopes can include all the same attributes as regular finders, &lt;code&gt;where&lt;/code&gt;, &lt;code&gt;include&lt;/code&gt;, &lt;code&gt;limit&lt;/code&gt; etc.</source>
          <target state="translated">范围界定使您可以定义常用查询，以便以后使用。范围可以包含与常规查找器相同的所有属性， &lt;code&gt;where&lt;/code&gt; ， &lt;code&gt;include&lt;/code&gt; ， &lt;code&gt;limit&lt;/code&gt; 等。</target>
        </trans-unit>
        <trans-unit id="28a2e804b07e3185be2ca5de143ec18a821eeacf" translate="yes" xml:space="preserve">
          <source>Search for a single instance by its primary key._</source>
          <target state="translated">按主键搜索单个实例。</target>
        </trans-unit>
        <trans-unit id="fab27cb2bedf60f526ca0afd3fc62f8ddebfb13b" translate="yes" xml:space="preserve">
          <source>Search for a single instance.</source>
          <target state="translated">搜索单个实例。</target>
        </trans-unit>
        <trans-unit id="960425bfa22ad385f9c4f8d364ce932418a965ec" translate="yes" xml:space="preserve">
          <source>Search for a single instance. This applies LIMIT 1, so the listener will always be called with a single instance.</source>
          <target state="translated">搜索单个实例。这适用于limit 1,所以监听器将始终以单个实例被调用。</target>
        </trans-unit>
        <trans-unit id="069d800301b1242814d076a9ba69c25a797f1f8e" translate="yes" xml:space="preserve">
          <source>Search for multiple instances.</source>
          <target state="translated">搜索多个实例。</target>
        </trans-unit>
        <trans-unit id="8993db7b4561dcbe3dd7ed07347b984ed185c0d8" translate="yes" xml:space="preserve">
          <source>Second, you can define multiple fields and the value you want to add to them.</source>
          <target state="translated">其次,你可以定义多个字段和你想添加到它们的值。</target>
        </trans-unit>
        <trans-unit id="ec7f6561b6ed5b2dc36973b0b6a102cca134bcc5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;the validator.js project&lt;/a&gt; for more details on the built in validation methods.</source>
          <target state="translated">有关内置验证方法的更多详细信息，请参见&lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js项目&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="07e8786ffa4a2d3cefb67f6c2682f38e69cd4492" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/sequelize/sequelize/issues/9421&quot;&gt;Issue #9421&lt;/a&gt; for the original API proposal.</source>
          <target state="translated">有关原始API提案，请参见&lt;a href=&quot;https://github.com/sequelize/sequelize/issues/9421&quot;&gt;问题＃9421&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1351883340089e7a2bcb762253ecf4041042e52a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; for possible options</source>
          <target state="translated">请参阅 &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; 以获取可能的选项</target>
        </trans-unit>
        <trans-unit id="2e4393e4d3bf760304fc86105ac68898ba048a63" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; for possible options. Sqlite only.</source>
          <target state="translated">有关可能的选项，请参见 &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; 。仅限Sqlite。</target>
        </trans-unit>
        <trans-unit id="3d323498fbf8da4d96a2d24a82b136e39ed2843c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;save&lt;/code&gt;</source>
          <target state="translated">查看 &lt;code&gt;save&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ace885d5833656cb1c6adb455769af99c14b9057" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;set&lt;/code&gt;</source>
          <target state="translated">见 &lt;code&gt;set&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="024d73cf82d16e67fc37c547b52a0b71943ce794" translate="yes" xml:space="preserve">
          <source>See aggregate</source>
          <target state="translated">见合计</target>
        </trans-unit>
        <trans-unit id="4bd3fe9b400efeaa997586b22cc7de7636c4dc47" translate="yes" xml:space="preserve">
          <source>See findAll options</source>
          <target state="translated">查看findAll选项</target>
        </trans-unit>
        <trans-unit id="c877fd0b0a721c9f9e045768cc3bad7950900f4d" translate="yes" xml:space="preserve">
          <source>See more options in the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-method-query&quot;&gt;query API reference&lt;/a&gt;. Some examples below:</source>
          <target state="translated">请参阅&lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-method-query&quot;&gt;查询API参考&lt;/a&gt;中的更多选项。以下是一些示例：</target>
        </trans-unit>
        <trans-unit id="497dea2253a9763272c1d3ca91776ece14a847f1" translate="yes" xml:space="preserve">
          <source>See:</source>
          <target state="translated">See:</target>
        </trans-unit>
        <trans-unit id="70fdde700db9f86cb1ddf1248d1df7f946f66ee1" translate="yes" xml:space="preserve">
          <source>Seed Storage</source>
          <target state="translated">种子储存</target>
        </trans-unit>
        <trans-unit id="e0b6db6ffee2cbd17752e8f5ccec39fea1096673" translate="yes" xml:space="preserve">
          <source>Seeders can be undone if they are using any storage. There are two commands available for that:</source>
          <target state="translated">如果播种机使用了任何存储,都可以撤销。有两个命令可用于此。</target>
        </trans-unit>
        <trans-unit id="5746f22dcc2f068faa833d6223ba0cc62b54931a" translate="yes" xml:space="preserve">
          <source>Select all the attributes of the model, except some few. Useful for security purposes e.g. &lt;code&gt;{ attributes: { exclude: ['password'] } }&lt;/code&gt;</source>
          <target state="translated">选择模型的所有属性，除了一些属性。出于安全目的有用，例如 &lt;code&gt;{ attributes: { exclude: ['password'] } }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="41a8019f87ab381882d8e3b6b81923fda67be63c" translate="yes" xml:space="preserve">
          <source>Select all the attributes of the model, plus some additional ones. Useful for aggregations, e.g. &lt;code&gt;{ attributes: { include: [[sequelize.fn('COUNT', sequelize.col('id')), 'total']] }&lt;/code&gt;</source>
          <target state="translated">选择模型的所有属性，再加上一些其他属性。对于聚合很有用，例如 &lt;code&gt;{ attributes: { include: [[sequelize.fn('COUNT', sequelize.col('id')), 'total']] }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="32248b4544c4dacee860f46416e5a89b6310bc5c" translate="yes" xml:space="preserve">
          <source>Sequelize</source>
          <target state="translated">Sequelize</target>
        </trans-unit>
        <trans-unit id="e2146c89a9fedc9608681248e18eec20d2a15b61" translate="yes" xml:space="preserve">
          <source>Sequelize CLI can read from both &lt;code&gt;JSON&lt;/code&gt; and &lt;code&gt;JS&lt;/code&gt; files. This can be setup with &lt;code&gt;.sequelizerc&lt;/code&gt; file. Let see how</source>
          <target state="translated">Sequelize CLI可以读取 &lt;code&gt;JSON&lt;/code&gt; 和 &lt;code&gt;JS&lt;/code&gt; 文件。可以使用 &lt;code&gt;.sequelizerc&lt;/code&gt; 文件进行设置。让我们看看</target>
        </trans-unit>
        <trans-unit id="d4e7d933f4662f9cc8cb13c8bed0106857a7e2e5" translate="yes" xml:space="preserve">
          <source>Sequelize Models are ES6 classes. You can very easily add custom instance or class level methods.</source>
          <target state="translated">Sequelize Models是ES6类。您可以非常容易地添加自定义实例或类级方法。</target>
        </trans-unit>
        <trans-unit id="42cba3a975a7135ac3fdb91096b3ca70b1caed5b" translate="yes" xml:space="preserve">
          <source>Sequelize allow setting &lt;code&gt;underscored&lt;/code&gt; option for Model. When &lt;code&gt;true&lt;/code&gt; this option will set the &lt;code&gt;field&lt;/code&gt; option on all attributes to the underscored version of its name. This also applies to foreign keys generated by associations.</source>
          <target state="translated">Sequelize允许为Model 设置 &lt;code&gt;underscored&lt;/code&gt; 选项。如果为 &lt;code&gt;true&lt;/code&gt; ,则此选项会将所有属性上的 &lt;code&gt;field&lt;/code&gt; 选项设置为其名称的下划线版本。这也适用于关联生成的外键。</target>
        </trans-unit>
        <trans-unit id="3618d92886b90e0ab93af574f3df0c6f87d7dfdb" translate="yes" xml:space="preserve">
          <source>Sequelize allows setting specific strings as aliases for operators. With v5 this will give you deprecation warning.</source>
          <target state="translated">Sequelize 允许设置特定的字符串作为操作符的别名。在v5中,这将给你一个废弃的警告。</target>
        </trans-unit>
        <trans-unit id="e1a257d276e4f1e9e9194ab2befc2ae82a6fdc63" translate="yes" xml:space="preserve">
          <source>Sequelize also defines by default the fields &lt;code&gt;id&lt;/code&gt; (primary key), &lt;code&gt;createdAt&lt;/code&gt; and &lt;code&gt;updatedAt&lt;/code&gt; to every model. This behavior can also be changed, of course (check the API Reference to learn more about the available options).</source>
          <target state="translated">Sequelize也默认定义的字段 &lt;code&gt;id&lt;/code&gt; （主键）， &lt;code&gt;createdAt&lt;/code&gt; 和 &lt;code&gt;updatedAt&lt;/code&gt; 到每一个模型。当然，也可以更改此行为（请查看API参考以了解有关可用选项的更多信息）。</target>
        </trans-unit>
        <trans-unit id="721ff79958c22990fcc428727c9a1a0b30bc8dc9" translate="yes" xml:space="preserve">
          <source>Sequelize constructor</source>
          <target state="translated">序列化构造函数</target>
        </trans-unit>
        <trans-unit id="7b4a61bf7618bb5f80a735c5adcc86dc7d0d54b9" translate="yes" xml:space="preserve">
          <source>Sequelize doesn't create new datatypes in the database. This tutorial explains how to make Sequelize recognize new datatypes and assumes that those new datatypes are already created in the database.</source>
          <target state="translated">Sequelize不会在数据库中创建新的数据类型。本教程解释了如何使Sequelize识别新的数据类型,并假设这些新的数据类型已经在数据库中被创建。</target>
        </trans-unit>
        <trans-unit id="4d7b6d0de168876f640bde5fff3cf527c4f93ef6" translate="yes" xml:space="preserve">
          <source>Sequelize exposes symbol operators that can be used for to create more complex comparisons -</source>
          <target state="translated">Sequelize提供了符号运算符,可以用来创建更复杂的比较----。</target>
        </trans-unit>
        <trans-unit id="bfdf0968a46e379a3d919cbabea542fb8b4773b7" translate="yes" xml:space="preserve">
          <source>Sequelize follows &lt;a href=&quot;http://semver.org&quot;&gt;SEMVER&lt;/a&gt;. Supports Node v10 and above to use ES6 features.</source>
          <target state="translated">续集遵循&lt;a href=&quot;http://semver.org&quot;&gt;SEMVER&lt;/a&gt;。支持Node v10及更高版本以使用ES6功能。</target>
        </trans-unit>
        <trans-unit id="582d78da6df00a995534b3b583b979009f68d4d2" translate="yes" xml:space="preserve">
          <source>Sequelize has a &lt;a href=&quot;https://github.com/sequelize/umzug&quot;&gt;sister library&lt;/a&gt; for programmatically handling execution and logging of migration tasks.</source>
          <target state="translated">Sequelize有一个&lt;a href=&quot;https://github.com/sequelize/umzug&quot;&gt;姊妹库，&lt;/a&gt;用于以编程方式处理迁移任务的执行和日志记录。</target>
        </trans-unit>
        <trans-unit id="0f211261e93475264da544d79e18f72b323197b2" translate="yes" xml:space="preserve">
          <source>Sequelize has a lot of options for querying. You will learn more about those in the next tutorials. It is also possible to make raw SQL queries, if you really need them.</source>
          <target state="translated">Sequelize有很多查询的选项。你将在接下来的教程中学习更多关于这些的内容。如果你真的需要的话,也可以进行原始SQL查询。</target>
        </trans-unit>
        <trans-unit id="7263ca838cabf21a169aeceea9b8f1d1793343c6" translate="yes" xml:space="preserve">
          <source>Sequelize has built-in support for optimistic locking through a model instance version count. Optimistic locking is disabled by default and can be enabled by setting the &lt;code&gt;version&lt;/code&gt; property to true in a specific model definition or global model configuration. See &lt;a href=&quot;models-definition#configuration&quot;&gt;model configuration&lt;/a&gt; for more details.</source>
          <target state="translated">Sequelize具有通过模型实例版本计数来乐观锁定的内置支持。乐观锁定默认情况下处于禁用状态，可以通过在特定模型定义或全局模型配置中将 &lt;code&gt;version&lt;/code&gt; 属性设置为true 来启用。有关更多详细信息，请参见&lt;a href=&quot;models-definition#configuration&quot;&gt;模型配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4a8d11578adeef3bffa53be612d3c8ec4ca15c7f" translate="yes" xml:space="preserve">
          <source>Sequelize has two different but related scope concepts in relation to associations. The difference is subtle but important:</source>
          <target state="translated">Sequelize在关联方面有两个不同但相关的范围概念。这种区别很微妙但很重要。</target>
        </trans-unit>
        <trans-unit id="4ba21fa010de136fd468609c0c7c0382ac4107cd" translate="yes" xml:space="preserve">
          <source>Sequelize is a promise-based Node.js ORM for Postgres, MySQL, MariaDB, SQLite and Microsoft SQL Server. It features solid transaction support, relations, eager and lazy loading, read replication and more.</source>
          <target state="translated">Sequelize是一个基于Node.js的ORM,适用于Postgres、MySQL、MariaDB、SQLite和Microsoft SQL Server。它具有坚实的事务支持、关系、渴望和懒惰加载、读取复制等功能。</target>
        </trans-unit>
        <trans-unit id="4f3657d8fd42ca903f769974a0aa3a98de7ae752" translate="yes" xml:space="preserve">
          <source>Sequelize is available via &lt;a href=&quot;https://www.npmjs.com/package/sequelize&quot;&gt;npm&lt;/a&gt; (or &lt;a href=&quot;https://yarnpkg.com/package/sequelize&quot;&gt;yarn&lt;/a&gt;).</source>
          <target state="translated">可通过&lt;a href=&quot;https://www.npmjs.com/package/sequelize&quot;&gt;npm&lt;/a&gt;（或&lt;a href=&quot;https://yarnpkg.com/package/sequelize&quot;&gt;yarn&lt;/a&gt;）获得续集。</target>
        </trans-unit>
        <trans-unit id="18b9d1b705db8b8f2a74b7b8fef93c710c1730a2" translate="yes" xml:space="preserve">
          <source>Sequelize is independent from specific dialects. This means that you'll have to install the respective connector library to your project yourself.</source>
          <target state="translated">Sequelize是独立于特定方言的。这意味着你必须自己安装相应的连接器库到你的项目中。</target>
        </trans-unit>
        <trans-unit id="4a6b2a1acf807c379b8c8b09642b38a4ae6ec2eb" translate="yes" xml:space="preserve">
          <source>Sequelize provides a host of custom error classes, to allow you to do easier debugging.</source>
          <target state="translated">Sequelize提供了大量的自定义错误类,让你更容易调试。</target>
        </trans-unit>
        <trans-unit id="2aa8bb1c410e7760da89fe1a39dd3cd6a3e6c8b6" translate="yes" xml:space="preserve">
          <source>Sequelize provides a host of custom error classes, to allow you to do easier debugging. All of these errors are exposed on the sequelize object and the sequelize constructor. All sequelize errors inherit from the base JS error object.</source>
          <target state="translated">Sequelize提供了大量的自定义错误类,让你更容易调试。所有这些错误都暴露在sequelize对象和sequelize构造函数上。所有的sequelize错误都继承自基础JS错误对象。</target>
        </trans-unit>
        <trans-unit id="a36909b9f875b9c379cfbfd57865704470509efb" translate="yes" xml:space="preserve">
          <source>Sequelize provides four hooks that are executed immediately before and after a database connection is obtained or released:</source>
          <target state="translated">Sequelize提供了四个钩子,在数据库连接获取或释放前后立即执行。</target>
        </trans-unit>
        <trans-unit id="e0048a920cbe256e0d63314bbc8a801ba350b416" translate="yes" xml:space="preserve">
          <source>Sequelize supports adding indexes to the model definition which will be created during &lt;code&gt;Model.sync()&lt;/code&gt; or &lt;code&gt;sequelize.sync&lt;/code&gt;.</source>
          <target state="translated">Sequelize支持在模型定义中添加索引，该索引将在 &lt;code&gt;Model.sync()&lt;/code&gt; 或 &lt;code&gt;sequelize.sync&lt;/code&gt; 期间创建。</target>
        </trans-unit>
        <trans-unit id="e4b3b84765405016ac507be4f755d3663a4fd35c" translate="yes" xml:space="preserve">
          <source>Sequelize supports read replication, i.e. having multiple servers that you can connect to when you want to do a SELECT query. When you do read replication, you specify one or more servers to act as read replicas, and one server to act as the write master, which handles all writes and updates and propagates them to the replicas (note that the actual replication process is &lt;strong&gt;not&lt;/strong&gt; handled by Sequelize, but should be set up by database backend).</source>
          <target state="translated">Sequelize支持读取复制，即，当您要执行SELECT查询时，可以连接多个服务器。当你读复制，你指定一个或多个服务器作为读副本和一个服务器充当写入主控，负责处理所有的写操作和更新和传播他们的副本（请注意，实际的复制过程&lt;strong&gt;不&lt;/strong&gt;处理由Sequelize，但应由数据库后端设置）。</target>
        </trans-unit>
        <trans-unit id="006e3c87cc46067f193d6da3dab1bfcaffa32b0b" translate="yes" xml:space="preserve">
          <source>Sequelize supports two ways of using transactions:</source>
          <target state="translated">Sequelize支持两种使用交易的方式。</target>
        </trans-unit>
        <trans-unit id="036964a4746f86bd146c4ce057424fa1c7bc9c18" translate="yes" xml:space="preserve">
          <source>Sequelize uses a pool to manage connections to your replicas. Internally Sequelize will maintain two pools created using &lt;code&gt;pool&lt;/code&gt; configuration.</source>
          <target state="translated">Sequelize使用池来管理与副本的连接。在内部，Sequelize将维护使用 &lt;code&gt;pool&lt;/code&gt; 配置创建的两个池。</target>
        </trans-unit>
        <trans-unit id="f3e08a634ed03d6ae6ccb3b71d35f62d841795e4" translate="yes" xml:space="preserve">
          <source>Sequelize v6 is the next major release after v5</source>
          <target state="translated">Sequelize v6是继v5之后的下一个主要版本。</target>
        </trans-unit>
        <trans-unit id="ccdb0706a39fddeebf0c225ab4959b82d3aa0355" translate="yes" xml:space="preserve">
          <source>Sequelize v6 will only support Node 10 and up &lt;a href=&quot;https://github.com/sequelize/sequelize/issues/10821&quot;&gt;#10821&lt;/a&gt;</source>
          <target state="translated">Sequelize v6仅支持节点10及更高版本&lt;a href=&quot;https://github.com/sequelize/sequelize/issues/10821&quot;&gt;＃10821&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c102a252e5d170808923d2726cbd5f00c38cafd" translate="yes" xml:space="preserve">
          <source>Sequelize will assume your table has a &lt;code&gt;id&lt;/code&gt; primary key property by default.</source>
          <target state="translated">默认情况下，Sequelize将假定您的表具有 &lt;code&gt;id&lt;/code&gt; 主键属性。</target>
        </trans-unit>
        <trans-unit id="6741146fb708be669cc08fc88bbcd0daae0ce352" translate="yes" xml:space="preserve">
          <source>Sequelize will keep the connection open by default, and use the same connection for all queries. If you need to close the connection, call &lt;code&gt;sequelize.close()&lt;/code&gt; (which is asynchronous and returns a Promise).</source>
          <target state="translated">默认情况下，Sequelize将使连接保持打开状态，并对所有查询使用相同的连接。如果需要关闭连接，请调用 &lt;code&gt;sequelize.close()&lt;/code&gt; （这是异步的并返回Promise）。</target>
        </trans-unit>
        <trans-unit id="a12449a9563abf0e30ea48fb1e83208aaaae5d36" translate="yes" xml:space="preserve">
          <source>Sequelize will warn you if you're using the default aliases and not limiting them if you want to keep using all default aliases (excluding legacy ones) without the warning you can pass the following operatorsAliases option -</source>
          <target state="translated">如果你使用了默认的别名而没有限制它们,Sequelize会警告你,如果你想继续使用所有默认的别名(不包括传统的别名)而不发出警告,你可以通过以下的operatorAliases选项--。</target>
        </trans-unit>
        <trans-unit id="552ca2f07a1fa7b5f7f41ab559cdc21d42d9ce70" translate="yes" xml:space="preserve">
          <source>Sequelize#fn</source>
          <target state="translated">Sequelize#fn</target>
        </trans-unit>
        <trans-unit id="61837406268cdb0d0b12c58a96e894f36f68cffc" translate="yes" xml:space="preserve">
          <source>Sequelize#query</source>
          <target state="translated">Sequelize#query</target>
        </trans-unit>
        <trans-unit id="c1b1daf0403c51efc06b9fcce975a7758d97a2aa" translate="yes" xml:space="preserve">
          <source>Sequelize-fixture</source>
          <target state="translated">Sequelize-fixture</target>
        </trans-unit>
        <trans-unit id="eed9460d8f90f2047f6e2bc967a20ec28c21c2e5" translate="yes" xml:space="preserve">
          <source>Sequelize-fixtures</source>
          <target state="translated">Sequelize-fixtures</target>
        </trans-unit>
        <trans-unit id="1a72bb27f77c646d89aab78edf53acbb911b806d" translate="yes" xml:space="preserve">
          <source>Sequelize.col</source>
          <target state="translated">Sequelize.col</target>
        </trans-unit>
        <trans-unit id="665023dac1be695aaeba85969fe1a94f8c091b07" translate="yes" xml:space="preserve">
          <source>Sequelize.define</source>
          <target state="translated">Sequelize.define</target>
        </trans-unit>
        <trans-unit id="730bfedd2958c7bec5b31d0621a9c26c5d74f1d4" translate="yes" xml:space="preserve">
          <source>Sequelize.fn and Sequelize.col returns functions and quoted column names</source>
          <target state="translated">Sequelize.fn和Sequelize.col返回函数和引用的列名。</target>
        </trans-unit>
        <trans-unit id="78fe18b652a0073892cad047536d322fec1fca96" translate="yes" xml:space="preserve">
          <source>Sequelize.transaction</source>
          <target state="translated">Sequelize.transaction</target>
        </trans-unit>
        <trans-unit id="9dfa6b97e674513041a192d1bad9a14a9b372dd7" translate="yes" xml:space="preserve">
          <source>SequelizeScopeError</source>
          <target state="translated">SequelizeScopeError</target>
        </trans-unit>
        <trans-unit id="ae2472523ae42a6de56284d423ed256bd57c04c4" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;ON UPDATE&lt;/code&gt;</source>
          <target state="translated">设置 &lt;code&gt;ON UPDATE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13bb92f3b76236bb6144fe9938c93ab1f1cbbd61" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;true&lt;/code&gt; to count only non-deleted records. Can be used on models with &lt;code&gt;paranoid&lt;/code&gt; enabled</source>
          <target state="translated">设置为 &lt;code&gt;true&lt;/code&gt; 仅计算未删除的记录。可以在启用了 &lt;code&gt;paranoid&lt;/code&gt; 模型上使用</target>
        </trans-unit>
        <trans-unit id="7afb64c86c07a6c269b9973a9ba25a4abf859068" translate="yes" xml:space="preserve">
          <source>Set can also be used to build instances for associations, if you have values for those. When using set with associations you need to make sure the property key matches the alias of the association while also making sure that the proper include options have been set (from .build() or .findOne())</source>
          <target state="translated">如果你有关联的值,set也可以用来为关联构建实例。当对关联使用set时,你需要确保属性键与关联的别名相匹配,同时也要确保已经设置了适当的包含选项(来自.build()或.findOne())。</target>
        </trans-unit>
        <trans-unit id="166866de4829b605ddb977194d8b9388922cde2a" translate="yes" xml:space="preserve">
          <source>Set is used to update values on the instance (the sequelize representation of the instance that is, remember that nothing will be persisted before you actually call &lt;code&gt;save&lt;/code&gt;).</source>
          <target state="translated">Set用于更新实例上的值（实例的序列化表示，请记住，在实际调用 &lt;code&gt;save&lt;/code&gt; 之前不会保留任何内容）。</target>
        </trans-unit>
        <trans-unit id="c61e103be0166178bd44bf7b48ee8f40f2dad972" translate="yes" xml:space="preserve">
          <source>Set is used to update values on the instance (the sequelize representation of the instance that is, remember that nothing will be persisted before you actually call &lt;code&gt;save&lt;/code&gt;). In its most basic form &lt;code&gt;set&lt;/code&gt; will update a value stored in the underlying &lt;code&gt;dataValues&lt;/code&gt; object. However, if a custom setter function is defined for the key, that function will be called instead. To bypass the setter, you can pass &lt;code&gt;raw: true&lt;/code&gt; in the options object.</source>
          <target state="translated">Set用于更新实例上的值（实例的序列化表示，请记住，在实际调用 &lt;code&gt;save&lt;/code&gt; 之前不会保留任何内容）。 &lt;code&gt;set&lt;/code&gt; 将以其最基本的形式更新存储在基础 &lt;code&gt;dataValues&lt;/code&gt; 对象中的值。但是，如果为该键定义了自定义设置器函数，则将调用该函数。要绕过设置器，可以在options对象中传递 &lt;code&gt;raw: true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63bb957bd4f2485eebebbe454a8b69e791949044" translate="yes" xml:space="preserve">
          <source>Set name of the model. By default its same as Class name.</source>
          <target state="translated">设置模型的名称。默认情况下,它与类名相同。</target>
        </trans-unit>
        <trans-unit id="fb94cec61d3a9dbb28107d775ffb15026c33626f" translate="yes" xml:space="preserve">
          <source>Set of flags that control when a query is automatically retried.</source>
          <target state="translated">控制何时自动重试查询的一组标志。</target>
        </trans-unit>
        <trans-unit id="d3489274cb42c90bb36ad36d4038ec5bb58f7ba1" translate="yes" xml:space="preserve">
          <source>Set the associated model.</source>
          <target state="translated">设置相关模型。</target>
        </trans-unit>
        <trans-unit id="cbde947d0c7d02a7c6c0d54175f289fc8bd46ae8" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of instances or their primary keys.</source>
          <target state="translated">通过传递一个实例数组或其主键来设置关联模型。</target>
        </trans-unit>
        <trans-unit id="28afce742822bda7ac3a2f32d5cd41e9419a35e7" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of instances or their primary keys. Everything that it not in the passed array will be un-associated.</source>
          <target state="translated">通过传递一个实例数组或它们的主键来设置关联模型。所有不在传递数组中的东西将被取消关联。</target>
        </trans-unit>
        <trans-unit id="4659b18c90bdf2bdf8128c7828c1888d45a44b43" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of persisted instances or their primary keys.</source>
          <target state="translated">通过传递一个持久化实例的数组或它们的主键来设置关联模型。</target>
        </trans-unit>
        <trans-unit id="068e7c3551ea386b519bbe3de0e4543eabfc2396" translate="yes" xml:space="preserve">
          <source>Set the associated models by passing an array of persisted instances or their primary keys. Everything that is not in the passed array will be un-associated</source>
          <target state="translated">通过传递一个持久化实例或其主键的数组来设置关联模型。所有不在传递数组中的东西都将被取消关联。</target>
        </trans-unit>
        <trans-unit id="97d0bf148a15e487d3493ba0c0a64bd2ffe4c813" translate="yes" xml:space="preserve">
          <source>Set the constraints to not deferred. This is the default in PostgreSQL and it make it impossible to dynamically defer the constraints within a transaction.</source>
          <target state="translated">将约束条件设置为不延迟。这是PostgreSQL的默认值,这使得它无法在事务中动态地延迟约束条件。</target>
        </trans-unit>
        <trans-unit id="107b4c048cafd6f18d89bbdc4fb5cd9bc242b490" translate="yes" xml:space="preserve">
          <source>Set the default transaction isolation level. See &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; for possible options.</source>
          <target state="translated">设置默认的事务隔离级别。有关可能的选项，请参见 &lt;code&gt;Sequelize.Transaction.ISOLATION_LEVELS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a7b3220b9496281536f2b1d365289c693c1b5dc" translate="yes" xml:space="preserve">
          <source>Set the default transaction type. See &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; for possible options. Sqlite only.</source>
          <target state="translated">设置默认交易类型。有关可能的选项，请参见 &lt;code&gt;Sequelize.Transaction.TYPES&lt;/code&gt; 。仅限Sqlite。</target>
        </trans-unit>
        <trans-unit id="e32c8401f834466947bfc307cba05a4f5d4d4ee8" translate="yes" xml:space="preserve">
          <source>Set the initial AUTO_INCREMENT value for the table in MySQL.</source>
          <target state="translated">设置MySQL中表的初始AUTO_INCREMENT值。</target>
        </trans-unit>
        <trans-unit id="2142490858241f5b04e051a62de526c24ed0e592" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to make table names and attributes case-insensitive on Postgres and skip double quoting of them. WARNING: Setting this to false may expose vulnerabilities and is not recommended!</source>
          <target state="translated">设置为 &lt;code&gt;false&lt;/code&gt; 使Postgres的表名和属性不区分大小写，并跳过它们的双引号。警告：将此设置为false可能会暴露漏洞，因此不建议这样做！</target>
        </trans-unit>
        <trans-unit id="354c30cb0ad082bba494c5b29c973069e05d6c82" translate="yes" xml:space="preserve">
          <source>Set to true to run before-/afterDestroy hooks when an associated model is deleted because of a cascade. For example if &lt;code&gt;User.hasOne(Profile, {onDelete: 'cascade', hooks:true})&lt;/code&gt;, the before-/afterDestroy hooks for profile will be called when a user is deleted. Otherwise the profile will be deleted without invoking any hooks</source>
          <target state="translated">设置为true可在由于级联而删除关联的模型时运行before- / afterDestroy挂钩。例如，如果 &lt;code&gt;User.hasOne(Profile, {onDelete: 'cascade', hooks:true})&lt;/code&gt; ，则删除用户时将调用profile的before- / afterDestroy挂钩。否则，将在不调用任何钩子的情况下删除配置文件</target>
        </trans-unit>
        <trans-unit id="1c4f50d2829a25de027786fbdce72e5b78d07194" translate="yes" xml:space="preserve">
          <source>Sets 'ON UPDATE'</source>
          <target state="translated">设置 &quot;ON UPDATE&quot;。</target>
        </trans-unit>
        <trans-unit id="8ba2182b55b33f33f3359d2be48577029cff400f" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;ON UPDATE&lt;/code&gt;</source>
          <target state="translated">设置 &lt;code&gt;ON UPDATE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18972919efe0a74faf9c8fee85561d96ee6ef6d3" translate="yes" xml:space="preserve">
          <source>Sets the constraints to be deferred or immediately checked. PostgreSQL only</source>
          <target state="translated">设置约束条件为延迟或立即检查。仅限PostgreSQL</target>
        </trans-unit>
        <trans-unit id="fd789d936fbe1c06427e2b854a8677e439ab83d7" translate="yes" xml:space="preserve">
          <source>Sets the constraints to be deferred or immediately checked. See &lt;code&gt;Sequelize.Deferrable&lt;/code&gt;. PostgreSQL Only</source>
          <target state="translated">设置要推迟或立即检查的约束。请参见 &lt;code&gt;Sequelize.Deferrable&lt;/code&gt; 。仅限PostgreSQL</target>
        </trans-unit>
        <trans-unit id="0f49e7ccb9839aa302b4098fa4e81d7d66544064" translate="yes" xml:space="preserve">
          <source>Sets the isolation level of the transaction.</source>
          <target state="translated">设置交易的隔离级别。</target>
        </trans-unit>
        <trans-unit id="bdfc96c36f0f4dfb42251486fcfd7e6409571de8" translate="yes" xml:space="preserve">
          <source>Sets the query type to &lt;code&gt;SELECT&lt;/code&gt; and return a single row</source>
          <target state="translated">将查询类型设置为 &lt;code&gt;SELECT&lt;/code&gt; 并返回单行</target>
        </trans-unit>
        <trans-unit id="48e50206ef8d2f4278a730b2e028d7da0eeac616" translate="yes" xml:space="preserve">
          <source>Sets the type of the transaction. Sqlite only</source>
          <target state="translated">设置交易的类型。仅Sqlite</target>
        </trans-unit>
        <trans-unit id="3d974d0bf03a57c01c4f20dcbb4527dcbfa503e9" translate="yes" xml:space="preserve">
          <source>Setting up a connection</source>
          <target state="translated">设置连接</target>
        </trans-unit>
        <trans-unit id="f1f1f62ad1a95c21c649b09609e964e4f011ab41" translate="yes" xml:space="preserve">
          <source>Several other query types are available. &lt;a href=&quot;https://github.com/sequelize/sequelize/blob/master/lib/query-types.js&quot;&gt;Peek into the source for details&lt;/a&gt;</source>
          <target state="translated">还有其他几种查询类型。&lt;a href=&quot;https://github.com/sequelize/sequelize/blob/master/lib/query-types.js&quot;&gt;查阅源代码以获取详细信息&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aea9a5880bd2b9832a731121a6d7390e206c1927" translate="yes" xml:space="preserve">
          <source>Several scopes can be applied simultaneously by passing an array of scopes to &lt;code&gt;.scope&lt;/code&gt;, or by passing the scopes as consecutive arguments.</source>
          <target state="translated">通过将范围数组传递给 &lt;code&gt;.scope&lt;/code&gt; 或将范围作为连续参数传递，可以同时应用多个范围。</target>
        </trans-unit>
        <trans-unit id="1cc34d5862bb6623cb8eb39094c2ba84d0c3557b" translate="yes" xml:space="preserve">
          <source>Should each row be subject to validation before it is inserted. The whole insert will fail if one row fails validation</source>
          <target state="translated">是否每条记录在插入前都要经过验证。如果有一条记录没有通过验证,整个插入就会失败。</target>
        </trans-unit>
        <trans-unit id="fccc812dc5f2a57c8829818b8c7f9aa953df663f" translate="yes" xml:space="preserve">
          <source>Should on update and on delete constraints be enabled on the foreign key.</source>
          <target state="translated">是否应该在外键上启用更新和删除约束。</target>
        </trans-unit>
        <trans-unit id="1c55603b3eb9b5b1700bdfca388933033c5267cc" translate="yes" xml:space="preserve">
          <source>Should the index by unique? Can also be triggered by setting type to &lt;code&gt;UNIQUE&lt;/code&gt;</source>
          <target state="translated">索引应该唯一吗？也可以通过将类型设置为 &lt;code&gt;UNIQUE&lt;/code&gt; 来触发</target>
        </trans-unit>
        <trans-unit id="d9430fbff299935c8d01d77d60a80c20db8af97f" translate="yes" xml:space="preserve">
          <source>Should the join model have timestamps</source>
          <target state="translated">加入模型是否应该有时间戳</target>
        </trans-unit>
        <trans-unit id="e89c05ba6758d6c1df5321149b427c4c24dc77a5" translate="yes" xml:space="preserve">
          <source>Show all defined schemas</source>
          <target state="translated">显示所有已定义的模式</target>
        </trans-unit>
        <trans-unit id="a8230afc301654f9c5847932109ae42f577ad544" translate="yes" xml:space="preserve">
          <source>Show all schemas</source>
          <target state="translated">显示所有模式</target>
        </trans-unit>
        <trans-unit id="5c66f69bd4f8cb33cd2b7d50b7fe30afddb3d653" translate="yes" xml:space="preserve">
          <source>Similarly, it's also possible to remove a selected few attributes:</source>
          <target state="translated">同样,也可以删除选定的几个属性。</target>
        </trans-unit>
        <trans-unit id="26f9660bf122890dd24a48101e8f7f0554e9803f" translate="yes" xml:space="preserve">
          <source>Similarly, when fetching through a join table with custom attributes, these attributes will be available as an object with the name of the through model.</source>
          <target state="translated">类似地,当通过具有自定义属性的连接表进行取值时,这些属性将作为一个具有通模型名称的对象提供。</target>
        </trans-unit>
        <trans-unit id="696ea9d6cd2e74a5c976cb995c1b0d7d4e1edac0" translate="yes" xml:space="preserve">
          <source>Simple search using AND and =</source>
          <target state="translated">使用AND和=进行简单搜索</target>
        </trans-unit>
        <trans-unit id="8e0eaf977d4539a1c708998caf904e6bb9df2978" translate="yes" xml:space="preserve">
          <source>Since range types have extra information for their bound inclusion/exclusion it's not very straightforward to just use a tuple to represent them in javascript.</source>
          <target state="translated">由于范围类型对其绑定的包含/排除有额外的信息,所以在javascript中仅仅使用一个元组来表示它们是不太直接的。</target>
        </trans-unit>
        <trans-unit id="b601167a7cd382d7cbe566ee42e4b7536768d3ad" translate="yes" xml:space="preserve">
          <source>Since v5, Sequelize provides its own TypeScript definitions. Please note that only TS &amp;gt;= 3.1 is supported.</source>
          <target state="translated">从v5开始，Sequelize提供了自己的TypeScript定义。请注意，仅支持TS&amp;gt; = 3.1。</target>
        </trans-unit>
        <trans-unit id="f436c13844b216967ae563c043203b695079ce01" translate="yes" xml:space="preserve">
          <source>Since you are working with multiple models, the callbacks will not return DAO instances. BulkCreate will return an array of model instances/DAOs, they will however, unlike &lt;code&gt;create&lt;/code&gt;, not have the resulting values of autoIncrement attributes.&lt;code&gt;update&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; will return the number of affected rows.</source>
          <target state="translated">由于您正在使用多个模型，因此回调将不会返回DAO实例。BulkCreate将返回模型实例/ DAO的数组，但是，与 &lt;code&gt;create&lt;/code&gt; 不同，它们将不具有autoIncrement属性的结果值。 &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;destroy&lt;/code&gt; 将返回受影响的行数。</target>
        </trans-unit>
        <trans-unit id="d0a120c4b4160f315ab6b9691b248b295b04acec" translate="yes" xml:space="preserve">
          <source>Singular name for model</source>
          <target state="translated">模型的单数名称</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="dbe291e0d821c92f6b4f3902eec2a5914db65996" translate="yes" xml:space="preserve">
          <source>Skip locked rows. Only supported in Postgres.</source>
          <target state="translated">跳过锁定的行。仅在Postgres中支持。</target>
        </trans-unit>
        <trans-unit id="b066e9f045fec6926b3eb8e24e878587821bf646" translate="yes" xml:space="preserve">
          <source>Skip saving this after setting the foreign key if false.</source>
          <target state="translated">如果为假,则在设置外键后跳过保存。</target>
        </trans-unit>
        <trans-unit id="9081562512b5ff709e3b937fef72e774f6407d16" translate="yes" xml:space="preserve">
          <source>Slugification</source>
          <target state="translated">Slugification</target>
        </trans-unit>
        <trans-unit id="e5e3a2d0b71e212514381c92fbda84f40194f41d" translate="yes" xml:space="preserve">
          <source>So far we dealt with a one-way association. But we want more! Let's define it the other way around by creating a many to many association in the next section.</source>
          <target state="translated">到目前为止,我们处理的是单向关联。但我们还想要更多! 让我们反过来定义它,在下一节创建一个多对多关联。</target>
        </trans-unit>
        <trans-unit id="4e42dc224648ef387be0eb7a267a923a15e1bc3c" translate="yes" xml:space="preserve">
          <source>So this enum name must follow this pattern &lt;code&gt;enum_&amp;lt;table_name&amp;gt;_&amp;lt;col_name&amp;gt;&lt;/code&gt;. If you are using &lt;code&gt;sync&lt;/code&gt; then correct name will automatically be generated.</source>
          <target state="translated">因此，此枚举名称必须遵循此模式 &lt;code&gt;enum_&amp;lt;table_name&amp;gt;_&amp;lt;col_name&amp;gt;&lt;/code&gt; 。如果使用 &lt;code&gt;sync&lt;/code&gt; 则将自动生成正确的名称。</target>
        </trans-unit>
        <trans-unit id="0e78ec0d8156cc0f2bf3c598c9044e39bfa2947e" translate="yes" xml:space="preserve">
          <source>Some data types have special properties that can be accessed in order to change the data type. For example, to get an unsigned integer with zerofill you can do &lt;code&gt;DataTypes.INTEGER.UNSIGNED.ZEROFILL&lt;/code&gt;. The order you access the properties in do not matter, so &lt;code&gt;DataTypes.INTEGER.ZEROFILL.UNSIGNED&lt;/code&gt; is fine as well.</source>
          <target state="translated">某些数据类型具有特殊属性，可以更改这些属性以更改数据类型。例如，要获取带有零填充的无符号整数，可以执行 &lt;code&gt;DataTypes.INTEGER.UNSIGNED.ZEROFILL&lt;/code&gt; 。您访问属性的顺序无关紧要，因此 &lt;code&gt;DataTypes.INTEGER.ZEROFILL.UNSIGNED&lt;/code&gt; 也可以。</target>
        </trans-unit>
        <trans-unit id="47aac3e3ea46b8003010b5a72dada7a63be999b8" translate="yes" xml:space="preserve">
          <source>Some frameworks automatically parse user input into js objects and if you fail to sanitize your input it might be possible to inject an Object with string operators to Sequelize.</source>
          <target state="translated">一些框架会自动将用户输入解析成js对象,如果你未能对输入进行消毒,可能会注入一个带有字符串操作符的Object来Sequelize。</target>
        </trans-unit>
        <trans-unit id="506695fe4bca93a04e723ee3f23405d882143d94" translate="yes" xml:space="preserve">
          <source>Some scenarios where you can use it.</source>
          <target state="translated">一些可以使用的场景。</target>
        </trans-unit>
        <trans-unit id="45519e97c243c8c894e455e42e2f4ddf34c0f43c" translate="yes" xml:space="preserve">
          <source>Some tips around using CLI and migration setup in production environment.</source>
          <target state="translated">关于在生产环境中使用CLI和迁移设置的一些技巧。</target>
        </trans-unit>
        <trans-unit id="cce1d48d901d42375d87783743924bc41a147483" translate="yes" xml:space="preserve">
          <source>Sometime you want to specify a dialectOption, if it's a general config you can just add it in &lt;code&gt;config/config.json&lt;/code&gt;. Sometime you want to execute some code to get dialectOptions, you should use dynamic config file for those cases.</source>
          <target state="translated">有时您想指定一个DialectOption，如果它是常规配置，则可以将其添加到 &lt;code&gt;config/config.json&lt;/code&gt; 中。有时您想执行一些代码来获取DialectOptions，对于这种情况，应使用动态配置文件。</target>
        </trans-unit>
        <trans-unit id="8e9158873a51d40de8fc8b6422e47f75fed10c82" translate="yes" xml:space="preserve">
          <source>Sometimes it may be tiresome to list all the attributes of the model if you only want to add an aggregation:</source>
          <target state="translated">有时,如果你只想添加一个聚合,那么列出模型的所有属性可能会很烦人。</target>
        </trans-unit>
        <trans-unit id="c76c8272fccf13128629164c9a771b6e879c7bc4" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to associate records on different columns, you may use &lt;code&gt;sourceKey&lt;/code&gt; option:</source>
          <target state="translated">有时您可能需要关联不同列上的记录，可以使用 &lt;code&gt;sourceKey&lt;/code&gt; 选项：</target>
        </trans-unit>
        <trans-unit id="84420187eb6990ad41032d3ccbebefd68bfee436" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to reference another table, without adding any constraints, or associations. In that case you can manually add the reference attributes to your schema definition, and mark the relations between them.</source>
          <target state="translated">有时,你可能想引用另一个表,而不添加任何约束或关联。在这种情况下,你可以手动添加引用属性到你的模式定义中,并标记它们之间的关系。</target>
        </trans-unit>
        <trans-unit id="a5a4cd094326d31853e0865b4f6a87a79be6da8e" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to rename your models when using them in associations. Let's define users as workers and projects as tasks by using the alias (&lt;code&gt;as&lt;/code&gt;) option. We will also manually define the foreign keys to use:</source>
          <target state="translated">有时，在关联中使用模型时，可能需要重命名模型。让我们使用alias（ &lt;code&gt;as&lt;/code&gt; ）选项将用户定义为工作人员，将项目定义为任务。我们还将手动定义要使用的外键：</target>
        </trans-unit>
        <trans-unit id="ca0f78496da4f38b504892d451c90fe377acf862" translate="yes" xml:space="preserve">
          <source>Sometimes you might be expecting a massive dataset that you just want to display, without manipulation. For each row you select, Sequelize creates an instance with functions for update, delete, get associations etc. If you have thousands of rows, this might take some time. If you only need the raw data and don't want to update anything, you can do like this to get the raw data.</source>
          <target state="translated">有时候,你可能希望得到一个庞大的数据集,而你只想显示,而不需要操作。对于你选择的每一条记录,Sequelize都会创建一个具有更新、删除、获取关联等功能的实例。如果你有数千行,这可能需要一些时间。如果你只需要原始数据,不想更新任何东西,你可以这样做来获取原始数据。</target>
        </trans-unit>
        <trans-unit id="f6e10c8d1ee0e110a949c1dd33ee734b90e8b619" translate="yes" xml:space="preserve">
          <source>Sometimes you'll be editing more than one record at a time by utilizing the &lt;code&gt;bulkCreate, update, destroy&lt;/code&gt; methods on the model. The following will emit whenever you're using one of those methods:</source>
          <target state="translated">有时，您将利用模型上的 &lt;code&gt;bulkCreate, update, destroy&lt;/code&gt; 方法来一次编辑多个记录。每当您使用其中一种方法时，都会发出以下内容：</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="cec1acf567fe5032c7ccbe6f0c04bec9827cd692" translate="yes" xml:space="preserve">
          <source>Source &amp;amp; Target</source>
          <target state="translated">来源与目标</target>
        </trans-unit>
        <trans-unit id="7969aba3e7f08bea9e13ad506421e1ecfd565291" translate="yes" xml:space="preserve">
          <source>Source and target keys</source>
          <target state="translated">源钥匙和目标钥匙</target>
        </trans-unit>
        <trans-unit id="d8a00d1571c48d768984321da51fe70137af999f" translate="yes" xml:space="preserve">
          <source>Source code of function</source>
          <target state="translated">函数的源代码</target>
        </trans-unit>
        <trans-unit id="1499c6d6e22facebb12a10f560d4082a7ba88a6f" translate="yes" xml:space="preserve">
          <source>Source keys</source>
          <target state="translated">源钥匙</target>
        </trans-unit>
        <trans-unit id="59f265692e8532f3f9f4cf8098a358d626fbb2eb" translate="yes" xml:space="preserve">
          <source>Special Cases</source>
          <target state="translated">特殊情况</target>
        </trans-unit>
        <trans-unit id="7610310be61095c09812768c8c3df51ade223444" translate="yes" xml:space="preserve">
          <source>Specified model</source>
          <target state="translated">指定型号</target>
        </trans-unit>
        <trans-unit id="ef957adb2faf323c7b629c9477baa8a72aec3b29" translate="yes" xml:space="preserve">
          <source>Specifies an ordering. Using an array, you can provide several columns / functions to order by. Each element can be further wrapped in a two-element array. The first element is the column / function to order by, the second is the direction. For example: &lt;code&gt;order: [['name', 'DESC']]&lt;/code&gt;. In this way the column will be escaped, but the direction will not.</source>
          <target state="translated">指定顺序。使用数组，您可以提供几个列/函数进行排序。每个元素都可以进一步包装为两个元素的数组。第一个元素是要按其排序的列/函数，第二个是方向。例如： &lt;code&gt;order: [['name', 'DESC']]&lt;/code&gt; 。这样，列将逃逸，但方向将不会逃逸。</target>
        </trans-unit>
        <trans-unit id="ab91a1aa22860a5be44f1c7d0e5a41f40ac0899d" translate="yes" xml:space="preserve">
          <source>Specify charset for model's table</source>
          <target state="translated">为模型的表格指定字符集。</target>
        </trans-unit>
        <trans-unit id="05c45a92124ec5ecf33e03c985ae55ccc15f268e" translate="yes" xml:space="preserve">
          <source>Specify collation for model's table</source>
          <target state="translated">为模型的表格指定整理方式</target>
        </trans-unit>
        <trans-unit id="6e7c3b352c76886bab8a11641294e51528c63905" translate="yes" xml:space="preserve">
          <source>Specify comment for model's table</source>
          <target state="translated">为模型的表格指定注释</target>
        </trans-unit>
        <trans-unit id="6c874f64189ebc73fd18bd05f2dd405ac52c8396" translate="yes" xml:space="preserve">
          <source>Specify engine for model's table</source>
          <target state="translated">为模型的表格指定引擎</target>
        </trans-unit>
        <trans-unit id="93cb6f0d1b5094f7a606c75c41e39f3729456b42" translate="yes" xml:space="preserve">
          <source>Specify index operator.</source>
          <target state="translated">指定索引运算符。</target>
        </trans-unit>
        <trans-unit id="1b468bd525de3aeadbdf80f3d9c458fbcaefa38a" translate="yes" xml:space="preserve">
          <source>Specifying Dialect Options</source>
          <target state="translated">指定方言选项</target>
        </trans-unit>
        <trans-unit id="789445bbe2e230b404b0877611cb047ff79a2a8a" translate="yes" xml:space="preserve">
          <source>Start a transaction.</source>
          <target state="translated">开始交易。</target>
        </trans-unit>
        <trans-unit id="d18d875cf4fc5fcecf6b711eae14645c02d6e1f3" translate="yes" xml:space="preserve">
          <source>Start a transaction. When using transactions, you should pass the transaction in the options argument in order for the query to happen under that transaction @see &lt;a href=&quot;transaction.js~transaction&quot;&gt;Transaction&lt;/a&gt;</source>
          <target state="translated">开始交易。使用事务时，应在options参数中传递事务，以使查询在该事务下发生@see &lt;a href=&quot;transaction.js~transaction&quot;&gt;Transaction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="767db5397ee3f3f1fc518ea59e55ef68e66c4e49" translate="yes" xml:space="preserve">
          <source>Start looking for any migration files which haven't run yet. This is possible by checking &lt;code&gt;SequelizeMeta&lt;/code&gt; table. In this case it will run &lt;code&gt;XXXXXXXXXXXXXX-create-user.js&lt;/code&gt; migration, which we created in last step.</source>
          <target state="translated">开始寻找尚未运行的所有迁移文件。这可以通过检查 &lt;code&gt;SequelizeMeta&lt;/code&gt; 表来实现。在这种情况下，它将运行我们在上一步中 &lt;code&gt;XXXXXXXXXXXXXX-create-user.js&lt;/code&gt; 迁移。</target>
        </trans-unit>
        <trans-unit id="3e2ca76b869d4fc44471d269e7d021b82eb5e2e7" translate="yes" xml:space="preserve">
          <source>Static Member Summary</source>
          <target state="translated">静态成员摘要</target>
        </trans-unit>
        <trans-unit id="93974c74e2583ae745e2a4d05185ce35cbce3dda" translate="yes" xml:space="preserve">
          <source>Static Method Summary</source>
          <target state="translated">静态方法总结</target>
        </trans-unit>
        <trans-unit id="5d93069d69d10dd364cb5869055e39be7a82df7b" translate="yes" xml:space="preserve">
          <source>Static Public</source>
          <target state="translated">静态公开</target>
        </trans-unit>
        <trans-unit id="071f6dc8b2e654ff72e19d9c2affa12acd8cad3b" translate="yes" xml:space="preserve">
          <source>Static Public Members</source>
          <target state="translated">静态公共成员</target>
        </trans-unit>
        <trans-unit id="fd87df2a091c294a3be14e721270cc5cb9005586" translate="yes" xml:space="preserve">
          <source>Static Public Methods</source>
          <target state="translated">静态公共方法</target>
        </trans-unit>
        <trans-unit id="e54d0c6ac86b830fabe7f13edf805a4e9b1dee3e" translate="yes" xml:space="preserve">
          <source>Static Public Summary</source>
          <target state="translated">静态公共摘要</target>
        </trans-unit>
        <trans-unit id="9e092dda4f0e27d0c7686ddd00272079e678b6e6" translate="yes" xml:space="preserve">
          <source>Storage</source>
          <target state="translated">Storage</target>
        </trans-unit>
        <trans-unit id="65fa5a3000720098c1dca59b70a7d76a6fd2c4c2" translate="yes" xml:space="preserve">
          <source>String - will be quoted</source>
          <target state="translated">字符串-将被引用</target>
        </trans-unit>
        <trans-unit id="daceb9a0562946d158de84d0526f6149910187cc" translate="yes" xml:space="preserve">
          <source>String based operator alias. Pass object to limit set of aliased operators.</source>
          <target state="translated">基于字符串的运算符别名。通过对象来限制别名运算符的数量。</target>
        </trans-unit>
        <trans-unit id="6ada010a4af6877d578b83c2221b03cd216ad0ed" translate="yes" xml:space="preserve">
          <source>Such validation could have also been done with a custom validator defined on a single attribute (such as the &lt;code&gt;latitude&lt;/code&gt; attribute, by checking &lt;code&gt;(value === null) !== (this.longitude === null)&lt;/code&gt;), but the model-wide validation approach is cleaner.</source>
          <target state="translated">这种验证本来也可以对单个属性定义一个定制的验证完成（如 &lt;code&gt;latitude&lt;/code&gt; 属性，通过检查 &lt;code&gt;(value === null) !== (this.longitude === null)&lt;/code&gt; ），但模型-广泛的验证方法更清洁。</target>
        </trans-unit>
        <trans-unit id="666e6b745c699158426c5ad099759c71dae3993c" translate="yes" xml:space="preserve">
          <source>Supply your own ON condition for the join.</source>
          <target state="translated">为加盟提供自己的ON条件。</target>
        </trans-unit>
        <trans-unit id="144046b1bd7badefc4d65fecc8afd75a78d5b865" translate="yes" xml:space="preserve">
          <source>Support for Node 10 and up</source>
          <target state="translated">支持节点10及以上</target>
        </trans-unit>
        <trans-unit id="cd906bb957f4dba88a7d677004f6055dd11d4afc" translate="yes" xml:space="preserve">
          <source>Suppose our &lt;code&gt;Player&lt;/code&gt; model has information about its team as &lt;code&gt;teamId&lt;/code&gt; column. Information about each Team's &lt;code&gt;Coach&lt;/code&gt; is stored in the &lt;code&gt;Team&lt;/code&gt; model as &lt;code&gt;coachId&lt;/code&gt; column. These both scenarios requires different kind of 1:1 relation because foreign key relation is present on different models each time.</source>
          <target state="translated">假设我们的 &lt;code&gt;Player&lt;/code&gt; 模型将有关其团队的信息作为 &lt;code&gt;teamId&lt;/code&gt; 列。有关每个团队 &lt;code&gt;Coach&lt;/code&gt; 的信息存储在&amp;ldquo; &lt;code&gt;Team&lt;/code&gt; 模型中，作为 &lt;code&gt;coachId&lt;/code&gt; 列。这两种情况都需要不同种类的1：1关系，因为每次不同模型上都存在外键关系。</target>
        </trans-unit>
        <trans-unit id="ef80b7fed8338d93416cd79ad36e89fa6b35d973" translate="yes" xml:space="preserve">
          <source>Suppose we have two tables to link &lt;strong&gt;Player&lt;/strong&gt; and &lt;strong&gt;Team&lt;/strong&gt;. Lets define their models.</source>
          <target state="translated">假设我们有两个表链接&lt;strong&gt;Player&lt;/strong&gt;和&lt;strong&gt;Team&lt;/strong&gt;。让我们定义他们的模型。</target>
        </trans-unit>
        <trans-unit id="7d1b98193b4347c9a63a9bbb4d39a13215749194" translate="yes" xml:space="preserve">
          <source>Suppose we want to insert some data into a few tables by default. If we follow up on previous example we can consider creating a demo user for &lt;code&gt;User&lt;/code&gt; table.</source>
          <target state="translated">假设我们想默认将一些数据插入到几个表中。如果我们继续前面的示例，则可以考虑为 &lt;code&gt;User&lt;/code&gt; 表创建一个演示用户。</target>
        </trans-unit>
        <trans-unit id="63f13894b7179290120a467d9f756197261eb48d" translate="yes" xml:space="preserve">
          <source>Suppose you want to find all users who have a profile attached:</source>
          <target state="translated">假设你想找到所有有个人资料的用户。</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="1e4961c4fd4c50f3974bcbc462ffabf9d11b7e41" translate="yes" xml:space="preserve">
          <source>Sync all defined models to the DB.</source>
          <target state="translated">将所有定义的模型同步到数据库。</target>
        </trans-unit>
        <trans-unit id="d295b7c124f450a0ae7db9e0dd4371d5a908e16c" translate="yes" xml:space="preserve">
          <source>Sync this Model to the DB, that is create the table.</source>
          <target state="translated">将此Model同步到DB中,即创建表。</target>
        </trans-unit>
        <trans-unit id="49b4cf438c26e221dcf5c35f1bb5388e58acc6de" translate="yes" xml:space="preserve">
          <source>Synchronizing all models at once</source>
          <target state="translated">一次同步所有模型</target>
        </trans-unit>
        <trans-unit id="7754c8e786d3eca650ff1b582693fa0714a38764" translate="yes" xml:space="preserve">
          <source>Synchronizing the model with the database</source>
          <target state="translated">将模型与数据库同步</target>
        </trans-unit>
        <trans-unit id="e834f99dcb78400f4c128fb50e4f83eea4bd65b6" translate="yes" xml:space="preserve">
          <source>TABLOCK</source>
          <target state="translated">TABLOCK</target>
        </trans-unit>
        <trans-unit id="dcb435e28d2012463d8e6def6d52b91b7d81a93f" translate="yes" xml:space="preserve">
          <source>TABLOCKX</source>
          <target state="translated">TABLOCKX</target>
        </trans-unit>
        <trans-unit id="7d4e42ef9d04a046b5679f952cb0b6b5c498c73c" translate="yes" xml:space="preserve">
          <source>TEXT</source>
          <target state="translated">TEXT</target>
        </trans-unit>
        <trans-unit id="64269f9bd268bf28815bb69e82601cd7e806a37b" translate="yes" xml:space="preserve">
          <source>TIME</source>
          <target state="translated">TIME</target>
        </trans-unit>
        <trans-unit id="4fe5a3682f8029783789ec9b3abba10f67f03ffa" translate="yes" xml:space="preserve">
          <source>TINYINT</source>
          <target state="translated">TINYINT</target>
        </trans-unit>
        <trans-unit id="521cc63843abd0f34c261968e1d32a7dc9f6c198" translate="yes" xml:space="preserve">
          <source>Table Hint</source>
          <target state="translated">表格提示</target>
        </trans-unit>
        <trans-unit id="22ba75a57550188d799bd1e025b7db1fda0a2d3e" translate="yes" xml:space="preserve">
          <source>Table hints override the default behavior of mssql query optimizer by specifing certain options. They only affect the table or view referenced in that clause.</source>
          <target state="translated">表提示通过指定某些选项来覆盖mssql查询优化器的默认行为。它们只影响该子句中引用的表或视图。</target>
        </trans-unit>
        <trans-unit id="0cb75dbc5813b569590e4ea143ce823027afbc1b" translate="yes" xml:space="preserve">
          <source>Table name to add index on, can be a object with schema</source>
          <target state="translated">要添加索引的表名,可以是一个有模式的对象。</target>
        </trans-unit>
        <trans-unit id="3fab7b43bc054cab875b79b2a0d5940d09c13933" translate="yes" xml:space="preserve">
          <source>Table name to change from</source>
          <target state="translated">表名从</target>
        </trans-unit>
        <trans-unit id="2cdfba3e5bff8000906d5f3be065833e214bd7be" translate="yes" xml:space="preserve">
          <source>Table name to drop</source>
          <target state="translated">要删除的表名</target>
        </trans-unit>
        <trans-unit id="a0d7075f146f8e02ece5c3b5bc8db30590e1c72b" translate="yes" xml:space="preserve">
          <source>Table name to drop constraint from</source>
          <target state="translated">从表中删除约束的表名</target>
        </trans-unit>
        <trans-unit id="45bc0fc9921d956e87501c72f3c69e96310abf0b" translate="yes" xml:space="preserve">
          <source>Table name to drop index from</source>
          <target state="translated">要删除索引的表名</target>
        </trans-unit>
        <trans-unit id="b0e1e1e10f09068f7cae45a1dace79b0d9a82486" translate="yes" xml:space="preserve">
          <source>Table name to insert record to</source>
          <target state="translated">要插入记录的表名</target>
        </trans-unit>
        <trans-unit id="f255cd8680539b5bbf5bb6cf0e61d456d5c89103" translate="yes" xml:space="preserve">
          <source>Table name to update</source>
          <target state="translated">要更新的表名</target>
        </trans-unit>
        <trans-unit id="dd22d9e56c5cb140764fa721de7a45f25fe6d977" translate="yes" xml:space="preserve">
          <source>Table name where you want to add a constraint</source>
          <target state="translated">要添加约束的表名</target>
        </trans-unit>
        <trans-unit id="25ca34d81d29fd398bf9c4ba66b56be70861a874" translate="yes" xml:space="preserve">
          <source>Table name whose column to rename</source>
          <target state="translated">要重命名列的表名</target>
        </trans-unit>
        <trans-unit id="dbed374b26ccca4bdab96f82c9f48630ce076773" translate="yes" xml:space="preserve">
          <source>Table name, for backward compatibility</source>
          <target state="translated">表名,为了向后兼容</target>
        </trans-unit>
        <trans-unit id="d210072aac6aa90c45934daef475a90e10b81e26" translate="yes" xml:space="preserve">
          <source>Table to add column to</source>
          <target state="translated">要添加列的表</target>
        </trans-unit>
        <trans-unit id="8ebb87b4f0d6b0bd82f500cb89d5d63fe2b3bb66" translate="yes" xml:space="preserve">
          <source>Table to remove column from</source>
          <target state="translated">从表中删除列</target>
        </trans-unit>
        <trans-unit id="c30f8dfdb7e7408d778802c6ee43b43deb695358" translate="yes" xml:space="preserve">
          <source>TableHints</source>
          <target state="translated">TableHints</target>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="e396b94e25d4b0c0ef34b12c624dbfa7272476fb" translate="yes" xml:space="preserve">
          <source>Target column name</source>
          <target state="translated">目标列名</target>
        </trans-unit>
        <trans-unit id="975ce3d3070b51cecd838e1da8d21e0ef5ce9336" translate="yes" xml:space="preserve">
          <source>Target keys</source>
          <target state="translated">目标键</target>
        </trans-unit>
        <trans-unit id="5c068aa69f6d4ef42a8389abe9cd810232caae05" translate="yes" xml:space="preserve">
          <source>Target model</source>
          <target state="translated">目标模型</target>
        </trans-unit>
        <trans-unit id="2f66e0e68c2c913dd1bf905e22855cbb450958e6" translate="yes" xml:space="preserve">
          <source>Target table name</source>
          <target state="translated">目标表名</target>
        </trans-unit>
        <trans-unit id="0672d7ed7ed6afdfd270b53235aa08ccc0eed98a" translate="yes" xml:space="preserve">
          <source>Test the connection by trying to authenticate.</source>
          <target state="translated">通过尝试验证来测试连接。</target>
        </trans-unit>
        <trans-unit id="20b77d389f5e8c5e987282b922a807df1f9260e2" translate="yes" xml:space="preserve">
          <source>Test the connection by trying to authenticate. It runs &lt;code&gt;SELECT 1+1 AS result&lt;/code&gt; query.</source>
          <target state="translated">通过尝试进行身份验证来测试连接。它运行 &lt;code&gt;SELECT 1+1 AS result&lt;/code&gt; 查询。</target>
        </trans-unit>
        <trans-unit id="e0143c072d5ac7b543f7a97b25b22cf87a465c03" translate="yes" xml:space="preserve">
          <source>Testing the connection</source>
          <target state="translated">测试连接</target>
        </trans-unit>
        <trans-unit id="c363795bd7fa8fcfababae3f9976a3e94d298a31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.sequelizerc&lt;/code&gt; File</source>
          <target state="translated">该 &lt;code&gt;.sequelizerc&lt;/code&gt; 文件</target>
        </trans-unit>
        <trans-unit id="52fdd6c7b19c53e9c7650c11a173d0518be4c70c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CHAR&lt;/code&gt; and &lt;code&gt;STRING&lt;/code&gt; types expose the &lt;code&gt;BINARY&lt;/code&gt; property</source>
          <target state="translated">在 &lt;code&gt;CHAR&lt;/code&gt; 和 &lt;code&gt;STRING&lt;/code&gt; 类型暴露 &lt;code&gt;BINARY&lt;/code&gt; 属性</target>
        </trans-unit>
        <trans-unit id="96604eb0bb158befed8a640da0e7f3054be98f32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fullName&lt;/code&gt; getter, is an example of how you can define pseudo properties on your models - attributes which are not actually part of your database schema. In fact, pseudo properties can be defined in two ways: using model getters, or by using a column with the &lt;a href=&quot;https://sequelize.org/variable/index.html#static-variable-DataTypes&quot;&gt;&lt;code&gt;VIRTUAL&lt;/code&gt; datatype&lt;/a&gt;. Virtual datatypes can have validations, while getters for virtual attributes cannot.</source>
          <target state="translated">该 &lt;code&gt;fullName&lt;/code&gt; 吸，是如何，你可以在你的模型定义的伪属性的示例-它们其实不是你的数据库架构的一部分属性。实际上，可以通过两种方式定义伪属性：使用模型获取器，或使用具有&lt;a href=&quot;https://sequelize.org/variable/index.html#static-variable-DataTypes&quot;&gt; &lt;code&gt;VIRTUAL&lt;/code&gt; 数据类型&lt;/a&gt;的列。虚拟数据类型可以进行验证，而虚拟属性的获取程序则不能。</target>
        </trans-unit>
        <trans-unit id="b44f8380a2468cdb72b9deb6e94e4793fc900145" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getItem&lt;/code&gt; utility function on &lt;code&gt;Comment&lt;/code&gt; completes the picture - it simply converts the &lt;code&gt;commentable&lt;/code&gt; string into a call to either &lt;code&gt;getImage&lt;/code&gt; or &lt;code&gt;getPost&lt;/code&gt;, providing an abstraction over whether a comment belongs to a post or an image. You can pass a normal options object as a parameter to &lt;code&gt;getItem(options)&lt;/code&gt; to specify any where conditions or includes.</source>
          <target state="translated">&lt;code&gt;Comment&lt;/code&gt; 上的 &lt;code&gt;getItem&lt;/code&gt; 实用程序功能完成了图片-它只是将可 &lt;code&gt;commentable&lt;/code&gt; 字符串转换为对 &lt;code&gt;getImage&lt;/code&gt; 或 &lt;code&gt;getPost&lt;/code&gt; 的调用，从而提供了有关注释属于帖子还是图像的抽象。您可以将常规选项对象作为参数传递给 &lt;code&gt;getItem(options)&lt;/code&gt; ,以指定任何条件或包含条件。</target>
        </trans-unit>
        <trans-unit id="c5af38db2b9d87be8fca742043ab85cd54ed8644" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import&lt;/code&gt; method can also accept a callback as an argument.</source>
          <target state="translated">该 &lt;code&gt;import&lt;/code&gt; 方法也可以接受一个回调作为参数。</target>
        </trans-unit>
        <trans-unit id="7c66c416ba19dd8a604d0fa8c48849d0b7770c55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isolationLevel&lt;/code&gt; can either be set globally when initializing the Sequelize instance or locally for every transaction:</source>
          <target state="translated">该 &lt;code&gt;isolationLevel&lt;/code&gt; 可对每一项交易初始化Sequelize实例或在本地当任全局设置：</target>
        </trans-unit>
        <trans-unit id="aded916b2d52b83cbd3a306bbcaac58553342812" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; argument of hook method would be the second argument provided to the corresponding method or its cloned and extended version.</source>
          <target state="translated">hook方法的 &lt;code&gt;options&lt;/code&gt; 参数将是提供给相应方法或其克隆和扩展版本的第二个参数。</target>
        </trans-unit>
        <trans-unit id="6e08cedd8bd068ee0e858ac36cf905e6a6544cca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transaction&lt;/code&gt; option goes with most other options, which are usually the first argument of a method. For methods that take values, like &lt;code&gt;.create&lt;/code&gt;, &lt;code&gt;.update()&lt;/code&gt;, etc. &lt;code&gt;transaction&lt;/code&gt; should be passed to the option in the second argument. If unsure, refer to the API documentation for the method you are using to be sure of the signature.</source>
          <target state="translated">该 &lt;code&gt;transaction&lt;/code&gt; 选择去与大多数其他选项，这通常是一个方法的第一个参数。对于 &lt;code&gt;.create&lt;/code&gt; 值的方法，如.create， &lt;code&gt;.update()&lt;/code&gt; 等，应将 &lt;code&gt;transaction&lt;/code&gt; 传递给第二个参数中的选项。如果不确定，请参考您使用的方法的API文档以确保签名。</target>
        </trans-unit>
        <trans-unit id="4b9b49b97c6dcd275458969fdd514038c0782971" translate="yes" xml:space="preserve">
          <source>The BLOB datatype allows you to insert data both as strings and as buffers. When you do a find or findAll on a model which has a BLOB column, that data will always be returned as a buffer.</source>
          <target state="translated">BLOB 数据类型允许您以字符串和缓冲区的形式插入数据。当你在一个有BLOB列的模型上进行find或findAll时,该数据将总是以缓冲区的形式返回。</target>
        </trans-unit>
        <trans-unit id="0d6ca5d74c8816ae0ded15e2a7a5beeecbf88579" translate="yes" xml:space="preserve">
          <source>The CLI</source>
          <target state="translated">CLI</target>
        </trans-unit>
        <trans-unit id="7543057877a60db6d5a05a1ccb4e14c360eef266" translate="yes" xml:space="preserve">
          <source>The DAO instance that caused the validation error</source>
          <target state="translated">导致验证错误的DAO实例。</target>
        </trans-unit>
        <trans-unit id="5c2f82b73e030655c59432ce481b35adff70c042" translate="yes" xml:space="preserve">
          <source>The INET type holds an IPv4 or IPv6 host address, and optionally its subnet. Takes 7 or 19 bytes</source>
          <target state="translated">INET类型包含一个IPv4或IPv6主机地址,以及可选的子网。需要7或19个字节</target>
        </trans-unit>
        <trans-unit id="35c885e3e1208b7964c450f516be8caa8371b964" translate="yes" xml:space="preserve">
          <source>The JSON data type in PostgreSQL stores the value as plain text, as opposed to binary representation. If you simply want to store and retrieve a JSON representation, using JSON will take less disk space and less time to build from its input representation. However, if you want to do any operations on the JSON value, you should prefer the JSONB data type described below.</source>
          <target state="translated">PostgreSQL中的JSON数据类型将值存储为纯文本,而不是二进制表示。如果你只是想存储和检索JSON表示,使用JSON将占用更少的磁盘空间和更少的时间从其输入表示建立。但是,如果你想对JSON值进行任何操作,你应该首选下面描述的JSONB数据类型。</target>
        </trans-unit>
        <trans-unit id="4f1ca89726cfb75c61b955405275bfa81fa8f0e1" translate="yes" xml:space="preserve">
          <source>The JSON data type is supported by the PostgreSQL, SQLite, MySQL and MariaDB dialects only.</source>
          <target state="translated">JSON数据类型仅由PostgreSQL、SQLite、MySQL和MariaDB方言支持。</target>
        </trans-unit>
        <trans-unit id="b4c18d45f4c7b31dc5aabb26fb9a9e22f31ce7cc" translate="yes" xml:space="preserve">
          <source>The MACADDR type stores MAC addresses. Takes 6 bytes</source>
          <target state="translated">MACADDR类型存储MAC地址。需要6个字节</target>
        </trans-unit>
        <trans-unit id="6e037bc95bcf7d5b574c2d17b15f920746d615f7" translate="yes" xml:space="preserve">
          <source>The PostgreSQL &lt;code&gt;client_min_messages&lt;/code&gt; session parameter. Set to &lt;code&gt;false&lt;/code&gt; to not override the database's default.</source>
          <target state="translated">PostgreSQL &lt;code&gt;client_min_messages&lt;/code&gt; 会话参数。设置为 &lt;code&gt;false&lt;/code&gt; 不会覆盖数据库的默认值。</target>
        </trans-unit>
        <trans-unit id="92dcd073ff1557550a8981af1e6e839e5e4fae74" translate="yes" xml:space="preserve">
          <source>The PostgreSQL &lt;code&gt;standard_conforming_strings&lt;/code&gt; session parameter. Set to &lt;code&gt;false&lt;/code&gt; to not set the option. WARNING: Setting this to false may expose vulnerabilities and is not recommended!</source>
          <target state="translated">PostgreSQL &lt;code&gt;standard_conforming_strings&lt;/code&gt; 会话参数。设置为 &lt;code&gt;false&lt;/code&gt; 将不设置该选项。警告：将此设置为false可能会暴露漏洞，因此不建议这样做！</target>
        </trans-unit>
        <trans-unit id="ea2917bca3214c2f94009ee7f7e0ef5cef7ed728" translate="yes" xml:space="preserve">
          <source>The SQL that triggered the error</source>
          <target state="translated">触发该错误的SQL</target>
        </trans-unit>
        <trans-unit id="fdfcd4dec9f023d328d1c29bf2ce667d576056f9" translate="yes" xml:space="preserve">
          <source>The Sequelize constructor takes a &lt;code&gt;define&lt;/code&gt; option which will change the default options for all defined models.</source>
          <target state="translated">Sequelize构造函数带有一个 &lt;code&gt;define&lt;/code&gt; 选项，它将更改所有已定义模型的默认选项。</target>
        </trans-unit>
        <trans-unit id="f021a2b45ae6896b6bc054e8bd5ccd034b732703" translate="yes" xml:space="preserve">
          <source>The Sequelize constructor takes a whole slew of options that are documented in the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;API Reference for the Sequelize constructor&lt;/a&gt;.</source>
          <target state="translated">Sequelize构造函数具有大量选项，这些选项&lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;在Sequelize构造函数&lt;/a&gt;的API参考中提供了说明。</target>
        </trans-unit>
        <trans-unit id="c3f32fc062713c89992127673f0ff266e4a6d880" translate="yes" xml:space="preserve">
          <source>The above code tells Sequelize to expect a table named &lt;code&gt;users&lt;/code&gt; in the database with the fields &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt;. The table name is automatically pluralized by default (a library called &lt;a href=&quot;https://www.npmjs.com/package/inflection&quot;&gt;inflection&lt;/a&gt; is used under the hood to do this). This behavior can be stopped for a specific model by using the &lt;code&gt;freezeTableName: true&lt;/code&gt; option, or for all models by using the &lt;code&gt;define&lt;/code&gt; option from the &lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;Sequelize constructor&lt;/a&gt;.</source>
          <target state="translated">上面的代码告诉Sequelize 在数据库中期望一个名为 &lt;code&gt;users&lt;/code&gt; 的表，其字段为 &lt;code&gt;firstName&lt;/code&gt; 和 &lt;code&gt;lastName&lt;/code&gt; 。默认情况下，表名自动自动复数（在&lt;a href=&quot;https://www.npmjs.com/package/inflection&quot;&gt;后台&lt;/a&gt;使用名为inflection的库来执行此操作）。可以通过使用 &lt;code&gt;freezeTableName: true&lt;/code&gt; 选项停止特定模型的行为，也可以使用&lt;a href=&quot;../class/lib/sequelize.js~sequelize#instance-constructor-constructor&quot;&gt;Sequelize构造函数中&lt;/a&gt;的 &lt;code&gt;define&lt;/code&gt; 选项停止所有模型的行为。</target>
        </trans-unit>
        <trans-unit id="8f72de844a359ac7b2754481a3ae1e21505a5382" translate="yes" xml:space="preserve">
          <source>The alias of the relation, in case the model you want to eagerly load is aliased. For &lt;code&gt;hasOne&lt;/code&gt; / &lt;code&gt;belongsTo&lt;/code&gt;, this should be the singular name, and for &lt;code&gt;hasMany&lt;/code&gt;, it should be the plural</source>
          <target state="translated">关系的别名，以防您要急于加载的模型被别名。对于 &lt;code&gt;hasOne&lt;/code&gt; / &lt;code&gt;belongsTo&lt;/code&gt; ，应为单数名称，对于 &lt;code&gt;hasMany&lt;/code&gt; ，应为复数</target>
        </trans-unit>
        <trans-unit id="99efeea290301860aca947970c356a75d984412b" translate="yes" xml:space="preserve">
          <source>The alias of this association. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with &lt;code&gt;plural&lt;/code&gt; and &lt;code&gt;singular&lt;/code&gt; keys. See also the &lt;code&gt;name&lt;/code&gt; option passed to &lt;code&gt;sequelize.define&lt;/code&gt;. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target</source>
          <target state="translated">The alias of this association. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with &lt;code&gt;plural&lt;/code&gt; and &lt;code&gt;singular&lt;/code&gt; keys. See also the &lt;code&gt;name&lt;/code&gt; option passed to &lt;code&gt;sequelize.define&lt;/code&gt; . If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target</target>
        </trans-unit>
        <trans-unit id="b8b5837eb09b93962a6de59344369c9b2dc0dea6" translate="yes" xml:space="preserve">
          <source>The alias of this model, in singular form. See also the &lt;code&gt;name&lt;/code&gt; option passed to &lt;code&gt;sequelize.define&lt;/code&gt;. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target</source>
          <target state="translated">The alias of this model, in singular form. See also the &lt;code&gt;name&lt;/code&gt; option passed to &lt;code&gt;sequelize.define&lt;/code&gt; . If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the singularized name of target</target>
        </trans-unit>
        <trans-unit id="6fcf9c630d31ebc1d75eae65eb6c73992888621e" translate="yes" xml:space="preserve">
          <source>The alias of this model. If you provide a string, it should be plural, and will be singularized using node.inflection. If you want to control the singular version yourself, provide an object with &lt;code&gt;plural&lt;/code&gt; and &lt;code&gt;singular&lt;/code&gt; keys. See also the &lt;code&gt;name&lt;/code&gt; option passed to &lt;code&gt;sequelize.define&lt;/code&gt;. If you create multiple associations between the same tables, you should provide an alias to be able to distinguish between them. If you provide an alias when creating the association, you should provide the same alias when eager loading and when getting associated models. Defaults to the pluralized name of target</source>
          <target state="translated">此模型的别名。如果提供字符串，则该字符串应为复数形式，并将使用node.inflection进行单数化。如果要自己控制单数形式，请为对象提供 &lt;code&gt;plural&lt;/code&gt; 和 &lt;code&gt;singular&lt;/code&gt; 键。另请参阅传递给 &lt;code&gt;sequelize.define&lt;/code&gt; 的 &lt;code&gt;name&lt;/code&gt; 选项。如果在同一表之间创建多个关联，则应提供一个别名以区分它们。如果在创建关联时提供别名，则在急于加载和获取关联模型时应提供相同的别名。默认为目标的复数名称</target>
        </trans-unit>
        <trans-unit id="6723f18b3bbf968c425605ca9dc759577bfe8738" translate="yes" xml:space="preserve">
          <source>The array or object must contain all bound values or Sequelize will throw an exception. This applies even to cases in which the database may ignore the bound parameter.</source>
          <target state="translated">数组或对象必须包含所有的绑定值,否则Sequelize将抛出一个异常。这甚至适用于数据库可能忽略绑定参数的情况。</target>
        </trans-unit>
        <trans-unit id="0ad94612989aa9f318b27d4d20664339044c9613" translate="yes" xml:space="preserve">
          <source>The association you want to eagerly load. (This can be used instead of providing a model/as pair)</source>
          <target state="translated">你想急于加载的关联。(可以用它来代替提供一个model/as对)</target>
        </trans-unit>
        <trans-unit id="eeb0e6deb9b0e80d8f8265fdbac4c078f3171b7b" translate="yes" xml:space="preserve">
          <source>The attr can either be an object taken from &lt;code&gt;Model.rawAttributes&lt;/code&gt; (for example &lt;code&gt;Model.rawAttributes.id&lt;/code&gt; or &lt;code&gt;Model.rawAttributes.name&lt;/code&gt;). The attribute should be defined in your model definition. The attribute can also be an object from one of the sequelize utility functions (&lt;code&gt;sequelize.fn&lt;/code&gt;, &lt;code&gt;sequelize.col&lt;/code&gt; etc.)</source>
          <target state="translated">attr可以是从 &lt;code&gt;Model.rawAttributes&lt;/code&gt; 中获取的对象（例如 &lt;code&gt;Model.rawAttributes.id&lt;/code&gt; 或 &lt;code&gt;Model.rawAttributes.name&lt;/code&gt; ）。该属性应在模型定义中定义。该属性也可以是sequelize实用程序功能之一（ &lt;code&gt;sequelize.fn&lt;/code&gt; ， &lt;code&gt;sequelize.col&lt;/code&gt; 等）中的对象。</target>
        </trans-unit>
        <trans-unit id="4f1a633ffadc1e2c2bc95e3c735fd1cf866d44c8" translate="yes" xml:space="preserve">
          <source>The attribute to aggregate over. Can be a field name or *</source>
          <target state="translated">要汇总的属性。可以是字段名或*。</target>
        </trans-unit>
        <trans-unit id="22739ed01f959f4fdce30289f8b662f6f4a480e5" translate="yes" xml:space="preserve">
          <source>The attribute, which can be either an attribute object from &lt;code&gt;Model.rawAttributes&lt;/code&gt; or a sequelize object, for example an instance of &lt;code&gt;sequelize.fn&lt;/code&gt;. For simple string attributes, use the POJO syntax</source>
          <target state="translated">该属性可以是 &lt;code&gt;Model.rawAttributes&lt;/code&gt; 中的属性对象，也可以是sequelize对象，例如 &lt;code&gt;sequelize.fn&lt;/code&gt; 的实例。对于简单的字符串属性，请使用POJO语法</target>
        </trans-unit>
        <trans-unit id="2729266f67f2a23ec11b7b4334746cfee6eef44b" translate="yes" xml:space="preserve">
          <source>The callback is called with the transaction object, and should return a promise. If the promise is resolved, the transaction commits; if the promise rejects, the transaction rolls back</source>
          <target state="translated">回调与事务对象一起调用,并应返回一个承诺。如果承诺被解决,事务就会提交;如果承诺被拒绝,事务就会回滚。</target>
        </trans-unit>
        <trans-unit id="89f67ef86d7f079615ec0e89c9fb9283c0562afc" translate="yes" xml:space="preserve">
          <source>The character(s) that separates the schema name from the table name</source>
          <target state="translated">将模式名与表名分开的字符。</target>
        </trans-unit>
        <trans-unit id="7bffb68a98cf41f92a6a5b6847d45ca564723683" translate="yes" xml:space="preserve">
          <source>The cidr type holds an IPv4 or IPv6 network specification. Takes 7 or 19 bytes.</source>
          <target state="translated">cidr类型持有IPv4或IPv6网络规范。需要7或19个字节。</target>
        </trans-unit>
        <trans-unit id="08288fcdafa5090ff642d3378e7c64c514abd839" translate="yes" xml:space="preserve">
          <source>The code created a new instance. So when we already have an instance ...</source>
          <target state="translated">该代码创建了一个新的实例。所以当我们已经有了一个实例......。</target>
        </trans-unit>
        <trans-unit id="86c3eb751548d29886ece41261fcf102e99bb6c1" translate="yes" xml:space="preserve">
          <source>The column of the foreign table that this column references</source>
          <target state="translated">本列引用的外表的列。</target>
        </trans-unit>
        <trans-unit id="086f5b689f580197262a5b2e07b9612e1b03fe5b" translate="yes" xml:space="preserve">
          <source>The comment option can also be used on a table, see &lt;a href=&quot;models-definition#configuration&quot;&gt;model configuration&lt;/a&gt;.</source>
          <target state="translated">comment选项也可以在表上使用，请参阅&lt;a href=&quot;models-definition#configuration&quot;&gt;模型配置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="307ca9cde38886869f5fa3f4a7f13e21882c3f36" translate="yes" xml:space="preserve">
          <source>The condition. Can be both a simply type, or a further condition (&lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;.literal&lt;/code&gt; etc.)</source>
          <target state="translated">条件。可以是简单类型，也可以是其他条件（ &lt;code&gt;or&lt;/code&gt; ， &lt;code&gt;and&lt;/code&gt; ， &lt;code&gt;.literal&lt;/code&gt; 等）</target>
        </trans-unit>
        <trans-unit id="b12da706808f947908ea3c7e4a43a6c6df973b54" translate="yes" xml:space="preserve">
          <source>The connection specific error which triggered this one</source>
          <target state="translated">触发这个连接的特定错误</target>
        </trans-unit>
        <trans-unit id="f11daf184810825d2e034f106bcdd1a52e3ca438" translate="yes" xml:space="preserve">
          <source>The constraints can be configured in a transaction like this. It will trigger a query once the transaction has been started and set the constraints to be checked at the very end of the transaction.</source>
          <target state="translated">在事务中可以这样配置约束条件。它将在事务启动后触发一个查询,并在事务的最后设置约束条件进行检查。</target>
        </trans-unit>
        <trans-unit id="7f82e34423c4aa983880f84a931ac15a57ef5e9c" translate="yes" xml:space="preserve">
          <source>The created target model</source>
          <target state="translated">创建的目标模型</target>
        </trans-unit>
        <trans-unit id="8365a8cc325cbcee0b79e12d5dd24da474986bd1" translate="yes" xml:space="preserve">
          <source>The custom name for unique constraint.</source>
          <target state="translated">独特约束的自定义名称。</target>
        </trans-unit>
        <trans-unit id="26d8528d64198217cd0a2792bd30ba499b76275f" translate="yes" xml:space="preserve">
          <source>The database may add further restrictions to this. Bind parameters cannot be SQL keywords, nor table or column names. They are also ignored in quoted text or data. In PostgreSQL it may also be needed to typecast them, if the type cannot be inferred from the context &lt;code&gt;$1::varchar&lt;/code&gt;.</source>
          <target state="translated">数据库可能对此增加了更多限制。绑定参数不能是SQL关键字，也不能是表名或列名。在带引号的文本或数据中也将忽略它们。在PostgreSQL中，如果不能从上下文 &lt;code&gt;$1::varchar&lt;/code&gt; 推断类型，可能还需要对它们进行类型转换。</target>
        </trans-unit>
        <trans-unit id="133c42933eb9f6bdcc738e29e1ecb28fe8f85820" translate="yes" xml:space="preserve">
          <source>The database name.</source>
          <target state="translated">数据库名称;</target>
        </trans-unit>
        <trans-unit id="c7b14aedd0c4e517f0bbd0dc1afb0301b4627da0" translate="yes" xml:space="preserve">
          <source>The default casing is &lt;code&gt;camelCase&lt;/code&gt;. If the source model is configured with &lt;code&gt;underscored: true&lt;/code&gt; the foreignKey will be created with field &lt;code&gt;snake_case&lt;/code&gt;.</source>
          <target state="translated">默认大小写为 &lt;code&gt;camelCase&lt;/code&gt; 。如果源模型配置有 &lt;code&gt;underscored: true&lt;/code&gt; ，则将使用 &lt;code&gt;snake_case&lt;/code&gt; 字段创建foreignKey。</target>
        </trans-unit>
        <trans-unit id="ab6a1cee9dd55a28134e5eb727ede271bd531534" translate="yes" xml:space="preserve">
          <source>The default scope can be removed by calling &lt;code&gt;.unscoped()&lt;/code&gt;, &lt;code&gt;.scope(null)&lt;/code&gt;, or by invoking another scope:</source>
          <target state="translated">默认范围可以通过调用被移除 &lt;code&gt;.unscoped()&lt;/code&gt; ， &lt;code&gt;.scope(null)&lt;/code&gt; ，或通过调用另一范围：</target>
        </trans-unit>
        <trans-unit id="b7386af5698cd007ddf66e78123acc72fab2f4ea" translate="yes" xml:space="preserve">
          <source>The default scope is always applied. This means, that with the model definition above, &lt;code&gt;Project.findAll()&lt;/code&gt; will create the following query:</source>
          <target state="translated">始终应用默认范围。这意味着，使用上面的模型定义， &lt;code&gt;Project.findAll()&lt;/code&gt; 将创建以下查询：</target>
        </trans-unit>
        <trans-unit id="665cbb172b6490eaddc986b85ff39499207a5181" translate="yes" xml:space="preserve">
          <source>The description of a database column</source>
          <target state="translated">数据库列的描述</target>
        </trans-unit>
        <trans-unit id="d84e52eb436e545fc5c78ff373642e0e5f89fc49" translate="yes" xml:space="preserve">
          <source>The dialect of the database you are connecting to. One of mysql, postgres, sqlite and mssql.</source>
          <target state="translated">你所连接的数据库的方言。mysql、postgres、sqlite和mssql中的一种。</target>
        </trans-unit>
        <trans-unit id="88d26fe16e5692696255a5355d0f4f8be2e688ab" translate="yes" xml:space="preserve">
          <source>The field that triggered the validation error</source>
          <target state="translated">触发验证错误的字段</target>
        </trans-unit>
        <trans-unit id="dc12ac79eaf881af2a210995e506e55117bb8e15" translate="yes" xml:space="preserve">
          <source>The fields to insert / update. Defaults to all changed fields</source>
          <target state="translated">要插入/更新的字段。默认为所有更改的字段。</target>
        </trans-unit>
        <trans-unit id="82b4a90983df6d340d9ebb2913376b001f99f3b5" translate="yes" xml:space="preserve">
          <source>The following example would return successful:</source>
          <target state="translated">下面的例子会返回成功。</target>
        </trans-unit>
        <trans-unit id="280f1e7b08f7b7110bec1c76d91b0af4a17b5d16" translate="yes" xml:space="preserve">
          <source>The following hooks will emit whenever you're editing a single object</source>
          <target state="translated">每当你编辑一个对象时,就会发出以下钩子。</target>
        </trans-unit>
        <trans-unit id="0e6a1b0b86882a21b759b1ffd75f905d1a7598a6" translate="yes" xml:space="preserve">
          <source>The following is an example of a migration that performs two changes in the database, using a transaction to ensure that all instructions are successfully executed or rolled back in case of failure:</source>
          <target state="translated">下面是一个在数据库中执行两个变化的迁移示例,使用事务来确保所有指令成功执行或在失败时回滚。</target>
        </trans-unit>
        <trans-unit id="3dc82f0763e4ab04ff35cac14d85b168f30e6b9f" translate="yes" xml:space="preserve">
          <source>The following skeleton shows a typical migration file.</source>
          <target state="translated">下面的骨架是一个典型的迁移文件。</target>
        </trans-unit>
        <trans-unit id="a10c7d3ee357a66ed02d0cefd56151488e7581d5" translate="yes" xml:space="preserve">
          <source>The foreign key column in Picture will now be called &lt;code&gt;uid&lt;/code&gt; instead of the default &lt;code&gt;userId&lt;/code&gt;.</source>
          <target state="translated">现在，Picture中的外键列将被称为 &lt;code&gt;uid&lt;/code&gt; 而不是默认的 &lt;code&gt;userId&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="529cad56c0cb70caba210ae4d8aa6458b6284149" translate="yes" xml:space="preserve">
          <source>The foreign keys can be configured like this. It will create a foreign key that will check the constraints immediately when the data was inserted.</source>
          <target state="translated">外键可以这样配置。它将创建一个外键,当数据被插入时,将立即检查约束。</target>
        </trans-unit>
        <trans-unit id="793f0633fe67cfcf9f0c69748cf2894da9604c8b" translate="yes" xml:space="preserve">
          <source>The function passed to &lt;code&gt;afterCommit&lt;/code&gt; can optionally return a promise that will resolve before the promise chain that created the transaction resolves</source>
          <target state="translated">传递给 &lt;code&gt;afterCommit&lt;/code&gt; 的函数可以选择返回一个promise，该promise将在创建事务的promise链解析之前</target>
        </trans-unit>
        <trans-unit id="391fd95e64f40aa9733294c80cb361252d715dc2" translate="yes" xml:space="preserve">
          <source>The function to use for aggregation, e.g. sum, max etc.</source>
          <target state="translated">用于聚合的函数,如sum、max等。</target>
        </trans-unit>
        <trans-unit id="000d55600122d86f1eba23f47b3d17f67612ff60" translate="yes" xml:space="preserve">
          <source>The function you want to call</source>
          <target state="translated">您要调用的函数</target>
        </trans-unit>
        <trans-unit id="90c3ebe86ec649ba3e67ec8bd89813b5825ec277" translate="yes" xml:space="preserve">
          <source>The host of the relational database.</source>
          <target state="translated">关系型数据库的主机。</target>
        </trans-unit>
        <trans-unit id="078148a6e892df7a20d488625d335ca2bfefddd8" translate="yes" xml:space="preserve">
          <source>The interface that Sequelize uses to talk to all databases</source>
          <target state="translated">Sequelize用来与所有数据库对话的接口。</target>
        </trans-unit>
        <trans-unit id="0b73ca2f73dbf5fbdcb5f9c41700b408a0e80f3d" translate="yes" xml:space="preserve">
          <source>The key difference is that the managed transaction uses a callback that expects a promise to be returned to it while the unmanaged transaction returns a promise.</source>
          <target state="translated">关键的区别在于,托管事务使用了一个回调,期望向其返回一个承诺,而非托管事务则返回一个承诺。</target>
        </trans-unit>
        <trans-unit id="78ad99f68c3f49de5dac894a3e535c3b22d08e81" translate="yes" xml:space="preserve">
          <source>The last option is the default in PostgreSQL and won't allow you to dynamically change the rule in a transaction. See &lt;a href=&quot;transactions#options&quot;&gt;the transaction section&lt;/a&gt; for further information.</source>
          <target state="translated">最后一个选项是PostgreSQL中的默认选项，不允许您动态更改事务中的规则。有关更多信息，请参见&lt;a href=&quot;transactions#options&quot;&gt;交易部分&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ec4984d2ddd30205a2e231be149e2871ddd539b9" translate="yes" xml:space="preserve">
          <source>The library for MSSQL is&lt;code&gt;tedious@^6.0.0&lt;/code&gt; You'll just need to define the dialect. Please note: &lt;code&gt;tedious@^6.0.0&lt;/code&gt; requires you to nest MSSQL specific options inside an additional &lt;code&gt;options&lt;/code&gt;-object inside the &lt;code&gt;dialectOptions&lt;/code&gt;-object.</source>
          <target state="translated">MSSQL的库是 &lt;code&gt;tedious@^6.0.0&lt;/code&gt; 您只需要定义方言即可。请注意： &lt;code&gt;tedious@^6.0.0&lt;/code&gt; 要求您将MSSQL特定选项嵌套在 &lt;code&gt;dialectOptions&lt;/code&gt; 内的其他 &lt;code&gt;options&lt;/code&gt; -object内。</target>
        </trans-unit>
        <trans-unit id="1658788de2d8228e11cec2bccf15ee08bd03c17f" translate="yes" xml:space="preserve">
          <source>The maximum time, in milliseconds, that a connection can be idle before being released.</source>
          <target state="translated">连接在被释放前可以闲置的最长时间,以毫秒为单位。</target>
        </trans-unit>
        <trans-unit id="ba55d264e60dd5d5b5ddf45b2ce564066fb762a9" translate="yes" xml:space="preserve">
          <source>The maximum time, in milliseconds, that pool will try to get connection before throwing error</source>
          <target state="translated">池在抛出错误之前尝试获取连接的最长时间(毫秒)。</target>
        </trans-unit>
        <trans-unit id="5ee71bd71da0b1e5f70afac2c78ad97814aea849" translate="yes" xml:space="preserve">
          <source>The merge illustrated above works in the exact same way regardless of the order applied to the scopes. The order would only make a difference if a certain option was set by two different scopes - which is not the case of the above example, since each scope does a different thing.</source>
          <target state="translated">无论应用于作用域的顺序如何,上述的合并都以完全相同的方式工作。只有当某个选项被两个不同的作用域设置时,顺序才会产生差异--上面的例子中并没有这种情况,因为每个作用域做的事情都不同。</target>
        </trans-unit>
        <trans-unit id="768b334f10219b8ad448c59e67cb8742c9f47374" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;findOrCreate&lt;/code&gt; can be used to check if a certain element already exists in the database. If that is the case the method will result in a respective instance. If the element does not yet exist, it will be created.</source>
          <target state="translated">&lt;code&gt;findOrCreate&lt;/code&gt; 方法可用于检查数据库中是否已存在某个元素。在这种情况下，该方法将导致相应的实例。如果该元素尚不存在，则将创建它。</target>
        </trans-unit>
        <trans-unit id="3d86660c6baef8b679849a118c8e3209fbf8ab29" translate="yes" xml:space="preserve">
          <source>The method to create the index by (&lt;code&gt;USING&lt;/code&gt; statement in SQL). BTREE and HASH are supported by mysql and postgres, and postgres additionally supports GIST and GIN.</source>
          <target state="translated">通过（在SQL中 &lt;code&gt;USING&lt;/code&gt; 语句）创建索引的方法。mysql和postgres支持BTREE和HASH，而postgres还支持GIST和GIN。</target>
        </trans-unit>
        <trans-unit id="2ba17aa0bb5f9dc7d5841a219c942e597585fcbc" translate="yes" xml:space="preserve">
          <source>The model used to join both sides of the N:M association.</source>
          <target state="translated">用于连接N:M关联双方的模型。</target>
        </trans-unit>
        <trans-unit id="344f38a91e7d9dc5d063993463bcdaa555327fc6" translate="yes" xml:space="preserve">
          <source>The model you want to eagerly load</source>
          <target state="translated">您想急切加载的模型</target>
        </trans-unit>
        <trans-unit id="7958ce6ba41d78327583cdbfd8cb6017bf350a54" translate="yes" xml:space="preserve">
          <source>The name of a model defined with Sequelize.define</source>
          <target state="translated">用Sequelize.define定义的模型名称。</target>
        </trans-unit>
        <trans-unit id="20779cb99d8b313c45bb680661f5068180a4b366" translate="yes" xml:space="preserve">
          <source>The name of the attribute to use as the key for the association in the source table. Defaults to the primary key of the source table</source>
          <target state="translated">要用作源表中关联的键的属性名称。默认为源表的主键。</target>
        </trans-unit>
        <trans-unit id="2c370d4fbb6793a135a98f2d34ffdc1efa7aa44d" translate="yes" xml:space="preserve">
          <source>The name of the attribute to use as the key for the association in the target table. Defaults to the primary key of the target table</source>
          <target state="translated">要用作目标表中关联的键的属性名称。默认为目标表的主键。</target>
        </trans-unit>
        <trans-unit id="93c15edec87bb8d344200119a7dc2a4a142ddf00" translate="yes" xml:space="preserve">
          <source>The name of the column</source>
          <target state="translated">栏目名称</target>
        </trans-unit>
        <trans-unit id="8c4f59698903f75b8bd6022cb4552203a39c97a3" translate="yes" xml:space="preserve">
          <source>The name of the database</source>
          <target state="translated">数据库的名称</target>
        </trans-unit>
        <trans-unit id="22a68705226fe8673395221999a0d393f6c5865e" translate="yes" xml:space="preserve">
          <source>The name of the field to use as the key for the association in the source table. Defaults to the primary key of the source table</source>
          <target state="translated">要用作源表中关联的键的字段名称。默认为源表的主键。</target>
        </trans-unit>
        <trans-unit id="15885ab4b151a1a790fcb10a8b5e2b0d66ba2eec" translate="yes" xml:space="preserve">
          <source>The name of the foreign key attribute in the source table or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of target + primary key of target</source>
          <target state="translated">源表中外键属性的名称或表示外列的类型定义的对象（有关语法，请参见 &lt;code&gt;Sequelize.define&lt;/code&gt; ）。使用对象时，可以添加 &lt;code&gt;name&lt;/code&gt; 属性来设置列的名称。默认为目标名称+目标主键</target>
        </trans-unit>
        <trans-unit id="eb6459fe5afc725ce007c909a06d98e3db4d2d06" translate="yes" xml:space="preserve">
          <source>The name of the foreign key attribute in the target model or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of source + primary key of source</source>
          <target state="translated">目标模型中外键属性的名称，或表示外列的类型定义的对象（有关语法，请参见 &lt;code&gt;Sequelize.define&lt;/code&gt; ）。使用对象时，可以添加 &lt;code&gt;name&lt;/code&gt; 属性来设置列的名称。默认为源名称+源主键</target>
        </trans-unit>
        <trans-unit id="42469972a87959d8071e3f01dc78f6c8d2553e4f" translate="yes" xml:space="preserve">
          <source>The name of the foreign key in the join table (representing the source model) or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of source + primary key of source</source>
          <target state="translated">&lt;code&gt;Sequelize.define&lt;/code&gt; 表中的外键名称（代表源模型）或代表外键类型定义的对象（有关语法，请参见Sequelize.define）。使用对象时，可以添加 &lt;code&gt;name&lt;/code&gt; 属性来设置列的名称。默认为源名称+源主键</target>
        </trans-unit>
        <trans-unit id="fe4d422c72187bb994f27a984373dd051447a90f" translate="yes" xml:space="preserve">
          <source>The name of the foreign key in the join table (representing the target model) or an object representing the type definition for the other column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of target + primary key of target</source>
          <target state="translated">&lt;code&gt;Sequelize.define&lt;/code&gt; 表中的外键名称（代表目标模型）或代表另一列的类型定义的对象（有关语法，请参见Sequelize.define）。使用对象时，可以添加 &lt;code&gt;name&lt;/code&gt; 属性来设置列的名称。默认为目标名称+目标主键</target>
        </trans-unit>
        <trans-unit id="38709c5641379045db5e5d83ba646ba0c902d682" translate="yes" xml:space="preserve">
          <source>The name of the foreign key in the target table or an object representing the type definition for the foreign column (see &lt;code&gt;Sequelize.define&lt;/code&gt; for syntax). When using an object, you can add a &lt;code&gt;name&lt;/code&gt; property to set the name of the column. Defaults to the name of source + primary key of source</source>
          <target state="translated">目标表中外键的名称或表示外列的类型定义的对象（有关语法，请参见 &lt;code&gt;Sequelize.define&lt;/code&gt; ）。使用对象时，可以添加 &lt;code&gt;name&lt;/code&gt; 属性来设置列的名称。默认为源名称+源主键</target>
        </trans-unit>
        <trans-unit id="7a7cf09bcd6575bf593ecb7e44a875789583a801" translate="yes" xml:space="preserve">
          <source>The name of the index. Defaults to model name + _ + fields concatenated</source>
          <target state="translated">索引的名称。默认为模型名称+_+字段连在一起。</target>
        </trans-unit>
        <trans-unit id="e0dee175f7513db4bb65e2da34923be2d4fb8f8d" translate="yes" xml:space="preserve">
          <source>The name of the language that the function is implemented in</source>
          <target state="translated">函数实现的语言名称。</target>
        </trans-unit>
        <trans-unit id="901c3e2315864e0cfc881f469ee9e42e145e1941" translate="yes" xml:space="preserve">
          <source>The name of the model on which the update was attempted</source>
          <target state="translated">试图更新的模型名称</target>
        </trans-unit>
        <trans-unit id="4ea96b65632c0d275cf41855cbbc4cfc2e78bbea" translate="yes" xml:space="preserve">
          <source>The name of the model. The model will be stored in &lt;code&gt;sequelize.models&lt;/code&gt; under this name</source>
          <target state="translated">模型的名称。该模型将以该名称存储在 &lt;code&gt;sequelize.models&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="fa9b6db53f226bce8b7814cf4cd827147473b678" translate="yes" xml:space="preserve">
          <source>The name of the schema</source>
          <target state="translated">模式的名称</target>
        </trans-unit>
        <trans-unit id="4a337049980fb26ef87b1957b77e10b1adaa13d4" translate="yes" xml:space="preserve">
          <source>The name of the scope. Use &lt;code&gt;defaultScope&lt;/code&gt; to override the default scope</source>
          <target state="translated">范围的名称。使用 &lt;code&gt;defaultScope&lt;/code&gt; 覆盖默认范围</target>
        </trans-unit>
        <trans-unit id="689b7c83b43fba0e2101546e9d74f61d1a062d93" translate="yes" xml:space="preserve">
          <source>The name of the table that is used to join source and target in n:m associations. Can also be a sequelize model if you want to define the junction table yourself and add extra attributes to it.</source>
          <target state="translated">用于在n:m关联中连接源和目标的表的名称。如果你想自己定义连接表并为其添加额外的属性,也可以是一个sequelize模型。</target>
        </trans-unit>
        <trans-unit id="6408e2ecf1340ab31daec80973b0b23a6dc6fdf2" translate="yes" xml:space="preserve">
          <source>The name of the template from which to create the new database, PostgreSQL only</source>
          <target state="translated">用于创建新数据库的模板名称,仅限PostgreSQL。</target>
        </trans-unit>
        <trans-unit id="3af644ca8cb4bd3901646f8c9686c10ad3f438f9" translate="yes" xml:space="preserve">
          <source>The new range can be used in model definitions as &lt;code&gt;Sequelize.RANGE(Sequelize.NEWTYPE)&lt;/code&gt; or &lt;code&gt;DataTypes.RANGE(DataTypes.NEWTYPE)&lt;/code&gt;.</source>
          <target state="translated">新范围可在模型定义中用作 &lt;code&gt;Sequelize.RANGE(Sequelize.NEWTYPE)&lt;/code&gt; 或 &lt;code&gt;DataTypes.RANGE(DataTypes.NEWTYPE)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3d7de3db43f176261838315f9462534066abc21" translate="yes" xml:space="preserve">
          <source>The next is an example of a migration that has a foreign key. You can use references to specify a foreign key:</source>
          <target state="translated">接下来是一个有外键的迁移的例子。你可以使用引用来指定一个外键。</target>
        </trans-unit>
        <trans-unit id="e90d9ad1b9b3b4f1a236dc0cc182271fbe723b0e" translate="yes" xml:space="preserve">
          <source>The next is an example of a migration that has uses async/await where you create an unique index on a new column:</source>
          <target state="translated">接下来是一个使用async/await的迁移的例子,在这个例子中,你在一个新的列上创建一个唯一的索引。</target>
        </trans-unit>
        <trans-unit id="5bfd201c5d2f64d334aaed75ca93f6250c27f3e0" translate="yes" xml:space="preserve">
          <source>The number of destroyed rows</source>
          <target state="translated">销毁的行数</target>
        </trans-unit>
        <trans-unit id="6081ff3872966efe1d8dfd421d4fb7860123280f" translate="yes" xml:space="preserve">
          <source>The number to decrement by</source>
          <target state="translated">递减的数字</target>
        </trans-unit>
        <trans-unit id="30c2b338b0c6fb53c4b5c1dd307e605378770430" translate="yes" xml:space="preserve">
          <source>The number to increment by</source>
          <target state="translated">递增的数字</target>
        </trans-unit>
        <trans-unit id="5519b26afd29019553644d95f3657c0b4ef9b9ea" translate="yes" xml:space="preserve">
          <source>The only way to call beforeDestroy/afterDestroy hooks are on associations with &lt;code&gt;onDelete: 'cascade'&lt;/code&gt; and the option &lt;code&gt;hooks: true&lt;/code&gt;. For instance:</source>
          <target state="translated">调用beforeDestroy / afterDestroy挂钩的唯一方法是与 &lt;code&gt;onDelete: 'cascade'&lt;/code&gt; 和选项 &lt;code&gt;hooks: true&lt;/code&gt; 关联。例如：</target>
        </trans-unit>
        <trans-unit id="c69a63575e1fb55daa7f9a2dfde0c6053bf26ef6" translate="yes" xml:space="preserve">
          <source>The options object that you pass to &lt;code&gt;findAndCountAll&lt;/code&gt; is the same as for &lt;code&gt;findAll&lt;/code&gt; (described below).</source>
          <target state="translated">您传递给 &lt;code&gt;findAndCountAll&lt;/code&gt; 的options对象与 &lt;code&gt;findAll&lt;/code&gt; 相同（如下所述）。</target>
        </trans-unit>
        <trans-unit id="a45202cbcffdecef1bfb35227b61eaaaeef09d0e" translate="yes" xml:space="preserve">
          <source>The options passed to Model.destroy in addition to truncate</source>
          <target state="translated">传递给Model.destroy的选项除了truncate之外,还有</target>
        </trans-unit>
        <trans-unit id="3f3dcd71f3878dfff6b16011edbaab2ef1e64db1" translate="yes" xml:space="preserve">
          <source>The options passed to each call to Model.drop</source>
          <target state="translated">传递给每次调用Model.drop的选项。</target>
        </trans-unit>
        <trans-unit id="b843160b62331068336d27cc8d45b2412cdff08d" translate="yes" xml:space="preserve">
          <source>The parameters for the sql that triggered the error</source>
          <target state="translated">触发错误的SQL的参数。</target>
        </trans-unit>
        <trans-unit id="b7e618cc7e765bd054110930a05bbf6f5cafdacb" translate="yes" xml:space="preserve">
          <source>The passed &lt;code&gt;queryInterface&lt;/code&gt; object can be used to modify the database. The &lt;code&gt;Sequelize&lt;/code&gt; object stores the available data types such as &lt;code&gt;STRING&lt;/code&gt; or &lt;code&gt;INTEGER&lt;/code&gt;. Function &lt;code&gt;up&lt;/code&gt; or &lt;code&gt;down&lt;/code&gt; should return a &lt;code&gt;Promise&lt;/code&gt;. Let's look at an example:</source>
          <target state="translated">传递的 &lt;code&gt;queryInterface&lt;/code&gt; 对象可用于修改数据库。所述 &lt;code&gt;Sequelize&lt;/code&gt; 对象存储可用的数据类型，如 &lt;code&gt;STRING&lt;/code&gt; 或 &lt;code&gt;INTEGER&lt;/code&gt; 。功能 &lt;code&gt;up&lt;/code&gt; 或 &lt;code&gt;down&lt;/code&gt; 应返回 &lt;code&gt;Promise&lt;/code&gt; 。让我们看一个例子：</target>
        </trans-unit>
        <trans-unit id="d2533745943844afbedf7eb8255a5190f883bdec" translate="yes" xml:space="preserve">
          <source>The password which is used to authenticate against the database.</source>
          <target state="translated">用于对数据库进行验证的密码。</target>
        </trans-unit>
        <trans-unit id="e964b1bc1afa7e133edcfa208521202aaf1336e1" translate="yes" xml:space="preserve">
          <source>The password which is used to authenticate against the database. Supports SQLCipher encryption for SQLite.</source>
          <target state="translated">用于对数据库进行认证的密码。支持SQLite的SQLCipher加密。</target>
        </trans-unit>
        <trans-unit id="d1f9da31741290e9b21dee89de285e5d49b6e9b8" translate="yes" xml:space="preserve">
          <source>The path to be checked for error items</source>
          <target state="translated">要检查错误项目的路径</target>
        </trans-unit>
        <trans-unit id="e666a85eaccb1faddd6ef50cb44be68ea6f3ce05" translate="yes" xml:space="preserve">
          <source>The path to the file that holds the model you want to import. If the part is relative, it will be resolved relatively to the calling file</source>
          <target state="translated">您要导入的模型的文件路径。如果该部分是相对的,它将相对于调用的文件进行解析。</target>
        </trans-unit>
        <trans-unit id="52ec3b98cef1dcaeea55cc63084c0f82417242c6" translate="yes" xml:space="preserve">
          <source>The polymorphic association can be implemented with an &lt;em&gt;association scope&lt;/em&gt; :</source>
          <target state="translated">多态关联可以通过&lt;em&gt;关联范围实现&lt;/em&gt;：</target>
        </trans-unit>
        <trans-unit id="ccdd83d9259d4f504d2c47076b673df711befe8f" translate="yes" xml:space="preserve">
          <source>The port of the relational database.</source>
          <target state="translated">关系型数据库的端口。</target>
        </trans-unit>
        <trans-unit id="9a65ac5ab95179f410b68d283a2ce4caa4e100b0" translate="yes" xml:space="preserve">
          <source>The possible isolations levels to use when starting a transaction:</source>
          <target state="translated">启动交易时可能使用的隔离级别。</target>
        </trans-unit>
        <trans-unit id="cadc5244d3fbd7d24b1c5864d52995cd667e11c7" translate="yes" xml:space="preserve">
          <source>The previous example can be extended to support an association alias.</source>
          <target state="translated">前面的例子可以扩展为支持关联别名。</target>
        </trans-unit>
        <trans-unit id="0e7860e1e9fe6157f068d6e05ea4c9ba937f1820" translate="yes" xml:space="preserve">
          <source>The promise fulfills if and only if validation successful; otherwise it rejects an Error instance containing { field name : [error msgs] } entries.</source>
          <target state="translated">如果且仅当验证成功时,承诺才会实现;否则,它拒绝包含{字段名:[error msgs]}条目的错误实例。</target>
        </trans-unit>
        <trans-unit id="c7345c3a97b1369d2ea2bf0cee0e1778a424ab23" translate="yes" xml:space="preserve">
          <source>The promise returns an array with one or two elements. The first element is always the number of affected rows, while the second element is the actual affected rows (only supported in postgres with &lt;code&gt;options.returning&lt;/code&gt; true).</source>
          <target state="translated">promise返回一个包含一个或两个元素的数组。第一个元素始终是受影响的行数，而第二个元素是实际受影响的行（仅在带有 &lt;code&gt;options.returning&lt;/code&gt; true的postgres中支持）。</target>
        </trans-unit>
        <trans-unit id="b66998033b01ad0f71a1f99fd1205004d74f54f7" translate="yes" xml:space="preserve">
          <source>The protocol of the relational database.</source>
          <target state="translated">关系型数据库的协议。</target>
        </trans-unit>
        <trans-unit id="9b65629117d86e6ea7f1be1d190a811c13b665fb" translate="yes" xml:space="preserve">
          <source>The query above will only count users who have an active profile, because &lt;code&gt;required&lt;/code&gt; is implicitly set to true when you add a where clause to the include.</source>
          <target state="translated">上面的查询将仅统计具有活动配置文件的用户，因为在将include子句添加到include时， &lt;code&gt;required&lt;/code&gt; 被隐式设置为true。</target>
        </trans-unit>
        <trans-unit id="f17651b8defa7a688a238ee9c850c88d216bbd4b" translate="yes" xml:space="preserve">
          <source>The query above will return all users, and all their instruments, but only those teachers associated with &lt;code&gt;Woodstock Music School&lt;/code&gt;.</source>
          <target state="translated">上面的查询将返回所有用户及其所有乐器，但仅返回与 &lt;code&gt;Woodstock Music School&lt;/code&gt; 相关的那些老师。</target>
        </trans-unit>
        <trans-unit id="882e95417cd6d361e8a21202698fdccdb38d7585" translate="yes" xml:space="preserve">
          <source>The relation between &lt;code&gt;tasks&lt;/code&gt; and &lt;code&gt;users&lt;/code&gt; model injects the &lt;code&gt;userId&lt;/code&gt; foreign key on &lt;code&gt;tasks&lt;/code&gt; table, and marks it as a reference to the &lt;code&gt;users&lt;/code&gt; table. By default &lt;code&gt;userId&lt;/code&gt; will be set to &lt;code&gt;NULL&lt;/code&gt; if the referenced user is deleted, and updated if the id of the &lt;code&gt;userId&lt;/code&gt; updated. These options can be overridden by passing &lt;code&gt;onUpdate&lt;/code&gt; and &lt;code&gt;onDelete&lt;/code&gt; options to the association calls. The validation options are &lt;code&gt;RESTRICT, CASCADE, NO ACTION, SET DEFAULT, SET NULL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tasks&lt;/code&gt; 和 &lt;code&gt;users&lt;/code&gt; 模型之间的关系将 &lt;code&gt;userId&lt;/code&gt; 外键注入 &lt;code&gt;tasks&lt;/code&gt; 表，并将其标记为对 &lt;code&gt;users&lt;/code&gt; 表的引用。默认情况下，如果删除引用的用户，则 &lt;code&gt;userId&lt;/code&gt; 将设置为 &lt;code&gt;NULL&lt;/code&gt; ;如果更新了 &lt;code&gt;userId&lt;/code&gt; 的ID，则将其更新。通过将 &lt;code&gt;onUpdate&lt;/code&gt; 和 &lt;code&gt;onDelete&lt;/code&gt; 选项传递给关联调用，可以覆盖这些选项。验证选项为 &lt;code&gt;RESTRICT, CASCADE, NO ACTION, SET DEFAULT, SET NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b9f7f5e66de32f9f00b194b0d793b58686e0548" translate="yes" xml:space="preserve">
          <source>The same merge logic applies when passing a find object directly to &lt;code&gt;findAll&lt;/code&gt; (and similar finders) on a scoped model:</source>
          <target state="translated">当将查找对象直接传递给作用域模型上的 &lt;code&gt;findAll&lt;/code&gt; （和类似的查找器）时，将应用相同的合并逻辑：</target>
        </trans-unit>
        <trans-unit id="97ab6aa4ba7990a147bb964cdd7e87d1f62efe69" translate="yes" xml:space="preserve">
          <source>The schema that the tables should be created in. This can be overridden for each table in sequelize.define</source>
          <target state="translated">创建表的模式。可以在 sequelize.define 中为每个表重写这个模式。</target>
        </trans-unit>
        <trans-unit id="c43a2f21b215e63de5816eae94cb4b78d64ee9df" translate="yes" xml:space="preserve">
          <source>The scope(s) to apply. Scopes can either be passed as consecutive arguments, or as an array of arguments. To apply simple scopes and scope functions with no arguments, pass them as strings. For scope function, pass an object, with a &lt;code&gt;method&lt;/code&gt; property. The value can either be a string, if the method does not take any arguments, or an array, where the first element is the name of the method, and consecutive elements are arguments to that method. Pass null to remove all scopes, including the default.</source>
          <target state="translated">适用范围。范围既可以作为连续参数传递，也可以作为参数数组传递。要应用不带参数的简单范围和范围函数，请将它们作为字符串传递。对于作用域函数，请传递具有 &lt;code&gt;method&lt;/code&gt; 属性的对象。该值可以是一个字符串（如果该方法不带任何参数），也可以是一个数组，其中第一个元素是方法的名称，而连续元素是该方法的参数。传递null以删除所有范围，包括默认范围。</target>
        </trans-unit>
        <trans-unit id="e118bc1e681bc034058a8bda4bc03316fe86fe78" translate="yes" xml:space="preserve">
          <source>The socket path must start with &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">套接字路径必须以 &lt;code&gt;/&lt;/code&gt; 开头。</target>
        </trans-unit>
        <trans-unit id="5a2ca207850bf8f92ef8c79ea6faebe0a9682e77" translate="yes" xml:space="preserve">
          <source>The source key is the attribute on the source model that the foreign key attribute on the target model points to. By default the source key for a &lt;code&gt;hasOne&lt;/code&gt; relation will be the source model's primary attribute. To use a custom attribute, use the &lt;code&gt;sourceKey&lt;/code&gt; option.</source>
          <target state="translated">源键是目标模型上的外键属性指向的源模型上的属性。默认情况下， &lt;code&gt;hasOne&lt;/code&gt; 关系的源键将是源模型的主属性。要使用自定义属性，请使用 &lt;code&gt;sourceKey&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="f620901a19bb7656abbdf382102fb74721c6995b" translate="yes" xml:space="preserve">
          <source>The specified dialect.</source>
          <target state="translated">指定的方言。</target>
        </trans-unit>
        <trans-unit id="55da2b2d35bc1e7629eadbe7b1ec3caa26f12e10" translate="yes" xml:space="preserve">
          <source>The success handler is passed an array of instances, but please notice that these may not completely represent the state of the rows in the DB. This is because MySQL and SQLite do not make it easy to obtain back automatically generated IDs and other default values in a way that can be mapped to multiple records. To obtain Instances for the newly created values, you will need to query for them again.</source>
          <target state="translated">成功处理程序被传递了一个实例数组,但请注意,这些实例可能并不完全代表DB中行的状态。这是因为MySQL和SQLite并不能以一种可以映射到多条记录的方式轻松获取回自动生成的ID和其他默认值。要想获得新创建的值的实例,你需要再次查询它们。</target>
        </trans-unit>
        <trans-unit id="ca8c1cb986bae7a03abb7e55f466bf12bd7f5b9d" translate="yes" xml:space="preserve">
          <source>The success handler will always receive an object with two properties:</source>
          <target state="translated">成功处理程序将始终接收一个具有两个属性的对象。</target>
        </trans-unit>
        <trans-unit id="34579639c463106f1a03eee66559cab728f1641b" translate="yes" xml:space="preserve">
          <source>The syntax for grouping and ordering are equal, so below it is only explained with a single example for group, and the rest for order. Everything you see below can also be done for group</source>
          <target state="translated">分组和排序的语法是一样的,所以下面只用一个例子来解释分组,其余的是排序。下面看到的所有内容也都可以用于分组</target>
        </trans-unit>
        <trans-unit id="58b66076bf28d404e11394816918b9debbdb35f5" translate="yes" xml:space="preserve">
          <source>The table columns are defined by the hash that is given as the first argument. Each attribute of the hash represents a column.</source>
          <target state="translated">表列由作为第一个参数的哈希值定义。散列的每个属性代表一列。</target>
        </trans-unit>
        <trans-unit id="0333c25506d7b965b09277d6ee324cf0849f0c73" translate="yes" xml:space="preserve">
          <source>The table columns are defined by the object that is given as the second argument. Each key of the object represents a column</source>
          <target state="translated">表列由作为第二个参数的对象定义。对象的每个键代表一列</target>
        </trans-unit>
        <trans-unit id="1b918538dbc34fd935439f872ac510ed2a15c0e0" translate="yes" xml:space="preserve">
          <source>The target key is the column on the target model that the foreign key column on the source model points to. By default the target key for a belongsTo relation will be the target model's primary key. To define a custom column, use the &lt;code&gt;targetKey&lt;/code&gt; option.</source>
          <target state="translated">目标键是目标模型上源模型上的外键列所指向的列。默认情况下，belongsTo关系的目标键将是目标模型的主键。要定义自定义列，请使用 &lt;code&gt;targetKey&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="491b59fdd8f66fe0f7f13309b9f00701386dcec7" translate="yes" xml:space="preserve">
          <source>The target model</source>
          <target state="translated">目标模型</target>
        </trans-unit>
        <trans-unit id="c366e237ccd3fa7a5cf3767dcbd191713159c4d1" translate="yes" xml:space="preserve">
          <source>The time interval, in milliseconds, after which sequelize-pool will remove idle connections.</source>
          <target state="translated">sequelize-pool删除空闲连接的时间间隔,以毫秒为单位。</target>
        </trans-unit>
        <trans-unit id="49180f7e5b04ba9d5019142b532f40f579f312c3" translate="yes" xml:space="preserve">
          <source>The timezone used when converting a date from the database into a JavaScript date. The timezone is also used to SET TIMEZONE when connecting to the server, to ensure that the result of NOW, CURRENT_TIMESTAMP and other time related functions have in the right timezone. For best cross platform performance use the format +/-HH:MM. Will also accept string versions of timezones used by moment.js (e.g. 'America/Los_Angeles'); this is useful to capture daylight savings time changes.</source>
          <target state="translated">在将数据库中的日期转换为JavaScript日期时使用的时区。当连接到服务器时,这个时区也被用来设置TIMEZONE,以确保NOW、CURRENT_TIMESTAMP和其他时间相关函数的结果在正确的时区。为了获得最佳的跨平台性能,请使用+/-hh:mm的格式。也会接受由 moment.js 使用的时区的字符串版本(例如'America/Los_Angeles');这对于捕捉夏令时的变化很有用。</target>
        </trans-unit>
        <trans-unit id="22d5c59623d5082e86fcb983d4ab3c203156259b" translate="yes" xml:space="preserve">
          <source>The transaction object is used to identify a running transaction.</source>
          <target state="translated">事务对象用于识别正在运行的事务。</target>
        </trans-unit>
        <trans-unit id="f0edfec2d8f7bf8e0afc41f8155d0fe4c8968331" translate="yes" xml:space="preserve">
          <source>The transaction object is used to identify a running transaction. It is created by calling &lt;code&gt;Sequelize.transaction()&lt;/code&gt;. To run a query under a transaction, you should pass the transaction in the options object.</source>
          <target state="translated">事务对象用于标识正在运行的事务。它是通过调用 &lt;code&gt;Sequelize.transaction()&lt;/code&gt; 创建的。要在事务下运行查询，您应该在options对象中传递事务。</target>
        </trans-unit>
        <trans-unit id="1beb1efd0f8f2a80414557b5c568ecb7d3c36cb7" translate="yes" xml:space="preserve">
          <source>The transaction that the query should be executed under</source>
          <target state="translated">查询应该执行的事务</target>
        </trans-unit>
        <trans-unit id="d7eaaa527b737eaa8f46f1460009ff30ab80523a" translate="yes" xml:space="preserve">
          <source>The type of query you are executing. The query type affects how results are formatted before they are passed back. The type is a string, but &lt;code&gt;Sequelize.QueryTypes&lt;/code&gt; is provided as convenience shortcuts.</source>
          <target state="translated">您正在执行的查询的类型。查询类型影响结果在返回之前如何格式化。该类型是字符串，但是 &lt;code&gt;Sequelize.QueryTypes&lt;/code&gt; 是作为快捷方式提供的。</target>
        </trans-unit>
        <trans-unit id="6ac3e6aea5927228f941582e70503ef95b61da85" translate="yes" xml:space="preserve">
          <source>The type of the association.</source>
          <target state="translated">协会的类型;</target>
        </trans-unit>
        <trans-unit id="c3a22137eb7f0a4c6f818bf5181fd51cda693d63" translate="yes" xml:space="preserve">
          <source>The type of the association. One of &lt;code&gt;HasMany&lt;/code&gt;, &lt;code&gt;BelongsTo&lt;/code&gt;, &lt;code&gt;HasOne&lt;/code&gt;, &lt;code&gt;BelongsToMany&lt;/code&gt;</source>
          <target state="translated">关联的类型。其中之一 &lt;code&gt;HasMany&lt;/code&gt; ， &lt;code&gt;BelongsTo&lt;/code&gt; ， &lt;code&gt;HasOne&lt;/code&gt; ， &lt;code&gt;BelongsToMany&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a84720b6e6d1abe177c213ae349687b9ecbd326e" translate="yes" xml:space="preserve">
          <source>The type of the result. If &lt;code&gt;field&lt;/code&gt; is a field in this Model, the default will be the type of that field, otherwise defaults to float.</source>
          <target state="translated">结果的类型。如果 &lt;code&gt;field&lt;/code&gt; 是此模型中的字段，则默认值为该字段的类型，否则默认为float。</target>
        </trans-unit>
        <trans-unit id="183dc3fd6b319dae15e0ede29af243c273ee8685" translate="yes" xml:space="preserve">
          <source>The type to cast it to</source>
          <target state="translated">要投向的类型</target>
        </trans-unit>
        <trans-unit id="0ba8f3d4b3e41ec8a080d8bbbadbfdd6e148ee51" translate="yes" xml:space="preserve">
          <source>The type/origin of the validation error</source>
          <target state="translated">验证错误的类型/来源</target>
        </trans-unit>
        <trans-unit id="5888d90beb856504f26606caf21620cfa8966739" translate="yes" xml:space="preserve">
          <source>The username which is used to authenticate against the database.</source>
          <target state="translated">用于对数据库进行认证的用户名。</target>
        </trans-unit>
        <trans-unit id="ef65704c728b311b6675bea469007ef92576b56c" translate="yes" xml:space="preserve">
          <source>The value for the default constraint</source>
          <target state="translated">默认约束的值</target>
        </trans-unit>
        <trans-unit id="87fb8dc5fc6bc1f9c662d78e53814299d9b4d67e" translate="yes" xml:space="preserve">
          <source>The value of the desired instance's primary key.</source>
          <target state="translated">所需实例的主键值。</target>
        </trans-unit>
        <trans-unit id="2e4d8e128c9a5a1ffd3c715a791ace7b6e2f0e51" translate="yes" xml:space="preserve">
          <source>The value that generated the error</source>
          <target state="translated">产生错误的值</target>
        </trans-unit>
        <trans-unit id="281466e75fbe944a95c1f47673ac3a4b4a7aac99" translate="yes" xml:space="preserve">
          <source>The value to cast</source>
          <target state="translated">要投的值</target>
        </trans-unit>
        <trans-unit id="4becd373a9abdf90daf7afd7952190cfbdb6a722" translate="yes" xml:space="preserve">
          <source>The values of the attempted update</source>
          <target state="translated">试图更新的值</target>
        </trans-unit>
        <trans-unit id="8879fe3df52b3bfc453dc46fb7061554a846b88a" translate="yes" xml:space="preserve">
          <source>Then you can just expose file with proper environment variables.</source>
          <target state="translated">然后你可以用适当的环境变量来暴露文件。</target>
        </trans-unit>
        <trans-unit id="43f2635dbec46649203b3c3aa4d04bf38df84e6b" translate="yes" xml:space="preserve">
          <source>There are currently three ways to programmatically add hooks:</source>
          <target state="translated">目前有三种方式可以编程添加钩子。</target>
        </trans-unit>
        <trans-unit id="6c7e03a8c32ed1f6358530c8e620ba1250325a0a" translate="yes" xml:space="preserve">
          <source>There are several ways to update and add new associations. Continuing with our example of users and pictures:</source>
          <target state="translated">有几种方法可以更新和添加新的关联。继续以我们的用户和图片为例。</target>
        </trans-unit>
        <trans-unit id="a36b1d5200c1e31ac985860d6dd0f09141f565f9" translate="yes" xml:space="preserve">
          <source>There are three types of storage that you can use: &lt;code&gt;sequelize&lt;/code&gt;, &lt;code&gt;json&lt;/code&gt;, and &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">您可以使用三种存储类型： &lt;code&gt;sequelize&lt;/code&gt; ， &lt;code&gt;json&lt;/code&gt; 和 &lt;code&gt;none&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="27fdccefc377e17f5a26fc7558b9e7867964fb5d" translate="yes" xml:space="preserve">
          <source>There is also a method for counting database objects:</source>
          <target state="translated">还有一种计数数据库对象的方法。</target>
        </trans-unit>
        <trans-unit id="cd8a91416dbf4cf3a9c701869ca2f37c200a92ff" translate="yes" xml:space="preserve">
          <source>There may be times when you want to generate your own UUID conforming to some other algorithm. This is accomplished using the defaultValue property as well, but instead of specifying one of the supplied UUID types, you return a value from a function.</source>
          <target state="translated">有时,你可能想生成符合其他算法的自己的UUID。这也可以通过使用defaultValue属性来实现,但不是指定所提供的UUID类型之一,而是返回一个函数的值。</target>
        </trans-unit>
        <trans-unit id="55682363d7e0f2ffc9293ceaaddad46cafb5c483" translate="yes" xml:space="preserve">
          <source>Therefore, one can just follow the &lt;a href=&quot;http://geojson.org/geojson-spec.html&quot;&gt;GeoJSON spec&lt;/a&gt; for handling geometry objects. See the following examples:</source>
          <target state="translated">因此，可以遵循&lt;a href=&quot;http://geojson.org/geojson-spec.html&quot;&gt;GeoJSON规范&lt;/a&gt;来处理几何对象。请参阅以下示例：</target>
        </trans-unit>
        <trans-unit id="02cc698e9e580c5b08002ced8ca01c4ddd96bbfc" translate="yes" xml:space="preserve">
          <source>These four scopes can be deeply merged easily, for example by calling &lt;code&gt;Foo.scope('includeEverything', 'limitedBars', 'limitedBazs', 'excludeBazName').findAll()&lt;/code&gt;, which would be entirely equivalent to calling the following:</source>
          <target state="translated">这四个范围可以很容易地进行深度合并，例如，通过调用 &lt;code&gt;Foo.scope('includeEverything', 'limitedBars', 'limitedBazs', 'excludeBazName').findAll()&lt;/code&gt; ，这完全等同于调用以下代码：</target>
        </trans-unit>
        <trans-unit id="af59fc7567d7e359f06c4a1e994f367061e3a2b5" translate="yes" xml:space="preserve">
          <source>These hooks can be useful if you need to asynchronously obtain database credentials, or need to directly access the low-level database connection after it has been created.</source>
          <target state="translated">如果你需要异步获取数据库凭证,或者需要在创建数据库连接后直接访问低级数据库连接,这些钩子就会很有用。</target>
        </trans-unit>
        <trans-unit id="5c2d955f8a133fd17bc66cfb7a3733b5cd31863d" translate="yes" xml:space="preserve">
          <source>These hooks may &lt;em&gt;only&lt;/em&gt; be declared as a permanent global hook, as the connection pool is shared by all models.</source>
          <target state="translated">由于所有模型都共享连接池，因此&lt;em&gt;只能&lt;/em&gt;将这些挂钩声明为永久全局挂钩。</target>
        </trans-unit>
        <trans-unit id="1c389d6b65a20f268408819e6a860c1a7c78109f" translate="yes" xml:space="preserve">
          <source>These options are merged with the default define options provided to the Sequelize constructor</source>
          <target state="translated">这些选项与提供给Sequelize构造函数的默认定义选项合并。</target>
        </trans-unit>
        <trans-unit id="5c4f7d575b88a1fe31445dc78190b51d6048577f" translate="yes" xml:space="preserve">
          <source>These options are merged with the default define options provided to the Sequelize constructor and passed to Model.init()</source>
          <target state="translated">这些选项与提供给Sequelize构造函数的默认定义选项合并,并传递给Model.init()</target>
        </trans-unit>
        <trans-unit id="5072453b0e64084c89bc87592d919214af9d10e1" translate="yes" xml:space="preserve">
          <source>Third, you can define an object containing fields and its decrement values.</source>
          <target state="translated">第三,你可以定义一个包含字段及其递减值的对象。</target>
        </trans-unit>
        <trans-unit id="bcc27019080f65da23ea2d1c9787f788f23d98f5" translate="yes" xml:space="preserve">
          <source>Third, you can define an object containing fields and its increment values.</source>
          <target state="translated">第三,你可以定义一个包含字段及其增量值的对象。</target>
        </trans-unit>
        <trans-unit id="4e0152b992d8dcce6cbd8bc1cda5d54dde247ffb" translate="yes" xml:space="preserve">
          <source>This adds a default hook to all models, which is run if the model does not define its own &lt;code&gt;beforeCreate&lt;/code&gt; hook:</source>
          <target state="translated">这会向所有模型添加一个默认钩子，如果模型未定义自己的 &lt;code&gt;beforeCreate&lt;/code&gt; 钩子，则将运行该钩子：</target>
        </trans-unit>
        <trans-unit id="727c4075b5f4eb6d72cffa60b8be8ca9040e313f" translate="yes" xml:space="preserve">
          <source>This can be simply solved by passing &lt;code&gt;{individualHooks: true}&lt;/code&gt; to the &lt;code&gt;remove&lt;/code&gt; call, resulting on each hook to be called on each removed through instance object.</source>
          <target state="translated">这可以通过将 &lt;code&gt;{individualHooks: true}&lt;/code&gt; 传递给 &lt;code&gt;remove&lt;/code&gt; 调用来简单解决，从而导致在每个通过实例对象移除的钩子上都被调用。</target>
        </trans-unit>
        <trans-unit id="e7dd309e7a42d2a5b7a13fba0fcf976b9b08e4f8" translate="yes" xml:space="preserve">
          <source>This code will run beforeDestroy/afterDestroy on the Tasks table. Sequelize, by default, will try to optimize your queries as much as possible. When calling cascade on delete, Sequelize will simply execute a</source>
          <target state="translated">这段代码将在Tasks表上运行beforeDestroy/afterDestroy。默认情况下,Sequelize会尽量优化你的查询。当在删除时调用级联时,Sequelize会简单地执行一个名为 &quot;Cascade &quot;的代码。</target>
        </trans-unit>
        <trans-unit id="18c9fea6466ac62731b3270babfae248a5a4f00c" translate="yes" xml:space="preserve">
          <source>This command will create a seed file in &lt;code&gt;seeders&lt;/code&gt; folder. File name will look something like &lt;code&gt;XXXXXXXXXXXXXX-demo-user.js&lt;/code&gt;. It follows the same &lt;code&gt;up / down&lt;/code&gt; semantics as the migration files.</source>
          <target state="translated">此命令将在 &lt;code&gt;seeders&lt;/code&gt; 文件夹中创建一个种子文件。文件名将类似于 &lt;code&gt;XXXXXXXXXXXXXX-demo-user.js&lt;/code&gt; 。它遵循与迁移文件相同的 &lt;code&gt;up / down&lt;/code&gt; 语义。</target>
        </trans-unit>
        <trans-unit id="99b346a29a6d16c0ff1ed00bc189c11d20ca7b4d" translate="yes" xml:space="preserve">
          <source>This command will execute these steps:</source>
          <target state="translated">该命令将执行这些步骤。</target>
        </trans-unit>
        <trans-unit id="c63d621f524bac03f030a99ca6604e6cf1edd0b4" translate="yes" xml:space="preserve">
          <source>This example will return an error:</source>
          <target state="translated">这个例子将返回一个错误。</target>
        </trans-unit>
        <trans-unit id="1a7c83b5a5af156c9b822efe6ff13494455e205c" translate="yes" xml:space="preserve">
          <source>This extra capability is useful when, for example, &lt;code&gt;Error: Cannot find module&lt;/code&gt; is thrown even though &lt;code&gt;/path/to/models/project&lt;/code&gt; seems to be correct. Some frameworks, such as Meteor, overload &lt;code&gt;require&lt;/code&gt;, and spit out &quot;surprise&quot; results like :</source>
          <target state="translated">例如，在 &lt;code&gt;Error: Cannot find module&lt;/code&gt; 即使 &lt;code&gt;/path/to/models/project&lt;/code&gt; 似乎正确时，也找不到抛出模块的情况下，此额外功能很有用。一些框架，例如Meteor，重载 &lt;code&gt;require&lt;/code&gt; 和吐出&amp;ldquo;意外&amp;rdquo;结果，例如：</target>
        </trans-unit>
        <trans-unit id="ce7f17201e64eb37f1103f4b3786c11feb4123ee" translate="yes" xml:space="preserve">
          <source>This hook is always run before create, regardless of whether the model specifies its own &lt;code&gt;beforeCreate&lt;/code&gt; hook. Local hooks are always run before global hooks:</source>
          <target state="translated">无论模型是否指定了自己的 &lt;code&gt;beforeCreate&lt;/code&gt; 挂钩，该挂钩始终在创建之前运行。本地钩子总是在全局钩子之前运行：</target>
        </trans-unit>
        <trans-unit id="360cb791231c2363b1194e7b256c83b51766b491" translate="yes" xml:space="preserve">
          <source>This is a convenience method that combines&lt;code&gt;findAll&lt;/code&gt; and &lt;code&gt;count&lt;/code&gt; (see below) this is useful when dealing with queries related to pagination where you want to retrieve data with a &lt;code&gt;limit&lt;/code&gt; and &lt;code&gt;offset&lt;/code&gt; but also need to know the total number of records that match the query:</source>
          <target state="translated">这是一种结合了 &lt;code&gt;findAll&lt;/code&gt; 和 &lt;code&gt;count&lt;/code&gt; 的便捷方法（请参见下文），在处理与分页相关的查询时非常有用，在该查询中，您希望检索具有 &lt;code&gt;limit&lt;/code&gt; 和 &lt;code&gt;offset&lt;/code&gt; 数据，但还需要知道与查询匹配的记录总数：</target>
        </trans-unit>
        <trans-unit id="0e6e7c29c6f7275c747733e61664e0b1a268e99f" translate="yes" xml:space="preserve">
          <source>This is a special configuration file. It lets you specify following options that you would usually pass as arguments to CLI:</source>
          <target state="translated">这是一个特殊的配置文件。它允许你指定以下选项,这些选项通常会作为参数传递给CLI。</target>
        </trans-unit>
        <trans-unit id="55bdb2f2ecde4b760da3d764aa2f4098da22b6d1" translate="yes" xml:space="preserve">
          <source>This is solved by passing in Meteor's version of &lt;code&gt;require&lt;/code&gt;. So, while this probably fails ...</source>
          <target state="translated">这可以通过传递Meteor的 &lt;code&gt;require&lt;/code&gt; 版本来解决。因此，虽然这可能会失败...</target>
        </trans-unit>
        <trans-unit id="d228ea5a39b7651eb309d93cc8036fdcc5148f0e" translate="yes" xml:space="preserve">
          <source>This is the main class, the entry point to sequelize.</source>
          <target state="translated">这是主课,是序化的切入点。</target>
        </trans-unit>
        <trans-unit id="818eb257f30469f3bc2e4ca907767013465c744e" translate="yes" xml:space="preserve">
          <source>This is the same as calling &lt;code&gt;set&lt;/code&gt; and then calling &lt;code&gt;save&lt;/code&gt; but it only saves the exact values passed to it, making it more atomic and safer.</source>
          <target state="translated">这与先调用 &lt;code&gt;set&lt;/code&gt; 然后再调用 &lt;code&gt;save&lt;/code&gt; 相同，但是它仅保存传递给它的确切值，从而使其更原子且更安全。</target>
        </trans-unit>
        <trans-unit id="60296b6b0d7e855566b012be2c4526118c0d9f5e" translate="yes" xml:space="preserve">
          <source>This means that errors can be accessed using &lt;code&gt;Sequelize.ValidationError&lt;/code&gt; The Base Error all Sequelize Errors inherit from.</source>
          <target state="translated">这意味着可以使用 &lt;code&gt;Sequelize.ValidationError&lt;/code&gt; 访问错误，所有Sequelize Errors都继承自Base Error。</target>
        </trans-unit>
        <trans-unit id="448935a1c8176ac36ebc22b0c9a61a4f6c534df7" translate="yes" xml:space="preserve">
          <source>This means you can, for instance, have a string field which validates its length to be between 5 and 10 characters, but which also allows &lt;code&gt;null&lt;/code&gt; (since the length validator will be skipped automatically when the value is &lt;code&gt;null&lt;/code&gt;):</source>
          <target state="translated">例如，这意味着您可以拥有一个字符串字段，该字段验证其长度在5到10个字符之间，但也允许为 &lt;code&gt;null&lt;/code&gt; （因为当value为 &lt;code&gt;null&lt;/code&gt; 时，长度验证器将被自动跳过）：</target>
        </trans-unit>
        <trans-unit id="f467b722eea19d74de979567087d7f5e134044a3" translate="yes" xml:space="preserve">
          <source>This merge strategy also works in the exact same way with options passed to &lt;code&gt;.findAll&lt;/code&gt;, &lt;code&gt;.findOne&lt;/code&gt; and the like.</source>
          <target state="translated">此合并策略还与传递给 &lt;code&gt;.findAll&lt;/code&gt; ， &lt;code&gt;.findOne&lt;/code&gt; 等的选项完全相同。</target>
        </trans-unit>
        <trans-unit id="59bd238f74715c77711ae06cecfc32b0565a57cb" translate="yes" xml:space="preserve">
          <source>This method is intended for use cases where the same model is needed in multiple schemas. In such a use case it is important to call &lt;code&gt;model.schema(schema, [options]).sync()&lt;/code&gt; for each model to ensure the models are created in the correct schema.</source>
          <target state="translated">此方法适用于在多个架构中需要相同模型的用例。在这种用例中，为每个模型调用 &lt;code&gt;model.schema(schema, [options]).sync()&lt;/code&gt; 至关重要，以确保在正确的模式下创建模型。</target>
        </trans-unit>
        <trans-unit id="a61048d15d1fb9bb46b03055071e6483faf68341" translate="yes" xml:space="preserve">
          <source>This method now tests for equality with &lt;code&gt;_.isEqual&lt;/code&gt; and is now deep aware. Modifying nested value for JSON object won't mark them as changed, because it is still the same object.</source>
          <target state="translated">现在，此方法使用 &lt;code&gt;_.isEqual&lt;/code&gt; 测试是否相等，并且已深入了解。修改JSON对象的嵌套值不会将它们标记为已更改，因为它仍然是同一对象。</target>
        </trans-unit>
        <trans-unit id="ab79309eddccd5e656cb0c27289b25d6187e3837" translate="yes" xml:space="preserve">
          <source>This method returns an array of hashes containing information about all attributes in the table.</source>
          <target state="translated">此方法返回一个包含表中所有属性信息的哈希数组。</target>
        </trans-unit>
        <trans-unit id="d7799f45dcea4d7688e16027f4fe2c94d214d595" translate="yes" xml:space="preserve">
          <source>This section concerns association scopes. For a definition of association scopes vs. scopes on associated models, see &lt;a href=&quot;scopes&quot;&gt;Scopes&lt;/a&gt;.</source>
          <target state="translated">本节涉及关联范围。有关关联作用域与关联模型作用域的定义，请参见&lt;a href=&quot;scopes&quot;&gt;作用域&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8afc09530510c13953a1c7a8aa226af2c4660e35" translate="yes" xml:space="preserve">
          <source>This section describes the various association types in sequelize. There are four types of associations available in Sequelize</source>
          <target state="translated">本节介绍了sequelize中的各种关联类型。在Sequelize中,有四种类型的关联可供选择</target>
        </trans-unit>
        <trans-unit id="e5db820e5273e88ea3c74abb859bd5e860f6a011" translate="yes" xml:space="preserve">
          <source>This specifies that the &lt;code&gt;uid&lt;/code&gt; column cannot be null. In most cases this will already be covered by the foreign key constraints, which sequelize creates automatically, but can be useful in case where the foreign keys are disabled, e.g. due to circular references (see &lt;code&gt;constraints: false&lt;/code&gt; below).</source>
          <target state="translated">这指定 &lt;code&gt;uid&lt;/code&gt; 列不能为null。在大多数情况下，外键约束已经覆盖了该问题，后继序列会自动创建，但是在禁用外键（例如由于循环引用）的情况下很有用（请参阅 &lt;code&gt;constraints: false&lt;/code&gt; 下文为false）。</target>
        </trans-unit>
        <trans-unit id="b0748e5edf89087179c3ffcbaa9289fdfc2bb735" translate="yes" xml:space="preserve">
          <source>This will add methods &lt;code&gt;getUsers&lt;/code&gt;, &lt;code&gt;setUsers&lt;/code&gt;, &lt;code&gt;addUser&lt;/code&gt;,&lt;code&gt;addUsers&lt;/code&gt; to &lt;code&gt;Project&lt;/code&gt;, and &lt;code&gt;getProjects&lt;/code&gt;, &lt;code&gt;setProjects&lt;/code&gt;, &lt;code&gt;addProject&lt;/code&gt;, and &lt;code&gt;addProjects&lt;/code&gt; to &lt;code&gt;User&lt;/code&gt;.</source>
          <target state="translated">这会将方法 &lt;code&gt;getUsers&lt;/code&gt; ， &lt;code&gt;setUsers&lt;/code&gt; ， &lt;code&gt;addUser&lt;/code&gt; ， &lt;code&gt;addUsers&lt;/code&gt; 添加到 &lt;code&gt;Project&lt;/code&gt; ，并将 &lt;code&gt;getProjects&lt;/code&gt; ， &lt;code&gt;setProjects&lt;/code&gt; ， &lt;code&gt;addProject&lt;/code&gt; 和 &lt;code&gt;addProjects&lt;/code&gt; 添加到 &lt;code&gt;User&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a6e951fad358490ec5b1a5a9c3f372af691a820" translate="yes" xml:space="preserve">
          <source>This will add the attribute &lt;code&gt;projectId&lt;/code&gt; to User. Depending on your setting for underscored the column in the table will either be called &lt;code&gt;projectId&lt;/code&gt; or &lt;code&gt;project_id&lt;/code&gt;. Instances of Project will get the accessors &lt;code&gt;getWorkers&lt;/code&gt; and &lt;code&gt;setWorkers&lt;/code&gt;.</source>
          <target state="translated">这会将属性 &lt;code&gt;projectId&lt;/code&gt; 添加到User。根据您对下划线的设置，表中的列将称为 &lt;code&gt;projectId&lt;/code&gt; 或 &lt;code&gt;project_id&lt;/code&gt; 。Project实例将获得访问器 &lt;code&gt;getWorkers&lt;/code&gt; 和 &lt;code&gt;setWorkers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb8b8f31c57ee6c953321682693ac70ebefd2921" translate="yes" xml:space="preserve">
          <source>This will add the functions &lt;code&gt;add/set/get Tasks&lt;/code&gt; to user instances.</source>
          <target state="translated">这会将功能 &lt;code&gt;add/set/get Tasks&lt;/code&gt; 到用户实例。</target>
        </trans-unit>
        <trans-unit id="3463bc037bb376387fd4ec78e9ecc3a0802278d7" translate="yes" xml:space="preserve">
          <source>This will create a new model called UserProject with the equivalent foreign keys &lt;code&gt;projectId&lt;/code&gt; and &lt;code&gt;userId&lt;/code&gt;. Whether the attributes are camelcase or not depends on the two models joined by the table (in this case User and Project).</source>
          <target state="translated">这将创建一个名为UserProject的新模型，该模型具有等效的外键 &lt;code&gt;projectId&lt;/code&gt; 和 &lt;code&gt;userId&lt;/code&gt; 。属性是否为驼峰格式取决于表连接的两个模型（在这种情况下为User和Project）。</target>
        </trans-unit>
        <trans-unit id="9218fafa583e55dc7276e3c7c13b1abc3b031c76" translate="yes" xml:space="preserve">
          <source>This will create following folders</source>
          <target state="translated">这将创建以下文件夹</target>
        </trans-unit>
        <trans-unit id="77d3388ed7356b4ccde3d30587156a82a628f725" translate="yes" xml:space="preserve">
          <source>This will do following</source>
          <target state="translated">这将做到以下几点</target>
        </trans-unit>
        <trans-unit id="b9cd56142426d9d64bccca3cb45bcbe0b6b31b91" translate="yes" xml:space="preserve">
          <source>This will execute that seed file and you will have a demo user inserted into &lt;code&gt;User&lt;/code&gt; table.</source>
          <target state="translated">这将执行该种子文件，并且您将在 &lt;code&gt;User&lt;/code&gt; 表中插入一个演示用户。</target>
        </trans-unit>
        <trans-unit id="17023fd3d297e103adfb2cd08cb3d64972ed6758" translate="yes" xml:space="preserve">
          <source>This will produce an outer join. However, a &lt;code&gt;where&lt;/code&gt; clause on a related model will create an inner join and return only the instances that have matching sub-models. To return all parent instances, you should add &lt;code&gt;required: false&lt;/code&gt;.</source>
          <target state="translated">这将产生一个外部联接。但是，相关模型上的 &lt;code&gt;where&lt;/code&gt; 子句将创建内部联接，并且仅返回具有匹配子模型的实例。要返回所有父实例，应添加 &lt;code&gt;required: false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="587b8c9b10a65cfc3263ff9ed36c73f795eee87e" translate="yes" xml:space="preserve">
          <source>Those details contains constraintSchema, constraintName, constraintCatalog tableCatalog, tableSchema, tableName, columnName, referencedTableCatalog, referencedTableCatalog, referencedTableSchema, referencedTableName, referencedColumnName. Remind: constraint informations won't return if it's sqlite.</source>
          <target state="translated">这些详细信息包含 constraintSchema,constraintName,constraintCatalog tableCatalog,tableSchema,tableName,columnName,referencedTableCatalog,referencedTableCatalog,referencedTableSchema,referencedTableName,referencedColumnName。提醒:如果是 sqlite,约束信息不会返回。</target>
        </trans-unit>
        <trans-unit id="4210ffe78330b024ede5237dbfe86d9b9b93cd25" translate="yes" xml:space="preserve">
          <source>Three of the values provided here (&lt;code&gt;NOW&lt;/code&gt;, &lt;code&gt;UUIDV1&lt;/code&gt; and &lt;code&gt;UUIDV4&lt;/code&gt;) are special default values, that should not be used to define types. Instead they are used as shorthands for defining default values. For example, to get a uuid field with a default value generated following v1 of the UUID standard:</source>
          <target state="translated">此处提供的三个值（ &lt;code&gt;NOW&lt;/code&gt; ， &lt;code&gt;UUIDV1&lt;/code&gt; 和 &lt;code&gt;UUIDV4&lt;/code&gt; ）是特殊的默认值，不应将其用于定义类型。相反，它们用作定义默认值的简写。例如，要获取具有根据UUID标准的v1生成的默认值的uuid字段：</target>
        </trans-unit>
        <trans-unit id="91f71b1ba50409fa2b7c9ba85860ac52be6266d4" translate="yes" xml:space="preserve">
          <source>Throw errors to rollback</source>
          <target state="translated">抛出错误进行回滚</target>
        </trans-unit>
        <trans-unit id="aa4f8c68ebe136d0527ece013ceac731e1a278f9" translate="yes" xml:space="preserve">
          <source>Throw:</source>
          <target state="translated">Throw:</target>
        </trans-unit>
        <trans-unit id="23d750e22af391e584ca1e4a39c95bd2fb56383e" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database has a hostname that was not found</source>
          <target state="translated">当连接到数据库的主机名未找到时抛出。</target>
        </trans-unit>
        <trans-unit id="d2625383a632bae08070641f222b8caa05d99960" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database has a hostname that was not reachable</source>
          <target state="translated">当连接到数据库的主机名无法到达时抛出。</target>
        </trans-unit>
        <trans-unit id="87034a0755bcd6f36454ca6ff35ee17a4ff4e0e8" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database has invalid values for any of the connection parameters</source>
          <target state="translated">当数据库连接的任何一个连接参数的值无效时抛出。</target>
        </trans-unit>
        <trans-unit id="32d6e188736023fe8847cd2d2013f87cf98d8009" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database is refused</source>
          <target state="translated">当拒绝与数据库连接时抛出。</target>
        </trans-unit>
        <trans-unit id="b9258c976382ddb24c62d8d005000b6a6fe5d6f6" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database is refused due to insufficient privileges</source>
          <target state="translated">当由于权限不足而拒绝与数据库连接时抛出。</target>
        </trans-unit>
        <trans-unit id="2043393f9e3b9fda84e6662489c8d9c0829b258d" translate="yes" xml:space="preserve">
          <source>Thrown when a connection to a database times out</source>
          <target state="translated">当数据库的连接超时时抛出。</target>
        </trans-unit>
        <trans-unit id="7bc64491ce5ca9b21f53e4cdc887f0f85bc7a079" translate="yes" xml:space="preserve">
          <source>Thrown when a database query times out because of a deadlock</source>
          <target state="translated">当数据库查询因死锁而超时时抛出。</target>
        </trans-unit>
        <trans-unit id="679f3a1755d005602bfa972024e02b80ed5161dc" translate="yes" xml:space="preserve">
          <source>Thrown when a foreign key constraint is violated in the database</source>
          <target state="translated">当数据库中的外键约束被违反时抛出。</target>
        </trans-unit>
        <trans-unit id="c84afedad343819211df62f9869172701d2dd1e5" translate="yes" xml:space="preserve">
          <source>Thrown when a query is passed invalid options (see message for details)</source>
          <target state="translated">当一个查询被传入无效选项时抛出(详见消息)。</target>
        </trans-unit>
        <trans-unit id="7fabff6c09f652154afe11474aa9248b265cfe1c" translate="yes" xml:space="preserve">
          <source>Thrown when a record was not found, Usually used with rejectOnEmpty mode (see message for details)</source>
          <target state="translated">当找不到记录时抛出,通常与 rejectOnEmpty 模式一起使用(详见消息)。</target>
        </trans-unit>
        <trans-unit id="c3c1771c4a29df5e79cf3befa41cf4598a7dee58" translate="yes" xml:space="preserve">
          <source>Thrown when a some problem occurred with Instance methods (see message for details)</source>
          <target state="translated">当Instance方法出现问题时抛出(详见消息)。</target>
        </trans-unit>
        <trans-unit id="95bb12467ace2eea8fc434c8b6c9df4d88b333d1" translate="yes" xml:space="preserve">
          <source>Thrown when a unique constraint is violated in the database</source>
          <target state="translated">当数据库中的唯一约束被违反时抛出。</target>
        </trans-unit>
        <trans-unit id="80ae4ddebfd7c82c02a5f23fec873816cf61746c" translate="yes" xml:space="preserve">
          <source>Thrown when an association is improperly constructed (see message for details)</source>
          <target state="translated">当一个关联的构造不正确时抛出(详见消息)。</target>
        </trans-unit>
        <trans-unit id="89746572ae55e12747db0aea1e20bddf39ed7d39" translate="yes" xml:space="preserve">
          <source>Thrown when an exclusion constraint is violated in the database</source>
          <target state="translated">当数据库中的排除约束被违反时抛出。</target>
        </trans-unit>
        <trans-unit id="8f157735ee3bf7ab21bc6f16555acb23bc8c29f3" translate="yes" xml:space="preserve">
          <source>Thrown when an include statement is improperly constructed (see message for details)</source>
          <target state="translated">当include语句的构造不正确时抛出(详见消息)</target>
        </trans-unit>
        <trans-unit id="0fd16d932a52421ae2e328140ee63e38a615cfb3" translate="yes" xml:space="preserve">
          <source>Thrown when attempting to update a stale model instance</source>
          <target state="translated">当试图更新一个过期的模型实例时抛出。</target>
        </trans-unit>
        <trans-unit id="7bc42c3b804e8b465e46ba8bd9b5e3206dc76ac4" translate="yes" xml:space="preserve">
          <source>Thrown when bulk operation fails, it represent per record level error.</source>
          <target state="translated">当批量操作失败时抛出,代表每个记录级别的错误。</target>
        </trans-unit>
        <trans-unit id="ae1229aaedb2ae0a2feaf4bc910bd5a9a676762a" translate="yes" xml:space="preserve">
          <source>Thrown when bulk operation fails, it represent per record level error. Used with Promise.AggregateError</source>
          <target state="translated">当批量操作失败时抛出,它代表每条记录级别的错误。与Promise.AggregateError一起使用。</target>
        </trans-unit>
        <trans-unit id="f9edfc205cf5a5c20603f1d3b7c72767c3a4d4b9" translate="yes" xml:space="preserve">
          <source>Thrown when connection is not acquired due to timeout</source>
          <target state="translated">当由于超时而未获得连接时抛出。</target>
        </trans-unit>
        <trans-unit id="7fceaebd6f438961290420060fe3b510c240b8f3" translate="yes" xml:space="preserve">
          <source>Thrown when constraint name is not found in the database</source>
          <target state="translated">当数据库中找不到约束名称时抛出。</target>
        </trans-unit>
        <trans-unit id="c1175bafb21b858838d4ed47ad6843f2f62f711c" translate="yes" xml:space="preserve">
          <source>Throws an error when no records found</source>
          <target state="translated">当没有找到记录时,会抛出一个错误</target>
        </trans-unit>
        <trans-unit id="22a4ad2c60d9b1a4a4ab47810c732e12faec00b0" translate="yes" xml:space="preserve">
          <source>TimeoutError</source>
          <target state="translated">TimeoutError</target>
        </trans-unit>
        <trans-unit id="c04ed1238a14de2b02d7fd14a7e9605bb1b10b96" translate="yes" xml:space="preserve">
          <source>Timestamps</source>
          <target state="translated">Timestamps</target>
        </trans-unit>
        <trans-unit id="852d13828c37fb9d96ffea0f8ba5d4177325009c" translate="yes" xml:space="preserve">
          <source>To add a new project to a user and set its status, you pass extra &lt;code&gt;options.through&lt;/code&gt; to the setter, which contains the attributes for the join table</source>
          <target state="translated">要将新项目添加到用户并设置其状态，请将额外的 &lt;code&gt;options.through&lt;/code&gt; 传递给setter，该setter包含连接表的属性。</target>
        </trans-unit>
        <trans-unit id="ac8fd1770455d2404985a693194adf77d45c1bff" translate="yes" xml:space="preserve">
          <source>To connect over a unix domain socket, specify the path to the socket directory in the &lt;code&gt;host&lt;/code&gt; option.</source>
          <target state="translated">要通过Unix域套接字连接，请在 &lt;code&gt;host&lt;/code&gt; 选项中指定套接字目录的路径。</target>
        </trans-unit>
        <trans-unit id="062d1b4f01aa30692a7d36958d9c8a163ef0fa87" translate="yes" xml:space="preserve">
          <source>To connect to the database, you must create a Sequelize instance. This can be done by either passing the connection parameters separately to the Sequelize constructor or by passing a single connection URI:</source>
          <target state="translated">要连接到数据库,你必须创建一个Sequelize实例。这可以通过将连接参数单独传递给Sequelize构造函数或者传递一个单一的连接URI来完成。</target>
        </trans-unit>
        <trans-unit id="da44e1aec269feef0bce9b3580109c553da536c7" translate="yes" xml:space="preserve">
          <source>To create an empty project you will need to execute &lt;code&gt;init&lt;/code&gt; command</source>
          <target state="translated">要创建一个空项目，您将需要执行 &lt;code&gt;init&lt;/code&gt; 命令</target>
        </trans-unit>
        <trans-unit id="71fb99144f8e1ab035cde5271b9fd31e7e57bd68" translate="yes" xml:space="preserve">
          <source>To define mappings between a model and a table, use the &lt;code&gt;define&lt;/code&gt; method. Each column must have a datatype, see more about &lt;a href=&quot;data-types&quot;&gt;datatypes&lt;/a&gt;.</source>
          <target state="translated">要定义模型与表之间的映射，请使用 &lt;code&gt;define&lt;/code&gt; 方法。每列都必须具有一个数据类型，请参阅有关&lt;a href=&quot;data-types&quot;&gt;数据类型的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit id="dda2146b56aea2f43e17df568053cae2211defe9" translate="yes" xml:space="preserve">
          <source>To define your own primary key:</source>
          <target state="translated">要定义自己的主键。</target>
        </trans-unit>
        <trans-unit id="f0c9aa566dd042ca2109aefb26d5db9701348ed9" translate="yes" xml:space="preserve">
          <source>To disable the default scope, pass &lt;code&gt;scope: null&lt;/code&gt; to the getter: &lt;code&gt;User.getPosts({ scope: null })&lt;/code&gt;. Similarly, if you want to apply other scopes, pass an array like you would to &lt;code&gt;.scope&lt;/code&gt;:</source>
          <target state="translated">要禁用默认范围，请将 &lt;code&gt;scope: null&lt;/code&gt; 传递给getter： &lt;code&gt;User.getPosts({ scope: null })&lt;/code&gt; 。同样，如果您要应用其他范围，则将数组传递给 &lt;code&gt;.scope&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="6463d8d9d72d8a88eca88bfd39719af73a2f3fb1" translate="yes" xml:space="preserve">
          <source>To enable CLS you must tell sequelize which namespace to use by using a static method of the sequelize constructor:</source>
          <target state="translated">要启用CLS,你必须通过使用sequelize构造函数的静态方法告诉sequelize使用哪个命名空间。</target>
        </trans-unit>
        <trans-unit id="87f6d681b01751ff8331a911939a0019959ee185" translate="yes" xml:space="preserve">
          <source>To enable CLS, add it do your project, create a namespace and set it on the sequelize constructor:</source>
          <target state="translated">要启用CLS,请将其添加到你的项目中,创建一个命名空间并将其设置在sequelize构造函数上。</target>
        </trans-unit>
        <trans-unit id="6e021f11d5b93d2d56eff3f6527dc41d1add80d2" translate="yes" xml:space="preserve">
          <source>To extend Sequelize datatypes, do it before any instance is created. This example creates a dummy &lt;code&gt;NEWTYPE&lt;/code&gt; that replicates the built-in datatype &lt;code&gt;Sequelize.INTEGER(11).ZEROFILL.UNSIGNED&lt;/code&gt;.</source>
          <target state="translated">要扩展Sequelize数据类型，请在创建任何实例之前进行。本示例创建一个虚拟 &lt;code&gt;NEWTYPE&lt;/code&gt; ，该NEWTYPE复制内置数据类型 &lt;code&gt;Sequelize.INTEGER(11).ZEROFILL.UNSIGNED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08fd9370c478abbfbe5b9098d6a2c2698f6d2737" translate="yes" xml:space="preserve">
          <source>To get full control over the foreign key column added by sequelize, you can use the &lt;code&gt;foreignKey&lt;/code&gt; option. It can either be a string, that specifies the name, or and object type definition, equivalent to those passed to &lt;code&gt;sequelize.define&lt;/code&gt;.</source>
          <target state="translated">要完全控制由sequelize添加的外键列，可以使用 &lt;code&gt;foreignKey&lt;/code&gt; 选项。它可以是指定名称的字符串，也可以是和传递给 &lt;code&gt;sequelize.define&lt;/code&gt; 的对象类型定义相同的对象类型定义。</target>
        </trans-unit>
        <trans-unit id="8b302c9710f47440c1d0dbf353af407bf35573b5" translate="yes" xml:space="preserve">
          <source>To get it stored in the database, use the &lt;code&gt;save&lt;/code&gt;-method and catch the events ... if needed:</source>
          <target state="translated">要将其存储在数据库中，请使用 &lt;code&gt;save&lt;/code&gt; -method并捕获事件...（如果需要）：</target>
        </trans-unit>
        <trans-unit id="81359c1e15ebff6b36cb1d90106dde4b80bd06a7" translate="yes" xml:space="preserve">
          <source>To get more relevant data, you can use limit, offset, order and grouping:</source>
          <target state="translated">为了获得更多的相关数据,你可以使用限制、偏移、顺序和分组。</target>
        </trans-unit>
        <trans-unit id="4fb9a241f10c959268058c116425f0667f1b4bdc" translate="yes" xml:space="preserve">
          <source>To include all attributes, you can pass a single object with &lt;code&gt;all: true&lt;/code&gt;:</source>
          <target state="translated">要包含所有属性，可以传递一个具有 &lt;code&gt;all: true&lt;/code&gt; 对象：true：</target>
        </trans-unit>
        <trans-unit id="41a7882efafea18d939a044b5476e2e2db5db42b" translate="yes" xml:space="preserve">
          <source>To invoke scope functions you can do</source>
          <target state="translated">要调用范围函数,你可以做</target>
        </trans-unit>
        <trans-unit id="6ff66a578ca5331ff221d03e2780d2b820c5ce62" translate="yes" xml:space="preserve">
          <source>To learn more about how to use Sequelize, read the tutorials available in the left menu. Begin with &lt;a href=&quot;manual/getting-started&quot;&gt;Getting Started&lt;/a&gt;.</source>
          <target state="translated">要了解有关如何使用Sequelize的更多信息，请阅读左侧菜单中的可用教程。从&lt;a href=&quot;manual/getting-started&quot;&gt;入门开始&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="82a28ba40b57129812c63ec44c7e5de69d719c98" translate="yes" xml:space="preserve">
          <source>To manage all data migrations you can use seeders. Seed files are some change in data that can be used to populate database table with sample data or test data.</source>
          <target state="translated">为了管理所有的数据迁移,你可以使用种子文件。种子文件是数据中的一些变化,可用于用样本数据或测试数据填充数据库表。</target>
        </trans-unit>
        <trans-unit id="d41c172a89209d5b09fd5ea5fc82930a6a93002c" translate="yes" xml:space="preserve">
          <source>To move the where conditions from an included model from the &lt;code&gt;ON&lt;/code&gt; condition to the top level &lt;code&gt;WHERE&lt;/code&gt; you can use the &lt;code&gt;'$nested.column$'&lt;/code&gt; syntax:</source>
          <target state="translated">要将where条件从包含的模型从 &lt;code&gt;ON&lt;/code&gt; 条件移到顶层 &lt;code&gt;WHERE&lt;/code&gt; ，可以使用 &lt;code&gt;'$nested.column$'&lt;/code&gt; 语法：</target>
        </trans-unit>
        <trans-unit id="43c3e345f72eba5c3efd1485f74d109a6eedabc7" translate="yes" xml:space="preserve">
          <source>To provide a length for the data type, you can invoke it like a function: &lt;code&gt;INTEGER(2)&lt;/code&gt;</source>
          <target state="translated">要提供数据类型的长度，可以像调用函数一样调用它： &lt;code&gt;INTEGER(2)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c3ee3dbbd358f5ea3a5375e13ef5d5f193d5514" translate="yes" xml:space="preserve">
          <source>To recap, the elements of the order/group array can be the following:</source>
          <target state="translated">概括地说,订单/组数组的元素可以是以下几种。</target>
        </trans-unit>
        <trans-unit id="9f0557f6152bcc28fed2088bbb5968f3d7399eb3" translate="yes" xml:space="preserve">
          <source>To remove created associations you can just call the set method without a specific id:</source>
          <target state="translated">要删除已创建的关联,你可以直接调用set方法,而不需要一个特定的id。</target>
        </trans-unit>
        <trans-unit id="e6ed480fdfa306848b35b4f98b434fd446ccbad0" translate="yes" xml:space="preserve">
          <source>To select only some attributes, you can use the &lt;code&gt;attributes&lt;/code&gt; option. Most often, you pass an array:</source>
          <target state="translated">要仅选择某些属性，可以使用&amp;ldquo; &lt;code&gt;attributes&lt;/code&gt; 选项。通常，您传递一个数组：</target>
        </trans-unit>
        <trans-unit id="9c0b1f31729f10174367599cf32209d59219dfc3" translate="yes" xml:space="preserve">
          <source>To update several rows at once:</source>
          <target state="translated">要同时更新几行。</target>
        </trans-unit>
        <trans-unit id="22b7aa8cde8674fa4a729793b1a6cd316bfb540d" translate="yes" xml:space="preserve">
          <source>To use a custom error message instead of that provided by &lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js&lt;/a&gt;, use an object instead of the plain value or array of arguments, for example a validator which needs no argument can be given a custom message with</source>
          <target state="translated">要使用自定义错误消息而不是&lt;a href=&quot;https://github.com/chriso/validator.js&quot;&gt;validator.js&lt;/a&gt;提供的错误消息，请使用对象而不是纯值或参数数组，例如，可以为不需要参数的验证器提供一条自定义消息，其中包含</target>
        </trans-unit>
        <trans-unit id="75c5403dcfb5bf72f31f2a3c2d7f2fe263d46ed4" translate="yes" xml:space="preserve">
          <source>To use the wildcard operator %, append it to your replacement. The following query matches users with names that start with 'ben'.</source>
          <target state="translated">要使用通配符%,请将其附加到你的替换项中。以下查询匹配名字以'ben'开头的用户。</target>
        </trans-unit>
        <trans-unit id="c38c6c1f3a2743f8626703abb302e403d20ff81c" translate="yes" xml:space="preserve">
          <source>Tokens</source>
          <target state="translated">Tokens</target>
        </trans-unit>
        <trans-unit id="603270749de0b8c5d657407d142a68e2bd894051" translate="yes" xml:space="preserve">
          <source>Top level where with eagerly loaded models</source>
          <target state="translated">顶层,那里有急切装载的模型</target>
        </trans-unit>
        <trans-unit id="1a7b7c1b33d161f45804730c70b75175dccd9883" translate="yes" xml:space="preserve">
          <source>Transaction</source>
          <target state="translated">Transaction</target>
        </trans-unit>
        <trans-unit id="4560532617032eba3499944208e1c914b037e0c9" translate="yes" xml:space="preserve">
          <source>Transaction options</source>
          <target state="translated">交易选择</target>
        </trans-unit>
        <trans-unit id="9c5a9f64903010dca00f0ffdf25ae4dd43e00a52" translate="yes" xml:space="preserve">
          <source>Transaction to run query under</source>
          <target state="translated">交易下运行查询</target>
        </trans-unit>
        <trans-unit id="1e3281a962e6db2e54e787f796eb7d2b1582389a" translate="yes" xml:space="preserve">
          <source>Transactions</source>
          <target state="translated">Transactions</target>
        </trans-unit>
        <trans-unit id="af4419640cc9b72a684777bff88307c334556deb" translate="yes" xml:space="preserve">
          <source>Trigger the constraint checks immediately</source>
          <target state="translated">立即触发约束检查</target>
        </trans-unit>
        <trans-unit id="fbfa67ef4fc863ae5513f819aa79809b0312945b" translate="yes" xml:space="preserve">
          <source>Truncate all instances of the model.</source>
          <target state="translated">截断模型的所有实例。</target>
        </trans-unit>
        <trans-unit id="41ba9fe559f96b6c33ced14f4f229126b6f945ea" translate="yes" xml:space="preserve">
          <source>Truncate all instances of the model. This is a convenient method for Model.destroy({ truncate: true }).</source>
          <target state="translated">截断模型的所有实例。这是Model.destroy({truncate:true })的一个方便方法。</target>
        </trans-unit>
        <trans-unit id="db65c7ad58c51cfb9b81db0635cd9fbad284458d" translate="yes" xml:space="preserve">
          <source>Truncate all tables defined through the sequelize models.</source>
          <target state="translated">截断所有通过sequelize模型定义的表格。</target>
        </trans-unit>
        <trans-unit id="bebb9195a206168efd2a5b7fe2975178574e742a" translate="yes" xml:space="preserve">
          <source>Truncate all tables defined through the sequelize models. This is done by calling &lt;code&gt;Model.truncate()&lt;/code&gt; on each model.</source>
          <target state="translated">截断通过sequelize模型定义的所有表。这是通过在每个模型上调用 &lt;code&gt;Model.truncate()&lt;/code&gt; 完成的。</target>
        </trans-unit>
        <trans-unit id="548046a99a144543148a41922751851ef4f108e1" translate="yes" xml:space="preserve">
          <source>Truncates all tables that have foreign-key references to the named table, or to any tables added to the group due to CASCADE.</source>
          <target state="translated">截断所有对指定表有外键引用的表,或由于CASCADE而添加到组中的任何表。</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="2b125b0e14258280c33525f42d8874d816aafa25" translate="yes" xml:space="preserve">
          <source>Type of constraint. One of the values in available constraints(case insensitive)</source>
          <target state="translated">约束类型。可用约束条件中的一个值(不区分大小写)。</target>
        </trans-unit>
        <trans-unit id="02466358e536c7941ae60bb0d80b0e5f61e9ca27" translate="yes" xml:space="preserve">
          <source>Type of geography data</source>
          <target state="translated">地理数据的类型</target>
        </trans-unit>
        <trans-unit id="80639b7816c71c1eb7b8fd0ef7324c7ca20ec91d" translate="yes" xml:space="preserve">
          <source>Type of geometry data</source>
          <target state="translated">几何数据的类型</target>
        </trans-unit>
        <trans-unit id="657bf8cc823055c20626d868fa847d4cfc53f2f0" translate="yes" xml:space="preserve">
          <source>Type of index, available options are UNIQUE|FULLTEXT|SPATIAL</source>
          <target state="translated">索引类型,可用选项为UNIQUE|FULLTEXT|SPATIAL。</target>
        </trans-unit>
        <trans-unit id="d4a86cb946d4af4766f6a695502b64f3ea0cd58b" translate="yes" xml:space="preserve">
          <source>TypeScript</source>
          <target state="translated">TypeScript</target>
        </trans-unit>
        <trans-unit id="37dd88d1763196449c23edd76686c9e9f0cfc42d" translate="yes" xml:space="preserve">
          <source>TypeScript doesn't know how to generate a &lt;code&gt;class&lt;/code&gt; definition when we use the &lt;code&gt;sequelize.define&lt;/code&gt; method to define a Model. Therefore, we need to do some manual work and declare an interface and a type, and eventually cast the result of &lt;code&gt;.define&lt;/code&gt; to the &lt;em&gt;static&lt;/em&gt; type.</source>
          <target state="translated">当我们使用 &lt;code&gt;sequelize.define&lt;/code&gt; 方法定义模型时，TypeScript不知道如何生成 &lt;code&gt;class&lt;/code&gt; 定义。因此，我们需要做一些手工工作，并声明一个接口和一个类型，并最终将 &lt;code&gt;.define&lt;/code&gt; 的结果转换为&lt;em&gt;静态&lt;/em&gt;类型。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e49081c4bde9e1cfe58939ea3a16f1c972606e9a" translate="yes" xml:space="preserve">
          <source>Types can be set per-transaction by passing &lt;code&gt;options.type&lt;/code&gt; to &lt;code&gt;sequelize.transaction&lt;/code&gt;.</source>
          <target state="translated">可以通过将 &lt;code&gt;options.type&lt;/code&gt; 传递给 &lt;code&gt;sequelize.transaction&lt;/code&gt; 来为每个事务设置类型。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
