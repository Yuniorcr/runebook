<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="npm">
    <body>
      <group id="npm">
        <trans-unit id="6ab11015b9ffb90c214e00fc9515812e398c07e4" translate="yes" xml:space="preserve">
          <source>How to View the Tokens On Your Account</source>
          <target state="translated">如何查看您账户上的代币</target>
        </trans-unit>
        <trans-unit id="90b1dd88f8fa2f9b2343f05c37cd9b6b50027689" translate="yes" xml:space="preserve">
          <source>How to Work with Authentication Tokens</source>
          <target state="translated">如何使用认证令牌</target>
        </trans-unit>
        <trans-unit id="673620e4b50d0fc02b3dba9012c9a5e2568a5d18" translate="yes" xml:space="preserve">
          <source>How to Work with Scoped Packages</source>
          <target state="translated">如何使用范围包</target>
        </trans-unit>
        <trans-unit id="14158b744f89a40269d633be39ad0257d7e6899b" translate="yes" xml:space="preserve">
          <source>How to add an OTP to a command</source>
          <target state="translated">如何在命令中添加OTP</target>
        </trans-unit>
        <trans-unit id="a9349e085f4c18ea3a27f076942898248bd51c34" translate="yes" xml:space="preserve">
          <source>How to create a new authentication token</source>
          <target state="translated">如何创建一个新的认证令牌</target>
        </trans-unit>
        <trans-unit id="d186fdcab1f6f579c2c179f85aa64cd4bf739636" translate="yes" xml:space="preserve">
          <source>How to find a Linux &lt;a href=&quot;https://opensource.com/life/17/10/top-terminal-emulators&quot;&gt;terminal emulators&lt;/a&gt;.</source>
          <target state="translated">如何找到Linux &lt;a href=&quot;https://opensource.com/life/17/10/top-terminal-emulators&quot;&gt;终端模拟器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a07587e2f28434616b34c21ee30aeca32f8d2d2b" translate="yes" xml:space="preserve">
          <source>How to require two-factor authentication for package publishing and settings modification</source>
          <target state="translated">如何在发布包和修改设置时要求双因素认证?</target>
        </trans-unit>
        <trans-unit id="acf6bfb265b52eb8550477c2849b0b022bb8b257" translate="yes" xml:space="preserve">
          <source>How to uninstall global packages</source>
          <target state="translated">如何卸载全局包</target>
        </trans-unit>
        <trans-unit id="5e38d24dd03a6bc0635eccbdc2f1bc6b7c363b37" translate="yes" xml:space="preserve">
          <source>How to use Apple's terminal &lt;a href=&quot;https://support.apple.com/guide/terminal/welcome/mac&quot;&gt;Terminal&lt;/a&gt;.</source>
          <target state="translated">如何使用Apple的终端机&lt;a href=&quot;https://support.apple.com/guide/terminal/welcome/mac&quot;&gt;Terminal&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b7daeb663dc57c0c6ab4b570a8db7b365cbc7b9" translate="yes" xml:space="preserve">
          <source>How to use Microsoft Windows &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell&quot;&gt;PowerShell&lt;/a&gt;.</source>
          <target state="translated">如何使用Microsoft Windows &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell&quot;&gt;PowerShell&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1111dcf70795702662c29733ae3831616cc857de" translate="yes" xml:space="preserve">
          <source>How to use Semantic Versioning</source>
          <target state="translated">如何使用语义版本管理</target>
        </trans-unit>
        <trans-unit id="a334026f09fc3d21a92a0113f4b35a6d604fef71" translate="yes" xml:space="preserve">
          <source>However, if &lt;code&gt;app&lt;/code&gt;'s &lt;code&gt;package.json&lt;/code&gt; contains:</source>
          <target state="translated">但是，如果 &lt;code&gt;app&lt;/code&gt; 的 &lt;code&gt;package.json&lt;/code&gt; 包含：</target>
        </trans-unit>
        <trans-unit id="59d7e0dc24226896cd7fdbb7d61db8304a348469" translate="yes" xml:space="preserve">
          <source>However, if B@0.0.2 is published, then a fresh &lt;code&gt;npm install A&lt;/code&gt; will install:</source>
          <target state="translated">但是，如果发布了B@0.0.2，则将 &lt;code&gt;npm install A&lt;/code&gt; 新的npm install A：</target>
        </trans-unit>
        <trans-unit id="7ee263e6656c3ba2cae64587fae330085711ca38" translate="yes" xml:space="preserve">
          <source>However, please consider upgrading to the latest version of npm. To do this, type:</source>
          <target state="translated">但是,请考虑升级到最新版本的npm。要做到这一点,请输入</target>
        </trans-unit>
        <trans-unit id="d1e4a8e0b07ccc63f3b9140667bb7bf676a868f9" translate="yes" xml:space="preserve">
          <source>However, this doesn't work as you would expect, because you want the npm install to occur when you run &lt;code&gt;docker build&lt;/code&gt;, and in this instance, &lt;code&gt;ENV&lt;/code&gt; variables aren't used, they are set for runtime only.</source>
          <target state="translated">但是，这并不像您期望的那样起作用，因为您希望在运行 &lt;code&gt;docker build&lt;/code&gt; 时进行npm安装，并且在这种情况下，未使用 &lt;code&gt;ENV&lt;/code&gt; 变量，它们仅设置为运行时。</target>
        </trans-unit>
        <trans-unit id="9ead980df83b76ac399687609ff1e4d56f1ff6ae" translate="yes" xml:space="preserve">
          <source>Hyphen Ranges &lt;code&gt;X.Y.Z - A.B.C&lt;/code&gt;</source>
          <target state="translated">连字符范围 &lt;code&gt;X.Y.Z - A.B.C&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fb7470dd3d7658ae825e021f3317a74d702c439" translate="yes" xml:space="preserve">
          <source>I don't want my package published in the official registry. It's private.</source>
          <target state="translated">我不希望我的包被公布在官方登记处。它是私人的。</target>
        </trans-unit>
        <trans-unit id="0d198fcbc8a0fb3e48a8a3c4bf2d393d175b1ade" translate="yes" xml:space="preserve">
          <source>I fixed this issue for several of my colleagues by running the following two commands:</source>
          <target state="translated">我通过运行以下两个命令为我的几个同事解决了这个问题。</target>
        </trans-unit>
        <trans-unit id="a716980353c9dcc1a9950bbb104934297c3fb4d1" translate="yes" xml:space="preserve">
          <source>IMPORTANT VERSION NOTE: these examples assume &lt;code&gt;npm@2.6.1&lt;/code&gt; or later. For older versions of &lt;code&gt;npm&lt;/code&gt;, you must specify &lt;code&gt;--depth 0&lt;/code&gt; to get the behavior described below.</source>
          <target state="translated">重要版本注意：这些示例假定为 &lt;code&gt;npm@2.6.1&lt;/code&gt; 或更高版本。对于 &lt;code&gt;npm&lt;/code&gt; 的旧版本，必须指定 &lt;code&gt;--depth 0&lt;/code&gt; 才能获得下面描述的行为。</target>
        </trans-unit>
        <trans-unit id="0270ca97abe5bddc53ed95fb7179da4406621a18" translate="yes" xml:space="preserve">
          <source>INTRODUCTION</source>
          <target state="translated">INTRODUCTION</target>
        </trans-unit>
        <trans-unit id="8872d98c3f5db4cb2a8d9a1cf104cdacfd29a522" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;#&amp;lt;commit-ish&amp;gt;&lt;/code&gt; is provided, it will be used to clone exactly that commit. If the commit-ish has the format &lt;code&gt;#semver:&amp;lt;semver&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;semver&amp;gt;&lt;/code&gt; can be any valid semver range or exact version, and npm will look for any tags or refs matching that range in the remote repository, much as it would for a registry dependency. If neither &lt;code&gt;#&amp;lt;commit-ish&amp;gt;&lt;/code&gt; or &lt;code&gt;#semver:&amp;lt;semver&amp;gt;&lt;/code&gt; is specified, then &lt;code&gt;master&lt;/code&gt; is used.</source>
          <target state="translated">如果提供了 &lt;code&gt;#&amp;lt;commit-ish&amp;gt;&lt;/code&gt; ，它将用于精确克隆该提交。如果提交格式为 &lt;code&gt;#semver:&amp;lt;semver&amp;gt;&lt;/code&gt; ，则 &lt;code&gt;&amp;lt;semver&amp;gt;&lt;/code&gt; 可以是任何有效的semver范围或确切版本，并且npm会在远程存储库中查找与该范围匹配的任何标记或引用。注册表依赖项。如果未指定 &lt;code&gt;#&amp;lt;commit-ish&amp;gt;&lt;/code&gt; 或 &lt;code&gt;#semver:&amp;lt;semver&amp;gt;&lt;/code&gt; ，则使用 &lt;code&gt;master&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2ed09d0ba71c3c9967aefc493ec0627dba3f51a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--auth-type=sso&lt;/code&gt;, the type of SSO type to use.</source>
          <target state="translated">如果 &lt;code&gt;--auth-type=sso&lt;/code&gt; ，则使用的SSO类型的类型。</target>
        </trans-unit>
        <trans-unit id="22c6b7f8eebb652a7ac0bd781a8f9fe734e0eef7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;--scope&lt;/code&gt; is provided, this will find the credentials for the registry connected to that scope, if set.</source>
          <target state="translated">如果提供了 &lt;code&gt;--scope&lt;/code&gt; ，它将找到连接到该作用域的注册表的凭据（如果已设置）。</target>
        </trans-unit>
        <trans-unit id="8ef7e251354c8b82d68f45122c7dd6a2b8aa12c4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;-g&lt;/code&gt; is specified, this will be the value of the global prefix. See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; for more detail.</source>
          <target state="translated">如果指定了 &lt;code&gt;-g&lt;/code&gt; ，则它将是全局前缀的值。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57951890111475265c8e420c0c683853e35f57d6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;app&lt;/code&gt;'s &lt;code&gt;package.json&lt;/code&gt; contains:</source>
          <target state="translated">如果 &lt;code&gt;app&lt;/code&gt; 的 &lt;code&gt;package.json&lt;/code&gt; 包含：</target>
        </trans-unit>
        <trans-unit id="a6065df661d05aecba3e8805559f8f5e71e3c3fc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;preshrinkwrap&lt;/code&gt;, &lt;code&gt;shrinkwrap&lt;/code&gt; or &lt;code&gt;postshrinkwrap&lt;/code&gt; are in the &lt;code&gt;scripts&lt;/code&gt; property of the &lt;code&gt;package.json&lt;/code&gt;, they will be executed in order. &lt;code&gt;preshrinkwrap&lt;/code&gt; and &lt;code&gt;shrinkwrap&lt;/code&gt; are executed before the shrinkwrap, &lt;code&gt;postshrinkwrap&lt;/code&gt; is executed afterwards. These scripts run for both &lt;code&gt;package-lock.json&lt;/code&gt; and &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt;. For example to run some postprocessing on the generated file:</source>
          <target state="translated">如果 &lt;code&gt;preshrinkwrap&lt;/code&gt; ， &lt;code&gt;shrinkwrap&lt;/code&gt; 或 &lt;code&gt;postshrinkwrap&lt;/code&gt; 是在 &lt;code&gt;scripts&lt;/code&gt; 中的财产 &lt;code&gt;package.json&lt;/code&gt; ，他们将按顺序执行。 &lt;code&gt;preshrinkwrap&lt;/code&gt; 及 &lt;code&gt;shrinkwrap&lt;/code&gt; 的拆封之前执行， &lt;code&gt;postshrinkwrap&lt;/code&gt; 是继执行。这些脚本针对 &lt;code&gt;package-lock.json&lt;/code&gt; 和 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; shrinkwrap.json 运行。例如，对生成的文件运行一些后处理：</target>
        </trans-unit>
        <trans-unit id="4d8c80f3f73fc1893161e9eb736731f1543ea793" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;preversion&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt;, or &lt;code&gt;postversion&lt;/code&gt; are in the &lt;code&gt;scripts&lt;/code&gt; property of the package.json, they will be executed as part of running &lt;code&gt;npm version&lt;/code&gt;.</source>
          <target state="translated">如果package.json 的 &lt;code&gt;scripts&lt;/code&gt; 属性中包含 &lt;code&gt;preversion&lt;/code&gt; ， &lt;code&gt;version&lt;/code&gt; 或 &lt;code&gt;postversion&lt;/code&gt; ，则它们将作为运行 &lt;code&gt;npm version&lt;/code&gt; 的一部分执行。</target>
        </trans-unit>
        <trans-unit id="ea4f3ebc7a95684333a35810954531fa24fd5c2c" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;node_modules&lt;/code&gt; is already present, it will be automatically removed before &lt;code&gt;npm ci&lt;/code&gt; begins its install.</source>
          <target state="translated">如果已经存在一个 &lt;code&gt;node_modules&lt;/code&gt; ，它将在 &lt;code&gt;npm ci&lt;/code&gt; 开始安装之前被自动删除。</target>
        </trans-unit>
        <trans-unit id="48660032ce5ebff886c23d1291e752901844ca6e" translate="yes" xml:space="preserve">
          <source>If a block needs to wrap to the next line, use a curly brace. Don't use it if it doesn't.</source>
          <target state="translated">如果一个区块需要包到下一行,就用卷括号。如果不需要,就不要用它。</target>
        </trans-unit>
        <trans-unit id="4f53ece0fd8c9886cb9243933cd34f18899c789e" translate="yes" xml:space="preserve">
          <source>If a command is specified, then it is run in the subshell, which then immediately terminates.</source>
          <target state="translated">如果指定了一个命令,那么它就会在子壳中运行,然后立即终止。</target>
        </trans-unit>
        <trans-unit id="bc20cef50268ef04512194f809a0019ad3b1d3ba" translate="yes" xml:space="preserve">
          <source>If a dependency can be used, but you would like npm to proceed if it cannot be found or fails to install, then you may put it in the &lt;code&gt;optionalDependencies&lt;/code&gt; object. This is a map of package name to version or url, just like the &lt;code&gt;dependencies&lt;/code&gt; object. The difference is that build failures do not cause installation to fail.</source>
          <target state="translated">如果可以使用依赖项，但是如果找不到或无法安装npm，则希望npm继续，则可以将其放在 &lt;code&gt;optionalDependencies&lt;/code&gt; 对象中。这是程序包名称到版本或url的映射，就像 &lt;code&gt;dependencies&lt;/code&gt; 对象一样。区别在于构建失败不会导致安装失败。</target>
        </trans-unit>
        <trans-unit id="15ddce337798f4f86fc21b875cc17226310eb1ae" translate="yes" xml:space="preserve">
          <source>If a fix does not exist, you may want to suggest changes that address the vulnerability to the package maintainer in a pull or merge request on the package repository.</source>
          <target state="translated">如果不存在修复程序,你可以在软件包仓库的拉取或合并请求中向软件包维护者提出解决该漏洞的修改。</target>
        </trans-unit>
        <trans-unit id="df4df570198852a61194e155bf30682ab5cc9bbe" translate="yes" xml:space="preserve">
          <source>If a fix exists but packages that depend on the package with the vulnerability have not been updated to include the fixed version, you may want to open a pull or merge request on the dependent package repository to use the fixed version.</source>
          <target state="translated">如果存在修复版,但依赖该漏洞的软件包没有更新以包含修复版,你可能需要在依赖的软件包仓库中打开一个 pull 或 merge 请求来使用修复版。</target>
        </trans-unit>
        <trans-unit id="3d7c9a024312fcb2da25315e60a6118fbd36aac1" translate="yes" xml:space="preserve">
          <source>If a package references to another package with a git URL, npm depends on a preinstalled git.</source>
          <target state="translated">如果一个软件包引用了另一个带有 git URL 的软件包,那么 npm 就会依赖一个预装的 git。</target>
        </trans-unit>
        <trans-unit id="27f0c9667d26852d6311c55e15f62c9739f73490" translate="yes" xml:space="preserve">
          <source>If a package would be saved at install time by the use of &lt;code&gt;--save&lt;/code&gt;, &lt;code&gt;--save-dev&lt;/code&gt;, or &lt;code&gt;--save-optional&lt;/code&gt;, then also put it in the &lt;code&gt;bundleDependencies&lt;/code&gt; list.</source>
          <target state="translated">如果要在安装时使用 &lt;code&gt;--save&lt;/code&gt; ，-- &lt;code&gt;--save-dev&lt;/code&gt; 或 &lt;code&gt;--save-optional&lt;/code&gt; 来保存软件包，则还将其放在 &lt;code&gt;bundleDependencies&lt;/code&gt; 列表中。</target>
        </trans-unit>
        <trans-unit id="56f6800a3b8eed6f2655d8b06bfa1bec6a9ce6c7" translate="yes" xml:space="preserve">
          <source>If a package's name begins with &lt;code&gt;@&lt;/code&gt;, then it is a &lt;strong&gt;scoped package&lt;/strong&gt;. The scope is everything in between the &lt;code&gt;@&lt;/code&gt; and the slash.</source>
          <target state="translated">如果程序包的名称以 &lt;code&gt;@&lt;/code&gt; 开头，则它是有&lt;strong&gt;范围的程序包&lt;/strong&gt;。范围是 &lt;code&gt;@&lt;/code&gt; 和斜杠之间的所有内容。</target>
        </trans-unit>
        <trans-unit id="f18210906ab2558250fa33da8dca3949efcf3889" translate="yes" xml:space="preserve">
          <source>If a package's name begins with &lt;code&gt;@&lt;/code&gt;, then it is a scoped package. The scope is everything in between the &lt;code&gt;@&lt;/code&gt; and the slash.</source>
          <target state="translated">如果程序包的名称以 &lt;code&gt;@&lt;/code&gt; 开头，则它是有范围的程序包。范围是 &lt;code&gt;@&lt;/code&gt; 和斜杠之间的所有内容。</target>
        </trans-unit>
        <trans-unit id="1c4489b94e704e265d6f7ca56daa52f4d972fab4" translate="yes" xml:space="preserve">
          <source>If a partial version is provided as the first version in the inclusive range, then the missing pieces are replaced with zeroes.</source>
          <target state="translated">如果提供了部分版本作为包容范围内的第一个版本,那么缺失的部分用零代替。</target>
        </trans-unit>
        <trans-unit id="0436481924c294bc5fd874a221e130da05eac9fd" translate="yes" xml:space="preserve">
          <source>If a partial version is provided as the second version in the inclusive range, then all versions that start with the supplied parts of the tuple are accepted, but nothing that would be greater than the provided tuple parts.</source>
          <target state="translated">如果提供了一个部分版本作为包含范围内的第二个版本,那么所有从所提供的元组部分开始的版本都会被接受,但不会有任何大于所提供的元组部分的版本。</target>
        </trans-unit>
        <trans-unit id="8ee1e7cf814d87aca3e0e5ea712f6e5b9838e776" translate="yes" xml:space="preserve">
          <source>If a project is going to be shared with others, it should start at &lt;code&gt;1.0.0&lt;/code&gt;, (though some projects on npm don't follow this rule).</source>
          <target state="translated">如果要与其他人共享一个项目，则该项目应从 &lt;code&gt;1.0.0&lt;/code&gt; 开始（尽管npm上的某些项目不遵循此规则）。</target>
        </trans-unit>
        <trans-unit id="eb03d55c50238960b490fcf51b8fd71bfcae6ba0" translate="yes" xml:space="preserve">
          <source>If a project specifies git urls for dependencies these are shown in parentheses after the name@version to make it easier for users to recognize potential forks of a project.</source>
          <target state="translated">如果一个项目为依赖关系指定了 git urls,那么这些会在 name@version 后面的括号中显示,以便于用户识别项目的潜在分叉。</target>
        </trans-unit>
        <trans-unit id="5680893cbbd86d1b4604336b685fb5b36fddb68a" translate="yes" xml:space="preserve">
          <source>If a suitable version exists at the target location in the tree already, then it will be left untouched, but the other duplicates will be deleted.</source>
          <target state="translated">如果在树中的目标位置已经存在一个合适的版本,那么它将不被触动,但其他重复的版本将被删除。</target>
        </trans-unit>
        <trans-unit id="c44df5e08784adf253f0193f59c87cf10a9d5137" translate="yes" xml:space="preserve">
          <source>If a term starts with &lt;code&gt;/&lt;/code&gt;, then it's interpreted as a regular expression and supports standard JavaScript RegExp syntax. A trailing &lt;code&gt;/&lt;/code&gt; will be ignored in this case. (Note that many regular expression characters must be escaped or quoted in most shells.)</source>
          <target state="translated">如果术语以 &lt;code&gt;/&lt;/code&gt; 开头，则将其解释为正则表达式并支持标准JavaScript RegExp语法。在这种情况下，尾部的 &lt;code&gt;/&lt;/code&gt; 将被忽略。（请注意，大多数外壳程序中必须对许多正则表达式字符进行转义或引用）。</target>
        </trans-unit>
        <trans-unit id="20fc3038ec0e74393eb977b772dbde9536c74be9" translate="yes" xml:space="preserve">
          <source>If a url is provided, it will be used by the &lt;code&gt;npm bugs&lt;/code&gt; command.</source>
          <target state="translated">如果提供了网址，则 &lt;code&gt;npm bugs&lt;/code&gt; 命令将使用该网址。</target>
        </trans-unit>
        <trans-unit id="0f73dfd15f43780934bce4eb36b585671d6b010c" translate="yes" xml:space="preserve">
          <source>If a version has a prerelease tag (for example, &lt;code&gt;1.2.3-alpha.3&lt;/code&gt;) then it will only be allowed to satisfy comparator sets if at least one comparator with the same &lt;code&gt;[major, minor, patch]&lt;/code&gt; tuple also has a prerelease tag.</source>
          <target state="translated">如果一个版本具有预发行标签（例如 &lt;code&gt;1.2.3-alpha.3&lt;/code&gt; ），则只有在至少一个具有相同 &lt;code&gt;[major, minor, patch]&lt;/code&gt; 元组的比较器也具有预发行标签的情况下，才允许它满足比较器集。。</target>
        </trans-unit>
        <trans-unit id="9b4929cadfd908e20c25fc75db0a9941a9877fb4" translate="yes" xml:space="preserve">
          <source>If a version range is provided, then data will be printed for every matching version of the package. This will show which version of jsdom was required by each matching version of yui3:</source>
          <target state="translated">如果提供了一个版本范围,那么数据将被打印出每一个匹配版本的软件包。这将显示每个匹配的 yui3 版本所需要的 jsdom 版本。</target>
        </trans-unit>
        <trans-unit id="0f2e4f0b4924de3f7090997ba5e40815fd37fa79" translate="yes" xml:space="preserve">
          <source>If both &lt;code&gt;package-lock.json&lt;/code&gt; and &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; are present in the root of a package, &lt;code&gt;package-lock.json&lt;/code&gt; will be completely ignored.</source>
          <target state="translated">如果 &lt;code&gt;package-lock.json&lt;/code&gt; 和 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; -shrinkwrap.json都存在于包的根目录中，则 &lt;code&gt;package-lock.json&lt;/code&gt; 将被完全忽略。</target>
        </trans-unit>
        <trans-unit id="a3b78a4d89fe55d6a91ad719fbd39a1d95e11922" translate="yes" xml:space="preserve">
          <source>If called from a non-prerelease version, the &lt;code&gt;prerelease&lt;/code&gt; will work the same as &lt;code&gt;prepatch&lt;/code&gt;. It increments the patch version, then makes a prerelease. If the input version is already a prerelease it simply increments it.</source>
          <target state="translated">如果从非预发行版本调用，则 &lt;code&gt;prerelease&lt;/code&gt; 发行版本将与 &lt;code&gt;prepatch&lt;/code&gt; 相同。它会增加补丁程序版本，然后进行预发行。如果输入版本已经是预发行版，则只需对其增加即可。</target>
        </trans-unit>
        <trans-unit id="d6b890a67153d0584c110f65f4ece5d7500121c6" translate="yes" xml:space="preserve">
          <source>If dependencies in the package lock do not match those in &lt;code&gt;package.json&lt;/code&gt;, &lt;code&gt;npm ci&lt;/code&gt; will exit with an error, instead of updating the package lock.</source>
          <target state="translated">如果程序包锁中的依赖项与 &lt;code&gt;package.json&lt;/code&gt; 中的依赖项不匹配，则 &lt;code&gt;npm ci&lt;/code&gt; 将退出并显示错误，而不是更新程序包锁。</target>
        </trans-unit>
        <trans-unit id="569701b17684cb74444fe56580d01b59275f64a5" translate="yes" xml:space="preserve">
          <source>If false, never shows colors. If &lt;code&gt;&quot;always&quot;&lt;/code&gt; then always shows colors. If true, then only prints color codes for tty file descriptors.</source>
          <target state="translated">如果为假，则从不显示颜色。如果 &lt;code&gt;&quot;always&quot;&lt;/code&gt; 则始终显示颜色。如果为true，则仅打印tty文件描述符的颜色代码。</target>
        </trans-unit>
        <trans-unit id="1507092bca4d6154b6af0d6d45fe0716c8766503" translate="yes" xml:space="preserve">
          <source>If false, then help-search will just list out the help topics found.</source>
          <target state="translated">如果为false,那么help-search将只列出找到的帮助主题。</target>
        </trans-unit>
        <trans-unit id="c4bf2d25cf4f1f895a14c4ba9b1c337fb457e53f" translate="yes" xml:space="preserve">
          <source>If it doesn't, here we'll look at the problems with this workflow when running &lt;code&gt;npm install&lt;/code&gt; inside a Docker container.</source>
          <target state="translated">如果不是这样，我们将在Docker容器中运行 &lt;code&gt;npm install&lt;/code&gt; 时，研究此工作流程的问题。</target>
        </trans-unit>
        <trans-unit id="bc3a311453961b2bc241472ae5610b10709cc07b" translate="yes" xml:space="preserve">
          <source>If it isn't set to &lt;code&gt;&amp;lt;X&amp;gt;:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\npm&lt;/code&gt;, you can run the below command to correct it:</source>
          <target state="translated">如果未将其设置为 &lt;code&gt;&amp;lt;X&amp;gt;:\Users\&amp;lt;user&amp;gt;\AppData\Roaming\npm&lt;/code&gt; ，则可以运行以下命令对其进行更正：</target>
        </trans-unit>
        <trans-unit id="c003d5cfe7d05bbd855b747051eb95b1870dda03" translate="yes" xml:space="preserve">
          <source>If multiple fields are requested, than each of them are prefixed with the field name.</source>
          <target state="translated">如果请求多个字段,则每个字段都以字段名为前缀。</target>
        </trans-unit>
        <trans-unit id="9e95e4277eabe125f10a4c42a239ce0911860221" translate="yes" xml:space="preserve">
          <source>If multiple single-character shorthands are strung together, and the resulting combination is unambiguously not some other configuration param, then it is expanded to its various component pieces. For example:</source>
          <target state="translated">如果多个单字符速记符串在一起,并且所产生的组合毫不含糊地不是其他配置参数,那么它就会被扩展到它的各个组成部分。例如</target>
        </trans-unit>
        <trans-unit id="0a26483186b5606c608a05e67cd9371220326022" translate="yes" xml:space="preserve">
          <source>If no arguments are supplied, then npm packs the current package folder.</source>
          <target state="translated">如果没有提供参数,那么npm就会打包当前的软件包文件夹。</target>
        </trans-unit>
        <trans-unit id="3c40aa5bf6a71b95208f2744cf0a772260354967" translate="yes" xml:space="preserve">
          <source>If no package name is specified, all packages in the specified location (global or local) will be updated.</source>
          <target state="translated">如果没有指定包名,那么指定位置(全局或本地)的所有包都会被更新。</target>
        </trans-unit>
        <trans-unit id="6649998c77c7d50428133f88e4ef304ab6eb0eba" translate="yes" xml:space="preserve">
          <source>If no package root is found, then the current folder is used.</source>
          <target state="translated">如果没有找到包根,则使用当前文件夹。</target>
        </trans-unit>
        <trans-unit id="1bf0ab6e625197cbbb498914873193ce82f38923" translate="yes" xml:space="preserve">
          <source>If no security vulnerabilities are found, this means that packages with known vulnerabilities were not found in your package dependency tree. Since the advisory database can be updated at any time, we recommend regularly running &lt;code&gt;npm audit&lt;/code&gt; manually, or adding &lt;code&gt;npm audit&lt;/code&gt; to your continuous integration process.</source>
          <target state="translated">如果未找到安全漏洞，则意味着在程序包依赖关系树中未找到具有已知漏洞的程序包。由于可以随时更新咨询数据库，因此建议您定期手动运行 &lt;code&gt;npm audit&lt;/code&gt; ，或将 &lt;code&gt;npm audit&lt;/code&gt; 添加到您的持续集成过程中。</target>
        </trans-unit>
        <trans-unit id="bb5819f29eac27bda216ceca44b343dde89ee773" translate="yes" xml:space="preserve">
          <source>If no version is specified, or if all versions are removed then the root package entry is removed from the registry entirely.</source>
          <target state="translated">如果没有指定版本,或者如果删除了所有版本,那么根包条目将从注册表中完全删除。</target>
        </trans-unit>
        <trans-unit id="9d2454300690b0f722ffb3792162d2e5e5672018" translate="yes" xml:space="preserve">
          <source>If npm was invoked with root privileges, then it will change the uid to the user account or uid specified by the &lt;code&gt;user&lt;/code&gt; config, which defaults to &lt;code&gt;nobody&lt;/code&gt;. Set the &lt;code&gt;unsafe-perm&lt;/code&gt; flag to run scripts with root privileges.</source>
          <target state="translated">如果npm是用root特权调用的，则它将uid更改为用户帐户或 &lt;code&gt;user&lt;/code&gt; 配置指定的uid ，默认情况下为 &lt;code&gt;nobody&lt;/code&gt; 。设置 &lt;code&gt;unsafe-perm&lt;/code&gt; 标志以使用root特权运行脚本。</target>
        </trans-unit>
        <trans-unit id="7400638fa7134524147705d44337374ef3a99399" translate="yes" xml:space="preserve">
          <source>If one of the packages npm tries to install is a native node module and requires compiling of C++ Code, npm will use &lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gyp&lt;/a&gt; for that task. For a Unix system, &lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gyp&lt;/a&gt; needs Python, make and a buildchain like GCC. On Windows, Python and Microsoft Visual Studio C++ are needed. Python 3 is not supported by &lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gyp&lt;/a&gt;. For more information visit &lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;the node-gyp repository&lt;/a&gt; and the &lt;a href=&quot;https://github.com/TooTallNate/node-gyp/wiki&quot;&gt;node-gyp Wiki&lt;/a&gt;.</source>
          <target state="translated">如果npm尝试安装的软件包之一是本机节点模块，并且需要编译C ++代码，则npm将使用&lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gyp&lt;/a&gt;来完成该任务。对于Unix系统，&lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-&lt;/a&gt; gyp需要Python，make和类似GCC的构建链。在Windows上，需要Python和Microsoft Visual Studio C ++。&lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gyp&lt;/a&gt;不支持Python 3 。有关更多信息，请访问&lt;a href=&quot;https://github.com/TooTallNate/node-gyp&quot;&gt;node-gyp存储库&lt;/a&gt;和&lt;a href=&quot;https://github.com/TooTallNate/node-gyp/wiki&quot;&gt;node-gyp Wiki&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc864e3b6bab6389bd387a987ccf3be36b875576" translate="yes" xml:space="preserve">
          <source>If only a single file is provided, then it's installed such that it is the result from &lt;code&gt;man &amp;lt;pkgname&amp;gt;&lt;/code&gt;, regardless of its actual filename. For example:</source>
          <target state="translated">如果仅提供单个文件，则将其安装为 &lt;code&gt;man &amp;lt;pkgname&amp;gt;&lt;/code&gt; 的结果，而不管其实际文件名如何。例如：</target>
        </trans-unit>
        <trans-unit id="b869b809f6a2500b405e0aa198795a77f1057b96" translate="yes" xml:space="preserve">
          <source>If only a single string field for a single version is output, then it will not be colorized or quoted, so as to enable piping the output to another command. If the field is an object, it will be output as a JavaScript object literal.</source>
          <target state="translated">如果只输出一个版本的单个字符串字段,那么它将不会被着色或引用,以便能够将输出结果用管道传送到另一个命令。如果字段是一个对象,它将作为一个JavaScript对象文字输出。</target>
        </trans-unit>
        <trans-unit id="054c1fce7352d2a625eb25fbc22cd025f44ef473" translate="yes" xml:space="preserve">
          <source>If only one result is found, then it will show that help topic.</source>
          <target state="translated">如果只找到一个结果,则会显示该帮助主题。</target>
        </trans-unit>
        <trans-unit id="de6fe34de375ee6f1e79646682c56c1427521391" translate="yes" xml:space="preserve">
          <source>If run in a git repo, it will also create a version commit and tag. This behavior is controlled by &lt;code&gt;git-tag-version&lt;/code&gt; (see below), and can be disabled on the command line by running &lt;code&gt;npm --no-git-tag-version version&lt;/code&gt;. It will fail if the working directory is not clean, unless the &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--force&lt;/code&gt; flag is set.</source>
          <target state="translated">如果在git repo中运行，它还将创建版本提交和标记。此行为由 &lt;code&gt;git-tag-version&lt;/code&gt; 控制（请参见下文），可以通过运行 &lt;code&gt;npm --no-git-tag-version version&lt;/code&gt; 在命令行上禁用。如果工作目录不干净，它将失败，除非设置了 &lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--force&lt;/code&gt; 标志。</target>
        </trans-unit>
        <trans-unit id="1d16c5bd45666faa46ba1509357c1c2d53c6ffb0" translate="yes" xml:space="preserve">
          <source>If security vulnerabilities are found and updates are available, you can either:</source>
          <target state="translated">如果发现安全漏洞并进行更新,你可以或者。</target>
        </trans-unit>
        <trans-unit id="77251400860c48bbdeb844524e55c1243775ff50" translate="yes" xml:space="preserve">
          <source>If security vulnerabilities are found, but no patches are available, the audit report will provide information about the vulnerability so you can investigate further.</source>
          <target state="translated">如果发现安全漏洞,但没有补丁,审计报告将提供有关漏洞的信息,以便你进一步调查。</target>
        </trans-unit>
        <trans-unit id="5801cfbc2b83ca70d368b7d4385d952af355e54e" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;&quot;warn-only&quot;&lt;/code&gt;, never modify &lt;code&gt;PATH&lt;/code&gt; but print a warning if &lt;code&gt;npm&lt;/code&gt; thinks that you may want to run it with &lt;code&gt;true&lt;/code&gt;, e.g. because the &lt;code&gt;node&lt;/code&gt; executable in the &lt;code&gt;PATH&lt;/code&gt; is not the one &lt;code&gt;npm&lt;/code&gt; was invoked with.</source>
          <target state="translated">如果设置为 &lt;code&gt;&quot;warn-only&quot;&lt;/code&gt; ，但不会改变 &lt;code&gt;PATH&lt;/code&gt; ，但如果打印警告 &lt;code&gt;npm&lt;/code&gt; 认为你可能要与运行它 &lt;code&gt;true&lt;/code&gt; ，例如，由于 &lt;code&gt;node&lt;/code&gt; 的可执行文件 &lt;code&gt;PATH&lt;/code&gt; 是不是一个 &lt;code&gt;npm&lt;/code&gt; 与调用。</target>
        </trans-unit>
        <trans-unit id="8c9013120c34758241328606ee598ba22585389b" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;auto&lt;/code&gt;, only add that directory to the &lt;code&gt;PATH&lt;/code&gt; environment variable if the &lt;code&gt;node&lt;/code&gt; executable with which &lt;code&gt;npm&lt;/code&gt; was invoked and the one that is found first on the &lt;code&gt;PATH&lt;/code&gt; are different.</source>
          <target state="translated">如果设置为 &lt;code&gt;auto&lt;/code&gt; ，则仅当调用 &lt;code&gt;npm&lt;/code&gt; 的 &lt;code&gt;node&lt;/code&gt; 可执行文件与在 &lt;code&gt;PATH&lt;/code&gt; 上首先找到的可执行文件不同时，才将该目录添加到 &lt;code&gt;PATH&lt;/code&gt; 环境变量中。</target>
        </trans-unit>
        <trans-unit id="ac147944fd81371dc1e2d679055f62ac504b2484" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;false&lt;/code&gt;, never modify &lt;code&gt;PATH&lt;/code&gt; with that.</source>
          <target state="translated">如果设置为 &lt;code&gt;false&lt;/code&gt; ，则永远不要用它修改 &lt;code&gt;PATH&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0028dd3405a76ed1528c1600c1754285bfb1c39d" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;true&lt;/code&gt;, add the directory in which the current &lt;code&gt;node&lt;/code&gt; executable resides to the &lt;code&gt;PATH&lt;/code&gt; environment variable when running scripts, even if that means that &lt;code&gt;npm&lt;/code&gt; will invoke a different &lt;code&gt;node&lt;/code&gt; executable than the one which it is running.</source>
          <target state="translated">如果设置为 &lt;code&gt;true&lt;/code&gt; ，则在运行脚本时将当前 &lt;code&gt;node&lt;/code&gt; 可执行文件所在的目录添加到 &lt;code&gt;PATH&lt;/code&gt; 环境变量中，即使这意味着 &lt;code&gt;npm&lt;/code&gt; 将调用与其正在运行的 &lt;code&gt;node&lt;/code&gt; 可执行文件不同的节点可执行文件。</target>
        </trans-unit>
        <trans-unit id="aadbb350b17afe724523ee3f2e3038c5226fdb4a" translate="yes" xml:space="preserve">
          <source>If set to false, then ignore &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; files when installing. This will also prevent &lt;em&gt;writing&lt;/em&gt;&lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; if &lt;code&gt;save&lt;/code&gt; is true.</source>
          <target state="translated">如果设置为false，则在安装时忽略 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 文件。如果 &lt;code&gt;save&lt;/code&gt; 为true，这也将阻止&lt;em&gt;编写&lt;/em&gt; &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e39fa49ee4061936e6e40c3e00da5a5dd742b83e" translate="yes" xml:space="preserve">
          <source>If set to false, then ignore &lt;code&gt;package-lock.json&lt;/code&gt; files when installing. This will also prevent &lt;em&gt;writing&lt;/em&gt;&lt;code&gt;package-lock.json&lt;/code&gt; if &lt;code&gt;save&lt;/code&gt; is true.</source>
          <target state="translated">如果设置为false，则在安装时忽略 &lt;code&gt;package-lock.json&lt;/code&gt; 文件。如果 &lt;code&gt;save&lt;/code&gt; 为true，这也将阻止&lt;em&gt;编写&lt;/em&gt; &lt;code&gt;package-lock.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9114da8dfc7cb9581eb626f22e1a555ad3f41c8" translate="yes" xml:space="preserve">
          <source>If set to true, it will update only the &lt;code&gt;package-lock.json&lt;/code&gt;, instead of checking &lt;code&gt;node_modules&lt;/code&gt; and downloading dependencies.</source>
          <target state="translated">如果设置为true，它将仅更新 &lt;code&gt;package-lock.json&lt;/code&gt; ，而不检查 &lt;code&gt;node_modules&lt;/code&gt; 和下载依赖项。</target>
        </trans-unit>
        <trans-unit id="f15141c832294834e815a97158b834354f8a54d8" translate="yes" xml:space="preserve">
          <source>If set to true, then npm will stubbornly refuse to install (or even consider installing) any package that claims to not be compatible with the current Node.js version.</source>
          <target state="translated">如果设置为 &quot;true&quot;,那么npm将顽固地拒绝安装(甚至考虑安装)任何声称与当前Node.js版本不兼容的包。</target>
        </trans-unit>
        <trans-unit id="cf733046b8742d5c68de251d2fab75b162855c6d" translate="yes" xml:space="preserve">
          <source>If set to true, then the &lt;code&gt;npm version&lt;/code&gt; command will commit the new package version using &lt;code&gt;-S&lt;/code&gt; to add a signature.</source>
          <target state="translated">如果设置为true，则 &lt;code&gt;npm version&lt;/code&gt; 命令将使用 &lt;code&gt;-S&lt;/code&gt; 提交新的软件包版本以添加签名。</target>
        </trans-unit>
        <trans-unit id="57a1bf4e27267e37abfb1070df3eb3f0fd3d8039" translate="yes" xml:space="preserve">
          <source>If set to true, then the &lt;code&gt;npm version&lt;/code&gt; command will tag the version using &lt;code&gt;-s&lt;/code&gt; to add a signature.</source>
          <target state="translated">如果设置为true，则 &lt;code&gt;npm version&lt;/code&gt; 命令将使用 &lt;code&gt;-s&lt;/code&gt; 标记版本以添加签名。</target>
        </trans-unit>
        <trans-unit id="8f8eed91582837e4e882b1d3d7ced8f8128a5df9" translate="yes" xml:space="preserve">
          <source>If set, alters the prefix used when tagging a new version when performing a version increment using &lt;code&gt;npm-version&lt;/code&gt;. To remove the prefix altogether, set it to the empty string: &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">如果设置，则使用 &lt;code&gt;npm-version&lt;/code&gt; 执行版本增量时，更改标记新版本时使用的前缀。要完全删除前缀，请将其设置为空字符串： &lt;code&gt;&quot;&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e3d26e76680cd83b71bd3591244d5b2a8b41d6e" translate="yes" xml:space="preserve">
          <source>If someone is planning on downloading and using your module in their program, then they probably don't want or need to download and build the external test or documentation framework that you use.</source>
          <target state="translated">如果有人打算下载并在他们的程序中使用你的模块,那么他们可能不想也不需要下载并构建你使用的外部测试或文档框架。</target>
        </trans-unit>
        <trans-unit id="1a163bca1a67e9765074e705fd66d7418d24a9bb" translate="yes" xml:space="preserve">
          <source>If specified, save configuration indicating that all requests to the given registry should include authorization information. Useful for private registries. Can be used with &lt;code&gt;--registry&lt;/code&gt; and / or &lt;code&gt;--scope&lt;/code&gt;, e.g.</source>
          <target state="translated">如果指定，请保存配置，该配置指示对给定注册表的所有请求都应包括授权信息。对私人注册表有用。可以与 &lt;code&gt;--registry&lt;/code&gt; 和/或 &lt;code&gt;--scope&lt;/code&gt; 一起使用，例如</target>
        </trans-unit>
        <trans-unit id="c857172dfd36dae227e73a2d3392843801682f6a" translate="yes" xml:space="preserve">
          <source>If specified, the user and login credentials given will be associated with the specified scope. See &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;. You can use both at the same time, e.g.</source>
          <target state="translated">如果指定，则给定的用户和登录凭据将与指定的范围相关联。参见 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; 。您可以同时使用两者，例如</target>
        </trans-unit>
        <trans-unit id="b21663fe93f8c189bc8c5557172407f8fc38905b" translate="yes" xml:space="preserve">
          <source>If specified, you will be logged out of the specified scope. See &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">如果指定，您将退出指定的范围。参见 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="516127b76e58349d0c25460299bdd91b34f98e7a" translate="yes" xml:space="preserve">
          <source>If supplied a topic, then show the appropriate documentation page.</source>
          <target state="translated">如果提供了一个主题,则显示相应的文档页。</target>
        </trans-unit>
        <trans-unit id="f38c1bf71a339f1eb2e4a09c4b7aa312c58abe34" translate="yes" xml:space="preserve">
          <source>If supplied with &lt;code&gt;-m&lt;/code&gt; or &lt;code&gt;--message&lt;/code&gt; config option, npm will use it as a commit message when creating a version commit. If the &lt;code&gt;message&lt;/code&gt; config contains &lt;code&gt;%s&lt;/code&gt; then that will be replaced with the resulting version number. For example:</source>
          <target state="translated">如果提供了 &lt;code&gt;-m&lt;/code&gt; 或 &lt;code&gt;--message&lt;/code&gt; config选项，则npm在创建版本提交时会将其用作提交消息。如果 &lt;code&gt;message&lt;/code&gt; 配置中包含 &lt;code&gt;%s&lt;/code&gt; ，则将其替换为结果版本号。例如：</target>
        </trans-unit>
        <trans-unit id="34a2c6a42794efcbe35cb8741d73df26150cce1e" translate="yes" xml:space="preserve">
          <source>If that doesn't work, or if you require more drastic measures, continue reading.</source>
          <target state="translated">如果还不行,或者你需要更激烈的措施,请继续阅读。</target>
        </trans-unit>
        <trans-unit id="b168aefa5cda7c70c137b4773b26d91be93d1930" translate="yes" xml:space="preserve">
          <source>If that's not the problem, or if you are seeing the message &lt;code&gt;&quot;may not mix password_sha and pbkdf2&quot;&lt;/code&gt;, then</source>
          <target state="translated">如果那不是问题，或者如果您看到消息 &lt;code&gt;&quot;may not mix password_sha and pbkdf2&quot;&lt;/code&gt; ，则</target>
        </trans-unit>
        <trans-unit id="d739a7ccdd64d491088df2c34a364622fe7033ed" translate="yes" xml:space="preserve">
          <source>If the --json flag is given, the outputted fields will be JSON.</source>
          <target state="translated">如果给出--json标志,输出的字段将是JSON。</target>
        </trans-unit>
        <trans-unit id="b53c2cf4d34bb2dec2d488bf6d245ce1ea84c384" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--dry-run&lt;/code&gt; flag is used then no changes will actually be made.</source>
          <target state="translated">如果使用 &lt;code&gt;--dry-run&lt;/code&gt; 标志，那么实际上将不会进行任何更改。</target>
        </trans-unit>
        <trans-unit id="8027155297514027c4973159ba7bc8d114abd24f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--json&lt;/code&gt; flag is used then the changes &lt;code&gt;npm prune&lt;/code&gt; made (or would have made with &lt;code&gt;--dry-run&lt;/code&gt;) are printed as a JSON object.</source>
          <target state="translated">如果使用了 &lt;code&gt;--json&lt;/code&gt; 标志，那么对 &lt;code&gt;npm prune&lt;/code&gt; 所做的更改（或将通过 &lt;code&gt;--dry-run&lt;/code&gt; 进行的更改）将打印为JSON对象。</target>
        </trans-unit>
        <trans-unit id="45c82d46d54ce0520b99c5269f1d7281f93745bf" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;--production&lt;/code&gt; flag is specified or the &lt;code&gt;NODE_ENV&lt;/code&gt; environment variable is set to &lt;code&gt;production&lt;/code&gt;, this command will remove the packages specified in your &lt;code&gt;devDependencies&lt;/code&gt;. Setting &lt;code&gt;--no-production&lt;/code&gt; will negate &lt;code&gt;NODE_ENV&lt;/code&gt; being set to &lt;code&gt;production&lt;/code&gt;.</source>
          <target state="translated">如果指定了 &lt;code&gt;--production&lt;/code&gt; 标志或将 &lt;code&gt;NODE_ENV&lt;/code&gt; 环境变量设置为 &lt;code&gt;production&lt;/code&gt; ，则此命令将删除 &lt;code&gt;devDependencies&lt;/code&gt; 中指定的软件包。设置 &lt;code&gt;--no-production&lt;/code&gt; 将否定 &lt;code&gt;NODE_ENV&lt;/code&gt; 设置为 &lt;code&gt;production&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3304eaff4cd5de029e1fa7549bebbb531d834536" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;-g&lt;/code&gt; flag is specified, this command will update globally installed packages.</source>
          <target state="translated">如果指定了 &lt;code&gt;-g&lt;/code&gt; 标志，则此命令将更新全局安装的软件包。</target>
        </trans-unit>
        <trans-unit id="54ccf51c907e90a208c5b75075c2890facbe09b8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;color&lt;/code&gt; config is set to true, then this stream will receive colored output if it is a TTY.</source>
          <target state="translated">如果 &lt;code&gt;color&lt;/code&gt; config设置为true，则此流将在TTY情况下接收彩色输出。</target>
        </trans-unit>
        <trans-unit id="97cc62f1ff1bb295869a65b6ef574c653194a607" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;global&lt;/code&gt; configuration is set to true, then npm will install packages &quot;globally&quot;.</source>
          <target state="translated">如果 &lt;code&gt;global&lt;/code&gt; 配置设置为true，则npm将&amp;ldquo;全局&amp;rdquo;安装软件包。</target>
        </trans-unit>
        <trans-unit id="06fccde2c7402bfd28bb85e8f9d4a0de2eb0460c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;sign-git-tag&lt;/code&gt; config is set, then the tag will be signed using the &lt;code&gt;-s&lt;/code&gt; flag to git. Note that you must have a default GPG key set up in your git config for this to work properly. For example:</source>
          <target state="translated">如果设置了 &lt;code&gt;sign-git-tag&lt;/code&gt; 配置，那么将使用 &lt;code&gt;-s&lt;/code&gt; 标志对git 对该标签进行签名。请注意，您必须在git config中设置一个默认的GPG密钥，以使其正常工作。例如：</target>
        </trans-unit>
        <trans-unit id="1dfd7e3d94fac0b3be3b3803f4339ba6dec94e52" translate="yes" xml:space="preserve">
          <source>If the argument to &lt;code&gt;npm help&lt;/code&gt; is not a known help topic, then it will call &lt;code&gt;help-search&lt;/code&gt;. It is rarely if ever necessary to call this command directly.</source>
          <target state="translated">如果 &lt;code&gt;npm help&lt;/code&gt; 的参数不是已知的帮助主题，则它将调用 &lt;code&gt;help-search&lt;/code&gt; 。几乎根本不需要直接调用此命令。</target>
        </trans-unit>
        <trans-unit id="eeb4e1c38e89af6e627dbd8029284c6f5562049f" translate="yes" xml:space="preserve">
          <source>If the dependence were on &lt;code&gt;^0.4.0&lt;/code&gt;:</source>
          <target state="translated">如果依赖于 &lt;code&gt;^0.4.0&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e773d6d3395c054171482f4f4040694d220fac02" translate="yes" xml:space="preserve">
          <source>If the error persists, perhaps the published package is corrupt. Contact the package owner and have them publish a new version of the package.</source>
          <target state="translated">如果错误持续存在,可能是发布的软件包损坏了。请联系软件包的所有者,让他们发布一个新版本的软件包。</target>
        </trans-unit>
        <trans-unit id="29c162a34a23f70f987df2eb0e53ecbb79fa1f94" translate="yes" xml:space="preserve">
          <source>If the filename doesn't start with the package name, then it's prefixed. So, this:</source>
          <target state="translated">如果文件名不以包名开头,那么就会有前缀。所以,这个。</target>
        </trans-unit>
        <trans-unit id="772700574f19d1992b817fe55ee672e22ff335ca" translate="yes" xml:space="preserve">
          <source>If the initializer is omitted (by just calling &lt;code&gt;npm init&lt;/code&gt;), init will fall back to legacy init behavior. It will ask you a bunch of questions, and then write a package.json for you. It will attempt to make reasonable guesses based on existing fields, dependencies, and options selected. It is strictly additive, so it will keep any fields and values that were already set. You can also use &lt;code&gt;-y&lt;/code&gt;/&lt;code&gt;--yes&lt;/code&gt; to skip the questionnaire altogether. If you pass &lt;code&gt;--scope&lt;/code&gt;, it will create a scoped package.</source>
          <target state="translated">如果省略了初始化程序（仅通过调用 &lt;code&gt;npm init&lt;/code&gt; ），则init将退回到传统的init行为。它将询问您很多问题，然后为您编写一个package.json。它将尝试根据现有字段，依赖项和选择的选项做出合理的猜测。它是严格加法的，因此它将保留所有已设置的字段和值。您也可以使用 &lt;code&gt;-y&lt;/code&gt; / &lt;code&gt;--yes&lt;/code&gt; 完全跳过问卷。如果传递 &lt;code&gt;--scope&lt;/code&gt; ，它将创建一个有范围的包。</target>
        </trans-unit>
        <trans-unit id="e5452d5b478c647ad3417acf2adecae30eb6baa6" translate="yes" xml:space="preserve">
          <source>If the package being installed contains a &lt;code&gt;prepare&lt;/code&gt; script, its &lt;code&gt;dependencies&lt;/code&gt; and &lt;code&gt;devDependencies&lt;/code&gt; will be installed, and the prepare script will be run, before the package is packaged and installed.</source>
          <target state="translated">如果要安装的软件包包含 &lt;code&gt;prepare&lt;/code&gt; 脚本，则在打包和安装软件包之前，将安装其 &lt;code&gt;dependencies&lt;/code&gt; 和 &lt;code&gt;devDependencies&lt;/code&gt; ，并运行prepare脚本。</target>
        </trans-unit>
        <trans-unit id="e4c05a8dcf36400604e5172e048f2fec3b451c31" translate="yes" xml:space="preserve">
          <source>If the recommended action is a potential breaking change (semantic version major change), it will be followed by a SEMVER WARNING. If the package with the vulnerability has changed its API, you may need to make additional changes to your package's code.</source>
          <target state="translated">如果建议的行动是潜在的中断性更改(语义版本的重大更改),则会在后面加上SEMVER警告。如果存在漏洞的软件包已经更改了它的API,您可能需要对您的软件包的代码进行额外的更改。</target>
        </trans-unit>
        <trans-unit id="0f6bda95111aab60dc88aa27fdbb83ff20d5de51" translate="yes" xml:space="preserve">
          <source>If the repository makes use of submodules, those submodules will be cloned as well.</source>
          <target state="translated">如果版本库使用了子模块,这些子模块也会被克隆。</target>
        </trans-unit>
        <trans-unit id="4d7a9bcc2b51b8993f6450338e4afea7fd658505" translate="yes" xml:space="preserve">
          <source>If the same package is specified multiple times, then the file will be overwritten the second time.</source>
          <target state="translated">如果多次指定同一个包,那么第二次将覆盖文件。</target>
        </trans-unit>
        <trans-unit id="33e951364eb681b51faff91fd67ae068b37aa257" translate="yes" xml:space="preserve">
          <source>If the script exits with a code other than 0, then this will abort the process.</source>
          <target state="translated">如果脚本退出时的代码不是0,那么这将中止进程。</target>
        </trans-unit>
        <trans-unit id="119469bea1208457263f524257bab468b42eca94" translate="yes" xml:space="preserve">
          <source>If the specified configuration param resolves unambiguously to a known configuration parameter, then it is expanded to that configuration parameter. For example:</source>
          <target state="translated">如果指定的配置参数毫不含糊地解析到一个已知的配置参数,那么它就会扩展到该配置参数。例如:如果指定的配置参数毫不含糊地解析为已知的配置参数,则扩展为该配置参数。</target>
        </trans-unit>
        <trans-unit id="368f4b54ccda2bd01004e82bb77bd077ccb86962" translate="yes" xml:space="preserve">
          <source>If the topic does not exist, or if multiple terms are provided, then run the &lt;code&gt;help-search&lt;/code&gt; command to find a match. Note that, if &lt;code&gt;help-search&lt;/code&gt; finds a single subject, then it will run &lt;code&gt;help&lt;/code&gt; on that topic, so unique matches are equivalent to specifying a topic name.</source>
          <target state="translated">如果主题不存在，或者提供了多个术语，请运行 &lt;code&gt;help-search&lt;/code&gt; 命令以找到匹配项。请注意，如果 &lt;code&gt;help-search&lt;/code&gt; 找到单个主题，则它将在该主题上运行 &lt;code&gt;help&lt;/code&gt; ，因此唯一匹配等同于指定主题名称。</target>
        </trans-unit>
        <trans-unit id="d1923e6b4dd54ff75bfacac13ef5ff7c4cdfe303" translate="yes" xml:space="preserve">
          <source>If the version range matches multiple versions, than each printed value will be prefixed with the version it applies to.</source>
          <target state="translated">如果版本范围与多个版本相匹配,则每个打印的值将以适用的版本为前缀。</target>
        </trans-unit>
        <trans-unit id="b7c44ed92b65fd520b96593649a561e937c87560" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;binding.gyp&lt;/code&gt; file in the root of your package and you have not defined an &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;preinstall&lt;/code&gt; script, npm will default the &lt;code&gt;install&lt;/code&gt; command to compile using node-gyp.</source>
          <target state="translated">如果软件包根目录中有一个 &lt;code&gt;binding.gyp&lt;/code&gt; 文件，并且您尚未定义 &lt;code&gt;install&lt;/code&gt; 或 &lt;code&gt;preinstall&lt;/code&gt; 脚本，则npm将默认 &lt;code&gt;install&lt;/code&gt; 命令使用node-gyp进行编译。</target>
        </trans-unit>
        <trans-unit id="a84f15606e6279439c0c55ea27e7ea04118994c4" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;binding.gyp&lt;/code&gt; file in the root of your package and you haven't defined your own &lt;code&gt;install&lt;/code&gt; or &lt;code&gt;preinstall&lt;/code&gt; scripts, npm will default the &lt;code&gt;install&lt;/code&gt; command to compile using node-gyp.</source>
          <target state="translated">如果软件包根目录中有一个 &lt;code&gt;binding.gyp&lt;/code&gt; 文件，并且您尚未定义自己的 &lt;code&gt;install&lt;/code&gt; 或 &lt;code&gt;preinstall&lt;/code&gt; 脚本，则npm将默认 &lt;code&gt;install&lt;/code&gt; 命令使用node-gyp进行编译。</target>
        </trans-unit>
        <trans-unit id="667be7754ac5577c69cadbfef184ebd9ce595483" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;package.json&lt;/code&gt; file, npm installs the latest version that satisfies the &lt;a href=&quot;semantic-versioning&quot;&gt;semver rule&lt;/a&gt; declared in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">如果存在 &lt;code&gt;package.json&lt;/code&gt; 文件，则npm将安装满足 &lt;code&gt;package.json&lt;/code&gt; 中声明的&lt;a href=&quot;semantic-versioning&quot;&gt;semver规则&lt;/a&gt;的最新版本。</target>
        </trans-unit>
        <trans-unit id="0cfd7cefa2a35142d025a8f4bfc0cf472cce4d68" translate="yes" xml:space="preserve">
          <source>If there is a &lt;code&gt;server.js&lt;/code&gt; file in the root of your package, then npm will default the &lt;code&gt;start&lt;/code&gt; command to &lt;code&gt;node server.js&lt;/code&gt;.</source>
          <target state="translated">如果您的软件包根目录中有一个 &lt;code&gt;server.js&lt;/code&gt; 文件，那么npm会将 &lt;code&gt;start&lt;/code&gt; 命令默认为 &lt;code&gt;node server.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9cde2f9e426855593a69c4ed2a77df9ef120403" translate="yes" xml:space="preserve">
          <source>If there is a list of things separated by commas, and it wraps across multiple lines, put the comma at the start of the next line, directly below the token that starts the list. Put the final token in the list on a line by itself. For example:</source>
          <target state="translated">如果有一个用逗号分隔的事物列表,并且它跨越多行,将逗号放在下一行的开始,直接放在列表开始的标记下面。将列表中的最后一个标记单独放在一行。例如,在列表中,将最后一个标记单独放在一行。</target>
        </trans-unit>
        <trans-unit id="ea6a5c0c437001d1c20347ea451de019bdea31b7" translate="yes" xml:space="preserve">
          <source>If there is an &lt;code&gt;AUTHORS&lt;/code&gt; file in the root of your package, npm will treat each line as a &lt;code&gt;Name &amp;lt;email&amp;gt; (url)&lt;/code&gt; format, where email and url are optional. Lines which start with a &lt;code&gt;#&lt;/code&gt; or are blank, will be ignored.</source>
          <target state="translated">如果软件包根目录中有一个 &lt;code&gt;AUTHORS&lt;/code&gt; 文件，则npm会将每行视为 &lt;code&gt;Name &amp;lt;email&amp;gt; (url)&lt;/code&gt; 格式，其中email和url是可选的。以 &lt;code&gt;#&lt;/code&gt; 开头或为空白的行将被忽略。</target>
        </trans-unit>
        <trans-unit id="b9b1ee86cf6c00870622898eb09df4f4fc1602d3" translate="yes" xml:space="preserve">
          <source>If there is no &lt;code&gt;package.json&lt;/code&gt; file in the local directory, the latest version of the package is installed.</source>
          <target state="translated">如果本地目录中没有 &lt;code&gt;package.json&lt;/code&gt; 文件，则安装最新版本的软件包。</target>
        </trans-unit>
        <trans-unit id="2f65e04a93249793473b13da11b68a2ac781c0f1" translate="yes" xml:space="preserve">
          <source>If there is no description field in the &lt;code&gt;package.json&lt;/code&gt;, npm uses the first line of the &lt;code&gt;README.md&lt;/code&gt; or README instead. The description helps people find your package when searching npm, so it's definitely useful to make a custom description in the &lt;code&gt;package.json&lt;/code&gt; to make your package easier to find.</source>
          <target state="translated">如果 &lt;code&gt;package.json&lt;/code&gt; 中没有描述字段，则npm将使用 &lt;code&gt;README.md&lt;/code&gt; 或README 的第一行。该描述可帮助人们在搜索npm时找到您的软件包，因此在 &lt;code&gt;package.json&lt;/code&gt; 中进行自定义描述对于使您的软件包更易于查找绝对有用。</target>
        </trans-unit>
        <trans-unit id="893b172dbeed2128ba399b90e2b97e9bbaaae7bd" translate="yes" xml:space="preserve">
          <source>If these are the only versions of A, B, and C available in the registry, then a normal &lt;code&gt;npm install A&lt;/code&gt; will install:</source>
          <target state="translated">如果这些是注册表中可用的A，B和C的唯一版本，则将安装普通的 &lt;code&gt;npm install A&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bd34f051b9c9a859450c67bf19666fde0bae57f6" translate="yes" xml:space="preserve">
          <source>If this does not fix the problem, then you may have an SSL-intercepting proxy. (For example, &lt;a href=&quot;https://github.com/npm/npm/issues/7439#issuecomment-76024878&quot;&gt;https://github.com/npm/npm/issues/7439#issuecomment-76024878&lt;/a&gt;)</source>
          <target state="translated">如果这不能解决问题，则您可能具有SSL拦截代理。（例如，&lt;a href=&quot;https://github.com/npm/npm/issues/7439#issuecomment-76024878&quot;&gt;https://github.com/npm/npm/issues/7439#issuecomment-76024878&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="a79baa1501dccf6b25b412dbc3770db8b062019d" translate="yes" xml:space="preserve">
          <source>If this is spelled &lt;code&gt;&quot;bundleDependencies&quot;&lt;/code&gt;, then that is also honored.</source>
          <target state="translated">如果将其拼写为 &lt;code&gt;&quot;bundleDependencies&quot;&lt;/code&gt; ，那么也很荣幸。</target>
        </trans-unit>
        <trans-unit id="c421165ddb1a6419d5003582c3db54908923c3b4" translate="yes" xml:space="preserve">
          <source>If this is the workflow you need, please read the &lt;a href=&quot;ci-server-config&quot;&gt;CI Server Config doc&lt;/a&gt;. If that works with your system, then, perfect.</source>
          <target state="translated">如果这是您需要的工作流程，请阅读&lt;a href=&quot;ci-server-config&quot;&gt;CI服务器配置文档&lt;/a&gt;。如果这适用于您的系统，那就完美。</target>
        </trans-unit>
        <trans-unit id="1e4d7f2ef1ffa50ec522f7fd6ae732bcbfe18a49" translate="yes" xml:space="preserve">
          <source>If true then this dependency is either a development dependency ONLY of the top level module or a transitive dependency of one. This is false for dependencies that are both a development dependency of the top level and a transitive dependency of a non-development dependency of the top level.</source>
          <target state="translated">如果为真,那么这个依赖关系要么是顶层模块的开发依赖关系,要么是顶层模块的过渡依赖关系。对于既是顶层模块的开发依赖,又是顶层模块的非开发依赖的过渡依赖的依赖关系,则为假。</target>
        </trans-unit>
        <trans-unit id="847edbadfd6b4bc213d23dfd84bac7ecd8f2a6c6" translate="yes" xml:space="preserve">
          <source>If true then this dependency is either an optional dependency ONLY of the top level module or a transitive dependency of one. This is false for dependencies that are both an optional dependency of the top level and a transitive dependency of a non-optional dependency of the top level.</source>
          <target state="translated">如果为真,那么这个依赖关系要么是顶层模块的可选依赖关系,要么是顶层模块的转义依赖关系。对于既是顶层模块的可选依赖关系,又是顶层模块的非可选依赖关系的过渡依赖关系,则为假。</target>
        </trans-unit>
        <trans-unit id="97302a8193d4df9faf5d703d554ae99a3c6bce4d" translate="yes" xml:space="preserve">
          <source>If true, npm does not run scripts specified in package.json files.</source>
          <target state="translated">如果为true,npm不会运行package.json文件中指定的脚本。</target>
        </trans-unit>
        <trans-unit id="71217e7d13f6c3f9fedb66de20a207e57c1e3521" translate="yes" xml:space="preserve">
          <source>If true, npm will not exit with an error code when &lt;code&gt;run-script&lt;/code&gt; is invoked for a script that isn't defined in the &lt;code&gt;scripts&lt;/code&gt; section of &lt;code&gt;package.json&lt;/code&gt;. This option can be used when it's desirable to optionally run a script when it's present and fail if the script fails. This is useful, for example, when running scripts that may only apply for some builds in an otherwise generic CI setup.</source>
          <target state="translated">如果为true，则为 &lt;code&gt;package.json&lt;/code&gt; 的 &lt;code&gt;scripts&lt;/code&gt; 部分中未定义的脚本调用 &lt;code&gt;run-script&lt;/code&gt; 时，npm不会以错误代码退出。如果希望在存在脚本时有选择地运行脚本，而在脚本失败时失败，则可以使用此选项。例如，这在运行仅适用于其他通用CI设置中某些构建的脚本时很有用。</target>
        </trans-unit>
        <trans-unit id="48fa6d3ae081b7072f03cec51012a8d76055beb2" translate="yes" xml:space="preserve">
          <source>If true, npm will not run &lt;code&gt;prepublish&lt;/code&gt; scripts.</source>
          <target state="translated">如果为true，npm将不会运行 &lt;code&gt;prepublish&lt;/code&gt; 脚本。</target>
        </trans-unit>
        <trans-unit id="a97d0d42f767ae2439db8d72d940d5d52069cb64" translate="yes" xml:space="preserve">
          <source>If true, output the npm version and exit successfully.</source>
          <target state="translated">如果为真,输出npm版本并成功退出。</target>
        </trans-unit>
        <trans-unit id="0c8ffe463cfefa1c15217938a83af12e93fbc6fb" translate="yes" xml:space="preserve">
          <source>If true, output the npm version as well as node's &lt;code&gt;process.versions&lt;/code&gt; map, and exit successfully.</source>
          <target state="translated">如果为true，则输出npm版本以及节点的 &lt;code&gt;process.versions&lt;/code&gt; 映射，然后成功退出。</target>
        </trans-unit>
        <trans-unit id="482ab4dc98e250c781a2b31a38fd73269a40a16c" translate="yes" xml:space="preserve">
          <source>If true, staleness checks for cached data will be bypassed, but missing data will be requested from the server. To force full offline mode, use &lt;code&gt;--offline&lt;/code&gt;.</source>
          <target state="translated">如果为true，将绕过对缓存数据的陈旧性检查，但是将从服务器请求丢失的数据。要强制使用完全脱机模式，请使用 &lt;code&gt;--offline&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="99d31c13e8774050efe9372ae0a24480160b7743" translate="yes" xml:space="preserve">
          <source>If true, staleness checks for cached data will be forced, making the CLI look for updates immediately even for fresh package data.</source>
          <target state="translated">如果为真,将强制对缓存数据进行陈旧性检查,使得CLI即使对新鲜的包数据也会立即查找更新。</target>
        </trans-unit>
        <trans-unit id="8837d2a03ecd12ef334628291c3c105ae2ef292d" translate="yes" xml:space="preserve">
          <source>If true, success/failure metrics will be reported to the registry stored in &lt;code&gt;metrics-registry&lt;/code&gt;. These requests contain the number of successful and failing runs of the npm CLI and the time period overwhich those counts were gathered. No identifying information is included in these requests.</source>
          <target state="translated">如果为true，则成功/失败指标将报告给存储在 &lt;code&gt;metrics-registry&lt;/code&gt; 中的注册表。这些请求包含npm CLI成功运行和失败的次数以及收集这些计数的时间段。这些请求中不包含识别信息。</target>
        </trans-unit>
        <trans-unit id="cbe9de4ed765d2ab2b06336ab288ccafa0e44b2f" translate="yes" xml:space="preserve">
          <source>If true, the &quot;long&quot; flag will cause help-search to output context around where the terms were found in the documentation.</source>
          <target state="translated">如果为真,&quot;long &quot;标志将使帮助搜索输出文档中术语所在的上下文。</target>
        </trans-unit>
        <trans-unit id="2a894db3106bead10e64cce9398683074fafb9c7" translate="yes" xml:space="preserve">
          <source>If true, then local installs will link if there is a suitable globally installed package.</source>
          <target state="translated">如果为真,那么如果有合适的全局安装包,本地安装就会链接。</target>
        </trans-unit>
        <trans-unit id="f0d14086145ef1a7585e26a5ef6703ec42c89b5a" translate="yes" xml:space="preserve">
          <source>If true, this is the bundled dependency and will be installed by the parent module. When installing, this module will be extracted from the parent module during the extract phase, not installed as a separate dependency.</source>
          <target state="translated">如果为真,这是一个捆绑的依赖项,将由父模块安装。安装时,这个模块会在提取阶段从父模块中提取出来,而不是作为一个单独的依赖关系安装。</target>
        </trans-unit>
        <trans-unit id="5282a1f9a5e49fe38dc4f9f3fdd1765afd97a951" translate="yes" xml:space="preserve">
          <source>If true, writes an &lt;code&gt;npm-debug&lt;/code&gt; log to &lt;code&gt;_logs&lt;/code&gt; and timing information to &lt;code&gt;_timing.json&lt;/code&gt;, both in your cache. &lt;code&gt;_timing.json&lt;/code&gt; is a newline delimited list of JSON objects. You can quickly view it with this &lt;a href=&quot;https://www.npmjs.com/package/json&quot;&gt;json&lt;/a&gt; command line: &lt;code&gt;json -g &amp;lt; ~/.npm/_timing.json&lt;/code&gt;.</source>
          <target state="translated">如果为true，则将 &lt;code&gt;npm-debug&lt;/code&gt; 日志写入 &lt;code&gt;_logs&lt;/code&gt; 并将计时信息写入 &lt;code&gt;_timing.json&lt;/code&gt; ，两者均在您的缓存中。 &lt;code&gt;_timing.json&lt;/code&gt; 是用换行符分隔的JSON对象列表。您可以使用以下&lt;a href=&quot;https://www.npmjs.com/package/json&quot;&gt;json&lt;/a&gt;命令行快速查看它： &lt;code&gt;json -g &amp;lt; ~/.npm/_timing.json&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a26ed1bb7557dcfaeaedcb2665e8277262dbfdd7" translate="yes" xml:space="preserve">
          <source>If value is omitted, then it sets it to &quot;true&quot;.</source>
          <target state="translated">如果省略值,则将其设置为 &quot;true&quot;。</target>
        </trans-unit>
        <trans-unit id="d9c4614e0149bcf2af97ab3d47ae5b43c707377e" translate="yes" xml:space="preserve">
          <source>If we define a package.json like this:</source>
          <target state="translated">如果我们像这样定义一个package.json。</target>
        </trans-unit>
        <trans-unit id="bd374dbe9cd6eb4747863c6511879069a1534a71" translate="yes" xml:space="preserve">
          <source>If we see that the package's publisher is intentionally misleading others by misusing your registered mark without permission, we will transfer the package name to you. Otherwise, we will contact the package publisher and ask them to clear up any confusion with changes to their package's &lt;code&gt;README&lt;/code&gt; file or metadata.</source>
          <target state="translated">如果我们发现程序包的发布者有意在未经许可的情况下滥用您的注册商标来误导他人，我们将把程序包名称转移给您。否则，我们将与程序包发布者联系，并要求他们清除对程序包的 &lt;code&gt;README&lt;/code&gt; 文件或元数据所做的任何混淆。</target>
        </trans-unit>
        <trans-unit id="23c3a2535c6d83e32e30a73a30009b54ba7c5b13" translate="yes" xml:space="preserve">
          <source>If you also want to be able to easily install it elsewhere after packing it up into a tarball.</source>
          <target state="translated">如果你还想在将其打包成柏油球后,能够方便地安装到其他地方。</target>
        </trans-unit>
        <trans-unit id="3bff4422bec68858ccc988dd7a3621c833b579ef" translate="yes" xml:space="preserve">
          <source>If you are entering what seems to be a valid OTP but you see an error, be sure that you are using the correct authenticator account. In the screen shot below, the current account in Authy was set incorrectly because the developer had multiple npm test accounts. This will cause the OTP to fail. Also, as stated earlier, when you reset 2fa after it has been disabled, the authenticator might create a second account with the same name. Please see the authenticator documentation to delete the old account.</source>
          <target state="translated">如果你输入的似乎是一个有效的OTP,但你看到的是一个错误,请确保你使用的是正确的验证者账户。在下面的截图中,Authy中的当前账户设置不正确,因为开发人员有多个npm测试账户。这将导致OTP失败。另外,正如前面所说,当你在禁用2fa后重新设置2fa时,authenticator可能会创建第二个同名账户。请查看验证器文档,删除旧账户。</target>
        </trans-unit>
        <trans-unit id="23261baf86d70c5ed07747b1e46d416d8bc69aaa" translate="yes" xml:space="preserve">
          <source>If you are having trouble with &lt;code&gt;npm install&lt;/code&gt;, use the &lt;code&gt;-verbose&lt;/code&gt; option to see more details.</source>
          <target state="translated">如果您在使用 &lt;code&gt;npm install&lt;/code&gt; 时遇到问题，请使用 &lt;code&gt;-verbose&lt;/code&gt; 选项查看更多详细信息。</target>
        </trans-unit>
        <trans-unit id="b832c4f9a5486f3c304fe863acdf931cc155db26" translate="yes" xml:space="preserve">
          <source>If you are logged out, login normally using your login and npm password. When prompted for an OTP, enter a recovery code. (Note that this might create a second authenticator account with the same npm account name. Be sure to use the newly created account.)</source>
          <target state="translated">如果你已经注销,请使用你的登录名和npm密码正常登录。当提示输入OTP时,请输入恢复码。(请注意,这可能会创建第二个与npm账户名相同的验证者账户。请务必使用新创建的账户)。)</target>
        </trans-unit>
        <trans-unit id="53f5e6386b89712ad03efe73dc8da3a6218fa474" translate="yes" xml:space="preserve">
          <source>If you are using a license that hasn't been assigned an SPDX identifier, or if you are using a custom license, use a string value like this one:</source>
          <target state="translated">如果您使用的许可证还没有分配给SPDX标识符,或者您使用的是自定义许可证,请使用像这样的字符串值。</target>
        </trans-unit>
        <trans-unit id="fbfebe42ed6c4c634dcce3dbd44a3d8d4810c681" translate="yes" xml:space="preserve">
          <source>If you are using deployment servers or testing with Continuous Intergration servers, you'll need a way to download your private packages to those servers. These are the steps:</source>
          <target state="translated">如果你正在使用部署服务器或使用Continuous Intergration服务器进行测试,你需要一种方法将你的私有包下载到这些服务器。这些是步骤。</target>
        </trans-unit>
        <trans-unit id="45ccd7c7d00589cb11b56f16a27c5d73958dac16" translate="yes" xml:space="preserve">
          <source>If you are using npm version 5.2 or greater, explore &lt;a href=&quot;https://www.npmjs.com/package/npx&quot;&gt;npx&lt;/a&gt; as an alternative way to run global commands, especially if you just need a command occassionally. Click &lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;here&lt;/a&gt; to read an excellent article about npx.</source>
          <target state="translated">如果您使用的是npm 5.2或更高版本，请探索&lt;a href=&quot;https://www.npmjs.com/package/npx&quot;&gt;npx&lt;/a&gt;作为运行全局命令的替代方法，尤其是在您偶尔需要命令的情况下。单击&lt;a href=&quot;https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b&quot;&gt;此处&lt;/a&gt;阅读有关npx的出色文章。</target>
        </trans-unit>
        <trans-unit id="5cd268469e15a660cf52aad0ebf7382c746acb34" translate="yes" xml:space="preserve">
          <source>If you are using version 2.6.0 or less</source>
          <target state="translated">如果您使用的是2.6.0或更低的版本</target>
        </trans-unit>
        <trans-unit id="121c8478d588883faca9c20fc696eb5fb752173f" translate="yes" xml:space="preserve">
          <source>If you ask npm to install a package and don't tell it a specific version, then it will install the specified tag.</source>
          <target state="translated">如果你要求npm安装一个包,而不告诉它一个特定的版本,那么它将安装指定的标签。</target>
        </trans-unit>
        <trans-unit id="105ffb4ded9b92363d8eac2a42d7d24108678c32" translate="yes" xml:space="preserve">
          <source>If you can not install it locally, you'll have problems trying to publish it. Or, worse yet, you'll be able to publish it, but you'll be publishing a broken or pointless package. So don't do that.</source>
          <target state="translated">如果你不能在本地安装它,你就会在发布它时遇到问题。或者,更糟糕的是,你将能够发布它,但你将发布一个破碎的或毫无意义的包。所以不要这样做。</target>
        </trans-unit>
        <trans-unit id="75292446e69aa1504c1bc32a371068b32b1490c3" translate="yes" xml:space="preserve">
          <source>If you cannot locate the device that provided second-factor authentication:</source>
          <target state="translated">如果您无法找到提供第二因素认证的设备。</target>
        </trans-unit>
        <trans-unit id="39aaa0035119a8b16199c9d7368118dadc59fcb7" translate="yes" xml:space="preserve">
          <source>If you choose to share your packages publicly, there is no cost. To use and share private packages, you need to upgrade your account. To share with others, create organizations, called &lt;strong&gt;npm Orgs&lt;/strong&gt;, and invite others to work with you, privately (for a fee) or publicly (for free). Or you can sign up for a custom, private type of npm for your company, called &lt;strong&gt;npmE&lt;/strong&gt; for npm Enterprise.</source>
          <target state="translated">如果您选择公开共享软件包，则无需付费。要使用和共享私人软件包，您需要升级您的帐户。要与他人共享，请创建名为&lt;strong&gt;npm Orgs的组织&lt;/strong&gt;，并邀请其他人与您私下（收费）或公开（免费）合作。或者，您可以为公司注册自定义的私有类型的npm，对于npm Enterprise 称为&lt;strong&gt;npmE&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="decaa67cb4fdd5f95ab3e60e8c7c46f665d53599" translate="yes" xml:space="preserve">
          <source>If you depend on modules that define executable scripts, like test suites, then those executables will be added to the &lt;code&gt;PATH&lt;/code&gt; for executing the scripts. So, if your package.json has this:</source>
          <target state="translated">如果您依赖于定义可执行脚本的模块（例如测试套件），则这些可执行文件将添加到 &lt;code&gt;PATH&lt;/code&gt; 中以执行脚本。因此，如果您的package.json具有以下内容：</target>
        </trans-unit>
        <trans-unit id="55889859e8aaa5ed5ecee9cadba6d9838a4bb49b" translate="yes" xml:space="preserve">
          <source>If you do not want to fix the vulnerability or update the dependent package yourself, open an issue in the package or dependent package issue tracker.</source>
          <target state="translated">如果你不想自己修复漏洞或更新依赖包,请在包或依赖包问题跟踪器中打开一个问题。</target>
        </trans-unit>
        <trans-unit id="9e5eafa9f6959edac93507abe5ee9296634383e6" translate="yes" xml:space="preserve">
          <source>If you enable 2-factor authorization, you will need to enter the second factor at various points as you use npm. This table explains these details.</source>
          <target state="translated">如果您启用了双因素授权,您将需要在使用npm时在不同的地方输入第二个因素。本表解释了这些细节。</target>
        </trans-unit>
        <trans-unit id="9574168b04aeed8927594be7bcadb72733fc1046" translate="yes" xml:space="preserve">
          <source>If you enable 2FA in &lt;strong&gt;auth-and-writes&lt;/strong&gt; mode, which is the default, npm will require an OTP when you:</source>
          <target state="translated">如果您在&lt;strong&gt;身份验证和写入&lt;/strong&gt;模式（默认设置）中启用2FA ，则在以下情况下，npm将要求输入OTP：</target>
        </trans-unit>
        <trans-unit id="671836e5446c85a10d8e36d151a3d675b0a0655b" translate="yes" xml:space="preserve">
          <source>If you enable 2FA in &lt;strong&gt;auth-only&lt;/strong&gt; mode, npm will require an OTP when you:</source>
          <target state="translated">如果在&lt;strong&gt;仅身份验证&lt;/strong&gt;模式下启用2FA，则在执行以下操作时，npm将要求OTP：</target>
        </trans-unit>
        <trans-unit id="7f35951f206532f0dfd9e6ae85ec4930716fb3bd" translate="yes" xml:space="preserve">
          <source>If you expect to create many package.json files, you might wish to customize the questions asked during the init process, so that the files always contain key information that you expect. You can customize the fields as well as the questions that are asked.</source>
          <target state="translated">如果您希望创建许多package.json文件,您可能希望自定义在init过程中询问的问题,以便文件总是包含您所期望的关键信息。你可以自定义字段以及提问的问题。</target>
        </trans-unit>
        <trans-unit id="e5f322d852e02a5542874aa97079f9b983ddcfd4" translate="yes" xml:space="preserve">
          <source>If you get an &lt;code&gt;EAUDITNOLOCK&lt;/code&gt; error, make sure your package has a &lt;code&gt;package.json&lt;/code&gt; file, then create the package lock file by running &lt;code&gt;npm i --package-lock-only&lt;/code&gt;.</source>
          <target state="translated">如果收到 &lt;code&gt;EAUDITNOLOCK&lt;/code&gt; 错误，请确保您的软件包具有 &lt;code&gt;package.json&lt;/code&gt; 文件，然后通过运行 &lt;code&gt;npm i --package-lock-only&lt;/code&gt; 创建软件包锁定文件。</target>
        </trans-unit>
        <trans-unit id="6c1463bcf012c225e8344abb6eed774e8940b318" translate="yes" xml:space="preserve">
          <source>If you get an &lt;code&gt;EAUDITNOPJSON&lt;/code&gt; error, create a &lt;code&gt;package.json&lt;/code&gt; file by following the steps in &quot;&lt;a href=&quot;using-a-package.json&quot;&gt;Working with package.json&lt;/a&gt;&quot;.</source>
          <target state="translated">如果收到 &lt;code&gt;EAUDITNOPJSON&lt;/code&gt; 错误，请按照&amp;ldquo; &lt;a href=&quot;using-a-package.json&quot;&gt;使用package.json&lt;/a&gt; &amp;rdquo;中的步骤创建 &lt;code&gt;package.json&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="4c3d8de527b674c9926b3220ca95cc67bf82b0c5" translate="yes" xml:space="preserve">
          <source>If you get an EACCES error, &lt;a href=&quot;fixing-npm-permissions&quot;&gt;see this chapter about permissions&lt;/a&gt;.</source>
          <target state="translated">如果出现EACCES错误，&lt;a href=&quot;fixing-npm-permissions&quot;&gt;请参阅本章有关权限的内容&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9916d05971dd0fefe86babe05b44c0959554143a" translate="yes" xml:space="preserve">
          <source>If you had not properly installed &lt;code&gt;lodash&lt;/code&gt;, you would receive this error:</source>
          <target state="translated">如果没有正确安装 &lt;code&gt;lodash&lt;/code&gt; ，则会收到此错误：</target>
        </trans-unit>
        <trans-unit id="c0fb95a38ab8fca6614bee49401d08ff778e5a7f" translate="yes" xml:space="preserve">
          <source>If you had the following Dockerfile:</source>
          <target state="translated">如果你有以下Docker文件。</target>
        </trans-unit>
        <trans-unit id="1b221f13e7c43c2767e71b923fca7e941b432da6" translate="yes" xml:space="preserve">
          <source>If you have a &lt;code&gt;package.json&lt;/code&gt; file in your directory and you run &lt;code&gt;npm install&lt;/code&gt;, npm will look at the dependencies that are listed in that file and download the latest versions, using semantic versioning.</source>
          <target state="translated">如果目录中有 &lt;code&gt;package.json&lt;/code&gt; 文件，并运行 &lt;code&gt;npm install&lt;/code&gt; ，则npm将查看该文件中列出的依赖项，并使用语义版本控制下载最新版本。</target>
        </trans-unit>
        <trans-unit id="c3125c3ef77cd14fed53be9c090f7a2f92cb6aba" translate="yes" xml:space="preserve">
          <source>If you have a single executable, and its name should be the name of the package, then you can just supply it as a string. For example:</source>
          <target state="translated">如果你有一个单一的可执行文件,而且它的名字应该是包的名字,那么你可以只提供一个字符串。例如</target>
        </trans-unit>
        <trans-unit id="02812420ae02e5a567321cb4cc783ba6088eb40c" translate="yes" xml:space="preserve">
          <source>If you have already set up two-factor authentication, you will be asked for a one-time password when you login. Please see &lt;a href=&quot;using-two-factor-authentication&quot;&gt;the chapter about two-factor authentication&lt;/a&gt; if you need more information.</source>
          <target state="translated">如果您已经设置了两因素身份验证，则在登录时将要求您输入一次性密码。如果需要更多信息，请参阅&lt;a href=&quot;using-two-factor-authentication&quot;&gt;有关两因素身份验证的章节&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dda151904e25a7de541faad4fdb3575d5759052b" translate="yes" xml:space="preserve">
          <source>If you have dependencies you only need to use during local development, follow the same instructions as above but use the attribute called &lt;code&gt;devDependencies&lt;/code&gt;.</source>
          <target state="translated">如果您具有依赖项，则只需要在本地开发期间使用，请遵循与上述相同的说明，但是请使用名为 &lt;code&gt;devDependencies&lt;/code&gt; 的属性。</target>
        </trans-unit>
        <trans-unit id="915b24e6b3c88e68cdcf2ea0e8b6aacdc0b3efe3" translate="yes" xml:space="preserve">
          <source>If you have enabled 2FA auth-and-writes, you will need to send the OTP from the command line for certain commands to work. To do this, append &lt;code&gt;--otp=123456&lt;/code&gt; (where &lt;em&gt;123456&lt;/em&gt; is the code generated by your authenticator) at the end of the command. Here are a few examples:</source>
          <target state="translated">如果启用了2FA身份验证和写入功能，则需要从命令行发送OTP才能使某些命令起作用。为此，在命令末尾附加 &lt;code&gt;--otp=123456&lt;/code&gt; （其中&lt;em&gt;123456&lt;/em&gt;是您的身份验证器生成的代码）。这里有一些例子：</target>
        </trans-unit>
        <trans-unit id="c2d6b20a8fba1238fd3e231c39918c37d8bd866c" translate="yes" xml:space="preserve">
          <source>If you have enabled two-factor authentication on your profile, you have implemented an additional layer of security.</source>
          <target state="translated">如果您在您的个人资料上启用了双因素认证,您就实现了额外的安全层。</target>
        </trans-unit>
        <trans-unit id="c2716e805b0992004367076eb5a6a8bce6472beb" translate="yes" xml:space="preserve">
          <source>If you have misplaced both the device that provided second-factor authentication and your recovery codes, we may be unable to help you recover your account. If you have any questions, please &lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;contact support&lt;/a&gt;.</source>
          <target state="translated">如果您放错了提供二次身份验证的设备以及您的恢复代码，则我们可能无法帮助您恢复帐户。如有任何疑问，请&lt;a href=&quot;https://www.npmjs.com/support&quot;&gt;联系支持&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a9a06f351fc91a0aff3aa9f94c2c818354987bc" translate="yes" xml:space="preserve">
          <source>If you have set up two-factor authentication, you will be prompted for an npm password, followed by an OTP. npm will display this table:</source>
          <target state="translated">如果你设置了双因素身份验证,你会被提示输入一个npm密码,然后是一个OTP。</target>
        </trans-unit>
        <trans-unit id="027ef904bcbb1d6c06dc2490e61fccd4cfbb3a4b" translate="yes" xml:space="preserve">
          <source>If you have set up two-factor authentication, you will be prompted for your npm password, followed by an OTP. npm will display this table:</source>
          <target state="translated">如果你设置了双因素身份验证,你会被提示输入npm密码,然后是一个OTP。</target>
        </trans-unit>
        <trans-unit id="937e90df47ace5958b4396cdecb7da33bafc0e99" translate="yes" xml:space="preserve">
          <source>If you have starred a lot of neat things and want to find them again quickly this command lets you do just that.</source>
          <target state="translated">如果你已经给很多整洁的东西加了星号,并且想快速地再次找到它们,这个命令可以让你做到这一点。</target>
        </trans-unit>
        <trans-unit id="8072da340d98889b61ef06fdbd54f271b88d397d" translate="yes" xml:space="preserve">
          <source>If you have two-factor authentication enabled then you'll have to pass in an otp with &lt;code&gt;--otp&lt;/code&gt; when making access changes.</source>
          <target state="translated">如果启用了双重身份验证，则在进行访问权限更改时，必须使用 &lt;code&gt;--otp&lt;/code&gt; 传递otp 。</target>
        </trans-unit>
        <trans-unit id="ef705d86635b78e88d347db5a31a3865f140b279" translate="yes" xml:space="preserve">
          <source>If you have two-factor authentication enabled with &lt;code&gt;auth-and-writes&lt;/code&gt; then you'll need to include an otp on the command line when changing ownership with &lt;code&gt;--otp&lt;/code&gt;.</source>
          <target state="translated">如果您通过 &lt;code&gt;auth-and-writes&lt;/code&gt; 启用了双重身份验证，那么在使用 &lt;code&gt;--otp&lt;/code&gt; 更改所有权时，需要在命令行中包含otp 。</target>
        </trans-unit>
        <trans-unit id="6b1293a3246afb78ae554eed294c9190acf12893" translate="yes" xml:space="preserve">
          <source>If you installed npm with the node.js installer, after doing one of the previous steps, do the following.</source>
          <target state="translated">如果你使用node.js安装程序安装了npm,在做完前面的一个步骤后,请执行以下操作。</target>
        </trans-unit>
        <trans-unit id="14ab03766c8995ed87922ee555f2d12d05b98bb0" translate="yes" xml:space="preserve">
          <source>If you installed things &lt;em&gt;with&lt;/em&gt; npm, then your best bet is to uninstall them with npm first, and then install them again once you have a proper install. This can help find any symlinks that are lying around:</source>
          <target state="translated">如果您是&lt;em&gt;使用&lt;/em&gt; npm 安装的，最好的选择是先使用npm卸载它们，然后在正确安装后再次安装它们。这可以帮助找到周围的任何符号链接：</target>
        </trans-unit>
        <trans-unit id="1665d6bd6d512f0b6b0ae676a212aff1b2fe21f1" translate="yes" xml:space="preserve">
          <source>If you just want to get started exploring npm, using the Node.js installation method is fastest. If you are an advanced developer ready to jump in and work with versions, use the node version manager. If you aren't sure, please read this chapter before you decide. You can always change how you run npm in the future.</source>
          <target state="translated">如果你只是想开始探索npm,使用Node.js安装方法是最快的。如果你是一个高级的开发者,准备好跳入并使用版本,请使用node版本管理器。如果你不确定,请在决定之前阅读本章。你可以在将来随时改变你运行npm的方式。</target>
        </trans-unit>
        <trans-unit id="9a8934cb6094ca71a0bf5bed0dbc2d9778d78e18" translate="yes" xml:space="preserve">
          <source>If you just want to write a node program, and/or,</source>
          <target state="translated">如果你只是想写一个节点程序,和/或。</target>
        </trans-unit>
        <trans-unit id="e9944b13dc35c30c5086cd916cb70d1470c697d2" translate="yes" xml:space="preserve">
          <source>If you need both, then install it in both places, or use &lt;code&gt;npm link&lt;/code&gt;.</source>
          <target state="translated">如果两者都需要，则将其安装在两个地方，或使用 &lt;code&gt;npm link&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="29d0042993d3e95d8d373e6823694c5b8d55b9fb" translate="yes" xml:space="preserve">
          <source>If you need to perform operations on your package before it is used, in a way that is not dependent on the operating system or architecture of the target system, use a &lt;code&gt;prepublish&lt;/code&gt; script. This includes tasks such as:</source>
          <target state="translated">如果需要在使用软件包之前对软件包执行操作，而使用的方式不依赖于目标系统的操作系统或体系结构，请使用 &lt;code&gt;prepublish&lt;/code&gt; 脚本。这包括以下任务：</target>
        </trans-unit>
        <trans-unit id="7fa13f64bfe4344a2ddbf7a4a77541e65b43737e" translate="yes" xml:space="preserve">
          <source>If you plan to publish your package, the &lt;em&gt;most&lt;/em&gt; important things in your package.json are the name and version fields as they will be required. The name and version together form an identifier that is assumed to be completely unique. Changes to the package should come along with changes to the version. If you don't plan to publish your package, the name and version fields are optional.</source>
          <target state="translated">如果您打算发布程序包，则package.json中&lt;em&gt;最&lt;/em&gt;重要的事情是名称和版本字段，因为它们是必填字段。名称和版本共同构成一个假定为唯一的标识符。对软件包的更改应与版本的更改同时进行。如果您不打算发布您的软件包，则名称和版本字段是可选的。</target>
        </trans-unit>
        <trans-unit id="e76bd9d23330eb37eefd80fa4d9229b80d7919bf" translate="yes" xml:space="preserve">
          <source>If you see a message like this one:</source>
          <target state="translated">如果你看到这样的信息。</target>
        </trans-unit>
        <trans-unit id="199ea873b0b79761c18ef87d6bfa2d6a2a283947" translate="yes" xml:space="preserve">
          <source>If you see an &lt;code&gt;EACCES&lt;/code&gt; error when you try to install a package globally, read this chapter. This error can often be avoided if you change the directory where npm is installed. To do this, either:</source>
          <target state="translated">如果在尝试全局安装软件包时看到 &lt;code&gt;EACCES&lt;/code&gt; 错误，请阅读本章。如果更改npm的安装目录，通常可以避免此错误。为此，可以：</target>
        </trans-unit>
        <trans-unit id="741bd162cedf3853b813f43c4fb9c6863f60e158" translate="yes" xml:space="preserve">
          <source>If you see bad behavior like this, please report it to &lt;a href=&quot;../cdn-cgi/l/email-protection#e78685929482a789978a8d94c984888a&quot;&gt;abuse@npmjs.com&lt;/a&gt; right away. &lt;strong&gt;You are never expected to resolve abusive behavior on your own. We are here to help.&lt;/strong&gt;</source>
          <target state="translated">如果您发现此类不良行为，请立即将其报告给&lt;a href=&quot;../cdn-cgi/l/email-protection#e78685929482a789978a8d94c984888a&quot;&gt;abuse@npmjs.com&lt;/a&gt;。&lt;strong&gt;永远不要期望您自己解决滥用行为。我们在这里为您提供帮助。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="92da02bfd39bbcc97dffac573e6d0f2496e73deb" translate="yes" xml:space="preserve">
          <source>If you set &lt;code&gt;&quot;private&quot;: true&lt;/code&gt; in your package.json, then npm will refuse to publish it.</source>
          <target state="translated">如果您在package.json中设置 &lt;code&gt;&quot;private&quot;: true&lt;/code&gt; ，则npm将拒绝发布它。</target>
        </trans-unit>
        <trans-unit id="656ffcca351a7defb87675c2e7500ee1d730942d" translate="yes" xml:space="preserve">
          <source>If you set up continuous replication from the official CouchDB, and then set your internal CouchDB as the registry config, then you'll be able to read any published packages, in addition to your private ones, and by default will only publish internally.</source>
          <target state="translated">如果你从官方的CouchDB设置了持续复制,然后把你内部的CouchDB设置为注册表配置,那么除了你的私有包外,你还可以读取任何发布的包,默认情况下只在内部发布。</target>
        </trans-unit>
        <trans-unit id="adc17630beff680f5a5987b4113d80380d565e5c" translate="yes" xml:space="preserve">
          <source>If you specify a &lt;code&gt;bin&lt;/code&gt; directory in &lt;code&gt;directories.bin&lt;/code&gt;, all the files in that folder will be added.</source>
          <target state="translated">如果您在 &lt;code&gt;directories.bin&lt;/code&gt; 指定一个 &lt;code&gt;bin&lt;/code&gt; 目录，则将添加该文件夹中的所有文件。</target>
        </trans-unit>
        <trans-unit id="e4bc9d9ac13b19d3bf6bdb50831e1faa786cd02a" translate="yes" xml:space="preserve">
          <source>If you specify an &quot;engines&quot; field, then npm will require that &quot;node&quot; be somewhere on that list. If &quot;engines&quot; is omitted, then npm will just assume that it works on node.</source>
          <target state="translated">如果你指定了一个 &quot;引擎 &quot;字段,那么npm会要求 &quot;node &quot;在该列表中的某个位置。如果省略了 &quot;enginees&quot;,那么npm就会认为它在node上工作。</target>
        </trans-unit>
        <trans-unit id="91d6d287ed3947c2bf286ffc0451d83d3bbc77f3" translate="yes" xml:space="preserve">
          <source>If you then want to publish a package for the whole world to see, you can simply override the &lt;code&gt;--registry&lt;/code&gt; option for that &lt;code&gt;publish&lt;/code&gt; command.</source>
          <target state="translated">如果然后要发布一个程序包供全世界查看，则可以简单地为该 &lt;code&gt;publish&lt;/code&gt; 命令覆盖 &lt;code&gt;--registry&lt;/code&gt; 选项。</target>
        </trans-unit>
        <trans-unit id="97c86c5d57e8d2de410b086ae4046c2095a67e0c" translate="yes" xml:space="preserve">
          <source>If you think another npm publisher is infringing your trademark, such as by using a confusingly similar package name, email &lt;a href=&quot;../cdn-cgi/l/email-protection#a2c3c0d7d1c7e2ccd2cfc8d18cc1cdcf&quot;&gt;abuse@npmjs.com&lt;/a&gt; with a link to the package or user account on &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https://www.npmjs.com/&lt;/a&gt;. Attach a copy of your trademark registration certificate.</source>
          <target state="translated">如果您认为其他npm发布者侵犯了您的商标，例如使用一个令人困惑的相似软件包名称，请在&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https://www.npmjs.com/&lt;/a&gt;上通过电子邮件发送&lt;a href=&quot;../cdn-cgi/l/email-protection#a2c3c0d7d1c7e2ccd2cfc8d18cc1cdcf&quot;&gt;滥用@ npmjs.com&lt;/a&gt;和该软件包或用户帐户的链接。附上您的商标注册证书的副本。</target>
        </trans-unit>
        <trans-unit id="a6326a259f56747209d0c54596e4cdb35e5ef68d" translate="yes" xml:space="preserve">
          <source>If you try to run a script without having a &lt;code&gt;node_modules&lt;/code&gt; directory and it fails, you will be given a warning to run &lt;code&gt;npm install&lt;/code&gt;, just in case you've forgotten.</source>
          <target state="translated">如果您尝试在没有 &lt;code&gt;node_modules&lt;/code&gt; 目录的情况下运行脚本，但该脚本失败，则会提示您运行 &lt;code&gt;npm install&lt;/code&gt; ，以防万一您忘记了。</target>
        </trans-unit>
        <trans-unit id="876fef396348f1989f7e39448e324d6460f9dadc" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;npm init&lt;/code&gt; to initialize your packages, you can pass in your scope like this:</source>
          <target state="translated">如果使用 &lt;code&gt;npm init&lt;/code&gt; 初始化程序包，则可以像这样传递范围：</target>
        </trans-unit>
        <trans-unit id="c3798cbc2aee0fba2d5e669292b2ac8b5d548148" translate="yes" xml:space="preserve">
          <source>If you use &lt;code&gt;npm init&lt;/code&gt;, you can add your scope as an option to that command.</source>
          <target state="translated">如果使用 &lt;code&gt;npm init&lt;/code&gt; ，则可以将范围添加为该命令的选项。</target>
        </trans-unit>
        <trans-unit id="43b4e74d7a7af6dcfab9990fbed0dfc2e4fe7848" translate="yes" xml:space="preserve">
          <source>If you use the same scope all the time, you will probably want to set this option in your &lt;a href=&quot;../files/npmrc&quot;&gt;&lt;code&gt;.npmrc&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">如果您始终使用相同的作用域，则可能需要在&lt;a href=&quot;../files/npmrc&quot;&gt; &lt;code&gt;.npmrc&lt;/code&gt; &lt;/a&gt;文件中设置此选项。</target>
        </trans-unit>
        <trans-unit id="2facef8921e4cf8ab46f41d9740d0b0d5bda40c9" translate="yes" xml:space="preserve">
          <source>If you use the same scope most of the time, you'll probably want to set it in your default configuration instead.</source>
          <target state="translated">如果你在大部分时间使用相同的作用域,你可能会想在默认配置中设置它。</target>
        </trans-unit>
        <trans-unit id="0184d3d8820b906525165d7264545a61034f395a" translate="yes" xml:space="preserve">
          <source>If you want to add information for the author field, use the following format (email and website are both optional):</source>
          <target state="translated">如果你想为作者字段添加信息,请使用以下格式(电子邮件和网站都是可选的)。</target>
        </trans-unit>
        <trans-unit id="5ee0721f964683fe949fb368e7bbe3048ee2f8a6" translate="yes" xml:space="preserve">
          <source>If you want to contribute to npm (which is very encouraged), you should make your code conform to npm's style.</source>
          <target state="translated">如果你想为npm做贡献(这是非常鼓励的),你应该让你的代码符合npm的风格。</target>
        </trans-unit>
        <trans-unit id="e6aff41b09f0f80dbd0e4287c9985703eb8b6c81" translate="yes" xml:space="preserve">
          <source>If you want to depend on the package from your own module, then install it &lt;a href=&quot;installing-npm-packages-locally&quot;&gt;locally&lt;/a&gt;. This is the choice you would use if you are using require statements, for example.</source>
          <target state="translated">如果要依赖您自己模块中的软件包，请在&lt;a href=&quot;installing-npm-packages-locally&quot;&gt;本地&lt;/a&gt;安装。例如，这是在使用require语句时要使用的选择。</target>
        </trans-unit>
        <trans-unit id="2274876d4daccd411c2a379e148d1f1e46c50764" translate="yes" xml:space="preserve">
          <source>If you want to depend on the package from your own module, using something like Node.js' &lt;code&gt;require&lt;/code&gt;, then you want to install locally. This is &lt;code&gt;npm install&lt;/code&gt;'s default behavior.</source>
          <target state="translated">如果要依赖于包装从您自己的模块，使用类似的Node.js' &lt;code&gt;require&lt;/code&gt; ，然后要在本地安装。这是 &lt;code&gt;npm install&lt;/code&gt; 的默认行为。</target>
        </trans-unit>
        <trans-unit id="a5aae1b0d5ff6f55b20c707ea2eef104d0e3f1ab" translate="yes" xml:space="preserve">
          <source>If you want to double check that your package will include only the files you intend it to when published, you can run the &lt;code&gt;npm pack&lt;/code&gt; command locally which will generate a tarball in the working directory, the same way it does for publishing.</source>
          <target state="translated">如果要仔细检查软件包在发布时将只包含要发布的文件，则可以在本地运行 &lt;code&gt;npm pack&lt;/code&gt; 命令，该命令将在工作目录中生成tarball，与发布时相同。</target>
        </trans-unit>
        <trans-unit id="de8a8f17cd3bf60cceb26f48963496a2fd408188" translate="yes" xml:space="preserve">
          <source>If you want to give access to someone, they need to be subscribed to private packages as well. Once they are, you can give them read or read-write access. Or, you can set up an npm Org to give them access through Orgs and teams. Please refer to the online npm Orgs book for details.</source>
          <target state="translated">如果你想给某人权限,他们也需要订阅私人包。一旦他们订阅了,你就可以给他们读写权限。或者,你可以建立一个npm Org,通过Orgs和团队给他们提供访问权限。详情请参考网上的npm Orgs书。</target>
        </trans-unit>
        <trans-unit id="f32077d0c722aca65a9120350241835391c310ae" translate="yes" xml:space="preserve">
          <source>If you want to know if a version satisfies or does not satisfy a range, use the &lt;code&gt;satisfies(version, range)&lt;/code&gt; function.</source>
          <target state="translated">如果您想知道某个版本满足或不满足范围，请使用 &lt;code&gt;satisfies(version, range)&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="d974ca7fe4ae0c77bb8b8cfe16d629c9d5df6559" translate="yes" xml:space="preserve">
          <source>If you want to run a make command, you can do so. This works just fine:</source>
          <target state="translated">如果你想运行make命令,你可以这样做。这样就可以了。</target>
        </trans-unit>
        <trans-unit id="cabdcdaebcf7df6b879f0a090c8d4587ebffba75" translate="yes" xml:space="preserve">
          <source>If you want to run a specific script at a specific lifecycle event for ALL packages, then you can use a hook script.</source>
          <target state="translated">如果你想在一个特定的生命周期事件中为所有包运行一个特定的脚本,那么你可以使用一个钩子脚本。</target>
        </trans-unit>
        <trans-unit id="2e85bf1bd263f0ce71dbc4636182b6de78a9a41d" translate="yes" xml:space="preserve">
          <source>If you want to try the next, unreleased version of npm to test that packages you have created will work with the planned next release of npm, use this command:</source>
          <target state="translated">如果你想尝试下一个未发布的npm版本,以测试你创建的包是否能与计划中的下一个npm版本兼容,使用这个命令。</target>
        </trans-unit>
        <trans-unit id="65cbe3d65d5ea496100adfd10901c2409ee70836" translate="yes" xml:space="preserve">
          <source>If you want to use a package as a command line tool, (such as grunt CLI), then &lt;a href=&quot;installing-npm-packages-globally&quot;&gt;install it globally&lt;/a&gt;.</source>
          <target state="translated">如果要将软件包用作命令行工具（例如grunt CLI），&lt;a href=&quot;installing-npm-packages-globally&quot;&gt;请全局安装&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2a9dd764335690de59f29e9e2d14f1ed4cc1ccee" translate="yes" xml:space="preserve">
          <source>If you want to use a package as a command line tool, then install it globally. This way, it works no matter which directory is current. This is the choice you would use if you were installing grunt, for example.</source>
          <target state="translated">如果你想把一个包作为命令行工具使用,那就全局安装。这样一来,无论当前是哪个目录,它都可以工作。例如,如果你要安装 grunt,你就会使用这种选择。</target>
        </trans-unit>
        <trans-unit id="7e02200bc9ca3d20c644bfe03a6cb8cd40c54b2c" translate="yes" xml:space="preserve">
          <source>If you were starting with a package 1.0.4, this is how you would specify the ranges:</source>
          <target state="translated">如果你从1.0.4的包开始,你会这样指定范围。</target>
        </trans-unit>
        <trans-unit id="22a4a7df9c1181bd324fe2d1398abdbf80dd8524" translate="yes" xml:space="preserve">
          <source>If you wish to &lt;code&gt;require()&lt;/code&gt; a package, then install it locally.</source>
          <target state="translated">如果您 &lt;code&gt;require()&lt;/code&gt; 软件包，请在本地安装。</target>
        </trans-unit>
        <trans-unit id="219386ead7e59b4231d8468c0389ff76eb986735" translate="yes" xml:space="preserve">
          <source>If you wish, you may associate a scope with a registry; see below.</source>
          <target state="translated">如果您愿意,您可以将一个作用域与一个注册表关联起来;见下文。</target>
        </trans-unit>
        <trans-unit id="e55eb200e04fa5a2d343fa313b1200cf931bd57e" translate="yes" xml:space="preserve">
          <source>If you would like to contribute, but don't know what to work on, read the contributing guidelines and check the issues list.</source>
          <target state="translated">如果你想投稿,但不知道要做什么,请阅读投稿指南并查看问题清单。</target>
        </trans-unit>
        <trans-unit id="f3d98a9ab90fe60a526572145bd795e0468df564" translate="yes" xml:space="preserve">
          <source>If you would prefer to have your own private registry, so that you can develop packages internally that are not shared publicly, consider &lt;a href=&quot;https://www.npmjs.com/enterprise&quot;&gt;npm Enterprise&lt;/a&gt;.</source>
          <target state="translated">如果您希望拥有自己的私有注册表，以便可以在内部开发不公开共享的软件包，请考虑使用&lt;a href=&quot;https://www.npmjs.com/enterprise&quot;&gt;npm Enterprise&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="86c2852b954984116b2935ddff97c3ad2337dd40" translate="yes" xml:space="preserve">
          <source>If you're experiencing issues while using a version of node which is unsupported or unstable (odd numbered versions e.g. 0.7.x, 0.9.x, 0.11.x), it's very possible your issue will be fixed by simply using the &lt;a href=&quot;https://github.com/nodejs/LTS&quot;&gt;LTS&lt;/a&gt; version of node.</source>
          <target state="translated">如果您在使用不受支持或不稳定的节点版本时遇到问题（奇数版本，例如0.7.x，0.9.x，0.11.x），则很可能只需使用&lt;a href=&quot;https://github.com/nodejs/LTS&quot;&gt;LTS&lt;/a&gt;版本即可解决问题节点。</target>
        </trans-unit>
        <trans-unit id="3410edb229a97da8b3cf442aed556e43c2deba40" translate="yes" xml:space="preserve">
          <source>If you're on Windows and you have a broken installation, the easiest thing to do is to reinstall node from the official installer (see &lt;a href=&quot;try-the-latest-stable-version-of-npm#upgrading-on-windows&quot;&gt;this note about installing the latest stable version&lt;/a&gt;).</source>
          <target state="translated">如果您使用的是Windows，并且安装中断，那么最简单的方法是从官方安装程序重新安装节点（&lt;a href=&quot;try-the-latest-stable-version-of-npm#upgrading-on-windows&quot;&gt;有关安装最新稳定版本的信息，&lt;/a&gt;请参阅此说明）。</target>
        </trans-unit>
        <trans-unit id="713b08500f14e3fdafa018e50a92d460abcf4f72" translate="yes" xml:space="preserve">
          <source>If you're using Linux, choose one of these options:</source>
          <target state="translated">如果你使用的是Linux,请选择其中一个选项。</target>
        </trans-unit>
        <trans-unit id="332671b438fa51d658eb9f22b7681b41213fa992" translate="yes" xml:space="preserve">
          <source>If you're using OS X or Windows, use one of the installers from the &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js download page&lt;/a&gt;. Be sure to install the version labeled &lt;strong&gt;LTS&lt;/strong&gt;. Other versions have not yet been tested with npm.</source>
          <target state="translated">如果您使用的是OS X或Windows，请使用&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js下载页面&lt;/a&gt;中的安装程序之一。确保安装标有&lt;strong&gt;LTS&lt;/strong&gt;的版本。其他版本尚未通过npm进行测试。</target>
        </trans-unit>
        <trans-unit id="e547daea57a266838810e7a746fc8ce199a4c3c6" translate="yes" xml:space="preserve">
          <source>If you're using a common license such as BSD-2-Clause or MIT, add a current SPDX license identifier for the license you're using, like this:</source>
          <target state="translated">如果你使用的是通用的许可证,如BSD-2-Clause或MIT,请为你正在使用的许可证添加一个当前的SPDX许可证标识符,像这样。</target>
        </trans-unit>
        <trans-unit id="4cbb736c9aadb466ef997b0d942008cb25421bdd" translate="yes" xml:space="preserve">
          <source>If you're using npm private packages in an environment where you're not directly able to log in, such as inside a &lt;a href=&quot;ci-server-config&quot;&gt;CI Server&lt;/a&gt; or a &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; container, you'll need to get and export an npm token as an environment variable. That token should look like &lt;code&gt;NPM_TOKEN=00000000-0000-0000-0000-000000000000&lt;/code&gt;.</source>
          <target state="translated">如果在无法直接登录的环境中（例如，在&lt;a href=&quot;ci-server-config&quot;&gt;CI Server&lt;/a&gt;或&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;容器内部）使用npm私有软件包，则需要获取和导出npm令牌作为环境变量。该令牌应该看起来像 &lt;code&gt;NPM_TOKEN=00000000-0000-0000-0000-000000000000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3a065650b95372263a9b06a8a31c71ddcd2a3e91" translate="yes" xml:space="preserve">
          <source>If you're using npm to develop and publish your code, check out the following help topics:</source>
          <target state="translated">如果你正在使用npm来开发和发布你的代码,请查看以下帮助主题。</target>
        </trans-unit>
        <trans-unit id="5ab08f0c695d080c2410071c56f74081307d3a60" translate="yes" xml:space="preserve">
          <source>If you've disabled package-locks then extraneous modules will not be removed and it's up to you to run &lt;code&gt;npm prune&lt;/code&gt; from time-to-time to remove them.</source>
          <target state="translated">如果您禁用了包锁，那么多余的模块将不会被删除，由您不时运行 &lt;code&gt;npm prune&lt;/code&gt; 来删除它们。</target>
        </trans-unit>
        <trans-unit id="9215bedc685f7c1ab884b4a2281c47c11092c3ff" translate="yes" xml:space="preserve">
          <source>If you've read through &lt;a href=&quot;intro&quot;&gt;Working with private packages&lt;/a&gt;, you'll know that in order to use private packages, you need to be &lt;a href=&quot;../cli/adduser&quot;&gt;logged in&lt;/a&gt; to npm via the npm CLI.</source>
          <target state="translated">如果您已阅读&lt;a href=&quot;intro&quot;&gt;《使用私有软件包》&lt;/a&gt;，那么您将知道，要使用私有软件包，您需要通过npm CLI &lt;a href=&quot;../cli/adduser&quot;&gt;登录&lt;/a&gt;到npm。</target>
        </trans-unit>
        <trans-unit id="5dfc4cbb19f2d71708ca04ed3ba3698598d76a3c" translate="yes" xml:space="preserve">
          <source>If your account is not paid, then attempts to publish scoped packages will fail with an HTTP 402 status code (logically enough), unless you use &lt;code&gt;--access=public&lt;/code&gt;.</source>
          <target state="translated">如果您的帐户未付款，则除非您使用 &lt;code&gt;--access=public&lt;/code&gt; ，否则尝试发布作用域包的尝试将失败，并显示HTTP 402状态代码（在逻辑上足够）。</target>
        </trans-unit>
        <trans-unit id="7d640b973354a7ee41343c929fe8f9987700374d" translate="yes" xml:space="preserve">
          <source>If your code only runs on certain cpu architectures, you can specify which ones.</source>
          <target state="translated">如果你的代码只在特定的cpu架构上运行,你可以指定是哪种架构。</target>
        </trans-unit>
        <trans-unit id="37590539e87325af18b8a11166dd84d2de618bcd" translate="yes" xml:space="preserve">
          <source>If your linked package is scoped (see &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;) your link command must include that scope, e.g.</source>
          <target state="translated">如果链接的程序包是作用域的（请参阅 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; ），则链接命令必须包含该作用域，例如</target>
        </trans-unit>
        <trans-unit id="d93a24ef7a2e589f3f035181fbd19fb60dddde63" translate="yes" xml:space="preserve">
          <source>If your module is meant to be used client-side the browser field should be used instead of the main field. This is helpful to hint users that it might rely on primitives that aren't available in Node.js modules. (e.g. &lt;code&gt;window&lt;/code&gt;)</source>
          <target state="translated">如果要在客户端使用模块，则应使用浏览器字段而不是主字段。这有助于提示用户它可能依赖于Node.js模块中不可用的原语。（例如， &lt;code&gt;window&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="20de205251c7fb0eab572d4760b4fc38d422f3b5" translate="yes" xml:space="preserve">
          <source>If your npm is broken</source>
          <target state="translated">如果你的npm坏了</target>
        </trans-unit>
        <trans-unit id="256f6514781021701e9c8dba53a6d6895a22b57e" translate="yes" xml:space="preserve">
          <source>If your package is licensed under multiple common licenses, use an &lt;a href=&quot;https://www.npmjs.com/package/spdx&quot;&gt;SPDX license expression syntax version 2.0 string&lt;/a&gt;, like this:</source>
          <target state="translated">如果您的软件包已获得多个通用许可证的许可，请使用&lt;a href=&quot;https://www.npmjs.com/package/spdx&quot;&gt;SPDX许可证表达式语法版本2.0字符串&lt;/a&gt;，如下所示：</target>
        </trans-unit>
        <trans-unit id="228c184509701b2e9584737807486a220473f015" translate="yes" xml:space="preserve">
          <source>If, given the structure of your project, you find &lt;code&gt;.npmignore&lt;/code&gt; to be a maintenance headache, you might instead try populating the &lt;code&gt;files&lt;/code&gt; property of &lt;code&gt;package.json&lt;/code&gt;, which is an array of file or directory names that should be included in your package. Sometimes a whitelist is easier to manage than a blacklist.</source>
          <target state="translated">如果在给定项目结构的基础上发现 &lt;code&gt;.npmignore&lt;/code&gt; 令您头疼，那么您可以尝试填充 &lt;code&gt;package.json&lt;/code&gt; 的 &lt;code&gt;files&lt;/code&gt; 属性，该属性是应包含在包中的文件或目录名称的数组。有时，白名单比黑名单更易于管理。</target>
        </trans-unit>
        <trans-unit id="73db89d3b35febac1cbfab179556c5c73c862a84" translate="yes" xml:space="preserve">
          <source>Illegal content.</source>
          <target state="translated">非法内容。</target>
        </trans-unit>
        <trans-unit id="102c69297ad0d0f888686af4f52f660158842b00" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">在 &lt;code&gt;package.json&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="2f04070eb780444be5bbdc03a31232731a144341" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;require&lt;/code&gt; statement:</source>
          <target state="translated">在 &lt;code&gt;require&lt;/code&gt; 语句中：</target>
        </trans-unit>
        <trans-unit id="4bea6b48fdfd5d1c6244fc77e673c09e4734a0aa" translate="yes" xml:space="preserve">
          <source>In addition to the shell's pre-existing &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;npm run&lt;/code&gt; adds &lt;code&gt;node_modules/.bin&lt;/code&gt; to the &lt;code&gt;PATH&lt;/code&gt; provided to scripts. Any binaries provided by locally-installed dependencies can be used without the &lt;code&gt;node_modules/.bin&lt;/code&gt; prefix. For example, if there is a &lt;code&gt;devDependency&lt;/code&gt; on &lt;code&gt;tap&lt;/code&gt; in your package, you should write:</source>
          <target state="translated">除了外壳程序预先存在的 &lt;code&gt;PATH&lt;/code&gt; 之外， &lt;code&gt;npm run&lt;/code&gt; 将 &lt;code&gt;node_modules/.bin&lt;/code&gt; 添加到提供给脚本的 &lt;code&gt;PATH&lt;/code&gt; 中。本地安装的依赖项提供的任何二进制文件都可以使用，而无需使用 &lt;code&gt;node_modules/.bin&lt;/code&gt; 前缀。例如，如果有一个 &lt;code&gt;devDependency&lt;/code&gt; 上 &lt;code&gt;tap&lt;/code&gt; 在你的包，你应该写：</target>
        </trans-unit>
        <trans-unit id="1dc06c00b9a131155723fde264cb18f1931d96dd" translate="yes" xml:space="preserve">
          <source>In addition, developers can use an nvm to test their applications on multiple versions of npm. The nvm enables you to easily switch npm as well as node versions. This makes it easier to ensure that your applications work for most users, even if they are using other versions of npm. If you decide to install a version manager, use the instructions for the version manager you select to learn how to switch versions, and to learn how to keep up-to-date with the latest version of npm.</source>
          <target state="translated">此外,开发者可以使用nvm在多个版本的npm上测试他们的应用程序。nvm可以让你轻松切换npm以及node版本。这样可以更容易地确保你的应用程序可以为大多数用户工作,即使他们正在使用其他版本的npm。如果您决定安装版本管理器,请使用您选择的版本管理器的说明来了解如何切换版本,并了解如何保持最新版本的npm。</target>
        </trans-unit>
        <trans-unit id="3e6afecef6680019d979c074a1f20fe4e624c014" translate="yes" xml:space="preserve">
          <source>In almost every case so far, the parties involved have been able to reach an amicable resolution without any major intervention. Most people really do want to be reasonable, and are probably not even aware that they're in your way.</source>
          <target state="translated">到目前为止,几乎每一个案例中,当事人都能在没有任何重大干预的情况下友好解决。大多数人真的是想讲道理的,而且可能根本就不知道自己挡了你的路。</target>
        </trans-unit>
        <trans-unit id="920e41229bacb5640d47b76a1f5eb171f12e4887" translate="yes" xml:space="preserve">
          <source>In cases where you need to preserve npm packages locally or have them available through a single file download, you can bundle the packages in a tarball file by specifying the package names in the &lt;code&gt;bundledDependencies&lt;/code&gt; array and executing &lt;code&gt;npm pack&lt;/code&gt;.</source>
          <target state="translated">如果您需要在本地保留npm软件包或通过单个文件下载使它们可用，则可以通过在 &lt;code&gt;bundledDependencies&lt;/code&gt; 数组中指定软件包名称并执行 &lt;code&gt;npm pack&lt;/code&gt; ，将软件包捆绑在tarball文件中。</target>
        </trans-unit>
        <trans-unit id="c133b6b1cb018018601581396589c11f3c7510ab" translate="yes" xml:space="preserve">
          <source>In front of a leading &lt;code&gt;(&lt;/code&gt; or &lt;code&gt;[&lt;/code&gt; at the start of the line. This prevents the expression from being interpreted as a function call or property access, respectively.</source>
          <target state="translated">在前面的领先 &lt;code&gt;(&lt;/code&gt; 或 &lt;code&gt;[&lt;/code&gt; 在该行的开头。这样可以防止被解释为分别函数调用或属性访问，表达。</target>
        </trans-unit>
        <trans-unit id="b9b1c0406cc448831d6674cc7e4fdb5a8633faba" translate="yes" xml:space="preserve">
          <source>In global mode (ie, with &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; appended to the command), it installs the current package context (ie, the current working directory) as a global package.</source>
          <target state="translated">在全局模式下（即，在命令后附加 &lt;code&gt;-g&lt;/code&gt; 或 &lt;code&gt;--global&lt;/code&gt; ），它将当前程序包上下文（即当前工作目录）安装为全局程序包。</target>
        </trans-unit>
        <trans-unit id="7d3fd7d1ec9eac2dcdf13577c18ff5feb1e53bdb" translate="yes" xml:space="preserve">
          <source>In global mode (ie, with &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; appended to the command), it uninstalls the current package context as a global package.</source>
          <target state="translated">在全局模式下（即，在命令后附加 &lt;code&gt;-g&lt;/code&gt; 或 &lt;code&gt;--global&lt;/code&gt; ），它将当前软件包上下文作为全局软件包卸载。</target>
        </trans-unit>
        <trans-unit id="30661e1e79fd25877be468e4b8ba2c5fd7fd3bbb" translate="yes" xml:space="preserve">
          <source>In most cases, this will install the version of the modules tagged as &lt;code&gt;latest&lt;/code&gt; on the npm registry.</source>
          <target state="translated">在大多数情况下，这将在npm注册表上安装标记为 &lt;code&gt;latest&lt;/code&gt; 的模块版本。</target>
        </trans-unit>
        <trans-unit id="1a215cb3081bdb0d78defc05b6d835eabf557a1c" translate="yes" xml:space="preserve">
          <source>In normal operation with package-locks enabled, extraneous modules are pruned automatically when modules are installed and you'll only need this command with the &lt;code&gt;--production&lt;/code&gt; flag.</source>
          <target state="translated">在启用包锁的正常操作中，安装模块时会自动修剪无关的模块，并且只需要带有 &lt;code&gt;--production&lt;/code&gt; 标志的此命令即可。</target>
        </trans-unit>
        <trans-unit id="d6666c0289b6c457cf5abdf7ea6b0210fce16fbb" translate="yes" xml:space="preserve">
          <source>In order to create teams and manage team membership, you must be a &lt;em&gt;team admin&lt;/em&gt; under the given organization. Listing teams and team memberships may be done by any member of the organizations.</source>
          <target state="translated">为了创建团队并管理团队成员，您必须是给定组织下的&lt;em&gt;团队管理员&lt;/em&gt;。列出团队和团队成员资格可以由组织的任何成员来完成。</target>
        </trans-unit>
        <trans-unit id="c99f1823824f0ad191feaf8aa69e302ec9a6fd70" translate="yes" xml:space="preserve">
          <source>In order to ensure that potentially sensitive information is not included in the audit data bundle, some dependencies may have their names (and sometimes versions) replaced with opaque non-reversible identifiers. It is done for the following dependency types:</source>
          <target state="translated">为了确保潜在的敏感信息不被包含在审计数据包中,一些依赖关系的名称(有时是版本)可能会被不透明的不可逆转的标识符取代。下列依赖类型就是这样做的。</target>
        </trans-unit>
        <trans-unit id="023d2d71a870c01e2680981e2eb12fa9ecc87218" translate="yes" xml:space="preserve">
          <source>In order to install private packages, you may think that we could just add a line before we run &lt;code&gt;npm install&lt;/code&gt;, using the &lt;a href=&quot;https://docs.docker.com/engine/reference/builder/#env&quot;&gt;ENV parameter&lt;/a&gt;:</source>
          <target state="translated">为了安装私有软件包，您可能认为我们可以在运行 &lt;code&gt;npm install&lt;/code&gt; 之前使用&lt;a href=&quot;https://docs.docker.com/engine/reference/builder/#env&quot;&gt;ENV参数&lt;/a&gt;添加一行：</target>
        </trans-unit>
        <trans-unit id="1f5409733d3c2da36907eb399cad5da97477431e" translate="yes" xml:space="preserve">
          <source>In package directory, run</source>
          <target state="translated">在软件包目录下,运行</target>
        </trans-unit>
        <trans-unit id="0bfd06fe136b0bb982a349fcd32b6c89459f697d" translate="yes" xml:space="preserve">
          <source>In particular, npm has two modes of operation:</source>
          <target state="translated">具体来说,npm有两种操作模式。</target>
        </trans-unit>
        <trans-unit id="600e9261c7a9f17f26c76d10aa21cbf6b72e87c7" translate="yes" xml:space="preserve">
          <source>In short, the main differences between using &lt;code&gt;npm install&lt;/code&gt; and &lt;code&gt;npm ci&lt;/code&gt; are:</source>
          <target state="translated">简而言之，使用 &lt;code&gt;npm install&lt;/code&gt; 和 &lt;code&gt;npm ci&lt;/code&gt; 之间的主要区别是：</target>
        </trans-unit>
        <trans-unit id="e0684ca86550375447c1d12a9d3ab59ba2d7fb1c" translate="yes" xml:space="preserve">
          <source>In some cases, you want to express the compatibility of your package with a host tool or library, while not necessarily doing a &lt;code&gt;require&lt;/code&gt; of this host. This is usually referred to as a &lt;em&gt;plugin&lt;/em&gt;. Notably, your module may be exposing a specific interface, expected and specified by the host documentation.</source>
          <target state="translated">在某些情况下，您想表达软件包与主机工具或库的兼容性，而不必一定 &lt;code&gt;require&lt;/code&gt; 对此主机进行操作。通常将其称为&lt;em&gt;插件&lt;/em&gt;。值得注意的是，您的模块可能正在公开主机文档预期和指定的特定接口。</target>
        </trans-unit>
        <trans-unit id="69d52e1102f15474a1d6b1d66b2c4e2b5f85b885" translate="yes" xml:space="preserve">
          <source>In that file, add a function as a property of the &lt;code&gt;exports&lt;/code&gt; object. This will make the function available to other code.</source>
          <target state="translated">在该文件中，添加一个函数作为 &lt;code&gt;exports&lt;/code&gt; 对象的属性。这将使该功能可用于其他代码。</target>
        </trans-unit>
        <trans-unit id="ed2ccfabbd923fca634c0c802c4680b9f3bcca61" translate="yes" xml:space="preserve">
          <source>In the code above, I am appending &lt;code&gt;\\?\&lt;/code&gt; to the current directory absolute path. This will actually force the Windows API to allow an increase in the MAX_PATH variable (normally capped at 260). Read more about &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247%28v=vs.85%29.aspx#maxpath&quot;&gt;max path&lt;/a&gt;. This is happening during the sharedfolder creation which is intentionally handled by VBoxManage and not Vagrant's &quot;synced_folder&quot; method. The last bit is pretty self-explanatory; we create the new shared folder and then make sure it's mounted each time the machine is accessed or touched since Vagrant likes to reload its mounts/shared folders on each load.</source>
          <target state="translated">在上面的代码中，我将 &lt;code&gt;\\?\&lt;/code&gt; 附加到当前目录的绝对路径。这实际上将强制Windows API允许增加MAX_PATH变量（通常上限为260）。了解有关&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247%28v=vs.85%29.aspx#maxpath&quot;&gt;最大路径的&lt;/a&gt;更多信息。这是在共享文件夹创建过程中发生的，这是由VBoxManage故意处理的，而不是由Vagrant的&amp;ldquo; synced_folder&amp;rdquo;方法处理的。最后一点是不言而喻的；我们创建了新的共享文件夹，然后确保每次访问或触摸计算机时都已安装该共享文件夹，因为Vagrant希望在每次加载时重新加载其安装/共享文件夹。</target>
        </trans-unit>
        <trans-unit id="b22eba1dfad6b5c5805e6648c5bde3860bf16b24" translate="yes" xml:space="preserve">
          <source>In the context of a Node program, the &lt;code&gt;module&lt;/code&gt; is also the thing that was loaded &lt;em&gt;from&lt;/em&gt; a file. For example, in the following program:</source>
          <target state="translated">在Node程序的上下文中， &lt;code&gt;module&lt;/code&gt; 也是&lt;em&gt;从&lt;/em&gt;文件加载的东西。例如，在以下程序中：</target>
        </trans-unit>
        <trans-unit id="d4472d8c2b685da9bed1a91addad6ed8b72bc7b9" translate="yes" xml:space="preserve">
          <source>In the dependent package repository, open a pull or merge request to update the version of the vulnerable package to a version with a fix.</source>
          <target state="translated">在依赖的软件包仓库中,打开一个拉取或合并请求,将易受攻击软件包的版本更新到一个有修复的版本。</target>
        </trans-unit>
        <trans-unit id="67d9d4c943e9e05c5d2edf7f246cc421e3365780" translate="yes" xml:space="preserve">
          <source>In the future, this information may be used in other creative ways.</source>
          <target state="translated">未来,这些信息可能会以其他创造性的方式使用。</target>
        </trans-unit>
        <trans-unit id="c69afc6a84394721e4b5bba9b335999424fbbef8" translate="yes" xml:space="preserve">
          <source>In the output:</source>
          <target state="translated">在输出。</target>
        </trans-unit>
        <trans-unit id="43f4e7a53fc606039d9b12abe3bab43f11186b35" translate="yes" xml:space="preserve">
          <source>In the package or dependent package issue tracker, open an issue and include information from the audit report, including the vulnerability report from the &quot;More info&quot; field.</source>
          <target state="translated">在包或依赖包问题跟踪器中,打开一个问题,并包含审计报告中的信息,包括 &quot;更多信息 &quot;字段中的漏洞报告。</target>
        </trans-unit>
        <trans-unit id="6fe0731078a5c1b8598e0b9292d45dbf070bd7f1" translate="yes" xml:space="preserve">
          <source>In the package repository, open a pull or merge request to make the fix on the package repository.</source>
          <target state="translated">在包仓库中,打开拉取或合并请求,在包仓库上进行修复。</target>
        </trans-unit>
        <trans-unit id="bd6f154ed9e2653ff7cd0b73be56ba18590a36f9" translate="yes" xml:space="preserve">
          <source>In the root of your package, do this:</source>
          <target state="translated">在你的包的根部,这样做。</target>
        </trans-unit>
        <trans-unit id="c7822a9b9e2f412ba3ed00580e778b51e2d85b6c" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;&lt;a href=&quot;dedupe&quot;&gt;npm-dedupe&lt;/a&gt;&lt;/code&gt; will transform the tree to:</source>
          <target state="translated">在这种情况下， &lt;code&gt;&lt;a href=&quot;dedupe&quot;&gt;npm-dedupe&lt;/a&gt;&lt;/code&gt; 会将树转换为：</target>
        </trans-unit>
        <trans-unit id="f7c597d7ae842dac775ee53127af885495cbbc96" translate="yes" xml:space="preserve">
          <source>In this case, it's best to map these additional items in a &lt;code&gt;devDependencies&lt;/code&gt; object.</source>
          <target state="translated">在这种情况下，最好将这些其他项映射到 &lt;code&gt;devDependencies&lt;/code&gt; 对象中。</target>
        </trans-unit>
        <trans-unit id="9a6ece42a360b96028203c2de1cd05dc968e4d22" translate="yes" xml:space="preserve">
          <source>In this case, running &lt;code&gt;npm update&lt;/code&gt; will install &lt;code&gt;dep1@1.1.2&lt;/code&gt;. Even though the &lt;code&gt;latest&lt;/code&gt; tag points to &lt;code&gt;1.2.2&lt;/code&gt;, this version does not satisfy &lt;code&gt;~1.1.1&lt;/code&gt;, which is equivalent to &lt;code&gt;&amp;gt;=1.1.1 &amp;lt;1.2.0&lt;/code&gt;. So the highest-sorting version that satisfies &lt;code&gt;~1.1.1&lt;/code&gt; is used, which is &lt;code&gt;1.1.2&lt;/code&gt;.</source>
          <target state="translated">在这种情况下，运行 &lt;code&gt;npm update&lt;/code&gt; 将安装 &lt;code&gt;dep1@1.1.2&lt;/code&gt; 。即使 &lt;code&gt;latest&lt;/code&gt; 标记指向 &lt;code&gt;1.2.2&lt;/code&gt; ，该版本也不满足 &lt;code&gt;~1.1.1&lt;/code&gt; ，相当于 &lt;code&gt;&amp;gt;=1.1.1 &amp;lt;1.2.0&lt;/code&gt; 。因此，使用满足 &lt;code&gt;~1.1.1&lt;/code&gt; 的最高排序版本，即 &lt;code&gt;1.1.2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c110815303257806c2d243b125868ea820e17e5" translate="yes" xml:space="preserve">
          <source>In this case, we might expect a folder structure like this:</source>
          <target state="translated">在这种情况下,我们可能希望有这样的文件夹结构。</target>
        </trans-unit>
        <trans-unit id="9ee5fc2bc10de85e2f7df8445a07862a5a7cfcb6" translate="yes" xml:space="preserve">
          <source>Incidentally, if you would prefer that packages not be installed to your roaming profile (because you have a quota on your shared network, or it makes logging in or out from a domain sluggish), you can put it in your local app data instead:</source>
          <target state="translated">顺便说一下,如果你希望套餐不要安装到你的漫游配置文件中(因为你在共享网络上有配额,或者它使从域中登录或退出变得迟钝),你可以把它放在你的本地应用数据中代替。</target>
        </trans-unit>
        <trans-unit id="55a1b783e72c5a61ef2d849d50d2bce7a04ef479" translate="yes" xml:space="preserve">
          <source>Include Documentation (readme.md)</source>
          <target state="translated">包括文件(readme.md)</target>
        </trans-unit>
        <trans-unit id="c9ec7fcf0ce1c005cbdd2ae9ab39e1773e6bf368" translate="yes" xml:space="preserve">
          <source>Indentation</source>
          <target state="translated">Indentation</target>
        </trans-unit>
        <trans-unit id="ab946da3413cdb7986cdb7d1c34302e61a4ac30f" translate="yes" xml:space="preserve">
          <source>Indicates that the install was done with the environment variable &lt;code&gt;NODE_PRESERVE_SYMLINKS&lt;/code&gt; enabled. The installer should insist that the value of this property match that environment variable.</source>
          <target state="translated">指示安装是在启用环境变量 &lt;code&gt;NODE_PRESERVE_SYMLINKS&lt;/code&gt; 的情况下完成的。安装程序应坚持使该属性的值与该环境变量匹配。</target>
        </trans-unit>
        <trans-unit id="c926cf8547ff2539eedc32dd8fe6261692e27783" translate="yes" xml:space="preserve">
          <source>Indicates that you don't want npm to make any changes and that it should only report what it would have done. This can be passed into any of the commands that modify your local installation, eg, &lt;code&gt;install&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;dedupe&lt;/code&gt;, &lt;code&gt;uninstall&lt;/code&gt;. This is NOT currently honored by some network related commands, eg &lt;code&gt;dist-tags&lt;/code&gt;, &lt;code&gt;owner&lt;/code&gt;, etc.</source>
          <target state="translated">表示您不希望npm进行任何更改，并且只应报告将要执行的操作。可以将其传递到任何修改本地安装的命令中，例如 &lt;code&gt;install&lt;/code&gt; ， &lt;code&gt;update&lt;/code&gt; ， &lt;code&gt;dedupe&lt;/code&gt; ， &lt;code&gt;uninstall&lt;/code&gt; 。某些与网络相关的命令（例如 &lt;code&gt;dist-tags&lt;/code&gt; ， &lt;code&gt;owner&lt;/code&gt; 等）目前不支持此功能。</target>
        </trans-unit>
        <trans-unit id="39e28bf0989e4234d6938ed341cb5de9215a9b1c" translate="yes" xml:space="preserve">
          <source>Inspect the env to determine where to put things. For instance, if the &lt;code&gt;npm_config_binroot&lt;/code&gt; environment variable is set to &lt;code&gt;/home/user/bin&lt;/code&gt;, then don't try to install executables into &lt;code&gt;/usr/local/bin&lt;/code&gt;. The user probably set it up that way for a reason.</source>
          <target state="translated">检查环境以确定放置物品的位置。例如，如果 &lt;code&gt;npm_config_binroot&lt;/code&gt; 环境变量设置为 &lt;code&gt;/home/user/bin&lt;/code&gt; ，则不要尝试将可执行文件安装到 &lt;code&gt;/usr/local/bin&lt;/code&gt; 。用户可能以这种方式进行设置是有原因的。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="6b5c145a6bce3b69c546f01cff677b85c74c30aa" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;dev-dependencies&lt;/code&gt; along with packages.</source>
          <target state="translated">与软件包一起安装 &lt;code&gt;dev-dependencies&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ccf25b1b26120c3c1106d4085aa6f09c5dfd8c88" translate="yes" xml:space="preserve">
          <source>Install Lodash</source>
          <target state="translated">安装Lodash</target>
        </trans-unit>
        <trans-unit id="7141ddecf1521195ee23a54ca7d0e182f29e87eb" translate="yes" xml:space="preserve">
          <source>Install a package called &lt;code&gt;lodash&lt;/code&gt;. Confirm that it ran successfully by listing the contents of the &lt;code&gt;node_modules&lt;/code&gt; directory and seeing a directory called &lt;code&gt;lodash&lt;/code&gt;.</source>
          <target state="translated">安装一个名为 &lt;code&gt;lodash&lt;/code&gt; 的软件包。列出 &lt;code&gt;node_modules&lt;/code&gt; 目录的内容并查看名为 &lt;code&gt;lodash&lt;/code&gt; 的目录，以确认它已成功运行。</target>
        </trans-unit>
        <trans-unit id="daab255b11723ab28edd13e1f0b5c2f92e7af229" translate="yes" xml:space="preserve">
          <source>Install a package called &lt;code&gt;lodash&lt;/code&gt;. Confirm that it ran successfully by listing the contents of the &lt;code&gt;node_modules&lt;/code&gt; directory, where you should see a directory called &lt;code&gt;lodash&lt;/code&gt;.</source>
          <target state="translated">安装一个名为 &lt;code&gt;lodash&lt;/code&gt; 的软件包。通过列出 &lt;code&gt;node_modules&lt;/code&gt; 目录的内容来确认它是否成功运行，您应该在该目录中看到一个名为 &lt;code&gt;lodash&lt;/code&gt; 的目录。</target>
        </trans-unit>
        <trans-unit id="cf863402fa035e9fa30835bebaa0bdfaf9736101" translate="yes" xml:space="preserve">
          <source>Install a package that is sitting on the filesystem. Note: if you just want to link a dev directory into your npm root, you can do this more easily by using &lt;code&gt;npm link&lt;/code&gt;.</source>
          <target state="translated">安装位于文件系统上的软件包。注意：如果仅要将dev目录链接到npm根目录，则可以使用 &lt;code&gt;npm link&lt;/code&gt; 来更轻松地完成此操作。</target>
        </trans-unit>
        <trans-unit id="d04e289b8877f209b7a2ec868f0418e05d1d551c" translate="yes" xml:space="preserve">
          <source>Install a package.</source>
          <target state="translated">安装一个包。</target>
        </trans-unit>
        <trans-unit id="bb9709a44ef41350b6e1d47070cb73a8437531f0" translate="yes" xml:space="preserve">
          <source>Install a project with a clean slate.</source>
          <target state="translated">安装一个项目的时候,要一帆风顺。</target>
        </trans-unit>
        <trans-unit id="0f07764ee1d7595c20f4541dcdf96b03a18799d2" translate="yes" xml:space="preserve">
          <source>Install a version of the package matching the specified version range. This will follow the same rules for resolving dependencies described in &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">安装与指定版本范围匹配的软件包版本。这将遵循 &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; 中描述的相同的规则来解决依赖关系。</target>
        </trans-unit>
        <trans-unit id="0aa371dd5a553c6e4d334178da28c3547ace7684" translate="yes" xml:space="preserve">
          <source>Install it &lt;strong&gt;globally&lt;/strong&gt; if you're going to run it on the command line.</source>
          <target state="translated">如果要在命令行上运行它，请&lt;strong&gt;全局&lt;/strong&gt;安装它。</target>
        </trans-unit>
        <trans-unit id="c1ef7760f5400ec98acb48ffe6a8955346a1d5b3" translate="yes" xml:space="preserve">
          <source>Install it &lt;strong&gt;locally&lt;/strong&gt; if you're going to &lt;code&gt;require()&lt;/code&gt; it.</source>
          <target state="translated">如果您 &lt;code&gt;require()&lt;/code&gt; ，请在&lt;strong&gt;本地&lt;/strong&gt;安装。</target>
        </trans-unit>
        <trans-unit id="0e3ae7d340cd5d6118fab28b40d85f02e81d01f4" translate="yes" xml:space="preserve">
          <source>Install npm &amp;amp; manage npm versions</source>
          <target state="translated">安装npm和管理npm版本</target>
        </trans-unit>
        <trans-unit id="ba703cade7e55eac3689188606364be7af94fd82" translate="yes" xml:space="preserve">
          <source>Install npm from a terminal console.</source>
          <target state="translated">从终端控制台安装npm。</target>
        </trans-unit>
        <trans-unit id="607a14863d7c761a2944f0c9b1511a8d957cb63a" translate="yes" xml:space="preserve">
          <source>Install the dependencies in the local node_modules folder.</source>
          <target state="translated">在本地node_modules文件夹中安装依赖项。</target>
        </trans-unit>
        <trans-unit id="614cd878b6f0da8f135c854fd6329b05324c9dc0" translate="yes" xml:space="preserve">
          <source>Install the latest msi from &lt;a href=&quot;https://nodejs.org/en/download&quot;&gt;https://nodejs.org/en/download&lt;/a&gt;</source>
          <target state="translated">从&lt;a href=&quot;https://nodejs.org/en/download&quot;&gt;https://nodejs.org/en/download&lt;/a&gt;安装最新的msi</target>
        </trans-unit>
        <trans-unit id="799d7b201a6325929254cf2a50b219abd1d73680" translate="yes" xml:space="preserve">
          <source>Install the latest package from &lt;a href=&quot;https://nodejs.org/en/download&quot;&gt;https://nodejs.org/en/download&lt;/a&gt;</source>
          <target state="translated">从&lt;a href=&quot;https://nodejs.org/en/download&quot;&gt;https://nodejs.org/en/download&lt;/a&gt;安装最新的软件包</target>
        </trans-unit>
        <trans-unit id="4cd5c29815d08cef50683621a18dbb82dbc67f1d" translate="yes" xml:space="preserve">
          <source>Install the package at &lt;code&gt;https://bitbucket.org/bitbucketname/bitbucketrepo&lt;/code&gt; by attempting to clone it using &lt;code&gt;git&lt;/code&gt;.</source>
          <target state="translated">通过尝试使用 &lt;code&gt;git&lt;/code&gt; 克隆软件包，将其安装在 &lt;code&gt;https://bitbucket.org/bitbucketname/bitbucketrepo&lt;/code&gt; 上。</target>
        </trans-unit>
        <trans-unit id="5982c219bc0b15ae84452dd51027dbe8d5c50d3a" translate="yes" xml:space="preserve">
          <source>Install the package at &lt;code&gt;https://gist.github.com/gistID&lt;/code&gt; by attempting to clone it using &lt;code&gt;git&lt;/code&gt;. The GitHub username associated with the gist is optional and will not be saved in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">通过尝试使用 &lt;code&gt;git&lt;/code&gt; 克隆该软件包，将其安装在 &lt;code&gt;https://gist.github.com/gistID&lt;/code&gt; 上。与要点关联的GitHub用户名是可选的，不会保存在 &lt;code&gt;package.json&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="52b67d2695b13f27172b946ca9a54c3eeaa96166" translate="yes" xml:space="preserve">
          <source>Install the package at &lt;code&gt;https://github.com/githubname/githubrepo&lt;/code&gt; by attempting to clone it using &lt;code&gt;git&lt;/code&gt;.</source>
          <target state="translated">通过尝试使用 &lt;code&gt;git&lt;/code&gt; 克隆该软件包，将其安装在 &lt;code&gt;https://github.com/githubname/githubrepo&lt;/code&gt; 上。</target>
        </trans-unit>
        <trans-unit id="baf62fcb31003b56dcd543e6d4b386ce9844dadf" translate="yes" xml:space="preserve">
          <source>Install the package at &lt;code&gt;https://gitlab.com/gitlabname/gitlabrepo&lt;/code&gt; by attempting to clone it using &lt;code&gt;git&lt;/code&gt;.</source>
          <target state="translated">通过尝试使用 &lt;code&gt;git&lt;/code&gt; 克隆软件包，将其安装在 &lt;code&gt;https://gitlab.com/gitlabname/gitlabrepo&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="157aa4043c316b4a3ac95acac005ab0a973f8350" translate="yes" xml:space="preserve">
          <source>Install the package in the directory as a symlink in the current project. Its dependencies will be installed before it's linked. If &lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; sits inside the root of your project, its dependencies may be hoisted to the toplevel &lt;code&gt;node_modules&lt;/code&gt; as they would for other types of dependencies.</source>
          <target state="translated">将软件包作为当前项目中的符号链接安装在目录中。它的依赖项将在链接之前安装。如果 &lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; 位于项目的根目录中，则其依赖关系可能会像其他类型的依赖关系一样被提升到顶层 &lt;code&gt;node_modules&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a8fd002f71a6544b1cdf6a44a11ab75b940fcb9" translate="yes" xml:space="preserve">
          <source>Install the specified version of the package. This will fail if the version has not been published to the registry.</source>
          <target state="translated">安装指定版本的软件包。如果版本还没有发布到注册表中,这将失败。</target>
        </trans-unit>
        <trans-unit id="cddac272afa570d719448e7bc8e1ad0533bf4925" translate="yes" xml:space="preserve">
          <source>Install the version of the package that is referenced by the specified tag. If the tag does not exist in the registry data for that package, then this will fail.</source>
          <target state="translated">安装指定标签所引用的软件包的版本,如果该标签在该软件包的注册表数据中不存在,则会失败。如果该标签不存在于该软件包的注册表数据中,则会失败。</target>
        </trans-unit>
        <trans-unit id="ff0365187eef07ae6db647930f168c806bf3ee31" translate="yes" xml:space="preserve">
          <source>Installing a Package</source>
          <target state="translated">安装软件包</target>
        </trans-unit>
        <trans-unit id="ea0bbebde8e855aa8f57db9e7c7c2749852369d2" translate="yes" xml:space="preserve">
          <source>Installing a single package</source>
          <target state="translated">安装单个软件包</target>
        </trans-unit>
        <trans-unit id="c8c898343e5dca91b2500ba5f6bb300861368794" translate="yes" xml:space="preserve">
          <source>Installing all packages</source>
          <target state="translated">安装所有软件包</target>
        </trans-unit>
        <trans-unit id="b19e62e549d6abd6efa2974927553d53a292d89b" translate="yes" xml:space="preserve">
          <source>Installing npm from the Node.js site</source>
          <target state="translated">从Node.js站点安装npm。</target>
        </trans-unit>
        <trans-unit id="73d6112ff7751cc4d1a55037242f6562d50ff66b" translate="yes" xml:space="preserve">
          <source>Installing private packages</source>
          <target state="translated">安装私人软件包</target>
        </trans-unit>
        <trans-unit id="48b437208df7e1a1d79343dcba2344015bc30b92" translate="yes" xml:space="preserve">
          <source>Installing scoped packages</source>
          <target state="translated">安装范围内的软件包</target>
        </trans-unit>
        <trans-unit id="8c96f7c03f05c3f83504aa4ed97ccbf89a4673c3" translate="yes" xml:space="preserve">
          <source>Installing with tags</source>
          <target state="translated">使用标签安装</target>
        </trans-unit>
        <trans-unit id="6a8059cf2aeb983229ecb130c811f40d0a61e690" translate="yes" xml:space="preserve">
          <source>Installs the package from the hosted git provider, cloning it with &lt;code&gt;git&lt;/code&gt;. For a full git remote url, only that URL will be attempted.</source>
          <target state="translated">从托管的git提供程序安装软件包，并使用 &lt;code&gt;git&lt;/code&gt; 克隆它。对于完整的git远程URL，将仅尝试该URL。</target>
        </trans-unit>
        <trans-unit id="5a66b9b945295de0ea81d4dfb263f96720405bf1" translate="yes" xml:space="preserve">
          <source>Instead of steps 2-4, you can use the corresponding ENV variable (e.g. if you don't want to modify &lt;code&gt;~/.profile&lt;/code&gt;):</source>
          <target state="translated">可以使用相应的ENV变量代替步骤2-4（例如，如果您不想修改 &lt;code&gt;~/.profile&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="c4f0a1672650c31206545ae866dbd661b72b1b05" translate="yes" xml:space="preserve">
          <source>Invalid JSON</source>
          <target state="translated">无效的JSON</target>
        </trans-unit>
        <trans-unit id="95ae015eef7a5a664d7d865b820369e073ddf6b3" translate="yes" xml:space="preserve">
          <source>Is there a website or something to see package docs and such?</source>
          <target state="translated">有没有一个网站或者其他什么东西可以看到包的文档之类的?</target>
        </trans-unit>
        <trans-unit id="3696b8de52cbec587919622eed888189ee3c43b2" translate="yes" xml:space="preserve">
          <source>It cannot be set from the command line, but if you are using npm programmatically, you may wish to send logs to somewhere other than stderr.</source>
          <target state="translated">它不能从命令行设置,但如果你正在使用npm编程,你可能希望将日志发送到stderr以外的地方。</target>
        </trans-unit>
        <trans-unit id="b2b8216ed783d10ac97d9cece5452721a3d3c35e" translate="yes" xml:space="preserve">
          <source>It does not necessarily need to match your github repository name.</source>
          <target state="translated">它不一定要和你的github仓库名一致。</target>
        </trans-unit>
        <trans-unit id="6312476b5ab53e443859ff197c4d33e9b64d5e51" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; the path to a certificate file (and there is no &quot;certfile&quot; option).</source>
          <target state="translated">它&lt;em&gt;不是&lt;/em&gt;证书文件的路径（并且没有&amp;ldquo; certfile&amp;rdquo;选项）。</target>
        </trans-unit>
        <trans-unit id="c391efef90683ad671d2800be3e90e90b27fd53d" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;not&lt;/em&gt; the path to a key file (and there is no &quot;keyfile&quot; option).</source>
          <target state="translated">它&lt;em&gt;不是&lt;/em&gt;密钥文件的路径（并且没有&amp;ldquo; keyfile&amp;rdquo;选项）。</target>
        </trans-unit>
        <trans-unit id="f14a6af6c56e464ae3f6022b3845466f7683dfda" translate="yes" xml:space="preserve">
          <source>It is allowed to both blacklist, and whitelist, although there isn't any good reason to do this.</source>
          <target state="translated">既可以上黑名单,也可以上白名单,虽然没有任何好的理由这样做。</target>
        </trans-unit>
        <trans-unit id="0d21fda1dfc7e7a0739a7e26c274c1c6b6645543" translate="yes" xml:space="preserve">
          <source>It is extremely configurable to support a wide variety of use cases. Most commonly, it is used to publish, discover, install, and develop node programs.</source>
          <target state="translated">它的可配置性极强,可支持多种用例。最常见的是,它被用来发布、发现、安装和开发节点程序。</target>
        </trans-unit>
        <trans-unit id="0e329d02cedd93bc2394713aa002a694a8eda7ed" translate="yes" xml:space="preserve">
          <source>It is highly recommended you commit the generated package lock to source control: this will allow anyone else on your team, your deployments, your CI/continuous integration, and anyone else who runs &lt;code&gt;npm install&lt;/code&gt; in your package source to get the exact same dependency tree that you were developing on. Additionally, the diffs from these changes are human-readable and will inform you of any changes npm has made to your &lt;code&gt;node_modules&lt;/code&gt;, so you can notice if any transitive dependencies were updated, hoisted, etc.</source>
          <target state="translated">强烈建议您将生成的程序包锁定提交给源代码控制：这将允许您团队中的其他任何人，您的部署，您的CI /持续集成以及在包源中运行 &lt;code&gt;npm install&lt;/code&gt; 其他任何人都可以在程序包源中获得完全相同的依赖关系树你在继续发展。此外，这些更改的差异是人类可读的，并且会通知您npm对 &lt;code&gt;node_modules&lt;/code&gt; 所做的任何更改，因此您可以注意到是否有任何传递性依赖项被更新，提升等。</target>
        </trans-unit>
        <trans-unit id="7fa575a825fa2f5b8f0cb07d2335ddfd6fc2a10f" translate="yes" xml:space="preserve">
          <source>It is still your program's responsibility to handle the lack of the dependency. For example, something like this:</source>
          <target state="translated">处理依赖关系的缺失,还是由你的程序负责。比如说,类似这样的事情。</target>
        </trans-unit>
        <trans-unit id="241816bf6d401487d6c9415ec6353a3ce60c96bd" translate="yes" xml:space="preserve">
          <source>It should generally be called during installation, but if you need to run it directly, run:</source>
          <target state="translated">一般应该在安装过程中调用,但如果你需要直接运行它,运行。</target>
        </trans-unit>
        <trans-unit id="c4245e3acc2d772effaa7e57af89255710a3d475" translate="yes" xml:space="preserve">
          <source>It should look like this:</source>
          <target state="translated">它应该是这样的。</target>
        </trans-unit>
        <trans-unit id="4d37d93ec683d8da41559e97e8eec57f8c082148" translate="yes" xml:space="preserve">
          <source>It will also install missing packages. As with all commands that install packages, the &lt;code&gt;--dev&lt;/code&gt; flag will cause &lt;code&gt;devDependencies&lt;/code&gt; to be processed as well.</source>
          <target state="translated">它还将安装缺少的软件包。与所有安装软件包的命令一样，-- &lt;code&gt;--dev&lt;/code&gt; 标志也将导致 &lt;code&gt;devDependencies&lt;/code&gt; 也被处理。</target>
        </trans-unit>
        <trans-unit id="f0147c4e5a71812ce4a6d4a4cf8d36752b11dc35" translate="yes" xml:space="preserve">
          <source>It will never write to &lt;code&gt;package.json&lt;/code&gt; or any of the package-locks: installs are essentially frozen.</source>
          <target state="translated">它永远不会写入 &lt;code&gt;package.json&lt;/code&gt; 或任何包锁：安装实际上是冻结的。</target>
        </trans-unit>
        <trans-unit id="55f4f46341e86975976e077b58da610bf83b1e7a" translate="yes" xml:space="preserve">
          <source>It will print out extraneous, missing, and invalid packages.</source>
          <target state="translated">它将打印出多余的、丢失的和无效的软件包。</target>
        </trans-unit>
        <trans-unit id="ee906bc1869c9a69c2a280ee0d4e949df294bca8" translate="yes" xml:space="preserve">
          <source>It works on version ranges as well as specific versions, so you can do something like this:</source>
          <target state="translated">它既适用于版本范围,也适用于特定版本,所以你可以做这样的事情。</target>
        </trans-unit>
        <trans-unit id="194263e8bf81ddc50161b2a43dd0407d6c6d7674" translate="yes" xml:space="preserve">
          <source>It's a boolean thing. Starring repeatedly has no additional effect.</source>
          <target state="translated">这是一个布尔值的东西。反复出演没有额外的效果。</target>
        </trans-unit>
        <trans-unit id="1a7e45651633f6a0c1525b488841e087d22f9ded" translate="yes" xml:space="preserve">
          <source>It's a good practice to periodically update the packages your application depends on. Then, if the original developers have improved their code, your code will be improved as well.</source>
          <target state="translated">定期更新你的应用程序所依赖的软件包是一个很好的做法。然后,如果原来的开发者改进了他们的代码,你的代码也会得到改进。</target>
        </trans-unit>
        <trans-unit id="8b5832ff66828eb0519ea63cb0bbdfb27d976412" translate="yes" xml:space="preserve">
          <source>It's important to communicate the extent of changes in a new release of code, because sometimes updates can break code that a package needs (called &lt;em&gt;dependencies&lt;/em&gt;).&lt;strong&gt;Semantic versioning&lt;/strong&gt; (semver) is a standard that was designed to solve this problem.</source>
          <target state="translated">在新版本的代码中传达更改的范围很重要，因为有时更新可能会破坏程序包所需的代码（称为&lt;em&gt;dependencies&lt;/em&gt;）。&lt;strong&gt;语义版本控制&lt;/strong&gt;（Semver）是旨在解决此问题的标准。</target>
        </trans-unit>
        <trans-unit id="1b1d93ca4e5e88459b39a6243b2f173db5c15403" translate="yes" xml:space="preserve">
          <source>It's most likely a temporary npm registry glitch. Check &lt;a href=&quot;http://status.npmjs.org/&quot;&gt;npm server status&lt;/a&gt; and try again later.</source>
          <target state="translated">这很可能是npm注册表临时故障。检查&lt;a href=&quot;http://status.npmjs.org/&quot;&gt;npm服务器状态，&lt;/a&gt;然后重试。</target>
        </trans-unit>
        <trans-unit id="2eb229d091ef9849888ef6e26b35d82b6f95179e" translate="yes" xml:space="preserve">
          <source>Just use &lt;code&gt;npm install&lt;/code&gt; now to do what &lt;code&gt;npm bundle&lt;/code&gt; used to do.</source>
          <target state="translated">只需立即使用 &lt;code&gt;npm install&lt;/code&gt; 来执行 &lt;code&gt;npm bundle&lt;/code&gt; 以前的工作。</target>
        </trans-unit>
        <trans-unit id="081b5910405557139dad3722866934240516df09" translate="yes" xml:space="preserve">
          <source>Keep lines shorter than 80 characters. It's better for lines to be too short than to be too long. Break up long lists, objects, and other statements onto multiple lines.</source>
          <target state="translated">行文要短于80个字符。行太短比行太长好。将长长的列表、对象和其他语句分成多行。</target>
        </trans-unit>
        <trans-unit id="970e8b9e29e1e8c963db29df7421731e6c38cab3" translate="yes" xml:space="preserve">
          <source>Keeping files &lt;em&gt;out&lt;/em&gt; of your package</source>
          <target state="translated">将文件&lt;em&gt;从&lt;/em&gt;包装中&lt;em&gt;取出&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0398ccd0f49298b10a3d76a47800d2ebecd49859" translate="yes" xml:space="preserve">
          <source>LICENSE</source>
          <target state="translated">LICENSE</target>
        </trans-unit>
        <trans-unit id="cd8d65b4f5643b453d307cad0df67f3e14f86306" translate="yes" xml:space="preserve">
          <source>Lastly, the &lt;code&gt;npm_lifecycle_event&lt;/code&gt; environment variable is set to whichever stage of the cycle is being executed. So, you could have a single script used for different parts of the process which switches based on what's currently happening.</source>
          <target state="translated">最后，将 &lt;code&gt;npm_lifecycle_event&lt;/code&gt; 环境变量设置为执行循环的任何阶段。因此，您可以将一个脚本用于流程的不同部分，并根据当前情况进行切换。</target>
        </trans-unit>
        <trans-unit id="378cbbf54cbb2e3f3bd201f02c1b946ec3601eba" translate="yes" xml:space="preserve">
          <source>Learn More</source>
          <target state="translated">了解更多</target>
        </trans-unit>
        <trans-unit id="e1848775ca94a3fc45d1b3841d78a2b3d15633f0" translate="yes" xml:space="preserve">
          <source>Learn about Paid Accounts and Billing</source>
          <target state="translated">了解付费账户和账单</target>
        </trans-unit>
        <trans-unit id="824d76b124e6289f372e2ff6bcba91e8939343bd" translate="yes" xml:space="preserve">
          <source>Learn more</source>
          <target state="translated">了解更多</target>
        </trans-unit>
        <trans-unit id="dc74abcb89e3631e26ef0e404afc42f268f107a9" translate="yes" xml:space="preserve">
          <source>Learn more about npm Orgs and npmE</source>
          <target state="translated">了解更多关于npm Orgs和npmE的信息。</target>
        </trans-unit>
        <trans-unit id="aefefbf8f6ff608bbff3e72ec45255f5167b1607" translate="yes" xml:space="preserve">
          <source>Less-common operating systems</source>
          <target state="translated">不太常见的操作系统</target>
        </trans-unit>
        <trans-unit id="dec5b634b11b3a7572db5704ddd434fef451b300" translate="yes" xml:space="preserve">
          <source>Levels of Authentication</source>
          <target state="translated">认证级别</target>
        </trans-unit>
        <trans-unit id="189c373ef03614b1c26e224e7051a975e595615f" translate="yes" xml:space="preserve">
          <source>Licensed under the npm License.</source>
          <target state="translated">根据npm许可证授权。</target>
        </trans-unit>
        <trans-unit id="a344c80294f2be4237b01d237315036177d831f4" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;npm publish&lt;/code&gt;, &lt;code&gt;npm install &amp;lt;pkg&amp;gt;&lt;/code&gt; will use the &lt;code&gt;latest&lt;/code&gt; tag by default. To override this behavior, use &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;tag&amp;gt;&lt;/code&gt;. The following example will install the &lt;code&gt;somepkg&lt;/code&gt; at the version that has been tagged with &lt;code&gt;beta&lt;/code&gt;.</source>
          <target state="translated">像 &lt;code&gt;npm publish&lt;/code&gt; 一样， &lt;code&gt;npm install &amp;lt;pkg&amp;gt;&lt;/code&gt; 将默认使用 &lt;code&gt;latest&lt;/code&gt; 标签。要覆盖此行为，请使用 &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;tag&amp;gt;&lt;/code&gt; 。以下示例将在标有 &lt;code&gt;beta&lt;/code&gt; 的版本上安装 &lt;code&gt;somepkg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1d879967e91b5c9e27268483670365af5fdc917" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;os&lt;/code&gt; option, you can also blacklist architectures:</source>
          <target state="translated">像 &lt;code&gt;os&lt;/code&gt; 选项一样，您也可以将架构列入黑名单：</target>
        </trans-unit>
        <trans-unit id="7a1df51d9e0c1d18f670491070a67cff73ddc8be" translate="yes" xml:space="preserve">
          <source>Limit access according to IP address ranges (CIDR).</source>
          <target state="translated">根据IP地址范围(CIDR)限制访问。</target>
        </trans-unit>
        <trans-unit id="5cddfa331f728925f0bc1c7d4b5912bae645f09f" translate="yes" xml:space="preserve">
          <source>Limitations of npm's Install Algorithm</source>
          <target state="translated">npm安装算法的局限性</target>
        </trans-unit>
        <trans-unit id="7f8bbf7842296926f7c99107eb9e0b491abb832c" translate="yes" xml:space="preserve">
          <source>Line Length</source>
          <target state="translated">线路长度</target>
        </trans-unit>
        <trans-unit id="c0edcf17b4e155a08b3ceb08e375ceb11e5daece" translate="yes" xml:space="preserve">
          <source>Lines in &lt;code&gt;.npmrc&lt;/code&gt; files are interpreted as comments when they begin with a &lt;code&gt;;&lt;/code&gt; or &lt;code&gt;#&lt;/code&gt; character. &lt;code&gt;.npmrc&lt;/code&gt; files are parsed by &lt;a href=&quot;https://github.com/npm/ini&quot;&gt;npm/ini&lt;/a&gt;, which specifies this comment syntax.</source>
          <target state="translated">&lt;code&gt;.npmrc&lt;/code&gt; 文件中的行以&amp;ldquo; &lt;code&gt;;&lt;/code&gt; &amp;rdquo;开头时会被解释为注释。或 &lt;code&gt;#&lt;/code&gt; 个字符。 &lt;code&gt;.npmrc&lt;/code&gt; 文件由&lt;a href=&quot;https://github.com/npm/ini&quot;&gt;npm / ini&lt;/a&gt;解析，npm / ini指定此注释语法。</target>
        </trans-unit>
        <trans-unit id="43a38c5c39d12757e8f4b537b377aec28e159fed" translate="yes" xml:space="preserve">
          <source>Link Packages</source>
          <target state="translated">链接套餐</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="a5f8b8024514bc12fb5b69e83b96669f6fae3fb8" translate="yes" xml:space="preserve">
          <source>Linux &lt;a href=&quot;https://opensource.com/life/17/10/top-terminal-emulators&quot;&gt;terminal emulators&lt;/a&gt;.</source>
          <target state="translated">Linux &lt;a href=&quot;https://opensource.com/life/17/10/top-terminal-emulators&quot;&gt;终端模拟器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d232b168ff2bb3df0df8d7f20524664ad0af51b" translate="yes" xml:space="preserve">
          <source>List all your active hooks:</source>
          <target state="translated">列出你所有的活动钩子。</target>
        </trans-unit>
        <trans-unit id="90e7b5cc7728f3ef6300b73b866011c9d941b97b" translate="yes" xml:space="preserve">
          <source>List installed packages.</source>
          <target state="translated">列出已安装的软件包。</target>
        </trans-unit>
        <trans-unit id="69386e6feda589e758cd6ea2aba12e05e9374727" translate="yes" xml:space="preserve">
          <source>List packages in the global install prefix instead of in the current project.</source>
          <target state="translated">列出全局安装前缀中的包,而不是当前项目中的包。</target>
        </trans-unit>
        <trans-unit id="afca28127a93471796f9d472860a243ae82fd69b" translate="yes" xml:space="preserve">
          <source>List your active hooks for the &lt;code&gt;lodash&lt;/code&gt; package:</source>
          <target state="translated">列出 &lt;code&gt;lodash&lt;/code&gt; 软件包的活动钩子：</target>
        </trans-unit>
        <trans-unit id="2d92d74afa45a8f33514e7319f790476a1de4d7b" translate="yes" xml:space="preserve">
          <source>Local Paths</source>
          <target state="translated">当地路径</target>
        </trans-unit>
        <trans-unit id="c0fc689d37e8097e71bbc581773a78bd39fa4d9a" translate="yes" xml:space="preserve">
          <source>Local install (default): puts stuff in &lt;code&gt;./node_modules&lt;/code&gt; of the current package root.</source>
          <target state="translated">本地安装（默认）：将内容 &lt;code&gt;./node_modules&lt;/code&gt; 当前软件包根目录的./node_modules中。</target>
        </trans-unit>
        <trans-unit id="a8fbc7260f2f5c48464f9272ec65e3be323b5a38" translate="yes" xml:space="preserve">
          <source>Local mode is the default. Use &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; on any command to operate in global mode instead.</source>
          <target state="translated">本地模式是默认模式。在任何命令上使用 &lt;code&gt;-g&lt;/code&gt; 或 &lt;code&gt;--global&lt;/code&gt; 可以改为在全局模式下运行。</target>
        </trans-unit>
        <trans-unit id="140fcb60756d84ab832cba1bc60c6c59e75c9f59" translate="yes" xml:space="preserve">
          <source>Lock down dependency versions for publication.</source>
          <target state="translated">锁定发布的依赖版本。</target>
        </trans-unit>
        <trans-unit id="6e6dfe890ed3ce6ed364dc0e631ba2da2ef2e926" translate="yes" xml:space="preserve">
          <source>Log in at &lt;a href=&quot;https://npmjs.com/&quot;&gt;https://npmjs.com/&lt;/a&gt;</source>
          <target state="translated">登录&lt;a href=&quot;https://npmjs.com/&quot;&gt;https://npmjs.com/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b57512a2190fed0720375a8625f1a812427f5b33" translate="yes" xml:space="preserve">
          <source>Log in to &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https://www.npmjs.com/&lt;/a&gt;.</source>
          <target state="translated">登录到&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;https://www.npmjs.com/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b3cf18d30ddf76fb2bbe3c87d3f27fbfe1b96ef" translate="yes" xml:space="preserve">
          <source>Log in to npm again after upgrading to the most recent version.</source>
          <target state="translated">升级到最新版本后再次登录npm。</target>
        </trans-unit>
        <trans-unit id="803ac5852055683270618a9807d65d7e2ae8635f" translate="yes" xml:space="preserve">
          <source>Log in to the email account you used to sign up for an npm user account.</source>
          <target state="translated">登录到你用来注册npm用户账户的电子邮件账户。</target>
        </trans-unit>
        <trans-unit id="961cee42aeb9a8088ff3c8da32a749d7bce46b38" translate="yes" xml:space="preserve">
          <source>Log out of the registry.</source>
          <target state="translated">注销登记册。</target>
        </trans-unit>
        <trans-unit id="57003616863fe634c645e342ee9080681e419c5f" translate="yes" xml:space="preserve">
          <source>Logging</source>
          <target state="translated">Logging</target>
        </trans-unit>
        <trans-unit id="c4ccf6576fde0ec3b5e35239ee0d23802effcebc" translate="yes" xml:space="preserve">
          <source>Logging is done using the &lt;a href=&quot;https://github.com/npm/npmlog&quot;&gt;npmlog&lt;/a&gt; utility.</source>
          <target state="translated">记录是使用&lt;a href=&quot;https://github.com/npm/npmlog&quot;&gt;npmlog&lt;/a&gt;实用程序完成的。</target>
        </trans-unit>
        <trans-unit id="6d87d2d6ecfc0713342a748998d225b0128a9bfa" translate="yes" xml:space="preserve">
          <source>Login to npm from a terminal</source>
          <target state="translated">从终端登录到npm</target>
        </trans-unit>
        <trans-unit id="7db8accfae845d2e2127df2ab64f5b5e1d59c225" translate="yes" xml:space="preserve">
          <source>Login to npmjs.com.</source>
          <target state="translated">登录到npmjs.com。</target>
        </trans-unit>
        <trans-unit id="6b7995c0fe3cecb206964ac95467756397bbbdd5" translate="yes" xml:space="preserve">
          <source>Login to the &lt;a href=&quot;http://www.npmjs.com&quot;&gt;website&lt;/a&gt;.</source>
          <target state="translated">登录该&lt;a href=&quot;http://www.npmjs.com&quot;&gt;网站&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be607f3497326d3e3f97ddbd6ceaafb65876deb4" translate="yes" xml:space="preserve">
          <source>Login to the terminal with your new username.</source>
          <target state="translated">用新的用户名登录终端。</target>
        </trans-unit>
        <trans-unit id="749b7eb417b00854a79112e6519775198dc6bc3c" translate="yes" xml:space="preserve">
          <source>Look for lines defining the &lt;code&gt;tmp&lt;/code&gt; config variable. If you find more than one, remove all but one of them.</source>
          <target state="translated">查找定义 &lt;code&gt;tmp&lt;/code&gt; config变量的行。如果发现多个，请删除其中一个。</target>
        </trans-unit>
        <trans-unit id="a124947cbd2d1d92b47e027274c3269ff0c7a84b" translate="yes" xml:space="preserve">
          <source>Low</source>
          <target state="translated">Low</target>
        </trans-unit>
        <trans-unit id="94de303bbef8935622224c5db48199c807ab7d71" translate="yes" xml:space="preserve">
          <source>Maintenance</source>
          <target state="translated">Maintenance</target>
        </trans-unit>
        <trans-unit id="d5401031f5981cdc7a45c7abadf244e14ddd0e1e" translate="yes" xml:space="preserve">
          <source>Major releases: &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">主要版本： &lt;code&gt;*&lt;/code&gt; 或 &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfb1aaee48deb8398f9291b3b77d67836304cab3" translate="yes" xml:space="preserve">
          <source>Make a directory for global installations:</source>
          <target state="translated">为全局安装制作一个目录。</target>
        </trans-unit>
        <trans-unit id="b23dbe8d3003d5d6321833f2b961031f5b2369d0" translate="yes" xml:space="preserve">
          <source>Make a new directory outside of your project.</source>
          <target state="translated">在你的项目之外建立一个新的目录。</target>
        </trans-unit>
        <trans-unit id="ef0307e3bec4025dd4abce491f5b211deb461563" translate="yes" xml:space="preserve">
          <source>Make sure you have a package-lock and an up-to-date install:</source>
          <target state="translated">确保你有一个包锁和最新的安装。</target>
        </trans-unit>
        <trans-unit id="9909b436e6c4462b822f086bedcff0ccd6e061f0" translate="yes" xml:space="preserve">
          <source>Makes sure that a package will be saved into &lt;code&gt;dependencies&lt;/code&gt; specifically. This is useful if a package already exists in &lt;code&gt;devDependencies&lt;/code&gt; or &lt;code&gt;optionalDependencies&lt;/code&gt;, but you want to move it to be a production dep. This is also the default behavior if &lt;code&gt;--save&lt;/code&gt; is true, and neither &lt;code&gt;--save-dev&lt;/code&gt; or &lt;code&gt;--save-optional&lt;/code&gt; are true.</source>
          <target state="translated">确保将软件包专门保存到 &lt;code&gt;dependencies&lt;/code&gt; 。如果一个软件包已经存在于 &lt;code&gt;devDependencies&lt;/code&gt; 或 &lt;code&gt;optionalDependencies&lt;/code&gt; 中，但是您希望将其移动为生产部门，则这很有用。如果 &lt;code&gt;--save&lt;/code&gt; 为true，并且 &lt;code&gt;--save-dev&lt;/code&gt; 或 &lt;code&gt;--save-optional&lt;/code&gt; 不为true，这也是默认行为。</target>
        </trans-unit>
        <trans-unit id="edaf6744b7d194b2b843015a992ed308f687b673" translate="yes" xml:space="preserve">
          <source>Makes various commands more forceful.</source>
          <target state="translated">使得各种命令更加有力。</target>
        </trans-unit>
        <trans-unit id="d06c896a156681776da08e30a2b4b3cc13b2cef2" translate="yes" xml:space="preserve">
          <source>Malware (that is, a package designed to exploit or harm the machine on which it is installed).</source>
          <target state="translated">恶意软件(即旨在利用或损害安装它的机器的软件包);</target>
        </trans-unit>
        <trans-unit id="2f5d775aa0181626a04012b46513160150426cce" translate="yes" xml:space="preserve">
          <source>Man Pages</source>
          <target state="translated">人页</target>
        </trans-unit>
        <trans-unit id="31f1a6b6b3280129cc1debe252835cc6d4abffbd" translate="yes" xml:space="preserve">
          <source>Man files must end with a number, and optionally a &lt;code&gt;.gz&lt;/code&gt; suffix if they are compressed. The number dictates which man section the file is installed into.</source>
          <target state="translated">手册文件必须以数字结尾，如果被压缩，则必须以 &lt;code&gt;.gz&lt;/code&gt; 后缀结尾。该数字指示文件安装在哪个man节中。</target>
        </trans-unit>
        <trans-unit id="7c0972681b949b9880cb678f8315a66b0534e6e6" translate="yes" xml:space="preserve">
          <source>Man pages are not installed on Windows systems.</source>
          <target state="translated">在Windows系统上没有安装人工网页。</target>
        </trans-unit>
        <trans-unit id="7f52b6d62bb060105ae88b94a90c917799feb8a8" translate="yes" xml:space="preserve">
          <source>Manage multiple versions of code and code dependencies.</source>
          <target state="translated">管理多个版本的代码和代码依赖关系。</target>
        </trans-unit>
        <trans-unit id="a1527f63df97358f6e76b1baee447ee975663e6b" translate="yes" xml:space="preserve">
          <source>Manage organization teams and team memberships.</source>
          <target state="translated">管理组织团队和团队成员。</target>
        </trans-unit>
        <trans-unit id="c6e797838ecebd85349209ccb29334e127eab35a" translate="yes" xml:space="preserve">
          <source>Manage ownership of published packages.</source>
          <target state="translated">管理发布包的所有权。</target>
        </trans-unit>
        <trans-unit id="a79705d655bef1bb08805959e88d87ac783dc6fd" translate="yes" xml:space="preserve">
          <source>Manage package owners.</source>
          <target state="translated">管理包主。</target>
        </trans-unit>
        <trans-unit id="ebbc318770998702113a1d3b0932bca2cc60d366" translate="yes" xml:space="preserve">
          <source>Manage registry hooks.</source>
          <target state="translated">管理注册表钩子。</target>
        </trans-unit>
        <trans-unit id="f3118392a44a51a5a4180efb519b46691bb2df48" translate="yes" xml:space="preserve">
          <source>Manage the npm configuration files.</source>
          <target state="translated">管理npm配置文件。</target>
        </trans-unit>
        <trans-unit id="2d67d6fd7a63555711c77f0c52ce2af7a88ddc96" translate="yes" xml:space="preserve">
          <source>Manage your authentication tokens.</source>
          <target state="translated">管理您的认证令牌。</target>
        </trans-unit>
        <trans-unit id="4492225642e24713eb4a5f19219d47e57aeb6d6d" translate="yes" xml:space="preserve">
          <source>Management of teams and team memberships is done with the &lt;code&gt;npm team&lt;/code&gt; command.</source>
          <target state="translated">团队和团队成员的管理是通过 &lt;code&gt;npm team&lt;/code&gt; 命令完成的。</target>
        </trans-unit>
        <trans-unit id="4ac8ba54bf8ad781663d9fa54f681549cc5e6757" translate="yes" xml:space="preserve">
          <source>Managing dependency versions</source>
          <target state="translated">管理依赖版本</target>
        </trans-unit>
        <trans-unit id="1fa69039d9d66c6cab6302d7ea1568e8b97347b1" translate="yes" xml:space="preserve">
          <source>Manipulates packages cache.</source>
          <target state="translated">操纵包的缓存。</target>
        </trans-unit>
        <trans-unit id="5f8d3c1bea27c2d0177d6cf092d68be6bbf3d519" translate="yes" xml:space="preserve">
          <source>Manually editing your &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">手动编辑 &lt;code&gt;package.json&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50602b7750a2d32b059e406df4920695792d7c69" translate="yes" xml:space="preserve">
          <source>Many &lt;code&gt;ENOENT&lt;/code&gt; / &lt;code&gt;ENOTEMPTY&lt;/code&gt; errors in output</source>
          <target state="translated">输出中出现许多 &lt;code&gt;ENOENT&lt;/code&gt; / &lt;code&gt;ENOTEMPTY&lt;/code&gt; 错误</target>
        </trans-unit>
        <trans-unit id="8449f99e42cee6d30a66da4df57a53309c48908d" translate="yes" xml:space="preserve">
          <source>Many authors treat a &lt;code&gt;0.x&lt;/code&gt; version as if the &lt;code&gt;x&lt;/code&gt; were the major &quot;breaking-change&quot; indicator.</source>
          <target state="translated">许多作者将 &lt;code&gt;0.x&lt;/code&gt; 版本视为 &lt;code&gt;x&lt;/code&gt; 是主要的&amp;ldquo;中断更改&amp;rdquo;指标。</target>
        </trans-unit>
        <trans-unit id="c14db5bd53785fc0432dd768270b209b63795e8a" translate="yes" xml:space="preserve">
          <source>Many packages are made up of other packages. These packages are called dependencies.</source>
          <target state="translated">许多包是由其他包组成的。这些包被称为依赖关系。</target>
        </trans-unit>
        <trans-unit id="069b433dace16a975d4f56c71855d2822aff50f9" translate="yes" xml:space="preserve">
          <source>Mark your favorite packages.</source>
          <target state="translated">标记你喜欢的包裹。</target>
        </trans-unit>
        <trans-unit id="abd90dc84d47d22fad06031021764b39a0f1ec14" translate="yes" xml:space="preserve">
          <source>Max depth for checking dependency tree.</source>
          <target state="translated">检查依赖树的最大深度。</target>
        </trans-unit>
        <trans-unit id="b6ad6dd73ee71b3ca27002a7eb3a88400fc555ef" translate="yes" xml:space="preserve">
          <source>Max display depth of the dependency tree.</source>
          <target state="translated">依赖树的最大显示深度。</target>
        </trans-unit>
        <trans-unit id="e86d6956c2fad54938e3bc8f2087e0ec793c9ed8" translate="yes" xml:space="preserve">
          <source>Microsoft Windows</source>
          <target state="translated">微软视窗</target>
        </trans-unit>
        <trans-unit id="1923d7678401edbc9d0ef180ddee624c6b442c23" translate="yes" xml:space="preserve">
          <source>Microsoft Windows:</source>
          <target state="translated">微软视窗。</target>
        </trans-unit>
        <trans-unit id="bd071d790f4d4091da0abc822e22c3a6ebfdba72" translate="yes" xml:space="preserve">
          <source>Minor releases: &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;1.x&lt;/code&gt; or &lt;code&gt;^1.0.4&lt;/code&gt;</source>
          <target state="translated">次要版本： &lt;code&gt;1&lt;/code&gt; 或 &lt;code&gt;1.x&lt;/code&gt; 或 &lt;code&gt;^1.0.4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="24f673384016837404021aa7068193e2ac26cb79" translate="yes" xml:space="preserve">
          <source>Misplaced recovery codes</source>
          <target state="translated">错误的恢复代码</target>
        </trans-unit>
        <trans-unit id="d91d104f0a175000efaf17a93ed0d66bc169b9b7" translate="yes" xml:space="preserve">
          <source>Misplaced second factor device</source>
          <target state="translated">第二因子装置错位</target>
        </trans-unit>
        <trans-unit id="ea8b09c2354b17c2a83673437d6380be0e7b8c73" translate="yes" xml:space="preserve">
          <source>Moderate</source>
          <target state="translated">Moderate</target>
        </trans-unit>
        <trans-unit id="35f825672d0a24aed938740930e0566684454981" translate="yes" xml:space="preserve">
          <source>Modify package distribution tags.</source>
          <target state="translated">修改包分发标签。</target>
        </trans-unit>
        <trans-unit id="2d1c60a1f9b37390ed9f023f57840cbd87b62778" translate="yes" xml:space="preserve">
          <source>Module ecosystems are most vibrant and powerful when they are as self-directed as possible. If an admin one day deletes something you had worked on, then that is going to make most people quite upset, regardless of the justification. When humans solve their problems by talking to other humans with respect, everyone has the chance to end up feeling good about the interaction.</source>
          <target state="translated">当模块生态系统尽可能的自我管理时,它才是最有活力和强大的。如果有一天,一个管理员删除了你曾经工作过的东西,那么无论理由如何,这都会让大多数人相当不满。当人类以尊重的态度与其他人类交谈来解决问题时,每个人都有机会在互动中最终获得好感。</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="523685e0bc791231099a78553e5b45a4d7e39427" translate="yes" xml:space="preserve">
          <source>Monitor your package access</source>
          <target state="translated">监控您的包裹访问</target>
        </trans-unit>
        <trans-unit id="22ffffbccfcf501db363d7084eeed3e3deb28b71" translate="yes" xml:space="preserve">
          <source>More Information</source>
          <target state="translated">更多信息</target>
        </trans-unit>
        <trans-unit id="3aedbb644674df00b2e14dbd5ce02ca69d95257c" translate="yes" xml:space="preserve">
          <source>More Severe Uninstalling</source>
          <target state="translated">更严重的卸载</target>
        </trans-unit>
        <trans-unit id="59842d981c57fb9cc87deffb5fe760f6cbaebe00" translate="yes" xml:space="preserve">
          <source>More info</source>
          <target state="translated">更多信息</target>
        </trans-unit>
        <trans-unit id="9ce0f31e74ace086fd663a894b1716ef4926639a" translate="yes" xml:space="preserve">
          <source>More info at &lt;code&gt;&lt;a href=&quot;../cli/link&quot;&gt;npm-link&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">有关更多信息，请访问 &lt;code&gt;&lt;a href=&quot;../cli/link&quot;&gt;npm-link&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e86bbab59fbe9102e8a4e29954c2bd404c16389d" translate="yes" xml:space="preserve">
          <source>More on version numbers and ranges at &lt;a href=&quot;../misc/semver&quot;&gt;semver&lt;/a&gt;.</source>
          <target state="translated">有关版本号和范围的更多信息，请&lt;a href=&quot;../misc/semver&quot;&gt;参见semver&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9ecccfac6085017c24818c7f8158dec34d23e2b5" translate="yes" xml:space="preserve">
          <source>More than you probably want to know about npm configuration.</source>
          <target state="translated">关于npm配置,你可能想知道更多。</target>
        </trans-unit>
        <trans-unit id="394cd92d15286594de054c0eb3b0b4676eafe314" translate="yes" xml:space="preserve">
          <source>Most npm packages are modules</source>
          <target state="translated">大多数npm包都是模块</target>
        </trans-unit>
        <trans-unit id="beb8aff6591b3a8af05d835cb52458ef103dd922" translate="yes" xml:space="preserve">
          <source>Multiple CAs can be trusted by specifying an array of certificates:</source>
          <target state="translated">通过指定证书数组可以信任多个CA。</target>
        </trans-unit>
        <trans-unit id="e1b8b6742083c9b1ae87f3d5791b8e988f9b098a" translate="yes" xml:space="preserve">
          <source>Multiple fields may be specified, and will be printed one after another. For example, to get all the contributor names and email addresses, you can do this:</source>
          <target state="translated">可以指定多个字段,并逐一打印。例如,要获取所有贡献者的姓名和电子邮件地址,可以这样做。</target>
        </trans-unit>
        <trans-unit id="a8ad860c15810cce0e7beac1c91da3ab2cb22c47" translate="yes" xml:space="preserve">
          <source>NOTE</source>
          <target state="translated">NOTE</target>
        </trans-unit>
        <trans-unit id="8c6abbe86b9a3dd54d847c73d2fcb02c7646f939" translate="yes" xml:space="preserve">
          <source>NOTE:</source>
          <target state="translated">NOTE:</target>
        </trans-unit>
        <trans-unit id="c3e95528d9db5a0991cec32b9c9b766cf3042244" translate="yes" xml:space="preserve">
          <source>NOTE: If a package has been upgraded to a version newer than &lt;code&gt;latest&lt;/code&gt;, it will be &lt;em&gt;downgraded&lt;/em&gt;.</source>
          <target state="translated">注意：如果软件包已升级到比 &lt;code&gt;latest&lt;/code&gt; 的版本，它将&lt;em&gt;降级&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="8785ac5526aa1571431e17d5eaa60427c1d5e016" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;--production&lt;/code&gt; flag has no particular meaning when adding a dependency to a project.</source>
          <target state="translated">注意：-- &lt;code&gt;--production&lt;/code&gt; 标志在向项目添加依赖项时没有特殊含义。</target>
        </trans-unit>
        <trans-unit id="3c33a18bf0f64942642f8ded887d568653de995f" translate="yes" xml:space="preserve">
          <source>NVM</source>
          <target state="translated">NVM</target>
        </trans-unit>
        <trans-unit id="e3a7efbc51bec139aa7b340813d5076f1eb756b4" translate="yes" xml:space="preserve">
          <source>Navigate to the package on which you want to require a second factor to publish or modify settings.</source>
          <target state="translated">导航到你要要求第二个因素发布或修改设置的包。</target>
        </trans-unit>
        <trans-unit id="01e2ac43f10525d310490ecf92eb82faf3ace473" translate="yes" xml:space="preserve">
          <source>New packages must not have uppercase letters in the name.</source>
          <target state="translated">新包的名称中不能有大写字母。</target>
        </trans-unit>
        <trans-unit id="df07607c5a1150056babf50b7b9edc67b5ec48f2" translate="yes" xml:space="preserve">
          <source>Next, in some other location, &lt;code&gt;npm link package-name&lt;/code&gt; will create a symbolic link from globally-installed &lt;code&gt;package-name&lt;/code&gt; to &lt;code&gt;node_modules/&lt;/code&gt; of the current folder.</source>
          <target state="translated">接下来，在其他位置， &lt;code&gt;npm link package-name&lt;/code&gt; 将创建从全局安装的 &lt;code&gt;package-name&lt;/code&gt; 到当前文件夹的 &lt;code&gt;node_modules/&lt;/code&gt; 的符号链接。</target>
        </trans-unit>
        <trans-unit id="86bd72c2d3ed62eb1411e563b9bae3f3dfa4c2e8" translate="yes" xml:space="preserve">
          <source>Next, npm will display a QR code:</source>
          <target state="translated">接下来,npm会显示一个二维码。</target>
        </trans-unit>
        <trans-unit id="a148b95bc1d1c2be33b7770a2c140be57dc17055" translate="yes" xml:space="preserve">
          <source>No compatible version found</source>
          <target state="translated">没有找到兼容版本</target>
        </trans-unit>
        <trans-unit id="7a930c09280e9a1c5391c11e3fb039250d8eaeec" translate="yes" xml:space="preserve">
          <source>No git</source>
          <target state="translated">没有git</target>
        </trans-unit>
        <trans-unit id="889f912e88769d9794a8fa34339974b664067f1d" translate="yes" xml:space="preserve">
          <source>No security vulnerabilities found</source>
          <target state="translated">没有发现安全漏洞</target>
        </trans-unit>
        <trans-unit id="13d0e5aa3de3eeac5cc0aff9a59b926601f99511" translate="yes" xml:space="preserve">
          <source>No space</source>
          <target state="translated">没有空间</target>
        </trans-unit>
        <trans-unit id="e0a65bdb903733827b95f0b660a610e455fb405c" translate="yes" xml:space="preserve">
          <source>No, but it's way easier. Basically, yes, you do, or you have to effectively implement the entire CouchDB API anyway.</source>
          <target state="translated">不,但它的方式更容易。基本上,是的,你是这样做的,或者你必须有效地实现整个CouchDB API,无论如何。</target>
        </trans-unit>
        <trans-unit id="3ec5982a9aed5bae99c63ae929d0edba8795dbff" translate="yes" xml:space="preserve">
          <source>No. If you want things to be public, then publish them into the public registry using npm. What little security there is would be for nought otherwise.</source>
          <target state="translated">不,如果你想让东西公开,那就用npm把它们发布到公共注册表里。不然的话,那一点点的安全感都是白费的。</target>
        </trans-unit>
        <trans-unit id="957f23e716b64fea27c34d4f579712c8d7c97c33" translate="yes" xml:space="preserve">
          <source>Node Modules</source>
          <target state="translated">节点模块</target>
        </trans-unit>
        <trans-unit id="bf3cf4930b4cce29cca5456dd760c30afede7996" translate="yes" xml:space="preserve">
          <source>Node.js and git must be executable by npm.</source>
          <target state="translated">Node.js和git必须由npm执行。</target>
        </trans-unit>
        <trans-unit id="b6739f6167dca340a90d5a1a6b1dce40c73bb710" translate="yes" xml:space="preserve">
          <source>Node.js and npm have very specific definitions of packages and modules, which are easy to mix up. We'll discuss those definitions here, make them distinct, and explain why certain default files are named the way they are.</source>
          <target state="translated">Node.js和npm对包和模块有非常具体的定义,这很容易混淆。我们将在这里讨论这些定义,使它们与众不同,并解释为什么某些默认文件的命名方式。</target>
        </trans-unit>
        <trans-unit id="24d5478de80c92fce65c557fcd15d27eb169a867" translate="yes" xml:space="preserve">
          <source>Node.js has lots of versions, and its development is very active. As a good practice to manage the various versions, we recommend that you use a version manager for your Node.js installation. There are many great options, here are a few:</source>
          <target state="translated">Node.js有很多版本,而且它的开发非常活跃。作为管理各种版本的良好实践,我们建议你在安装Node.js时使用版本管理器。有很多不错的选择,下面是几个。</target>
        </trans-unit>
        <trans-unit id="345d988d788bbbf3d09e0543603f7851750b7687" translate="yes" xml:space="preserve">
          <source>Node.js modules are a type of package that can be published to npm. To create a new module, start by creating a &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">Node.js模块是一种可以发布到npm的软件包。要创建一个新模块， &lt;code&gt;package.json&lt;/code&gt; 创建一个package.json文件。</target>
        </trans-unit>
        <trans-unit id="8662457a910936cb92d189fe53e594c7b2fad6ad" translate="yes" xml:space="preserve">
          <source>Not found / Server error</source>
          <target state="translated">未找到/服务器错误</target>
        </trans-unit>
        <trans-unit id="b5a70a1d147c54b3102d1c2b6ee90e551b00c331" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;package-name&lt;/code&gt; is taken from &lt;code&gt;package.json&lt;/code&gt;, not from directory name.</source>
          <target state="translated">请注意， &lt;code&gt;package-name&lt;/code&gt; 是从 &lt;code&gt;package.json&lt;/code&gt; 获取的，而不是目录名。</target>
        </trans-unit>
        <trans-unit id="a384ea278a742edb3736c0dd7ad3160738f8f08f" translate="yes" xml:space="preserve">
          <source>Note that everything in the directory will be included unless it is ignored by a local &lt;code&gt;.gitignore&lt;/code&gt; or &lt;code&gt;.npmignore&lt;/code&gt; file. To learn how to use these commands, see &lt;a href=&quot;../misc/developers&quot;&gt;&lt;code&gt;npm-developers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">请注意，除非本地 &lt;code&gt;.gitignore&lt;/code&gt; 或 &lt;code&gt;.npmignore&lt;/code&gt; 文件将其忽略，否则将包括该目录中的所有内容。要了解如何使用这些命令，请参阅&lt;a href=&quot;../misc/developers&quot;&gt; &lt;code&gt;npm-developers&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d797867d1e18133733f55e0e3fe7b42c465db186" translate="yes" xml:space="preserve">
          <source>Note that git requires you to have set up GPG keys in your git configs for this to work properly.</source>
          <target state="translated">需要注意的是,git 要求你在 git 配置中设置了 GPG 密钥,这样才能正常工作。</target>
        </trans-unit>
        <trans-unit id="366b6992f06c32dda037ef8d80fbb1c4d8d2d1fa" translate="yes" xml:space="preserve">
          <source>Note that if the &lt;code&gt;@&lt;/code&gt; symbol is omitted, in either case, npm will instead attempt to install from GitHub; see &lt;code&gt;&lt;a href=&quot;../cli/install&quot;&gt;npm-install&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">请注意，如果省略 &lt;code&gt;@&lt;/code&gt; 符号，则无论哪种情况，npm都会尝试从GitHub安装；参见 &lt;code&gt;&lt;a href=&quot;../cli/install&quot;&gt;npm-install&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="91790161e9735fed1c20d81fc1c267047235d9dd" translate="yes" xml:space="preserve">
          <source>Note that in this case, you are referring to the directory name, &lt;code&gt;node-redis&lt;/code&gt;, rather than the package name &lt;code&gt;redis&lt;/code&gt;.</source>
          <target state="translated">请注意，在这种情况下，您指的是目录名称 &lt;code&gt;node-redis&lt;/code&gt; ，而不是包名称 &lt;code&gt;redis&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="89902ad423f54674432985ace6cb7c8b8677f97f" translate="yes" xml:space="preserve">
          <source>Note that most version ranges must be put in quotes so that your shell will treat it as a single argument.</source>
          <target state="translated">请注意,大多数版本范围必须放在引号中,这样你的shell就会把它当作一个单一的参数。</target>
        </trans-unit>
        <trans-unit id="eaaa4818f226f9b6b09f58d5e4fe43f0b62699fa" translate="yes" xml:space="preserve">
          <source>Note that pretty much &lt;strong&gt;everything in that folder will be exposed&lt;/strong&gt; by default. So, if you have secret stuff in there, use a &lt;code&gt;.npmignore&lt;/code&gt; file to list out the globs to ignore, or publish from a fresh checkout.</source>
          <target state="translated">请注意，默认情况下&lt;strong&gt;该文件夹&lt;/strong&gt;中的几乎&lt;strong&gt;所有内容都将公开&lt;/strong&gt;。因此，如果其中包含秘密内容，请使用 &lt;code&gt;.npmignore&lt;/code&gt; 文件列出要忽略的glob，或从新的结帐中发布。</target>
        </trans-unit>
        <trans-unit id="fb2935df12654818f82e322ffba0f488fdea77b3" translate="yes" xml:space="preserve">
          <source>Note that read-only defaults to &lt;em&gt;false&lt;/em&gt;.</source>
          <target state="translated">请注意，只读默认为&lt;em&gt;false&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="f1a759f3319c84f4b3229a15ea92031b6769f690" translate="yes" xml:space="preserve">
          <source>Note that read-only is set to &lt;em&gt;true&lt;/em&gt;.</source>
          <target state="translated">请注意，只读设置为&lt;em&gt;true&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="59df403baf5c5486d7b4cff640f57e4481c3ed7d" translate="yes" xml:space="preserve">
          <source>Note that starting lines with &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;+&lt;/code&gt; also should be prefixed with a semicolon, but this is much less common.</source>
          <target state="translated">请注意，带有 &lt;code&gt;-&lt;/code&gt; 和 &lt;code&gt;+&lt;/code&gt; 的起始行也应以分号作为前缀，但这很少见。</target>
        </trans-unit>
        <trans-unit id="e0afd55f15a0206d6a77cf799df866ee3c0a3aa8" translate="yes" xml:space="preserve">
          <source>Note that the &quot;restart&quot; script is run &lt;strong&gt;in addition to&lt;/strong&gt; the &quot;stop&quot; and &quot;start&quot; scripts, not instead of them.</source>
          <target state="translated">请注意，&lt;strong&gt;除了&lt;/strong&gt; &amp;ldquo;停止&amp;rdquo;和&amp;ldquo;启动&amp;rdquo;脚本外，&lt;strong&gt;还会&lt;/strong&gt;运行&amp;ldquo;重新启动&amp;rdquo;脚本，而不是代替它们。</target>
        </trans-unit>
        <trans-unit id="985d014ee687f5d1871a7d71584cdcd5a112ed23" translate="yes" xml:space="preserve">
          <source>Note that the package is &lt;em&gt;not&lt;/em&gt; automatically rebuilt afterwards, so be sure to use &lt;code&gt;npm rebuild &amp;lt;pkg&amp;gt;&lt;/code&gt; if you make any changes.</source>
          <target state="translated">请注意，该软件包之后&lt;em&gt;不会&lt;/em&gt;自动重建，因此，如果进行任何更改，请确保使用 &lt;code&gt;npm rebuild &amp;lt;pkg&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2fa36575ef04eed597461514f0d5f04a790e3288" translate="yes" xml:space="preserve">
          <source>Note that there is only one level of access. Either you can modify a package, or you can't. Future versions may contain more fine-grained access levels, but that is not implemented at this time.</source>
          <target state="translated">请注意,只有一个级别的权限。要么你可以修改一个包,要么你不能。未来的版本可能会包含更多细化的访问级别,但目前还没有实现。</target>
        </trans-unit>
        <trans-unit id="cb3a316375b08fe8d3ce7c2b6ac12ac5c8675065" translate="yes" xml:space="preserve">
          <source>Note that these script files don't have to be nodejs or even javascript programs. They just have to be some kind of executable file.</source>
          <target state="translated">注意,这些脚本文件不一定是nodejs甚至javascript程序。它们只需要是某种可执行文件。</target>
        </trans-unit>
        <trans-unit id="852ec0524e4f85cb7dc934c8a1e1a4549c9d0431" translate="yes" xml:space="preserve">
          <source>Note that this is only necessary for globally-installed packages. Local installs are completely contained within a project's &lt;code&gt;node_modules&lt;/code&gt; folder. Delete that folder, and everything is gone (unless a package's install script is particularly ill-behaved).</source>
          <target state="translated">请注意，这仅对于全局安装的软件包是必需的。本地安装完全包含在项目的 &lt;code&gt;node_modules&lt;/code&gt; 文件夹中。删除该文件夹，一切都消失了（除非软件包的安装脚本特别不当行为）。</target>
        </trans-unit>
        <trans-unit id="3fcfea55624714d903cf641e1146778070b6e9e7" translate="yes" xml:space="preserve">
          <source>Note that this means that local installs can cause things to be installed into the global space at the same time. The link is only done if one of the two conditions are met:</source>
          <target state="translated">注意,这意味着本地安装会导致东西同时安装到全局空间。只有在满足两个条件之一的情况下,才会进行链接。</target>
        </trans-unit>
        <trans-unit id="9d7fa676a41da66c9ba69f7f965e01f75c85fc6a" translate="yes" xml:space="preserve">
          <source>Note that this only applies to the root of the project that you're running npm in. It has no effect when your module is published. For example, you can't publish a module that forces itself to install globally, or in a different location.</source>
          <target state="translated">请注意,这只适用于你运行npm的项目根目录。当你的模块被发布时,它没有任何影响。例如,你不能发布一个强制全局安装或在不同位置安装的模块。</target>
        </trans-unit>
        <trans-unit id="06ded5150d36316c12d236a1932afedf2fbf7a2b" translate="yes" xml:space="preserve">
          <source>Note that this operation transforms the dependency tree, but will never result in new modules being installed.</source>
          <target state="translated">请注意,这个操作会改变依赖树,但不会导致新模块的安装。</target>
        </trans-unit>
        <trans-unit id="575ebb0f3be64a8119d8056ba03982cd5ce6477b" translate="yes" xml:space="preserve">
          <source>Note that you must be the package owner to deprecate something. See the &lt;code&gt;owner&lt;/code&gt; and &lt;code&gt;adduser&lt;/code&gt; help topics.</source>
          <target state="translated">请注意，您必须是程序包所有者才能弃用某些内容。请参阅 &lt;code&gt;owner&lt;/code&gt; 和 &lt;code&gt;adduser&lt;/code&gt; 帮助主题。</target>
        </trans-unit>
        <trans-unit id="e088c22b668e190e1db82511d4c03c3ecdfbaa0d" translate="yes" xml:space="preserve">
          <source>Note that you must have a default GPG key set up in your git config for this to work properly.</source>
          <target state="translated">请注意,你必须在 git 配置中设置一个默认的 GPG 密钥才能正常工作。</target>
        </trans-unit>
        <trans-unit id="47aad156b765d07ddd9cf30888de33974a2752a6" translate="yes" xml:space="preserve">
          <source>Note that, since ranges may be non-contiguous, a version might not be greater than a range, less than a range, &lt;em&gt;or&lt;/em&gt; satisfy a range! For example, the range &lt;code&gt;1.2 &amp;lt;1.2.9 || &amp;gt;2.0.0&lt;/code&gt; would have a hole from &lt;code&gt;1.2.9&lt;/code&gt; until &lt;code&gt;2.0.0&lt;/code&gt;, so the version &lt;code&gt;1.2.10&lt;/code&gt; would not be greater than the range (because &lt;code&gt;2.0.1&lt;/code&gt; satisfies, which is higher), nor less than the range (since &lt;code&gt;1.2.8&lt;/code&gt; satisfies, which is lower), and it also does not satisfy the range.</source>
          <target state="translated">请注意，由于范围可能是不连续的，因此版本可能不会大于范围，小于范围&lt;em&gt;或&lt;/em&gt;满足范围！例如，范围 &lt;code&gt;1.2 &amp;lt;1.2.9 || &amp;gt;2.0.0&lt;/code&gt; 会有一个从 &lt;code&gt;1.2.9&lt;/code&gt; 到 &lt;code&gt;2.0.0&lt;/code&gt; 的孔，因此版本 &lt;code&gt;1.2.10&lt;/code&gt; 不会大于范围（因为 &lt;code&gt;2.0.1&lt;/code&gt; 满足，即较高），也不会小于范围（因为 &lt;code&gt;1.2.8&lt;/code&gt; 满足（较低），并且也不满足该范围。</target>
        </trans-unit>
        <trans-unit id="ba3eaab4f9e48e90d05f2f374b761ff364719ca8" translate="yes" xml:space="preserve">
          <source>Note: Even if you delete the &lt;code&gt;.npmrc&lt;/code&gt; file, it'll be kept in the commit history - to clean your secret up entirely make sure to squash them.</source>
          <target state="translated">注意：即使删除 &lt;code&gt;.npmrc&lt;/code&gt; 文件，该文件也将保留在提交历史记录中-要彻底清除秘密，请确保将其压扁。</target>
        </trans-unit>
        <trans-unit id="621bcd990afed5c414acb7c6f1d076495222026f" translate="yes" xml:space="preserve">
          <source>Note: Many of the steps that you can take from the browser can also be taken directly from the Command Line Interface. Skip &lt;a href=&quot;#related-cli-commands&quot;&gt;here&lt;/a&gt; to learn more.</source>
          <target state="translated">注意：您可以从浏览器执行的许多步骤也可以直接从命令行界面执行。跳到&lt;a href=&quot;#related-cli-commands&quot;&gt;这里&lt;/a&gt;了解更多。</target>
        </trans-unit>
        <trans-unit id="8b0bc4a7372a39f9d74ac4b3b1b2a467790e6560" translate="yes" xml:space="preserve">
          <source>Note: if you do not include the @-symbol on your scope name, npm will interpret this as a GitHub repository instead, see below. Scopes names must also be followed by a slash.</source>
          <target state="translated">注意:如果你没有在你的作用域名称中加入 @-符号,npm 会将其解释为 GitHub 仓库,见下文。作用域名称后面也必须加上斜杠。</target>
        </trans-unit>
        <trans-unit id="12c0656aa81249c8efa9d7db4b70263842c5269b" translate="yes" xml:space="preserve">
          <source>Note: if you installed the package as a &quot;devDependency&quot; (i.e. with &lt;code&gt;--save-dev&lt;/code&gt;) then &lt;code&gt;--save&lt;/code&gt; won't remove it from &lt;code&gt;package.json&lt;/code&gt;. You have to use &lt;code&gt;--save-dev&lt;/code&gt; to uninstall it.</source>
          <target state="translated">注意：如果您将软件包安装为&amp;ldquo; devDependency&amp;rdquo;（即使用 &lt;code&gt;--save-dev&lt;/code&gt; ），则 &lt;code&gt;--save&lt;/code&gt; 不会将其从 &lt;code&gt;package.json&lt;/code&gt; 中删除。您必须使用 &lt;code&gt;--save-dev&lt;/code&gt; 来卸载它。</target>
        </trans-unit>
        <trans-unit id="cd4ed9e77f7593d2f6659a9aee2f138ff92c17d7" translate="yes" xml:space="preserve">
          <source>Note: this concerns npm's code not the specific packages that you can download from the npm registry.</source>
          <target state="translated">注意:这涉及到npm的代码,而不是你可以从npm注册表中下载的特定包。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="733d377725600721d5aacd21f8b8bf3f6fd0fd21" translate="yes" xml:space="preserve">
          <source>Notice that you need to use underscores instead of dashes, so &lt;code&gt;--allow-same-version&lt;/code&gt; would become &lt;code&gt;npm_config_allow_same_version=true&lt;/code&gt;.</source>
          <target state="translated">请注意，您需要使用下划线而不是破折号，因此 &lt;code&gt;--allow-same-version&lt;/code&gt; 将变为 &lt;code&gt;npm_config_allow_same_version=true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ab4a3a8d8f3e1179c7fdcdcb9864852da374102" translate="yes" xml:space="preserve">
          <source>Notice the URL:</source>
          <target state="translated">注意网址。</target>
        </trans-unit>
        <trans-unit id="18956a8d22e00fe5f6d86680bf32ba49c056488c" translate="yes" xml:space="preserve">
          <source>Noting all these &lt;code&gt;package&lt;/code&gt; possibilities, it follows that even if you never publish your package to the public registry, you can still get a lot of benefits of using npm:</source>
          <target state="translated">注意到所有这些 &lt;code&gt;package&lt;/code&gt; 可能性，可以得出以下结论：即使您从未将软件包发布到公共注册表，使用npm仍然可以获得很多好处：</target>
        </trans-unit>
        <trans-unit id="0e861b94b1fcf7f5d47f72afa46494d46dd6784e" translate="yes" xml:space="preserve">
          <source>Now that you know what npm is, and a bit about how to use it, it's time to get started.</source>
          <target state="translated">现在你知道了什么是npm,也知道了如何使用它,是时候开始了。</target>
        </trans-unit>
        <trans-unit id="1613f18cf87cf18e1771dfad8347c718e1582802" translate="yes" xml:space="preserve">
          <source>Now, any changes to ~/projects/node-redis will be reflected in ~/projects/node-bloggy/node_modules/node-redis/. Note that the link should be to the package name, not the directory name for that package.</source>
          <target state="translated">现在,对 ~/projects/node-redis 的任何更改都会反映在 ~/projects/node-bloggy/node_modules/node-redis/中。注意,链接应该是包名,而不是该包的目录名。</target>
        </trans-unit>
        <trans-unit id="da83b69aa1df96677c77e0a118b8b06909f8d83a" translate="yes" xml:space="preserve">
          <source>Number of items to limit search results to. Will not apply at all to legacy searches.</source>
          <target state="translated">要限制搜索结果的项目数量。完全不适用于传统的搜索。</target>
        </trans-unit>
        <trans-unit id="0027afcffb283d39db21bf62fd8fc1a10d471c12" translate="yes" xml:space="preserve">
          <source>Number of ms to wait for cache lock files to expire.</source>
          <target state="translated">等待缓存锁文件过期的毫秒数。</target>
        </trans-unit>
        <trans-unit id="57611c8a914a41b5fe018e3ee9f9a6cc98c93d47" translate="yes" xml:space="preserve">
          <source>Number of times to retry to acquire a lock on cache folder lockfiles.</source>
          <target state="translated">获取缓存文件夹锁文件锁的重试次数。</target>
        </trans-unit>
        <trans-unit id="cb02d669bf11eaf6ad8133486d34249ce97fdad4" translate="yes" xml:space="preserve">
          <source>OS/X or Windows</source>
          <target state="translated">OS/X或Windows</target>
        </trans-unit>
        <trans-unit id="feb3522a4038f71f091c69d4b18145fccb3da91a" translate="yes" xml:space="preserve">
          <source>OUTPUT</source>
          <target state="translated">OUTPUT</target>
        </trans-unit>
        <trans-unit id="280984d3916a07d19632507daacb0fc119727bc6" translate="yes" xml:space="preserve">
          <source>Objects are flattened following this format, so if you had &lt;code&gt;{&quot;scripts&quot;:{&quot;install&quot;:&quot;foo.js&quot;}}&lt;/code&gt; in your package.json, then you'd see this in the script:</source>
          <target state="translated">对象按照这种格式展平，因此，如果您的package.json中有 &lt;code&gt;{&quot;scripts&quot;:{&quot;install&quot;:&quot;foo.js&quot;}}&lt;/code&gt; ，那么您会在脚本中看到以下内容：</target>
        </trans-unit>
        <trans-unit id="c62facc2e298672ec4cf056efbfc72173043cb1d" translate="yes" xml:space="preserve">
          <source>Occasionally, two separate npm install will create package locks that cause merge conflicts in source control systems. As of &lt;code&gt;npm@5.7.0&lt;/code&gt;, these conflicts can be resolved by manually fixing any &lt;code&gt;package.json&lt;/code&gt; conflicts, and then running &lt;code&gt;npm install [--package-lock-only]&lt;/code&gt; again. npm will automatically resolve any conflicts for you and write a merged package lock that includes all the dependencies from both branches in a reasonable tree. If &lt;code&gt;--package-lock-only&lt;/code&gt; is provided, it will do this without also modifying your local &lt;code&gt;node_modules/&lt;/code&gt;.</source>
          <target state="translated">有时，两个单独的npm安装会创建软件包锁，这些软件包锁会导致源代码控制系统中的合并冲突。从 &lt;code&gt;npm@5.7.0&lt;/code&gt; 开始，可以通过手动解决任何 &lt;code&gt;package.json&lt;/code&gt; 冲突，然后再次运行 &lt;code&gt;npm install [--package-lock-only]&lt;/code&gt; 来解决这些冲突。 npm将自动为您解决任何冲突，并在合理的树中编写合并的软件包锁，其中包括来自两个分支的所有依赖项。如果提供了 &lt;code&gt;--package-lock-only&lt;/code&gt; ，它将在不修改本地 &lt;code&gt;node_modules/&lt;/code&gt; 情况下执行此操作。</target>
        </trans-unit>
        <trans-unit id="c8693b51db1542299c2092599ed7533de4222e05" translate="yes" xml:space="preserve">
          <source>Often, there are dozens or even hundreds of packages with similar names and/or similar purposes. To help you decide the best ones to explore, each package has been ranked according to four criteria using the &lt;strong&gt;npms analyzer&lt;/strong&gt;:</source>
          <target state="translated">通常，有数十个甚至数百个具有相似名称和/或相似用途的软件包。为了帮助您确定最佳的浏览方式，已使用&lt;strong&gt;npms分析器&lt;/strong&gt;根据四个条件对每个程序包进行了排名：</target>
        </trans-unit>
        <trans-unit id="938b698818fe6271146be738a0850f0717553c39" translate="yes" xml:space="preserve">
          <source>On the &lt;a href=&quot;https://npmjs.com&quot;&gt;npm public registry&lt;/a&gt;, find the dependent package and navigate to its repository. For more information on finding packages, see &quot;&lt;a href=&quot;searching-for-packages&quot;&gt;How to find and select packages&lt;/a&gt;&quot;.</source>
          <target state="translated">在&lt;a href=&quot;https://npmjs.com&quot;&gt;npm公共注册表上&lt;/a&gt;，找到依赖包并导航到其存储库。有关查找软件包的更多信息，请参见&amp;ldquo; &lt;a href=&quot;searching-for-packages&quot;&gt;如何查找和选择软件包&lt;/a&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="f05caab1dcc9396b249cb807d027094409b07174" translate="yes" xml:space="preserve">
          <source>On the &lt;a href=&quot;https://npmjs.com&quot;&gt;npm public registry&lt;/a&gt;, find the package with the vulnerability or the dependent package that needs an update. For more information on finding packages, see &quot;&lt;a href=&quot;searching-for-packages&quot;&gt;How to find and select packages&lt;/a&gt;&quot;.</source>
          <target state="translated">在&lt;a href=&quot;https://npmjs.com&quot;&gt;npm公共注册表上&lt;/a&gt;，找到具有漏洞的程序包或需要更新的相关程序包。有关查找软件包的更多信息，请参见&amp;ldquo; &lt;a href=&quot;searching-for-packages&quot;&gt;如何查找和选择软件包&lt;/a&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="cc8ae2816ec61c33b027be638416186eb4aad7a7" translate="yes" xml:space="preserve">
          <source>On the &lt;a href=&quot;https://npmjs.com&quot;&gt;npm public registry&lt;/a&gt;, find the package with the vulnerability. For more information on finding packages, see &quot;&lt;a href=&quot;searching-for-packages&quot;&gt;How to find and select packages&lt;/a&gt;&quot;.</source>
          <target state="translated">在&lt;a href=&quot;https://npmjs.com&quot;&gt;npm公共注册表上&lt;/a&gt;，找到带有漏洞的软件包。有关查找软件包的更多信息，请参见&amp;ldquo; &lt;a href=&quot;searching-for-packages&quot;&gt;如何查找和选择软件包&lt;/a&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="71653400caf43068d482b46e1495f7893c7cc08a" translate="yes" xml:space="preserve">
          <source>On the command line, navigate to your package directory by typing &lt;code&gt;cd path/to/your-package-name&lt;/code&gt; and pressing &lt;strong&gt;Enter&lt;/strong&gt;.</source>
          <target state="translated">在命令行上，通过输入 &lt;code&gt;cd path/to/your-package-name&lt;/code&gt; 并按&lt;strong&gt;Enter&lt;/strong&gt;导航到软件包目录。</target>
        </trans-unit>
        <trans-unit id="71b0d36e275b7ad63fc105965f1e3071c5e67bf5" translate="yes" xml:space="preserve">
          <source>On the command line:</source>
          <target state="translated">在命令行中。</target>
        </trans-unit>
        <trans-unit id="c499755c3bb06e4e9ee14d42a0a3f18e9c33250d" translate="yes" xml:space="preserve">
          <source>On the next screen, choose the level of 2FA you want.</source>
          <target state="translated">在下一个屏幕上,选择你想要的2FA级别。</target>
        </trans-unit>
        <trans-unit id="b7c4e416e9be67ea18c61426bb7192e11b541e87" translate="yes" xml:space="preserve">
          <source>Once a package is published with a given name and version, that specific name and version combination can never be used again, even if it is removed with &lt;a href=&quot;unpublish&quot;&gt;npm-unpublish&lt;/a&gt;.</source>
          <target state="translated">一旦使用给定的名称和版本发布了软件包，即使使用&lt;a href=&quot;unpublish&quot;&gt;npm-unpublish&lt;/a&gt;将其删除，该特定名称和版本组合也将永远无法再次使用。</target>
        </trans-unit>
        <trans-unit id="7b290bf2312b292d96a19971d2ced27f8d54328b" translate="yes" xml:space="preserve">
          <source>Once a scope is associated with a registry, any &lt;code&gt;npm install&lt;/code&gt; for a package with that scope will request packages from that registry instead. Any &lt;code&gt;npm publish&lt;/code&gt; for a package name that contains the scope will be published to that registry instead.</source>
          <target state="translated">一旦将范围与注册表关联，则具有该范围的软件包的任何 &lt;code&gt;npm install&lt;/code&gt; 都会从该注册表中请求软件包。包含范围的程序包名称的所有 &lt;code&gt;npm publish&lt;/code&gt; 都将发布到该注册表。</target>
        </trans-unit>
        <trans-unit id="7f8e3a765148a90d1ec1302e2851f5629ffc8aaa" translate="yes" xml:space="preserve">
          <source>Once it's published, you should see it on the website with a private flag.</source>
          <target state="translated">一旦发布,你应该在网站上看到它的私人标志。</target>
        </trans-unit>
        <trans-unit id="3a5f79304a00d1dd5c79ca6fa8249b31ac4fc2ee" translate="yes" xml:space="preserve">
          <source>Once the fix is merged and the package has been updated in the npm public registry, update your copy of the package that depends on the package with the fix.</source>
          <target state="translated">一旦合并了修复程序,并且在npm公共注册表中更新了软件包,请更新你的依赖于该修复程序的软件包的副本。</target>
        </trans-unit>
        <trans-unit id="ba2ad45d9badfda427524865583c8073b58bad78" translate="yes" xml:space="preserve">
          <source>Once the package is in &lt;code&gt;node_modules&lt;/code&gt;, you can use it in your code. For example, if you are creating a Node.js module, you can &lt;code&gt;require&lt;/code&gt; it.</source>
          <target state="translated">将该程序包放入 &lt;code&gt;node_modules&lt;/code&gt; 中后，就可以在代码中使用它了。例如，如果要创建Node.js模块，则可以 &lt;code&gt;require&lt;/code&gt; 它。</target>
        </trans-unit>
        <trans-unit id="1deff37b07d9ff5badafbb7ef19c78ac4815c197" translate="yes" xml:space="preserve">
          <source>Once the pull or merge request is merged and the package has been updated in the &lt;a href=&quot;https://npmjs.com&quot;&gt;npm public registry&lt;/a&gt;, update your copy of the package with &lt;code&gt;npm update&lt;/code&gt;.</source>
          <target state="translated">一旦合并合并请求，并且已在&lt;a href=&quot;https://npmjs.com&quot;&gt;npm公共注册表&lt;/a&gt;中更新了软件包，请使用 &lt;code&gt;npm update&lt;/code&gt; 更新软件包的副本。</target>
        </trans-unit>
        <trans-unit id="b35153f2d3143efc108482c1868be5e7b1d48592" translate="yes" xml:space="preserve">
          <source>Once you are logged in, type &lt;code&gt;npm profile disable-2fa&lt;/code&gt; and enter your npm password if prompted.</source>
          <target state="translated">登录后，键入 &lt;code&gt;npm profile disable-2fa&lt;/code&gt; 并在出现提示时输入您的npm密码。</target>
        </trans-unit>
        <trans-unit id="7722a25f0d6e003cc5e64d817fa7180e61fd56d5" translate="yes" xml:space="preserve">
          <source>Once you have installed 2FA, you will need to enter an OTP for security-relevant commands. For example, whenever you use the command &lt;code&gt;npm profile set&lt;/code&gt; you will need to enter an OTP before you can set or change a value, such as your fullname:</source>
          <target state="translated">一旦安装了2FA，您将需要为安全性相关命令输入OTP。例如，每当使用命令 &lt;code&gt;npm profile set&lt;/code&gt; 时，都需要输入OTP才能设置或更改值，例如全名：</target>
        </trans-unit>
        <trans-unit id="a7e7c9117b05e50435fe8169a7be208ca8bde48d" translate="yes" xml:space="preserve">
          <source>Once your &lt;code&gt;package.json&lt;/code&gt; file is created, you'll want to create the file that will be loaded when your module is required. The default name for this file is &lt;code&gt;index.js&lt;/code&gt;.</source>
          <target state="translated">一旦你 &lt;code&gt;package.json&lt;/code&gt; 文件被创建，你需要创建需要你的模块时，将加载该文件。该文件的默认名称是 &lt;code&gt;index.js&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79c32b8ace5597cd700e362577b644adb74e002b" translate="yes" xml:space="preserve">
          <source>One key detail about &lt;code&gt;package-lock.json&lt;/code&gt; is that it cannot be published, and it will be ignored if found in any place other than the toplevel package. It shares a format with &lt;a href=&quot;shrinkwrap.json&quot;&gt;npm-shrinkwrap.json&lt;/a&gt;, which is essentially the same file, but allows publication. This is not recommended unless deploying a CLI tool or otherwise using the publication process for producing production packages.</source>
          <target state="translated">关于 &lt;code&gt;package-lock.json&lt;/code&gt; 的一个关键细节是它无法发布，并且如果在顶级软件包之外的任何地方都将被忽略。它与&lt;a href=&quot;shrinkwrap.json&quot;&gt;npm-shrinkwrap.json&lt;/a&gt;共享一种格式，该格式本质上是相同的文件，但允许发布。除非部署CLI工具或使用发布过程来生产生产软件包，否则不建议这样做。</target>
        </trans-unit>
        <trans-unit id="e1f9ade8f1931814bc2b36c2d3b3ba90ffc12777" translate="yes" xml:space="preserve">
          <source>One of the things that has changed in npm is that we now use auth tokens to authenticate in the CLI. To generate an auth token, use &lt;code&gt;npm token create&lt;/code&gt;.</source>
          <target state="translated">npm中发生的变化之一是，我们现在使用身份验证令牌在CLI中进行身份验证。要生成身份验证令牌，请使用 &lt;code&gt;npm token create&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ffd866f3f9724b908b77c2913f632b51e0e975a" translate="yes" xml:space="preserve">
          <source>One thing we noticed is that the &lt;code&gt;.gitconfig&lt;/code&gt; used is not always the one expected so if you are on a machine that modified the home path to a shared drive, you need to ensure that your &lt;code&gt;.gitconfig&lt;/code&gt; is the same on both your shared drive and in &lt;code&gt;c:\users\[your user]\&lt;/code&gt;</source>
          <target state="translated">我们注意到的一件事是，使用的 &lt;code&gt;.gitconfig&lt;/code&gt; 并不总是预期的，因此，如果您使用的计算机修改了共享驱动器的主路径，则需要确保您的 &lt;code&gt;.gitconfig&lt;/code&gt; 在共享驱动器和在 &lt;code&gt;c:\users\[your user]\&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="564e720a6c033ec5330b75b805790bca1c13d80a" translate="yes" xml:space="preserve">
          <source>Only relevant when specified explicitly on the command line.</source>
          <target state="translated">只有在命令行中明确指定时,才有意义。</target>
        </trans-unit>
        <trans-unit id="0788006144621f681c838854bbb1c1a58c5ecfc5" translate="yes" xml:space="preserve">
          <source>Only works if there is already a package.json file present.</source>
          <target state="translated">只有在已经有package.json文件存在的情况下才有效。</target>
        </trans-unit>
        <trans-unit id="2c5d28c68b424eb08f7b688a242968a6979bdcc8" translate="yes" xml:space="preserve">
          <source>Open an issue in the package or dependent package issue tracker</source>
          <target state="translated">在包或依赖包问题跟踪器中打开一个问题。</target>
        </trans-unit>
        <trans-unit id="54cc3ec8a08aca3efd35894beabab3f6db48943c" translate="yes" xml:space="preserve">
          <source>Open or create a &lt;code&gt;~/.profile&lt;/code&gt; file and add this line:</source>
          <target state="translated">打开或创建 &lt;code&gt;~/.profile&lt;/code&gt; 文件并添加以下行：</target>
        </trans-unit>
        <trans-unit id="1eb18e7eb437b66656db94f7a9f29cc9e1789966" translate="yes" xml:space="preserve">
          <source>Open package repository page in the browser.</source>
          <target state="translated">在浏览器中打开软件包仓库页面。</target>
        </trans-unit>
        <trans-unit id="0e41ddec2939f2055b00f8f9f32f3b92711ea450" translate="yes" xml:space="preserve">
          <source>Open the email titled &lt;em&gt;Welcome to npm&lt;/em&gt; (search &lt;em&gt;All Mail&lt;/em&gt; in case the email doesn't appear in the inbox).</source>
          <target state="translated">打开标题为&amp;ldquo; &lt;em&gt;欢迎使用npm&lt;/em&gt; &amp;rdquo;的电子邮件（搜索&amp;ldquo; &lt;em&gt;所有邮件&amp;rdquo;&lt;/em&gt;，以防收件箱中未显示该电子邮件）。</target>
        </trans-unit>
        <trans-unit id="71461fce6032e89a6af49731e911be952a9c9acf" translate="yes" xml:space="preserve">
          <source>Opens the config file in an editor. Use the &lt;code&gt;--global&lt;/code&gt; flag to edit the global config.</source>
          <target state="translated">在编辑器中打开配置文件。使用 &lt;code&gt;--global&lt;/code&gt; 标志来编辑全局配置。</target>
        </trans-unit>
        <trans-unit id="88407d0b8ae332bec10adad4ccc441ffd955cb69" translate="yes" xml:space="preserve">
          <source>Opens the package folder in the default editor (or whatever you've configured as the npm &lt;code&gt;editor&lt;/code&gt; config -- see &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">在默认编辑器（或您配置为npm &lt;code&gt;editor&lt;/code&gt; config的任何文件-请参阅 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; ）中打开package文件夹。</target>
        </trans-unit>
        <trans-unit id="2b035283ec32dd405774c42f373bdc3ab4420ca9" translate="yes" xml:space="preserve">
          <source>Operates in &quot;global&quot; mode, so that packages are installed into the &lt;code&gt;prefix&lt;/code&gt; folder instead of the current working directory. See &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt; for more on the differences in behavior.</source>
          <target state="translated">在&amp;ldquo;全局&amp;rdquo;模式下运行，以便将软件包安装到 &lt;code&gt;prefix&lt;/code&gt; 文件夹中，而不是当前的工作目录中。有关行为差异的更多信息，请参见 &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5193a46114f37a26c24bcb5dc7a99da2f7f66210" translate="yes" xml:space="preserve">
          <source>Optimal</source>
          <target state="translated">Optimal</target>
        </trans-unit>
        <trans-unit id="1fcd26a5d101992273a5d424d98f422c5387bd7f" translate="yes" xml:space="preserve">
          <source>Option 1 or 2</source>
          <target state="translated">选择1或2</target>
        </trans-unit>
        <trans-unit id="a22544d8fac65d3f41b8b3690a7e553c8f1fda30" translate="yes" xml:space="preserve">
          <source>Option 1: &lt;a href=&quot;http://superuser.com/questions/284342/what-are-path-and-other-environment-variables-and-how-can-i-set-or-use-them&quot;&gt;edit your Windows installation's &lt;code&gt;PATH&lt;/code&gt;&lt;/a&gt; to put &lt;code&gt;%appdata%\npm&lt;/code&gt; before &lt;code&gt;%ProgramFiles%\nodejs&lt;/code&gt;. Remember that you'll need to restart &lt;code&gt;cmd.exe&lt;/code&gt; (and potentially restart Windows) when you make changes to &lt;code&gt;PATH&lt;/code&gt; or how npm is installed.</source>
          <target state="translated">选项1：&lt;a href=&quot;http://superuser.com/questions/284342/what-are-path-and-other-environment-variables-and-how-can-i-set-or-use-them&quot;&gt;编辑您的Windows安装的 &lt;code&gt;PATH&lt;/code&gt; &lt;/a&gt;放在 &lt;code&gt;%appdata%\npm&lt;/code&gt; 前 &lt;code&gt;%ProgramFiles%\nodejs&lt;/code&gt; 。请记住，对 &lt;code&gt;PATH&lt;/code&gt; 或npm的安装方式进行更改时，需要重新启动 &lt;code&gt;cmd.exe&lt;/code&gt; （并可能重新启动Windows）。</target>
        </trans-unit>
        <trans-unit id="ec838084a2985970c73711ce3388fb0abc134000" translate="yes" xml:space="preserve">
          <source>Option 2: remove both of</source>
          <target state="translated">备选办法2:删除这两项</target>
        </trans-unit>
        <trans-unit id="f6c646b8baff10d0903b4dd8c67449ef710a6785" translate="yes" xml:space="preserve">
          <source>Option 3</source>
          <target state="translated">方案三</target>
        </trans-unit>
        <trans-unit id="da89a2f58d34e4ffb832ce70e081af577b8dbb22" translate="yes" xml:space="preserve">
          <source>Option 3: Navigate to &lt;code&gt;%ProgramFiles%\nodejs\node_modules\npm&lt;/code&gt; and copy the &lt;code&gt;npmrc&lt;/code&gt;file to another folder or the desktop. Then open &lt;code&gt;cmd.exe&lt;/code&gt; and run the following commands:</source>
          <target state="translated">选项3：导航到 &lt;code&gt;%ProgramFiles%\nodejs\node_modules\npm&lt;/code&gt; 然后将 &lt;code&gt;npmrc&lt;/code&gt; 文件复制到另一个文件夹或桌面。然后打开 &lt;code&gt;cmd.exe&lt;/code&gt; 并运行以下命令：</target>
        </trans-unit>
        <trans-unit id="ee00e88a7eb0731ee7af9f9a65ca3031bcba3186" translate="yes" xml:space="preserve">
          <source>Option One: Reinstall with a Node Version Manager</source>
          <target state="translated">方案一:用节点版本管理器重新安装。</target>
        </trans-unit>
        <trans-unit id="cc44c170a7366d1cf2eb2eebd3d1238c32403ca9" translate="yes" xml:space="preserve">
          <source>Option Two: Change npm's Default Directory</source>
          <target state="translated">选项二:改变npm的默认目录</target>
        </trans-unit>
        <trans-unit id="4d517faf904464b61bcc912a9bac7cdac12719da" translate="yes" xml:space="preserve">
          <source>Options to pass through to Node.js via the &lt;code&gt;NODE_OPTIONS&lt;/code&gt; environment variable. This does not impact how npm itself is executed but it does impact how lifecycle scripts are called.</source>
          <target state="translated">通过 &lt;code&gt;NODE_OPTIONS&lt;/code&gt; 环境变量传递到Node.js的选项。这不会影响npm本身的执行方式，但会影响生命周期脚本的调用方式。</target>
        </trans-unit>
        <trans-unit id="61249b8e40e81315c6d40e9382f514757e73dffd" translate="yes" xml:space="preserve">
          <source>Or in &lt;code&gt;package.json&lt;/code&gt;:</source>
          <target state="translated">或在 &lt;code&gt;package.json&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="1ccf0a5acf58188318b2dc7cb52603ca5c821178" translate="yes" xml:space="preserve">
          <source>Or upgrade to the most recent release:</source>
          <target state="translated">或者升级到最新的版本。</target>
        </trans-unit>
        <trans-unit id="a4ff151293fe6d0b455ac2d7373ceb9542c491dd" translate="yes" xml:space="preserve">
          <source>Or you can install npm in the terminal console, as explained below, then come back to these steps.</source>
          <target state="translated">或者你也可以在终端控制台安装npm,如下所述,然后再回到这些步骤。</target>
        </trans-unit>
        <trans-unit id="52c6807a7513d678b7dc028be32672763740995d" translate="yes" xml:space="preserve">
          <source>Or you can shorten that all into a single string, and npm will parse it for you:</source>
          <target state="translated">或者你也可以将这些内容缩短为一个字符串,然后npm会帮你解析。</target>
        </trans-unit>
        <trans-unit id="bc7fb3510b2886d583071c96abafa79248ff2e04" translate="yes" xml:space="preserve">
          <source>Or, if that fails, get the npm source code, and do:</source>
          <target state="translated">或者,如果失败了,得到npm的源代码,然后做。</target>
        </trans-unit>
        <trans-unit id="687b69ce89fed20c8a7e1a988ee7ca1a9569c45f" translate="yes" xml:space="preserve">
          <source>Or, if you are working in another tab on the web, you can click the Tokens tab:</source>
          <target state="translated">或者,如果你是在网页上的另一个选项卡中工作,你可以点击代币选项卡。</target>
        </trans-unit>
        <trans-unit id="613f13f4bba04ff8e0bb5f1436aaf05270d108f9" translate="yes" xml:space="preserve">
          <source>Organization creation and management of team admins and &lt;em&gt;organization&lt;/em&gt; members is done through the website, not the npm CLI.</source>
          <target state="translated">团队管理员和&lt;em&gt;组织&lt;/em&gt;成员的组织创建和管理是通过网站而不是npm CLI完成的。</target>
        </trans-unit>
        <trans-unit id="434b9b26e861a500ef98c0455e63a683adb5c8f4" translate="yes" xml:space="preserve">
          <source>Other things forbidden by the npm &lt;a href=&quot;https://www.npmjs.com/policies/conduct&quot;&gt;Code of Conduct&lt;/a&gt; such as hateful language, pornographic content, or harassment.</source>
          <target state="translated">npm &lt;a href=&quot;https://www.npmjs.com/policies/conduct&quot;&gt;行为准则&lt;/a&gt;禁止的其他内容，例如可恶的语言，色情内容或骚扰。</target>
        </trans-unit>
        <trans-unit id="6addd0caad3cbb3a406fd7b8db58e85deef9a364" translate="yes" xml:space="preserve">
          <source>Output parseable results from commands that write to standard output. For &lt;code&gt;npm search&lt;/code&gt;, this will be tab-separated table format.</source>
          <target state="translated">写入标准输出的命令的输出可解析结果。对于 &lt;code&gt;npm search&lt;/code&gt; ，这将是制表符分隔的表格格式。</target>
        </trans-unit>
        <trans-unit id="03d39f7cb3ea3c7d198dc5e8c9e2ee9280f22dab" translate="yes" xml:space="preserve">
          <source>Output search results as a JSON array.</source>
          <target state="translated">将搜索结果作为JSON数组输出。</target>
        </trans-unit>
        <trans-unit id="8858018772a12454bbbc4f161bfdddd266054fd1" translate="yes" xml:space="preserve">
          <source>Output search results as lines with tab-separated columns.</source>
          <target state="translated">将搜索结果输出为以制表符分隔的行。</target>
        </trans-unit>
        <trans-unit id="e39aa0147e2c1ccfe5c4b460e2eeaee3df318218" translate="yes" xml:space="preserve">
          <source>PREPUBLISH AND PREPARE</source>
          <target state="translated">出版和准备</target>
        </trans-unit>
        <trans-unit id="64ae0efa4ecf6712c9bb96d5b026f94653c2db16" translate="yes" xml:space="preserve">
          <source>PURPOSE</source>
          <target state="translated">PURPOSE</target>
        </trans-unit>
        <trans-unit id="7431e3df243c5be33cffa0b28ca2a76b93f0538c" translate="yes" xml:space="preserve">
          <source>Package</source>
          <target state="translated">Package</target>
        </trans-unit>
        <trans-unit id="9938ef626722ec75dc17f20a6afc43c055a2b244" translate="yes" xml:space="preserve">
          <source>Package linking is a two-step process.</source>
          <target state="translated">包装链接是一个两步走的过程。</target>
        </trans-unit>
        <trans-unit id="3bfd646ecdd5c7f814af23b84aed7db1a1ca86c8" translate="yes" xml:space="preserve">
          <source>Package scripts run in an environment where many pieces of information are made available regarding the setup of npm and the current state of the process.</source>
          <target state="translated">包脚本在一个环境中运行,在这个环境中,许多关于npm的设置和当前进程状态的信息都是可用的。</target>
        </trans-unit>
        <trans-unit id="0daa30da3be42fb768a2c93f3cebe832a124b1ff" translate="yes" xml:space="preserve">
          <source>Packages are dropped into the &lt;code&gt;node_modules&lt;/code&gt; folder under the &lt;code&gt;prefix&lt;/code&gt;. When installing locally, this means that you can &lt;code&gt;require(&quot;packagename&quot;)&lt;/code&gt; to load its main module, or &lt;code&gt;require(&quot;packagename/lib/path/to/sub/module&quot;)&lt;/code&gt; to load other modules.</source>
          <target state="translated">程序包将放在 &lt;code&gt;prefix&lt;/code&gt; 下的 &lt;code&gt;node_modules&lt;/code&gt; 文件夹中。在本地安装时，这意味着您可以 &lt;code&gt;require(&quot;packagename&quot;)&lt;/code&gt; 加载其主模块，或 &lt;code&gt;require(&quot;packagename/lib/path/to/sub/module&quot;)&lt;/code&gt; 加载其他模块。</target>
        </trans-unit>
        <trans-unit id="d1aac566feba43d0caff57ae0df3062a098440f1" translate="yes" xml:space="preserve">
          <source>Packages that incorporate the package shown in some way are called dependents.</source>
          <target state="translated">以某种方式包含所示包的包称为依赖包。</target>
        </trans-unit>
        <trans-unit id="c161241bf6a6912c6038f93faa97e38de6bda996" translate="yes" xml:space="preserve">
          <source>Parts of the Package Page:</source>
          <target state="translated">包页的部分。</target>
        </trans-unit>
        <trans-unit id="030e2fc703f77b9a2294653f54ecb8395783abb6" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;-s&lt;/code&gt; flag to git to sign the tag.</source>
          <target state="translated">将 &lt;code&gt;-s&lt;/code&gt; 标志传递给git以对标签进行签名。</target>
        </trans-unit>
        <trans-unit id="51ddbc7e4f00078a03f1d5c03a03d604b0df590a" translate="yes" xml:space="preserve">
          <source>Patch releases: &lt;code&gt;1.0&lt;/code&gt; or &lt;code&gt;1.0.x&lt;/code&gt; or &lt;code&gt;~1.0.4&lt;/code&gt;</source>
          <target state="translated">修补程序版本： &lt;code&gt;1.0&lt;/code&gt; 或 &lt;code&gt;1.0.x&lt;/code&gt; 或 &lt;code&gt;~1.0.4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f7d2512b1dcb2da4e700ea8540f007c35e9d9df0" translate="yes" xml:space="preserve">
          <source>Patched in</source>
          <target state="translated">补丁在</target>
        </trans-unit>
        <trans-unit id="a31fe1c4e4cb42a93034a693997afe809bbb1699" translate="yes" xml:space="preserve">
          <source>Patches welcome!</source>
          <target state="translated">欢迎使用补丁!</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="0451965d3c672c2aef08cf799ca6df04b261ddb5" translate="yes" xml:space="preserve">
          <source>Per-Package Config Settings</source>
          <target state="translated">每包配置设置</target>
        </trans-unit>
        <trans-unit id="8cf7a5b9d60c9a59836e2bbb4ca1c36c1808b834" translate="yes" xml:space="preserve">
          <source>Per-project config file</source>
          <target state="translated">每个项目的配置文件</target>
        </trans-unit>
        <trans-unit id="d3588790ad118c22dc3e54cee5d97f45b5d0a783" translate="yes" xml:space="preserve">
          <source>Per-user config file</source>
          <target state="translated">每个用户的配置文件</target>
        </trans-unit>
        <trans-unit id="edf849b7ccc3e6f712b350de8caab0468e0edd46" translate="yes" xml:space="preserve">
          <source>Permissions Errors</source>
          <target state="translated">权限错误</target>
        </trans-unit>
        <trans-unit id="37b41feedc57beb47575c404f0820bb45edd5607" translate="yes" xml:space="preserve">
          <source>Permissions checks</source>
          <target state="translated">权限检查</target>
        </trans-unit>
        <trans-unit id="6191327cec734f41a774ec7f5c4814eb252d61ea" translate="yes" xml:space="preserve">
          <source>Ping npm registry.</source>
          <target state="translated">Ping npm注册表。</target>
        </trans-unit>
        <trans-unit id="b9d250304583d0829bfae8dffeeb3a95cc8d7f5b" translate="yes" xml:space="preserve">
          <source>Ping the configured or given npm registry and verify authentication. If it works it will output something like:</source>
          <target state="translated">Ping配置或给定的npm注册表并验证验证。如果成功的话,它将输出类似这样的内容。</target>
        </trans-unit>
        <trans-unit id="5a5f10ce6c1ccb2e07fa8ee19d58a27b1f79a83e" translate="yes" xml:space="preserve">
          <source>Place an executable file at &lt;code&gt;node_modules/.hooks/{eventname}&lt;/code&gt;, and it'll get run for all packages when they are going through that point in the package lifecycle for any packages installed in that root.</source>
          <target state="translated">将可执行文件放在 &lt;code&gt;node_modules/.hooks/{eventname}&lt;/code&gt; 上，当该软件包在该根目录中安装的所有软件包的生命周期中都经过该点时，它将为所有软件包运行。</target>
        </trans-unit>
        <trans-unit id="f9670883dc83700abe04b0eb716abdfdcb98f770" translate="yes" xml:space="preserve">
          <source>Please clean up logs when they are no longer helpful. In particular, logging the same object over and over again is not helpful. Logs should report what's happening so that it's easier to track down where a fault occurs.</source>
          <target state="translated">当日志不再有帮助时,请清理日志。特别是,重复记录同一个对象是没有帮助的。日志应该报告正在发生的事情,以便更容易追踪故障发生的位置。</target>
        </trans-unit>
        <trans-unit id="7ba7eb6fbbda40df962e670f0349c48868e1fb15" translate="yes" xml:space="preserve">
          <source>Please make sure that your file(s) referenced in &lt;code&gt;bin&lt;/code&gt; starts with &lt;code&gt;#!/usr/bin/env node&lt;/code&gt;, otherwise the scripts are started without the node executable!</source>
          <target state="translated">请确保 &lt;code&gt;bin&lt;/code&gt; 中引用的文件以 &lt;code&gt;#!/usr/bin/env node&lt;/code&gt; 开头，否则脚本将在没有节点可执行文件的情况下启动！</target>
        </trans-unit>
        <trans-unit id="16af75375ba5f3822f56b4fbbe4dfd4176ab0b88" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;../cli/profile&quot;&gt;command line documentation&lt;/a&gt; for more details and examples.</source>
          <target state="translated">请参阅&lt;a href=&quot;../cli/profile&quot;&gt;命令行文档&lt;/a&gt;以获取更多详细信息和示例。</target>
        </trans-unit>
        <trans-unit id="947caf58522bb320b47240afd3cf0aaab6b259ec" translate="yes" xml:space="preserve">
          <source>Please refer to the Orgs book for details about how to create and assign teams, and work with Orgs scopes.</source>
          <target state="translated">有关如何创建和分配团队以及如何使用Orgs范围的详细信息,请参考Orgs书。</target>
        </trans-unit>
        <trans-unit id="c8a14bc0401e12d3eac54c2c45d9d97acc02ca0c" translate="yes" xml:space="preserve">
          <source>Please see the discussions in &lt;a href=&quot;../getting-started/installing-node&quot;&gt;Chapter 2&lt;/a&gt; and &lt;a href=&quot;../getting-started/fixing-npm-permissions&quot;&gt;Chapter 3&lt;/a&gt; about ways to avoid permissions errors.</source>
          <target state="translated">请参阅在讨论&lt;a href=&quot;../getting-started/installing-node&quot;&gt;第2&lt;/a&gt;和&lt;a href=&quot;../getting-started/fixing-npm-permissions&quot;&gt;第3章&lt;/a&gt;有关如何避免权限错误。</target>
        </trans-unit>
        <trans-unit id="be6c200feb205f8ceb9451117a5930415ac0abb9" translate="yes" xml:space="preserve">
          <source>Popularity</source>
          <target state="translated">Popularity</target>
        </trans-unit>
        <trans-unit id="92238540743ff9110cbe207b17c37906f937403c" translate="yes" xml:space="preserve">
          <source>Positional arguments are &lt;code&gt;name@version-range&lt;/code&gt; identifiers, which will limit the results to only the paths to the packages named. Note that nested packages will &lt;em&gt;also&lt;/em&gt; show the paths to the specified packages. For example, running &lt;code&gt;npm ls promzard&lt;/code&gt; in npm's source tree will show:</source>
          <target state="translated">位置参数是 &lt;code&gt;name@version-range&lt;/code&gt; 标识符，它将结果限制为仅指定包的路径。需要注意的是嵌套包将&lt;em&gt;还&lt;/em&gt;显示路径指定的包。例如，在npm的源代码树中运行 &lt;code&gt;npm ls promzard&lt;/code&gt; 将显示：</target>
        </trans-unit>
        <trans-unit id="e73da856eae6be601452870aadfe7e5565a34409" translate="yes" xml:space="preserve">
          <source>Possible temporary npm registry glitch, or corrupted local server cache. Run &lt;code&gt;npm cache clean&lt;/code&gt; and/or try again later.</source>
          <target state="translated">可能是临时npm注册表故障或本地服务器缓存损坏。运行 &lt;code&gt;npm cache clean&lt;/code&gt; 和/或稍后再试。</target>
        </trans-unit>
        <trans-unit id="a8bc382020aaaa716a496826f97b0c9d436c31a9" translate="yes" xml:space="preserve">
          <source>Preparation</source>
          <target state="translated">Preparation</target>
        </trans-unit>
        <trans-unit id="c682f92411e2be58789b8ad67d36bbe717fb97e2" translate="yes" xml:space="preserve">
          <source>Prerelease Identifiers</source>
          <target state="translated">预发布标识符</target>
        </trans-unit>
        <trans-unit id="f97f6ce6ce107b043cd07a59e8111b68ef0c4df5" translate="yes" xml:space="preserve">
          <source>Prerelease Tags</source>
          <target state="translated">预发布标签</target>
        </trans-unit>
        <trans-unit id="f82e16c42d12fee4cbbe90c013d50ff55c5bd90c" translate="yes" xml:space="preserve">
          <source>Prevents throwing an error when &lt;code&gt;npm version&lt;/code&gt; is used to set the new version to the same value as the current version.</source>
          <target state="translated">当使用 &lt;code&gt;npm version&lt;/code&gt; 将新版本设置为与当前版本相同的值时，防止引发错误。</target>
        </trans-unit>
        <trans-unit id="e33a581ed5a89cbc7253015521fec58120d4df97" translate="yes" xml:space="preserve">
          <source>Print the &lt;code&gt;username&lt;/code&gt; config to standard output.</source>
          <target state="translated">将 &lt;code&gt;username&lt;/code&gt; 配置打印到标准输出。</target>
        </trans-unit>
        <trans-unit id="cf006bc206d0613883d6fe5ad1f7e59838e24c33" translate="yes" xml:space="preserve">
          <source>Print the effective &lt;code&gt;node_modules&lt;/code&gt; folder to standard out.</source>
          <target state="translated">将有效的 &lt;code&gt;node_modules&lt;/code&gt; 文件夹打印为标准输出。</target>
        </trans-unit>
        <trans-unit id="b47626782a6802dac6a98fa89f8492bafef6c30d" translate="yes" xml:space="preserve">
          <source>Print the folder where npm will install executables.</source>
          <target state="translated">打印npm安装可执行文件的文件夹。</target>
        </trans-unit>
        <trans-unit id="ca15560dded8df24ffdb21c853c3677ee9201210" translate="yes" xml:space="preserve">
          <source>Print the local prefix to standard out. This is the closest parent directory to contain a package.json file unless &lt;code&gt;-g&lt;/code&gt; is also specified.</source>
          <target state="translated">打印本地前缀以标准输出。除非也指定了 &lt;code&gt;-g&lt;/code&gt; ,否则这是包含package.json文件的最接近的父目录。</target>
        </trans-unit>
        <trans-unit id="441558197d776dc70e167d8b6d4dee4e813b7680" translate="yes" xml:space="preserve">
          <source>Prior to npm 3.0.0, this feature was used to treat this package as if the user had set &lt;code&gt;engine-strict&lt;/code&gt;. It is no longer used.</source>
          <target state="translated">在npm 3.0.0之前，此功能用于将该软件包视为用户已设置 &lt;code&gt;engine-strict&lt;/code&gt; 。不再使用。</target>
        </trans-unit>
        <trans-unit id="2ae01676b4173108166e13b8e5a1d2d438c07f6d" translate="yes" xml:space="preserve">
          <source>Prior to version 0.3, npm used shim files for executables and node modules. To track those down, you can do the following:</source>
          <target state="translated">在0.3版本之前,npm对可执行文件和node模块使用shim文件。要追踪这些文件,你可以做以下工作。</target>
        </trans-unit>
        <trans-unit id="29dc927e969f7d106692fe8bb8a1284a43e2f287" translate="yes" xml:space="preserve">
          <source>Private packages</source>
          <target state="translated">私人套餐</target>
        </trans-unit>
        <trans-unit id="13b687d9149b4816fa210aba30641a3c468a4c03" translate="yes" xml:space="preserve">
          <source>Provide a facility for users to &quot;time-travel&quot; to previous states of &lt;code&gt;node_modules&lt;/code&gt; without having to commit the directory itself.</source>
          <target state="translated">为用户提供一种工具，使其可以&amp;ldquo;时间旅行&amp;rdquo;到 &lt;code&gt;node_modules&lt;/code&gt; 的先前状态，而不必提交目录本身。</target>
        </trans-unit>
        <trans-unit id="03b77ce939f90dd8c1351c10723aa3b00b50e804" translate="yes" xml:space="preserve">
          <source>Public scoped modules are free and don't require a paid subscription. To publish a public scoped module, set the access option when publishing it. This option will remain set for all subsequent publishes.</source>
          <target state="translated">公共范围的模块是免费的,不需要付费订阅。要发布一个公共范围的模块,请在发布时设置访问选项。该选项将在以后的所有发布中保持不变。</target>
        </trans-unit>
        <trans-unit id="f35b6ed0f4a0ef56580cdcc620f073994a24a45c" translate="yes" xml:space="preserve">
          <source>Publish a package and adjust package access</source>
          <target state="translated">发布软件包并调整软件包的访问权限</target>
        </trans-unit>
        <trans-unit id="e4a1c135518dbcc0aea6e61fced76a323e458e2c" translate="yes" xml:space="preserve">
          <source>Publish a package.</source>
          <target state="translated">发布一个包。</target>
        </trans-unit>
        <trans-unit id="603ae84595295e339f0eb12e31e10b05b8c91bf3" translate="yes" xml:space="preserve">
          <source>Publish your package</source>
          <target state="translated">发布您的包</target>
        </trans-unit>
        <trans-unit id="71335a7cd3dd795aadd46a508c84dd4985336205" translate="yes" xml:space="preserve">
          <source>Publish your package to npm.</source>
          <target state="translated">将你的软件包发布到npm。</target>
        </trans-unit>
        <trans-unit id="5304864bc3a599d0534613e0e47a5c2939f79a3d" translate="yes" xml:space="preserve">
          <source>Publish!</source>
          <target state="translated">Publish!</target>
        </trans-unit>
        <trans-unit id="72eab2e090e547c64453b019e9bd06900b2de547" translate="yes" xml:space="preserve">
          <source>Publishes a package to the registry so that it can be installed by name. All files in the package directory are included if no local &lt;code&gt;.gitignore&lt;/code&gt; or &lt;code&gt;.npmignore&lt;/code&gt; file exists. If both files exist and a file is ignored by &lt;code&gt;.gitignore&lt;/code&gt; but not by &lt;code&gt;.npmignore&lt;/code&gt; then it will be included. See &lt;code&gt;&lt;a href=&quot;../misc/developers&quot;&gt;npm-developers&lt;/a&gt;&lt;/code&gt; for full details on what's included in the published package, as well as details on how the package is built.</source>
          <target state="translated">将程序包发布到注册表，以便可以按名称安装。如果不存在本地 &lt;code&gt;.gitignore&lt;/code&gt; 或 &lt;code&gt;.npmignore&lt;/code&gt; 文件，则包括package目录中的所有文件。如果两个文件都存在，并且 &lt;code&gt;.gitignore&lt;/code&gt; 而不是 &lt;code&gt;.npmignore&lt;/code&gt; 忽略该文件，则它将包括在内。有关发布的软件包中包含的内容以及如何构建软件包的详细信息，请参见 &lt;code&gt;&lt;a href=&quot;../misc/developers&quot;&gt;npm-developers&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="338b45a6751558a0e49cb2d757f64736adc58f12" translate="yes" xml:space="preserve">
          <source>Publishing</source>
          <target state="translated">Publishing</target>
        </trans-unit>
        <trans-unit id="a696d79c632aa321f17800b7af4dd97e93985a84" translate="yes" xml:space="preserve">
          <source>Publishing a Scoped Package</source>
          <target state="translated">发布一个范围内的包</target>
        </trans-unit>
        <trans-unit id="71977c7066692ff3dc6ff885758f722ac622e5e3" translate="yes" xml:space="preserve">
          <source>Publishing a package sets the &lt;code&gt;latest&lt;/code&gt; tag to the published version unless the &lt;code&gt;--tag&lt;/code&gt; option is used. For example, &lt;code&gt;npm publish --tag=beta&lt;/code&gt;.</source>
          <target state="translated">除非使用 &lt;code&gt;--tag&lt;/code&gt; 选项，否则发布软件包会将 &lt;code&gt;latest&lt;/code&gt; 标签设置为发布的版本。例如， &lt;code&gt;npm publish --tag=beta&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e67986398b2039742efa52fdbebb65f68ac05acd" translate="yes" xml:space="preserve">
          <source>Publishing private scoped packages to the npm registry</source>
          <target state="translated">发布私有的作用域包到npm注册表。</target>
        </trans-unit>
        <trans-unit id="9ca05ffbde1319be662f37b83ea167e24d8abded" translate="yes" xml:space="preserve">
          <source>Publishing public scoped packages to the primary npm registry</source>
          <target state="translated">将公共范围内的包发布到主要的npm注册表。</target>
        </trans-unit>
        <trans-unit id="44409d170fe0c07037be9262a5077034af7a052e" translate="yes" xml:space="preserve">
          <source>Publishing scoped packages</source>
          <target state="translated">发布范围内的包</target>
        </trans-unit>
        <trans-unit id="39e2d84660ea8208a9c112d5301a3208aa35561b" translate="yes" xml:space="preserve">
          <source>Publishing with tags</source>
          <target state="translated">带标签的出版</target>
        </trans-unit>
        <trans-unit id="ec5a5c4535a32a0f51364b08a7b62982d5da8cd1" translate="yes" xml:space="preserve">
          <source>Publishing your package</source>
          <target state="translated">发布您的包</target>
        </trans-unit>
        <trans-unit id="3b7c592ce26b362a8cb7d56275a63b69ed6e2a7b" translate="yes" xml:space="preserve">
          <source>Publishing your package is easy.</source>
          <target state="translated">发布您的包很容易。</target>
        </trans-unit>
        <trans-unit id="9211150328914c8290df3beacac4171cfea346cc" translate="yes" xml:space="preserve">
          <source>Put a description in it. It's a string. This helps people discover your package, as it's listed in &lt;code&gt;npm search&lt;/code&gt;.</source>
          <target state="translated">在其中添加描述。这是一个字符串。如 &lt;code&gt;npm search&lt;/code&gt; 中列出的，这可以帮助人们发现您的包裹。</target>
        </trans-unit>
        <trans-unit id="2729206da88984c37bc54a95ea39e5dbb3fc5229" translate="yes" xml:space="preserve">
          <source>Put a single space in front of &lt;code&gt;(&lt;/code&gt; for anything other than a function call. Also use a single space wherever it makes things more readable.</source>
          <target state="translated">除 &lt;code&gt;(&lt;/code&gt; 用于函数调用以外的其他任何内容。）前应在（之前放置一个空格。请在每个地方使它更易读时使用一个空格。</target>
        </trans-unit>
        <trans-unit id="9338e063b35a3cb3409101d5bf3d5f352af9f287" translate="yes" xml:space="preserve">
          <source>Put example scripts in here. Someday, it might be exposed in some clever way.</source>
          <target state="translated">把例子脚本放在这里。总有一天,可能会以某种巧妙的方式暴露出来。</target>
        </trans-unit>
        <trans-unit id="fc044658d31d7f73131da503668b60d3a43f05a2" translate="yes" xml:space="preserve">
          <source>Put keywords in it. It's an array of strings. This helps people discover your package as it's listed in &lt;code&gt;npm search&lt;/code&gt;.</source>
          <target state="translated">放入关键字。它是一个字符串数组。这可以帮助人们发现 &lt;code&gt;npm search&lt;/code&gt; 中列出的您的包裹。</target>
        </trans-unit>
        <trans-unit id="a36ff2400edf4c56584f66c2b25aefc7d63361aa" translate="yes" xml:space="preserve">
          <source>Put markdown files in here. Eventually, these will be displayed nicely, maybe, someday.</source>
          <target state="translated">把markdown文件放在这里。最终,这些会被很好的显示出来,也许,有一天。</target>
        </trans-unit>
        <trans-unit id="0bacbc929b76ca5ff0c3889719040eb7ea888a27" translate="yes" xml:space="preserve">
          <source>Put your tests in here. It is currently not exposed, but it might be in the future.</source>
          <target state="translated">把你的测试放在这里。目前还没有暴露,但将来可能会暴露。</target>
        </trans-unit>
        <trans-unit id="f6918f654ffe0ef25601e865fd9182b4dd6b2fca" translate="yes" xml:space="preserve">
          <source>Putting &lt;code&gt;--foo bar&lt;/code&gt; on the command line sets the &lt;code&gt;foo&lt;/code&gt; configuration parameter to &lt;code&gt;&quot;bar&quot;&lt;/code&gt;. A &lt;code&gt;--&lt;/code&gt; argument tells the cli parser to stop reading flags. Using &lt;code&gt;--flag&lt;/code&gt; without specifying any value will set the value to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">在命令行上放置 &lt;code&gt;--foo bar&lt;/code&gt; 会将 &lt;code&gt;foo&lt;/code&gt; 配置参数设置为 &lt;code&gt;&quot;bar&quot;&lt;/code&gt; 。一个 &lt;code&gt;--&lt;/code&gt; 参数告诉CLI解析器停止读取标志。不指定任何值而使用 &lt;code&gt;--flag&lt;/code&gt; 会将值设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="775741f842f6068953f429c27fdce7967ae3a17c" translate="yes" xml:space="preserve">
          <source>Putting all this together, here is a Backus-Naur grammar for ranges, for the benefit of parser authors:</source>
          <target state="translated">把所有这些放在一起,这里有一个Backus-Naur的范围语法,供解析器作者参考。</target>
        </trans-unit>
        <trans-unit id="6eaea0b5450e4ceeeed978fc728b525522e66d5b" translate="yes" xml:space="preserve">
          <source>Putting empty packages in the registry. Packages must have SOME functionality. It can be silly, but it can't be nothing. (See also: squatting.)</source>
          <target state="translated">在注册表中放入空包。包必须有一定的功能。可以很傻,但不能什么都没有。(另见:蹲着。)</target>
        </trans-unit>
        <trans-unit id="a60f2c73604f623449f263e78f5857849ad5e429" translate="yes" xml:space="preserve">
          <source>Quality</source>
          <target state="translated">Quality</target>
        </trans-unit>
        <trans-unit id="5fdb74d83ff81599a2bd0edd2f33ef59b80e51ac" translate="yes" xml:space="preserve">
          <source>Quick Summary</source>
          <target state="translated">快速总结</target>
        </trans-unit>
        <trans-unit id="7b0257ce75add65485cb879a8ababbebc2270b68" translate="yes" xml:space="preserve">
          <source>Quotes</source>
          <target state="translated">Quotes</target>
        </trans-unit>
        <trans-unit id="69e27356ef629022720d868ab0c0e3394775b6c1" translate="yes" xml:space="preserve">
          <source>README</source>
          <target state="translated">README</target>
        </trans-unit>
        <trans-unit id="8ffa1146c71db97f92e2f04607f075869b2b30ec" translate="yes" xml:space="preserve">
          <source>REASONING</source>
          <target state="translated">REASONING</target>
        </trans-unit>
        <trans-unit id="a06eea77afe4e20d4af0161bcbb6170637b1c5fb" translate="yes" xml:space="preserve">
          <source>REMOVED.</source>
          <target state="translated">REMOVED.</target>
        </trans-unit>
        <trans-unit id="00f84e61df3304e4d4cc63dbd5398b43c47b3dd0" translate="yes" xml:space="preserve">
          <source>Random Errors--One Place to Start</source>
          <target state="translated">随机错误--一个可以开始的地方</target>
        </trans-unit>
        <trans-unit id="d37aaa06ae51debd50b272abf3e29c575f6a1b90" translate="yes" xml:space="preserve">
          <source>Range Grammar</source>
          <target state="translated">范围语法</target>
        </trans-unit>
        <trans-unit id="0d5fda95e3940bc09dc1ccc22666813c0b54f73d" translate="yes" xml:space="preserve">
          <source>Ranges</source>
          <target state="translated">Ranges</target>
        </trans-unit>
        <trans-unit id="3726d231560ea4a99fd7cbd09152945cbbc17c57" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;using-a-package.json&quot;&gt;Working with package.json&lt;/a&gt; to be sure that the details you want are reflected in your package.</source>
          <target state="translated">阅读&lt;a href=&quot;using-a-package.json&quot;&gt;&amp;ldquo;使用package.json工作&amp;rdquo;，&lt;/a&gt;以确保所需的详细信息反映在包中。</target>
        </trans-unit>
        <trans-unit id="cb74a3c46d545e9c4aa160486ce705c0e8a677f2" translate="yes" xml:space="preserve">
          <source>Read this chapter to learn how to manage security tokens.</source>
          <target state="translated">阅读本章,了解如何管理安全令牌。</target>
        </trans-unit>
        <trans-unit id="81a4890eecc5af37ec537c39d5e3a487fb7aed64" translate="yes" xml:space="preserve">
          <source>Rebuild a package.</source>
          <target state="translated">重建一个包。</target>
        </trans-unit>
        <trans-unit id="19bd88c7e8c28b65c9f58c8da6fb56e865324c08" translate="yes" xml:space="preserve">
          <source>Rebuild bundled dependencies after installation.</source>
          <target state="translated">安装后重建捆绑的依赖关系。</target>
        </trans-unit>
        <trans-unit id="28fbb69071032e6bd0df9082bd0e6fa16bddfaa0" translate="yes" xml:space="preserve">
          <source>Recommended action</source>
          <target state="translated">建议采取的行动</target>
        </trans-unit>
        <trans-unit id="3d1faa346890414aae83db9ce4ff763a8b27c40e" translate="yes" xml:space="preserve">
          <source>Recovery Codes</source>
          <target state="translated">恢复代码</target>
        </trans-unit>
        <trans-unit id="f88bf3149d10d2985ac9d430c9f3deeff9aef6da" translate="yes" xml:space="preserve">
          <source>Red means there's a newer version matching your semver requirements, so you should update now.</source>
          <target state="translated">红色意味着有一个更新的版本符合你的semver要求,所以你现在应该更新。</target>
        </trans-unit>
        <trans-unit id="942250cb4d738283096a0d1ae67bbf54d254450a" translate="yes" xml:space="preserve">
          <source>Reduce duplication.</source>
          <target state="translated">减少重复。</target>
        </trans-unit>
        <trans-unit id="34dffb34be8d7aedab2ee142e712f5f8019cf181" translate="yes" xml:space="preserve">
          <source>Reinstall npm with a version manager (recommended),</source>
          <target state="translated">用版本管理器重新安装npm(推荐)。</target>
        </trans-unit>
        <trans-unit id="251d99a0bedf4b3fd84e5b3ff32555627213306b" translate="yes" xml:space="preserve">
          <source>Related CLI commands</source>
          <target state="translated">相关CLI命令</target>
        </trans-unit>
        <trans-unit id="cb1cfc493bb4063c79f82067a5b41487a1d0116d" translate="yes" xml:space="preserve">
          <source>Remove a hook:</source>
          <target state="translated">去掉一个钩子。</target>
        </trans-unit>
        <trans-unit id="be9cbe035fc5c71f6fa7302ee809ca7589ff06a7" translate="yes" xml:space="preserve">
          <source>Remove a package from the registry.</source>
          <target state="translated">从注册表中删除一个软件包。</target>
        </trans-unit>
        <trans-unit id="803efb1f652b80e7ade86586a25e22f0fdd4982f" translate="yes" xml:space="preserve">
          <source>Remove a package.</source>
          <target state="translated">取出一个包装。</target>
        </trans-unit>
        <trans-unit id="50ea3d1ff6f28257ca869ba3410b650a7d021848" translate="yes" xml:space="preserve">
          <source>Remove extraneous packages.</source>
          <target state="translated">删除不相干的包。</target>
        </trans-unit>
        <trans-unit id="f5c25f3507bb492b7a6c1ad09029a1d69b51010a" translate="yes" xml:space="preserve">
          <source>Remove failed installs.</source>
          <target state="translated">删除失败的安装。</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="6f14e7af29a52f6e4b4fa60975b240a3de59e42a" translate="yes" xml:space="preserve">
          <source>Requiring scoped packages</source>
          <target state="translated">要求有范围的包装</target>
        </trans-unit>
        <trans-unit id="5758d92b4feb44f4d97c472c8ed207553779d221" translate="yes" xml:space="preserve">
          <source>Resetting your password from the web</source>
          <target state="translated">从网上重设密码</target>
        </trans-unit>
        <trans-unit id="5334d0e5224264b7595be971666a86f74f80c22e" translate="yes" xml:space="preserve">
          <source>Resolving &lt;code&gt;EAUDITNOPJSON&lt;/code&gt; and &lt;code&gt;EAUDITNOLOCK&lt;/code&gt; errors</source>
          <target state="translated">解决 &lt;code&gt;EAUDITNOPJSON&lt;/code&gt; 和 &lt;code&gt;EAUDITNOLOCK&lt;/code&gt; 错误</target>
        </trans-unit>
        <trans-unit id="0278f0a93afd957bbb92683839b53960420a035c" translate="yes" xml:space="preserve">
          <source>Resolving lockfile conflicts</source>
          <target state="translated">解决锁文件冲突</target>
        </trans-unit>
        <trans-unit id="c2e82ccba337094cd7e1611cc9d5e611941a2727" translate="yes" xml:space="preserve">
          <source>Restart a package.</source>
          <target state="translated">重新启动一个包。</target>
        </trans-unit>
        <trans-unit id="b642b6a7371cccba46578bd10a825f85e37a5b5b" translate="yes" xml:space="preserve">
          <source>Restrict code to specific developers.</source>
          <target state="translated">将代码限制给特定的开发者。</target>
        </trans-unit>
        <trans-unit id="fadc5799f95af8ed3024bf0c3c82c00185de1256" translate="yes" xml:space="preserve">
          <source>Review the Contents</source>
          <target state="translated">审查内容</target>
        </trans-unit>
        <trans-unit id="ffd073c4d4b57bdffaf63feb9479af9d72b5537b" translate="yes" xml:space="preserve">
          <source>Review the Package Directory</source>
          <target state="translated">查看软件包目录</target>
        </trans-unit>
        <trans-unit id="d2675500dacfeaca07a2342d4f73263439a3b526" translate="yes" xml:space="preserve">
          <source>Review the audit report and run recommended commands or investigate further if needed.</source>
          <target state="translated">审查审计报告并运行建议的命令,或在需要时进一步调查。</target>
        </trans-unit>
        <trans-unit id="6f4c47e1d7a407b026342316216e9d6036ae3c46" translate="yes" xml:space="preserve">
          <source>Review the package.json File</source>
          <target state="translated">查看package.json文件</target>
        </trans-unit>
        <trans-unit id="bf287e33d3bc42ae80ccf434b3f8e24d42bbeaa8" translate="yes" xml:space="preserve">
          <source>Review the security advisory in the &quot;More info&quot; field for mitigating factors that may allow you to continue using the package with the vulnerability in limited cases. For example, the vulnerability may only exist when the code is used on specific operating systems, or when a specific function is called.</source>
          <target state="translated">查看 &quot;更多信息 &quot;字段中的安全公告,了解在有限的情况下允许您继续使用存在漏洞的软件包的缓解因素。例如,该漏洞可能只在特定的操作系统上使用代码,或调用特定函数时才存在。</target>
        </trans-unit>
        <trans-unit id="32cf9117bf9b638b577e6d082f1188885b4c4e74" translate="yes" xml:space="preserve">
          <source>Reviewing and acting on the security audit report</source>
          <target state="translated">审查安全审计报告并采取行动</target>
        </trans-unit>
        <trans-unit id="70dc787cf45c2a4d11dc23c626b114dd4a7ed3f7" translate="yes" xml:space="preserve">
          <source>Revoke access:</source>
          <target state="translated">撤销访问。</target>
        </trans-unit>
        <trans-unit id="753d0ce1a5d1bed1ba6e32a27f233dfd120438e9" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;audit fix&lt;/code&gt; without modifying &lt;code&gt;node_modules&lt;/code&gt;, but still updating the pkglock:</source>
          <target state="translated">运行 &lt;code&gt;audit fix&lt;/code&gt; 而不修改 &lt;code&gt;node_modules&lt;/code&gt; ，但仍更新pkglock：</target>
        </trans-unit>
        <trans-unit id="2172715246782b3ff6669a4ad0df825b0c412f98" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;node test.js&lt;/code&gt;. The message sent to the console.log should appear.</source>
          <target state="translated">运行 &lt;code&gt;node test.js&lt;/code&gt; 。将显示发送到console.log的消息。</target>
        </trans-unit>
        <trans-unit id="5433c15f712918179100e2d9992cfdb99a3c0474" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm ci&lt;/code&gt; in that project</source>
          <target state="translated">在该项目中运行 &lt;code&gt;npm ci&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1ce5622333ea59b0fcd764f042a0c2ba3ff08be" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm config ls -l&lt;/code&gt; to see a set of configuration parameters that are internal to npm, and are defaults if nothing else is specified.</source>
          <target state="translated">运行 &lt;code&gt;npm config ls -l&lt;/code&gt; 以查看npm内部的一组配置参数，如果未指定其他参数，则为默认配置。</target>
        </trans-unit>
        <trans-unit id="d31771d0b1d506b3af7e5c6c0a8d4f05569f31a3" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm help&lt;/code&gt; to get a list of available commands.</source>
          <target state="translated">运行 &lt;code&gt;npm help&lt;/code&gt; 以获得可用命令列表。</target>
        </trans-unit>
        <trans-unit id="3ec1a5beee738f7c71a610942212d88c3dbb10cb" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm install &amp;lt;package&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;npm install &amp;lt;package&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="defef9b4d70ca33f8b0e34ad4bbc16d7250e6f6f" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm outdated&lt;/code&gt;. There should not be any results.</source>
          <target state="translated">运行 &lt;code&gt;npm outdated&lt;/code&gt; 。不应有任何结果。</target>
        </trans-unit>
        <trans-unit id="0b2fe025ca20e7bafa70c64e3fcac3c777548cd1" translate="yes" xml:space="preserve">
          <source>Run a security audit.</source>
          <target state="translated">进行安全审计。</target>
        </trans-unit>
        <trans-unit id="02bc6d53ae0cb0474b7b1a30d9ed18f7011372ef" translate="yes" xml:space="preserve">
          <source>Run arbitrary package scripts.</source>
          <target state="translated">运行任意的软件包脚本。</target>
        </trans-unit>
        <trans-unit id="6c25cd961ec153b833b84e944e2151d9563f3651" translate="yes" xml:space="preserve">
          <source>Run git commit hooks when committing the version change.</source>
          <target state="translated">在提交版本变更时运行git提交钩子。</target>
        </trans-unit>
        <trans-unit id="996f9a2189e51e8f28f2cace98faa0a654393392" translate="yes" xml:space="preserve">
          <source>Run git commit hooks when using the &lt;code&gt;npm version&lt;/code&gt; command.</source>
          <target state="translated">使用 &lt;code&gt;npm version&lt;/code&gt; 命令时，请运行git commit hooks 。</target>
        </trans-unit>
        <trans-unit id="d38ada0c12b427ff61f1f02a2cce43164ef969d7" translate="yes" xml:space="preserve">
          <source>Run packages without downloading using &lt;a href=&quot;https://www.npmjs.com/package/npx&quot;&gt;npx&lt;/a&gt;.</source>
          <target state="translated">运行软件包而不使用&lt;a href=&quot;https://www.npmjs.com/package/npx&quot;&gt;npx&lt;/a&gt;下载。</target>
        </trans-unit>
        <trans-unit id="01a824c744d252f63507fe2dd761e47b72240165" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;npm audit fix&lt;/code&gt; subcommand to automatically install compatible updates to vulnerable dependencies.</source>
          <target state="translated">运行 &lt;code&gt;npm audit fix&lt;/code&gt; 子命令以自动将兼容的更新安装到易受攻击的依赖项。</target>
        </trans-unit>
        <trans-unit id="596122604dfa24a3d366e3366e6ecbb199bd1234" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;postversion&lt;/code&gt; script. Use it to clean up the file system or automatically push the commit and/or tag.</source>
          <target state="translated">运行后 &lt;code&gt;postversion&lt;/code&gt; 脚本。用它来清理文件系统或自动推送提交和/或标记。</target>
        </trans-unit>
        <trans-unit id="dc61f5d19f2ae5325a0b571f3f3f4b497d2d3475" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;preversion&lt;/code&gt; script. These scripts have access to the old &lt;code&gt;version&lt;/code&gt; in package.json. A typical use would be running your full test suite before deploying. Any files you want added to the commit should be explicitly added using &lt;code&gt;git add&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;preversion&lt;/code&gt; 脚本。这些脚本可以访问package.json中的旧 &lt;code&gt;version&lt;/code&gt; 。一个典型的用途是在部署之前运行完整的测试套件。您要添加到提交中的所有文件都应使用 &lt;code&gt;git add&lt;/code&gt; 显式添加。</target>
        </trans-unit>
        <trans-unit id="1cdc4e506d77cff50fb14c1e4e801d2a51235e5e" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;version&lt;/code&gt; script. These scripts have access to the new &lt;code&gt;version&lt;/code&gt; in package.json (so they can incorporate it into file headers in generated files for example). Again, scripts should explicitly add generated files to the commit using &lt;code&gt;git add&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;version&lt;/code&gt; 脚本。这些脚本可以访问package.json中的新 &lt;code&gt;version&lt;/code&gt; （例如，它们可以将其合并到生成的文件的文件头中）。同样，脚本应该使用 &lt;code&gt;git add&lt;/code&gt; 将生成的文件显式添加到提交中。</target>
        </trans-unit>
        <trans-unit id="849654052acfef795fefa2251cdd4eb7c63f0759" translate="yes" xml:space="preserve">
          <source>Run the code using &lt;code&gt;node index.js&lt;/code&gt;. It should output &lt;code&gt;[2, 3]&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;node index.js&lt;/code&gt; 运行代码。它应该输出 &lt;code&gt;[2, 3]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbda27eaf8bb4b9acaf49a1a191402170c5642d0" translate="yes" xml:space="preserve">
          <source>Run the recommended commands individually to install updates to vulnerable dependencies. (Some updates may be semver-breaking changes; for more information, see &quot;&lt;a href=&quot;#SEMVER-warnings&quot;&gt;SEMVER warnings&lt;/a&gt;&quot;.)</source>
          <target state="translated">单独运行推荐的命令以将更新安装到易受攻击的依赖项。（某些更新可能是令人震惊的更改；有关更多信息，请参见&amp;ldquo; &lt;a href=&quot;#SEMVER-warnings&quot;&gt;SEMVER警告&lt;/a&gt; &amp;rdquo;。）</target>
        </trans-unit>
        <trans-unit id="161f30847f2a9c7ed9e12341ebe9f6b86eaf44d5" translate="yes" xml:space="preserve">
          <source>Run this in a package directory to bump the version and write the new data back to &lt;code&gt;package.json&lt;/code&gt;, &lt;code&gt;package-lock.json&lt;/code&gt;, and, if present, &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt;.</source>
          <target state="translated">在程序包目录中运行此命令以更改版本，然后将新数据写回到 &lt;code&gt;package.json&lt;/code&gt; ， &lt;code&gt;package-lock.json&lt;/code&gt; 和 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; shrinkwrap.json（如果存在）。</target>
        </trans-unit>
        <trans-unit id="aeccf3af3b11369d9e8273f12883b9abb0e08295" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;npm audit&lt;/code&gt; will produce a report of security vulnerabilities with the affected package name, vulnerability severity and description, path, and other information, and, if available, commands to apply patches to resolve vulnerabilities. For more information on the fields in the audit report, see &quot;&lt;a href=&quot;about-audit-reports&quot;&gt;About audit reports&lt;/a&gt;&quot;</source>
          <target state="translated">运行 &lt;code&gt;npm audit&lt;/code&gt; 将生成有关安全漏洞的报告，其中包括受影响的程序包名称，漏洞严重性和描述，路径以及其他信息，以及（如果有）应用修补程序来解决漏洞的命令。有关审核报告中字段的更多信息，请参阅&amp;ldquo; &lt;a href=&quot;about-audit-reports&quot;&gt;关于审核报告&lt;/a&gt; &amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="09f08209ec1ee26ab4ed8ffb4da2bd47673e8fca" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;npm init&lt;/code&gt; with this file in your home directory would output a &lt;code&gt;package.json&lt;/code&gt; that included these lines:</source>
          <target state="translated">在主目录中对此文件运行 &lt;code&gt;npm init&lt;/code&gt; 会输出 &lt;code&gt;package.json&lt;/code&gt; ，其中包括以下几行：</target>
        </trans-unit>
        <trans-unit id="e70460a4819a4de89196854be7090308b426bea6" translate="yes" xml:space="preserve">
          <source>Running a security audit with &lt;code&gt;npm audit&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;npm audit&lt;/code&gt; 运行安全审核</target>
        </trans-unit>
        <trans-unit id="e4c4aed1ea336bcdbc25d0d607bca83832226781" translate="yes" xml:space="preserve">
          <source>Runtime Variables</source>
          <target state="translated">运行时变量</target>
        </trans-unit>
        <trans-unit id="45ce997598f3a0fe48d7002b2a4c9c8d557c0d91" translate="yes" xml:space="preserve">
          <source>SCRUBBING</source>
          <target state="translated">SCRUBBING</target>
        </trans-unit>
        <trans-unit id="505f7ca14d99f6178bd8d7ce7b3ab5341d142db0" translate="yes" xml:space="preserve">
          <source>SEMVER warnings</source>
          <target state="translated">SEMVER警告</target>
        </trans-unit>
        <trans-unit id="6c8cd7f7cc5f1cecdc088f77927e073347bb2128" translate="yes" xml:space="preserve">
          <source>SSL Error</source>
          <target state="translated">SSL错误</target>
        </trans-unit>
        <trans-unit id="0002d7a3199f285f2649675a114b250418c2ee9c" translate="yes" xml:space="preserve">
          <source>SSL-intercepting proxy</source>
          <target state="translated">SSL拦截代理</target>
        </trans-unit>
        <trans-unit id="461090c1cb4caac6b164733fc122184c69fc580d" translate="yes" xml:space="preserve">
          <source>Save installed packages to a package.json file as &lt;code&gt;devDependencies&lt;/code&gt;.</source>
          <target state="translated">将已安装的软件包作为 &lt;code&gt;devDependencies&lt;/code&gt; 保存到package.json文件中。</target>
        </trans-unit>
        <trans-unit id="aa8c5eff71339751171085ff8863488befd8338a" translate="yes" xml:space="preserve">
          <source>Save installed packages to a package.json file as dependencies.</source>
          <target state="translated">将安装的包保存到package.json文件中作为依赖关系。</target>
        </trans-unit>
        <trans-unit id="bfbee82ad63372420061183be5379622e06c593a" translate="yes" xml:space="preserve">
          <source>Save installed packages to a package.json file as optionalDependencies.</source>
          <target state="translated">将安装的包保存到package.json文件中,作为optionalDependencies。</target>
        </trans-unit>
        <trans-unit id="38ce359dda7732c411a4fbb528cac0f8d057d98c" translate="yes" xml:space="preserve">
          <source>Save it in the project directory with the name &lt;strong&gt;readme.md&lt;/strong&gt;</source>
          <target state="translated">将其保存在项目目录中，名称为&lt;strong&gt;readme.md&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9fed0b950e10979783c95bf0e0bc9c9e3d4ed7e" translate="yes" xml:space="preserve">
          <source>Scan the QR code, or enter the number displayed just below the QR code.</source>
          <target state="translated">扫描二维码,或输入二维码下方显示的数字。</target>
        </trans-unit>
        <trans-unit id="f16f612d9b15b722f3a8982edbbf6f6f30c56da2" translate="yes" xml:space="preserve">
          <source>Scan your project for vulnerabilities and automatically install any compatible updates to vulnerable dependencies:</source>
          <target state="translated">扫描您的项目是否存在漏洞,并自动安装任何兼容的更新到脆弱的依赖。</target>
        </trans-unit>
        <trans-unit id="823959e593d652ad33e51d38a49a1456d183f38f" translate="yes" xml:space="preserve">
          <source>Scan your project for vulnerabilities and just show the details, without fixing anything:</source>
          <target state="translated">扫描你的项目是否存在漏洞,并且只显示细节,不需要修复任何东西。</target>
        </trans-unit>
        <trans-unit id="0d2e9d8e0e86679a6324a4203e29bba1396833f9" translate="yes" xml:space="preserve">
          <source>Scope is optional and follows the usual rules for &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">范围是可选的，并且遵循 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; 的通常规则。</target>
        </trans-unit>
        <trans-unit id="c9c2b4956e38e45e991c3b3c3a00c0de8a2a4bf4" translate="yes" xml:space="preserve">
          <source>Scoped packages &lt;em&gt;default to restricted&lt;/em&gt;, but you can either publish them as public using &lt;code&gt;npm publish --access=public&lt;/code&gt;, or set their access as public using &lt;code&gt;npm access public&lt;/code&gt; after the initial publish.</source>
          <target state="translated">作用域程序包&lt;em&gt;默认为受限&lt;/em&gt;包，但您可以使用 &lt;code&gt;npm publish --access=public&lt;/code&gt; 将它们公开发布，也可以在初始发布后使用 &lt;code&gt;npm access public&lt;/code&gt; 将它们设置为公开访问。</target>
        </trans-unit>
        <trans-unit id="80c304ef918b448f1d30b9168377a0d283cb2c19" translate="yes" xml:space="preserve">
          <source>Scoped packages are installed the same way, except they are grouped together in a sub-folder of the relevant &lt;code&gt;node_modules&lt;/code&gt; folder with the name of that scope prefix by the @ symbol, e.g. &lt;code&gt;npm install @myorg/package&lt;/code&gt; would place the package in &lt;code&gt;{prefix}/node_modules/@myorg/package&lt;/code&gt;. See &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">有作用域的软件包以相同的方式安装，不同之处在于它们在相关的 &lt;code&gt;node_modules&lt;/code&gt; 文件夹的子文件夹中分组在一起，该子文件夹的作用域名称以@符号表示，例如 &lt;code&gt;npm install @myorg/package&lt;/code&gt; 会将软件包放置在 &lt;code&gt;{prefix}/node_modules/@myorg/package&lt;/code&gt; 。有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b80ed383c74cd4ab9d8be06981af701ecac36358" translate="yes" xml:space="preserve">
          <source>Scoped packages are installed to a sub-folder of the regular installation folder, e.g. if your other packages are installed in &lt;code&gt;node_modules/packagename&lt;/code&gt;, scoped modules will be installed in &lt;code&gt;node_modules/@myorg/packagename&lt;/code&gt;. The scope folder (&lt;code&gt;@myorg&lt;/code&gt;) is simply the name of the scope preceded by an &lt;code&gt;@&lt;/code&gt; symbol, and can contain any number of scoped packages.</source>
          <target state="translated">作用域软件包将安装到常规安装文件夹的子文件夹中，例如，如果其他软件包安装在 &lt;code&gt;node_modules/packagename&lt;/code&gt; 中，则作用域模块将安装在 &lt;code&gt;node_modules/@myorg/packagename&lt;/code&gt; 。作用域文件夹（ &lt;code&gt;@myorg&lt;/code&gt; ）只是作用域的名称，其前面带有 &lt;code&gt;@&lt;/code&gt; 符号，并且可以包含任意数量的作用域软件包。</target>
        </trans-unit>
        <trans-unit id="d0a832b3277f5fdd71f4d9a8a1273be78056a1ba" translate="yes" xml:space="preserve">
          <source>Scoped packages can be published and installed as of &lt;code&gt;npm@2&lt;/code&gt; and are supported by the primary npm registry. Unscoped packages can depend on scoped packages and vice versa. The npm client is backwards-compatible with unscoped registries, so it can be used to work with scoped and unscoped registries at the same time.</source>
          <target state="translated">有作用域的软件包可以从 &lt;code&gt;npm@2&lt;/code&gt; 发布和安装，并且受主要npm注册表支持。无作用域的程序包可以取决于作用域程序包，反之亦然。npm客户端与无作用域的注册表向后兼容，因此它可以用于同时作用域和无作用域的注册表。</target>
        </trans-unit>
        <trans-unit id="878d5c700fa44486c3998bc7469344ee5cc3084d" translate="yes" xml:space="preserve">
          <source>Scoped packages can be published from the CLI as of &lt;code&gt;npm@2&lt;/code&gt; and can be published to any registry that supports them, including the primary npm registry.</source>
          <target state="translated">可以从 &lt;code&gt;npm@2&lt;/code&gt; 从CLI发布作用域包，并且可以将其发布到支持它们的任何注册表中，包括主要npm注册表。</target>
        </trans-unit>
        <trans-unit id="1ddac0f111c52f1d09db58fbda7b8ddad5247900" translate="yes" xml:space="preserve">
          <source>Scoped packages.</source>
          <target state="translated">范围内的包。</target>
        </trans-unit>
        <trans-unit id="1ba211012575aed0a5d55955443227cd6ac1626b" translate="yes" xml:space="preserve">
          <source>Scopes are a way of grouping related packages together, and also affect a few things about the way npm treats the package.</source>
          <target state="translated">作用域是一种将相关包分组的方式,也会影响到npm处理包的一些方式。</target>
        </trans-unit>
        <trans-unit id="ca8317edd1da691b6bda94ee280f7dd92f5f0a15" translate="yes" xml:space="preserve">
          <source>Scopes are used to group related packages together, and to create a namespace, like a domain, for npm modules. This is explained in more detail &lt;a href=&quot;../misc/scope&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">范围用于将相关的软件包组合在一起，并为npm模块创建名称空间（如域）。这将在&lt;a href=&quot;../misc/scope&quot;&gt;此处&lt;/a&gt;更详细地说明。</target>
        </trans-unit>
        <trans-unit id="56a715f95dcd56820a7212bb502da11a366e7562" translate="yes" xml:space="preserve">
          <source>Scopes can be associated with a separate registry. This allows you to seamlessly use a mix of packages from the primary npm registry and one or more private registries, such as npm Enterprise.</source>
          <target state="translated">作用域可以与一个单独的注册表关联。这让您可以无缝地使用主 npm 注册表和一个或多个私有注册表(如 npm Enterprise)中的包。</target>
        </trans-unit>
        <trans-unit id="ec497fe085268834a26703d8be2dbf4791f1f3f7" translate="yes" xml:space="preserve">
          <source>Scopes have a many-to-one relationship with registries: one registry can host multiple scopes, but a scope only ever points to one registry.</source>
          <target state="translated">作用域与注册表有多对一的关系:一个注册表可以托管多个作用域,但一个作用域永远只指向一个注册表。</target>
        </trans-unit>
        <trans-unit id="4b3e65d81adb9a9a93c8a062ff261cf8db4d928e" translate="yes" xml:space="preserve">
          <source>Scripts are run by passing the line as a script argument to &lt;code&gt;sh&lt;/code&gt;.</source>
          <target state="translated">通过将行作为脚本参数传递给 &lt;code&gt;sh&lt;/code&gt; 来运行脚本。</target>
        </trans-unit>
        <trans-unit id="4566538bd91d1cab1b125a700e9e073346d1271d" translate="yes" xml:space="preserve">
          <source>Scripts are run from the root of the module, regardless of what your current working directory is when you call &lt;code&gt;npm run&lt;/code&gt;. If you want your script to use different behavior based on what subdirectory you're in, you can use the &lt;code&gt;INIT_CWD&lt;/code&gt; environment variable, which holds the full path you were in when you ran &lt;code&gt;npm run&lt;/code&gt;.</source>
          <target state="translated">脚本从模块的根目录运行，而不管调用 &lt;code&gt;npm run&lt;/code&gt; 时当前的工作目录是什么。如果您希望脚本根据所处的子目录使用不同的行为，则可以使用 &lt;code&gt;INIT_CWD&lt;/code&gt; 环境变量，该变量保存了您运行 &lt;code&gt;npm run&lt;/code&gt; 时的完整路径。</target>
        </trans-unit>
        <trans-unit id="194f4eaa95ef3a0e6ca0c7940ed7c37ca9c8444a" translate="yes" xml:space="preserve">
          <source>Scroll down to the Security section:</source>
          <target state="translated">向下滚动到安全部分。</target>
        </trans-unit>
        <trans-unit id="1ea7081717da773c2044f2fc4df050dd2e8a4c2e" translate="yes" xml:space="preserve">
          <source>Search also allows targeting of maintainers in search results, by prefixing their npm username with &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">搜索还可以通过在维护者的npm用户名前面加上 &lt;code&gt;=&lt;/code&gt; 来定位维护者。</target>
        </trans-unit>
        <trans-unit id="13754a90c4af0c594d930e06c12e7ba0993453ac" translate="yes" xml:space="preserve">
          <source>Search for packages.</source>
          <target state="translated">搜索套餐。</target>
        </trans-unit>
        <trans-unit id="efdc6b1b12a9c4af49266a7bd4f39d11b3521e91" translate="yes" xml:space="preserve">
          <source>Search npm help documentation.</source>
          <target state="translated">搜索npm帮助文档。</target>
        </trans-unit>
        <trans-unit id="ee375c06a9da05fc11f2ea9acc1e5c12bb61bb2b" translate="yes" xml:space="preserve">
          <source>Search the registry for packages matching the search terms. &lt;code&gt;npm search&lt;/code&gt; performs a linear, incremental, lexically-ordered search through package metadata for all files in the registry. If color is enabled, it will further highlight the matches in the results.</source>
          <target state="translated">在注册表中搜索与搜索词匹配的软件包。 &lt;code&gt;npm search&lt;/code&gt; 通过软件包元数据对注册表中的所有文件执行线性，增量，按词法排序的搜索。如果启用了颜色，它将进一步突出显示结果中的匹配项。</target>
        </trans-unit>
        <trans-unit id="7e514d294a2d2b2309310795bb0cca3fb3a679f5" translate="yes" xml:space="preserve">
          <source>Search the specified registry for modules. If you have configured npm to point to a different default registry, such as your internal private module repository, &lt;code&gt;npm search&lt;/code&gt; will default to that registry when searching. Pass a different registry url such as the default above in order to override this setting.</source>
          <target state="translated">在指定的注册表中搜索模块。如果已将npm配置为指向其他默认注册表，例如内部专用模块存储库，则 &lt;code&gt;npm search&lt;/code&gt; 将在搜索时默认为该注册表。传递不同的注册表URL，例如上面的默认值，以覆盖此设置。</target>
        </trans-unit>
        <trans-unit id="0001446edd628547fcc10370d040ec918c912963" translate="yes" xml:space="preserve">
          <source>Searches the local package tree and attempts to simplify the overall structure by moving dependencies further up the tree, where they can be more effectively shared by multiple dependent packages.</source>
          <target state="translated">搜索本地软件包树,并试图通过将依赖关系移到树的更上层来简化整体结构,在这里,它们可以更有效地被多个依赖的软件包共享。</target>
        </trans-unit>
        <trans-unit id="2a2688cc05e5bbd30eadc6166edec3cc1b4883d6" translate="yes" xml:space="preserve">
          <source>Second, a user who has opted into using a prerelease version has clearly indicated the intent to use &lt;em&gt;that specific&lt;/em&gt; set of alpha/beta/rc versions. By including a prerelease tag in the range, the user is indicating that they are aware of the risk. However, it is still not appropriate to assume that they have opted into taking a similar risk on the &lt;em&gt;next&lt;/em&gt; set of prerelease versions.</source>
          <target state="translated">其次，选择使用预发行版本的用户清楚地表明了使用&lt;em&gt;该特定&lt;/em&gt;的alpha / beta / rc版本集的意图。通过在该范围中包含预发布标签，用户表示他们已经意识到风险。但是，仍然不适合假定他们选择对&lt;em&gt;下一&lt;/em&gt;组预发行版本承担类似的风险。</target>
        </trans-unit>
        <trans-unit id="4038eb9e4d24e941073fa3a0af29971f59601939" translate="yes" xml:space="preserve">
          <source>Security vulnerabilities found requiring manual review</source>
          <target state="translated">发现安全漏洞需要人工审查</target>
        </trans-unit>
        <trans-unit id="fadeca695d3adbb81ef61a8116592c44f28d2a37" translate="yes" xml:space="preserve">
          <source>Security vulnerabilities found with suggested updates</source>
          <target state="translated">发现安全漏洞,建议更新</target>
        </trans-unit>
        <trans-unit id="e5476e575cdf7b111fa68f17052225e456894c87" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../cli/dist-tag&quot;&gt;this CLI doc&lt;/a&gt; for more about tags. See &lt;a href=&quot;semantic-versioning&quot;&gt;Chapter 13&lt;/a&gt; for more about semantic versioning.</source>
          <target state="translated">有关标签的更多信息，请参&lt;a href=&quot;../cli/dist-tag&quot;&gt;见此CLI文档&lt;/a&gt;。有关语义版本控制的更多信息，请参见&lt;a href=&quot;semantic-versioning&quot;&gt;第13章&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f3418a57e134606990630d3a207036ba556e5b6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt; for a more detailed description of the specific folder structures that npm creates.</source>
          <target state="translated">有关npm创建的特定文件夹结构的详细说明，请参见&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ce690cc7d2e281be7684af285aac0e027240382" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f00afd2e8b38ce0ca9809032453f5d6a06a1b1c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt; for more information about the npmrc files.</source>
          <target state="translated">有关npmrc文件的更多信息，请参见&lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="57cea681ddfc20d5c1233fc589edfe5d508428d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt; for more information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e6dc483383cbdcf6738ff185852960f381b6eac" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../misc/semver&quot;&gt;semver&lt;/a&gt; for more details about specifying version ranges.</source>
          <target state="translated">有关指定版本范围的更多详细信息，请参见&lt;a href=&quot;../misc/semver&quot;&gt;semver&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0707efc68640f87de0d2a2f841e0b1caa7b6a5a7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/npm/npm/issues/10074&quot;&gt;https://github.com/npm/npm/issues/10074&lt;/a&gt; for a much lengthier justification, with further reading, for this change.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://github.com/npm/npm/issues/10074&quot;&gt;https://github.com/npm/npm/issues/10074，&lt;/a&gt;以获得更长时间的理由，并请继续阅读此更改。</target>
        </trans-unit>
        <trans-unit id="19351099f8b78be668a399f00bdfa227ede489ef" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/npm/npm/issues/6641#issuecomment-72984009&quot;&gt;https://github.com/npm/npm/issues/6641#issuecomment-72984009&lt;/a&gt; for the history of this issue.</source>
          <target state="translated">有关此问题的历史记录，请参见&lt;a href=&quot;https://github.com/npm/npm/issues/6641#issuecomment-72984009&quot;&gt;https://github.com/npm/npm/issues/6641#issuecomment-72984009&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="29cd4927b63197fb4cf96f991305d5c68fd8d759" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/npm/npm/issues/7590&quot;&gt;https://github.com/npm/npm/issues/7590&lt;/a&gt; for more about this unusual problem.</source>
          <target state="translated">有关此异常问题的更多信息，请参见&lt;a href=&quot;https://github.com/npm/npm/issues/7590&quot;&gt;https://github.com/npm/npm/issues/7590&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f693a3ddb191c5db96b0443a0a2b2dd0d3bfa67" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../cli/cache&quot;&gt;npm-cache&lt;/a&gt;&lt;/code&gt;. Cache files are stored in &lt;code&gt;~/.npm&lt;/code&gt; on Posix, or &lt;code&gt;%AppData%/npm-cache&lt;/code&gt; on Windows.</source>
          <target state="translated">参见 &lt;code&gt;&lt;a href=&quot;../cli/cache&quot;&gt;npm-cache&lt;/a&gt;&lt;/code&gt; 。缓存文件存储在Posix上的 &lt;code&gt;~/.npm&lt;/code&gt; 中，或Windows上的 &lt;code&gt;%AppData%/npm-cache&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="b5ccac1ce444a2b70960cada2b65850e809beacf" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt; to learn about where npm puts stuff.</source>
          <target state="translated">请参阅 &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt; ,以了解npm放置内容的位置。</target>
        </trans-unit>
        <trans-unit id="49465df7df0ca1acb679873a0928ca746da2dacc" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; for details about what goes in that file. At the very least, you need:</source>
          <target state="translated">有关该文件中内容的详细信息，请参见 &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; 。至少，您需要：</target>
        </trans-unit>
        <trans-unit id="bedb2691da570e501d5f5f151bce353b13376c7a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; for more info on what goes in the package.json file.</source>
          <target state="translated">有关 &lt;code&gt;&lt;a href=&quot;../files/package.json&quot;&gt;package.json&lt;/a&gt;&lt;/code&gt; 文件中内容的更多信息，请参见package.json。</target>
        </trans-unit>
        <trans-unit id="cb25437c987a6a9b5e87b069cf89c95e539334d1" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt; for more on package configs.</source>
          <target state="translated">有关软件包配置的更多信息，请参见 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed148c47542cb4a11ca50df8bea9445ad65cae1a" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; for a more thorough discussion of the mechanisms involved.</source>
          <target state="translated">请参阅 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; ，以更全面地讨论所涉及的机制。</target>
        </trans-unit>
        <trans-unit id="d7a7e4fd7be754d6bcd9381e25d67e27e4d6868c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; for much much more information.</source>
          <target state="translated">有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="068f68ccdeabb962c6d4cc649b709b21a7a8721d" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; to see the list of config options that can be overridden.</source>
          <target state="translated">请参阅 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; 查看可以覆盖的配置选项列表。</target>
        </trans-unit>
        <trans-unit id="c04e818840e61d31f0c2a2f3a6cb9ce5d1d0ef59" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt;. Many of the configuration params have some effect on installation, since that's most of what npm does.</source>
          <target state="translated">参见 &lt;code&gt;&lt;a href=&quot;../misc/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; 。许多配置参数都会对安装产生影响，因为这是npm的大部分工作。</target>
        </trans-unit>
        <trans-unit id="c77a0f4fdb21cad28bac1e43bd4200002075bd9b" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt; to find out more about writing package scripts.</source>
          <target state="translated">请参阅 &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt; 以了解有关编写程序包脚本的更多信息。</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="6728a06fce96e2a69edad909a90fcb0a1b34f88f" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;ca&lt;/code&gt; config.</source>
          <target state="translated">另请参见 &lt;code&gt;ca&lt;/code&gt; config。</target>
        </trans-unit>
        <trans-unit id="0ccc534308ffd27ed7a94c40e6ac006ec11cb53b" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;strict-ssl&lt;/code&gt; config.</source>
          <target state="translated">另请参阅 &lt;code&gt;strict-ssl&lt;/code&gt; 配置。</target>
        </trans-unit>
        <trans-unit id="98e0825802523b60a2deba5c1cd4763160f508a3" translate="yes" xml:space="preserve">
          <source>See npm's Laurie Voss on &lt;a href=&quot;https://www.youtube.com/watch?v=JIJZnF_L5KI&quot;&gt;&quot;Stuff Everybody Knows Except You&quot;&lt;/a&gt; if you are feeling overwhelmed in your dev learning. It will make you realize you are not alone!</source>
          <target state="translated">如果您在开发学习中感到不知所措，请参阅npm的Laurie Voss的&lt;a href=&quot;https://www.youtube.com/watch?v=JIJZnF_L5KI&quot;&gt;&amp;ldquo;所有人都知道您以外的东西&amp;rdquo;&lt;/a&gt;。这会让您意识到自己并不孤单！</target>
        </trans-unit>
        <trans-unit id="591e65ab472c75b1d3a933bdf1e9d717966dffec" translate="yes" xml:space="preserve">
          <source>See packages available to a specific team:</source>
          <target state="translated">查看可用于特定团队的套餐。</target>
        </trans-unit>
        <trans-unit id="6ad24e0052ca68e941e5c370a80605d1d742eafc" translate="yes" xml:space="preserve">
          <source>See the git man page for details.</source>
          <target state="translated">详情请看git man页面。</target>
        </trans-unit>
        <trans-unit id="ac00eb12650f8b2e083455b7e72d4b5918324395" translate="yes" xml:space="preserve">
          <source>See the section about Windows &lt;a href=&quot;try-the-latest-stable-version-of-npm&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;try-the-latest-stable-version-of-npm&quot;&gt;此处&lt;/a&gt;有关Windows的部分。</target>
        </trans-unit>
        <trans-unit id="539ba302f8356567804f6034c3dfd652213febfb" translate="yes" xml:space="preserve">
          <source>See what org packages a team member can access:</source>
          <target state="translated">查看团队成员可以访问哪些组织包。</target>
        </trans-unit>
        <trans-unit id="5ca88775fad03496e5af93c42e34fe100f9baf43" translate="yes" xml:space="preserve">
          <source>See what version of node you're running:</source>
          <target state="translated">看看你正在运行什么版本的node。</target>
        </trans-unit>
        <trans-unit id="4bbca8c99f7afd58feab59adcec7558736a39d32" translate="yes" xml:space="preserve">
          <source>See what version of npm you're running:</source>
          <target state="translated">看看你运行的是什么版本的npm。</target>
        </trans-unit>
        <trans-unit id="f92990449aaa4629e74d755d40bef0ba93bf28b3" translate="yes" xml:space="preserve">
          <source>Select &quot;Agree to the End User License Agreement and the Privacy Policy&quot;.</source>
          <target state="translated">选择 &quot;同意最终用户许可协议和隐私政策&quot;。</target>
        </trans-unit>
        <trans-unit id="1158dc6391ca1c282b0274da233e5b47974ab44c" translate="yes" xml:space="preserve">
          <source>Semicolons</source>
          <target state="translated">Semicolons</target>
        </trans-unit>
        <trans-unit id="00c42c3e7de3724fc6d9fb808c873dc974a206f5" translate="yes" xml:space="preserve">
          <source>Semver for Consumers</source>
          <target state="translated">消费者的Semver</target>
        </trans-unit>
        <trans-unit id="ab2e24b7e0c535895ee385225e666cff18980438" translate="yes" xml:space="preserve">
          <source>Semver for Publishers</source>
          <target state="translated">Semver for Publishers</target>
        </trans-unit>
        <trans-unit id="24e61b13031486e9c2915dce86beec039fd97ebe" translate="yes" xml:space="preserve">
          <source>Send emails, write blogs, blab in IRC.</source>
          <target state="translated">发邮件,写博客,在IRC里大肆宣传。</target>
        </trans-unit>
        <trans-unit id="c4e4024d87e4b8bdde0ad0e16112a99835e697f1" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;&quot;private&quot;: true&lt;/code&gt; in your package.json to prevent it from being published at all, or &lt;code&gt;&quot;publishConfig&quot;:{&quot;registry&quot;:&quot;http://my-internal-registry.local&quot;}&lt;/code&gt; to force it to be published only to your internal registry.</source>
          <target state="translated">在您的package.json中设置 &lt;code&gt;&quot;private&quot;: true&lt;/code&gt; 以完全阻止发布，或在 &lt;code&gt;&quot;publishConfig&quot;:{&quot;registry&quot;:&quot;http://my-internal-registry.local&quot;}&lt;/code&gt; 以强制发布仅限于您的内部注册表。</target>
        </trans-unit>
        <trans-unit id="afadf66105c2d424d96277bb9e9c03761f5c0891" translate="yes" xml:space="preserve">
          <source>Set access level on published packages.</source>
          <target state="translated">设置发布包的访问级别。</target>
        </trans-unit>
        <trans-unit id="afaebb0269791d5c0781aa977de680df01ce01ca" translate="yes" xml:space="preserve">
          <source>Set the NODE_ENV=&quot;production&quot; for lifecycle scripts.</source>
          <target state="translated">为生命周期脚本设置NODE_ENV=&quot;production&quot;。</target>
        </trans-unit>
        <trans-unit id="5c6dc23f781a0702df54026e1d55aa04252179b4" translate="yes" xml:space="preserve">
          <source>Set the tmp folder somewhere with more space: &lt;code&gt;npm config set tmp /path/to/big/drive/tmp&lt;/code&gt; or</source>
          <target state="translated">将tmp文件夹设置在具有更多空间的位置： &lt;code&gt;npm config set tmp /path/to/big/drive/tmp&lt;/code&gt; 或</target>
        </trans-unit>
        <trans-unit id="14a2082247f85aa92c14e01f8a0b6ca326567197" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&quot;browser&quot;&lt;/code&gt; to view html help content in the default web browser.</source>
          <target state="translated">设置为 &lt;code&gt;&quot;browser&quot;&lt;/code&gt; 以在默认的Web浏览器中查看html帮助内容。</target>
        </trans-unit>
        <trans-unit id="2b8a559c9272e2572044f52cbf786cbb8e4c4960" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;false&lt;/code&gt; to suppress the progress bar.</source>
          <target state="translated">设置为 &lt;code&gt;false&lt;/code&gt; 可取消进度条。</target>
        </trans-unit>
        <trans-unit id="e5a44fd5277da40d24adb1fb317fbbc257d64850" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;null&lt;/code&gt; to only allow &quot;known&quot; registrars, or to a specific CA cert to trust only that specific signing authority.</source>
          <target state="translated">设置为 &lt;code&gt;null&lt;/code&gt; 仅允许&amp;ldquo;已知&amp;rdquo;注册商，或者设置为特定的CA证书仅信任该特定的签名机构。</target>
        </trans-unit>
        <trans-unit id="92b3bf68c92e27291ee1f0677f4bdfce91fe452f" translate="yes" xml:space="preserve">
          <source>Set to false to have it not do this. This can be used to work around the fact that some file systems don't support symlinks, even on ostensibly Unix systems.</source>
          <target state="translated">设置为false则不会这样做。这可以用来解决一些文件系统不支持符号链接的问题,即使在表面上是Unix系统。</target>
        </trans-unit>
        <trans-unit id="139facd4b364d5d20809bbef59ead372c68d4ab3" translate="yes" xml:space="preserve">
          <source>Set to false to suppress the update notification when using an older version of npm than the latest.</source>
          <target state="translated">设置为false,当使用比最新版本更老的npm时,将抑制更新通知。</target>
        </trans-unit>
        <trans-unit id="9f7bb44dcff69f30546131c82c29d240a7f10555" translate="yes" xml:space="preserve">
          <source>Set to show short usage output (like the -H output) instead of complete help when doing &lt;code&gt;&lt;a href=&quot;../cli/help&quot;&gt;npm-help&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">设置为在执行 &lt;code&gt;&lt;a href=&quot;../cli/help&quot;&gt;npm-help&lt;/a&gt;&lt;/code&gt; 时显示简短用法输出（如-H输出），而不是完整的帮助。</target>
        </trans-unit>
        <trans-unit id="16987c383ebd923f1d5b421a524fc920e9d5165a" translate="yes" xml:space="preserve">
          <source>Set to true to run in &quot;production&quot; mode.</source>
          <target state="translated">设置为 &quot;true&quot;,以 &quot;生产 &quot;模式运行。</target>
        </trans-unit>
        <trans-unit id="02a624fc66a10ac7aa1ba2e63b69da0cc8ba04fc" translate="yes" xml:space="preserve">
          <source>Set to true to suppress the UID/GID switching when running package scripts. If set explicitly to false, then installing as a non-root user will fail.</source>
          <target state="translated">设置为true,在运行软件包脚本时,抑制UID/GID的切换,如果明确设置为false,则以非root用户身份安装会失败。如果明确设置为false,则以非root用户安装会失败。</target>
        </trans-unit>
        <trans-unit id="7d74a6ca9091dbe07ae9ffcfce5959ddf3eb500b" translate="yes" xml:space="preserve">
          <source>Set up Two-Factor Authentication</source>
          <target state="translated">设置双因素认证</target>
        </trans-unit>
        <trans-unit id="5810f608b34f2961495bba4487be42102aede40e" translate="yes" xml:space="preserve">
          <source>Set up a custom &lt;a href=&quot;../files/npmrc&quot;&gt;&lt;code&gt;.npmrc&lt;/code&gt;&lt;/a&gt; file in your project folder. Use this to authenticate the CI or deployment server with npm.</source>
          <target state="translated">在您的项目文件夹中设置一个自定义&lt;a href=&quot;../files/npmrc&quot;&gt; &lt;code&gt;.npmrc&lt;/code&gt; &lt;/a&gt;文件。使用它来通过npm对CI或部署服务器进行身份验证。</target>
        </trans-unit>
        <trans-unit id="66277ac5082cf2c36d95089ef351ef483cc8bd44" translate="yes" xml:space="preserve">
          <source>Set up a project-specific .npmrc file.</source>
          <target state="translated">设置一个项目专用的.npmrc文件。</target>
        </trans-unit>
        <trans-unit id="f85de56ec473570ab17d3271f643b8a7856bd7db" translate="yes" xml:space="preserve">
          <source>Sets a User-Agent to the request header</source>
          <target state="translated">将User-Agent设置为请求头。</target>
        </trans-unit>
        <trans-unit id="68abd901953f7ef065bb08bf1ee578acd1a995bc" translate="yes" xml:space="preserve">
          <source>Sets the config key to the value.</source>
          <target state="translated">将配置键设置为该值。</target>
        </trans-unit>
        <trans-unit id="88f581f1e4865b65dc39097a4ef1fe5bbd2d100c" translate="yes" xml:space="preserve">
          <source>Setting up Your Profile from the Web</source>
          <target state="translated">从网络上设置您的个人资料</target>
        </trans-unit>
        <trans-unit id="5a2aa3d7af35dca44faa50a4cab86801973a95fa" translate="yes" xml:space="preserve">
          <source>Setting up a project-specific .npmrc file</source>
          <target state="translated">设置一个项目专用的.npmrc文件。</target>
        </trans-unit>
        <trans-unit id="66c40d93a2e3e880224cbbfeffde4790ac199db9" translate="yes" xml:space="preserve">
          <source>Setting up environment variables</source>
          <target state="translated">设置环境变量</target>
        </trans-unit>
        <trans-unit id="265cac77c2a718274b5fd059a0f9e0a32d851eab" translate="yes" xml:space="preserve">
          <source>Setting up your package</source>
          <target state="translated">设置您的软件包</target>
        </trans-unit>
        <trans-unit id="de314fa0c9d9e359b633f2fdab4659c886fe5986" translate="yes" xml:space="preserve">
          <source>Severity</source>
          <target state="translated">Severity</target>
        </trans-unit>
        <trans-unit id="50f658dfae2e844e5c2537abd17c07b2174a1ee3" translate="yes" xml:space="preserve">
          <source>Share code with any npm user, any where.</source>
          <target state="translated">与任何地方的任何npm用户共享代码。</target>
        </trans-unit>
        <trans-unit id="6230b86d3e21a933c301f7b26875030a34f1cbe5" translate="yes" xml:space="preserve">
          <source>Sharing access from the CLI</source>
          <target state="translated">从CLI共享访问</target>
        </trans-unit>
        <trans-unit id="6570379c9051481e9acc5d844560d6a0db92c331" translate="yes" xml:space="preserve">
          <source>Sharing access from the web</source>
          <target state="translated">从网络上共享访问</target>
        </trans-unit>
        <trans-unit id="7d2bada589e0b8f9633057dc287e02695f3b8642" translate="yes" xml:space="preserve">
          <source>Shorthands and Other CLI Niceties</source>
          <target state="translated">速记和其他CLI技巧</target>
        </trans-unit>
        <trans-unit id="50608625215edcf3e895a754978c7b167b82054c" translate="yes" xml:space="preserve">
          <source>Show all the config settings. Use &lt;code&gt;-l&lt;/code&gt; to also show defaults. Use &lt;code&gt;--json&lt;/code&gt; to show the settings in json format.</source>
          <target state="translated">显示所有配置设置。使用 &lt;code&gt;-l&lt;/code&gt; 还显示默认值。使用 &lt;code&gt;--json&lt;/code&gt; 以json格式显示设置。</target>
        </trans-unit>
        <trans-unit id="f86f68d53730dcb2d989ecfc6a2584eda40184e0" translate="yes" xml:space="preserve">
          <source>Show extended information in &lt;code&gt;npm ls&lt;/code&gt; and &lt;code&gt;npm search&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;npm ls&lt;/code&gt; 和 &lt;code&gt;npm search&lt;/code&gt; 中显示扩展信息。</target>
        </trans-unit>
        <trans-unit id="4aea8dcffd47c6faeaa90777b00d2cad5a33b18c" translate="yes" xml:space="preserve">
          <source>Show extended information.</source>
          <target state="translated">显示扩展信息。</target>
        </trans-unit>
        <trans-unit id="b9f788a4689fd91b9f0e5796cdc5ffb9f8fa5638" translate="yes" xml:space="preserve">
          <source>Show information in JSON format.</source>
          <target state="translated">以JSON格式显示信息。</target>
        </trans-unit>
        <trans-unit id="23e7dd597dcb23113fa12f9737745deeeb31c2a3" translate="yes" xml:space="preserve">
          <source>Show parseable output instead of tree view.</source>
          <target state="translated">显示可解析的输出,而不是树状视图。</target>
        </trans-unit>
        <trans-unit id="335dc1dd3528fd5184ae2cd97d35001dde9bdbbf" translate="yes" xml:space="preserve">
          <source>Show the description in &lt;code&gt;npm search&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;npm search&lt;/code&gt; 中显示说明</target>
        </trans-unit>
        <trans-unit id="fc3a34b0ab50c48e1dadc3f510b4033d4f6f50b0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;npm@1.1.71&lt;/code&gt;, the npm CLI has run the &lt;code&gt;prepublish&lt;/code&gt; script for both &lt;code&gt;npm publish&lt;/code&gt; and &lt;code&gt;npm install&lt;/code&gt;, because it's a convenient way to prepare a package for use (some common use cases are described in the section below). It has also turned out to be, in practice, &lt;a href=&quot;https://github.com/npm/npm/issues/10074&quot;&gt;very confusing&lt;/a&gt;. As of &lt;code&gt;npm@4.0.0&lt;/code&gt;, a new event has been introduced, &lt;code&gt;prepare&lt;/code&gt;, that preserves this existing behavior. A &lt;em&gt;new&lt;/em&gt; event, &lt;code&gt;prepublishOnly&lt;/code&gt; has been added as a transitional strategy to allow users to avoid the confusing behavior of existing npm versions and only run on &lt;code&gt;npm publish&lt;/code&gt; (for instance, running the tests one last time to ensure they're in good shape).</source>
          <target state="translated">从 &lt;code&gt;npm@1.1.71&lt;/code&gt; 开始，npm CLI 为 &lt;code&gt;npm publish&lt;/code&gt; 和 &lt;code&gt;npm install&lt;/code&gt; 都运行了 &lt;code&gt;prepublish&lt;/code&gt; 脚本，因为这是准备要使用的软件包的便捷方法（以下部分介绍了一些常用的用例）。在实践中，这也&lt;a href=&quot;https://github.com/npm/npm/issues/10074&quot;&gt;令人非常困惑&lt;/a&gt;。从 &lt;code&gt;npm@4.0.0&lt;/code&gt; 开始，引入了一个新事件 &lt;code&gt;prepare&lt;/code&gt; ，保留了此现有行为。一个&lt;em&gt;新的&lt;/em&gt;事件， &lt;code&gt;prepublishOnly&lt;/code&gt; 已作为一个过渡性的策略，让用户避免现有NPM版本的混淆行为，只有在运行 &lt;code&gt;npm publish&lt;/code&gt; &lt;em&gt;&lt;/em&gt; （例如，最后一次运行测试以确保其状态良好）。</target>
        </trans-unit>
        <trans-unit id="eb9a50fd9c9ed736cfb51fbea951455f2aa96af2" translate="yes" xml:space="preserve">
          <source>Since foo depends directly on &lt;code&gt;bar@1.2.3&lt;/code&gt; and &lt;code&gt;baz@1.2.3&lt;/code&gt;, those are installed in foo's &lt;code&gt;node_modules&lt;/code&gt; folder.</source>
          <target state="translated">由于foo直接取决于 &lt;code&gt;bar@1.2.3&lt;/code&gt; 和 &lt;code&gt;baz@1.2.3&lt;/code&gt; ，因此它们将安装在foo的 &lt;code&gt;node_modules&lt;/code&gt; 文件夹中。</target>
        </trans-unit>
        <trans-unit id="1742667130787e11105a741bd00dc714f73df603" translate="yes" xml:space="preserve">
          <source>Since npm and node.js products are managed by different entities, updates and maintenance can become complex. Also, the Node.js installation process installs npm in a directory that only has local permissions. This can cause permissions errors when you attempt to run packages globally.</source>
          <target state="translated">由于npm和node.js产品由不同的实体管理,更新和维护可能会变得复杂。另外,Node.js安装过程会将npm安装在一个只有本地权限的目录中。当你试图全局运行包时,这可能会导致权限错误。</target>
        </trans-unit>
        <trans-unit id="dab40f38db8576f498762633cc7833ce2173eeaa" translate="yes" xml:space="preserve">
          <source>Skip updating &lt;code&gt;devDependencies&lt;/code&gt;:</source>
          <target state="translated">跳过更新 &lt;code&gt;devDependencies&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9d10e3d30daf74708d27ff2f8ef786c8e1e0468e" translate="yes" xml:space="preserve">
          <source>So sad to see you go.</source>
          <target state="translated">看到你走了,我很难过。</target>
        </trans-unit>
        <trans-unit id="18a0269765b430ec3ad1d182d72ebea91527582e" translate="yes" xml:space="preserve">
          <source>So, &lt;code&gt;node-foo&lt;/code&gt; and &lt;code&gt;bar-js&lt;/code&gt; are bad names. &lt;code&gt;foo&lt;/code&gt; or &lt;code&gt;bar&lt;/code&gt; are better.</source>
          <target state="translated">因此， &lt;code&gt;node-foo&lt;/code&gt; 和 &lt;code&gt;bar-js&lt;/code&gt; 是不好的名字。 &lt;code&gt;foo&lt;/code&gt; 或 &lt;code&gt;bar&lt;/code&gt; 更好。</target>
        </trans-unit>
        <trans-unit id="e572f16838fcd87f7931770dabebfd87ab778369" translate="yes" xml:space="preserve">
          <source>So, when you install myapp, it'll create a symlink from the &lt;code&gt;cli.js&lt;/code&gt; script to &lt;code&gt;/usr/local/bin/myapp&lt;/code&gt;.</source>
          <target state="translated">因此，在安装myapp时，它将创建从 &lt;code&gt;cli.js&lt;/code&gt; 脚本到 &lt;code&gt;/usr/local/bin/myapp&lt;/code&gt; 的符号链接。</target>
        </trans-unit>
        <trans-unit id="b415b077f5f381d3ed958da1dd305810dcc37144" translate="yes" xml:space="preserve">
          <source>So, why is it the &lt;code&gt;node_modules&lt;/code&gt; folder, but &lt;code&gt;package.json&lt;/code&gt; file? Why not &lt;code&gt;node_packages&lt;/code&gt; or &lt;code&gt;module.json&lt;/code&gt;?</source>
          <target state="translated">那么，为什么它是 &lt;code&gt;node_modules&lt;/code&gt; 文件夹，却是 &lt;code&gt;package.json&lt;/code&gt; 文件？为什么不使用 &lt;code&gt;node_packages&lt;/code&gt; 或 &lt;code&gt;module.json&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="16fe17d85e879e305e475a4e186e7fa35ac6885d" translate="yes" xml:space="preserve">
          <source>So, you've decided to use npm to develop (and maybe publish/deploy) your project.</source>
          <target state="translated">所以,你决定使用npm来开发(也许还可以发布/部署)你的项目。</target>
        </trans-unit>
        <trans-unit id="379d8333e2a56f51fdc40c8e4a7e282e2d90c27c" translate="yes" xml:space="preserve">
          <source>Some examples of good semicolon usage:</source>
          <target state="translated">一些好的分号用法的例子。</target>
        </trans-unit>
        <trans-unit id="8b920904a0223353e5df169614a06089a6fd4aec" translate="yes" xml:space="preserve">
          <source>Some of you may be installing from private package registries for your project or company. That's great! Others of you may be following tutorials or StackOverflow questions in an effort to troubleshoot problems you may be having. Sometimes, this may entail changing the registry you're pointing at. This part of &lt;code&gt;npm doctor&lt;/code&gt; just lets you, and maybe whoever's helping you with support, know that you're not using the default registry.</source>
          <target state="translated">某些人可能是从私有软件包注册表为您的项目或公司安装的。那很棒！你们中的其他人可能正在关注教程或StackOverflow问题，以解决您可能遇到的问题。有时，这可能需要更改您指向的注册表。 &lt;code&gt;npm doctor&lt;/code&gt; 的这一部分只是让您（也许是任何帮助您获得支持的人）知道您没有使用默认注册表。</target>
        </trans-unit>
        <trans-unit id="290a7db2d48ad6781d1ce0954b9e7accebae7df4" translate="yes" xml:space="preserve">
          <source>Some old packages used license objects or a &quot;licenses&quot; property containing an array of license objects:</source>
          <target state="translated">一些旧的软件包使用许可证对象或包含许可证对象数组的 &quot;licenses &quot;属性。</target>
        </trans-unit>
        <trans-unit id="9559f12fdf75d989b7efb349588f9474f78e2ee9" translate="yes" xml:space="preserve">
          <source>Some packages, e.g., &lt;code&gt;cli&lt;/code&gt; packages, only contain an executable command-line interface and don't provide a &lt;code&gt;main&lt;/code&gt; field for use in Node.js programs. These packages are &lt;em&gt;not&lt;/em&gt; modules.</source>
          <target state="translated">某些软件包（例如 &lt;code&gt;cli&lt;/code&gt; 软件包）仅包含可执行的命令行界面，而未提供供Node.js程序使用的 &lt;code&gt;main&lt;/code&gt; 字段。这些软件包&lt;em&gt;不是&lt;/em&gt;模块。</target>
        </trans-unit>
        <trans-unit id="2c4a9ce4504d6496bf2f58b837514e16cc8f33aa" translate="yes" xml:space="preserve">
          <source>Some rules:</source>
          <target state="translated">一些规则。</target>
        </trans-unit>
        <trans-unit id="ab8027c42a3e4a4ec351025ffd9d73b8537fb0f0" translate="yes" xml:space="preserve">
          <source>Some special files and directories are also included or excluded regardless of whether they exist in the &lt;code&gt;files&lt;/code&gt; array (see below).</source>
          <target state="translated">某些特殊文件和目录也被包括或排除在外，无论它们是否存在于 &lt;code&gt;files&lt;/code&gt; 数组中（见下文）。</target>
        </trans-unit>
        <trans-unit id="df05ca475a94c08945d811b7d1f827fd9a8222d7" translate="yes" xml:space="preserve">
          <source>Some strange issues can be resolved by simply running &lt;code&gt;npm cache clean&lt;/code&gt; and trying again.</source>
          <target state="translated">只需运行 &lt;code&gt;npm cache clean&lt;/code&gt; 并重试即可解决一些奇怪的问题。</target>
        </trans-unit>
        <trans-unit id="e45e2198c6fe853dd33e3483b61c046aff369935" translate="yes" xml:space="preserve">
          <source>Some things are not allowed, and will be removed without discussion if they are brought to the attention of the npm registry admins, including but not limited to:</source>
          <target state="translated">有些东西是不允许的,如果引起npm注册表管理员的注意,就会被删除,不需要讨论,包括但不限于。</target>
        </trans-unit>
        <trans-unit id="ef8dcc1c86c90749467ebc246d62598ab86609ad" translate="yes" xml:space="preserve">
          <source>Some tips:</source>
          <target state="translated">一些提示。</target>
        </trans-unit>
        <trans-unit id="6de5210323650ba55741dbf10ca75fe4b22ebd62" translate="yes" xml:space="preserve">
          <source>Sometimes &lt;code&gt;npm login&lt;/code&gt; fails for no obvious reason. The first thing to do is to log in at &lt;a href=&quot;https://www.npmjs.com/login&quot;&gt;https://www.npmjs.com/login&lt;/a&gt; and check that your e-mail address on &lt;code&gt;npmjs.com&lt;/code&gt; matches the email address you are giving to &lt;code&gt;npm login&lt;/code&gt;.</source>
          <target state="translated">有时 &lt;code&gt;npm login&lt;/code&gt; 由于没有明显的原因而失败。首先要做的是登录&lt;a href=&quot;https://www.npmjs.com/login&quot;&gt;https://www.npmjs.com/login&lt;/a&gt;并检查您在 &lt;code&gt;npmjs.com&lt;/code&gt; 上的电子邮件地址是否与您为 &lt;code&gt;npm login&lt;/code&gt; 提供的电子邮件地址匹配。</target>
        </trans-unit>
        <trans-unit id="2ac8fccd6d72d933eeec4dbb850080ebf5754af9" translate="yes" xml:space="preserve">
          <source>Sometimes npm's cache gets confused. You can reset it using:</source>
          <target state="translated">有时npm的缓存会被混淆。你可以使用以下方法重置它。</target>
        </trans-unit>
        <trans-unit id="d5eb88d1fd2bf56ab626e0f88cda10eab94d1048" translate="yes" xml:space="preserve">
          <source>Space-separated options that are always passed to search.</source>
          <target state="translated">始终传递给搜索的以空格分隔的选项。</target>
        </trans-unit>
        <trans-unit id="70a962d5f4c5fe21884909eea2082cceae85b51b" translate="yes" xml:space="preserve">
          <source>Space-separated options that limit the results from search.</source>
          <target state="translated">以空格分隔的选项,限制搜索结果。</target>
        </trans-unit>
        <trans-unit id="62d84b3e858a9d42d65f1c031ec0717618db1cda" translate="yes" xml:space="preserve">
          <source>Spawn a subshell in the directory of the installed package specified.</source>
          <target state="translated">在指定安装包的目录下生成一个子shell。</target>
        </trans-unit>
        <trans-unit id="4cd77af3bfa7548fd01e4df4a921c9ddc1e6b4b3" translate="yes" xml:space="preserve">
          <source>Special: package.json &quot;config&quot; object</source>
          <target state="translated">特殊:package.json &quot;config &quot;对象。</target>
        </trans-unit>
        <trans-unit id="17b526ea8726560ff4ea9e8cc395adb507306eef" translate="yes" xml:space="preserve">
          <source>Specifics of npm's package.json handling.</source>
          <target state="translated">npm的package.json处理的具体内容。</target>
        </trans-unit>
        <trans-unit id="1a4792e020a671e7f06167b2a94fdca2d76ad2ec" translate="yes" xml:space="preserve">
          <source>Specifies an inclusive set.</source>
          <target state="translated">指定一个包容的集合。</target>
        </trans-unit>
        <trans-unit id="a1b12704d9ab73c6e1153c68221cfe56e0167606" translate="yes" xml:space="preserve">
          <source>Specify either a single file or an array of filenames to put in place for the &lt;code&gt;man&lt;/code&gt; program to find.</source>
          <target state="translated">指定要放置的单个文件或文件名数组，以供 &lt;code&gt;man&lt;/code&gt; 程序查找。</target>
        </trans-unit>
        <trans-unit id="3cd3e3848e507ae8521b28d6a853fb3120e39e61" translate="yes" xml:space="preserve">
          <source>Specify the name in the appropriate line of the package.json file.</source>
          <target state="translated">在package.json文件的适当行中指定名称。</target>
        </trans-unit>
        <trans-unit id="5404b67dcb5a809651a780ab32ecfd9a0b444302" translate="yes" xml:space="preserve">
          <source>Specify the place where your code lives. This is helpful for people who want to contribute. If the git repo is on GitHub, then the &lt;code&gt;npm docs&lt;/code&gt; command will be able to find you.</source>
          <target state="translated">指定代码所在的位置。这对想要贡献的人很有帮助。如果git repo在GitHub上，那么 &lt;code&gt;npm docs&lt;/code&gt; 命令将能够找到您。</target>
        </trans-unit>
        <trans-unit id="2a192b050b999dcd1fbd0420f1fd95687d073824" translate="yes" xml:space="preserve">
          <source>Specifying Dependencies</source>
          <target state="translated">指定依赖性</target>
        </trans-unit>
        <trans-unit id="44e272686c94a62c10f92ba1b97cf5bf7397cec7" translate="yes" xml:space="preserve">
          <source>Standard glob patterns work.</source>
          <target state="translated">标准的glob模式工作。</target>
        </trans-unit>
        <trans-unit id="b91b020f3d49bc77ae8d87cb17fbd177902879fa" translate="yes" xml:space="preserve">
          <source>Start a package.</source>
          <target state="translated">启动一个包。</target>
        </trans-unit>
        <trans-unit id="31bab51b38e5fa829e2bbbed4d9e60fd8b11a6fe" translate="yes" xml:space="preserve">
          <source>Starting at the $PWD, npm will walk up the folder tree checking for a folder that contains either a &lt;code&gt;package.json&lt;/code&gt; file, or a &lt;code&gt;node_modules&lt;/code&gt; folder. If such a thing is found, then that is treated as the effective &quot;current directory&quot; for the purpose of running npm commands. (This behavior is inspired by and similar to git's .git-folder seeking logic when running git commands in a working dir.)</source>
          <target state="translated">从$ PWD开始，npm将沿着文件夹树移动，检查包含 &lt;code&gt;package.json&lt;/code&gt; 文件或 &lt;code&gt;node_modules&lt;/code&gt; 文件夹的文件夹。如果找到这样的东西，则出于运行npm命令的目的，将其视为有效的&amp;ldquo;当前目录&amp;rdquo;。（此行为是受工作目录中运行git命令时git的.git-folder寻找逻辑的启发和相似。）</target>
        </trans-unit>
        <trans-unit id="00336f0016b0995d8ea0e0723f193850c76f6e21" translate="yes" xml:space="preserve">
          <source>Starting from this page, you can:</source>
          <target state="translated">从这个页面开始,你可以。</target>
        </trans-unit>
        <trans-unit id="01948183f955b9a158eb3bb33780a8a858685db2" translate="yes" xml:space="preserve">
          <source>Stop a package.</source>
          <target state="translated">停止一个包裹。</target>
        </trans-unit>
        <trans-unit id="8a579a103e0bb53b5472695d1d582bfd3e9350dd" translate="yes" xml:space="preserve">
          <source>Strict-mode Comparators and Ranges will be strict about the SemVer strings that they parse.</source>
          <target state="translated">Strict-mode Comparators和Ranges将对它们解析的SemVer字符串进行严格的处理。</target>
        </trans-unit>
        <trans-unit id="72ac40a33691bb643b4f63de5e22b41d926cc23c" translate="yes" xml:space="preserve">
          <source>Sub-commands</source>
          <target state="translated">Sub-commands</target>
        </trans-unit>
        <trans-unit id="31f210aa90d0b5ea7f1bc668f3a17428012f176c" translate="yes" xml:space="preserve">
          <source>Success! You will see your Profile page, with a message confirming that you set up tfa, plus an indicator in the Security section of the page.</source>
          <target state="translated">成功了!你会看到你的个人资料页面,并有信息确认你设置了tfa,还有页面中的安全指示灯。您将看到您的个人资料页面,并有一条确认您设置了tfa的信息,以及页面安全部分的指示器。</target>
        </trans-unit>
        <trans-unit id="e93d25a89237109efe710129cb5f71f9edd94eca" translate="yes" xml:space="preserve">
          <source>Super admin, controls billing &amp;amp; adding people to the org.</source>
          <target state="translated">超级管理员，控制帐单并向组织添加人员。</target>
        </trans-unit>
        <trans-unit id="e49593000e08f6f611b7c940124f673aabe2a0ad" translate="yes" xml:space="preserve">
          <source>Support tracker</source>
          <target state="translated">支持跟踪器</target>
        </trans-unit>
        <trans-unit id="0b601ca6758ebd1d8605c3b792e17c565452a286" translate="yes" xml:space="preserve">
          <source>Suppose &lt;code&gt;app&lt;/code&gt; has a caret dependency on a version below &lt;code&gt;1.0.0&lt;/code&gt;, for example:</source>
          <target state="translated">假设 &lt;code&gt;app&lt;/code&gt; 对 &lt;code&gt;1.0.0&lt;/code&gt; 以下版本的插入符号有依赖性，例如：</target>
        </trans-unit>
        <trans-unit id="a488748d2f9d4ce75a0ae8e0239a303d77f6bae7" translate="yes" xml:space="preserve">
          <source>Switch to the new directory (&lt;code&gt;cd&lt;/code&gt;)</source>
          <target state="translated">切换到新目录（ &lt;code&gt;cd&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5d99e6d229b0cf936f822fa066ae63a0998884b2" translate="yes" xml:space="preserve">
          <source>Switching from private to public</source>
          <target state="translated">从私营转为公共</target>
        </trans-unit>
        <trans-unit id="55056c5beb2c1fabad4b6b6e756cc470c5b5276c" translate="yes" xml:space="preserve">
          <source>Symlink a package folder.</source>
          <target state="translated">交叉链接一个包的文件夹。</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="5ff57f4185e884322f43c9c59da60f12f41285ea" translate="yes" xml:space="preserve">
          <source>TL;DR</source>
          <target state="translated">TL;DR</target>
        </trans-unit>
        <trans-unit id="b582cb81020b987501727a1e00901dfef2d4eb1d" translate="yes" xml:space="preserve">
          <source>TRADEMARKS</source>
          <target state="translated">TRADEMARKS</target>
        </trans-unit>
        <trans-unit id="84ffaab6978a0c797fb9db5d3cb2942ba2c5d7b5" translate="yes" xml:space="preserve">
          <source>Tab Completion for npm.</source>
          <target state="translated">npm的标签完成。</target>
        </trans-unit>
        <trans-unit id="bb92d44d0ccaeecf83135db09bd647da761688ae" translate="yes" xml:space="preserve">
          <source>Tag the commit when using the &lt;code&gt;npm version&lt;/code&gt; command.</source>
          <target state="translated">使用 &lt;code&gt;npm version&lt;/code&gt; 命令时，标记提交。</target>
        </trans-unit>
        <trans-unit id="2a5a5b21ce7b54e64830f5652029e160724d1dea" translate="yes" xml:space="preserve">
          <source>Tags can be used to provide an alias instead of version numbers.</source>
          <target state="translated">标签可以用来提供别名而不是版本号。</target>
        </trans-unit>
        <trans-unit id="fd9e609a51ebd4e27df04c01fb1f5dcb23725d4f" translate="yes" xml:space="preserve">
          <source>Tags must share a namespace with version numbers, because they are specified in the same slot: &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;version&amp;gt;&lt;/code&gt; vs &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;tag&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">标签必须与版本号共享一个名称空间，因为它们是在同一插槽中指定的： &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;version&amp;gt;&lt;/code&gt; vs &lt;code&gt;npm install &amp;lt;pkg&amp;gt;@&amp;lt;tag&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33889246aa7f99998efa450d3fc5f8e5238571fb" translate="yes" xml:space="preserve">
          <source>Tags that can be interpreted as valid semver ranges will be rejected. For example, &lt;code&gt;v1.4&lt;/code&gt; cannot be used as a tag, because it is interpreted by semver as &lt;code&gt;&amp;gt;=1.4.0 &amp;lt;1.5.0&lt;/code&gt;. See &lt;a href=&quot;https://github.com/npm/npm/issues/6082&quot;&gt;https://github.com/npm/npm/issues/6082&lt;/a&gt;.</source>
          <target state="translated">可以解释为有效semver范围的标签将被拒绝。例如， &lt;code&gt;v1.4&lt;/code&gt; 不能用作标签，因为它被semver解释为 &lt;code&gt;&amp;gt;=1.4.0 &amp;lt;1.5.0&lt;/code&gt; 。参见&lt;a href=&quot;https://github.com/npm/npm/issues/6082&quot;&gt;https://github.com/npm/npm/issues/6082&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8d69238d5536901dfc66ed563b7bb7f6a2fcbcb6" translate="yes" xml:space="preserve">
          <source>Take a look at &lt;a href=&quot;https://github.com/npm/npm/issues/5920&quot;&gt;issue #5920&lt;/a&gt;. &lt;s&gt;We're working on fixing this one, but it's a fairly subtle race condition and it's taking us a little time. You might try moving your &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; file out of the way until we have this fixed.&lt;/s&gt; This has been fixed in versions of npm newer than &lt;code&gt;npm@2.1.5&lt;/code&gt;, so update to &lt;code&gt;npm@latest&lt;/code&gt;.</source>
          <target state="translated">看看&lt;a href=&quot;https://github.com/npm/npm/issues/5920&quot;&gt;问题＃5920&lt;/a&gt;。&lt;s&gt;我们正在努力解决这个问题，但这是一个相当微妙的比赛条件，需要我们花费一些时间。您可以尝试将 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 文件移开，直到我们解决此问题为止。&lt;/s&gt;此问题已在npm高于 &lt;code&gt;npm@2.1.5&lt;/code&gt; 的npm版本中修复，因此请更新为 &lt;code&gt;npm@latest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e5c1cb438afe66a7a3ce7f0162632afd0f40816" translate="yes" xml:space="preserve">
          <source>Take the following example:</source>
          <target state="translated">下面举例说明。</target>
        </trans-unit>
        <trans-unit id="8a0e8e494e7070c78570742f79367f4f4b963847" translate="yes" xml:space="preserve">
          <source>Tarball requirements:</source>
          <target state="translated">沥青球要求:</target>
        </trans-unit>
        <trans-unit id="174c47e3e075719f606ec35ee2629a8c076d33c2" translate="yes" xml:space="preserve">
          <source>Team Admins create teams</source>
          <target state="translated">团队管理员创建团队</target>
        </trans-unit>
        <trans-unit id="02228791531b38c7cfaaff22cd7cc611aee4998e" translate="yes" xml:space="preserve">
          <source>Team admin, manages team membership &amp;amp; package access.</source>
          <target state="translated">团队管理员，管理团队成员资格和软件包访问权限。</target>
        </trans-unit>
        <trans-unit id="23f877a8e1a60e3876b7ca5c175629b159d1ecfd" translate="yes" xml:space="preserve">
          <source>Teams must always be fully qualified with the organization/scope they belong to when operating on them, separated by a colon (&lt;code&gt;:&lt;/code&gt;). That is, if you have a &lt;code&gt;developers&lt;/code&gt; team on a &lt;code&gt;foo&lt;/code&gt; organization, you must always refer to that team as &lt;code&gt;foo:developers&lt;/code&gt; in these commands.</source>
          <target state="translated">团队必须始终与他们属于他们工作时对组织/范围完全合格的，分离由冒号（ &lt;code&gt;:&lt;/code&gt; ）。也就是说，如果您在 &lt;code&gt;foo&lt;/code&gt; 组织中拥有一个 &lt;code&gt;developers&lt;/code&gt; 团队，则在这些命令中必须始终将该团队称为 &lt;code&gt;foo:developers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e03e7416d6a19c1b4a7883ca93b2d9e803c102c" translate="yes" xml:space="preserve">
          <source>Tell people where the bulk of your library is. Nothing special is done with the lib folder in any way, but it's useful meta info.</source>
          <target state="translated">告诉人们你的大部分库在哪里。Lib文件夹没有任何特别的功能,但它是有用的元信息。</target>
        </trans-unit>
        <trans-unit id="7537529b55c11cb2b0825280114c70f81383d5f2" translate="yes" xml:space="preserve">
          <source>Tell the world how easy it is to install your program!</source>
          <target state="translated">告诉世界,安装你的程序是多么的容易!</target>
        </trans-unit>
        <trans-unit id="d94e89ad77541aa69303a9049a7d0165584b43d0" translate="yes" xml:space="preserve">
          <source>Tells npm to create symlinks (or &lt;code&gt;.cmd&lt;/code&gt; shims on Windows) for package executables.</source>
          <target state="translated">告诉npm 为程序包可执行文件创建符号链接（在Windows上为 &lt;code&gt;.cmd&lt;/code&gt; 填充）。</target>
        </trans-unit>
        <trans-unit id="47b67f9715f5d3dfa64f8b7d3daa3b43428dcee7" translate="yes" xml:space="preserve">
          <source>Temp Files</source>
          <target state="translated">临时文件</target>
        </trans-unit>
        <trans-unit id="d1d0b6c8321c7137bed9cf3b99c9a462b1fbc8b2" translate="yes" xml:space="preserve">
          <source>Temp files are given a unique folder under this root for each run of the program, and are deleted upon successful exit.</source>
          <target state="translated">程序每次运行时,都会在这个根目录下给出一个唯一的文件夹,并在成功退出后删除。</target>
        </trans-unit>
        <trans-unit id="c55f7a215b7d38cd89969fd49a28a5e0d543fa33" translate="yes" xml:space="preserve">
          <source>Temporary files are stored by default in the folder specified by the &lt;code&gt;tmp&lt;/code&gt; config, which defaults to the TMPDIR, TMP, or TEMP environment variables, or &lt;code&gt;/tmp&lt;/code&gt; on Unix and &lt;code&gt;c:\windows\temp&lt;/code&gt; on Windows.</source>
          <target state="translated">默认情况下，临时文件存储在 &lt;code&gt;tmp&lt;/code&gt; 配置指定的文件夹中，该文件夹默认为TMPDIR，TMP或TEMP环境变量，在Unix上默认为 &lt;code&gt;/tmp&lt;/code&gt; ，在Windows上默认为 &lt;code&gt;c:\windows\temp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f65cd82819b9cb9c8a40223fb833f16fb93ed44" translate="yes" xml:space="preserve">
          <source>Terminals, Editors, and Git (For Beginners)</source>
          <target state="translated">终端、编辑器和Git (初学者)</target>
        </trans-unit>
        <trans-unit id="640ab2bae07bedc4c163f679a746f7ab7fb5d1fa" translate="yes" xml:space="preserve">
          <source>Test</source>
          <target state="translated">Test</target>
        </trans-unit>
        <trans-unit id="ddd1e13d77925c11c47b93b059fb1a66ff9dacea" translate="yes" xml:space="preserve">
          <source>Test a package.</source>
          <target state="translated">测试一个包。</target>
        </trans-unit>
        <trans-unit id="5d3e2372695f63ce0c53a4f4135db20d5ae16db5" translate="yes" xml:space="preserve">
          <source>Test:</source>
          <target state="translated">Test:</target>
        </trans-unit>
        <trans-unit id="b57a8b88b9abda4373b255cb36e6c9c513adb80e" translate="yes" xml:space="preserve">
          <source>Test: Download a package globally without using &lt;code&gt;sudo&lt;/code&gt;.</source>
          <target state="translated">测试：在不使用 &lt;code&gt;sudo&lt;/code&gt; 的情况下全局下载软件包。</target>
        </trans-unit>
        <trans-unit id="3f75fff83a4030acd3e1ba318f90f6e9fa278965" translate="yes" xml:space="preserve">
          <source>Test: Go to &lt;code&gt;https://npmjs.com/package/&amp;lt;package&amp;gt;&lt;/code&gt;. The package number should be updated.</source>
          <target state="translated">测试：转到 &lt;code&gt;https://npmjs.com/package/&amp;lt;package&amp;gt;&lt;/code&gt; 。包裹号应更新。</target>
        </trans-unit>
        <trans-unit id="4b6491b7900c341a5c6a1d5232b836ef39e3d0ea" translate="yes" xml:space="preserve">
          <source>Testing whether your &lt;code&gt;.npmignore&lt;/code&gt; or &lt;code&gt;files&lt;/code&gt; config works</source>
          <target state="translated">测试您的 &lt;code&gt;.npmignore&lt;/code&gt; 或 &lt;code&gt;files&lt;/code&gt; 配置是否有效</target>
        </trans-unit>
        <trans-unit id="926a30a992fa2c5821f595ea7154167dc66b11d4" translate="yes" xml:space="preserve">
          <source>That is, it first creates a global link, and then links the global installation target into your project's &lt;code&gt;node_modules&lt;/code&gt; folder.</source>
          <target state="translated">也就是说，它首先创建一个全局链接，然后将全局安装目标链接到项目的 &lt;code&gt;node_modules&lt;/code&gt; 文件夹中。</target>
        </trans-unit>
        <trans-unit id="128d8fc0fac0779a573be4b3b9c5edbb29b6e124" translate="yes" xml:space="preserve">
          <source>That is, the dependency from B to C is satisfied by the fact that A already caused C to be installed at a higher level. D is still installed at the top level because nothing conflicts with it.</source>
          <target state="translated">也就是说,从B到C的依赖关系是满足的,因为A已经使C安装在了更高的层次上。D仍然被安装在最高层,因为没有任何东西与之冲突。</target>
        </trans-unit>
        <trans-unit id="4f5f7676b16d3556154b15b5aa1dcda8e85874fc" translate="yes" xml:space="preserve">
          <source>That'll show you that it's working. If you'd rather just create a symlink package that points to your working directory, then do this:</source>
          <target state="translated">这将向你展示它的工作。如果你想创建一个指向你的工作目录的符号链接包,那么可以这样做。</target>
        </trans-unit>
        <trans-unit id="8480d52dfc80da298ed71fd43f8eee28979df914" translate="yes" xml:space="preserve">
          <source>The &quot;author&quot; is one person. &quot;contributors&quot; is an array of people. A &quot;person&quot; is an object with a &quot;name&quot; field and optionally &quot;url&quot; and &quot;email&quot;, like this:</source>
          <target state="translated">&quot;作者 &quot;是一个人。&quot;贡献者 &quot;是一个数组的人。一个 &quot;人 &quot;是一个有 &quot;名字 &quot;字段和可选的 &quot;url &quot;和 &quot;email &quot;的对象,像这样。</target>
        </trans-unit>
        <trans-unit id="96d96e3440209eade05af995f515f152778950fe" translate="yes" xml:space="preserve">
          <source>The &quot;factor&quot; config for the &lt;code&gt;retry&lt;/code&gt; module to use when fetching packages.</source>
          <target state="translated">&lt;code&gt;retry&lt;/code&gt; 模块在获取软件包时使用的&amp;ldquo; factor&amp;rdquo;配置。</target>
        </trans-unit>
        <trans-unit id="a5024c3b0f27377c294ae649a475f6988516f057" translate="yes" xml:space="preserve">
          <source>The &quot;maxTimeout&quot; config for the &lt;code&gt;retry&lt;/code&gt; module to use when fetching packages.</source>
          <target state="translated">&lt;code&gt;retry&lt;/code&gt; 模块在获取软件包时使用的&amp;ldquo; maxTimeout&amp;rdquo;配置。</target>
        </trans-unit>
        <trans-unit id="3b82a55dc88607120ed82ebc45abddcd36a1194e" translate="yes" xml:space="preserve">
          <source>The &quot;minTimeout&quot; config for the &lt;code&gt;retry&lt;/code&gt; module to use when fetching packages.</source>
          <target state="translated">&lt;code&gt;retry&lt;/code&gt; 模块在获取软件包时使用的&amp;ldquo; minTimeout&amp;rdquo;配置。</target>
        </trans-unit>
        <trans-unit id="3c3f559eeaa97ab227e8b9bcd1ce3c52eb2e7467" translate="yes" xml:space="preserve">
          <source>The &quot;prerelease identifier&quot; to use as a prefix for the &quot;prerelease&quot; part of a semver. Like the &lt;code&gt;rc&lt;/code&gt; in &lt;code&gt;1.2.0-rc.8&lt;/code&gt;.</source>
          <target state="translated">用作semver的&amp;ldquo; prerelease&amp;rdquo;部分的前缀的&amp;ldquo; prerelease标识符&amp;rdquo;。像 &lt;code&gt;rc&lt;/code&gt; 在 &lt;code&gt;1.2.0-rc.8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5e22cb84752173fb0057459badcee977fe63967" translate="yes" xml:space="preserve">
          <source>The &quot;retries&quot; config for the &lt;code&gt;retry&lt;/code&gt; module to use when fetching packages from the registry.</source>
          <target state="translated">重 &lt;code&gt;retry&lt;/code&gt; 模块的&amp;ldquo;重试&amp;rdquo;配置，用于从注册表中获取软件包。</target>
        </trans-unit>
        <trans-unit id="c5557624740983f3e50cd3fa8ec468f75be37c33" translate="yes" xml:space="preserve">
          <source>The &quot;scripts&quot; property is a dictionary containing script commands that are run at various times in the lifecycle of your package. The key is the lifecycle event, and the value is the command to run at that point.</source>
          <target state="translated">&quot;scripts &quot;属性是一个包含脚本命令的字典,这些脚本命令在你的包的生命周期中的不同时间运行。键是生命周期事件,值是在该点运行的命令。</target>
        </trans-unit>
        <trans-unit id="73cf326169431c79f77a8d4671781a61458fcbd0" translate="yes" xml:space="preserve">
          <source>The &quot;umask&quot; value to use when setting the file creation mode on files and folders.</source>
          <target state="translated">对文件和文件夹设置文件创建模式时使用的 &quot;umask &quot;值。</target>
        </trans-unit>
        <trans-unit id="9cdef443c321734d146aeada90b4fa46bb664b4c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../cli/audit&quot;&gt;&lt;code&gt;npm audit&lt;/code&gt;&lt;/a&gt; command submits a description of the dependencies configured in your package to your default registry and asks for a report of known vulnerabilities. &lt;code&gt;npm audit&lt;/code&gt; checks direct dependencies, devDependencies, bundledDependencies, and optionalDependencies, but does not check peerDependencies.</source>
          <target state="translated">在&lt;a href=&quot;../cli/audit&quot;&gt; &lt;code&gt;npm audit&lt;/code&gt; &lt;/a&gt;命令提交你的包配置到默认的注册表依赖关系的描述，并要求已知漏洞的报告。 &lt;code&gt;npm audit&lt;/code&gt; 检查直接依赖关系，devDependencies，bundledDependencies和optionalDependencies，但不检查peerDependencies。</target>
        </trans-unit>
        <trans-unit id="1b1fa12ad96f58b016768eac8401870424778cce" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../cli/npm&quot;&gt;&lt;em&gt;CLI&lt;/em&gt;&lt;/a&gt; runs from a terminal. This is how most developers interact with npm.</source>
          <target state="translated">该&lt;a href=&quot;../cli/npm&quot;&gt;&lt;em&gt;CLI&lt;/em&gt;&lt;/a&gt;从终端运行。这就是大多数开发人员与npm交互的方式。</target>
        </trans-unit>
        <trans-unit id="fe6d2b36cd53a346dfb821a9ce9967d426897f23" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../misc/registry&quot;&gt;&lt;em&gt;registry&lt;/em&gt;&lt;/a&gt; is a large public database of JavaScript software and the meta-information surrounding it.</source>
          <target state="translated">该&lt;a href=&quot;../misc/registry&quot;&gt;&lt;em&gt;注册表&lt;/em&gt;&lt;/a&gt;是JavaScript软件及其周围的元信息的大型公共数据库。</target>
        </trans-unit>
        <trans-unit id="76c84863e7b247b3298cd2f9370fccdeb6060f0b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ci-server-config#getting-an-authentication-token&quot;&gt;Getting an Authentication Token&lt;/a&gt; should help you generate that token.</source>
          <target state="translated">在&lt;a href=&quot;ci-server-config#getting-an-authentication-token&quot;&gt;获得身份验证令牌&lt;/a&gt;可以帮助你生成令牌。</target>
        </trans-unit>
        <trans-unit id="3c8cf6ba3828884244f4c79d585d715d30df6cc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--dry-run&lt;/code&gt; argument will report in the usual way what the install would have done without actually installing anything.</source>
          <target state="translated">该 &lt;code&gt;--dry-run&lt;/code&gt; 参数会在安装实际上不安装任何东西会做什么，通常的方式举报。</target>
        </trans-unit>
        <trans-unit id="874b434c63948e0e98eaba93328fc5ff163e85f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--global-style&lt;/code&gt; argument will cause npm to install the package into your local &lt;code&gt;node_modules&lt;/code&gt; folder with the same layout it uses with the global &lt;code&gt;node_modules&lt;/code&gt; folder. Only your direct dependencies will show in &lt;code&gt;node_modules&lt;/code&gt; and everything they depend on will be flattened in their &lt;code&gt;node_modules&lt;/code&gt; folders. This obviously will eliminate some deduping.</source>
          <target state="translated">该 &lt;code&gt;--global-style&lt;/code&gt; 参数会导致NPM的包安装到本地 &lt;code&gt;node_modules&lt;/code&gt; 文件夹它与全球使用相同的布局 &lt;code&gt;node_modules&lt;/code&gt; 文件夹中。仅您的直接依赖项将显示在 &lt;code&gt;node_modules&lt;/code&gt; 中,而它们依赖的所有内容都将在其 &lt;code&gt;node_modules&lt;/code&gt; 文件夹中展平。显然，这将消除一些重复数据删除。</target>
        </trans-unit>
        <trans-unit id="99982c42b4afffda71539c95ee1e06ad08cf5e51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--ignore-scripts&lt;/code&gt; argument will cause npm to not execute any scripts defined in the package.json. See &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">本 &lt;code&gt;--ignore-scripts&lt;/code&gt; 参数会导致NPM不执行中的package.json定义的任何脚本。参见 &lt;code&gt;&lt;a href=&quot;../misc/scripts&quot;&gt;npm-scripts&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b070bb50f7e2f32a3a68c6810eea8c5a6a0f5029" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--legacy-bundling&lt;/code&gt; argument will cause npm to install the package such that versions of npm prior to 1.4, such as the one included with node 0.8, can install the package. This eliminates all automatic deduping.</source>
          <target state="translated">所述 &lt;code&gt;--legacy-bundling&lt;/code&gt; 参数将导致NPM安装包，使得之前1.4 NPM的版本，如附带节点0.8一体，可安装软件包。这消除了所有自动重复数据删除。</target>
        </trans-unit>
        <trans-unit id="aa1dd22c5088f4738c2889d8c18d08d8663fc4d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--link&lt;/code&gt; argument will cause npm to link global installs into the local space in some cases.</source>
          <target state="translated">该 &lt;code&gt;--link&lt;/code&gt; 参数会导致NPM在某些情况下，全球安装链接到本地空间。</target>
        </trans-unit>
        <trans-unit id="e2c523678bb5aab6fdf93995a8f9610cb5ea99a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-audit&lt;/code&gt; argument can be used to disable sending of audit reports to the configured registries. See &lt;code&gt;&lt;a href=&quot;audit&quot;&gt;npm-audit&lt;/a&gt;&lt;/code&gt; for details on what is sent.</source>
          <target state="translated">所述 &lt;code&gt;--no-audit&lt;/code&gt; 参数可以用来禁止发送的审计报告到所配置的登记。有关发送内容的详细信息，请参见 &lt;code&gt;&lt;a href=&quot;audit&quot;&gt;npm-audit&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3666a26e7d393d45b96768b4fa6986145e375832" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-bin-links&lt;/code&gt; argument will prevent npm from creating symlinks for any binaries the package might contain.</source>
          <target state="translated">该 &lt;code&gt;--no-bin-links&lt;/code&gt; 参数将阻止NPM从包可能包含任何二进制文件创建符号链接。</target>
        </trans-unit>
        <trans-unit id="4beab201a683510ce3fe2c519dba78d36852d687" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-optional&lt;/code&gt; argument will prevent optional dependencies from being installed.</source>
          <target state="translated">该 &lt;code&gt;--no-optional&lt;/code&gt; 参数将阻止安装可选的依赖。</target>
        </trans-unit>
        <trans-unit id="223d5d0e54979b4f658495963e2670ad3f817b78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-package-lock&lt;/code&gt; argument will prevent npm from creating a &lt;code&gt;package-lock.json&lt;/code&gt; file. When running with package-lock's disabled npm will not automatically prune your node modules when installing.</source>
          <target state="translated">该 &lt;code&gt;--no-package-lock&lt;/code&gt; 参数将阻止NPM从创建一个 &lt;code&gt;package-lock.json&lt;/code&gt; 文件。在禁用包锁的情况下运行时，npm不会在安装时自动修剪节点模块。</target>
        </trans-unit>
        <trans-unit id="d199715dc7b1b9074047228664cb5627c0043f9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--no-shrinkwrap&lt;/code&gt; argument, which will ignore an available package lock or shrinkwrap file and use the package.json instead.</source>
          <target state="translated">的 &lt;code&gt;--no-shrinkwrap&lt;/code&gt; 参数，这将忽略的可用软件包锁定或拆封文件并使用的package.json代替。</target>
        </trans-unit>
        <trans-unit id="5a46bb5de38b5fcbe6ac8b938e2b05464cb90d41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--nodedir=/path/to/node/source&lt;/code&gt; argument will allow npm to find the node source code so that npm can compile native modules.</source>
          <target state="translated">所述 &lt;code&gt;--nodedir=/path/to/node/source&lt;/code&gt; 参数将允许NPM找到节点的源代码使NPM可以编译的本机模块。</target>
        </trans-unit>
        <trans-unit id="676156fe77a72ac92f9d0cd2ddc0a971aac06fc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--only={prod[uction]|dev[elopment]}&lt;/code&gt; argument will cause either only &lt;code&gt;devDependencies&lt;/code&gt; or only non-&lt;code&gt;devDependencies&lt;/code&gt; to be installed regardless of the &lt;code&gt;NODE_ENV&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;--only={prod[uction]|dev[elopment]}&lt;/code&gt; 参数将导致或者仅 &lt;code&gt;devDependencies&lt;/code&gt; 或仅非 &lt;code&gt;devDependencies&lt;/code&gt; 不管待安装 &lt;code&gt;NODE_ENV&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e05d21cd4baf251e98b12d7b8142d183765c1e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--package-lock-only&lt;/code&gt; argument will only update the &lt;code&gt;package-lock.json&lt;/code&gt;, instead of checking &lt;code&gt;node_modules&lt;/code&gt; and downloading dependencies.</source>
          <target state="translated">该 &lt;code&gt;--package-lock-only&lt;/code&gt; 争吵只会更新 &lt;code&gt;package-lock.json&lt;/code&gt; ，而不是检查 &lt;code&gt;node_modules&lt;/code&gt; 和下载依赖。</target>
        </trans-unit>
        <trans-unit id="40fbaee081d3b3346e128eaf320ad2cd90022698" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--save-prod&lt;/code&gt; and &lt;code&gt;--save-dev&lt;/code&gt; install flags</source>
          <target state="translated">该 &lt;code&gt;--save-prod&lt;/code&gt; 和 &lt;code&gt;--save-dev&lt;/code&gt; 的安装标志</target>
        </trans-unit>
        <trans-unit id="b683d396a855b2293185ac6a482e995df64fc71f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--tag&lt;/code&gt; argument will apply to all of the specified install targets. If a tag with the given name exists, the tagged version is preferred over newer versions.</source>
          <target state="translated">该 &lt;code&gt;--tag&lt;/code&gt; 参数将适用于所有的指定的安装目标。如果存在具有给定名称的标记，则标记版本优于新版本。</target>
        </trans-unit>
        <trans-unit id="d79cc56e1f2b2c8059335a0fbf93c50d231bbbf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;--force&lt;/code&gt; argument will force npm to fetch remote resources even if a local copy exists on disk.</source>
          <target state="translated">该 &lt;code&gt;-f&lt;/code&gt; 或 &lt;code&gt;--force&lt;/code&gt; 参数将强制NPM即使在磁盘上存在的本地副本来获取远程资源。</target>
        </trans-unit>
        <trans-unit id="469331f6785f570a6286653e82cff946e1244080" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-g&lt;/code&gt; or &lt;code&gt;--global&lt;/code&gt; argument will cause npm to install the package globally rather than locally. See &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;-g&lt;/code&gt; 或 &lt;code&gt;--global&lt;/code&gt; 参数会导致NPM在全球范围内，而不是在本地安装包。参见 &lt;code&gt;&lt;a href=&quot;../files/folders&quot;&gt;npm-folders&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ed0b218ee9eb06a0e06a593e0a1dceaa5968c80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;commit-ish&lt;/code&gt; can be any tag, sha, or branch which can be supplied as an argument to &lt;code&gt;git checkout&lt;/code&gt;. The default is &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;commit-ish&lt;/code&gt; 可以是任何标签，沙，或分支可以作为参数被供给 &lt;code&gt;git checkout&lt;/code&gt; 。默认值为 &lt;code&gt;master&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="624ca5253f9d4a816e193c1bf5b1e33f8a19705f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;env&lt;/code&gt; script is a special built-in command that can be used to list environment variables that will be available to the script at runtime. If an &quot;env&quot; command is defined in your package, it will take precedence over the built-in.</source>
          <target state="translated">该 &lt;code&gt;env&lt;/code&gt; 脚本是内置命令特殊，可用于列表的环境变量，将提供给脚本在运行时。如果您的软件包中定义了&amp;ldquo; env&amp;rdquo;命令，它将优先于内置命令。</target>
        </trans-unit>
        <trans-unit id="b4d70052cedabf2d5cfbf7c4f45ee545aa4e9e5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newversion&lt;/code&gt; argument should be a valid semver string, a valid second argument to &lt;a href=&quot;https://github.com/npm/node-semver#functions&quot;&gt;semver.inc&lt;/a&gt; (one of &lt;code&gt;patch&lt;/code&gt;, &lt;code&gt;minor&lt;/code&gt;, &lt;code&gt;major&lt;/code&gt;, &lt;code&gt;prepatch&lt;/code&gt;, &lt;code&gt;preminor&lt;/code&gt;, &lt;code&gt;premajor&lt;/code&gt;, &lt;code&gt;prerelease&lt;/code&gt;), or &lt;code&gt;from-git&lt;/code&gt;. In the second case, the existing version will be incremented by 1 in the specified field. &lt;code&gt;from-git&lt;/code&gt; will try to read the latest git tag, and use that as the new npm version.</source>
          <target state="translated">该 &lt;code&gt;newversion&lt;/code&gt; 参数应该是一个有效的semver字符串，一个有效的第二个参数&lt;a href=&quot;https://github.com/npm/node-semver#functions&quot;&gt;semver.inc&lt;/a&gt;（一个 &lt;code&gt;patch&lt;/code&gt; ， &lt;code&gt;minor&lt;/code&gt; ， &lt;code&gt;major&lt;/code&gt; ， &lt;code&gt;prepatch&lt;/code&gt; ， &lt;code&gt;preminor&lt;/code&gt; ， &lt;code&gt;premajor&lt;/code&gt; ， &lt;code&gt;prerelease&lt;/code&gt; ），或 &lt;code&gt;from-git&lt;/code&gt; 。在第二种情况下，现有版本将在指定字段中增加1。 &lt;code&gt;from-git&lt;/code&gt; 将尝试读取最新的git标记，并将其用作新的npm版本。</target>
        </trans-unit>
        <trans-unit id="b1657f4b9d3cb2b1f003add5e3c28acc2aa5db7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next&lt;/code&gt; tag is used by some projects to identify the upcoming version.</source>
          <target state="translated">在 &lt;code&gt;next&lt;/code&gt; 标签所使用的一些项目，以确定即将到来的版本。</target>
        </trans-unit>
        <trans-unit id="66eaedb22fe4a28e8311cfe9bddc4e2ebc68077d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;node_modules&lt;/code&gt; folder is the place Node.js looks for modules. (See &lt;a href=&quot;#what-is-a-module&quot;&gt;&quot;What is a &lt;code&gt;module&lt;/code&gt;?&quot;&lt;/a&gt;, above.)</source>
          <target state="translated">该 &lt;code&gt;node_modules&lt;/code&gt; 文件夹是Node.js的地方查找模块。（请参阅上面的&lt;a href=&quot;#what-is-a-module&quot;&gt;&amp;ldquo;什么是 &lt;code&gt;module&lt;/code&gt; ？&amp;rdquo;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="3e0607e7ee5e982b2024225f0a3d860e01bea434" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;npm bundle&lt;/code&gt; command has been removed in 1.0, for the simple reason that it is no longer necessary, as the default behavior is now to install packages into the local space.</source>
          <target state="translated">在 &lt;code&gt;npm bundle&lt;/code&gt; 命令在1.0被删除，原因很简单，它不再是必要的，因为默认行为现在是包安装到本地空间。</target>
        </trans-unit>
        <trans-unit id="e5f2fa84eba7f837751cccf80d2ef98b7926e3df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;npm config&lt;/code&gt; command can be used to update and edit the contents of the user and global npmrc files.</source>
          <target state="translated">在 &lt;code&gt;npm config&lt;/code&gt; 命令可以用来更新和编辑用户和全球npmrc文件的内容。</target>
        </trans-unit>
        <trans-unit id="8cfe29e501678ce53644ef8c3dec6460545fc281" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;package.json&lt;/code&gt; file defines the package. (See &lt;a href=&quot;#what-is-a-package&quot;&gt;&quot;What is a &lt;code&gt;package&lt;/code&gt;?&quot;&lt;/a&gt;, above.)</source>
          <target state="translated">所述 &lt;code&gt;package.json&lt;/code&gt; 文件定义了包。（请参见上方的&lt;a href=&quot;#what-is-a-package&quot;&gt;&amp;ldquo;什么是 &lt;code&gt;package&lt;/code&gt; ？&amp;rdquo;&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="63eb40c04f3182ddae5a2acd2fceac3c8cf2717e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prefix&lt;/code&gt; config defaults to the location where node is installed. On most systems, this is &lt;code&gt;/usr/local&lt;/code&gt;. On Windows, it's &lt;code&gt;%AppData%\npm&lt;/code&gt;. On Unix systems, it's one level up, since node is typically installed at &lt;code&gt;{prefix}/bin/node&lt;/code&gt; rather than &lt;code&gt;{prefix}/node.exe&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;prefix&lt;/code&gt; 配置的默认值到安装节点的位置。在大多数系统上，这是 &lt;code&gt;/usr/local&lt;/code&gt; 。在Windows上，它是 &lt;code&gt;%AppData%\npm&lt;/code&gt; 。在Unix系统上，它是上一级的，因为node通常安装在 &lt;code&gt;{prefix}/bin/node&lt;/code&gt; 而不是 &lt;code&gt;{prefix}/node.exe&lt;/code&gt; 上。</target>
        </trans-unit>
        <trans-unit id="c4f661a47aa419309c0e4e8307a70f8cbbba301b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepare&lt;/code&gt; script will be run before publishing, so that users can consume the functionality without requiring them to compile it themselves. In dev mode (ie, locally running &lt;code&gt;npm install&lt;/code&gt;), it'll run this script as well, so that you can test it easily.</source>
          <target state="translated">在 &lt;code&gt;prepare&lt;/code&gt; 脚本将出版之前运行，使用户可以在不需要他们来编译它自己消耗的功能。在开发人员模式下（即在本地运行 &lt;code&gt;npm install&lt;/code&gt; ），它也会运行此脚本，以便您可以轻松对其进行测试。</target>
        </trans-unit>
        <trans-unit id="61ac15b589c129732299ea7f46aea3cdcff32f65" translate="yes" xml:space="preserve">
          <source>The Certificate Authority signing certificate that is trusted for SSL connections to the registry. Values should be in PEM format (Windows calls it &quot;Base-64 encoded X.509 (.CER)&quot;) with newlines replaced by the string &quot;\n&quot;. For example:</source>
          <target state="translated">SSL连接到注册表时受信任的证书机构签名证书。值应该是PEM格式(Windows称之为 &quot;Base-64编码X.509(.CER)&quot;),用字符串&quot;\n &quot;代替换行。例如:</target>
        </trans-unit>
        <trans-unit id="86a9945426c4f491c49993a6688c619b7b643db3" translate="yes" xml:space="preserve">
          <source>The CommonJS &lt;a href=&quot;http://wiki.commonjs.org/wiki/Packages/1.0&quot;&gt;Packages&lt;/a&gt; spec details a few ways that you can indicate the structure of your package using a &lt;code&gt;directories&lt;/code&gt; object. If you look at &lt;a href=&quot;https://registry.npmjs.org/npm/latest&quot;&gt;npm's package.json&lt;/a&gt;, you'll see that it has directories for doc, lib, and man.</source>
          <target state="translated">CommonJS &lt;a href=&quot;http://wiki.commonjs.org/wiki/Packages/1.0&quot;&gt;Packages&lt;/a&gt;规范详细介绍了几种可以使用 &lt;code&gt;directories&lt;/code&gt; 对象指示软件包结构的方法。如果查看&lt;a href=&quot;https://registry.npmjs.org/npm/latest&quot;&gt;npm的package.json&lt;/a&gt;，您会看到它具有doc，lib和man的目录。</target>
        </trans-unit>
        <trans-unit id="65af71a4348a499ddc80aab92041879184002557" translate="yes" xml:space="preserve">
          <source>The Dockerfile that takes advantage of this has a few more lines in it than our example earlier that allows us to use the &lt;code&gt;.npmrc&lt;/code&gt; file and the &lt;code&gt;ARG&lt;/code&gt; parameter.</source>
          <target state="translated">利用该文件的 &lt;code&gt;.npmrc&lt;/code&gt; 比前面的示例中多了几行，该示例允许我们使用.npmrc文件和 &lt;code&gt;ARG&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="081d1c346720e480869b373f132f00d6b4824ad7" translate="yes" xml:space="preserve">
          <source>The IP address of the local interface to use when making connections to the npm registry. Must be IPv4 in versions of Node prior to 0.12.</source>
          <target state="translated">连接到 npm 注册表时要使用的本地接口的 IP 地址,在 0.12 之前的 Node 版本中必须是 IPv4。在 0.12 之前的 Node 版本中必须是 IPv4。</target>
        </trans-unit>
        <trans-unit id="6f6b4c3d120d53062975b8ff991936bcb8f17a8a" translate="yes" xml:space="preserve">
          <source>The JavaScript Package Registry.</source>
          <target state="translated">JavaScript包注册表。</target>
        </trans-unit>
        <trans-unit id="a3eb8270cc8404e75d26a8c63424410e0c50cb94" translate="yes" xml:space="preserve">
          <source>The Node installer installs, directly into the npm folder, a special piece of Windows-specific configuration that tells npm where to install global packages. When npm is used to install itself, it is supposed to copy this special &lt;code&gt;builtin&lt;/code&gt; configuration into the new install. There was a bug in some versions of npm that kept this from working, so you may need to go in and fix that up by hand. Run the following command to see where npm will install global packages to verify it is correct.</source>
          <target state="translated">Node安装程序直接将特殊的Windows特定配置安装到npm文件夹中，该配置告诉npm在哪里安装全局软件包。当使用npm自行安装时，应该将此特殊的 &lt;code&gt;builtin&lt;/code&gt; 配置复制到新安装中。npm的某些版本中存在一个错误，无法正常运行，因此您可能需要手动进行修复。运行以下命令，查看npm将在哪里安装全局软件包以验证其正确性。</target>
        </trans-unit>
        <trans-unit id="5097f9240f6bb597ecc3f2767f65420b985d7b2f" translate="yes" xml:space="preserve">
          <source>The Package Page</source>
          <target state="translated">包装页面</target>
        </trans-unit>
        <trans-unit id="2ab8405f1142db7a06949725727b3aca99abb233" translate="yes" xml:space="preserve">
          <source>The README displayed on the site will not be updated unless a new version of your package is published, so you need to run &lt;code&gt;npm version patch&lt;/code&gt; and &lt;code&gt;npm publish&lt;/code&gt; to update the documentation displayed on the site.</source>
          <target state="translated">除非发布了软件包的新版本，否则不会更新网站上显示的自述文件，因此您需要运行 &lt;code&gt;npm version patch&lt;/code&gt; 和 &lt;code&gt;npm publish&lt;/code&gt; 来更新网站上显示的文档。</target>
        </trans-unit>
        <trans-unit id="b0a6406ba5c5147ce935f5e77900206fb7cccf86" translate="yes" xml:space="preserve">
          <source>The UID to set to when running package scripts as root.</source>
          <target state="translated">以root身份运行软件包脚本时要设置的UID。</target>
        </trans-unit>
        <trans-unit id="8f40166806959347d7eaef4599cb4484d60a42a1" translate="yes" xml:space="preserve">
          <source>The URL should be a publicly available (perhaps read-only) url that can be handed directly to a VCS program without any modification. It should not be a url to an html project page that you put in your browser. It's for computers.</source>
          <target state="translated">URL应该是一个公开的(也许是只读的)url,可以直接交给VCS程序而不需要任何修改。它不应该是您放在浏览器中的html项目页面的url。这是给计算机用的。</target>
        </trans-unit>
        <trans-unit id="b1b2c0c57cbbfb07083e55cc7194e410837cc99e" translate="yes" xml:space="preserve">
          <source>The actual shell your script is run within is platform dependent. By default, on Unix-like systems it is the &lt;code&gt;/bin/sh&lt;/code&gt; command, on Windows it is the &lt;code&gt;cmd.exe&lt;/code&gt;. The actual shell referred to by &lt;code&gt;/bin/sh&lt;/code&gt; also depends on the system. As of &lt;a href=&quot;https://github.com/npm/npm/releases/tag/v5.1.0&quot;&gt;&lt;code&gt;npm@5.1.0&lt;/code&gt;&lt;/a&gt; you can customize the shell with the &lt;code&gt;script-shell&lt;/code&gt; configuration.</source>
          <target state="translated">您的脚本在其中运行的实际外壳取决于平台。默认情况下，在类似Unix的系统上，它是 &lt;code&gt;/bin/sh&lt;/code&gt; 命令，在Windows上是 &lt;code&gt;cmd.exe&lt;/code&gt; 。 &lt;code&gt;/bin/sh&lt;/code&gt; 引用的实际shell 也取决于系统。从&lt;a href=&quot;https://github.com/npm/npm/releases/tag/v5.1.0&quot;&gt; &lt;code&gt;npm@5.1.0&lt;/code&gt; 开始,&lt;/a&gt;您可以使用 &lt;code&gt;script-shell&lt;/code&gt; 配置自定义shell。</target>
        </trans-unit>
        <trans-unit id="bc2b71ae75e33d571ea24c1e966026bfbc479525" translate="yes" xml:space="preserve">
          <source>The advantage of doing these things at &lt;code&gt;prepublish&lt;/code&gt; time is that they can be done once, in a single place, thus reducing complexity and variability. Additionally, this means that:</source>
          <target state="translated">在 &lt;code&gt;prepublish&lt;/code&gt; 时执行这些操作的好处是，它们可以在一个地方一次完成，从而降低了复杂性和可变性。此外，这意味着：</target>
        </trans-unit>
        <trans-unit id="6038da20e7ec59c10339ba65b93516572c4648be" translate="yes" xml:space="preserve">
          <source>The age of the cache, in seconds, before another registry request is made if using legacy search endpoint.</source>
          <target state="translated">如果使用传统的搜索端点,在发出另一个注册表请求之前,缓存的年龄,以秒为单位。</target>
        </trans-unit>
        <trans-unit id="4aec7bc720dd05f042865f5b72ca2cf33b1c77ac" translate="yes" xml:space="preserve">
          <source>The age of the cache, in seconds, before another registry request is made.</source>
          <target state="translated">在发出另一个注册表请求之前,缓存的年龄,以秒为单位。</target>
        </trans-unit>
        <trans-unit id="435d21576429c419032da292ca40f88a542b651a" translate="yes" xml:space="preserve">
          <source>The arguments will only be passed to the script specified after &lt;code&gt;npm run&lt;/code&gt; and not to any pre or post script.</source>
          <target state="translated">参数只会传递给 &lt;code&gt;npm run&lt;/code&gt; 后指定的脚本，而不传递给任何前置或后置脚本。</target>
        </trans-unit>
        <trans-unit id="d9e6b6813ec3189ad4e369cf9b160fe123880b77" translate="yes" xml:space="preserve">
          <source>The audit command submits a description of the dependencies configured in your project to your default registry and asks for a report of known vulnerabilities. The report returned includes instructions on how to act on this information.</source>
          <target state="translated">审核命令向默认注册表提交项目中配置的依赖关系的描述,并要求提供已知漏洞的报告。返回的报告包括如何根据这些信息采取行动的说明。</target>
        </trans-unit>
        <trans-unit id="3a2211451eb489871d8fe1b1ff059bdf50fbdeb1" translate="yes" xml:space="preserve">
          <source>The base URL of the npm package registry.</source>
          <target state="translated">npm包注册表的基本URL。</target>
        </trans-unit>
        <trans-unit id="1c15877462f00719a859329bf8af095ead24487e" translate="yes" xml:space="preserve">
          <source>The base URL of the npm package registry. If &lt;code&gt;scope&lt;/code&gt; is also specified, it takes precedence.</source>
          <target state="translated">npm程序包注册表的基本URL。如果还指定了 &lt;code&gt;scope&lt;/code&gt; ，则优先。</target>
        </trans-unit>
        <trans-unit id="3387c63eed0d8556e5640563423cf249e06fb877" translate="yes" xml:space="preserve">
          <source>The base URL of the npm package registry. If &lt;code&gt;scope&lt;/code&gt; is also specified, this registry will only be used for packages with that scope. &lt;code&gt;scope&lt;/code&gt; defaults to the scope of the project directory you're currently in, if any. See &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">npm程序包注册表的基本URL。如果还指定了 &lt;code&gt;scope&lt;/code&gt; ，则此注册表仅用于具有该作用域的软件包。 &lt;code&gt;scope&lt;/code&gt; 默认为您当前所在项目目录的范围（如果有）。参见 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea03b0cb1cd3f200daf1ecff911bec44085bacbe" translate="yes" xml:space="preserve">
          <source>The best way to manage locally installed npm packages is to create a &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">管理本地安装的npm软件包的最佳方法是创建 &lt;code&gt;package.json&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="12eff052aa388eec557bd5301854dc5d8eeaba7d" translate="yes" xml:space="preserve">
          <source>The browser that is called by the &lt;code&gt;npm bugs&lt;/code&gt; command to open websites.</source>
          <target state="translated">&lt;code&gt;npm bugs&lt;/code&gt; 命令调用的浏览器打开网站。</target>
        </trans-unit>
        <trans-unit id="4c59b56d7d4d88bb66e03c49c656f968b1218842" translate="yes" xml:space="preserve">
          <source>The browser that is called by the &lt;code&gt;npm docs&lt;/code&gt; command to open websites.</source>
          <target state="translated">&lt;code&gt;npm docs&lt;/code&gt; 命令调用的浏览器打开网站。</target>
        </trans-unit>
        <trans-unit id="b4468dadffe999f8b73514eb718cdadb8bad8973" translate="yes" xml:space="preserve">
          <source>The browser that is called by the &lt;code&gt;npm repo&lt;/code&gt; command to open websites.</source>
          <target state="translated">&lt;code&gt;npm repo&lt;/code&gt; 命令调用的浏览器打开网站。</target>
        </trans-unit>
        <trans-unit id="ad8291e0dae37630d1e64f47ef084380aa568a4f" translate="yes" xml:space="preserve">
          <source>The callback should always be the last argument in the list. Its first argument is the Error or null.</source>
          <target state="translated">回调应该始终是列表中的最后一个参数,它的第一个参数是Error或null。它的第一个参数是Error或null。</target>
        </trans-unit>
        <trans-unit id="2320ff1fa157ed2a8ca8662c0605a2ea7b0de244" translate="yes" xml:space="preserve">
          <source>The command to delete a token is:</source>
          <target state="translated">删除令牌的命令是:</target>
        </trans-unit>
        <trans-unit id="17630bda840281d3783a14f8794889ce5a5029da" translate="yes" xml:space="preserve">
          <source>The command to run for &lt;code&gt;npm edit&lt;/code&gt; or &lt;code&gt;npm config edit&lt;/code&gt;.</source>
          <target state="translated">为 &lt;code&gt;npm edit&lt;/code&gt; 或 &lt;code&gt;npm config edit&lt;/code&gt; 运行的命令。</target>
        </trans-unit>
        <trans-unit id="dbf5a23e661a33e80ed72ad7bc0863c0bb37c528" translate="yes" xml:space="preserve">
          <source>The command to use for git commands. If git is installed on the computer, but is not in the &lt;code&gt;PATH&lt;/code&gt;, then set this to the full path to the git binary.</source>
          <target state="translated">用于git命令的命令。如果git安装在计算机上，但不在 &lt;code&gt;PATH&lt;/code&gt; 中，则将其设置为git二进制文件的完整路径。</target>
        </trans-unit>
        <trans-unit id="3cae97d07a75b25d20f430372768105937034dcb" translate="yes" xml:space="preserve">
          <source>The config file to read for global config options.</source>
          <target state="translated">读取全局配置选项的配置文件。</target>
        </trans-unit>
        <trans-unit id="1f66b6d25ee8de625c31496955e767941ae78bdd" translate="yes" xml:space="preserve">
          <source>The deduplication algorithm walks the tree, moving each dependency as far up in the tree as possible, even if duplicates are not found. This will result in both a flat and deduplicated tree.</source>
          <target state="translated">重复数据删除算法会在树上行走,即使没有找到重复的数据,也会尽可能地将每个依赖关系移到树的最上层。这样就会得到一棵扁平的树和重复数据删除的树。</target>
        </trans-unit>
        <trans-unit id="1401fb62356585f36e5fe1c3a38ac194bdaa161d" translate="yes" xml:space="preserve">
          <source>The default setting for new tokens is full-permission.</source>
          <target state="translated">新代币的默认设置是全权限。</target>
        </trans-unit>
        <trans-unit id="98d1f9ca0fb9f3c611eea6d27b61bbb406ce6e6f" translate="yes" xml:space="preserve">
          <source>The default version is &quot;latest&quot; if unspecified.</source>
          <target state="translated">如果没有指定,默认为 &quot;最新版本&quot;。</target>
        </trans-unit>
        <trans-unit id="c83669c694bf9ce15555fc056f43202f1066c2bf" translate="yes" xml:space="preserve">
          <source>The dependencies of this dependency, exactly as at the top level.</source>
          <target state="translated">这个依赖关系,和顶层的依赖关系完全一样。</target>
        </trans-unit>
        <trans-unit id="68c7b1a73279dfcc73097bac56d1ef55b848ce4b" translate="yes" xml:space="preserve">
          <source>The depth to go when recursing directories for &lt;code&gt;npm ls&lt;/code&gt;, &lt;code&gt;npm cache ls&lt;/code&gt;, and &lt;code&gt;npm outdated&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;npm ls&lt;/code&gt; ， &lt;code&gt;npm cache ls&lt;/code&gt; 和 &lt;code&gt;npm outdated&lt;/code&gt; 的深度。</target>
        </trans-unit>
        <trans-unit id="41fff03cdef55a327cc7b2c216ba144dfbc645b2" translate="yes" xml:space="preserve">
          <source>The description of the vulnerability. For example, &quot;Denial of service&quot;.</source>
          <target state="translated">漏洞的描述。例如,&quot;拒绝服务&quot;。</target>
        </trans-unit>
        <trans-unit id="656ac6f95a3d74510468c36c0b8daa1bd9f515d5" translate="yes" xml:space="preserve">
          <source>The developer will be able to access packages based on the teams they are on. Access is either read-write or read-only.</source>
          <target state="translated">开发者将可以根据自己所在的团队来访问包。访问方式可以是读写式,也可以是只读式。</target>
        </trans-unit>
        <trans-unit id="a947085d51250fa82367d9322a92fe3a65c74918" translate="yes" xml:space="preserve">
          <source>The directories that npm uses, &lt;code&gt;node_modules&lt;/code&gt; (both locally and globally), exist and can be written by the current user.</source>
          <target state="translated">npm使用的目录 &lt;code&gt;node_modules&lt;/code&gt; （本地和全局）都存在，并且可以由当前用户写入。</target>
        </trans-unit>
        <trans-unit id="8d9e15ad02608432fa09bee6d7c2a7566d38ccb6" translate="yes" xml:space="preserve">
          <source>The easier (and more awesome) way to add dependencies to your &lt;code&gt;package.json&lt;/code&gt; is to do so from the command line, flagging the &lt;code&gt;npm install&lt;/code&gt; command with either &lt;code&gt;--save-prod&lt;/code&gt; (assumed by default) or &lt;code&gt;--save-dev&lt;/code&gt;, depending on how you'd like to use that dependency.</source>
          <target state="translated">将依赖项添加到 &lt;code&gt;package.json&lt;/code&gt; 的更简单（更棒）方法是从命令行执行此操作，并使用 &lt;code&gt;--save-prod&lt;/code&gt; （默认设置）或 &lt;code&gt;--save-dev&lt;/code&gt; 标记 &lt;code&gt;npm install&lt;/code&gt; 命令，具体取决于有关如何使用该依赖项的信息。</target>
        </trans-unit>
        <trans-unit id="817f0d4299f26a50744477ba786bf5df51113967" translate="yes" xml:space="preserve">
          <source>The easiest way is to replicate the couch database, and use the same (or similar) design doc to implement the APIs.</source>
          <target state="translated">最简单的方法是复制couch数据库,并使用相同(或类似)的设计文档来实现API。</target>
        </trans-unit>
        <trans-unit id="4aa7842b1f3d8e363f930f607d9a31c83f43a934" translate="yes" xml:space="preserve">
          <source>The exact order of execution is as follows:</source>
          <target state="translated">具体执行顺序如下:</target>
        </trans-unit>
        <trans-unit id="fd16ca1fbd99ec13b56c9fd64463d34346e936ca" translate="yes" xml:space="preserve">
          <source>The file in the &quot;main&quot; field</source>
          <target state="translated">&quot;主 &quot;字段中的文件</target>
        </trans-unit>
        <trans-unit id="e8f6abbdd531ddeffd04878719ff326a060afe25" translate="yes" xml:space="preserve">
          <source>The filename &lt;em&gt;must&lt;/em&gt; use &lt;code&gt;.tar&lt;/code&gt;, &lt;code&gt;.tar.gz&lt;/code&gt;, or &lt;code&gt;.tgz&lt;/code&gt; as the extension.</source>
          <target state="translated">文件名&lt;em&gt;必须&lt;/em&gt;使用 &lt;code&gt;.tar&lt;/code&gt; ， &lt;code&gt;.tar.gz&lt;/code&gt; 或 &lt;code&gt;.tgz&lt;/code&gt; 作为扩展名。</target>
        </trans-unit>
        <trans-unit id="766e6a00f7539dd0ea0f43ba04ef93f87420c82d" translate="yes" xml:space="preserve">
          <source>The following git environment variables are recognized by npm and will be added to the environment when running git:</source>
          <target state="translated">以下 git 环境变量被 npm 识别,并将在运行 git 时被添加到环境中。</target>
        </trans-unit>
        <trans-unit id="ff4f7e12799fb6e3d2826c75d368f7981f853797" translate="yes" xml:space="preserve">
          <source>The following paths and files are never ignored, so adding them to &lt;code&gt;.npmignore&lt;/code&gt; is pointless:</source>
          <target state="translated">以下路径和文件永远不会被忽略，因此将它们添加到 &lt;code&gt;.npmignore&lt;/code&gt; 是毫无意义的：</target>
        </trans-unit>
        <trans-unit id="904fda8b0fac02d5c794e3d3d0a3f22cd8ba9e5e" translate="yes" xml:space="preserve">
          <source>The following screen shot demonstrates these steps:</source>
          <target state="translated">下面的屏幕截图演示了这些步骤。</target>
        </trans-unit>
        <trans-unit id="f2ff9bb10a197eaf115fc5d0892ff8cf85e46c23" translate="yes" xml:space="preserve">
          <source>The following screen shot shows where the menu is if you want to explore the website, set up your profile, and get started right away:</source>
          <target state="translated">下面的截图显示了菜单的位置,如果你想探索网站,设置你的个人资料,并立即开始。</target>
        </trans-unit>
        <trans-unit id="181cec331142b836f851c2fe0bd6dabc5627d4e3" translate="yes" xml:space="preserve">
          <source>The following shorthands are parsed on the command-line:</source>
          <target state="translated">以下是在命令行中解析的速记符。</target>
        </trans-unit>
        <trans-unit id="9c90b8ec2841e4127632b0669579e0d89b6f6dbe" translate="yes" xml:space="preserve">
          <source>The following table explains the token list.</source>
          <target state="translated">下表解释了令牌列表。</target>
        </trans-unit>
        <trans-unit id="1ae8faa8eed22ae91503922e81ebc1473eed144c" translate="yes" xml:space="preserve">
          <source>The four relevant files are:</source>
          <target state="translated">四个相关文件是:</target>
        </trans-unit>
        <trans-unit id="89d33250cb191fe59ca4071c90c9730501affba4" translate="yes" xml:space="preserve">
          <source>The group to use when running package scripts in global mode as the root user.</source>
          <target state="translated">作为root用户在全局模式下运行软件包脚本时要使用的组。</target>
        </trans-unit>
        <trans-unit id="f58b2dd5771fdbb7a93e2118b23439e865ce7189" translate="yes" xml:space="preserve">
          <source>The hook &lt;code&gt;id&lt;/code&gt; used by &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;rm&lt;/code&gt; are the IDs listed in &lt;code&gt;npm hook ls&lt;/code&gt; for that particular hook.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;rm&lt;/code&gt; 使用的钩子 &lt;code&gt;id&lt;/code&gt; 是 &lt;code&gt;npm hook ls&lt;/code&gt; 中为该特定钩子列出的ID 。</target>
        </trans-unit>
        <trans-unit id="f0c118a09758424652dfb8beed756a6049c7f33f" translate="yes" xml:space="preserve">
          <source>The host architecture is determined by &lt;code&gt;process.arch&lt;/code&gt;</source>
          <target state="translated">主机体系结构由 &lt;code&gt;process.arch&lt;/code&gt; 确定</target>
        </trans-unit>
        <trans-unit id="c5eef749a5354a088676b173955f904711f925f4" translate="yes" xml:space="preserve">
          <source>The host operating system is determined by &lt;code&gt;process.platform&lt;/code&gt;</source>
          <target state="translated">主机操作系统由 &lt;code&gt;process.platform&lt;/code&gt; 确定</target>
        </trans-unit>
        <trans-unit id="531917f9cffb5fdf890363f2887b8bb4db896d23" translate="yes" xml:space="preserve">
          <source>The init command is transformed to a corresponding &lt;code&gt;npx&lt;/code&gt; operation as follows:</source>
          <target state="translated">将init命令转换为相应的 &lt;code&gt;npx&lt;/code&gt; 操作，如下所示：</target>
        </trans-unit>
        <trans-unit id="890ef5293f552476f09b11cded6dde35f532fa07" translate="yes" xml:space="preserve">
          <source>The location of npm's cache directory. See &lt;code&gt;&lt;a href=&quot;../cli/cache&quot;&gt;npm-cache&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">npm的缓存目录的位置。参见 &lt;code&gt;&lt;a href=&quot;../cli/cache&quot;&gt;npm-cache&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="caeef139e21b12e2c4540b30ddf767c19b368df1" translate="yes" xml:space="preserve">
          <source>The location of user-level configuration settings.</source>
          <target state="translated">用户级配置设置的位置。</target>
        </trans-unit>
        <trans-unit id="3044e5c0c82d60776d2b4958e57fb912069c184e" translate="yes" xml:space="preserve">
          <source>The location to install global items. If set on the command line, then it forces non-global commands to run in the specified folder.</source>
          <target state="translated">安装全局项目的位置。如果在命令行中设置,则会强制非全局命令在指定的文件夹中运行。</target>
        </trans-unit>
        <trans-unit id="bbe3ff600e402dbb69ada9d6eee24ab25c624cc1" translate="yes" xml:space="preserve">
          <source>The main field is a module ID that is the primary entry point to your program. That is, if your package is named &lt;code&gt;foo&lt;/code&gt;, and a user installs it, and then does &lt;code&gt;require(&quot;foo&quot;)&lt;/code&gt;, then your main module's exports object will be returned.</source>
          <target state="translated">主要字段是模块ID，它是程序的主要入口点。也就是说，如果您的包名为 &lt;code&gt;foo&lt;/code&gt; ，并且用户安装了该包，然后执行 &lt;code&gt;require(&quot;foo&quot;)&lt;/code&gt; ，则将返回主模块的导出对象。</target>
        </trans-unit>
        <trans-unit id="9b28b412c6ead8634bc49a9a0075fac8edf0ebf4" translate="yes" xml:space="preserve">
          <source>The maximum number of connections to use per origin (protocol/host/port combination). Passed to the &lt;code&gt;http&lt;/code&gt;&lt;code&gt;Agent&lt;/code&gt; used to make the request.</source>
          <target state="translated">每个来源使用的最大连接数（协议/主机/端口组合）。传递给用于发出请求的 &lt;code&gt;http&lt;/code&gt; &lt;code&gt;Agent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22cda19943230bada1fe3f4d7dd6ca1820ff4ee6" translate="yes" xml:space="preserve">
          <source>The maximum number of log files to store.</source>
          <target state="translated">存储日志文件的最大数量。</target>
        </trans-unit>
        <trans-unit id="7779767828629a8b1a1de7d18da1d1fd94dca69b" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;.inc&lt;/code&gt; takes an additional &lt;code&gt;identifier&lt;/code&gt; string argument that will append the value of the string as a prerelease identifier:</source>
          <target state="translated">该方法 &lt;code&gt;.inc&lt;/code&gt; 接受一个附加的 &lt;code&gt;identifier&lt;/code&gt; 的字符串参数，将追加字符串作为预发布标识符的值：</target>
        </trans-unit>
        <trans-unit id="72dbe0179720463ea366edb7fc6fd2e4d4e83863" translate="yes" xml:space="preserve">
          <source>The minimum level of vulnerability for &lt;code&gt;npm audit&lt;/code&gt; to exit with a non-zero exit code.</source>
          <target state="translated">&lt;code&gt;npm audit&lt;/code&gt; 使用非零退出代码退出的最低漏洞级别。</target>
        </trans-unit>
        <trans-unit id="a7f9de7cda37ca1d6af45767e0633cff722ccbf3" translate="yes" xml:space="preserve">
          <source>The module that the package with the vulnerability depends on.</source>
          <target state="translated">存在漏洞的软件包所依赖的模块。</target>
        </trans-unit>
        <trans-unit id="d37b5e6f15d750ad084aa1839076c27ec3e4621d" translate="yes" xml:space="preserve">
          <source>The module tree described by the package lock is reproduced. This means reproducing the structure described in the file, using the specific files referenced in &quot;resolved&quot; if available, falling back to normal package resolution using &quot;version&quot; if one isn't.</source>
          <target state="translated">包锁所描述的模块树被重现。这意味着重现文件中描述的结构,如果有的话,使用 &quot;resolved &quot;中引用的特定文件,如果没有的话,使用 &quot;version &quot;回到正常的包解析。</target>
        </trans-unit>
        <trans-unit id="ced44275a08def978e9a777b87adbda8e22804d3" translate="yes" xml:space="preserve">
          <source>The name can't start with a dot or an underscore.</source>
          <target state="translated">名字不能以点或下划线开头。</target>
        </trans-unit>
        <trans-unit id="8d4be5f3ffdb929c39981c59617ddfed24fbf174" translate="yes" xml:space="preserve">
          <source>The name ends up being part of a URL, an argument on the command line, and a folder name. Therefore, the name can't contain any non-URL-safe characters.</source>
          <target state="translated">这个名字最终是一个URL的一部分,是命令行的一个参数,也是一个文件夹名。因此,名称不能包含任何非URL安全字符。</target>
        </trans-unit>
        <trans-unit id="924085891a487ba1e84e638855e4e74d6cb6e644" translate="yes" xml:space="preserve">
          <source>The name is what your thing is called.</source>
          <target state="translated">名字就是你的东西叫什么。</target>
        </trans-unit>
        <trans-unit id="aaa63814afced2c494fcc32c84aea3356418cd95" translate="yes" xml:space="preserve">
          <source>The name must be less than or equal to 214 characters. This includes the scope for scoped packages.</source>
          <target state="translated">名称必须小于或等于214个字符。这包括范围包的范围。</target>
        </trans-unit>
        <trans-unit id="225b224747a212e99da2345d52c5b9bc50f10558" translate="yes" xml:space="preserve">
          <source>The name of the package that contains the vulnerability.</source>
          <target state="translated">包含漏洞的软件包名称。</target>
        </trans-unit>
        <trans-unit id="d203e38f716adcf1e693a9d10569dc0c3088a945" translate="yes" xml:space="preserve">
          <source>The name of the package this is a package-lock for. This must match what's in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">这是程序包锁定的程序包名称。这必须匹配 &lt;code&gt;package.json&lt;/code&gt; 中的内容。</target>
        </trans-unit>
        <trans-unit id="e79d3f28fa5fd1c774388ab79c0b8dacc3c77bf5" translate="yes" xml:space="preserve">
          <source>The name will probably be passed as an argument to require(), so it should be something short, but also reasonably descriptive.</source>
          <target state="translated">这个名字可能会作为require()的参数传递,所以它应该是一个简短的名字,但也要有合理的描述性。</target>
        </trans-unit>
        <trans-unit id="ac151ac06bbe0e6d8b52217c5c1fe1df05f721db" translate="yes" xml:space="preserve">
          <source>The next chapter explains how to install npm. After you install npm, you will use a terminal console to download packages. This is explained in later chapters.</source>
          <target state="translated">下一章将介绍如何安装npm。安装npm后,你将使用终端控制台下载包。这将在后面的章节中解释。</target>
        </trans-unit>
        <trans-unit id="8d06421bc5c51e19040e6aa2d0eb1f6ae3904d5d" translate="yes" xml:space="preserve">
          <source>The node version to use when checking a package's &lt;code&gt;engines&lt;/code&gt; map.</source>
          <target state="translated">检查程序包的 &lt;code&gt;engines&lt;/code&gt; 映射时要使用的节点版本。</target>
        </trans-unit>
        <trans-unit id="8a27614d0e88de1555ad5c78811af4d9417c2341" translate="yes" xml:space="preserve">
          <source>The non-reversible identifiers are a sha256 of a session-specific UUID and the value being replaced, ensuring a consistent value within the payload that is different between runs.</source>
          <target state="translated">不可逆的标识符是一个会话特定UUID和被替换的值的sha256,确保有效载荷内的值一致,在运行之间是不同的。</target>
        </trans-unit>
        <trans-unit id="a2a5a195eb441aec870786edfe0275445f3fef6c" translate="yes" xml:space="preserve">
          <source>The npm cache exists, and the package tarballs within it aren't corrupt.</source>
          <target state="translated">npm缓存是存在的,而且里面的包包也没有损坏。</target>
        </trans-unit>
        <trans-unit id="d207a6d4c5b23b1e12686f188e05bd2f772db9e2" translate="yes" xml:space="preserve">
          <source>The npm cache is strictly a cache: it should not be relied upon as a persistent and reliable data store for package data. npm makes no guarantee that a previously-cached piece of data will be available later, and will automatically delete corrupted contents. The primary guarantee that the cache makes is that, if it does return data, that data will be exactly the data that was inserted.</source>
          <target state="translated">npm缓存严格来说只是一个缓存:它不应该被当作包数据的持久和可靠的数据存储。npm不保证之前缓存的数据以后还能使用,并且会自动删除损坏的内容。缓存所做的主要保证是,如果它确实返回了数据,该数据将与插入的数据完全一致。</target>
        </trans-unit>
        <trans-unit id="01de449c9653f0b31fab2e417ee19b598245d82b" translate="yes" xml:space="preserve">
          <source>The npm config files.</source>
          <target state="translated">npm的配置文件。</target>
        </trans-unit>
        <trans-unit id="ddbeb18d24361c229e34e04f3236d666c9ffdb2a" translate="yes" xml:space="preserve">
          <source>The npm registry does not try to correlate the information in these headers with any authenticated accounts that may be used in the same requests.</source>
          <target state="translated">npm注册表不会尝试将这些头文件中的信息与可能用于相同请求中的任何已认证账户相关联。</target>
        </trans-unit>
        <trans-unit id="c017372e76b295e125fe30feb86acd2c110d08e8" translate="yes" xml:space="preserve">
          <source>The number of ms before cache folder lockfiles are considered stale.</source>
          <target state="translated">缓存文件夹锁文件被认为是陈旧的前的毫秒数。</target>
        </trans-unit>
        <trans-unit id="f256d0b310ccacfeda313bbb54a752748c950be5" translate="yes" xml:space="preserve">
          <source>The official public npm registry is at &lt;a href=&quot;https://registry.npmjs.org/&quot;&gt;https://registry.npmjs.org/&lt;/a&gt;. It is powered by a CouchDB database, of which there is a public mirror at &lt;a href=&quot;https://skimdb.npmjs.com/registry&quot;&gt;https://skimdb.npmjs.com/registry&lt;/a&gt;. The code for the couchapp is available at &lt;a href=&quot;https://github.com/npm/npm-registry-couchapp&quot;&gt;https://github.com/npm/npm-registry-couchapp&lt;/a&gt;.</source>
          <target state="translated">官方公共npm注册表位于&lt;a href=&quot;https://registry.npmjs.org/&quot;&gt;https://registry.npmjs.org/&lt;/a&gt;。它由CouchDB数据库提供动力，该数据库在&lt;a href=&quot;https://skimdb.npmjs.com/registry&quot;&gt;https://skimdb.npmjs.com/registry上&lt;/a&gt;有一个公共镜像。该沙发应用程序的代码可在&lt;a href=&quot;https://github.com/npm/npm-registry-couchapp&quot;&gt;https://github.com/npm/npm-registry-couchapp中获得&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fbe36bafd9f7a1d5c3d02b8f2f8f5968d4f146bb" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;files&lt;/code&gt; field is an array of file patterns that describes the entries to be included when your package is installed as a dependency. File patterns follow a similar syntax to &lt;code&gt;.gitignore&lt;/code&gt;, but reversed: including a file, directory, or glob pattern (&lt;code&gt;*&lt;/code&gt;, &lt;code&gt;**/*&lt;/code&gt;, and such) will make it so that file is included in the tarball when it's packed. Omitting the field will make it default to &lt;code&gt;[&quot;*&quot;]&lt;/code&gt;, which means it will include all files.</source>
          <target state="translated">可选 &lt;code&gt;files&lt;/code&gt; 字段是文件模式的数组，描述了将软件包作为依赖项安装时要包括的条目。文件模式遵循与 &lt;code&gt;.gitignore&lt;/code&gt; 类似的语法，但是相反：包括文件，目录或全局模式（ &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;**/*&lt;/code&gt; 等）将使文件模式成为打包文件时将其包含在tarball中。省略该字段将使其默认为 &lt;code&gt;[&quot;*&quot;]&lt;/code&gt; ，这意味着它将包括所有文件。</target>
        </trans-unit>
        <trans-unit id="c9bd0c5b12efbecf59f18b7ecedda74ffb026ad5" translate="yes" xml:space="preserve">
          <source>The package contents should reside in a subfolder inside the tarball (usually it is called &lt;code&gt;package/&lt;/code&gt;). npm strips one directory layer when installing the package (an equivalent of &lt;code&gt;tar x --strip-components=1&lt;/code&gt; is run).</source>
          <target state="translated">软件包内容应位于tarball的子文件夹中（通常称为 &lt;code&gt;package/&lt;/code&gt; ）。npm在安装软件包时会剥离一个目录层（运行 &lt;code&gt;tar x --strip-components=1&lt;/code&gt; 等效）。</target>
        </trans-unit>
        <trans-unit id="c7a1c761f02818d99cf5b00ce8a09e149e7e9f96" translate="yes" xml:space="preserve">
          <source>The package is not already installed globally, or</source>
          <target state="translated">软件包还没有在全球范围内安装,或者</target>
        </trans-unit>
        <trans-unit id="7da3f673b988e46b03dcc1c1556673e42a65a4df" translate="yes" xml:space="preserve">
          <source>The package must contain a &lt;code&gt;package.json&lt;/code&gt; file with &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt; properties.</source>
          <target state="translated">该软件包必须包含具有 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;version&lt;/code&gt; 属性的 &lt;code&gt;package.json&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="0835e7c9ad6b78e1354ef995a30ca6441931e6e2" translate="yes" xml:space="preserve">
          <source>The package name can be optionally prefixed with a scope. See &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;. The scope must be preceded by an @-symbol and followed by a slash.</source>
          <target state="translated">包名称可以可选地以范围为前缀。参见 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; 。作用域之前必须加一个@符号，再加上一个斜杠。</target>
        </trans-unit>
        <trans-unit id="37ceff0dc9931da7b49be36503ae665194c14c21" translate="yes" xml:space="preserve">
          <source>The package will be removed from listings on the site within a few minutes of making it private.</source>
          <target state="translated">包裹将在私有化后的几分钟内从网站上的列表中删除。</target>
        </trans-unit>
        <trans-unit id="cd8d1bccb23f58bbd972fba7b3d5c6f77d216adc" translate="yes" xml:space="preserve">
          <source>The package.json &quot;config&quot; keys are overwritten in the environment if there is a config param of &lt;code&gt;&amp;lt;name&amp;gt;[@&amp;lt;version&amp;gt;]:&amp;lt;key&amp;gt;&lt;/code&gt;. For example, if the package.json has this:</source>
          <target state="translated">如果存在 &lt;code&gt;&amp;lt;name&amp;gt;[@&amp;lt;version&amp;gt;]:&amp;lt;key&amp;gt;&lt;/code&gt; 的配置参数，则package.json&amp;ldquo; config&amp;rdquo;键在环境中将被覆盖。例如，如果package.json具有以下内容：</target>
        </trans-unit>
        <trans-unit id="04334ee9c160b44e1dc91f20944c2f1803c42b1d" translate="yes" xml:space="preserve">
          <source>The package.json File</source>
          <target state="translated">包.json文件</target>
        </trans-unit>
        <trans-unit id="b697535570b02d55c6572fa72a1b5be12ba3839c" translate="yes" xml:space="preserve">
          <source>The package.json fields are tacked onto the &lt;code&gt;npm_package_&lt;/code&gt; prefix. So, for instance, if you had &lt;code&gt;{&quot;name&quot;:&quot;foo&quot;, &quot;version&quot;:&quot;1.2.5&quot;}&lt;/code&gt; in your package.json file, then your package scripts would have the &lt;code&gt;npm_package_name&lt;/code&gt; environment variable set to &quot;foo&quot;, and the &lt;code&gt;npm_package_version&lt;/code&gt; set to &quot;1.2.5&quot;. You can access these variables in your code with &lt;code&gt;process.env.npm_package_name&lt;/code&gt; and &lt;code&gt;process.env.npm_package_version&lt;/code&gt;, and so on for other fields.</source>
          <target state="translated">package.json字段添加到 &lt;code&gt;npm_package_&lt;/code&gt; 前缀。因此，例如，如果您在package.json文件中有 &lt;code&gt;{&quot;name&quot;:&quot;foo&quot;, &quot;version&quot;:&quot;1.2.5&quot;}&lt;/code&gt; ，那么您的软件包脚本会将 &lt;code&gt;npm_package_name&lt;/code&gt; 环境变量设置为&amp;ldquo; foo&amp;rdquo;，并将 &lt;code&gt;npm_package_version&lt;/code&gt; 设置为&amp;ldquo; 1.2.5&amp;rdquo;。您可以使用 &lt;code&gt;process.env.npm_package_name&lt;/code&gt; 和 &lt;code&gt;process.env.npm_package_version&lt;/code&gt; 等在代码中访问这些变量，以此类推。</target>
        </trans-unit>
        <trans-unit id="802f4781b985eef7776f1c283e1080abda840c8b" translate="yes" xml:space="preserve">
          <source>The path to the code that contains the vulnerability.</source>
          <target state="translated">包含漏洞的代码的路径。</target>
        </trans-unit>
        <trans-unit id="1e620ff2fae333f1325a2521f35f69cb53a2f3a6" translate="yes" xml:space="preserve">
          <source>The presence of a package lock changes the installation behavior such that:</source>
          <target state="translated">包锁的存在改变了安装行为,这样:</target>
        </trans-unit>
        <trans-unit id="1ea7dd04ff070eb43aa2884edd3481a5ee1b9c1f" translate="yes" xml:space="preserve">
          <source>The primary npm registry, &lt;code&gt;registry.npmjs.com&lt;/code&gt;, or another service that uses the registry API, is available.</source>
          <target state="translated">可以使用主要的npm注册表 &lt;code&gt;registry.npmjs.com&lt;/code&gt; 或其他使用注册表API的服务。</target>
        </trans-unit>
        <trans-unit id="707f3c058524a5a65c8ca2b32b8db9b2e0105259" translate="yes" xml:space="preserve">
          <source>The program to use to view help content.</source>
          <target state="translated">用于查看帮助内容的程序。</target>
        </trans-unit>
        <trans-unit id="e6c2f65f573cd49594bbeaf9f38f0153e80a7e9e" translate="yes" xml:space="preserve">
          <source>The project &lt;strong&gt;must&lt;/strong&gt; have an existing &lt;code&gt;package-lock.json&lt;/code&gt; or &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt;.</source>
          <target state="translated">该项目&lt;strong&gt;必须&lt;/strong&gt;具有现有的 &lt;code&gt;package-lock.json&lt;/code&gt; 或 &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; shrinkwrap.json。</target>
        </trans-unit>
        <trans-unit id="b06b4c078fa7c2dceae074827cec8432c8de5cdb" translate="yes" xml:space="preserve">
          <source>The purpose for this behavior is twofold. First, prerelease versions frequently are updated very quickly, and contain many breaking changes that are (by the author's design) not yet fit for public consumption. Therefore, by default, they are excluded from range matching semantics.</source>
          <target state="translated">这种行为的目的有两个。首先,预发布版本经常更新得非常快,并且包含了许多(根据作者的设计)还不适合公开使用的突破性变化。因此,默认情况下,它们被排除在范围匹配语义之外。</target>
        </trans-unit>
        <trans-unit id="325c5946ddd62d8878a09f28825bd3c599cbe68c" translate="yes" xml:space="preserve">
          <source>The range &lt;code&gt;1.2.7 || &amp;gt;=1.2.9 &amp;lt;2.0.0&lt;/code&gt; would match the versions &lt;code&gt;1.2.7&lt;/code&gt;, &lt;code&gt;1.2.9&lt;/code&gt;, and &lt;code&gt;1.4.6&lt;/code&gt;, but not the versions &lt;code&gt;1.2.8&lt;/code&gt; or &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="translated">范围 &lt;code&gt;1.2.7 || &amp;gt;=1.2.9 &amp;lt;2.0.0&lt;/code&gt; 将匹配版本 &lt;code&gt;1.2.7&lt;/code&gt; ， &lt;code&gt;1.2.9&lt;/code&gt; 和 &lt;code&gt;1.4.6&lt;/code&gt; ，但不是版本 &lt;code&gt;1.2.8&lt;/code&gt; 或 &lt;code&gt;2.0.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be2f49fab5b3d5f5fb56dec08d654fe83582f26d" translate="yes" xml:space="preserve">
          <source>The readme file is created by the package developer. If done well, it explains the purpose of the package, and how to use it.</source>
          <target state="translated">readme文件是由软件包开发者创建的。如果做得很好,它会解释软件包的目的,以及如何使用它。</target>
        </trans-unit>
        <trans-unit id="7e949b5c0cab13fc1b44fb683c8942d1ea6a5616" translate="yes" xml:space="preserve">
          <source>The recommended use-case for &lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; is applications deployed through the publishing process on the registry: for example, daemons and command-line tools intended as global installs or &lt;code&gt;devDependencies&lt;/code&gt;. It's strongly discouraged for library authors to publish this file, since that would prevent end users from having control over transitive dependency updates.</source>
          <target state="translated">&lt;code&gt;npm-shrinkwrap.json&lt;/code&gt; 的推荐用例是通过注册表上的发布过程部署的应用程序：例如，用作全局安装或 &lt;code&gt;devDependencies&lt;/code&gt; 的守护程序和命令行工具。强烈建议图书馆作者不要发布此文件，因为这将阻止最终用户控制传递依赖项更新。</target>
        </trans-unit>
        <trans-unit id="1e2413acac0a2b86aa89824837e669a7eede9735" translate="yes" xml:space="preserve">
          <source>The recovery procedure is explained below.</source>
          <target state="translated">下面对恢复程序进行说明。</target>
        </trans-unit>
        <trans-unit id="0096058edfb5a1e4a18f19b29c58e0e55033d9ce" translate="yes" xml:space="preserve">
          <source>The registry URL used is determined by the scope of the package (see &lt;code&gt;&lt;a href=&quot;scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;). If no scope is specified, the default registry is used, which is supplied by the &lt;code&gt;registry&lt;/code&gt; config parameter. See &lt;code&gt;&lt;a href=&quot;../cli/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; for more on managing npm's configuration.</source>
          <target state="translated">使用的注册表URL由程序包的范围确定（请参阅 &lt;code&gt;&lt;a href=&quot;scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; ）。如果未指定范围，则使用默认注册表，由 &lt;code&gt;registry&lt;/code&gt; 配置参数提供。有关管理npm &lt;code&gt;&lt;a href=&quot;config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; 的更多信息，请参见 &lt;code&gt;&lt;a href=&quot;../cli/config&quot;&gt;npm-config&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../files/npmrc&quot;&gt;npmrc&lt;/a&gt;&lt;/code&gt; 和npm-config。</target>
        </trans-unit>
        <trans-unit id="a3939408bbfae593730dd72d20cffb52684e34a1" translate="yes" xml:space="preserve">
          <source>The registry you installed from is no longer available, or allows mutation of versions (unlike the primary npm registry), and a different version of a package exists under the same version number now.</source>
          <target state="translated">你安装的注册表已经不可用了,或者说允许版本突变(不像npm主注册表),现在同一个版本号下存在不同版本的包。</target>
        </trans-unit>
        <trans-unit id="559e5c229b145c643f469b3ce510d7341ca8cafe" translate="yes" xml:space="preserve">
          <source>The registry you want to send cli metrics to if &lt;code&gt;send-metrics&lt;/code&gt; is true.</source>
          <target state="translated">如果 &lt;code&gt;send-metrics&lt;/code&gt; 为true，则要向其发送cli指标的注册表。</target>
        </trans-unit>
        <trans-unit id="666df3062df256cef99167f2b17611c095d94c85" translate="yes" xml:space="preserve">
          <source>The root cache folder.</source>
          <target state="translated">根目录下的缓存文件夹。</target>
        </trans-unit>
        <trans-unit id="ed9a2781d98bba491623fb04817b10f26ccb5faa" translate="yes" xml:space="preserve">
          <source>The scope is optional and follows the usual rules for &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">范围是可选的，并且遵循 &lt;code&gt;&lt;a href=&quot;../misc/scope&quot;&gt;npm-scope&lt;/a&gt;&lt;/code&gt; 的通常规则。</target>
        </trans-unit>
        <trans-unit id="0e6aa8591762c7a597f8099ea3c554f10effabf4" translate="yes" xml:space="preserve">
          <source>The second line is the equivalent of doing:</source>
          <target state="translated">第二行相当于做。</target>
        </trans-unit>
        <trans-unit id="60a2a840ccc50f59dd9c59ef8b0aee3c9287767f" translate="yes" xml:space="preserve">
          <source>The semantic version range that describes which versions contain a fix for the vulnerability.</source>
          <target state="translated">语义版本范围,它描述了哪些版本包含漏洞的修复。</target>
        </trans-unit>
        <trans-unit id="1b4b668b40c2e51fa515ec5287c49bbc597981a9" translate="yes" xml:space="preserve">
          <source>The semantic versioner for npm.</source>
          <target state="translated">npm的语义版本器。</target>
        </trans-unit>
        <trans-unit id="fbe530a06042228d2c8a0cb5856ee7abaad61c18" translate="yes" xml:space="preserve">
          <source>The severity of the vulnerability, determined by the impact and exploitability of the vulnerability in its most common use case.</source>
          <target state="translated">漏洞的严重性,由该漏洞在最常见使用情况下的影响和可利用性决定。</target>
        </trans-unit>
        <trans-unit id="f5097eaac6451577b3a4a3bbda94587cc8e99adb" translate="yes" xml:space="preserve">
          <source>The shared secret will be sent along to the URL endpoint so you can verify the request came from your own configured hook.</source>
          <target state="translated">共享的秘密将被一起发送到URL端点,这样你就可以验证请求来自你自己配置的钩子。</target>
        </trans-unit>
        <trans-unit id="30a7ebf312f4ceb49f4e7fab5eb3641fe7aaf004" translate="yes" xml:space="preserve">
          <source>The shell to run for the &lt;code&gt;npm explore&lt;/code&gt; command.</source>
          <target state="translated">要为 &lt;code&gt;npm explore&lt;/code&gt; 命令运行的shell 。</target>
        </trans-unit>
        <trans-unit id="76c1c67027051beb641c45fe3e8fab5867b2a449" translate="yes" xml:space="preserve">
          <source>The shell to use for scripts run with the &lt;code&gt;npm run&lt;/code&gt; command.</source>
          <target state="translated">用于脚本的shell通过 &lt;code&gt;npm run&lt;/code&gt; 命令运行。</target>
        </trans-unit>
        <trans-unit id="a9a2f29747cf28fbd7beb5fe162efdb801fcb2fd" translate="yes" xml:space="preserve">
          <source>The simplest way to avoid semver problems with tags is to use tags that do not begin with a number or the letter &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">避免标签出现错误的最简单方法是使用不以数字或字母 &lt;code&gt;v&lt;/code&gt; 开头的标签。</target>
        </trans-unit>
        <trans-unit id="a561a9ddcba2426edc04e285887cac38cbc9daed" translate="yes" xml:space="preserve">
          <source>The string that starts all the debugging log output.</source>
          <target state="translated">开始所有调试日志输出的字符串。</target>
        </trans-unit>
        <trans-unit id="f66d25750206f6ec2e1aa2db778f68e14f901519" translate="yes" xml:space="preserve">
          <source>The super admin is the only person who can add users to the org because it impacts the monthly bill. The super admin will use the website to manage membership. Every org has a &lt;code&gt;developers&lt;/code&gt; team that all users are automatically added to.</source>
          <target state="translated">超级管理员是唯一可以将用户添加到组织的人，因为这会影响每月账单。超级管理员将使用该网站管理会员资格。每个组织都有一个自动将所有用户添加到的 &lt;code&gt;developers&lt;/code&gt; 团队。</target>
        </trans-unit>
        <trans-unit id="f17731aa104655b3c9c267b933a3fc18b2eb8b9a" translate="yes" xml:space="preserve">
          <source>The synopsis above loads the completions into your current shell. Adding it to your ~/.bashrc or ~/.zshrc will make the completions available everywhere:</source>
          <target state="translated">上面的概要会将完整的内容加载到您当前的shell中。将它添加到您的 ~/.bashrc 或 ~/.zshrc 中,将使完整的内容在任何地方都可以使用。</target>
        </trans-unit>
        <trans-unit id="1ead263200558cf5afddb7e97f5d0eb408f1639b" translate="yes" xml:space="preserve">
          <source>The team admin is the person who manages team creation, team membership, and package access for teams. The team admin grants package access to teams, not individuals.</source>
          <target state="translated">团队管理员是管理团队创建、团队成员和团队的套餐访问的人。团队管理员授予团队而非个人的套餐访问权。</target>
        </trans-unit>
        <trans-unit id="436a611a2e0e43ff49c3793780e640475430f423" translate="yes" xml:space="preserve">
          <source>The token is not derived from your password, but changing your password will invalidate all tokens. The token will be valid until the password is changed. You can also invalidate a single token by logging out on a machine that is logged in with that token.</source>
          <target state="translated">该令牌并非来自于你的密码,但更改密码将使所有令牌无效。该令牌将一直有效,直到密码被更改。您也可以通过注销使用该令牌登录的机器来使单个令牌无效。</target>
        </trans-unit>
        <trans-unit id="7209e1ab85f12bd0f869231592507b455056ba97" translate="yes" xml:space="preserve">
          <source>The tree is walked and any missing dependencies are installed in the usual fashion.</source>
          <target state="translated">树被走过,并以通常的方式安装任何缺失的依赖关系。</target>
        </trans-unit>
        <trans-unit id="901a4e762caa7812f1008ebe29b6e595ce51ff59" translate="yes" xml:space="preserve">
          <source>The tree shown is the logical dependency tree, based on package dependencies, not the physical layout of your node_modules folder.</source>
          <target state="translated">所显示的树是基于包依赖关系的逻辑依赖树,而不是node_modules文件夹的物理布局。</target>
        </trans-unit>
        <trans-unit id="91d481d638cade3bfeeeda3e13f6433f710db02a" translate="yes" xml:space="preserve">
          <source>The url to the project homepage.</source>
          <target state="translated">项目主页的网址。</target>
        </trans-unit>
        <trans-unit id="3929799d0a19d05c1e8a3aa08955b9b5f8c01a19" translate="yes" xml:space="preserve">
          <source>The url to your project's issue tracker and / or the email address to which issues should be reported. These are helpful for people who encounter issues with your package.</source>
          <target state="translated">您的项目问题跟踪器的网址和/或电子邮件地址,应该向其报告问题。这些对人们遇到与你的软件包有关的问题时很有帮助。</target>
        </trans-unit>
        <trans-unit id="34b0b3dc9483237c15e23719e8cdd7b65870f304" translate="yes" xml:space="preserve">
          <source>The username, password, and email are read in from prompts.</source>
          <target state="translated">从提示中读入用户名、密码和电子邮件。</target>
        </trans-unit>
        <trans-unit id="542f55a20577b1bd7f2e7b5677fac1af8a89ef15" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package author's email.</source>
          <target state="translated">该值 &lt;code&gt;npm init&lt;/code&gt; 应该是默认对于包的作者的电子邮件使用。</target>
        </trans-unit>
        <trans-unit id="9ddb785f8e73da89fbc62ae3da9bb4d53cf27641" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package author's homepage.</source>
          <target state="translated">该值 &lt;code&gt;npm init&lt;/code&gt; 应该是默认的包作者的主页使用。</target>
        </trans-unit>
        <trans-unit id="12f69f86bcde9d4c15acc7fcd919187887c941f4" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package author's name.</source>
          <target state="translated">默认情况下， &lt;code&gt;npm init&lt;/code&gt; 值应使用软件包作者的姓名。</target>
        </trans-unit>
        <trans-unit id="7ea162733b47518881f1ee8ac35ee87f82f0d8ad" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;npm init&lt;/code&gt; should use by default for the package license.</source>
          <target state="translated">默认情况下，软件包许可证应使用值 &lt;code&gt;npm init&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5e938bee267dfa2c942de7ecae952efd6db6542e" translate="yes" xml:space="preserve">
          <source>The value that &lt;code&gt;npm init&lt;/code&gt; should use by default for the package version number, if not already set in package.json.</source>
          <target state="translated">如果尚未在package.json中设置，则默认情况下 &lt;code&gt;npm init&lt;/code&gt; 应当使用该值作为软件包版本号。</target>
        </trans-unit>
        <trans-unit id="3262aca4feb9e7d5f88a9f66895415561511d6ba" translate="yes" xml:space="preserve">
          <source>The version of the package this is a package-lock for. This must match what's in &lt;code&gt;package.json&lt;/code&gt;.</source>
          <target state="translated">这是程序包锁定的程序包版本。这必须匹配 &lt;code&gt;package.json&lt;/code&gt; 中的内容。</target>
        </trans-unit>
        <trans-unit id="ca820b1c00068405b707b0523177e17868ea28de" translate="yes" xml:space="preserve">
          <source>The welcome message has links to helpful resources; you might want to flag it for later reference.</source>
          <target state="translated">欢迎信息中有一些有用资源的链接,您可能想把它标记出来,以便以后参考。</target>
        </trans-unit>
        <trans-unit id="2229e2aee127ce204a467ac0cfded102f8700e13" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;npm update&lt;/code&gt; will install &lt;code&gt;dep1@0.4.1&lt;/code&gt;, because that is the highest-sorting version that satisfies &lt;code&gt;^0.4.0&lt;/code&gt; (&lt;code&gt;&amp;gt;= 0.4.0 &amp;lt;0.5.0&lt;/code&gt;)</source>
          <target state="translated">然后， &lt;code&gt;npm update&lt;/code&gt; 将安装 &lt;code&gt;dep1@0.4.1&lt;/code&gt; ，因为那是满足 &lt;code&gt;^0.4.0&lt;/code&gt; （ &lt;code&gt;&amp;gt;= 0.4.0 &amp;lt;0.5.0&lt;/code&gt; ）的最高排序版本。</target>
        </trans-unit>
        <trans-unit id="ae6a4d7cb01dc3e67960c5080562e924035de7d8" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;npm update&lt;/code&gt; will install &lt;code&gt;dep1@1.2.2&lt;/code&gt;, because &lt;code&gt;1.2.2&lt;/code&gt; is &lt;code&gt;latest&lt;/code&gt; and &lt;code&gt;1.2.2&lt;/code&gt; satisfies &lt;code&gt;^1.1.1&lt;/code&gt;.</source>
          <target state="translated">然后 &lt;code&gt;npm update&lt;/code&gt; 将安装 &lt;code&gt;dep1@1.2.2&lt;/code&gt; ，因为 &lt;code&gt;1.2.2&lt;/code&gt; 是 &lt;code&gt;latest&lt;/code&gt; 并且 &lt;code&gt;1.2.2&lt;/code&gt; 满足 &lt;code&gt;^1.1.1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78c1b60bb64c343bf8092563acf190118600a330" translate="yes" xml:space="preserve">
          <source>Then go into the node-repl, and try using require(&quot;my-thing&quot;) to bring in your module's main module.</source>
          <target state="translated">然后进入node-repl,尝试使用require(&quot;my-thing&quot;)来引入你的模块主模块。</target>
        </trans-unit>
        <trans-unit id="41c4956c52a9e102eb2b215d8bea52527bf3f432" translate="yes" xml:space="preserve">
          <source>Then include a file named &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; at the top level of the package.</source>
          <target state="translated">然后在包的顶层包含一个名为 &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 的文件。</target>
        </trans-unit>
        <trans-unit id="47997e7d7bdd4f7cbd4932dbe6ce4accf3fd4161" translate="yes" xml:space="preserve">
          <source>Then you can check in the &lt;a href=&quot;../files/npmrc&quot;&gt;&lt;code&gt;.npmrc&lt;/code&gt;&lt;/a&gt; file, replacing your token with the environment variable.</source>
          <target state="translated">然后，您可以检入&lt;a href=&quot;../files/npmrc&quot;&gt; &lt;code&gt;.npmrc&lt;/code&gt; &lt;/a&gt;文件，将您的令牌替换为环境变量。</target>
        </trans-unit>
        <trans-unit id="9894f0ca73f13327c0779c9a1569a914ead3e20a" translate="yes" xml:space="preserve">
          <source>There are a few things that you need to do above the simple steps that your users will do to install your program.</source>
          <target state="translated">在你的用户安装你的程序的简单步骤之上,你还需要做一些事情。</target>
        </trans-unit>
        <trans-unit id="e91d83768505bced45095c83b9060d73c30bc285" translate="yes" xml:space="preserve">
          <source>There are additional resources for beginners and for everyone at the end of this chapter in the &quot;Learn More&quot; section.</source>
          <target state="translated">在本章结尾的 &quot;了解更多 &quot;部分,有适合初学者和大家的额外资源。</target>
        </trans-unit>
        <trans-unit id="e1c1a11e380a4f3a26c31bd9924e5a0f626552c6" translate="yes" xml:space="preserve">
          <source>There are several settings that you can use in the new token. Please see this &lt;a href=&quot;../getting-started/working_with_tokens&quot;&gt;doc&lt;/a&gt; for details.</source>
          <target state="translated">您可以在新令牌中使用几种设置。请参阅此&lt;a href=&quot;../getting-started/working_with_tokens&quot;&gt;文档&lt;/a&gt;以了解详细信息。</target>
        </trans-unit>
        <trans-unit id="cea595242b6d9737506ca7d3fc2f9ce5012a4cac" translate="yes" xml:space="preserve">
          <source>There are some very rare and pathological edge-cases where a cycle can cause npm to try to install a never-ending tree of packages. Here is the simplest case:</source>
          <target state="translated">在一些非常罕见的病态边缘情况下,一个循环会导致npm试图安装一棵永无止境的软件包树。这是一个最简单的例子。</target>
        </trans-unit>
        <trans-unit id="f63ee96b3ad67d6780e295e796b912d1d387ce2d" translate="yes" xml:space="preserve">
          <source>There are three levels of org users:</source>
          <target state="translated">org用户有三个级别。</target>
        </trans-unit>
        <trans-unit id="f5bee0534c6f9bb2a0de1f990c02daa01b064916" translate="yes" xml:space="preserve">
          <source>There are two basic ways to create a package.json file.</source>
          <target state="translated">创建package.json文件有两种基本方法。</target>
        </trans-unit>
        <trans-unit id="cd4747399abfb3c1cd76a0a0544e9b48296a1504" translate="yes" xml:space="preserve">
          <source>There are two levels of authentication, &lt;em&gt;&lt;strong&gt;auth-only&lt;/strong&gt;&lt;/em&gt; and &lt;em&gt;&lt;strong&gt;auth-and-writes&lt;/strong&gt;&lt;/em&gt;.</source>
          <target state="translated">认证分为两种级别，即&lt;em&gt;&lt;strong&gt;auth-only&lt;/strong&gt;&lt;/em&gt;和&lt;em&gt;&lt;strong&gt;auth-and-writes&lt;/strong&gt;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="222abb41d8c271554b2c8ac41c6bb4a33f2f9632" translate="yes" xml:space="preserve">
          <source>There are two main commands:</source>
          <target state="translated">有两个主要命令。</target>
        </trans-unit>
        <trans-unit id="44c65e0bc288743fc0090892e4b479905348a656" translate="yes" xml:space="preserve">
          <source>There are two ways to install npm packages: locally or globally. Choose which kind of installation to use based on how you want to use the package.</source>
          <target state="translated">有两种安装npm包的方式:本地安装或全局安装。根据你想使用软件包的方式来选择使用哪种安装方式。</target>
        </trans-unit>
        <trans-unit id="f76c4bb8aee7179c5132d53a4f786447f0061dda" translate="yes" xml:space="preserve">
          <source>There is currently no method exposed through npm to inspect or directly manage the contents of this cache. In order to access it, &lt;code&gt;cacache&lt;/code&gt; must be used directly.</source>
          <target state="translated">当前没有通过npm公开的方法来检查或直接管理此缓存的内容。为了访问它，必须直接使用 &lt;code&gt;cacache&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="168bdd4395c5e0196d9aa6f64ea3b08100050e83" translate="yes" xml:space="preserve">
          <source>There is nothing special about the way Node treats scope folders. This simply requires the &lt;code&gt;mypackage&lt;/code&gt; module in the folder named &lt;code&gt;@myorg&lt;/code&gt;.</source>
          <target state="translated">Node处理范围文件夹的方式没有什么特别的。这仅需要名为 &lt;code&gt;@myorg&lt;/code&gt; 的文件夹中的 &lt;code&gt;mypackage&lt;/code&gt; 模块。</target>
        </trans-unit>
        <trans-unit id="056811685601e94a316aaea43434807672079179" translate="yes" xml:space="preserve">
          <source>There is plenty of room on the registry.</source>
          <target state="translated">登记处的空间很大。</target>
        </trans-unit>
        <trans-unit id="2979ebe51075c229a4def0f53c216e2ee22e955e" translate="yes" xml:space="preserve">
          <source>There sometimes arise cases where a user publishes a module, and then later, some other user wants to use that name. Here are some common ways that happens (each of these is based on actual events.)</source>
          <target state="translated">有时会出现这样的情况:一个用户发布了一个模块,然后其他用户想使用这个名字。以下是一些常见的情况 (每一种情况都是基于实际事件。)</target>
        </trans-unit>
        <trans-unit id="ca92da9acb9651a8eae3f374ed626c4b776241a1" translate="yes" xml:space="preserve">
          <source>These are just a few examples of ways developers use npm. If you'd like to add a bullet point, comment &lt;a href=&quot;https://github.com/npm/docs/issues/944&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">这些只是开发人员使用npm的一些示例。如果您想添加一个项目符号，请&lt;a href=&quot;https://github.com/npm/docs/issues/944&quot;&gt;在此处&lt;/a&gt;评论。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
