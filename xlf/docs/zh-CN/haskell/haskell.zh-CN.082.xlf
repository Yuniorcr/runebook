<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="73ecce489f9b016a85e9caf7097faa854323f633" translate="yes" xml:space="preserve">
          <source>Return the number of set bits in the argument. This number is known as the population count or the Hamming weight.</source>
          <target state="translated">返回参数中设置的位数。这个数字被称为人口数或汉明权重。</target>
        </trans-unit>
        <trans-unit id="001826001d925fec3d8e09c965f9e3b649b1b3c4" translate="yes" xml:space="preserve">
          <source>Return the remainder when the &lt;code&gt;Addr#&lt;/code&gt; arg, treated like an &lt;code&gt;Int#&lt;/code&gt;, is divided by the &lt;code&gt;Int#&lt;/code&gt; arg.</source>
          <target state="translated">当被视为 &lt;code&gt;Int#&lt;/code&gt; 的 &lt;code&gt;Addr#&lt;/code&gt; arg 除以 &lt;code&gt;Int#&lt;/code&gt; arg 时，返回余数。</target>
        </trans-unit>
        <trans-unit id="5e6078fa513ac85f0eda91b236f8fdce5222aa5e" translate="yes" xml:space="preserve">
          <source>Return the semaphore's current value.</source>
          <target state="translated">返回信号站的当前值。</target>
        </trans-unit>
        <trans-unit id="b5d147e285e6b05dbda5c74bad5337bb41dbd8b1" translate="yes" xml:space="preserve">
          <source>Return the size (in bytes) of the total amount of data in the Compact#</source>
          <target state="translated">返回Compact#中数据总量的大小(以字节为单位)。</target>
        </trans-unit>
        <trans-unit id="98e01265cf79d949deadddc3ba5e5f6f758f4186" translate="yes" xml:space="preserve">
          <source>Return the size of the array in bytes.</source>
          <target state="translated">返回数组的大小,单位为字节。</target>
        </trans-unit>
        <trans-unit id="8704ecbd6192b39b6106bea7ebf11974686a3858" translate="yes" xml:space="preserve">
          <source>Return the size of the array in bytes. Note that this is deprecated as it is unsafe in the presence of concurrent resize operations on the same byte array.</source>
          <target state="translated">返回数组的大小,单位为字节。请注意,这已被废弃,因为在同一个字节数组上进行并发的调整大小操作时,这是不安全的。</target>
        </trans-unit>
        <trans-unit id="dfa9f1634a0cad72a30578589079946deafd9460" translate="yes" xml:space="preserve">
          <source>Return the state from the internals of the monad.</source>
          <target state="translated">从单体的内部返回状态。</target>
        </trans-unit>
        <trans-unit id="7ec810d4714696625c6439eddff2c4628fa57f73" translate="yes" xml:space="preserve">
          <source>Return the time value, or fail if the input could not be parsed using the given format.</source>
          <target state="translated">返回时间值,如果不能使用给定格式解析输入,则返回失败。</target>
        </trans-unit>
        <trans-unit id="67594615fe0fd713d7301e1cf95394f84441524a" translate="yes" xml:space="preserve">
          <source>Return the value computed by a state thread. The &lt;code&gt;forall&lt;/code&gt; ensures that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is inaccessible to the rest of the program.</source>
          <target state="translated">返回状态线程计算的值。的 &lt;code&gt;forall&lt;/code&gt; 确保了由所使用的内部状态 &lt;code&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算是不可访问的程序的其余部分。</target>
        </trans-unit>
        <trans-unit id="08ec30101641388ed0799d058467b964d16b9a11" translate="yes" xml:space="preserve">
          <source>Return the value computed by a state thread. The &lt;code&gt;forall&lt;/code&gt; ensures that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is inaccessible to the rest of the program.</source>
          <target state="translated">返回状态线程计算的值。的 &lt;code&gt;forall&lt;/code&gt; 确保了由所使用的内部状态 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算是不可访问的程序的其余部分。</target>
        </trans-unit>
        <trans-unit id="5eb87b59acb5c444781344b0f77efc2846c346fe" translate="yes" xml:space="preserve">
          <source>Return the value computed by a state thread. The &lt;code&gt;forall&lt;/code&gt; ensures that the internal state used by the &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is inaccessible to the rest of the program.</source>
          <target state="translated">返回状态线程计算的值。的 &lt;code&gt;forall&lt;/code&gt; 确保了由所使用的内部状态 &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算是不可访问的程序的其余部分。</target>
        </trans-unit>
        <trans-unit id="2a81f979ce3d6a40db8e10b5ee216f1eed7fbeef" translate="yes" xml:space="preserve">
          <source>Return the value computed by an &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation. The &lt;code&gt;forall&lt;/code&gt; ensures that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is inaccessible to the rest of the program.</source>
          <target state="translated">返回由 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算得出的值。的 &lt;code&gt;forall&lt;/code&gt; 确保了由所使用的内部状态 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算是不可访问的程序的其余部分。</target>
        </trans-unit>
        <trans-unit id="2c3fe4fba80f409979cb4f6d8d58120117fc9c9b" translate="yes" xml:space="preserve">
          <source>Return the value computed by an &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation. The &lt;code&gt;forall&lt;/code&gt; ensures that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is inaccessible to the rest of the program.</source>
          <target state="translated">返回由 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算得出的值。的 &lt;code&gt;forall&lt;/code&gt; 确保了由所使用的内部状态 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算是不可访问的程序的其余部分。</target>
        </trans-unit>
        <trans-unit id="9d0082a9c912e15b1feb525005aab9eb60b8be4c" translate="yes" xml:space="preserve">
          <source>Return the value of the environment variable &lt;code&gt;var&lt;/code&gt;, or &lt;code&gt;Nothing&lt;/code&gt; if there is no such value.</source>
          <target state="translated">返回环境变量的值 &lt;code&gt;var&lt;/code&gt; 或 &lt;code&gt;Nothing&lt;/code&gt; ，如果没有这样的价值。</target>
        </trans-unit>
        <trans-unit id="1fe2d3d91d929346aa78f0873cf3985dba6a3e56" translate="yes" xml:space="preserve">
          <source>Return whether the given &lt;code&gt;&lt;a href=&quot;system-directory-internal#t:FileType&quot;&gt;FileType&lt;/a&gt;&lt;/code&gt; is a link.</source>
          <target state="translated">返回给定的 &lt;code&gt;&lt;a href=&quot;system-directory-internal#t:FileType&quot;&gt;FileType&lt;/a&gt;&lt;/code&gt; 是否为链接。</target>
        </trans-unit>
        <trans-unit id="9b4a5550d59915e56cad99e3c0f087b7602257cc" translate="yes" xml:space="preserve">
          <source>Returns $HOME env variable if set (including to an empty string).</source>
          <target state="translated">如果设置了,返回$HOME env变量(包括为空字符串)。</target>
        </trans-unit>
        <trans-unit id="030fb3b5f0545d8254f1c18f2171486ba7bed91a" translate="yes" xml:space="preserve">
          <source>Returns 1# if the object is contained in the compact, 0# otherwise.</source>
          <target state="translated">如果对象包含在契约中,返回1#,否则返回0#。</target>
        </trans-unit>
        <trans-unit id="31bf08f6e44b790a526f3ea37ca40cb2c13ca76b" translate="yes" xml:space="preserve">
          <source>Returns 1# if the object is in any compact at all, 0# otherwise.</source>
          <target state="translated">如果对象处于任何压缩状态,返回1#,否则返回0#。</target>
        </trans-unit>
        <trans-unit id="40de57011981525670a3f92d1c62c69ee14f07ea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1#&lt;/code&gt; if the given pointers are equal and &lt;code&gt;0#&lt;/code&gt; otherwise.</source>
          <target state="translated">如果给定的指针相等，则返回 &lt;code&gt;1#&lt;/code&gt; ,否则返回 &lt;code&gt;0#&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="054506879fa255b3f44c6987f6925348a7c9958b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1#&lt;/code&gt; if valid, &lt;code&gt;0#&lt;/code&gt; otherwise.</source>
          <target state="translated">如果有效，则返回 &lt;code&gt;1#&lt;/code&gt; ，否则返回 &lt;code&gt;0#&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66861a05c2b6a00a48f4b73591c9c11c31784b76" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the current process's standard error is attached to a MinTTY console (e.g., Cygwin or MSYS). Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果当前进程的标准错误附加到MinTTY控制台（例如Cygwin或MSYS），则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。否则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cb06e70b306281690d4964d1014d6443ff8910b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the current session uses terminal-style interaction. (See &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">如果当前会话使用终端风格的交互，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。（请参阅 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="55ddad51179261e3fce77d477585e6ee7b9c48be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the document is empty</source>
          <target state="translated">如果文档为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6bcb06cf572ace1fb67c627721d6fa9375571e5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4381b423b7ed3206027d100df0db8796fec244b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is full.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 已满，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3dacac11929a3bbcaac1dcae5a04ad003fad46c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64d6bd42612b74dc3ea59431fe9eb65e59aa3cf2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1052b9398d6120dfadc74e0d652efcf7d43679cc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; is the given handle is attached to a MinTTY console (e.g., Cygwin or MSYS). Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果给定的句柄已连接到MinTTY控制台（例如Cygwin或MSYS），则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。否则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b67950267c64457459aa19a05557b38832b7aba9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the current process's standard error is attached to a MinTTY console (e.g., Cygwin or MSYS). Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3641a776d1e547e9c1672d18beae4e771e83fd0e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the document is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fb5e7b0993b7811aa6b29ad0dc4edafad50811" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97a55ba7afb2b3dddb5b79f91f2e61da9733a9a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is full.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32052b70ee89d7efa652e0da24350d5871d8f3f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9eb76bbfef5b534035f1fb75239cbbd1e800c2c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13abbe5f6ebe6768620139f449099bcf724d5ef5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; is the given handle is attached to a MinTTY console (e.g., Cygwin or MSYS). Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb1dc66a9aba039d8fb00faff4adccb11d691b4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; for any Unicode space character, and the control characters &lt;code&gt;\t&lt;/code&gt;, &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\r&lt;/code&gt;, &lt;code&gt;\f&lt;/code&gt;, &lt;code&gt;\v&lt;/code&gt;.</source>
          <target state="translated">对于任何Unicode空格字符和控制字符 &lt;code&gt;\t&lt;/code&gt; ， &lt;code&gt;\n&lt;/code&gt; ， &lt;code&gt;\r&lt;/code&gt; ， &lt;code&gt;\f&lt;/code&gt; 和 &lt;code&gt;\v&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="354cea2878218788cfa494d1ab10a88a0967a70d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the calling thread is &lt;em&gt;bound&lt;/em&gt;, that is, if it is safe to use foreign libraries that rely on thread-local state from the calling thread.</source>
          <target state="translated">如果&lt;em&gt;绑定&lt;/em&gt;了调用线程，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ，也就是说，如果可以安全地使用依赖于调用线程本地线程状态的外部库。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07b3211aa1ea6cabc6ac7d153daf99074ac49195" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; the given subscript lies in the range defined the bounding pair.</source>
          <target state="translated">如果给定下标位于边界对定义的范围内，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9687ecbbf8ea32d466eef44e6b0c5bed3f487cd5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:nullBigNat&quot;&gt;nullBigNat&lt;/a&gt;&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:isNullBigNat-35-&quot;&gt;isNullBigNat#&lt;/a&gt;&lt;/code&gt;) in case of underflow</source>
          <target state="translated">如果发生下溢，则返回 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:nullBigNat&quot;&gt;nullBigNat&lt;/a&gt;&lt;/code&gt; （请参见 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:isNullBigNat-35-&quot;&gt;isNullBigNat#&lt;/a&gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9df21b1c00d4c06244689abaf8fdc8b45b77e1be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Nothing&lt;/code&gt; if stack trace support isn't available on host machine.</source>
          <target state="translated">如果主机上不提供堆栈跟踪支持，则返回 &lt;code&gt;Nothing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="225bbaf513586d23567156d335aa2d43da865b15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the second vertex reachable from the first.</source>
          <target state="translated">如果第二个顶点可从第一个顶点到达，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79e34c79319ff106b22502e2cb995e1d7fcdaca1" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;[String]&lt;/code&gt; representing the current call stack. This can be useful for debugging.</source>
          <target state="translated">返回表示当前调用堆栈的 &lt;code&gt;[String]&lt;/code&gt; 。这对于调试很有用。</target>
        </trans-unit>
        <trans-unit id="f728eb85795ae241fe6ba9ceea04df69a4f91459" translate="yes" xml:space="preserve">
          <source>Returns a ByteString, because we have to force the result before returning it to ensure there are no errors lurking in it. The TH types don't have NFData instances, and even if they did, we have to serialize the value anyway, so we might as well serialize it to force it.</source>
          <target state="translated">返回一个ByteString,因为我们必须在返回结果之前强制执行,以确保没有错误潜伏在其中。TH类型没有NFData实例,即使有,我们也必须对值进行序列化,所以我们不妨将其序列化来强制执行。</target>
        </trans-unit>
        <trans-unit id="b333c2153cef9a52c787f55578053ac4ff50e4b8" translate="yes" xml:space="preserve">
          <source>Returns a duplicate of the original handle, with its own buffer. The two Handles will share a file pointer, however. The original handle's buffer is flushed, including discarding any input data, before the handle is duplicated.</source>
          <target state="translated">返回原始句柄的副本,有自己的缓冲区。但是,两个句柄将共享一个文件指针。在复制句柄之前,原句柄的缓冲区会被刷新,包括丢弃任何输入数据。</target>
        </trans-unit>
        <trans-unit id="03a895de8b7628324d51d76d7f6f6f7780bba4e4" translate="yes" xml:space="preserve">
          <source>Returns a list of all the elements of an array, in the same order as their indices.</source>
          <target state="translated">返回一个数组中所有元素的列表,顺序与它们的索引相同。</target>
        </trans-unit>
        <trans-unit id="ebb32386c6ecb499712e2aa0bad3a305fc93ad84" translate="yes" xml:space="preserve">
          <source>Returns a list of all the valid indices in an array.</source>
          <target state="translated">返回一个数组中所有有效索引的列表。</target>
        </trans-unit>
        <trans-unit id="c48f45abbd130e2787cb5db6b4f4c0174106f3a4" translate="yes" xml:space="preserve">
          <source>Returns a new array derived from the original array by applying a function to each of the elements.</source>
          <target state="translated">通过对每个元素应用一个函数,返回一个从原始数组衍生出来的新数组。</target>
        </trans-unit>
        <trans-unit id="dcaea403b41dea254087b3e3af90a56ecf3420c7" translate="yes" xml:space="preserve">
          <source>Returns a new array derived from the original array by applying a function to each of the indices.</source>
          <target state="translated">通过对每个索引应用一个函数,返回一个从原始数组衍生出来的新数组。</target>
        </trans-unit>
        <trans-unit id="0784b41850dcc90f8043d544ce24692388fabbf7" translate="yes" xml:space="preserve">
          <source>Returns an (encoded) result that depends on the THResultType</source>
          <target state="translated">返回一个依赖于THResultType的(编码)结果。</target>
        </trans-unit>
        <trans-unit id="069b53cbdc1831a2ad4dd9e41459e90be8ba17d1" translate="yes" xml:space="preserve">
          <source>Returns an STM action that can be used to wait for data to read from a file descriptor. The second returned value is an IO action that can be used to deregister interest in the file descriptor.</source>
          <target state="translated">返回一个STM动作,可用于等待从文件描述符读取数据。第二个返回值是一个IO操作,可用于取消对文件描述符的兴趣。</target>
        </trans-unit>
        <trans-unit id="a9a5fd7e27c63094640eafb67d49cd36e2cb689a" translate="yes" xml:space="preserve">
          <source>Returns an STM action that can be used to wait until data can be written to a file descriptor. The second returned value is an IO action that can be used to deregister interest in the file descriptor.</source>
          <target state="translated">返回一个STM动作,可用于等待数据可以写入文件描述符。第二个返回值是一个IO操作,可用于取消对文件描述符的兴趣。</target>
        </trans-unit>
        <trans-unit id="6d643fe07afdd98d0851bcf6b1d8f38b40abd0bc" translate="yes" xml:space="preserve">
          <source>Returns from the &lt;code&gt;Cont&lt;/code&gt; block.</source>
          <target state="translated">从 &lt;code&gt;Cont&lt;/code&gt; 块返回。</target>
        </trans-unit>
        <trans-unit id="41c6274ff072dc0df35107aa165a8e6946ebe8be" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the calling thread (GHC only).</source>
          <target state="translated">返回调用线程的 &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; （仅GHC）。</target>
        </trans-unit>
        <trans-unit id="d6d482611c58f400c4e9d4063a360d5e3e695927" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;control-exception#t:MaskingState&quot;&gt;MaskingState&lt;/a&gt;&lt;/code&gt; for the current thread.</source>
          <target state="translated">返回当前线程的 &lt;code&gt;&lt;a href=&quot;control-exception#t:MaskingState&quot;&gt;MaskingState&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71b82dd9cb02104bc42f35f2d0381726ce977f50" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the calling thread (GHC only).</source>
          <target state="translated">返回调用线程的 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; （仅GHC）。</target>
        </trans-unit>
        <trans-unit id="cca0619154d3ff5cc205e78e6c6c7b8e4d80dfff" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the calling thread (GHC only).</source>
          <target state="translated">返回调用线程的 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; （仅GHC）。</target>
        </trans-unit>
        <trans-unit id="bdaccac0b289ce01949934fbbb9b784902b17fa9" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;ghc-io#t:MaskingState&quot;&gt;MaskingState&lt;/a&gt;&lt;/code&gt; for the current thread.</source>
          <target state="translated">返回当前线程的 &lt;code&gt;&lt;a href=&quot;ghc-io#t:MaskingState&quot;&gt;MaskingState&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58789f682b6b8f8157e4346b16928e86facf780a" translate="yes" xml:space="preserve">
          <source>Returns the PID (process ID) of a subprocess.</source>
          <target state="translated">返回子进程的PID(进程ID)。</target>
        </trans-unit>
        <trans-unit id="d037192c5cf225fbebc2531165da5d25b77905eb" translate="yes" xml:space="preserve">
          <source>Returns the absolute pathname of the current executable.</source>
          <target state="translated">返回当前可执行文件的绝对路径名。</target>
        </trans-unit>
        <trans-unit id="e7f76e0dfa218f536a75044fa8b867cc9f6172d7" translate="yes" xml:space="preserve">
          <source>Returns the address and the size (in bytes) of the first block of a compact.</source>
          <target state="translated">返回一个压缩包的第一个块的地址和大小(以字节为单位)。</target>
        </trans-unit>
        <trans-unit id="a8385cab3518738507f523cc2b52f6b0f0e3c240" translate="yes" xml:space="preserve">
          <source>Returns the bounds of the array</source>
          <target state="translated">Returns the bounds of the array</target>
        </trans-unit>
        <trans-unit id="35d33c421f8f4a5fc9ffea0f64b3b7aaf5b98122" translate="yes" xml:space="preserve">
          <source>Returns the contents of an array as a list of associations.</source>
          <target state="translated">将数组的内容以关联列表的形式返回。</target>
        </trans-unit>
        <trans-unit id="32ff31240baf8692a7a3b6428c01b39ab55604ca" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; (value is &lt;code&gt;nullPtr&lt;/code&gt; if the current program was not compiled with profiling support). Takes a dummy argument which can be used to avoid the call to &lt;code&gt;getCurrentCCS&lt;/code&gt; being floated out by the simplifier, which would result in an uninformative stack (&lt;a href=&quot;caf&quot;&gt;CAF&lt;/a&gt;).</source>
          <target state="translated">返回当前的 &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; （如果当前的程序未使用概要分析支持进行编译，则值为 &lt;code&gt;nullPtr&lt;/code&gt; ）。接受一个伪参数，该伪参数可用于避免简化程序浮出对 &lt;code&gt;getCurrentCCS&lt;/code&gt; 的调用，这将导致信息栈（&lt;a href=&quot;caf&quot;&gt;CAF&lt;/a&gt;）无效。</target>
        </trans-unit>
        <trans-unit id="8dad347ef9c92129b1c0a465b0b87f9eda7f369c" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; (value is &lt;code&gt;nullPtr&lt;/code&gt; if the current program was not compiled with profiling support). Takes a dummy argument which can be used to avoid the call to &lt;code&gt;getCurrentCCS&lt;/code&gt; being floated out by the simplifier, which would result in an uninformative stack (&lt;a href=&quot;caf&quot;&gt;CAF&lt;/a&gt;).</source>
          <target state="translated">返回当前的 &lt;code&gt;&lt;a href=&quot;ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; （如果当前的程序未使用概要分析支持进行编译，则值为 &lt;code&gt;nullPtr&lt;/code&gt; ）。接受一个伪参数，该伪参数可用于避免简化程序浮出对 &lt;code&gt;getCurrentCCS&lt;/code&gt; 的调用，这将导致信息栈（&lt;a href=&quot;caf&quot;&gt;CAF&lt;/a&gt;）无效。</target>
        </trans-unit>
        <trans-unit id="704fb39ddb91269ef45975308aaeb6626a6afd79" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;CostCentreStack&lt;/code&gt; (value is &lt;code&gt;NULL&lt;/code&gt; if not profiling). Takes a dummy argument which can be used to avoid the call to &lt;code&gt;getCurrentCCS#&lt;/code&gt; being floated out by the simplifier, which would result in an uninformative stack (&quot;CAF&quot;).</source>
          <target state="translated">返回当前的 &lt;code&gt;CostCentreStack&lt;/code&gt; （如果不进行概要分析，则值为 &lt;code&gt;NULL&lt;/code&gt; ）。接受一个伪参数，该伪参数可用于避免简化程序浮动对 &lt;code&gt;getCurrentCCS#&lt;/code&gt; 的调用，这将导致信息栈（CAF）无效。</target>
        </trans-unit>
        <trans-unit id="c23fd648b89a19cb62b7a1e1ac964c4fb2c8ead6" translate="yes" xml:space="preserve">
          <source>Returns the current directory for temporary files.</source>
          <target state="translated">返回临时文件的当前目录。</target>
        </trans-unit>
        <trans-unit id="a01fc104ad5582df2299a6a30a33655f64dce16e" translate="yes" xml:space="preserve">
          <source>Returns the current input</source>
          <target state="translated">返回当前的输入</target>
        </trans-unit>
        <trans-unit id="ed2770f6437427337593920876b367a58b85c9fe" translate="yes" xml:space="preserve">
          <source>Returns the current source position. See also &lt;code&gt;&lt;a href=&quot;text-parsec#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回当前源位置。另请参见 &lt;code&gt;&lt;a href=&quot;text-parsec#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a00742a8a794d78dbfb24412764c22d8bd56bdc9" translate="yes" xml:space="preserve">
          <source>Returns the current source position. See also &lt;code&gt;&lt;a href=&quot;text-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回当前源位置。另请参见 &lt;code&gt;&lt;a href=&quot;text-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b48effbaafaad1bdac27d8aeaf8e339010d1de63" translate="yes" xml:space="preserve">
          <source>Returns the current user state.</source>
          <target state="translated">返回当前用户状态。</target>
        </trans-unit>
        <trans-unit id="8b644030a492bccb7b3d07a11e9f5c18ebfe9f6b" translate="yes" xml:space="preserve">
          <source>Returns the current user's document directory.</source>
          <target state="translated">返回当前用户的文档目录。</target>
        </trans-unit>
        <trans-unit id="eb0f0a7901fe875e87b6c9d1350a7662a2b25894" translate="yes" xml:space="preserve">
          <source>Returns the current user's home directory.</source>
          <target state="translated">返回当前用户的主目录。</target>
        </trans-unit>
        <trans-unit id="73a4450f722c7001626909c4664aceece6946edc" translate="yes" xml:space="preserve">
          <source>Returns the element of an immutable array at the specified index.</source>
          <target state="translated">返回一个不可变数组中指定索引的元素。</target>
        </trans-unit>
        <trans-unit id="4135ad281d130ca531531402ab3922cff10c4f3d" translate="yes" xml:space="preserve">
          <source>Returns the elements of a tree in pre-order.</source>
          <target state="translated">返回预排序的树的元素。</target>
        </trans-unit>
        <trans-unit id="6c1987b96e96cef6db7fb80584896113ded06ea4" translate="yes" xml:space="preserve">
          <source>Returns the full parser state as a &lt;code&gt;&lt;a href=&quot;text-parsec#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; record.</source>
          <target state="translated">返回完整的解析器状态作为 &lt;code&gt;&lt;a href=&quot;text-parsec#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; 记录。</target>
        </trans-unit>
        <trans-unit id="122526db1ffa1233009cfaee1f422c784e873e6b" translate="yes" xml:space="preserve">
          <source>Returns the full parser state as a &lt;code&gt;&lt;a href=&quot;text-parsec-prim#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; record.</source>
          <target state="translated">返回完整的解析器状态作为 &lt;code&gt;&lt;a href=&quot;text-parsec-prim#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; 记录。</target>
        </trans-unit>
        <trans-unit id="6720f5cda22bd959ebcf8d8bbf2d3eff4fe8b33c" translate="yes" xml:space="preserve">
          <source>Returns the full parser state as a &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-prim#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; record.</source>
          <target state="translated">返回完整的解析器状态作为 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-prim#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; 记录。</target>
        </trans-unit>
        <trans-unit id="ac6c1b5d60cdba404da3a22b80654790d4253e6a" translate="yes" xml:space="preserve">
          <source>Returns the list of edges in the graph.</source>
          <target state="translated">返回图中的边的列表。</target>
        </trans-unit>
        <trans-unit id="0a7d8165a9a37a003dd9c58b591114c635f526fd" translate="yes" xml:space="preserve">
          <source>Returns the list of nodes at each level of the tree.</source>
          <target state="translated">返回树的每一级的节点列表。</target>
        </trans-unit>
        <trans-unit id="f229b14816eee865913d187f8a7f58402cd27231" translate="yes" xml:space="preserve">
          <source>Returns the list of vertices in the graph.</source>
          <target state="translated">返回图中的顶点列表。</target>
        </trans-unit>
        <trans-unit id="e387df86fb7b3b262154714381694c7bd5f23ec9" translate="yes" xml:space="preserve">
          <source>Returns the list of vertices reachable from a given vertex.</source>
          <target state="translated">返回从给定顶点可到达的顶点列表。</target>
        </trans-unit>
        <trans-unit id="ee86401c0a49621555bf5ab6a31c2075fc6204ce" translate="yes" xml:space="preserve">
          <source>Returns the number of CPUs that the machine has</source>
          <target state="translated">返回机器的CPU数量。</target>
        </trans-unit>
        <trans-unit id="c4ab42b10e4c4d272229ee213335f383523c8a9b" translate="yes" xml:space="preserve">
          <source>Returns the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. To change this value, use &lt;code&gt;&lt;a href=&quot;control-concurrent#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。要更改此值，请使用 &lt;code&gt;&lt;a href=&quot;control-concurrent#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40806beaf3543cbdbed3bea032df175bb83631df" translate="yes" xml:space="preserve">
          <source>Returns the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. To change this value, use &lt;code&gt;&lt;a href=&quot;ghc-conc#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。要更改此值，请使用 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d7fcafb83b804dbc4822df98086cf983d17752c" translate="yes" xml:space="preserve">
          <source>Returns the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. To change this value, use &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。要更改此值，请使用 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ceacd22f199c19bd1d7b1010bc4abd5817dc1dd7" translate="yes" xml:space="preserve">
          <source>Returns the number of sparks currently in the local spark pool</source>
          <target state="translated">返回当前本地火花池中的火花数量。</target>
        </trans-unit>
        <trans-unit id="270b270ff8f2d165013014ca5716e450db9fd130" translate="yes" xml:space="preserve">
          <source>Returns the number of sparks in the local spark pool.</source>
          <target state="translated">返回本地火花池中火花的数量。</target>
        </trans-unit>
        <trans-unit id="6182192420dd141358cbbc26d066d693f1ffd90a" translate="yes" xml:space="preserve">
          <source>Returns the number of the capability on which the thread is currently running, and a boolean indicating whether the thread is locked to that capability or not. A thread is locked to a capability if it was created with &lt;code&gt;forkOn&lt;/code&gt;.</source>
          <target state="translated">返回线程当前正在其上运行的功能的编号，以及一个布尔值，指示线程是否已锁定到该功能。如果线程是使用 &lt;code&gt;forkOn&lt;/code&gt; 创建的，则将其锁定为功能。</target>
        </trans-unit>
        <trans-unit id="6608dc9d731742faa501a91d3eb9883b9c1b3f91" translate="yes" xml:space="preserve">
          <source>Returns the size/length of a finite structure as an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 形式返回有限结构的大小/长度。</target>
        </trans-unit>
        <trans-unit id="699f3e4c880a8e7d9c8a7c3dfa52b2305a41d5a0" translate="yes" xml:space="preserve">
          <source>Returns the size/length of a finite structure as an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The default implementation is optimized for structures that are similar to cons-lists, because there is no general way to do better.</source>
          <target state="translated">以 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 形式返回有限结构的大小/长度。默认实现针对类似于cons-lists的结构进行了优化，因为没有通用的方法可以做得更好。</target>
        </trans-unit>
        <trans-unit id="498e56813e913b90c9a52d7c557f9c2293f41195" translate="yes" xml:space="preserve">
          <source>Returns the size/length of a finite structure as an &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The default implementation is optimized for structures that are similar to cons-lists, because there is no general way to do better.</source>
          <target state="translated">以 &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 形式返回有限结构的大小/长度。默认实现针对类似于cons-lists的结构进行了优化，因为没有通用的方法可以做得更好。</target>
        </trans-unit>
        <trans-unit id="5407cb087162216d4cc6494ebb2033fd44fba60e" translate="yes" xml:space="preserve">
          <source>Returns the tag of a constructor application; this function is used by the deriving code for Eq, Ord and Enum.</source>
          <target state="translated">返回构造函数应用程序的标签;这个函数被Eq、Ord和Enum的派生代码使用。</target>
        </trans-unit>
        <trans-unit id="c7109a5a8a536432b7eeb9bbf23765d4d4f11a69" translate="yes" xml:space="preserve">
          <source>Returns the welcome message from the &lt;code&gt;&lt;a href=&quot;control-monad-cont#v:callCC&quot;&gt;callCC&lt;/a&gt;&lt;/code&gt; block. This line is not executed if &lt;code&gt;validateName&lt;/code&gt; fails.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;control-monad-cont#v:callCC&quot;&gt;callCC&lt;/a&gt;&lt;/code&gt; 块返回欢迎消息。如果 &lt;code&gt;validateName&lt;/code&gt; 失败，则不执行此行。</target>
        </trans-unit>
        <trans-unit id="2af42e634d7606bf9d85d733187712263c88111e" translate="yes" xml:space="preserve">
          <source>Returns whether GC stats have been enabled (with &lt;code&gt;+RTS -T&lt;/code&gt;, for example).</source>
          <target state="translated">返回是否已启用GC统计信息（例如，使用 &lt;code&gt;+RTS -T&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="90ec23607782e5503ddf81a5bf25d15b6a07aa53" translate="yes" xml:space="preserve">
          <source>Returns whether a name represents an occurrence of a top-level variable (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:VarName&quot;&gt;VarName&lt;/a&gt;&lt;/code&gt;), data constructor (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:DataName&quot;&gt;DataName&lt;/a&gt;&lt;/code&gt;), type constructor, or type class (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TcClsName&quot;&gt;TcClsName&lt;/a&gt;&lt;/code&gt;). If we can't be sure, it returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回名称是表示顶级变量（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:VarName&quot;&gt;VarName&lt;/a&gt;&lt;/code&gt; ），数据构造函数（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:DataName&quot;&gt;DataName&lt;/a&gt;&lt;/code&gt; ），类型构造函数还是类型类（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TcClsName&quot;&gt;TcClsName&lt;/a&gt;&lt;/code&gt; ）的出现。如果不能确定，它将返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d90ebf44e1d20050486666990a89eb47e7944cd8" translate="yes" xml:space="preserve">
          <source>Returns: the array</source>
          <target state="translated">返回:数组</target>
        </trans-unit>
        <trans-unit id="fc6bdda7ee64a55787373a47d2597422688d9afb" translate="yes" xml:space="preserve">
          <source>Returns: the number of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;s actually read, which might be smaller than the number requested if the end of file was reached.</source>
          <target state="translated">返回：实际读取的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 的数目，如果到达文件末尾，则可能小于请求的数目。</target>
        </trans-unit>
        <trans-unit id="3367d7371a0b3059b765bd1a6fff1f5ca0ed7d5b" translate="yes" xml:space="preserve">
          <source>Returns: the number of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;s actually read, which might be smaller than the number requested if the end of file was reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f9933768794f845d000833d367d5698393211d" translate="yes" xml:space="preserve">
          <source>Reverse</source>
          <target state="translated">Reverse</target>
        </trans-unit>
        <trans-unit id="f1b29d2392f6c1ffa813de793608d1688eec4ffe" translate="yes" xml:space="preserve">
          <source>Reverse all the bits in the argument</source>
          <target state="translated">反转参数中的所有位</target>
        </trans-unit>
        <trans-unit id="6d38b386d6091de460a03ef14e686f58fb0de4b6" translate="yes" xml:space="preserve">
          <source>Reverse order of bytes in &lt;code&gt;&lt;a href=&quot;data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 中字节的相反顺序。</target>
        </trans-unit>
        <trans-unit id="16dcadf031117537b0a4de5e11b84da6506716a2" translate="yes" xml:space="preserve">
          <source>Reverse order of bytes in &lt;code&gt;&lt;a href=&quot;data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 中字节的相反顺序。</target>
        </trans-unit>
        <trans-unit id="fb6e4e5660d77c6a7ef54a949c5684649ea23a6c" translate="yes" xml:space="preserve">
          <source>Reverse order of bytes in &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 中字节的相反顺序。</target>
        </trans-unit>
        <trans-unit id="abd0a331bba34831b2d2e0b4cec13187fdf9f136" translate="yes" xml:space="preserve">
          <source>Reverse order of bytes in &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 中字节的相反顺序。</target>
        </trans-unit>
        <trans-unit id="2207145f56c1086843ae929cdca643dda45296a2" translate="yes" xml:space="preserve">
          <source>Reverse topologically sorted</source>
          <target state="translated">反向拓扑排序</target>
        </trans-unit>
        <trans-unit id="804c9c82e579d60fb3841aafb7fee29740cb0259" translate="yes" xml:space="preserve">
          <source>Rewrite rules can be used to get the same effect as a feature present in earlier versions of GHC. For example, suppose that:</source>
          <target state="translated">重写规则可以用来获得与GHC早期版本中存在的功能相同的效果。例如,假设:</target>
        </trans-unit>
        <trans-unit id="c83b52d26d0088698518652fdb153807c4de8005" translate="yes" xml:space="preserve">
          <source>Ribbons per line.</source>
          <target state="translated">每行的丝带。</target>
        </trans-unit>
        <trans-unit id="b3138852bdaf3763d016ac63a5c7c2c3e2c6dacb" translate="yes" xml:space="preserve">
          <source>Right and left shifts by amounts greater than or equal to the width of the type result in a zero result. This is contrary to the behaviour in C, which is undefined; a common interpretation is to truncate the shift count to the width of the type, for example &lt;code&gt;1 &amp;lt;&amp;lt;
  32 == 1&lt;/code&gt; in some C implementations.</source>
          <target state="translated">向右和向左移动大于或等于该类型的宽度的量将导致结果为零。这与C中未定义的行为相反。常见的解释是将移位计数截断为该类型的宽度，例如在某些C实现中为 &lt;code&gt;1 &amp;lt;&amp;lt; 32 == 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4405b5d855d35430679b8f5b6802db9d92d20d73" translate="yes" xml:space="preserve">
          <source>Right and left shifts by amounts greater than or equal to the width of the type result in either zero or -1, depending on the sign of the value being shifted. This is contrary to the behaviour in C, which is undefined; a common interpretation is to truncate the shift count to the width of the type, for example &lt;code&gt;1 &amp;lt;&amp;lt; 32
  == 1&lt;/code&gt; in some C implementations.</source>
          <target state="translated">向右和向左移动大于或等于该类型宽度的量将导致零或-1，具体取决于要移动的值的符号。这与C中未定义的行为相反。常见的解释是将移位计数截断为该类型的宽度，例如在某些C实现中为 &lt;code&gt;1 &amp;lt;&amp;lt; 32 == 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e504a21e956b694360170c2fd28d0e470b89e91" translate="yes" xml:space="preserve">
          <source>Right associative monadic bifold over a structure.</source>
          <target state="translated">结构上的右联一性一双折。</target>
        </trans-unit>
        <trans-unit id="a9e2aceb009f5c71e7fcab284b8b1b2e1bac0f8d" translate="yes" xml:space="preserve">
          <source>Right identity</source>
          <target state="translated">正确的身份</target>
        </trans-unit>
        <trans-unit id="20396e07fc63f679a480f52e947312d23a912a71" translate="yes" xml:space="preserve">
          <source>Right shifts perform sign extension on signed number types; i.e. they fill the top bits with 1 if the &lt;code&gt;x&lt;/code&gt; is negative and with 0 otherwise.</source>
          <target state="translated">右移对有符号的数字类型执行符号扩展；也就是说，如果 &lt;code&gt;x&lt;/code&gt; 为负数，则它们用1填充高位，否则用0 填充。</target>
        </trans-unit>
        <trans-unit id="39a8b324a5636c01dac0b096d9334843dc7b83f3" translate="yes" xml:space="preserve">
          <source>Right-associative fold of a structure, but with strict application of the operator.</source>
          <target state="translated">结构的右联折叠,但要严格应用运算符。</target>
        </trans-unit>
        <trans-unit id="8d786273bc2b4f065cb4111d4369cb2117126e69" translate="yes" xml:space="preserve">
          <source>Right-associative fold of a structure.</source>
          <target state="translated">结构的右联折叠。</target>
        </trans-unit>
        <trans-unit id="8fb46b967b84799898af36f08402697233e41725" translate="yes" xml:space="preserve">
          <source>Right-to-left composition</source>
          <target state="translated">从右到左的构成</target>
        </trans-unit>
        <trans-unit id="c8d5b70d1daa764c9b36dd6dcba6bbc27215937b" translate="yes" xml:space="preserve">
          <source>Right-to-left composition of Kleisli arrows. &lt;code&gt;(&lt;a href=&quot;control-monad#v:-62--61--62-&quot;&gt;&amp;gt;=&amp;gt;&lt;/a&gt;)&lt;/code&gt;, with the arguments flipped.</source>
          <target state="translated">从右到左组成Kleisli箭头。 &lt;code&gt;(&lt;a href=&quot;control-monad#v:-62--61--62-&quot;&gt;&amp;gt;=&amp;gt;&lt;/a&gt;)&lt;/code&gt; ，其中的参数已翻转。</target>
        </trans-unit>
        <trans-unit id="d18d0622af6613184dce18026185c0b4105c8eac" translate="yes" xml:space="preserve">
          <source>Right-to-left composition of Kleisli arrows. &lt;code&gt;(&lt;a href=&quot;system-directory-internal-prelude#v:-62--61--62-&quot;&gt;&amp;gt;=&amp;gt;&lt;/a&gt;)&lt;/code&gt;, with the arguments flipped.</source>
          <target state="translated">从右到左组成Kleisli箭头。 &lt;code&gt;(&lt;a href=&quot;system-directory-internal-prelude#v:-62--61--62-&quot;&gt;&amp;gt;=&amp;gt;&lt;/a&gt;)&lt;/code&gt; ，其中的参数已翻转。</target>
        </trans-unit>
        <trans-unit id="82305626a22e5a66eda35d5bba0fc29f0d97a54a" translate="yes" xml:space="preserve">
          <source>Right-to-left composition of functors. The composition of applicative functors is always applicative, but the composition of monads is not always a monad.</source>
          <target state="translated">漏子的从右到左的组成。适用性漏斗的组成总是适用性的,但单子的组成并不总是单子。</target>
        </trans-unit>
        <trans-unit id="819514316b4f4b54bdba64481d4287eda6cee587" translate="yes" xml:space="preserve">
          <source>Right-to-left variants</source>
          <target state="translated">从右到左的变体</target>
        </trans-unit>
        <trans-unit id="379bbb03c903b2519ed8e7f314173932cc94b5b8" translate="yes" xml:space="preserve">
          <source>RightAssociative</source>
          <target state="translated">RightAssociative</target>
        </trans-unit>
        <trans-unit id="c3f104d1365744b538bfde9f4adb6a6df4b80355" translate="yes" xml:space="preserve">
          <source>Role</source>
          <target state="translated">Role</target>
        </trans-unit>
        <trans-unit id="93627fd1f79919d436b12ffa76a391d7b4747b58" translate="yes" xml:space="preserve">
          <source>Role annotations</source>
          <target state="translated">角色注释</target>
        </trans-unit>
        <trans-unit id="00a8cc69af800f80142e071f3da079846d26d38d" translate="yes" xml:space="preserve">
          <source>Role annotations are allowed on data, newtype, and class declarations. A role annotation declaration starts with &lt;code&gt;type role&lt;/code&gt; and is followed by one role listing for each parameter of the type. (This parameter count includes parameters implicitly specified by a kind signature in a GADT-style data or newtype declaration.) Each role listing is a role (&lt;code&gt;nominal&lt;/code&gt;, &lt;code&gt;representational&lt;/code&gt;, or &lt;code&gt;phantom&lt;/code&gt;) or a &lt;code&gt;_&lt;/code&gt;. Using a &lt;code&gt;_&lt;/code&gt; says that GHC should infer that role. The role annotation may go anywhere in the same module as the datatype or class definition (much like a value-level type signature). Here are some examples:</source>
          <target state="translated">在数据，新类型和类声明上允许使用角色注释。角色注释声明以 &lt;code&gt;type role&lt;/code&gt; 开头，然后是该类型的每个参数的一个角色列表。 （此参数计数包括由GADT样式的数据或newtype声明中的种类签名隐式指定的参数。）每个角色列表都是一个角色（ &lt;code&gt;nominal&lt;/code&gt; ， &lt;code&gt;representational&lt;/code&gt; 或 &lt;code&gt;phantom&lt;/code&gt; ）或 &lt;code&gt;_&lt;/code&gt; 。使用 &lt;code&gt;_&lt;/code&gt; 表示GHC应该推断该角色。角色注释可以与数据类型或类定义在同一模块中的任何位置（非常类似于值级别的类型签名）。这里有些例子：</target>
        </trans-unit>
        <trans-unit id="5d285d0f925d9008464d2638ff6d3c96ed7ef3db" translate="yes" xml:space="preserve">
          <source>Role annotations can also be used should a programmer wish to write a class with a representational (or phantom) role. However, as a class with non-nominal roles can quickly lead to class instance incoherence, it is necessary to also specify &lt;a href=&quot;#extension-IncoherentInstances&quot;&gt;&lt;code&gt;IncoherentInstances&lt;/code&gt;&lt;/a&gt; to allow non-nominal roles for classes.</source>
          <target state="translated">如果程序员希望编写一个具有代表性（或幻像）角色的类，也可以使用角色注释。但是，由于具有非标称角色的类可能很快导致类实例不一致，因此还必须指定&lt;a href=&quot;#extension-IncoherentInstances&quot;&gt; &lt;code&gt;IncoherentInstances&lt;/code&gt; &lt;/a&gt;以允许类具有非标称角色。</target>
        </trans-unit>
        <trans-unit id="91665aa65139fc62f964b33d2e4f6471f47f8017" translate="yes" xml:space="preserve">
          <source>RoleAnnotations</source>
          <target state="translated">RoleAnnotations</target>
        </trans-unit>
        <trans-unit id="f21d347d37a185e4a4339bde6e6ea3b5624475c5" translate="yes" xml:space="preserve">
          <source>Roles as implemented in GHC are a from a simplified version of the work described in &lt;a href=&quot;http://www.seas.upenn.edu/~sweirich/papers/popl163af-weirich.pdf&quot;&gt;Generative type abstraction and type-level computation&lt;/a&gt;, published at POPL 2011.</source>
          <target state="translated">在GHC中实现的角色摘自在POPL 2011上发布的&lt;a href=&quot;http://www.seas.upenn.edu/~sweirich/papers/popl163af-weirich.pdf&quot;&gt;Generative类型抽象和类型级别计算中&lt;/a&gt;描述的工作的简化版本。</target>
        </trans-unit>
        <trans-unit id="da8cee54f54784065270562bdc1909f6f51fa588" translate="yes" xml:space="preserve">
          <source>Roles lookup</source>
          <target state="translated">角色查询</target>
        </trans-unit>
        <trans-unit id="c42fd15494a63d8230eaa066b81373c14d4e0d5e" translate="yes" xml:space="preserve">
          <source>Roles of type parameters are subject to the subtyping relation &lt;code&gt;phantom &amp;lt; representational &amp;lt; nominal&lt;/code&gt;: for example, an abstract type with a nominal type parameter can be implemented using a concrete type with a representational type parameter. Merging respects this subtyping relation (e.g., &lt;code&gt;nominal&lt;/code&gt; merged with &lt;code&gt;representational&lt;/code&gt; is &lt;code&gt;representational&lt;/code&gt;.) Roles in signatures default to &lt;code&gt;nominal&lt;/code&gt;, which gives maximum flexibility on the implementor&amp;rsquo;s side. You should only need to give an explicit role annotation if a client of the signature would like to coerce the abstract type in a type parameter (in which case you should specify &lt;code&gt;representational&lt;/code&gt; explicitly.) Unlike regular data types, we do &lt;em&gt;not&lt;/em&gt; assume that abstract data types are representationally injective: if we have &lt;code&gt;Coercible (T a) (T b)&lt;/code&gt;, and &lt;code&gt;T&lt;/code&gt; has role &lt;code&gt;nominal&lt;/code&gt;, this does not imply that &lt;code&gt;a ~ b&lt;/code&gt;.</source>
          <target state="translated">类型参数的作用取决于子类型关系 &lt;code&gt;phantom &amp;lt; representational &amp;lt; nominal&lt;/code&gt; ：&amp;rdquo;：例如，可以使用具有代表类型参数的具体类型来实现具有标称类型参数的抽象类型。合并这方面的子类型关系（例如， &lt;code&gt;nominal&lt;/code&gt; 合并 &lt;code&gt;representational&lt;/code&gt; 是 &lt;code&gt;representational&lt;/code&gt; 。）在签名默认角色 &lt;code&gt;nominal&lt;/code&gt; ，这给实现者的身边最大的灵活性。如果签名的客户希望在类型参数中强制抽象类型（在这种情况下，您应该显式地指定 &lt;code&gt;representational&lt;/code&gt; ），则只需提供显式角色批注。与常规数据类型不同，我们这样做&lt;em&gt;不&lt;/em&gt;假设抽象数据类型是表象射：如果我们有 &lt;code&gt;Coercible (T a) (T b)&lt;/code&gt; ，并且 &lt;code&gt;T&lt;/code&gt; 有作用 &lt;code&gt;nominal&lt;/code&gt; ，这并不意味着 &lt;code&gt;a ~ b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4d010e49e5bc26ba3b4b046466c867803ac5947" translate="yes" xml:space="preserve">
          <source>Ross Paterson 2005</source>
          <target state="translated">Ross Paterson,2005年</target>
        </trans-unit>
        <trans-unit id="fbd27aa30a95ad22196d6918b13bb431346c5afa" translate="yes" xml:space="preserve">
          <source>Rotate the argument left by the specified number of bits (which must be non-negative).</source>
          <target state="translated">将参数向左旋转指定的位数(必须是非负数)。</target>
        </trans-unit>
        <trans-unit id="0fe016ed8f9eedc521bdd592cfa02ebc0f59c73b" translate="yes" xml:space="preserve">
          <source>Rotate the argument right by the specified number of bits (which must be non-negative).</source>
          <target state="translated">将参数向右旋转指定的位数(必须是非负数)。</target>
        </trans-unit>
        <trans-unit id="58051472c555d154ccb239c9e59fcfb66e67f0f8" translate="yes" xml:space="preserve">
          <source>Rounds towards zero element-wise.</source>
          <target state="translated">元素方面向零的方向发展。</target>
        </trans-unit>
        <trans-unit id="03edb479d9c8ffea9100cec4993af1810c9ece09" translate="yes" xml:space="preserve">
          <source>Rounds towards zero.</source>
          <target state="translated">向零的方向发展。</target>
        </trans-unit>
        <trans-unit id="f2f05a17720b9a694ea73a1824fc70691d4746ff" translate="yes" xml:space="preserve">
          <source>Rounds towards zero. The behavior is undefined if the second argument is zero.</source>
          <target state="translated">趋近于零。如果第二个参数为零,则行为未定义。</target>
        </trans-unit>
        <trans-unit id="2d9b74053b3dfe83bb7d2bee0dc7b331776ee830" translate="yes" xml:space="preserve">
          <source>RoundtripFailure</source>
          <target state="translated">RoundtripFailure</target>
        </trans-unit>
        <trans-unit id="657d849597f2d3e337f76ba58d755750c451b662" translate="yes" xml:space="preserve">
          <source>Routines for testing return values and raising a &lt;code&gt;&lt;a href=&quot;system-io-error#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt; exception in case of values indicating an error state.</source>
          <target state="translated">用于测试返回值并在值指示错误状态的情况下引发 &lt;code&gt;&lt;a href=&quot;system-io-error#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt; 异常的例程。</target>
        </trans-unit>
        <trans-unit id="d3e3e6f1bc5450d69a98b447fa8c548a9cb4e372" translate="yes" xml:space="preserve">
          <source>RtsTime</source>
          <target state="translated">RtsTime</target>
        </trans-unit>
        <trans-unit id="0d8023bd7802662dab455a02b3efe95a426a8682" translate="yes" xml:space="preserve">
          <source>RuleBndr</source>
          <target state="translated">RuleBndr</target>
        </trans-unit>
        <trans-unit id="1cbe389d3784439eacd168bbf7fba6ca33a912d5" translate="yes" xml:space="preserve">
          <source>RuleBndrQ</source>
          <target state="translated">RuleBndrQ</target>
        </trans-unit>
        <trans-unit id="c8865ebf9014d9f16c2870709b8c48749873fecb" translate="yes" xml:space="preserve">
          <source>RuleMatch</source>
          <target state="translated">RuleMatch</target>
        </trans-unit>
        <trans-unit id="9da39d742ef2d2a4bf83cc2ae5fa28649ed94414" translate="yes" xml:space="preserve">
          <source>Rules are enabled (that is, used during optimisation) by the &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fenable-rewrite-rules&lt;/code&gt;&lt;/a&gt; flag. This flag is implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;, and may be switched off (as usual) by &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fno-enable-rewrite-rules&lt;/code&gt;&lt;/a&gt;. (NB: enabling &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fenable-rewrite-rules&lt;/code&gt;&lt;/a&gt; without &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; may not do what you expect, though, because without &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; GHC ignores all optimisation information in interface files; see &lt;a href=&quot;using-optimisation#ghc-flag--fignore-interface-pragmas&quot;&gt;&lt;code&gt;-fignore-interface-pragmas&lt;/code&gt;&lt;/a&gt;). Note that &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fenable-rewrite-rules&lt;/code&gt;&lt;/a&gt; is an &lt;em&gt;optimisation&lt;/em&gt; flag, and has no effect on parsing or typechecking.</source>
          <target state="translated">&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fenable-rewrite-rules&lt;/code&gt; &lt;/a&gt;标志启用了规则（即在优化期间使用）。该标志由&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;隐含，并且可以（通常）由&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fno-enable-rewrite-rules&lt;/code&gt; &lt;/a&gt;关闭。 （注意：不使用&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;启用&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fenable-rewrite-rules&lt;/code&gt; &lt;/a&gt;可能不会达到您的期望，因为如果不使用&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; ,&lt;/a&gt; GHC会忽略接口文件中的所有优化信息；请参阅&lt;a href=&quot;using-optimisation#ghc-flag--fignore-interface-pragmas&quot;&gt; &lt;code&gt;-fignore-interface-pragmas&lt;/code&gt; &lt;/a&gt;）。请注意，&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fenable-rewrite-rules&lt;/code&gt; &lt;/a&gt;是一个&lt;em&gt;优化&lt;/em&gt;标志，对解析或类型检查没有影响。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="68d0576090ddc092b61c62fcb447bec42dbb16bb" translate="yes" xml:space="preserve">
          <source>Rules are filtered by the user provided string, a rule is kept if a prefix of its name matches the string. The pass then checks whether any of these rules could apply to the program but which didn&amp;rsquo;t file for some reason. For example, specifying &lt;code&gt;-drule-check=SPEC&lt;/code&gt; will check whether there are any applications which might be subject to a rule created by specialisation.</source>
          <target state="translated">规则由用户提供的字符串过滤，如果规则名称的前缀与字符串匹配，则保留规则。然后，该阶段检查这些规则中的任何规则是否可以应用于该程序，但是由于某种原因而没有提交。例如，指定 &lt;code&gt;-drule-check=SPEC&lt;/code&gt; 将检查是否存在任何可能受专业化创建的规则约束的应用程序。</target>
        </trans-unit>
        <trans-unit id="961b5bf1e1c0621155da845303a2be9f0abb7f5a" translate="yes" xml:space="preserve">
          <source>Rules are regarded as left-to-right rewrite rules. When GHC finds an expression that is a substitution instance of the LHS of a rule, it replaces the expression by the (appropriately-substituted) RHS. By &amp;ldquo;a substitution instance&amp;rdquo; we mean that the LHS can be made equal to the expression by substituting for the pattern variables.</source>
          <target state="translated">规则被视为从左到右的重写规则。当GHC找到作为规则LHS替换实例的表达式时，它将用（适当替换的）RHS替换该表达式。通过&amp;ldquo;替换实例&amp;rdquo;，我们的意思是通过替换模式变量，可以使LHS等于表达式。</target>
        </trans-unit>
        <trans-unit id="4c39950b1b0d3463482d104795f80836cdb36436" translate="yes" xml:space="preserve">
          <source>Rules support the special phase-control notation &lt;code&gt;[~]&lt;/code&gt;, which means the rule is never active. This feature supports plugins (see &lt;a href=&quot;extending_ghc#compiler-plugins&quot;&gt;Compiler Plugins&lt;/a&gt;), by making it possible to define a RULE that is never run by GHC, but is nevertheless parsed, typechecked etc, so that it is available to the plugin.</source>
          <target state="translated">规则支持特殊的相位控制符号 &lt;code&gt;[~]&lt;/code&gt; ，这意味着该规则永远不会处于活动状态。此功能通过定义一个从未由GHC运行但仍经过解析，类型检查等的RULE来支持插件（请参阅&lt;a href=&quot;extending_ghc#compiler-plugins&quot;&gt;Compiler Plugins&lt;/a&gt;），以便插件可以使用。</target>
        </trans-unit>
        <trans-unit id="bdfc1a6fd22feff8196d064513b680864dec98f2" translate="yes" xml:space="preserve">
          <source>Run &amp;ldquo;main&amp;rdquo; and here is your output:</source>
          <target state="translated">运行&amp;ldquo; main&amp;rdquo;，这是您的输出：</target>
        </trans-unit>
        <trans-unit id="f3cc3a22fa881d976320a326aaf28ee13bb7664b" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;main&lt;/code&gt; and here is your output:</source>
          <target state="translated">运行 &lt;code&gt;main&lt;/code&gt; ，这是您的输出：</target>
        </trans-unit>
        <trans-unit id="618d6a6d2a262d48a555a0f6c8bbb7706e465de7" translate="yes" xml:space="preserve">
          <source>Run &lt;strong&gt;hp2ps&lt;/strong&gt; to produce a Postscript file, &lt;code&gt;&lt;em&gt;prog&lt;/em&gt;.ps&lt;/code&gt;. The &lt;strong&gt;hp2ps&lt;/strong&gt; utility is described in detail in &lt;a href=&quot;#hp2ps&quot;&gt;hp2ps &amp;ndash; Rendering heap profiles to PostScript&lt;/a&gt;.</source>
          <target state="translated">运行&lt;strong&gt;hp2ps&lt;/strong&gt;以生成Postscript文件 &lt;code&gt;&lt;em&gt;prog&lt;/em&gt;.ps&lt;/code&gt; 。所述&lt;strong&gt;hp2ps&lt;/strong&gt;实用程序详细描述于&lt;a href=&quot;#hp2ps&quot;&gt;hp2ps -模拟堆轮廓为PostScript&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="911fcf364edf62850e5ffcd07989b1f697e2705e" translate="yes" xml:space="preserve">
          <source>Run GHC using the given frontend plugin. See &lt;a href=&quot;extending_ghc#frontend-plugins&quot;&gt;Frontend plugins&lt;/a&gt; for details.</source>
          <target state="translated">使用给定的前端插件运行GHC。有关详细信息，请参见&lt;a href=&quot;extending_ghc#frontend-plugins&quot;&gt;前端插件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d9fd5d82a08b556c1588a84ebc156eb28980feb" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad and return &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; on failure and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; on success. In both cases any unconsumed input and the number of bytes consumed is returned. In the case of failure, a human-readable error message is included as well.</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad并在失败时返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ，在成功时返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 。在这两种情况下，都会返回任何未消耗的输入和消耗的字节数。在失败的情况下，还包括人类可读的错误消息。</target>
        </trans-unit>
        <trans-unit id="27d3ff1ab504e0b66e3c2e4a4954f4863febfa6b" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad. See &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Decoder&quot;&gt;Decoder&lt;/a&gt;&lt;/code&gt; for what to do next, like providing input, handling decoder errors and to get the output value. Hint: Use the helper functions &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushChunk&quot;&gt;pushChunk&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushChunks&quot;&gt;pushChunks&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushEndOfInput&quot;&gt;pushEndOfInput&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">运行一个 &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad。请参阅 &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Decoder&quot;&gt;Decoder&lt;/a&gt;&lt;/code&gt; 以了解下一步操作，例如提供输入，处理解码器错误并获取输出值。提示：使用辅助函数 &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushChunk&quot;&gt;pushChunk&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushChunks&quot;&gt;pushChunks&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushEndOfInput&quot;&gt;pushEndOfInput&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a2047fac4fd63c9345e542f91bc2b20ce025bc7" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; as a side-effect of a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt; ()&lt;/code&gt; action.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt; ()&lt;/code&gt; （）操作的副作用运行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d0fb6503860e9e4e489818701f663ad2fa4dee9" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:finalBuildStep&quot;&gt;finalBuildStep&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:finalBuildStep&quot;&gt;finalBuildStep&lt;/a&gt;&lt;/code&gt; 运行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c58dce72981f7f2e5217c160d4f37c4f85c73c2" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">运行一个 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9b9c04ff8d5743ab8accbf55491a7aad7010b5f" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; action redirecting the produced output to a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 操作，将产生的输出重定向到 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc8fd4293947f966432bfc2a91b948b341034c7e" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; action redirecting the produced output to a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335c022c0719fe99fc26bca294484d83c4310f29" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="422e5b221bdc42780f1ab803b6dbf7eac79420db" translate="yes" xml:space="preserve">
          <source>Run a computation with an empty cost-center stack. For example, this is used by the interpreter to run an interpreted computation without the call stack showing that it was invoked from GHC.</source>
          <target state="translated">用空的成本中心栈运行计算。例如,解释器用它来运行解释的计算,而不在调用栈中显示它是由GHC调用的。</target>
        </trans-unit>
        <trans-unit id="3c70a9d8ade27baaef498ee1664afa61565ae7f4" translate="yes" xml:space="preserve">
          <source>Run a late specialisation pass</source>
          <target state="translated">办好后期的专升本证</target>
        </trans-unit>
        <trans-unit id="183b385d6ba52473e0ecf4163ed478ce4985cea1" translate="yes" xml:space="preserve">
          <source>Run a line-reading application according to the given behavior.</source>
          <target state="translated">根据给定的行为运行一个读行应用程序。</target>
        </trans-unit>
        <trans-unit id="60d245c4cf9cf1eaf81f65dece4def9f6a25a167" translate="yes" xml:space="preserve">
          <source>Run a line-reading application.</source>
          <target state="translated">运行一个读行应用程序。</target>
        </trans-unit>
        <trans-unit id="a0650ed8b3ae442ea763332ee6780ee7560f7a2a" translate="yes" xml:space="preserve">
          <source>Run a line-reading application. This function should suffice for most applications.</source>
          <target state="translated">运行一个读行程序。这个功能应该足以满足大多数应用程序的需求。</target>
        </trans-unit>
        <trans-unit id="c9f5f1c288d3ca39171961b2f4776cbc8b9138f4" translate="yes" xml:space="preserve">
          <source>Run a line-reading application. Uses &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:defaultBehavior&quot;&gt;defaultBehavior&lt;/a&gt;&lt;/code&gt; to determine the interaction behavior.</source>
          <target state="translated">运行行读取应用程序。使用 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:defaultBehavior&quot;&gt;defaultBehavior&lt;/a&gt;&lt;/code&gt; 确定交互行为。</target>
        </trans-unit>
        <trans-unit id="b5813516b7ad0bf5051f8ec3ab8eff08394d1ff9" translate="yes" xml:space="preserve">
          <source>Run an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action with the given working directory and restore the original working directory afterwards, even if the given action fails due to an exception.</source>
          <target state="translated">即使给定操作由于异常而失败，也要使用给定的工作目录运行 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 操作，然后恢复原始工作目录。</target>
        </trans-unit>
        <trans-unit id="8d745de77c3f5aed6a42ab8ac9d92a3dba8a6e5f" translate="yes" xml:space="preserve">
          <source>Run an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action with the given working directory and restore the original working directory afterwards, even if the given action fails due to an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd67e6f9b14b5f1b4f390893a28449fb2a210e6d" translate="yes" xml:space="preserve">
          <source>Run an action in the ST monad and return an immutable array of its result paired with whatever else the action returns.</source>
          <target state="translated">在ST单体中运行一个操作,并返回一个包含其结果的不可变数组,并与该操作返回的任何其他内容配对。</target>
        </trans-unit>
        <trans-unit id="ad9fc00aef2a60fbe890ead5d0fd3cbc251b9f92" translate="yes" xml:space="preserve">
          <source>Run an action in the ST monad and return an immutable array of its result.</source>
          <target state="translated">在ST单体中运行一个动作,并返回其结果的不可变数组。</target>
        </trans-unit>
        <trans-unit id="a0593a3587d1d52df5e1119e0c36ad372d09c8af" translate="yes" xml:space="preserve">
          <source>Run an additional strictness analysis before simplifier phase ⟨n⟩</source>
          <target state="translated">在简化阶段前进行额外的严格性分析⟨n⟩。</target>
        </trans-unit>
        <trans-unit id="4bcbd3db63062dfa6231e65999e7f05a00b77dc7" translate="yes" xml:space="preserve">
          <source>Run an additional strictness analysis before simplifier phase ⟨n⟩.</source>
          <target state="translated">在简化阶段前进行额外的严格性分析⟨n⟩。</target>
        </trans-unit>
        <trans-unit id="ed07c24b15fb62eced376881f4e6687ddfcb7e32" translate="yes" xml:space="preserve">
          <source>Run demand analysis again, at the end of the simplification pipeline</source>
          <target state="translated">再次运行需求分析,在简化管道的末端</target>
        </trans-unit>
        <trans-unit id="777b64f39eb2cb43ba27899e14df6d6e3da4eaa1" translate="yes" xml:space="preserve">
          <source>Run demand analysis again, at the end of the simplification pipeline. We found some opportunities for discovering strictness that were not visible earlier; and optimisations like &lt;a href=&quot;#ghc-flag--fspec-constr&quot;&gt;&lt;code&gt;-fspec-constr&lt;/code&gt;&lt;/a&gt; can create functions with unused arguments which are eliminated by late demand analysis. Improvements are modest, but so is the cost. See notes on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/LateDmd&quot;&gt;Trac wiki page&lt;/a&gt;.</source>
          <target state="translated">在简化流程的最后，再次运行需求分析。我们发现了一些发现严格性的机会，这是以前看不到的。诸如&lt;a href=&quot;#ghc-flag--fspec-constr&quot;&gt; &lt;code&gt;-fspec-constr&lt;/code&gt; 之类的&lt;/a&gt;优化可以创建带有未使用参数的函数，这些参数可以通过后期需求分析消除。改进是适度的，但成本也是如此。请参阅&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/LateDmd&quot;&gt;Trac Wiki页面&lt;/a&gt;上的注释。</target>
        </trans-unit>
        <trans-unit id="0a23b4ee81b4d7f03a40590113dea015fd463a52" translate="yes" xml:space="preserve">
          <source>Run demand analysis again, at the end of the simplification pipeline. We found some opportunities for discovering strictness that were not visible earlier; and optimisations like &lt;a href=&quot;#ghc-flag--fspec-constr&quot;&gt;&lt;code&gt;-fspec-constr&lt;/code&gt;&lt;/a&gt; can create functions with unused arguments which are eliminated by late demand analysis. Improvements are modest, but so is the cost. See notes on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/late-dmd&quot;&gt;wiki page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d6eb1f35c6369d6e742b2bcde845dc224c6e2f" translate="yes" xml:space="preserve">
          <source>Run interpreted code (for GHCi, Template Haskell, Quasi-quoting, or Annotations) in a separate process. The interpreter will run in profiling mode if &lt;a href=&quot;profiling#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt; is in effect, and in dynamically-linked mode if &lt;a href=&quot;phases#ghc-flag--dynamic&quot;&gt;&lt;code&gt;-dynamic&lt;/code&gt;&lt;/a&gt; is in effect.</source>
          <target state="translated">在单独的过程中运行解释后的代码（用于GHCi，模板Haskell，准引用或注释）。解释器将在分析模式下，如果运行&lt;a href=&quot;profiling#ghc-flag--prof&quot;&gt; &lt;code&gt;-prof&lt;/code&gt; &lt;/a&gt;生效，并在动态链接模式，如果&lt;a href=&quot;phases#ghc-flag--dynamic&quot;&gt; &lt;code&gt;-dynamic&lt;/code&gt; &lt;/a&gt;生效。</target>
        </trans-unit>
        <trans-unit id="4e3e1f7e6b2e9eebaa7a69a5da07907cfee9fb0e" translate="yes" xml:space="preserve">
          <source>Run interpreted code in a separate process</source>
          <target state="translated">在一个单独的进程中运行解释的代码</target>
        </trans-unit>
        <trans-unit id="3eeb7fffd0e79015926b457be36571c62c7df4a7" translate="yes" xml:space="preserve">
          <source>Run it with one of the heap profiling options described below (eg. &lt;a href=&quot;runtime_control#rts-flag--h&quot;&gt;&lt;code&gt;-h&lt;/code&gt;&lt;/a&gt; for a basic producer profile). This generates the file &lt;code&gt;&lt;em&gt;prog&lt;/em&gt;.hp&lt;/code&gt;.</source>
          <target state="translated">使用下面描述的堆分析选项之一运行它（例如，&lt;a href=&quot;runtime_control#rts-flag--h&quot;&gt; &lt;code&gt;-h&lt;/code&gt; &lt;/a&gt;表示基本的生产者配置文件）。这将生成文件 &lt;code&gt;&lt;em&gt;prog&lt;/em&gt;.hp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e79dd058cbe769e629170b48754e0d7e7ef07d8" translate="yes" xml:space="preserve">
          <source>Run one action (for example, &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:getInputLine&quot;&gt;getInputLine&lt;/a&gt;&lt;/code&gt;) as part of a session of user interaction.</source>
          <target state="translated">在用户交互会话中运行一个动作（例如， &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:getInputLine&quot;&gt;getInputLine&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d57fa27be2988f809d9529acab96fbef90c6c352" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad</target>
        </trans-unit>
        <trans-unit id="c7822aaa89cafe0ed1b78a1705d18b68fb4f1c6c" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad with a serialiser</source>
          <target state="translated">使用序列化器运行 &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad</target>
        </trans-unit>
        <trans-unit id="bc12f36a855cd28c296b8970e21c134b404b7bd5" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad with a serialiser and get its result</source>
          <target state="translated">使用序列化器运行 &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad并获得其结果</target>
        </trans-unit>
        <trans-unit id="15a91ed56f7eda8a762d99a1cbc9c6f9ca392a8e" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument. If the calling thread is &lt;em&gt;bound&lt;/em&gt;, an unbound thread is created temporarily using &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;runInBoundThread&lt;/code&gt; doesn't finish until the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation finishes.</source>
          <target state="translated">运行作为第一个参数传递的 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 计算。如果调用线程是&lt;em&gt;绑定的&lt;/em&gt;，则使用 &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; 临时创建一个未绑定的线程。直到 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 计算完成， &lt;code&gt;runInBoundThread&lt;/code&gt; 才会完成。</target>
        </trans-unit>
        <trans-unit id="39a55d8f298922fc3d80bcb0f67d3a91ca4143e0" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument. If the calling thread is not &lt;em&gt;bound&lt;/em&gt;, a bound thread is created temporarily. &lt;code&gt;runInBoundThread&lt;/code&gt; doesn't finish until the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation finishes.</source>
          <target state="translated">运行作为第一个参数传递的 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 计算。如果调用线程未&lt;em&gt;绑定&lt;/em&gt;，则将临时创建绑定线程。直到 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 计算完成， &lt;code&gt;runInBoundThread&lt;/code&gt; 才会完成。</target>
        </trans-unit>
        <trans-unit id="d1e2537f970c1219bce27f4fde2e232c5e95ff38" translate="yes" xml:space="preserve">
          <source>Run the C pre-processor on Haskell source files</source>
          <target state="translated">在Haskell源文件上运行C预处理器。</target>
        </trans-unit>
        <trans-unit id="2bc40f11b79f2845f13680d5f55ceb53d5b2846e" translate="yes" xml:space="preserve">
          <source>Run the full laziness optimisation (also known as let-floating), which floats let-bindings outside enclosing lambdas, in the hope they will be thereby be computed less often. See &lt;a href=&quot;http://research.microsoft.com/en-us/um/people/simonpj/papers/float.ps.gz&quot;&gt;Let-floating: moving bindings to give faster programs (ICFP&amp;lsquo;96)&lt;/a&gt;. Full laziness increases sharing, which can lead to increased memory residency.</source>
          <target state="translated">运行完全惰性优化（也称为let-floating），该优化将let绑定浮动到封闭的lambda之外，希望由此可以减少计算它们的频率。请参阅&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/simonpj/papers/float.ps.gz&quot;&gt;浮动：移动绑定以提供更快的程序（ICFP'96）&lt;/a&gt;。完全懒惰会增加共享，这可能导致内存驻留时间增加。</target>
        </trans-unit>
        <trans-unit id="7ccd1c26409863d293e65d0c896041b206d99caf" translate="yes" xml:space="preserve">
          <source>Run the full laziness optimisation (also known as let-floating), which floats let-bindings outside enclosing lambdas, in the hope they will be thereby be computed less often. See &lt;a href=&quot;http://research.microsoft.com/en-us/um/people/simonpj/papers/float.ps.gz&quot;&gt;Let-floating: moving bindings to give faster programs (ICFP&amp;rsquo;96)&lt;/a&gt;. Full laziness increases sharing, which can lead to increased memory residency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebc7466edc5c643c6fd34b1dee7b3748354f93d" translate="yes" xml:space="preserve">
          <source>Run the given decoder, and only consume its input if it returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; is returned, the input will be unconsumed. If the given decoder fails, then so will this function.</source>
          <target state="translated">运行给定的解码器，并且仅在返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 时才使用其输入。如果返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ，则输入将不使用。如果给定的解码器失败，则此功能也会失败。</target>
        </trans-unit>
        <trans-unit id="48b2335cfe69fde08e5fb7ae064631dea3e3e163" translate="yes" xml:space="preserve">
          <source>Run the given decoder, and only consume its input if it returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; is returned, the input will be unconsumed. If the given decoder fails, then so will this function.</source>
          <target state="translated">运行给定的解码器，并且仅在返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; 时才使用其输入。如果未返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 内容，则该输入将不使用。如果给定的解码器失败，则此功能也会失败。</target>
        </trans-unit>
        <trans-unit id="4478823b43946bc8c6e78124aa9b1f0d67f43d61" translate="yes" xml:space="preserve">
          <source>Run the given decoder, but without consuming its input. If the given decoder fails, then so will this function.</source>
          <target state="translated">运行给定的解码器,但不消耗其输入。如果给定的解码器失败,那么这个函数也会失败。</target>
        </trans-unit>
        <trans-unit id="dcd41406029e6406480383fb84266bf1348d4497" translate="yes" xml:space="preserve">
          <source>Run the given mod finalizers.</source>
          <target state="translated">运行给定的model finalizers。</target>
        </trans-unit>
        <trans-unit id="8b176b07be206bdcb95736b2b498d455b027fd1e" translate="yes" xml:space="preserve">
          <source>Run the supplied IO action with an empty CCS. For example, this is used by the interpreter to run an interpreted computation without the call stack showing that it was invoked from GHC.</source>
          <target state="translated">用一个空的CCS运行所提供的IO操作。例如,解释器用它来运行解释的计算,而不在调用栈中显示它是由GHC调用的。</target>
        </trans-unit>
        <trans-unit id="20832ca6085c4b502e7eebf7e021a540475c97d5" translate="yes" xml:space="preserve">
          <source>RunIO</source>
          <target state="translated">RunIO</target>
        </trans-unit>
        <trans-unit id="95f65dbb3c870989ff905e99797f95da37004464" translate="yes" xml:space="preserve">
          <source>RunTH called &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">RunTH称为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7c65d9b24c951ddf2a8d49d3996c27df48d47f7" translate="yes" xml:space="preserve">
          <source>RunTH finished successfully; return value follows</source>
          <target state="translated">RunTH成功结束;返回值如下</target>
        </trans-unit>
        <trans-unit id="55f5d6f3fbc37e8e0ac70b5616ceb4c8cae7da87" translate="yes" xml:space="preserve">
          <source>RunTH threw an exception</source>
          <target state="translated">RunTH抛出一个异常</target>
        </trans-unit>
        <trans-unit id="c7e2ecdf98b9f298685656e1a05e2f96a4be51e5" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;RealWorld&lt;/code&gt; state thread</source>
          <target state="translated">运行 &lt;code&gt;RealWorld&lt;/code&gt; 状态线程</target>
        </trans-unit>
        <trans-unit id="110ccc2b82282cf1f137b071c8241407f8dbc74c" translate="yes" xml:space="preserve">
          <source>Running TH splices</source>
          <target state="translated">运行TH拼接</target>
        </trans-unit>
        <trans-unit id="5473653cff7c9841a6824eb8ab32656a543592d4" translate="yes" xml:space="preserve">
          <source>Running a custom pre-processor at compile-time is in some settings appropriate and useful. The &lt;code&gt;-F&lt;/code&gt; option lets you run a pre-processor as part of the overall GHC compilation pipeline, which has the advantage over running a Haskell pre-processor separately in that it works in interpreted mode and you can continue to take reap the benefits of GHC&amp;rsquo;s recompilation checker.</source>
          <target state="translated">在某些设置中，在编译时运行自定义预处理器是适当且有用的。该 &lt;code&gt;-F&lt;/code&gt; 选项允许你运行的预处理器作为整个GHC编译流水线，其中分别有优于运行Haskell的预处理器，它工作在解释模式下，你可以继续服用收获GHC的好处的一部分重新编译检查器。</target>
        </trans-unit>
        <trans-unit id="debf34040ba2a5acc7a78a8f0a6722c03bde589c" translate="yes" xml:space="preserve">
          <source>Running a parser</source>
          <target state="translated">运行解析器</target>
        </trans-unit>
        <trans-unit id="60f20d277b623f5c35e48bfd4dc187e65b923ce6" translate="yes" xml:space="preserve">
          <source>Running multiple plugins is also supported, by passing multiple &lt;code&gt;-fplugin=...&lt;/code&gt; options. GHC will load the plugins in the order in which they are specified on the command line and, when appropriate, compose their effects in the same order. That is, if we had two Core plugins, &lt;code&gt;Plugin1&lt;/code&gt; and &lt;code&gt;Plugin2&lt;/code&gt;, each defining an &lt;code&gt;install&lt;/code&gt; function like the one above, then GHC would first run &lt;code&gt;Plugin1.install&lt;/code&gt; on the default &lt;code&gt;[CoreToDo]&lt;/code&gt;, take the result and feed it to &lt;code&gt;Plugin2.install&lt;/code&gt;. &lt;code&gt;-fplugin=Plugin1 -fplugin=Plugin2&lt;/code&gt; will update the Core pipeline by applying &lt;code&gt;Plugin1.install opts1 &amp;gt;=&amp;gt; Plugin2.install opts2&lt;/code&gt; (where &lt;code&gt;opts1&lt;/code&gt; and &lt;code&gt;opts2&lt;/code&gt; are the options passed to each plugin using &lt;code&gt;-fplugin-opt=...&lt;/code&gt;). This is not specific to Core plugins but holds for all the types of plugins that can be composed or sequenced in some way: the first plugin to appear on the GHC command line will always act first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea0b855fd4a1f0434152ed3530d89a3c80488bf" translate="yes" xml:space="preserve">
          <source>Running sub-processes</source>
          <target state="translated">运行子进程</target>
        </trans-unit>
        <trans-unit id="8a61554b223b5c9fc4ee8fbf79b7a49f7b54226a" translate="yes" xml:space="preserve">
          <source>Running the program generates a file with the &lt;code&gt;.tix&lt;/code&gt; suffix, in this case &lt;code&gt;Recip.tix&lt;/code&gt;, which contains the coverage data for this run of the program. The program may be run multiple times (e.g. with different test data), and the coverage data from the separate runs is accumulated in the &lt;code&gt;.tix&lt;/code&gt; file. To reset the coverage data and start again, just remove the &lt;code&gt;.tix&lt;/code&gt; file. You can control where the &lt;code&gt;.tix&lt;/code&gt; file is generated using the environment variable &lt;a href=&quot;#envvar-HPCTIXFILE&quot; id=&quot;index-9&quot;&gt;&lt;code&gt;HPCTIXFILE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">运行该程序会生成一个带有 &lt;code&gt;.tix&lt;/code&gt; 后缀的文件，在本例中为 &lt;code&gt;Recip.tix&lt;/code&gt; ，其中包含此程序运行的覆盖率数据。该程序可以运行多次（例如，使用不同的测试数据），并且来自单独运行的覆盖率数据会累积在 &lt;code&gt;.tix&lt;/code&gt; 文件中。要重置coverage数据并重新开始，只需删除 &lt;code&gt;.tix&lt;/code&gt; 文件。您可以使用环境变量&lt;a href=&quot;#envvar-HPCTIXFILE&quot; id=&quot;index-9&quot;&gt; &lt;code&gt;HPCTIXFILE&lt;/code&gt; &lt;/a&gt;来控制 &lt;code&gt;.tix&lt;/code&gt; 文件的生成位置。</target>
        </trans-unit>
        <trans-unit id="ebe0179422c905f3cf2c2e60f92ac32bd6424cf7" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;Reader&lt;/code&gt; and extracts the final value from it. (The inverse of &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-reader#v:reader&quot;&gt;reader&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">运行 &lt;code&gt;Reader&lt;/code&gt; 并从中提取最终值。（与 &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-reader#v:reader&quot;&gt;reader&lt;/a&gt;&lt;/code&gt; 相反。）</target>
        </trans-unit>
        <trans-unit id="d81daff38a2e8becbe69003e3d64a0d02582ad64" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;Reader&lt;/code&gt; and extracts the final value from it. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-reader#v:reader&quot;&gt;reader&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">运行 &lt;code&gt;Reader&lt;/code&gt; 并从中提取最终值。（与 &lt;code&gt;&lt;a href=&quot;control-monad-trans-reader#v:reader&quot;&gt;reader&lt;/a&gt;&lt;/code&gt; 相反。）</target>
        </trans-unit>
        <trans-unit id="b24f6b665ff90e778b2bc1246990ffb02aedd0ce" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;Select&lt;/code&gt; computation with a function for evaluating answers to select a particular answer. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#v:select&quot;&gt;select&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">运行带有用于评估答案以选择特定答案的功能的 &lt;code&gt;Select&lt;/code&gt; 计算。（ &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#v:select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; 的倒数。）</target>
        </trans-unit>
        <trans-unit id="3ce8221138916a0224e49c3a5cb2e8ca476f8705" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;SelectT&lt;/code&gt; computation with a function for evaluating answers to select a particular answer. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#v:select&quot;&gt;select&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">运行带有评估答案以选择特定答案的功能的 &lt;code&gt;SelectT&lt;/code&gt; 计算。（ &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#v:select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; 的倒数。）</target>
        </trans-unit>
        <trans-unit id="9702b4260727983ec3835e361a57f86bf43eb272" translate="yes" xml:space="preserve">
          <source>Runs a command using the shell, and returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s that may be used to communicate with the process via its &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, and &lt;code&gt;stderr&lt;/code&gt; respectively.</source>
          <target state="translated">使用shell运行命令，并返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; ，可分别通过其 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 与该进程进行通信。</target>
        </trans-unit>
        <trans-unit id="e76e6388ca9a52ed94e2a298db04cfe4bd7865ce" translate="yes" xml:space="preserve">
          <source>Runs a command using the shell.</source>
          <target state="translated">使用shell运行一个命令。</target>
        </trans-unit>
        <trans-unit id="7d3eb255b4482ad8e99fec5f8dd54522d3f17add" translate="yes" xml:space="preserve">
          <source>Runs a raw command, and returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s that may be used to communicate with the process via its &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; respectively.</source>
          <target state="translated">运行原始命令，并返回分别用于通过其 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 与进程通信的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ac0263c85df97edaad82961ff458ab2a1952c1b" translate="yes" xml:space="preserve">
          <source>Runs a raw command, optionally specifying &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s from which to take the &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; channels for the new process (otherwise these handles are inherited from the current process).</source>
          <target state="translated">运行原始命令，可选地指定 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; ，从中获取用于新进程的 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 通道（否则，这些句柄将从当前进程继承）。</target>
        </trans-unit>
        <trans-unit id="5cb758bfedb5892b023f8cd504b7def95c728d00" translate="yes" xml:space="preserve">
          <source>Runs a series of sanity checks and lints on the extended interface files that are being written out. These include testing things properties such as variables not occuring outside of their expected scopes.</source>
          <target state="translated">对正在写入的扩展接口文件进行一系列的安全检查和过滤。这些检查包括测试一些属性,比如变量不会出现在预期范围之外。</target>
        </trans-unit>
        <trans-unit id="3fe6084c1a3fd5b43bacc585f14f922412cce042" translate="yes" xml:space="preserve">
          <source>Runs an anonymous &lt;code&gt;&lt;a href=&quot;control-monad-cont#t:Cont&quot;&gt;Cont&lt;/a&gt;&lt;/code&gt; block and extracts value from it with &lt;code&gt;(`runCont` id)&lt;/code&gt;. Here &lt;code&gt;id&lt;/code&gt; is the continuation, passed to the &lt;code&gt;Cont&lt;/code&gt; block.</source>
          <target state="translated">运行一个匿名的 &lt;code&gt;&lt;a href=&quot;control-monad-cont#t:Cont&quot;&gt;Cont&lt;/a&gt;&lt;/code&gt; 块并使用 &lt;code&gt;(`runCont` id)&lt;/code&gt; 从中提取值。这里 &lt;code&gt;id&lt;/code&gt; 是延续，传递到 &lt;code&gt;Cont&lt;/code&gt; 块。</target>
        </trans-unit>
        <trans-unit id="1c2160e3536a24db1fa5c7d6a9b48fc51e2b4654" translate="yes" xml:space="preserve">
          <source>Runs another specialisation pass towards the end of the optimisation pipeline. This can catch specialisation opportunities which arose from the previous specialisation pass or other inlining.</source>
          <target state="translated">在优化管道的最后运行另一个专业化通道。这可以捕捉从上一个专门化通道或其他内联中产生的专门化机会。</target>
        </trans-unit>
        <trans-unit id="7a9d67a12e147a14423a8f285de654f95371aa27" translate="yes" xml:space="preserve">
          <source>Runs the mod finalizers.</source>
          <target state="translated">运行model finalizers。</target>
        </trans-unit>
        <trans-unit id="17c0231a9c26233bc34f91a12eb6403f13a57ed2" translate="yes" xml:space="preserve">
          <source>Runtime statistics</source>
          <target state="translated">运行时统计</target>
        </trans-unit>
        <trans-unit id="08e8f6f71c9bbd3500f65426030c8c9f591149d5" translate="yes" xml:space="preserve">
          <source>Runtime system name and version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a012dd66b31c20680aae0c2a22bff371d2224bd" translate="yes" xml:space="preserve">
          <source>RuntimeRep</source>
          <target state="translated">RuntimeRep</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="1c12fa511d52194a5681ee8be41a1e398d85f290" translate="yes" xml:space="preserve">
          <source>S1</source>
          <target state="translated">S1</target>
        </trans-unit>
        <trans-unit id="899bf6f720e849dde5d0680c3b936af1ed0ed670" translate="yes" xml:space="preserve">
          <source>SCC</source>
          <target state="translated">SCC</target>
        </trans-unit>
        <trans-unit id="f65329558d58550d256c29ddd08aefa1318badd6" translate="yes" xml:space="preserve">
          <source>SECURITY_DESCRIPTOR</source>
          <target state="translated">SECURITY_DESCRIPTOR</target>
        </trans-unit>
        <trans-unit id="7f9a19de07cd8af5c4dcf36abf5107acdd7e5e90" translate="yes" xml:space="preserve">
          <source>SECURITY_DESCRIPTOR_CONTROL</source>
          <target state="translated">SECURITY_DESCRIPTOR_CONTROL</target>
        </trans-unit>
        <trans-unit id="759f1d01aa3aa6eb019eaff57105108a241121c8" translate="yes" xml:space="preserve">
          <source>SECURITY_INFORMATION</source>
          <target state="translated">SECURITY_INFORMATION</target>
        </trans-unit>
        <trans-unit id="3ea6ea5359c3ec5b8c733abed79488b6cffb3f80" translate="yes" xml:space="preserve">
          <source>SHORT</source>
          <target state="translated">SHORT</target>
        </trans-unit>
        <trans-unit id="9c4876c894699d2a14673f8407ae9f51b03fe93b" translate="yes" xml:space="preserve">
          <source>SID</source>
          <target state="translated">SID</target>
        </trans-unit>
        <trans-unit id="7817913a615ba3fb96f9c4017b8bda6cab9a4d1c" translate="yes" xml:space="preserve">
          <source>SIZE_T</source>
          <target state="translated">SIZE_T</target>
        </trans-unit>
        <trans-unit id="6df63cad9f75b5c64b7535d25c4ff47f6a51cc0d" translate="yes" xml:space="preserve">
          <source>SPLIT</source>
          <target state="translated">SPLIT</target>
        </trans-unit>
        <trans-unit id="6b42bd15d0f3851ba94b9c6f46ece2f62da81d54" translate="yes" xml:space="preserve">
          <source>SSE2 is unconditionally used on x86-64 platforms.</source>
          <target state="translated">在x86-64平台上无条件使用SSE2。</target>
        </trans-unit>
        <trans-unit id="950615819f3a7970b3e5eaf04967ce0a92bb2835" translate="yes" xml:space="preserve">
          <source>ST</source>
          <target state="translated">ST</target>
        </trans-unit>
        <trans-unit id="e5c2bad261297a0753db2fa8888147b037862b4a" translate="yes" xml:space="preserve">
          <source>STArray</source>
          <target state="translated">STArray</target>
        </trans-unit>
        <trans-unit id="c0b3e8442a3ffe44627f4a9836264ede1d95c8cd" translate="yes" xml:space="preserve">
          <source>STG pass sanity checking</source>
          <target state="translated">STG通过安全性检查</target>
        </trans-unit>
        <trans-unit id="a6a77f4184b5dc9ae0ae578b959c5420076bb090" translate="yes" xml:space="preserve">
          <source>STG representation</source>
          <target state="translated">STG代表</target>
        </trans-unit>
        <trans-unit id="cec127d634b8483c65675fe331bb988cce390f37" translate="yes" xml:space="preserve">
          <source>STM</source>
          <target state="translated">STM</target>
        </trans-unit>
        <trans-unit id="9066766844f7ae4915ba3de7074af6f2d62f2724" translate="yes" xml:space="preserve">
          <source>STM transactions that do not use &lt;code&gt;&lt;a href=&quot;ghc-conc#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">不使用 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; STM事务</target>
        </trans-unit>
        <trans-unit id="e5a520427dd21587b99c696298b392dd5580f65f" translate="yes" xml:space="preserve">
          <source>STRef</source>
          <target state="translated">STRef</target>
        </trans-unit>
        <trans-unit id="e978eeb54fadf054d78e68edb89b81271ed3f4dd" translate="yes" xml:space="preserve">
          <source>STRefs</source>
          <target state="translated">STRefs</target>
        </trans-unit>
        <trans-unit id="90f5b7ef29126e57f0d1e034cac1ded1fa114c30" translate="yes" xml:space="preserve">
          <source>STRep</source>
          <target state="translated">STRep</target>
        </trans-unit>
        <trans-unit id="16e4def8ced7122c8ea371b85fa1cc9e985f98ab" translate="yes" xml:space="preserve">
          <source>STUArray</source>
          <target state="translated">STUArray</target>
        </trans-unit>
        <trans-unit id="ef9739d368e51997aa5b6a749bd020ce6df5c75d" translate="yes" xml:space="preserve">
          <source>STret</source>
          <target state="translated">STret</target>
        </trans-unit>
        <trans-unit id="9525ae1781bb71fc767a9bab4b6f299ac5cc8c5d" translate="yes" xml:space="preserve">
          <source>Safe</source>
          <target state="translated">Safe</target>
        </trans-unit>
        <trans-unit id="7535c06f3f5a4d0548fb0642ce1d61948347b105" translate="yes" xml:space="preserve">
          <source>Safe API Only.</source>
          <target state="translated">只有安全的API。</target>
        </trans-unit>
        <trans-unit id="f756f346c9c3c1563af96de59654e6aa5b1dbb24" translate="yes" xml:space="preserve">
          <source>Safe API only of &lt;a href=&quot;data-array-st&quot;&gt;Data.Array.ST&lt;/a&gt;.</source>
          <target state="translated">仅&lt;a href=&quot;data-array-st&quot;&gt;Data.Array.ST的&lt;/a&gt;安全API 。</target>
        </trans-unit>
        <trans-unit id="b3d31a46f8a0b8d8beabe9685ebfe7850f5f2245" translate="yes" xml:space="preserve">
          <source>Safe API only of &lt;a href=&quot;data-array-storable&quot;&gt;Data.Array.Storable&lt;/a&gt;.</source>
          <target state="translated">仅&lt;a href=&quot;data-array-storable&quot;&gt;Data.Array.Storable的&lt;/a&gt;安全API 。</target>
        </trans-unit>
        <trans-unit id="e2daafb40e6c8d93bbdd4a902b19d52db880bc51" translate="yes" xml:space="preserve">
          <source>Safe API only.</source>
          <target state="translated">只有安全的API。</target>
        </trans-unit>
        <trans-unit id="c2b4f1c091c04d25018e09e575dd73be9c363a4b" translate="yes" xml:space="preserve">
          <source>Safe Haskell</source>
          <target state="translated">安全的Haskell</target>
        </trans-unit>
        <trans-unit id="e67a69e7e826590a4bb3f189a2199e3523fbaf17" translate="yes" xml:space="preserve">
          <source>Safe Haskell enables a small extension to the usual import syntax of Haskell, adding a &lt;code&gt;safe&lt;/code&gt; keyword:</source>
          <target state="translated">安全Haskell对Haskell的常规导入语法进行了小扩展，并添加了一个 &lt;code&gt;safe&lt;/code&gt; 关键字：</target>
        </trans-unit>
        <trans-unit id="61c09516b28b6110495b29552e9b7bdd6bc15fb3" translate="yes" xml:space="preserve">
          <source>Safe Haskell gives packages a new Boolean property, that of trust. Several new options are available at the GHC command-line to specify the trust property of packages:</source>
          <target state="translated">Safe Haskell 赋予了 packages 一个新的布尔属性,即信任属性。在 GHC 命令行中,有几个新的选项可以用来指定包的信任属性。</target>
        </trans-unit>
        <trans-unit id="b786b78a86f23785f5ed0ec33c27ec5ab85e8ccf" translate="yes" xml:space="preserve">
          <source>Safe Haskell has been designed with two use cases in mind:</source>
          <target state="translated">Safe Haskell在设计时考虑到了两个用例。</target>
        </trans-unit>
        <trans-unit id="7f51b5c9d1647923f4ab94e1f294b850fe65601a" translate="yes" xml:space="preserve">
          <source>Safe Haskell introduces the following three language flags:</source>
          <target state="translated">Safe Haskell引入了以下三个语言标志。</target>
        </trans-unit>
        <trans-unit id="dd09bfe0fa2d84cc1187db0f1ff4b4aad99dff27" translate="yes" xml:space="preserve">
          <source>Safe Haskell is an extension to the Haskell language that is implemented in GHC as of version 7.2. It allows for unsafe code to be securely included in a trusted code base by restricting the features of GHC Haskell the code is allowed to use. Put simply, it makes the types of programs trustable.</source>
          <target state="translated">安全Haskell是对Haskell语言的扩展,从7.2版本开始在GHC中实施。它通过限制GHC Haskell允许使用的功能,允许不安全的代码安全地包含在可信代码库中。简单地说,它使程序的类型变得可信任。</target>
        </trans-unit>
        <trans-unit id="7c263edc13b21bba8432087d3c5e3665015e0f69" translate="yes" xml:space="preserve">
          <source>Safe Haskell prevents all these attacks. This is done by compiling the RIO module with the &lt;a href=&quot;#extension-Safe&quot;&gt;&lt;code&gt;Safe&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#extension-Trustworthy&quot;&gt;&lt;code&gt;Trustworthy&lt;/code&gt;&lt;/a&gt; flag and compiling &lt;code&gt;Danger&lt;/code&gt; with the &lt;a href=&quot;#extension-Safe&quot;&gt;&lt;code&gt;Safe&lt;/code&gt;&lt;/a&gt; flag. We explain each below.</source>
          <target state="translated">Safe Haskell可以防止所有这些攻击。这是由编译RIO模块用做&lt;a href=&quot;#extension-Safe&quot;&gt; &lt;code&gt;Safe&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#extension-Trustworthy&quot;&gt; &lt;code&gt;Trustworthy&lt;/code&gt; &lt;/a&gt;标志和编译 &lt;code&gt;Danger&lt;/code&gt; 与&lt;a href=&quot;#extension-Safe&quot;&gt; &lt;code&gt;Safe&lt;/code&gt; &lt;/a&gt;标志。我们在下面解释每个。</target>
        </trans-unit>
        <trans-unit id="b3aeec5ca1980ad741d3ad1d344e12965e713814" translate="yes" xml:space="preserve">
          <source>Safe Haskell, however, &lt;em&gt;does not offer&lt;/em&gt; compilation safety. During compilation time it is possible for arbitrary processes to be launched, using for example the &lt;a href=&quot;phases#pre-processor&quot;&gt;custom pre-processor&lt;/a&gt; flag. This can be manipulated to either compromise a user&amp;rsquo;s system at compilation time, or to modify the source code just before compilation to try to alter Safe Haskell flags. This is discussed further in section &lt;a href=&quot;#safe-compilation&quot;&gt;Safe Compilation&lt;/a&gt;.</source>
          <target state="translated">但是，Safe Haskell &lt;em&gt;不提供&lt;/em&gt;编译安全性。在编译期间，可以使用例如&lt;a href=&quot;phases#pre-processor&quot;&gt;自定义预处理器&lt;/a&gt;标志启动任意进程。可以对其进行操作，以在编译时危及用户的系统，也可以在编译前修改源代码以尝试更改Safe Haskell标志。在&amp;ldquo; &lt;a href=&quot;#safe-compilation&quot;&gt;安全编译&amp;rdquo;&lt;/a&gt;部分中将进一步讨论。</target>
        </trans-unit>
        <trans-unit id="7559a2e6feca986de7fcdcc33b5293ce51f1953d" translate="yes" xml:space="preserve">
          <source>Safe coercions</source>
          <target state="translated">安全胁迫</target>
        </trans-unit>
        <trans-unit id="487c71c35953bfc2f56e52fc2926a6b36c72c198" translate="yes" xml:space="preserve">
          <source>Safe coercions between data types.</source>
          <target state="translated">数据类型之间的安全胁迫。</target>
        </trans-unit>
        <trans-unit id="15321e8ea7eb095fd68c7d2b0920edd30f70ee3f" translate="yes" xml:space="preserve">
          <source>Safe conversion functions</source>
          <target state="translated">安全转换功能</target>
        </trans-unit>
        <trans-unit id="de5976ed065d66227eff9327d19b54162d6c1027" translate="yes" xml:space="preserve">
          <source>Safe-Inferred</source>
          <target state="translated">Safe-Inferred</target>
        </trans-unit>
        <trans-unit id="db6e7e410412f58574f766c3911f49badd42beca" translate="yes" xml:space="preserve">
          <source>Safety</source>
          <target state="translated">Safety</target>
        </trans-unit>
        <trans-unit id="7d347ee88f531b10951954bcba6275794f5522ac" translate="yes" xml:space="preserve">
          <source>Same again, only with a pattern binding:</source>
          <target state="translated">又是一样的,只是用图案装订。</target>
        </trans-unit>
        <trans-unit id="42f54e3d92f1c859e49ab129bf706a1c9c9cab81" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt;, but with the arguments interchanged.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; 相同，但参数互换。</target>
        </trans-unit>
        <trans-unit id="b0b5e4ab3cff2b44673ef6d4dea093f7b4dfc984" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同 &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c65c594f9b38468c895de45f5ed76cd46d6ec29f" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同 &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f972204c79e140345242f558fff756977035eef" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同 &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c6bc0e31c039cc996e63332133a33c423d504c6" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同 &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f573a703c6961ba94fbaef77183875d6c5cd3a6" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;data-map-strict#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同 &lt;code&gt;&lt;a href=&quot;data-map-strict#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3f74cdd5ce7f2024b9dd79782a5c31a10f4ddf9" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;ghc-base#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt;, but with the arguments interchanged.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;ghc-base#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; 相同，但参数互换。</target>
        </trans-unit>
        <trans-unit id="e71b9165ae8f3cbcf5b73c9aa1bad1d9b5f6a9b6" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:indexBigNat-35-&quot;&gt;indexBigNat#&lt;/a&gt; bn 0#&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:indexBigNat-35-&quot;&gt;indexBigNat#&lt;/a&gt; bn 0#&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b6daf2b66f8854291aa22564f2eaa97349e4920" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;ghc-show#v:showLitChar&quot;&gt;showLitChar&lt;/a&gt;&lt;/code&gt;, but for strings It converts the string to a string using Haskell escape conventions for non-printable characters. Does not add double-quotes around the whole thing; the caller should do that. The main difference from showLitChar (apart from the fact that the argument is a string not a list) is that we must escape double-quotes</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;ghc-show#v:showLitChar&quot;&gt;showLitChar&lt;/a&gt;&lt;/code&gt; 相同，但用于字符串它使用Haskell转义约定将不可打印字符转换为字符串。不会在整个事情上加上双引号；呼叫者应该这样做。与showLitChar的主要区别（除了参数是字符串而不是列表的事实）是我们必须转义双引号</target>
        </trans-unit>
        <trans-unit id="30898b69e47931db50d50b02f157bc6df3bd4ce9" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addForeignSource&quot;&gt;addForeignSource&lt;/a&gt;&lt;/code&gt;, but expects to receive a path pointing to the foreign file instead of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; of its contents. Consider using this in conjunction with &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addTempFile&quot;&gt;addTempFile&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addForeignSource&quot;&gt;addForeignSource&lt;/a&gt;&lt;/code&gt; 相同，但期望接收指向外部文件的路径，而不是其内容的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。考虑将其与 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addTempFile&quot;&gt;addTempFile&lt;/a&gt;&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="db447a776588fef1645ee31ea1870e0abb16ba2d" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt;, but with the arguments interchanged.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; 相同，但参数互换。</target>
        </trans-unit>
        <trans-unit id="4aa4d6a43b4d65f2e57f90340aedc9abdbfbac32" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="8f568cab24dde73b38ef0088da38eb953dfcc1a3" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="a7b601cf774784717e90b534e29f08f76d19896f" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="259d74b1086bc9c590828600acb6b3fa772be181" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;ignore&lt;/code&gt; but also ignores &lt;code&gt;GHCRTS&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;ignore&lt;/code&gt; 相同，但也忽略 &lt;code&gt;GHCRTS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4651d7eb6692e845dd60cf4b29e508298b8de997" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;text&lt;/code&gt;. Used to be used for Bytestrings.</source>
          <target state="translated">与 &lt;code&gt;text&lt;/code&gt; 相同。用于字节串。</target>
        </trans-unit>
        <trans-unit id="e2891da0f76cce0b60708f9a0abe80a850b0bc91" translate="yes" xml:space="preserve">
          <source>Same as previous item, but also exports all the data constructors for &lt;code&gt;GMap&lt;/code&gt;, namely &lt;code&gt;GMapEither&lt;/code&gt;.</source>
          <target state="translated">与上一项相同，但还导出 &lt;code&gt;GMap&lt;/code&gt; 的所有数据构造函数，即 &lt;code&gt;GMapEither&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d00a46d1ceda265f0fed0d1744950e3bd2e387e" translate="yes" xml:space="preserve">
          <source>Same as previous item.</source>
          <target state="translated">与上一项相同。</target>
        </trans-unit>
        <trans-unit id="edbc114aaea9352f5c850f9f7038b9b219489025" translate="yes" xml:space="preserve">
          <source>Same as the previous item. Note the &amp;ldquo;&lt;code&gt;type&lt;/code&gt;&amp;rdquo; keyword.</source>
          <target state="translated">与上一项相同。注意&amp;ldquo; &lt;code&gt;type&lt;/code&gt; &amp;rdquo;关键字。</target>
        </trans-unit>
        <trans-unit id="fb73a9a1da0c27b0a141302dc0b405c29b6c6b56" translate="yes" xml:space="preserve">
          <source>Same idea, except for instance declarations. For example:</source>
          <target state="translated">同样的想法,除了实例声明。例如:</target>
        </trans-unit>
        <trans-unit id="de2a172486ea001bd4a04b969b6804b8695266a2" translate="yes" xml:space="preserve">
          <source>Satisfies &lt;code&gt;(quot# x y) times# y plus# (rem# x y) == x&lt;/code&gt;.</source>
          <target state="translated">满足 &lt;code&gt;(quot# x y) times# y plus# (rem# x y) == x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62dc0506f62492cd0477624e00360efb6cf5d5de" translate="yes" xml:space="preserve">
          <source>Satisfies &lt;code&gt;(quotInt# x y) *# y +# (remInt# x y) == x&lt;/code&gt;. The behavior is undefined if the second argument is zero.</source>
          <target state="translated">满足 &lt;code&gt;(quotInt# x y) *# y +# (remInt# x y) == x&lt;/code&gt; 。如果第二个参数为零，则行为是不确定的。</target>
        </trans-unit>
        <trans-unit id="17063c506b81a46c2eb7716af50cf19d4ed5a6c6" translate="yes" xml:space="preserve">
          <source>Saturday</source>
          <target state="translated">Saturday</target>
        </trans-unit>
        <trans-unit id="a9478dccf725e7e77bb9bdb404a579319bda90bb" translate="yes" xml:space="preserve">
          <source>Saying &lt;code&gt;-ignore-package ⟨pkg⟩&lt;/code&gt; is the same as giving &lt;a href=&quot;#ghc-flag--hide-package%20%E2%9F%A8pkg%E2%9F%A9&quot;&gt;&lt;code&gt;-hide-package ⟨pkg⟩&lt;/code&gt;&lt;/a&gt; flags for ⟨pkg⟩ and all the packages that depend on ⟨pkg⟩. Sometimes we don&amp;rsquo;t know ahead of time which packages will be installed that depend on ⟨pkg⟩, which is when the &lt;a href=&quot;#ghc-flag--ignore-package%20%E2%9F%A8pkg%E2%9F%A9&quot;&gt;&lt;code&gt;-ignore-package ⟨pkg⟩&lt;/code&gt;&lt;/a&gt; flag can be useful.</source>
          <target state="translated">说 &lt;code&gt;-ignore-package ⟨pkg⟩&lt;/code&gt; 与为⟨pkg⟩和所有依赖&lt;a href=&quot;#ghc-flag--hide-package%20%E2%9F%A8pkg%E2%9F%A9&quot;&gt; &lt;code&gt;-hide-package ⟨pkg⟩&lt;/code&gt; &lt;/a&gt;赋予-hide-package⟨pkg⟩标志相同。有时我们不知道将要安装哪些取决于&lt;a href=&quot;#ghc-flag--ignore-package%20%E2%9F%A8pkg%E2%9F%A9&quot;&gt; &lt;code&gt;-ignore-package ⟨pkg⟩&lt;/code&gt; &lt;/a&gt;标志才有用。</target>
        </trans-unit>
        <trans-unit id="338131a09df3c89b4b3a6759393cb8cab73f4a09" translate="yes" xml:space="preserve">
          <source>Sc: Symbol, Currency</source>
          <target state="translated">Sc:符号、货币</target>
        </trans-unit>
        <trans-unit id="546401c167d48728b944d3dac7bc4865e17a9993" translate="yes" xml:space="preserve">
          <source>Scale by a factor. Note that &lt;code&gt;scaleCalendarDiffDays (-1)&lt;/code&gt; will not perfectly invert a duration, due to variable month lengths.</source>
          <target state="translated">按比例缩放。请注意，由于月份长度的变化， &lt;code&gt;scaleCalendarDiffDays (-1)&lt;/code&gt; 不能完美地反转持续时间。</target>
        </trans-unit>
        <trans-unit id="c514fa51cd274818822919c3c3118e8271c0700a" translate="yes" xml:space="preserve">
          <source>Scale by a factor. Note that &lt;code&gt;scaleCalendarDiffTime (-1)&lt;/code&gt; will not perfectly invert a duration, due to variable month lengths.</source>
          <target state="translated">按比例缩放。请注意，由于月份长度的变化， &lt;code&gt;scaleCalendarDiffTime (-1)&lt;/code&gt; 不能完美地反转持续时间。</target>
        </trans-unit>
        <trans-unit id="28cba55d2aadf568463a9e7e645f8c7b1eed5e8b" translate="yes" xml:space="preserve">
          <source>Scan</source>
          <target state="translated">Scan</target>
        </trans-unit>
        <trans-unit id="71faf74908acae0c765880b1aea70a5559c3733d" translate="yes" xml:space="preserve">
          <source>Scans</source>
          <target state="translated">Scans</target>
        </trans-unit>
        <trans-unit id="b1429a72540c69e025c517fcc5b792419c88cd1a" translate="yes" xml:space="preserve">
          <source>Scheduling</source>
          <target state="translated">Scheduling</target>
        </trans-unit>
        <trans-unit id="6faf39f011de9cbf53782c396ae03385893350ef" translate="yes" xml:space="preserve">
          <source>Scheduling may be either pre-emptive or co-operative, depending on the implementation of Concurrent Haskell (see below for information related to specific compilers). In a co-operative system, context switches only occur when you use one of the primitives defined in this module. This means that programs such as:</source>
          <target state="translated">调度可以是先发制人的,也可以是合作式的,这取决于并发 Haskell 的实现(请参阅下面有关特定编译器的信息)。在合作系统中,只有当您使用本模块中定义的一个基元时,才会发生上下文切换。这意味着,程序如。</target>
        </trans-unit>
        <trans-unit id="dccc54d9b157582e483a96946579d9be83fa9db6" translate="yes" xml:space="preserve">
          <source>Scheduling priority</source>
          <target state="translated">排列优先级</target>
        </trans-unit>
        <trans-unit id="5bbd286bc5c8c1f1c865fd99417573a56571d9da" translate="yes" xml:space="preserve">
          <source>Science and Technology 1999-2001</source>
          <target state="translated">1999-2001年科学和技术</target>
        </trans-unit>
        <trans-unit id="22beb4222dc3e5cbee9b467d0b9786f4f3e50125" translate="yes" xml:space="preserve">
          <source>Scientific notation (e.g. &lt;code&gt;2.3e123&lt;/code&gt;).</source>
          <target state="translated">科学计数法（例如 &lt;code&gt;2.3e123&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="75380ef7a817972c15f49b0a28115411b698cf58" translate="yes" xml:space="preserve">
          <source>ScopedTypeVariables</source>
          <target state="translated">ScopedTypeVariables</target>
        </trans-unit>
        <trans-unit id="6c3ba74480874ebe767282d193c80088bceb78f7" translate="yes" xml:space="preserve">
          <source>Scoping: The variables bound by the view pattern are the variables bound by ⟨pat⟩.</source>
          <target state="translated">范围化。视图模式所约束的变量是由⟨pat⟩约束的变量。</target>
        </trans-unit>
        <trans-unit id="156b2b4d9bc708c55fb5b68f1d70e2d191678cf6" translate="yes" xml:space="preserve">
          <source>Scrolling</source>
          <target state="translated">Scrolling</target>
        </trans-unit>
        <trans-unit id="334dcf943f6bb00acd4e042e9bce8b88540c2911" translate="yes" xml:space="preserve">
          <source>Search PATH?</source>
          <target state="translated">搜索PATH?</target>
        </trans-unit>
        <trans-unit id="a127436f7e4ae37e45a1614cfb90e823c1d58a78" translate="yes" xml:space="preserve">
          <source>Search for arbitrary substrings</source>
          <target state="translated">搜索任意子串</target>
        </trans-unit>
        <trans-unit id="12389b6db2d6a15654261b506b03b98a8c4840a8" translate="yes" xml:space="preserve">
          <source>Search for executable files in a list of system-defined locations, which generally includes &lt;code&gt;PATH&lt;/code&gt; and possibly more.</source>
          <target state="translated">在系统定义的位置列表中搜索可执行文件，该位置通常包括 &lt;code&gt;PATH&lt;/code&gt; 以及可能更多的文件。</target>
        </trans-unit>
        <trans-unit id="a98c62f49b59f930f47977df6863e5ad4360e7ef" translate="yes" xml:space="preserve">
          <source>Search paths for various application data, as specified by the &lt;a href=&quot;http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot;&gt;XDG Base Directory Specification&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot;&gt;XDG基本目录规范&lt;/a&gt;所指定的各种应用程序数据的搜索路径。</target>
        </trans-unit>
        <trans-unit id="e93e1199d58861a512ab27cc34a406b320a884b9" translate="yes" xml:space="preserve">
          <source>Search through a given list of directories for a file that has the given name and satisfies the given predicate and return the path of the first occurrence. The directories are checked in a left-to-right order.</source>
          <target state="translated">在给定的目录列表中搜索具有给定名称并满足给定前提条件的文件,并返回第一个出现的路径。按照从左到右的顺序检查目录。</target>
        </trans-unit>
        <trans-unit id="71e66c7ed9a4c56bca17f8617c77a3b69ad27a5b" translate="yes" xml:space="preserve">
          <source>Search through the given list of directories for the given file and returns all paths where the given file exists.</source>
          <target state="translated">通过给定的目录列表搜索给定文件,并返回给定文件存在的所有路径。</target>
        </trans-unit>
        <trans-unit id="146f51cc73f2b136886c580f8108ca9198253c2d" translate="yes" xml:space="preserve">
          <source>Search through the given list of directories for the given file.</source>
          <target state="translated">通过给定的目录列表搜索给定的文件。</target>
        </trans-unit>
        <trans-unit id="450d52d3ef8975d374969138d196d6c1747d2a25" translate="yes" xml:space="preserve">
          <source>Searches</source>
          <target state="translated">Searches</target>
        </trans-unit>
        <trans-unit id="98cc363c0119e35d1c8070755fc4d4c2387aad71" translate="yes" xml:space="preserve">
          <source>Searching</source>
          <target state="translated">Searching</target>
        </trans-unit>
        <trans-unit id="99d17743e74ce54537b8c991a4a30b52cb4d36eb" translate="yes" xml:space="preserve">
          <source>Searching ByteStrings</source>
          <target state="translated">搜索ByteStrings</target>
        </trans-unit>
        <trans-unit id="a67f0f78137f986e35f6c4d42fd904b4d1ec2b50" translate="yes" xml:space="preserve">
          <source>Searching by equality</source>
          <target state="translated">按平等原则搜索</target>
        </trans-unit>
        <trans-unit id="fd334e8959b428cb282a19f2d183762892a2bb5b" translate="yes" xml:space="preserve">
          <source>Searching lists</source>
          <target state="translated">搜索清单</target>
        </trans-unit>
        <trans-unit id="e43759c82dd08f2e272ceeee2ea1b6915d671c48" translate="yes" xml:space="preserve">
          <source>Searching with a predicate</source>
          <target state="translated">用谓词搜索</target>
        </trans-unit>
        <trans-unit id="2a4bcae654f264daf22579fb462bf0bae302a057" translate="yes" xml:space="preserve">
          <source>Second</source>
          <target state="translated">Second</target>
        </trans-unit>
        <trans-unit id="41aadab64e8c4c09f38d5ce9dba630974c5030fc" translate="yes" xml:space="preserve">
          <source>Second, &lt;code&gt;M&lt;/code&gt; safe imports &lt;code&gt;Buggle&lt;/code&gt;. For this import &lt;code&gt;P&lt;/code&gt;&amp;lsquo;s author takes no responsibility for the safety, instead asking GHC to check whether &lt;code&gt;Buggle&lt;/code&gt; is trusted by &lt;code&gt;C&lt;/code&gt;. Is it?</source>
          <target state="translated">其次， &lt;code&gt;M&lt;/code&gt; 安全进口 &lt;code&gt;Buggle&lt;/code&gt; 。对于此导入， &lt;code&gt;P&lt;/code&gt; 的作者对安全性不承担任何责任，而是要求GHC检查 &lt;code&gt;Buggle&lt;/code&gt; 是否受 &lt;code&gt;C&lt;/code&gt; 信任。是吗？</target>
        </trans-unit>
        <trans-unit id="2e928be918c85dcaa47082721f2415da45b64f49" translate="yes" xml:space="preserve">
          <source>Second, &lt;code&gt;M&lt;/code&gt; safe imports &lt;code&gt;Buggle&lt;/code&gt;. For this import &lt;code&gt;P&lt;/code&gt;&amp;rsquo;s author takes no responsibility for the safety, instead asking GHC to check whether &lt;code&gt;Buggle&lt;/code&gt; is trusted by &lt;code&gt;C&lt;/code&gt;. Is it?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c78dcd73014ae61f9a2861d5642f4a3842b7141" translate="yes" xml:space="preserve">
          <source>Secondary field width specifier.</source>
          <target state="translated">次要字段宽度指定器。</target>
        </trans-unit>
        <trans-unit id="535a8dd9a0bf8f6685407cc23c4fc9b41645994f" translate="yes" xml:space="preserve">
          <source>Secondly, quantified constraints allow for more concise and precise specifications. As an example, consider the MTL type class for monad transformers:</source>
          <target state="translated">其次,量化的约束条件可以使规范更加简洁和精确。举个例子,考虑单体变压器的MTL类型类。</target>
        </trans-unit>
        <trans-unit id="59f6f8daaa2e8298b150972a1f24b2062e5ac468" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#explicit-namespaces&quot;&gt;Explicit namespaces in import/export&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;#explicit-namespaces&quot;&gt;import / export中的显式名称空间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b3d2323e785e9fbeead9b84a569915c4adbc461e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#ghci-cmd-:ctags&quot;&gt;&lt;code&gt;:ctags&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;#ghci-cmd-:ctags&quot;&gt; &lt;code&gt;:ctags&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c67269b07f4bc963dc25959c7df0f9e713b5e55" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#ghci-cmd-:main&quot;&gt;&lt;code&gt;:main&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;#ghci-cmd-:main&quot;&gt; &lt;code&gt;:main&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c85401a395f7d969a0e271b5ee0adc2370d964e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#options-f-compact&quot;&gt;Individual optimisations&lt;/a&gt; for a list of optimisations enabled on level 1 and level 2.</source>
          <target state="translated">有关在级别1和级别2上启用的优化的列表，请参阅&lt;a href=&quot;#options-f-compact&quot;&gt;单个优化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="952031d44aeabc0d6d835e921383416a26a07b30" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#pts-where&quot;&gt;Where can they occur?&lt;/a&gt; for using partial type signatures in quotations.</source>
          <target state="translated">请参阅&lt;a href=&quot;#pts-where&quot;&gt;它们在哪里发生？&lt;/a&gt;用于在引号中使用部分类型签名。</target>
        </trans-unit>
        <trans-unit id="218c2cf2c21ad2b7f56bfd38658bd4e72f80809c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#recursive-and-polymorphic-let-bindings&quot;&gt;Semantics of let bindings with bang patterns&lt;/a&gt; for the detailed semantics.</source>
          <target state="translated">有关详细&lt;a href=&quot;#recursive-and-polymorphic-let-bindings&quot;&gt;语义，&lt;/a&gt;请参见具有爆炸模式的let绑定的语义。</target>
        </trans-unit>
        <trans-unit id="b1f2d904d5a6d15342e041470413d0dbc8b15aad" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#t:IsStatic&quot;&gt;GHC.StaticPtr.IsStatic&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#t:IsStatic&quot;&gt;GHC.StaticPtr.IsStatic&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="544ebcc273d4071b5a34688d769bf8ffe59ed9d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../libraries/base-4.14.1.0/ghc-staticptr#t:IsStatic&quot;&gt;GHC.StaticPtr.IsStatic&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b103cec5a426d82d1f0f3b305273d3fc5fa5b795" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;data-map-merge-lazy&quot;&gt;Data.Map.Merge.Lazy&lt;/a&gt;</source>
          <target state="translated">请参见&lt;a href=&quot;data-map-merge-lazy&quot;&gt;Data.Map.Merge.Lazy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="348d6eee6a1b58b191ea3c36bfa6ce95e893a2a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;data-map-merge-strict&quot;&gt;Data.Map.Merge.Strict&lt;/a&gt;</source>
          <target state="translated">请参见&lt;a href=&quot;data-map-merge-strict&quot;&gt;Data.Map.Merge.Strict&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e15ea175220d64e983de65280b7e415868056c4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://i.cs.hku.hk/~bruno//papers/hs2017.pdf&quot;&gt;the paper&lt;/a&gt;.</source>
          <target state="translated">见&lt;a href=&quot;http://i.cs.hku.hk/~bruno//papers/hs2017.pdf&quot;&gt;论文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc16f292766496887e78f66d0c501279f8608f5d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.w3.org/TR/xhtml1/&quot;&gt;http://www.w3.org/TR/xhtml1/&lt;/a&gt; for more information about XHTML 1.0.</source>
          <target state="translated">有关XHTML 1.0的更多信息，请参见&lt;a href=&quot;http://www.w3.org/TR/xhtml1/&quot;&gt;http://www.w3.org/TR/xhtml1/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="886ede7df1936e301a64ca1c3c96b46bc86dffec" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/14733#comment:6&quot;&gt;Iceland Jack&amp;rsquo;s summary&lt;/a&gt;. The key point is that the bit to the right of the &lt;code&gt;=&amp;gt;&lt;/code&gt; may be headed by a type &lt;em&gt;variable&lt;/em&gt; (&lt;code&gt;c&lt;/code&gt; in this case), rather than a class. It should not be one of the forall&amp;rsquo;d variables, though.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/14733#comment:6&quot;&gt;冰岛杰克的摘要&lt;/a&gt;。关键是 &lt;code&gt;=&amp;gt;&lt;/code&gt; 右边的位可以由类型&lt;em&gt;变量&lt;/em&gt;（在这种情况下为 &lt;code&gt;c&lt;/code&gt; ）而不是类作为标题。但是，它不应该是永远的变量之一。</target>
        </trans-unit>
        <trans-unit id="064de84f526dbd16cfbd26e503de3f36c8f29b17" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/5122&quot;&gt;https://ghc.haskell.org/trac/ghc/ticket/5122&lt;/a&gt; for the origin of the code in this module</source>
          <target state="translated">有关此模块中代码的来源，请参见&lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/5122&quot;&gt;https://ghc.haskell.org/trac/ghc/ticket/5122&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3dfa61c2f8834364556f8f505e7b22705febb183" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/haskell/parsec/issues/8&quot;&gt;haskell/parsec#8&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://github.com/haskell/parsec/issues/8&quot;&gt;haskell / parsec＃8&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b7dea437e1272d98dced7d4deb845f55f338ee5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14733#note_148352&quot;&gt;Iceland Jack&amp;rsquo;s summary&lt;/a&gt;. The key point is that the bit to the right of the &lt;code&gt;=&amp;gt;&lt;/code&gt; may be headed by a type &lt;em&gt;variable&lt;/em&gt; (&lt;code&gt;c&lt;/code&gt; in this case), rather than a class. It should not be one of the forall&amp;rsquo;d variables, though.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a383eedfab30ff8810ffd0f9f2d1fca298054ee6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail&quot;&gt;https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail&quot;&gt;https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f192387dd8900b1428692526b4d54bc13b90c2d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;language-haskell-th-syntax#infix&quot;&gt;Language.Haskell.TH.Syntax&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;language-haskell-th-syntax#infix&quot;&gt;Language.Haskell.TH。语法&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b803be622c53ea782de38773c465e88dde41c7c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using#modes&quot;&gt;Modes of operation&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;using#modes&quot;&gt;操作模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7290dc1cd6ef3fed1927cdff57ec8e269bc0cfa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using-concurrent#parallel-compile-options&quot;&gt;Compile-time options for SMP parallelism&lt;/a&gt; for a dicussion on its use.</source>
          <target state="translated">有关&lt;a href=&quot;using-concurrent#parallel-compile-options&quot;&gt;使用SMP的&lt;/a&gt;更多信息，请参见SMP并行性的编译时选项。</target>
        </trans-unit>
        <trans-unit id="acfe4e766c9030345d7f21a1a81009297543750f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;win32-dlls#ghci-windows&quot;&gt;Running GHCi on Windows&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;win32-dlls#ghci-windows&quot;&gt;在Windows上运行GHCi&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e77258de6e014646d7bc2c75986128d049b87e77" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">参见 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2f8183c6b8895104deecc469e863d26d53cf0cd" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0b4883c065a32c435126c490a4b2f54ad1869c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; for the generic deriving.</source>
          <target state="translated">有关通用派生，请参见 &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7dc5167b59211f4555235a766237a08a49479f4c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldForest&quot;&gt;unfoldForest&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldForest&quot;&gt;unfoldForest&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80b7b6980434ec4f61f63b797ab275b23f9c9ecc" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldTree&quot;&gt;unfoldTree&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldTree&quot;&gt;unfoldTree&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92bc38145e2678558bfb1ad312ab956bbb332712" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">参见 &lt;code&gt;&lt;a href=&quot;system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28714bc9affad760d31bd7893e6648731274081e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;system-process#v:RawCommand&quot;&gt;RawCommand&lt;/a&gt;&lt;/code&gt; for precise semantics of the specified &lt;code&gt;FilePath&lt;/code&gt;.</source>
          <target state="translated">有关指定 &lt;code&gt;FilePath&lt;/code&gt; 的精确语义，请参见 &lt;code&gt;&lt;a href=&quot;system-process#v:RawCommand&quot;&gt;RawCommand&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bc669e6ecb3d6e0ab576ee91eccc170d9e50b8d" translate="yes" xml:space="preserve">
          <source>See GHC.Classes#matching_overloaded_methods_in_rules</source>
          <target state="translated">参见GHC.Classes#matching_overloaded_methods_in_rules。</target>
        </trans-unit>
        <trans-unit id="e326365b0584b5b9b467460d9f7981dd7976cce5" translate="yes" xml:space="preserve">
          <source>See Microsoft documentation for details, but a module definition file simply lists what entry points you want to export. Here&amp;rsquo;s one that&amp;rsquo;s suitable when building a Haskell COM server DLL:</source>
          <target state="translated">有关详细信息，请参见Microsoft文档，但是模块定义文件仅列出您要导出的入口点。这是构建Haskell COM服务器DLL时合适的一个：</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="792a116eabc7383cf8c24e606c9b84b1fb2c92cf" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#actions-at-prompt&quot;&gt;I/O actions at the prompt&lt;/a&gt; for how the monad of a computational expression defaults to &lt;code&gt;IO&lt;/code&gt; if possible.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#actions-at-prompt&quot;&gt;提示符下的I / O操作，&lt;/a&gt;以了解计算表达式的单子如何默认设置为 &lt;code&gt;IO&lt;/code&gt; (如果可能）。</target>
        </trans-unit>
        <trans-unit id="f990b2ac161fedd9eed5b94eec33c55861665921" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ghc-flag--Wmissing-monadfail-instances&quot;&gt;&lt;code&gt;-Wmissing-monadfail-instances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#ghc-flag--Wmissing-monadfail-instances&quot;&gt; &lt;code&gt;-Wmissing-monadfail-instances&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb98b6ede0fc9c98fa19f5ce8b4b776f013fd76b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ghc-flag--Wnoncanonical-monadfail-instances&quot;&gt;&lt;code&gt;-Wnoncanonical-monadfail-instances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#ghc-flag--Wnoncanonical-monadfail-instances&quot;&gt; &lt;code&gt;-Wnoncanonical-monadfail-instances&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47244a3231a9351f80a23391592cdd1f003ae73b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ghc-flag--pgmwindres%20%E2%9F%A8cmd%E2%9F%A9&quot;&gt;&lt;code&gt;-pgmwindres ⟨cmd⟩&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;#replacing-phases&quot;&gt;Replacing the program for one or more phases&lt;/a&gt;) and &lt;a href=&quot;#ghc-flag--optwindres%20%E2%9F%A8option%E2%9F%A9&quot;&gt;&lt;code&gt;-optwindres ⟨option⟩&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;#forcing-options-through&quot;&gt;Forcing options to a particular phase&lt;/a&gt;).</source>
          <target state="translated">另请参见&lt;a href=&quot;#ghc-flag--pgmwindres%20%E2%9F%A8cmd%E2%9F%A9&quot;&gt; &lt;code&gt;-pgmwindres ⟨cmd⟩&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;#replacing-phases&quot;&gt;将程序替换为一个或多个阶段&lt;/a&gt;）和&lt;a href=&quot;#ghc-flag--optwindres%20%E2%9F%A8option%E2%9F%A9&quot;&gt; &lt;code&gt;-optwindres ⟨option⟩&lt;/code&gt; &lt;/a&gt;（将&lt;a href=&quot;#forcing-options-through&quot;&gt;选项强制到特定阶段&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4647e38c1e7a6b944c94b406914cbd3600fe74e6" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#instance-overlap&quot;&gt;Overlapping instances&lt;/a&gt; for flags that loosen the instance resolution rules.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#instance-overlap&quot;&gt;重叠实例&lt;/a&gt;以获取松散实例解析规则的标志。</target>
        </trans-unit>
        <trans-unit id="68bec63d7198462a9a405bc8b9bfd8eea044f5f1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Commentary/Libraries/Integer&quot;&gt;GHC Commentary: Libraries/Integer&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Commentary/Libraries/Integer&quot;&gt;GHC评论：库/整数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="351782363a8c5ac7d4713a5632c30ddf80b39ea2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/7347&quot;&gt;#7347&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae01c432460f8f4807fff5321397d8daf2f6631" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/7347&quot;&gt;Issue #7347&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/7347&quot;&gt;问题＃7347&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c593dec67f89b0b8a48390421d4674b799715947" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;data-bits#v:zeroBits&quot;&gt;zeroBits&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;data-bits#v:zeroBits&quot;&gt;zeroBits&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b246c35f93a333d56b43a521850d9d5706bc6244" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;data-containers-listutils#v:nubIntOn&quot;&gt;nubIntOn&lt;/a&gt;&lt;/code&gt;, a more widely applicable generalization.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;data-containers-listutils#v:nubIntOn&quot;&gt;nubIntOn&lt;/a&gt;&lt;/code&gt; ，这是一种更广泛适用的概括。</target>
        </trans-unit>
        <trans-unit id="8a7eaa326d349e30843aed13689b8e2af5c152c9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; for a useful combinator. The above example could be rewritten using &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; as</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; 以获取有用的组合器。上面的示例可以使用 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; 重写为</target>
        </trans-unit>
        <trans-unit id="77cc8e5b2ed282e5f51037345f1dc397c5c3b6fd" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#instance-overlap&quot;&gt;rules on overlap&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#instance-overlap&quot;&gt;重叠规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00aebdaeda9ba50a4cf396d83d221ba0f9b164bf" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;http://hackage.haskell.org/package/parser-combinators&quot;&gt;parser-combinators&lt;/a&gt; package for additional (and generalised) combinators.</source>
          <target state="translated">另请参阅&lt;a href=&quot;http://hackage.haskell.org/package/parser-combinators&quot;&gt;解析器组合&lt;/a&gt;程序包，以获取其他（广义）组合器。</target>
        </trans-unit>
        <trans-unit id="18439f44eba3153bdbcb728626e4cc51ef2aa2ef" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;using-optimisation#ghc-flag--funbox-strict-fields&quot;&gt;&lt;code&gt;-funbox-strict-fields&lt;/code&gt;&lt;/a&gt; flag, which essentially has the effect of adding &lt;code&gt;{-# UNPACK #-}&lt;/code&gt; to every strict constructor field.</source>
          <target state="translated">另请参见&lt;a href=&quot;using-optimisation#ghc-flag--funbox-strict-fields&quot;&gt; &lt;code&gt;-funbox-strict-fields&lt;/code&gt; &lt;/a&gt;标志，该标志实际上具有将 &lt;code&gt;{-# UNPACK #-}&lt;/code&gt; 到每个严格构造函数字段的作用。</target>
        </trans-unit>
        <trans-unit id="a605b8449779131636ca56735634d351dade9873" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--help&lt;/code&gt;, &lt;code&gt;--version&lt;/code&gt;, &lt;code&gt;--numeric-version&lt;/code&gt;, and &lt;code&gt;--print-libdir&lt;/code&gt; modes in &lt;a href=&quot;#modes&quot;&gt;Modes of operation&lt;/a&gt;.</source>
          <target state="translated">又见 &lt;code&gt;--help&lt;/code&gt; ， &lt;code&gt;--version&lt;/code&gt; ， &lt;code&gt;--numeric-version&lt;/code&gt; ，和 &lt;code&gt;--print-libdir&lt;/code&gt; 在模式&lt;a href=&quot;#modes&quot;&gt;的操作模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f495a5d4ad082f7878b188b1d38f1a6c34c873d" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;-pgmi ⟨cmd⟩&lt;/code&gt; (&lt;a href=&quot;phases#replacing-phases&quot;&gt;Replacing the program for one or more phases&lt;/a&gt;) and &lt;code&gt;-opti ⟨option⟩&lt;/code&gt; (&lt;a href=&quot;phases#forcing-options-through&quot;&gt;Forcing options to a particular phase&lt;/a&gt;) flags.</source>
          <target state="translated">另请参见 &lt;code&gt;-pgmi ⟨cmd⟩&lt;/code&gt; （&lt;a href=&quot;phases#replacing-phases&quot;&gt;将程序替换为一个或多个阶段&lt;/a&gt;）和 &lt;code&gt;-opti ⟨option⟩&lt;/code&gt; （将&lt;a href=&quot;phases#forcing-options-through&quot;&gt;选项强制到特定阶段&lt;/a&gt;）标志。</target>
        </trans-unit>
        <trans-unit id="cdc687b8f290f0c9f5f26bece9cee4f8c5c711e9" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;NOINLINE&lt;/code&gt; (&lt;a href=&quot;#noinline-pragma&quot;&gt;NOINLINE pragma&lt;/a&gt;) and &lt;code&gt;INLINABLE&lt;/code&gt; (&lt;a href=&quot;#inlinable-pragma&quot;&gt;INLINABLE pragma&lt;/a&gt;) pragmas.</source>
          <target state="translated">另请参见 &lt;code&gt;NOINLINE&lt;/code&gt; （&lt;a href=&quot;#noinline-pragma&quot;&gt;NOINLINE pragma&lt;/a&gt;）和 &lt;code&gt;INLINABLE&lt;/code&gt; （&lt;a href=&quot;#inlinable-pragma&quot;&gt;INLINABLE pragma&lt;/a&gt;）编译指示。</target>
        </trans-unit>
        <trans-unit id="d5bd3e029bdf78a3efc7994aa97cf299f92ddbb3" translate="yes" xml:space="preserve">
          <source>See also the function &lt;code&gt;traceStack&lt;/code&gt; in the module &lt;code&gt;Debug.Trace&lt;/code&gt; for another way to view call stacks.</source>
          <target state="translated">另请参阅模块 &lt;code&gt;Debug.Trace&lt;/code&gt; 中的函数 &lt;code&gt;traceStack&lt;/code&gt; ，以查看调用堆栈的另一种方法。</target>
        </trans-unit>
        <trans-unit id="cb6db37620dbcc1339dd7c9ee105029b4650573c" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-utils#v:maybePeek&quot;&gt;maybePeek&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">另请参见： &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-utils#v:maybePeek&quot;&gt;maybePeek&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="8b3b279d8e2b97e201733853f5f17667d054456c" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-utils#v:maybeWith&quot;&gt;maybeWith&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">另请参阅： &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-utils#v:maybeWith&quot;&gt;maybeWith&lt;/a&gt;&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="9d2371d388d228011e90799af207212df8e7540d" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-marshal-utils#v:maybePeek&quot;&gt;maybePeek&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7254155fcdbc15e25c816d055a1da93b5da0ad67" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-marshal-utils#v:maybeWith&quot;&gt;maybeWith&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b443ed246b867336cd161ca8d820cc0d6bc9bc" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;system-directory#v:removeFile&quot;&gt;removeFile&lt;/a&gt;&lt;/code&gt;, which can remove an existing &lt;em&gt;file&lt;/em&gt; symbolic link.</source>
          <target state="translated">另请参阅： &lt;code&gt;&lt;a href=&quot;system-directory#v:removeFile&quot;&gt;removeFile&lt;/a&gt;&lt;/code&gt; ，它可以删除现有的&lt;em&gt;文件&lt;/em&gt;符号链接。</target>
        </trans-unit>
        <trans-unit id="69335fcf6cfea5a3406385f338964fc25094e818" translate="yes" xml:space="preserve">
          <source>See description of &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:exportIntegerToMutableByteArray&quot;&gt;exportIntegerToMutableByteArray&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:exportIntegerToMutableByteArray&quot;&gt;exportIntegerToMutableByteArray&lt;/a&gt;&lt;/code&gt; 的描述。</target>
        </trans-unit>
        <trans-unit id="054a62d1694599bebea7a0ec77ba51ad0757eb80" translate="yes" xml:space="preserve">
          <source>See description of &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:importIntegerFromByteArray&quot;&gt;importIntegerFromByteArray&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:importIntegerFromByteArray&quot;&gt;importIntegerFromByteArray&lt;/a&gt;&lt;/code&gt; 的描述。</target>
        </trans-unit>
        <trans-unit id="abb414eb9521a6f2ecf3bd6ec8247dec4954debc" translate="yes" xml:space="preserve">
          <source>See examples in &lt;a href=&quot;control-monad-reader&quot;&gt;Control.Monad.Reader&lt;/a&gt;. Note, the partially applied function type &lt;code&gt;(-&amp;gt;) r&lt;/code&gt; is a simple reader monad. See the &lt;code&gt;instance&lt;/code&gt; declaration below.</source>
          <target state="translated">请参见&lt;a href=&quot;control-monad-reader&quot;&gt;Control.Monad.Reader中的&lt;/a&gt;示例。注意，部分应用的函数类型 &lt;code&gt;(-&amp;gt;) r&lt;/code&gt; 是一个简单的阅读器monad。请参阅下面的 &lt;code&gt;instance&lt;/code&gt; 声明。</target>
        </trans-unit>
        <trans-unit id="9639b57ad9c93125c26e7276738fa7285d5924f0" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms&quot;&gt;Wiki page&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms&quot;&gt;Wiki页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ce8c8e6374d9bf56b2187c6495df5d99fdb1bdb" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/pattern-synonyms&quot;&gt;Wiki page&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d756583aed3555a5a65eb4cd9d152d5b8bc07cc4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247.aspx&quot;&gt;Windows documentation&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247.aspx&quot;&gt;Windows文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9368a6baa608e351b34f0f4bb3e3b50caa6b7ad" translate="yes" xml:space="preserve">
          <source>See the GHC user's guide for more information on pattern synonyms and their types: &lt;a href=&quot;https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pattern-synonyms&quot;&gt;https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pattern-synonyms&lt;/a&gt;.</source>
          <target state="translated">有关模式同义词及其类型的更多信息，请参见GHC用户指南：&lt;a href=&quot;https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pattern-synonyms&quot;&gt;https&lt;/a&gt; : //downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pattern-synonyms。</target>
        </trans-unit>
        <trans-unit id="686cb337448a33c7768588af6b116f588bb1690b" translate="yes" xml:space="preserve">
          <source>See the note about efficiency at &lt;code&gt;&lt;a href=&quot;data-sequence#v:unzipWith&quot;&gt;unzipWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">请参阅 &lt;code&gt;&lt;a href=&quot;data-sequence#v:unzipWith&quot;&gt;unzipWith&lt;/a&gt;&lt;/code&gt; 有关效率的说明。</target>
        </trans-unit>
        <trans-unit id="497dea2253a9763272c1d3ca91776ece14a847f1" translate="yes" xml:space="preserve">
          <source>See:</source>
          <target state="translated">See:</target>
        </trans-unit>
        <trans-unit id="d21835f29f64932ec50984ab5a7348670e80bfa2" translate="yes" xml:space="preserve">
          <source>SeekFromEnd</source>
          <target state="translated">SeekFromEnd</target>
        </trans-unit>
        <trans-unit id="c3b12b56a9fcafcaa59c660bef173a584ff8d094" translate="yes" xml:space="preserve">
          <source>SeekMode</source>
          <target state="translated">SeekMode</target>
        </trans-unit>
        <trans-unit id="08f7bb09909c995355ec3ded63e7d52066ec605d" translate="yes" xml:space="preserve">
          <source>Seeking</source>
          <target state="translated">Seeking</target>
        </trans-unit>
        <trans-unit id="191e7912fbdc95ca4ac43e8850c406317d9b8a3b" translate="yes" xml:space="preserve">
          <source>Segments in this sense are related to &lt;em&gt;strongly-connected components&lt;/em&gt; analysis, with the exception that bindings in a segment cannot be reordered and must be contiguous.</source>
          <target state="translated">从这个意义上讲，段与&lt;em&gt;强连接的组件&lt;/em&gt;分析有关，但段中的绑定不能重新排序，并且必须是连续的。</target>
        </trans-unit>
        <trans-unit id="8598222918d3c6e513d63060cf55e2971ded729a" translate="yes" xml:space="preserve">
          <source>Select</source>
          <target state="translated">Select</target>
        </trans-unit>
        <trans-unit id="9ceed8562d4a3b2f05d5c2a988f33289c14848dd" translate="yes" xml:space="preserve">
          <source>Select binary mode (&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;) or text mode (&lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;) on a open handle. (See also &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">在打开的句柄上选择二进制模式（ &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ）或文本模式（ &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ）。（另请参见 &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="53acb5d741db274cf9b515c4a37f2572d3437616" translate="yes" xml:space="preserve">
          <source>Select binary mode (&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;) or text mode (&lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;) on a open handle. (See also &lt;code&gt;&lt;a href=&quot;system-io#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">在打开的句柄上选择二进制模式（ &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ）或文本模式（ &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ）。（另请参见 &lt;code&gt;&lt;a href=&quot;system-io#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="c6563b60a85f0dd6dabcd9fbc69c9585048457c9" translate="yes" xml:space="preserve">
          <source>Select the function to use for printing evaluated expressions in GHCi</source>
          <target state="translated">选择在GHCi中打印计算过的表达式的函数。</target>
        </trans-unit>
        <trans-unit id="533e53a4ab3af0eff06d0968b1f9088632ec4912" translate="yes" xml:space="preserve">
          <source>SelectT</source>
          <target state="translated">SelectT</target>
        </trans-unit>
        <trans-unit id="3d6d281a753285e78d85aed3cd7b15d753ca8438" translate="yes" xml:space="preserve">
          <source>Selection monad transformer, modelling search algorithms.</source>
          <target state="translated">选择单体变换,建模搜索算法。</target>
        </trans-unit>
        <trans-unit id="e2fdfe0ef20a653e062f7f1ccf475abbd234ff40" translate="yes" xml:space="preserve">
          <source>Selection monad transformer.</source>
          <target state="translated">选择单体变压器。</target>
        </trans-unit>
        <trans-unit id="43b0c2cc2f6ddf409049775ebfb86327940fecd3" translate="yes" xml:space="preserve">
          <source>Selection monad.</source>
          <target state="translated">选择一元化。</target>
        </trans-unit>
        <trans-unit id="b240d04328a96aac53d166b5299cca81675589d4" translate="yes" xml:space="preserve">
          <source>Selector</source>
          <target state="translated">Selector</target>
        </trans-unit>
        <trans-unit id="a1991427effecf62e13936bf676a6fbfc4333be9" translate="yes" xml:space="preserve">
          <source>Selector function to extract the field from the record.</source>
          <target state="translated">从记录中提取字段的选择器功能。</target>
        </trans-unit>
        <trans-unit id="78bdbb0db01f35bd6a638a54894b23a56fff7305" translate="yes" xml:space="preserve">
          <source>Selects ASCII digits, i.e. &lt;code&gt;'0'&lt;/code&gt;..&lt;code&gt;'9'&lt;/code&gt;.</source>
          <target state="translated">选择ASCII数字，即 &lt;code&gt;'0'&lt;/code&gt; .. &lt;code&gt;'9'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3b7e6e3d385a486c8480045875a98e2d81e2088" translate="yes" xml:space="preserve">
          <source>Selects ASCII hexadecimal digits, i.e. &lt;code&gt;'0'&lt;/code&gt;..&lt;code&gt;'9'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt;..&lt;code&gt;'f'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;..&lt;code&gt;'F'&lt;/code&gt;.</source>
          <target state="translated">选择ASCII十六进制数字，即 &lt;code&gt;'0'&lt;/code&gt; .. &lt;code&gt;'9'&lt;/code&gt; ， &lt;code&gt;'a'&lt;/code&gt; .. &lt;code&gt;'f'&lt;/code&gt; ， &lt;code&gt;'A'&lt;/code&gt; .. &lt;code&gt;'F'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f19f72dddfd78fe0e7633807c00077ccf746375" translate="yes" xml:space="preserve">
          <source>Selects ASCII lower-case letters, i.e. characters satisfying both &lt;code&gt;&lt;a href=&quot;data-char#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择ASCII小写字母，即同时满足 &lt;code&gt;&lt;a href=&quot;data-char#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="f3bdb7623d79b25c9608fb58d82339cdd31e7ac2" translate="yes" xml:space="preserve">
          <source>Selects ASCII lower-case letters, i.e. characters satisfying both &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择ASCII小写字母，即同时满足 &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="addb8a785afa33a3dd84101eedebd7a5fd002260" translate="yes" xml:space="preserve">
          <source>Selects ASCII octal digits, i.e. &lt;code&gt;'0'&lt;/code&gt;..&lt;code&gt;'7'&lt;/code&gt;.</source>
          <target state="translated">选择ASCII八进制数字，即 &lt;code&gt;'0'&lt;/code&gt; .. &lt;code&gt;'7'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6733d15ea36ff652cead4012951bc3d30ea249a9" translate="yes" xml:space="preserve">
          <source>Selects ASCII upper-case letters, i.e. characters satisfying both &lt;code&gt;&lt;a href=&quot;data-char#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择ASCII大写字母，即同时满足 &lt;code&gt;&lt;a href=&quot;data-char#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="f609e16b1b7b0dad162a1675e8998ff584c4afb8" translate="yes" xml:space="preserve">
          <source>Selects ASCII upper-case letters, i.e. characters satisfying both &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择ASCII大写字母，即同时满足 &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="afdcb493cc7140df5adae23c341088f5f626690a" translate="yes" xml:space="preserve">
          <source>Selects Unicode mark characters, for example accents and the like, which combine with preceding characters.</source>
          <target state="translated">选择与前面的字符结合的Unicode标记字符,例如重音等。</target>
        </trans-unit>
        <trans-unit id="d6394f6fcb1e6b142711f2b4df0a823312644330" translate="yes" xml:space="preserve">
          <source>Selects Unicode numeric characters, including digits from various scripts, Roman numerals, et cetera.</source>
          <target state="translated">选择Unicode数字字符,包括各种字体的数字、罗马数字等。</target>
        </trans-unit>
        <trans-unit id="046d34ca61ae5a8dfe5cd59eb8542df48781a43d" translate="yes" xml:space="preserve">
          <source>Selects Unicode punctuation characters, including various kinds of connectors, brackets and quotes.</source>
          <target state="translated">选择Unicode标点符号,包括各种连接符、括号和引号。</target>
        </trans-unit>
        <trans-unit id="ce1c4e328d65bbec99383ebc3fe1314029706e58" translate="yes" xml:space="preserve">
          <source>Selects Unicode space and separator characters.</source>
          <target state="translated">选择Unicode空格和分隔符。</target>
        </trans-unit>
        <trans-unit id="4a10c50227b040198186e71354e5bc14a9c8c74d" translate="yes" xml:space="preserve">
          <source>Selects Unicode symbol characters, including mathematical and currency symbols.</source>
          <target state="translated">选择Unicode符号字符,包括数学和货币符号。</target>
        </trans-unit>
        <trans-unit id="00adbe1aaee25e403afbd1494b4398cf0260b08d" translate="yes" xml:space="preserve">
          <source>Selects alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters). This function is equivalent to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择字母Unicode字符（小写，大写和标题大写字母，以及无大小写的脚本字母和修饰符字母）。此功能等效于 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a96ef63922e017b107eb4ab6fd870bd71d35e740" translate="yes" xml:space="preserve">
          <source>Selects alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters). This function is equivalent to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf31a0e79f23f03e2354953120c3bf230be608c" translate="yes" xml:space="preserve">
          <source>Selects alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters). This function is equivalent to &lt;code&gt;&lt;a href=&quot;data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择字母Unicode字符（小写，大写和标题大写字母，以及无大小写的脚本字母和修饰符字母）。此功能等效于 &lt;code&gt;&lt;a href=&quot;data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76a07761b0c7360d09184f968f819a0589585073" translate="yes" xml:space="preserve">
          <source>Selects alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters). This function is equivalent to &lt;code&gt;&lt;a href=&quot;data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择字母Unicode字符（小写，大写和标题大写字母，以及无大小写的脚本字母和修饰符字母）。此功能等效于 &lt;code&gt;&lt;a href=&quot;data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfc14a1636219a13c955b8047638b74c65b5ac69" translate="yes" xml:space="preserve">
          <source>Selects alphabetic or numeric Unicode characters.</source>
          <target state="translated">选择字母或数字Unicode字符。</target>
        </trans-unit>
        <trans-unit id="465acfc244e1a3462f43074af569ba71dbdf8eff" translate="yes" xml:space="preserve">
          <source>Selects control characters, which are the non-printing characters of the Latin-1 subset of Unicode.</source>
          <target state="translated">选择控制字符,即Unicode的Latin-1子集的非打印字符。</target>
        </trans-unit>
        <trans-unit id="0f520a55599d6009f6b5a8111528d07771d2fe96" translate="yes" xml:space="preserve">
          <source>Selects lower-case alphabetic Unicode characters (letters).</source>
          <target state="translated">选择小写字母Unicode字符(字母)。</target>
        </trans-unit>
        <trans-unit id="7756c6924d48c99e6a26e45484199ec3fd702299" translate="yes" xml:space="preserve">
          <source>Selects one of a number of modes for finding shared libraries at runtime.</source>
          <target state="translated">在运行时选择多种模式中的一种来寻找共享库。</target>
        </trans-unit>
        <trans-unit id="dd03d64c804b48c585951c561d6b86387cc242a1" translate="yes" xml:space="preserve">
          <source>Selects printable Unicode characters (letters, numbers, marks, punctuation, symbols and spaces).</source>
          <target state="translated">选择可打印的Unicode字符(字母、数字、标记、标点、符号和空格)。</target>
        </trans-unit>
        <trans-unit id="c5b7d37c528ab7c89a2594e4ff45c15799470e68" translate="yes" xml:space="preserve">
          <source>Selects the first 128 characters of the Unicode character set, corresponding to the ASCII character set.</source>
          <target state="translated">选择Unicode字符集的前128个字符,对应ASCII字符集。</target>
        </trans-unit>
        <trans-unit id="60b6ecd74d59bb6b87975edcb21e687e743d61e3" translate="yes" xml:space="preserve">
          <source>Selects the first 256 characters of the Unicode character set, corresponding to the ISO 8859-1 (Latin-1) character set.</source>
          <target state="translated">选择Unicode字符集的前256个字符,对应ISO 8859-1(Latin-1)字符集。</target>
        </trans-unit>
        <trans-unit id="e8ff50373d2be449d4352b13491627d479a80472" translate="yes" xml:space="preserve">
          <source>Selects upper-case or title-case alphabetic Unicode characters (letters). Title case is used by a small number of letter ligatures like the single-character form of &lt;em&gt;Lj&lt;/em&gt;.</source>
          <target state="translated">选择大写或标题大写的Unicode字符（字母）。标题大小写由少量字母连字使用，例如&lt;em&gt;Lj&lt;/em&gt;的单字符形式。</target>
        </trans-unit>
        <trans-unit id="61b98f1a0a08ab6480df5416102a5a731ccaae63" translate="yes" xml:space="preserve">
          <source>Selects white-space characters in the Latin-1 range</source>
          <target state="translated">选择Latin-1范围内的空白字符。</target>
        </trans-unit>
        <trans-unit id="ab68f6b2f89d019ad5adf0e1f341ed5d51e13b1b" translate="yes" xml:space="preserve">
          <source>Selects words corresponding to white-space characters in the Latin-1 range ordered by frequency.</source>
          <target state="translated">选择按频率排序的Latin-1范围内的空白字符对应的单词。</target>
        </trans-unit>
        <trans-unit id="9cb881ab1cd188ae66aa99c3dc8228baeb938bc3" translate="yes" xml:space="preserve">
          <source>Semaphore</source>
          <target state="translated">Semaphore</target>
        </trans-unit>
        <trans-unit id="80603f4ab5e8b245111bd9242e8a03cb1c042219" translate="yes" xml:space="preserve">
          <source>SemiClosedHandle</source>
          <target state="translated">SemiClosedHandle</target>
        </trans-unit>
        <trans-unit id="a7606fabb901db270a3a5b79254909611ffd627b" translate="yes" xml:space="preserve">
          <source>Semigroup</source>
          <target state="translated">Semigroup</target>
        </trans-unit>
        <trans-unit id="ef263c15e407f90a41b0a8c2dd9d910e87631aeb" translate="yes" xml:space="preserve">
          <source>Semigroups</source>
          <target state="translated">Semigroups</target>
        </trans-unit>
        <trans-unit id="80519dd6a843976af96095c2977d511895377e4e" translate="yes" xml:space="preserve">
          <source>Semigroups and Monoids</source>
          <target state="translated">半目和单目</target>
        </trans-unit>
        <trans-unit id="83cdcbcc428cdc3fd53584aa033fba0b223ba7f5" translate="yes" xml:space="preserve">
          <source>Send the first component of the input through the argument arrow, and copy the rest unchanged to the output.</source>
          <target state="translated">通过参数箭头发送输入的第一个分量,其余部分不变地复制到输出。</target>
        </trans-unit>
        <trans-unit id="3af5eab8c1c4368fcdd626600364204a74e3ae44" translate="yes" xml:space="preserve">
          <source>Sending signals</source>
          <target state="translated">发送信号</target>
        </trans-unit>
        <trans-unit id="e0ec931e78437a9bab75ec98f19a51071a6782d9" translate="yes" xml:space="preserve">
          <source>Sends an interrupt signal to the process group of the given process.</source>
          <target state="translated">向给定进程的进程组发送中断信号。</target>
        </trans-unit>
        <trans-unit id="f7f3f1da303067b2797bd4e61532ea8f79fde2cc" translate="yes" xml:space="preserve">
          <source>Separator predicates</source>
          <target state="translated">分隔符谓词</target>
        </trans-unit>
        <trans-unit id="fa328f49b32e6dbe61c90ab9a659303e1d388d15" translate="yes" xml:space="preserve">
          <source>Seq</source>
          <target state="translated">Seq</target>
        </trans-unit>
        <trans-unit id="1ed99d1021ac12934f5a0ea0644a9df0bb383640" translate="yes" xml:space="preserve">
          <source>Sequence actions, discarding the value of the first argument.</source>
          <target state="translated">序列动作,丢弃第一个参数的值。</target>
        </trans-unit>
        <trans-unit id="e3de6221f2c2fce3b329fbb42e1fb8e511f5e9e0" translate="yes" xml:space="preserve">
          <source>Sequence actions, discarding the value of the second argument.</source>
          <target state="translated">序列动作,丢弃第二个参数的值。</target>
        </trans-unit>
        <trans-unit id="1552c16c6f8c19183500f6789356943755236c93" translate="yes" xml:space="preserve">
          <source>Sequences all the actions in a structure, building a new structure with the same shape using the results of the actions. For a version that ignores the results, see &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bisequence_&quot;&gt;bisequence_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">对结构中的所有动作进行排序，使用动作的结果构建具有相同形状的新结构。有关忽略结果的版本，请参见 &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bisequence_&quot;&gt;bisequence_&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be00770ac3fb3c8ed2118045f75c580016a588d9" translate="yes" xml:space="preserve">
          <source>Sequences generally behave very much like lists.</source>
          <target state="translated">序列的行为一般很像列表。</target>
        </trans-unit>
        <trans-unit id="389f8ea9e3e0ed9529c5ac9773a8c9859e399680" translate="yes" xml:space="preserve">
          <source>Sequences may also be compared to immutable &lt;a href=&quot;https://hackage.haskell.org/package/array&quot;&gt;arrays&lt;/a&gt; or &lt;a href=&quot;https://hackage.haskell.org/package/vector&quot;&gt;vectors&lt;/a&gt;. Like these structures, sequences support fast indexing, although not as fast. But editing an immutable array or vector, or combining it with another, generally requires copying the entire structure; sequences generally avoid that, copying only the portion that has changed.</source>
          <target state="translated">序列也可以与不变&lt;a href=&quot;https://hackage.haskell.org/package/array&quot;&gt;数组&lt;/a&gt;或&lt;a href=&quot;https://hackage.haskell.org/package/vector&quot;&gt;向量&lt;/a&gt;进行比较。像这些结构一样，序列支持快速索引，尽管速度不那么快。但是，编辑不可变的数组或向量，或将其与另一个数组或向量组合，通常需要复制整个结构。序列通常会避免这种情况，只复制已更改的部分。</target>
        </trans-unit>
        <trans-unit id="ddedd12a32633bb1e35ed359ae63bdca7bd52d10" translate="yes" xml:space="preserve">
          <source>Sequences support a wider variety of efficient operations than do lists. Notably, they offer</source>
          <target state="translated">序列支持比do list更广泛的高效操作。值得注意的是,它们提供了</target>
        </trans-unit>
        <trans-unit id="89275bcb3e26634eb9740ec6d09439242c7194a8" translate="yes" xml:space="preserve">
          <source>Sequential application.</source>
          <target state="translated">顺序应用。</target>
        </trans-unit>
        <trans-unit id="238e3ee46b4adde5ae0db52db8c52d7371ab37cc" translate="yes" xml:space="preserve">
          <source>Sequential searches</source>
          <target state="translated">顺序搜索</target>
        </trans-unit>
        <trans-unit id="4eac8d8bd1b81b5be12df86539df26405ff3e4bc" translate="yes" xml:space="preserve">
          <source>Sequentially compose two actions, discarding any value produced by the first, like sequencing operators (such as the semicolon) in imperative languages.</source>
          <target state="translated">按顺序组成两个动作,丢弃第一个动作产生的任何值,就像命令式语言中的排序操作符(如分号)一样。</target>
        </trans-unit>
        <trans-unit id="a2295bbe9882331f9f8b1ec826238cac729e3c32" translate="yes" xml:space="preserve">
          <source>Sequentially compose two actions, passing any value produced by the first as an argument to the second.</source>
          <target state="translated">按顺序组成两个动作,将第一个动作产生的任何值作为参数传递给第二个动作。</target>
        </trans-unit>
        <trans-unit id="75fafb05751081f64a2484050588d619699d9e20" translate="yes" xml:space="preserve">
          <source>SerializableException</source>
          <target state="translated">SerializableException</target>
        </trans-unit>
        <trans-unit id="f7f1997c6cd1aa051279675742272a956e7db628" translate="yes" xml:space="preserve">
          <source>Session</source>
          <target state="translated">Session</target>
        </trans-unit>
        <trans-unit id="e11e37a9253b34ff1c7224447e143fabca1be9fd" translate="yes" xml:space="preserve">
          <source>Sessions</source>
          <target state="translated">Sessions</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="6b3ea658a653e86954be656e000ca590af97c259" translate="yes" xml:space="preserve">
          <source>Set a breakpoint on the specified function or line and column. See &lt;a href=&quot;#setting-breakpoints&quot;&gt;Setting breakpoints&lt;/a&gt;.</source>
          <target state="translated">在指定的函数或行和列上设置一个断点。请参阅&lt;a href=&quot;#setting-breakpoints&quot;&gt;设置断点&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92eaa5df14d7b4342d4c3472a75bac1066b25b14" translate="yes" xml:space="preserve">
          <source>Set a command to be executed when a breakpoint is hit, or a new item in the history is selected. The most common use of &lt;a href=&quot;#ghci-cmd-:set%20stop&quot;&gt;&lt;code&gt;:set stop&lt;/code&gt;&lt;/a&gt; is to display the source code at the current location, e.g. &lt;code&gt;:set stop :list&lt;/code&gt;.</source>
          <target state="translated">设置一个命中断点或在历史记录中选择一个新项目时要执行的命令。&lt;a href=&quot;#ghci-cmd-:set%20stop&quot;&gt; &lt;code&gt;:set stop&lt;/code&gt; &lt;/a&gt;最常见的用法是在当前位置显示源代码，例如 &lt;code&gt;:set stop :list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5598d7c57da0bd198cfe4beaeacb18883914b13" translate="yes" xml:space="preserve">
          <source>Set group ID on execution.</source>
          <target state="translated">执行时设置组ID。</target>
        </trans-unit>
        <trans-unit id="38b2740eea5d30754b321b1f957647cbf10eef28" translate="yes" xml:space="preserve">
          <source>Set handlers of console Ctrl events.</source>
          <target state="translated">设置控制台Ctrl事件的处理程序。</target>
        </trans-unit>
        <trans-unit id="c6849edf0874e35a7f99bd004eccf06f8811bb47" translate="yes" xml:space="preserve">
          <source>Set main module and function</source>
          <target state="translated">设置主模块和功能</target>
        </trans-unit>
        <trans-unit id="df7c45a9c440cc50cf4a96b4f73bdf1c9e3dffa5" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the specified &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. All buffered data is flushed first.</source>
          <target state="translated">在指定的 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 上设置 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; 。首先缓冲所有缓冲的数据。</target>
        </trans-unit>
        <trans-unit id="adcf1477b97e38d4050ce06778e07f2844dda0a9" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the specified &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. All buffered data is flushed first.</source>
          <target state="translated">在指定的 &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 上设置 &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; 。首先缓冲所有缓冲的数据。</target>
        </trans-unit>
        <trans-unit id="ec3b1d845fd2a0839efd12505034aac565fb1ed5" translate="yes" xml:space="preserve">
          <source>Set the HPC &lt;code&gt;.tix&lt;/code&gt; file output path.</source>
          <target state="translated">设置HPC &lt;code&gt;.tix&lt;/code&gt; 文件输出路径。</target>
        </trans-unit>
        <trans-unit id="c3b1100fbcb5c70102dfb3bcb48cd78df26f1a7b" translate="yes" xml:space="preserve">
          <source>Set the allocation area size used by the garbage collector. The allocation area (actually generation 0 step 0) is fixed and is never resized (unless you use &lt;a href=&quot;#rts-flag--H%20%5B%E2%9F%A8size%E2%9F%A9%5D&quot;&gt;&lt;code&gt;-H [⟨size⟩]&lt;/code&gt;&lt;/a&gt;, below).</source>
          <target state="translated">设置垃圾收集器使用的分配区域大小。分配区域（实际上是第0代第0步）是固定的，并且永远不会调整大小（除非您使用下面的&lt;a href=&quot;#rts-flag--H%20%5B%E2%9F%A8size%E2%9F%A9%5D&quot;&gt; &lt;code&gt;-H [⟨size⟩]&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b4de9ea3fbc0c683d350f778336c93e1c0198e16" translate="yes" xml:space="preserve">
          <source>Set the base name.</source>
          <target state="translated">设置基础名称。</target>
        </trans-unit>
        <trans-unit id="c2f2dd85f886cd5f61def475f8048755ecfe9183" translate="yes" xml:space="preserve">
          <source>Set the column number of a source position.</source>
          <target state="translated">设置源位置的列号。</target>
        </trans-unit>
        <trans-unit id="b68583ed6a9e011dbab8bcc63b309be6143a778d" translate="yes" xml:space="preserve">
          <source>Set the default RTS options to ⟨opts⟩.</source>
          <target state="translated">设置默认的RTS选项为⟨opts⟩。</target>
        </trans-unit>
        <trans-unit id="c2acc9c7cfde8a35f523643587479d53c6a2b3b1" translate="yes" xml:space="preserve">
          <source>Set the depth for printing expressions in error msgs</source>
          <target state="translated">设置错误信息中打印表达式的深度。</target>
        </trans-unit>
        <trans-unit id="4d40edafcf71cbe8b907f85415c07a59806caed9" translate="yes" xml:space="preserve">
          <source>Set the directory, keeping the filename the same.</source>
          <target state="translated">设置目录,保持文件名不变。</target>
        </trans-unit>
        <trans-unit id="0f7688bac0b0bbbb282f78d52fac7367accf5419" translate="yes" xml:space="preserve">
          <source>Set the echoing status of a handle connected to a terminal.</source>
          <target state="translated">设置连接到终端的手柄的呼应状态。</target>
        </trans-unit>
        <trans-unit id="bd42a1bfee166e7b293085f2f6e5dc908349a204" translate="yes" xml:space="preserve">
          <source>Set the extension of a file, overwriting one if already present, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">设置文件扩展名，如果已存在，则覆盖该文件扩展名，等效于 &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45b63fada149a85372819a2585bf563905a2657d" translate="yes" xml:space="preserve">
          <source>Set the extension of a file, overwriting one if already present, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">设置文件扩展名，如果已存在，则覆盖该文件扩展名，等效于 &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ad1fc1ee716e1bb760078c3d1f06b25654cdc2d" translate="yes" xml:space="preserve">
          <source>Set the filename.</source>
          <target state="translated">设置文件名。</target>
        </trans-unit>
        <trans-unit id="90b40690754f79e9fcf62ced7a8d41858f549afb" translate="yes" xml:space="preserve">
          <source>Set the function used by GHCi to print evaluation results. Expression must be of type &lt;code&gt;C a =&amp;gt; a -&amp;gt; IO ()&lt;/code&gt;.</source>
          <target state="translated">设置GHCi用于打印评估结果的功能。表达式必须为 &lt;code&gt;C a =&amp;gt; a -&amp;gt; IO ()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb3560177d2aa96dba9e086ae11ef4922fcc790b" translate="yes" xml:space="preserve">
          <source>Set the function used by GHCi to print evaluation results. Given name must be of type &lt;code&gt;C a =&amp;gt; a -&amp;gt; IO ()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309de2db0b79340c9b93043c2bfb3105bca1551e" translate="yes" xml:space="preserve">
          <source>Set the increment for the generated &lt;code&gt;Unique&lt;/code&gt;&amp;lsquo;s to ⟨i⟩.</source>
          <target state="translated">将生成的 &lt;code&gt;Unique&lt;/code&gt; 的增量设置为⟨i⟩。</target>
        </trans-unit>
        <trans-unit id="3c44a6888eb466e5ca0e864954471062da1edc64" translate="yes" xml:space="preserve">
          <source>Set the increment for the generated &lt;code&gt;Unique&lt;/code&gt;&amp;rsquo;s to ⟨i⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10386b74d0839ff7965a7601425bb82c13edc89" translate="yes" xml:space="preserve">
          <source>Set the increment for the generated &lt;code&gt;Unique&lt;/code&gt;'s to ⟨i⟩.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153a6823d609e74f71260ffedc330bb0f1974e42" translate="yes" xml:space="preserve">
          <source>Set the initial stack size for new threads.</source>
          <target state="translated">设置新线程的初始栈大小。</target>
        </trans-unit>
        <trans-unit id="f079f0827adbcd29a1f309fa55de1d4d021c672e" translate="yes" xml:space="preserve">
          <source>Set the install name (via &lt;code&gt;-install_name&lt;/code&gt; passed to Apple&amp;rsquo;s linker), specifying the full install path of the library file. Any libraries or executables that link with it later will pick up that path as their runtime search location for it. (Darwin/OS X only)</source>
          <target state="translated">设置安装名称（通过传递给Apple链接器的 &lt;code&gt;-install_name&lt;/code&gt; ），并指定库文件的完整安装路径。以后与其链接的所有库或可执行文件都将使用该路径作为其运行时搜索位置。（仅适用于Darwin / OS X）</target>
        </trans-unit>
        <trans-unit id="74254bb0267016ebcc16df3066fccdb36aaa93ae" translate="yes" xml:space="preserve">
          <source>Set the install name (via &lt;code&gt;-install_name&lt;/code&gt; passed to Apple's linker), specifying the full install path of the library file. Any libraries or executables that link with it later will pick up that path as their runtime search location for it. (Darwin/OS X only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154d944f5b541b4441cc4626008fba5da50b9508" translate="yes" xml:space="preserve">
          <source>Set the line input history.</source>
          <target state="translated">设置行输入历史。</target>
        </trans-unit>
        <trans-unit id="9642e6627b8a554a8d171d7ea7a1cc7466b2bd29" translate="yes" xml:space="preserve">
          <source>Set the line number of a source position.</source>
          <target state="translated">设置源位置的行号。</target>
        </trans-unit>
        <trans-unit id="7f73c27e7dc3cbc3d482b15751ee8f603c17f752" translate="yes" xml:space="preserve">
          <source>Set the maximum heap size to ⟨size⟩ bytes. The heap normally grows and shrinks according to the memory requirements of the program. The only reason for having this option is to stop the heap growing without bound and filling up all the available swap space, which at the least will result in the program being summarily killed by the operating system.</source>
          <target state="translated">设置最大堆大小为⟨size⟩字节。一般情况下,堆会根据程序对内存的要求进行增长和收缩。有这个选项的唯一原因是为了阻止堆的无约束增长,填满所有可用的交换空间,至少会导致程序被操作系统立即杀死。</target>
        </trans-unit>
        <trans-unit id="67c636527be62639907ed3cd2e046479f5422b13" translate="yes" xml:space="preserve">
          <source>Set the maximum number of specialisations that will be created for any one function by the SpecConstr transformation.</source>
          <target state="translated">设置通过SpecConstr转换为任何一个函数创建的最大专业化数量。</target>
        </trans-unit>
        <trans-unit id="3c3d333729e5d534623f2d0eaba82012fecfe32c" translate="yes" xml:space="preserve">
          <source>Set the maximum size of inline array allocations to n bytes. GHC will allocate non-pinned arrays of statically known size in the current nursery block if they&amp;rsquo;re no bigger than n bytes, ignoring GC overheap. This value should be quite a bit smaller than the block size (typically: 4096).</source>
          <target state="translated">将内联数组分配的最大大小设置为n个字节。如果它们不大于n个字节，则GHC将在当前托儿所块中分配静态固定大小的非固定数组，而忽略GC堆。该值应比块大小小很多（通常：4096）。</target>
        </trans-unit>
        <trans-unit id="df6bf309de0671ddb20082e0e3ee95f06fd0f8ee" translate="yes" xml:space="preserve">
          <source>Set the maximum stack size for an individual thread to ⟨size⟩ bytes. If the thread attempts to exceed this limit, it will be sent the &lt;code&gt;StackOverflow&lt;/code&gt; exception. The limit can be disabled entirely by specifying a size of zero.</source>
          <target state="translated">将单个线程的最大堆栈大小设置为&amp;ldquo; size&amp;rdquo;个字节。如果线程尝试超过此限制，则会向其发送 &lt;code&gt;StackOverflow&lt;/code&gt; 异常。通过指定大小为零，可以完全禁用该限制。</target>
        </trans-unit>
        <trans-unit id="34a28a7a0ff4a3b46cf3855427f3aaf3ef912902" translate="yes" xml:space="preserve">
          <source>Set the minimum size of the heap to ⟨size⟩</source>
          <target state="translated">设置堆的最小大小为⟨size⟩。</target>
        </trans-unit>
        <trans-unit id="c3c689345a8a5e3e1614c388852a7d992055d604" translate="yes" xml:space="preserve">
          <source>Set the minimum size of the heap to ⟨size⟩. This option is equivalent to &lt;code&gt;+RTS -Hsize&lt;/code&gt;, see &lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS options to control the garbage collector&lt;/a&gt;.</source>
          <target state="translated">将堆的最小大小设置为&amp;ldquo;大小&amp;rdquo;。此选项等效于 &lt;code&gt;+RTS -Hsize&lt;/code&gt; ，请参阅&lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS选项以控制垃圾收集器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ccd1e013c9acb626c6617269e9ad4b0a715fee04" translate="yes" xml:space="preserve">
          <source>Set the minimum size of the old generation. The old generation is collected whenever it grows to this size or the value of the &lt;a href=&quot;#rts-flag--F%20%E2%9F%A8factor%E2%9F%A9&quot;&gt;&lt;code&gt;-F ⟨factor⟩&lt;/code&gt;&lt;/a&gt; option multiplied by the size of the live data at the previous major collection, whichever is larger.</source>
          <target state="translated">设置旧一代的最小大小。只要增长到此大小或&lt;a href=&quot;#rts-flag--F%20%E2%9F%A8factor%E2%9F%A9&quot;&gt; &lt;code&gt;-F ⟨factor⟩&lt;/code&gt; &lt;/a&gt;选项的值乘以先前的主要集合中实时数据的大小（以较大者为准），就会收集旧的一代。</target>
        </trans-unit>
        <trans-unit id="d81c121bc14e581e519dbc75d7eda8d3a59f503e" translate="yes" xml:space="preserve">
          <source>Set the name of the source.</source>
          <target state="translated">设置源的名称。</target>
        </trans-unit>
        <trans-unit id="3f2ff124f59a1531283a72f83e200ebc1a76d661" translate="yes" xml:space="preserve">
          <source>Set the new allocation size of the compact. This value (in bytes) determines the size of each block in the compact chain.</source>
          <target state="translated">设置契约的新的分配大小,这个值(以字节为单位)决定了契约链中每个块的大小。这个值(以字节为单位)决定了契约链中每个块的大小。</target>
        </trans-unit>
        <trans-unit id="be84fc95b69c36167451b2aaed77808d4f4d2797" translate="yes" xml:space="preserve">
          <source>Set the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. The number passed to &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is interpreted modulo this value. The initial value is given by the &lt;code&gt;+RTS -N&lt;/code&gt; runtime flag.</source>
          <target state="translated">设置可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。传递给 &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; 的数字将对此值取模。初始值由 &lt;code&gt;+RTS -N&lt;/code&gt; 运行时标志给出。</target>
        </trans-unit>
        <trans-unit id="08ef23c845062be45d68cae8bd4d9e0a89f5300c" translate="yes" xml:space="preserve">
          <source>Set the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. The number passed to &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is interpreted modulo this value. The initial value is given by the &lt;code&gt;+RTS -N&lt;/code&gt; runtime flag.</source>
          <target state="translated">设置可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。传递给 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; 的数字将对此值取模。初始值由 &lt;code&gt;+RTS -N&lt;/code&gt; 运行时标志给出。</target>
        </trans-unit>
        <trans-unit id="4b8986d6631f648280b8824a5e9acaa22cfd5ede" translate="yes" xml:space="preserve">
          <source>Set the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. The number passed to &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is interpreted modulo this value. The initial value is given by the &lt;code&gt;+RTS -N&lt;/code&gt; runtime flag.</source>
          <target state="translated">设置可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。传递给 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; 的数字将对此值取模。初始值由 &lt;code&gt;+RTS -N&lt;/code&gt; 运行时标志给出。</target>
        </trans-unit>
        <trans-unit id="49914586be421c1a51499082896596cdc3d1b52d" translate="yes" xml:space="preserve">
          <source>Set the number of entries GHCi keeps for &lt;code&gt;:history&lt;/code&gt;. See &lt;a href=&quot;ghci#ghci-debugger&quot;&gt;The GHCi Debugger&lt;/a&gt;.</source>
          <target state="translated">设置GHCi为 &lt;code&gt;:history&lt;/code&gt; 保留的条目数。请参阅&lt;a href=&quot;ghci#ghci-debugger&quot;&gt;GHCi调试器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78111973c0a6975132f723e2af152cf8bff28dbe" translate="yes" xml:space="preserve">
          <source>Set the number of generations used by the garbage collector. The default of 2 seems to be good, but the garbage collector can support any number of generations. Anything larger than about 4 is probably not a good idea unless your program runs for a &lt;em&gt;long&lt;/em&gt; time, because the oldest generation will hardly ever get collected.</source>
          <target state="translated">设置垃圾收集器使用的世代数。默认值为2似乎不错，但是垃圾收集器可以支持任何数量的世代。除非程序运行&lt;em&gt;很&lt;/em&gt;长时间，否则大于4的值可能不是一个好主意，因为最老的一代几乎都不会被收集到。</target>
        </trans-unit>
        <trans-unit id="974f10915fc1e5bb5d4657e8bfa0ee8f69071586" translate="yes" xml:space="preserve">
          <source>Set the number of phases for the simplifier. Ignored with &lt;code&gt;-O0&lt;/code&gt;.</source>
          <target state="translated">设置简化器的相数。用 &lt;code&gt;-O0&lt;/code&gt; 忽略。</target>
        </trans-unit>
        <trans-unit id="9d55f6df845d396fb3f26af370d6593432197c2d" translate="yes" xml:space="preserve">
          <source>Set the permissions of a file or directory.</source>
          <target state="translated">设置文件或目录的权限。</target>
        </trans-unit>
        <trans-unit id="581f262ffcc5b132fc178bf2b945da3fa032db33" translate="yes" xml:space="preserve">
          <source>Set the prefix of the filenames used for debugging output.</source>
          <target state="translated">设置用于调试输出的文件名的前缀。</target>
        </trans-unit>
        <trans-unit id="27569170844fcd82a186fdf61977ee9c0555a54c" translate="yes" xml:space="preserve">
          <source>Set the prefix of the filenames used for debugging output. For example, &lt;code&gt;-ddump-file-prefix=Foo&lt;/code&gt; will cause the output from &lt;a href=&quot;#ghc-flag--ddump-simpl&quot;&gt;&lt;code&gt;-ddump-simpl&lt;/code&gt;&lt;/a&gt; to be dumped to &lt;code&gt;Foo.dump-simpl&lt;/code&gt;.</source>
          <target state="translated">设置用于调试输出的文件名的前缀。例如， &lt;code&gt;-ddump-file-prefix=Foo&lt;/code&gt; 将导致&lt;a href=&quot;#ghc-flag--ddump-simpl&quot;&gt; &lt;code&gt;-ddump-simpl&lt;/code&gt; &lt;/a&gt;的输出转储到 &lt;code&gt;Foo.dump-simpl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee90ac8ed288a340065381772b8b9d149143a2f0" translate="yes" xml:space="preserve">
          <source>Set the profiling (sampling) interval to ⟨secs⟩ seconds (the default is 0.1 second). Fractions are allowed: for example &lt;code&gt;-i0.2&lt;/code&gt; will get 5 samples per second. This only affects heap profiling; time profiles are always sampled with the frequency of the RTS clock. See &lt;a href=&quot;#prof-time-options&quot;&gt;Time and allocation profiling&lt;/a&gt; for changing that.</source>
          <target state="translated">将分析（采样）间隔设置为&amp;ldquo;秒&amp;rdquo;秒（默认值为0.1秒）。允许使用分数：例如 &lt;code&gt;-i0.2&lt;/code&gt; 每秒将获得5个样本。这只会影响堆分析；时间配置文件始终以RTS时钟的频率进行采样。请参阅&lt;a href=&quot;#prof-time-options&quot;&gt;时间和分配分析&lt;/a&gt;以进行更改。</target>
        </trans-unit>
        <trans-unit id="bde393e1c3aa9e9db3da19eaa0ed0bed96e40bc3" translate="yes" xml:space="preserve">
          <source>Set the size of &amp;ldquo;stack chunks&amp;rdquo;. When a thread&amp;rsquo;s current stack overflows, a new stack chunk is created and added to the thread&amp;rsquo;s stack, until the limit set by &lt;a href=&quot;#rts-flag--K%20%E2%9F%A8size%E2%9F%A9&quot;&gt;&lt;code&gt;-K ⟨size⟩&lt;/code&gt;&lt;/a&gt; is reached.</source>
          <target state="translated">设置&amp;ldquo;堆栈块&amp;rdquo;的大小。当线程的当前堆栈溢出时，将创建一个新的堆栈块并将其添加到该线程的堆栈中，直到达到由&lt;a href=&quot;#rts-flag--K%20%E2%9F%A8size%E2%9F%A9&quot;&gt; &lt;code&gt;-K ⟨size⟩&lt;/code&gt; &lt;/a&gt;设置的限制。</target>
        </trans-unit>
        <trans-unit id="13830a2153ac99e2e5187f2607fe01677efb61a6" translate="yes" xml:space="preserve">
          <source>Set the size threshold for the SpecConstr transformation.</source>
          <target state="translated">设置SpecConstr变换的大小阈值。</target>
        </trans-unit>
        <trans-unit id="1212f3cff89daa6357cba7682f3eb8eb280b1c85" translate="yes" xml:space="preserve">
          <source>Set the size threshold for the liberate-case transformation.</source>
          <target state="translated">设置自由大小写转换的大小阈值。</target>
        </trans-unit>
        <trans-unit id="a2ae25c78040fee94d69d11436a78f01d6fca2d0" translate="yes" xml:space="preserve">
          <source>Set the width of debugging output. For example &lt;code&gt;-dppr-cols200&lt;/code&gt;</source>
          <target state="translated">设置调试输出的宽度。例如 &lt;code&gt;-dppr-cols200&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="019b4ecc06f7c2f22b40358cf37ba57f0d48c6a8" translate="yes" xml:space="preserve">
          <source>Set the width of debugging output. Use this if your code is wrapping too much. For example: &lt;code&gt;-dppr-cols=200&lt;/code&gt;.</source>
          <target state="translated">设置调试输出的宽度。如果您的代码包装太多，请使用此选项。例如： &lt;code&gt;-dppr-cols=200&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c74eca7c43ef9fb73346c302c6712b095e6934a" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the language is case sensitive.</source>
          <target state="translated">如果语言区分大小写，则设置为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73a9144ce523c26ead35be5e17a8b419754fb0f2" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the language supports nested block comments.</source>
          <target state="translated">如果该语言支持嵌套块注释，则设置为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4ba15fda4bbbf376e19cc429fd5c215384831c8" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the language is case sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f435d9dbcd9ebd77b8861f8b64110f1d0062614f" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the language supports nested block comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba8a4e35c2ca993f0910108377e4d4052112de4" translate="yes" xml:space="preserve">
          <source>Set type</source>
          <target state="translated">设置类型</target>
        </trans-unit>
        <trans-unit id="3d5891cb9e8a0fc091a9171a8d1b4dbcf2f1f52b" translate="yes" xml:space="preserve">
          <source>Set user ID on execution.</source>
          <target state="translated">执行时设置用户ID。</target>
        </trans-unit>
        <trans-unit id="62d7122885b6e1739f21a82263b34706a4d08844" translate="yes" xml:space="preserve">
          <source>SetOwnerAndGroupIsRestricted</source>
          <target state="translated">SetOwnerAndGroupIsRestricted</target>
        </trans-unit>
        <trans-unit id="5752a633b29be2c2c6d999e8ad3cf0d34e0b6bbb" translate="yes" xml:space="preserve">
          <source>SetWindowPosFlags</source>
          <target state="translated">SetWindowPosFlags</target>
        </trans-unit>
        <trans-unit id="5d59fc0c1ba1d0f45cfcd2a1a313a95a2f55060a" translate="yes" xml:space="preserve">
          <source>Sets edge weights used by the new code layout algorithm.</source>
          <target state="translated">设置新的代码布局算法使用的边缘权重。</target>
        </trans-unit>
        <trans-unit id="ea257dcefad7ec78df6ea3c4001b110c8fb57d58" translate="yes" xml:space="preserve">
          <source>Sets how many iterations of the pattern-match checker will perform before giving up. This limit is to catch cases where pattern-match checking might be excessively costly (due to the exponential complexity of coverage checking in the general case). It typically shouldn&amp;rsquo;t be necessary to set this unless GHC informs you that it has exceeded the pattern match checker&amp;rsquo;s iteration limit (in which case you may want to consider refactoring your pattern match, for the sake of future readers of your code.</source>
          <target state="translated">设置在放弃之前模式匹配检查程序将执行多少次迭代。此限制是为了捕获模式匹配检查可能过于昂贵的情况（由于通常情况下覆盖检查的指数复杂性）。除非GHC通知您它已经超过了模式匹配检查器的迭代限制，否则通常不需要设置该值（在这种情况下，为了将来的代码读者，您可能需要考虑重构模式匹配。</target>
        </trans-unit>
        <trans-unit id="b920f85990a248c4469d8197adacc9f2e5b9eddc" translate="yes" xml:space="preserve">
          <source>Sets or modifies the current context for statements typed at the prompt. The form &lt;code&gt;import mod&lt;/code&gt; is equivalent to &lt;code&gt;:module +mod&lt;/code&gt;. See &lt;a href=&quot;#ghci-scope&quot;&gt;What&amp;rsquo;s really in scope at the prompt?&lt;/a&gt; for more details.</source>
          <target state="translated">设置或修改在提示符下键入的语句的当前上下文。形式 &lt;code&gt;import mod&lt;/code&gt; 等效于 &lt;code&gt;:module +mod&lt;/code&gt; 。看到&lt;a href=&quot;#ghci-scope&quot;&gt;提示时真正的作用域是什么？&lt;/a&gt;更多细节。</target>
        </trans-unit>
        <trans-unit id="674cd41ed08ffde00fe81d47ba369ce3000c07a0" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;exposed&lt;/code&gt; flag for package ⟨P⟩ to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">将包⟨P⟩ 的 &lt;code&gt;exposed&lt;/code&gt; 标志设置为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21880bfdad398070705f7eac77b513092fea6267" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;exposed&lt;/code&gt; flag for package ⟨P⟩ to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">将包⟨P⟩ 的 &lt;code&gt;exposed&lt;/code&gt; 标志设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5475a6c0aa3b60ca9256f7baef6f42fb4d21e58" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;trusted&lt;/code&gt; flag for package ⟨P⟩ to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">将包⟨P⟩ 的 &lt;code&gt;trusted&lt;/code&gt; 标志设置为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74610355e107472e2529949895e79f33df809382" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;trusted&lt;/code&gt; flag for package ⟨P⟩ to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">将包⟨P⟩ 的 &lt;code&gt;trusted&lt;/code&gt; 标志设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2e20ad62225863877ba8e6cb0b1dff5279b2d25" translate="yes" xml:space="preserve">
          <source>Sets the allocation counter for the current thread to the given value.</source>
          <target state="translated">将当前线程的分配计数器设置为给定值。</target>
        </trans-unit>
        <trans-unit id="b2c4dc1f6b2f05486d3823652f2f61d8d864b1c5" translate="yes" xml:space="preserve">
          <source>Sets the attributes on or off before outputting the given text, and then turns them all off. This capability will always succeed; properties which cannot be set in the current terminal will be ignored.</source>
          <target state="translated">在输出给定的文本之前设置属性的开启或关闭,然后将它们全部关闭。该功能总是成功的,在当前终端无法设置的属性将被忽略。</target>
        </trans-unit>
        <trans-unit id="f044a6bd0542095b6f8d833a9f63a0b91b0c7314" translate="yes" xml:space="preserve">
          <source>Sets the attributes on or off. This capability will always succeed; properties which cannot be set in the current terminal will be ignored.</source>
          <target state="translated">设置属性的开启或关闭。该功能永远成功,当前终端无法设置的属性将被忽略。</target>
        </trans-unit>
        <trans-unit id="9e9d6260f5eb86f113f53ee7f94bef58759c1f45" translate="yes" xml:space="preserve">
          <source>Sets the background color of all further text output, using either the &lt;code&gt;setab&lt;/code&gt; or &lt;code&gt;setb&lt;/code&gt; capability.</source>
          <target state="translated">使用 &lt;code&gt;setab&lt;/code&gt; 或 &lt;code&gt;setb&lt;/code&gt; 功能设置所有其他文本输出的背景色。</target>
        </trans-unit>
        <trans-unit id="ec6f9b0ef35dbec0ee3e8807330155257d874c11" translate="yes" xml:space="preserve">
          <source>Sets the command used by &lt;a href=&quot;#ghci-cmd-:edit&quot;&gt;&lt;code&gt;:edit&lt;/code&gt;&lt;/a&gt; to ⟨cmd⟩.</source>
          <target state="translated">将&lt;a href=&quot;#ghci-cmd-:edit&quot;&gt; &lt;code&gt;:edit&lt;/code&gt; &lt;/a&gt;使用的命令设置为tocmd⟩。</target>
        </trans-unit>
        <trans-unit id="311542d39835606741eb83c49a3747557cb52c29" translate="yes" xml:space="preserve">
          <source>Sets the context switch interval to ⟨s⟩ seconds. A context switch will occur at the next heap block allocation after the timer expires (a heap block allocation occurs every 4k of allocation). With &lt;code&gt;-C0&lt;/code&gt; or &lt;code&gt;-C&lt;/code&gt;, context switches will occur as often as possible (at every heap block allocation).</source>
          <target state="translated">将上下文切换间隔设置为⟨s⟩秒。计时器到期后，上下文切换将在下一个堆块分配处发生（每4k分配发生一次堆块分配）。使用 &lt;code&gt;-C0&lt;/code&gt; 或 &lt;code&gt;-C&lt;/code&gt; ，上下文切换将尽可能频繁地发生（在每个堆块分配中）。</target>
        </trans-unit>
        <trans-unit id="3cc3e2dca487963eddc51e609356dd3f2ebd666d" translate="yes" xml:space="preserve">
          <source>Sets the destination for the eventlog produced with the &lt;a href=&quot;#rts-flag--l%20%E2%9F%A8flags%E2%9F%A9&quot;&gt;&lt;code&gt;-l ⟨flags⟩&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7155bad6d4be2ffdb5bd3858939d96fb2158b21" translate="yes" xml:space="preserve">
          <source>Sets the destination for the eventlog produced with the &lt;a href=&quot;profiling#rts-flag--l&quot;&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">设置使用&lt;a href=&quot;profiling#rts-flag--l&quot;&gt; &lt;code&gt;-l&lt;/code&gt; &lt;/a&gt;标志生成的事件日志的目标。</target>
        </trans-unit>
        <trans-unit id="3eeab4f5d8791e9b07157ed1c993b7d984742a51" translate="yes" xml:space="preserve">
          <source>Sets the foreground color of all further text output, using either the &lt;code&gt;setaf&lt;/code&gt; or &lt;code&gt;setf&lt;/code&gt; capability.</source>
          <target state="translated">使用 &lt;code&gt;setaf&lt;/code&gt; 或 &lt;code&gt;setf&lt;/code&gt; 功能设置所有其他文本输出的前景色。</target>
        </trans-unit>
        <trans-unit id="544f549a696a2ab69ee245ced9c83bd2e2b3a6fd" translate="yes" xml:space="preserve">
          <source>Sets the function to be used for the continuation prompt (used when using the &lt;a href=&quot;#ghci-cmd-:%7B&quot;&gt;&lt;code&gt;:{&lt;/code&gt;&lt;/a&gt; command) displaying in GHCi.</source>
          <target state="translated">设置用于GHCi中显示的继续提示的功能（使用&lt;a href=&quot;#ghci-cmd-:%7B&quot;&gt; &lt;code&gt;:{&lt;/code&gt; &lt;/a&gt;命令时使用）。</target>
        </trans-unit>
        <trans-unit id="926985e64e5398fb8d04ccea5a3fc65cf84c7728" translate="yes" xml:space="preserve">
          <source>Sets the function to be used for the prompt displaying in GHCi. The function should be of the type &lt;code&gt;[String] -&amp;gt; Int -&amp;gt; IO String&lt;/code&gt;. This function is called each time the prompt is being made. The first argument stands for the names of the modules currently in scope(the name of the &amp;ldquo;topmost&amp;rdquo; module will begin with a &lt;code&gt;*&lt;/code&gt;; see &lt;a href=&quot;#ghci-scope&quot;&gt;What&amp;rsquo;s really in scope at the prompt?&lt;/a&gt; for more information). The second arguments is the line number (as referenced in compiler messages) of the current prompt.</source>
          <target state="translated">设置用于在GHCi中显示提示的功能。该函数应为 &lt;code&gt;[String] -&amp;gt; Int -&amp;gt; IO String&lt;/code&gt; 。每次发出提示时都会调用此函数。第一个参数代表当前作用域中的模块的名称（&amp;ldquo;最顶层&amp;rdquo;模块的名称以 &lt;code&gt;*&lt;/code&gt; 开头；有关更多信息，请参见&lt;a href=&quot;#ghci-scope&quot;&gt;提示符处的真正作用域？&lt;/a&gt;）。第二个参数是当前提示的行号（在编译器消息中引用）。</target>
        </trans-unit>
        <trans-unit id="85a9cc84fb8a975ac3d6d428a3e058beac0c24b8" translate="yes" xml:space="preserve">
          <source>Sets the interval that the RTS clock ticks at, which is also the sampling interval of the time and allocation profile. The default is 0.02 seconds. The runtime uses a single timer signal to count ticks; this timer signal is used to control the context switch timer (&lt;a href=&quot;using-concurrent#using-concurrent&quot;&gt;Using Concurrent Haskell&lt;/a&gt;) and the heap profiling timer &lt;a href=&quot;#rts-options-heap-prof&quot;&gt;RTS options for heap profiling&lt;/a&gt;. Also, the time profiler uses the RTS timer signal directly to record time profiling samples.</source>
          <target state="translated">设置RTS时钟的滴答间隔，它也是时间和分配配置文件的采样间隔。默认值为0.02秒。运行时使用单个计时器信号来计算滴答声；此计时器信号用于控制上下文切换计时器（&lt;a href=&quot;using-concurrent#using-concurrent&quot;&gt;使用并发Haskell&lt;/a&gt;）和&lt;a href=&quot;#rts-options-heap-prof&quot;&gt;用于堆分析&lt;/a&gt;的堆分析计时器RTS选项。同样，时间分析器直接使用RTS计时器信号来记录时间分析样本。</target>
        </trans-unit>
        <trans-unit id="766f638ba7d4bfc1f02388075a4f5e3e2202bb95" translate="yes" xml:space="preserve">
          <source>Sets the limit on the total size of &amp;ldquo;large objects&amp;rdquo; (objects larger than about 3KB) that can be allocated before a GC is triggered. By default this limit is the same as the &lt;a href=&quot;#rts-flag--A%20%E2%9F%A8size%E2%9F%A9&quot;&gt;&lt;code&gt;-A&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">设置在触发GC之前可以分配的&amp;ldquo;大对象&amp;rdquo;（大于3KB的对象）总大小的限制。缺省情况下，此限制与&lt;a href=&quot;#rts-flag--A%20%E2%9F%A8size%E2%9F%A9&quot;&gt; &lt;code&gt;-A&lt;/code&gt; &lt;/a&gt;值相同。</target>
        </trans-unit>
        <trans-unit id="c10a33938d60c3ade609b314a9182d052ff36554" translate="yes" xml:space="preserve">
          <source>Sets the list of arguments which are returned when the program calls &lt;code&gt;System.getArgs&lt;/code&gt;.</source>
          <target state="translated">设置程序调用 &lt;code&gt;System.getArgs&lt;/code&gt; 时返回的参数列表。</target>
        </trans-unit>
        <trans-unit id="88921b7993f4ba8443e5f38b8fae986488002e50" translate="yes" xml:space="preserve">
          <source>Sets the maximal number of iterations for the simplifier.</source>
          <target state="translated">设置简化器的最大迭代次数。</target>
        </trans-unit>
        <trans-unit id="ddf6bcb4466d2f01e0e37403eb932bfd13d26db4" translate="yes" xml:space="preserve">
          <source>Sets the maximum length of a cost-centre stack name in a heap profile. Defaults to 25.</source>
          <target state="translated">设置堆配置文件中成本中心堆名的最大长度。默认值为25。</target>
        </trans-unit>
        <trans-unit id="47f52e8de421c0d9f22c2be275bb2873b4389bb1" translate="yes" xml:space="preserve">
          <source>Sets the maximum length of the cost-centre names listed in the heap profile.</source>
          <target state="translated">设置堆配置文件中列出的成本中心名称的最大长度。</target>
        </trans-unit>
        <trans-unit id="92f9bcec4dcffeb64d9f3f058d9712b71bf5e230" translate="yes" xml:space="preserve">
          <source>Sets the stack chunk buffer size. When a stack chunk overflows and a new stack chunk is created, some of the data from the previous stack chunk is moved into the new chunk, to avoid an immediate underflow and repeated overflow/underflow at the boundary. The amount of stack moved is set by the &lt;code&gt;-kb&lt;/code&gt; option.</source>
          <target state="translated">设置堆栈块缓冲区大小。当堆栈块溢出并创建了新的堆栈块时，前一个堆栈块中的某些数据将移入新块中，以避免在边界处立即发生下溢和重复上溢/下溢。移动的堆栈量由 &lt;code&gt;-kb&lt;/code&gt; 选项设置。</target>
        </trans-unit>
        <trans-unit id="4939bbb209646ab6d5403c578234d941ca697dd6" translate="yes" xml:space="preserve">
          <source>Sets the string to be returned when the program calls &lt;code&gt;System.getProgName&lt;/code&gt;.</source>
          <target state="translated">设置程序调用 &lt;code&gt;System.getProgName&lt;/code&gt; 时要返回的字符串。</target>
        </trans-unit>
        <trans-unit id="8a9b5c7bb27221f5a048ae6726e49420ae5ede27" translate="yes" xml:space="preserve">
          <source>Sets the string to be used as the continuation prompt (used when using the &lt;a href=&quot;#ghci-cmd-:%7B&quot;&gt;&lt;code&gt;:{&lt;/code&gt;&lt;/a&gt; command) in GHCi.</source>
          <target state="translated">设置GHCi中用作继续提示的字符串（在使用&lt;a href=&quot;#ghci-cmd-:%7B&quot;&gt; &lt;code&gt;:{&lt;/code&gt; &lt;/a&gt;命令时使用）。</target>
        </trans-unit>
        <trans-unit id="bccac63e58aa6d8722988126735a8bcd5644668e" translate="yes" xml:space="preserve">
          <source>Sets the string to be used as the prompt in GHCi. Inside ⟨prompt⟩, the next sequences are replaced:</source>
          <target state="translated">设置在GHCi中用作提示的字符串。在⟨prompt⟩内,替换下一个序列。</target>
        </trans-unit>
        <trans-unit id="ff691e62db73541f4c4094c63d16da5485d8223c" translate="yes" xml:space="preserve">
          <source>Sets various options. See &lt;a href=&quot;#ghci-set&quot;&gt;The :set and :seti commands&lt;/a&gt; for a list of available options and &lt;a href=&quot;flags#interactive-mode-options&quot;&gt;Interactive-mode options&lt;/a&gt; for a list of GHCi-specific flags. The &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt; command by itself shows which options are currently set. It also lists the current dynamic flag settings, with GHCi-specific flags listed separately.</source>
          <target state="translated">设置各种选项。有关可用选项的列表，请参见&lt;a href=&quot;#ghci-set&quot;&gt;：set和：seti命令；&lt;/a&gt;对于GHCi特定标志的列表，请参见&lt;a href=&quot;flags#interactive-mode-options&quot;&gt;交互模式选项&lt;/a&gt;。的&lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt;由本身就说明了命令的选项当前设置。它还列出了当前的动态标志设置，并单独列出了GHCi特定的标志。</target>
        </trans-unit>
        <trans-unit id="b02b3fb57dbb29ad2afd733a05004b902652d901" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;-N&lt;/code&gt; also has the effect of enabling the parallel garbage collector (see &lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS options to control the garbage collector&lt;/a&gt;).</source>
          <target state="translated">设置 &lt;code&gt;-N&lt;/code&gt; 还具有启用并行垃圾收集器的效果（请参阅&lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS选项以控制垃圾收集器&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f8b24a10f616425c10b2f160079c3eaf143ea5b5" translate="yes" xml:space="preserve">
          <source>Setting Window to Foreground. See: &lt;a href=&quot;https://github.com/haskell/win32/pull/9&quot;&gt;https://github.com/haskell/win32/pull/9&lt;/a&gt;, &lt;a href=&quot;http://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&quot;&gt;http://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&lt;/a&gt;.</source>
          <target state="translated">将窗口设置为前景。请参阅：&lt;a href=&quot;https://github.com/haskell/win32/pull/9&quot;&gt;https://github.com/haskell/win32/pull/9&lt;/a&gt;，&lt;a href=&quot;http://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&quot;&gt;http://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="911e0f1e977e5874471327f6e88d2e9b306f382c" translate="yes" xml:space="preserve">
          <source>Setting file modes</source>
          <target state="translated">设置文件模式</target>
        </trans-unit>
        <trans-unit id="5a156bca207a4fa656b883b4543cb1921c262677" translate="yes" xml:space="preserve">
          <source>Setting file sizes</source>
          <target state="translated">设置文件大小</target>
        </trans-unit>
        <trans-unit id="104d388801cda83de3626670853dc2869f6271b4" translate="yes" xml:space="preserve">
          <source>Setting something like &lt;code&gt;GHCRTS=-M2G&lt;/code&gt; in your environment is a handy way to avoid Haskell programs growing beyond the real memory in your machine, which is easy to do by accident and can cause the machine to slow to a crawl until the OS decides to kill the process (and you hope it kills the right one).</source>
          <target state="translated">在环境中设置类似 &lt;code&gt;GHCRTS=-M2G&lt;/code&gt; 的方法是避免Haskell程序超出计算机实际内存的简便方法，这很容易偶然发生，并且可能导致计算机缓慢爬行，直到操作系统决定终止这个过程（您希望它杀死了正确的过程）。</target>
        </trans-unit>
        <trans-unit id="c7f73bb54d928922c3838bb789ee9fb8a5b1eb37" translate="yes" xml:space="preserve">
          <source>Settings</source>
          <target state="translated">Settings</target>
        </trans-unit>
        <trans-unit id="c5f6db8a79708d4475b4d45a9e56ed745f590d17" translate="yes" xml:space="preserve">
          <source>SetupTermError</source>
          <target state="translated">SetupTermError</target>
        </trans-unit>
        <trans-unit id="5d264d925dcb62f989810a7e93f01c3dbbe4c5f3" translate="yes" xml:space="preserve">
          <source>Several functions take special advantage of sharing to produce results using much less time and memory than one might expect. These are documented individually for functions, but also include the methods &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;, each of which take time and space proportional to the logarithm of the size of the result.</source>
          <target state="translated">几个功能具有共享的特殊优势，可以使用比他们预期更少的时间和内存来产生结果。这些分别针对函数进行了记录，但还包括方法 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; ，每个方法所花费的时间和空间与结果大小的对数成比例。</target>
        </trans-unit>
        <trans-unit id="2b2ffa3efe672ce8c5db2d19f5a868eb06b858f6" translate="yes" xml:space="preserve">
          <source>Several functions take special advantage of sharing to produce results using much less time and memory than one might expect. These are documented individually for functions, but also include the methods &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;, each of which take time and space proportional to the logarithm of the size of the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14623131cbbfbf706f6da750cb4eda364534f0b7" translate="yes" xml:space="preserve">
          <source>Several type synonyms are provided for convenience:</source>
          <target state="translated">为方便起见,提供了几种类型的同义词。</target>
        </trans-unit>
        <trans-unit id="608834b8d971a99fa89ed3af5a6e5012cd7bd2a3" translate="yes" xml:space="preserve">
          <source>ShareMode</source>
          <target state="translated">ShareMode</target>
        </trans-unit>
        <trans-unit id="583a9b1c36af1bd025814d0fc796efab9d31a19c" translate="yes" xml:space="preserve">
          <source>Shared libraries allow a single instance of some pre-compiled code to be shared between several programs. In contrast, with static linking the code is copied into each program. Using shared libraries can thus save disk space. They also allow a single copy of code to be shared in memory between several programs that use it. Shared libraries are often used as a way of structuring large projects, especially where different parts are written in different programming languages. Shared libraries are also commonly used as a plugin mechanism by various applications. This is particularly common on Windows using COM.</source>
          <target state="translated">共享库允许几个程序之间共享一些预编译代码的单一实例。与此相反,使用静态链接时,代码会被复制到每个程序中。因此,使用共享库可以节省磁盘空间。它们还允许使用它的几个程序之间在内存中共享一个代码副本。共享库经常被用作组织大型项目的一种方式,特别是当不同的部分用不同的编程语言编写时。共享库还经常被各种应用程序用作插件机制。这在使用COM的Windows上尤其常见。</target>
        </trans-unit>
        <trans-unit id="13954234065088eecc3bac65c756d464b4d46a13" translate="yes" xml:space="preserve">
          <source>Shared memory locations that support atomic memory transactions.</source>
          <target state="translated">支持原子内存事务的共享内存位置。</target>
        </trans-unit>
        <trans-unit id="9a6aa7a13d566b94eda1e2645e28063caf25a8e2" translate="yes" xml:space="preserve">
          <source>Shared operators</source>
          <target state="translated">共享运营商</target>
        </trans-unit>
        <trans-unit id="274fc725957aa6d4979c2432b7d496117e9ed8db" translate="yes" xml:space="preserve">
          <source>SharedLock</source>
          <target state="translated">SharedLock</target>
        </trans-unit>
        <trans-unit id="5e34744b030e47f16f130270af0058932e6a1f29" translate="yes" xml:space="preserve">
          <source>Sharing mode, no sharing, share read, share read+write</source>
          <target state="translated">共享模式,不共享,共享读取,共享读取+写入</target>
        </trans-unit>
        <trans-unit id="38f4b8a455a292466f157f316e3093c50f02bae3" translate="yes" xml:space="preserve">
          <source>Shift left logical. Result undefined if shift amount is not in the range 0 to word size - 1 inclusive.</source>
          <target state="translated">左移位逻辑,如果移位量不在0到字数范围内,结果未定义。如果移位量不在0到字数范围内,结果未定义。</target>
        </trans-unit>
        <trans-unit id="b2f8cb7e781b6bb9aed0002ab2fc6106b973ae86" translate="yes" xml:space="preserve">
          <source>Shift left. Result undefined if shift amount is not in the range 0 to word size - 1 inclusive.</source>
          <target state="translated">向左移位,如果移位量不在0到字数范围内,结果未定义。如果移位量不在0到字的大小-1的范围内,结果未定义。</target>
        </trans-unit>
        <trans-unit id="e901c21d90a3526cb783e1819f6ca30b9c70da91" translate="yes" xml:space="preserve">
          <source>Shift right arithmetic. Result undefined if shift amount is not in the range 0 to word size - 1 inclusive.</source>
          <target state="translated">右移运算。如果移位量不在0到字数范围内,结果未定义。</target>
        </trans-unit>
        <trans-unit id="28a0660fffccb3ba1167e3a72d89322af4281d51" translate="yes" xml:space="preserve">
          <source>Shift right logical. Result undefined if shift amount is not in the range 0 to word size - 1 inclusive.</source>
          <target state="translated">向右移位的逻辑性,如果移位量不在0到字数范围内,结果未定义。如果移位量不在0到字数范围内,结果未定义。</target>
        </trans-unit>
        <trans-unit id="a52c028eff42818390bc2b9bd7519a304a6a92f1" translate="yes" xml:space="preserve">
          <source>Shift the argument left by the specified number of bits (which must be non-negative).</source>
          <target state="translated">将参数左移指定的位数(必须是非负数)。</target>
        </trans-unit>
        <trans-unit id="b6e53836ae613854d860d1f2fe1c8505679f067d" translate="yes" xml:space="preserve">
          <source>Shift the argument left by the specified number of bits (which must be non-negative). Some instances may throw an &lt;code&gt;&lt;a href=&quot;control-exception#v:Overflow&quot;&gt;Overflow&lt;/a&gt;&lt;/code&gt; exception if given a negative input.</source>
          <target state="translated">将参数左移指定的位数（必须为非负数）。如果输入为负，则某些实例可能会引发 &lt;code&gt;&lt;a href=&quot;control-exception#v:Overflow&quot;&gt;Overflow&lt;/a&gt;&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="c3166679ee9af6f6f1606e73456f12038a442fcb" translate="yes" xml:space="preserve">
          <source>Shift the argument left by the specified number of bits. The result is undefined for negative shift amounts and shift amounts greater or equal to the &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将参数左移指定的位数。对于负移位量和大于或等于 &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; 的移位量，结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="470c27383beb816adacca5b2bcd6516fa9b92d07" translate="yes" xml:space="preserve">
          <source>Shift the argument right (signed) by the specified number of bits (which must be non-negative). The &lt;a href=&quot;ra&quot;&gt;RA&lt;/a&gt; means &quot;right, arithmetic&quot; (as opposed to RL for logical)</source>
          <target state="translated">将参数右移（带符号）指定的位数（必须为非负数）。所述&lt;a href=&quot;ra&quot;&gt;RA&lt;/a&gt;装置&amp;ldquo;右算术&amp;rdquo;（相对于RL逻辑）</target>
        </trans-unit>
        <trans-unit id="5043c22cbbec3f3a95767439230311f3d6b9e1f7" translate="yes" xml:space="preserve">
          <source>Shift the argument right (unsigned) by the specified number of bits (which must be non-negative). The &lt;a href=&quot;rl&quot;&gt;RL&lt;/a&gt; means &quot;right, logical&quot; (as opposed to RA for arithmetic)</source>
          <target state="translated">将参数右移（无符号）指定的位数（必须为非负数）。所述&lt;a href=&quot;rl&quot;&gt;RL&lt;/a&gt;手段&amp;ldquo;权利，逻辑&amp;rdquo;（相对于RA用于算术）</target>
        </trans-unit>
        <trans-unit id="51b6bbae92783fa587d037a508b5389c9ab60376" translate="yes" xml:space="preserve">
          <source>Shift the argument right by the specified number of bits (which must be non-negative). The &lt;a href=&quot;rl&quot;&gt;RL&lt;/a&gt; means &quot;right, logical&quot; (as opposed to RA for arithmetic) (although an arithmetic right shift wouldn't make sense for Word#)</source>
          <target state="translated">将参数右移指定的位数（必须为非负数）。该&lt;a href=&quot;rl&quot;&gt;RL&lt;/a&gt;的意思是&amp;ldquo;正确的，合乎逻辑的&amp;rdquo;（与RA算术）（虽然算术右移不会做出词＃感）</target>
        </trans-unit>
        <trans-unit id="0619240237ce131da774f1374298d4c953fc7e8d" translate="yes" xml:space="preserve">
          <source>Shift the first argument right by the specified number of bits, which must be non-negative and smaller than the number of bits in the type.</source>
          <target state="translated">将第一个参数右移指定的位数,必须是非负数,且小于类型中的位数。</target>
        </trans-unit>
        <trans-unit id="46adb6ebe5f10576d4b174f20323e6c4db2a6e91" translate="yes" xml:space="preserve">
          <source>Shift the first argument right by the specified number of bits. The result is undefined for negative shift amounts and shift amounts greater or equal to the &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt;. Some instances may throw an &lt;code&gt;&lt;a href=&quot;control-exception#v:Overflow&quot;&gt;Overflow&lt;/a&gt;&lt;/code&gt; exception if given a negative input.</source>
          <target state="translated">将第一个参数右移指定的位数。对于负移位量和大于或等于 &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; 的移位量，结果是不确定的。如果输入为负，则某些实例可能会引发 &lt;code&gt;&lt;a href=&quot;control-exception#v:Overflow&quot;&gt;Overflow&lt;/a&gt;&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="1a32afa70276a01c18c059113ba751b05104a74c" translate="yes" xml:space="preserve">
          <source>Shift-left operation</source>
          <target state="translated">左移操作</target>
        </trans-unit>
        <trans-unit id="0c5bc1ae01ce5504f9c4592b24f607b48210b732" translate="yes" xml:space="preserve">
          <source>Shifts</source>
          <target state="translated">Shifts</target>
        </trans-unit>
        <trans-unit id="08e0b171e80174af8f80564fa9b86dd93a7ae3d6" translate="yes" xml:space="preserve">
          <source>ShmOpenFlags</source>
          <target state="translated">ShmOpenFlags</target>
        </trans-unit>
        <trans-unit id="3544188ea4cceda2e27a126288058ee4da4a27f9" translate="yes" xml:space="preserve">
          <source>ShortByteString</source>
          <target state="translated">ShortByteString</target>
        </trans-unit>
        <trans-unit id="6573672f191fd1aa7184c9c7463aac2307f40385" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字母的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="56e27a99e38741b3b87777b7c4dc04c2829c5d08" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="dfdd9446387fcb0ec3c52de0f37815bd0ead1c76" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="b29fa1327fbe2d0a9435aa142e5fe6a7fa89516a" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="bdcf7077aa810b8c43c689c42f8ac17e0857c869" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="c5b3299b64f41e53c5656a894b54bb0f75c7a562" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b69106f4f5891e3677d2928483100449c294dc" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdc270bd4463bfc79b05862c35bff48530d61308" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85f67b14e8e5a59ca6c871a3e2a191d9ce10be2" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5930a3963156e2a5c930d8f980579a40e8741f5" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60afd75a2b48bdc652a0df2879db9c8e99176f89" translate="yes" xml:space="preserve">
          <source>Should rather be called &lt;code&gt;intToInteger&lt;/code&gt;</source>
          <target state="translated">应该被称为 &lt;code&gt;intToInteger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df01aa5e87d9f37c0304ad2ad1f465aabd71c890" translate="yes" xml:space="preserve">
          <source>Should the RTS produce a cost-center summary?</source>
          <target state="translated">RTS是否应编制成本中心摘要?</target>
        </trans-unit>
        <trans-unit id="bf378608eeb65194b94d70b91defec0ecbb44b40" translate="yes" xml:space="preserve">
          <source>Should the handler need to abort processing, it should use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; an exception (preferably a &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:UnicodeException&quot;&gt;UnicodeException&lt;/a&gt;&lt;/code&gt;). It may use the description provided to construct a more helpful error report.</source>
          <target state="translated">如果处理程序需要中止处理，则应使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; 异常（最好是 &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:UnicodeException&quot;&gt;UnicodeException&lt;/a&gt;&lt;/code&gt; ）。它可以使用提供的描述来构建更有用的错误报告。</target>
        </trans-unit>
        <trans-unit id="4198e75e3af4d31ecdb60ac624c0fe4351c8180d" translate="yes" xml:space="preserve">
          <source>Should we produce a summary of the garbage collector statistics after the program has exited?</source>
          <target state="translated">我们是否应该在程序退出后产生一个垃圾收集器的统计摘要?</target>
        </trans-unit>
        <trans-unit id="3c652c65622492bec520d3119019e65c87e27305" translate="yes" xml:space="preserve">
          <source>Should you wish to see levity polymorphism in your types, enable the flag &lt;a href=&quot;#ghc-flag--fprint-explicit-runtime-reps&quot;&gt;&lt;code&gt;-fprint-explicit-runtime-reps&lt;/code&gt;&lt;/a&gt;. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2895242999379ba36350c153d4bfcf8184653646" translate="yes" xml:space="preserve">
          <source>Should you wish to see levity polymorphism in your types, enable the flag &lt;a href=&quot;using#ghc-flag--fprint-explicit-runtime-reps&quot;&gt;&lt;code&gt;-fprint-explicit-runtime-reps&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您希望看到类型中的levity多态性，请启用标志&lt;a href=&quot;using#ghc-flag--fprint-explicit-runtime-reps&quot;&gt; &lt;code&gt;-fprint-explicit-runtime-reps&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="21b265b29551b11438c8fce43d62f0508b9c3b80" translate="yes" xml:space="preserve">
          <source>ShouldRetainCAFs</source>
          <target state="translated">ShouldRetainCAFs</target>
        </trans-unit>
        <trans-unit id="d97d1ee339e4eeaba8cac91dca37c8b4ec8f5501" translate="yes" xml:space="preserve">
          <source>Show</source>
          <target state="translated">Show</target>
        </trans-unit>
        <trans-unit id="117d29428688243aaaaab142ae449651dc6629f6" translate="yes" xml:space="preserve">
          <source>Show &lt;em&gt;non-negative&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; numbers in base 10.</source>
          <target state="translated">显示以10为底的&lt;em&gt;非负&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acf1cf75ee8f171bde11dd0e3e91773a691821fd" translate="yes" xml:space="preserve">
          <source>Show &lt;em&gt;non-negative&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; numbers in base 16.</source>
          <target state="translated">显示以16为底的&lt;em&gt;非负&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56a6c6a7bb27d30a360d75cd09a099c690e0b00e" translate="yes" xml:space="preserve">
          <source>Show &lt;em&gt;non-negative&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; numbers in base 8.</source>
          <target state="translated">显示以8为底​​的&lt;em&gt;非负&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e3b232efc848d3cdba797e3bc15a04962a2670f" translate="yes" xml:space="preserve">
          <source>Show CoreToStg output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bbb62ea9eafa153dda5dc2ee2f981379363988" translate="yes" xml:space="preserve">
          <source>Show a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; as a &lt;code&gt;[String]&lt;/code&gt;</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; 显示为 &lt;code&gt;[String]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13692eca48186ec0ecd895780a325fda9e13feba" translate="yes" xml:space="preserve">
          <source>Show a floating-point value in the hexadecimal format, similar to the &lt;code&gt;%a&lt;/code&gt; specifier in C's printf.</source>
          <target state="translated">以十六进制格式显示浮点值，类似于C的printf中的 &lt;code&gt;%a&lt;/code&gt; 指定符。</target>
        </trans-unit>
        <trans-unit id="f913e71ca89b869c42305e4cf638482299992887" translate="yes" xml:space="preserve">
          <source>Show a list (using square brackets and commas), given a function for showing elements.</source>
          <target state="translated">显示一个列表(使用方括号和逗号),给定一个显示元素的函数。</target>
        </trans-unit>
        <trans-unit id="e43e221ce3f46ebb3bf206d35b3380250ce6a74f" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value to full precision, using standard decimal notation for arguments whose absolute value lies between &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;9,999,999&lt;/code&gt;, and scientific notation otherwise.</source>
          <target state="translated">使用标准的十进制表示法显示绝对值介于 &lt;code&gt;0.1&lt;/code&gt; 到 &lt;code&gt;9,999,999&lt;/code&gt; 之间的实数，以全精度显示带符号的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 值，否则使用科学计数法。</target>
        </trans-unit>
        <trans-unit id="655607e0094501ed2be906fe48ca250abcfa4446" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value to full precision using standard decimal notation for arguments whose absolute value lies between &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;9,999,999&lt;/code&gt;, and scientific notation otherwise.</source>
          <target state="translated">对于绝对值在 &lt;code&gt;0.1&lt;/code&gt; 到 &lt;code&gt;9,999,999&lt;/code&gt; 之间的参数，使用标准的十进制表示法将带符号的 &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 值显示为全精度，否则使用科学计数法。</target>
        </trans-unit>
        <trans-unit id="7833c1f677da9a57a749b69c54994e027b564fc2" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value to full precision using standard decimal notation for arguments whose absolute value lies between &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;9,999,999&lt;/code&gt;, and scientific notation otherwise.</source>
          <target state="translated">对于绝对值在 &lt;code&gt;0.1&lt;/code&gt; 到 &lt;code&gt;9,999,999&lt;/code&gt; 之间的参数，使用标准的十进制表示法将带符号的 &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 值显示为全精度，否则使用科学计数法。</target>
        </trans-unit>
        <trans-unit id="83475c788fb6600a77565e8fbf321c1cdb3d99a1" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value using scientific (exponential) notation (e.g. &lt;code&gt;2.45e2&lt;/code&gt;, &lt;code&gt;1.5e-3&lt;/code&gt;).</source>
          <target state="translated">显示一个签名 &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 用科学（指数）符号值（例如 &lt;code&gt;2.45e2&lt;/code&gt; ， &lt;code&gt;1.5e-3&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="02e6ea9af4efca08b8f3c6e64035d16e99b21d5b" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value using standard decimal notation (e.g. &lt;code&gt;245000&lt;/code&gt;, &lt;code&gt;0.0015&lt;/code&gt;).</source>
          <target state="translated">显示一个签名 &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 使用标准十进制形式（例如，值 &lt;code&gt;245000&lt;/code&gt; ， &lt;code&gt;0.0015&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="03f7fa01d32f4e2f9b54104be5978b502ea8cb9f" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value using standard decimal notation for arguments whose absolute value lies between &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;9,999,999&lt;/code&gt;, and scientific notation otherwise.</source>
          <target state="translated">对于绝对值在 &lt;code&gt;0.1&lt;/code&gt; 到 &lt;code&gt;9,999,999&lt;/code&gt; 之间的参数，使用标准的十进制表示法显示带符号的 &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 值，否则使用科学计数法。</target>
        </trans-unit>
        <trans-unit id="eaf538a2c78e6687f4dbe685bf90666dd8d48144" translate="yes" xml:space="preserve">
          <source>Show a type representation</source>
          <target state="translated">显示类型表示</target>
        </trans-unit>
        <trans-unit id="024ac7d8d11b4e2986b03a249f8abd0c904d123f" translate="yes" xml:space="preserve">
          <source>Show a value in the format, if representable</source>
          <target state="translated">显示一个格式的值,如果可以表示的话。</target>
        </trans-unit>
        <trans-unit id="4b7a4151b67efe9cefbd5725d97622068e6694c5" translate="yes" xml:space="preserve">
          <source>Show a value in the format, or error if unrepresentable</source>
          <target state="translated">显示格式中的值,如果无法表示则显示错误。</target>
        </trans-unit>
        <trans-unit id="4ac9419264b8cd5acd5dfd4d21b01a8b3e2d3532" translate="yes" xml:space="preserve">
          <source>Show allocation and runtime statistics for various stages of compilation.</source>
          <target state="translated">显示编译的各个阶段的分配和运行时间统计。</target>
        </trans-unit>
        <trans-unit id="a5efb61f79bd9234a002a9cb9f057671d8e47bf1" translate="yes" xml:space="preserve">
          <source>Show constraints when reporting typed holes.</source>
          <target state="translated">报告打孔时显示约束条件。</target>
        </trans-unit>
        <trans-unit id="9a147147deb6493ac159aee5669b9717aef338ff" translate="yes" xml:space="preserve">
          <source>Show in ISO 8601 Ordinal Date format (yyyy-ddd)</source>
          <target state="translated">以ISO 8601顺序日期格式显示(yyy-ddd)。</target>
        </trans-unit>
        <trans-unit id="afb826724b2cd9f2d602f35271085b26f8512996" translate="yes" xml:space="preserve">
          <source>Show in ISO 8601 Week Date format as yyyy-Www-d (e.g. &quot;2006-W46-3&quot;).</source>
          <target state="translated">以ISO 8601周日期格式显示为yyy-Www-d(如 &quot;2006-W46-3&quot;)。</target>
        </trans-unit>
        <trans-unit id="556868b631229aa9d8ff5b6afc0f4ed6fa7dcdab" translate="yes" xml:space="preserve">
          <source>Show in ISO 8601 format (yyyy-mm-dd)</source>
          <target state="translated">以ISO 8601格式显示(yyy-mm-dd)。</target>
        </trans-unit>
        <trans-unit id="4961f0e3173af1c0d92452eecdeec2827dc30124" translate="yes" xml:space="preserve">
          <source>Show in proleptic Julian year and day format (yyyy-ddd)</source>
          <target state="translated">显示为无序的Julian年和日格式(yyy-ddd)</target>
        </trans-unit>
        <trans-unit id="3738b3260929b65ec16b653b3c3a9efae2f8f165" translate="yes" xml:space="preserve">
          <source>Show in the most commonly used ISO 8601 format.</source>
          <target state="translated">以最常用的ISO 8601格式显示。</target>
        </trans-unit>
        <trans-unit id="40c270f2bac6fc2501d4cef99e3eb8e339b58924" translate="yes" xml:space="preserve">
          <source>Show just a single field of the installed package description for &lt;code&gt;P&lt;/code&gt;. Multiple fields can be selected by separating them with commas</source>
          <target state="translated">仅显示 &lt;code&gt;P&lt;/code&gt; 的已安装软件包描述的单个字段。可以使用逗号分隔多个字段</target>
        </trans-unit>
        <trans-unit id="d0faea938c36bd656177bef1c36b6444e9ed91c5" translate="yes" xml:space="preserve">
          <source>Show output from each STG-to-STG pass</source>
          <target state="translated">显示每次STG到STG的输出。</target>
        </trans-unit>
        <trans-unit id="0ed1cebcb7a9bc78d1767f4efa25a6ddab123221" translate="yes" xml:space="preserve">
          <source>Show output from each core-to-core pass</source>
          <target state="translated">显示每个核对核通道的输出</target>
        </trans-unit>
        <trans-unit id="e4b24a50e7f3934afbfc83402685bb6ced50bb4b" translate="yes" xml:space="preserve">
          <source>Show output from main C-\- pipeline passes</source>
          <target state="translated">显示主要的C-/C-管道通道的输出</target>
        </trans-unit>
        <trans-unit id="b5ae6859ddc29cf979e805a4215774d7885bef31" translate="yes" xml:space="preserve">
          <source>Show output from main C-\- pipeline passes (grouped by proc)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bce662e9062620f80815f21cc16672010761be" translate="yes" xml:space="preserve">
          <source>Show output of last STG pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40203dda604b39e83b98b0160a4fa91c962373fb" translate="yes" xml:space="preserve">
          <source>Show statistics for fast string usage when finished</source>
          <target state="translated">完成后显示快速字符串使用的统计数据</target>
        </trans-unit>
        <trans-unit id="a504ea4918a73e784191cf8cadcc145e4baef3fb" translate="yes" xml:space="preserve">
          <source>Show statistics on the usage of fast strings by the compiler.</source>
          <target state="translated">显示编译器使用快速字符串的统计数据。</target>
        </trans-unit>
        <trans-unit id="15f0977262d8b15de95a92064ddda120a6abc341" translate="yes" xml:space="preserve">
          <source>Show the bindings made at the prompt and their types.</source>
          <target state="translated">显示在提示下所做的绑定及其类型。</target>
        </trans-unit>
        <trans-unit id="28f89a7efb551473fa814d00df8904658b42a4bc" translate="yes" xml:space="preserve">
          <source>Show the current working directory (as set via &lt;a href=&quot;#ghci-cmd-:cd&quot;&gt;&lt;code&gt;:cd&lt;/code&gt;&lt;/a&gt; command), as well as the list of directories searched for source files (as set by the &lt;code&gt;-i&lt;/code&gt; option).</source>
          <target state="translated">显示当前工作目录（通过&lt;a href=&quot;#ghci-cmd-:cd&quot;&gt; &lt;code&gt;:cd&lt;/code&gt; &lt;/a&gt;命令设置），以及搜索源文件的目录列表（通过 &lt;code&gt;-i&lt;/code&gt; 选项设置）。</target>
        </trans-unit>
        <trans-unit id="06a3a8fa8e767a5deebcbb315f19467f070333f6" translate="yes" xml:space="preserve">
          <source>Show the currently active language flags for expressions typed at the prompt (see also &lt;a href=&quot;#ghci-cmd-:seti&quot;&gt;&lt;code&gt;:seti&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">显示在提示符下键入的表达式的当前活动语言标记（另请参见&lt;a href=&quot;#ghci-cmd-:seti&quot;&gt; &lt;code&gt;:seti&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="53c0a868fbcfa7a64327e51999687a40dba89052" translate="yes" xml:space="preserve">
          <source>Show the currently active language flags for source files.</source>
          <target state="translated">显示源文件的当前活动语言标志。</target>
        </trans-unit>
        <trans-unit id="7e7f8e31c3c7b636fff61336a41f3cf5933177b6" translate="yes" xml:space="preserve">
          <source>Show the currently active package flags, as well as the list of packages currently loaded.</source>
          <target state="translated">显示当前活动的软件包标志,以及当前加载的软件包列表。</target>
        </trans-unit>
        <trans-unit id="5574acbc151b9dd07bf6ae5d8664d6f13a1a82bc" translate="yes" xml:space="preserve">
          <source>Show the differences vs. the old interface</source>
          <target state="translated">显示与旧界面的差异</target>
        </trans-unit>
        <trans-unit id="a81a9150b94eae9fbd51cfd6db684dd8e5f3f837" translate="yes" xml:space="preserve">
          <source>Show the imports that are currently in force, as created by &lt;code&gt;import&lt;/code&gt; and &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">显示由 &lt;code&gt;import&lt;/code&gt; 和&lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt;命令创建的当前有效的导入。</target>
        </trans-unit>
        <trans-unit id="34b75e6c8dfbe2ca768a85bdc7bd776bfe32ccef" translate="yes" xml:space="preserve">
          <source>Show the list of modules currently loaded.</source>
          <target state="translated">显示当前加载的模块列表。</target>
        </trans-unit>
        <trans-unit id="31b56e398b4d864e4d7a8a31be37cb76a8a54c5f" translate="yes" xml:space="preserve">
          <source>Show the names of modules that GHCi loaded after a &lt;a href=&quot;ghci#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">在&lt;a href=&quot;ghci#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt;命令后显示GHCi加载的模块的名称。</target>
        </trans-unit>
        <trans-unit id="25ab7debc44d05482144313b87da47401942243d" translate="yes" xml:space="preserve">
          <source>Show the output of CoreToStg pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58222d59ce5f7ecd6949b5835cc64ddea5909ec" translate="yes" xml:space="preserve">
          <source>Show the output of each &lt;em&gt;iteration&lt;/em&gt; of the simplifier (each run of the simplifier has a maximum number of iterations, normally 4).</source>
          <target state="translated">显示简化器每次&lt;em&gt;迭代&lt;/em&gt;的输出（简化器的每次运行都具有最大迭代次数，通常为4）。</target>
        </trans-unit>
        <trans-unit id="3862e8bc3d8608ff50d37aec477df5fe81fa6fa0" translate="yes" xml:space="preserve">
          <source>Show the output of the intermediate Core-to-Core pass. (&lt;em&gt;lots&lt;/em&gt; of output!) So: when we&amp;rsquo;re really desperate:</source>
          <target state="translated">显示中间&amp;ldquo;核心到核心&amp;rdquo;通道的输出。（输出&lt;em&gt;很多&lt;/em&gt;！）所以：当我们真的绝望时：</target>
        </trans-unit>
        <trans-unit id="1be64e20ffc163ff32f6f1057b29216586a7df33" translate="yes" xml:space="preserve">
          <source>Show the output of the intermediate STG-to-STG pass. (&lt;em&gt;lots&lt;/em&gt; of output!)</source>
          <target state="translated">显示中间STG到STG通道的输出。（&lt;em&gt;很多&lt;/em&gt;输出！）</target>
        </trans-unit>
        <trans-unit id="adfd8257fe95d91ad70abd2b9e6fbaba3bb057c5" translate="yes" xml:space="preserve">
          <source>Show the output of the last STG pass before we generate Cmm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d087ea4f9b35e73575659a33a92461b792bfc5" translate="yes" xml:space="preserve">
          <source>Show the output of the unarise pass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0d98a1ccfebb8cc2a096ec79bf4121a7bd5e58" translate="yes" xml:space="preserve">
          <source>Show the text as is.</source>
          <target state="translated">按原样显示文本。</target>
        </trans-unit>
        <trans-unit id="45e992ad602584684c807ff6d3b437e31050c34d" translate="yes" xml:space="preserve">
          <source>Show unarised STG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ff03ed114fc78065d8eacccc0669031fb6bab0" translate="yes" xml:space="preserve">
          <source>Show1</source>
          <target state="translated">Show1</target>
        </trans-unit>
        <trans-unit id="d3cc2be9d2d10bc7b577435ab1fbe4b427d0047b" translate="yes" xml:space="preserve">
          <source>Show2</source>
          <target state="translated">Show2</target>
        </trans-unit>
        <trans-unit id="120ac7014d0d2d597e3d53430994b3b2374decd6" translate="yes" xml:space="preserve">
          <source>ShowS</source>
          <target state="translated">ShowS</target>
        </trans-unit>
        <trans-unit id="ba936cdd85da100a54393673071567edb3322323" translate="yes" xml:space="preserve">
          <source>ShowWindowControl</source>
          <target state="translated">ShowWindowControl</target>
        </trans-unit>
        <trans-unit id="163d8174ff4b0e67eec2f84dd87c1bb9e1da3b56" translate="yes" xml:space="preserve">
          <source>Showing</source>
          <target state="translated">Showing</target>
        </trans-unit>
        <trans-unit id="d518a310de1dd39d877eade8a197bc26d09255ea" translate="yes" xml:space="preserve">
          <source>Showing handle state (not portable: GHC only)</source>
          <target state="translated">显示手柄状态(不可移植:仅GHC)</target>
        </trans-unit>
        <trans-unit id="f391976f27b45e2222ab2b8077db82ced705b371" translate="yes" xml:space="preserve">
          <source>Shows a &lt;em&gt;non-negative&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; number using the base specified by the first argument, and the character representation specified by the second.</source>
          <target state="translated">使用第一个参数指定的基数和第二个参数指定的字符表示来显示&lt;em&gt;非负&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="052cc884d288956acfade3a9b77de2284678144f" translate="yes" xml:space="preserve">
          <source>Shows how to modify Reader content with &lt;code&gt;&lt;a href=&quot;control-monad-reader#v:local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">显示如何使用 &lt;code&gt;&lt;a href=&quot;control-monad-reader#v:local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; 修改Reader的内容。</target>
        </trans-unit>
        <trans-unit id="c5812cf0f14ba366eb8c3d7b9c7c7e98044bde57" translate="yes" xml:space="preserve">
          <source>Shrink mutable byte array to new specified size (in bytes), in the specified state thread. The new size argument must be less than or equal to the current size as reported by &lt;code&gt;sizeofMutableArray#&lt;/code&gt;.</source>
          <target state="translated">在指定状态线程中，将可变字节数组缩小为新的指定大小（以字节为单位）。新的size参数必须小于或等于 &lt;code&gt;sizeofMutableArray#&lt;/code&gt; 报告的当前大小。</target>
        </trans-unit>
        <trans-unit id="92b276ec3bcdf774d24b35d986ab30eb929cd4d9" translate="yes" xml:space="preserve">
          <source>Side note: the given performance bound is missing some messy terms that only really affect edge cases. Performance degrades smoothly from \( O(1) \) (for \( c = n \)) to \( O(n) \) (for \( c = 1 \)). The true bound is more like \( O \Bigl( \bigl(\frac{n}{c} - 1\bigr) (\log (c + 1)) + 1 \Bigr) \)</source>
          <target state="translated">附注:给定的性能约束缺少了一些乱七八糟的条款,而这些条款只影响边缘情况。性能从 \(O(1)\)(对于 \(c=n \))到 \(O(n)\)(对于 \(c=1 \))平滑地退化。真正的界线更像是(O \Bigl(\bigl(frac{n}{c}-1\bigr)(log (c+1))。+1 %)%)</target>
        </trans-unit>
        <trans-unit id="7bee6c65dcbca5aedde79f9f241234ee51b14d9e" translate="yes" xml:space="preserve">
          <source>SigChldInfo</source>
          <target state="translated">SigChldInfo</target>
        </trans-unit>
        <trans-unit id="6b4399d9583ca6e546dcf68dd0206536f7d46df1" translate="yes" xml:space="preserve">
          <source>Sign of a number. The functions &lt;code&gt;&lt;a href=&quot;ghc-num#v:abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-num#v:signum&quot;&gt;signum&lt;/a&gt;&lt;/code&gt; should satisfy the law:</source>
          <target state="translated">数字的符号。 &lt;code&gt;&lt;a href=&quot;ghc-num#v:abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-num#v:signum&quot;&gt;signum&lt;/a&gt;&lt;/code&gt; 函数应满足以下规则：</target>
        </trans-unit>
        <trans-unit id="8553aa30993045eb3e1c2102724a6deeb3be4c27" translate="yes" xml:space="preserve">
          <source>Sign of a number. The functions &lt;code&gt;&lt;a href=&quot;prelude#v:abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:signum&quot;&gt;signum&lt;/a&gt;&lt;/code&gt; should satisfy the law:</source>
          <target state="translated">数字的符号。 &lt;code&gt;&lt;a href=&quot;prelude#v:abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;prelude#v:signum&quot;&gt;signum&lt;/a&gt;&lt;/code&gt; 函数应满足以下规则：</target>
        </trans-unit>
        <trans-unit id="0466eed806bc3457c20fac70f46de4f930e80c3f" translate="yes" xml:space="preserve">
          <source>SignPlus</source>
          <target state="translated">SignPlus</target>
        </trans-unit>
        <trans-unit id="bbde2edb0df57d1da64ca238b03cd065ed3acfd5" translate="yes" xml:space="preserve">
          <source>SignSpace</source>
          <target state="translated">SignSpace</target>
        </trans-unit>
        <trans-unit id="27bed13a88c60350c3de92ec3820e1cc4f7d6ec3" translate="yes" xml:space="preserve">
          <source>Signal</source>
          <target state="translated">Signal</target>
        </trans-unit>
        <trans-unit id="a92d8a22678d1ed93d3ed9de1a9610c7120b9ecd" translate="yes" xml:space="preserve">
          <source>Signal a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; (aka &lt;strong&gt;V&lt;/strong&gt; operation).</source>
          <target state="translated">发出 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#t:TSem&quot;&gt;TSem&lt;/a&gt;&lt;/code&gt; 信号（又称&lt;strong&gt;V&lt;/strong&gt;操作）。</target>
        </trans-unit>
        <trans-unit id="7faf1744de6593083507c993ee402428da616138" translate="yes" xml:space="preserve">
          <source>Signal an error value &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="translated">发出错误值 &lt;code&gt;e&lt;/code&gt; 的信号。</target>
        </trans-unit>
        <trans-unit id="0ab0be7390844491a378148aa0a0ec27a51e7fd3" translate="yes" xml:space="preserve">
          <source>Signal an exception value &lt;code&gt;e&lt;/code&gt;.</source>
          <target state="translated">发出异常值 &lt;code&gt;e&lt;/code&gt; 的信号。</target>
        </trans-unit>
        <trans-unit id="43dcfb7f770264df5121067ff7e41f7762b823ad" translate="yes" xml:space="preserve">
          <source>Signal sets</source>
          <target state="translated">信号组</target>
        </trans-unit>
        <trans-unit id="6e2b0250c7c005748eaa4ac67266b3f863754cec" translate="yes" xml:space="preserve">
          <source>Signal that a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; chunk should be inserted directly.</source>
          <target state="translated">指示应直接插入 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 块。</target>
        </trans-unit>
        <trans-unit id="ba54c581a3f441c65c92e2baee812d0da04ee381" translate="yes" xml:space="preserve">
          <source>Signal that a given quantity is now available from the &lt;code&gt;&lt;a href=&quot;control-concurrent-qsemn#t:QSemN&quot;&gt;QSemN&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;control-concurrent-qsemn#t:QSemN&quot;&gt;QSemN&lt;/a&gt;&lt;/code&gt; 发出给定数量的信号。</target>
        </trans-unit>
        <trans-unit id="87a1485810fd26f94cc9f0ff238a3ba2bfc6f646" translate="yes" xml:space="preserve">
          <source>Signal that a unit of the &lt;code&gt;&lt;a href=&quot;control-concurrent-qsem#t:QSem&quot;&gt;QSem&lt;/a&gt;&lt;/code&gt; is available</source>
          <target state="translated">发出一个可用的 &lt;code&gt;&lt;a href=&quot;control-concurrent-qsem#t:QSem&quot;&gt;QSem&lt;/a&gt;&lt;/code&gt; 信号</target>
        </trans-unit>
        <trans-unit id="d05d125580c039448902d54c1d68c6ed10aab430" translate="yes" xml:space="preserve">
          <source>Signal that the current &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; is done and has computed a value.</source>
          <target state="translated">表示当前 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BuildStep&quot;&gt;BuildStep&lt;/a&gt;&lt;/code&gt; 已完成并已计算出值。</target>
        </trans-unit>
        <trans-unit id="b25333c40d4e76fdfd2b926091d37059f28e4458" translate="yes" xml:space="preserve">
          <source>Signal that the current buffer is full.</source>
          <target state="translated">当前缓冲区已满的信号。</target>
        </trans-unit>
        <trans-unit id="bda1defb0bfaa6f6f05508c2913b7399ffccc4a9" translate="yes" xml:space="preserve">
          <source>SignalInfo</source>
          <target state="translated">SignalInfo</target>
        </trans-unit>
        <trans-unit id="1f55553112777d173b17ae22b112315b87d8850d" translate="yes" xml:space="preserve">
          <source>SignalSet</source>
          <target state="translated">SignalSet</target>
        </trans-unit>
        <trans-unit id="b915c6d49b21a224f21cc001eaea59c0a767a9cd" translate="yes" xml:space="preserve">
          <source>SignalSpecificInfo</source>
          <target state="translated">SignalSpecificInfo</target>
        </trans-unit>
        <trans-unit id="ccb47cd46d649568155cc014dfdf759a79c80d54" translate="yes" xml:space="preserve">
          <source>Signature of the &lt;code&gt;callCC&lt;/code&gt; operation, introduced in &lt;a href=&quot;control-monad-trans-cont&quot;&gt;Control.Monad.Trans.Cont&lt;/a&gt;. Any lifting function &lt;code&gt;liftCallCC&lt;/code&gt; should satisfy</source>
          <target state="translated">&lt;code&gt;callCC&lt;/code&gt; 操作的签名，在&lt;a href=&quot;control-monad-trans-cont&quot;&gt;Control.Monad.Trans.Cont中&lt;/a&gt;引入。任何提升功能 &lt;code&gt;liftCallCC&lt;/code&gt; 应该满足</target>
        </trans-unit>
        <trans-unit id="dc072b7ced69fef99c753d561d3b128bff762047" translate="yes" xml:space="preserve">
          <source>Signature of the &lt;code&gt;catchE&lt;/code&gt; operation, introduced in &lt;a href=&quot;control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except&lt;/a&gt;. Any lifting function &lt;code&gt;liftCatch&lt;/code&gt; should satisfy</source>
          <target state="translated">在&lt;a href=&quot;control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except中&lt;/a&gt;引入的 &lt;code&gt;catchE&lt;/code&gt; 操作的签名。任何提升功能 &lt;code&gt;liftCatch&lt;/code&gt; 应该满足</target>
        </trans-unit>
        <trans-unit id="06ced7472a7d98b2992e44e905e9851d04e1f27c" translate="yes" xml:space="preserve">
          <source>Signature of the &lt;code&gt;listen&lt;/code&gt; operation, introduced in &lt;a href=&quot;control-monad-trans-writer&quot;&gt;Control.Monad.Trans.Writer&lt;/a&gt;. Any lifting function &lt;code&gt;liftListen&lt;/code&gt; should satisfy</source>
          <target state="translated">&lt;code&gt;listen&lt;/code&gt; 操作的签名，在&lt;a href=&quot;control-monad-trans-writer&quot;&gt;Control.Monad.Trans.Writer中&lt;/a&gt;引入。任何提升功能 &lt;code&gt;liftListen&lt;/code&gt; 应该满足</target>
        </trans-unit>
        <trans-unit id="471a6524bc858a0af7e9c23b213e515b816b6af8" translate="yes" xml:space="preserve">
          <source>Signature of the &lt;code&gt;pass&lt;/code&gt; operation, introduced in &lt;a href=&quot;control-monad-trans-writer&quot;&gt;Control.Monad.Trans.Writer&lt;/a&gt;. Any lifting function &lt;code&gt;liftPass&lt;/code&gt; should satisfy</source>
          <target state="translated">&lt;code&gt;pass&lt;/code&gt; 操作的签名，在&lt;a href=&quot;control-monad-trans-writer&quot;&gt;Control.Monad.Trans.Writer中&lt;/a&gt;引入。任何起重功能 &lt;code&gt;liftPass&lt;/code&gt; 应该满足</target>
        </trans-unit>
        <trans-unit id="b6d3726f623c40a8cabcc16cb52ff7c79549a1d8" translate="yes" xml:space="preserve">
          <source>Signatures are the basic trick; putting them on exported, top-level functions is good software-engineering practice, anyway. (Tip: using the &lt;a href=&quot;using-warnings#ghc-flag--Wmissing-signatures&quot;&gt;&lt;code&gt;-Wmissing-signatures&lt;/code&gt;&lt;/a&gt; option can help enforce good signature-practice).</source>
          <target state="translated">签名是基本技巧。无论如何，将它们放在导出的顶级功能上是一种很好的软件工程实践。（提示：使用&lt;a href=&quot;using-warnings#ghc-flag--Wmissing-signatures&quot;&gt; &lt;code&gt;-Wmissing-signatures&lt;/code&gt; &lt;/a&gt;选项可以帮助强制执行良好的签名实践）。</target>
        </trans-unit>
        <trans-unit id="bd4dc91b9095e590c4c59400be8d1e0092a3123d" translate="yes" xml:space="preserve">
          <source>Signatures for monad operations that require specialized lifting. Each signature has a uniformity property that the lifting should satisfy.</source>
          <target state="translated">对需要专门提升的单体操作的签名。每个签名都有一个统一性的属性,解除应该满足。</target>
        </trans-unit>
        <trans-unit id="c8655a56d33a88ccca3424a80c2615a1309c9dd5" translate="yes" xml:space="preserve">
          <source>Signed integer types</source>
          <target state="translated">有符号的整数类型</target>
        </trans-unit>
        <trans-unit id="bc8f7713be6f647392fbe5ee79a3aa6f63e743ad" translate="yes" xml:space="preserve">
          <source>Similar restrictions apply on import.</source>
          <target state="translated">对进口也有类似的限制。</target>
        </trans-unit>
        <trans-unit id="8bc3ab3ec0d3f059d92afcca7a240673aeb581b4" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;#include&lt;/code&gt;. Note that &lt;code&gt;#includes&lt;/code&gt; and &lt;code&gt;#defines&lt;/code&gt; may be put in the same file twice so they should not assume otherwise.</source>
          <target state="translated">与 &lt;code&gt;#include&lt;/code&gt; 相似。请注意， &lt;code&gt;#includes&lt;/code&gt; &lt;code&gt;#defines&lt;/code&gt; 和#defines可能两次放置在同一文件中，因此不应假定它们不同。</target>
        </trans-unit>
        <trans-unit id="f8b7c34ef6b3ef4b139d142b36f5ca52bb618fdd" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../filepath-1.4.2.1/system-filepath#v:normalise&quot;&gt;normalise&lt;/a&gt;&lt;/code&gt;, passing an empty path is equivalent to passing the current directory.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;../filepath-1.4.2.1/system-filepath#v:normalise&quot;&gt;normalise&lt;/a&gt;&lt;/code&gt; 相似，传递空路径等效于传递当前目录。</target>
        </trans-unit>
        <trans-unit id="27ef37da227875b38c1dff73e9e1be77cc836490" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../filepath-1.4.2.1/system-filepath-posix#v:normalise&quot;&gt;normalise&lt;/a&gt;&lt;/code&gt; but empty paths stay empty.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;../filepath-1.4.2.1/system-filepath-posix#v:normalise&quot;&gt;normalise&lt;/a&gt;&lt;/code&gt; 相似，但空路径保持为空。</target>
        </trans-unit>
        <trans-unit id="6e0ed3ab56de8039cd55c5a996d69854f97e5b41" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;../filepath-1.4.2.1/system-filepath-posix#v:normalise&quot;&gt;normalise&lt;/a&gt;&lt;/code&gt; but:</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;../filepath-1.4.2.1/system-filepath-posix#v:normalise&quot;&gt;normalise&lt;/a&gt;&lt;/code&gt; 相似，但：</target>
        </trans-unit>
        <trans-unit id="542f31f014f92fc9ae9375f7fa3f84eba434a89d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;, but returns an &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; result which is &lt;code&gt;(&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt; a)&lt;/code&gt; if no exception of type &lt;code&gt;e&lt;/code&gt; was raised, or &lt;code&gt;(&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt; ex)&lt;/code&gt; if an exception of type &lt;code&gt;e&lt;/code&gt; was raised and its value is &lt;code&gt;ex&lt;/code&gt;. If any other type of exception is raised than it will be propogated up to the next enclosing exception handler.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; 类似，但返回 &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 结果，如果没有引发类型 &lt;code&gt;e&lt;/code&gt; 的异常，则为 &lt;code&gt;(&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt; a)&lt;/code&gt; ，或者如果引发类型 &lt;code&gt;e&lt;/code&gt; 的异常且其值为 &lt;code&gt;ex&lt;/code&gt; ,则为 &lt;code&gt;(&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt; ex)&lt;/code&gt; &lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt; ex）。如果引发了任何其他类型的异常，则它将传播到下一个封闭的异常处理程序。</target>
        </trans-unit>
        <trans-unit id="4f9cc64c05ae9436759ac2ecebecd00d3e18f356" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;data-bytestring#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; except that it will never block. Instead it returns any tail that did not get written. This tail may be &lt;code&gt;&lt;a href=&quot;data-bytestring#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; in the case that the whole string was written, or the whole original string if nothing was written. Partial writes are also possible.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; 类似，除了它永远不会阻塞。相反，它将返回任何未写入的尾巴。在写入整个字符串的情况下，该尾部可能为 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; ，或者在未写入任何内容的情况下，整个原始字符串为空。部分写入也是可能的。</target>
        </trans-unit>
        <trans-unit id="10e97da418a5d2e3bf30cb52703ec9c3b35b2eb0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; except that it will never block. Instead it returns any tail that did not get written. This tail may be &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; in the case that the whole string was written, or the whole original string if nothing was written. Partial writes are also possible.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; 类似，除了它永远不会阻塞。相反，它将返回任何未写入的尾巴。在写入整个字符串的情况下，该尾部可能为 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; ，或者在未写入任何内容的情况下，整个原始字符串为空。部分写入也是可能的。</target>
        </trans-unit>
        <trans-unit id="baa221a6563e815403c24a3304f99b1901e309ba" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; except that it will never block. Instead it returns any tail that did not get written. This tail may be &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; in the case that the whole string was written, or the whole original string if nothing was written. Partial writes are also possible.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; 类似，除了它永远不会阻塞。相反，它将返回任何未写入的尾巴。在写入整个字符串的情况下，该尾部可能为 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; ，或者在未写入任何内容的情况下，整个原始字符串为空。部分写入也是可能的。</target>
        </trans-unit>
        <trans-unit id="2d8a8c139d044bfc97649150358b7d46c85a7c02" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; except that it will never block. Instead it returns any tail that did not get written. This tail may be &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; in the case that the whole string was written, or the whole original string if nothing was written. Partial writes are also possible.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; 类似，除了它永远不会阻塞。相反，它将返回任何未写入的尾巴。在写入整个字符串的情况下，该尾部可能为 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; ，或者在未写入任何内容的情况下，整个原始字符串为空。部分写入也是可能的。</target>
        </trans-unit>
        <trans-unit id="b6812700ce6836af8ea820cf5a8f555d5a5fdeaa" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;system-directory#v:getXdgDirectory&quot;&gt;getXdgDirectory&lt;/a&gt;&lt;/code&gt; but retrieves the entire list of XDG directories.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;system-directory#v:getXdgDirectory&quot;&gt;getXdgDirectory&lt;/a&gt;&lt;/code&gt; 类似，但是检索XDG目录的整个列表。</target>
        </trans-unit>
        <trans-unit id="57e43ed99c85f1b0d39406105fc8f61e36899564" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;system-directory#v:listDirectory&quot;&gt;listDirectory&lt;/a&gt;&lt;/code&gt;, but always includes the special entries (&lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt;). (This applies to Windows as well.)</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;system-directory#v:listDirectory&quot;&gt;listDirectory&lt;/a&gt;&lt;/code&gt; 类似，但始终包含特殊条目（ &lt;code&gt;.&lt;/code&gt; 和 &lt;code&gt;..&lt;/code&gt; ）。（这也适用于Windows。）</target>
        </trans-unit>
        <trans-unit id="660dc82ff3b0b468cc9930547529586e8470e00e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;, but returns an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; result which is &lt;code&gt;(&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt; a)&lt;/code&gt; if no exception of type &lt;code&gt;e&lt;/code&gt; was raised, or &lt;code&gt;(&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt; ex)&lt;/code&gt; if an exception of type &lt;code&gt;e&lt;/code&gt; was raised and its value is &lt;code&gt;ex&lt;/code&gt;. If any other type of exception is raised than it will be propogated up to the next enclosing exception handler.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; 类似，但返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 结果，如果没有引发类型 &lt;code&gt;e&lt;/code&gt; 的异常，则为 &lt;code&gt;(&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt; a)&lt;/code&gt; ，或者如果引发类型 &lt;code&gt;e&lt;/code&gt; 的异常且其值为 &lt;code&gt;ex&lt;/code&gt; ,则为 &lt;code&gt;(&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt; ex)&lt;/code&gt; &lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt; ex）。如果引发了任何其他类型的异常，则它将传播到下一个封闭的异常处理程序。</target>
        </trans-unit>
        <trans-unit id="3589f418a0ca3d773922bd7ac92e0b76a5d98393" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;, but returns an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; result which is &lt;code&gt;(&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt; a)&lt;/code&gt; if no exception of type &lt;code&gt;e&lt;/code&gt; was raised, or &lt;code&gt;(&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt; ex)&lt;/code&gt; if an exception of type &lt;code&gt;e&lt;/code&gt; was raised and its value is &lt;code&gt;ex&lt;/code&gt;. If any other type of exception is raised than it will be propogated up to the next enclosing exception handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e03b9a7a228a53dbb39e14a73fe6f20f226d8b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; but only catches a specify kind of &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; as specified by the predicate.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:try&quot;&gt;try&lt;/a&gt;&lt;/code&gt; 类似，但仅捕获谓词指定的指定类型的 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6316de3946f0281c76f7f074401dd37726631f7b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;system-environment#v:lookupEnv&quot;&gt;lookupEnv&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">类似于 &lt;code&gt;&lt;a href=&quot;system-environment#v:lookupEnv&quot;&gt;lookupEnv&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4978e69224854cb1188b7b6a6a5fd8277344aa82" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;text-printf#v:printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt;, except that output is via the specified &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The return type is restricted to &lt;code&gt;(&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a)&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;text-printf#v:printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 相似，除了输出是通过指定的 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 。返回类型仅限于 &lt;code&gt;(&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="229ca7cf384e50c25f3b1100a99987d2dacc4e24" translate="yes" xml:space="preserve">
          <source>Similar to a package&amp;rsquo;s hidden status is a package&amp;rsquo;s trusted status. A package can be either trusted or not trusted (distrusted). By default packages are distrusted. This property of a package only plays a role when compiling code using GHC&amp;rsquo;s Safe Haskell feature (see &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt;) with the &lt;code&gt;-fpackage-trust&lt;/code&gt; flag enabled.</source>
          <target state="translated">与程序包的隐藏状态相似，是程序包的受信任状态。程序包可以是受信任的，也可以是不受信任的（不信任的）。默认情况下，不信任软件包。仅当使用启用了 &lt;code&gt;-fpackage-trust&lt;/code&gt; 标志的GHC的Safe Haskell功能（请参见&lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt;）编译代码时，程序包的此属性才起作用。</target>
        </trans-unit>
        <trans-unit id="9fea15c634779ed02f2440e6b6a59fcff27bc989" translate="yes" xml:space="preserve">
          <source>Similar warnings are given for a redundant constraint in an instance declaration.</source>
          <target state="translated">对于实例声明中的冗余约束也会给出类似的警告。</target>
        </trans-unit>
        <trans-unit id="0df5b62317eeac762d6d8de8ded61c204a2aa13c" translate="yes" xml:space="preserve">
          <source>Similarly</source>
          <target state="translated">Similarly</target>
        </trans-unit>
        <trans-unit id="4e756760c448cbb0ee811c4780b862558ba85c10" translate="yes" xml:space="preserve">
          <source>Similarly for &lt;code&gt;&lt;em&gt;mb_stdout_hdl&lt;/em&gt;&lt;/code&gt; and &lt;code&gt;&lt;em&gt;mb_stderr_hdl&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">对于 &lt;code&gt;&lt;em&gt;mb_stdout_hdl&lt;/em&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;em&gt;mb_stderr_hdl&lt;/em&gt;&lt;/code&gt; 同样。</target>
        </trans-unit>
        <trans-unit id="53f860fbf15691abee95cb74212d38c8ffab7717" translate="yes" xml:space="preserve">
          <source>Similarly for poke. It will have the type &lt;code&gt;Storable b =&amp;gt; Ptr a -&amp;gt; b -&amp;gt; IO ()&lt;/code&gt;.</source>
          <target state="translated">戳也一样。它将具有类型 &lt;code&gt;Storable b =&amp;gt; Ptr a -&amp;gt; b -&amp;gt; IO ()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f5da1209277a14bc9b96e35323cc3bfe53d401e" translate="yes" xml:space="preserve">
          <source>Similarly, concrete representations of versions may differ. One possible concrete representation is provided (see &lt;code&gt;&lt;a href=&quot;data-version#v:showVersion&quot;&gt;showVersion&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-version#v:parseVersion&quot;&gt;parseVersion&lt;/a&gt;&lt;/code&gt;), but depending on the application a different concrete representation may be more appropriate.</source>
          <target state="translated">同样，版本的具体表示形式可能有所不同。提供了一种可能的具体表示形式（请参阅 &lt;code&gt;&lt;a href=&quot;data-version#v:showVersion&quot;&gt;showVersion&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-version#v:parseVersion&quot;&gt;parseVersion&lt;/a&gt;&lt;/code&gt; ），但是根据应用程序，不同的具体表示形式可能更合适。</target>
        </trans-unit>
        <trans-unit id="7782df4729eeb27c498e54c2f81044f0eb23e82f" translate="yes" xml:space="preserve">
          <source>Similarly, each flag could yield a monadic function transforming a record, of type &lt;code&gt;Options -&amp;gt; IO Options&lt;/code&gt; (or any other monad), allowing option processing to perform actions of the chosen monad, e.g. printing help or version messages, checking that file arguments exist, etc.</source>
          <target state="translated">同样，每个标志都可以产生一个Monadic函数，用于转换 &lt;code&gt;Options -&amp;gt; IO Options&lt;/code&gt; （或任何其他monad）类型的记录，从而允许选项处理执行所选monad的操作，例如打印帮助或版本消息，检查文件参数是否存在等</target>
        </trans-unit>
        <trans-unit id="768dfc93fe4b6e2bceaced605fb9acafb22e0030" translate="yes" xml:space="preserve">
          <source>Similarly, in Figure 4 of &lt;a href=&quot;http://www.haskell.org/onlinereport/exps.html#sect3.17.3&quot;&gt;Section 3.17.3&lt;/a&gt;, add a new case (t):</source>
          <target state="translated">类似地，在&lt;a href=&quot;http://www.haskell.org/onlinereport/exps.html#sect3.17.3&quot;&gt;第3.17.3节的&lt;/a&gt;图4中，添加一个新案例（t）：</target>
        </trans-unit>
        <trans-unit id="9738cd7cc2cfc10ef5ab5d5dc58012a0d3fbddd3" translate="yes" xml:space="preserve">
          <source>Similarly, input occurs according to the buffer mode for the handle:</source>
          <target state="translated">同样,根据手柄的缓冲模式发生输入。</target>
        </trans-unit>
        <trans-unit id="a384949695264094d00fd92a67c38d622f44b64a" translate="yes" xml:space="preserve">
          <source>Similarly, it can be tempting to lift the coverage condition:</source>
          <target state="translated">同样,它可以诱惹解除覆盖条件。</target>
        </trans-unit>
        <trans-unit id="a1151457996c266f72946b1cc825a568fcae806b" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;code&gt;-hisuf&lt;/code&gt; ⟨suffix⟩ will change the &lt;code&gt;.hi&lt;/code&gt; file suffix for non-system interface files (see &lt;a href=&quot;#hi-options&quot;&gt;Other options related to interface files&lt;/a&gt;).</source>
          <target state="translated">同样， &lt;code&gt;-hisuf&lt;/code&gt; ⟨后缀⟨将更改非系统接口文件的 &lt;code&gt;.hi&lt;/code&gt; 文件后缀（请参阅&lt;a href=&quot;#hi-options&quot;&gt;与接口文件有关的其他选项&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="a31cbc061be5476938866cdeb9d50441154b14fb" translate="yes" xml:space="preserve">
          <source>Similarly, using O(n) concatentations like &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:-43--43-&quot;&gt;++&lt;/a&gt;&lt;/code&gt; or the equivalent &lt;code&gt;&lt;a href=&quot;data-bytestring#v:concat&quot;&gt;concat&lt;/a&gt;&lt;/code&gt; operations on strict and lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s should be avoided. The following definition of &lt;code&gt;renderString&lt;/code&gt; is also about 20% slower.</source>
          <target state="translated">同样，应避免在 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 上使用诸如 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-list#v:-43--43-&quot;&gt;++&lt;/a&gt;&lt;/code&gt; 的 O（n）修饰语或等效的 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:concat&quot;&gt;concat&lt;/a&gt;&lt;/code&gt; 操作。下面的 &lt;code&gt;renderString&lt;/code&gt; 定义也慢了大约20％。</target>
        </trans-unit>
        <trans-unit id="3b3d5692e3f8e1c6861143c86ccc4967a6b6045a" translate="yes" xml:space="preserve">
          <source>Similarly, using O(n) concatentations like &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-list#v:-43--43-&quot;&gt;++&lt;/a&gt;&lt;/code&gt; or the equivalent &lt;code&gt;&lt;a href=&quot;data-bytestring#v:concat&quot;&gt;concat&lt;/a&gt;&lt;/code&gt; operations on strict and lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;s should be avoided. The following definition of &lt;code&gt;renderString&lt;/code&gt; is also about 20% slower.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4471b41263ad9adf6f85b55da954e429b3ab7e0" translate="yes" xml:space="preserve">
          <source>Similarly, when the type has no constructors, &lt;a href=&quot;#extension-DeriveFoldable&quot;&gt;&lt;code&gt;DeriveFoldable&lt;/code&gt;&lt;/a&gt; will derive a trivial instance:</source>
          <target state="translated">同样，当类型没有构造函数时，&lt;a href=&quot;#extension-DeriveFoldable&quot;&gt; &lt;code&gt;DeriveFoldable&lt;/code&gt; &lt;/a&gt;将派生一个琐碎的实例：</target>
        </trans-unit>
        <trans-unit id="6d83e6781648d3ac1c0f099889b20ba000688ff5" translate="yes" xml:space="preserve">
          <source>Simon Marlow</source>
          <target state="translated">Simon Marlow</target>
        </trans-unit>
        <trans-unit id="721761d7c3527b2927215d48b5e79269e734f403" translate="yes" xml:space="preserve">
          <source>Simon Meier &amp;lt;iridcode@gmail.com&amp;gt;</source>
          <target state="translated">Simon Meier &amp;lt;iridcode@gmail.com&amp;gt;</target>
        </trans-unit>
        <trans-unit id="97c728edb7e33dd04fbb272a56799d9470e77207" translate="yes" xml:space="preserve">
          <source>Simon Peyton-Jones, Stephanie Weirich, Richard Eisenberg, Dimitrios Vytiniotis. &quot;A reflection on types.&quot; &lt;em&gt;Proc. Philip Wadler's 60th birthday Festschrift&lt;/em&gt;, Edinburgh (April 2016).</source>
          <target state="translated">西蒙&amp;middot;佩顿&amp;middot;琼斯（Simon Peyton-Jones），斯蒂芬妮&amp;middot;韦里奇（Stephanie Weirich），理查德&amp;middot;艾森伯格（Richard Eisenberg），迪米特里奥斯&amp;middot;维蒂尼奥蒂斯（Dimitrios Vytiniotis）。&amp;ldquo;对类型的反思。&amp;rdquo; &lt;em&gt;进程 菲利普&amp;middot;瓦德勒（Philip Wadler）诞辰60周年&lt;/em&gt;，爱丁堡（2016年4月）。</target>
        </trans-unit>
        <trans-unit id="39c57c12c9385683e8d20ca175b57599de663434" translate="yes" xml:space="preserve">
          <source>Simple I/O operations</source>
          <target state="translated">简单的I/O操作</target>
        </trans-unit>
        <trans-unit id="a0aafc5a010624cf1ad90350d8ff2615301d7859" translate="yes" xml:space="preserve">
          <source>Simple Quantity Semaphores</source>
          <target state="translated">简单数量语词</target>
        </trans-unit>
        <trans-unit id="1899b459ab13441c4fd4ea79a247337d46148ed6" translate="yes" xml:space="preserve">
          <source>Simple combinators working solely on and with functions.</source>
          <target state="translated">简单的组合器,只在函数上工作,并与函数一起工作。</target>
        </trans-unit>
        <trans-unit id="76e406312f1df07ec4f3170cd189cbcdf66d018a" translate="yes" xml:space="preserve">
          <source>Simple derived documents</source>
          <target state="translated">简单派生文件</target>
        </trans-unit>
        <trans-unit id="2da50aac11d8ca66848914b700c0c9f47ee24b9b" translate="yes" xml:space="preserve">
          <source>Simple merge tactic types</source>
          <target state="translated">简单的合并战术类型</target>
        </trans-unit>
        <trans-unit id="4b663b14df3db19e6ed77f56627396751ae261df" translate="yes" xml:space="preserve">
          <source>Simple quantity semaphores.</source>
          <target state="translated">简单的量词。</target>
        </trans-unit>
        <trans-unit id="4bd9201363f4d432c251e62333c10bccfdc5b9a8" translate="yes" xml:space="preserve">
          <source>SimpleWhenMatched</source>
          <target state="translated">SimpleWhenMatched</target>
        </trans-unit>
        <trans-unit id="0b4d04feabdb3d3c68c1b995d43123f1d6afcd02" translate="yes" xml:space="preserve">
          <source>SimpleWhenMissing</source>
          <target state="translated">SimpleWhenMissing</target>
        </trans-unit>
        <trans-unit id="26d9f8d71695eefd9fa7c2f4080c6bc04cc76eaf" translate="yes" xml:space="preserve">
          <source>Simpler functions for common tasks</source>
          <target state="translated">普通任务的简单功能</target>
        </trans-unit>
        <trans-unit id="f3d640053c2f3d3e8a62efc1770b31a346cee466" translate="yes" xml:space="preserve">
          <source>Simultaneous &lt;code&gt;&lt;a href=&quot;ghc-integer#v:divInteger&quot;&gt;divInteger&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-integer#v:modInteger&quot;&gt;modInteger&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同时 &lt;code&gt;&lt;a href=&quot;ghc-integer#v:divInteger&quot;&gt;divInteger&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-integer#v:modInteger&quot;&gt;modInteger&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="416d98e04e3b99a9d17328e9604e9b66fe809537" translate="yes" xml:space="preserve">
          <source>Simultaneous &lt;code&gt;&lt;a href=&quot;ghc-integer#v:quotInteger&quot;&gt;quotInteger&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-integer#v:remInteger&quot;&gt;remInteger&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同时 &lt;code&gt;&lt;a href=&quot;ghc-integer#v:quotInteger&quot;&gt;quotInteger&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-integer#v:remInteger&quot;&gt;remInteger&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22a4ed66c623d273a571652cc9ae1a89577a837f" translate="yes" xml:space="preserve">
          <source>Since</source>
          <target state="translated">Since</target>
        </trans-unit>
        <trans-unit id="365db0b84c6c56e50d57eaa31442e0adccc0ee99" translate="yes" xml:space="preserve">
          <source>Since 4.11.0: constraint on inner &lt;code&gt;a&lt;/code&gt; value generalised from &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由于4.11.0：在内部约束 &lt;code&gt;a&lt;/code&gt; 从广义价值 &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; ，以 &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c4dc6b036482694efeee84ef35143665b8251d30" translate="yes" xml:space="preserve">
          <source>Since 4.11.0: constraint on inner &lt;code&gt;a&lt;/code&gt; value generalised from &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由于4.11.0：在内部约束 &lt;code&gt;a&lt;/code&gt; 从广义价值 &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; ，以 &lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07a471c12b48b3ce26cb82c74a832505c52ccbf6" translate="yes" xml:space="preserve">
          <source>Since 4.11.0: constraint on inner &lt;code&gt;a&lt;/code&gt; value generalised from &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由于4.11.0：在内部约束 &lt;code&gt;a&lt;/code&gt; 从广义价值 &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; ，以 &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed2b907ebe5eec7331c3d7d4f6126de4e2f3c06e" translate="yes" xml:space="preserve">
          <source>Since 4.11.0: constraint on inner &lt;code&gt;a&lt;/code&gt; value generalised from &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">由于4.11.0：在内部约束 &lt;code&gt;a&lt;/code&gt; 从广义价值 &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; ，以 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b187a998801b69c5b9c858285eff5f8f21513a70" translate="yes" xml:space="preserve">
          <source>Since 4.11.0: constraint on inner &lt;code&gt;a&lt;/code&gt; value generalised from &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e413035bd22b86d9449ed318f5a887751f8b8247" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;&lt;a href=&quot;data-void#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; values logically don't exist, this witnesses the logical reasoning tool of &quot;ex falso quodlibet&quot;.</source>
          <target state="translated">由于 &lt;code&gt;&lt;a href=&quot;data-void#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; 值在逻辑上不存在，因此可以见证&amp;ldquo; ex falso quodlibet&amp;rdquo;的逻辑推理工具。</target>
        </trans-unit>
        <trans-unit id="742e2e4b092f77ac9992fb604d64e442d66cd19b" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;f&lt;/code&gt;&amp;lsquo;s right-hand side is small, it is inlined into &lt;code&gt;g&lt;/code&gt;, to give</source>
          <target state="translated">由于 &lt;code&gt;f&lt;/code&gt; 的右侧较小，因此将其内联到 &lt;code&gt;g&lt;/code&gt; 中，得到</target>
        </trans-unit>
        <trans-unit id="b42b0c7564570daa7bbb542fd1a945ed985de016" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;f&lt;/code&gt;&amp;rsquo;s right-hand side is small, it is inlined into &lt;code&gt;g&lt;/code&gt;, to give</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc601fa89674ba7a70b8f9b3885146266611a172" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;g&lt;/code&gt; has a polymorphic type, it must have a type signature.</source>
          <target state="translated">由于 &lt;code&gt;g&lt;/code&gt; 具有多态类型，因此它必须具有类型签名。</target>
        </trans-unit>
        <trans-unit id="f935060d8a8aa8a42d5b0b0006916a1dc6743811" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;xs&lt;/code&gt; is used twice, GHC does not fire the foldr/build rule. Rightly so, because it might take a lot of work to compute &lt;code&gt;xs&lt;/code&gt;, which would be duplicated if the rule fired.</source>
          <target state="translated">由于 &lt;code&gt;xs&lt;/code&gt; 被使用了两次，因此GHC不会触发文件夹/构建规则。没错，因为计算 &lt;code&gt;xs&lt;/code&gt; 可能要花很多工作，如果触发规则，这将被重复。</target>
        </trans-unit>
        <trans-unit id="e030b36993167c6a650b53e7ddf9b917012e5ada" translate="yes" xml:space="preserve">
          <source>Since GHC 7.6.1, GHCi prints the result of expressions typed at the prompt using the function &lt;code&gt;System.IO.print&lt;/code&gt;. Its type signature is &lt;code&gt;Show a =&amp;gt; a -&amp;gt;
IO ()&lt;/code&gt;, and it works by converting the value to &lt;code&gt;String&lt;/code&gt; using &lt;code&gt;show&lt;/code&gt;.</source>
          <target state="translated">从GHC 7.6.1开始，GHCi使用 &lt;code&gt;System.IO.print&lt;/code&gt; 函数打印在提示符下键入的表达式的结果。它的类型签名是 &lt;code&gt;Show a =&amp;gt; a -&amp;gt; IO ()&lt;/code&gt; ，它通过使用 &lt;code&gt;show&lt;/code&gt; 将值转换为 &lt;code&gt;String&lt;/code&gt; 来工作。</target>
        </trans-unit>
        <trans-unit id="bd3de9296edafefe93b1d0ef0e92bf1198bbce4d" translate="yes" xml:space="preserve">
          <source>Since GHC 7.8, &lt;code&gt;&lt;a href=&quot;data-typeable#t:Typeable&quot;&gt;Typeable&lt;/a&gt;&lt;/code&gt; is poly-kinded. The changes required for this might break some old programs involving &lt;code&gt;&lt;a href=&quot;data-typeable#t:Typeable&quot;&gt;Typeable&lt;/a&gt;&lt;/code&gt;. More details on this, including how to fix your code, can be found on the &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/GhcKinds/PolyTypeable&quot;&gt;PolyTypeable wiki page&lt;/a&gt;</source>
          <target state="translated">从GHC 7.8开始， &lt;code&gt;&lt;a href=&quot;data-typeable#t:Typeable&quot;&gt;Typeable&lt;/a&gt;&lt;/code&gt; 是多类型的。为此所需的更改可能会破坏一些涉及 &lt;code&gt;&lt;a href=&quot;data-typeable#t:Typeable&quot;&gt;Typeable&lt;/a&gt;&lt;/code&gt; 的旧程序。可在&lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/GhcKinds/PolyTypeable&quot;&gt;PolyTypeable Wiki页面&lt;/a&gt;上找到有关此问题的更多详细信息，包括如何修复代码。</target>
        </trans-unit>
        <trans-unit id="a1efcdcdfe9f24dfcac0c8281223316bf6fbd5ce" translate="yes" xml:space="preserve">
          <source>Since GHC 8.0 declarations such as &lt;code&gt;MkSwizzle'&lt;/code&gt; will cause an out-of-scope error.</source>
          <target state="translated">由于GHC 8.0声明（例如 &lt;code&gt;MkSwizzle'&lt;/code&gt; )将导致范围外错误。</target>
        </trans-unit>
        <trans-unit id="46c019fb065bf32f08d475f7477d99f7ad55034c" translate="yes" xml:space="preserve">
          <source>Since GHC 8.0.1, you can bind values and functions to names without &lt;code&gt;let&lt;/code&gt; statement:</source>
          <target state="translated">从GHC 8.0.1开始，您可以将值和函数绑定到名称，而无需 &lt;code&gt;let&lt;/code&gt; 语句：</target>
        </trans-unit>
        <trans-unit id="8db6b22a338c6ccc9b864915896215b8f369833d" translate="yes" xml:space="preserve">
          <source>Since GHC 8.2, GHC has supported type-indexed type representations. &lt;a href=&quot;data-typeable&quot;&gt;Data.Typeable&lt;/a&gt; provides type representations which are qualified over this index, providing an interface very similar to the &lt;a href=&quot;typeable&quot;&gt;Typeable&lt;/a&gt; notion seen in previous releases. For the type-indexed interface, see &lt;a href=&quot;type-reflection&quot;&gt;Type.Reflection&lt;/a&gt;.</source>
          <target state="translated">从GHC 8.2开始，GHC支持类型索引类型表示。&lt;a href=&quot;data-typeable&quot;&gt;Data.Typeable&lt;/a&gt;提供了在此索引上合格的类型表示形式，提供了与以前版本中看到的&lt;a href=&quot;typeable&quot;&gt;Typeable&lt;/a&gt;概念非常相似的接口。有关类型索引接口，请参见&lt;a href=&quot;type-reflection&quot;&gt;Type.Reflection&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b09eefad81a0c7d13e72eb5c0b6d6f00145c1bd" translate="yes" xml:space="preserve">
          <source>Since GHC 8.6.1, the Haskell I/O manager automatically promotes paths in the legacy format to Win32 file namespace. By default the I/O manager will do two things to your paths:</source>
          <target state="translated">自 GHC 8.6.1 以来,Haskell I/O 管理器自动将传统格式的路径推广到 Win32 文件命名空间。默认情况下,I/O管理器会对你的路径做两件事。</target>
        </trans-unit>
        <trans-unit id="1e0a728c3ee5e407a3cec0ce3ea3def9fc1224df" translate="yes" xml:space="preserve">
          <source>Since GHC is itself compiled by GHC, you can change RTS options in the compiler using the normal &lt;code&gt;+RTS ... -RTS&lt;/code&gt; combination. For instance, to set the maximum heap size for a compilation to 128M, you would add &lt;code&gt;+RTS -M128m -RTS&lt;/code&gt; to the command line.</source>
          <target state="translated">由于GHC本身是由GHC编译的，因此可以使用常规 &lt;code&gt;+RTS ... -RTS&lt;/code&gt; 组合在编译器中更改RTS选项。例如，要将编译的最大堆大小设置为128M，可以在命令行中添加 &lt;code&gt;+RTS -M128m -RTS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="33d1df2ac8344d31d5e6a2a15a2a791229762c8c" translate="yes" xml:space="preserve">
          <source>Since GHCi will only use a compiled object file if it can be sure that the compiled version is up-to-date, a good technique when working on a large program is to occasionally run &lt;code&gt;ghc --make&lt;/code&gt; to compile the whole project (say before you go for lunch :-), then continue working in the interpreter. As you modify code, the changed modules will be interpreted, but the rest of the project will remain compiled.</source>
          <target state="translated">由于GHCi仅在可以确保已编译版本是最新的情况下才使用已编译的目标文件，因此在处理大型程序时，一个好的技术是偶尔运行 &lt;code&gt;ghc --make&lt;/code&gt; 来编译整个项目（例如之前您去吃午餐:-)，然后继续在翻译中工作。修改代码时，将解释已更改的模块，但项目的其余部分将保持编译状态。</target>
        </trans-unit>
        <trans-unit id="96efe90028550298ac23162e5b8ef10f08d1c73d" translate="yes" xml:space="preserve">
          <source>Since all we know about &lt;code&gt;val&lt;/code&gt; and &lt;code&gt;fn&lt;/code&gt; is that they are compatible, the only (useful) thing we can do with them is to apply &lt;code&gt;fn&lt;/code&gt; to &lt;code&gt;val&lt;/code&gt; to get a boolean. For example:</source>
          <target state="translated">由于我们对 &lt;code&gt;val&lt;/code&gt; 和 &lt;code&gt;fn&lt;/code&gt; 的了解仅是它们是兼容的，因此我们唯一可以做的（有用的）事情就是将 &lt;code&gt;fn&lt;/code&gt; 应用于 &lt;code&gt;val&lt;/code&gt; 以获取布尔值。例如：</target>
        </trans-unit>
        <trans-unit id="80000692872a3a5ce4cbb0abce40d21312044a95" translate="yes" xml:space="preserve">
          <source>Since base 4.11.0.0, &lt;code&gt;&lt;a href=&quot;system-environment#v:getExecutablePath&quot;&gt;getExecutablePath&lt;/a&gt;&lt;/code&gt; resolves symlinks on Windows. If an executable is launched through a symlink, &lt;code&gt;&lt;a href=&quot;system-environment#v:getExecutablePath&quot;&gt;getExecutablePath&lt;/a&gt;&lt;/code&gt; returns the absolute path of the original executable.</source>
          <target state="translated">从4.11.0.0开始， &lt;code&gt;&lt;a href=&quot;system-environment#v:getExecutablePath&quot;&gt;getExecutablePath&lt;/a&gt;&lt;/code&gt; 解析Windows上的符号链接。如果通过符号链接启动可执行文件，则 &lt;code&gt;&lt;a href=&quot;system-environment#v:getExecutablePath&quot;&gt;getExecutablePath&lt;/a&gt;&lt;/code&gt; 返回原始可执行文件的绝对路径。</target>
        </trans-unit>
        <trans-unit id="3e638c7ecefd20fb0ec39b4c3b95c075d843ac61" translate="yes" xml:space="preserve">
          <source>Since base 4.11.0.0, &lt;code&gt;&lt;a href=&quot;system-environment-blank#v:getExecutablePath&quot;&gt;getExecutablePath&lt;/a&gt;&lt;/code&gt; resolves symlinks on Windows. If an executable is launched through a symlink, &lt;code&gt;&lt;a href=&quot;system-environment-blank#v:getExecutablePath&quot;&gt;getExecutablePath&lt;/a&gt;&lt;/code&gt; returns the absolute path of the original executable.</source>
          <target state="translated">从4.11.0.0开始， &lt;code&gt;&lt;a href=&quot;system-environment-blank#v:getExecutablePath&quot;&gt;getExecutablePath&lt;/a&gt;&lt;/code&gt; 解析Windows上的符号链接。如果通过符号链接启动可执行文件，则 &lt;code&gt;&lt;a href=&quot;system-environment-blank#v:getExecutablePath&quot;&gt;getExecutablePath&lt;/a&gt;&lt;/code&gt; 返回原始可执行文件的绝对路径。</target>
        </trans-unit>
        <trans-unit id="730351f5e8ace4619e0c70c82886ac2af7f9b9b8" translate="yes" xml:space="preserve">
          <source>Since many programs do use &lt;code&gt;exec&lt;/code&gt;, the &lt;code&gt;process&lt;/code&gt; library exposes the &lt;code&gt;&lt;a href=&quot;system-process#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; flag to make it possible to reliably detect when such a process completes. When this flag is set a &lt;code&gt;&lt;a href=&quot;system-process#t:ProcessHandle&quot;&gt;ProcessHandle&lt;/a&gt;&lt;/code&gt; will not be deemed to be &quot;finished&quot; until all processes spawned by it have terminated (except those spawned by the child with the &lt;code&gt;CREATE_BREAKAWAY_FROM_JOB&lt;/code&gt;&lt;code&gt;CreateProcess&lt;/code&gt; flag).</source>
          <target state="translated">由于许多程序确实使用 &lt;code&gt;exec&lt;/code&gt; ，因此 &lt;code&gt;process&lt;/code&gt; 库公开了 &lt;code&gt;&lt;a href=&quot;system-process#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; 标志，从而可以可靠地检测到此类进程何时完成。设置此标志后，直到它产生的所有进程都终止（除非带有 &lt;code&gt;CREATE_BREAKAWAY_FROM_JOB&lt;/code&gt; &lt;code&gt;CreateProcess&lt;/code&gt; 标志的子进程产生的进程终止），才将 &lt;code&gt;&lt;a href=&quot;system-process#t:ProcessHandle&quot;&gt;ProcessHandle&lt;/a&gt;&lt;/code&gt; 视为&amp;ldquo;完成&amp;rdquo; 。</target>
        </trans-unit>
        <trans-unit id="5054d4166324369087bef29fe407c1cd566703a2" translate="yes" xml:space="preserve">
          <source>Since most array functions involve the class &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt;, this module is exported from &lt;a href=&quot;data-array&quot;&gt;Data.Array&lt;/a&gt; so that modules need not import both &lt;a href=&quot;data-array&quot;&gt;Data.Array&lt;/a&gt; and &lt;a href=&quot;../base-4.13.0.0/data-ix&quot;&gt;Data.Ix&lt;/a&gt;.</source>
          <target state="translated">由于大多数阵列功能涉及类 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; ，这个模块是从出口&lt;a href=&quot;data-array&quot;&gt;Data.Array&lt;/a&gt;使模块不需要导入这两个&lt;a href=&quot;data-array&quot;&gt;Data.Array&lt;/a&gt;和&lt;a href=&quot;../base-4.13.0.0/data-ix&quot;&gt;Data.Ix&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e479c93c5d30b046bafa27d037a25369776a9584" translate="yes" xml:space="preserve">
          <source>Since most array functions involve the class &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt;, this module is exported from &lt;a href=&quot;data-array&quot;&gt;Data.Array&lt;/a&gt; so that modules need not import both &lt;a href=&quot;data-array&quot;&gt;Data.Array&lt;/a&gt; and &lt;a href=&quot;../base-4.14.1.0/data-ix&quot;&gt;Data.Ix&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496f029c9d8ece7bdc0f0f53e67b1b083f3e6dcd" translate="yes" xml:space="preserve">
          <source>Since representations such as this can support field labels with kinds other than &lt;code&gt;Symbol&lt;/code&gt;, the &lt;code&gt;HasField&lt;/code&gt; class is poly-kinded (even though the built-in constraint solving works only at kind &lt;code&gt;Symbol&lt;/code&gt;). In particular, this allows users to declare scoped field labels such as in the following example:</source>
          <target state="translated">由于这样的表示可以支持除 &lt;code&gt;Symbol&lt;/code&gt; 之外的其他类型的字段标签，因此 &lt;code&gt;HasField&lt;/code&gt; 类是多类的（即使内置约束解决方案仅在 &lt;code&gt;Symbol&lt;/code&gt; 上起作用）。特别是，这允许用户声明范围域标签，例如以下示例：</target>
        </trans-unit>
        <trans-unit id="bdf5363abc4404928095a9d94e007193484d0e99" translate="yes" xml:space="preserve">
          <source>Since some indirections (symbolic links on all systems, &lt;code&gt;..&lt;/code&gt; on non-Windows systems, and junction points on Windows) are dependent on the state of the existing filesystem, the function can only make a conservative attempt by removing such indirections from the longest prefix of the path that still points to an existing file or directory.</source>
          <target state="translated">由于某些间接操作（所有系统上的符号链接， &lt;code&gt;..&lt;/code&gt; 非Windows系统上的符号链接，以及Windows上的连接点）都取决于现有文件系统的状态，因此该函数只能通过从最长前缀中删除此类间接操作来进行保守尝试。仍然指向现有文件或目录的路径。</target>
        </trans-unit>
        <trans-unit id="4242f12de68611c93a575510b8d4598c73b2dd7a" translate="yes" xml:space="preserve">
          <source>Since the 7.10 release GHC can emit a debugging information to help debugging tools understand the code that GHC produces. This debugging information is useable by most UNIX debugging tools.</source>
          <target state="translated">从7.10版本开始,GHC可以发出一个调试信息,帮助调试工具理解GHC产生的代码。这个调试信息可以被大多数UNIX调试工具使用。</target>
        </trans-unit>
        <trans-unit id="b7a4561fa92a8019fe88f1cc517299a9155c17c2" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; type uses UTF-16 internally, it cannot represent characters in the reserved surrogate code point range U+D800 to U+DFFF. To maintain this invariant, the &lt;code&gt;&lt;a href=&quot;data-text-internal#v:safe&quot;&gt;safe&lt;/a&gt;&lt;/code&gt; function maps &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values in this range to the replacement character (U+FFFD, '�').</source>
          <target state="translated">由于 &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 类型在内部使用UTF-16，因此它不能表示保留的替代代码点范围U + D800至U + DFFF中的字符。为了保持此不变性， &lt;code&gt;&lt;a href=&quot;data-text-internal#v:safe&quot;&gt;safe&lt;/a&gt;&lt;/code&gt; 功能将此范围内的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 值映射到替换字符（U + FFFD，''）。</target>
        </trans-unit>
        <trans-unit id="90babc4747e5189efb1739787a51e33fec57750e" translate="yes" xml:space="preserve">
          <source>Since the advent of &lt;code&gt;ConstraintKinds&lt;/code&gt;, constraints are really just types. Equality constraints use the &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:EqualityT&quot;&gt;EqualityT&lt;/a&gt;&lt;/code&gt; constructor. Constraints may also be tuples of other constraints.</source>
          <target state="translated">自 &lt;code&gt;ConstraintKinds&lt;/code&gt; 出现以来，约束实际上只是类型。相等约束使用 &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:EqualityT&quot;&gt;EqualityT&lt;/a&gt;&lt;/code&gt; 构造函数。约束也可能是其他约束的元组。</target>
        </trans-unit>
        <trans-unit id="2252814c6c7377dbdf38b2f0e09ef963a5819600" translate="yes" xml:space="preserve">
          <source>Since the advent of &lt;code&gt;ConstraintKinds&lt;/code&gt;, constraints are really just types. Equality constraints use the &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:EqualityT&quot;&gt;EqualityT&lt;/a&gt;&lt;/code&gt; constructor. Constraints may also be tuples of other constraints.</source>
          <target state="translated">自 &lt;code&gt;ConstraintKinds&lt;/code&gt; 出现以来，约束实际上只是类型。相等约束使用 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:EqualityT&quot;&gt;EqualityT&lt;/a&gt;&lt;/code&gt; 构造函数。约束也可能是其他约束的元组。</target>
        </trans-unit>
        <trans-unit id="359bceb972223e45891270cf0e66d2673d1b706f" translate="yes" xml:space="preserve">
          <source>Since the binding for &lt;code&gt;y&lt;/code&gt; falls under the Monomorphism Restriction it is not generalised, so the type of &lt;code&gt;y&lt;/code&gt; is simply &lt;code&gt;Int&lt;/code&gt;, not &lt;code&gt;(?x::Int) =&amp;gt; Int&lt;/code&gt;. Hence, &lt;code&gt;(f 9)&lt;/code&gt; returns result &lt;code&gt;9&lt;/code&gt;. If you add a type signature for &lt;code&gt;y&lt;/code&gt;, then &lt;code&gt;y&lt;/code&gt; will get type &lt;code&gt;(?x::Int) =&amp;gt; Int&lt;/code&gt;, so the occurrence of &lt;code&gt;y&lt;/code&gt; in the body of the &lt;code&gt;let&lt;/code&gt; will see the inner binding of &lt;code&gt;?x&lt;/code&gt;, so &lt;code&gt;(f 9)&lt;/code&gt; will return &lt;code&gt;14&lt;/code&gt;.</source>
          <target state="translated">由于 &lt;code&gt;y&lt;/code&gt; 的绑定不属于Monomorphism Restriction（单态限制），因此 &lt;code&gt;y&lt;/code&gt; 的类型只是 &lt;code&gt;Int&lt;/code&gt; ，而不是 &lt;code&gt;(?x::Int) =&amp;gt; Int&lt;/code&gt; 。因此， &lt;code&gt;(f 9)&lt;/code&gt; 返回结果 &lt;code&gt;9&lt;/code&gt; 。如果为 &lt;code&gt;y&lt;/code&gt; 添加类型签名，则 &lt;code&gt;y&lt;/code&gt; 将获得类型 &lt;code&gt;(?x::Int) =&amp;gt; Int&lt;/code&gt; ，因此在 &lt;code&gt;let&lt;/code&gt; 主体中 &lt;code&gt;y&lt;/code&gt; 的出现将看到 &lt;code&gt;?x&lt;/code&gt; 的内部绑定，因此 &lt;code&gt;(f 9)&lt;/code&gt; 将返回 &lt;code&gt;14&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0a8746ea17a0e1219ce13f54d77952737fdabbd" translate="yes" xml:space="preserve">
          <source>Since the constructor &lt;code&gt;MkS&lt;/code&gt; is only in scope qualified, you must name it &lt;code&gt;M.MkS&lt;/code&gt;, but the field &lt;code&gt;x&lt;/code&gt; does not need to be qualified even though &lt;code&gt;M.x&lt;/code&gt; is in scope but &lt;code&gt;x&lt;/code&gt; is not (In effect, it is qualified by the constructor).</source>
          <target state="translated">由于构造函数 &lt;code&gt;MkS&lt;/code&gt; 仅在范围内限定，因此必须将其命名为 &lt;code&gt;M.MkS&lt;/code&gt; ，但是即使 &lt;code&gt;M.x&lt;/code&gt; 在范围内但 &lt;code&gt;x&lt;/code&gt; 不在范围内，字段 &lt;code&gt;x&lt;/code&gt; 也不必限定（实际上，它由构造函数限定）。</target>
        </trans-unit>
        <trans-unit id="b21b672f553cf2eae5e1fe001388a793bfa1e3ed" translate="yes" xml:space="preserve">
          <source>Since the declaration group containing &lt;code&gt;D&lt;/code&gt; is in the previous declaration group, the splice &lt;code&gt;$(th2 ...)&lt;/code&gt;&lt;em&gt;can&lt;/em&gt; refer to &lt;code&gt;D&lt;/code&gt;.</source>
          <target state="translated">因为含有声明组 &lt;code&gt;D&lt;/code&gt; 是与先前的声明组，剪接在 &lt;code&gt;$(th2 ...)&lt;/code&gt; &lt;em&gt;可以&lt;/em&gt;参考 &lt;code&gt;D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="800fc2a0187e7fedaabd6764d60a913f30b063f5" translate="yes" xml:space="preserve">
          <source>Since the default type signatures for &lt;code&gt;bar&lt;/code&gt; and &lt;code&gt;baz&lt;/code&gt; require &lt;code&gt;Show a&lt;/code&gt; and &lt;code&gt;Ord a&lt;/code&gt; constraints, respectively.</source>
          <target state="translated">由于 &lt;code&gt;bar&lt;/code&gt; 和 &lt;code&gt;baz&lt;/code&gt; 的默认类型签名分别要求 &lt;code&gt;Show a&lt;/code&gt; 和 &lt;code&gt;Ord a&lt;/code&gt; 约束。</target>
        </trans-unit>
        <trans-unit id="16b751ad88c8087ece123dbf36badd7ea5adc302" translate="yes" xml:space="preserve">
          <source>Since the rules for defaulting are relaxed under &lt;a href=&quot;#extension-ExtendedDefaultRules&quot;&gt;&lt;code&gt;ExtendedDefaultRules&lt;/code&gt;&lt;/a&gt;, the rules for &lt;code&gt;default&lt;/code&gt; declarations are also relaxed. According to Section 4.3.4 of the Haskell 2010 Report, a &lt;code&gt;default&lt;/code&gt; declaration looks like &lt;code&gt;default (t1, ..., tn)&lt;/code&gt; where, for each &lt;code&gt;ti&lt;/code&gt;, &lt;code&gt;Num ti&lt;/code&gt; must hold. This is relaxed to say that for each &lt;code&gt;ti&lt;/code&gt;, there must exist an interactive class &lt;code&gt;C&lt;/code&gt; such that &lt;code&gt;C ti&lt;/code&gt; holds. This means that type &lt;em&gt;constructors&lt;/em&gt; can be allowed in these lists. For example, the following works if you wish your &lt;code&gt;Foldable&lt;/code&gt; constraints to default to &lt;code&gt;Maybe&lt;/code&gt; but your &lt;code&gt;Num&lt;/code&gt; constraints to still default to &lt;code&gt;Integer&lt;/code&gt; or &lt;code&gt;Double&lt;/code&gt;:</source>
          <target state="translated">由于在&lt;a href=&quot;#extension-ExtendedDefaultRules&quot;&gt; &lt;code&gt;ExtendedDefaultRules&lt;/code&gt; &lt;/a&gt;下放宽了默认规则，因此放宽了 &lt;code&gt;default&lt;/code&gt; 声明规则。根据Haskell 2010报告的第4.3.4节， &lt;code&gt;default&lt;/code&gt; 声明看起来像 &lt;code&gt;default (t1, ..., tn)&lt;/code&gt; ，其中对于每个 &lt;code&gt;ti&lt;/code&gt; ， &lt;code&gt;Num ti&lt;/code&gt; 必须成立。轻松地说，对于每个 &lt;code&gt;ti&lt;/code&gt; ，必须存在一个交互式类 &lt;code&gt;C&lt;/code&gt; ,这样 &lt;code&gt;C ti&lt;/code&gt; 才能成立。这意味着可以在这些列表中使用类型&lt;em&gt;构造函数&lt;/em&gt;。例如，如果您希望 &lt;code&gt;Foldable&lt;/code&gt; 约束默认为 &lt;code&gt;Maybe&lt;/code&gt; ，则可以使用以下方法但您的 &lt;code&gt;Num&lt;/code&gt; 约束仍然默认为 &lt;code&gt;Integer&lt;/code&gt; 或 &lt;code&gt;Double&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="66391afbb5d9bc2304cefb3b644abd022794aa14" translate="yes" xml:space="preserve">
          <source>Since the semantics of pattern matching in case expressions is strict, this usually has no effect whatsoever. But it does make a difference in the degenerate case of variables and newtypes. So</source>
          <target state="translated">由于大小写表达式中模式匹配的语义是严格的,这通常没有任何影响。但在变量和新类型的退化情况下,它确实会有所影响。所以</target>
        </trans-unit>
        <trans-unit id="0cea23350a88954c9487d31e0b35ad738ef40ded" translate="yes" xml:space="preserve">
          <source>Since the translation uses &lt;code&gt;|||&lt;/code&gt;, the arrow concerned must belong to the &lt;code&gt;ArrowChoice&lt;/code&gt; class.</source>
          <target state="translated">由于翻译使用 &lt;code&gt;|||&lt;/code&gt; ，相关的箭头必须属于 &lt;code&gt;ArrowChoice&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="4434cedbc25a9b21d7d06d3713a6484879933703" translate="yes" xml:space="preserve">
          <source>Since:</source>
          <target state="translated">Since:</target>
        </trans-unit>
        <trans-unit id="77def7beba57681c13b67bbe39738aa4b7cbd1d2" translate="yes" xml:space="preserve">
          <source>Since: array-0.4.0.0</source>
          <target state="translated">Since:array-0.4.0.0</target>
        </trans-unit>
        <trans-unit id="edf610fa82eebe50d34335d39e3e1610a5ca1584" translate="yes" xml:space="preserve">
          <source>Since: base-2.0.1</source>
          <target state="translated">自:base-2.0.1</target>
        </trans-unit>
        <trans-unit id="aee04122d549b2e4aa6954d6c06b6ffb6a09909a" translate="yes" xml:space="preserve">
          <source>Since: base-2.1</source>
          <target state="translated">自:base-2.1</target>
        </trans-unit>
        <trans-unit id="dcde35893e4d6dc32d096855f15dcf5ea3247487" translate="yes" xml:space="preserve">
          <source>Since: base-3.0</source>
          <target state="translated">自:base-3.0</target>
        </trans-unit>
        <trans-unit id="be060310da47406378288eb54af64a5df3346140" translate="yes" xml:space="preserve">
          <source>Since: base-4.0</source>
          <target state="translated">自:base-4.0</target>
        </trans-unit>
        <trans-unit id="4f866c74c054a47d6140e4fc6d5be8de11f99994" translate="yes" xml:space="preserve">
          <source>Since: base-4.0.0.0</source>
          <target state="translated">从:base-4.0.0.0开始。</target>
        </trans-unit>
        <trans-unit id="7d12eeaf7cce814b0171237c84978cff10f83652" translate="yes" xml:space="preserve">
          <source>Since: base-4.1.0.0</source>
          <target state="translated">自:base-4.1.0.0起。</target>
        </trans-unit>
        <trans-unit id="05d33b2fd09ae58a6be7191730fc97d0c21a2f4d" translate="yes" xml:space="preserve">
          <source>Since: base-4.10</source>
          <target state="translated">自:base-4.10</target>
        </trans-unit>
        <trans-unit id="13f96c7c19da91d3b76637089fe3d61114bac377" translate="yes" xml:space="preserve">
          <source>Since: base-4.10.0.0</source>
          <target state="translated">自:base-4.10.0.0起。</target>
        </trans-unit>
        <trans-unit id="f0b4e2c80c6439234dda497542e0fb4b91039b2a" translate="yes" xml:space="preserve">
          <source>Since: base-4.11</source>
          <target state="translated">自:base-4.11</target>
        </trans-unit>
        <trans-unit id="683ec4ab5b5bc414eea9901a86c5ba15f8e88688" translate="yes" xml:space="preserve">
          <source>Since: base-4.11.0.0</source>
          <target state="translated">自:base-4.11.0.0起。</target>
        </trans-unit>
        <trans-unit id="e8a5cd5f7f090603e16566046cda15e3e4135697" translate="yes" xml:space="preserve">
          <source>Since: base-4.12.0.0</source>
          <target state="translated">自:base-4.12.0.0起。</target>
        </trans-unit>
        <trans-unit id="5af6852241714d9fdb31605fd1f208d9c6009de3" translate="yes" xml:space="preserve">
          <source>Since: base-4.13.0.0</source>
          <target state="translated">自:base-4.13.0.0起。</target>
        </trans-unit>
        <trans-unit id="eb6dd42022e6c37b6d8a2db8819868d46dbed0ed" translate="yes" xml:space="preserve">
          <source>Since: base-4.2.0.0</source>
          <target state="translated">自:base-4.2.0.0起。</target>
        </trans-unit>
        <trans-unit id="a09d23c3cf1105f84b13bb28455cd72dee2790e4" translate="yes" xml:space="preserve">
          <source>Since: base-4.3.0.0</source>
          <target state="translated">自:base-4.3.0.0起。</target>
        </trans-unit>
        <trans-unit id="144f1a3697c9ba27bd4249620fbf1bd9ea7f587f" translate="yes" xml:space="preserve">
          <source>Since: base-4.3.1.0</source>
          <target state="translated">自:base-4.3.1.0起。</target>
        </trans-unit>
        <trans-unit id="680457cc73e9dd574fa979ff49af4da5b57992b0" translate="yes" xml:space="preserve">
          <source>Since: base-4.4.0.0</source>
          <target state="translated">自:base-4.4.0.0起。</target>
        </trans-unit>
        <trans-unit id="f75c6bc02d8b9b78a830ddca4064ffd908c23e26" translate="yes" xml:space="preserve">
          <source>Since: base-4.5.0.0</source>
          <target state="translated">自:base-4.5.0.0起。</target>
        </trans-unit>
        <trans-unit id="5ae7f8cea58726ff3644070a6db4a739241c1acc" translate="yes" xml:space="preserve">
          <source>Since: base-4.5.1.0</source>
          <target state="translated">自:base-4.5.1.0起。</target>
        </trans-unit>
        <trans-unit id="03a1803c388da99e52160354039f4ba8b886fd0a" translate="yes" xml:space="preserve">
          <source>Since: base-4.6.0.0</source>
          <target state="translated">自:base-4.6.0.0起。</target>
        </trans-unit>
        <trans-unit id="85e9cfb41e19fb0e4e80bef745aafb6d92fcf4e1" translate="yes" xml:space="preserve">
          <source>Since: base-4.7.0.0</source>
          <target state="translated">自:base-4.7.0.0起。</target>
        </trans-unit>
        <trans-unit id="46488ca60516ce3e49a1e0df18bd8590e8cfa510" translate="yes" xml:space="preserve">
          <source>Since: base-4.7.1.0</source>
          <target state="translated">自:base-4.7.1.0起。</target>
        </trans-unit>
        <trans-unit id="76ab5db5cd82a814866a80e90191a0d846519c6a" translate="yes" xml:space="preserve">
          <source>Since: base-4.8.0</source>
          <target state="translated">自:base-4.8.0</target>
        </trans-unit>
        <trans-unit id="6ba2d0be46afd875d370d91e7321fd9bf26a8590" translate="yes" xml:space="preserve">
          <source>Since: base-4.8.0.0</source>
          <target state="translated">自:base-4.8.0.0起。</target>
        </trans-unit>
        <trans-unit id="f426eca9a2be82f35331af20b4cfe339247c0995" translate="yes" xml:space="preserve">
          <source>Since: base-4.8.1.0</source>
          <target state="translated">自:base-4.8.1.0起。</target>
        </trans-unit>
        <trans-unit id="11b390bc2c4894d60b23a370abbb27423829a35f" translate="yes" xml:space="preserve">
          <source>Since: base-4.8.2.0</source>
          <target state="translated">自:base-4.8.2.0起。</target>
        </trans-unit>
        <trans-unit id="35579eb050b331ba1656177052fdcbc9e5a7483e" translate="yes" xml:space="preserve">
          <source>Since: base-4.9.0.0</source>
          <target state="translated">自:base-4.9.0.0起。</target>
        </trans-unit>
        <trans-unit id="658e7afd7720cc41503432edd0c6116f4b6e8a4d" translate="yes" xml:space="preserve">
          <source>Since: binary-0.6.4.0</source>
          <target state="translated">自:binary-0.6.4.0起。</target>
        </trans-unit>
        <trans-unit id="e1254dc15885f528e522e321e7322e049ab4c07d" translate="yes" xml:space="preserve">
          <source>Since: binary-0.7.0.0</source>
          <target state="translated">自:binary-0.7.0.0起。</target>
        </trans-unit>
        <trans-unit id="9df3d7e6dd0e0c223fc816bd04de0611d7d49fa4" translate="yes" xml:space="preserve">
          <source>Since: binary-0.7.1.0</source>
          <target state="translated">自:binary-0.7.1.0起。</target>
        </trans-unit>
        <trans-unit id="3d8accc860c008eff39b30c31f5ee1a6438088f4" translate="yes" xml:space="preserve">
          <source>Since: binary-0.7.2.0</source>
          <target state="translated">自:binary-0.7.2.0起。</target>
        </trans-unit>
        <trans-unit id="4d47c9c367ee9364536b7778828cc37b93197d84" translate="yes" xml:space="preserve">
          <source>Since: binary-0.7.3.0</source>
          <target state="translated">自:binary-0.7.3.0起。</target>
        </trans-unit>
        <trans-unit id="8eca414fddbddbf89e34bbdb86c556a83275161f" translate="yes" xml:space="preserve">
          <source>Since: binary-0.7.6.0</source>
          <target state="translated">自:binary-0.7.6.0起。</target>
        </trans-unit>
        <trans-unit id="c829cb1478c66580c9bfd528d1bbe79a07bfbaa5" translate="yes" xml:space="preserve">
          <source>Since: binary-0.8.0.0</source>
          <target state="translated">自:binary-0.8.0.0起。</target>
        </trans-unit>
        <trans-unit id="df32c99ffc6d58246dc2570e031500fcf72546a5" translate="yes" xml:space="preserve">
          <source>Since: binary-0.8.4.0</source>
          <target state="translated">自:binary-0.8.4.0起。</target>
        </trans-unit>
        <trans-unit id="ebb2e8cb34f3772781da1e84b010972418d76bc8" translate="yes" xml:space="preserve">
          <source>Since: binary-0.8.5.0</source>
          <target state="translated">自:binary-0.8.5.0起。</target>
        </trans-unit>
        <trans-unit id="18c425e1b8587d0b2c4b6bf9f213d6790905745f" translate="yes" xml:space="preserve">
          <source>Since: bytestring-0.10.10.0</source>
          <target state="translated">自:bytestring-0.10.10.0起。</target>
        </trans-unit>
        <trans-unit id="6518880ea188f60056ca82c073f5d56cbfd34edc" translate="yes" xml:space="preserve">
          <source>Since: bytestring-0.10.6.0</source>
          <target state="translated">自:bytestring-0.10.6.0起。</target>
        </trans-unit>
        <trans-unit id="0380db1a0bdc415031dd3036a309afa37f855cb9" translate="yes" xml:space="preserve">
          <source>Since: bytestring-0.10.8.0</source>
          <target state="translated">自:bytestring-0.10.8.0起。</target>
        </trans-unit>
        <trans-unit id="fdf6e3c7b504de7245d979d91df8a2646b848ecc" translate="yes" xml:space="preserve">
          <source>Since: containers-0.3.0</source>
          <target state="translated">自:容器-0.3.0</target>
        </trans-unit>
        <trans-unit id="f06861bb8e4e4be2b3677620bebf64a3c5ad40a8" translate="yes" xml:space="preserve">
          <source>Since: containers-0.5.11</source>
          <target state="translated">自:容器-0.5.11</target>
        </trans-unit>
        <trans-unit id="577b8aadc1cb4368cf53ffefdc40a69f4597906d" translate="yes" xml:space="preserve">
          <source>Since: containers-0.5.4</source>
          <target state="translated">自:容器-0.5.4</target>
        </trans-unit>
        <trans-unit id="fc1cf1dd4ede2f7f17476148a62faf21986fb885" translate="yes" xml:space="preserve">
          <source>Since: containers-0.5.6.2</source>
          <target state="translated">自:容器-0.5.6.2起</target>
        </trans-unit>
        <trans-unit id="13e4f07bc2720d1cffeeb52d2dc06893ee8d870c" translate="yes" xml:space="preserve">
          <source>Since: containers-0.5.7</source>
          <target state="translated">自:容器-0.5.7</target>
        </trans-unit>
        <trans-unit id="47f9c4b76709a133698fdeca81e3051dc9505b51" translate="yes" xml:space="preserve">
          <source>Since: containers-0.5.8</source>
          <target state="translated">自:容器-0.5.8</target>
        </trans-unit>
        <trans-unit id="ae27d699c1c6990c388b145614849e38387c6286" translate="yes" xml:space="preserve">
          <source>Since: containers-0.5.9</source>
          <target state="translated">自:容器-0.5.9</target>
        </trans-unit>
        <trans-unit id="78520db3f1b0ec496990ff4370a69536fffd930b" translate="yes" xml:space="preserve">
          <source>Since: containers-0.6.2.1</source>
          <target state="translated">自:容器-0.6.2.1起。</target>
        </trans-unit>
        <trans-unit id="8522e90c33a3f82e61cc697ad582479c24002695" translate="yes" xml:space="preserve">
          <source>Since: deepseq-1.1.0.0</source>
          <target state="translated">Since:deepseq-1.1.0.0</target>
        </trans-unit>
        <trans-unit id="ba0b40b62680e1546633deea4523d9f070b52939" translate="yes" xml:space="preserve">
          <source>Since: deepseq-1.2.0.0</source>
          <target state="translated">Since:deepseq-1.2.0.0</target>
        </trans-unit>
        <trans-unit id="23b0c0cc1f5cc41cd8fdf05342c8bbf805c0798b" translate="yes" xml:space="preserve">
          <source>Since: deepseq-1.3.0.0</source>
          <target state="translated">Since:deepseq-1.3.0.0</target>
        </trans-unit>
        <trans-unit id="59f0c9cbf4feb123aafa1a5a5703b539a5b4fda6" translate="yes" xml:space="preserve">
          <source>Since: deepseq-1.4.0.0</source>
          <target state="translated">Since:deepseq-1.4.0.0</target>
        </trans-unit>
        <trans-unit id="0fe7e33f7665b0ce8e1ababedf6898c47b29c9aa" translate="yes" xml:space="preserve">
          <source>Since: deepseq-1.4.2.0</source>
          <target state="translated">Since:deepseq-1.4.2.0</target>
        </trans-unit>
        <trans-unit id="39f4ae9d4ce6a16c2bf1af2aef06b7676ecccc70" translate="yes" xml:space="preserve">
          <source>Since: deepseq-1.4.3.0</source>
          <target state="translated">Since:deepseq-1.4.3.0</target>
        </trans-unit>
        <trans-unit id="742e67906f923078347ec8ee540c00ed9681da69" translate="yes" xml:space="preserve">
          <source>Since: deepseq-1.4.4.0</source>
          <target state="translated">Since:deepseq-1.4.4.0</target>
        </trans-unit>
        <trans-unit id="7a5c3230ba84c3f2b4f312010d88ae9e5692c4f1" translate="yes" xml:space="preserve">
          <source>Since: directory-1.2.1.0</source>
          <target state="translated">自:目录-1.2.1.0起。</target>
        </trans-unit>
        <trans-unit id="65b42c7a9a69ce5572b0c7234fb5f6767a450d39" translate="yes" xml:space="preserve">
          <source>Since: directory-1.2.2.0</source>
          <target state="translated">从:目录-1.2.2.0开始。</target>
        </trans-unit>
        <trans-unit id="bc4052b1dd8564d95ce1b9f9431caef291a4bd56" translate="yes" xml:space="preserve">
          <source>Since: directory-1.2.3.0</source>
          <target state="translated">自:目录-1.2.3.0起。</target>
        </trans-unit>
        <trans-unit id="f0238ae30cb2d6ad58309654cc6dbd216f38364c" translate="yes" xml:space="preserve">
          <source>Since: directory-1.2.4.0</source>
          <target state="translated">自:目录-1.2.4.0起。</target>
        </trans-unit>
        <trans-unit id="6b50a2b40a56c1e3a9e95e2c334661d111e94ce2" translate="yes" xml:space="preserve">
          <source>Since: directory-1.2.5.0</source>
          <target state="translated">从:目录-1.2.5.0开始。</target>
        </trans-unit>
        <trans-unit id="6e2b33aa315c83e970d7d495e06755f5409436fd" translate="yes" xml:space="preserve">
          <source>Since: directory-1.2.6.0</source>
          <target state="translated">自:目录-1.2.6.0起。</target>
        </trans-unit>
        <trans-unit id="a9095f546a294ceb9fc37230e06d9919d9d3ae9d" translate="yes" xml:space="preserve">
          <source>Since: directory-1.2.7.0</source>
          <target state="translated">自:目录-1.2.7.0起。</target>
        </trans-unit>
        <trans-unit id="a40dfe915a83635ffc721f1d82e530692a392aed" translate="yes" xml:space="preserve">
          <source>Since: directory-1.3.0.0</source>
          <target state="translated">自:目录-1.3.0.0起。</target>
        </trans-unit>
        <trans-unit id="dadb98c14951153ce3fe87ace2ba1accd0b22e29" translate="yes" xml:space="preserve">
          <source>Since: directory-1.3.1.0</source>
          <target state="translated">自:目录-1.3.1.0起。</target>
        </trans-unit>
        <trans-unit id="57a78f7ba776ce5334ae2670a31ac864d0149ded" translate="yes" xml:space="preserve">
          <source>Since: directory-1.3.2.0</source>
          <target state="translated">自:目录-1.3.2.0起。</target>
        </trans-unit>
        <trans-unit id="2c2e51efb76d50326f5e12852339d51262b4bf1e" translate="yes" xml:space="preserve">
          <source>Since: ghc-prim-4.7.0.0</source>
          <target state="translated">自:ghc-prim-4.7.0.0起。</target>
        </trans-unit>
        <trans-unit id="b829433a6a8bc4969728e4c2f98e041dcac4bbdb" translate="yes" xml:space="preserve">
          <source>Since: integer-gmp-0.5.1.0</source>
          <target state="translated">自:integer-gmp-0.5.1.0起。</target>
        </trans-unit>
        <trans-unit id="bd054c527ebccc74ae7d1d0a3e09384ae22a43d4" translate="yes" xml:space="preserve">
          <source>Since: integer-gmp-1.0.0.0</source>
          <target state="translated">自:integer-gmp-1.0.0.0起。</target>
        </trans-unit>
        <trans-unit id="43920e394a2ba131398c556bf12bb033f35c9c19" translate="yes" xml:space="preserve">
          <source>Since: integer-gmp-1.0.2.0</source>
          <target state="translated">自:integer-gmp-1.0.2.0起。</target>
        </trans-unit>
        <trans-unit id="004c0ba26418c847845a8cd73a707283b6b7b762" translate="yes" xml:space="preserve">
          <source>Since: mtl-2.2</source>
          <target state="translated">自:MTL-2.2</target>
        </trans-unit>
        <trans-unit id="7ec1e756cf1356e146a94455a2518bfb08041043" translate="yes" xml:space="preserve">
          <source>Since: mtl-2.2.1</source>
          <target state="translated">自:mtl-2.2.1起。</target>
        </trans-unit>
        <trans-unit id="b4e6c09c839d1caa94436ab981a0c2a07125b4c0" translate="yes" xml:space="preserve">
          <source>Since: mtl-2.2.2</source>
          <target state="translated">自:mtl-2.2.2起。</target>
        </trans-unit>
        <trans-unit id="13c40b5c2c7f6ade575241224827c7966117515d" translate="yes" xml:space="preserve">
          <source>Since: parsec-3.1.12</source>
          <target state="translated">自:parsec-3.1.12</target>
        </trans-unit>
        <trans-unit id="f52072649d261562d195b742c7ccd786e827a9b7" translate="yes" xml:space="preserve">
          <source>Since: parsec-3.1.12.0</source>
          <target state="translated">自:parsec-3.1.12.0起。</target>
        </trans-unit>
        <trans-unit id="4d6a533c2c6d20dd47d3b12857db2cdaec7a2cdb" translate="yes" xml:space="preserve">
          <source>Since: parsec-3.1.14.0</source>
          <target state="translated">自:parsec-3.1.14.0起。</target>
        </trans-unit>
        <trans-unit id="6173b8c40187f0403433affadab2e1b113153635" translate="yes" xml:space="preserve">
          <source>Since: process-1.2.0.0</source>
          <target state="translated">自:流程-1.2.0.0起。</target>
        </trans-unit>
        <trans-unit id="8896f78f6039216ebe47c0235497e88bc80921d6" translate="yes" xml:space="preserve">
          <source>Since: process-1.2.1.0</source>
          <target state="translated">自:流程-1.2.1.0起。</target>
        </trans-unit>
        <trans-unit id="a70da9bec719dce3f035dbadd7fb71c5cddf1a8d" translate="yes" xml:space="preserve">
          <source>Since: process-1.2.3.0</source>
          <target state="translated">自:流程-1.2.3.0起。</target>
        </trans-unit>
        <trans-unit id="57742d4cffbe428edb2f9f9ac22d46ba647431a4" translate="yes" xml:space="preserve">
          <source>Since: process-1.3.0.0</source>
          <target state="translated">自:流程-1.3.0.0起。</target>
        </trans-unit>
        <trans-unit id="d6a5677135258e2e23093787a21e48ca71ecb4c1" translate="yes" xml:space="preserve">
          <source>Since: process-1.4.0.0</source>
          <target state="translated">自:流程-1.4.0.0起。</target>
        </trans-unit>
        <trans-unit id="498b94a80c875e9f98f47da8ec7403dbf39ea6c6" translate="yes" xml:space="preserve">
          <source>Since: process-1.4.2.0</source>
          <target state="translated">自:流程-1.4.2.0起。</target>
        </trans-unit>
        <trans-unit id="7bc1e7d90ae9c5909f1654ed127ce95087e50cc0" translate="yes" xml:space="preserve">
          <source>Since: process-1.4.3.0</source>
          <target state="translated">自:流程-1.4.3.0起。</target>
        </trans-unit>
        <trans-unit id="b1b9c1a8beadcf6db9b4297a068995ba68a4927e" translate="yes" xml:space="preserve">
          <source>Since: process-1.5.0.0</source>
          <target state="translated">自:流程-1.5.0.0起。</target>
        </trans-unit>
        <trans-unit id="4189c5931e04cd6fed6cce8762f7e5165b1ba170" translate="yes" xml:space="preserve">
          <source>Since: process-1.6.3.0</source>
          <target state="translated">自:流程-1.6.3.0起。</target>
        </trans-unit>
        <trans-unit id="049ae56593018f4677ed85e055f9a1ce08f66049" translate="yes" xml:space="preserve">
          <source>Since: process-1.6.4.0</source>
          <target state="translated">自:流程-1.6.4.0起。</target>
        </trans-unit>
        <trans-unit id="9b7c6b58f57e4a8671138b2114c78b0b54c65398" translate="yes" xml:space="preserve">
          <source>Since: process-1.6.6.0</source>
          <target state="translated">自:流程-1.6.6.0起。</target>
        </trans-unit>
        <trans-unit id="ac8a27e52dca71762bc74740bf4af5f72f77b87a" translate="yes" xml:space="preserve">
          <source>Since: stm-2.1.1</source>
          <target state="translated">自:stm-2.1.1起</target>
        </trans-unit>
        <trans-unit id="5c2c66abc6e977dff9b834ac6480f85638a86ec6" translate="yes" xml:space="preserve">
          <source>Since: stm-2.3</source>
          <target state="translated">自:STM-2.3起</target>
        </trans-unit>
        <trans-unit id="965dff965e12a908b89b54c941c884ee7f2229f5" translate="yes" xml:space="preserve">
          <source>Since: stm-2.4</source>
          <target state="translated">自:STM-2.4</target>
        </trans-unit>
        <trans-unit id="44cf8ad94a99b2f1040f22f0c75084026130c01e" translate="yes" xml:space="preserve">
          <source>Since: stm-2.4.2</source>
          <target state="translated">自:stm-2.4.2</target>
        </trans-unit>
        <trans-unit id="2301069f7c516acb3207b256c89590bdbf70a9e9" translate="yes" xml:space="preserve">
          <source>Since: stm-2.4.3</source>
          <target state="translated">自:stm-2.4.3起</target>
        </trans-unit>
        <trans-unit id="9b7e05e66356944adf88eee159b3ab5ac884b069" translate="yes" xml:space="preserve">
          <source>Since: stm-2.4.4</source>
          <target state="translated">自:stm-2.4.4起</target>
        </trans-unit>
        <trans-unit id="857edb3f4333fcaabe059867bf8052f4b6b1477e" translate="yes" xml:space="preserve">
          <source>Since: stm-2.4.5</source>
          <target state="translated">自:stm-2.4.5</target>
        </trans-unit>
        <trans-unit id="7286bc217a3cd4d33959970f2b786deaf882f174" translate="yes" xml:space="preserve">
          <source>Since: stm-2.5.0</source>
          <target state="translated">自:stm-2.5.0</target>
        </trans-unit>
        <trans-unit id="3c869e7edea16d874494af249b4126984bd821db" translate="yes" xml:space="preserve">
          <source>Since: stm-2.5.0.0</source>
          <target state="translated">自:stm-2.5.0.0起。</target>
        </trans-unit>
        <trans-unit id="f67b9fe7a58ad39b2e35517726d3db81b19aade3" translate="yes" xml:space="preserve">
          <source>Since: template-haskell-2.15.0.0</source>
          <target state="translated">自:template-haskell-2.15.0.0起。</target>
        </trans-unit>
        <trans-unit id="8aabacf9854282527de969fd23dbcdbc51ff78ec" translate="yes" xml:space="preserve">
          <source>Since: text-1.0.0.0</source>
          <target state="translated">自:text-1.0.0.0.</target>
        </trans-unit>
        <trans-unit id="ac1ea29ccfe8bd36cc9b751cf0b1ff463e545e5a" translate="yes" xml:space="preserve">
          <source>Since: text-1.1.0.0</source>
          <target state="translated">自:text-1.1.0.0起。</target>
        </trans-unit>
        <trans-unit id="bb53e2414ab0137617e64e01a9860e801a35448c" translate="yes" xml:space="preserve">
          <source>Since: text-1.1.1.0</source>
          <target state="translated">自:text-1.1.1.0起。</target>
        </trans-unit>
        <trans-unit id="5d32cc5824dc965d69da87f6912c59a36a2fead3" translate="yes" xml:space="preserve">
          <source>Since: text-1.2.0.0</source>
          <target state="translated">自:text-1.2.0.0起。</target>
        </trans-unit>
        <trans-unit id="1fb0fda51801f74cccca168e2b8213b751303ba6" translate="yes" xml:space="preserve">
          <source>Since: text-1.2.0.5</source>
          <target state="translated">自:text-1.2.0.5起。</target>
        </trans-unit>
        <trans-unit id="c9e336d4dce405d619839f75ec3e1f317f755928" translate="yes" xml:space="preserve">
          <source>Since: text-1.2.1.0</source>
          <target state="translated">自:text-1.2.1.0起。</target>
        </trans-unit>
        <trans-unit id="6acb17f9287ddf6b6a58d7bbcbf3426fe18904eb" translate="yes" xml:space="preserve">
          <source>Since: text-1.2.1.1</source>
          <target state="translated">自:text-1.2.1.1起。</target>
        </trans-unit>
        <trans-unit id="988b102348b68065a69dff157ca14bc8858843a6" translate="yes" xml:space="preserve">
          <source>Since: text-1.2.2.0</source>
          <target state="translated">自:text-1.2.2.0起。</target>
        </trans-unit>
        <trans-unit id="9cd01f28b288a0f48d503cb143cbd29939600897" translate="yes" xml:space="preserve">
          <source>Since: text-1.2.3.0</source>
          <target state="translated">自:text-1.2.3.0起。</target>
        </trans-unit>
        <trans-unit id="7ee99f863662dbbabaddbfa21372c79b7e136f26" translate="yes" xml:space="preserve">
          <source>Since: text-1.2.4.0</source>
          <target state="translated">自:text-1.2.4.0起。</target>
        </trans-unit>
        <trans-unit id="3cfede30507dcb300d436671c18da9ff6aeb363c" translate="yes" xml:space="preserve">
          <source>Since: time-1.9.1</source>
          <target state="translated">自:时间1.9.1</target>
        </trans-unit>
        <trans-unit id="374097987d66186f927af026e737463802906874" translate="yes" xml:space="preserve">
          <source>Since: time-1.9.2</source>
          <target state="translated">自:时间1.9.2</target>
        </trans-unit>
        <trans-unit id="377a583802c298cd81e90936d99bfec164df44aa" translate="yes" xml:space="preserve">
          <source>Since: unix-2.7.0.0</source>
          <target state="translated">自:unix-2.7.0.0起。</target>
        </trans-unit>
        <trans-unit id="a82c41491e9a18319c2f514b90d9e4bcb2aecb44" translate="yes" xml:space="preserve">
          <source>Since: unix-2.7.1.0</source>
          <target state="translated">自:unix-2.7.1.0起。</target>
        </trans-unit>
        <trans-unit id="0ba4fc6db3d406b16b4b8fde03d4704598511128" translate="yes" xml:space="preserve">
          <source>Since: xhtml-3000.2.2</source>
          <target state="translated">自:xhtml-3000.2.2起。</target>
        </trans-unit>
        <trans-unit id="20d2ef17cb47b98fef4cfaf10b396482cd42ec29" translate="yes" xml:space="preserve">
          <source>Single digit characters</source>
          <target state="translated">个位数字符</target>
        </trans-unit>
        <trans-unit id="1e9345ad9bb25be4b1cf58b3adf8865600be7c7b" translate="yes" xml:space="preserve">
          <source>Single-arg lambda</source>
          <target state="translated">单参数lambda</target>
        </trans-unit>
        <trans-unit id="14669f485c7e56115731a61454d09957eaca9d40" translate="yes" xml:space="preserve">
          <source>Single-byte encodings that map directly to Unicode code points.</source>
          <target state="translated">直接映射到Unicode码点的单字节编码。</target>
        </trans-unit>
        <trans-unit id="6e37ddbd6674a40e66efc0bc23ed651836fbd696" translate="yes" xml:space="preserve">
          <source>Single-precision floating point numbers. It is desirable that this type be at least equal in range and precision to the IEEE single-precision type.</source>
          <target state="translated">单精度浮点数。这种类型最好至少在范围和精度上与IEEE单精度类型相等。</target>
        </trans-unit>
        <trans-unit id="ce33b41f5288545cb2356817cb6cedd453e57b8e" translate="yes" xml:space="preserve">
          <source>Single-stepping is a great way to visualise the execution of your program, and it is also a useful tool for identifying the source of a bug. GHCi offers two variants of stepping. Use &lt;a href=&quot;#ghci-cmd-:step&quot;&gt;&lt;code&gt;:step&lt;/code&gt;&lt;/a&gt; to enable all the breakpoints in the program, and execute until the next breakpoint is reached. Use &lt;a href=&quot;#ghci-cmd-:steplocal&quot;&gt;&lt;code&gt;:steplocal&lt;/code&gt;&lt;/a&gt; to limit the set of enabled breakpoints to those in the current top level function. Similarly, use &lt;a href=&quot;#ghci-cmd-:stepmodule&quot;&gt;&lt;code&gt;:stepmodule&lt;/code&gt;&lt;/a&gt; to single step only on breakpoints contained in the current module. For example:</source>
          <target state="translated">单步执行是一种可视化程序执行的好方法，它也是识别错误来源的有用工具。GHCi提供两种步进方式。使用&lt;a href=&quot;#ghci-cmd-:step&quot;&gt; &lt;code&gt;:step&lt;/code&gt; &lt;/a&gt;启用程序中的所有断点，并执行直到到达下一个断点。使用&lt;a href=&quot;#ghci-cmd-:steplocal&quot;&gt; &lt;code&gt;:steplocal&lt;/code&gt; &lt;/a&gt;将启用的断点集限制为当前顶级功能中的那些断点。同样，使用&lt;a href=&quot;#ghci-cmd-:stepmodule&quot;&gt; &lt;code&gt;:stepmodule&lt;/code&gt; &lt;/a&gt;仅在当前模块中包含的断点处单步执行。例如：</target>
        </trans-unit>
        <trans-unit id="0fbed616e820e529c17fe989f933ba66cd5b42ad" translate="yes" xml:space="preserve">
          <source>Six type synonyms are provided for convenience:</source>
          <target state="translated">为方便起见,提供了六种类型的同义词。</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="ee88a459725792c449b28f989797c18caa3cfbd5" translate="yes" xml:space="preserve">
          <source>Size hints.</source>
          <target state="translated">尺寸提示。</target>
        </trans-unit>
        <trans-unit id="2ced24d9bc086de69d1e6c412ac712c671ff2940" translate="yes" xml:space="preserve">
          <source>Size of first buffer</source>
          <target state="translated">第一个缓冲区的大小</target>
        </trans-unit>
        <trans-unit id="9b93ec609f720ca0a12d37261230464f95d759c4" translate="yes" xml:space="preserve">
          <source>Size of mapped area</source>
          <target state="translated">绘制区域的面积</target>
        </trans-unit>
        <trans-unit id="a61bd3d28a161f9bb15e04c0ec6e593b7dfbe96f" translate="yes" xml:space="preserve">
          <source>Size of successive buffers</source>
          <target state="translated">连续缓冲器的大小</target>
        </trans-unit>
        <trans-unit id="6ff89a859c0ba07715f955ae4145f4dc3f84e978" translate="yes" xml:space="preserve">
          <source>Size of the file in bytes. If this file is a symbolic link the size is the length of the pathname it contains.</source>
          <target state="translated">文件的大小,单位是字节。如果这个文件是一个符号链接,那么大小就是它所包含的路径名的长度。</target>
        </trans-unit>
        <trans-unit id="9e6881680dcd16572a5b83e38e827cc16d2da9d2" translate="yes" xml:space="preserve">
          <source>Size of the first buffer</source>
          <target state="translated">第一个缓冲区的大小</target>
        </trans-unit>
        <trans-unit id="fe35ba267dcb8f39bac84d1dfc68c1afe1c29e8a" translate="yes" xml:space="preserve">
          <source>Sized unsigned integral types: &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">大小无符号整数类型： &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="96de489fe3c2b4dd68982096808dc9222145c984" translate="yes" xml:space="preserve">
          <source>Sizes</source>
          <target state="translated">Sizes</target>
        </trans-unit>
        <trans-unit id="edff5c71d4c8d43fcb60eae3da014b44cff6889a" translate="yes" xml:space="preserve">
          <source>Sk: Symbol, Modifier</source>
          <target state="translated">Sk:符号,修改</target>
        </trans-unit>
        <trans-unit id="ac15a2caab382e4edd0604967978ea93af80034c" translate="yes" xml:space="preserve">
          <source>Skip ahead &lt;code&gt;n&lt;/code&gt; bytes. Fails if fewer than &lt;code&gt;n&lt;/code&gt; bytes are available.</source>
          <target state="translated">向前跳过 &lt;code&gt;n&lt;/code&gt; 个字节。如果少于 &lt;code&gt;n&lt;/code&gt; 个字节可用，则失败。</target>
        </trans-unit>
        <trans-unit id="775a6924e43b006a3108939c1828cd348870fe2c" translate="yes" xml:space="preserve">
          <source>Skip past the synopsis for some important notes on performance and portability across different versions of GHC.</source>
          <target state="translated">跳过简介,查看GHC不同版本的性能和可移植性的一些重要说明。</target>
        </trans-unit>
        <trans-unit id="7307357bd7d3f0d162319fc719cd3048a39c24b5" translate="yes" xml:space="preserve">
          <source>Skips &lt;em&gt;zero&lt;/em&gt; or more white space characters. See also &lt;code&gt;&lt;a href=&quot;text-parsec#v:skipMany&quot;&gt;skipMany&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">跳过&lt;em&gt;零个&lt;/em&gt;或多个空格字符。另请参见 &lt;code&gt;&lt;a href=&quot;text-parsec#v:skipMany&quot;&gt;skipMany&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="10c61a6ab1f78695040f7df9004d741983826a75" translate="yes" xml:space="preserve">
          <source>Skips all whitespace.</source>
          <target state="translated">跳过所有whitespace。</target>
        </trans-unit>
        <trans-unit id="09306439fbb2a3fffb7bac3f9143f96e4c0224bb" translate="yes" xml:space="preserve">
          <source>Sleep for the specified duration (in microseconds).</source>
          <target state="translated">指定的睡眠时间(微秒)。</target>
        </trans-unit>
        <trans-unit id="c368b5139ecb1e62bb50ab1cc9c442cac8ff8fb1" translate="yes" xml:space="preserve">
          <source>Sleep for the specified duration (in nanoseconds)</source>
          <target state="translated">指定的睡眠时间(纳秒)</target>
        </trans-unit>
        <trans-unit id="c8f38f865cb98d0faf81d906138a6bd08eacedcc" translate="yes" xml:space="preserve">
          <source>Sleep for the specified duration (in seconds). Returns the time remaining (if the sleep was interrupted by a signal, for example).</source>
          <target state="translated">睡眠时间(秒)。返回剩余时间(例如,如果睡眠被信号打断)。</target>
        </trans-unit>
        <trans-unit id="8594c519b8c02edb97e1e02a88f086d5abda30ff" translate="yes" xml:space="preserve">
          <source>Sleep specified number of microseconds.</source>
          <target state="translated">睡眠指定的微秒数。</target>
        </trans-unit>
        <trans-unit id="dd43b59ee118fca8a0c08fafd9a8e0a347b7c213" translate="yes" xml:space="preserve">
          <source>Sleeping</source>
          <target state="translated">Sleeping</target>
        </trans-unit>
        <trans-unit id="3e955acb7111188bb9a8a1b0b71ec56b07e5b988" translate="yes" xml:space="preserve">
          <source>Sleeping.</source>
          <target state="translated">Sleeping.</target>
        </trans-unit>
        <trans-unit id="541383d9a838b8c712f5a57589a561fb8538c524" translate="yes" xml:space="preserve">
          <source>Sliding</source>
          <target state="translated">Sliding</target>
        </trans-unit>
        <trans-unit id="1898a1d18f337556674473cb2c7360096b53ea67" translate="yes" xml:space="preserve">
          <source>Sm: Symbol, Math</source>
          <target state="translated">Sm:符号,数学</target>
        </trans-unit>
        <trans-unit id="0eea20953a5ecdc4c9ba8f993c0ec7b681e147c5" translate="yes" xml:space="preserve">
          <source>SmallArray#</source>
          <target state="translated">SmallArray#</target>
        </trans-unit>
        <trans-unit id="dd84b2369c5418fcf9675c4a7d7bd92b469cc5bd" translate="yes" xml:space="preserve">
          <source>SmallMutableArray#</source>
          <target state="translated">SmallMutableArray#</target>
        </trans-unit>
        <trans-unit id="082e849cd81567000bc4f04d8d038ea06679cad1" translate="yes" xml:space="preserve">
          <source>Smart constructor for &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#v:Chunk&quot;&gt;Chunk&lt;/a&gt;&lt;/code&gt;. Guarantees the data type invariant.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#v:Chunk&quot;&gt;Chunk&lt;/a&gt;&lt;/code&gt; 智能构造函数。确保数据类型不变。</target>
        </trans-unit>
        <trans-unit id="ae009355769fc5ef8208422e55c29dfac52203b6" translate="yes" xml:space="preserve">
          <source>Smart constructor for &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#v:Chunk&quot;&gt;Chunk&lt;/a&gt;&lt;/code&gt;. Guarantees the data type invariant.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#v:Chunk&quot;&gt;Chunk&lt;/a&gt;&lt;/code&gt; 智能构造函数。确保数据类型不变。</target>
        </trans-unit>
        <trans-unit id="2e036da60869e8f04748dfbc4f8faf996a01967c" translate="yes" xml:space="preserve">
          <source>Smart constructor for &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#v:Empty&quot;&gt;Empty&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">用于 &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#v:Empty&quot;&gt;Empty&lt;/a&gt;&lt;/code&gt; 的智能构造函数。</target>
        </trans-unit>
        <trans-unit id="44841c358a6ad5d6956d6f7643ad238f48ec2e96" translate="yes" xml:space="preserve">
          <source>So &lt;em&gt;GHC guarantees to inline precisely the code that you wrote&lt;/em&gt;, no more and no less. It does this by capturing a copy of the definition of the function to use for inlining (we call this the &amp;ldquo;inline-RHS&amp;rdquo;), which it leaves untouched, while optimising the ordinarily RHS as usual. For externally-visible functions the inline-RHS (not the optimised RHS) is recorded in the interface file.</source>
          <target state="translated">因此，&lt;em&gt;GHC保证准确内联您编写的代码&lt;/em&gt;，没有更多也没有更少。它通过捕获用于内联的函数定义的副本（我们称其为&amp;ldquo; inline-RHS&amp;rdquo;）来做到这一点，使其保持不变，同时照常优化通常的RHS。对于外部可见功能，嵌入式RHS（不是优化的RHS）记录在接口文件中。</target>
        </trans-unit>
        <trans-unit id="5fe59edcdef1b109742fde147ed868b9a7a0980e" translate="yes" xml:space="preserve">
          <source>So for example if you wanted to compress as well, you could use:</source>
          <target state="translated">因此,比如说如果你也想压缩,你可以使用。</target>
        </trans-unit>
        <trans-unit id="3efd5f7f7e186a22a80701125dfe95b2c1eb675c" translate="yes" xml:space="preserve">
          <source>So in fact we use this as our &lt;em&gt;definition&lt;/em&gt; of ambiguity: a type &lt;code&gt;ty&lt;/code&gt; is ambiguous if and only if &lt;code&gt;((undefined :: ty) :: ty)&lt;/code&gt; would fail to typecheck. We use a very similar test for &lt;em&gt;inferred&lt;/em&gt; types, to ensure that they too are unambiguous.</source>
          <target state="translated">所以实际上我们用它作为模糊性的&lt;em&gt;定义&lt;/em&gt;：当且仅当 &lt;code&gt;((undefined :: ty) :: ty)&lt;/code&gt; 不能进行类型检查时，类型 &lt;code&gt;ty&lt;/code&gt; 才是模棱两可的。我们对&lt;em&gt;推断的&lt;/em&gt;类型使用非常相似的测试，以确保它们也毫不含糊。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="12880a1736fb221da50ff1ca5f2e86269792caea" translate="yes" xml:space="preserve">
          <source>So in the previous example, when used in an expression, &lt;code&gt;ExNumPat&lt;/code&gt; has type</source>
          <target state="translated">因此，在前面的示例中，在表达式中使用 &lt;code&gt;ExNumPat&lt;/code&gt; 时,其类型为</target>
        </trans-unit>
        <trans-unit id="a034197073194c7daf973480c055c6e6aa3a8c7b" translate="yes" xml:space="preserve">
          <source>So it looks as if the memo table will keep all its values alive for ever. One way to solve this is to purge the table occasionally, by deleting entries whose keys have died.</source>
          <target state="translated">因此,看起来好像备忘录表会让所有的值永远活着。解决这个问题的一个方法是偶尔清理表,通过删除那些键已经死亡的条目。</target>
        </trans-unit>
        <trans-unit id="71597c36a36665c7487e64f5f299c33bbb186aaa" translate="yes" xml:space="preserve">
          <source>So let&amp;rsquo;s try compiling one of the other modules:</source>
          <target state="translated">因此，让我们尝试编译其他模块之一：</target>
        </trans-unit>
        <trans-unit id="5742f2870ad7881c300055b4c65112e17e4fb6df" translate="yes" xml:space="preserve">
          <source>So that means you can't use a lazy recursive contruction like this:</source>
          <target state="translated">所以,这意味着你不能使用这样的懒惰递归的反语。</target>
        </trans-unit>
        <trans-unit id="8fda64e633b4852cd7ca94d0408efe4729d0d280" translate="yes" xml:space="preserve">
          <source>So the RULE never has a chance to fire, for just the same reasons as in &lt;a href=&quot;#rules-inline&quot;&gt;How rules interact with INLINE/NOINLINE pragmas&lt;/a&gt;.</source>
          <target state="translated">因此，出于与&lt;a href=&quot;#rules-inline&quot;&gt;规则如何与INLINE / NOINLINE编译指示交互的&lt;/a&gt;原因相同，RULE永远没有机会解雇。</target>
        </trans-unit>
        <trans-unit id="2b52171bd94949bb4fc94339a76302c2d48f1f5f" translate="yes" xml:space="preserve">
          <source>So the approach taken here is to provide a representation which subsumes many of the versioning schemes commonly in use, and we provide implementations of &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; and conversion to/from &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; which will be appropriate for some applications, but not all.</source>
          <target state="translated">因此，此处采用的方法是提供一种表示形式，该表示形式包含许多常用的版本控制方案，并且我们提供 &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; 的实现以及从 &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 转换为String的实现，这将适用于某些应用程序，但不适用于所有应用程序。</target>
        </trans-unit>
        <trans-unit id="0b2bbe31ecd7e628eade8e30a170c3dc3d7f0d61" translate="yes" xml:space="preserve">
          <source>So, &lt;code&gt;&lt;a href=&quot;ghc-generics#t:U1&quot;&gt;U1&lt;/a&gt;&lt;/code&gt; is just the unit type, &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-43-:&quot;&gt;:+:&lt;/a&gt;&lt;/code&gt; is just a binary choice like &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-42-:&quot;&gt;:*:&lt;/a&gt;&lt;/code&gt; is a binary pair like the pair constructor &lt;code&gt;(,)&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt; is a value of a specific type &lt;code&gt;c&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt; wraps a value of the generic type argument, which in the lifted world is an &lt;code&gt;f p&lt;/code&gt; (where we do not care about &lt;code&gt;p&lt;/code&gt;).</source>
          <target state="translated">因此， &lt;code&gt;&lt;a href=&quot;ghc-generics#t:U1&quot;&gt;U1&lt;/a&gt;&lt;/code&gt; 只是单位类型， &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-43-:&quot;&gt;:+:&lt;/a&gt;&lt;/code&gt; 只是像 &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 这样的二进制选择， &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-42-:&quot;&gt;:*:&lt;/a&gt;&lt;/code&gt; 是像对构造函数 &lt;code&gt;(,)&lt;/code&gt; 这样的二进制对，而 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt; 是特定类型 &lt;code&gt;c&lt;/code&gt; 的值，而 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt; 则包装了一个泛型类型参数的值，在提升的世界中为 &lt;code&gt;f p&lt;/code&gt; （此处我们不在乎 &lt;code&gt;p&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="4657eb3351469e3823c0006847a0fd29a7706c0a" translate="yes" xml:space="preserve">
          <source>So, before you report a bug because of a core dump, you should probably:</source>
          <target state="translated">所以,在你报告一个因为核心转储的bug之前,你可能应该。</target>
        </trans-unit>
        <trans-unit id="729d5b2c39984d06063f8f75d246a94f19438390" translate="yes" xml:space="preserve">
          <source>So, for example, the expression &lt;code&gt;length &quot;foo&quot;&lt;/code&gt; will give rise to an ambiguous use of &lt;code&gt;IsString a0&lt;/code&gt; which, because of the above rules, will default to &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">因此，例如，表达式 &lt;code&gt;length &quot;foo&quot;&lt;/code&gt; 将引起 &lt;code&gt;IsString a0&lt;/code&gt; 的歧义使用，由于上述规则，该 &lt;code&gt;String&lt;/code&gt; 默认为String。</target>
        </trans-unit>
        <trans-unit id="20df18d1e4fba4a3bc7d6e769107a72a6f7fe96a" translate="yes" xml:space="preserve">
          <source>So, for example, the following should generate no intermediate lists:</source>
          <target state="translated">所以,举例来说,下面应该不会产生中间列表。</target>
        </trans-unit>
        <trans-unit id="d744a90766c844fe7d8671fff6a3de56d1b5eede" translate="yes" xml:space="preserve">
          <source>So, for example, this will be rejected:</source>
          <target state="translated">所以,比如说,这将被拒绝。</target>
        </trans-unit>
        <trans-unit id="518be3884dd7af6372c6e17ccdd411c87beae470" translate="yes" xml:space="preserve">
          <source>So, for example, to force an &lt;code&gt;-Ewurble&lt;/code&gt; option to the assembler, you would tell the driver &lt;code&gt;-opta-Ewurble&lt;/code&gt; (the dash before the E is required).</source>
          <target state="translated">因此，例如，要强制将 &lt;code&gt;-Ewurble&lt;/code&gt; 选项提供给汇编程序，您可以告诉驱动程序 &lt;code&gt;-opta-Ewurble&lt;/code&gt; （要求E之前的破折号）。</target>
        </trans-unit>
        <trans-unit id="9f14098b5f961677d9656a963cd4aba692f5f2a7" translate="yes" xml:space="preserve">
          <source>So: Symbol, Other</source>
          <target state="translated">所以。符号,其他</target>
        </trans-unit>
        <trans-unit id="940c5aa771e5665f182ea719d8a532302770345a" translate="yes" xml:space="preserve">
          <source>Software Transactional Memory: a modular composable concurrency abstraction. See</source>
          <target state="translated">软件事务性内存:一个模块化的可组合并发抽象。参见</target>
        </trans-unit>
        <trans-unit id="709c0f3ded96c18e0831ad69a18b3bb977f5c897" translate="yes" xml:space="preserve">
          <source>Solving &lt;code&gt;HasField&lt;/code&gt; constraints depends on the field selector functions that are generated for each datatype definition:</source>
          <target state="translated">解决 &lt;code&gt;HasField&lt;/code&gt; 约束取决于为每个数据类型定义生成的字段选择器函数：</target>
        </trans-unit>
        <trans-unit id="b0b8f3da4c0650228d0ea82c9191c466b9f63144" translate="yes" xml:space="preserve">
          <source>Some arrows allow application of arrow inputs to other inputs. Instances should satisfy the following laws:</source>
          <target state="translated">有些箭头允许将箭头输入应用于其他输入。实例应满足以下规律。</target>
        </trans-unit>
        <trans-unit id="28b210bb937af75083dc4473d42d0ea425c660eb" translate="yes" xml:space="preserve">
          <source>Some caveats apply, however. In the current implementation, a profiled program is likely to scale much less well than the unprofiled program, because the profiling implementation uses some shared data structures which require locking in the runtime system. Furthermore, the memory allocation statistics collected by the profiled program are stored in shared memory but &lt;em&gt;not&lt;/em&gt; locked (for speed), which means that these figures might be inaccurate for parallel programs.</source>
          <target state="translated">但是，有一些注意事项。在当前的实现中，由于概要分析实现使用某些共享数据结构，这些结构需要在运行时系统中进行锁定，因此，已概要分析的程序的伸缩性可能会比未概要分析的程序好得多。此外，由配置文件程序收集的内存分配统计信息存储在共享内存中，&lt;em&gt;但未&lt;/em&gt;锁定（出于速度考虑），这意味着这些数字对于并行程序可能不准确。</target>
        </trans-unit>
        <trans-unit id="6317acc5aa205f8070b0ac2748c6e332ccdbd67b" translate="yes" xml:space="preserve">
          <source>Some caveats for POSIX systems:</source>
          <target state="translated">POSIX系统的一些注意事项。</target>
        </trans-unit>
        <trans-unit id="d058277da2d734bfb9a747a11fa938e3c5dbc86b" translate="yes" xml:space="preserve">
          <source>Some characters are actually &quot;surrogate&quot; codepoints defined for use in UTF-16. We need to signal an invalid character if we detect them when encoding a sequence of &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;s into &lt;code&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;s because they won't give valid Unicode.</source>
          <target state="translated">某些字符实际上是为在UTF-16中使用而定义的&amp;ldquo;代理&amp;rdquo;代码点。如果在将 &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 序列编码为 &lt;code&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 时检测到无效字符，则需要发信号通知无效字符，因为它们不会提供有效的Unicode。</target>
        </trans-unit>
        <trans-unit id="68375bf516d881b3b2ed9d5fc942f00aafaaba22" translate="yes" xml:space="preserve">
          <source>Some computations may not require the full power of state transformers:</source>
          <target state="translated">有些计算可能不需要状态变压器的全部功率。</target>
        </trans-unit>
        <trans-unit id="42ea672bde0048cb70ad0b8a0bb8375096f86784" translate="yes" xml:space="preserve">
          <source>Some details</source>
          <target state="translated">一些细节</target>
        </trans-unit>
        <trans-unit id="3364836e71a69082c5516662c5ad99b374ef4adf" translate="yes" xml:space="preserve">
          <source>Some details:</source>
          <target state="translated">一些细节。</target>
        </trans-unit>
        <trans-unit id="6890b4c2dd99a5835fbedd20629d84619c665374" translate="yes" xml:space="preserve">
          <source>Some examples of calling of this function are:</source>
          <target state="translated">调用该函数的一些例子是:</target>
        </trans-unit>
        <trans-unit id="128ddf003e6cd572fea01b05f1157adbab6f964a" translate="yes" xml:space="preserve">
          <source>Some flags only make sense for a particular use case.</source>
          <target state="translated">有些标志只对特定的用例有意义。</target>
        </trans-unit>
        <trans-unit id="fd514ba697ee70ab091ab54b2a42db165d0ecf9e" translate="yes" xml:space="preserve">
          <source>Some flags only make sense for particular target platforms.</source>
          <target state="translated">有些标志只对特定的目标平台有意义。</target>
        </trans-unit>
        <trans-unit id="85fb8cff6adf432fb677b83701d455a9ed7df526" translate="yes" xml:space="preserve">
          <source>Some functors support an implementation of &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; that is more efficient than the default one. In particular, if &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; is an expensive operation, it is likely better to use &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; than to &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; over the structure and then use &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一些函子支持 &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; 的实现，该实现比默认实现更有效。特别是，如果 &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; 是一个昂贵的操作，则最好使用 &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; 比对结构进行 &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; 然后再使用 &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; 更好。</target>
        </trans-unit>
        <trans-unit id="7fd908c7cb649beb35906a0b56fcdaee91fd66b5" translate="yes" xml:space="preserve">
          <source>Some functors support an implementation of &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; that is more efficient than the default one. In particular, if &lt;code&gt;&lt;a href=&quot;ghc-base#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; is an expensive operation, it is likely better to use &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; than to &lt;code&gt;&lt;a href=&quot;ghc-base#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; over the structure and then use &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一些函子支持 &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; 的实现，该实现比默认实现更有效。特别是，如果 &lt;code&gt;&lt;a href=&quot;ghc-base#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; 是一个昂贵的操作，则最好使用 &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; 比对结构进行 &lt;code&gt;&lt;a href=&quot;ghc-base#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; 然后再使用 &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; 更好。</target>
        </trans-unit>
        <trans-unit id="17fe68b1000108e55296a80faf01120fd6b37755" translate="yes" xml:space="preserve">
          <source>Some interesting values:</source>
          <target state="translated">一些有趣的价值。</target>
        </trans-unit>
        <trans-unit id="52af78667ee939270bcd5b6ad18a257a8753cf09" translate="yes" xml:space="preserve">
          <source>Some of the Glasgow extensions serve to give you access to the underlying facilities with which we implement Haskell. Thus, you can get at the Raw Iron, if you are willing to write some non-portable code at a more primitive level. You need not be &amp;ldquo;stuck&amp;rdquo; on performance because of the implementation costs of Haskell&amp;rsquo;s &amp;ldquo;high-level&amp;rdquo; features&amp;mdash;you can always code &amp;ldquo;under&amp;rdquo; them. In an extreme case, you can write all your time-critical code in C, and then just glue it together with Haskell!</source>
          <target state="translated">某些Glasgow扩展用于使您能够访问我们实现Haskell的基础设施。因此，如果您愿意在更原始的水平上编写一些不可移植的代码，则可以使用Raw Iron。您不必因为Haskell的&amp;ldquo;高级&amp;rdquo;功能的实现成本而&amp;ldquo;卡住&amp;rdquo;性能-您始终可以在&amp;ldquo;下面&amp;rdquo;进行编码。在极端情况下，您可以使用C编写所有对时间要求严格的代码，然后将其与Haskell粘合在一起！</target>
        </trans-unit>
        <trans-unit id="2f3ff37baa9590a5168edb2c18c20ece84b457d9" translate="yes" xml:space="preserve">
          <source>Some of the standard Haskell libraries behave slightly differently on Windows.</source>
          <target state="translated">一些标准的Haskell库在Windows上的表现略有不同。</target>
        </trans-unit>
        <trans-unit id="d93c006b20ff5d288b7ee94bfa44e0174aead14d" translate="yes" xml:space="preserve">
          <source>Some operations are &lt;em&gt;interruptible&lt;/em&gt;, which means that they can receive asynchronous exceptions even in the scope of a &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;. Any function which may itself block is defined as interruptible; this includes &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; (but not &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt;), and most operations which perform some I/O with the outside world. The reason for having interruptible operations is so that we can write things like</source>
          <target state="translated">有些操作是可&lt;em&gt;中断的&lt;/em&gt;，这意味着即使在 &lt;code&gt;&lt;a href=&quot;control-exception#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; 范围内，它们也可以接收异步异常。任何本身可能阻塞的功能都被定义为可中断的；这包括 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; （但不包括 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; ），以及大多数与外界执行一些I / O的操作。进行可中断操作的原因是我们可以编写类似</target>
        </trans-unit>
        <trans-unit id="f1650f09104f0f20f3551f52363c3fd6cac8d1e0" translate="yes" xml:space="preserve">
          <source>Some operations, such as &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:concat&quot;&gt;concat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:append&quot;&gt;append&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt;, have better complexity than their &lt;a href=&quot;data-bytestring&quot;&gt;Data.ByteString&lt;/a&gt; equivalents, due to optimisations resulting from the list spine structure. For other operations lazy ByteStrings are usually within a few percent of strict ones.</source>
          <target state="translated">由于列表&lt;a href=&quot;data-bytestring&quot;&gt;主干&lt;/a&gt;结构的优化，某些操作（例如 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:concat&quot;&gt;concat&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:append&quot;&gt;append&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt; )比其Data.ByteString等效项具有更高的复杂性。对于其他操作，惰性ByteString通常在严格操作的百分之几之内。</target>
        </trans-unit>
        <trans-unit id="4208a1ba197e8b5c691a4a1ff887427cc02f0547" translate="yes" xml:space="preserve">
          <source>Some operations, such as &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:concat&quot;&gt;concat&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:append&quot;&gt;append&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt;, have better time complexity than their &lt;a href=&quot;data-text&quot;&gt;Data.Text&lt;/a&gt; equivalents, due to the underlying representation being a list of chunks. For other operations, lazy &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;s are usually within a few percent of strict ones, but often with better heap usage if used in a streaming fashion. For data larger than available memory, or if you have tight memory constraints, this module will be the only option.</source>
          <target state="translated">由于底层表示形式是大块列表，因此某些操作（例如 &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:concat&quot;&gt;concat&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:append&quot;&gt;append&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt; )的时间复杂度比其&lt;a href=&quot;data-text&quot;&gt;Data.Text&lt;/a&gt;等效项更好。对于其他操作，惰性 &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; 通常在严格文本的百分之几以内，但如果以流方式使用，则通常具有更好的堆使用率。对于大于可用内存的数据，或者如果您有严格的内存限制，则此模块是唯一的选择。</target>
        </trans-unit>
        <trans-unit id="b475a94a0b9d8eeab0c6c78df1ab308caae52572" translate="yes" xml:space="preserve">
          <source>Some operators will need to pass additional inputs to their subcommands. For example, in an arrow type supporting exceptions, the operator that attaches an exception handler will wish to pass the exception that occurred to the handler. Such an operator might have a type</source>
          <target state="translated">有些操作符需要向其子命令传递额外的输入。例如,在支持异常的箭头类型中,附加异常处理程序的操作符希望将发生的异常传递给处理程序。这样的操作符可能有一个类型为</target>
        </trans-unit>
        <trans-unit id="adcbfb95b4ae4710402965d2ee60695cbdfbdde5" translate="yes" xml:space="preserve">
          <source>Some rough guidelines for a &quot;correct&quot; instance of Stream:</source>
          <target state="translated">对于 &quot;正确的 &quot;Stream实例的一些粗略准则。</target>
        </trans-unit>
        <trans-unit id="2b7bc7b7a65ca6e805a4e89b2183a68cf92c6d14" translate="yes" xml:space="preserve">
          <source>Some simple examples are &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;(,)&lt;/code&gt;:</source>
          <target state="translated">一些简单的示例是 &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;(,)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="fe9d4215e16aa90ccfc39c9dd60b3910ea592ffa" translate="yes" xml:space="preserve">
          <source>Some text with any width. (&lt;code&gt;text s = sizedText (length s) s&lt;/code&gt;)</source>
          <target state="translated">任何宽度的文本。（ &lt;code&gt;text s = sizedText (length s) s&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="91e3fce246936fdedd20321a77fc106afe962848" translate="yes" xml:space="preserve">
          <source>Some text, but without any width. Use for non-printing text such as a HTML or Latex tags</source>
          <target state="translated">一些文字,但没有任何宽度。用于非打印文本,如HTML或Latex标签。</target>
        </trans-unit>
        <trans-unit id="18c25ca98c0020654ec72f5391f7632d8dd84d40" translate="yes" xml:space="preserve">
          <source>Some types can be viewed as a monoid in more than one way, e.g. both addition and multiplication on numbers. In such cases we often define &lt;code&gt;newtype&lt;/code&gt;s and make those instances of &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;, e.g. &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Sum&quot;&gt;Sum&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Product&quot;&gt;Product&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">某些类型可以以一种以上的方式被视为一个monoid，例如数字的加法和乘法。在这种情况下，我们经常定义 &lt;code&gt;newtype&lt;/code&gt; 并创建 &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 的那些实例，例如 &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Sum&quot;&gt;Sum&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Product&quot;&gt;Product&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4289a866eaa1c3bda758b6f62ecf70034a01040" translate="yes" xml:space="preserve">
          <source>Some types can be viewed as a monoid in more than one way, e.g. both addition and multiplication on numbers. In such cases we often define &lt;code&gt;newtype&lt;/code&gt;s and make those instances of &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;, e.g. &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Sum&quot;&gt;Sum&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Product&quot;&gt;Product&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">某些类型可以以一种以上的方式被视为一个monoid，例如数字的加法和乘法。在这种情况下，我们经常定义 &lt;code&gt;newtype&lt;/code&gt; 并创建 &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 的那些实例，例如 &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Sum&quot;&gt;Sum&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Product&quot;&gt;Product&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="626881078c3bdf261f4293b2dfc34fe599fd39ff" translate="yes" xml:space="preserve">
          <source>Some types can be viewed as a monoid in more than one way, e.g. both addition and multiplication on numbers. In such cases we often define &lt;code&gt;newtype&lt;/code&gt;s and make those instances of &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;, e.g. &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Sum&quot;&gt;Sum&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Product&quot;&gt;Product&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">某些类型可以以一种以上的方式被视为一个monoid，例如数字的加法和乘法。在这种情况下，我们经常定义 &lt;code&gt;newtype&lt;/code&gt; 并创建 &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 的那些实例，例如 &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Sum&quot;&gt;Sum&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-semigroup#v:Product&quot;&gt;Product&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="475ad3c8e895ec32aaeaa974377e9ad6d2ee48d5" translate="yes" xml:space="preserve">
          <source>Some types can be viewed as a monoid in more than one way, e.g. both addition and multiplication on numbers. In such cases we often define &lt;code&gt;newtype&lt;/code&gt;s and make those instances of &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;, e.g. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Sum&quot;&gt;Sum&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Product&quot;&gt;Product&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">某些类型可以以一种以上的方式被视为一个monoid，例如数字的加法和乘法。在这种情况下，我们经常定义 &lt;code&gt;newtype&lt;/code&gt; 并创建 &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; 的那些实例，例如 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Sum&quot;&gt;Sum&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Product&quot;&gt;Product&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85da493cec9b2f2a6322674c1ac4d8f30eb807bc" translate="yes" xml:space="preserve">
          <source>Some types can be viewed as a monoid in more than one way, e.g. both addition and multiplication on numbers. In such cases we often define &lt;code&gt;newtype&lt;/code&gt;s and make those instances of &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;, e.g. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-semigroup#v:Sum&quot;&gt;Sum&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-semigroup#v:Product&quot;&gt;Product&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73210f1f825c5682938244f87045d72fe31e41a" translate="yes" xml:space="preserve">
          <source>SomeAsyncException</source>
          <target state="translated">SomeAsyncException</target>
        </trans-unit>
        <trans-unit id="a9fca238800c0171a88f23ffe29cc203d76bd4a0" translate="yes" xml:space="preserve">
          <source>SomeException</source>
          <target state="translated">SomeException</target>
        </trans-unit>
        <trans-unit id="e788303f6b7afd065799324e55a5e86228b44f37" translate="yes" xml:space="preserve">
          <source>SomeNat</source>
          <target state="translated">SomeNat</target>
        </trans-unit>
        <trans-unit id="bc2716c489a873389d9fdf81b1400ea55e8f9815" translate="yes" xml:space="preserve">
          <source>SomeSymbol</source>
          <target state="translated">SomeSymbol</target>
        </trans-unit>
        <trans-unit id="c0f5488352bb1c40f30a81f2f5cf8c79569317da" translate="yes" xml:space="preserve">
          <source>SomeTypeRep</source>
          <target state="translated">SomeTypeRep</target>
        </trans-unit>
        <trans-unit id="253471bb3a6ba0fcfdfcb49655fc59ce4f00689c" translate="yes" xml:space="preserve">
          <source>Sometimes &lt;a href=&quot;#extension-AllowAmbiguousTypes&quot;&gt;&lt;code&gt;AllowAmbiguousTypes&lt;/code&gt;&lt;/a&gt; does not mix well with &lt;a href=&quot;#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352ea77080f423e22959b16cda976119340bb0af" translate="yes" xml:space="preserve">
          <source>Sometimes an external entity is a pure function, except that it passes arguments and/or results via pointers. The function &lt;code&gt;unsafeLocalState&lt;/code&gt; permits the packaging of such entities as pure functions.</source>
          <target state="translated">有时，外部实体是纯函数，除了它通过指针传递参数和/或结果。函数 &lt;code&gt;unsafeLocalState&lt;/code&gt; 允许将此类实体打包为纯函数。</target>
        </trans-unit>
        <trans-unit id="7b65299fa56b5c60fa5a03a98420e1718fc83f32" translate="yes" xml:space="preserve">
          <source>Sometimes even the termination rules of &lt;a href=&quot;#instance-termination&quot;&gt;Instance termination rules&lt;/a&gt; are too onerous. So GHC allows you to experiment with more liberal rules: if you use the experimental extension &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt;&lt;code&gt;UndecidableInstances&lt;/code&gt;&lt;/a&gt;, both the Paterson Conditions and the Coverage Condition (described in &lt;a href=&quot;#instance-termination&quot;&gt;Instance termination rules&lt;/a&gt;) are lifted. Termination is still ensured by having a fixed-depth recursion stack. If you exceed the stack depth you get a sort of backtrace, and the opportunity to increase the stack depth with &lt;code&gt;-freduction-depth=⟨n⟩&lt;/code&gt;. However, if you should exceed the default reduction depth limit, it is probably best just to disable depth checking, with &lt;code&gt;-freduction-depth=0&lt;/code&gt;. The exact depth your program requires depends on minutiae of your code, and it may change between minor GHC releases. The safest bet for released code &amp;ndash; if you&amp;rsquo;re sure that it should compile in finite time &amp;ndash; is just to disable the check.</source>
          <target state="translated">有时，甚至&lt;a href=&quot;#instance-termination&quot;&gt;实例终止规则&lt;/a&gt;的终止规则也很繁琐。因此，GHC允许您尝试更宽松的规则：如果您使用实验性扩展&lt;a href=&quot;#extension-UndecidableInstances&quot;&gt; &lt;code&gt;UndecidableInstances&lt;/code&gt; &lt;/a&gt;，则同时解除了Paterson条件和Coverage条件（在&lt;a href=&quot;#instance-termination&quot;&gt;实例终止规则中&lt;/a&gt;描述）。通过具有固定深度的递归堆栈仍可确保终止。如果您超过堆栈深度，则会得到某种回溯，并且有机会使用 &lt;code&gt;-freduction-depth=⟨n⟩&lt;/code&gt; 增加堆栈深度。但是，如果您应该超过默认的缩小深度限制，则最好仅使用 &lt;code&gt;-freduction-depth=0&lt;/code&gt; 禁用深度检查。程序所需的确切深度取决于代码的细节，在GHC的次要发行版中，它可能会有所不同。对于已发布的代码，最安全的选择是（如果您确定应在有限的时间内进行编译）只是禁用该检查。</target>
        </trans-unit>
        <trans-unit id="85a2578bf18e78e6f25ba61291fd14a9266c8f2c" translate="yes" xml:space="preserve">
          <source>Sometimes it is too onerous to handle exceptions in the middle of a critical piece of stateful code. There are three ways to handle this kind of situation:</source>
          <target state="translated">有时,在一段关键的有状态代码中间处理异常太过繁琐。有三种方法可以处理这种情况。</target>
        </trans-unit>
        <trans-unit id="ea719fb646d5a1bb3ad284e63e1f0944c3e14f3d" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to access the value-level literal associated with a type-level literal. This is done with the functions &lt;code&gt;natVal&lt;/code&gt; and &lt;code&gt;symbolVal&lt;/code&gt;. For example:</source>
          <target state="translated">有时，访问与类型级文字关联的值级文字很有用。这是通过功能 &lt;code&gt;natVal&lt;/code&gt; 和 &lt;code&gt;symbolVal&lt;/code&gt; 完成的。例如：</target>
        </trans-unit>
        <trans-unit id="8def09fa30fffc199ff3ef990e81004ba91a2022" translate="yes" xml:space="preserve">
          <source>Sometimes it is useful to make the connection between a source file and the command-line options it requires quite tight. For instance, if a Haskell source file deliberately uses name shadowing, it should be compiled with the &lt;code&gt;-Wno-name-shadowing&lt;/code&gt; option. Rather than maintaining the list of per-file options in a &lt;code&gt;Makefile&lt;/code&gt;, it is possible to do this directly in the source file using the &lt;code&gt;OPTIONS_GHC&lt;/code&gt;&lt;a href=&quot;glasgow_exts#options-pragma&quot;&gt;pragma&lt;/a&gt;</source>
          <target state="translated">有时，在源文件和要求非常严格的命令行选项之间建立连接会很有用。例如，如果Haskell源文件故意使用名称阴影，则应使用 &lt;code&gt;-Wno-name-shadowing&lt;/code&gt; 选项进行编译。不必在 &lt;code&gt;Makefile&lt;/code&gt; 中维护每个文件选项的列表，而是可以使用 &lt;code&gt;OPTIONS_GHC&lt;/code&gt; &lt;a href=&quot;glasgow_exts#options-pragma&quot;&gt;pragma&lt;/a&gt;直接在源文件中执行此操作</target>
        </trans-unit>
        <trans-unit id="a1328ebf20aa66cb0e24bd446367b2121bd33387" translate="yes" xml:space="preserve">
          <source>Sometimes the programmer wants to constrain the inference process. For example, the base library contains the following definition:</source>
          <target state="translated">有时,程序员希望对推理过程进行约束。例如,基础库包含以下定义。</target>
        </trans-unit>
        <trans-unit id="4afdc6ef96718e4fb77ab2b55eacfaef686da59b" translate="yes" xml:space="preserve">
          <source>Sometimes there &lt;em&gt;is&lt;/em&gt; no &amp;ldquo;outermost level&amp;rdquo;, in which case no implicit quantification happens:</source>
          <target state="translated">有时&lt;em&gt;是&lt;/em&gt;没有&amp;ldquo;最外层&amp;rdquo;，在这种情况下没有隐式量化发生：</target>
        </trans-unit>
        <trans-unit id="53fa2a9068573e71d72c1598f67c9f1f9ccc7a49" translate="yes" xml:space="preserve">
          <source>Sometimes we want to be able to wake up a Haskell thread from some C code. For example, when using a callback-based C API, we register a C callback and then we need to wait for the callback to run.</source>
          <target state="translated">有时候,我们希望能够从一些 C 代码中唤醒一个 Haskell 线程。例如,当使用基于回调的C API时,我们注册一个C回调,然后我们需要等待回调运行。</target>
        </trans-unit>
        <trans-unit id="5b98ed9742a9bf9e304f489711d98115561e28fa" translate="yes" xml:space="preserve">
          <source>Sometimes when you are writing a tool, knowing the source code is not enough, you also have to know details about the modules that you import. In this case we suggest using the &lt;code&gt;interfaceLoadAction&lt;/code&gt;. This will be called each time when the code of an already compiled module is loaded. It will be invoked for modules from installed packages and even modules that are installed with GHC. It will NOT be invoked with your own modules.</source>
          <target state="translated">有时，在编写工具时，仅了解源代码还不够，还必须了解有关所导入模块的详细信息。在这种情况下，我们建议使用 &lt;code&gt;interfaceLoadAction&lt;/code&gt; 。每次加载已编译模块的代码时，将调用此方法。对于已安装的软件包中的模块，甚至是与GHC一起安装的模块，都将调用它。不会用您自己的模块调用它。</target>
        </trans-unit>
        <trans-unit id="b06fde4b131102a7013c432e477b901c95375ea6" translate="yes" xml:space="preserve">
          <source>Sometimes you want to catch two different sorts of exception. You could do something like</source>
          <target state="translated">有时你想抓住两种不同的异常。你可以做这样的事情</target>
        </trans-unit>
        <trans-unit id="e2da9cda1d9f8f695ec767c64ba9ffca28ae7bf4" translate="yes" xml:space="preserve">
          <source>Sometimes you want to control exactly when in GHC&amp;rsquo;s pipeline the &lt;a href=&quot;#pragma-INLINE&quot;&gt;&lt;code&gt;INLINE&lt;/code&gt;&lt;/a&gt; pragma is switched on. Inlining happens only during runs of the &lt;em&gt;simplifier&lt;/em&gt;. Each run of the simplifier has a different &lt;em&gt;phase number&lt;/em&gt;; the phase number decreases towards zero. If you use &lt;a href=&quot;debugging#ghc-flag--dverbose-core2core&quot;&gt;&lt;code&gt;-dverbose-core2core&lt;/code&gt;&lt;/a&gt; you will see the sequence of phase numbers for successive runs of the simplifier. In an &lt;a href=&quot;#pragma-INLINE&quot;&gt;&lt;code&gt;INLINE&lt;/code&gt;&lt;/a&gt; pragma you can optionally specify a phase number, thus:</source>
          <target state="translated">有时您想精确控制何时在GHC管道中打开&lt;a href=&quot;#pragma-INLINE&quot;&gt; &lt;code&gt;INLINE&lt;/code&gt; &lt;/a&gt;编译指示。内联仅在&lt;em&gt;简化程序&lt;/em&gt;运行期间发生。简化器的每次运行都具有不同的&lt;em&gt;相数&lt;/em&gt;。相数朝零减小。如果使用&lt;a href=&quot;debugging#ghc-flag--dverbose-core2core&quot;&gt; &lt;code&gt;-dverbose-core2core&lt;/code&gt; &lt;/a&gt;，则将看到简化器连续运行的相序序列。在&lt;a href=&quot;#pragma-INLINE&quot;&gt; &lt;code&gt;INLINE&lt;/code&gt; &lt;/a&gt;编译指示中，您可以选择指定一个阶段号，因此：</target>
        </trans-unit>
        <trans-unit id="006f1663a6f8933a75b44849a9e084f9ff1e3039" translate="yes" xml:space="preserve">
          <source>Sometimes, however, this approach is over-cautious, and we &lt;em&gt;do&lt;/em&gt; want the rule to fire, even though doing so would duplicate redex. There is no way that GHC can work out when this is a good idea, so we provide the &lt;code&gt;CONLIKE&lt;/code&gt; pragma to declare it, thus:</source>
          <target state="translated">但是，有时这种方法过于谨慎，我们&lt;em&gt;确实&lt;/em&gt;希望触发规则，即使这样做会重复redex。当这是一个好主意时，GHC &lt;code&gt;CONLIKE&lt;/code&gt; ，因此我们提供CONLIKE编译声明来声明它，因此：</target>
        </trans-unit>
        <trans-unit id="a2269b3b0400cc7cd6a06ab997508af71a4124d6" translate="yes" xml:space="preserve">
          <source>Sometimes, this ordering does not respect dependency. For example:</source>
          <target state="translated">有时,这种排序并不尊重依赖性。例如:</target>
        </trans-unit>
        <trans-unit id="ee56244ceec6c1a6fa75c93f810b50c4d542e710" translate="yes" xml:space="preserve">
          <source>Sophisticated &lt;strong&gt;make&lt;/strong&gt; variants may achieve some of the above more elegantly. Notably, &lt;strong&gt;gmake&lt;/strong&gt;&amp;lsquo;s pattern rules let you write the more comprehensible:</source>
          <target state="translated">复杂的&lt;strong&gt;制造&lt;/strong&gt;变体可以更优雅地实现上述某些功能。值得注意的是，&lt;strong&gt;gmake&lt;/strong&gt;的模式规则使您可以更容易理解：</target>
        </trans-unit>
        <trans-unit id="09c0e674e4dc5b76e5d8b55c7b5621e47b8f3761" translate="yes" xml:space="preserve">
          <source>Sophisticated &lt;strong&gt;make&lt;/strong&gt; variants may achieve some of the above more elegantly. Notably, &lt;strong&gt;gmake&lt;/strong&gt;&amp;rsquo;s pattern rules let you write the more comprehensible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f5e15f2fdfc060865a0321280cb4f55d388b76" translate="yes" xml:space="preserve">
          <source>Sort Functions</source>
          <target state="translated">排序功能</target>
        </trans-unit>
        <trans-unit id="62fb73f0b079b659df3c5371cf47f1e52a5149bf" translate="yes" xml:space="preserve">
          <source>Sort a list by comparing the results of a key function applied to each element. &lt;code&gt;sortOn f&lt;/code&gt; is equivalent to &lt;code&gt;sortBy (comparing f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="translated">通过比较应用于每个元素的键函数的结果对列表进行排序。 &lt;code&gt;sortOn f&lt;/code&gt; 与 &lt;code&gt;sortBy (comparing f)&lt;/code&gt; 等效，但具有性能优势，即仅对输入列表中的每个元素评估一次 &lt;code&gt;f&lt;/code&gt; 。这称为&amp;ldquo;装饰-排序-不装饰&amp;rdquo;范式或Schwartzian变换。</target>
        </trans-unit>
        <trans-unit id="2ddd8184205974debf7f3c1270f917403b807d65" translate="yes" xml:space="preserve">
          <source>Sort a stream.</source>
          <target state="translated">排序流。</target>
        </trans-unit>
        <trans-unit id="40db53ed68be5c8c190ee806ce61f73a8ec9187a" translate="yes" xml:space="preserve">
          <source>SortID</source>
          <target state="translated">SortID</target>
        </trans-unit>
        <trans-unit id="378e9e163b7eecefadb4415cae533096e336c4ab" translate="yes" xml:space="preserve">
          <source>Sorting</source>
          <target state="translated">Sorting</target>
        </trans-unit>
        <trans-unit id="2ad02c4be5346ff5c157ce5f4cd2e3ed1947b8de" translate="yes" xml:space="preserve">
          <source>Sorts by how big the types the quantified type variables in the type of the function would have to be in order to match the type of the hole.</source>
          <target state="translated">按函数类型中的量化类型变量的类型有多大来排序,才能与洞的类型相匹配。</target>
        </trans-unit>
        <trans-unit id="b1d138a6f0e8a54e36d527519fc55c09d2d7ec60" translate="yes" xml:space="preserve">
          <source>Sound Sound Sound Sound Sound Sound Sound Sound Sound Sound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e31931555fd60b594f2f953ed76be0f1dcdaf1" translate="yes" xml:space="preserve">
          <source>Sound the audible bell.</source>
          <target state="translated">敲响发声的钟声。</target>
        </trans-unit>
        <trans-unit id="2c0fc29fc40b7716fd55f76b69dee51ad61c5e5e" translate="yes" xml:space="preserve">
          <source>Sound the bell at the start of each (major) garbage collection.</source>
          <target state="translated">在每次(主要)垃圾收集开始时鸣钟。</target>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="translated">Source</target>
        </trans-unit>
        <trans-unit id="f0504d680e5497190bf98af48be51d5fff8ab674" translate="yes" xml:space="preserve">
          <source>Source file</source>
          <target state="translated">源文件</target>
        </trans-unit>
        <trans-unit id="8091484c6f31f1117923c9664497a1cbe6670631" translate="yes" xml:space="preserve">
          <source>Source filename</source>
          <target state="translated">源文件名</target>
        </trans-unit>
        <trans-unit id="043832aaa925a2acb78aeef1dc0d996a319150fd" translate="yes" xml:space="preserve">
          <source>Source handle</source>
          <target state="translated">源处理</target>
        </trans-unit>
        <trans-unit id="603143aeb3609daada9d014cfbf58b60a1064c4b" translate="yes" xml:space="preserve">
          <source>Source location of the definition of the static pointer as a &lt;code&gt;(Line, Column)&lt;/code&gt; pair.</source>
          <target state="translated">静态指针定义为 &lt;code&gt;(Line, Column)&lt;/code&gt; 对的源位置。</target>
        </trans-unit>
        <trans-unit id="cf91d5597c65567b1d8cfb4e58887c82e5f45402" translate="yes" xml:space="preserve">
          <source>Source locations</source>
          <target state="translated">来源地点</target>
        </trans-unit>
        <trans-unit id="9269640b7621532a77fa3da76b4927eb7157ce5d" translate="yes" xml:space="preserve">
          <source>Source offset</source>
          <target state="translated">来源偏移</target>
        </trans-unit>
        <trans-unit id="31f641a733c36dd6c3795da4c26c25e30c4a88a3" translate="yes" xml:space="preserve">
          <source>SourceLazy</source>
          <target state="translated">SourceLazy</target>
        </trans-unit>
        <trans-unit id="c59e0c0b529b14a96443ec3615e2336a63030855" translate="yes" xml:space="preserve">
          <source>SourceName</source>
          <target state="translated">SourceName</target>
        </trans-unit>
        <trans-unit id="5a4297bb014f5cf1fa133435123ed12b9dec1eaa" translate="yes" xml:space="preserve">
          <source>SourceNoUnpack</source>
          <target state="translated">SourceNoUnpack</target>
        </trans-unit>
        <trans-unit id="d96804e995fc1e9dd523112b9b6d5f6a825f864f" translate="yes" xml:space="preserve">
          <source>SourcePos</source>
          <target state="translated">SourcePos</target>
        </trans-unit>
        <trans-unit id="b9170cda31822359eabc35642ca621bb815194db" translate="yes" xml:space="preserve">
          <source>SourceStrict</source>
          <target state="translated">SourceStrict</target>
        </trans-unit>
        <trans-unit id="d67ef83bb2f0c766cc25fcf6159919dc7d8f3b96" translate="yes" xml:space="preserve">
          <source>SourceStrictness</source>
          <target state="translated">SourceStrictness</target>
        </trans-unit>
        <trans-unit id="3e68c9926b79128e3b93b88f0c422ddc877e5da4" translate="yes" xml:space="preserve">
          <source>SourceStrictnessQ</source>
          <target state="translated">SourceStrictnessQ</target>
        </trans-unit>
        <trans-unit id="4fdc91f154397fd423b7c564665299527b2b9056" translate="yes" xml:space="preserve">
          <source>SourceUnpack</source>
          <target state="translated">SourceUnpack</target>
        </trans-unit>
        <trans-unit id="d5d27525ee31c761d0fdc974fbd22b6cf6c9cb62" translate="yes" xml:space="preserve">
          <source>SourceUnpackedness</source>
          <target state="translated">SourceUnpackedness</target>
        </trans-unit>
        <trans-unit id="83502607cb7bce36f846e5f9a7b497ea681a8308" translate="yes" xml:space="preserve">
          <source>SourceUnpackednessQ</source>
          <target state="translated">SourceUnpackednessQ</target>
        </trans-unit>
        <trans-unit id="1ec08447a17ccb7c6ca810c40ad10be834d1e8a5" translate="yes" xml:space="preserve">
          <source>Sourcing untrusted &lt;code&gt;./.ghci&lt;/code&gt; files is a security risk. They can contain arbitrary commands that will be executed as the user. Use &lt;a href=&quot;#ghci-cmd-:set%20local-config&quot;&gt;&lt;code&gt;:set local-config&lt;/code&gt;&lt;/a&gt; to inhibit the processing of &lt;code&gt;./.ghci&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8c9b124d521027647b4f270cb2872798f9264e" translate="yes" xml:space="preserve">
          <source>Space</source>
          <target state="translated">Space</target>
        </trans-unit>
        <trans-unit id="ad9cc5e6543539ff293f4fc68a09fe3acf82b92e" translate="yes" xml:space="preserve">
          <source>SpacingCombiningMark</source>
          <target state="translated">SpacingCombiningMark</target>
        </trans-unit>
        <trans-unit id="080e88efe900aeae1b711b9bfcae61f969382e29" translate="yes" xml:space="preserve">
          <source>Span</source>
          <target state="translated">Span</target>
        </trans-unit>
        <trans-unit id="97144deb6d321fefadcfadc18fed0e9eccfc3e8c" translate="yes" xml:space="preserve">
          <source>Spans are described with the following attributes,</source>
          <target state="translated">跨度用以下属性描述:</target>
        </trans-unit>
        <trans-unit id="bb53c54b6964fdaec13b585fa63970c44968ee3d" translate="yes" xml:space="preserve">
          <source>SpecConstr annotations</source>
          <target state="translated">SpecConstr注释</target>
        </trans-unit>
        <trans-unit id="9595c16e661dbb05063bc2ca0da70a1e3bb0ef75" translate="yes" xml:space="preserve">
          <source>SpecConstrAnnotation</source>
          <target state="translated">SpecConstrAnnotation</target>
        </trans-unit>
        <trans-unit id="3c30c6a89cc7c0b5ea6d835b21dc823e4e135afe" translate="yes" xml:space="preserve">
          <source>Special 0-sized bigNat returned in case of arithmetic underflow</source>
          <target state="translated">当发生算术溢出时,返回特殊的0大小的bigNat。</target>
        </trans-unit>
        <trans-unit id="f87de3fcfe3911d0ff478bdc8f381a0ceefd1153" translate="yes" xml:space="preserve">
          <source>Special biased folds</source>
          <target state="translated">特殊偏向性褶皱</target>
        </trans-unit>
        <trans-unit id="75f613a38c9a77eef52fd9053dd584ff64dc4df0" translate="yes" xml:space="preserve">
          <source>Special cases</source>
          <target state="translated">特殊情况</target>
        </trans-unit>
        <trans-unit id="ae1bd102fec7d8d3ed1f2139398af55953e9354d" translate="yes" xml:space="preserve">
          <source>Special cases for standard input and output</source>
          <target state="translated">标准输入和输出的特殊情况</target>
        </trans-unit>
        <trans-unit id="26fd2f94c5577053b977d9b4f21e480f7943f1e3" translate="yes" xml:space="preserve">
          <source>Special directories for storing user-specific application data, configuration, and cache files, as specified by the &lt;a href=&quot;http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot;&gt;XDG Base Directory Specification&lt;/a&gt;.</source>
          <target state="translated">特殊目录，用于存储用户特定的应用程序数据，配置和缓存文件，如&lt;a href=&quot;http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot;&gt;XDG基本目录规范&lt;/a&gt;所指定。</target>
        </trans-unit>
        <trans-unit id="d4cb50fb388e854463a9590daead0898380e35ef" translate="yes" xml:space="preserve">
          <source>Special folds</source>
          <target state="translated">特殊褶皱</target>
        </trans-unit>
        <trans-unit id="c32e14686a320dbd5a9d8033ad47f1eb93c03936" translate="yes" xml:space="preserve">
          <source>Special lists</source>
          <target state="translated">特别名单</target>
        </trans-unit>
        <trans-unit id="cdc58545155006d2a45e2dfddaca149b408705ae" translate="yes" xml:space="preserve">
          <source>Specialise &lt;code&gt;INLINABLE&lt;/code&gt; (&lt;a href=&quot;glasgow_exts#inlinable-pragma&quot;&gt;INLINABLE pragma&lt;/a&gt;) type-class-overloaded functions imported from other modules for the types at which they are called in this module. Note that specialisation must be enabled (by &lt;code&gt;-fspecialise&lt;/code&gt;) for this to have any effect.</source>
          <target state="translated">从其他模块导入的 &lt;code&gt;INLINABLE&lt;/code&gt; （&lt;a href=&quot;glasgow_exts#inlinable-pragma&quot;&gt;INLINABLE pragma&lt;/a&gt;）类型类重载函数专门用于在此模块中调用它们的类型。请注意，必须启用专门化（通过 &lt;code&gt;-fspecialise&lt;/code&gt; ），这样才能生效。</target>
        </trans-unit>
        <trans-unit id="c00895b6256e0da507e996ad332925f32b69d743" translate="yes" xml:space="preserve">
          <source>Specialise each type-class-overloaded function defined in this module for the types at which it is called in this module. If &lt;a href=&quot;#ghc-flag--fcross-module-specialise&quot;&gt;&lt;code&gt;-fcross-module-specialise&lt;/code&gt;&lt;/a&gt; is set imported functions that have an INLINABLE pragma (&lt;a href=&quot;glasgow_exts#inlinable-pragma&quot;&gt;INLINABLE pragma&lt;/a&gt;) will be specialised as well.</source>
          <target state="translated">将在此模块中定义的每个类型类重载函数专用于在此模块中被调用的类型。如果设置了&lt;a href=&quot;#ghc-flag--fcross-module-specialise&quot;&gt; &lt;code&gt;-fcross-module-specialise&lt;/code&gt; &lt;/a&gt;，则具有INLINABLE pragma（&lt;a href=&quot;glasgow_exts#inlinable-pragma&quot;&gt;INLINABLE pragma&lt;/a&gt;）的导入函数也将被专门化。</target>
        </trans-unit>
        <trans-unit id="91b524c5325f442d5791af4d4e088519228758b4" translate="yes" xml:space="preserve">
          <source>Specialised tuple for case conversion.</source>
          <target state="translated">箱体转换的专用元组。</target>
        </trans-unit>
        <trans-unit id="aa6f74a1731dff3e057af83f6b26846c6109fda9" translate="yes" xml:space="preserve">
          <source>Specialised version of</source>
          <target state="translated">专门版</target>
        </trans-unit>
        <trans-unit id="d26aed4701469cdcb4cf41a1cd41000f51658618" translate="yes" xml:space="preserve">
          <source>Specialised versions</source>
          <target state="translated">特殊版本</target>
        </trans-unit>
        <trans-unit id="affef48fe2e4691035f47470b13d3b630e74210d" translate="yes" xml:space="preserve">
          <source>Specialize a call with an explicit constructor argument, even if the argument is not scrutinised in the body of the function</source>
          <target state="translated">对带有显式构造参数的调用进行特殊化,即使该参数没有在函数主体中被仔细检查。</target>
        </trans-unit>
        <trans-unit id="c514b8a0eaa25c7b6b293ac4abbe55d6c5e83934" translate="yes" xml:space="preserve">
          <source>Specialize the overloading on key functions in your program. See &lt;a href=&quot;glasgow_exts#specialize-pragma&quot;&gt;SPECIALIZE pragma&lt;/a&gt; and &lt;a href=&quot;glasgow_exts#specialize-instance-pragma&quot;&gt;SPECIALIZE instance pragma&lt;/a&gt;.</source>
          <target state="translated">专门处理程序中关键功能的重载。请参见&lt;a href=&quot;glasgow_exts#specialize-pragma&quot;&gt;SPECIALIZE pragma&lt;/a&gt;和&lt;a href=&quot;glasgow_exts#specialize-instance-pragma&quot;&gt;SPECIALIZE实例pragma&lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
