<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="6df564da800ea9db332a4e4f70ac3b7baee68108" translate="yes" xml:space="preserve">
          <source>Word64X8#</source>
          <target state="translated">Word64X8#</target>
        </trans-unit>
        <trans-unit id="7d4f09dfc217ef6de83fd0a7817a34a9c524f5f8" translate="yes" xml:space="preserve">
          <source>Word8</source>
          <target state="translated">Word8</target>
        </trans-unit>
        <trans-unit id="1026530b7f2b7d11ceed950f769ae8af9db41c6d" translate="yes" xml:space="preserve">
          <source>Word8#</source>
          <target state="translated">Word8#</target>
        </trans-unit>
        <trans-unit id="46fa1330e06c95858d3c751456971104c43240e6" translate="yes" xml:space="preserve">
          <source>Word8ElemRep</source>
          <target state="translated">Word8ElemRep</target>
        </trans-unit>
        <trans-unit id="bb25378aca5d0bf9417565eddafe0c9955fced88" translate="yes" xml:space="preserve">
          <source>Word8Rep</source>
          <target state="translated">Word8Rep</target>
        </trans-unit>
        <trans-unit id="6d9c171610680a48a7e1adce25e5ef2175c1786b" translate="yes" xml:space="preserve">
          <source>Word8X16#</source>
          <target state="translated">Word8X16#</target>
        </trans-unit>
        <trans-unit id="7d2b3864aa2a328b268de16ec90a676d025166df" translate="yes" xml:space="preserve">
          <source>Word8X32#</source>
          <target state="translated">Word8X32#</target>
        </trans-unit>
        <trans-unit id="420bed9409614065e79233ee278151c88a99c07c" translate="yes" xml:space="preserve">
          <source>Word8X64#</source>
          <target state="translated">Word8X64#</target>
        </trans-unit>
        <trans-unit id="84c6a57a62c9a723bc4c3a3bbe6ffc9a885219d9" translate="yes" xml:space="preserve">
          <source>WordPtr</source>
          <target state="translated">WordPtr</target>
        </trans-unit>
        <trans-unit id="68dc8baeafc9a279622fb5e31be3ed83d95357da" translate="yes" xml:space="preserve">
          <source>WordRep</source>
          <target state="translated">WordRep</target>
        </trans-unit>
        <trans-unit id="7ba9e8f41622b0ccfc835a4f2140ab6eea7b7e9b" translate="yes" xml:space="preserve">
          <source>Work left-to-right through the input list of type variables, with a cursor.</source>
          <target state="translated">用光标从左到右在类型变量的输入列表中工作。</target>
        </trans-unit>
        <trans-unit id="bc1c455e1b31ed1393785a6cdc3045bbb118f243" translate="yes" xml:space="preserve">
          <source>Workaround so that we can have a Haskell 98 instance &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#t:Error&quot;&gt;Error&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">解决方法，以便我们可以使用Haskell 98实例 &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#t:Error&quot;&gt;Error&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ab49cd9ef02b20b8f0a395f52a3bac5f961ae20" translate="yes" xml:space="preserve">
          <source>Worker-wrapper removes unused arguments, but usually we do not remove them all, lest it turn a function closure into a thunk, thereby perhaps creating a space leak and/or disrupting inlining. This flag allows worker/wrapper to remove &lt;em&gt;all&lt;/em&gt; value lambdas.</source>
          <target state="translated">Worker-wrapper会删除未使用的参数，但是通常我们不会全部删除它们，以免将函数关闭变成笨拙的东西，从而可能造成空间泄漏和/或破坏内联。此标志允许工作程序/包装程序删除&lt;em&gt;所有&lt;/em&gt;值lambda。</target>
        </trans-unit>
        <trans-unit id="61f4d4dd918269bf5a5ff69500737f2e3c652d80" translate="yes" xml:space="preserve">
          <source>Working with equality</source>
          <target state="translated">与平等有关的工作</target>
        </trans-unit>
        <trans-unit id="b7851eadac070ddfea609696fdeb164b7899ebe8" translate="yes" xml:space="preserve">
          <source>Would result in a generated &lt;code&gt;Functor&lt;/code&gt; instance like so:</source>
          <target state="translated">会生成一个如下所示的 &lt;code&gt;Functor&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="6ee562876821329b8991ff4daaadbf4f98ef9b98" translate="yes" xml:space="preserve">
          <source>Wrap a BCO in a &lt;code&gt;AP_UPD&lt;/code&gt; thunk which will be updated with the value of the BCO when evaluated.</source>
          <target state="translated">将BCO包裹在 &lt;code&gt;AP_UPD&lt;/code&gt; 中，将在评估时使用BCO的值进行更新。</target>
        </trans-unit>
        <trans-unit id="16397dd6317efa9c9836ee42453758565f8d25ed" translate="yes" xml:space="preserve">
          <source>Wrap an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation to time out and return &lt;code&gt;Nothing&lt;/code&gt; in case no result is available within &lt;code&gt;n&lt;/code&gt; microseconds (&lt;code&gt;1/10^6&lt;/code&gt; seconds). In case a result is available before the timeout expires, &lt;code&gt;Just a&lt;/code&gt; is returned. A negative timeout interval means &quot;wait indefinitely&quot;. When specifying long timeouts, be careful not to exceed &lt;code&gt;maxBound :: Int&lt;/code&gt;.</source>
          <target state="translated">包装 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 计算以超时，如果在 &lt;code&gt;n&lt;/code&gt; 微秒（ &lt;code&gt;1/10^6&lt;/code&gt; 秒）内没有结果可用，则返回 &lt;code&gt;Nothing&lt;/code&gt; 。如果在超时之前有结果可用，则 &lt;code&gt;Just a&lt;/code&gt; 返回a。负的超时间隔表示&amp;ldquo;无限期等待&amp;rdquo;。指定长时间超时时，请注意不要超过 &lt;code&gt;maxBound :: Int&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="769d436eab4aa870cf748d72592199f75a9fdf28" translate="yes" xml:space="preserve">
          <source>Wrap an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation to time out and return &lt;code&gt;Nothing&lt;/code&gt; in case no result is available within &lt;code&gt;n&lt;/code&gt; microseconds (&lt;code&gt;1/10^6&lt;/code&gt; seconds). In case a result is available before the timeout expires, &lt;code&gt;Just a&lt;/code&gt; is returned. A negative timeout interval means &quot;wait indefinitely&quot;. When specifying long timeouts, be careful not to exceed &lt;code&gt;maxBound :: Int&lt;/code&gt;.</source>
          <target state="translated">包装 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 计算以超时，如果在 &lt;code&gt;n&lt;/code&gt; 微秒（ &lt;code&gt;1/10^6&lt;/code&gt; 秒）内没有结果可用，则返回 &lt;code&gt;Nothing&lt;/code&gt; 。如果在超时之前有结果可用，则 &lt;code&gt;Just a&lt;/code&gt; 返回a。负的超时间隔表示&amp;ldquo;无限期等待&amp;rdquo;。指定长时间超时时，请注意不要超过 &lt;code&gt;maxBound :: Int&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="052e52e2ec601e51ff67cce14d06f664e23dd732" translate="yes" xml:space="preserve">
          <source>Wrap document in &lt;code&gt;&quot;...&quot;&lt;/code&gt;</source>
          <target state="translated">将文件包装在 &lt;code&gt;&quot;...&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e2463a3964a6d5f90893a0cb4a83e415f58109e" translate="yes" xml:space="preserve">
          <source>Wrap document in &lt;code&gt;'...'&lt;/code&gt;</source>
          <target state="translated">将文件包装在 &lt;code&gt;'...'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e11d85c98f81ceac1c15ffeb3554f6ef50d942c9" translate="yes" xml:space="preserve">
          <source>Wrap document in &lt;code&gt;(...)&lt;/code&gt;</source>
          <target state="translated">将文档包装在 &lt;code&gt;(...)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fefcdd75b8d3ceac5767fa9ddb3485c2fae7387b" translate="yes" xml:space="preserve">
          <source>Wrap document in &lt;code&gt;[...]&lt;/code&gt;</source>
          <target state="translated">将文件包装在 &lt;code&gt;[...]&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="2d9a81e67b5bd2bc5cede4830f07d4ee5769499a" translate="yes" xml:space="preserve">
          <source>Wrap document in &lt;code&gt;{...}&lt;/code&gt;</source>
          <target state="translated">将文档包装在 &lt;code&gt;{...}&lt;/code&gt; 中</target>
        </trans-unit>
        <trans-unit id="b5150dc051fd47e830d39a1a10a0d5cede823b6b" translate="yes" xml:space="preserve">
          <source>WrapArrow</source>
          <target state="translated">WrapArrow</target>
        </trans-unit>
        <trans-unit id="c92147ea0c2b0677b7c09751757b19d07bd7b17c" translate="yes" xml:space="preserve">
          <source>WrapMonad</source>
          <target state="translated">WrapMonad</target>
        </trans-unit>
        <trans-unit id="4069d5a8b2d61fc44c53d1d69a1603e75124fe55" translate="yes" xml:space="preserve">
          <source>WrapMonoid</source>
          <target state="translated">WrapMonoid</target>
        </trans-unit>
        <trans-unit id="f72344941ecf4dbf3a6b05f7d128cba499a51fde" translate="yes" xml:space="preserve">
          <source>WrappedArrow</source>
          <target state="translated">WrappedArrow</target>
        </trans-unit>
        <trans-unit id="5424268dd193f61b9e7843ef4109dc2a12bac7a6" translate="yes" xml:space="preserve">
          <source>WrappedMonad</source>
          <target state="translated">WrappedMonad</target>
        </trans-unit>
        <trans-unit id="459140ee141c9d01be26238b973ae1046e530be2" translate="yes" xml:space="preserve">
          <source>WrappedMonoid</source>
          <target state="translated">WrappedMonoid</target>
        </trans-unit>
        <trans-unit id="fb18f208c8e09b8e152ee97be9d763608b85aabc" translate="yes" xml:space="preserve">
          <source>Wrapper of &lt;code&gt;mallocForeignPtrBytes&lt;/code&gt; with faster implementation for GHC</source>
          <target state="translated">具有更快实现GHC 的 &lt;code&gt;mallocForeignPtrBytes&lt;/code&gt; 包装器</target>
        </trans-unit>
        <trans-unit id="f5bae4c947473ab2febca5eb61bfa9da65f60ac7" translate="yes" xml:space="preserve">
          <source>Wrapping an IO action that can throw an error &lt;code&gt;e&lt;/code&gt;:</source>
          <target state="translated">包装可能引发错误 &lt;code&gt;e&lt;/code&gt; 的IO操作：</target>
        </trans-unit>
        <trans-unit id="0d27d9e2d3a2ad251d4892a773947e707db18720" translate="yes" xml:space="preserve">
          <source>Wrapping documents in delimiters</source>
          <target state="translated">用定界符包装文件</target>
        </trans-unit>
        <trans-unit id="48606f4bb9cb6f76c6d45f0aae55cb4f7a999651" translate="yes" xml:space="preserve">
          <source>Write 31-bit character; offset in 4-byte words.</source>
          <target state="translated">写31位字符;偏移量为4字节的字。</target>
        </trans-unit>
        <trans-unit id="132823a14fa0074e9c3549c122a220890e54d9b3" translate="yes" xml:space="preserve">
          <source>Write 8-bit character; offset in bytes.</source>
          <target state="translated">写8位字符;偏移量以字节为单位。</target>
        </trans-unit>
        <trans-unit id="6cfb95525e855d3c2fb90f553acacc9ffd9b1afe" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; to the buffer</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; 写入缓冲区</target>
        </trans-unit>
        <trans-unit id="a30ef0a4dea3adbd954b944a856f0d73077a7fef" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;.tix&lt;/code&gt; File.</source>
          <target state="translated">编写一个 &lt;code&gt;.tix&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="2384eda70bde5fbafcdce06c7083ad1f34fba13d" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; using the locale encoding.</source>
          <target state="translated">写 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 到 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; 使用区域设置编码。</target>
        </trans-unit>
        <trans-unit id="641fdc517a3a148a3426445c3e2501afc543647f" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="translated">以大端IEEE-754格式编写 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19f5831180b0536c875f7fde0710ba2f6b629a3f" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="translated">以小尾数IEEE-754格式编写 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="993b7cc9e4c74d2721eedc685664742cc7c82795" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in native in IEEE-754 format and host endian.</source>
          <target state="translated">以IEEE-754格式和主机端序编写本机 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="025b69c4396276807676b294d74b3b70f46bef94" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="translated">以大端IEEE-754格式编写 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 型。</target>
        </trans-unit>
        <trans-unit id="2300f23523bc1b33ccbbebf657381c02dd05c86c" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="translated">以小尾数IEEE-754格式编写 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9a6e3e08979b85f7f159802afa8ee51f8a4eedd1" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in native in IEEE-754 format and host endian.</source>
          <target state="translated">以IEEE-754格式和主机字节序编写原生 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59ed5c3f805685b995398b8616a908c0066ad70a" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 写入文件。</target>
        </trans-unit>
        <trans-unit id="ca463eab69a5fff98e0ab2e75dce7ed014b9ab1b" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 写入文件。</target>
        </trans-unit>
        <trans-unit id="3ad21d75c6a544747e2e36fcec12a87a1aebe727" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 写入文件。</target>
        </trans-unit>
        <trans-unit id="a8e6f690eb143ffdbea5335db0be7244660876a2" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 写入文件。</target>
        </trans-unit>
        <trans-unit id="244e830bbe30fb0c3258c35cfc26647f07415c80" translate="yes" xml:space="preserve">
          <source>Write a ByteString to a handle, appending a newline byte</source>
          <target state="translated">写一个ByteString到一个句柄,附加一个新行字节。</target>
        </trans-unit>
        <trans-unit id="a70a82a5347cdeed11b696c9567115f30a6a5296" translate="yes" xml:space="preserve">
          <source>Write a ByteString to stdout</source>
          <target state="translated">写一个ByteString到stdout</target>
        </trans-unit>
        <trans-unit id="e8ad66b8476a9e49cc072f07250605c906e95e94" translate="yes" xml:space="preserve">
          <source>Write a ByteString to stdout, appending a newline byte</source>
          <target state="translated">写一个ByteString到stdout,附加一个新行字节。</target>
        </trans-unit>
        <trans-unit id="c0c3cc8f4573e40e62c43e8422d4118f97ea3fea" translate="yes" xml:space="preserve">
          <source>Write a Int16 in big endian format</source>
          <target state="translated">用大恩迪安格式写一个Int16。</target>
        </trans-unit>
        <trans-unit id="9d73a70f9f179a81035be58cee26e559014c575a" translate="yes" xml:space="preserve">
          <source>Write a Int16 in little endian format</source>
          <target state="translated">用小恩迪亚格式写一个Int16。</target>
        </trans-unit>
        <trans-unit id="7d8b2b4323c44fde9919abbfb9988c387020100a" translate="yes" xml:space="preserve">
          <source>Write a Int16 in native host order and host endianness. 2 bytes will be written, unaligned.</source>
          <target state="translated">按主机顺序和主机字节数写一个Int16。将写入2个字节,不对齐。</target>
        </trans-unit>
        <trans-unit id="fb3123d3e54a5bdf6aa5b4391bbf7b28df79fb37" translate="yes" xml:space="preserve">
          <source>Write a Int32 in big endian format</source>
          <target state="translated">用大恩迪安格式写一个Int32。</target>
        </trans-unit>
        <trans-unit id="7e919ad40c1b9ea38485684cbf74d8a9568b9af7" translate="yes" xml:space="preserve">
          <source>Write a Int32 in little endian format</source>
          <target state="translated">用小恩迪亚格式写一个Int32。</target>
        </trans-unit>
        <trans-unit id="c8c3c578503e8e7468915f61ff1fa6751340cce3" translate="yes" xml:space="preserve">
          <source>Write a Int32 in native host order and host endianness. 4 bytes will be written, unaligned.</source>
          <target state="translated">按主机顺序和主机字节数写一个Int32。将写入4个字节,不对齐。</target>
        </trans-unit>
        <trans-unit id="b4e181d3a02580a355986a71c12d4507242968cf" translate="yes" xml:space="preserve">
          <source>Write a Int64 in big endian format</source>
          <target state="translated">以大恩迪安格式写一个Int64。</target>
        </trans-unit>
        <trans-unit id="6a15b266b9877bbd729c40ccb87aa3db359c9f58" translate="yes" xml:space="preserve">
          <source>Write a Int64 in little endian format</source>
          <target state="translated">用小恩迪安格式写一个Int64。</target>
        </trans-unit>
        <trans-unit id="001b75a9a615fe6648502bcfe94fd2920ba86af5" translate="yes" xml:space="preserve">
          <source>Write a Int64 in native host order. On a 32 bit machine we write two host order Int32s, in big endian form. 8 bytes will be written, unaligned.</source>
          <target state="translated">按原生主机顺序写一个Int64。在32位的机器上,我们以大恩迪安形式写入两个主机顺序的Int32。将写入8个字节,不对齐。</target>
        </trans-unit>
        <trans-unit id="50fde014dba0a50360d764d6c2704238d9a9cb90" translate="yes" xml:space="preserve">
          <source>Write a String using UTF-8 encoding.</source>
          <target state="translated">使用UTF-8编码编写一个字符串。</target>
        </trans-unit>
        <trans-unit id="ca1a04969f07426c1e00b1b3766e301003971851" translate="yes" xml:space="preserve">
          <source>Write a Unicode string to the user's standard output.</source>
          <target state="translated">将Unicode字符串写入用户的标准输出。</target>
        </trans-unit>
        <trans-unit id="de13c62099cbcafc759fb5510fbb414e0c611d13" translate="yes" xml:space="preserve">
          <source>Write a Word16 in big endian format</source>
          <target state="translated">用大字报格式写一篇Word16的文章</target>
        </trans-unit>
        <trans-unit id="1d3480abbd86fc7688fd650a23916c935ed2b876" translate="yes" xml:space="preserve">
          <source>Write a Word16 in little endian format</source>
          <target state="translated">写一个Word16的小恩字格式。</target>
        </trans-unit>
        <trans-unit id="374953a98335b9e84fa5e0a4c035b46b2a892799" translate="yes" xml:space="preserve">
          <source>Write a Word16 in native host order and host endianness. 2 bytes will be written, unaligned.</source>
          <target state="translated">按主机顺序和主机字节数写一个Word16。将写入2个字节,不对齐。</target>
        </trans-unit>
        <trans-unit id="b1d543a7902bc6e8e15046b66cf37db05811d00c" translate="yes" xml:space="preserve">
          <source>Write a Word32 in big endian format</source>
          <target state="translated">用大英字型写一个Word32的格式。</target>
        </trans-unit>
        <trans-unit id="426bab66f99e758605e62a76ce97b5ce1321c0e7" translate="yes" xml:space="preserve">
          <source>Write a Word32 in little endian format</source>
          <target state="translated">写一个Word32的小恩迪格式。</target>
        </trans-unit>
        <trans-unit id="22533b04aaf4738c420c7810c743da18ca10d4e0" translate="yes" xml:space="preserve">
          <source>Write a Word32 in native host order and host endianness. 4 bytes will be written, unaligned.</source>
          <target state="translated">按主机顺序和主机字节数写一个Word32。将写入4个字节,不对齐。</target>
        </trans-unit>
        <trans-unit id="d00bd933478ce30ee3627449becbce383505e676" translate="yes" xml:space="preserve">
          <source>Write a Word64 in big endian format</source>
          <target state="translated">用大字报格式写一篇Word64的文章</target>
        </trans-unit>
        <trans-unit id="1ccded859c25705e9ae2dccba946964f2b4b599e" translate="yes" xml:space="preserve">
          <source>Write a Word64 in little endian format</source>
          <target state="translated">写一个Word64的小恩迪格式。</target>
        </trans-unit>
        <trans-unit id="fe8b5771af7a4fe3ab30f772b71da7013250ca90" translate="yes" xml:space="preserve">
          <source>Write a Word64 in native host order. On a 32 bit machine we write two host order Word32s, in big endian form. 8 bytes will be written, unaligned.</source>
          <target state="translated">按原生主机顺序写一个Word64。在32位的机器上,我们写两个主机顺序的Word32,以大恩迪亚形式。将写入8个字节,不对齐。</target>
        </trans-unit>
        <trans-unit id="d084d0a0a3ee70356c669bbf84781436e439ab8d" translate="yes" xml:space="preserve">
          <source>Write a character into the array at the given offset. Returns the number of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;s written.</source>
          <target state="translated">将给定偏移量的字符写入数组。返回写入的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 的数量。</target>
        </trans-unit>
        <trans-unit id="824db4935989674b3e285858238d002d124cd8b6" translate="yes" xml:space="preserve">
          <source>Write a character to the standard output device (same as &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hPutChar&quot;&gt;hPutChar&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">将字符写入标准输出设备（与 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hPutChar&quot;&gt;hPutChar&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; 相同）。</target>
        </trans-unit>
        <trans-unit id="f3d825454d2db1c3d3f226a28bb4ebdfec603097" translate="yes" xml:space="preserve">
          <source>Write a character to the standard output device (same as &lt;code&gt;&lt;a href=&quot;system-io#v:hPutChar&quot;&gt;hPutChar&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;system-io#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">将字符写入标准输出设备（与 &lt;code&gt;&lt;a href=&quot;system-io#v:hPutChar&quot;&gt;hPutChar&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-io#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; 相同）。</target>
        </trans-unit>
        <trans-unit id="955d70d1572c0c0ab9646927bdac5ea547ae35f8" translate="yes" xml:space="preserve">
          <source>Write a character using UTF-8 encoding.</source>
          <target state="translated">用UTF-8编码写一个字符。</target>
        </trans-unit>
        <trans-unit id="0a40d25653018769760da200e171fb69042b97ba" translate="yes" xml:space="preserve">
          <source>Write a floating point value to a &lt;code&gt;&lt;a href=&quot;data-text-lazy-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将浮点值写入 &lt;code&gt;&lt;a href=&quot;data-text-lazy-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f0e537457e84f16fbaa39fa0827e8c740824c36" translate="yes" xml:space="preserve">
          <source>Write a lazy ByteString efficiently, simply appending the lazy ByteString chunks to the output buffer</source>
          <target state="translated">高效地写入一个懒惰的ByteString,只需将懒惰的ByteString分块追加到输出缓冲区即可。</target>
        </trans-unit>
        <trans-unit id="4a5a6f538364d52e8d401c4fc9299b67f51eb2c1" translate="yes" xml:space="preserve">
          <source>Write a list of storable elements into a newly allocated, consecutive sequence of storable values (like &lt;code&gt;&lt;a href=&quot;foreign-marshal-utils#v:new&quot;&gt;new&lt;/a&gt;&lt;/code&gt;, but for multiple elements).</source>
          <target state="translated">将可存储元素列表写入一个新分配的，可存储值的连续序列中（类似于 &lt;code&gt;&lt;a href=&quot;foreign-marshal-utils#v:new&quot;&gt;new&lt;/a&gt;&lt;/code&gt; ，但是用于多个元素）。</target>
        </trans-unit>
        <trans-unit id="cdf3a3bd7d79bb717fec0614e932a3f554e7d129" translate="yes" xml:space="preserve">
          <source>Write a list of storable elements into a newly allocated, consecutive sequence of storable values, where the end is fixed by the given end marker</source>
          <target state="translated">将一个可存储元素列表写入一个新分配的、连续的可存储值序列中,其中结束由给定的结束标记固定下来</target>
        </trans-unit>
        <trans-unit id="46dde6be964e98cc511af24b16c6e57e81e0249e" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">将新值写入 &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ded1b880637c536601d5622865a8ac5bee12d73f" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">将新值写入 &lt;code&gt;&lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b15bee858199106a92ca21868dcf92516cce78a" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;ghc-ioarray#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">将新值写入 &lt;code&gt;&lt;a href=&quot;ghc-ioarray#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfd1ae109907abef00a2e666c2fb353f397524eb" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">将新值写入 &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0bbd3fd99a0c8ca169dc0a0800f474e5f53bf14" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;ghc-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">将新值写入 &lt;code&gt;&lt;a href=&quot;ghc-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a779d08a6f4043a50272816a75acd9ee4cacd4c" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">将新值写入 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20f4593948df5a33a2e433f875c4b3f08e697cff" translate="yes" xml:space="preserve">
          <source>Write a string the end of a file.</source>
          <target state="translated">在文件末尾写一个字符串。</target>
        </trans-unit>
        <trans-unit id="c180f2e1d927a73773a56afa0d7e8518dedba44e" translate="yes" xml:space="preserve">
          <source>Write a string to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="translated">将字符串写入 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; ，后跟换行符。</target>
        </trans-unit>
        <trans-unit id="f7e8eefc7a202ba520c173df9a961b393fa4acc7" translate="yes" xml:space="preserve">
          <source>Write a string to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将字符串写入 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7142ba8529e9f3798882070ee18b16fa9830450d" translate="yes" xml:space="preserve">
          <source>Write a string to a file. The file is truncated to zero length before writing begins.</source>
          <target state="translated">将一个字符串写入一个文件。在开始写之前,文件被截断为零长度。</target>
        </trans-unit>
        <trans-unit id="1c2990ff65d290d7bbb87a7564d0e4e76c8f8255" translate="yes" xml:space="preserve">
          <source>Write a string to a handle, followed by a newline.</source>
          <target state="translated">将一个字符串写入一个句柄,后面加一个换行。</target>
        </trans-unit>
        <trans-unit id="bd7a02731ecdcdf45341edba546df5ac23933c67" translate="yes" xml:space="preserve">
          <source>Write a string to a handle.</source>
          <target state="translated">将一个字符串写入一个句柄。</target>
        </trans-unit>
        <trans-unit id="ece9511f02a82892ce27b96dda3476e25a7fbdb9" translate="yes" xml:space="preserve">
          <source>Write a string to the standard output device (same as &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hPutStr&quot;&gt;hPutStr&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">将字符串写入标准输出设备（与 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hPutStr&quot;&gt;hPutStr&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; 相同）。</target>
        </trans-unit>
        <trans-unit id="ffa575f023b590cb0185153c4e3bb7bcdf3ca8ca" translate="yes" xml:space="preserve">
          <source>Write a string to the standard output device (same as &lt;code&gt;&lt;a href=&quot;system-io#v:hPutStr&quot;&gt;hPutStr&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;system-io#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">将字符串写入标准输出设备（与 &lt;code&gt;&lt;a href=&quot;system-io#v:hPutStr&quot;&gt;hPutStr&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-io#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; 相同）。</target>
        </trans-unit>
        <trans-unit id="9ddf3308755406ffab4fefd34e1c0f532c36bfca" translate="yes" xml:space="preserve">
          <source>Write a string to the user's standard output, followed by a newline.</source>
          <target state="translated">在用户的标准输出中写入一个字符串,后面加一个换行。</target>
        </trans-unit>
        <trans-unit id="d649865e90fcbff9ffe50b1a59105ee5172bcad2" translate="yes" xml:space="preserve">
          <source>Write a value to a &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">给 &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; 写价值。</target>
        </trans-unit>
        <trans-unit id="9bb0e77531d8dd5855a5dee42f98bdfb66dea502" translate="yes" xml:space="preserve">
          <source>Write a value to a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt;; blocks if the queue is full.</source>
          <target state="translated">向 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 写一个值；如果队列已满，则阻塞。</target>
        </trans-unit>
        <trans-unit id="9b880d3a6f95fb0643f6f8cb86d9febe4b457c2d" translate="yes" xml:space="preserve">
          <source>Write a value to a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将值写入 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="502f2a89fe6ab954ea36d4a5f5ae4da0588aaadf" translate="yes" xml:space="preserve">
          <source>Write a value to a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将值写入 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b003c4b3a259d538a4ba6bcb5c8dd4f54a8c348a" translate="yes" xml:space="preserve">
          <source>Write a value to a memory area regarded as an array of values of the same kind. The following equality holds:</source>
          <target state="translated">将一个值写入一个被视为同类值数组的内存区域。下面的平等关系成立:</target>
        </trans-unit>
        <trans-unit id="2278658d6c531603ea71643e435890480712f25e" translate="yes" xml:space="preserve">
          <source>Write a value to a memory location given by a base address and offset. The following equality holds:</source>
          <target state="translated">将一个值写入由基地址和偏移量给出的内存位置。下面的等价关系成立:</target>
        </trans-unit>
        <trans-unit id="d2bcb5f72dff224c65e70a09f3049dbb8677df2f" translate="yes" xml:space="preserve">
          <source>Write a vector to specified index of mutable array of scalars; offset is in scalar elements.</source>
          <target state="translated">将一个向量写入标量数组的指定索引,偏移量以标量元素为单位。</target>
        </trans-unit>
        <trans-unit id="47fbcdcf5427d81f8e800b2a3be52a9b2780f1f2" translate="yes" xml:space="preserve">
          <source>Write a vector to specified index of mutable array.</source>
          <target state="translated">向可变数组的指定索引写入一个向量。</target>
        </trans-unit>
        <trans-unit id="2cbdaab506338b440edffc79752d43d3b372babf" translate="yes" xml:space="preserve">
          <source>Write an Int16 in big endian format</source>
          <target state="translated">用大恩迪安格式写一个Int16。</target>
        </trans-unit>
        <trans-unit id="a4e76ca260148b04e485fd2b3ab9435bef6ca68d" translate="yes" xml:space="preserve">
          <source>Write an Int16 in little endian format</source>
          <target state="translated">用小恩迪恩格式写一个Int16。</target>
        </trans-unit>
        <trans-unit id="04d7dd93d431136691244f8a8060c6f710b4c9c7" translate="yes" xml:space="preserve">
          <source>Write an Int32 in big endian format</source>
          <target state="translated">用大恩迪安格式写一个Int32。</target>
        </trans-unit>
        <trans-unit id="ac3eecde6710e67b4fbd62fe5faea7085564b9e9" translate="yes" xml:space="preserve">
          <source>Write an Int32 in little endian format</source>
          <target state="translated">用小恩迪亚格式写一个Int32。</target>
        </trans-unit>
        <trans-unit id="4ecb73c918eeb208591574c27bf43973ceabac8a" translate="yes" xml:space="preserve">
          <source>Write an Int64 in big endian format</source>
          <target state="translated">用大恩迪安格式写一个Int64。</target>
        </trans-unit>
        <trans-unit id="062b3fd33b7744aa05c8b488aac57bd5719de134" translate="yes" xml:space="preserve">
          <source>Write an Int64 in little endian format</source>
          <target state="translated">用小恩迪安格式写一个Int64。</target>
        </trans-unit>
        <trans-unit id="f3475a216b60f541f9561999947a42033537d47f" translate="yes" xml:space="preserve">
          <source>Write an element in a mutable array</source>
          <target state="translated">在一个可变数组中写入一个元素</target>
        </trans-unit>
        <trans-unit id="3a6dc8d047fec7b46b0233f24f9a28adcd679e26" translate="yes" xml:space="preserve">
          <source>Write an entire list of items to a &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">把物品的整个清单写到一个 &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; 上。</target>
        </trans-unit>
        <trans-unit id="f9599a175165c39f1f29ddd9bb8c7e18497bf06b" translate="yes" xml:space="preserve">
          <source>Write contents of &lt;code&gt;MutVar#&lt;/code&gt;.</source>
          <target state="translated">编写 &lt;code&gt;MutVar#&lt;/code&gt; 的内容。</target>
        </trans-unit>
        <trans-unit id="842c4baf59de10dbe1f4228d4e89548eb6cfad90" translate="yes" xml:space="preserve">
          <source>Write contents of &lt;code&gt;TVar#&lt;/code&gt;.</source>
          <target state="translated">编写 &lt;code&gt;TVar#&lt;/code&gt; 的内容。</target>
        </trans-unit>
        <trans-unit id="a3de1d04f7bf6af5e972546fb7777d6bafc52d88" translate="yes" xml:space="preserve">
          <source>Write data from memory to an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt;. This is exactly equivalent to the POSIX &lt;code&gt;write&lt;/code&gt; function.</source>
          <target state="translated">将内存中的数据写入 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; 。这完全等同于POSIX &lt;code&gt;write&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="b7773c80499d5b3f15854fd0b2e72f86ef50f9e8" translate="yes" xml:space="preserve">
          <source>Write given error message to &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stderr&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt; and terminate with &lt;code&gt;&lt;a href=&quot;system-exit#v:exitFailure&quot;&gt;exitFailure&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将给定的错误消息写入 &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stderr&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt; 并以 &lt;code&gt;&lt;a href=&quot;system-exit#v:exitFailure&quot;&gt;exitFailure&lt;/a&gt;&lt;/code&gt; 终止。</target>
        </trans-unit>
        <trans-unit id="b96bdb27f817c3c1baec26eb6ded0edc44bb3c99" translate="yes" xml:space="preserve">
          <source>Write the given value to the given memory location. Alignment restrictions might apply; see &lt;code&gt;&lt;a href=&quot;foreign-storable#v:peek&quot;&gt;peek&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将给定值写入给定存储位置。对齐限制可能适用；见 &lt;code&gt;&lt;a href=&quot;foreign-storable#v:peek&quot;&gt;peek&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77655bd9fbe731998656fdcf621486c02b0a375a" translate="yes" xml:space="preserve">
          <source>Write the given value to the given memory location. Alignment restrictions might apply; see &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:peek&quot;&gt;peek&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将给定值写入给定存储位置。对齐限制可能适用；见 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:peek&quot;&gt;peek&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="babfd98df4815040b9b8feaf92e4a373432b470f" translate="yes" xml:space="preserve">
          <source>Write the list elements consecutive into memory</source>
          <target state="translated">将列表元素连续写入内存</target>
        </trans-unit>
        <trans-unit id="c13f0a2faae8bb31701cafde84fa1d469581a021" translate="yes" xml:space="preserve">
          <source>Write the list elements consecutive into memory and terminate them with the given marker element</source>
          <target state="translated">将列表元素连续写入内存,并以给定的标记元素结束。</target>
        </trans-unit>
        <trans-unit id="4bfb3401061c515a5bf897d647437c6e727895e8" translate="yes" xml:space="preserve">
          <source>Write the specified number of bytes.</source>
          <target state="translated">写入指定数量的字节。</target>
        </trans-unit>
        <trans-unit id="7948630f19859069bae4a14e2c76f2c7020b9d2a" translate="yes" xml:space="preserve">
          <source>Write the supplied value into a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将提供的值写入 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8756d20514051c6080e747e02c7172e182a101af" translate="yes" xml:space="preserve">
          <source>Write the supplied value into a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将提供的值写入 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f27a7a93b6c3f65c763bd60036589804bd7bf721" translate="yes" xml:space="preserve">
          <source>Write the supplied value into a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将提供的值写入 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="155f12112f4379352bcdee8335e8ff9abd964e75" translate="yes" xml:space="preserve">
          <source>Write the terminal output to the standard output device.</source>
          <target state="translated">将终端输出写入标准输出设备。</target>
        </trans-unit>
        <trans-unit id="2ffb13840f565fd761a331ddc6dc0237d509420b" translate="yes" xml:space="preserve">
          <source>Write the terminal output to the terminal or file managed by the given &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将终端输出写入到由给定 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 管理的终端或文件中。</target>
        </trans-unit>
        <trans-unit id="4bab7a81286ec426207ad20332db127f5e40c79b" translate="yes" xml:space="preserve">
          <source>Write to specified index of mutable array.</source>
          <target state="translated">写入指定的可变数组索引。</target>
        </trans-unit>
        <trans-unit id="faa64ad5644001c4c4dc3bee878a933e8c8aac0e" translate="yes" xml:space="preserve">
          <source>Write up to the specified number of bytes without blocking. Returns the actual number of bytes written.</source>
          <target state="translated">无阻塞地写入指定的字节数。返回实际写入的字节数。</target>
        </trans-unit>
        <trans-unit id="74120aff54b3ed793ccfa34d37318c6efb458636" translate="yes" xml:space="preserve">
          <source>Write vector; offset in bytes.</source>
          <target state="translated">写入向量;偏移量(字节)。</target>
        </trans-unit>
        <trans-unit id="fd96182628831a4dab0848bbbb0a8a86256945c3" translate="yes" xml:space="preserve">
          <source>Write vector; offset in scalar elements.</source>
          <target state="translated">写入向量;偏移量为标量元素。</target>
        </trans-unit>
        <trans-unit id="e1f97fa6627971c9b0e683428fd5abfab1ecbdb9" translate="yes" xml:space="preserve">
          <source>Write? (False = read-only)</source>
          <target state="translated">写?(False=只读)</target>
        </trans-unit>
        <trans-unit id="09c7377b67eee34defdc1dd0804c879b090650d2" translate="yes" xml:space="preserve">
          <source>WriteBuffer</source>
          <target state="translated">WriteBuffer</target>
        </trans-unit>
        <trans-unit id="3082b1ffe24322eee941ed215c852cffc7410d42" translate="yes" xml:space="preserve">
          <source>WriteHandle</source>
          <target state="translated">WriteHandle</target>
        </trans-unit>
        <trans-unit id="9ee45a046a695fc62952355259c464d3782298a5" translate="yes" xml:space="preserve">
          <source>WriteLock</source>
          <target state="translated">WriteLock</target>
        </trans-unit>
        <trans-unit id="60841bf1ad2d01720515c6eb9b3efbeb2e0f7656" translate="yes" xml:space="preserve">
          <source>WriteMode</source>
          <target state="translated">WriteMode</target>
        </trans-unit>
        <trans-unit id="f5ca54e8210ce7deaf5fa1129a91a1f50f08386a" translate="yes" xml:space="preserve">
          <source>WriteOnly</source>
          <target state="translated">WriteOnly</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="a8f135f9c50f7fe5f7a287362386d791fee8800a" translate="yes" xml:space="preserve">
          <source>Writer operations</source>
          <target state="translated">写字机操作</target>
        </trans-unit>
        <trans-unit id="a123ab5d3541d6386c9d34765c7348e78d2bb09e" translate="yes" xml:space="preserve">
          <source>WriterT</source>
          <target state="translated">WriterT</target>
        </trans-unit>
        <trans-unit id="1cccc800c778fc7aea514948aa922ecafd4399e9" translate="yes" xml:space="preserve">
          <source>Writes an array of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; to the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 数组写入指定的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="b2b97a0aaa412174782d8ac6874c3f7cc18e81e9" translate="yes" xml:space="preserve">
          <source>Writes out extended interface files alongisde regular enterface files. Just like regular interface files, GHC has a recompilation check to detect out of date or missing extended interface files.</source>
          <target state="translated">将扩展接口文件与普通的enterface文件一起写出来。就像普通的接口文件一样,GHC有一个重新编译检查,以检测过时或丢失的扩展接口文件。</target>
        </trans-unit>
        <trans-unit id="e584f7c39c3d0e184b912ee7be64b91cc4f0e227" translate="yes" xml:space="preserve">
          <source>Writes the line history to the given file. If there is an error when writing the file, it will be ignored.</source>
          <target state="translated">将行历史记录写入给定文件。如果写入文件时出现错误,将被忽略。</target>
        </trans-unit>
        <trans-unit id="82675cd0bc2b58173645fe62ed090db0c903a0d8" translate="yes" xml:space="preserve">
          <source>XdgCache</source>
          <target state="translated">XdgCache</target>
        </trans-unit>
        <trans-unit id="a09516bd6fa5e0d22f97cc882d59eced3f611c61" translate="yes" xml:space="preserve">
          <source>XdgConfig</source>
          <target state="translated">XdgConfig</target>
        </trans-unit>
        <trans-unit id="513936143f60ff489cea943b4d3cf5ff7ec804be" translate="yes" xml:space="preserve">
          <source>XdgConfigDirs</source>
          <target state="translated">XdgConfigDirs</target>
        </trans-unit>
        <trans-unit id="b55b13216c4a49a521787620dab302740b661e55" translate="yes" xml:space="preserve">
          <source>XdgData</source>
          <target state="translated">XdgData</target>
        </trans-unit>
        <trans-unit id="5c87de6a1cfa7e4af282e624345c841e7d8bd0bb" translate="yes" xml:space="preserve">
          <source>XdgDataDirs</source>
          <target state="translated">XdgDataDirs</target>
        </trans-unit>
        <trans-unit id="1fbbfb2eaf00935b6eaff85397e2d3159b40fac3" translate="yes" xml:space="preserve">
          <source>XdgDirectory</source>
          <target state="translated">XdgDirectory</target>
        </trans-unit>
        <trans-unit id="2a60deb694d7c793f949c28507f268cafab38ce5" translate="yes" xml:space="preserve">
          <source>XdgDirectoryList</source>
          <target state="translated">XdgDirectoryList</target>
        </trans-unit>
        <trans-unit id="14824d205a044c81fdecf7f246ad054ed0648b74" translate="yes" xml:space="preserve">
          <source>Year and day format</source>
          <target state="translated">年和日格式</target>
        </trans-unit>
        <trans-unit id="ed289f57da895ead697dd2c01857ff65cfc7ea93" translate="yes" xml:space="preserve">
          <source>Year.</source>
          <target state="translated">Year.</target>
        </trans-unit>
        <trans-unit id="3526f607bcd4f51ad0bc05f814579a42c2c0ba57" translate="yes" xml:space="preserve">
          <source>Yellow</source>
          <target state="translated">Yellow</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="520497482bb4d7526496e8edb3018d95cee38510" translate="yes" xml:space="preserve">
          <source>Yes (Explicit)</source>
          <target state="translated">是(明确)</target>
        </trans-unit>
        <trans-unit id="90c557a6b48e6bc7ef30b6f2d5fb9c703c39cf2f" translate="yes" xml:space="preserve">
          <source>Yes (Inferred)</source>
          <target state="translated">是(推断)</target>
        </trans-unit>
        <trans-unit id="86200a8547bb15fb3a4cf8bb1368b37de64fb317" translate="yes" xml:space="preserve">
          <source>Yield &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the given &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; value is valid on the system. This implies that the &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance of &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; is also system dependent as it is only defined for valid values of &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">产量 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 如果给定的 &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; 值是系统上的有效。这意味着 &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; 实例也与系统有关，因为它仅为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; 的有效值定义。</target>
        </trans-unit>
        <trans-unit id="1f384c9380a1584c25f0df9644ddfab42bb5794c" translate="yes" xml:space="preserve">
          <source>Yield a &lt;em&gt;non-empty&lt;/em&gt; strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">产生一个&lt;em&gt;非空的&lt;/em&gt; strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="711685e6ca2af214ee9e0c03ff3f6e2991b1fffe" translate="yes" xml:space="preserve">
          <source>Yield not to its blasphemous call! Flee traveller! Flee or you will be corrupted and devoured!</source>
          <target state="translated">不要屈服于它那亵渎神灵的召唤!逃吧,旅行者! 逃吧,否则你会被腐蚀和吞噬!逃吧,否则你会被腐蚀和吞噬!</target>
        </trans-unit>
        <trans-unit id="a5cc7a47f6c353cbfbd096e4097551052e651002" translate="yes" xml:space="preserve">
          <source>You can add a module to the scope (via &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;import&lt;/code&gt;) only if either (a) it is loaded, or (b) it is a module from a package that GHCi knows about. Using &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;import&lt;/code&gt; to try bring into scope a non-loaded module may result in the message &lt;code&gt;module M is not loaded&lt;/code&gt;.</source>
          <target state="translated">仅当（a）已加载或（b）它是GHCi知道的软件包中的模块时，才可以将模块添加到范围中（通过&lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;import&lt;/code&gt; ）。使用&lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt;或 &lt;code&gt;import&lt;/code&gt; 尝试将未加载的模块放入范围内可能导致消息 &lt;code&gt;module M is not loaded&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="269b166a8fb9660360ed22bb6ffd6ad1f5dbf714" translate="yes" xml:space="preserve">
          <source>You can add explicit phase control (&lt;a href=&quot;#phase-control&quot;&gt;Phase control&lt;/a&gt;) to &lt;code&gt;SPECIALISE INLINE&lt;/code&gt; pragma, just like on an &lt;a href=&quot;#pragma-INLINE&quot;&gt;&lt;code&gt;INLINE&lt;/code&gt;&lt;/a&gt; pragma; if you do so, the same phase is used for the rewrite rule and the INLINE control of the specialised function.</source>
          <target state="translated">您可以向 &lt;code&gt;SPECIALISE INLINE&lt;/code&gt; pragma 添加显式的相位控制（&lt;a href=&quot;#phase-control&quot;&gt;Phase control&lt;/a&gt;），就像在&lt;a href=&quot;#pragma-INLINE&quot;&gt; &lt;code&gt;INLINE&lt;/code&gt; &lt;/a&gt; pragma上一样；如果这样做，则重写规则和专用功能的INLINE控制将使用相同的阶段。</target>
        </trans-unit>
        <trans-unit id="76b4dc225411289e9acdbfffaafe383a16ca2930" translate="yes" xml:space="preserve">
          <source>You can add phase control (&lt;a href=&quot;#phase-control&quot;&gt;Phase control&lt;/a&gt;) to the RULE generated by a &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma, just as you can if you write a &lt;code&gt;RULE&lt;/code&gt; directly. For example:</source>
          <target state="translated">您可以将相位控制（&lt;a href=&quot;#phase-control&quot;&gt;Phase control&lt;/a&gt;）添加到由 &lt;code&gt;SPECIALIZE&lt;/code&gt; 编译指示生成的RULE中，就像直接编写 &lt;code&gt;RULE&lt;/code&gt; 一样。例如：</target>
        </trans-unit>
        <trans-unit id="d19396807b5bb813f8f10443b8f102685ebd9a78" translate="yes" xml:space="preserve">
          <source>You can also define functions at the prompt:</source>
          <target state="translated">你也可以在提示中定义函数。</target>
        </trans-unit>
        <trans-unit id="9f2d6d5ccc9f9a9d9f25489b257a5154dc96e794" translate="yes" xml:space="preserve">
          <source>You can also get this in a more future-proof, machine readable format, with &lt;code&gt;-t --machine-readable&lt;/code&gt;:</source>
          <target state="translated">您还可以通过 &lt;code&gt;-t --machine-readable&lt;/code&gt; ：以更面向未来的，机器可读的格式获取它：</target>
        </trans-unit>
        <trans-unit id="a5b15205797af6957ff9cf5c81b6dc586582e3e9" translate="yes" xml:space="preserve">
          <source>You can also use a standalone deriving declaration instead (see &lt;a href=&quot;#stand-alone-deriving&quot;&gt;Stand-alone deriving declarations&lt;/a&gt;).</source>
          <target state="translated">您也可以改用独立派生声明（请参阅&lt;a href=&quot;#stand-alone-deriving&quot;&gt;独立派生声明&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bf82ec7c5c55deb1e4326a6cd0200b4cd6f00276" translate="yes" xml:space="preserve">
          <source>You can annotate modules with the &lt;code&gt;ANN&lt;/code&gt; pragma by using the &lt;code&gt;module&lt;/code&gt; keyword. For example:</source>
          <target state="translated">您可以使用 &lt;code&gt;module&lt;/code&gt; 关键字使用 &lt;code&gt;ANN&lt;/code&gt; 编译注释模块。例如：</target>
        </trans-unit>
        <trans-unit id="bd200064406d69a57200444728341c157a15f8d7" translate="yes" xml:space="preserve">
          <source>You can annotate types with the &lt;code&gt;ANN&lt;/code&gt; pragma by using the &lt;code&gt;type&lt;/code&gt; keyword. For example:</source>
          <target state="translated">您可以使用 &lt;code&gt;type&lt;/code&gt; 关键字使用 &lt;code&gt;ANN&lt;/code&gt; 编译注释类型。例如：</target>
        </trans-unit>
        <trans-unit id="190d499d4f768a4e6267637fa569282ca6b46254" translate="yes" xml:space="preserve">
          <source>You can apply a type synonym to a forall type:</source>
          <target state="translated">您可以将类型同义词应用于forall类型。</target>
        </trans-unit>
        <trans-unit id="9c64d81db37258386a1e4b81a293b2b44f3418af" translate="yes" xml:space="preserve">
          <source>You can apply a type synonym to a partially applied type synonym:</source>
          <target state="translated">您可以将类型同义词应用到部分应用的类型同义词上。</target>
        </trans-unit>
        <trans-unit id="7ff9739eba78b0ef326aef750e441b5f886825f8" translate="yes" xml:space="preserve">
          <source>You can attach a warning to a function, class, type, or data constructor, with the following top-level declarations:</source>
          <target state="translated">你可以将警告附加到一个函数、类、类型或数据构造函数中,使用以下顶层声明。</target>
        </trans-unit>
        <trans-unit id="f496445edbfd2209c4adb64a23b8653fa9374d16" translate="yes" xml:space="preserve">
          <source>You can build Haskell code into a shared library and make a package to be used by other Haskell programs. The easiest way is using Cabal, simply configure the Cabal package with the &lt;code&gt;--enable-shared&lt;/code&gt; flag.</source>
          <target state="translated">您可以将Haskell代码构建到共享库中，并制作一个程序包以供其他Haskell程序使用。最简单的方法是使用Cabal，只需使用 &lt;code&gt;--enable-shared&lt;/code&gt; 标志配置Cabal软件包。</target>
        </trans-unit>
        <trans-unit id="84f62a92315cdce6616bfcedb52e44f10633e662" translate="yes" xml:space="preserve">
          <source>You can change the messages printed when the runtime system &amp;ldquo;blows up,&amp;rdquo; e.g., on stack overflow. The hooks for these are as follows:</source>
          <target state="translated">您可以更改运行系统&amp;ldquo;爆炸&amp;rdquo;时（例如，在堆栈溢出时）打印的消息。这些挂钩如下：</target>
        </trans-unit>
        <trans-unit id="0d971c05fa641eaafca23d1a4589109ee786b1b8" translate="yes" xml:space="preserve">
          <source>You can check if your GHC is unregisterised by calling &lt;code&gt;ghc --info&lt;/code&gt; (see &lt;a href=&quot;using#ghc-flag---info&quot;&gt;&lt;code&gt;--info&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">您可以通过调用 &lt;code&gt;ghc --info&lt;/code&gt; （请参阅&lt;a href=&quot;using#ghc-flag---info&quot;&gt; &lt;code&gt;--info&lt;/code&gt; &lt;/a&gt;）来检查您的GHC是否未注册。</target>
        </trans-unit>
        <trans-unit id="4ddf7fef2dbc32cef483b738d74cadfca1ba8b1a" translate="yes" xml:space="preserve">
          <source>You can control GHC&amp;rsquo;s package database stack using the following options:</source>
          <target state="translated">您可以使用以下选项控制GHC的软件包数据库堆栈：</target>
        </trans-unit>
        <trans-unit id="9ad73c7ee3619d8e3b374d0e125dd12d41cec6bc" translate="yes" xml:space="preserve">
          <source>You can define a &lt;code&gt;&lt;a href=&quot;data-bifunctor#t:Bifunctor&quot;&gt;Bifunctor&lt;/a&gt;&lt;/code&gt; by either defining &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; or by defining both &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:second&quot;&gt;second&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">您可以通过定义 &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; 或同时定义 &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:second&quot;&gt;second&lt;/a&gt;&lt;/code&gt; 来定义 &lt;code&gt;&lt;a href=&quot;data-bifunctor#t:Bifunctor&quot;&gt;Bifunctor&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53d888cce5d1295c1df726fcad67480174d570f2" translate="yes" xml:space="preserve">
          <source>You can disable specific classes, or enable/disable all classes at once:</source>
          <target state="translated">您可以禁用特定的类,也可以同时启用/禁用所有类。</target>
        </trans-unit>
        <trans-unit id="2fbcd80b12cae4ea9adddbab75b6d400e890e23d" translate="yes" xml:space="preserve">
          <source>You can even implement traverse using foldTree:</source>
          <target state="translated">你甚至可以使用foldTree实现traverse。</target>
        </trans-unit>
        <trans-unit id="a260428745d36797e89aab007cfe35565db63b20" translate="yes" xml:space="preserve">
          <source>You can get &lt;code&gt;happy&lt;/code&gt; from &lt;a href=&quot;http://www.haskell.org/happy/&quot;&gt;the Happy Homepage&lt;/a&gt;.</source>
          <target state="translated">您可以从&lt;a href=&quot;http://www.haskell.org/happy/&quot;&gt;&amp;ldquo;快乐首页&amp;rdquo;&lt;/a&gt;获得 &lt;code&gt;happy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26072251a75edc8b05b0ea7a052c2c2aab0d70e9" translate="yes" xml:space="preserve">
          <source>You can have an unboxed tuple in a pattern binding, thus</source>
          <target state="translated">你可以在一个模式绑定中拥有一个未装箱的元组,因此</target>
        </trans-unit>
        <trans-unit id="e9c31fd3f547dd66812622d105b2e524f835762e" translate="yes" xml:space="preserve">
          <source>You can however use &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt;, as well as &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt;, to build infinite lazy ByteStrings.</source>
          <target state="translated">但是，您可以使用 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt; 以及 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 来构建无限的惰性ByteString。</target>
        </trans-unit>
        <trans-unit id="20f45eef250ed5478e99a9bcb99d2a343f22a32e" translate="yes" xml:space="preserve">
          <source>You can however use &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt;, as well as &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt;, to build infinite lazy ByteStrings.</source>
          <target state="translated">但是，您可以使用 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt; 以及 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 来构建无限的惰性ByteString。</target>
        </trans-unit>
        <trans-unit id="7e461b7e374bf4b1ebdad57b113f09b1939fc459" translate="yes" xml:space="preserve">
          <source>You can identify an orphan module by looking in its interface file, &lt;code&gt;M.hi&lt;/code&gt;, using the &lt;code&gt;--show-iface ⟨file⟩&lt;/code&gt;&lt;a href=&quot;using#modes&quot;&gt;mode&lt;/a&gt;. If there is a &lt;code&gt;[orphan module]&lt;/code&gt; on the first line, GHC considers it an orphan module.</source>
          <target state="translated">您可以使用 &lt;code&gt;--show-iface ⟨file⟩&lt;/code&gt; &lt;a href=&quot;using#modes&quot;&gt;模式&lt;/a&gt;在接口文件 &lt;code&gt;M.hi&lt;/code&gt; 中查找来标识孤立模块。如果第一行上有一个 &lt;code&gt;[orphan module]&lt;/code&gt; ，则GHC会将其视为一个孤立模块。</target>
        </trans-unit>
        <trans-unit id="38974e60b1eeba7a0c51ba486dac9a8715f3e4cb" translate="yes" xml:space="preserve">
          <source>You can include instance declarations as in Haskell; just omit the &amp;ldquo;where&amp;rdquo; part. An instance declaration need not be implemented directly; if an instance can be derived based on instances in the environment, it is considered implemented. For example, the following signature:</source>
          <target state="translated">您可以像在Haskell中那样包含实例声明。只是省略&amp;ldquo; where&amp;rdquo;部分。实例声明不需要直接实现；如果可以根据环境中的实例派生实例，则将其视为已实现。例如，以下签名：</target>
        </trans-unit>
        <trans-unit id="883238e8f9c1b291d24a7f3127451079919bd8ed" translate="yes" xml:space="preserve">
          <source>You can include instance declarations just as in Haskell; but omit the &amp;ldquo;where&amp;rdquo; part.</source>
          <target state="translated">您可以像在Haskell中一样包含实例声明。但忽略&amp;ldquo; where&amp;rdquo;部分。</target>
        </trans-unit>
        <trans-unit id="dbe26650bd87158ad61fd3785ea8839ebbef7ad8" translate="yes" xml:space="preserve">
          <source>You can look at particular regions of your profile simply by loading a copy of the &lt;code&gt;.hp&lt;/code&gt; file into a text editor and deleting the unwanted samples. The resulting &lt;code&gt;.hp&lt;/code&gt; file can be run through &lt;code&gt;hp2ps&lt;/code&gt; and viewed or printed.</source>
          <target state="translated">您只需将 &lt;code&gt;.hp&lt;/code&gt; 文件的副本加载到文本编辑器中并删除不需要的样本，即可查看配置文件的特定区域。生成的 &lt;code&gt;.hp&lt;/code&gt; 文件可以通过 &lt;code&gt;hp2ps&lt;/code&gt; 运行并查看或打印。</target>
        </trans-unit>
        <trans-unit id="0c84e4d34de9122e33e533828fb9f8724a21faac" translate="yes" xml:space="preserve">
          <source>You can make &lt;code&gt;stdin&lt;/code&gt; reset itself after every evaluation by giving GHCi the command &lt;code&gt;:set +r&lt;/code&gt;. This works because &lt;code&gt;stdin&lt;/code&gt; is just a top-level expression that can be reverted to its unevaluated state in the same way as any other top-level expression (CAF).</source>
          <target state="translated">您可以在每次评估后通过给GHCi命令 &lt;code&gt;:set +r&lt;/code&gt; 来使 &lt;code&gt;stdin&lt;/code&gt; 自身复位。之所以 &lt;code&gt;stdin&lt;/code&gt; 是因为stdin只是一个顶级表达式，可以以与其他任何顶级表达式（CAF）相同的方式还原到其未评估状态。</target>
        </trans-unit>
        <trans-unit id="e642c86265941a9874870fbd23a160343b970a77" translate="yes" xml:space="preserve">
          <source>You can make GHC diverge by using &lt;code&gt;SPECIALISE INLINE&lt;/code&gt; on an ordinarily-recursive function.</source>
          <target state="translated">您可以通过在常规递归函数上使用 &lt;code&gt;SPECIALISE INLINE&lt;/code&gt; 来使GHC偏离。</target>
        </trans-unit>
        <trans-unit id="d1af34bbd7e2122f7192f46d93908d24a763ec3d" translate="yes" xml:space="preserve">
          <source>You can make code that works with both Haskell 2010 and GHC by:</source>
          <target state="translated">你可以通过以下方式制作同时适用于Haskell 2010和GHC的代码。</target>
        </trans-unit>
        <trans-unit id="410bc62782311c49772c6565c53d200146f4a94c" translate="yes" xml:space="preserve">
          <source>You can make code that works with both Haskell98/Haskell2010 and GHC by:</source>
          <target state="translated">你可以通过以下方式制作同时适用于Haskell98/Haskell2010和GHC的代码。</target>
        </trans-unit>
        <trans-unit id="acfc22cad2a308c7de056289b725564bbb1e0277" translate="yes" xml:space="preserve">
          <source>You can omit any combination of arguments to the tuple, as in the following</source>
          <target state="translated">你可以省略元组的任何参数组合,就像下面的那样</target>
        </trans-unit>
        <trans-unit id="4451b727c18bc51073a4d56eb70e8515e899636b" translate="yes" xml:space="preserve">
          <source>You can only attach to entities declared at top level in the module being compiled, and you can only use unqualified names in the list of entities. A capitalised name, such as &lt;code&gt;T&lt;/code&gt; refers to &lt;em&gt;either&lt;/em&gt; the type constructor &lt;code&gt;T&lt;/code&gt;&lt;em&gt;or&lt;/em&gt; the data constructor &lt;code&gt;T&lt;/code&gt;, or both if both are in scope. If both are in scope, there is currently no way to specify one without the other (c.f. fixities &lt;a href=&quot;#infix-tycons&quot;&gt;Infix type constructors, classes, and type variables&lt;/a&gt;).</source>
          <target state="translated">您只能附加到正在编译的模块中顶层声明的实体，并且只能在实体列表中使用不合格的名称。大写名称，如 &lt;code&gt;T&lt;/code&gt; 是指&lt;em&gt;任一&lt;/em&gt;类型构造 &lt;code&gt;T&lt;/code&gt; &lt;em&gt;或&lt;/em&gt;数据构造 &lt;code&gt;T&lt;/code&gt; 或两者如果两者都在范围内。如果两者都在范围内，则当前无法指定一个而不指定另一个（参见fixities &lt;a href=&quot;#infix-tycons&quot;&gt;Infix类型构造函数，类和类型变量&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f886d18b90cb7daa351868e61fa0d9da62761871" translate="yes" xml:space="preserve">
          <source>You can only run a function at compile time if it is imported from another module &lt;em&gt;that is not part of a mutually-recursive group of modules that includes the module currently being compiled&lt;/em&gt;. Furthermore, all of the modules of the mutually-recursive group must be reachable by non-SOURCE imports from the module where the splice is to be run.</source>
          <target state="translated">如果函数是从另一个模块导入的，则该函数只能在编译时运行，而该模块&lt;em&gt;不是包含当前正在编译的模块的相互递归模块组的一部分&lt;/em&gt;。此外，非递归组中的所有模块都必须可以通过非源导入从要运行拼接的模块中访问。</target>
        </trans-unit>
        <trans-unit id="2006128483b352bda9f0e5cd0d687c4c8519ed68" translate="yes" xml:space="preserve">
          <source>You can only run a function at compile time if it is imported from another module. That is, you can&amp;rsquo;t define a function in a module, and call it from within a splice in the same module. (It would make sense to do so, but it&amp;rsquo;s hard to implement.)</source>
          <target state="translated">如果功能是从另一个模块导入的，则只能在编译时运行。也就是说，您不能在模块中定义函数，而只能在同一模块的接头内调用它。（这样做很有意义，但是很难实现。）</target>
        </trans-unit>
        <trans-unit id="0f32acc6c773313553a7cd09864edd18e6cff35d" translate="yes" xml:space="preserve">
          <source>You can package up a complete Haskell program as a DLL, to be called by some external (usually non-Haskell) program. This is usually used to implement plugins and the like, and is described below.</source>
          <target state="translated">您可以将一个完整的 Haskell 程序打包成一个 DLL,以便被一些外部 (通常是非 Haskell)程序调用。这通常用于实现插件和类似的东西,下面将对其进行描述。</target>
        </trans-unit>
        <trans-unit id="8f1f2284e872267e26710c33db91da1ce9d66612" translate="yes" xml:space="preserve">
          <source>You can read about &lt;a href=&quot;http://ghc.haskell.org/trac/ghc/wiki/Commentary/Compiler/RecompilationAvoidance&quot;&gt;how all this works&lt;/a&gt; in the GHC commentary.</source>
          <target state="translated">您可以在GHC评论中&lt;a href=&quot;http://ghc.haskell.org/trac/ghc/wiki/Commentary/Compiler/RecompilationAvoidance&quot;&gt;了解所有这些工作原理&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e9702340c88d3c9a130465b064633bbe3ada3fe" translate="yes" xml:space="preserve">
          <source>You can read this much like ordinary &lt;code&gt;do&lt;/code&gt;-notation, but with commands in place of monadic expressions. The first line sends the value of &lt;code&gt;x+1&lt;/code&gt; as an input to the arrow &lt;code&gt;f&lt;/code&gt;, and matches its output against &lt;code&gt;y&lt;/code&gt;. In the next line, the output is discarded. The arrow &lt;code&gt;returnA&lt;/code&gt; is defined in the &lt;a href=&quot;../libraries/base-4.13.0.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt; module as &lt;code&gt;arr id&lt;/code&gt;. The above example is treated as an abbreviation for</source>
          <target state="translated">您可以像普通的 &lt;code&gt;do&lt;/code&gt; -notation 一样阅读此内容，但是可以使用命令代替monadic表达式。第一行将 &lt;code&gt;x+1&lt;/code&gt; 的值作为输入发送到箭头 &lt;code&gt;f&lt;/code&gt; ，并将其输出与 &lt;code&gt;y&lt;/code&gt; 相匹配。在下一行中，输出将被丢弃。箭头 &lt;code&gt;returnA&lt;/code&gt; 在&lt;a href=&quot;../libraries/base-4.13.0.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt;模块中定义为 &lt;code&gt;arr id&lt;/code&gt; 。上面的示例被视为的缩写</target>
        </trans-unit>
        <trans-unit id="1e72e813532509ba13800f35b2a255158378cdcd" translate="yes" xml:space="preserve">
          <source>You can safely replace all the import declarations in &lt;code&gt;&lt;em&gt;M&lt;/em&gt;.hs&lt;/code&gt; with those found in its respective &lt;code&gt;.imports&lt;/code&gt; file. Why would you want to do that? Because the &amp;ldquo;minimal&amp;rdquo; imports (a) import everything explicitly, by name, and (b) import nothing that is not required. It can be quite painful to maintain this property by hand, so this flag is intended to reduce the labour.</source>
          <target state="translated">您可以将 &lt;code&gt;&lt;em&gt;M&lt;/em&gt;.hs&lt;/code&gt; 所有导入声明安全地替换为其相应的 &lt;code&gt;.imports&lt;/code&gt; 文件中的声明。你为什么想这么做？因为&amp;ldquo;最小&amp;rdquo;导入（a）按名称显式导入所有内容，并且（b）不导入不需要的任何内容。用手维护此属性可能会很痛苦，因此此标志旨在减少人工。</target>
        </trans-unit>
        <trans-unit id="3d11ab0fd694aaac48c2e11aa4e207640df0eae3" translate="yes" xml:space="preserve">
          <source>You can save &lt;code&gt;Main.hs&lt;/code&gt; anywhere you like, but if you save it somewhere other than the current directory &lt;a href=&quot;#id7&quot; id=&quot;id6&quot;&gt;[3]&lt;/a&gt; then we will need to change to the right directory in GHCi:</source>
          <target state="translated">您可以将 &lt;code&gt;Main.hs&lt;/code&gt; 保存在任意位置，但是如果将其保存在当前目录&lt;a href=&quot;#id7&quot; id=&quot;id6&quot;&gt;[3]&lt;/a&gt;之外的其他位置，则我们需要在GHCi中更改为正确的目录：</target>
        </trans-unit>
        <trans-unit id="ee71858b230e5297e34b408df25cee981faf2858" translate="yes" xml:space="preserve">
          <source>You can suppress the warnings with the flag &lt;a href=&quot;using-warnings#ghc-flag--Wwarnings-deprecations&quot;&gt;&lt;code&gt;-Wno-warnings-deprecations&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">您可以使用标志&lt;a href=&quot;using-warnings#ghc-flag--Wwarnings-deprecations&quot;&gt; &lt;code&gt;-Wno-warnings-deprecations&lt;/code&gt; &lt;/a&gt;禁止显示警告。</target>
        </trans-unit>
        <trans-unit id="d5b5b508f9d570be456fe99f9c95ddc6eecec794" translate="yes" xml:space="preserve">
          <source>You can turn each Haskell package into a DLL, so that multiple Haskell executables using the same packages can share the DLL files. (As opposed to linking the libraries statically, which in effect creates a new copy of the RTS and all libraries for each executable produced.)</source>
          <target state="translated">您可以将每个 Haskell 包变成一个 DLL,这样使用相同包的多个 Haskell 可执行文件就可以共享 DLL 文件。(与静态链接库不同,静态链接库实际上是为每个可执行文件创建一个新的RTS和所有库的副本。)</target>
        </trans-unit>
        <trans-unit id="6a0144c3e2ac0c6bb9606a34c0cd2ffa74b49390" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;&lt;a href=&quot;data-time-clock-posix#t:POSIXTime&quot;&gt;POSIXTime&lt;/a&gt;&lt;/code&gt; to obtain integer/word timestamps. For example:</source>
          <target state="translated">您可以使用 &lt;code&gt;&lt;a href=&quot;data-time-clock-posix#t:POSIXTime&quot;&gt;POSIXTime&lt;/a&gt;&lt;/code&gt; 获得整数/字时间戳。例如：</target>
        </trans-unit>
        <trans-unit id="fbf78f5184b54413fec2edf8ed7eaa43cd191246" translate="yes" xml:space="preserve">
          <source>You can use a &lt;code&gt;deriving&lt;/code&gt; clause on a &lt;code&gt;data instance&lt;/code&gt; or &lt;code&gt;newtype instance&lt;/code&gt; declaration.</source>
          <target state="translated">您可以在 &lt;code&gt;data instance&lt;/code&gt; 或 &lt;code&gt;newtype instance&lt;/code&gt; 声明上使用 &lt;code&gt;deriving&lt;/code&gt; 子句。</target>
        </trans-unit>
        <trans-unit id="4aac8ca00f383844bd9a5a98bae02690f26dd140" translate="yes" xml:space="preserve">
          <source>You can use a &lt;code&gt;deriving&lt;/code&gt; clause on a GADT-style data type declaration. For example, these two declarations are equivalent</source>
          <target state="translated">您可以在GADT样式的数据类型声明中使用 &lt;code&gt;deriving&lt;/code&gt; 子句。例如，这两个声明是等效的</target>
        </trans-unit>
        <trans-unit id="243f575d20a545ebc20c87833a714937518039c5" translate="yes" xml:space="preserve">
          <source>You can use an external main function if you initialize the RTS manually and pass &lt;code&gt;-no-hs-main&lt;/code&gt;. See also &lt;a href=&quot;ffi-chap#using-own-main&quot;&gt;Using your own main()&lt;/a&gt;.</source>
          <target state="translated">如果您手动初始化RTS并通过 &lt;code&gt;-no-hs-main&lt;/code&gt; ,则可以使用外部main函数。另请参阅&lt;a href=&quot;ffi-chap#using-own-main&quot;&gt;使用自己的main（）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e680225c09eb0b9138a98df5d3c63c9df7449b8c" translate="yes" xml:space="preserve">
          <source>You can use record syntax on a GADT-style data type declaration:</source>
          <target state="translated">你可以在GADT风格的数据类型声明上使用记录语法。</target>
        </trans-unit>
        <trans-unit id="409585b916d348cb201d92711807df5aad400581" translate="yes" xml:space="preserve">
          <source>You can use renaming to provide an alternate prelude, e.g. &lt;code&gt;-hide-all-packages -package &quot;basic-prelude (BasicPrelude as Prelude)&quot;&lt;/code&gt;, in lieu of the &lt;a href=&quot;glasgow_exts#rebindable-syntax&quot;&gt;Rebindable syntax and the implicit Prelude import&lt;/a&gt; extension.</source>
          <target state="translated">您可以使用重命名来提供替代的前奏，例如 &lt;code&gt;-hide-all-packages -package &quot;basic-prelude (BasicPrelude as Prelude)&quot;&lt;/code&gt; ，代替&lt;a href=&quot;glasgow_exts#rebindable-syntax&quot;&gt;Rebindable语法和隐式的Prelude导入&lt;/a&gt;扩展。</target>
        </trans-unit>
        <trans-unit id="34cd599ca69b1635630c1789384078026b1631bc" translate="yes" xml:space="preserve">
          <source>You can use strictness annotations, in the obvious places in the constructor type:</source>
          <target state="translated">你可以使用严格性注解,在构造函数类型的明显位置。</target>
        </trans-unit>
        <trans-unit id="ed972027c3bec7c1eb51e6a5766ee6c2d7ade065" translate="yes" xml:space="preserve">
          <source>You can work on an entire module thus:</source>
          <target state="translated">你可以这样对整个模块进行工作。</target>
        </trans-unit>
        <trans-unit id="bf48999c2bd9335885a5b2d5518e8a1da408a898" translate="yes" xml:space="preserve">
          <source>You can wrap a series of foreign function calls that rely on thread-local state with &lt;code&gt;runInBoundThread&lt;/code&gt; so that you can use them without knowing whether the current thread is &lt;em&gt;bound&lt;/em&gt;.</source>
          <target state="translated">您可以使用 &lt;code&gt;runInBoundThread&lt;/code&gt; 包装依赖于线程局部状态的一系列外部函数调用，以便您可以在不知道当前线程是否&lt;em&gt;绑定的&lt;/em&gt;情况下使用它们。</target>
        </trans-unit>
        <trans-unit id="01f309884997472a9a1052740889026ae8bf67aa" translate="yes" xml:space="preserve">
          <source>You can write a &lt;code&gt;forall&lt;/code&gt; (including overloading) in a type synonym, thus:</source>
          <target state="translated">您可以用类型同义词写一个 &lt;code&gt;forall&lt;/code&gt; （包括重载），因此：</target>
        </trans-unit>
        <trans-unit id="4c8f6089007a930f61ef159774cdb1a472069313" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t have an implicit parameter in the context of a class or instance declaration. For example, both these declarations are illegal:</source>
          <target state="translated">在类或实例声明的上下文中不能有隐式参数。例如，这两个声明都是非法的：</target>
        </trans-unit>
        <trans-unit id="4de126d4c7a597b1d236ebb25b9bb6637ffa49d2" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t pattern-match on an existentially quantified constructor in a &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;where&lt;/code&gt; group of bindings. So this is illegal:</source>
          <target state="translated">您不能在 &lt;code&gt;let&lt;/code&gt; 或 &lt;code&gt;where&lt;/code&gt; 绑定组中对现有的量化构造函数进行模式匹配。所以这是非法的：</target>
        </trans-unit>
        <trans-unit id="c72ea2d044d7e8facee1aae8ded417fac4a31d3f" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use &lt;code&gt;deriving&lt;/code&gt; to define instances of a data type with existentially quantified data constructors. Reason: in most cases it would not make sense. For example:;</source>
          <target state="translated">您不能使用 &lt;code&gt;deriving&lt;/code&gt; 定义具有存在量化数据构造函数的数据类型实例。原因：在大多数情况下，这没有任何意义。例如：;</target>
        </trans-unit>
        <trans-unit id="f58bc414fc59408f4615033fa5f4af7c26c36eb5" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use existential quantification for &lt;code&gt;newtype&lt;/code&gt; declarations. So this is illegal:</source>
          <target state="translated">不能使用存在量化为 &lt;code&gt;newtype&lt;/code&gt; 声明。所以这是非法的：</target>
        </trans-unit>
        <trans-unit id="3b5cdddee5d2f5aa4dc4f653d99b00c57d60b7ea" translate="yes" xml:space="preserve">
          <source>You cannot bind a variable with an unboxed type in a &lt;em&gt;recursive&lt;/em&gt; binding.</source>
          <target state="translated">您不能在&lt;em&gt;递归&lt;/em&gt;绑定中将未装箱类型的变量绑定。</target>
        </trans-unit>
        <trans-unit id="8fc0d15dc8ae90bf550f66d4910d3cffc3b11e0a" translate="yes" xml:space="preserve">
          <source>You cannot bind a variable with an unboxed type in a &lt;em&gt;top-level&lt;/em&gt; binding.</source>
          <target state="translated">您不能在&lt;em&gt;顶级&lt;/em&gt;绑定中绑定未装箱类型的变量。</target>
        </trans-unit>
        <trans-unit id="2b1b59bb7b1256234d2e287ed8419a725eea98b4" translate="yes" xml:space="preserve">
          <source>You cannot define a newtype whose representation type (the argument type of the data constructor) is an unboxed type. Thus, this is illegal:</source>
          <target state="translated">你不能定义一个其表示类型(数据构造函数的参数类型)是未装箱类型的newtype。因此,这是非法的。</target>
        </trans-unit>
        <trans-unit id="53d57a9a763d91b8c3c30f9e88b44d16989b4ef8" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;deriving&lt;/code&gt; on a data type declaration; write an &lt;code&gt;instance&lt;/code&gt; declaration instead.</source>
          <target state="translated">您不能对数据类型声明使用 &lt;code&gt;deriving&lt;/code&gt; ；而是写一个 &lt;code&gt;instance&lt;/code&gt; 声明。</target>
        </trans-unit>
        <trans-unit id="6c32b374e885a0b6d9cb00079f7e8613d4b04f29" translate="yes" xml:space="preserve">
          <source>You cannot use a &lt;code&gt;deriving&lt;/code&gt; clause for a GADT; only for an ordinary data type.</source>
          <target state="translated">您不能对GADT 使用 &lt;code&gt;deriving&lt;/code&gt; 子句；仅适用于普通数据类型。</target>
        </trans-unit>
        <trans-unit id="30dbefdf45ec49645c5f83a96844f0e523320cd0" translate="yes" xml:space="preserve">
          <source>You cannot write &lt;code&gt;GMapKey(type GMap(..))&lt;/code&gt; &amp;mdash; i.e., sub-component specifications cannot be nested. To specify &lt;code&gt;GMap&lt;/code&gt;&amp;lsquo;s data constructors, you have to list it separately.</source>
          <target state="translated">您不能编写 &lt;code&gt;GMapKey(type GMap(..))&lt;/code&gt; ，即子组件规格不能嵌套。要指定 &lt;code&gt;GMap&lt;/code&gt; 的数据构造函数，您必须单独列出它。</target>
        </trans-unit>
        <trans-unit id="801821aa8abcdb27ec906dde72beecfda446438f" translate="yes" xml:space="preserve">
          <source>You construct values of types &lt;code&gt;T1, MonadT, Swizzle&lt;/code&gt; by applying the constructor to suitable values, just as usual. For example,</source>
          <target state="translated">像往常一样 &lt;code&gt;T1, MonadT, Swizzle&lt;/code&gt; 通过将构造函数应用于适当的值来构造T1，MonadT，Swizzle类型的值。例如，</target>
        </trans-unit>
        <trans-unit id="35e2c1cf685c898a2ffd48135532e04038f5cd4e" translate="yes" xml:space="preserve">
          <source>You could also refactor to a left-fold, to decode in a more streaming fashion, and get the following decoder. It will start to return data without knowing that it can decode all input.</source>
          <target state="translated">你也可以重构为左折,以更流的方式进行解码,得到如下的解码器。它将开始返回数据,而不知道它可以解码所有的输入。</target>
        </trans-unit>
        <trans-unit id="71ec1076802c7edea768f5f032750297cd230b60" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t have to write a &lt;code&gt;Makefile&lt;/code&gt;.</source>
          <target state="translated">您不必编写 &lt;code&gt;Makefile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="672d8bd48c35b0238c3a6248aa09088d6f74bcfe" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to give a type signature if the lambda bound variable is a constructor argument. Here is an example we saw earlier:</source>
          <target state="translated">如果lambda绑定变量是构造函数参数，则无需提供类型签名。这是我们之前看到的示例：</target>
        </trans-unit>
        <trans-unit id="e18c34733b256b9593b5ee6ff19c7fc0070729c9" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to use &lt;code&gt;-fprof-auto&lt;/code&gt; for interpreted modules, annotations are automatically added at a granularity fine enough to distinguish individual call sites. However, you won&amp;rsquo;t see any call stack information for compiled code unless it was compiled with &lt;code&gt;-fprof-auto&lt;/code&gt; or has explicit &lt;code&gt;SCC&lt;/code&gt; annotations (see &lt;a href=&quot;profiling#scc-pragma&quot;&gt;Inserting cost centres by hand&lt;/a&gt;).</source>
          <target state="translated">您无需为解释的模块使用 &lt;code&gt;-fprof-auto&lt;/code&gt; ，注释将自动以足以区分各个调用站点的粒度添加。但是，除非使用 &lt;code&gt;-fprof-auto&lt;/code&gt; 进行编译或具有显式的 &lt;code&gt;SCC&lt;/code&gt; 注释，否则您将看不到任何已编译代码的调用堆栈信息（请参阅&lt;a href=&quot;profiling#scc-pragma&quot;&gt;手动插入成本中心&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="31b23007442846d8966d8b9c7845ac06100f1b24" translate="yes" xml:space="preserve">
          <source>You get &lt;code&gt;:type 3&lt;/code&gt;</source>
          <target state="translated">你会得到 &lt;code&gt;:type 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5ece0b208425f5c34d6d99b2faf1ff3266b3af5" translate="yes" xml:space="preserve">
          <source>You get &lt;code&gt;:type 3&lt;/code&gt; with your defined macro, not the builtin.</source>
          <target state="translated">您将使用定义的宏（而不是内置宏）获得 &lt;code&gt;:type 3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55bf28bc378f0c361c15d24c0484d765d31cbd6c" translate="yes" xml:space="preserve">
          <source>You get &lt;code&gt;:type 3&lt;/code&gt; with your defined macro.</source>
          <target state="translated">您将获得 &lt;code&gt;:type 3&lt;/code&gt; 和定义的宏。</target>
        </trans-unit>
        <trans-unit id="351ad6e5432243b3e78e9a641aceba23d847888a" translate="yes" xml:space="preserve">
          <source>You have a macro &lt;code&gt;:time&lt;/code&gt; and a macro &lt;code&gt;:type&lt;/code&gt;, and enter &lt;code&gt;:t 3&lt;/code&gt;</source>
          <target state="translated">您有一个宏 &lt;code&gt;:time&lt;/code&gt; 和一个宏 &lt;code&gt;:type&lt;/code&gt; ，然后输入 &lt;code&gt;:t 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b967e14a3b2c88438d391b51a97e44abc37b8a3" translate="yes" xml:space="preserve">
          <source>You have a macro &lt;code&gt;:time&lt;/code&gt; and enter &lt;code&gt;:t 3&lt;/code&gt;</source>
          <target state="translated">您有一个宏 &lt;code&gt;:time&lt;/code&gt; ,然后输入 &lt;code&gt;:t 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e64bb8bb775010f86695f2cafd801d4cc29f97f" translate="yes" xml:space="preserve">
          <source>You have a macro &lt;code&gt;:type&lt;/code&gt; and enter &lt;code&gt;:t 3&lt;/code&gt;</source>
          <target state="translated">您有一个宏 &lt;code&gt;:type&lt;/code&gt; ,然后输入 &lt;code&gt;:t 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c5292c5b2bc0c1ca9d4ca9e4d5b25bbd9e291c2" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;pattern&lt;/code&gt; keyword in an import/export specification to import or export an ordinary data constructor. For example:</source>
          <target state="translated">您也可以在导入/导出规范中使用 &lt;code&gt;pattern&lt;/code&gt; 关键字来导入或导出普通数据构造函数。例如：</target>
        </trans-unit>
        <trans-unit id="b74a8315c09d21b66a862d09b6cf623f9312b66e" translate="yes" xml:space="preserve">
          <source>You may also write an explicit exponent, which is similar to the exponent in decimal notation with the following differences: - the exponent begins with &lt;code&gt;p&lt;/code&gt; instead of &lt;code&gt;e&lt;/code&gt; - the exponent is written in base &lt;code&gt;10&lt;/code&gt; (&lt;strong&gt;not&lt;/strong&gt; 16) - the base of the exponent is &lt;code&gt;2&lt;/code&gt; (&lt;strong&gt;not&lt;/strong&gt; 16).</source>
          <target state="translated">您也可以编写一个显式指数，该指数与十进制表示法的指数相似，但有以下区别：-指数以 &lt;code&gt;p&lt;/code&gt; 而不是 &lt;code&gt;e&lt;/code&gt; 开头-指数以 &lt;code&gt;10&lt;/code&gt; 为底（&lt;strong&gt;不是&lt;/strong&gt; 16）-指数的底数为 &lt;code&gt;2&lt;/code&gt; （&lt;strong&gt;不是&lt;/strong&gt; 16）。</target>
        </trans-unit>
        <trans-unit id="8707d0873e271cfc9458fd1a9219b507929f88d1" translate="yes" xml:space="preserve">
          <source>You may bind unboxed variables in a (non-recursive, non-top-level) pattern binding, but you must make any such pattern-match strict. (Failing to do so emits a warning &lt;a href=&quot;using-warnings#ghc-flag--Wunbanged-strict-patterns&quot;&gt;&lt;code&gt;-Wunbanged-strict-patterns&lt;/code&gt;&lt;/a&gt;.) For example, rather than:</source>
          <target state="translated">您可以在（非递归，非顶级）模式绑定中绑定未装箱的变量，但是必须使任何此类模式匹配严格。（不这样做将发出警告&lt;a href=&quot;using-warnings#ghc-flag--Wunbanged-strict-patterns&quot;&gt; &lt;code&gt;-Wunbanged-strict-patterns&lt;/code&gt; &lt;/a&gt;。）例如，而不是：</target>
        </trans-unit>
        <trans-unit id="e5864b6382b64fb2ddff9a22e3cb269048cd1a65" translate="yes" xml:space="preserve">
          <source>You may not mix implicit-parameter bindings with ordinary bindings in a single &lt;code&gt;let&lt;/code&gt; expression; use two nested &lt;code&gt;let&lt;/code&gt;s instead. (In the case of &lt;code&gt;where&lt;/code&gt; you are stuck, since you can&amp;rsquo;t nest &lt;code&gt;where&lt;/code&gt; clauses.)</source>
          <target state="translated">您不能在单个 &lt;code&gt;let&lt;/code&gt; 表达式中混合使用隐式参数绑定和普通绑定。使用两个嵌套的 &lt;code&gt;let&lt;/code&gt; 代替。（在的情况下， &lt;code&gt;where&lt;/code&gt; 你被卡住，因为你不能嵌套 &lt;code&gt;where&lt;/code&gt; 的条款。）</target>
        </trans-unit>
        <trans-unit id="8a15b835542506de56c4f0581f50dc84443c25f1" translate="yes" xml:space="preserve">
          <source>You may omit the &lt;code&gt;$(...)&lt;/code&gt; in a top-level declaration splice. Simply writing an expression (rather than a declaration) implies a splice. For example, you can write</source>
          <target state="translated">您可以在顶层声明拼接中省略 &lt;code&gt;$(...)&lt;/code&gt; 。简单地写一个表达式（而不是声明）就意味着一个拼接。例如，你可以写</target>
        </trans-unit>
        <trans-unit id="2a2636e1eccaa733c43b723cac9f02b969f1c6f5" translate="yes" xml:space="preserve">
          <source>You may put multiple implicit-parameter bindings in a single binding group; but they are &lt;em&gt;not&lt;/em&gt; treated as a mutually recursive group (as ordinary &lt;code&gt;let&lt;/code&gt; bindings are). Instead they are treated as a non-recursive group, simultaneously binding all the implicit parameter. The bindings are not nested, and may be re-ordered without changing the meaning of the program. For example, consider:</source>
          <target state="translated">您可以将多个隐式参数绑定放在一个绑定组中。但它们&lt;em&gt;不&lt;/em&gt;被视为相互递归的组（就像普通的 &lt;code&gt;let&lt;/code&gt; 绑定一样）。而是将它们视为非递归组，同时绑定所有隐式参数。绑定不是嵌套的，可以在不更改程序含义的情况下重新排序。例如，考虑：</target>
        </trans-unit>
        <trans-unit id="69c2bcd249a51f493b6d8defcfa352db2fe97573" translate="yes" xml:space="preserve">
          <source>You may specify an explicit &lt;em&gt;pattern signature&lt;/em&gt;, as we did for &lt;code&gt;ExNumPat&lt;/code&gt; above, to specify the type of a pattern, just as you can for a function. As usual, the type signature can be less polymorphic than the inferred type. For example</source>
          <target state="translated">您可以像在上面的 &lt;code&gt;ExNumPat&lt;/code&gt; 中那样指定显式的&lt;em&gt;模式签名&lt;/em&gt;，以指定模式的类型，就像对函数一样。通常，类型签名可以比推断的类型具有更少的多态性。例如</target>
        </trans-unit>
        <trans-unit id="e235042667b9c56eb4698542652a4ffe747fce1f" translate="yes" xml:space="preserve">
          <source>You may specify that a different program be used for one of the phases of the compilation system, in place of whatever the &lt;code&gt;ghc&lt;/code&gt; has wired into it. For example, you might want to try a different assembler. The following options allow you to change the external program used for a given compilation phase:</source>
          <target state="translated">您可以指定将一个不同的程序用于编译系统的某个阶段，以代替 &lt;code&gt;ghc&lt;/code&gt; 连接到其中的任何程序。例如，您可能想尝试其他汇编器。以下选项使您可以更改用于给定编译阶段的外部程序：</target>
        </trans-unit>
        <trans-unit id="0c11ae553a6507ead096463536fbbb081dce0652" translate="yes" xml:space="preserve">
          <source>You may write programs that use exotic sorts of constraints in instance contexts and superclasses, but to do so you must use &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt;&lt;code&gt;UndecidableInstances&lt;/code&gt;&lt;/a&gt; to signal that you don&amp;rsquo;t mind if the type checker fails to terminate.</source>
          <target state="translated">您可能会编写在实例上下文和超类中使用特殊类型的约束的程序，但要这样做，必须使用&lt;a href=&quot;#extension-UndecidableInstances&quot;&gt; &lt;code&gt;UndecidableInstances&lt;/code&gt; &lt;/a&gt;表示您不介意类型检查器是否无法终止。</target>
        </trans-unit>
        <trans-unit id="d9ac328de126bafdb81fd66142c9606ef9f2bba1" translate="yes" xml:space="preserve">
          <source>You might also want to take a look at &lt;a href=&quot;http://www.haskell.org/haskellwiki/Hp2any&quot;&gt;hp2any&lt;/a&gt;, a more advanced suite of tools (not distributed with GHC) for displaying heap profiles.</source>
          <target state="translated">您可能还想看看&lt;a href=&quot;http://www.haskell.org/haskellwiki/Hp2any&quot;&gt;hp2any&lt;/a&gt;，这是一个用于显示堆配置文件的更高级的工具套件（未随GHC分发）。</target>
        </trans-unit>
        <trans-unit id="1723e9eaca2c46aa402d493c6d51826bd13e2dec" translate="yes" xml:space="preserve">
          <source>You might find it useful to use Haskell&amp;rsquo;s &lt;code&gt;seq&lt;/code&gt; function to evaluate individual thunks rather than evaluating the whole expression with &lt;a href=&quot;#ghci-cmd-:force&quot;&gt;&lt;code&gt;:force&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">您可能会发现，使用Haskell的 &lt;code&gt;seq&lt;/code&gt; 函数评估单个重击比使用&lt;a href=&quot;#ghci-cmd-:force&quot;&gt; &lt;code&gt;:force&lt;/code&gt; &lt;/a&gt;评估整个表达式有用。例如：</target>
        </trans-unit>
        <trans-unit id="8b2b2c5879599e9fb9784f8ece7db05367147809" translate="yes" xml:space="preserve">
          <source>You might want to use this if you are you have a type class method which returns a constrained type. For example, a type class where one of the methods implements a traversal.</source>
          <target state="translated">如果你有一个返回约束类型的类型类方法,你可能想使用这个方法。例如,一个类型类中的一个方法实现了一个遍历。</target>
        </trans-unit>
        <trans-unit id="7ca17a83d89102130bc3fbe2303f1ff784f0cd26" translate="yes" xml:space="preserve">
          <source>You must install and have LLVM available on your &lt;code&gt;PATH&lt;/code&gt; for the LLVM code generator to work. Specifically GHC needs to be able to call the &lt;code&gt;opt&lt;/code&gt; and &lt;code&gt;llc&lt;/code&gt; tools. Secondly, if you are running Mac OS X with LLVM 3.0 or greater then you also need the &lt;a href=&quot;http://clang.llvm.org&quot;&gt;Clang C compiler&lt;/a&gt; compiler available on your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">您必须在 &lt;code&gt;PATH&lt;/code&gt; 上安装LLVM并使其可用，才能使LLVM代码生成器正常工作。特别是，GHC需要能够调用 &lt;code&gt;opt&lt;/code&gt; 和 &lt;code&gt;llc&lt;/code&gt; 工具。其次，如果您运行的是LLVM 3.0或更高版本的Mac OS X，则还需要 &lt;code&gt;PATH&lt;/code&gt; 上可用的&lt;a href=&quot;http://clang.llvm.org&quot;&gt;Clang C编译&lt;/a&gt;器。</target>
        </trans-unit>
        <trans-unit id="7848640f49a2013635063f5f2a65c426e3adec48" translate="yes" xml:space="preserve">
          <source>You need this when using &lt;code&gt;&lt;a href=&quot;control-exception#v:catches&quot;&gt;catches&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;control-exception#v:catches&quot;&gt;catches&lt;/a&gt;&lt;/code&gt; 时需要此功能。</target>
        </trans-unit>
        <trans-unit id="5e3e8cd42cf48f666040b93e9cb7bcb77de13e8f" translate="yes" xml:space="preserve">
          <source>You need to build an &amp;ldquo;installed package info&amp;rdquo; file for passing to &lt;code&gt;ghc-pkg&lt;/code&gt; when installing your package. The contents of this file are described in &lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo: a package specification&lt;/a&gt;.</source>
          <target state="translated">您需要构建一个&amp;ldquo;已安装的软件包信息&amp;rdquo;文件，以便在安装软件包时传递给 &lt;code&gt;ghc-pkg&lt;/code&gt; 。该文件的内容在&lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo：程序包规范中&lt;/a&gt;进行了描述。</target>
        </trans-unit>
        <trans-unit id="ecae143bd200467151fc11557c8e8ff56f5c8728" translate="yes" xml:space="preserve">
          <source>You only need to enable this extension if the language you&amp;rsquo;re using is Haskell 98, in which a data type must have at least one constructor. Haskell 2010 relaxed this rule to allow data types with no constructors, and thus &lt;a href=&quot;#extension-EmptyDataDecls&quot;&gt;&lt;code&gt;EmptyDataDecls&lt;/code&gt;&lt;/a&gt; is enabled by default when the language is Haskell 2010.</source>
          <target state="translated">仅当您使用的语言是Haskell 98时才需要启用此扩展，其中一种数据类型必须至少具有一个构造函数。Haskell 2010放宽了此规则，以允许没有构造函数的数据类型，因此，当语言为Haskell 2010时，默认情况下启用&lt;a href=&quot;#extension-EmptyDataDecls&quot;&gt; &lt;code&gt;EmptyDataDecls&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="20e8c6e9c630a979645ea222c79a82dcdd527d41" translate="yes" xml:space="preserve">
          <source>You probably don&amp;rsquo;t need to use this feature, it was added mainly so that we can build backwards-compatible versions of packages when APIs change. It can lead to fragile dependencies in the common case: modules occasionally move from one package to another, rendering any package-qualified imports broken. See also &lt;a href=&quot;packages#package-thinning-and-renaming&quot;&gt;Thinning and renaming modules&lt;/a&gt; for an alternative way of disambiguating between module names.</source>
          <target state="translated">您可能不需要使用此功能，它是主要添加的，以便在API更改时我们可以构建软件包的向后兼容版本。在通常情况下，它可能导致脆弱的依赖关系：模块偶尔会从一个软件包移动到另一个软件包，从而使任何符合软件包要求的导入都中断了。另请参见&lt;a href=&quot;packages#package-thinning-and-renaming&quot;&gt;稀疏和重命名模块&lt;/a&gt;，以消除模块名称之间的歧义。</target>
        </trans-unit>
        <trans-unit id="06a8acb7bef4875c53862bd963dfb3bee4782074" translate="yes" xml:space="preserve">
          <source>You should be careful with your installation function, because the list of passes you give back isn&amp;rsquo;t questioned or double checked by GHC at the time of this writing. An installation function like the following:</source>
          <target state="translated">您应该谨慎使用安装功能，因为在撰写本文时，GHC不会质疑或仔细检查您提供的通过列表。安装功能如下：</target>
        </trans-unit>
        <trans-unit id="c8fb8a0845765453a3b51653e072b1e3775e368f" translate="yes" xml:space="preserve">
          <source>You should not use this module unless you are determined to monkey with the internals, as the functions here do just about nothing to preserve data invariants. You have been warned!</source>
          <target state="translated">你不应该使用这个模块,除非你决定要在内部结构上做手脚,因为这里的函数对保护数据不变性毫无作用。你已经被警告了!</target>
        </trans-unit>
        <trans-unit id="e9580720487f8d0a617fa4e79bebc3170cc9fb48" translate="yes" xml:space="preserve">
          <source>You should think of the object file and the interface file as a pair, since the interface file is in a sense a compiler-readable description of the contents of the object file. If the interface file and object file get out of sync for any reason, then the compiler may end up making assumptions about the object file that aren&amp;rsquo;t true; trouble will almost certainly follow. For this reason, we recommend keeping object files and interface files in the same place (GHC does this by default, but it is possible to override the defaults as we&amp;rsquo;ll explain shortly).</source>
          <target state="translated">您应该将目标文件和接口文件视为一对，因为从某种意义上说，接口文件是目标文件内容的编译器可读描述。如果接口文件和目标文件由于某种原因不同步，那么编译器可能最终会做出关于目标文件的假设，而这些假设是不正确的。麻烦几乎肯定会随之而来。因此，我们建议将目标文件和接口文件放在同一位置（GHC默认情况下会这样做，但是有可能覆盖默认值，我们将在稍后解释）。</target>
        </trans-unit>
        <trans-unit id="c015ba62398898e9130e51965530b85d77f20111" translate="yes" xml:space="preserve">
          <source>You will eventually need all the values stored.</source>
          <target state="translated">你最终会需要所有存储的值。</target>
        </trans-unit>
        <trans-unit id="f1f3422827e73aced4dc67f6bd9053292d8032b6" translate="yes" xml:space="preserve">
          <source>You would think that the definition of &lt;code&gt;g&lt;/code&gt; would surely typecheck! After all &lt;code&gt;f&lt;/code&gt; has exactly the same type, and &lt;code&gt;g=f&lt;/code&gt;. But in fact &lt;code&gt;f&lt;/code&gt;&amp;lsquo;s type is instantiated and the instantiated constraints are solved against the constraints bound by &lt;code&gt;g&lt;/code&gt;&amp;lsquo;s signature. So, in the case an ambiguous type, solving will fail. For example, consider the earlier definition &lt;code&gt;f :: C a =&amp;gt; Int&lt;/code&gt;:</source>
          <target state="translated">您会认为 &lt;code&gt;g&lt;/code&gt; 的定义肯定会进行类型检查！毕竟 &lt;code&gt;f&lt;/code&gt; 具有完全相同的类型，并且 &lt;code&gt;g=f&lt;/code&gt; 。但是实际上 &lt;code&gt;f&lt;/code&gt; 的类型是实例化的，并且针对 &lt;code&gt;g&lt;/code&gt; 的签名所约束的约束可以解决实例化的约束。因此，在类型不明确的情况下，求解将失败。例如，考虑先前的定义 &lt;code&gt;f :: C a =&amp;gt; Int&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="a82f52f22d9821ac7862aa36528ae6d83fd3c82d" translate="yes" xml:space="preserve">
          <source>Your GHC must have been built with &lt;code&gt;libdw&lt;/code&gt; support for this to work.</source>
          <target state="translated">您的GHC必须已使用 &lt;code&gt;libdw&lt;/code&gt; 支持构建，才能正常工作。</target>
        </trans-unit>
        <trans-unit id="9519d527689c73f17e39c0b9add443cee365e48f" translate="yes" xml:space="preserve">
          <source>Your code should just work as before when &lt;a href=&quot;#extension-ApplicativeDo&quot;&gt;&lt;code&gt;ApplicativeDo&lt;/code&gt;&lt;/a&gt; is enabled, provided you use conventional &lt;code&gt;Applicative&lt;/code&gt; instances. However, if you define a &lt;code&gt;Functor&lt;/code&gt; or &lt;code&gt;Applicative&lt;/code&gt; instance using do-notation, then it will likely get turned into an infinite loop by GHC. For example, if you do this:</source>
          <target state="translated">如果您使用常规的 &lt;code&gt;Applicative&lt;/code&gt; 实例，则您的代码应与启用&lt;a href=&quot;#extension-ApplicativeDo&quot;&gt; &lt;code&gt;ApplicativeDo&lt;/code&gt; &lt;/a&gt;时一样工作。但是，如果您使用do-notation 定义 &lt;code&gt;Functor&lt;/code&gt; 或 &lt;code&gt;Applicative&lt;/code&gt; 实例，则GHC可能会将其变成无限循环。例如，如果您这样做：</target>
        </trans-unit>
        <trans-unit id="a1183986a9ffb1b2af584571ceb4a326e3d27e31" translate="yes" xml:space="preserve">
          <source>Z NOTATION LEFT IMAGE BRACKET</source>
          <target state="translated">Z 注释 左侧图像框</target>
        </trans-unit>
        <trans-unit id="0c83924bcb1f702fbc698e5e6e9f9116245051fc" translate="yes" xml:space="preserve">
          <source>Z NOTATION RIGHT IMAGE BRACKET</source>
          <target state="translated">Z记号右图篮子。</target>
        </trans-unit>
        <trans-unit id="9ee13b9d7e56ee129a6f6f181a2acc60f3e30fdb" translate="yes" xml:space="preserve">
          <source>Zero and plus:</source>
          <target state="translated">零和加。</target>
        </trans-unit>
        <trans-unit id="e033898555382f2650b269ecbde512101722e511" translate="yes" xml:space="preserve">
          <source>Zero is represented by an empty error and the plus operation executes its second argument if the first fails.</source>
          <target state="translated">零用空错误表示,如果第一个参数失败,则加号操作会执行其第二个参数。</target>
        </trans-unit>
        <trans-unit id="89ce708b7ebe149f5f5bb556542ed3a714814ce1" translate="yes" xml:space="preserve">
          <source>Zero or more.</source>
          <target state="translated">零或更多。</target>
        </trans-unit>
        <trans-unit id="4f2b9ff1bc4646cc78797dbbfc4b21df6589cf65" translate="yes" xml:space="preserve">
          <source>ZeroPad</source>
          <target state="translated">ZeroPad</target>
        </trans-unit>
        <trans-unit id="2700bd76f0516df842fd9e4abb85f8429575d4af" translate="yes" xml:space="preserve">
          <source>ZigZagMode</source>
          <target state="translated">ZigZagMode</target>
        </trans-unit>
        <trans-unit id="e3c3091702d0663b55dd13e13b164ff519e2737a" translate="yes" xml:space="preserve">
          <source>ZipList</source>
          <target state="translated">ZipList</target>
        </trans-unit>
        <trans-unit id="281d4deef155f3f504d99a312a022a397d572373" translate="yes" xml:space="preserve">
          <source>Zipping</source>
          <target state="translated">Zipping</target>
        </trans-unit>
        <trans-unit id="933679db226a72e96000d73f1c7a880b6ddef5ad" translate="yes" xml:space="preserve">
          <source>Zipping and unzipping</source>
          <target state="translated">压缩和解压缩</target>
        </trans-unit>
        <trans-unit id="005dee8618c3540289989daf3c2e77debf4a260b" translate="yes" xml:space="preserve">
          <source>Zipping and unzipping ByteStrings</source>
          <target state="translated">压缩和解压缩ByteStrings。</target>
        </trans-unit>
        <trans-unit id="30dc05c3a24d302f5746bde459be8a25f4a06e2d" translate="yes" xml:space="preserve">
          <source>Zipping and unzipping lists</source>
          <target state="translated">压缩和解压缩列表</target>
        </trans-unit>
        <trans-unit id="07d080af9fb55da8f84a8c1fcaee4852c64bdb52" translate="yes" xml:space="preserve">
          <source>Zipping and unzipping streams</source>
          <target state="translated">压缩和解压缩流</target>
        </trans-unit>
        <trans-unit id="aa0ede24e19b5ea08adf33939b19f9036f4d61de" translate="yes" xml:space="preserve">
          <source>Zips and unzip</source>
          <target state="translated">拉链和解压</target>
        </trans-unit>
        <trans-unit id="826ebf2b3d9d03b6187eb018e001d37252118a80" translate="yes" xml:space="preserve">
          <source>Zl: Separator, Line</source>
          <target state="translated">Zl:分离器,线</target>
        </trans-unit>
        <trans-unit id="0f9a135b374272cc3038eb482b2ccf2620a381ea" translate="yes" xml:space="preserve">
          <source>ZonedTime</source>
          <target state="translated">ZonedTime</target>
        </trans-unit>
        <trans-unit id="53df64e0f183ed18f2af00a3cd4b1e5f59e3ad75" translate="yes" xml:space="preserve">
          <source>Zp: Separator, Paragraph</source>
          <target state="translated">Zp:分隔符,段落</target>
        </trans-unit>
        <trans-unit id="b8543845a37a3bc5a76a7d50c4861b4a9b6ca581" translate="yes" xml:space="preserve">
          <source>Zs: Separator, Space</source>
          <target state="translated">Zs:分离器,空间</target>
        </trans-unit>
        <trans-unit id="ed9b7c0478a525885fdc0372f59486ef9c26b349" translate="yes" xml:space="preserve">
          <source>[ This is an experimental feature enabled by the new &lt;code&gt;-fexternal-interpreter&lt;/code&gt; flag that was introduced in GHC 8.0.1. It is currently not supported on Windows.]</source>
          <target state="translated">[这是GHC 8.0.1中引入的新 &lt;code&gt;-fexternal-interpreter&lt;/code&gt; 标志启用的实验功能。Windows当前不支持它。]</target>
        </trans-unit>
        <trans-unit id="8d3d9a8e3d2cb9184eb7776e15ffceb7ac844db5" translate="yes" xml:space="preserve">
          <source>[AssocDataTypes2005]</source>
          <target state="translated">[AssocDataTypes2005]</target>
        </trans-unit>
        <trans-unit id="3149026df86df09307a54a32b5ebc7072dbf3911" translate="yes" xml:space="preserve">
          <source>[AssocTypeSyn2005]</source>
          <target state="translated">[AssocTypeSyn2005]</target>
        </trans-unit>
        <trans-unit id="27ff8c3223896183bde17540d1a603485152df8f" translate="yes" xml:space="preserve">
          <source>[Example: &lt;code&gt;-n4m&lt;/code&gt; ] When set to a non-zero value, this option divides the allocation area (&lt;code&gt;-A&lt;/code&gt; value) into chunks of the specified size. During execution, when a processor exhausts its current chunk, it is given another chunk from the pool until the pool is exhausted, at which point a collection is triggered.</source>
          <target state="translated">[示例： &lt;code&gt;-n4m&lt;/code&gt; ]当设置为非零值时，此选项将分配区域（ &lt;code&gt;-A&lt;/code&gt; 值）划分为指定大小的块。在执行期间，当处理器耗尽其当前块时，会从池中为其分配另一个块，直到该池耗尽为止，然后触发集合。</target>
        </trans-unit>
        <trans-unit id="fd9c35275c0e496e473d959fc136a682ad3086d9" translate="yes" xml:space="preserve">
          <source>[Generics2010]</source>
          <target state="translated">[Generics2010]</target>
        </trans-unit>
        <trans-unit id="2163465089d2b153e0b8b61b46434eae8e1fe466" translate="yes" xml:space="preserve">
          <source>[Jones1999]</source>
          <target state="translated">[Jones1999]</target>
        </trans-unit>
        <trans-unit id="0c12f0c3c0a3e1aa6318a2e1ca646ed6212245b2" translate="yes" xml:space="preserve">
          <source>[Jones2000]</source>
          <target state="translated">[Jones2000]</target>
        </trans-unit>
        <trans-unit id="5f40289190bf70086cf4ad6fbc3348c060199dc3" translate="yes" xml:space="preserve">
          <source>[Lewis2000]</source>
          <target state="translated">[Lewis2000]</target>
        </trans-unit>
        <trans-unit id="c15f78a0d8a349e988dcf4bdf728980c9aa85b77" translate="yes" xml:space="preserve">
          <source>[TypeFamilies2008]</source>
          <target state="translated">[TypeFamilies2008]</target>
        </trans-unit>
        <trans-unit id="b5891f87311c40fc7e2feb2ed9e6cc0bd4955f76" translate="yes" xml:space="preserve">
          <source>[Vista and later only] The RTS calls the Win32 function &lt;code&gt;CancelSynchronousIo&lt;/code&gt;, which will cause a blocking I/O operation to return with the error &lt;code&gt;ERROR_OPERATION_ABORTED&lt;/code&gt;.</source>
          <target state="translated">[仅适用于Vista和更高版本] RTS调用Win32函数 &lt;code&gt;CancelSynchronousIo&lt;/code&gt; ，这将导致阻塞的I / O操作返回，错误为 &lt;code&gt;ERROR_OPERATION_ABORTED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e646f03d1dbd0ea6ebb7f3338bf711149839b070" translate="yes" xml:space="preserve">
          <source>[this is the default setting] Enable only the &amp;ldquo;safe&amp;rdquo; RTS options: (Currently only &lt;code&gt;-?&lt;/code&gt; and &lt;code&gt;--info&lt;/code&gt;.) Any other RTS options on the command line or in the &lt;code&gt;GHCRTS&lt;/code&gt; environment variable causes the program with to abort with an error message.</source>
          <target state="translated">[这是默认设置]仅启用&amp;ldquo;安全&amp;rdquo; RTS选项：（当前仅 &lt;code&gt;-?&lt;/code&gt; 和 &lt;code&gt;--info&lt;/code&gt; 。）命令行或 &lt;code&gt;GHCRTS&lt;/code&gt; 环境变量中的任何其他RTS选项都会导致程序因错误而中止信息。</target>
        </trans-unit>
        <trans-unit id="34cbcaa3ebb2e1b02bbd040476f4a4192d9188e6" translate="yes" xml:space="preserve">
          <source>\( O(1) \). A singleton sequence.</source>
          <target state="translated">\（O（1）\）。单例序列。</target>
        </trans-unit>
        <trans-unit id="3b0d6be93c20b18b6a203f57ca8cdd843632dbbc" translate="yes" xml:space="preserve">
          <source>\( O(1) \). Add an element to the left end of a sequence. Mnemonic: a triangle with the single element at the pointy end.</source>
          <target state="translated">\（O（1）\）。在序列的左端添加一个元素。助记符：尖端位于单个元素的三角形。</target>
        </trans-unit>
        <trans-unit id="e29f0dd89cf4b98d9f9940c595b922a5dd21f994" translate="yes" xml:space="preserve">
          <source>\( O(1) \). Add an element to the right end of a sequence. Mnemonic: a triangle with the single element at the pointy end.</source>
          <target state="translated">\（O（1）\）。在序列的右端添加一个元素。助记符：尖端位于单个元素的三角形。</target>
        </trans-unit>
        <trans-unit id="e2f5fbbdc003ed6b6112958c18acd9b5bad4a569" translate="yes" xml:space="preserve">
          <source>\( O(1) \). Analyse the left end of a sequence.</source>
          <target state="translated">\（O（1）\）。分析序列的左端。</target>
        </trans-unit>
        <trans-unit id="f32019dd1c2a2c3b992da628e1dbb8fca3a9a405" translate="yes" xml:space="preserve">
          <source>\( O(1) \). Analyse the right end of a sequence.</source>
          <target state="translated">\（O（1）\）。分析序列的右端。</target>
        </trans-unit>
        <trans-unit id="7b89d619c376ded4ba8029ab80cbbe273480461c" translate="yes" xml:space="preserve">
          <source>\( O(1) \). Is this the empty sequence?</source>
          <target state="translated">\（O（1）\）。这是空序列吗？</target>
        </trans-unit>
        <trans-unit id="4043cdf48e14bbc7bef8e182dfe108b0e21704e2" translate="yes" xml:space="preserve">
          <source>\( O(1) \). The empty sequence.</source>
          <target state="translated">\（O（1）\）。空序列。</target>
        </trans-unit>
        <trans-unit id="789a94c6e45150494a843083839c99ddbbcbcb8b" translate="yes" xml:space="preserve">
          <source>\( O(1) \). The number of elements in the sequence.</source>
          <target state="translated">\（O（1）\）。序列中的元素数。</target>
        </trans-unit>
        <trans-unit id="9c9b70cf9a1b94d641385e597a06a4220c6c9d1d" translate="yes" xml:space="preserve">
          <source>\( O(\log n) \). &lt;code&gt;replicate n x&lt;/code&gt; is a sequence consisting of &lt;code&gt;n&lt;/code&gt; copies of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">\（O（\ log n）\）。 &lt;code&gt;replicate n x&lt;/code&gt; 是由 &lt;code&gt;x&lt;/code&gt; 的 &lt;code&gt;n&lt;/code&gt; 个副本组成的序列。</target>
        </trans-unit>
        <trans-unit id="546ea35cf6dc085674954ee6937f092065e639a0" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:insertAt&quot;&gt;insertAt&lt;/a&gt; i x xs&lt;/code&gt; inserts &lt;code&gt;x&lt;/code&gt; into &lt;code&gt;xs&lt;/code&gt; at the index &lt;code&gt;i&lt;/code&gt;, shifting the rest of the sequence over.</source>
          <target state="translated">\（O（\ log（\ min（i，ni）））\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:insertAt&quot;&gt;insertAt&lt;/a&gt; i x xs&lt;/code&gt; 在索引 &lt;code&gt;i&lt;/code&gt; 处将 &lt;code&gt;x&lt;/code&gt; 插入 &lt;code&gt;xs&lt;/code&gt; ，将序列的其余部分移到上方。</target>
        </trans-unit>
        <trans-unit id="0fe577d234433675e32729fdf0c2bc4f8e4d33da" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). A flipped, infix version of &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\（O（\ log（\ min（i，ni）））\）。翻转的infix版本的 &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f1d705d397309f0a39429659216e4009c9399c0" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Delete the element of a sequence at a given index. Return the original sequence if the index is out of range.</source>
          <target state="translated">\（O（\ log（\ min（i，ni）））\）。删除给定索引处序列的元素。如果索引超出范围，则返回原始序列。</target>
        </trans-unit>
        <trans-unit id="5bf003bead51d54a782a3e3daf5bde07395d33e1" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Elements of a sequence after the first &lt;code&gt;i&lt;/code&gt;. If &lt;code&gt;i&lt;/code&gt; is negative, &lt;code&gt;&lt;a href=&quot;data-sequence#v:drop&quot;&gt;drop&lt;/a&gt; i s&lt;/code&gt; yields the whole sequence. If the sequence contains fewer than &lt;code&gt;i&lt;/code&gt; elements, the empty sequence is returned.</source>
          <target state="translated">\（O（\ log（\ min（i，ni）））\）。第一个 &lt;code&gt;i&lt;/code&gt; 之后的序列的元素。如果 &lt;code&gt;i&lt;/code&gt; 是负的， &lt;code&gt;&lt;a href=&quot;data-sequence#v:drop&quot;&gt;drop&lt;/a&gt; i s&lt;/code&gt; 收益率整个序列。如果序列包含的元素少于 &lt;code&gt;i&lt;/code&gt; 个，则返回空序列。</target>
        </trans-unit>
        <trans-unit id="ca211904aa96b1bd11aefb66842881538beef91d" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Replace the element at the specified position. If the position is out of range, the original sequence is returned.</source>
          <target state="translated">\（O（\ log（\ min（i，ni）））\）。在指定位置替换元素。如果位置超出范围，则返回原始序列。</target>
        </trans-unit>
        <trans-unit id="d2ebe26c5fed5338d546b09c50f90bdfc79c5c59" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Split a sequence at a given position. &lt;code&gt;&lt;a href=&quot;data-sequence#v:splitAt&quot;&gt;splitAt&lt;/a&gt; i s = (&lt;a href=&quot;data-sequence#v:take&quot;&gt;take&lt;/a&gt; i s, &lt;a href=&quot;data-sequence#v:drop&quot;&gt;drop&lt;/a&gt; i s)&lt;/code&gt;.</source>
          <target state="translated">\（O（\ log（\ min（i，ni）））\）。在给定位置分割序列。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:splitAt&quot;&gt;splitAt&lt;/a&gt; i s = (&lt;a href=&quot;data-sequence#v:take&quot;&gt;take&lt;/a&gt; i s, &lt;a href=&quot;data-sequence#v:drop&quot;&gt;drop&lt;/a&gt; i s)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b9982ecf4ad26d9bf2a275e1e35fdb06d9eb20b1" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). The element at the specified position, counting from 0. If the specified position is negative or at least the length of the sequence, &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\（O（\ log（\ min（i，ni）））\）。指定位置的元素，从0开始计数。如果指定位置为负或至少为序列长度，则 &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="532d131357cc364ae609f962dfa852c5ecc94891" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). The element at the specified position, counting from 0. The argument should thus be a non-negative integer less than the size of the sequence. If the position is out of range, &lt;code&gt;&lt;a href=&quot;data-sequence#v:index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; fails with an error.</source>
          <target state="translated">\（O（\ log（\ min（i，ni）））\）。指定位置的元素，从0开始计数。因此，参数应为小于序列大小的非负整数。如果位置超出范围， &lt;code&gt;&lt;a href=&quot;data-sequence#v:index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; 失败并显示错误。</target>
        </trans-unit>
        <trans-unit id="31957683248c73c401120fd6ad1cf601736552c0" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). The first &lt;code&gt;i&lt;/code&gt; elements of a sequence. If &lt;code&gt;i&lt;/code&gt; is negative, &lt;code&gt;&lt;a href=&quot;data-sequence#v:take&quot;&gt;take&lt;/a&gt; i s&lt;/code&gt; yields the empty sequence. If the sequence contains fewer than &lt;code&gt;i&lt;/code&gt; elements, the whole sequence is returned.</source>
          <target state="translated">\（O（\ log（\ min（i，ni）））\）。序列的前 &lt;code&gt;i&lt;/code&gt; 个元素。如果 &lt;code&gt;i&lt;/code&gt; 为负，则 &lt;code&gt;&lt;a href=&quot;data-sequence#v:take&quot;&gt;take&lt;/a&gt; i s&lt;/code&gt; 空序列。如果序列包含的元素少于 &lt;code&gt;i&lt;/code&gt; 个，则返回整个序列。</target>
        </trans-unit>
        <trans-unit id="3751741ea558f6d0bac38a7743eebeac69c91050" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Update the element at the specified position. If the position is out of range, the original sequence is returned. &lt;code&gt;&lt;a href=&quot;data-sequence#v:adjust&quot;&gt;adjust&lt;/a&gt;&lt;/code&gt; can lead to poor performance and even memory leaks, because it does not force the new value before installing it in the sequence. &lt;code&gt;&lt;a href=&quot;data-sequence#v:adjust-39-&quot;&gt;adjust'&lt;/a&gt;&lt;/code&gt; should usually be preferred.</source>
          <target state="translated">\（O（\ log（\ min（i，ni）））\）。在指定位置更新元素。如果位置超出范围，则返回原始序列。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:adjust&quot;&gt;adjust&lt;/a&gt;&lt;/code&gt; 可能会导致性能下降，甚至导致内存泄漏，因为在按顺序安装新值之前，它不会强制执行该值。通常应优先选择 &lt;code&gt;&lt;a href=&quot;data-sequence#v:adjust-39-&quot;&gt;adjust'&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="899c0369d8a46c9994ff0ff3c2c10f46f7406360" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Update the element at the specified position. If the position is out of range, the original sequence is returned. The new value is forced before it is installed in the sequence.</source>
          <target state="translated">\（O（\ log（\ min（i，ni）））\）。在指定位置更新元素。如果位置超出范围，则返回原始序列。在按顺序安装新值之前，将强制使用该值。</target>
        </trans-unit>
        <trans-unit id="040c9f3a0d532171b25aefd9fcca6a4a01b60888" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(n_1,n_2))) \). Concatenate two sequences.</source>
          <target state="translated">\（O（\ log（\ min（n_1，n_2）））\）。连接两个序列。</target>
        </trans-unit>
        <trans-unit id="06b9733d915a81dc3c5e947c773106d127b1fbcf" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; takes two sequences and returns a sequence of corresponding pairs. If one input is short, excess elements are discarded from the right end of the longer sequence.</source>
          <target state="translated">\（O（\ min（n_1，n_2））\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 接受两个序列，并返回一个对应对的序列。如果一个输入短，则从较长序列的右端丢弃多余的元素。</target>
        </trans-unit>
        <trans-unit id="b0d0c309376140b35e15a12bd8a45bdb90c7b61c" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generalizes &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; by zipping with the function given as the first argument, instead of a tupling function. For example, &lt;code&gt;zipWith (+)&lt;/code&gt; is applied to two sequences to take the sequence of corresponding sums.</source>
          <target state="translated">\（O（\ min（n_1，n_2））\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 通过使用给定的函数作为第一个参数而不是tupling函数对 &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 进行泛化。例如，将 &lt;code&gt;zipWith (+)&lt;/code&gt; 应用于两个序列以获取相应总和的序列。</target>
        </trans-unit>
        <trans-unit id="dbdb161425b4bae8703cd60a4996961e056d4753" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2,n_3)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; takes three sequences and returns a sequence of triples, analogous to &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\（O（\ min（n_1，n_2，n_3））\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; 接受三个序列，并返回一个类似于 &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 的三元组序列。</target>
        </trans-unit>
        <trans-unit id="eb3b48ecc1f93c5a7b9927fe5999f5b74e5ec5b7" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2,n_3)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith3&quot;&gt;zipWith3&lt;/a&gt;&lt;/code&gt; takes a function which combines three elements, as well as three sequences and returns a sequence of their point-wise combinations, analogous to &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\（O（\ min（n_1，n_2，n_3））\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith3&quot;&gt;zipWith3&lt;/a&gt;&lt;/code&gt; 包含一个将三个元素以及三个序列组合在一起的函数，并返回它们逐点组合的序列，类似于 &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa10a5a78855dcba7d813e3ee6a207f58661c276" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2,n_3,n_4)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip4&quot;&gt;zip4&lt;/a&gt;&lt;/code&gt; takes four sequences and returns a sequence of quadruples, analogous to &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\（O（\ min（n_1，n_2，n_3，n_4））\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip4&quot;&gt;zip4&lt;/a&gt;&lt;/code&gt; 接受四个序列，并返回一个类似于 &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 的四倍序列。</target>
        </trans-unit>
        <trans-unit id="4390799dddf20a6343ea9646879bb16e7f084e8e" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2,n_3,n_4)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith4&quot;&gt;zipWith4&lt;/a&gt;&lt;/code&gt; takes a function which combines four elements, as well as four sequences and returns a sequence of their point-wise combinations, analogous to &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\（O（\ min（n_1，n_2，n_3，n_4））\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith4&quot;&gt;zipWith4&lt;/a&gt;&lt;/code&gt; 包含一个将四个元素以及四个序列组合在一起的函数，并返回它们逐点组合的序列，类似于 &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="854a5f214f7aa4910183ce26158e2621a9a01034" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the breakpoint index. &lt;code&gt;&lt;a href=&quot;data-sequence#v:breakl&quot;&gt;breakl&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt;, returns a pair whose first element is the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that &lt;em&gt;do not satisfy&lt;/em&gt;&lt;code&gt;p&lt;/code&gt; and the second element is the remainder of the sequence.</source>
          <target state="translated">\（O（i）\）其中\（i \）是断点索引。应用于谓词 &lt;code&gt;p&lt;/code&gt; 和序列 &lt;code&gt;xs&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;data-sequence#v:breakl&quot;&gt;breakl&lt;/a&gt;&lt;/code&gt; 返回一个对，该对的第一个元素是&lt;em&gt;不满足&lt;/em&gt; &lt;code&gt;p&lt;/code&gt; 的元素的 &lt;code&gt;xs&lt;/code&gt; 的最长前缀（可能为空），第二个元素是序列的其余部分。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fb6c136646637ba26b9e4d03ff183d0f2f7f4e9e" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the prefix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileL&quot;&gt;dropWhileL&lt;/a&gt; p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt; p xs&lt;/code&gt;.</source>
          <target state="translated">\（O（i）\）其中\（i \）是前缀长度。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileL&quot;&gt;dropWhileL&lt;/a&gt; p xs&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt; p xs&lt;/code&gt; 之后剩余的后缀。</target>
        </trans-unit>
        <trans-unit id="cbf309903f09bc7649ddc265c0f3450f702cefc0" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the prefix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanl&quot;&gt;spanl&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt;, returns a pair whose first element is the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt; and the second element is the remainder of the sequence.</source>
          <target state="translated">\（O（i）\）其中\（i \）是前缀长度。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanl&quot;&gt;spanl&lt;/a&gt;&lt;/code&gt; 应用于谓词 &lt;code&gt;p&lt;/code&gt; 和序列 &lt;code&gt;xs&lt;/code&gt; ，返回一对其第一个元素是满足 &lt;code&gt;p&lt;/code&gt; 的元素的 &lt;code&gt;xs&lt;/code&gt; 的最长前缀（可能为空），而第二个元素是该序列的其余部分。</target>
        </trans-unit>
        <trans-unit id="8a5eca9907659b3a43380501559c0f8bf072c551" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the prefix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">\（O（i）\）其中\（i \）是前缀长度。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt;&lt;/code&gt; 应用于谓词 &lt;code&gt;p&lt;/code&gt; 和序列 &lt;code&gt;xs&lt;/code&gt; ，返回满足 &lt;code&gt;p&lt;/code&gt; 的元素 &lt;code&gt;xs&lt;/code&gt; 的最长前缀（可能为空）。</target>
        </trans-unit>
        <trans-unit id="2527991eb02d123ae97e3053f7be92eb76670670" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the suffix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileR&quot;&gt;dropWhileR&lt;/a&gt; p xs&lt;/code&gt; returns the prefix remaining after &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt; p xs&lt;/code&gt;.</source>
          <target state="translated">\（O（i）\）其中\（i \）是后缀长度。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileR&quot;&gt;dropWhileR&lt;/a&gt; p xs&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt; p xs&lt;/code&gt; 之后剩余的前缀。</target>
        </trans-unit>
        <trans-unit id="ca86e7d1bc6e9440039fd89da4b54ce4dc1b17ba" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the suffix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanr&quot;&gt;spanr&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt;, returns a pair whose &lt;em&gt;first&lt;/em&gt; element is the longest &lt;em&gt;suffix&lt;/em&gt; (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt; and the second element is the remainder of the sequence.</source>
          <target state="translated">\（O（i）\）其中\（i \）是后缀长度。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanr&quot;&gt;spanr&lt;/a&gt;&lt;/code&gt; 应用于谓词 &lt;code&gt;p&lt;/code&gt; 和序列 &lt;code&gt;xs&lt;/code&gt; ，返回一对其&lt;em&gt;第一个&lt;/em&gt;元素是满足 &lt;code&gt;p&lt;/code&gt; 的元素的 &lt;code&gt;xs&lt;/code&gt; 的最长&lt;em&gt;后缀&lt;/em&gt;（可能为空），而第二个元素是序列的其余部分。</target>
        </trans-unit>
        <trans-unit id="bcfc88e467626c77e9e30a0a96b1b1973c08c4cc" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the suffix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt;, returns the longest suffix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">\（O（i）\）其中\（i \）是后缀长度。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt;&lt;/code&gt; 应用于谓词 &lt;code&gt;p&lt;/code&gt; 和序列 &lt;code&gt;xs&lt;/code&gt; ，返回满足 &lt;code&gt;p&lt;/code&gt; 的元素的 &lt;code&gt;xs&lt;/code&gt; 的最长后缀（可能为空）。</target>
        </trans-unit>
        <trans-unit id="89864ca7ad3a975e47d1ac468095d918264767d7" translate="yes" xml:space="preserve">
          <source>\( O(n \log d) \). The &lt;code&gt;nubOrd&lt;/code&gt; function removes duplicate elements from a list. In particular, it keeps only the first occurrence of each element. By using a &lt;code&gt;&lt;a href=&quot;data-set#t:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; internally it has better asymptotics than the standard &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">\（O（n \ log d）\）。该 &lt;code&gt;nubOrd&lt;/code&gt; 功能从列表中移除重复的元素。特别是，它仅保留每个元素的第一次出现。通过在内部使用 &lt;code&gt;&lt;a href=&quot;data-set#t:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; ,它比标准的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; 函数具有更好的渐近性。</target>
        </trans-unit>
        <trans-unit id="5fe404a925ef3c49842338c60efd96b745d6f3be" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by the natural ordering of its elements. The sort is stable. If stability is not required, &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; can be slightly faster.</source>
          <target state="translated">\（O（n \ log n）\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 按其元素的自然顺序对指定的 &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; 进行排序。排序是稳定的。如果不需要稳定性，则 &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; 可能会稍快一些。</target>
        </trans-unit>
        <trans-unit id="1098d943b88eab1e390e5ed0bde58e02fe11a30b" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; according to the specified comparator. The sort is stable. If stability is not required, &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; can be slightly faster.</source>
          <target state="translated">\（O（n \ log n）\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; 根据指定的比较器对指定的 &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; 进行排序。排序是稳定的。如果不需要稳定性，则 &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; 可能会稍快一些。</target>
        </trans-unit>
        <trans-unit id="783b6fa9efe8b0aacee689453492ec1f64175be9" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="translated">\（O（n \ log n）\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; 通过比较应用于每个元素的键函数的结果对指定的 &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; 进行排序。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt; f&lt;/code&gt; 相当于 &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt; ，但具有仅评估性能优势 &lt;code&gt;f&lt;/code&gt; 一次输入列表中的每个元素。这称为&amp;ldquo;装饰-排序-不装饰&amp;rdquo;范式或Schwartzian变换。</target>
        </trans-unit>
        <trans-unit id="76919fecc6589c311cc2f157b3a6e318f7753a16" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by the natural ordering of its elements, but the sort is not stable. This algorithm is frequently faster and uses less memory than &lt;code&gt;&lt;a href=&quot;data-sequence#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\（O（n \ log n）\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; 对指定的 &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; 通过其元素的自然顺序，但排序并不稳定。该算法通常更快，并且比 &lt;code&gt;&lt;a href=&quot;data-sequence#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 使用更少的内存。</target>
        </trans-unit>
        <trans-unit id="9085dac0a56339479accab8408ea49a6a539f2cb" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="translated">\（O（n \ log n）\）。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; 对指定的 &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; 施加到每个元件通过比较键功能的结果。 &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt; f&lt;/code&gt; 相当于 &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt; ，但具有仅评估性能优势 &lt;code&gt;f&lt;/code&gt; 一次输入列表中的每个元素。这称为&amp;ldquo;装饰-排序-不装饰&amp;rdquo;范式或Schwartzian变换。</target>
        </trans-unit>
        <trans-unit id="20373e1ed680ebc14f4b07924b5b470cc33402e5" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by the natural ordering of its elements. The sort is stable. If stability is not required, &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; can be slightly faster.</source>
          <target state="translated">\（O（n \ log n）\）。 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 按其元素的自然顺序对指定的 &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; 进行排序。排序是稳定的。如果不需要稳定性，则 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; 可能会稍快一些。</target>
        </trans-unit>
        <trans-unit id="0eccdd8235b36a805ffa872f4e21e6f3de43dfa9" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; according to the specified comparator. The sort is stable. If stability is not required, &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; can be slightly faster.</source>
          <target state="translated">\（O（n \ log n）\）。 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; 根据指定的比较器对指定的 &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; 进行排序。排序是稳定的。如果不需要稳定性，则 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; 可能会稍快一些。</target>
        </trans-unit>
        <trans-unit id="72a13ba7d54627091e4ede4aa6ae6a602d067ef1" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="translated">\（O（n \ log n）\）。 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; 通过比较应用于每个元素的键函数的结果对指定的 &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; 进行排序。 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt; f&lt;/code&gt; 相当于 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt; ，但具有仅评估性能优势 &lt;code&gt;f&lt;/code&gt; 一次输入列表中的每个元素。这称为&amp;ldquo;装饰-排序-不装饰&amp;rdquo;范式或Schwartzian变换。</target>
        </trans-unit>
        <trans-unit id="7788d5dd9362fea81aef704f1b25c424829d973e" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by the natural ordering of its elements, but the sort is not stable. This algorithm is frequently faster and uses less memory than &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\（O（n \ log n）\）。 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; 对指定的 &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; 通过其元素的自然顺序，但排序并不稳定。该算法通常更快，并且比 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; 使用更少的内存。</target>
        </trans-unit>
        <trans-unit id="923bbcdf6473777345bf3471e264e87c7325e7e1" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="translated">\（O（n \ log n）\）。 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; 对指定的 &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; 施加到每个元件通过比较键功能的结果。 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt; f&lt;/code&gt; 相当于 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt; ，但具有仅评估性能优势 &lt;code&gt;f&lt;/code&gt; 一次输入列表中的每个元素。这称为&amp;ldquo;装饰-排序-不装饰&amp;rdquo;范式或Schwartzian变换。</target>
        </trans-unit>
        <trans-unit id="8c993d7ee2b9e07347303a1bfa6fbe29b0033e24" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). A generalization of &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; takes an arbitrary comparator and sorts the specified sequence. The sort is not stable. This algorithm is frequently faster and uses less memory than &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\（O（n \ log n）\）。的 &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; 的一般化采用一个任意比较器并对指定的序列进行排序。排序不稳定。该算法通常比 &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; 更快，并且使用的内存更少。</target>
        </trans-unit>
        <trans-unit id="5c91e61a22ccef5e854b0115e7bae5f82a0d4e39" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). A generalization of &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; takes an arbitrary comparator and sorts the specified sequence. The sort is not stable. This algorithm is frequently faster and uses less memory than &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\（O（n \ log n）\）。的 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; 的一般化采用一个任意比较器并对指定的序列进行排序。排序不稳定。该算法通常比 &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; 更快，并且使用的内存更少。</target>
        </trans-unit>
        <trans-unit id="930890d550afe6b5871128789424f2ee5f748526" translate="yes" xml:space="preserve">
          <source>\( O(n \min(d,W)) \). The &lt;code&gt;nubInt&lt;/code&gt; function removes duplicate &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; values from a list. In particular, it keeps only the first occurrence of each element. By using an &lt;code&gt;&lt;a href=&quot;data-intset#t:IntSet&quot;&gt;IntSet&lt;/a&gt;&lt;/code&gt; internally, it attains better asymptotics than the standard &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">\（O（n \ min（d，W））\）。该 &lt;code&gt;nubInt&lt;/code&gt; 功能删除重复的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 从列表中值。特别是，它仅保留每个元素的第一次出现。通过在内部使用 &lt;code&gt;&lt;a href=&quot;data-intset#t:IntSet&quot;&gt;IntSet&lt;/a&gt;&lt;/code&gt; ，它比标准的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; 函数具有更好的渐近性。</target>
        </trans-unit>
        <trans-unit id="603349967cf31a7e7a62cb16fea5e3004150cc9a" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Constructs a sequence by repeated application of a function to a seed value.</source>
          <target state="translated">\（ 上） \）。通过将函数重复应用于种子值来构造序列。</target>
        </trans-unit>
        <trans-unit id="e68f82855a00f85773c90f1119ff0dc9a7c9916f" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Convert a given sequence length and a function representing that sequence into a sequence.</source>
          <target state="translated">\（ 上） \）。将给定的序列长度和表示该序列的函数转换为序列。</target>
        </trans-unit>
        <trans-unit id="28abf92fc465e3c6920cbdd18d990aa00bd50bda" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Create a sequence consisting of the elements of an &lt;code&gt;&lt;a href=&quot;../array-0.5.4.0/data-array#t:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;. Note that the resulting sequence elements may be evaluated lazily (as on GHC), so you must force the entire structure to be sure that the original array can be garbage-collected.</source>
          <target state="translated">\（ 上） \）。创建一个由 &lt;code&gt;&lt;a href=&quot;../array-0.5.4.0/data-array#t:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 的元素组成的序列。请注意，生成的序列元素可能会延迟求值（如在GHC上），因此必须强制整个结构以确保可以对原始数组进行垃圾回收。</target>
        </trans-unit>
        <trans-unit id="c7cdb9801d2d28c4375010fb1f7c0579b09caa2d" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Create a sequence from a finite list of elements. There is a function &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:toList&quot;&gt;toList&lt;/a&gt;&lt;/code&gt; in the opposite direction for all instances of the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#t:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; class, including &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\（ 上） \）。从有限的元素列表创建序列。对于 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#t:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; 类的所有实例，包括 &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; ，都有一个相反方向的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:toList&quot;&gt;toList&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="1dbfa82306b38fbfc581f7b62fe7f6936fc85d5d" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Intersperse an element between the elements of a sequence.</source>
          <target state="translated">\（ 上） \）。将元素散布在序列的元素之间。</target>
        </trans-unit>
        <trans-unit id="eb33857f95e6abd9b8e92b965742544d371251b4" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Returns a sequence of all prefixes of this sequence, shortest first. For example,</source>
          <target state="translated">\（ 上） \）。返回此序列所有前缀的序列，最短优先。例如，</target>
        </trans-unit>
        <trans-unit id="e9bb88e43721f0ad090dd3079c9ab2d4f7f5e33e" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Returns a sequence of all suffixes of this sequence, longest first. For example,</source>
          <target state="translated">\（ 上） \）。返回该序列所有后缀的序列，最长的序列。例如，</target>
        </trans-unit>
        <trans-unit id="d22fb3ce0a67f04fdebb29f7e29e9664003f24cc" translate="yes" xml:space="preserve">
          <source>\( O(n) \). The &lt;code&gt;&lt;a href=&quot;data-sequence#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; function takes a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt; and returns a sequence of those elements which satisfy the predicate.</source>
          <target state="translated">\（ 上） \）。所述 &lt;code&gt;&lt;a href=&quot;data-sequence#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; 函数采用一个谓词 &lt;code&gt;p&lt;/code&gt; 和序列 &lt;code&gt;xs&lt;/code&gt; 并返回那些满足谓词元素的序列。</target>
        </trans-unit>
        <trans-unit id="95c6f2c5a83a628e74aa5f06545408e2cd588fd6" translate="yes" xml:space="preserve">
          <source>\( O(n) \). The &lt;code&gt;&lt;a href=&quot;data-sequence#v:partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; function takes a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt; and returns sequences of those elements which do and do not satisfy the predicate.</source>
          <target state="translated">\（ 上） \）。的 &lt;code&gt;&lt;a href=&quot;data-sequence#v:partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; 函数采用一个谓词 &lt;code&gt;p&lt;/code&gt; 和序列 &lt;code&gt;xs&lt;/code&gt; 并返回那些和不满足谓词元素序列。</target>
        </trans-unit>
        <trans-unit id="7d2552d02625413aa29e21b7cef52458a7ad4167" translate="yes" xml:space="preserve">
          <source>\( O(n) \). The reverse of a sequence.</source>
          <target state="translated">\（ 上） \）。序列的反向。</target>
        </trans-unit>
        <trans-unit id="ef7cfa6738484ccd222c60ae3aef6fc4d639c58e" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Unzip a sequence using a function to divide elements.</source>
          <target state="translated">\（ 上） \）。使用函数将元素解压缩序列。</target>
        </trans-unit>
        <trans-unit id="652ee9de3d79897676915fbdfd5346a4ef2470da" translate="yes" xml:space="preserve">
          <source>\(IY\) is strictly more specific than \(IX\). That is, \(IY\) is a substitution instance of \(IX\) but not vice versa.</source>
          <target state="translated">\（IY \）严格比\（IX \）更具体。也就是说，\（IY \）是\（IX \）的替换实例，反之亦然。</target>
        </trans-unit>
        <trans-unit id="b689d73e7c786fd5b31eb51ed9d31a3f7d6ae37b" translate="yes" xml:space="preserve">
          <source>\(O \Bigl(\bigl(\frac{n}{c}\bigr) \log c\Bigr)\). &lt;code&gt;chunksOf c xs&lt;/code&gt; splits &lt;code&gt;xs&lt;/code&gt; into chunks of size &lt;code&gt;c&amp;gt;0&lt;/code&gt;. If &lt;code&gt;c&lt;/code&gt; does not divide the length of &lt;code&gt;xs&lt;/code&gt; evenly, then the last element of the result will be short.</source>
          <target state="translated">\（O \ Bigl（\ bigl（\ frac {n} {c} \ bigr）\ log c \ Bigr）\）。 &lt;code&gt;chunksOf c xs&lt;/code&gt; 将 &lt;code&gt;xs&lt;/code&gt; 拆分为大小 &lt;code&gt;c&amp;gt;0&lt;/code&gt; 的块。如果 &lt;code&gt;c&lt;/code&gt; 不能平均划分 &lt;code&gt;xs&lt;/code&gt; 的长度，那么结果的最后一个元素将很短。</target>
        </trans-unit>
        <trans-unit id="5e6f80a34a9798cafc6a5db96cc57ba4c4db59c2" translate="yes" xml:space="preserve">
          <source>^</source>
          <target state="translated">^</target>
        </trans-unit>
        <trans-unit id="600e600a68a149108f159e39fce17366d56fc4e6" translate="yes" xml:space="preserve">
          <source>_ &lt;a href=&quot;data-type-equality#t:-61--61-&quot;&gt;==&lt;/a&gt; _ = '&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;</source>
          <target state="translated">_ &lt;a href=&quot;data-type-equality#t:-61--61-&quot;&gt;==&lt;/a&gt; _ =' &lt;a href=&quot;data-bool#v:False&quot;&gt;错误&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81245c14fa4af0f8aca817f3aac71e3856bb2e1a" translate="yes" xml:space="preserve">
          <source>_open_osfhandle</source>
          <target state="translated">_open_osfhandle</target>
        </trans-unit>
        <trans-unit id="8022fc62249fb25428a03d36552b9662db865b9c" translate="yes" xml:space="preserve">
          <source>a 32-bit floating point number</source>
          <target state="translated">三十二位浮点数</target>
        </trans-unit>
        <trans-unit id="25484eb33e4ca7fa03af08f774aeade1c4ee2d63" translate="yes" xml:space="preserve">
          <source>a 64-bit floating point number</source>
          <target state="translated">64位浮点数</target>
        </trans-unit>
        <trans-unit id="495a1fe000be6a5008ec4d1eb84e2a1d5d084889" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;||&lt;/a&gt; '&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt; = a</source>
          <target state="translated">一个&lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;|| &lt;/a&gt;' &lt;a href=&quot;data-bool#v:False&quot;&gt;假&lt;/a&gt; = a</target>
        </trans-unit>
        <trans-unit id="1048dece3526da535f415f1622b9e7f4b2a0f838" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;||&lt;/a&gt; '&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt; = '&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;</source>
          <target state="translated">一个&lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;|| &lt;/a&gt;' &lt;a href=&quot;data-bool#v:True&quot;&gt;真实&lt;/a&gt; =' &lt;a href=&quot;data-bool#v:True&quot;&gt;真实&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8d742293ecc54e41ac09b51fa2b2c86cd8c0847" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;||&lt;/a&gt; a = a</source>
          <target state="translated">一个&lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;|| &lt;/a&gt;a = a</target>
        </trans-unit>
        <trans-unit id="dfc3eece5d5fbbfb2557fdd2f1a0de5ec1613686" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; '&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt; = '&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;</source>
          <target state="translated">一个&lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; &amp;ldquo; &lt;a href=&quot;data-bool#v:False&quot;&gt;假&lt;/a&gt; =&amp;rdquo; &lt;a href=&quot;data-bool#v:False&quot;&gt;假&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01ba601786bc77082f70fd3b2a119e6f137598d1" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; '&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt; = a</source>
          <target state="translated">一个&lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; ' &lt;a href=&quot;data-bool#v:True&quot;&gt;真&lt;/a&gt; =一个</target>
        </trans-unit>
        <trans-unit id="db482d5c52f88bf9c927868acddf21f43b80bd3f" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; a = a</source>
          <target state="translated">a &lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; a = a</target>
        </trans-unit>
        <trans-unit id="46a1e8ea1de968dcf4615a18bb4b53b696036bd4" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;有界&lt;/a&gt;（a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="2784769421385712bd50e00b7541bc81e814f56a" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Enum&quot;&gt;枚举&lt;/a&gt;（a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="f867947542827acc0d2ea8e0082554ae2d9a293e" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-read#t:Read&quot;&gt;读&lt;/a&gt;（a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="abf8e156382601d33ab4309b568c53d2699611e4" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;有界&lt;/a&gt;（a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="0375fef85fb75ec4eaea1233da0a84c6a11f70eb" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;有界&lt;/a&gt;（a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="04456549f2a5abfaa433721a9e4d30e8a18a7b88" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;有界&lt;/a&gt;（a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="a89d1de959bd2ba9abd9673e63ea6a45b095b5bd" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;枚举&lt;/a&gt;（a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="5ce73f6cfcb9fe04f1a9c2ebf0e845f07785c1c6" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;枚举&lt;/a&gt;（a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="027733db5bec3026113257962749176c09fed167" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;枚举&lt;/a&gt;（a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="36b1d286e77dd08402089dc786c5d6751384d91a" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Read&quot;&gt;读&lt;/a&gt;（a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="16c734ad064a036a3668c749c7ed15b1c82c32e7" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;读&lt;/a&gt;（a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="8e9dc88d9d6b9dc3f6810c3cb75f9b31968412fb" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;读&lt;/a&gt;（a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="b047af46bc432fe3a62a3c51785c13516dfb1285" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;读&lt;/a&gt;（a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;：~~：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="66da0a7f93a9faeeee0de1ce9988147838ae30bc" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-61--61-&quot;&gt;==&lt;/a&gt; a = '&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-61--61-&quot;&gt;==&lt;/a&gt; a =' &lt;a href=&quot;data-bool#v:True&quot;&gt;正确&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e53f9d6aefd63368970fd8b1c03f48b2146d52ae" translate="yes" xml:space="preserve">
          <source>a &lt;a id=&quot;v::-124-&quot;&gt;:|&lt;/a&gt; [a] infixr 5</source>
          <target state="translated">a &lt;a id=&quot;v::-124-&quot;&gt;：| &lt;/a&gt;[a]固定器5</target>
        </trans-unit>
        <trans-unit id="c09b5ca0ab45efbf368c8f883aaeb643f25da75f" translate="yes" xml:space="preserve">
          <source>a &lt;a id=&quot;v::-60-&quot;&gt;:&amp;lt;&lt;/a&gt; (&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a) infixr 5</source>
          <target state="translated">a &lt;a id=&quot;v::-60-&quot;&gt;：&amp;lt;&lt;/a&gt;（&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a）固定器5</target>
        </trans-unit>
        <trans-unit id="4366d8309e6c4a93d2e6f9fac58abf7190d747db" translate="yes" xml:space="preserve">
          <source>a SIMD vector type</source>
          <target state="translated">一个SIMD向量类型</target>
        </trans-unit>
        <trans-unit id="2c60a8948409326587e2d80c0533c0b2ba526f53" translate="yes" xml:space="preserve">
          <source>a buffer (whose length may be zero).</source>
          <target state="translated">缓冲区(其长度可能为零)。</target>
        </trans-unit>
        <trans-unit id="6aba5037454fcbe2497a45a925a7bf0909281177" translate="yes" xml:space="preserve">
          <source>a constant function, returning the lowest and highest values the exponent may assume</source>
          <target state="translated">一个常数函数,返回指数的最低值和最高值。</target>
        </trans-unit>
        <trans-unit id="5b9c7de41a1536a2cf821f605e86c2793f6bd4c5" translate="yes" xml:space="preserve">
          <source>a constant function, returning the number of digits of &lt;code&gt;&lt;a href=&quot;ghc-float#v:floatRadix&quot;&gt;floatRadix&lt;/a&gt;&lt;/code&gt; in the significand</source>
          <target state="translated">常数函数，返回的位数 &lt;code&gt;&lt;a href=&quot;ghc-float#v:floatRadix&quot;&gt;floatRadix&lt;/a&gt;&lt;/code&gt; 在有效数</target>
        </trans-unit>
        <trans-unit id="cde248066dbb28c999a2778ce818e55f0128d213" translate="yes" xml:space="preserve">
          <source>a constant function, returning the number of digits of &lt;code&gt;&lt;a href=&quot;prelude#v:floatRadix&quot;&gt;floatRadix&lt;/a&gt;&lt;/code&gt; in the significand</source>
          <target state="translated">常数函数，返回的位数 &lt;code&gt;&lt;a href=&quot;prelude#v:floatRadix&quot;&gt;floatRadix&lt;/a&gt;&lt;/code&gt; 在有效数</target>
        </trans-unit>
        <trans-unit id="a633e2dd8b55ec1e8c7eb858ebb8fa756f27e31c" translate="yes" xml:space="preserve">
          <source>a constant function, returning the radix of the representation (often &lt;code&gt;2&lt;/code&gt;)</source>
          <target state="translated">常量函数，返回表示形式的基数（通常为 &lt;code&gt;2&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2d112c21b644b5118250a8a70b2538ed21ba15e3" translate="yes" xml:space="preserve">
          <source>a decoding error, if the input begins with an invalid byte sequence in this Handle's encoding.</source>
          <target state="translated">解码错误,如果输入以无效的字节序列开始,在这个句柄的编码中。</target>
        </trans-unit>
        <trans-unit id="13d51f2874011f80c0fda1c8dd64f87141fd6f14" translate="yes" xml:space="preserve">
          <source>a default value</source>
          <target state="translated">默认值</target>
        </trans-unit>
        <trans-unit id="efc6e377ad13780bc21173cedd26de2bc7744fdb" translate="yes" xml:space="preserve">
          <source>a function converting a valid digit character to an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">将有效数字字符转换为 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 的函数</target>
        </trans-unit>
        <trans-unit id="64e5fba578c7d1891365516501058a16fc9e7609" translate="yes" xml:space="preserve">
          <source>a function that can show unsigned values</source>
          <target state="translated">一个可以显示无符号值的函数</target>
        </trans-unit>
        <trans-unit id="4ad166b7834c36795a4fe596e5997879628c7a69" translate="yes" xml:space="preserve">
          <source>a handler for errors in the inner computation</source>
          <target state="translated">对内部计算中的错误进行处理</target>
        </trans-unit>
        <trans-unit id="c3c5aa9d0619cb64fabfcd8bc2312b400a6ca3c8" translate="yes" xml:space="preserve">
          <source>a handler for exceptions in the inner computation</source>
          <target state="translated">内部计算中的异常处理程序</target>
        </trans-unit>
        <trans-unit id="e9b3db5689251b32a019d1c409373cee04ec49ff" translate="yes" xml:space="preserve">
          <source>a list of &lt;em&gt;associations&lt;/em&gt; of the form (&lt;em&gt;index&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;). Typically, this list will be expressed as a comprehension. An association &lt;code&gt;(i, x)&lt;/code&gt; defines the value of the array at index &lt;code&gt;i&lt;/code&gt; to be &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">格式（&lt;em&gt;index&lt;/em&gt;，&lt;em&gt;value&lt;/em&gt;）的&lt;em&gt;关联&lt;/em&gt;列表。通常，此列表将表示为理解。关联 &lt;code&gt;(i, x)&lt;/code&gt; 将索引 &lt;code&gt;i&lt;/code&gt; 处的数组的值定义为 &lt;code&gt;x&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1838769c938ccda3c38c195704df00e6f8f9cac3" translate="yes" xml:space="preserve">
          <source>a list of declarations at top level; the spliced expression must have type &lt;code&gt;Q [Dec]&lt;/code&gt;</source>
          <target state="translated">顶层声明清单；拼接的表达式必须具有 &lt;code&gt;Q [Dec]&lt;/code&gt; 类型[Dec]</target>
        </trans-unit>
        <trans-unit id="c84a8e03c639e4b99b736533f6ce0d75c3d436cc" translate="yes" xml:space="preserve">
          <source>a nested BCO</source>
          <target state="translated">嵌套式BCO</target>
        </trans-unit>
        <trans-unit id="dacf656c29af63ede7d5a66eb4c195cb7d68d27c" translate="yes" xml:space="preserve">
          <source>a nonempty subtree present only in the first map is passed to &lt;code&gt;only1&lt;/code&gt; and the output is added to the result;</source>
          <target state="translated">仅在第一个映射中存在的非空子树传递给 &lt;code&gt;only1&lt;/code&gt; ，并将输出添加到结果中；</target>
        </trans-unit>
        <trans-unit id="9431cc2ffae3083c6fd4eb94123849e01bcd09de" translate="yes" xml:space="preserve">
          <source>a nonempty subtree present only in the second map is passed to &lt;code&gt;only2&lt;/code&gt; and the output is added to the result.</source>
          <target state="translated">仅在第二个映射中存在的非空子树被传递给 &lt;code&gt;only2&lt;/code&gt; ，并将输出添加到结果中。</target>
        </trans-unit>
        <trans-unit id="b079c712d0fda010c398b8b4fc564c5d93d60fd1" translate="yes" xml:space="preserve">
          <source>a pair of &lt;em&gt;bounds&lt;/em&gt;, each of the index type of the array. These bounds are the lowest and highest indices in the array, in that order. For example, a one-origin vector of length &lt;code&gt;10&lt;/code&gt; has bounds &lt;code&gt;(1,10)&lt;/code&gt;, and a one-origin &lt;code&gt;10&lt;/code&gt; by &lt;code&gt;10&lt;/code&gt; matrix has bounds &lt;code&gt;((1,1),(10,10))&lt;/code&gt;.</source>
          <target state="translated">一对&lt;em&gt;范围&lt;/em&gt;，数组的每个索引类型。这些边界按该顺序是数组中的最低和最高索引。例如，长度为 &lt;code&gt;10&lt;/code&gt; 的一元向量具有边界 &lt;code&gt;(1,10)&lt;/code&gt; ，而长度为 &lt;code&gt;10&lt;/code&gt; 乘 &lt;code&gt;10&lt;/code&gt; 的一元向量矩阵具有边界 &lt;code&gt;((1,1),(10,10))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba8e826714a73899830f6ab608075ff579906dbb" translate="yes" xml:space="preserve">
          <source>a pattern; the spliced pattern must have type &lt;code&gt;Q Pat&lt;/code&gt;</source>
          <target state="translated">一种模式; 拼接图案必须具有 &lt;code&gt;Q Pat&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="73059a8046b1c205b18c2f7d1b925674ed55a915" translate="yes" xml:space="preserve">
          <source>a pre-existing chunks of data represented by a strict &lt;code&gt;ByteString&lt;/code&gt;</source>
          <target state="translated">由严格的 &lt;code&gt;ByteString&lt;/code&gt; 表示的预先存在的数据块</target>
        </trans-unit>
        <trans-unit id="12724a459ab10a8829360de4d06541b3e47dba30" translate="yes" xml:space="preserve">
          <source>a predicate distinguishing valid digits in this base</source>
          <target state="translated">辨别有效数字的谓词。</target>
        </trans-unit>
        <trans-unit id="c68f4a2495d7173548e9a09cb2324b41dff54f59" translate="yes" xml:space="preserve">
          <source>a relative path that is appended to the path</source>
          <target state="translated">的相对路径。</target>
        </trans-unit>
        <trans-unit id="8fed21137ffe5d0c7090ea916a8c3a6106462526" translate="yes" xml:space="preserve">
          <source>a relative path that is appended to the path; if empty, the base path is returned</source>
          <target state="translated">附加到路径上的相对路径;如果为空,则返回基本路径。</target>
        </trans-unit>
        <trans-unit id="02e6f3d317a5b730213d444073c4a9d995df7da7" translate="yes" xml:space="preserve">
          <source>a restricted append-only version of a state monad transformer or</source>
          <target state="translated">仅限附加版本的状态单体变换器或或</target>
        </trans-unit>
        <trans-unit id="00cd8647e896b38e11fdde37050fe414990bbb27" translate="yes" xml:space="preserve">
          <source>a simplified AST</source>
          <target state="translated">简体字</target>
        </trans-unit>
        <trans-unit id="0f5ca64142ff0bb325d5429f5831baee94016b9b" translate="yes" xml:space="preserve">
          <source>a standard &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read1&quot;&gt;Read1&lt;/a&gt;&lt;/code&gt; instance may be defined as</source>
          <target state="translated">标准 &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read1&quot;&gt;Read1&lt;/a&gt;&lt;/code&gt; 实例可以定义为</target>
        </trans-unit>
        <trans-unit id="af4e0527aa2daaff6ce8c67a4930a298ed4dbc12" translate="yes" xml:space="preserve">
          <source>a string describing the &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, e.g. the file path for a file. Used in error messages.</source>
          <target state="translated">描述 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 的字符串，例如文件的文件路径。在错误消息中使用。</target>
        </trans-unit>
        <trans-unit id="32ae1817dace426c93d098fe2524e0f3abe3aa1a" translate="yes" xml:space="preserve">
          <source>a string literal denoting a common prefix to be added to the returned completion candidates.</source>
          <target state="translated">字符串,表示要添加到返回的完成候选人中的共同前缀。</target>
        </trans-unit>
        <trans-unit id="654558a0452dc0b9f151efdec13bb4d9e7dd1b7f" translate="yes" xml:space="preserve">
          <source>a string that can be passed to &lt;code&gt;&lt;a href=&quot;system-io#v:mkTextEncoding&quot;&gt;mkTextEncoding&lt;/a&gt;&lt;/code&gt; to create an equivalent &lt;code&gt;&lt;a href=&quot;ghc-io-encoding#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一个可以传递给 &lt;code&gt;&lt;a href=&quot;system-io#v:mkTextEncoding&quot;&gt;mkTextEncoding&lt;/a&gt;&lt;/code&gt; 的字符串，以创建等效的 &lt;code&gt;&lt;a href=&quot;ghc-io-encoding#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b85621828f70ac37a526068e8083c87be9c3be28" translate="yes" xml:space="preserve">
          <source>a suffix of &lt;code&gt;//IGNORE&lt;/code&gt;, e.g. &lt;code&gt;UTF-8//IGNORE&lt;/code&gt;, will cause all illegal sequences on input to be ignored, and on output will drop all code points that have no representation in the target encoding.</source>
          <target state="translated">&lt;code&gt;//IGNORE&lt;/code&gt; 的后缀，例如 &lt;code&gt;UTF-8//IGNORE&lt;/code&gt; ，将导致输入上的所有非法序列被忽略，而输出上的所有非法序列将丢弃目标编码中没有任何表示形式的所有代码点。</target>
        </trans-unit>
        <trans-unit id="c776055d334ae6a629010d30b766a23c8aa3fde8" translate="yes" xml:space="preserve">
          <source>a suffix of &lt;code&gt;//ROUNDTRIP&lt;/code&gt; will use a PEP383-style escape mechanism to represent any invalid bytes in the input as Unicode codepoints (specifically, as lone surrogates, which are normally invalid in UTF-32). Upon output, these special codepoints are detected and turned back into the corresponding original byte.</source>
          <target state="translated">&lt;code&gt;//ROUNDTRIP&lt;/code&gt; 的后缀将使用PEP383样式的转义机制将输入中的任何无效字节表示为Unicode代码点（特别是作为单独的替代，通常在UTF-32中是无效的）。在输出时，将检测这些特殊代码点并将其转回相应的原始字节。</target>
        </trans-unit>
        <trans-unit id="8e864fd0038b9dc298144ef97f622ae11f451d8b" translate="yes" xml:space="preserve">
          <source>a suffix of &lt;code&gt;//TRANSLIT&lt;/code&gt; will choose a replacement character for illegal sequences or code points.</source>
          <target state="translated">&lt;code&gt;//TRANSLIT&lt;/code&gt; 的后缀将为非法序列或代码点选择一个替换字符。</target>
        </trans-unit>
        <trans-unit id="3397cb671916c002d3ff115ddde37cc1a14cdaba" translate="yes" xml:space="preserve">
          <source>a suitable instance would be</source>
          <target state="translated">适例为</target>
        </trans-unit>
        <trans-unit id="dd9d6630c224794540c3f07f3de17df1e2d88d75" translate="yes" xml:space="preserve">
          <source>a type variable that names the result of a type family. Syntax: &lt;code&gt;= tyvar&lt;/code&gt; or &lt;code&gt;= (tyvar :: kind)&lt;/code&gt;. Type variable must be fresh.</source>
          <target state="translated">类型变量，它命名类型族的结果。语法： &lt;code&gt;= tyvar&lt;/code&gt; 或 &lt;code&gt;= (tyvar :: kind)&lt;/code&gt; 。类型变量必须是新鲜的。</target>
        </trans-unit>
        <trans-unit id="657ee88f03507eb2daa1cae621b0d82027549b01" translate="yes" xml:space="preserve">
          <source>a type; the spliced expression must have type &lt;code&gt;Q Type&lt;/code&gt;</source>
          <target state="translated">一种; 拼接的表达式必须具有 &lt;code&gt;Q Type&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="0ffe8b2f16c8d4d508612436c15bcb9b6541a38f" translate="yes" xml:space="preserve">
          <source>a value of type &lt;code&gt;STRef s a&lt;/code&gt; is a mutable variable in state thread &lt;code&gt;s&lt;/code&gt;, containing a value of type &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">类型 &lt;code&gt;STRef s a&lt;/code&gt; 的值是状态线程 &lt;code&gt;s&lt;/code&gt; 中的可变变量，包含类型 &lt;code&gt;a&lt;/code&gt; 的值</target>
        </trans-unit>
        <trans-unit id="6175f44ee858b68670e6002cb56e8b10631f1a87" translate="yes" xml:space="preserve">
          <source>a variant of &lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; that is useful in some circumstances:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; 的一种变体，在某些情况下非常有用：</target>
        </trans-unit>
        <trans-unit id="a649924718de2a48a367079f1e0da51d4a9da37f" translate="yes" xml:space="preserve">
          <source>a version of arctangent taking two real floating-point arguments. For real floating &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; computes the angle (from the positive x-axis) of the vector from the origin to the point &lt;code&gt;(x,y)&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; returns a value in the range [&lt;code&gt;-pi&lt;/code&gt;, &lt;code&gt;pi&lt;/code&gt;]. It follows the Common Lisp semantics for the origin when signed zeroes are supported. &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y 1&lt;/code&gt;, with &lt;code&gt;y&lt;/code&gt; in a type that is &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt;, should return the same value as &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan&quot;&gt;atan&lt;/a&gt; y&lt;/code&gt;. A default definition of &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; is provided, but implementors can provide a more accurate implementation.</source>
          <target state="translated">一个带有两个实浮点参数的反正切版本。对于实数浮点 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; 计算向量从原点到点 &lt;code&gt;(x,y)&lt;/code&gt; 的角度（从正x轴开始）。 &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; 返回[ &lt;code&gt;-pi&lt;/code&gt; ， &lt;code&gt;pi&lt;/code&gt; ] 范围内的值。当支持带符号的零时，它遵循起源的Common Lisp语义。 &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y 1&lt;/code&gt; ，与 &lt;code&gt;y&lt;/code&gt; 在类型即 &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; ，应返回相同的值 &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan&quot;&gt;atan&lt;/a&gt; y&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; 的默认定义 提供了，但实现者可以提供更准确的实现。</target>
        </trans-unit>
        <trans-unit id="fe74ee7452742c4171313955ab223053c4556057" translate="yes" xml:space="preserve">
          <source>a version of arctangent taking two real floating-point arguments. For real floating &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; computes the angle (from the positive x-axis) of the vector from the origin to the point &lt;code&gt;(x,y)&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; returns a value in the range [&lt;code&gt;-pi&lt;/code&gt;, &lt;code&gt;pi&lt;/code&gt;]. It follows the Common Lisp semantics for the origin when signed zeroes are supported. &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y 1&lt;/code&gt;, with &lt;code&gt;y&lt;/code&gt; in a type that is &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt;, should return the same value as &lt;code&gt;&lt;a href=&quot;prelude#v:atan&quot;&gt;atan&lt;/a&gt; y&lt;/code&gt;. A default definition of &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; is provided, but implementors can provide a more accurate implementation.</source>
          <target state="translated">一个带有两个实浮点参数的反正切版本。对于实数浮点 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; 计算向量从原点到点 &lt;code&gt;(x,y)&lt;/code&gt; 的角度（从正x轴开始）。 &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; 返回[ &lt;code&gt;-pi&lt;/code&gt; ， &lt;code&gt;pi&lt;/code&gt; ] 范围内的值。当支持带符号的零时，它遵循起源的Common Lisp语义。 &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y 1&lt;/code&gt; ，与 &lt;code&gt;y&lt;/code&gt; 在类型即 &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; ，应返回相同的值 &lt;code&gt;&lt;a href=&quot;prelude#v:atan&quot;&gt;atan&lt;/a&gt; y&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; 的默认定义 提供了，但实现者可以提供更准确的实现。</target>
        </trans-unit>
        <trans-unit id="ab5c5acde1e2f6c3f101707a78f1d04cb72059dd" translate="yes" xml:space="preserve">
          <source>a writer monad transformer with the extra ability to read all previous output.</source>
          <target state="translated">一个作家单体变压器,具有读取以前所有输出的额外能力。</target>
        </trans-unit>
        <trans-unit id="590421791efe5c46df565897151f6d7d2023d8e6" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;HPrintfType&lt;/a&gt; (&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">&lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;a〜&lt;/a&gt;（）=&amp;gt; HPrintfType（&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a）</target>
        </trans-unit>
        <trans-unit id="31c6d7a30a36618fec3902097e5b43815bce0f49" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;HPrintfType&lt;/a&gt; (&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">&lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;a〜&lt;/a&gt;（）=&amp;gt; HPrintfType（&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt; a）</target>
        </trans-unit>
        <trans-unit id="35ef1ee6ab6f7855e9ef87b5827bdeb7fde62274" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;HPrintfType&lt;/a&gt; (&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">&lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;a〜&lt;/a&gt;（）=&amp;gt; HPrintfType（&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a）</target>
        </trans-unit>
        <trans-unit id="409880a65ffaa71a1e0d0fe62cfabfa3a938169c" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt; (&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">一个〜（）=&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt;（&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a）</target>
        </trans-unit>
        <trans-unit id="3e151aca4c15d6934c037ad431662959917ad736" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt; (&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">一个〜（）=&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt;（&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt; a）</target>
        </trans-unit>
        <trans-unit id="98a378d9b15b70d74d0944fb1e954d4256523aa2" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt; (&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">一个〜（）=&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt;（&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a）</target>
        </trans-unit>
        <trans-unit id="a332ce52488d1d5de5b7bfd2033ff8678cc81e6d" translate="yes" xml:space="preserve">
          <source>a ~ &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; =&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:IsString&quot;&gt;IsString&lt;/a&gt; (&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a)</source>
          <target state="translated">一〜&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;煤焦&lt;/a&gt; =&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:IsString&quot;&gt;IsString&lt;/a&gt;（&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;SEQ&lt;/a&gt;一个）</target>
        </trans-unit>
        <trans-unit id="915fd9d7d50fa1f7e70a03265ca1bb088bdf1f16" translate="yes" xml:space="preserve">
          <source>a ~ &lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt; =&amp;gt; &lt;a href=&quot;data-string#t:IsString&quot;&gt;IsString&lt;/a&gt; [a]</source>
          <target state="translated">一个〜&lt;a href=&quot;data-char#t:Char&quot;&gt;字符&lt;/a&gt; =&amp;gt; &lt;a href=&quot;data-string#t:IsString&quot;&gt;IsString&lt;/a&gt; [a]</target>
        </trans-unit>
        <trans-unit id="523bc46d742e3092442dc8594623b4685aa196dc" translate="yes" xml:space="preserve">
          <source>a ~ &lt;a href=&quot;ghc-exts#t:Char&quot;&gt;Char&lt;/a&gt; =&amp;gt; &lt;a href=&quot;ghc-exts#t:IsString&quot;&gt;IsString&lt;/a&gt; [a]</source>
          <target state="translated">一个〜&lt;a href=&quot;ghc-exts#t:Char&quot;&gt;字符&lt;/a&gt; =&amp;gt; &lt;a href=&quot;ghc-exts#t:IsString&quot;&gt;IsString&lt;/a&gt; [a]</target>
        </trans-unit>
        <trans-unit id="044c3a8ec5a5d9d794332e8feedf60bf63246f8d" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;a〜b&lt;/a&gt; =&amp;gt; 有界（a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="c737fd2304d681b949b955e6cfaadea29b7174bd" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">&lt;a href=&quot;ghc-enum#t:Enum&quot;&gt;a〜b&lt;/a&gt; =&amp;gt; 枚举（a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="5581fcde0073364eee5b2f7c3bcbc6f61185c507" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a〜b =&amp;gt; &lt;a href=&quot;ghc-read#t:Read&quot;&gt;读&lt;/a&gt;（a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="ed4469140697334ccde0a1e5ed82cd81fb9b8dce" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">&lt;a href=&quot;prelude#t:Bounded&quot;&gt;a〜b&lt;/a&gt; =&amp;gt; 有界（a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="e716884071d36d90840e4caf15ff812e7f6a4a74" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">&lt;a href=&quot;prelude#t:Bounded&quot;&gt;a〜b&lt;/a&gt; =&amp;gt; 有界（a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="7ab919c4c8d16d344ff842435c43a224ea48ef20" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">&lt;a href=&quot;prelude#t:Bounded&quot;&gt;a〜b&lt;/a&gt; =&amp;gt; 有界（a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="77faa75fa005c9774da433fc23465bd9c8bebd3d" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">&lt;a href=&quot;prelude#t:Enum&quot;&gt;a〜b&lt;/a&gt; =&amp;gt; 枚举（a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="74e2e6fa82ee67074c4af2de1a01a37948e866f2" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">&lt;a href=&quot;prelude#t:Enum&quot;&gt;a〜b&lt;/a&gt; =&amp;gt; 枚举（a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="92d3e309f797fb4f4c1371be971b05d314eef8fa" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">&lt;a href=&quot;prelude#t:Enum&quot;&gt;a〜b&lt;/a&gt; =&amp;gt; 枚举（a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="3557a95257ef12efdfbd0506e1f8c579d231ef7d" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a〜b =&amp;gt; &lt;a href=&quot;prelude#t:Read&quot;&gt;读&lt;/a&gt;（a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="657481dfd6da9b659b9b66c663a065a94bf937a3" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a〜b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;读&lt;/a&gt;（a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="cbde84fe7ced7f537dc42c05790ea00c1f4ccf3c" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a〜b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;读&lt;/a&gt;（a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="3a4dfd01691dd3bc592cf6604b7e5fd0d0d580cc" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a〜b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;读&lt;/a&gt;（a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;：〜：&lt;/a&gt; b）</target>
        </trans-unit>
        <trans-unit id="891c3640894e01860eb0ae7ccf5446799d718ed2" translate="yes" xml:space="preserve">
          <source>aCCESS_SYSTEM_SECURITY</source>
          <target state="translated">aCCESS_SYSTEM_SECURITY</target>
        </trans-unit>
        <trans-unit id="b9bce8bc7cbd4cfc74af295dc63b50f294e0fb27" translate="yes" xml:space="preserve">
          <source>abbr</source>
          <target state="translated">abbr</target>
        </trans-unit>
        <trans-unit id="9fbb397449fabe7370de4e726a586750c0e025d4" translate="yes" xml:space="preserve">
          <source>above</source>
          <target state="translated">above</target>
        </trans-unit>
        <trans-unit id="dbaa3b644912f622f62ee8b0092a8d9ffa527bdc" translate="yes" xml:space="preserve">
          <source>aboves</source>
          <target state="translated">aboves</target>
        </trans-unit>
        <trans-unit id="3c647eaa3ec188fa4a41bc29560cf3d263ce2c90" translate="yes" xml:space="preserve">
          <source>abs (Num)</source>
          <target state="translated">旷课(Num)</target>
        </trans-unit>
        <trans-unit id="ccfa5b700105590fd54b7a4acd40d0f1749a6761" translate="yes" xml:space="preserve">
          <source>absInteger</source>
          <target state="translated">absInteger</target>
        </trans-unit>
        <trans-unit id="bce57942f67ca0fbd6511ebbaac8b282f36b38f8" translate="yes" xml:space="preserve">
          <source>absentErr</source>
          <target state="translated">absentErr</target>
        </trans-unit>
        <trans-unit id="64b6ed23db21d395b30faeea0ee1a854363149cc" translate="yes" xml:space="preserve">
          <source>absolute value expressed in 31 bit chunks, least significant first (ideally these would be machine-word &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Types.html#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;s rather than 31-bit truncated &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Types.html#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s)</source>
          <target state="translated">以31位块表示的绝对值，最低有效位在前（理想情况下，这些值将是机器码 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Types.html#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; ,而不是31位截断的 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Types.html#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c51b51e73e19ddc7f3d78e1d559b9e094d6aabd7" translate="yes" xml:space="preserve">
          <source>absurd</source>
          <target state="translated">absurd</target>
        </trans-unit>
        <trans-unit id="1add8034a0b73096de672f41850b64a5ad712a1a" translate="yes" xml:space="preserve">
          <source>accepts any of &lt;code&gt;&amp;plusmn;HHMM&lt;/code&gt; or &lt;code&gt;&amp;plusmn;HH:MM&lt;/code&gt;.</source>
          <target state="translated">接受 &lt;code&gt;&amp;plusmn;HHMM&lt;/code&gt; 或 &lt;code&gt;&amp;plusmn;HH:MM&lt;/code&gt; 之一。</target>
        </trans-unit>
        <trans-unit id="9d33d98937b79b4741648859979c3a47d36f7b6e" translate="yes" xml:space="preserve">
          <source>accepts any string of letters, or any of the formats accepted by &lt;code&gt;%z&lt;/code&gt;.</source>
          <target state="translated">接受任何字母字符串或 &lt;code&gt;%z&lt;/code&gt; 接受的任何格式。</target>
        </trans-unit>
        <trans-unit id="d6401d94d7fa2a221be73d01898ea5b60b61008b" translate="yes" xml:space="preserve">
          <source>accepts exactly four digits.</source>
          <target state="translated">准确地接受四位数字。</target>
        </trans-unit>
        <trans-unit id="8b61036933e858789a8f27653fcaabe0dd729aed" translate="yes" xml:space="preserve">
          <source>accepts exactly two digits.</source>
          <target state="translated">准确地接受两个数字。</target>
        </trans-unit>
        <trans-unit id="8c5af12517ca0f8866b26bf9c075f775fccff465" translate="yes" xml:space="preserve">
          <source>accessModes</source>
          <target state="translated">accessModes</target>
        </trans-unit>
        <trans-unit id="bb99d38076a7fd7a77e43ad49c41b08fd8af4431" translate="yes" xml:space="preserve">
          <source>accessTime</source>
          <target state="translated">accessTime</target>
        </trans-unit>
        <trans-unit id="122871cac8e2ec1f46010f99a1357daa1eb8508a" translate="yes" xml:space="preserve">
          <source>accessTimeFromMetadata</source>
          <target state="translated">accessTimeFromMetadata</target>
        </trans-unit>
        <trans-unit id="f45e20611738871cf30c605a806206b5753c0310" translate="yes" xml:space="preserve">
          <source>accessTimeHiRes</source>
          <target state="translated">accessTimeHiRes</target>
        </trans-unit>
        <trans-unit id="5a6b2eab4e73bc94a6e4f9f228c7bdd126f38135" translate="yes" xml:space="preserve">
          <source>accum</source>
          <target state="translated">accum</target>
        </trans-unit>
        <trans-unit id="32ba47d6af576dc9065e3c948273f0cf110aea55" translate="yes" xml:space="preserve">
          <source>accumArray</source>
          <target state="translated">accumArray</target>
        </trans-unit>
        <trans-unit id="d3d1577ef799a30fb0de62bf57405648e1d9ac27" translate="yes" xml:space="preserve">
          <source>accumToStateT</source>
          <target state="translated">accumToStateT</target>
        </trans-unit>
        <trans-unit id="6f1430af6498d7c1125ea1bbdd4422357b12b588" translate="yes" xml:space="preserve">
          <source>accumulating function</source>
          <target state="translated">累加函数</target>
        </trans-unit>
        <trans-unit id="71215402ee267f31cd6fff0de041f00108e40d9d" translate="yes" xml:space="preserve">
          <source>accursedUnutterablePerformIO</source>
          <target state="translated">accursedUnutterablePerformIO</target>
        </trans-unit>
        <trans-unit id="74463958ab508dde5fa01d729fc7e788ebaf16ad" translate="yes" xml:space="preserve">
          <source>acosDouble</source>
          <target state="translated">acosDouble</target>
        </trans-unit>
        <trans-unit id="aa8712a2c68660e7cab096247485e031962170db" translate="yes" xml:space="preserve">
          <source>acosDouble#</source>
          <target state="translated">acosDouble#</target>
        </trans-unit>
        <trans-unit id="06ead770755ad26198b691576891794699c24da7" translate="yes" xml:space="preserve">
          <source>acosFloat</source>
          <target state="translated">acosFloat</target>
        </trans-unit>
        <trans-unit id="5a1736b2ae2b058f0de2f7136bce2a54c8d5dabb" translate="yes" xml:space="preserve">
          <source>acosFloat#</source>
          <target state="translated">acosFloat#</target>
        </trans-unit>
        <trans-unit id="a117ad6e1e8d24d25a3c1d016abe956c25876c10" translate="yes" xml:space="preserve">
          <source>acoshDouble</source>
          <target state="translated">acoshDouble</target>
        </trans-unit>
        <trans-unit id="6ad5f18630535118c189843962d470a8fc55e725" translate="yes" xml:space="preserve">
          <source>acoshDouble#</source>
          <target state="translated">acoshDouble#</target>
        </trans-unit>
        <trans-unit id="9a15b5f46d5d30c87845f315fc5849e9e48b45e2" translate="yes" xml:space="preserve">
          <source>acoshFloat</source>
          <target state="translated">acoshFloat</target>
        </trans-unit>
        <trans-unit id="e919f2e880321a0f856646007be4dae7a833f62e" translate="yes" xml:space="preserve">
          <source>acoshFloat#</source>
          <target state="translated">acoshFloat#</target>
        </trans-unit>
        <trans-unit id="18b1ec962b2619762af0ec0fed21b2a539c0a2ad" translate="yes" xml:space="preserve">
          <source>acronym</source>
          <target state="translated">acronym</target>
        </trans-unit>
        <trans-unit id="34eb4c4ef005207e8b8f916b9f1fffacccd6945e" translate="yes" xml:space="preserve">
          <source>action</source>
          <target state="translated">action</target>
        </trans-unit>
        <trans-unit id="1b306a7ae5a93c2bc409337ec3c59d10b467f3be" translate="yes" xml:space="preserve">
          <source>action to execute before retrying if an immediate retry would block</source>
          <target state="translated">如果立即重试会阻止重试,则在重试前执行的操作。</target>
        </trans-unit>
        <trans-unit id="aee7075968e647c3563062ca38e54057dc8697f6" translate="yes" xml:space="preserve">
          <source>action which may fail</source>
          <target state="translated">败笔</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="bc819af4dff987b7d40d69f25a7222d9022e6a4a" translate="yes" xml:space="preserve">
          <source>add ⟨dir⟩, ⟨dir2⟩, etc. to import path</source>
          <target state="translated">在导入路径中添加⟨dir⟩、⟨dir2⟩等。</target>
        </trans-unit>
        <trans-unit id="1a53926ff9a1f6ce2083c28e73a8746413f7f9c2" translate="yes" xml:space="preserve">
          <source>addAbsoluteTime</source>
          <target state="translated">addAbsoluteTime</target>
        </trans-unit>
        <trans-unit id="87525f25780e527362cefa6bdd2e1b213af0972c" translate="yes" xml:space="preserve">
          <source>addAbsoluteTime a b = a + b</source>
          <target state="translated">添加绝对时间 a b=a+b</target>
        </trans-unit>
        <trans-unit id="74be67a240cd07b3a37dad0d8885e9133def5e48" translate="yes" xml:space="preserve">
          <source>addCFinalizerToWeak#</source>
          <target state="translated">addCFinalizerToWeak#</target>
        </trans-unit>
        <trans-unit id="731c5bb583d26164f9396c8cbc16dca6d0509a59" translate="yes" xml:space="preserve">
          <source>addCorePlugin</source>
          <target state="translated">addCorePlugin</target>
        </trans-unit>
        <trans-unit id="d0145a9d610a932d395308c0578f0b6ae175e2af" translate="yes" xml:space="preserve">
          <source>addDays</source>
          <target state="translated">addDays</target>
        </trans-unit>
        <trans-unit id="2efe0e94d3706a6e4d0eadfeff52bfc1d5378955" translate="yes" xml:space="preserve">
          <source>addDependentFile</source>
          <target state="translated">addDependentFile</target>
        </trans-unit>
        <trans-unit id="32ef3f548fdf998e0f408d513f2294dc9d188d08" translate="yes" xml:space="preserve">
          <source>addErrorMessage</source>
          <target state="translated">addErrorMessage</target>
        </trans-unit>
        <trans-unit id="d4d3026cb3c2c56719fbc6c14e120de7e351ab45" translate="yes" xml:space="preserve">
          <source>addExtension</source>
          <target state="translated">addExtension</target>
        </trans-unit>
        <trans-unit id="2cc1c20966f345f8990d256b3116243a546f91f7" translate="yes" xml:space="preserve">
          <source>addFinalizer</source>
          <target state="translated">addFinalizer</target>
        </trans-unit>
        <trans-unit id="5ada88558e381a62eb980a4682593062da9dc534" translate="yes" xml:space="preserve">
          <source>addForeignFile</source>
          <target state="translated">addForeignFile</target>
        </trans-unit>
        <trans-unit id="9882e831aabf83aae4b0eeca2389878efc89c287" translate="yes" xml:space="preserve">
          <source>addForeignFilePath</source>
          <target state="translated">addForeignFilePath</target>
        </trans-unit>
        <trans-unit id="5328cde5115b1f16a2cc11d9a0999d26769e04e4" translate="yes" xml:space="preserve">
          <source>addForeignPtrConcFinalizer</source>
          <target state="translated">addForeignPtrConcFinalizer</target>
        </trans-unit>
        <trans-unit id="d5e1b3826f3b45dbf1383bc16da6aa8896061279" translate="yes" xml:space="preserve">
          <source>addForeignPtrFinalizer</source>
          <target state="translated">addForeignPtrFinalizer</target>
        </trans-unit>
        <trans-unit id="1b7fc9ba8933d32e1ac319cb6b2984e1f1263c5f" translate="yes" xml:space="preserve">
          <source>addForeignPtrFinalizerEnv</source>
          <target state="translated">addForeignPtrFinalizerEnv</target>
        </trans-unit>
        <trans-unit id="330e67d423abd9f347b5714dc456b22d4a8b754f" translate="yes" xml:space="preserve">
          <source>addForeignSource</source>
          <target state="translated">addForeignSource</target>
        </trans-unit>
        <trans-unit id="efd9bbf9d174ede41caa654a081e970edbaf7c5a" translate="yes" xml:space="preserve">
          <source>addGregorianDurationClip</source>
          <target state="translated">addGregorianDurationClip</target>
        </trans-unit>
        <trans-unit id="1561a5201a8010ec95ce0c3dd4a699656e12c8ee" translate="yes" xml:space="preserve">
          <source>addGregorianDurationRollOver</source>
          <target state="translated">addGregorianDurationRollOver</target>
        </trans-unit>
        <trans-unit id="c2d30e34952b264621f5128e144c309a55f7bf00" translate="yes" xml:space="preserve">
          <source>addGregorianMonthsClip</source>
          <target state="translated">addGregorianMonthsClip</target>
        </trans-unit>
        <trans-unit id="f575f24b13db058d587ee4f1fde8e06c8c98ba49" translate="yes" xml:space="preserve">
          <source>addGregorianMonthsRollOver</source>
          <target state="translated">addGregorianMonthsRollOver</target>
        </trans-unit>
        <trans-unit id="ddaf167355addb06f5a1984493ceb5270c71e859" translate="yes" xml:space="preserve">
          <source>addGregorianYearsClip</source>
          <target state="translated">addGregorianYearsClip</target>
        </trans-unit>
        <trans-unit id="176a967932a4ed7f3164e00ef84d05bd16c7e27d" translate="yes" xml:space="preserve">
          <source>addGregorianYearsRollOver</source>
          <target state="translated">addGregorianYearsRollOver</target>
        </trans-unit>
        <trans-unit id="ded846822c1263da1a8e8a9ddeec15118958535b" translate="yes" xml:space="preserve">
          <source>addHistory</source>
          <target state="translated">addHistory</target>
        </trans-unit>
        <trans-unit id="6e68d851a386df95bf92d31df2026345efb374ee" translate="yes" xml:space="preserve">
          <source>addHistoryRemovingAllDupes</source>
          <target state="translated">addHistoryRemovingAllDupes</target>
        </trans-unit>
        <trans-unit id="ae0889be6dd5d5e2cb3eccf41df9b9dd0362c36c" translate="yes" xml:space="preserve">
          <source>addHistoryUnlessConsecutiveDupe</source>
          <target state="translated">addHistoryUnlessConsecutiveDupe</target>
        </trans-unit>
        <trans-unit id="b670556bdf5011b208984ce40cfe570a51d8e4c8" translate="yes" xml:space="preserve">
          <source>addIntC#</source>
          <target state="translated">addIntC#</target>
        </trans-unit>
        <trans-unit id="ae0f81dae2059fbf8cf6fe47528bd5afce44b4c4" translate="yes" xml:space="preserve">
          <source>addJulianDurationClip</source>
          <target state="translated">addJulianDurationClip</target>
        </trans-unit>
        <trans-unit id="eaebfd6c1cc89922e86b864fb75e87647b8ef728" translate="yes" xml:space="preserve">
          <source>addJulianDurationRollOver</source>
          <target state="translated">addJulianDurationRollOver</target>
        </trans-unit>
        <trans-unit id="219dd18ee334cb16306dfefb1974c0e75d510e41" translate="yes" xml:space="preserve">
          <source>addJulianMonthsClip</source>
          <target state="translated">addJulianMonthsClip</target>
        </trans-unit>
        <trans-unit id="aa98e6a4ed889b1f638a01298b19623885f610d0" translate="yes" xml:space="preserve">
          <source>addJulianMonthsRollOver</source>
          <target state="translated">addJulianMonthsRollOver</target>
        </trans-unit>
        <trans-unit id="4a89e71927988a572e8cc407c7a6e67fdeb4175c" translate="yes" xml:space="preserve">
          <source>addJulianYearsClip</source>
          <target state="translated">addJulianYearsClip</target>
        </trans-unit>
        <trans-unit id="32c9d769452701100b91ebed14ed6e082ec489c8" translate="yes" xml:space="preserve">
          <source>addJulianYearsRollOver</source>
          <target state="translated">addJulianYearsRollOver</target>
        </trans-unit>
        <trans-unit id="595781519f927b0b1834b52a7e1a1a39c625039c" translate="yes" xml:space="preserve">
          <source>addLibrarySearchPath</source>
          <target state="translated">addLibrarySearchPath</target>
        </trans-unit>
        <trans-unit id="3e4666f9ee956353d042bfd9513fa4abc5a3f310" translate="yes" xml:space="preserve">
          <source>addLocalTime</source>
          <target state="translated">addLocalTime</target>
        </trans-unit>
        <trans-unit id="2abbdc9eb41c727e121578360a859ca4e4efe078" translate="yes" xml:space="preserve">
          <source>addLocalTime a b = a + b</source>
          <target state="translated">addLocalTime a b=a+b</target>
        </trans-unit>
        <trans-unit id="84862540c7306b95991c435f71820dd519248fee" translate="yes" xml:space="preserve">
          <source>addMVarFinalizer</source>
          <target state="translated">addMVarFinalizer</target>
        </trans-unit>
        <trans-unit id="8f456b836a57e7b521cd3fe8b4642d186ff9a89d" translate="yes" xml:space="preserve">
          <source>addModFinalizer</source>
          <target state="translated">addModFinalizer</target>
        </trans-unit>
        <trans-unit id="2eb2458fc9cab4d81757f4fc410fbe961d8d6e36" translate="yes" xml:space="preserve">
          <source>addSignal</source>
          <target state="translated">addSignal</target>
        </trans-unit>
        <trans-unit id="ccd08e29dfeaf9bdafa115354157598d5b620f0f" translate="yes" xml:space="preserve">
          <source>addTempFile</source>
          <target state="translated">addTempFile</target>
        </trans-unit>
        <trans-unit id="40603c528fd8abd1b5db422a5605a0e04b8c7ed9" translate="yes" xml:space="preserve">
          <source>addTopDecls</source>
          <target state="translated">addTopDecls</target>
        </trans-unit>
        <trans-unit id="26384875d473da292e6e94fb202bd58ec4f113bb" translate="yes" xml:space="preserve">
          <source>addTrailingPathSeparator</source>
          <target state="translated">addTrailingPathSeparator</target>
        </trans-unit>
        <trans-unit id="7bab5da1619b04063aec0086211d40edc00e803a" translate="yes" xml:space="preserve">
          <source>addUTCTime</source>
          <target state="translated">addUTCTime</target>
        </trans-unit>
        <trans-unit id="94debf7f133c839a02e77b349992ff46a34a4e84" translate="yes" xml:space="preserve">
          <source>addUTCTime a b = a + b</source>
          <target state="translated">addUTCTime a b=a+b</target>
        </trans-unit>
        <trans-unit id="3d2e6af91d0fb8fdb6a080fc71913d8cc6de0cb0" translate="yes" xml:space="preserve">
          <source>addWordC#</source>
          <target state="translated">addWordC#</target>
        </trans-unit>
        <trans-unit id="9557408f6ee06dc0fa69765d1d00f6920af8ad4a" translate="yes" xml:space="preserve">
          <source>addr2Int#</source>
          <target state="translated">addr2Int#</target>
        </trans-unit>
        <trans-unit id="16deaa35f322d5f82263f26196529ef5d290a995" translate="yes" xml:space="preserve">
          <source>addrToAny#</source>
          <target state="translated">addrToAny#</target>
        </trans-unit>
        <trans-unit id="c662180230cad14787d4ab7e77aa08681ce783fa" translate="yes" xml:space="preserve">
          <source>address</source>
          <target state="translated">address</target>
        </trans-unit>
        <trans-unit id="e691d1d7cc0ac7819d8356620e2e134b524e40d6" translate="yes" xml:space="preserve">
          <source>address to ask the OS for memory</source>
          <target state="translated">向操作系统索取内存的地址</target>
        </trans-unit>
        <trans-unit id="135486a4f285b9b2d8d7bd7607211013e28e557c" translate="yes" xml:space="preserve">
          <source>address to ask the OS for memory for the linker, 0 ==&amp;gt; off</source>
          <target state="translated">要求操作系统为链接器提供内存的地址，0 ==&amp;gt;关闭</target>
        </trans-unit>
        <trans-unit id="a11f5c3beed47c29da089d9337054f1fc3438334" translate="yes" xml:space="preserve">
          <source>adjust</source>
          <target state="translated">adjust</target>
        </trans-unit>
        <trans-unit id="3df5363464281a44973ce242c507cca4e611d019" translate="yes" xml:space="preserve">
          <source>adjust&amp;#x27;</source>
          <target state="translated">adjust&amp;#x27;</target>
        </trans-unit>
        <trans-unit id="31d7b3d0b23c3ecce467382f288a8fda07a7c947" translate="yes" xml:space="preserve">
          <source>adjustWindowRect</source>
          <target state="translated">adjustWindowRect</target>
        </trans-unit>
        <trans-unit id="39d007aebebe2c8bc50eed203cdd819637109fdd" translate="yes" xml:space="preserve">
          <source>adjustWindowRectEx</source>
          <target state="translated">adjustWindowRectEx</target>
        </trans-unit>
        <trans-unit id="f1adf0c08b54d347ada18d14a364b4d35310daa7" translate="yes" xml:space="preserve">
          <source>adjustWithKey</source>
          <target state="translated">adjustWithKey</target>
        </trans-unit>
        <trans-unit id="06212ffae182c208d663c07c546f86798115e6a3" translate="yes" xml:space="preserve">
          <source>advancePtr</source>
          <target state="translated">advancePtr</target>
        </trans-unit>
        <trans-unit id="1feb0e8c71dbee8b02e939d3ad8d65534654459e" translate="yes" xml:space="preserve">
          <source>afile</source>
          <target state="translated">afile</target>
        </trans-unit>
        <trans-unit id="5e372bd188ae2b14d932c8f290b9a501ab4e56dc" translate="yes" xml:space="preserve">
          <source>after &lt;code&gt;import&lt;/code&gt; statement</source>
          <target state="translated">之后 &lt;code&gt;import&lt;/code&gt; 语句</target>
        </trans-unit>
        <trans-unit id="ae21c64a87f6bb0b8e16e55c48be4cc638d7bd3f" translate="yes" xml:space="preserve">
          <source>align</source>
          <target state="translated">align</target>
        </trans-unit>
        <trans-unit id="e7a2e2805d2496ca587239d4cda31b89c1c0ca73" translate="yes" xml:space="preserve">
          <source>alignPtr</source>
          <target state="translated">alignPtr</target>
        </trans-unit>
        <trans-unit id="99fce70bf4748d7e0078cd0fcd052d2b36a1e4c0" translate="yes" xml:space="preserve">
          <source>alignment (Storable)</source>
          <target state="translated">定线(可储存)</target>
        </trans-unit>
        <trans-unit id="107c36de6ed8336bd0dd209e95b562425b9dfe41" translate="yes" xml:space="preserve">
          <source>alink</source>
          <target state="translated">alink</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="9e504920833d81fde6eef06c19b51058b5894375" translate="yes" xml:space="preserve">
          <source>all corresponding types and implicit kinds in the patterns are apart, or</source>
          <target state="translated">模式中所有对应的类型和隐含的类型都是分开的,或</target>
        </trans-unit>
        <trans-unit id="f00b4fd0886decfe65d992c1b482efde2ec4ad08" translate="yes" xml:space="preserve">
          <source>all get implicit bangs on the &lt;code&gt;x&lt;/code&gt; pattern.</source>
          <target state="translated">所有人在 &lt;code&gt;x&lt;/code&gt; 模式上都隐含刘海。</target>
        </trans-unit>
        <trans-unit id="95e8b2f063141b33afc19049d243214aa4c78c85" translate="yes" xml:space="preserve">
          <source>allAttributesOff</source>
          <target state="translated">allAttributesOff</target>
        </trans-unit>
        <trans-unit id="f8206e23a1b240fef234ee0c8e667350841f4923" translate="yes" xml:space="preserve">
          <source>allWriteMode</source>
          <target state="translated">allWriteMode</target>
        </trans-unit>
        <trans-unit id="65af051f252c2e070428b3d48c9e06ebe2a6b9c5" translate="yes" xml:space="preserve">
          <source>alloca</source>
          <target state="translated">alloca</target>
        </trans-unit>
        <trans-unit id="ace0898eccdd75ebfb1591fbb1f2dbc979e5ad25" translate="yes" xml:space="preserve">
          <source>allocaArray</source>
          <target state="translated">allocaArray</target>
        </trans-unit>
        <trans-unit id="3c6264e932ab091f892ddfcaa83d5b30f2c01c4f" translate="yes" xml:space="preserve">
          <source>allocaArray0</source>
          <target state="translated">allocaArray0</target>
        </trans-unit>
        <trans-unit id="d9eb1cc224bdf43481701f92d17f35791017e33f" translate="yes" xml:space="preserve">
          <source>allocaBytes</source>
          <target state="translated">allocaBytes</target>
        </trans-unit>
        <trans-unit id="5d343fcaee75170a8a898d45cbed43b312645e86" translate="yes" xml:space="preserve">
          <source>allocaBytesAligned</source>
          <target state="translated">allocaBytesAligned</target>
        </trans-unit>
        <trans-unit id="84626ff1da5397b1239fa0814deff4f223952861" translate="yes" xml:space="preserve">
          <source>allocaMessage</source>
          <target state="translated">allocaMessage</target>
        </trans-unit>
        <trans-unit id="b49fefbc56c98ab832581d8b1bb506eda4ac7c40" translate="yes" xml:space="preserve">
          <source>allocaPAINTSTRUCT</source>
          <target state="translated">allocaPAINTSTRUCT</target>
        </trans-unit>
        <trans-unit id="fdf0e6df6506ba938948d557b4d1f03e17cbb2b3" translate="yes" xml:space="preserve">
          <source>allocate a new buffer. The size of the buffer is at the discretion of the device; e.g. for a memory-mapped file the buffer will probably cover the entire file.</source>
          <target state="translated">分配一个新的缓冲区,缓冲区的大小由设备决定。缓冲区的大小由设备自行决定;例如,对于内存映射的文件,缓冲区可能会覆盖整个文件。</target>
        </trans-unit>
        <trans-unit id="ffa8f79db994faec1f045dbc1b04ca9ac632eea6" translate="yes" xml:space="preserve">
          <source>allocationLimitExceeded</source>
          <target state="translated">allocationLimitExceeded</target>
        </trans-unit>
        <trans-unit id="b078c2f6d3c7744f8976d1d17d71825f67b47295" translate="yes" xml:space="preserve">
          <source>allowInterrupt</source>
          <target state="translated">allowInterrupt</target>
        </trans-unit>
        <trans-unit id="46538fd00b80c35182c9a6cbe69b8620bd73e5c7" translate="yes" xml:space="preserve">
          <source>allowSetForegroundWindow</source>
          <target state="translated">allowSetForegroundWindow</target>
        </trans-unit>
        <trans-unit id="385328d8d58c05e38abadd834d135fcb1234ee31" translate="yes" xml:space="preserve">
          <source>along with a small type-level language (via &lt;a href=&quot;#extension-DataKinds&quot;&gt;&lt;code&gt;DataKinds&lt;/code&gt;&lt;/a&gt;) for constructing pretty-printed error messages,</source>
          <target state="translated">以及用于构造漂亮的错误消息的小型类型级语言（通过&lt;a href=&quot;#extension-DataKinds&quot;&gt; &lt;code&gt;DataKinds&lt;/code&gt; &lt;/a&gt;），</target>
        </trans-unit>
        <trans-unit id="f14454571676762f4aecebfa7dc8a7a5ad23c746" translate="yes" xml:space="preserve">
          <source>alphaNum</source>
          <target state="translated">alphaNum</target>
        </trans-unit>
        <trans-unit id="20907882970dfeb7440c3195b40a5426061f849c" translate="yes" xml:space="preserve">
          <source>alreadyExistsErrorType</source>
          <target state="translated">alreadyExistsErrorType</target>
        </trans-unit>
        <trans-unit id="497df3e3e76e1bafba0c1940aab161fb87e25e86" translate="yes" xml:space="preserve">
          <source>alreadyInUseErrorType</source>
          <target state="translated">alreadyInUseErrorType</target>
        </trans-unit>
        <trans-unit id="c39c53f1191c5c35e3887a3c8411e8cfdb1ba72e" translate="yes" xml:space="preserve">
          <source>also, besides prefix pattern synonyms, both infix and record pattern synonyms are supported. See &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:PatSynArgs&quot;&gt;PatSynArgs&lt;/a&gt;&lt;/code&gt; for details</source>
          <target state="translated">此外，除了前缀模式同义词外，还支持中缀和记录模式同义词。有关详细信息，请参见 &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:PatSynArgs&quot;&gt;PatSynArgs&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00b732ba358efaf68ff5f29272104b074de33b1c" translate="yes" xml:space="preserve">
          <source>also, besides prefix pattern synonyms, both infix and record pattern synonyms are supported. See &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:PatSynArgs&quot;&gt;PatSynArgs&lt;/a&gt;&lt;/code&gt; for details</source>
          <target state="translated">此外，除了前缀模式同义词外，还支持中缀和记录模式同义词。有关详细信息，请参见 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:PatSynArgs&quot;&gt;PatSynArgs&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="325562c769da3f80d0e63bb56514bc2e2723c9b5" translate="yes" xml:space="preserve">
          <source>alt</source>
          <target state="translated">alt</target>
        </trans-unit>
        <trans-unit id="70387ea39726018c3fbc6e6646f6b3e08f2653fb" translate="yes" xml:space="preserve">
          <source>altcode</source>
          <target state="translated">altcode</target>
        </trans-unit>
        <trans-unit id="736d58ea8a0e114d72df992adfb0b598f3d56609" translate="yes" xml:space="preserve">
          <source>alter</source>
          <target state="translated">alter</target>
        </trans-unit>
        <trans-unit id="eab443df259d59b7f0be0d6ae1cf891a240928da" translate="yes" xml:space="preserve">
          <source>alterF</source>
          <target state="translated">alterF</target>
        </trans-unit>
        <trans-unit id="9552a99adb576ef72b680991b858dbee59db6a1c" translate="yes" xml:space="preserve">
          <source>alternate formatting</source>
          <target state="translated">备用格式</target>
        </trans-unit>
        <trans-unit id="abdb4562600d39b8d30b8d0b475ccf60e1bf89c7" translate="yes" xml:space="preserve">
          <source>alternativeDurationDaysFormat</source>
          <target state="translated">alternativeDurationDaysFormat</target>
        </trans-unit>
        <trans-unit id="fdd881d0882b1c4c5f048f7d8e0e623bcf9325d2" translate="yes" xml:space="preserve">
          <source>alternativeDurationTimeFormat</source>
          <target state="translated">alternativeDurationTimeFormat</target>
        </trans-unit>
        <trans-unit id="7bd9c52c9a7f5e5d2e984623ea3ff531278ec6f8" translate="yes" xml:space="preserve">
          <source>although it may be implemented differently internally: you may not assume that the memory returned by &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; has been allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">尽管可能会在内部实现不同的方式：您可能不会假定 &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; 返回的内存已经分配了 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="934eb62a6b31097f2fac60e6fd55182652f37d42" translate="yes" xml:space="preserve">
          <source>although it may be implemented differently internally: you may not assume that the memory returned by &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; has been allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">尽管可能会在内部实现不同的方式：您可能不会假定 &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; 返回的内存已经分配了 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3519690ec5174207733af0989822eef74a9c717" translate="yes" xml:space="preserve">
          <source>although it may be implemented differently internally: you may not assume that the memory returned by &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; has been allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">尽管可能会在内部实现不同的方式：您可能不会假定 &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; 返回的内存已经分配了 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aef5549ddc5a767e365906475597631e50d60859" translate="yes" xml:space="preserve">
          <source>amap</source>
          <target state="translated">amap</target>
        </trans-unit>
        <trans-unit id="f2a0ab49a9adc5a07c9ee8cd9d68bbd663d1c7f2" translate="yes" xml:space="preserve">
          <source>an IO action for writing the Builder's data into a user-supplied memory buffer.</source>
          <target state="translated">一个IO动作,用于将Builder的数据写入用户提供的内存缓冲区。</target>
        </trans-unit>
        <trans-unit id="8952e66aaa1977113e4b1a4ba68eedb56b0fbe3d" translate="yes" xml:space="preserve">
          <source>an expression; the spliced expression must have type &lt;code&gt;Q Exp&lt;/code&gt;</source>
          <target state="translated">一种表达; 拼接表达式必须具有 &lt;code&gt;Q Exp&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="121f54c8437072b73e02a43f271054b7774b4a32" translate="yes" xml:space="preserve">
          <source>an injectivity annotation of the form &lt;code&gt;| A -&amp;gt; B&lt;/code&gt;, where &lt;code&gt;A&lt;/code&gt; is the result type variable (see previous bullet) and &lt;code&gt;B&lt;/code&gt; is a list of argument type and kind variables in which type family is injective. It is possible to omit some variables if type family is not injective in them.</source>
          <target state="translated">形式的内射注释 &lt;code&gt;| A -&amp;gt; B&lt;/code&gt; ，其中 &lt;code&gt;A&lt;/code&gt; 是结果类型变量（请参见前面的项目符号）， &lt;code&gt;B&lt;/code&gt; 是参数类型和kind变量的列表，其中类型族是可插入的。如果类型族不是内含的，则可以省略某些变量。</target>
        </trans-unit>
        <trans-unit id="1a95fd2b1f1263e20bf576cce1bb6848b28d31fc" translate="yes" xml:space="preserve">
          <source>an integer denoting the total number of completions available, and finally</source>
          <target state="translated">一个整数,表示可完成的总数量,最后是</target>
        </trans-unit>
        <trans-unit id="f44dc67be4e4958de07b0ede75630e83a23b10ae" translate="yes" xml:space="preserve">
          <source>an uninstantiated type variable (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;), or</source>
          <target state="translated">未实例化的类型变量（在 &lt;code&gt;&lt;a href=&quot;control-monad-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; 的内部调用中），或者</target>
        </trans-unit>
        <trans-unit id="992794f62e6051e5e84c50b259319620ef00db27" translate="yes" xml:space="preserve">
          <source>an uninstantiated type variable (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;), or</source>
          <target state="translated">未实例化的类型变量（在 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; 的内部调用中），或者</target>
        </trans-unit>
        <trans-unit id="6e6f742509798b1d55d4f9ddf3f20626b1e54ef1" translate="yes" xml:space="preserve">
          <source>an uninstantiated type variable (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;), or</source>
          <target state="translated">未实例化的类型变量（在 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; 的内部调用中），或者</target>
        </trans-unit>
        <trans-unit id="89a3f6e722a126ad023f9020da68a4c65094180b" translate="yes" xml:space="preserve">
          <source>an uninstantiated type variable (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;), or</source>
          <target state="translated">未实例化的类型变量（在 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; 的内部调用中），或者</target>
        </trans-unit>
        <trans-unit id="e10af2d69950ac2fb9dab5fc0d823c9b9607ba56" translate="yes" xml:space="preserve">
          <source>an uninstantiated type variable (inside invocations of &lt;code&gt;&lt;a href=&quot;ghc-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;), or</source>
          <target state="translated">未实例化的类型变量（在 &lt;code&gt;&lt;a href=&quot;ghc-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; 的内部调用中），或者</target>
        </trans-unit>
        <trans-unit id="f06df609aed50661247cc6ec96c1599c193c3ec4" translate="yes" xml:space="preserve">
          <source>anchor</source>
          <target state="translated">anchor</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="fe59db250f48c323d463aa9559750b0ad6dced15" translate="yes" xml:space="preserve">
          <source>and a polymorphic one:</source>
          <target state="translated">和一个多态的。</target>
        </trans-unit>
        <trans-unit id="73f706b0b1b0c12a6ba4c1f76fdaaf06a88ee8e7" translate="yes" xml:space="preserve">
          <source>and now we&amp;rsquo;d be in a superclass loop. Here&amp;rsquo;s an example involving a type variable</source>
          <target state="translated">现在我们将处于超类循环中。这是一个涉及类型变量的例子</target>
        </trans-unit>
        <trans-unit id="18d42fb779a37e4e1dc3e098558cdf4c4c83ec15" translate="yes" xml:space="preserve">
          <source>and parses as:</source>
          <target state="translated">并解析为:</target>
        </trans-unit>
        <trans-unit id="e8fa7487b8c23045ccaa94a54053cdefcb655f2e" translate="yes" xml:space="preserve">
          <source>and pass &lt;code&gt;-F -pgmF convert.sh&lt;/code&gt; to GHC. The &lt;code&gt;-f l1&lt;/code&gt; option tells iconv to convert your Latin-1 file, supplied in argument &lt;code&gt;$2&lt;/code&gt;, while the &amp;ldquo;-t utf-8&amp;rdquo; options tell iconv to return a UTF-8 encoded file. The result is redirected into argument &lt;code&gt;$3&lt;/code&gt;. The &lt;code&gt;echo &quot;{-# LINE 1 \&quot;$2\&quot; #-}&quot;&lt;/code&gt; just makes sure that your error positions are reported as in the original source file.</source>
          <target state="translated">并将 &lt;code&gt;-F -pgmF convert.sh&lt;/code&gt; 传递给GHC。该 &lt;code&gt;-f l1&lt;/code&gt; 选项告诉的iconv转换您的Latin-1文件，在参数提供 &lt;code&gt;$2&lt;/code&gt; ，而&amp;ldquo;-t UTF-8&amp;rdquo;选项告诉的iconv返回一个UTF-8编码的文件。结果将重定向到参数 &lt;code&gt;$3&lt;/code&gt; 。该 &lt;code&gt;echo &quot;{-# LINE 1 \&quot;$2\&quot; #-}&quot;&lt;/code&gt; 只是确保你的错误位置被报告为原始源文件英寸</target>
        </trans-unit>
        <trans-unit id="9b4aa4b3a300c8b4126f09367d0c6c3c4e36cddf" translate="yes" xml:space="preserve">
          <source>and that &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and (&lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;) satisfy the applicative functor laws.</source>
          <target state="translated">并且 &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; 和（ &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; ）满足适用的函子定律。</target>
        </trans-unit>
        <trans-unit id="f0d6908641261ebacdf7178f2871da4376ad002e" translate="yes" xml:space="preserve">
          <source>and that &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and (&lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;) satisfy the applicative functor laws.</source>
          <target state="translated">并且 &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; 和（ &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; ）满足适用的函子定律。</target>
        </trans-unit>
        <trans-unit id="80de4bb2e6277bfe415251a8215406a0da053134" translate="yes" xml:space="preserve">
          <source>and that &lt;code&gt;&lt;a href=&quot;prelude#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and (&lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;) satisfy the applicative functor laws.</source>
          <target state="translated">并且 &lt;code&gt;&lt;a href=&quot;prelude#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; 和（ &lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; ）满足适用的函子定律。</target>
        </trans-unit>
        <trans-unit id="f628fa481829f10eb7ed0ce431a96d7a312b5c2a" translate="yes" xml:space="preserve">
          <source>and the automatically-added import is replaced the next time you use &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:add&quot;&gt;&lt;code&gt;:add&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt;&lt;code&gt;:reload&lt;/code&gt;&lt;/a&gt;. It can also be removed by &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt; as with normal imports.</source>
          <target state="translated">下次您使用&lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ghci-cmd-:add&quot;&gt; &lt;code&gt;:add&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#ghci-cmd-:reload&quot;&gt; &lt;code&gt;:reload&lt;/code&gt; 时&lt;/a&gt;，将替换自动添加的导入。与常规导入一样，也可以通过&lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt;删除它。</target>
        </trans-unit>
        <trans-unit id="fd67bd2ac58a98ba4fa381140fe6ca401229a1a0" translate="yes" xml:space="preserve">
          <source>and the corresponding &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Show1&quot;&gt;Show1&lt;/a&gt;&lt;/code&gt; instance as</source>
          <target state="translated">以及对应的 &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Show1&quot;&gt;Show1&lt;/a&gt;&lt;/code&gt; 实例为</target>
        </trans-unit>
        <trans-unit id="254f16578d53d1a8d664ec9f65a09ea9414efbab" translate="yes" xml:space="preserve">
          <source>and the fixity declaration applies wherever the binding is in scope. For example, in a &lt;code&gt;let&lt;/code&gt;, it applies in the right-hand sides of other &lt;code&gt;let&lt;/code&gt;-bindings and the body of the &lt;code&gt;let&lt;/code&gt;C. Or, in recursive &lt;code&gt;do&lt;/code&gt; expressions (&lt;a href=&quot;#recursive-do-notation&quot;&gt;The recursive do-notation&lt;/a&gt;), the local fixity declarations of a &lt;code&gt;let&lt;/code&gt; statement scope over other statements in the group, just as the bound name does.</source>
          <target state="translated">绑定范围内的任何地方都适用固定性声明。例如，在 &lt;code&gt;let&lt;/code&gt; 中，它适用于其他 &lt;code&gt;let&lt;/code&gt; 绑定的右侧以及 &lt;code&gt;let&lt;/code&gt; C 的主体。或者，在递归 &lt;code&gt;do&lt;/code&gt; 表达式（&lt;a href=&quot;#recursive-do-notation&quot;&gt;recursive do-notation&lt;/a&gt;）中， &lt;code&gt;let&lt;/code&gt; 语句的局部固定性声明就像绑定名称一样，作用域也可以覆盖组中的其他语句。</target>
        </trans-unit>
        <trans-unit id="84804ecc7a15277c8dc72ca8493fc5365f07f3ef" translate="yes" xml:space="preserve">
          <source>and the identity functor &lt;code&gt;&lt;a href=&quot;data-functor-identity#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and composition functors &lt;code&gt;&lt;a href=&quot;data-functor-compose#v:Compose&quot;&gt;Compose&lt;/a&gt;&lt;/code&gt; are from &lt;a href=&quot;data-functor-identity&quot;&gt;Data.Functor.Identity&lt;/a&gt; and &lt;a href=&quot;data-functor-compose&quot;&gt;Data.Functor.Compose&lt;/a&gt;.</source>
          <target state="translated">以及身份函子 &lt;code&gt;&lt;a href=&quot;data-functor-identity#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; 和composition函子 &lt;code&gt;&lt;a href=&quot;data-functor-compose#v:Compose&quot;&gt;Compose&lt;/a&gt;&lt;/code&gt; 来自&lt;a href=&quot;data-functor-identity&quot;&gt;Data.Functor.Identity&lt;/a&gt;和&lt;a href=&quot;data-functor-compose&quot;&gt;Data.Functor.Compose&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dce8d78586a4b2e598fe2638354e4f7a8a928b05" translate="yes" xml:space="preserve">
          <source>and the implementation uses the &lt;em&gt;same&lt;/em&gt;&lt;code&gt;Num&lt;/code&gt; dictionary for &lt;code&gt;Dollars&lt;/code&gt; as for &lt;code&gt;Int&lt;/code&gt;. In other words, GHC will generate something that resembles the following code</source>
          <target state="translated">并且该实现对 &lt;code&gt;Dollars&lt;/code&gt; 使用与 &lt;code&gt;Int&lt;/code&gt; &lt;em&gt;相同的&lt;/em&gt; &lt;code&gt;Num&lt;/code&gt; 字典。换句话说，GHC将生成类似于以下代码的内容</target>
        </trans-unit>
        <trans-unit id="479c818bfd711cf4544f049828ee87d6403981e8" translate="yes" xml:space="preserve">
          <source>and the newtype is of the form</source>
          <target state="translated">而新类型的形式是</target>
        </trans-unit>
        <trans-unit id="590c3603be97a6e205368ca55f167ade6ac064b9" translate="yes" xml:space="preserve">
          <source>and the syntax for explicitly bidirectional pattern synonyms is:</source>
          <target state="translated">而明确的双向模式同义词的语法是:。</target>
        </trans-unit>
        <trans-unit id="0582d614d00a0cc31ca47309d416d9c73c2b4a28" translate="yes" xml:space="preserve">
          <source>and then attempt to simplify the &lt;code&gt;Num Int&lt;/code&gt; context as much as possible. GHC knows that there is a &lt;code&gt;Num Int&lt;/code&gt; instance in scope, so it is able to discharge the &lt;code&gt;Num Int&lt;/code&gt; constraint, leaving the code that GHC actually generates</source>
          <target state="translated">然后尝试尽可能简化 &lt;code&gt;Num Int&lt;/code&gt; 上下文。GHC知道范围内有一个 &lt;code&gt;Num Int&lt;/code&gt; 实例，因此它能够释放 &lt;code&gt;Num Int&lt;/code&gt; 约束，而留下GHC实际生成的代码</target>
        </trans-unit>
        <trans-unit id="c322cc3213fe26babdb6c814e4efa12934234d9b" translate="yes" xml:space="preserve">
          <source>and then run a small &lt;code&gt;qsort&lt;/code&gt; with tracing:</source>
          <target state="translated">然后运行一个带有跟踪的小型 &lt;code&gt;qsort&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="ddf2a0569d46e773bb95b39acec93f8f9616fd41" translate="yes" xml:space="preserve">
          <source>and then the normal rules for filling in associated types from the default will apply, making &lt;code&gt;Size Bar&lt;/code&gt; equal to &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">然后将使用默认规则填充关联类型的一般规则，从而使 &lt;code&gt;Size Bar&lt;/code&gt; 等于 &lt;code&gt;Int&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ee881b8d8c4966597ddf76a2c6819072e3ad2d8" translate="yes" xml:space="preserve">
          <source>and to get information about &lt;code&gt;D&lt;/code&gt;-the-type, use &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">并获取有关 &lt;code&gt;D&lt;/code&gt; 类类型的信息，请使用 &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72e1560bd573c44690e8f372c23f99bf5c5c54f0" translate="yes" xml:space="preserve">
          <source>and to get information about &lt;code&gt;D&lt;/code&gt;-the-type, use &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">并获取有关 &lt;code&gt;D&lt;/code&gt; 类类型的信息，请使用 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1bb3adf03e7143a41d976d15feec1f47502e762" translate="yes" xml:space="preserve">
          <source>and use it in the same way. Of course this infix syntax only makes sense for binary operators; there is also a more general syntax involving special brackets:</source>
          <target state="translated">并以同样的方式使用它。当然,这种下标语法只对二进制运算符有意义;还有一种更通用的语法,涉及特殊的括号。</target>
        </trans-unit>
        <trans-unit id="fc36b3ac9b0cab4ebdb5bc9351b8ed24cbc593ec" translate="yes" xml:space="preserve">
          <source>and you want to use arithmetic on &lt;code&gt;Dollars&lt;/code&gt;, you have to explicitly define an instance of &lt;code&gt;Num&lt;/code&gt;:</source>
          <target state="translated">并且要对 &lt;code&gt;Dollars&lt;/code&gt; 使用算术，必须显式定义 &lt;code&gt;Num&lt;/code&gt; 的实例：</target>
        </trans-unit>
        <trans-unit id="3d85f61e8bf8baf82dec3b62fb3db463f9e02400" translate="yes" xml:space="preserve">
          <source>and#</source>
          <target state="translated">and#</target>
        </trans-unit>
        <trans-unit id="ce8b3c83a77157c293197da1e8ece9fd23e4db66" translate="yes" xml:space="preserve">
          <source>and, as before, the constraint &lt;code&gt;C Int [b]&lt;/code&gt; arises from &lt;code&gt;f&lt;/code&gt;&amp;lsquo;s right hand side. GHC will reject the instance, complaining as before that it does not know how to resolve the constraint &lt;code&gt;C Int [b]&lt;/code&gt;, because it matches more than one instance declaration. The solution is to postpone the choice by adding the constraint to the context of the instance declaration, thus:</source>
          <target state="translated">如前所述，约束 &lt;code&gt;C Int [b]&lt;/code&gt; 从 &lt;code&gt;f&lt;/code&gt; 的右手边产生。GHC将拒绝该实例，并像以前一样抱怨它不知道如何解决约束 &lt;code&gt;C Int [b]&lt;/code&gt; ，因为它匹配多个实例声明。解决方案是通过将约束添加到实例声明的上下文中来推迟选择，因此：</target>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="51cb746cbd26ba2c83bb1c29641dd6acb59162bd" translate="yes" xml:space="preserve">
          <source>andBigNat</source>
          <target state="translated">andBigNat</target>
        </trans-unit>
        <trans-unit id="d8f45440d8ba6866f7cd5dc9bf5424e9b0b82c2f" translate="yes" xml:space="preserve">
          <source>andI#</source>
          <target state="translated">andI#</target>
        </trans-unit>
        <trans-unit id="47f0b6684dbf7a499fc68bc95f91b2dd33a57aaa" translate="yes" xml:space="preserve">
          <source>andInteger</source>
          <target state="translated">andInteger</target>
        </trans-unit>
        <trans-unit id="1b1321e7bbc9ab6c6d41f2b691ec74af95021bc8" translate="yes" xml:space="preserve">
          <source>andM</source>
          <target state="translated">andM</target>
        </trans-unit>
        <trans-unit id="814ff70e0e4573ee360322855b959e5fa7c40f93" translate="yes" xml:space="preserve">
          <source>andNatural</source>
          <target state="translated">andNatural</target>
        </trans-unit>
        <trans-unit id="5c461ca98c1ea925fc7570dbd2ef273904334489" translate="yes" xml:space="preserve">
          <source>annotate</source>
          <target state="translated">annotate</target>
        </trans-unit>
        <trans-unit id="b224d0a37a2b7e392efa9ba57defb2614389b40e" translate="yes" xml:space="preserve">
          <source>annotateIOError</source>
          <target state="translated">annotateIOError</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="0eaff237de409b9bb83d222042afab63b7aa7e45" translate="yes" xml:space="preserve">
          <source>any arguments</source>
          <target state="translated">争论</target>
        </trans-unit>
        <trans-unit id="71fd737816349a57448a748088738167c106781c" translate="yes" xml:space="preserve">
          <source>anyChar</source>
          <target state="translated">anyChar</target>
        </trans-unit>
        <trans-unit id="23f707c706019ea8a3e4c900f99f499e2129f964" translate="yes" xml:space="preserve">
          <source>anyPopup</source>
          <target state="translated">anyPopup</target>
        </trans-unit>
        <trans-unit id="3a6ae3160bdbc79be800415d5f533bcc73358975" translate="yes" xml:space="preserve">
          <source>anyToAddr#</source>
          <target state="translated">anyToAddr#</target>
        </trans-unit>
        <trans-unit id="9a61e5c837ce511951eff7447ed2c803341fc214" translate="yes" xml:space="preserve">
          <source>anyToken</source>
          <target state="translated">anyToken</target>
        </trans-unit>
        <trans-unit id="31381916f8b077eea68fc95956f9ac85845dcea8" translate="yes" xml:space="preserve">
          <source>anyclassStrategy</source>
          <target state="translated">anyclassStrategy</target>
        </trans-unit>
        <trans-unit id="112c2a063a0f6f3f9ba00da0de16624f951645e8" translate="yes" xml:space="preserve">
          <source>anywhere</source>
          <target state="translated">anywhere</target>
        </trans-unit>
        <trans-unit id="ac78b022715c5b8357b4dca8045e8463b4de2124" translate="yes" xml:space="preserve">
          <source>ap</source>
          <target state="translated">ap</target>
        </trans-unit>
        <trans-unit id="eba4c8092cbdadb7794392e190d53493bc334208" translate="yes" xml:space="preserve">
          <source>app (ArrowApply)</source>
          <target state="translated">应用</target>
        </trans-unit>
        <trans-unit id="b3ad6eeb824a8ec02a5d5e832b7879b06ba3f19c" translate="yes" xml:space="preserve">
          <source>appE</source>
          <target state="translated">appE</target>
        </trans-unit>
        <trans-unit id="802f5d989c7e8fb560cd4b955e72235ad480c9b4" translate="yes" xml:space="preserve">
          <source>appEndo (Endo)</source>
          <target state="translated">appEndo (Endo)</target>
        </trans-unit>
        <trans-unit id="f4713737d3cbea3609f53517d475c7e6e3986e2b" translate="yes" xml:space="preserve">
          <source>appK</source>
          <target state="translated">appK</target>
        </trans-unit>
        <trans-unit id="c0e58dc12e9bd5c4adbcb30a9574b1f2780375f6" translate="yes" xml:space="preserve">
          <source>appKindT</source>
          <target state="translated">appKindT</target>
        </trans-unit>
        <trans-unit id="13a372d7a48946366bdcae29392ac2b0f5f7ff1f" translate="yes" xml:space="preserve">
          <source>appPrec</source>
          <target state="translated">appPrec</target>
        </trans-unit>
        <trans-unit id="ea808d665df6304e606fa6defa67afb2c39c79f0" translate="yes" xml:space="preserve">
          <source>appPrec1</source>
          <target state="translated">appPrec1</target>
        </trans-unit>
        <trans-unit id="cd060661c5ec3eafa096c5f8fa941dd1132de886" translate="yes" xml:space="preserve">
          <source>appT</source>
          <target state="translated">appT</target>
        </trans-unit>
        <trans-unit id="81896820296fd9273be70f37e16dacbfaf88d3d4" translate="yes" xml:space="preserve">
          <source>appTypeE</source>
          <target state="translated">appTypeE</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="dca4d637857ca4573531b3a30d8e520334044cac" translate="yes" xml:space="preserve">
          <source>append&amp;#x27;</source>
          <target state="translated">append&amp;#x27;</target>
        </trans-unit>
        <trans-unit id="289ddd34d1c4c8e0f0b12fd9e90183d6e6e44042" translate="yes" xml:space="preserve">
          <source>appendFile</source>
          <target state="translated">appendFile</target>
        </trans-unit>
        <trans-unit id="6fc61421d8e67210538b07798f3f1fdd6e9d1d3b" translate="yes" xml:space="preserve">
          <source>applet</source>
          <target state="translated">applet</target>
        </trans-unit>
        <trans-unit id="69f45da1683c501696ebfa086d25192af3807dc6" translate="yes" xml:space="preserve">
          <source>apply</source>
          <target state="translated">apply</target>
        </trans-unit>
        <trans-unit id="3485dd31164492649d7850c2cbd3db18e0cea072" translate="yes" xml:space="preserve">
          <source>approxRational</source>
          <target state="translated">approxRational</target>
        </trans-unit>
        <trans-unit id="8d7fd28b52e8e13346543859eb3cc8e8ecf65d19" translate="yes" xml:space="preserve">
          <source>appsE</source>
          <target state="translated">appsE</target>
        </trans-unit>
        <trans-unit id="66a6d5d94fb47f2ef2a016ae65996e8ebb737df1" translate="yes" xml:space="preserve">
          <source>aqua</source>
          <target state="translated">aqua</target>
        </trans-unit>
        <trans-unit id="5a36f117812e69f1a5ab7e32a43b6e3db24618b2" translate="yes" xml:space="preserve">
          <source>arch</source>
          <target state="translated">arch</target>
        </trans-unit>
        <trans-unit id="ebfb55f4432b592119a10592e4f26272cc72359e" translate="yes" xml:space="preserve">
          <source>archive</source>
          <target state="translated">archive</target>
        </trans-unit>
        <trans-unit id="587353d9fa39c1a7c6f546af5b28c31d9eb924a3" translate="yes" xml:space="preserve">
          <source>are unaffected by &lt;code&gt;Strict&lt;/code&gt;. For example:</source>
          <target state="translated">不受 &lt;code&gt;Strict&lt;/code&gt; 的影响。例如：</target>
        </trans-unit>
        <trans-unit id="0ca629a075fdb2a4486bdcf79b95788644f92842" translate="yes" xml:space="preserve">
          <source>areFileApisANSI</source>
          <target state="translated">areFileApisANSI</target>
        </trans-unit>
        <trans-unit id="699e8ae92ca31d0753b1eacb9fbc3f555d78fbd6" translate="yes" xml:space="preserve">
          <source>area</source>
          <target state="translated">area</target>
        </trans-unit>
        <trans-unit id="da023efeab5413d5c77467c8faa27e7fae7632ba" translate="yes" xml:space="preserve">
          <source>argument descriptor</source>
          <target state="translated">参数描述符</target>
        </trans-unit>
        <trans-unit id="adb0d32f4dfc9a26ee81327b9fdd7725056a7848" translate="yes" xml:space="preserve">
          <source>argvEncoding</source>
          <target state="translated">argvEncoding</target>
        </trans-unit>
        <trans-unit id="d4aa8007cc1ad1656027fb89671813afa9615288" translate="yes" xml:space="preserve">
          <source>arithSeqE</source>
          <target state="translated">arithSeqE</target>
        </trans-unit>
        <trans-unit id="b55192fbef76929083a8c47c155f2d75d1279c47" translate="yes" xml:space="preserve">
          <source>arr (Arrow)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc9c706f2a67ddc7029207634dc6e4e70b1196f" translate="yes" xml:space="preserve">
          <source>arrEleBottom</source>
          <target state="translated">arrEleBottom</target>
        </trans-unit>
        <trans-unit id="a667da204ed8615229188eafa47f44e91ddfec77" translate="yes" xml:space="preserve">
          <source>arrangeIconicWindows</source>
          <target state="translated">arrangeIconicWindows</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="39a531d92bbe1cfd6268cd99d999880c84640b1d" translate="yes" xml:space="preserve">
          <source>arrow</source>
          <target state="translated">arrow</target>
        </trans-unit>
        <trans-unit id="49a75ba655b6e52469ec549f06d8e82cf0c80387" translate="yes" xml:space="preserve">
          <source>arrowK</source>
          <target state="translated">arrowK</target>
        </trans-unit>
        <trans-unit id="9aff066125957e947bc0bfb08e59a5bf496963cf" translate="yes" xml:space="preserve">
          <source>arrowT</source>
          <target state="translated">arrowT</target>
        </trans-unit>
        <trans-unit id="e819945bb4cc7f0b639ef2ce6c193ee892c3a6ca" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrno&quot;&gt;throwErrno&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrno&quot;&gt;throwErrno&lt;/a&gt;&lt;/code&gt; ，但是在适当的情况下例外包括给定的路径。</target>
        </trans-unit>
        <trans-unit id="96f77b642b11d04a41a4094411649679d7a24b87" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">如 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt; ，但适当时例外包括给定路径。</target>
        </trans-unit>
        <trans-unit id="7a29f051d3cf3ba47d4940dab0a1b98525bf1e08" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt; ，但丢弃结果。</target>
        </trans-unit>
        <trans-unit id="1bb58d8d61b0a45cdd25a0e6737c6ac8ff064c9d" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt; ，但是在适当的情况下例外包括给定的路径。</target>
        </trans-unit>
        <trans-unit id="2fda8be4ddf0842edb4c586310d4c411e6a7be79" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt; ，但是在适当的情况下例外包括给定的路径。</target>
        </trans-unit>
        <trans-unit id="f9b17066fdd54a0ee439651126df58fbfc0b71d7" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfNull&quot;&gt;throwErrnoIfNull&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfNull&quot;&gt;throwErrnoIfNull&lt;/a&gt;&lt;/code&gt; ，但是在适当的情况下例外包括给定的路径。</target>
        </trans-unit>
        <trans-unit id="bd3956e9755ec06f0d40dc090ede99dcbb5a2c61" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIf_&quot;&gt;throwErrnoIf_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIf_&quot;&gt;throwErrnoIf_&lt;/a&gt;&lt;/code&gt; ，但是在适当的情况下例外包括给定的路径。</target>
        </trans-unit>
        <trans-unit id="292df3dc62007f310b3c79925b96c07e718c31aa" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;data-time-format#v:dateFmt&quot;&gt;dateFmt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;locale&lt;/code&gt; (e.g. &lt;code&gt;%m/%d/%y&lt;/code&gt;)</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;data-time-format#v:dateFmt&quot;&gt;dateFmt&lt;/a&gt;&lt;/code&gt; &lt;code&gt;locale&lt;/code&gt; （例如 &lt;code&gt;%m/%d/%y&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="291a1609f67076e32d715dddabdba1cf4c5c5b5e" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;data-time-format#v:dateTimeFmt&quot;&gt;dateTimeFmt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;locale&lt;/code&gt; (e.g. &lt;code&gt;%a %b %e %H:%M:%S %Z %Y&lt;/code&gt;)</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;data-time-format#v:dateTimeFmt&quot;&gt;dateTimeFmt&lt;/a&gt;&lt;/code&gt; &lt;code&gt;locale&lt;/code&gt; （例如 &lt;code&gt;%a %b %e %H:%M:%S %Z %Y&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="970b1db84cd96ca172b047731015ba6ecda1ba07" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;data-time-format#v:time12Fmt&quot;&gt;time12Fmt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;locale&lt;/code&gt; (e.g. &lt;code&gt;%I:%M:%S %p&lt;/code&gt;)</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;data-time-format#v:time12Fmt&quot;&gt;time12Fmt&lt;/a&gt;&lt;/code&gt; &lt;code&gt;locale&lt;/code&gt; （例如 &lt;code&gt;%I:%M:%S %p&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="df1972bf94c556a7884296d05bdc48fcccce16f2" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;data-time-format#v:timeFmt&quot;&gt;timeFmt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;locale&lt;/code&gt; (e.g. &lt;code&gt;%H:%M:%S&lt;/code&gt;)</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;data-time-format#v:timeFmt&quot;&gt;timeFmt&lt;/a&gt;&lt;/code&gt; &lt;code&gt;locale&lt;/code&gt; （例如 &lt;code&gt;%H:%M:%S&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f7e96f215927e941b653cff123cbcf2de8abbff1" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrno&quot;&gt;throwErrno&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrno&quot;&gt;throwErrno&lt;/a&gt;&lt;/code&gt; ，但是在适当的情况下例外包括给定的路径。</target>
        </trans-unit>
        <trans-unit id="bdf24192f6eeea66c9cad99a9d280aea79054142" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt;, but discards the result of the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action after error handling.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt; ，但在错误处理后丢弃 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 操作的结果。</target>
        </trans-unit>
        <trans-unit id="a98feb25d133ec0151cd4a528cf48c56551e9f63" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">如 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt; ，但适当时例外包括给定路径。</target>
        </trans-unit>
        <trans-unit id="5f6c31933ee748b74fb263ed08a51305b4ea18e9" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt;, but retry the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action when it yields the error code &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eINTR&quot;&gt;eINTR&lt;/a&gt;&lt;/code&gt; - this amounts to the standard retry loop for interrupted POSIX system calls.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt; ，但是在产生错误代码 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eINTR&quot;&gt;eINTR&lt;/a&gt;&lt;/code&gt; 时重试 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 操作-这相当于中断的POSIX系统调用的标准重试循环。</target>
        </trans-unit>
        <trans-unit id="ed7aca01b1bcc64bdb45cf9da3e07b273e9e0df3" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt; ，但丢弃结果。</target>
        </trans-unit>
        <trans-unit id="8a37df41ad608f22eddaaf22361006ad30fa864f" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt; ，但是在适当的情况下例外包括给定的路径。</target>
        </trans-unit>
        <trans-unit id="4cc4fb680d1e77a08ff23d577d37af2100e211a6" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1Retry&quot;&gt;throwErrnoIfMinus1Retry&lt;/a&gt;&lt;/code&gt;, but checks for operations that would block.</source>
          <target state="translated">如 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1Retry&quot;&gt;throwErrnoIfMinus1Retry&lt;/a&gt;&lt;/code&gt; ，但检查将阻止的操作。</target>
        </trans-unit>
        <trans-unit id="598153ee0de2ca393ccb04fdeb820cd54cee0e16" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1RetryMayBlock&quot;&gt;throwErrnoIfMinus1RetryMayBlock&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1RetryMayBlock&quot;&gt;throwErrnoIfMinus1RetryMayBlock&lt;/a&gt;&lt;/code&gt; ，但放弃结果。</target>
        </trans-unit>
        <trans-unit id="b8edcd7d36c2fd591e6897e4332eaab46dc764e7" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt; ，但是在适当的情况下例外包括给定的路径。</target>
        </trans-unit>
        <trans-unit id="9804d1ba7b8da3c9e3a4ef99531988c78f218222" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfNull&quot;&gt;throwErrnoIfNull&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfNull&quot;&gt;throwErrnoIfNull&lt;/a&gt;&lt;/code&gt; ，但是在适当的情况下例外包括给定的路径。</target>
        </trans-unit>
        <trans-unit id="c8698d99887005060341f5b60b398465646cf6fb" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfNullRetry&quot;&gt;throwErrnoIfNullRetry&lt;/a&gt;&lt;/code&gt;, but checks for operations that would block.</source>
          <target state="translated">如 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfNullRetry&quot;&gt;throwErrnoIfNullRetry&lt;/a&gt;&lt;/code&gt; ，但检查将阻止的操作。</target>
        </trans-unit>
        <trans-unit id="b19b8fabcd211661d8b5390b377c495088fc70f4" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetry&quot;&gt;throwErrnoIfRetry&lt;/a&gt;&lt;/code&gt;, but additionally if the operation yields the error code &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eAGAIN&quot;&gt;eAGAIN&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eWOULDBLOCK&quot;&gt;eWOULDBLOCK&lt;/a&gt;&lt;/code&gt;, an alternative action is executed before retrying.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetry&quot;&gt;throwErrnoIfRetry&lt;/a&gt;&lt;/code&gt; ，但此外，如果该操作产生错误代码 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eAGAIN&quot;&gt;eAGAIN&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eWOULDBLOCK&quot;&gt;eWOULDBLOCK&lt;/a&gt;&lt;/code&gt; ，则在重试之前将执行替代操作。</target>
        </trans-unit>
        <trans-unit id="1eb02da65c06d772e342d2fae781776b4596b374" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetry&quot;&gt;throwErrnoIfRetry&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetry&quot;&gt;throwErrnoIfRetry&lt;/a&gt;&lt;/code&gt; ，但丢弃结果。</target>
        </trans-unit>
        <trans-unit id="41a70d526fc5d66b6e72036d342b71b990840eaf" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetryMayBlock&quot;&gt;throwErrnoIfRetryMayBlock&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetryMayBlock&quot;&gt;throwErrnoIfRetryMayBlock&lt;/a&gt;&lt;/code&gt; ，但放弃结果。</target>
        </trans-unit>
        <trans-unit id="669c7af8f0cadb94cd9f2b594244dcd11aacc58a" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf_&quot;&gt;throwErrnoIf_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf_&quot;&gt;throwErrnoIf_&lt;/a&gt;&lt;/code&gt; ，但是在适当的情况下例外包括给定的路径。</target>
        </trans-unit>
        <trans-unit id="0743fe895c0907bd9048df44c862343c74e6cfac" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt; ，但是在适当的情况下例外包括给定的路径。</target>
        </trans-unit>
        <trans-unit id="4bdb9edb01ac73d5dfc0966b5d0f87bfb05bf2d4" translate="yes" xml:space="preserve">
          <source>as a variant of &lt;code&gt;putStrLn&lt;/code&gt; that will get its call-site and print it, along with the string given as argument. We can access the call-stack inside &lt;code&gt;putStrLnWithCallStack&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;ghc-stack#v:callStack&quot;&gt;callStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">作为 &lt;code&gt;putStrLn&lt;/code&gt; 的变体，它将获取其调用位置并打印它以及作为参数给出的字符串。我们可以访问调用堆栈内 &lt;code&gt;putStrLnWithCallStack&lt;/code&gt; 与 &lt;code&gt;&lt;a href=&quot;ghc-stack#v:callStack&quot;&gt;callStack&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f6f25e3f987bc94c803c4edfff11a7724cd8a42" translate="yes" xml:space="preserve">
          <source>as the latter associates &lt;code&gt;mappend&lt;/code&gt; to the left.</source>
          <target state="translated">因为后者将 &lt;code&gt;mappend&lt;/code&gt; 拖到左侧。</target>
        </trans-unit>
        <trans-unit id="0ec49f33a5c0fd6f9c40b5d1e5c86efdf6e0513e" translate="yes" xml:space="preserve">
          <source>as the latter associates &lt;code&gt;mappend&lt;/code&gt; to the left. Or, equivalently, prefer</source>
          <target state="translated">因为后者将 &lt;code&gt;mappend&lt;/code&gt; 拖到左侧。或者，等效地，更喜欢</target>
        </trans-unit>
        <trans-unit id="2f7bcccbf546e4a1340bef75a56622aaee918661" translate="yes" xml:space="preserve">
          <source>asForeignPtr</source>
          <target state="translated">asForeignPtr</target>
        </trans-unit>
        <trans-unit id="9c29488bac6732c312d5e1817af558a3ade02e0b" translate="yes" xml:space="preserve">
          <source>asP</source>
          <target state="translated">asP</target>
        </trans-unit>
        <trans-unit id="0a1a0a9d0fe57896cd23296365b42da1d2dc4c01" translate="yes" xml:space="preserve">
          <source>asProxyTypeOf</source>
          <target state="translated">asProxyTypeOf</target>
        </trans-unit>
        <trans-unit id="59cf77a30e5e610fb9842bb358fa075e5d50f012" translate="yes" xml:space="preserve">
          <source>asTypeOf</source>
          <target state="translated">asTypeOf</target>
        </trans-unit>
        <trans-unit id="51c066b36ea8b32076964c766f8a0324ca4eb4b9" translate="yes" xml:space="preserve">
          <source>ascii</source>
          <target state="translated">ascii</target>
        </trans-unit>
        <trans-unit id="da10be596dd940edab68f6508f410c8033a12c17" translate="yes" xml:space="preserve">
          <source>asciiTab</source>
          <target state="translated">asciiTab</target>
        </trans-unit>
        <trans-unit id="3b7c2523ef37662f91fb9233bee7fc9451493c6a" translate="yes" xml:space="preserve">
          <source>ascii_decode</source>
          <target state="translated">ascii_decode</target>
        </trans-unit>
        <trans-unit id="c60994a2e4ac1f3ba12a2bd38fd2ed607346c0bd" translate="yes" xml:space="preserve">
          <source>ascii_encode</source>
          <target state="translated">ascii_encode</target>
        </trans-unit>
        <trans-unit id="ca2d03115a335901df8d495a843c04f7cc55294c" translate="yes" xml:space="preserve">
          <source>ashley@semantic.org</source>
          <target state="translated">ashley@semantic.org</target>
        </trans-unit>
        <trans-unit id="8ab4958aa4c54efdc364c319ca6616fd33eab112" translate="yes" xml:space="preserve">
          <source>asin (Floating)</source>
          <target state="translated">浮动</target>
        </trans-unit>
        <trans-unit id="0c63938f823ed86bbe8104784ae1d8817a7e3686" translate="yes" xml:space="preserve">
          <source>asinDouble</source>
          <target state="translated">asinDouble</target>
        </trans-unit>
        <trans-unit id="aadb01d2056340843324c3da5565923a1eca49ea" translate="yes" xml:space="preserve">
          <source>asinDouble#</source>
          <target state="translated">asinDouble#</target>
        </trans-unit>
        <trans-unit id="4d1b4aa15ef446aaf2f36efe1163d12eadce3150" translate="yes" xml:space="preserve">
          <source>asinFloat</source>
          <target state="translated">asinFloat</target>
        </trans-unit>
        <trans-unit id="466d0916fd029dd1a0be7a1ddad3a0a8d6022554" translate="yes" xml:space="preserve">
          <source>asinFloat#</source>
          <target state="translated">asinFloat#</target>
        </trans-unit>
        <trans-unit id="6f5241ed5c8c1d065bcdd826ec0db80b2c41f9d5" translate="yes" xml:space="preserve">
          <source>asinh (Floating)</source>
          <target state="translated">浮动</target>
        </trans-unit>
        <trans-unit id="6a3a79e625e3c37b27c88131adf3361a4bbd3b51" translate="yes" xml:space="preserve">
          <source>asinhDouble</source>
          <target state="translated">asinhDouble</target>
        </trans-unit>
        <trans-unit id="bb15e70a287c413a82c6520b9672b673bc72f23c" translate="yes" xml:space="preserve">
          <source>asinhDouble#</source>
          <target state="translated">asinhDouble#</target>
        </trans-unit>
        <trans-unit id="0ddf6991a935b88788a9c19aaba2458e17863c64" translate="yes" xml:space="preserve">
          <source>asinhFloat</source>
          <target state="translated">asinhFloat</target>
        </trans-unit>
        <trans-unit id="73575de3303288f9d3181229eed89e6146960f3a" translate="yes" xml:space="preserve">
          <source>asinhFloat#</source>
          <target state="translated">asinhFloat#</target>
        </trans-unit>
        <trans-unit id="1c8f09270fc33a393af3eaf0b2ebf58eb9bbbcc2" translate="yes" xml:space="preserve">
          <source>ask</source>
          <target state="translated">ask</target>
        </trans-unit>
        <trans-unit id="26b0aff2ef859d930a04e2bd423d2b11109c8b4b" translate="yes" xml:space="preserve">
          <source>ask (MonadReader)</source>
          <target state="translated">询问</target>
        </trans-unit>
        <trans-unit id="a2f8909c86e91117070277875fbe03ff7e61c8a8" translate="yes" xml:space="preserve">
          <source>asks</source>
          <target state="translated">asks</target>
        </trans-unit>
        <trans-unit id="5b9a307943f0d16237239e002d1dd9ba522e93aa" translate="yes" xml:space="preserve">
          <source>aslatter@gmail.com</source>
          <target state="translated">aslatter@gmail.com</target>
        </trans-unit>
        <trans-unit id="cd2e8cfa846b1038a2c00c38e0753eb7f162dc23" translate="yes" xml:space="preserve">
          <source>assembler</source>
          <target state="translated">assembler</target>
        </trans-unit>
        <trans-unit id="64b5daad5073849378993ba34e058d7008293097" translate="yes" xml:space="preserve">
          <source>assert</source>
          <target state="translated">assert</target>
        </trans-unit>
        <trans-unit id="331818bdb6b82eee2ad1926a159dee726d981108" translate="yes" xml:space="preserve">
          <source>assertError</source>
          <target state="translated">assertError</target>
        </trans-unit>
        <trans-unit id="20eaf0193c1a0e9284d8a930cf806a43ab9fb8d4" translate="yes" xml:space="preserve">
          <source>association list</source>
          <target state="translated">协会名单</target>
        </trans-unit>
        <trans-unit id="e58c4b53165caa444bed9a1d506569c916774721" translate="yes" xml:space="preserve">
          <source>assocs</source>
          <target state="translated">assocs</target>
        </trans-unit>
        <trans-unit id="cccf0912d9c37aa31708ddf4ec02b6da7101c49c" translate="yes" xml:space="preserve">
          <source>asum</source>
          <target state="translated">asum</target>
        </trans-unit>
        <trans-unit id="bf4172a1b40fa1ad58df6d838b23b886f07ca355" translate="yes" xml:space="preserve">
          <source>asyncExceptionFromException</source>
          <target state="translated">asyncExceptionFromException</target>
        </trans-unit>
        <trans-unit id="f6ad4d48a787677d35259d8dfe8b961a822239ef" translate="yes" xml:space="preserve">
          <source>asyncExceptionToException</source>
          <target state="translated">asyncExceptionToException</target>
        </trans-unit>
        <trans-unit id="f27f1bd487bd79ecde66ad956cc1b76df04a2b93" translate="yes" xml:space="preserve">
          <source>asynchronous exceptions are unmasked (the normal state)</source>
          <target state="translated">异步异常被解除屏蔽(正常状态)。</target>
        </trans-unit>
        <trans-unit id="ac16cfd6ae8d97d8022bfbfb2185827798fcd682" translate="yes" xml:space="preserve">
          <source>asynchronous: the actual putMVar may be performed after the call returns (for example, if the RTS is currently garbage collecting). That&amp;rsquo;s why &lt;code&gt;hs_try_putmvar()&lt;/code&gt; doesn&amp;rsquo;t return a result to say whether the put succeeded. It is your responsibility to ensure that the &lt;code&gt;MVar&lt;/code&gt; is empty; if it is full, &lt;code&gt;hs_try_putmvar()&lt;/code&gt; will have no effect.</source>
          <target state="translated">异步：实际的putMVar可以在调用返回后执行（例如，如果RTS当前正在垃圾回收）。这就是为什么 &lt;code&gt;hs_try_putmvar()&lt;/code&gt; 不返回结果来说明放置是否成功的原因。确保 &lt;code&gt;MVar&lt;/code&gt; 为空是您的责任；如果已满，则 &lt;code&gt;hs_try_putmvar()&lt;/code&gt; 将无效。</target>
        </trans-unit>
        <trans-unit id="07e381931523b54b284216ff3f12c77f8a1babc7" translate="yes" xml:space="preserve">
          <source>at compile-time, using &lt;code&gt;-with-rtsopts=⟨opts⟩&lt;/code&gt; (&lt;a href=&quot;#rts-opts-compile-time&quot;&gt;Setting RTS options at compile time&lt;/a&gt;)</source>
          <target state="translated">在编译时，使用 &lt;code&gt;-with-rtsopts=⟨opts⟩&lt;/code&gt; （&lt;a href=&quot;#rts-opts-compile-time&quot;&gt;在编译时设置RTS选项&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="841382eece6b02b23cdf81905c9c082c29dd6750" translate="yes" xml:space="preserve">
          <source>at least for strict &lt;code&gt;k&lt;/code&gt;. (This should be automatic if you&amp;rsquo;re not using &lt;code&gt;seq&lt;/code&gt;.) This ensures that environments seen by the subcommands are environments of the whole command, and also allows the translation to safely trim these environments. (The second component of the input pairs can contain unnamed input values, as described in the next section.) The operator must also not use any variable defined within the current arrow abstraction.</source>
          <target state="translated">至少对于严格的 &lt;code&gt;k&lt;/code&gt; 。 （如果不使用 &lt;code&gt;seq&lt;/code&gt; ,这应该是自动的。）这确保子命令看到的环境是整个命令的环境，并且还允许转换安全地修剪这些环境。 （输入对的第二个组件可以包含未命名的输入值，如下一节所述。）操作员也不得使用当前箭头抽象中定义的任何变量。</target>
        </trans-unit>
        <trans-unit id="686eeca8176d8cc53292cd978c09588d3431b398" translate="yes" xml:space="preserve">
          <source>at top level</source>
          <target state="translated">高层</target>
        </trans-unit>
        <trans-unit id="279683d42bd96937141868b95971f01746b87ca9" translate="yes" xml:space="preserve">
          <source>atan2 (RealFloat)</source>
          <target state="translated">atan2 (RealFloat)</target>
        </trans-unit>
        <trans-unit id="4a27b4dad5038f014c060a6e03423dd5683cd2e1" translate="yes" xml:space="preserve">
          <source>atanDouble</source>
          <target state="translated">atanDouble</target>
        </trans-unit>
        <trans-unit id="791c56b87f8aeac733c32f85c17be8c1d6e8ff2d" translate="yes" xml:space="preserve">
          <source>atanDouble#</source>
          <target state="translated">atanDouble#</target>
        </trans-unit>
        <trans-unit id="12a19eaa6a0a56b112ead4430aa9de73d52a5937" translate="yes" xml:space="preserve">
          <source>atanFloat</source>
          <target state="translated">atanFloat</target>
        </trans-unit>
        <trans-unit id="fb74964bdc54ca68a808186703fa440baf02fca5" translate="yes" xml:space="preserve">
          <source>atanFloat#</source>
          <target state="translated">atanFloat#</target>
        </trans-unit>
        <trans-unit id="17590fa63d5b0284f1a569d89f38e04818c73107" translate="yes" xml:space="preserve">
          <source>atanhDouble</source>
          <target state="translated">atanhDouble</target>
        </trans-unit>
        <trans-unit id="ea9fd29206ac6a7fd6e13be3ba89509ac3bf4fa2" translate="yes" xml:space="preserve">
          <source>atanhDouble#</source>
          <target state="translated">atanhDouble#</target>
        </trans-unit>
        <trans-unit id="d8f70827d2119a01785ddde4cddcf40bbd328905" translate="yes" xml:space="preserve">
          <source>atanhFloat</source>
          <target state="translated">atanhFloat</target>
        </trans-unit>
        <trans-unit id="ca6c218f732b3a65fde0a91d2c0c8bb32bc18a54" translate="yes" xml:space="preserve">
          <source>atanhFloat#</source>
          <target state="translated">atanhFloat#</target>
        </trans-unit>
        <trans-unit id="37f2a114321eb35683cbe582c206f91b9444919f" translate="yes" xml:space="preserve">
          <source>atomicModifyIORef</source>
          <target state="translated">atomicModifyIORef</target>
        </trans-unit>
        <trans-unit id="aaab5fca3a784d01a1fa679f7b3bda0da428539f" translate="yes" xml:space="preserve">
          <source>atomicModifyIORef&amp;#x27;</source>
          <target state="translated">atomicModifyIORef&amp;#x27;</target>
        </trans-unit>
        <trans-unit id="76498065a0459b00d75f1486b688eff4bb5daf79" translate="yes" xml:space="preserve">
          <source>atomicModifyIORef&amp;#x27;_</source>
          <target state="translated">atomicModifyIORef&amp;#x27;_</target>
        </trans-unit>
        <trans-unit id="59ba5625a988c56daa8a4477ef1b473e13245e69" translate="yes" xml:space="preserve">
          <source>atomicModifyIORef2</source>
          <target state="translated">atomicModifyIORef2</target>
        </trans-unit>
        <trans-unit id="e5070f03e1c36359942e14319ab0a04fa1a8efd3" translate="yes" xml:space="preserve">
          <source>atomicModifyIORef2Lazy</source>
          <target state="translated">atomicModifyIORef2Lazy</target>
        </trans-unit>
        <trans-unit id="5c79d9a757131488cca33cafd56d14c09d974504" translate="yes" xml:space="preserve">
          <source>atomicModifyIORefLazy_</source>
          <target state="translated">atomicModifyIORefLazy_</target>
        </trans-unit>
        <trans-unit id="6baa1456309aa779040c8e3898b95a3cd5941d2d" translate="yes" xml:space="preserve">
          <source>atomicModifyIORefP</source>
          <target state="translated">atomicModifyIORefP</target>
        </trans-unit>
        <trans-unit id="277573c1ff027b94839102be35105dac13beb430" translate="yes" xml:space="preserve">
          <source>atomicModifyMutVar#</source>
          <target state="translated">atomicModifyMutVar#</target>
        </trans-unit>
        <trans-unit id="cf9bcd290c284cca99a1a92d8d23c1e33c369948" translate="yes" xml:space="preserve">
          <source>atomicModifyMutVar2#</source>
          <target state="translated">atomicModifyMutVar2#</target>
        </trans-unit>
        <trans-unit id="8afe9283db349a10f51bf06015ef958b0005d2bf" translate="yes" xml:space="preserve">
          <source>atomicModifyMutVar_#</source>
          <target state="translated">atomicModifyMutVar_#</target>
        </trans-unit>
        <trans-unit id="571d2c16821da3f0d253347c1452ec53d054f56c" translate="yes" xml:space="preserve">
          <source>atomicReadIntArray#</source>
          <target state="translated">atomicReadIntArray#</target>
        </trans-unit>
        <trans-unit id="8958e94565e0dd853f3923753d1550276eafdb75" translate="yes" xml:space="preserve">
          <source>atomicSwapIORef</source>
          <target state="translated">atomicSwapIORef</target>
        </trans-unit>
        <trans-unit id="1650c5513a5c658d9f0f7869503d84921f910e31" translate="yes" xml:space="preserve">
          <source>atomicWriteIORef</source>
          <target state="translated">atomicWriteIORef</target>
        </trans-unit>
        <trans-unit id="5c1ff7d510d6a193972699afa30c4cb601de7002" translate="yes" xml:space="preserve">
          <source>atomicWriteIntArray#</source>
          <target state="translated">atomicWriteIntArray#</target>
        </trans-unit>
        <trans-unit id="035c31229bf4f528a298d211c7911c455d388b84" translate="yes" xml:space="preserve">
          <source>atomically</source>
          <target state="translated">atomically</target>
        </trans-unit>
        <trans-unit id="df2fb53fcb53403bb5fdd797b42e38c59407cede" translate="yes" xml:space="preserve">
          <source>atomically#</source>
          <target state="translated">atomically#</target>
        </trans-unit>
        <trans-unit id="b33ef518505469185ccab5a61fb50217dab84a35" translate="yes" xml:space="preserve">
          <source>attempts to parse a value from the front of the string, returning a list of (parsed value, remaining string) pairs. If there is no successful parse, the returned list is empty.</source>
          <target state="translated">试图从字符串的前面解析一个值,返回一个(解析值,剩余字符串)对的列表。如果没有成功解析,返回的列表为空。</target>
        </trans-unit>
        <trans-unit id="d6bc890ddcf8a44060c47dafdb46321b799b3f05" translate="yes" xml:space="preserve">
          <source>augment</source>
          <target state="translated">augment</target>
        </trans-unit>
        <trans-unit id="d13b4658cef0107758394496a571bcb9a325039f" translate="yes" xml:space="preserve">
          <source>augmentIOError</source>
          <target state="translated">augmentIOError</target>
        </trans-unit>
        <trans-unit id="5a75ab98e10ba559ee7bc1a7009d08c5d6da36a7" translate="yes" xml:space="preserve">
          <source>autoLeftMargin</source>
          <target state="translated">autoLeftMargin</target>
        </trans-unit>
        <trans-unit id="90d8d7a015405319a777247de83767f218d4afb0" translate="yes" xml:space="preserve">
          <source>autoRightMargin</source>
          <target state="translated">autoRightMargin</target>
        </trans-unit>
        <trans-unit id="808de801e98ad6b34bce4b8ca076574a52a93aed" translate="yes" xml:space="preserve">
          <source>avoiding a few redundant allocations</source>
          <target state="translated">避开一些多余的分配。</target>
        </trans-unit>
        <trans-unit id="3446c7d499589ede568f2c16f54669c219ded4e8" translate="yes" xml:space="preserve">
          <source>awaitSignal</source>
          <target state="translated">awaitSignal</target>
        </trans-unit>
        <trans-unit id="248a20b62efba8f4303c75830c83230f1b088f1e" translate="yes" xml:space="preserve">
          <source>background</source>
          <target state="translated">background</target>
        </trans-unit>
        <trans-unit id="f54b7ea09b331b8019120b505ad8db889f36e065" translate="yes" xml:space="preserve">
          <source>backgroundRead</source>
          <target state="translated">backgroundRead</target>
        </trans-unit>
        <trans-unit id="2140356f0e9b5ffe96dd20d4b68a8dab81e31e9d" translate="yes" xml:space="preserve">
          <source>backgroundWrite</source>
          <target state="translated">backgroundWrite</target>
        </trans-unit>
        <trans-unit id="4ddac83c47bfe8a4e056b0e440bd90d679ba18c8" translate="yes" xml:space="preserve">
          <source>badIO</source>
          <target state="translated">badIO</target>
        </trans-unit>
        <trans-unit id="54794ca033082925c04a6e2c1e3e1c9b459a6ed0" translate="yes" xml:space="preserve">
          <source>badSafeIndex</source>
          <target state="translated">badSafeIndex</target>
        </trans-unit>
        <trans-unit id="7b6bc3e94c887f46e187788740be96cdf64e1aa0" translate="yes" xml:space="preserve">
          <source>badSystemCall</source>
          <target state="translated">badSystemCall</target>
        </trans-unit>
        <trans-unit id="6217e69f789ed5f163d5136d4ae52dcd00b047a7" translate="yes" xml:space="preserve">
          <source>balanced</source>
          <target state="translated">balanced</target>
        </trans-unit>
        <trans-unit id="0ab79927a592f1727d4d2c6abd69b159462b349d" translate="yes" xml:space="preserve">
          <source>bang</source>
          <target state="translated">bang</target>
        </trans-unit>
        <trans-unit id="8e0470d66678fb379e74f57f2c01044d53046aa6" translate="yes" xml:space="preserve">
          <source>bangP</source>
          <target state="translated">bangP</target>
        </trans-unit>
        <trans-unit id="bd48a75a6e210331105de89ac8faf7be41bdceab" translate="yes" xml:space="preserve">
          <source>bangType</source>
          <target state="translated">bangType</target>
        </trans-unit>
        <trans-unit id="62cdb7020ff920e5aa642c3d4066950dd1f01f4d" translate="yes" xml:space="preserve">
          <source>bar</source>
          <target state="translated">bar</target>
        </trans-unit>
        <trans-unit id="1405df66cbe219b0bf6355bc3d60361a8376b6b4" translate="yes" xml:space="preserve">
          <source>base</source>
          <target state="translated">base</target>
        </trans-unit>
        <trans-unit id="e020ea1ef8f134b08044839fe5697e90f67435d1" translate="yes" xml:space="preserve">
          <source>basefont</source>
          <target state="translated">basefont</target>
        </trans-unit>
        <trans-unit id="e87b45953875b7caad2f0266b83919ebff7fb937" translate="yes" xml:space="preserve">
          <source>bcc</source>
          <target state="translated">bcc</target>
        </trans-unit>
        <trans-unit id="910273218ae5b885464f7e6c8bddecee249e65f5" translate="yes" xml:space="preserve">
          <source>bdo</source>
          <target state="translated">bdo</target>
        </trans-unit>
        <trans-unit id="ebdd7551b2d98e64c961486c2a3a6ff2c8f830d7" translate="yes" xml:space="preserve">
          <source>because GHC does not allow type constructors applied to for-all types.</source>
          <target state="translated">因为GHC不允许类型构造函数应用于for-all类型。</target>
        </trans-unit>
        <trans-unit id="e805ee658f9c460b06720196966dd85296d6e4bb" translate="yes" xml:space="preserve">
          <source>because according to the report, the &lt;code&gt;let&lt;/code&gt; expression &amp;ldquo;extends as far to the right as possible&amp;rdquo;. Since it can&amp;rsquo;t extend past the second equals sign without causing a parse error (&lt;code&gt;==&lt;/code&gt; is non-fix), the &lt;code&gt;let&lt;/code&gt;-expression must terminate there. GHC simply gobbles up the whole expression, parsing like this:</source>
          <target state="translated">因为根据该报告， &lt;code&gt;let&lt;/code&gt; 表达式&amp;ldquo;尽可能向右扩展&amp;rdquo;。由于它不能超出第二个等号而不会引起解析错误（ &lt;code&gt;==&lt;/code&gt; 是非固定的），因此 &lt;code&gt;let&lt;/code&gt; -expression必须在那里终止。GHC只是吞噬整个表达式，像这样解析：</target>
        </trans-unit>
        <trans-unit id="abe60f172be3b07770a2e3323f768af75903c1cc" translate="yes" xml:space="preserve">
          <source>because it moves several variables out of the inner loop.</source>
          <target state="translated">因为它将几个变量移出了内循环。</target>
        </trans-unit>
        <trans-unit id="d9901eccb94d56def92a11f936488f5aa3028af1" translate="yes" xml:space="preserve">
          <source>because layout translates it as</source>
          <target state="translated">因为布局将其翻译为</target>
        </trans-unit>
        <trans-unit id="93d53ed69a40db0047beb9ee6c816d706547b112" translate="yes" xml:space="preserve">
          <source>because the derived instance</source>
          <target state="translated">因为派生实例</target>
        </trans-unit>
        <trans-unit id="275b55ce602c1618ed593dac2e71ff8868de2c13" translate="yes" xml:space="preserve">
          <source>because the type variable &lt;code&gt;s&lt;/code&gt; occurs in &lt;code&gt;State s m&lt;/code&gt;, and so cannot be &amp;ldquo;eta-converted&amp;rdquo; away. It is a good thing that this &lt;code&gt;deriving&lt;/code&gt; clause is rejected, because &lt;code&gt;NonMonad m&lt;/code&gt; is not, in fact, a monad &amp;mdash; for the same reason. Try defining &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; with the correct type: you won&amp;rsquo;t be able to.</source>
          <target state="translated">因为类型变量 &lt;code&gt;s&lt;/code&gt; 出现在 &lt;code&gt;State s m&lt;/code&gt; ，所以不能被&amp;ldquo; eta转换&amp;rdquo;。拒绝此 &lt;code&gt;deriving&lt;/code&gt; 子句是一件好事，因为 &lt;code&gt;NonMonad m&lt;/code&gt; 相同的原因，NonMonad m实际上不是monad。尝试使用正确的类型定义 &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; ：您将无法。</target>
        </trans-unit>
        <trans-unit id="c02ceb78ff4863ee1a75d232c4f53af56b182ec9" translate="yes" xml:space="preserve">
          <source>becomes:</source>
          <target state="translated">becomes:</target>
        </trans-unit>
        <trans-unit id="25d4f172feced085f8da17d458f640ffad47ca65" translate="yes" xml:space="preserve">
          <source>beginDeferWindowPos</source>
          <target state="translated">beginDeferWindowPos</target>
        </trans-unit>
        <trans-unit id="bf5b6f618f1773563185d77326e1f1c36867708e" translate="yes" xml:space="preserve">
          <source>beginPaint</source>
          <target state="translated">beginPaint</target>
        </trans-unit>
        <trans-unit id="04bf886e8ac26aef79ce20e35be5e4e7220e2db3" translate="yes" xml:space="preserve">
          <source>bell</source>
          <target state="translated">bell</target>
        </trans-unit>
        <trans-unit id="d1c8869983ffe3b4f9abe1dc851bda61399ef6e6" translate="yes" xml:space="preserve">
          <source>beside</source>
          <target state="translated">beside</target>
        </trans-unit>
        <trans-unit id="94a325fbad774506643bcbe612567eb0ffe5f2fe" translate="yes" xml:space="preserve">
          <source>besides</source>
          <target state="translated">besides</target>
        </trans-unit>
        <trans-unit id="709634051471385aada32356842983beeff4b065" translate="yes" xml:space="preserve">
          <source>between</source>
          <target state="translated">between</target>
        </trans-unit>
        <trans-unit id="a0cdafd233cbaab2a9872ea8f8ae7581da6ba991" translate="yes" xml:space="preserve">
          <source>betweenSize</source>
          <target state="translated">betweenSize</target>
        </trans-unit>
        <trans-unit id="870d252224979a90e62fe3dfae2a37da5097e6fa" translate="yes" xml:space="preserve">
          <source>bgcolor</source>
          <target state="translated">bgcolor</target>
        </trans-unit>
        <trans-unit id="5fe1effab7e467663478de549c8df90ff86372b0" translate="yes" xml:space="preserve">
          <source>biList</source>
          <target state="translated">biList</target>
        </trans-unit>
        <trans-unit id="a29450bec3a3589b279c0948b8063a67ac9e0757" translate="yes" xml:space="preserve">
          <source>biall</source>
          <target state="translated">biall</target>
        </trans-unit>
        <trans-unit id="00f0211353249bf0e58ba56c7be776f845161e55" translate="yes" xml:space="preserve">
          <source>biand</source>
          <target state="translated">biand</target>
        </trans-unit>
        <trans-unit id="0ed64e17fbcb9435a4b0fb68b00971aaad576558" translate="yes" xml:space="preserve">
          <source>biany</source>
          <target state="translated">biany</target>
        </trans-unit>
        <trans-unit id="41322bdf72449d66ef86f0acb2b5e5cba0392d22" translate="yes" xml:space="preserve">
          <source>biasum</source>
          <target state="translated">biasum</target>
        </trans-unit>
        <trans-unit id="6d0b73fbf7591ec6a14fcf194cd7154596972155" translate="yes" xml:space="preserve">
          <source>biconcat</source>
          <target state="translated">biconcat</target>
        </trans-unit>
        <trans-unit id="0beef8ddc76a511f095195bb24509617d0506ea1" translate="yes" xml:space="preserve">
          <source>biconcatMap</source>
          <target state="translated">biconcatMap</target>
        </trans-unit>
        <trans-unit id="e82a328908f724f886dd94265a71641504d6fa3e" translate="yes" xml:space="preserve">
          <source>bielem</source>
          <target state="translated">bielem</target>
        </trans-unit>
        <trans-unit id="40acb1a8fbde0ccfb9056001870625497a46d9bd" translate="yes" xml:space="preserve">
          <source>bifind</source>
          <target state="translated">bifind</target>
        </trans-unit>
        <trans-unit id="9e4a7383da4d79a93f908a594eb6a160011fc94f" translate="yes" xml:space="preserve">
          <source>bifold (Bifoldable)</source>
          <target state="translated">双折</target>
        </trans-unit>
        <trans-unit id="bcb0288dc54254a2d7108d44583a2b0b43c0ee3b" translate="yes" xml:space="preserve">
          <source>bifoldMap (Bifoldable)</source>
          <target state="translated">bifoldMap (Bifoldable)</target>
        </trans-unit>
        <trans-unit id="102fdda1302e8724f8058b275be3811d36ccf065" translate="yes" xml:space="preserve">
          <source>bifoldMapDefault</source>
          <target state="translated">bifoldMapDefault</target>
        </trans-unit>
        <trans-unit id="faa946782e982acac423fbaed8864996776d423c" translate="yes" xml:space="preserve">
          <source>bifoldl (Bifoldable)</source>
          <target state="translated">bifoldl (双折)</target>
        </trans-unit>
        <trans-unit id="294b3c9c0ab8b163852b2650d5ed4ca6cc054ad8" translate="yes" xml:space="preserve">
          <source>bifoldl&amp;#x27;</source>
          <target state="translated">bifoldl&amp;#x27;</target>
        </trans-unit>
        <trans-unit id="e0b522e3492c89197e5b5897a798b9e3ef91d191" translate="yes" xml:space="preserve">
          <source>bifoldl1</source>
          <target state="translated">bifoldl1</target>
        </trans-unit>
        <trans-unit id="cc84226c264bf11d1035ff4d949b8a23fed5c607" translate="yes" xml:space="preserve">
          <source>bifoldlM</source>
          <target state="translated">bifoldlM</target>
        </trans-unit>
        <trans-unit id="296f5ac551c6b9df1c50a5e987015a09b1459d8c" translate="yes" xml:space="preserve">
          <source>bifoldr (Bifoldable)</source>
          <target state="translated">bifoldr (双折)</target>
        </trans-unit>
        <trans-unit id="2439b81ecf3182d30e5de2eb92002a889d209b1f" translate="yes" xml:space="preserve">
          <source>bifoldr&amp;#x27;</source>
          <target state="translated">bifoldr&amp;#x27;</target>
        </trans-unit>
        <trans-unit id="6cb4a2f54985dae435a7108865c2684e50f1c5cd" translate="yes" xml:space="preserve">
          <source>bifoldr1</source>
          <target state="translated">bifoldr1</target>
        </trans-unit>
        <trans-unit id="99b60545e479d2e7e89f2bcb80c280a69826ca62" translate="yes" xml:space="preserve">
          <source>bifoldrM</source>
          <target state="translated">bifoldrM</target>
        </trans-unit>
        <trans-unit id="b2fe64680fbd74762cadc29f110644de5956c06f" translate="yes" xml:space="preserve">
          <source>bifor</source>
          <target state="translated">bifor</target>
        </trans-unit>
        <trans-unit id="c3d643ddc50a496e9889b78779b57c7b08cffb10" translate="yes" xml:space="preserve">
          <source>biforM</source>
          <target state="translated">biforM</target>
        </trans-unit>
        <trans-unit id="9691cda04cf6118ce3f9ece627fc30026b94bcb7" translate="yes" xml:space="preserve">
          <source>biforM_</source>
          <target state="translated">biforM_</target>
        </trans-unit>
        <trans-unit id="4221cf4ea6c18a13c3ab25d96211126fbc01dc1c" translate="yes" xml:space="preserve">
          <source>bifor_</source>
          <target state="translated">bifor_</target>
        </trans-unit>
        <trans-unit id="95c4bea12e4edcf8aad730a222793324dc42c29d" translate="yes" xml:space="preserve">
          <source>big</source>
          <target state="translated">big</target>
        </trans-unit>
        <trans-unit id="4654e62302abbca1dc8c5be7cfbf7cc32e30a206" translate="yes" xml:space="preserve">
          <source>bigNatToInt</source>
          <target state="translated">bigNatToInt</target>
        </trans-unit>
        <trans-unit id="12bf4403c477d2f174b7d780e129891e6ea93038" translate="yes" xml:space="preserve">
          <source>bigNatToInteger</source>
          <target state="translated">bigNatToInteger</target>
        </trans-unit>
        <trans-unit id="692962999d7f315287cc6ce21ef6dc2e8f1a97bd" translate="yes" xml:space="preserve">
          <source>bigNatToNegInteger</source>
          <target state="translated">bigNatToNegInteger</target>
        </trans-unit>
        <trans-unit id="e0d17b7bff18e538276fea9a638fe1132106520f" translate="yes" xml:space="preserve">
          <source>bigNatToWord</source>
          <target state="translated">bigNatToWord</target>
        </trans-unit>
        <trans-unit id="53e563d0c86b8ceed31c0faa7603f12bc5d0086f" translate="yes" xml:space="preserve">
          <source>bilength</source>
          <target state="translated">bilength</target>
        </trans-unit>
        <trans-unit id="17047bdfe2ff0b0f30babdc53b7c185fcfac6a70" translate="yes" xml:space="preserve">
          <source>bimap (Bifunctor)</source>
          <target state="translated">双向图</target>
        </trans-unit>
        <trans-unit id="6610bd2cd6d018c2df92eedba8ea4e6874036c18" translate="yes" xml:space="preserve">
          <source>bimapAccumL</source>
          <target state="translated">bimapAccumL</target>
        </trans-unit>
        <trans-unit id="98e3164e93f32b7d4254d2c099a7bbbea5112a6c" translate="yes" xml:space="preserve">
          <source>bimapAccumR</source>
          <target state="translated">bimapAccumR</target>
        </trans-unit>
        <trans-unit id="dc31914fd4bafde0a7f3445b8b9d59f06f2cc059" translate="yes" xml:space="preserve">
          <source>bimapDefault</source>
          <target state="translated">bimapDefault</target>
        </trans-unit>
        <trans-unit id="8875024c342221102e8396f338452d97261b0833" translate="yes" xml:space="preserve">
          <source>bimapM</source>
          <target state="translated">bimapM</target>
        </trans-unit>
        <trans-unit id="b1e5aaa3ec6c63ea26a55db8ec127f457ea158f2" translate="yes" xml:space="preserve">
          <source>bimapM_</source>
          <target state="translated">bimapM_</target>
        </trans-unit>
        <trans-unit id="40de4e7c019ce55c0cc23bf04f384b14ee1e34b7" translate="yes" xml:space="preserve">
          <source>bimaximum</source>
          <target state="translated">bimaximum</target>
        </trans-unit>
        <trans-unit id="1510e419b048cbba88d1280f8dee38fb37dfa80d" translate="yes" xml:space="preserve">
          <source>bimaximumBy</source>
          <target state="translated">bimaximumBy</target>
        </trans-unit>
        <trans-unit id="e50dbcfb24621fae138a21f53b2773f4e1e5a24e" translate="yes" xml:space="preserve">
          <source>biminimum</source>
          <target state="translated">biminimum</target>
        </trans-unit>
        <trans-unit id="ad9cdb8a48f31c54a908a01a732d12df66cf5d02" translate="yes" xml:space="preserve">
          <source>biminimumBy</source>
          <target state="translated">biminimumBy</target>
        </trans-unit>
        <trans-unit id="af20a4bb0a3ad35ebad1b6b67ec11fb91cea0a5a" translate="yes" xml:space="preserve">
          <source>bimsum</source>
          <target state="translated">bimsum</target>
        </trans-unit>
        <trans-unit id="3cb377e066ede6e6f04f2b56ec085a0f25109b81" translate="yes" xml:space="preserve">
          <source>bindIO</source>
          <target state="translated">bindIO</target>
        </trans-unit>
        <trans-unit id="93896c4721c10251f7a1b788ab491ae442e79881" translate="yes" xml:space="preserve">
          <source>bindQ</source>
          <target state="translated">bindQ</target>
        </trans-unit>
        <trans-unit id="744146c4af990823a3a16ee1258ec54a315bb733" translate="yes" xml:space="preserve">
          <source>bindS</source>
          <target state="translated">bindS</target>
        </trans-unit>
        <trans-unit id="1dade36213d96ce86f55416ca6794efa60c21ad2" translate="yes" xml:space="preserve">
          <source>binotElem</source>
          <target state="translated">binotElem</target>
        </trans-unit>
        <trans-unit id="5b99e762557d42112f3c1c2543bdab268e20bfa3" translate="yes" xml:space="preserve">
          <source>binull</source>
          <target state="translated">binull</target>
        </trans-unit>
        <trans-unit id="97bc6e68e0164c59650e60f80dd8cb462aa6bc74" translate="yes" xml:space="preserve">
          <source>bior</source>
          <target state="translated">bior</target>
        </trans-unit>
        <trans-unit id="56b9ed772ce11b1599c43d331debd0387cee2da6" translate="yes" xml:space="preserve">
          <source>biproduct</source>
          <target state="translated">biproduct</target>
        </trans-unit>
        <trans-unit id="6d95e431300442b1d06144e0c2ad9984696e3e0f" translate="yes" xml:space="preserve">
          <source>bisequence</source>
          <target state="translated">bisequence</target>
        </trans-unit>
        <trans-unit id="4f2f6994b2f1a96da05ff723898a1b35a4bcc633" translate="yes" xml:space="preserve">
          <source>bisequenceA</source>
          <target state="translated">bisequenceA</target>
        </trans-unit>
        <trans-unit id="6a87edf4c72fc237e94c4ab7aca152c6591718bf" translate="yes" xml:space="preserve">
          <source>bisequenceA_</source>
          <target state="translated">bisequenceA_</target>
        </trans-unit>
        <trans-unit id="47be8c691096a43dc654c5d2d58c9de88d2c13ce" translate="yes" xml:space="preserve">
          <source>bisequence_</source>
          <target state="translated">bisequence_</target>
        </trans-unit>
        <trans-unit id="4db8e41b7900844669fa820ba302368399b7e410" translate="yes" xml:space="preserve">
          <source>bisum</source>
          <target state="translated">bisum</target>
        </trans-unit>
        <trans-unit id="f782ad2620888631f2243c4d2e0eca1083a08aa4" translate="yes" xml:space="preserve">
          <source>bit (Bits)</source>
          <target state="translated">位数(比特)</target>
        </trans-unit>
        <trans-unit id="72ee6ad45b097a5c0c917c48d3ae507ab8bf2591" translate="yes" xml:space="preserve">
          <source>bit 0: is the cost-centre a CAF?</source>
          <target state="translated">bit 0:成本中心是CAF吗?</target>
        </trans-unit>
        <trans-unit id="f0cd538277c4b728b7f469148c4fe98f0841e19d" translate="yes" xml:space="preserve">
          <source>bitBigNat</source>
          <target state="translated">bitBigNat</target>
        </trans-unit>
        <trans-unit id="1bcf414ccd175876be2ac312b2c054af807ca082" translate="yes" xml:space="preserve">
          <source>bitDefault</source>
          <target state="translated">bitDefault</target>
        </trans-unit>
        <trans-unit id="0824abb0cf865f3172e552b6ecf95e6e77d4e5d9" translate="yes" xml:space="preserve">
          <source>bitInteger</source>
          <target state="translated">bitInteger</target>
        </trans-unit>
        <trans-unit id="e589df1352e0d64fdb186ef235a95f0c341c0cf3" translate="yes" xml:space="preserve">
          <source>bitNatural</source>
          <target state="translated">bitNatural</target>
        </trans-unit>
        <trans-unit id="8814ee0b056a62691e76c73f19c36ff99b44582d" translate="yes" xml:space="preserve">
          <source>bitSize (Bits)</source>
          <target state="translated">比特大小(位)</target>
        </trans-unit>
        <trans-unit id="193b2d8d716f2455dac7fc1c182a149ead00615d" translate="yes" xml:space="preserve">
          <source>bitSizeMaybe (Bits)</source>
          <target state="translated">比特大小可能(位)</target>
        </trans-unit>
        <trans-unit id="4da764e1824ae57728952e1b0615985ed94f59b9" translate="yes" xml:space="preserve">
          <source>bitcount</source>
          <target state="translated">bitcount</target>
        </trans-unit>
        <trans-unit id="3ee338087fc5281bc3cab77d5688bab6b7a22fb4" translate="yes" xml:space="preserve">
          <source>bitmapOf</source>
          <target state="translated">bitmapOf</target>
        </trans-unit>
        <trans-unit id="068d23a3c13a40ee43bb1d531e756dab431eb835" translate="yes" xml:space="preserve">
          <source>bitraverse (Bitraversable)</source>
          <target state="translated">位面可穿越</target>
        </trans-unit>
        <trans-unit id="1abc20e41b1602d4a903e3b81545fe264153952b" translate="yes" xml:space="preserve">
          <source>bitraverse_</source>
          <target state="translated">bitraverse_</target>
        </trans-unit>
        <trans-unit id="c67c5efdc2fb478f5d6eaa531d34dacb35b2aa54" translate="yes" xml:space="preserve">
          <source>bitsPerByte</source>
          <target state="translated">bitsPerByte</target>
        </trans-unit>
        <trans-unit id="466bc8cef3e71de796ec483e212724a2c2044c68" translate="yes" xml:space="preserve">
          <source>black</source>
          <target state="translated">black</target>
        </trans-unit>
        <trans-unit id="60d29353c548076df7ce403daf2a3a3ff091c606" translate="yes" xml:space="preserve">
          <source>blinkOn</source>
          <target state="translated">blinkOn</target>
        </trans-unit>
        <trans-unit id="8c03fa81530fa88970984b1a0c79ec859e2c702e" translate="yes" xml:space="preserve">
          <source>block-buffering should be enabled if possible. The size of the buffer is &lt;code&gt;n&lt;/code&gt; items if the argument is &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n&lt;/code&gt; and is otherwise implementation-dependent.</source>
          <target state="translated">如果可能，应启用块缓冲。如果参数为 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; ，则缓冲区的大小为 &lt;code&gt;n&lt;/code&gt; 个项目，否则取决于实现。</target>
        </trans-unit>
        <trans-unit id="e668da813e97838b006722f2da086b33c066dade" translate="yes" xml:space="preserve">
          <source>blockSignals</source>
          <target state="translated">blockSignals</target>
        </trans-unit>
        <trans-unit id="3a8ab176f6fef0aec3e420069e2fe7c9c2a57a7e" translate="yes" xml:space="preserve">
          <source>blockSpecialMode</source>
          <target state="translated">blockSpecialMode</target>
        </trans-unit>
        <trans-unit id="1a3cfcc06eb933877eb9d63aafcffb543003bf49" translate="yes" xml:space="preserve">
          <source>blocked in &lt;code&gt;&lt;a href=&quot;ghc-conc#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; in an STM transaction</source>
          <target state="translated">在STM事务中 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; 被阻止</target>
        </trans-unit>
        <trans-unit id="4b458cca74ee2ebc6a4db1ef2649113a9a049e6c" translate="yes" xml:space="preserve">
          <source>blocked in &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; 中受阻</target>
        </trans-unit>
        <trans-unit id="2ef0967ab62e7b5d89ef6f0e5505ba0c012bda43" translate="yes" xml:space="preserve">
          <source>blocked in &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; in an STM transaction</source>
          <target state="translated">在STM事务中 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; 被阻止</target>
        </trans-unit>
        <trans-unit id="ee0692aac9f4a251bbef387d2c98555ea0e5df20" translate="yes" xml:space="preserve">
          <source>blocked in &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:throwTo&quot;&gt;throwTo&lt;/a&gt;&lt;/code&gt; 中受阻</target>
        </trans-unit>
        <trans-unit id="9e4d5ed88b7a68f566cc6c298e0f7dc28167fdaa" translate="yes" xml:space="preserve">
          <source>blocked on &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">在 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 上被阻止</target>
        </trans-unit>
        <trans-unit id="9fef80421afacb8764fb2c931f4a76a24807fe7c" translate="yes" xml:space="preserve">
          <source>blocked on a computation in progress by another thread</source>
          <target state="translated">被另一个线程阻断了正在进行的计算。</target>
        </trans-unit>
        <trans-unit id="03c6d1bb3e10cf1235712ad13571fa1cd1831094" translate="yes" xml:space="preserve">
          <source>blocked on some other resource. Without &lt;code&gt;-threaded&lt;/code&gt;, I/O and &lt;code&gt;&lt;a href=&quot;control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; show up as &lt;code&gt;&lt;a href=&quot;ghc-conc#v:BlockedOnOther&quot;&gt;BlockedOnOther&lt;/a&gt;&lt;/code&gt;, with &lt;code&gt;-threaded&lt;/code&gt; they show up as &lt;code&gt;&lt;a href=&quot;ghc-conc#v:BlockedOnMVar&quot;&gt;BlockedOnMVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在其他资源上受阻。如果没有 &lt;code&gt;-threaded&lt;/code&gt; ，则I / O和 &lt;code&gt;&lt;a href=&quot;control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 显示为 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:BlockedOnOther&quot;&gt;BlockedOnOther&lt;/a&gt;&lt;/code&gt; ，带有 &lt;code&gt;-threaded&lt;/code&gt; 它们显示为 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:BlockedOnMVar&quot;&gt;BlockedOnMVar&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be8ee791a9fd7af0661051d665f073f86ad9e43c" translate="yes" xml:space="preserve">
          <source>blocked on some other resource. Without &lt;code&gt;-threaded&lt;/code&gt;, I/O and &lt;code&gt;&lt;a href=&quot;control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; show up as &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:BlockedOnOther&quot;&gt;BlockedOnOther&lt;/a&gt;&lt;/code&gt;, with &lt;code&gt;-threaded&lt;/code&gt; they show up as &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:BlockedOnMVar&quot;&gt;BlockedOnMVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在其他资源上受阻。如果没有 &lt;code&gt;-threaded&lt;/code&gt; ，则I / O和 &lt;code&gt;&lt;a href=&quot;control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 显示为 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:BlockedOnOther&quot;&gt;BlockedOnOther&lt;/a&gt;&lt;/code&gt; ，带有 &lt;code&gt;-threaded&lt;/code&gt; 它们显示为 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:BlockedOnMVar&quot;&gt;BlockedOnMVar&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e6fc9362ca2e45aa7bd77a685707feb2b92933b" translate="yes" xml:space="preserve">
          <source>blockedIndefinitelyOnMVar</source>
          <target state="translated">blockedIndefinitelyOnMVar</target>
        </trans-unit>
        <trans-unit id="647b5031324a2251ea98c4d4e217da52a82c7e59" translate="yes" xml:space="preserve">
          <source>blockedIndefinitelyOnSTM</source>
          <target state="translated">blockedIndefinitelyOnSTM</target>
        </trans-unit>
        <trans-unit id="d24b75a957050595c2319d425fbd397e899427ec" translate="yes" xml:space="preserve">
          <source>blockquote</source>
          <target state="translated">blockquote</target>
        </trans-unit>
        <trans-unit id="4c9a82ce72ca2519f38d0af0abbb4cecb9fceca9" translate="yes" xml:space="preserve">
          <source>blue</source>
          <target state="translated">blue</target>
        </trans-unit>
        <trans-unit id="02083f4579e08a612425c0c1a17ee47add783b94" translate="yes" xml:space="preserve">
          <source>body</source>
          <target state="translated">body</target>
        </trans-unit>
        <trans-unit id="c9b76ae79584aabfa8a92e1e354d651804860118" translate="yes" xml:space="preserve">
          <source>bold</source>
          <target state="translated">bold</target>
        </trans-unit>
        <trans-unit id="feb9386c3676f9b299e2b0aa2ca0d6033c56cffd" translate="yes" xml:space="preserve">
          <source>boldOn</source>
          <target state="translated">boldOn</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">bool</target>
        </trans-unit>
        <trans-unit id="ca6bcd4b6f3fa92d735fdb206a49d381884c3cef" translate="yes" xml:space="preserve">
          <source>border</source>
          <target state="translated">border</target>
        </trans-unit>
        <trans-unit id="59a4b9e6228e6e3d4d2842cea9160e451ed39163" translate="yes" xml:space="preserve">
          <source>bordercolor</source>
          <target state="translated">bordercolor</target>
        </trans-unit>
        <trans-unit id="5e22e3adf26d9672e0b3b848a45230d5d96c960b" translate="yes" xml:space="preserve">
          <source>bos@serpentine.com</source>
          <target state="translated">bos@serpentine.com</target>
        </trans-unit>
        <trans-unit id="947d9eec1d9e17ca88c1a507604a37a6a9e14fa2" translate="yes" xml:space="preserve">
          <source>boudedPrim</source>
          <target state="translated">boudedPrim</target>
        </trans-unit>
        <trans-unit id="b698c8315acce0009e57ae5e50d30d91e77c2459" translate="yes" xml:space="preserve">
          <source>boundedEnumFrom</source>
          <target state="translated">boundedEnumFrom</target>
        </trans-unit>
        <trans-unit id="d155369f40a9c520107068acb2b2efff38f040f7" translate="yes" xml:space="preserve">
          <source>boundedEnumFromThen</source>
          <target state="translated">boundedEnumFromThen</target>
        </trans-unit>
        <trans-unit id="94ae97ff8e7caaef3f4646cca3cdf56f523b799b" translate="yes" xml:space="preserve">
          <source>bounds</source>
          <target state="translated">bounds</target>
        </trans-unit>
        <trans-unit id="0c39cf962add85c15f0693ae6684c19434e7509c" translate="yes" xml:space="preserve">
          <source>bounds of the array</source>
          <target state="translated">数组边界</target>
        </trans-unit>
        <trans-unit id="035d1f5c3f82815844336c8dc46648d69ea3aac2" translate="yes" xml:space="preserve">
          <source>bounds of the array: (lowest,highest)</source>
          <target state="translated">阵列的边界。(最低,最高)</target>
        </trans-unit>
        <trans-unit id="d4dda18982581582ca4eb6fb862ad6e391324be9" translate="yes" xml:space="preserve">
          <source>boundsIOArray</source>
          <target state="translated">boundsIOArray</target>
        </trans-unit>
        <trans-unit id="73130e22338dc39a2ee3d8079e2c92b6df721b38" translate="yes" xml:space="preserve">
          <source>boundsSTArray</source>
          <target state="translated">boundsSTArray</target>
        </trans-unit>
        <trans-unit id="3eb65786145ecb71e9dcbb3a09f06a0b3a6c4d2d" translate="yes" xml:space="preserve">
          <source>br</source>
          <target state="translated">br</target>
        </trans-unit>
        <trans-unit id="2ea6e7765da8a68f0740fc35a42e62536c4e7a49" translate="yes" xml:space="preserve">
          <source>braces</source>
          <target state="translated">braces</target>
        </trans-unit>
        <trans-unit id="d9cf7bae3e32689207fbb729502dce6c2594d435" translate="yes" xml:space="preserve">
          <source>bracket</source>
          <target state="translated">bracket</target>
        </trans-unit>
        <trans-unit id="307b635fa4a82e04516c9b88c97fb56c4d4d5b2e" translate="yes" xml:space="preserve">
          <source>bracketOnError</source>
          <target state="translated">bracketOnError</target>
        </trans-unit>
        <trans-unit id="30a0f76a1e0510c01e519f3ddc2c7a53bfd41a55" translate="yes" xml:space="preserve">
          <source>bracket_</source>
          <target state="translated">bracket_</target>
        </trans-unit>
        <trans-unit id="1fca73619e0fadc22283215d66313bca79d5d907" translate="yes" xml:space="preserve">
          <source>brackets</source>
          <target state="translated">brackets</target>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="647015cef116a6dcef93d746f538bf677fc08faf" translate="yes" xml:space="preserve">
          <source>breakByte</source>
          <target state="translated">breakByte</target>
        </trans-unit>
        <trans-unit id="bb351ddeb0c5eb7708d9d16b892e1013899c2cd0" translate="yes" xml:space="preserve">
          <source>breakEnd</source>
          <target state="translated">breakEnd</target>
        </trans-unit>
        <trans-unit id="5dbcd84e3ba9851b4dfd6b0cbfaf219322194999" translate="yes" xml:space="preserve">
          <source>breakEnd p == spanEnd (not.p)</source>
          <target state="translated">breakEnd p ==spanEnd (not.p)</target>
        </trans-unit>
        <trans-unit id="8ac50092b9faadb7a21587c88e2223c2042d85e8" translate="yes" xml:space="preserve">
          <source>breakOn</source>
          <target state="translated">breakOn</target>
        </trans-unit>
        <trans-unit id="dde305388d79e3119a17b797e35c243e016a7863" translate="yes" xml:space="preserve">
          <source>breakOnAll</source>
          <target state="translated">breakOnAll</target>
        </trans-unit>
        <trans-unit id="e0889af8fba6b99d481a64221abd0110c16092e0" translate="yes" xml:space="preserve">
          <source>breakOnEnd</source>
          <target state="translated">breakOnEnd</target>
        </trans-unit>
        <trans-unit id="f1164b9be6cf161053e20ed2a0a1469e4f1fccae" translate="yes" xml:space="preserve">
          <source>breakSubstring</source>
          <target state="translated">breakSubstring</target>
        </trans-unit>
        <trans-unit id="6ad9d0eb16a0d91201f394641dcbeefb45aaa4f0" translate="yes" xml:space="preserve">
          <source>breakl</source>
          <target state="translated">breakl</target>
        </trans-unit>
        <trans-unit id="5c0a31c48cda57c40dc61b785110d76593834ffd" translate="yes" xml:space="preserve">
          <source>breakpoint</source>
          <target state="translated">breakpoint</target>
        </trans-unit>
        <trans-unit id="0faad972c4d49eb7aeabcca04600dc88750e45d1" translate="yes" xml:space="preserve">
          <source>breakpointCond</source>
          <target state="translated">breakpointCond</target>
        </trans-unit>
        <trans-unit id="42f949ebf7707c0cc33ac60829d055d22202f26d" translate="yes" xml:space="preserve">
          <source>breakpointTrap</source>
          <target state="translated">breakpointTrap</target>
        </trans-unit>
        <trans-unit id="f6972f0c09b3ccb2d1d36848183955b916518fc2" translate="yes" xml:space="preserve">
          <source>breakr</source>
          <target state="translated">breakr</target>
        </trans-unit>
        <trans-unit id="d09ff50b21c9360d929b7473db3db3bbd1a7627e" translate="yes" xml:space="preserve">
          <source>bringWindowToTop</source>
          <target state="translated">bringWindowToTop</target>
        </trans-unit>
        <trans-unit id="74aafe1c7d81f24dd215b4f01ab70fb6e29031d9" translate="yes" xml:space="preserve">
          <source>broadcastDoubleX2#</source>
          <target state="translated">broadcastDoubleX2#</target>
        </trans-unit>
        <trans-unit id="63d6817f5a9ec6801ca086149d3af70d5ccd5882" translate="yes" xml:space="preserve">
          <source>broadcastDoubleX4#</source>
          <target state="translated">broadcastDoubleX4#</target>
        </trans-unit>
        <trans-unit id="1215e0e42bfb55598f0176c6f8c03812fbe4492a" translate="yes" xml:space="preserve">
          <source>broadcastDoubleX8#</source>
          <target state="translated">broadcastDoubleX8#</target>
        </trans-unit>
        <trans-unit id="9b254f70589ac1be62926e147eb313bce30a8e6c" translate="yes" xml:space="preserve">
          <source>broadcastFloatX16#</source>
          <target state="translated">broadcastFloatX16#</target>
        </trans-unit>
        <trans-unit id="ddcfb3a993f42d0e3b65e83b04fc8529ae252424" translate="yes" xml:space="preserve">
          <source>broadcastFloatX4#</source>
          <target state="translated">broadcastFloatX4#</target>
        </trans-unit>
        <trans-unit id="c80f6b27beddba7b286bf3300e769c6774b4599c" translate="yes" xml:space="preserve">
          <source>broadcastFloatX8#</source>
          <target state="translated">broadcastFloatX8#</target>
        </trans-unit>
        <trans-unit id="c74cec1340041141d80306ed1b490eecd2f96e33" translate="yes" xml:space="preserve">
          <source>broadcastInt16X16#</source>
          <target state="translated">broadcastInt16X16#</target>
        </trans-unit>
        <trans-unit id="34423d28137c8985d1e0e2699308d437c126e343" translate="yes" xml:space="preserve">
          <source>broadcastInt16X32#</source>
          <target state="translated">broadcastInt16X32#</target>
        </trans-unit>
        <trans-unit id="8ac3ec7b7969b8910cdd9f4272327246a601c59b" translate="yes" xml:space="preserve">
          <source>broadcastInt16X8#</source>
          <target state="translated">broadcastInt16X8#</target>
        </trans-unit>
        <trans-unit id="1460c9f74fe37317b17f6a9b53e3aa44f4977a3f" translate="yes" xml:space="preserve">
          <source>broadcastInt32X16#</source>
          <target state="translated">broadcastInt32X16#</target>
        </trans-unit>
        <trans-unit id="c239ce88b06c99d46ff22a32438b1b1d88fc043e" translate="yes" xml:space="preserve">
          <source>broadcastInt32X4#</source>
          <target state="translated">broadcastInt32X4#</target>
        </trans-unit>
        <trans-unit id="1f55cec90a47d73991ab6c4bee843bc4aa0ebbd9" translate="yes" xml:space="preserve">
          <source>broadcastInt32X8#</source>
          <target state="translated">broadcastInt32X8#</target>
        </trans-unit>
        <trans-unit id="cef5457525c2e39e95446698488166493f89ace0" translate="yes" xml:space="preserve">
          <source>broadcastInt64X2#</source>
          <target state="translated">broadcastInt64X2#</target>
        </trans-unit>
        <trans-unit id="f7e6147cabba9fcca7f6e64a3b2fc269970844e8" translate="yes" xml:space="preserve">
          <source>broadcastInt64X4#</source>
          <target state="translated">broadcastInt64X4#</target>
        </trans-unit>
        <trans-unit id="de1e8f03b9ca19a46053b21a06b051c951b5201d" translate="yes" xml:space="preserve">
          <source>broadcastInt64X8#</source>
          <target state="translated">broadcastInt64X8#</target>
        </trans-unit>
        <trans-unit id="157956f186898ccba72152a6eacccb860e9e2da7" translate="yes" xml:space="preserve">
          <source>broadcastInt8X16#</source>
          <target state="translated">broadcastInt8X16#</target>
        </trans-unit>
        <trans-unit id="685d30a6d77cac9b66f2237565b5f83a3066f4e9" translate="yes" xml:space="preserve">
          <source>broadcastInt8X32#</source>
          <target state="translated">broadcastInt8X32#</target>
        </trans-unit>
        <trans-unit id="2053d16b339325f34b99bd9a19e2f2638c1690cc" translate="yes" xml:space="preserve">
          <source>broadcastInt8X64#</source>
          <target state="translated">broadcastInt8X64#</target>
        </trans-unit>
        <trans-unit id="af2562260824a919e26732a26b16ee6ef8720d1a" translate="yes" xml:space="preserve">
          <source>broadcastWord16X16#</source>
          <target state="translated">broadcastWord16X16#</target>
        </trans-unit>
        <trans-unit id="30053d62bc47255f9c0aa56774016bc8aeb544c0" translate="yes" xml:space="preserve">
          <source>broadcastWord16X32#</source>
          <target state="translated">broadcastWord16X32#</target>
        </trans-unit>
        <trans-unit id="57abfba37ea14b99ad1f92b57772e2e9daea93a9" translate="yes" xml:space="preserve">
          <source>broadcastWord16X8#</source>
          <target state="translated">broadcastWord16X8#</target>
        </trans-unit>
        <trans-unit id="cc5973158097fc0b077220c4301d1a391c4d0000" translate="yes" xml:space="preserve">
          <source>broadcastWord32X16#</source>
          <target state="translated">broadcastWord32X16#</target>
        </trans-unit>
        <trans-unit id="5a804f9203f36b7979e353c5fece0a1a0314cfbe" translate="yes" xml:space="preserve">
          <source>broadcastWord32X4#</source>
          <target state="translated">broadcastWord32X4#</target>
        </trans-unit>
        <trans-unit id="40339e3e3f26d453fa26e53dfa4f7701fe47d8ca" translate="yes" xml:space="preserve">
          <source>broadcastWord32X8#</source>
          <target state="translated">broadcastWord32X8#</target>
        </trans-unit>
        <trans-unit id="010946db4f52155ca921d73113e8bc272e6f6845" translate="yes" xml:space="preserve">
          <source>broadcastWord64X2#</source>
          <target state="translated">broadcastWord64X2#</target>
        </trans-unit>
        <trans-unit id="bf6156f27d3496b998b6c6957e4611f855331b03" translate="yes" xml:space="preserve">
          <source>broadcastWord64X4#</source>
          <target state="translated">broadcastWord64X4#</target>
        </trans-unit>
        <trans-unit id="85b93297f99957e5cae3662948f9677e67eb70a6" translate="yes" xml:space="preserve">
          <source>broadcastWord64X8#</source>
          <target state="translated">broadcastWord64X8#</target>
        </trans-unit>
        <trans-unit id="c8f00a19b5e2650ec5a76c477905cb6a653fcd6f" translate="yes" xml:space="preserve">
          <source>broadcastWord8X16#</source>
          <target state="translated">broadcastWord8X16#</target>
        </trans-unit>
        <trans-unit id="fc384f902a640258e8ca782118ce495482c5707f" translate="yes" xml:space="preserve">
          <source>broadcastWord8X32#</source>
          <target state="translated">broadcastWord8X32#</target>
        </trans-unit>
        <trans-unit id="e148f2b91ca43e3e3bd840e6c775dc85cc399e97" translate="yes" xml:space="preserve">
          <source>broadcastWord8X64#</source>
          <target state="translated">broadcastWord8X64#</target>
        </trans-unit>
        <trans-unit id="02c6a1392c6b62692e1eee293c8712760a0a8f9f" translate="yes" xml:space="preserve">
          <source>bufferAdd</source>
          <target state="translated">bufferAdd</target>
        </trans-unit>
        <trans-unit id="314fd2c1da9633676387fc532a750d5a7a2e2483" translate="yes" xml:space="preserve">
          <source>bufferAdjustL</source>
          <target state="translated">bufferAdjustL</target>
        </trans-unit>
        <trans-unit id="804e60dec5bf3baa370adb7a4e2f55397170f7f5" translate="yes" xml:space="preserve">
          <source>bufferAvailable</source>
          <target state="translated">bufferAvailable</target>
        </trans-unit>
        <trans-unit id="bc4fcfa8aa510f40f40d562e2bd3dcd60ab8f373" translate="yes" xml:space="preserve">
          <source>bufferElems</source>
          <target state="translated">bufferElems</target>
        </trans-unit>
        <trans-unit id="bbdb54a3f2f800aee40aac04d812145b3ab810ab" translate="yes" xml:space="preserve">
          <source>bufferFull</source>
          <target state="translated">bufferFull</target>
        </trans-unit>
        <trans-unit id="01811a4a566005a848b73961254192602fdf35a2" translate="yes" xml:space="preserve">
          <source>bufferRemove</source>
          <target state="translated">bufferRemove</target>
        </trans-unit>
        <trans-unit id="f75e94dcc92ecc309ef861e9a10fffb6b1a383af" translate="yes" xml:space="preserve">
          <source>bufferSize</source>
          <target state="translated">bufferSize</target>
        </trans-unit>
        <trans-unit id="d0e50b9f73179032f8ef20e9e5ea38f8c8b5002d" translate="yes" xml:space="preserve">
          <source>buffering is disabled if possible.</source>
          <target state="translated">如果可能的话,会禁用缓冲功能。</target>
        </trans-unit>
        <trans-unit id="be26a787c90559f48245b488d3dbfba2fed2d5f9" translate="yes" xml:space="preserve">
          <source>buffers of arbitrary size can be filled as efficiently as possible and</source>
          <target state="translated">可以尽可能有效地填充任意大小的缓冲区,而且</target>
        </trans-unit>
        <trans-unit id="80754af91bfb6d1073585b046fe0a474ce868509" translate="yes" xml:space="preserve">
          <source>build</source>
          <target state="translated">build</target>
        </trans-unit>
        <trans-unit id="cb6f37eb7c017e249f29fa4fe1fb3be7275091f1" translate="yes" xml:space="preserve">
          <source>buildExpressionParser</source>
          <target state="translated">buildExpressionParser</target>
        </trans-unit>
        <trans-unit id="50763ce2a712fbceea84df2467628a9a36d9e052" translate="yes" xml:space="preserve">
          <source>buildG</source>
          <target state="translated">buildG</target>
        </trans-unit>
        <trans-unit id="ea8036f479f7b06bae7f0450a66c6494ea41d585" translate="yes" xml:space="preserve">
          <source>buildIQ</source>
          <target state="translated">buildIQ</target>
        </trans-unit>
        <trans-unit id="327c341b9db9183689d27a73626c59b71ebad6ed" translate="yes" xml:space="preserve">
          <source>buildITQ</source>
          <target state="translated">buildITQ</target>
        </trans-unit>
        <trans-unit id="c310d8d320e447b126f572341a3b405dbf657e2a" translate="yes" xml:space="preserve">
          <source>buildQ</source>
          <target state="translated">buildQ</target>
        </trans-unit>
        <trans-unit id="03435087fd1fab08904c202ece7a4ca8b6518728" translate="yes" xml:space="preserve">
          <source>buildStepToCIOS</source>
          <target state="translated">buildStepToCIOS</target>
        </trans-unit>
        <trans-unit id="6ac174625a56d3fc922e6575e283403278c701a0" translate="yes" xml:space="preserve">
          <source>buildTQ</source>
          <target state="translated">buildTQ</target>
        </trans-unit>
        <trans-unit id="b925daa5390aaca223440f8c73bc51922086a8b3" translate="yes" xml:space="preserve">
          <source>buildTime (ParseTime)</source>
          <target state="translated">建立时间 (ParseTime)</target>
        </trans-unit>
        <trans-unit id="f52318a05e518a5596012af2ed38de68ac26a468" translate="yes" xml:space="preserve">
          <source>builder</source>
          <target state="translated">builder</target>
        </trans-unit>
        <trans-unit id="472da2b94e9fa87badd16a55e1eaec4f53ffc52a" translate="yes" xml:space="preserve">
          <source>bullet</source>
          <target state="translated">bullet</target>
        </trans-unit>
        <trans-unit id="d66610878b354c290456e14fdd5e248e9fb39567" translate="yes" xml:space="preserve">
          <source>busError</source>
          <target state="translated">busError</target>
        </trans-unit>
        <trans-unit id="786e97b3ee9fc4b292d5852c2c5943153c4ce91a" translate="yes" xml:space="preserve">
          <source>but</source>
          <target state="translated">but</target>
        </trans-unit>
        <trans-unit id="0cec57286b34d0614114a9365d86ab690decec82" translate="yes" xml:space="preserve">
          <source>but &lt;code&gt;dropMissing&lt;/code&gt; is much faster.</source>
          <target state="translated">但是 &lt;code&gt;dropMissing&lt;/code&gt; 快得多。</target>
        </trans-unit>
        <trans-unit id="07beaeb7c1392a0ca4aa9c8de58088957632d2e2" translate="yes" xml:space="preserve">
          <source>but &lt;code&gt;mapMaybeMissing&lt;/code&gt; uses fewer unnecessary &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; operations.</source>
          <target state="translated">但是 &lt;code&gt;mapMaybeMissing&lt;/code&gt; 使用较少的不必要的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="d008a6b5191ef99d20bdf54de09f636d2924bbb9" translate="yes" xml:space="preserve">
          <source>but &lt;code&gt;mapMissing&lt;/code&gt; is somewhat faster.</source>
          <target state="translated">但是 &lt;code&gt;mapMissing&lt;/code&gt; 更快。</target>
        </trans-unit>
        <trans-unit id="c5c40ed5ced647ba78ea92e7fac662335dae7c94" translate="yes" xml:space="preserve">
          <source>but &lt;code&gt;preserveMissing'&lt;/code&gt; is quite a bit faster.</source>
          <target state="translated">但 &lt;code&gt;preserveMissing'&lt;/code&gt; 的速度要快得多。</target>
        </trans-unit>
        <trans-unit id="8d4cf3717cdb570d302fa3093ea221e730ed6420" translate="yes" xml:space="preserve">
          <source>but &lt;code&gt;preserveMissing&lt;/code&gt; is much faster.</source>
          <target state="translated">但是 &lt;code&gt;preserveMissing&lt;/code&gt; 快得多。</target>
        </trans-unit>
        <trans-unit id="af15290cab46a1a5533df6d09e2d50b62314d2a4" translate="yes" xml:space="preserve">
          <source>but GHC&amp;rsquo;s implementation is strict in its first argument, so</source>
          <target state="translated">但GHC的实施在其第一个论点中很严格，因此</target>
        </trans-unit>
        <trans-unit id="ec4e388ca48cd7c2d1021877301c9ed12549dd61" translate="yes" xml:space="preserve">
          <source>but GHC's simplifier will transform an expression of the form &lt;code&gt;&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt; k z (&lt;a href=&quot;ghc-base#v:augment&quot;&gt;augment&lt;/a&gt; g xs)&lt;/code&gt;, which may arise after inlining, to &lt;code&gt;g k (&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt; k z xs)&lt;/code&gt;, which avoids producing an intermediate list.</source>
          <target state="translated">但GHC的简化程序会将内联后可能出现的 &lt;code&gt;&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt; k z (&lt;a href=&quot;ghc-base#v:augment&quot;&gt;augment&lt;/a&gt; g xs)&lt;/code&gt; 形式的表达式转换为 &lt;code&gt;g k (&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt; k z xs)&lt;/code&gt; ，避免了生成中间列表。</target>
        </trans-unit>
        <trans-unit id="3396347ce8b1e731386cdbf4f316a2b889338d14" translate="yes" xml:space="preserve">
          <source>but GHC's simplifier will transform an expression of the form &lt;code&gt;&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt; k z (&lt;a href=&quot;ghc-base#v:build&quot;&gt;build&lt;/a&gt; g)&lt;/code&gt;, which may arise after inlining, to &lt;code&gt;g k z&lt;/code&gt;, which avoids producing an intermediate list.</source>
          <target state="translated">但GHC的简化程序会将内联后可能出现的 &lt;code&gt;&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt; k z (&lt;a href=&quot;ghc-base#v:build&quot;&gt;build&lt;/a&gt; g)&lt;/code&gt; 形式的表达式转换为 &lt;code&gt;g k z&lt;/code&gt; ，从而避免产生中间列表。</target>
        </trans-unit>
        <trans-unit id="0ef46af6fba69590451eed62d92200adf06435c5" translate="yes" xml:space="preserve">
          <source>but GHC's simplifier will transform an expression of the form &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt; k z (&lt;a href=&quot;ghc-exts#v:augment&quot;&gt;augment&lt;/a&gt; g xs)&lt;/code&gt;, which may arise after inlining, to &lt;code&gt;g k (&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt; k z xs)&lt;/code&gt;, which avoids producing an intermediate list.</source>
          <target state="translated">但GHC的简化程序会将内联后可能出现的 &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt; k z (&lt;a href=&quot;ghc-exts#v:augment&quot;&gt;augment&lt;/a&gt; g xs)&lt;/code&gt; 形式的表达式转换为 &lt;code&gt;g k (&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt; k z xs)&lt;/code&gt; ，避免了生成中间列表。</target>
        </trans-unit>
        <trans-unit id="63afb6290be71c8fdadae83cdbb148785410727a" translate="yes" xml:space="preserve">
          <source>but GHC's simplifier will transform an expression of the form &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt; k z (&lt;a href=&quot;ghc-exts#v:build&quot;&gt;build&lt;/a&gt; g)&lt;/code&gt;, which may arise after inlining, to &lt;code&gt;g k z&lt;/code&gt;, which avoids producing an intermediate list.</source>
          <target state="translated">但GHC的简化程序会将内联后可能出现的 &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt; k z (&lt;a href=&quot;ghc-exts#v:build&quot;&gt;build&lt;/a&gt; g)&lt;/code&gt; 形式的表达式转换为 &lt;code&gt;g k z&lt;/code&gt; ，从而避免产生中间列表。</target>
        </trans-unit>
        <trans-unit id="926bad83e42a9877275102505bdabaca4177cd65" translate="yes" xml:space="preserve">
          <source>but making the pattern match lazy allows it to have a &lt;code&gt;Functor&lt;/code&gt; constraint:</source>
          <target state="translated">但使模式匹配延迟，使其具有 &lt;code&gt;Functor&lt;/code&gt; 约束：</target>
        </trans-unit>
        <trans-unit id="53615a45375a68601ba9f5406c6fad8ff2cc1879" translate="yes" xml:space="preserve">
          <source>but may be less defined.</source>
          <target state="translated">但可能不太明确。</target>
        </trans-unit>
        <trans-unit id="d897cb47300f919f3db89125dc297378bc87d742" translate="yes" xml:space="preserve">
          <source>but there may be code that uses this with other two-field record types.</source>
          <target state="translated">但可能会有一些代码将其用于其他双字段记录类型。</target>
        </trans-unit>
        <trans-unit id="fb6a4e6ffe20df8ffe717e66775f714a5da7bd00" translate="yes" xml:space="preserve">
          <source>but this should be a little faster.</source>
          <target state="translated">但这应该会更快一些。</target>
        </trans-unit>
        <trans-unit id="b67617862271b27c3fc166b90550fb53651e0f71" translate="yes" xml:space="preserve">
          <source>but works much faster, because it doesn't perform a complete transaction, it just reads the current value of the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">但工作得更快，因为它不会执行完整的事务，它只会读取 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 的当前值。</target>
        </trans-unit>
        <trans-unit id="e1ddaee3a67d000711ce04c6c2e3fe0d78221805" translate="yes" xml:space="preserve">
          <source>but works much faster, because it doesn't perform a complete transaction, it just reads the current value of the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">但工作得更快，因为它不会执行完整的事务，它只会读取 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 的当前值。</target>
        </trans-unit>
        <trans-unit id="bcb015480d8d6c55a55e849e1b88ad6e8cc917c7" translate="yes" xml:space="preserve">
          <source>but works much faster, because it doesn't perform a complete transaction, it just reads the current value of the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">但工作得更快，因为它不会执行完整的事务，它只会读取 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 的当前值。</target>
        </trans-unit>
        <trans-unit id="7b7fcc78d6cd1507925b769b1386ced3683f99c7" translate="yes" xml:space="preserve">
          <source>button</source>
          <target state="translated">button</target>
        </trans-unit>
        <trans-unit id="2d65cfeb8404b59df039a718005f38101d776002" translate="yes" xml:space="preserve">
          <source>by overriding &amp;ldquo;hooks&amp;rdquo; in the runtime system (&lt;a href=&quot;#rts-hooks&quot;&gt;&amp;ldquo;Hooks&amp;rdquo; to change RTS behaviour&lt;/a&gt;)</source>
          <target state="translated">通过覆盖运行时系统中的&lt;a href=&quot;#rts-hooks&quot;&gt;&amp;ldquo;挂钩&amp;rdquo;&lt;/a&gt;（&amp;ldquo;挂钩&amp;rdquo;以更改RTS行为）</target>
        </trans-unit>
        <trans-unit id="66d66d96094128eb6ac8a411be3a99e8739a5e28" translate="yes" xml:space="preserve">
          <source>byte swapping</source>
          <target state="translated">字节跳转</target>
        </trans-unit>
        <trans-unit id="338bc088920ca825272dc3bc76fe51623cc9b0e2" translate="yes" xml:space="preserve">
          <source>byteArrayContents#</source>
          <target state="translated">byteArrayContents#</target>
        </trans-unit>
        <trans-unit id="d34b97d35ab9647948ef67aa868fa8d3155e476d" translate="yes" xml:space="preserve">
          <source>byteArrayToBigNat#</source>
          <target state="translated">byteArrayToBigNat#</target>
        </trans-unit>
        <trans-unit id="e2288e164c0f7a7d6af803c0fe25059325c52836" translate="yes" xml:space="preserve">
          <source>byteString</source>
          <target state="translated">byteString</target>
        </trans-unit>
        <trans-unit id="7cb18c4342cc07f4cd416b6c0d4b8a9d3a256647" translate="yes" xml:space="preserve">
          <source>byteStringCopy</source>
          <target state="translated">byteStringCopy</target>
        </trans-unit>
        <trans-unit id="adc84ca2dc0bf19834267b226757d2aced408d94" translate="yes" xml:space="preserve">
          <source>byteStringFromBuffer</source>
          <target state="translated">byteStringFromBuffer</target>
        </trans-unit>
        <trans-unit id="e4fe955511d1e736eedb48834981d00d91bbaec1" translate="yes" xml:space="preserve">
          <source>byteStringHex</source>
          <target state="translated">byteStringHex</target>
        </trans-unit>
        <trans-unit id="99231b0f9c6ab3410db20deb9daed14c12d604a6" translate="yes" xml:space="preserve">
          <source>byteStringInsert</source>
          <target state="translated">byteStringInsert</target>
        </trans-unit>
        <trans-unit id="c15e5bda8e881570bbf8aa0f6a615e517555be52" translate="yes" xml:space="preserve">
          <source>byteStringThreshold</source>
          <target state="translated">byteStringThreshold</target>
        </trans-unit>
        <trans-unit id="d8125caa538689d2a9ca6e98470e4c985f4f3aac" translate="yes" xml:space="preserve">
          <source>byteSwap#</source>
          <target state="translated">byteSwap#</target>
        </trans-unit>
        <trans-unit id="1b42e2912d4f414306554554ed9bba7ade1979e8" translate="yes" xml:space="preserve">
          <source>byteSwap16</source>
          <target state="translated">byteSwap16</target>
        </trans-unit>
        <trans-unit id="650c996baa9b6ec00a271c5b00a6a7f046c995ea" translate="yes" xml:space="preserve">
          <source>byteSwap16#</source>
          <target state="translated">byteSwap16#</target>
        </trans-unit>
        <trans-unit id="ee7f8c714ba84310b5d018c101bb1aa238a5f32b" translate="yes" xml:space="preserve">
          <source>byteSwap32</source>
          <target state="translated">byteSwap32</target>
        </trans-unit>
        <trans-unit id="356e50f2d48d9477e03c8ce2d45fa09265644c7c" translate="yes" xml:space="preserve">
          <source>byteSwap32#</source>
          <target state="translated">byteSwap32#</target>
        </trans-unit>
        <trans-unit id="448b1f82191f941ec9b8b07013f398ee3d0e370b" translate="yes" xml:space="preserve">
          <source>byteSwap64</source>
          <target state="translated">byteSwap64</target>
        </trans-unit>
        <trans-unit id="9dde70aa4ed98dcefd34b290a826efc484aa0d09" translate="yes" xml:space="preserve">
          <source>byteSwap64#</source>
          <target state="translated">byteSwap64#</target>
        </trans-unit>
        <trans-unit id="2afff1c3a348776db29fa60fad2ba6a2fc92b49f" translate="yes" xml:space="preserve">
          <source>bytesRead</source>
          <target state="translated">bytesRead</target>
        </trans-unit>
        <trans-unit id="dbda19b8f3aeae2e081a51634e4fd3b0791f8db5" translate="yes" xml:space="preserve">
          <source>bytesToString</source>
          <target state="translated">bytesToString</target>
        </trans-unit>
        <trans-unit id="3828db0a2a8ee2f5ed42a09e8dcb1aedb1d46e2a" translate="yes" xml:space="preserve">
          <source>c2w</source>
          <target state="translated">c2w</target>
        </trans-unit>
        <trans-unit id="957e88eefe24ac7e452990ab86b39237f0687218" translate="yes" xml:space="preserve">
          <source>cApi</source>
          <target state="translated">cApi</target>
        </trans-unit>
        <trans-unit id="bcda615a6df7d29d62e8ff0269245de8d3c96b7f" translate="yes" xml:space="preserve">
          <source>cCall</source>
          <target state="translated">cCall</target>
        </trans-unit>
        <trans-unit id="8219f2cbdf7aa9a7ea5dd04a44e4afad78c40c04" translate="yes" xml:space="preserve">
          <source>cP_ACP</source>
          <target state="translated">cP_ACP</target>
        </trans-unit>
        <trans-unit id="868702805b25f0a82378b31e7bb983942ce3ff91" translate="yes" xml:space="preserve">
          <source>cP_MACCP</source>
          <target state="translated">cP_MACCP</target>
        </trans-unit>
        <trans-unit id="a42ae4336106404fc951c6daf19577fbb3c966e3" translate="yes" xml:space="preserve">
          <source>cP_OEMCP</source>
          <target state="translated">cP_OEMCP</target>
        </trans-unit>
        <trans-unit id="efafb88c2dc999b161a72b4f5411f6693c14faac" translate="yes" xml:space="preserve">
          <source>cREATE_ALWAYS</source>
          <target state="translated">cREATE_ALWAYS</target>
        </trans-unit>
        <trans-unit id="4c27887664e25cb028594ab74e125d63a79c76f2" translate="yes" xml:space="preserve">
          <source>cREATE_NEW</source>
          <target state="translated">cREATE_NEW</target>
        </trans-unit>
        <trans-unit id="80d8f3e0c9a80ea14c7112d6a363655e792216b4" translate="yes" xml:space="preserve">
          <source>cS_BYTEALIGNCLIENT</source>
          <target state="translated">cS_BYTEALIGNCLIENT</target>
        </trans-unit>
        <trans-unit id="86a0bec061923f5fb08cf0430f5cca8a36ba8c58" translate="yes" xml:space="preserve">
          <source>cS_BYTEALIGNWINDOW</source>
          <target state="translated">cS_BYTEALIGNWINDOW</target>
        </trans-unit>
        <trans-unit id="5cb71abe8cef7d20e0d1f293c5a654de12eff551" translate="yes" xml:space="preserve">
          <source>cS_CLASSDC</source>
          <target state="translated">cS_CLASSDC</target>
        </trans-unit>
        <trans-unit id="498d1dbdfd8c5a118c0510abd44c167e88598a82" translate="yes" xml:space="preserve">
          <source>cS_DBLCLKS</source>
          <target state="translated">cS_DBLCLKS</target>
        </trans-unit>
        <trans-unit id="ded7b7740257418adf22c8ee7e3746fb1a4c3cc7" translate="yes" xml:space="preserve">
          <source>cS_GLOBALCLASS</source>
          <target state="translated">cS_GLOBALCLASS</target>
        </trans-unit>
        <trans-unit id="e0aadb7ec41c9a2d2cbe9a7eee59bb886e71bb72" translate="yes" xml:space="preserve">
          <source>cS_HREDRAW</source>
          <target state="translated">cS_HREDRAW</target>
        </trans-unit>
        <trans-unit id="2099c06c637e8ca61760790572e8e4be83f111f5" translate="yes" xml:space="preserve">
          <source>cS_NOCLOSE</source>
          <target state="translated">cS_NOCLOSE</target>
        </trans-unit>
        <trans-unit id="e6e21ebf3f03c2bb21b7b2e395f4f2e107e18f18" translate="yes" xml:space="preserve">
          <source>cS_OWNDC</source>
          <target state="translated">cS_OWNDC</target>
        </trans-unit>
        <trans-unit id="eee1744a8f5952aa6f57a510d8f1a680fe8d80bf" translate="yes" xml:space="preserve">
          <source>cS_PARENTDC</source>
          <target state="translated">cS_PARENTDC</target>
        </trans-unit>
        <trans-unit id="e9893774e218e454739abe31db51c77606212061" translate="yes" xml:space="preserve">
          <source>cS_SAVEBITS</source>
          <target state="translated">cS_SAVEBITS</target>
        </trans-unit>
        <trans-unit id="d138b98018a93f2e34c22672088326e8a9dfbb48" translate="yes" xml:space="preserve">
          <source>cS_VREDRAW</source>
          <target state="translated">cS_VREDRAW</target>
        </trans-unit>
        <trans-unit id="3b5a504658b6519a7adad45c837e977191a1a3d2" translate="yes" xml:space="preserve">
          <source>cTRL_BREAK_EVENT</source>
          <target state="translated">cTRL_BREAK_EVENT</target>
        </trans-unit>
        <trans-unit id="9fbd654c0af623abcb005a5acddbe90352840612" translate="yes" xml:space="preserve">
          <source>cTRL_C_EVENT</source>
          <target state="translated">cTRL_C_EVENT</target>
        </trans-unit>
        <trans-unit id="fb331f8f51134212cdb30c33923702dcdcae7f1f" translate="yes" xml:space="preserve">
          <source>cW_USEDEFAULT</source>
          <target state="translated">cW_USEDEFAULT</target>
        </trans-unit>
        <trans-unit id="11129ce7ac8108c3f7565bfb7357a81506068527" translate="yes" xml:space="preserve">
          <source>c_AdjustWindowRect</source>
          <target state="translated">c_AdjustWindowRect</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
