<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="c7349a34435850bc973a75584dea2319034c0124" translate="yes" xml:space="preserve">
          <source>Renamer stats</source>
          <target state="translated">重命名器统计</target>
        </trans-unit>
        <trans-unit id="9e1ec92d4c65cbeb56b4afb5c7eb5b28b06150b9" translate="yes" xml:space="preserve">
          <source>Renaming files</source>
          <target state="translated">重命名文件</target>
        </trans-unit>
        <trans-unit id="57bb091db8c41259255e747c0ecd1b604c7e516e" translate="yes" xml:space="preserve">
          <source>Render a document with annotations, by interpreting the start and end of the annotations, as well as the text details in the context of a monad.</source>
          <target state="translated">渲染一个带有注释的文档,通过解释注释的开始和结束,以及单体背景下的文本细节。</target>
        </trans-unit>
        <trans-unit id="a9a4799c8dd61934677f0523fd77b9ce5a5bae56" translate="yes" xml:space="preserve">
          <source>Render a piece of HTML without adding a DOCTYPE declaration or root element. Does not add any extra whitespace.</source>
          <target state="translated">在不添加DOCTYPE声明或根元素的情况下渲染一段HTML。不添加任何额外的空白。</target>
        </trans-unit>
        <trans-unit id="d0396f6604a2cd217fc5188ee1468a23a68c8152" translate="yes" xml:space="preserve">
          <source>Render a piece of indented HTML without adding a DOCTYPE declaration or a root element. The indentation is done inside elements. This can change the meaning of the HTML document, and is mostly useful for debugging the HTML output. The implementation is inefficient, and you are normally better off using &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">呈现一段缩进的HTML，而不添加DOCTYPE声明或根元素。缩进在元素内部完成。这可以更改HTML文档的含义，并且对于调试HTML输出最有用。实现效率低下，通常最好使用 &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a89ea59d1fabd252ac4ff35ea0e42758d3ed5fc6" translate="yes" xml:space="preserve">
          <source>Render a piece of indented HTML without adding a DOCTYPE declaration or a root element. The indentation is done inside elements. This can change the meaning of the HTML document, and is mostly useful for debugging the HTML output. The implementation is inefficient, and you are normally better off using &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">呈现一段缩进的HTML，而不添加DOCTYPE声明或根元素。缩进在元素内部完成。这可以更改HTML文档的含义，并且对于调试HTML输出最有用。实现效率低下，通常最好使用 &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d0f0aa368898e42e42051599ad438bce930756e" translate="yes" xml:space="preserve">
          <source>Render a piece of indented HTML without adding a DOCTYPE declaration or a root element. The indentation is done inside elements. This can change the meaning of the HTML document, and is mostly useful for debugging the HTML output. The implementation is inefficient, and you are normally better off using &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">呈现一段缩进的HTML，而不添加DOCTYPE声明或根元素。缩进在元素内部完成。这可以更改HTML文档的含义，并且对于调试HTML输出最有用。实现效率低下，通常最好使用 &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71fee5123224c152c3f87461295917f353b82c69" translate="yes" xml:space="preserve">
          <source>Render a piece of indented HTML without adding a DOCTYPE declaration or root element. Only adds whitespace where it does not change the meaning of the document.</source>
          <target state="translated">在不添加DOCTYPE声明或根元素的情况下渲染一段缩进的HTML。只在不改变文档含义的地方添加空白。</target>
        </trans-unit>
        <trans-unit id="989a09007121599919344bf188e1cc94bb96ae11" translate="yes" xml:space="preserve">
          <source>Render a stacktrace as a string</source>
          <target state="translated">将一个堆栈跟踪以字符串的形式呈现出来</target>
        </trans-unit>
        <trans-unit id="1c7773afe751d705bbb0bab378fcfc6c481f0947" translate="yes" xml:space="preserve">
          <source>Render an annotated &lt;code&gt;Doc&lt;/code&gt; to a String and list of annotations (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#t:Span&quot;&gt;Span&lt;/a&gt;&lt;/code&gt;) using the default &lt;code&gt;Style&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">使用默认的 &lt;code&gt;Style&lt;/code&gt; （请参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; ）将带注释的 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串和注释列表（请参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#t:Span&quot;&gt;Span&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9f470695f470e172217ac5b861bd07c99096b4a5" translate="yes" xml:space="preserve">
          <source>Render an annotated &lt;code&gt;Doc&lt;/code&gt; to a String and list of annotations (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Span&quot;&gt;Span&lt;/a&gt;&lt;/code&gt;) using the default &lt;code&gt;Style&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">使用默认的 &lt;code&gt;Style&lt;/code&gt; （请参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; ）将带注释的 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串和注释列表（请参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Span&quot;&gt;Span&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="92ba9e1fab478804fa747870260b0ff064c15ae9" translate="yes" xml:space="preserve">
          <source>Render out a String, interpreting the annotations as part of the resulting document.</source>
          <target state="translated">渲染出一个字符串,将注释解释为生成文档的一部分。</target>
        </trans-unit>
        <trans-unit id="74c43db33234ecef01eb99606404a4b48f7d70ce" translate="yes" xml:space="preserve">
          <source>Render the &lt;code&gt;Doc&lt;/code&gt; to a String using the default &lt;code&gt;Style&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">使用默认的 &lt;code&gt;Style&lt;/code&gt; （参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; ）将 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串。</target>
        </trans-unit>
        <trans-unit id="3f8842d2196fa6bcd3a6003035321861d97ea702" translate="yes" xml:space="preserve">
          <source>Render the &lt;code&gt;Doc&lt;/code&gt; to a String using the default &lt;code&gt;Style&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">使用默认的 &lt;code&gt;Style&lt;/code&gt; （参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; ）将 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串。</target>
        </trans-unit>
        <trans-unit id="87d0d1bd7f492f89f6856659a698622e65a18512" translate="yes" xml:space="preserve">
          <source>Render the &lt;code&gt;Doc&lt;/code&gt; to a String using the default &lt;code&gt;Style&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">使用默认的 &lt;code&gt;Style&lt;/code&gt; （参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; ）将 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串。</target>
        </trans-unit>
        <trans-unit id="12f0d532a812bfd8c1a9dcc5e2d9fb2fc2e469b9" translate="yes" xml:space="preserve">
          <source>Render the &lt;code&gt;Doc&lt;/code&gt; to a String using the given &lt;code&gt;Style&lt;/code&gt;.</source>
          <target state="translated">使用给定的 &lt;code&gt;Style&lt;/code&gt; 将 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串。</target>
        </trans-unit>
        <trans-unit id="e263a3336086d5999e51a2639cfc00cf3424c6ff" translate="yes" xml:space="preserve">
          <source>Render this exception value in a human-friendly manner.</source>
          <target state="translated">以人性化的方式渲染这个异常值。</target>
        </trans-unit>
        <trans-unit id="e066e80468f5234a1001137061731ae39a651ab5" translate="yes" xml:space="preserve">
          <source>Rendering</source>
          <target state="translated">Rendering</target>
        </trans-unit>
        <trans-unit id="34a6e257033eabcb340989811be4abac8f495cec" translate="yes" xml:space="preserve">
          <source>Rendering documents</source>
          <target state="translated">渲染文件</target>
        </trans-unit>
        <trans-unit id="c4352059e23f7c8b5fdeb527b42173ae6cff8abe" translate="yes" xml:space="preserve">
          <source>Rendering mode.</source>
          <target state="translated">渲染模式。</target>
        </trans-unit>
        <trans-unit id="edcebf7a78fe981d04d9e64e593c132261b8c07d" translate="yes" xml:space="preserve">
          <source>Rendering with a particular style</source>
          <target state="translated">用特定的风格进行渲染</target>
        </trans-unit>
        <trans-unit id="7db65b43576bf07e08468b53aec04cf679691cd8" translate="yes" xml:space="preserve">
          <source>Rep (Generic)</source>
          <target state="translated">代表(通用)</target>
        </trans-unit>
        <trans-unit id="25e90fd26c391e05ac5ac88ef33690eb193fa404" translate="yes" xml:space="preserve">
          <source>Rep1 (Generic1)</source>
          <target state="translated">Rep1(通用1)</target>
        </trans-unit>
        <trans-unit id="c55c5386c4748e58caec034acfad7a9a0f8d3a82" translate="yes" xml:space="preserve">
          <source>Repeat a value &lt;code&gt;n&lt;/code&gt; times.</source>
          <target state="translated">重复一个值 &lt;code&gt;n&lt;/code&gt; 次。</target>
        </trans-unit>
        <trans-unit id="13ca240f053ae4ac28b651b1633ebe58645ee9c6" translate="yes" xml:space="preserve">
          <source>Repeat an action indefinitely.</source>
          <target state="translated">无限期地重复一个动作。</target>
        </trans-unit>
        <trans-unit id="180241f79b869b03862e97b4f7229351a6acf267" translate="yes" xml:space="preserve">
          <source>Repeat the previous command.</source>
          <target state="translated">重复之前的命令。</target>
        </trans-unit>
        <trans-unit id="b4c2e50efbac27b5756172990043eab9f749caef" translate="yes" xml:space="preserve">
          <source>Repeated indices in the association list are handled as for &lt;code&gt;&lt;a href=&quot;data-array#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt;: Haskell 2010 specifies that the resulting array is undefined (i.e. bottom), but GHC's implementation uses the last association for each index.</source>
          <target state="translated">关联列表中重复的索引的处理方式与 &lt;code&gt;&lt;a href=&quot;data-array#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt; ：Haskell 2010指定结果数组未定义（即底部），但是GHC的实现对每个索引使用最后一个关联。</target>
        </trans-unit>
        <trans-unit id="061f8bc61cf8ff462c0933d83acdae1674118907" translate="yes" xml:space="preserve">
          <source>Repeated indices in the association list are handled as for &lt;code&gt;&lt;a href=&quot;ghc-arr#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt;: Haskell 2010 specifies that the resulting array is undefined (i.e. bottom), but GHC's implementation uses the last association for each index.</source>
          <target state="translated">关联列表中重复的索引的处理方式与 &lt;code&gt;&lt;a href=&quot;ghc-arr#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt; ：Haskell 2010指定结果数组未定义（即底部），但是GHC的实现对每个索引使用最后一个关联。</target>
        </trans-unit>
        <trans-unit id="711ba373a79d31376784182b72065d953222072d" translate="yes" xml:space="preserve">
          <source>Repetition</source>
          <target state="translated">Repetition</target>
        </trans-unit>
        <trans-unit id="203954ef3852cad427fc7bba8f24e8bfd55318a5" translate="yes" xml:space="preserve">
          <source>Replace all extensions of a file with a new extension. Note that &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; both work for adding multiple extensions, so only required when you need to drop all extensions first.</source>
          <target state="translated">用新扩展名替换文件的所有扩展名。请注意， &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; 都可用于添加多个扩展名，因此仅在需要首先删除所有扩展名时才需要。</target>
        </trans-unit>
        <trans-unit id="72c284911c0f562af8d743e9793ca8e8ff29667d" translate="yes" xml:space="preserve">
          <source>Replace all extensions of a file with a new extension. Note that &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; both work for adding multiple extensions, so only required when you need to drop all extensions first.</source>
          <target state="translated">用新扩展名替换文件的所有扩展名。请注意， &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; 都可用于添加多个扩展名，因此仅在需要首先删除所有扩展名时才需要。</target>
        </trans-unit>
        <trans-unit id="4c0823f4847d545567dd8302135788f079ea55c4" translate="yes" xml:space="preserve">
          <source>Replace all locations in the input with the same value. The default definition is &lt;code&gt;&lt;a href=&quot;control-monad#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;, but this may be overridden with a more efficient version.</source>
          <target state="translated">用相同的值替换输入中的所有位置。默认定义是 &lt;code&gt;&lt;a href=&quot;control-monad#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ，但是可以使用更有效的版本来覆盖。</target>
        </trans-unit>
        <trans-unit id="8ae954cfcce8d05d3d28022faa1cefad196caa67" translate="yes" xml:space="preserve">
          <source>Replace all locations in the input with the same value. The default definition is &lt;code&gt;&lt;a href=&quot;control-monad-instances#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;, but this may be overridden with a more efficient version.</source>
          <target state="translated">用相同的值替换输入中的所有位置。默认定义为 &lt;code&gt;&lt;a href=&quot;control-monad-instances#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ，但是可以使用更有效的版本来覆盖。</target>
        </trans-unit>
        <trans-unit id="bc970150dc79b794321f0edff04417f225cb5aef" translate="yes" xml:space="preserve">
          <source>Replace all locations in the input with the same value. The default definition is &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;, but this may be overridden with a more efficient version.</source>
          <target state="translated">用相同的值替换输入中的所有位置。默认定义为 &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ，但是可以使用更有效的版本来覆盖。</target>
        </trans-unit>
        <trans-unit id="a81c2807ba345abe34a825bdb92d7f1c4f392afa" translate="yes" xml:space="preserve">
          <source>Replace all locations in the input with the same value. The default definition is &lt;code&gt;&lt;a href=&quot;ghc-base#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;ghc-base#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;, but this may be overridden with a more efficient version.</source>
          <target state="translated">用相同的值替换输入中的所有位置。默认定义为 &lt;code&gt;&lt;a href=&quot;ghc-base#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;ghc-base#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ，但是可以使用更有效的版本来覆盖。</target>
        </trans-unit>
        <trans-unit id="f677b5ab54ec7700f8aa112431fe1d686734e1e1" translate="yes" xml:space="preserve">
          <source>Replace all locations in the input with the same value. The default definition is &lt;code&gt;&lt;a href=&quot;prelude#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;prelude#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;, but this may be overridden with a more efficient version.</source>
          <target state="translated">用相同的值替换输入中的所有位置。默认定义为 &lt;code&gt;&lt;a href=&quot;prelude#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;prelude#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ，但是可以使用更有效的版本来覆盖。</target>
        </trans-unit>
        <trans-unit id="01390d4b3f68ac20f556d360b5e40d6cc51b0423" translate="yes" xml:space="preserve">
          <source>Replace all locations in the output with the same value. The default definition is &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;, but this may be overridden with a more efficient version.</source>
          <target state="translated">用相同的值替换输出中的所有位置。默认定义是 &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ，但是可以使用更有效的版本来覆盖。</target>
        </trans-unit>
        <trans-unit id="98d97ae2c4e41287d8c7c06782fc94f17ade6313" translate="yes" xml:space="preserve">
          <source>Replace an invalid input byte with the Unicode replacement character U+FFFD.</source>
          <target state="translated">用U+FFFD替换无效的输入字节。</target>
        </trans-unit>
        <trans-unit id="b279f97032f9ccdb089926b2954f43b47cf0bc96" translate="yes" xml:space="preserve">
          <source>Replace an invalid input with a valid output.</source>
          <target state="translated">用有效的输出替换无效的输入。</target>
        </trans-unit>
        <trans-unit id="710069cd7ce970d000411758cf92ef5db06e5b43" translate="yes" xml:space="preserve">
          <source>Replace any binding &lt;code&gt;!p = e&lt;/code&gt; with &lt;code&gt;v = case e of p -&amp;gt; (x1, ..., xn); (x1, ..., xn) = v&lt;/code&gt; and replace &lt;code&gt;body&lt;/code&gt; with &lt;code&gt;v seq body&lt;/code&gt;, where &lt;code&gt;v&lt;/code&gt; is fresh. This translation works fine if &lt;code&gt;p&lt;/code&gt; is already a variable &lt;code&gt;x&lt;/code&gt;, but can obviously be optimised by not introducing a fresh variable &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">将任何绑定 &lt;code&gt;!p = e&lt;/code&gt; 替换为 &lt;code&gt;v = case e of p -&amp;gt; (x1, ..., xn); (x1, ..., xn) = v&lt;/code&gt; 和替换 &lt;code&gt;body&lt;/code&gt; 与 &lt;code&gt;v seq body&lt;/code&gt; ，其中 &lt;code&gt;v&lt;/code&gt; 是新鲜的。如果 &lt;code&gt;p&lt;/code&gt; 已经是变量 &lt;code&gt;x&lt;/code&gt; ，则此转换效果很好，但显然可以通过不引入新变量 &lt;code&gt;v&lt;/code&gt; 来优化。</target>
        </trans-unit>
        <trans-unit id="ea93161b8e74f17f89a87eea1945732825c68a45" translate="yes" xml:space="preserve">
          <source>Replace any binding &lt;code&gt;p = e&lt;/code&gt;, where &lt;code&gt;p&lt;/code&gt; is not a variable, with &lt;code&gt;v = e; x1 = case v of p -&amp;gt; x1; ...; xn = case v of p -&amp;gt; xn&lt;/code&gt;, where &lt;code&gt;v&lt;/code&gt; is fresh and &lt;code&gt;x1&lt;/code&gt;.. &lt;code&gt;xn&lt;/code&gt; are the bound variables of &lt;code&gt;p&lt;/code&gt;. Again if &lt;code&gt;e&lt;/code&gt; is a variable, this can be optimised by not introducing a fresh variable.</source>
          <target state="translated">将任何绑定 &lt;code&gt;p = e&lt;/code&gt; 替换为 &lt;code&gt;v = e; x1 = case v of p -&amp;gt; x1; ...; xn = case v of p -&amp;gt; xn&lt;/code&gt; ，其中 &lt;code&gt;p&lt;/code&gt; 不是变量。x1 = p的情况v-&amp;gt; x1; ...; xn = p-&amp;gt; xn的情况v，其中 &lt;code&gt;v&lt;/code&gt; 是新鲜的， &lt;code&gt;x1&lt;/code&gt; .. &lt;code&gt;xn&lt;/code&gt; 是 &lt;code&gt;p&lt;/code&gt; 的绑定变量。同样，如果 &lt;code&gt;e&lt;/code&gt; 是变量，则可以通过不引入新变量来对其进行优化。</target>
        </trans-unit>
        <trans-unit id="81063ace05e94fc04efdafdeb00bab024fa5cbd6" translate="yes" xml:space="preserve">
          <source>Replace each element of a list with a constant &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">用常量 &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 替换列表中的每个元素：</target>
        </trans-unit>
        <trans-unit id="513681c11e07f73c6a50486d27fc8225cfd91990" translate="yes" xml:space="preserve">
          <source>Replace every element of a list with unit:</source>
          <target state="translated">将列表中的每个元素都替换为单位。</target>
        </trans-unit>
        <trans-unit id="2648d76cb08af5485bbcad7562d6a30eed9a95d8" translate="yes" xml:space="preserve">
          <source>Replace the contents of a &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; with a constant &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">用常量 &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 替换 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 的内容：</target>
        </trans-unit>
        <trans-unit id="f31cb308fcd0aaf7f1f3072a015acd75e99b34bf" translate="yes" xml:space="preserve">
          <source>Replace the contents of a &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; with unit:</source>
          <target state="translated">用单元替换 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 的内容：</target>
        </trans-unit>
        <trans-unit id="5977c89e8466a29307fddb6c6e225a0b69928af1" translate="yes" xml:space="preserve">
          <source>Replace the contents of an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; with a constant &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, resulting in an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt;
&lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 的内容替换为常量 &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ，得到 &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0b7036b629fc4f069c30e816ee286bff66f0a0fe" translate="yes" xml:space="preserve">
          <source>Replace the contents of an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; with unit, resulting in an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; ()&lt;/code&gt;:</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 的内容替换为unit，得到 &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; ()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c404cb7e17bfbc9363bb25af2f270338bbdb908f" translate="yes" xml:space="preserve">
          <source>Replace the second element of a pair with a constant &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">用常量 &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 替换对中的第二个元素：</target>
        </trans-unit>
        <trans-unit id="ad5fd43d79beb7227805310f949ed0b8e62c8219" translate="yes" xml:space="preserve">
          <source>Replace the second element of a pair with unit:</source>
          <target state="translated">将一对的第二个元素改为单位。</target>
        </trans-unit>
        <trans-unit id="73b7214222897a4da7310495b3173dc47e2ed0ae" translate="yes" xml:space="preserve">
          <source>Replace the state in the &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; monad. Note that the state is local to the Haskell module in which the Template Haskell expression is executed.</source>
          <target state="translated">替换 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; monad中的状态。请注意，状态是在其中执行模板Haskell表达式的Haskell模块本地的。</target>
        </trans-unit>
        <trans-unit id="e783a2110c1a2dd69be9228b632da888c51e6f89" translate="yes" xml:space="preserve">
          <source>Replace the state inside the monad.</source>
          <target state="translated">替换单体里面的状态。</target>
        </trans-unit>
        <trans-unit id="fabcda4a7ffafa1589944ce7fdd1741e8b4ce15f" translate="yes" xml:space="preserve">
          <source>Replace with the closest visual match upon an illegal sequence</source>
          <target state="translated">当非法序列出现时,用最接近的视觉匹配替换。</target>
        </trans-unit>
        <trans-unit id="78bc12a2d09cc8e540b1af5c661d077103eab0cf" translate="yes" xml:space="preserve">
          <source>Replicates a &lt;code&gt;withXXX&lt;/code&gt; combinator over a list of objects, yielding a list of marshalled objects</source>
          <target state="translated">在对象列表上复制一个 &lt;code&gt;withXXX&lt;/code&gt; 组合器，产生一个编组对象列表</target>
        </trans-unit>
        <trans-unit id="6c2bb735a46a8ff307fe2e638d581295b2a49e09" translate="yes" xml:space="preserve">
          <source>Reply</source>
          <target state="translated">Reply</target>
        </trans-unit>
        <trans-unit id="210be950e48b6b09718f614ef624140560013a67" translate="yes" xml:space="preserve">
          <source>Report a warning to the user, and carry on.</source>
          <target state="translated">向用户报告警告,并进行。</target>
        </trans-unit>
        <trans-unit id="e35e7e48596095fe28a97fb7c0701b1712a21966" translate="yes" xml:space="preserve">
          <source>Report all record wildcards where none of the variables bound implicitly are used. For instance:</source>
          <target state="translated">报告所有记录通配符,其中没有使用隐式绑定的变量。例如:</target>
        </trans-unit>
        <trans-unit id="f1819d25d3da8dde34b0be9d666711b3615eec69" translate="yes" xml:space="preserve">
          <source>Report all record wildcards where the wild card match binds no patterns. For instance:</source>
          <target state="translated">报告所有记录通配符,通配符匹配没有绑定任何模式。例如:</target>
        </trans-unit>
        <trans-unit id="b29cc263854e35bdc210f347658ec81f2657154e" translate="yes" xml:space="preserve">
          <source>Report all unused implicitly bound type variables which arise from patterns in type family and data family instances. For instance:</source>
          <target state="translated">报告所有未使用的隐式绑定类型变量,这些变量产生于类型族和数据族实例中的模式。例如:</target>
        </trans-unit>
        <trans-unit id="5ac656d868f74d0d322d7eb08c66336d780f95e3" translate="yes" xml:space="preserve">
          <source>Report all unused type variables which arise from explicit, user-written &lt;code&gt;forall&lt;/code&gt; statements. For instance:</source>
          <target state="translated">报告所有未使用的类型变量，这些变量来自显式的用户编写的 &lt;code&gt;forall&lt;/code&gt; 语句。例如：</target>
        </trans-unit>
        <trans-unit id="7e5640248d20d9738f29370ad53212fe64c17e0c" translate="yes" xml:space="preserve">
          <source>Report all unused variables which arise from term-level pattern matches, including patterns consisting of a single variable. For instance &lt;code&gt;f x y = []&lt;/code&gt; would report &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; as unused. The warning is suppressed if the variable name begins with an underscore, thus:</source>
          <target state="translated">报告由于术语级别模式匹配而产生的所有未使用的变量，包括由单个变量组成的模式。例如， &lt;code&gt;f x y = []&lt;/code&gt; 将报告 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 未使用。如果变量名称以下划线开头，则警告将被取消，因此：</target>
        </trans-unit>
        <trans-unit id="d2d850b8b5dd31316cfd82cb19c2b631422fed64" translate="yes" xml:space="preserve">
          <source>Report an error (True) or warning (False) ...but carry on; use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; to stop</source>
          <target state="translated">报告错误（True）或警告（False）...但继续进行；使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 停止</target>
        </trans-unit>
        <trans-unit id="acc2d5506ea8125ec29ec5ef8fe9fe49f69d40a1" translate="yes" xml:space="preserve">
          <source>Report an error (True) or warning (False) ...but carry on; use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; to stop</source>
          <target state="translated">报告错误（True）或警告（False）...但继续进行；使用 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 停止</target>
        </trans-unit>
        <trans-unit id="5859a29b8a401433d1b3aeecf26cc9189797e212" translate="yes" xml:space="preserve">
          <source>Report an error (True) or warning (False) ...but carry on; use &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; to stop</source>
          <target state="translated">报告错误（True）或警告（False）...但继续进行；使用 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 停止</target>
        </trans-unit>
        <trans-unit id="a1c620c4068859caa4d346ede74c1d8d10061e19" translate="yes" xml:space="preserve">
          <source>Report an error (True) or warning (False), but carry on; use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; to stop.</source>
          <target state="translated">报告错误（真）或警告（假），但继续进行；使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 停止。</target>
        </trans-unit>
        <trans-unit id="7a73ba13d393a1dc95dce19effeef9fcff8d35c5" translate="yes" xml:space="preserve">
          <source>Report an error (True) or warning (False), but carry on; use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; to stop.</source>
          <target state="translated">报告错误（真）或警告（假），但继续进行；使用 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 停止。</target>
        </trans-unit>
        <trans-unit id="b432c61adbdf2d1649e43e6985d528f2509ac58a" translate="yes" xml:space="preserve">
          <source>Report an error (True) or warning (False), but carry on; use &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; to stop.</source>
          <target state="translated">报告错误（真）或警告（假），但继续进行；使用 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 停止。</target>
        </trans-unit>
        <trans-unit id="27c2f2834c134bcd0f46f16a100ad0f41229f9a9" translate="yes" xml:space="preserve">
          <source>Report an error to the user, but allow the current splice's computation to carry on. To abort the computation, use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">向用户报告错误，但允许当前接头的计算进行。要中止计算，请使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="394f0849152c51f645d6bcf635c3c97da8bbb201" translate="yes" xml:space="preserve">
          <source>Report an error to the user, but allow the current splice's computation to carry on. To abort the computation, use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">向用户报告错误，但允许当前接头的计算进行。要中止计算，请使用 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff35f018bc80610f0ec44efef8fc8bfae660c5f3" translate="yes" xml:space="preserve">
          <source>Report an error to the user, but allow the current splice's computation to carry on. To abort the computation, use &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">向用户报告错误，但允许当前接头的计算进行。要中止计算，请使用 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62d5b0be5b3ad3e15cbbad98168f15169b9f9a48" translate="yes" xml:space="preserve">
          <source>Report an error.</source>
          <target state="translated">报告一个错误。</target>
        </trans-unit>
        <trans-unit id="fcce7c0789dcd81563ee3585394cd8a41c2e0685" translate="yes" xml:space="preserve">
          <source>Report any function definitions (and local bindings) which are unused. An alias for</source>
          <target state="translated">报告任何未使用的函数定义(和本地绑定)。的别称。</target>
        </trans-unit>
        <trans-unit id="c73f069d8746fd50c3b70f8192e9fd23df6fc4f6" translate="yes" xml:space="preserve">
          <source>Report any function definitions which are unused.</source>
          <target state="translated">报告任何未使用的函数定义。</target>
        </trans-unit>
        <trans-unit id="c68cbca196a7f8a1f32e076e847cdcae60eb1331" translate="yes" xml:space="preserve">
          <source>Report any local definitions which are unused. For example:</source>
          <target state="translated">报告任何未使用的本地定义。例如:</target>
        </trans-unit>
        <trans-unit id="56ea34f3aadd7ff1bfabeb1f2e13d83f09f25cc0" translate="yes" xml:space="preserve">
          <source>Report any modules that are explicitly imported but never used. However, the form &lt;code&gt;import M()&lt;/code&gt; is never reported as an unused import, because it is a useful idiom for importing instance declarations, which are anonymous in Haskell.</source>
          <target state="translated">报告任何显式导入但从未使用过的模块。但是， &lt;code&gt;import M()&lt;/code&gt; 的形式永远不会报告为未使用的导入，因为它对于导入实例声明非常有用，该实例声明在Haskell中是匿名的。</target>
        </trans-unit>
        <trans-unit id="186922e407e4cea2c9163d0d00b27598db5e305a" translate="yes" xml:space="preserve">
          <source>Report expressions occurring in &lt;code&gt;do&lt;/code&gt; and &lt;code&gt;mdo&lt;/code&gt; blocks that appear to lack a binding. For instance &lt;code&gt;do { return (popInt 10) ; return 10 }&lt;/code&gt; would report the first statement in the &lt;code&gt;do&lt;/code&gt; block as suspicious, as it has the type &lt;code&gt;StackM (StackM Int)&lt;/code&gt; (which consists of two nested applications of the same monad constructor), but which is not then &amp;ldquo;unpacked&amp;rdquo; by binding the result. The warning is suppressed by explicitly mentioning in the source code that your program is throwing something away:</source>
          <target state="translated">报告出现在 &lt;code&gt;do&lt;/code&gt; 和 &lt;code&gt;mdo&lt;/code&gt; 块中的表达式，这些表达式似乎缺乏绑定。例如 &lt;code&gt;do { return (popInt 10) ; return 10 }&lt;/code&gt; 将报告 &lt;code&gt;do&lt;/code&gt; 块中的第一条语句可疑，因为它的类型为 &lt;code&gt;StackM (StackM Int)&lt;/code&gt; （由同一monad构造函数的两个嵌套应用程序组成），但是通过绑定结果。通过在源代码中明确提及您的程序正在丢弃某些东西，可以消除该警告：</target>
        </trans-unit>
        <trans-unit id="038c812031da3596ee105d128edaed69c9791794" translate="yes" xml:space="preserve">
          <source>Report expressions occurring in &lt;code&gt;do&lt;/code&gt; and &lt;code&gt;mdo&lt;/code&gt; blocks that appear to silently throw information away. For instance &lt;code&gt;do { mapM popInt xs ; return 10 }&lt;/code&gt; would report the first statement in the &lt;code&gt;do&lt;/code&gt; block as suspicious, as it has the type &lt;code&gt;StackM [Int]&lt;/code&gt; and not &lt;code&gt;StackM ()&lt;/code&gt;, but that &lt;code&gt;[Int]&lt;/code&gt; value is not bound to anything. The warning is suppressed by explicitly mentioning in the source code that your program is throwing something away:</source>
          <target state="translated">在 &lt;code&gt;do&lt;/code&gt; 和 &lt;code&gt;mdo&lt;/code&gt; 块中出现的报表表达式似乎无声地丢弃了信息。例如 &lt;code&gt;do { mapM popInt xs ; return 10 }&lt;/code&gt; 将报告 &lt;code&gt;do&lt;/code&gt; 块中的第一条语句可疑，因为它的类型为 &lt;code&gt;StackM [Int]&lt;/code&gt; 而不是 &lt;code&gt;StackM ()&lt;/code&gt; ，但是 &lt;code&gt;[Int]&lt;/code&gt; 值未绑定任何内容。通过在源代码中明确提及您的程序正在丢弃某些东西，可以消除该警告：</target>
        </trans-unit>
        <trans-unit id="cd30304350d0689ec5bbe6a3f6497f3ec6334207" translate="yes" xml:space="preserve">
          <source>Report the heap size.</source>
          <target state="translated">报告堆的大小。</target>
        </trans-unit>
        <trans-unit id="70173459a195f442c355a3fc300b097436d9e070" translate="yes" xml:space="preserve">
          <source>Report the live heap size.</source>
          <target state="translated">报告活堆大小。</target>
        </trans-unit>
        <trans-unit id="d80bdbb7c8a6935b5a45975b33da400dc2c16cc6" translate="yes" xml:space="preserve">
          <source>Report unqualified imports of core libraries which are expected to cause compatibility problems in future releases.</source>
          <target state="translated">报告不合格的核心库导入,预计会在未来的版本中造成兼容性问题。</target>
        </trans-unit>
        <trans-unit id="735a11bcb235cff53b8ba5b3f22520d05fd7bdbf" translate="yes" xml:space="preserve">
          <source>Report various information about the heap configuration. Typically produced during RTS initialization..</source>
          <target state="translated">报告有关堆配置的各种信息。通常在RTS初始化时产生。</target>
        </trans-unit>
        <trans-unit id="0956295ef6d976a4be613e585528efba127faa44" translate="yes" xml:space="preserve">
          <source>Report warnings when &lt;a href=&quot;exts/defer_type_errors#defer-type-errors&quot;&gt;deferred type errors&lt;/a&gt; are enabled. This option is enabled by default. See &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">启用&lt;a href=&quot;exts/defer_type_errors#defer-type-errors&quot;&gt;延迟的类型错误&lt;/a&gt;时报告警告。默认情况下启用此选项。请参阅&lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt; &lt;code&gt;-fdefer-type-errors&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c1b819dc66bd9a04185868bd6629101754476cb" translate="yes" xml:space="preserve">
          <source>Report warnings when &lt;a href=&quot;exts/typed_holes#typed-holes&quot;&gt;typed hole&lt;/a&gt; errors are &lt;a href=&quot;exts/defer_type_errors#defer-type-errors&quot;&gt;deferred until runtime&lt;/a&gt;. See &lt;a href=&quot;using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt;&lt;code&gt;-fdefer-typed-holes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当&lt;a href=&quot;exts/typed_holes#typed-holes&quot;&gt;打孔&lt;/a&gt;错误&lt;a href=&quot;exts/defer_type_errors#defer-type-errors&quot;&gt;推迟到运行时&lt;/a&gt;报告警告。请参阅&lt;a href=&quot;using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt; &lt;code&gt;-fdefer-typed-holes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b51caa4097d27e97021974ca37a3eb172d1faa25" translate="yes" xml:space="preserve">
          <source>Report warnings when &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;deferred type errors&lt;/a&gt; are enabled. This option is enabled by default. See &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">启用&lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;延迟的类型错误&lt;/a&gt;时报告警告。默认情况下启用此选项。请参阅&lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt; &lt;code&gt;-fdefer-type-errors&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb8d962b7ceb76b163fd6f75585fd61427a421ba" translate="yes" xml:space="preserve">
          <source>Report warnings when &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;typed hole&lt;/a&gt; errors are &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;deferred until runtime&lt;/a&gt;. See &lt;a href=&quot;using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt;&lt;code&gt;-fdefer-typed-holes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当&lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;打孔&lt;/a&gt;错误&lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;推迟到运行时&lt;/a&gt;报告警告。请参阅&lt;a href=&quot;using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt; &lt;code&gt;-fdefer-typed-holes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f65c4728096e6f431178aff056b0068b34ac1053" translate="yes" xml:space="preserve">
          <source>Report warnings when variable out-of-scope errors are &lt;a href=&quot;exts/defer_type_errors#defer-type-errors&quot;&gt;deferred until runtime&lt;/a&gt;. See &lt;a href=&quot;using-warnings#ghc-flag--fdefer-out-of-scope-variables&quot;&gt;&lt;code&gt;-fdefer-out-of-scope-variables&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将变量范围外的错误&lt;a href=&quot;exts/defer_type_errors#defer-type-errors&quot;&gt;推迟到runtime时&lt;/a&gt;报告警告。请参阅&lt;a href=&quot;using-warnings#ghc-flag--fdefer-out-of-scope-variables&quot;&gt; &lt;code&gt;-fdefer-out-of-scope-variables&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3876a176e0cb586bc4ba95c55f3d4c1969ddb9dc" translate="yes" xml:space="preserve">
          <source>Report warnings when variable out-of-scope errors are &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;deferred until runtime&lt;/a&gt;. See &lt;a href=&quot;using-warnings#ghc-flag--fdefer-out-of-scope-variables&quot;&gt;&lt;code&gt;-fdefer-out-of-scope-variables&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将变量范围外的错误&lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;推迟到runtime时&lt;/a&gt;报告警告。请参见&lt;a href=&quot;using-warnings#ghc-flag--fdefer-out-of-scope-variables&quot;&gt; &lt;code&gt;-fdefer-out-of-scope-variables&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0148d6cc97deecd36edc0baa1b6a3f9dcb097f11" translate="yes" xml:space="preserve">
          <source>Reports all module-local uses of the thing at the given position in the module, e.g.:</source>
          <target state="translated">报告该模块中给定位置的所有模块本地使用的东西,例如。</target>
        </trans-unit>
        <trans-unit id="ed90fb14d4af2cae21171d0f93343d8c595bf3d1" translate="yes" xml:space="preserve">
          <source>Reports the inferred type at the given span/position in the module, e.g.:</source>
          <target state="translated">报告模块中给定跨度/位置上的推断类型,例如。</target>
        </trans-unit>
        <trans-unit id="cb4f47e477ef256ba7b45b511bda017048a23708" translate="yes" xml:space="preserve">
          <source>Repositioning handles</source>
          <target state="translated">重新定位手柄</target>
        </trans-unit>
        <trans-unit id="cfd421be6e964f2d973beeab3a903b4b8dbca988" translate="yes" xml:space="preserve">
          <source>Representable types are collected in the &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; class, which defines the associated type &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt; as well as conversion functions &lt;code&gt;&lt;a href=&quot;ghc-generics#v:from&quot;&gt;from&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-generics#v:to&quot;&gt;to&lt;/a&gt;&lt;/code&gt;. Typically, you will not define &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; instances by hand, but have the compiler derive them for you.</source>
          <target state="translated">可表示的类型收集在 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; 类中，该类定义了关联的类型 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt; 以及 &lt;code&gt;&lt;a href=&quot;ghc-generics#v:from&quot;&gt;from&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-generics#v:to&quot;&gt;to&lt;/a&gt;&lt;/code&gt; 转换函数。通常，您不会手动定义 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; 实例，而是让编译器为您派生它们。</target>
        </trans-unit>
        <trans-unit id="19682e38b0c71dbda763927c57f8b65c290b0f2f" translate="yes" xml:space="preserve">
          <source>Representable types of kind &lt;code&gt;* -&amp;gt; *&lt;/code&gt; (or kind &lt;code&gt;k -&amp;gt; *&lt;/code&gt;, when &lt;code&gt;PolyKinds&lt;/code&gt; is enabled). This class is derivable in GHC with the &lt;code&gt;DeriveGeneric&lt;/code&gt; flag on.</source>
          <target state="translated">类型 &lt;code&gt;* -&amp;gt; *&lt;/code&gt; （或类型 &lt;code&gt;k -&amp;gt; *&lt;/code&gt; ，当启用 &lt;code&gt;PolyKinds&lt;/code&gt; 时）的可表示类型。此类在 &lt;code&gt;DeriveGeneric&lt;/code&gt; 中带有DeriveGeneric标志的情况下可派生。</target>
        </trans-unit>
        <trans-unit id="9ee2698bb964d52fc57600dbd9abaf6d51a0a4e0" translate="yes" xml:space="preserve">
          <source>Representable types of kind &lt;code&gt;*&lt;/code&gt;. This class is derivable in GHC with the &lt;code&gt;DeriveGeneric&lt;/code&gt; flag on.</source>
          <target state="translated">可代表的类型 &lt;code&gt;*&lt;/code&gt; 。此类在 &lt;code&gt;DeriveGeneric&lt;/code&gt; 中带有DeriveGeneric标志的情况下可派生。</target>
        </trans-unit>
        <trans-unit id="3046120cbf4b7cd62bc24b957ce87fe60e8d7792" translate="yes" xml:space="preserve">
          <source>Representation of &lt;code&gt;* -&amp;gt; *&lt;/code&gt; types</source>
          <target state="translated">代表性 &lt;code&gt;* -&amp;gt; *&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="c04043fc4434d1f9286ef0d8dcc9a50d45126bbe" translate="yes" xml:space="preserve">
          <source>Representation of &lt;code&gt;k -&amp;gt; *&lt;/code&gt; types</source>
          <target state="translated">表示 &lt;code&gt;k -&amp;gt; *&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="3344925672ee12b2453942aee5ea1db1e2ff176d" translate="yes" xml:space="preserve">
          <source>Representation of constructors. Note that equality on constructors with different types may not work -- i.e. the constructors for &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; may compare equal.</source>
          <target state="translated">构造函数的表示形式。请注意，具有不同类型的构造函数上的相等性可能无法工作-即 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 的构造函数可能比较相等。</target>
        </trans-unit>
        <trans-unit id="a47a0325484885141fbc604287a2df8331178b15" translate="yes" xml:space="preserve">
          <source>Representation of datatypes. A package of constructor representations with names of type and module.</source>
          <target state="translated">数据类型的表示方法。一个包含类型和模块名称的构造函数表示包。</target>
        </trans-unit>
        <trans-unit id="6a8a2b8cb82090e3d77dce2dbb2bfcf782570834" translate="yes" xml:space="preserve">
          <source>Representation of types with many constructors or many fields</source>
          <target state="translated">具有多个构造函数或多个字段的类型的表示方法</target>
        </trans-unit>
        <trans-unit id="35397673d9b11600f8956f67c44793a1eedc1924" translate="yes" xml:space="preserve">
          <source>Representation of unlifted types</source>
          <target state="translated">未解除的类型的表示</target>
        </trans-unit>
        <trans-unit id="264ee02a2c969393a215ad8bfc32e8b2b845f204" translate="yes" xml:space="preserve">
          <source>Representation polymorphism</source>
          <target state="translated">代表性多态性</target>
        </trans-unit>
        <trans-unit id="879c48418a21002d9297fbd9e3ffac9d2017770f" translate="yes" xml:space="preserve">
          <source>Representational equality. If &lt;code&gt;Coercion a b&lt;/code&gt; is inhabited by some terminating value, then the type &lt;code&gt;a&lt;/code&gt; has the same underlying representation as the type &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">代表性平等。如果 &lt;code&gt;Coercion a b&lt;/code&gt; 被某个终止值占用，则类型 &lt;code&gt;a&lt;/code&gt; 具有与类型 &lt;code&gt;b&lt;/code&gt; 相同的基础表示。</target>
        </trans-unit>
        <trans-unit id="c720f46bcd60ae9520c3086c1ecf644ef6144adc" translate="yes" xml:space="preserve">
          <source>RepresentationalR</source>
          <target state="translated">RepresentationalR</target>
        </trans-unit>
        <trans-unit id="f097ee1b17998d299a2f160cedc967fc9f78cbf6" translate="yes" xml:space="preserve">
          <source>Representations of C types</source>
          <target state="translated">C类的表示方法</target>
        </trans-unit>
        <trans-unit id="a79298e81ca3b532230a8583d8f8409c75a6d705" translate="yes" xml:space="preserve">
          <source>Representations of some basic types</source>
          <target state="translated">一些基本类型的代表</target>
        </trans-unit>
        <trans-unit id="c5f36ecbc1823bac6b0b60140b82b2aed0c5b3dc" translate="yes" xml:space="preserve">
          <source>Represented as an array of limbs (Word#) stored in little-endian order (Word# themselves use machine order).</source>
          <target state="translated">表示为以小二烯顺序存储的肢体数组(Word#)(Word#本身使用机器顺序)。</target>
        </trans-unit>
        <trans-unit id="67da1ed51acd40fcb2fcb744269f2c5d7d3d0098" translate="yes" xml:space="preserve">
          <source>Representing datatypes</source>
          <target state="translated">表示数据类型</target>
        </trans-unit>
        <trans-unit id="34758cefddc40aa1470cfbff99ae668d79c9b020" translate="yes" xml:space="preserve">
          <source>Represents a C-- basic block. Note that this is a slight departure from the intended meaning of this DIE type as it does not necessarily reflect lexical scope in the source program.</source>
          <target state="translated">代表一个C--基本块。请注意,这与该DIE类型的预期含义略有不同,因为它不一定反映源程序中的词法范围。</target>
        </trans-unit>
        <trans-unit id="1fa24476be6c73885eb7fbb4bf8517339a1cd7ef" translate="yes" xml:space="preserve">
          <source>Represents a C-- top-level basic block.</source>
          <target state="translated">代表一个C--顶层基本块。</target>
        </trans-unit>
        <trans-unit id="0cf15330bda4d0352a73b8fedf9c47f7a854fb5e" translate="yes" xml:space="preserve">
          <source>Represents a C-\- basic block. Note that this is a slight departure from the intended meaning of this DIE type as it does not necessarily reflect lexical scope in the source program.</source>
          <target state="translated">代表一个C-\-基本块。请注意,这略微偏离了DIE类型的本意,因为它不一定反映源程序中的词汇范围。</target>
        </trans-unit>
        <trans-unit id="67e5c7afc820ce932f90778d78e604b5c2630d35" translate="yes" xml:space="preserve">
          <source>Represents a C-\- top-level basic block.</source>
          <target state="translated">代表C-顶级基本块。</target>
        </trans-unit>
        <trans-unit id="6dd9a4bf554abf7b310b93fad15543594f89afcc" translate="yes" xml:space="preserve">
          <source>Represents a compilation unit (e.g. a Haskell module).</source>
          <target state="translated">代表一个编译单元(如Haskell模块)。</target>
        </trans-unit>
        <trans-unit id="fcb730488b84e7f5ed63ca89008924d5058dd35c" translate="yes" xml:space="preserve">
          <source>Represents an expression which has type &lt;code&gt;a&lt;/code&gt;. Built on top of &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Exp&quot;&gt;Exp&lt;/a&gt;&lt;/code&gt;, typed expressions allow for type-safe splicing via:</source>
          <target state="translated">表示类型 &lt;code&gt;a&lt;/code&gt; 的表达式。建立在 &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Exp&quot;&gt;Exp&lt;/a&gt;&lt;/code&gt; 之上的类型表达式可以通过以下方式进行类型安全的拼接：</target>
        </trans-unit>
        <trans-unit id="ae0ee5dc9568cf4ffac532349f638326663b8ea1" translate="yes" xml:space="preserve">
          <source>Represents an expression which has type &lt;code&gt;a&lt;/code&gt;. Built on top of &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Exp&quot;&gt;Exp&lt;/a&gt;&lt;/code&gt;, typed expressions allow for type-safe splicing via:</source>
          <target state="translated">表示类型 &lt;code&gt;a&lt;/code&gt; 的表达式。建立在 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Exp&quot;&gt;Exp&lt;/a&gt;&lt;/code&gt; 之上的类型表达式可以通过以下方式进行类型安全的拼接：</target>
        </trans-unit>
        <trans-unit id="71b0bcf91aa6fb4f634cf7991b4493fb262523a4" translate="yes" xml:space="preserve">
          <source>Request a CallStack.</source>
          <target state="translated">申请一个CallStack。</target>
        </trans-unit>
        <trans-unit id="1a86db96bf5edca3b30436e4953013bfeb293ef4" translate="yes" xml:space="preserve">
          <source>RequireOrder</source>
          <target state="translated">RequireOrder</target>
        </trans-unit>
        <trans-unit id="5e3a8a744e7e46ab41222ebbc049e8887d9bf220" translate="yes" xml:space="preserve">
          <source>Reset the current package database stack. This option removes every previously specified package database (including those read from the &lt;a href=&quot;#envvar-GHC_PACKAGE_PATH&quot; id=&quot;index-4&quot;&gt;&lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt;&lt;/a&gt; environment variable) from the package database stack.</source>
          <target state="translated">重置当前的程序包数据库堆栈。此选项从软件包数据库堆栈中删除每个以前指定的软件包数据库（包括从&lt;a href=&quot;#envvar-GHC_PACKAGE_PATH&quot; id=&quot;index-4&quot;&gt; &lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt; &lt;/a&gt;环境变量读取的数据库）。</target>
        </trans-unit>
        <trans-unit id="9d9437ce1c149db92a35f069931633d0e7667617" translate="yes" xml:space="preserve">
          <source>Reset the current thread's &lt;code&gt;errno&lt;/code&gt; value to &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eOK&quot;&gt;eOK&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将当前线程的 &lt;code&gt;errno&lt;/code&gt; 值重置为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eOK&quot;&gt;eOK&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4cf5aab60ea4b429ce0f728614ce1a39b30514f8" translate="yes" xml:space="preserve">
          <source>Resets the precedence context to zero.</source>
          <target state="translated">将优先级上下文重置为零。</target>
        </trans-unit>
        <trans-unit id="3d530ddb394e59a93f8fd08475db15473c9be43e" translate="yes" xml:space="preserve">
          <source>Resize (unpinned) mutable byte array to new specified size (in bytes). The returned &lt;code&gt;MutableByteArray#&lt;/code&gt; is either the original &lt;code&gt;MutableByteArray#&lt;/code&gt; resized in-place or, if not possible, a newly allocated (unpinned) &lt;code&gt;MutableByteArray#&lt;/code&gt; (with the original content copied over).</source>
          <target state="translated">将可变字节数组（未固定）调整为新的指定大小（以字节为单位）。返回的 &lt;code&gt;MutableByteArray#&lt;/code&gt; 是 &lt;code&gt;MutableByteArray#&lt;/code&gt; 调整大小的原始MutableByteArray＃，或者如果不可能的话，是新分配（未固定）的 &lt;code&gt;MutableByteArray#&lt;/code&gt; （复制了原始内容）。</target>
        </trans-unit>
        <trans-unit id="af23022ae2fbc703adfc587f443d4886c8b9c829" translate="yes" xml:space="preserve">
          <source>Resize a memory area that was allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; to the given size. The returned pointer may refer to an entirely different memory area, but will be sufficiently aligned for any of the basic foreign types that fits into a memory block of the given size. The contents of the referenced memory area will be the same as of the original pointer up to the minimum of the original size and the given size.</source>
          <target state="translated">将使用 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; 分配的内存区域调整为给定大小。返回的指针可能指向完全不同的存储区域，但对于适合给定大小的存储块的任何基本外部类型，都将充分对齐。所引用的存储区域的内容将与原始指针的内容相同，直到原始大小和给定大小的最小值为止。</target>
        </trans-unit>
        <trans-unit id="0b2bb3f258d16c01bdf266d3f03d994c61e11ff5" translate="yes" xml:space="preserve">
          <source>Resize a memory area that was allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; to the size needed to store values of type &lt;code&gt;b&lt;/code&gt;. The returned pointer may refer to an entirely different memory area, but will be suitably aligned to hold values of type &lt;code&gt;b&lt;/code&gt;. The contents of the referenced memory area will be the same as of the original pointer up to the minimum of the original size and the size of values of type &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">将使用 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; 分配的内存区域调整为存储类型 &lt;code&gt;b&lt;/code&gt; 所需的大小。返回的指针可能指向完全不同的存储区域，但将进行适当对齐以容纳类型 &lt;code&gt;b&lt;/code&gt; 的值。所引用的存储区域的内容将与原始指针的内容相同，直到原始大小和类型 &lt;code&gt;b&lt;/code&gt; 的值的最小值为止。</target>
        </trans-unit>
        <trans-unit id="3570c5c7eea20213a2a8c3cbdd049e2af10c39ac" translate="yes" xml:space="preserve">
          <source>Resize a mutable array to new specified size. The returned &lt;code&gt;&lt;a href=&quot;ghc-exts#t:SmallMutableArray-35-&quot;&gt;SmallMutableArray#&lt;/a&gt;&lt;/code&gt; is either the original &lt;code&gt;&lt;a href=&quot;ghc-exts#t:SmallMutableArray-35-&quot;&gt;SmallMutableArray#&lt;/a&gt;&lt;/code&gt; resized in-place or, if not possible, a newly allocated &lt;code&gt;&lt;a href=&quot;ghc-exts#t:SmallMutableArray-35-&quot;&gt;SmallMutableArray#&lt;/a&gt;&lt;/code&gt; with the original content copied over.</source>
          <target state="translated">将可变数组调整为新的指定大小。返回的 &lt;code&gt;&lt;a href=&quot;ghc-exts#t:SmallMutableArray-35-&quot;&gt;SmallMutableArray#&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;ghc-exts#t:SmallMutableArray-35-&quot;&gt;SmallMutableArray#&lt;/a&gt;&lt;/code&gt; 调整大小的原始SmallMutableArray＃，或者如果可能的话，是复制了原始内容的新分配的 &lt;code&gt;&lt;a href=&quot;ghc-exts#t:SmallMutableArray-35-&quot;&gt;SmallMutableArray#&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae93894b8f7d37188e0c60b68adb836aadfde7fe" translate="yes" xml:space="preserve">
          <source>Resize functions</source>
          <target state="translated">调整大小功能</target>
        </trans-unit>
        <trans-unit id="abb3f650c638a188171f11f7e236b22f5968cb9a" translate="yes" xml:space="preserve">
          <source>Resizing arrays of boxed elements is currently handled in library space (rather than being a primop) since there is not an efficient way to grow arrays. However, resize operations may become primops in a future release of GHC.</source>
          <target state="translated">目前,对盒装元素数组的大小调整是在库空间中处理的(而不是作为一个primop),因为没有一个有效的方法来增长数组。不过,在未来的GHC版本中,调整大小的操作可能会成为primops。</target>
        </trans-unit>
        <trans-unit id="a005485cd10cadec5528720089b01d7c3f83bf1d" translate="yes" xml:space="preserve">
          <source>ResolvedBCO</source>
          <target state="translated">ResolvedBCO</target>
        </trans-unit>
        <trans-unit id="6e1de862f17f2c0d61dcfa8869842063045a9469" translate="yes" xml:space="preserve">
          <source>ResolvedBCOPtr</source>
          <target state="translated">ResolvedBCOPtr</target>
        </trans-unit>
        <trans-unit id="481ed4541019846722b9befe3b9bb925ee185d7b" translate="yes" xml:space="preserve">
          <source>Resolves to the MutableArray# inside the BreakArray</source>
          <target state="translated">解析到 BreakArray 内的 MutableArray#。</target>
        </trans-unit>
        <trans-unit id="021493f340d35ce0d744f7a3a9e53445394e86a6" translate="yes" xml:space="preserve">
          <source>Resource</source>
          <target state="translated">Resource</target>
        </trans-unit>
        <trans-unit id="ad94287ab4f543bf10c68378e7ba19242a3df67f" translate="yes" xml:space="preserve">
          <source>Resource Limits</source>
          <target state="translated">资源限制</target>
        </trans-unit>
        <trans-unit id="f26c6059d9651d00e556526c3868d40e27ae8a46" translate="yes" xml:space="preserve">
          <source>ResourceBusy</source>
          <target state="translated">ResourceBusy</target>
        </trans-unit>
        <trans-unit id="b020bc6431b3b7023d76f2e64d60f17277ec97b4" translate="yes" xml:space="preserve">
          <source>ResourceCPUTime</source>
          <target state="translated">ResourceCPUTime</target>
        </trans-unit>
        <trans-unit id="2dc3de2b05e8f70724173719ff240dda68f8caab" translate="yes" xml:space="preserve">
          <source>ResourceCoreFileSize</source>
          <target state="translated">ResourceCoreFileSize</target>
        </trans-unit>
        <trans-unit id="bcf85ca1883d8d70b35323b8ac1608d3228793f6" translate="yes" xml:space="preserve">
          <source>ResourceDataSize</source>
          <target state="translated">ResourceDataSize</target>
        </trans-unit>
        <trans-unit id="ba115e3b77b67bdb8168bff8f2572fe7a2e3bd8d" translate="yes" xml:space="preserve">
          <source>ResourceExhausted</source>
          <target state="translated">ResourceExhausted</target>
        </trans-unit>
        <trans-unit id="35fc7cdea7e77fa9f20ff9cf8167182034131cd7" translate="yes" xml:space="preserve">
          <source>ResourceFileSize</source>
          <target state="translated">ResourceFileSize</target>
        </trans-unit>
        <trans-unit id="d61e08164f1a81223237b903b736ba4407436943" translate="yes" xml:space="preserve">
          <source>ResourceLimit</source>
          <target state="translated">ResourceLimit</target>
        </trans-unit>
        <trans-unit id="32a2741a75201adad483efb7ecfc4c10371a9b6d" translate="yes" xml:space="preserve">
          <source>ResourceLimitInfinity</source>
          <target state="translated">ResourceLimitInfinity</target>
        </trans-unit>
        <trans-unit id="0d6dc59579d48df2cd89dd60631ce90b42cf2846" translate="yes" xml:space="preserve">
          <source>ResourceLimitUnknown</source>
          <target state="translated">ResourceLimitUnknown</target>
        </trans-unit>
        <trans-unit id="f11112cf2840ff9c720b327aaefa09f02d694542" translate="yes" xml:space="preserve">
          <source>ResourceLimits</source>
          <target state="translated">ResourceLimits</target>
        </trans-unit>
        <trans-unit id="d2af36c4a7640045e8251579752c2f729046eb04" translate="yes" xml:space="preserve">
          <source>ResourceOpenFiles</source>
          <target state="translated">ResourceOpenFiles</target>
        </trans-unit>
        <trans-unit id="147a596e2a9d58f70e713e6b3139672c9d488b7c" translate="yes" xml:space="preserve">
          <source>ResourceStackSize</source>
          <target state="translated">ResourceStackSize</target>
        </trans-unit>
        <trans-unit id="aa19422c07be3f3671269e1768d4706d3a3e2b2c" translate="yes" xml:space="preserve">
          <source>ResourceTotalMemory</source>
          <target state="translated">ResourceTotalMemory</target>
        </trans-unit>
        <trans-unit id="9c4dbd9b8ca47dc047650c64ccd632f15455d5c0" translate="yes" xml:space="preserve">
          <source>ResourceVanished</source>
          <target state="translated">ResourceVanished</target>
        </trans-unit>
        <trans-unit id="24f8e3947f79a1fb2d83a89f0b6ab726732d6422" translate="yes" xml:space="preserve">
          <source>Resources associated with the encoding may now be released. The &lt;code&gt;encode&lt;/code&gt; function may not be called again after calling &lt;code&gt;close&lt;/code&gt;.</source>
          <target state="translated">现在可以释放与编码关联的资源。该 &lt;code&gt;encode&lt;/code&gt; 功能可能不被调用后再次调用 &lt;code&gt;close&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7eb20dcf60dd0da5f37b1239d272f3287ea9bcc3" translate="yes" xml:space="preserve">
          <source>Rest of the format string.</source>
          <target state="translated">格式字符串的其余部分。</target>
        </trans-unit>
        <trans-unit id="879a3471887029471d2168fa737f849188fe74c6" translate="yes" xml:space="preserve">
          <source>RestartOutput</source>
          <target state="translated">RestartOutput</target>
        </trans-unit>
        <trans-unit id="94e38d2852d0374138e6492fc960350b1f4d7792" translate="yes" xml:space="preserve">
          <source>Restores foreground/background colors to their original settings.</source>
          <target state="translated">将前景/背景色恢复到原来的设置。</target>
        </trans-unit>
        <trans-unit id="38213008afe420fee37f728dc46cf0e5fd546894" translate="yes" xml:space="preserve">
          <source>Restreaming</source>
          <target state="translated">Restreaming</target>
        </trans-unit>
        <trans-unit id="3638fae628fb0f507ffb4a26800173a2467b3120" translate="yes" xml:space="preserve">
          <source>Restreaming state.</source>
          <target state="translated">复流状态。</target>
        </trans-unit>
        <trans-unit id="e2fc156aca734a5b9c9b389bcb970f6b6e0ce3b1" translate="yes" xml:space="preserve">
          <source>Restrict the .hsc directives to those supported by the &lt;code&gt;--cross-compile&lt;/code&gt; mode (see &lt;a href=&quot;#hsc2hs-cross&quot;&gt;Cross-compilation&lt;/a&gt;). This should be useful if your &lt;code&gt;.hsc&lt;/code&gt; files must be safely cross-compiled and you wish to keep non-cross-compilable constructs from creeping into them.</source>
          <target state="translated">将.hsc指令限制为--cross &lt;code&gt;--cross-compile&lt;/code&gt; 模式支持的指令（请参见&lt;a href=&quot;#hsc2hs-cross&quot;&gt;交叉编译&lt;/a&gt;）。如果必须安全地交叉编译 &lt;code&gt;.hsc&lt;/code&gt; 文件，并且希望防止不可交叉编译的构造爬入它们，这将很有用。</target>
        </trans-unit>
        <trans-unit id="aedd633c093fe43362bae96de582861ec838410a" translate="yes" xml:space="preserve">
          <source>Restrict the number of elements in a retainer set to ⟨size⟩ (default 8).</source>
          <target state="translated">限制保留集的元素数量为⟨size⟩(默认8)。</target>
        </trans-unit>
        <trans-unit id="7ba09a9a0fa12c5c7ed15a9028a5668c2066777d" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures produced by cost-centre stacks with one of the specified cost centres anywhere in the stack.</source>
          <target state="translated">将简介限制在成本中心堆栈产生的闭合上,并在堆栈的任何地方有一个指定的成本中心。</target>
        </trans-unit>
        <trans-unit id="988f43d05062af42f11912707b2255cf7e924c8d" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures produced by cost-centre stacks with one of the specified cost centres at the top.</source>
          <target state="translated">将简介限制为由成本中心堆栈产生的闭合,顶部为指定成本中心之一。</target>
        </trans-unit>
        <trans-unit id="8cc2a3cc5491baa09dd9e6d7305aa27e9729ee67" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures produced by the specified modules.</source>
          <target state="translated">将配置文件限制为由指定模块产生的闭包。</target>
        </trans-unit>
        <trans-unit id="8e5eb29c710134325c75e103e6c39e0d8cf4113d" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures with one of the specified biographies, where ⟨bio⟩ is one of &lt;code&gt;lag&lt;/code&gt;, &lt;code&gt;drag&lt;/code&gt;, &lt;code&gt;void&lt;/code&gt;, or &lt;code&gt;use&lt;/code&gt;.</source>
          <target state="translated">将轮廓限制为使用指定的传记之一进行封闭，其中&amp;ldquo; bio&amp;rdquo;是 &lt;code&gt;lag&lt;/code&gt; ， &lt;code&gt;drag&lt;/code&gt; ， &lt;code&gt;void&lt;/code&gt; 或 &lt;code&gt;use&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77aa2da641bd4074fc631140f99b3429af2e4c61" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures with retainer sets containing cost-centre stacks with one of the specified cost centres at the top.</source>
          <target state="translated">将剖面限制为带有保留器的闭合装置,保留器中含有成本中心堆栈,顶部为规定的成本中心之一。</target>
        </trans-unit>
        <trans-unit id="8a4cf9779af43faa60dea8a6b135485084595f2c" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures with the specified description strings.</source>
          <target state="translated">将配置文件限制为带有指定描述字符串的闭包。</target>
        </trans-unit>
        <trans-unit id="f8ec1f3f879de514bd809577ca2942e389746a15" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures with the specified types.</source>
          <target state="translated">将配置文件限制为具有指定类型的闭包。</target>
        </trans-unit>
        <trans-unit id="91d9d512b80f1af15f20e59d89aecd2b45b56287" translate="yes" xml:space="preserve">
          <source>Restrictions on unlifted boxed arguments passed to foreign C calls. Cells marked as &amp;ldquo;Unsound&amp;rdquo; represent combinations that lead to undefined runtime behavior. GHC does not reject such unsound programs at compile time.</source>
          <target state="translated">传递给外部C调用的对未取消限制的自变量的限制。标记为&amp;ldquo;不健全&amp;rdquo;的单元格表示导致未定义的运行时行为的组合。GHC不会在编译时拒绝此类不完善的程序。</target>
        </trans-unit>
        <trans-unit id="26d2b2f2e73d96c76f8c4e16a012c52b69296a83" translate="yes" xml:space="preserve">
          <source>Restricts the module to the safe language. All of the module&amp;rsquo;s direct imports must be trusted, but the module itself need not reside in a trusted package, because the compiler vouches for its trustworthiness. The &amp;ldquo;safe&amp;rdquo; keyword is allowed but meaningless in import statements, as regardless, every import is required to be safe.</source>
          <target state="translated">将模块限制为安全语言。模块的所有直接导入都必须是受信任的，但是模块本身不必驻留在受信任的程序包中，因为编译器保证其可信赖性。允许使用&amp;ldquo;安全&amp;rdquo;关键字，但在导入语句中没有意义，因为无论如何，每次导入都必须安全。</target>
        </trans-unit>
        <trans-unit id="c7f93cb4cbd018198d45aad9dd5a95fdaa60b376" translate="yes" xml:space="preserve">
          <source>Result and lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; written as its side-effect</source>
          <target state="translated">结果和懒惰的 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 被写为其副作用</target>
        </trans-unit>
        <trans-unit id="f126664f4124c32cc770797ecc3b6cb80fef630c" translate="yes" xml:space="preserve">
          <source>Result is meaningless if two &lt;code&gt;Addr#&lt;/code&gt;s are so far apart that their difference doesn't fit in an &lt;code&gt;Int#&lt;/code&gt;.</source>
          <target state="translated">如果两个 &lt;code&gt;Addr#&lt;/code&gt; 相距太远，以至于它们的差值不适用于 &lt;code&gt;Int#&lt;/code&gt; ，那么结果将毫无意义。</target>
        </trans-unit>
        <trans-unit id="4e33029c02405231480642f8c9bc28cfb0dc6afd" translate="yes" xml:space="preserve">
          <source>Result.</source>
          <target state="translated">Result.</target>
        </trans-unit>
        <trans-unit id="1ea7765ea17f75b1dace09820437939bcd61f222" translate="yes" xml:space="preserve">
          <source>Resulting lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">结果懒惰的 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09514b660f7685e5cf80db6e1ba61aa96e531258" translate="yes" xml:space="preserve">
          <source>Resume evaluation of a statement after a breakpoint</source>
          <target state="translated">在断点后恢复对语句的评估。</target>
        </trans-unit>
        <trans-unit id="189b143e6db1cdbc059600f661781a293d9ff007" translate="yes" xml:space="preserve">
          <source>Resume forcing a free variable in a breakpoint (#2950)</source>
          <target state="translated">恢复强制断点中的自由变量(#2950)</target>
        </trans-unit>
        <trans-unit id="99cd022cdbb965b966c78945de76be3957290c13" translate="yes" xml:space="preserve">
          <source>ResumeContext</source>
          <target state="translated">ResumeContext</target>
        </trans-unit>
        <trans-unit id="d5901174d9264b57ddae050fb20336e360ef9545" translate="yes" xml:space="preserve">
          <source>Retain CAFs unconditionally in linked Haskell code. Note that this prevents any code from being unloaded. It should not be necessary unless you are GHCi or hs-plugins, which needs to be able call any function in the compiled code.</source>
          <target state="translated">在链接的 Haskell 代码中无条件地保留 CAF。注意,这可以防止任何代码被卸载。除非你是GHCi或hs-plugins,它需要能够调用编译代码中的任何函数,否则不应该是必要的。</target>
        </trans-unit>
        <trans-unit id="c22154d58d981f7367609ab1e57cfd763b0192df" translate="yes" xml:space="preserve">
          <source>Retain all intermediate temporary files.</source>
          <target state="translated">保留所有中间临时文件。</target>
        </trans-unit>
        <trans-unit id="27d1adc7706f62a9f9a5cda60fb9e7578096f7d7" translate="yes" xml:space="preserve">
          <source>Retain intermediate &lt;code&gt;.hc&lt;/code&gt; files.</source>
          <target state="translated">保留中间 &lt;code&gt;.hc&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="1c913a795a1f09102a325857b15b734b517d6fd9" translate="yes" xml:space="preserve">
          <source>Retain intermediate &lt;code&gt;.hi&lt;/code&gt; files (the default).</source>
          <target state="translated">保留中间的 &lt;code&gt;.hi&lt;/code&gt; 文件（默认设置）。</target>
        </trans-unit>
        <trans-unit id="94f8149a3370382a007aedc88c60d2a9c3a7ac93" translate="yes" xml:space="preserve">
          <source>Retain intermediate &lt;code&gt;.hscpp&lt;/code&gt; files.</source>
          <target state="translated">保留中间的 &lt;code&gt;.hscpp&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="a97f4a882fdd81370c7271183798db3e068d96e5" translate="yes" xml:space="preserve">
          <source>Retain intermediate &lt;code&gt;.o&lt;/code&gt; files (the default).</source>
          <target state="translated">保留中间 &lt;code&gt;.o&lt;/code&gt; 文件（默认值）。</target>
        </trans-unit>
        <trans-unit id="7677f34472654a783e346ec0365bf5cde487e01d" translate="yes" xml:space="preserve">
          <source>Retain intermediate &lt;code&gt;.s&lt;/code&gt; files.</source>
          <target state="translated">保留中间的 &lt;code&gt;.s&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="6abfcf523bf9d66cec96d1a7ee8f7a4938402d9b" translate="yes" xml:space="preserve">
          <source>Retain intermediate LLVM &lt;code&gt;.ll&lt;/code&gt; files. Implies &lt;a href=&quot;phases#ghc-flag--fllvm&quot;&gt;&lt;code&gt;-fllvm&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">保留中间LLVM &lt;code&gt;.ll&lt;/code&gt; 文件。意味着&lt;a href=&quot;phases#ghc-flag--fllvm&quot;&gt; &lt;code&gt;-fllvm&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8bf8f391a4a50c2f5f64ab4e79fd10a787a92b03" translate="yes" xml:space="preserve">
          <source>RetainCAFs</source>
          <target state="translated">RetainCAFs</target>
        </trans-unit>
        <trans-unit id="8c7019f656594681f2d84dd41a1127bda39fb82f" translate="yes" xml:space="preserve">
          <source>Retainer profiling is designed to help answer questions like &amp;ldquo;why is this data being retained?&amp;rdquo;. We start by defining what we mean by a retainer:</source>
          <target state="translated">保持器配置文件旨在帮助回答诸如&amp;ldquo;为什么保留此数据？&amp;rdquo;之类的问题。我们首先定义保留者的含义：</target>
        </trans-unit>
        <trans-unit id="33953edf5744f519b329e5f8500334513029c025" translate="yes" xml:space="preserve">
          <source>Retainer profiling requires multiple passes over the live heap in order to discover the full retainer set for each object, which can be quite slow. So we set a limit on the maximum size of a retainer set, where all retainer sets larger than the maximum retainer set size are replaced by the special set &lt;code&gt;MANY&lt;/code&gt;. The maximum set size defaults to 8 and can be altered with the &lt;a href=&quot;#rts-flag--R%20%E2%9F%A8size%E2%9F%A9&quot;&gt;&lt;code&gt;-R ⟨size⟩&lt;/code&gt;&lt;/a&gt; RTS option:</source>
          <target state="translated">保持器分析需要在活动堆上进行多次传递，以便发现每个对象的完整保持器集，这可能会很慢。因此，我们对保留集的最大大小设置了限制，其中所有大于最大保留集大小的保留集都被特殊集 &lt;code&gt;MANY&lt;/code&gt; 代替。最大设置大小默认为8，可以使用&lt;a href=&quot;#rts-flag--R%20%E2%9F%A8size%E2%9F%A9&quot;&gt; &lt;code&gt;-R ⟨size⟩&lt;/code&gt; &lt;/a&gt;选项更改：</target>
        </trans-unit>
        <trans-unit id="67be3168cf0629e4eae05d5b7b9dbd03b3c41ac3" translate="yes" xml:space="preserve">
          <source>Retrieve a function of the current environment.</source>
          <target state="translated">检索当前环境的函数。</target>
        </trans-unit>
        <trans-unit id="6d9571fc9ee3f5278e0c11ef645e5f7b3e1788c9" translate="yes" xml:space="preserve">
          <source>Retrieve the address of any Haskell value. This is essentially an &lt;code&gt;unsafeCoerce#&lt;/code&gt;, but if implemented as such the core lint pass complains and fails to compile. As a primop, it is opaque to core/stg, and only appears in cmm (where the copy propagation pass will get rid of it). Note that &quot;a&quot; must be a value, not a thunk! It's too late for strictness analysis to enforce this, so you're on your own to guarantee this. Also note that &lt;code&gt;Addr#&lt;/code&gt; is not a GC pointer - up to you to guarantee that it does not become a dangling pointer immediately after you get it.</source>
          <target state="translated">检索任何Haskell值的地址。这本质上是一个 &lt;code&gt;unsafeCoerce#&lt;/code&gt; ，但是如果以这种方式实现，则核心lint pass会抱怨并且无法编译。作为primop，它对于core / stg是不透明的，并且仅以cmm出现（复制传播通道将删除cmm）。请注意，&amp;ldquo; a&amp;rdquo;必须是一个值，而不是一个笨拙的东西！严格性分析强制实施现在为时已晚，因此您必须自己保证。还要注意， &lt;code&gt;Addr#&lt;/code&gt; 不是GC指针-由您决定，确保它在获得后不会立即变成悬空指针。</target>
        </trans-unit>
        <trans-unit id="d67c922a88a65693be2b1528f839dbe2af671ef5" translate="yes" xml:space="preserve">
          <source>Retrieve the system event manager for the capability on which the calling thread is running.</source>
          <target state="translated">检索调用线程正在运行的能力的系统事件管理器。</target>
        </trans-unit>
        <trans-unit id="235badb39d6373c1cb58e6c1848af90cf3bee578" translate="yes" xml:space="preserve">
          <source>Retrieve the target path of either a file or directory symbolic link. The returned path may not be absolute, may not exist, and may not even be a valid path.</source>
          <target state="translated">检索一个文件或目录符号链接的目标路径。返回的路径可能不是绝对路径,可能不存在,甚至可能不是有效路径。</target>
        </trans-unit>
        <trans-unit id="e5b054dbd8a0e74b67f6dbc9d2335a04d6537353" translate="yes" xml:space="preserve">
          <source>Retrieves a function of the current environment.</source>
          <target state="translated">检索当前环境的函数。</target>
        </trans-unit>
        <trans-unit id="d17266b1630a9adf39cc3d99f791ee0584d71942" translate="yes" xml:space="preserve">
          <source>Retrieves the allocation counter for the current thread.</source>
          <target state="translated">检索当前线程的分配计数器。</target>
        </trans-unit>
        <trans-unit id="6e91946c8c050e29662b02a9062f6c9667679dfd" translate="yes" xml:space="preserve">
          <source>Retrieves the monad environment.</source>
          <target state="translated">检索单体环境。</target>
        </trans-unit>
        <trans-unit id="2c23c52fc6ba8b0150f98d916f65b08930d46770" translate="yes" xml:space="preserve">
          <source>Retry execution of the current memory transaction because it has seen values in &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s which mean that it should not continue (e.g. the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s represent a shared buffer that is now empty). The implementation may block the thread until one of the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s that it has read from has been updated. (GHC only)</source>
          <target state="translated">重试当前内存事务的执行，因为它已经在 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中看到了值，这意味着它不应该继续执行（例如， &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 代表现在为空的共享缓冲区）。该实现可以阻塞线程，直到已从中读取的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 之一已更新。（仅限GHC）</target>
        </trans-unit>
        <trans-unit id="bd96c6cf565c03c2ca0661677b90019b856d671d" translate="yes" xml:space="preserve">
          <source>Retry execution of the current memory transaction because it has seen values in &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s which mean that it should not continue (e.g. the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s represent a shared buffer that is now empty). The implementation may block the thread until one of the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s that it has read from has been updated. (GHC only)</source>
          <target state="translated">重试当前内存事务的执行，因为它已经在 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中看到了值，这意味着它不应该继续执行（例如， &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 代表现在为空的共享缓冲区）。该实现可以阻塞线程，直到已从中读取的 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 之一已更新。（仅限GHC）</target>
        </trans-unit>
        <trans-unit id="a41598457732e6a139ea7baf3e01dacbaa879066" translate="yes" xml:space="preserve">
          <source>Retry execution of the current memory transaction because it has seen values in &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s which mean that it should not continue (e.g. the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s represent a shared buffer that is now empty). The implementation may block the thread until one of the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s that it has read from has been updated. (GHC only)</source>
          <target state="translated">重试当前内存事务的执行，因为它已经在 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中看到了值，这意味着它不应该继续执行（例如， &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 代表现在为空的共享缓冲区）。该实现可以阻塞线程，直到已从中读取的 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 之一已更新。（仅限GHC）</target>
        </trans-unit>
        <trans-unit id="5f55dc7b78eff20eb547e4e65b19db690d4f2f91" translate="yes" xml:space="preserve">
          <source>Return 1 if &lt;code&gt;MVar#&lt;/code&gt; is empty; 0 otherwise.</source>
          <target state="translated">如果 &lt;code&gt;MVar#&lt;/code&gt; 为空，则返回1；否则返回1 。否则为0。</target>
        </trans-unit>
        <trans-unit id="239d43f62a2ac56e1dbb4fb2dddfc95302d9b332" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;1&lt;/code&gt; depending on whether argument is negative, zero, or positive, respectively</source>
          <target state="translated">返回 &lt;code&gt;-1&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; ，和 &lt;code&gt;1&lt;/code&gt; 这取决于参数是否为负，零，或正数，分别</target>
        </trans-unit>
        <trans-unit id="75ae59416d00ac6d23a619b93fee5990e88af0ba" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;n&lt;/code&gt;th bit of the argument is 1</source>
          <target state="translated">如果参数的第 &lt;code&gt;n&lt;/code&gt; 位为1，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53cf09a54a19ee477705620e40bcfb76df4f57a8" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is a signed type. The actual value of the argument is ignored</source>
          <target state="translated">如果参数是带符号的类型，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。参数的实际值被忽略</target>
        </trans-unit>
        <trans-unit id="eac4dfb2694aef9d0b8f5e10b7ac3081dd00ae76" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the given value is a &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;-value, &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果给定值是 &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; -value，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ，否则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eca218c17eed305dc2ccdc0de31b5e04d9d790d4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the given value is a &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;-value, &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果给定值是 &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 值，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ，否则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d9487c74e478b83432c0f9ed756421488cb12f9" translate="yes" xml:space="preserve">
          <source>Return a lazy list representing the contents of the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;, much like &lt;code&gt;&lt;a href=&quot;system-io#v:hGetContents&quot;&gt;hGetContents&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回一个懒惰的列表，表示提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; 的内容，就像 &lt;code&gt;&lt;a href=&quot;system-io#v:hGetContents&quot;&gt;hGetContents&lt;/a&gt;&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="dde79354e4f97fd4330824eb28771fc86a169834" translate="yes" xml:space="preserve">
          <source>Return a list of all the associations of a mutable array, in index order.</source>
          <target state="translated">按索引顺序返回一个可变数组的所有关联列表。</target>
        </trans-unit>
        <trans-unit id="5294447931aadc184da1bcc2bf0aa028072f7b77" translate="yes" xml:space="preserve">
          <source>Return a list of all the elements of a mutable array</source>
          <target state="translated">返回一个可变数组中所有元素的列表。</target>
        </trans-unit>
        <trans-unit id="50ee4676f7c6d6de5113fecfe4b4e6f32c7787ff" translate="yes" xml:space="preserve">
          <source>Return a printing function, which in terminal-style interactions is thread-safe and may be run concurrently with user input without affecting the prompt.</source>
          <target state="translated">返回一个打印函数,在终端式交互中,该函数是线程安全的,可以与用户输入同时运行,不影响提示。</target>
        </trans-unit>
        <trans-unit id="57437da4505312d826ea216562dd7d443309e6b7" translate="yes" xml:space="preserve">
          <source>Return a string describing the usage of a command, derived from the header (first argument) and the options described by the second argument.</source>
          <target state="translated">返回一个描述命令用法的字符串,该字符串由头(第一个参数)和第二个参数描述的选项导出。</target>
        </trans-unit>
        <trans-unit id="779e54790db9de99c9b1f48ad7780baecb50b57d" translate="yes" xml:space="preserve">
          <source>Return a triple (isHighNeeded,high,low) where high and low are respectively the high and low bits of the double-word result. isHighNeeded is a cheap way to test if the high word is a sign-extension of the low word (isHighNeeded = 0#) or not (isHighNeeded = 1#).</source>
          <target state="translated">isHighNeeded是测试高字是否是低字的标志扩展(isHighNeeded=0#)或是否是(isHighNeeded=1#)的廉价方法。</target>
        </trans-unit>
        <trans-unit id="239bc1a1b2f9b5af6133bea92a7a0289c85350c8" translate="yes" xml:space="preserve">
          <source>Return a word where only the highest bit is set.</source>
          <target state="translated">返回一个只设置最高位的字。</target>
        </trans-unit>
        <trans-unit id="a34cf9a224b0d2339198c27219aca2835c18c572" translate="yes" xml:space="preserve">
          <source>Return monotonic time in nanoseconds, since some unspecified starting point</source>
          <target state="translated">从某个未指定的起始点开始,以纳秒为单位返回单调时间。</target>
        </trans-unit>
        <trans-unit id="bc8397067589a4106551930ce04ff005c5ca83dc" translate="yes" xml:space="preserve">
          <source>Return monotonic time in seconds, since some unspecified starting point</source>
          <target state="translated">从某个未指定的起始点开始,以秒为单位返回单调时间。</target>
        </trans-unit>
        <trans-unit id="e049737e569caa173356b218731d69e810155a45" translate="yes" xml:space="preserve">
          <source>Return non-zero if there is any possibility that the upper word of a signed integer multiply might contain useful information. Return zero only if you are completely sure that no overflow can occur. On a 32-bit platform, the recommended implementation is to do a 32 x 32 -&amp;gt; 64 signed multiply, and subtract result[63:32] from (result[31] &amp;gt;&amp;gt;signed 31). If this is zero, meaning that the upper word is merely a sign extension of the lower one, no overflow can occur.</source>
          <target state="translated">如果有符号整数乘法的高位字可能包含有用的信息，则返回非零。仅在完全确定不会发生溢出时才返回零。在32位平台上，推荐的实现方式是执行32 x 32-&amp;gt; 64有符号乘法，并从（result [31] &amp;gt;&amp;gt; signed 31）中减去result [63:32]。如果为零，则意味着高位字仅仅是低位字的符号扩展，因此不会发生溢出。</target>
        </trans-unit>
        <trans-unit id="089af53d4f503e35d265ce67c50d16af5751b41c" translate="yes" xml:space="preserve">
          <source>Return number of limbs contained in &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; 中包含的肢体数。</target>
        </trans-unit>
        <trans-unit id="85ec6ff49102368c01101d47968288128fbabe34" translate="yes" xml:space="preserve">
          <source>Return the Module at the place of splicing. Can be used as an input for &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyModule&quot;&gt;reifyModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将模块返回到拼接位置。可用作 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyModule&quot;&gt;reifyModule&lt;/a&gt;&lt;/code&gt; 的输入。</target>
        </trans-unit>
        <trans-unit id="e9feff01416814c7f674de08669bf9a6210d4ba5" translate="yes" xml:space="preserve">
          <source>Return the contents of a &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;-value or a default value otherwise.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; 值的内容，否则返回默认值。</target>
        </trans-unit>
        <trans-unit id="6a4219a1ca698a5ce4bdecbe9f37c4fe76184a7b" translate="yes" xml:space="preserve">
          <source>Return the contents of a &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;-value or a default value otherwise.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 值的内容，否则返回默认值。</target>
        </trans-unit>
        <trans-unit id="50a35e6d38815fc302d4c90367bb6daf75c38f29" translate="yes" xml:space="preserve">
          <source>Return the contents of the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently empty, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; will wait until it is full. After a &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 的内容。如果 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前为空，则 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 将等待直到其满为止。在 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 之后， &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 将留空。</target>
        </trans-unit>
        <trans-unit id="e26b74da17c33b2ba651eaaf96834eedc3261b44" translate="yes" xml:space="preserve">
          <source>Return the contents of the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently empty, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; will wait until it is full. After a &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 的内容。如果 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前为空，则 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 将等待直到其满为止。在 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 之后， &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 将留空。</target>
        </trans-unit>
        <trans-unit id="fe84a6a2a3e1083ff5d74eb60f5157e2929ab806" translate="yes" xml:space="preserve">
          <source>Return the contents of the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently empty, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; will wait until it is full. After a &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 的内容。如果 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前为空，则 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 将等待直到其满为止。在 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 之后， &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 将留空。</target>
        </trans-unit>
        <trans-unit id="12d450260d7a459d097708b37ebc8db3a8f28013" translate="yes" xml:space="preserve">
          <source>Return the contents of the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently empty, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; will wait until it is full. After a &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 的内容。如果 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前为空，则 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 将等待直到其满为止。在 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 之后， &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 将留空。</target>
        </trans-unit>
        <trans-unit id="d328824b3c6db4e18e37fb0076d3c2e8117db196" translate="yes" xml:space="preserve">
          <source>Return the contents of the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is currently empty, the transaction will &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt;. After a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:takeTMVar&quot;&gt;takeTMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 的内容。如果 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 当前为空，则事务将 &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; 。在 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:takeTMVar&quot;&gt;takeTMVar&lt;/a&gt;&lt;/code&gt; 之后， &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 将留空。</target>
        </trans-unit>
        <trans-unit id="f5b4f1d61fdfa4d546a13cfaad9fb2a667775f27" translate="yes" xml:space="preserve">
          <source>Return the contents of the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently empty, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; will wait until it is full. After a &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 的内容。如果 &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前为空，则 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 将等待直到其满为止。在 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 之后， &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 将留空。</target>
        </trans-unit>
        <trans-unit id="ea68eb97919fc9b0cfd5d29c51e40ceaef8943ba" translate="yes" xml:space="preserve">
          <source>Return the current &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回当前的 &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="817a97b03ad38f3f72fce56fda12a6de1ad19b0c" translate="yes" xml:space="preserve">
          <source>Return the current &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; for the specified &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is in binary mode.</source>
          <target state="translated">返回指定的 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 的当前 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; ，如果 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 处于二进制模式，则返回 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="319e57db0ec551d795190efab473311e211d6d1f" translate="yes" xml:space="preserve">
          <source>Return the current &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; for the specified &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is in binary mode.</source>
          <target state="translated">返回指定的 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 的当前 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; ，如果 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 处于二进制模式，则返回 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7a1a27b6aea426eea23d043cc1153d66ea581e5" translate="yes" xml:space="preserve">
          <source>Return the current &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; for the specified &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is in binary mode.</source>
          <target state="translated">返回指定的 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 的当前 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; ，如果 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 处于二进制模式，则返回 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a385606de0a0d97dcf5a301fa91b6acdb8993db6" translate="yes" xml:space="preserve">
          <source>Return the current &lt;code&gt;&lt;a href=&quot;system-io#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; for the specified &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is in binary mode.</source>
          <target state="translated">返回指定的 &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 的当前 &lt;code&gt;&lt;a href=&quot;system-io#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; ，如果 &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 处于二进制模式，则返回 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="030b59327240344191337257cba1ced35f7e462b" translate="yes" xml:space="preserve">
          <source>Return the current state of the codec.</source>
          <target state="translated">返回编解码器的当前状态。</target>
        </trans-unit>
        <trans-unit id="ffdac4826cf5e6776bfa99acff9575e942f4dcf5" translate="yes" xml:space="preserve">
          <source>Return the current value of the allocation counter for the current thread.</source>
          <target state="translated">返回当前线程的分配计数器的当前值。</target>
        </trans-unit>
        <trans-unit id="614b003213b2a6029b214aae2c537019dd082e03" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。</target>
        </trans-unit>
        <trans-unit id="c9ef1cc8cbe1136acc0260f0302bf15831f79133" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;. This is equivalent to</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。这相当于</target>
        </trans-unit>
        <trans-unit id="1adfeb4463484d8a90b6a055148c1a24fb260b36" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。</target>
        </trans-unit>
        <trans-unit id="de07a8e373cde6be61c5b2aa67d876192a13923f" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;. This is equivalent to</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。这相当于</target>
        </trans-unit>
        <trans-unit id="2989d911f3e6d348eb0d3212d71e35f878d57174" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。</target>
        </trans-unit>
        <trans-unit id="b717a867ccdc10b3d490ff579c22b82c4b548f16" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;. This is equivalent to</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。这相当于</target>
        </trans-unit>
        <trans-unit id="7c3cf41214c8e4f2638aaeeaf85a590be1d8dfff" translate="yes" xml:space="preserve">
          <source>Return the length of a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="89e1ee73af0c66d132ceb25eff85b101d3885543" translate="yes" xml:space="preserve">
          <source>Return the number of bits in the type of the argument. The actual value of the argument is ignored. Moreover, &lt;code&gt;&lt;a href=&quot;data-bits#v:finiteBitSize&quot;&gt;finiteBitSize&lt;/a&gt;&lt;/code&gt; is total, in contrast to the deprecated &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; function it replaces.</source>
          <target state="translated">返回参数类型的位数。参数的实际值将被忽略。而且， &lt;code&gt;&lt;a href=&quot;data-bits#v:finiteBitSize&quot;&gt;finiteBitSize&lt;/a&gt;&lt;/code&gt; 取代的不推荐使用的 &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; 函数相比，finiteBitSize是总计。</target>
        </trans-unit>
        <trans-unit id="c3d31ee919be276fced9ac0c9ab3823d5574040e" translate="yes" xml:space="preserve">
          <source>Return the number of bits in the type of the argument. The actual value of the argument is ignored. Returns Nothing for types that do not have a fixed bitsize, like &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回参数类型的位数。参数的实际值将被忽略。对于没有固定位大小的类型，如 &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; ，不返回Nothing 。</target>
        </trans-unit>
        <trans-unit id="ad946e3684fd16c73b3c7e852c835abb79d62032" translate="yes" xml:space="preserve">
          <source>Return the number of bits in the type of the argument. The actual value of the argument is ignored. The function &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; is undefined for types that do not have a fixed bitsize, like &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回参数类型的位数。参数的实际值将被忽略。对于没有固定位大小的类型，例如 &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; ，未定义功能 &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a62d9a774a1acb8192ffd48d2a06aba53e3f8629" translate="yes" xml:space="preserve">
          <source>Return the number of elements in an array, excluding the terminator</source>
          <target state="translated">返回一个数组中的元素数,不包括结束符。</target>
        </trans-unit>
        <trans-unit id="7207025791701e635ca0ea0addb569d6c91a1091" translate="yes" xml:space="preserve">
          <source>Return the number of elements in the array.</source>
          <target state="translated">返回数组中的元素数。</target>
        </trans-unit>
        <trans-unit id="9af3da56d22f4c37adfe88ac9731dd1c08692c0c" translate="yes" xml:space="preserve">
          <source>Return the number of elements in the array. Note that this is deprecated as it is unsafe in the presence of resize operations on the same byte array.</source>
          <target state="translated">返回数组中的元素数。请注意,这已经被废弃了,因为在同一个字节数组上进行调整大小的操作是不安全的。</target>
        </trans-unit>
        <trans-unit id="a2068ed16ec2d4a9d84e4d8813c65674231adbea" translate="yes" xml:space="preserve">
          <source>Return the number of elements in the array. Note that this is deprecated as it is unsafe in the presence of shrink and resize operations on the same small mutable array.</source>
          <target state="translated">返回数组中的元素数。请注意,这已被废弃,因为在同一个小的可变异数组上进行收缩和调整大小的操作时是不安全的。</target>
        </trans-unit>
        <trans-unit id="73ecce489f9b016a85e9caf7097faa854323f633" translate="yes" xml:space="preserve">
          <source>Return the number of set bits in the argument. This number is known as the population count or the Hamming weight.</source>
          <target state="translated">返回参数中设置的位数。这个数字被称为人口数或汉明权重。</target>
        </trans-unit>
        <trans-unit id="001826001d925fec3d8e09c965f9e3b649b1b3c4" translate="yes" xml:space="preserve">
          <source>Return the remainder when the &lt;code&gt;Addr#&lt;/code&gt; arg, treated like an &lt;code&gt;Int#&lt;/code&gt;, is divided by the &lt;code&gt;Int#&lt;/code&gt; arg.</source>
          <target state="translated">当被视为 &lt;code&gt;Int#&lt;/code&gt; 的 &lt;code&gt;Addr#&lt;/code&gt; arg 除以 &lt;code&gt;Int#&lt;/code&gt; arg 时，返回余数。</target>
        </trans-unit>
        <trans-unit id="5e6078fa513ac85f0eda91b236f8fdce5222aa5e" translate="yes" xml:space="preserve">
          <source>Return the semaphore's current value.</source>
          <target state="translated">返回信号站的当前值。</target>
        </trans-unit>
        <trans-unit id="b5d147e285e6b05dbda5c74bad5337bb41dbd8b1" translate="yes" xml:space="preserve">
          <source>Return the size (in bytes) of the total amount of data in the Compact#</source>
          <target state="translated">返回Compact#中数据总量的大小(以字节为单位)。</target>
        </trans-unit>
        <trans-unit id="98e01265cf79d949deadddc3ba5e5f6f758f4186" translate="yes" xml:space="preserve">
          <source>Return the size of the array in bytes.</source>
          <target state="translated">返回数组的大小,单位为字节。</target>
        </trans-unit>
        <trans-unit id="8704ecbd6192b39b6106bea7ebf11974686a3858" translate="yes" xml:space="preserve">
          <source>Return the size of the array in bytes. Note that this is deprecated as it is unsafe in the presence of concurrent resize operations on the same byte array.</source>
          <target state="translated">返回数组的大小,单位为字节。请注意,这已被废弃,因为在同一个字节数组上进行并发的调整大小操作时,这是不安全的。</target>
        </trans-unit>
        <trans-unit id="1ff2930104db52d8e6af43f863c7b1f5a8a9c03b" translate="yes" xml:space="preserve">
          <source>Return the size of the array in bytes. Note that this is deprecated as it is unsafe in the presence of resize operations on the same byte array.</source>
          <target state="translated">返回数组的大小,单位为字节。请注意,这已被废弃,因为在同一个字节数组上进行调整大小的操作是不安全的。</target>
        </trans-unit>
        <trans-unit id="12f159b0466775f8400f24774f066906f003ac42" translate="yes" xml:space="preserve">
          <source>Return the size of the array in bytes. Note that this is deprecated as it is unsafe in the presence of shrink and resize operations on the same mutable byte array.</source>
          <target state="translated">返回数组的大小,单位为字节。请注意,这已被废弃,因为在同一个可变字节数组上进行收缩和调整大小的操作时是不安全的。</target>
        </trans-unit>
        <trans-unit id="dfa9f1634a0cad72a30578589079946deafd9460" translate="yes" xml:space="preserve">
          <source>Return the state from the internals of the monad.</source>
          <target state="translated">从单体的内部返回状态。</target>
        </trans-unit>
        <trans-unit id="7ec810d4714696625c6439eddff2c4628fa57f73" translate="yes" xml:space="preserve">
          <source>Return the time value, or fail if the input could not be parsed using the given format.</source>
          <target state="translated">返回时间值,如果不能使用给定格式解析输入,则返回失败。</target>
        </trans-unit>
        <trans-unit id="f297d4738e7ca3048d89b170ec8392d122a67901" translate="yes" xml:space="preserve">
          <source>Return the total capacity (in bytes) of all the compact blocks in the CNF.</source>
          <target state="translated">返回CNF中所有压缩块的总容量(单位:字节)。</target>
        </trans-unit>
        <trans-unit id="67594615fe0fd713d7301e1cf95394f84441524a" translate="yes" xml:space="preserve">
          <source>Return the value computed by a state thread. The &lt;code&gt;forall&lt;/code&gt; ensures that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is inaccessible to the rest of the program.</source>
          <target state="translated">返回状态线程计算的值。的 &lt;code&gt;forall&lt;/code&gt; 确保了由所使用的内部状态 &lt;code&gt;&lt;a href=&quot;control-monad-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算是不可访问的程序的其余部分。</target>
        </trans-unit>
        <trans-unit id="08ec30101641388ed0799d058467b964d16b9a11" translate="yes" xml:space="preserve">
          <source>Return the value computed by a state thread. The &lt;code&gt;forall&lt;/code&gt; ensures that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is inaccessible to the rest of the program.</source>
          <target state="translated">返回状态线程计算的值。的 &lt;code&gt;forall&lt;/code&gt; 确保了由所使用的内部状态 &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算是不可访问的程序的其余部分。</target>
        </trans-unit>
        <trans-unit id="5eb87b59acb5c444781344b0f77efc2846c346fe" translate="yes" xml:space="preserve">
          <source>Return the value computed by a state thread. The &lt;code&gt;forall&lt;/code&gt; ensures that the internal state used by the &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is inaccessible to the rest of the program.</source>
          <target state="translated">返回状态线程计算的值。的 &lt;code&gt;forall&lt;/code&gt; 确保了由所使用的内部状态 &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算是不可访问的程序的其余部分。</target>
        </trans-unit>
        <trans-unit id="2a81f979ce3d6a40db8e10b5ee216f1eed7fbeef" translate="yes" xml:space="preserve">
          <source>Return the value computed by an &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation. The &lt;code&gt;forall&lt;/code&gt; ensures that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is inaccessible to the rest of the program.</source>
          <target state="translated">返回由 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算得出的值。的 &lt;code&gt;forall&lt;/code&gt; 确保了由所使用的内部状态 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算是不可访问的程序的其余部分。</target>
        </trans-unit>
        <trans-unit id="2c3fe4fba80f409979cb4f6d8d58120117fc9c9b" translate="yes" xml:space="preserve">
          <source>Return the value computed by an &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation. The &lt;code&gt;forall&lt;/code&gt; ensures that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is inaccessible to the rest of the program.</source>
          <target state="translated">返回由 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算得出的值。的 &lt;code&gt;forall&lt;/code&gt; 确保了由所使用的内部状态 &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算是不可访问的程序的其余部分。</target>
        </trans-unit>
        <trans-unit id="9d0082a9c912e15b1feb525005aab9eb60b8be4c" translate="yes" xml:space="preserve">
          <source>Return the value of the environment variable &lt;code&gt;var&lt;/code&gt;, or &lt;code&gt;Nothing&lt;/code&gt; if there is no such value.</source>
          <target state="translated">返回环境变量的值 &lt;code&gt;var&lt;/code&gt; 或 &lt;code&gt;Nothing&lt;/code&gt; ，如果没有这样的价值。</target>
        </trans-unit>
        <trans-unit id="1fe2d3d91d929346aa78f0873cf3985dba6a3e56" translate="yes" xml:space="preserve">
          <source>Return whether the given &lt;code&gt;&lt;a href=&quot;system-directory-internal#t:FileType&quot;&gt;FileType&lt;/a&gt;&lt;/code&gt; is a link.</source>
          <target state="translated">返回给定的 &lt;code&gt;&lt;a href=&quot;system-directory-internal#t:FileType&quot;&gt;FileType&lt;/a&gt;&lt;/code&gt; 是否为链接。</target>
        </trans-unit>
        <trans-unit id="31ae2630c67c91d86384955170e52ce07a94347b" translate="yes" xml:space="preserve">
          <source>Returning &lt;code&gt;x&lt;/code&gt; unmodified</source>
          <target state="translated">返回 &lt;code&gt;x&lt;/code&gt; 未修改</target>
        </trans-unit>
        <trans-unit id="782ad6855ec6b3e543f77a57bf9d64a2ecd70bab" translate="yes" xml:space="preserve">
          <source>Returning to simpler instances, defined just in terms of &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;, it is somewhat surprising that a fairly efficient &lt;em&gt;default&lt;/em&gt; implementation of the strict &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;` is defined in terms of lazy &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; when only the latter is explicitly provided by the instance. It may be instructive to take a look at how this works.</source>
          <target state="translated">返回仅由 &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 定义的更简单的实例，当实例仅显式提供惰性 &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; 时，就根据懒惰的folder定义了strict &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; `的相当有效的&lt;em&gt;默认&lt;/em&gt;实现，这有点令人惊讶。看看它是如何工作的可能是有益的。</target>
        </trans-unit>
        <trans-unit id="9b4a5550d59915e56cad99e3c0f087b7602257cc" translate="yes" xml:space="preserve">
          <source>Returns $HOME env variable if set (including to an empty string).</source>
          <target state="translated">如果设置了,返回$HOME env变量(包括为空字符串)。</target>
        </trans-unit>
        <trans-unit id="a8ed04ec8c74299c8edea1b659530fa3d6e54236" translate="yes" xml:space="preserve">
          <source>Returns 1# if the object is contained in the CNF, 0# otherwise.</source>
          <target state="translated">如果对象包含在CNF中,返回1#,否则返回0#。</target>
        </trans-unit>
        <trans-unit id="030fb3b5f0545d8254f1c18f2171486ba7bed91a" translate="yes" xml:space="preserve">
          <source>Returns 1# if the object is contained in the compact, 0# otherwise.</source>
          <target state="translated">如果对象包含在契约中,返回1#,否则返回0#。</target>
        </trans-unit>
        <trans-unit id="f24a51d2d2463cfd2fd00d79534de1ab6f0bf963" translate="yes" xml:space="preserve">
          <source>Returns 1# if the object is in any CNF at all, 0# otherwise.</source>
          <target state="translated">如果对象在任何CNF中,返回1#,否则返回0#。</target>
        </trans-unit>
        <trans-unit id="31bf08f6e44b790a526f3ea37ca40cb2c13ca76b" translate="yes" xml:space="preserve">
          <source>Returns 1# if the object is in any compact at all, 0# otherwise.</source>
          <target state="translated">如果对象处于任何压缩状态,返回1#,否则返回0#。</target>
        </trans-unit>
        <trans-unit id="40de57011981525670a3f92d1c62c69ee14f07ea" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1#&lt;/code&gt; if the given pointers are equal and &lt;code&gt;0#&lt;/code&gt; otherwise.</source>
          <target state="translated">如果给定的指针相等，则返回 &lt;code&gt;1#&lt;/code&gt; ,否则返回 &lt;code&gt;0#&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="054506879fa255b3f44c6987f6925348a7c9958b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1#&lt;/code&gt; if valid, &lt;code&gt;0#&lt;/code&gt; otherwise.</source>
          <target state="translated">如果有效，则返回 &lt;code&gt;1#&lt;/code&gt; ，否则返回 &lt;code&gt;0#&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66861a05c2b6a00a48f4b73591c9c11c31784b76" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the current process's standard error is attached to a MinTTY console (e.g., Cygwin or MSYS). Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果当前进程的标准错误附加到MinTTY控制台（例如Cygwin或MSYS），则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。否则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cb06e70b306281690d4964d1014d6443ff8910b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the current session uses terminal-style interaction. (See &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">如果当前会话使用终端风格的交互，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。（请参阅 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="55ddad51179261e3fce77d477585e6ee7b9c48be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the document is empty</source>
          <target state="translated">如果文档为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6bcb06cf572ace1fb67c627721d6fa9375571e5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4381b423b7ed3206027d100df0db8796fec244b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is full.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 已满，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3dacac11929a3bbcaac1dcae5a04ad003fad46c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64d6bd42612b74dc3ea59431fe9eb65e59aa3cf2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1052b9398d6120dfadc74e0d652efcf7d43679cc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; is the given handle is attached to a MinTTY console (e.g., Cygwin or MSYS). Returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果给定的句柄已连接到MinTTY控制台（例如Cygwin或MSYS），则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。否则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="54722f10bce47c54cf3530854dd7446ab25c6470" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if it successfully accepted one key. Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; if it encountered the end of input; i.e., an &lt;code&gt;EOF&lt;/code&gt; in file-style interaction, or a &lt;code&gt;Ctrl-D&lt;/code&gt; in terminal-style interaction.</source>
          <target state="translated">如果成功接受了一个密钥，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。如果遇到输入结尾，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ;否则返回false。例如，在文件样式交互中为 &lt;code&gt;EOF&lt;/code&gt; ，在终端样式交互中为 &lt;code&gt;Ctrl-D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b67950267c64457459aa19a05557b38832b7aba9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the current process's standard error is attached to a MinTTY console (e.g., Cygwin or MSYS). Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果当前进程的标准错误附加到MinTTY控制台（例如Cygwin或MSYS），则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。否则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7d2365285ded5e73fd6755ed07fe50e888d57cf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the current session uses terminal-style interaction. (See &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">如果当前会话使用终端样式的交互，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。（请参阅 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="3641a776d1e547e9c1672d18beae4e771e83fd0e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the document is empty</source>
          <target state="translated">如果文档为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="80fb5e7b0993b7811aa6b29ad0dc4edafad50811" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d97a55ba7afb2b3dddb5b79f91f2e61da9733a9a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is full.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 已满，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b32052b70ee89d7efa652e0da24350d5871d8f3f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9eb76bbfef5b534035f1fb75239cbbd1e800c2c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13abbe5f6ebe6768620139f449099bcf724d5ef5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; is the given handle is attached to a MinTTY console (e.g., Cygwin or MSYS). Returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果给定的句柄已连接到MinTTY控制台（例如Cygwin或MSYS），则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。否则返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="966c0dd38c9877f6b297a6870cca0a3b30a3a142" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if it successfully accepted one key. Returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; if it encountered the end of input; i.e., an &lt;code&gt;EOF&lt;/code&gt; in file-style interaction, or a &lt;code&gt;Ctrl-D&lt;/code&gt; in terminal-style interaction.</source>
          <target state="translated">如果成功接受了一个密钥，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。如果遇到输入结尾，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ;否则返回false。例如，在文件样式交互中为 &lt;code&gt;EOF&lt;/code&gt; ，在终端样式交互中为 &lt;code&gt;Ctrl-D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e51f38c28f6b9f7aa0bc12da083bb4c10ddda1c7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the current session uses terminal-style interaction. (See &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">如果当前会话使用终端样式的交互，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。（请参阅 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="f8316e0dd926dc0a9ef9d3c5cd795d0d58782452" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the document is empty</source>
          <target state="translated">如果文档为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2605c2c49d498f4fb2e1e9854f3085f163690821" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67119c8f7a602185396b70de71edf1ab4c192228" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; is full.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 已满，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="785bea9346e29d7249af715f63416e99ca1e8acd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e2cb593cea86621ae9f45ac9fc67cee8e3e0d17" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; is empty.</source>
          <target state="translated">如果提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; 为空，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbeeb6827431115e5d05a673d0ca868c94b67d4d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the current process's standard error is attached to a MinTTY console (e.g., Cygwin or MSYS). Returns &lt;code&gt;&lt;a href=&quot;../base/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果当前进程的标准错误附加到MinTTY控制台（例如Cygwin或MSYS），则返回 &lt;code&gt;&lt;a href=&quot;../base/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。否则返回 &lt;code&gt;&lt;a href=&quot;../base/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="534c94318aeb89f649bfb29cafc79eb7404c2872" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../base/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; is the given handle is attached to a MinTTY console (e.g., Cygwin or MSYS). Returns &lt;code&gt;&lt;a href=&quot;../base/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果给定的句柄已连接到MinTTY控制台（例如Cygwin或MSYS），则返回 &lt;code&gt;&lt;a href=&quot;../base/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。否则返回 &lt;code&gt;&lt;a href=&quot;../base/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfb1dc66a9aba039d8fb00faff4adccb11d691b4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; for any Unicode space character, and the control characters &lt;code&gt;\t&lt;/code&gt;, &lt;code&gt;\n&lt;/code&gt;, &lt;code&gt;\r&lt;/code&gt;, &lt;code&gt;\f&lt;/code&gt;, &lt;code&gt;\v&lt;/code&gt;.</source>
          <target state="translated">对于任何Unicode空格字符和控制字符 &lt;code&gt;\t&lt;/code&gt; ， &lt;code&gt;\n&lt;/code&gt; ， &lt;code&gt;\r&lt;/code&gt; ， &lt;code&gt;\f&lt;/code&gt; 和 &lt;code&gt;\v&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="354cea2878218788cfa494d1ab10a88a0967a70d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the calling thread is &lt;em&gt;bound&lt;/em&gt;, that is, if it is safe to use foreign libraries that rely on thread-local state from the calling thread.</source>
          <target state="translated">如果&lt;em&gt;绑定&lt;/em&gt;了调用线程，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ，也就是说，如果可以安全地使用依赖于调用线程本地线程状态的外部库。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="07b3211aa1ea6cabc6ac7d153daf99074ac49195" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; the given subscript lies in the range defined the bounding pair.</source>
          <target state="translated">如果给定下标位于边界对定义的范围内，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9687ecbbf8ea32d466eef44e6b0c5bed3f487cd5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:nullBigNat&quot;&gt;nullBigNat&lt;/a&gt;&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:isNullBigNat-35-&quot;&gt;isNullBigNat#&lt;/a&gt;&lt;/code&gt;) in case of underflow</source>
          <target state="translated">如果发生下溢，则返回 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:nullBigNat&quot;&gt;nullBigNat&lt;/a&gt;&lt;/code&gt; （请参见 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:isNullBigNat-35-&quot;&gt;isNullBigNat#&lt;/a&gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9df21b1c00d4c06244689abaf8fdc8b45b77e1be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Nothing&lt;/code&gt; if stack trace support isn't available on host machine.</source>
          <target state="translated">如果主机上不提供堆栈跟踪支持，则返回 &lt;code&gt;Nothing&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="225bbaf513586d23567156d335aa2d43da865b15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;True&lt;/code&gt; if the second vertex reachable from the first.</source>
          <target state="translated">如果第二个顶点可从第一个顶点到达，则返回 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="79e34c79319ff106b22502e2cb995e1d7fcdaca1" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;[String]&lt;/code&gt; representing the current call stack. This can be useful for debugging.</source>
          <target state="translated">返回表示当前调用堆栈的 &lt;code&gt;[String]&lt;/code&gt; 。这对于调试很有用。</target>
        </trans-unit>
        <trans-unit id="f728eb85795ae241fe6ba9ceea04df69a4f91459" translate="yes" xml:space="preserve">
          <source>Returns a ByteString, because we have to force the result before returning it to ensure there are no errors lurking in it. The TH types don't have NFData instances, and even if they did, we have to serialize the value anyway, so we might as well serialize it to force it.</source>
          <target state="translated">返回一个ByteString,因为我们必须在返回结果之前强制执行,以确保没有错误潜伏在其中。TH类型没有NFData实例,即使有,我们也必须对值进行序列化,所以我们不妨将其序列化来强制执行。</target>
        </trans-unit>
        <trans-unit id="b333c2153cef9a52c787f55578053ac4ff50e4b8" translate="yes" xml:space="preserve">
          <source>Returns a duplicate of the original handle, with its own buffer. The two Handles will share a file pointer, however. The original handle's buffer is flushed, including discarding any input data, before the handle is duplicated.</source>
          <target state="translated">返回原始句柄的副本,有自己的缓冲区。但是,两个句柄将共享一个文件指针。在复制句柄之前,原句柄的缓冲区会被刷新,包括丢弃任何输入数据。</target>
        </trans-unit>
        <trans-unit id="03a895de8b7628324d51d76d7f6f6f7780bba4e4" translate="yes" xml:space="preserve">
          <source>Returns a list of all the elements of an array, in the same order as their indices.</source>
          <target state="translated">返回一个数组中所有元素的列表,顺序与它们的索引相同。</target>
        </trans-unit>
        <trans-unit id="ebb32386c6ecb499712e2aa0bad3a305fc93ad84" translate="yes" xml:space="preserve">
          <source>Returns a list of all the valid indices in an array.</source>
          <target state="translated">返回一个数组中所有有效索引的列表。</target>
        </trans-unit>
        <trans-unit id="c48f45abbd130e2787cb5db6b4f4c0174106f3a4" translate="yes" xml:space="preserve">
          <source>Returns a new array derived from the original array by applying a function to each of the elements.</source>
          <target state="translated">通过对每个元素应用一个函数,返回一个从原始数组衍生出来的新数组。</target>
        </trans-unit>
        <trans-unit id="dcaea403b41dea254087b3e3af90a56ecf3420c7" translate="yes" xml:space="preserve">
          <source>Returns a new array derived from the original array by applying a function to each of the indices.</source>
          <target state="translated">通过对每个索引应用一个函数,返回一个从原始数组衍生出来的新数组。</target>
        </trans-unit>
        <trans-unit id="0784b41850dcc90f8043d544ce24692388fabbf7" translate="yes" xml:space="preserve">
          <source>Returns an (encoded) result that depends on the THResultType</source>
          <target state="translated">返回一个依赖于THResultType的(编码)结果。</target>
        </trans-unit>
        <trans-unit id="069b53cbdc1831a2ad4dd9e41459e90be8ba17d1" translate="yes" xml:space="preserve">
          <source>Returns an STM action that can be used to wait for data to read from a file descriptor. The second returned value is an IO action that can be used to deregister interest in the file descriptor.</source>
          <target state="translated">返回一个STM动作,可用于等待从文件描述符读取数据。第二个返回值是一个IO操作,可用于取消对文件描述符的兴趣。</target>
        </trans-unit>
        <trans-unit id="a9a5fd7e27c63094640eafb67d49cd36e2cb689a" translate="yes" xml:space="preserve">
          <source>Returns an STM action that can be used to wait until data can be written to a file descriptor. The second returned value is an IO action that can be used to deregister interest in the file descriptor.</source>
          <target state="translated">返回一个STM动作,可用于等待数据可以写入文件描述符。第二个返回值是一个IO操作,可用于取消对文件描述符的兴趣。</target>
        </trans-unit>
        <trans-unit id="6d643fe07afdd98d0851bcf6b1d8f38b40abd0bc" translate="yes" xml:space="preserve">
          <source>Returns from the &lt;code&gt;Cont&lt;/code&gt; block.</source>
          <target state="translated">从 &lt;code&gt;Cont&lt;/code&gt; 块返回。</target>
        </trans-unit>
        <trans-unit id="41c6274ff072dc0df35107aa165a8e6946ebe8be" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the calling thread (GHC only).</source>
          <target state="translated">返回调用线程的 &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; （仅GHC）。</target>
        </trans-unit>
        <trans-unit id="d6d482611c58f400c4e9d4063a360d5e3e695927" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;control-exception#t:MaskingState&quot;&gt;MaskingState&lt;/a&gt;&lt;/code&gt; for the current thread.</source>
          <target state="translated">返回当前线程的 &lt;code&gt;&lt;a href=&quot;control-exception#t:MaskingState&quot;&gt;MaskingState&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71b82dd9cb02104bc42f35f2d0381726ce977f50" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the calling thread (GHC only).</source>
          <target state="translated">返回调用线程的 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; （仅GHC）。</target>
        </trans-unit>
        <trans-unit id="cca0619154d3ff5cc205e78e6c6c7b8e4d80dfff" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; of the calling thread (GHC only).</source>
          <target state="translated">返回调用线程的 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; （仅GHC）。</target>
        </trans-unit>
        <trans-unit id="bdaccac0b289ce01949934fbbb9b784902b17fa9" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;ghc-io#t:MaskingState&quot;&gt;MaskingState&lt;/a&gt;&lt;/code&gt; for the current thread.</source>
          <target state="translated">返回当前线程的 &lt;code&gt;&lt;a href=&quot;ghc-io#t:MaskingState&quot;&gt;MaskingState&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58789f682b6b8f8157e4346b16928e86facf780a" translate="yes" xml:space="preserve">
          <source>Returns the PID (process ID) of a subprocess.</source>
          <target state="translated">返回子进程的PID(进程ID)。</target>
        </trans-unit>
        <trans-unit id="d037192c5cf225fbebc2531165da5d25b77905eb" translate="yes" xml:space="preserve">
          <source>Returns the absolute pathname of the current executable.</source>
          <target state="translated">返回当前可执行文件的绝对路径名。</target>
        </trans-unit>
        <trans-unit id="e7f76e0dfa218f536a75044fa8b867cc9f6172d7" translate="yes" xml:space="preserve">
          <source>Returns the address and the size (in bytes) of the first block of a compact.</source>
          <target state="translated">返回一个压缩包的第一个块的地址和大小(以字节为单位)。</target>
        </trans-unit>
        <trans-unit id="1e5f6d437872b556f3f7276052cdae89b65e0d01" translate="yes" xml:space="preserve">
          <source>Returns the address and the utilized size (in bytes) of the first compact block of a CNF.</source>
          <target state="translated">返回CNF的第一个压缩块的地址和使用的大小(单位:字节)。</target>
        </trans-unit>
        <trans-unit id="a8385cab3518738507f523cc2b52f6b0f0e3c240" translate="yes" xml:space="preserve">
          <source>Returns the bounds of the array</source>
          <target state="translated">Returns the bounds of the array</target>
        </trans-unit>
        <trans-unit id="35d33c421f8f4a5fc9ffea0f64b3b7aaf5b98122" translate="yes" xml:space="preserve">
          <source>Returns the contents of an array as a list of associations.</source>
          <target state="translated">将数组的内容以关联列表的形式返回。</target>
        </trans-unit>
        <trans-unit id="32ff31240baf8692a7a3b6428c01b39ab55604ca" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; (value is &lt;code&gt;nullPtr&lt;/code&gt; if the current program was not compiled with profiling support). Takes a dummy argument which can be used to avoid the call to &lt;code&gt;getCurrentCCS&lt;/code&gt; being floated out by the simplifier, which would result in an uninformative stack (&lt;a href=&quot;caf&quot;&gt;CAF&lt;/a&gt;).</source>
          <target state="translated">返回当前的 &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; （如果当前的程序未使用概要分析支持进行编译，则值为 &lt;code&gt;nullPtr&lt;/code&gt; ）。接受一个伪参数，该伪参数可用于避免简化程序浮出对 &lt;code&gt;getCurrentCCS&lt;/code&gt; 的调用，这将导致信息栈（&lt;a href=&quot;caf&quot;&gt;CAF&lt;/a&gt;）无效。</target>
        </trans-unit>
        <trans-unit id="8dad347ef9c92129b1c0a465b0b87f9eda7f369c" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; (value is &lt;code&gt;nullPtr&lt;/code&gt; if the current program was not compiled with profiling support). Takes a dummy argument which can be used to avoid the call to &lt;code&gt;getCurrentCCS&lt;/code&gt; being floated out by the simplifier, which would result in an uninformative stack (&lt;a href=&quot;caf&quot;&gt;CAF&lt;/a&gt;).</source>
          <target state="translated">返回当前的 &lt;code&gt;&lt;a href=&quot;ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; （如果当前的程序未使用概要分析支持进行编译，则值为 &lt;code&gt;nullPtr&lt;/code&gt; ）。接受一个伪参数，该伪参数可用于避免简化程序浮出对 &lt;code&gt;getCurrentCCS&lt;/code&gt; 的调用，这将导致信息栈（&lt;a href=&quot;caf&quot;&gt;CAF&lt;/a&gt;）无效。</target>
        </trans-unit>
        <trans-unit id="704fb39ddb91269ef45975308aaeb6626a6afd79" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;CostCentreStack&lt;/code&gt; (value is &lt;code&gt;NULL&lt;/code&gt; if not profiling). Takes a dummy argument which can be used to avoid the call to &lt;code&gt;getCurrentCCS#&lt;/code&gt; being floated out by the simplifier, which would result in an uninformative stack (&quot;CAF&quot;).</source>
          <target state="translated">返回当前的 &lt;code&gt;CostCentreStack&lt;/code&gt; （如果不进行概要分析，则值为 &lt;code&gt;NULL&lt;/code&gt; ）。接受一个伪参数，该伪参数可用于避免简化程序浮动对 &lt;code&gt;getCurrentCCS#&lt;/code&gt; 的调用，这将导致信息栈（CAF）无效。</target>
        </trans-unit>
        <trans-unit id="c23fd648b89a19cb62b7a1e1ac964c4fb2c8ead6" translate="yes" xml:space="preserve">
          <source>Returns the current directory for temporary files.</source>
          <target state="translated">返回临时文件的当前目录。</target>
        </trans-unit>
        <trans-unit id="a01fc104ad5582df2299a6a30a33655f64dce16e" translate="yes" xml:space="preserve">
          <source>Returns the current input</source>
          <target state="translated">返回当前的输入</target>
        </trans-unit>
        <trans-unit id="ed2770f6437427337593920876b367a58b85c9fe" translate="yes" xml:space="preserve">
          <source>Returns the current source position. See also &lt;code&gt;&lt;a href=&quot;text-parsec#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回当前源位置。另请参见 &lt;code&gt;&lt;a href=&quot;text-parsec#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a00742a8a794d78dbfb24412764c22d8bd56bdc9" translate="yes" xml:space="preserve">
          <source>Returns the current source position. See also &lt;code&gt;&lt;a href=&quot;text-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回当前源位置。另请参见 &lt;code&gt;&lt;a href=&quot;text-parsec-pos#t:SourcePos&quot;&gt;SourcePos&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b48effbaafaad1bdac27d8aeaf8e339010d1de63" translate="yes" xml:space="preserve">
          <source>Returns the current user state.</source>
          <target state="translated">返回当前用户状态。</target>
        </trans-unit>
        <trans-unit id="8b644030a492bccb7b3d07a11e9f5c18ebfe9f6b" translate="yes" xml:space="preserve">
          <source>Returns the current user's document directory.</source>
          <target state="translated">返回当前用户的文档目录。</target>
        </trans-unit>
        <trans-unit id="eb0f0a7901fe875e87b6c9d1350a7662a2b25894" translate="yes" xml:space="preserve">
          <source>Returns the current user's home directory.</source>
          <target state="translated">返回当前用户的主目录。</target>
        </trans-unit>
        <trans-unit id="73a4450f722c7001626909c4664aceece6946edc" translate="yes" xml:space="preserve">
          <source>Returns the element of an immutable array at the specified index.</source>
          <target state="translated">返回一个不可变数组中指定索引的元素。</target>
        </trans-unit>
        <trans-unit id="4135ad281d130ca531531402ab3922cff10c4f3d" translate="yes" xml:space="preserve">
          <source>Returns the elements of a tree in pre-order.</source>
          <target state="translated">返回预排序的树的元素。</target>
        </trans-unit>
        <trans-unit id="6c1987b96e96cef6db7fb80584896113ded06ea4" translate="yes" xml:space="preserve">
          <source>Returns the full parser state as a &lt;code&gt;&lt;a href=&quot;text-parsec#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; record.</source>
          <target state="translated">返回完整的解析器状态作为 &lt;code&gt;&lt;a href=&quot;text-parsec#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; 记录。</target>
        </trans-unit>
        <trans-unit id="122526db1ffa1233009cfaee1f422c784e873e6b" translate="yes" xml:space="preserve">
          <source>Returns the full parser state as a &lt;code&gt;&lt;a href=&quot;text-parsec-prim#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; record.</source>
          <target state="translated">返回完整的解析器状态作为 &lt;code&gt;&lt;a href=&quot;text-parsec-prim#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; 记录。</target>
        </trans-unit>
        <trans-unit id="6720f5cda22bd959ebcf8d8bbf2d3eff4fe8b33c" translate="yes" xml:space="preserve">
          <source>Returns the full parser state as a &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-prim#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; record.</source>
          <target state="translated">返回完整的解析器状态作为 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-prim#t:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; 记录。</target>
        </trans-unit>
        <trans-unit id="ac6c1b5d60cdba404da3a22b80654790d4253e6a" translate="yes" xml:space="preserve">
          <source>Returns the list of edges in the graph.</source>
          <target state="translated">返回图中的边的列表。</target>
        </trans-unit>
        <trans-unit id="0a7d8165a9a37a003dd9c58b591114c635f526fd" translate="yes" xml:space="preserve">
          <source>Returns the list of nodes at each level of the tree.</source>
          <target state="translated">返回树的每一级的节点列表。</target>
        </trans-unit>
        <trans-unit id="f229b14816eee865913d187f8a7f58402cd27231" translate="yes" xml:space="preserve">
          <source>Returns the list of vertices in the graph.</source>
          <target state="translated">返回图中的顶点列表。</target>
        </trans-unit>
        <trans-unit id="e387df86fb7b3b262154714381694c7bd5f23ec9" translate="yes" xml:space="preserve">
          <source>Returns the list of vertices reachable from a given vertex.</source>
          <target state="translated">返回从给定顶点可到达的顶点列表。</target>
        </trans-unit>
        <trans-unit id="ee86401c0a49621555bf5ab6a31c2075fc6204ce" translate="yes" xml:space="preserve">
          <source>Returns the number of CPUs that the machine has</source>
          <target state="translated">返回机器的CPU数量。</target>
        </trans-unit>
        <trans-unit id="c4ab42b10e4c4d272229ee213335f383523c8a9b" translate="yes" xml:space="preserve">
          <source>Returns the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. To change this value, use &lt;code&gt;&lt;a href=&quot;control-concurrent#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。要更改此值，请使用 &lt;code&gt;&lt;a href=&quot;control-concurrent#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40806beaf3543cbdbed3bea032df175bb83631df" translate="yes" xml:space="preserve">
          <source>Returns the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. To change this value, use &lt;code&gt;&lt;a href=&quot;ghc-conc#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。要更改此值，请使用 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d7fcafb83b804dbc4822df98086cf983d17752c" translate="yes" xml:space="preserve">
          <source>Returns the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. To change this value, use &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。要更改此值，请使用 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:setNumCapabilities&quot;&gt;setNumCapabilities&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ceacd22f199c19bd1d7b1010bc4abd5817dc1dd7" translate="yes" xml:space="preserve">
          <source>Returns the number of sparks currently in the local spark pool</source>
          <target state="translated">返回当前本地火花池中的火花数量。</target>
        </trans-unit>
        <trans-unit id="270b270ff8f2d165013014ca5716e450db9fd130" translate="yes" xml:space="preserve">
          <source>Returns the number of sparks in the local spark pool.</source>
          <target state="translated">返回本地火花池中火花的数量。</target>
        </trans-unit>
        <trans-unit id="6182192420dd141358cbbc26d066d693f1ffd90a" translate="yes" xml:space="preserve">
          <source>Returns the number of the capability on which the thread is currently running, and a boolean indicating whether the thread is locked to that capability or not. A thread is locked to a capability if it was created with &lt;code&gt;forkOn&lt;/code&gt;.</source>
          <target state="translated">返回线程当前正在其上运行的功能的编号，以及一个布尔值，指示线程是否已锁定到该功能。如果线程是使用 &lt;code&gt;forkOn&lt;/code&gt; 创建的，则将其锁定为功能。</target>
        </trans-unit>
        <trans-unit id="6608dc9d731742faa501a91d3eb9883b9c1b3f91" translate="yes" xml:space="preserve">
          <source>Returns the size/length of a finite structure as an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 形式返回有限结构的大小/长度。</target>
        </trans-unit>
        <trans-unit id="699f3e4c880a8e7d9c8a7c3dfa52b2305a41d5a0" translate="yes" xml:space="preserve">
          <source>Returns the size/length of a finite structure as an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The default implementation is optimized for structures that are similar to cons-lists, because there is no general way to do better.</source>
          <target state="translated">以 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 形式返回有限结构的大小/长度。默认实现针对类似于cons-lists的结构进行了优化，因为没有通用的方法可以做得更好。</target>
        </trans-unit>
        <trans-unit id="9f7279cd7236997c95aafa6e5992a1d70e875de9" translate="yes" xml:space="preserve">
          <source>Returns the size/length of a finite structure as an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The default implementation just counts elements starting with the left-most. Instances for structures that can compute the element count faster than via element-by-element counting, should provide a specialised implementation.</source>
          <target state="translated">以 &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 形式返回有限结构的大小/长度。默认实现只是对从最左边开始的元素进行计数。可以比通过逐个元素计数更快地计算元素计数的结构实例应提供专门的实现。</target>
        </trans-unit>
        <trans-unit id="498e56813e913b90c9a52d7c557f9c2293f41195" translate="yes" xml:space="preserve">
          <source>Returns the size/length of a finite structure as an &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The default implementation is optimized for structures that are similar to cons-lists, because there is no general way to do better.</source>
          <target state="translated">以 &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 形式返回有限结构的大小/长度。默认实现针对类似于cons-lists的结构进行了优化，因为没有通用的方法可以做得更好。</target>
        </trans-unit>
        <trans-unit id="ad3fbbe0bcb90d9763f333b79f9b3a09133da2b9" translate="yes" xml:space="preserve">
          <source>Returns the size/length of a finite structure as an &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;. The default implementation just counts elements starting with the left-most. Instances for structures that can compute the element count faster than via element-by-element counting, should provide a specialised implementation.</source>
          <target state="translated">以 &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 形式返回有限结构的大小/长度。默认实现只是对从最左边开始的元素进行计数。可以比通过逐个元素计数更快地计算元素计数的结构实例应提供专门的实现。</target>
        </trans-unit>
        <trans-unit id="5407cb087162216d4cc6494ebb2033fd44fba60e" translate="yes" xml:space="preserve">
          <source>Returns the tag of a constructor application; this function is used by the deriving code for Eq, Ord and Enum.</source>
          <target state="translated">返回构造函数应用程序的标签;这个函数被Eq、Ord和Enum的派生代码使用。</target>
        </trans-unit>
        <trans-unit id="c7109a5a8a536432b7eeb9bbf23765d4d4f11a69" translate="yes" xml:space="preserve">
          <source>Returns the welcome message from the &lt;code&gt;&lt;a href=&quot;control-monad-cont#v:callCC&quot;&gt;callCC&lt;/a&gt;&lt;/code&gt; block. This line is not executed if &lt;code&gt;validateName&lt;/code&gt; fails.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;control-monad-cont#v:callCC&quot;&gt;callCC&lt;/a&gt;&lt;/code&gt; 块返回欢迎消息。如果 &lt;code&gt;validateName&lt;/code&gt; 失败，则不执行此行。</target>
        </trans-unit>
        <trans-unit id="2af42e634d7606bf9d85d733187712263c88111e" translate="yes" xml:space="preserve">
          <source>Returns whether GC stats have been enabled (with &lt;code&gt;+RTS -T&lt;/code&gt;, for example).</source>
          <target state="translated">返回是否已启用GC统计信息（例如，使用 &lt;code&gt;+RTS -T&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="90ec23607782e5503ddf81a5bf25d15b6a07aa53" translate="yes" xml:space="preserve">
          <source>Returns whether a name represents an occurrence of a top-level variable (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:VarName&quot;&gt;VarName&lt;/a&gt;&lt;/code&gt;), data constructor (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:DataName&quot;&gt;DataName&lt;/a&gt;&lt;/code&gt;), type constructor, or type class (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TcClsName&quot;&gt;TcClsName&lt;/a&gt;&lt;/code&gt;). If we can't be sure, it returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回名称是表示顶级变量（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:VarName&quot;&gt;VarName&lt;/a&gt;&lt;/code&gt; ），数据构造函数（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:DataName&quot;&gt;DataName&lt;/a&gt;&lt;/code&gt; ），类型构造函数还是类型类（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TcClsName&quot;&gt;TcClsName&lt;/a&gt;&lt;/code&gt; ）的出现。如果不能确定，它将返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61cb912092d39366e8d513e750ef47c902eea956" translate="yes" xml:space="preserve">
          <source>Returns whether a name represents an occurrence of a top-level variable (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:VarName&quot;&gt;VarName&lt;/a&gt;&lt;/code&gt;), data constructor (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:DataName&quot;&gt;DataName&lt;/a&gt;&lt;/code&gt;), type constructor, or type class (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TcClsName&quot;&gt;TcClsName&lt;/a&gt;&lt;/code&gt;). If we can't be sure, it returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回名称是否表示顶级变量（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:VarName&quot;&gt;VarName&lt;/a&gt;&lt;/code&gt; ），数据构造函数（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:DataName&quot;&gt;DataName&lt;/a&gt;&lt;/code&gt; ），类型构造函数或类型类（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TcClsName&quot;&gt;TcClsName&lt;/a&gt;&lt;/code&gt; ）的出现。如果我们不确定，它将返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63c449e339aebf60a5e7a2a8717c0f016029078a" translate="yes" xml:space="preserve">
          <source>Returns whether a name represents an occurrence of a top-level variable (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:VarName&quot;&gt;VarName&lt;/a&gt;&lt;/code&gt;), data constructor (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:DataName&quot;&gt;DataName&lt;/a&gt;&lt;/code&gt;), type constructor, or type class (&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TcClsName&quot;&gt;TcClsName&lt;/a&gt;&lt;/code&gt;). If we can't be sure, it returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回名称是否表示顶级变量（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:VarName&quot;&gt;VarName&lt;/a&gt;&lt;/code&gt; ），数据构造函数（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:DataName&quot;&gt;DataName&lt;/a&gt;&lt;/code&gt; ），类型构造函数或类型类（ &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TcClsName&quot;&gt;TcClsName&lt;/a&gt;&lt;/code&gt; ）的出现。如果我们不确定，它将返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d90ebf44e1d20050486666990a89eb47e7944cd8" translate="yes" xml:space="preserve">
          <source>Returns: the array</source>
          <target state="translated">返回:数组</target>
        </trans-unit>
        <trans-unit id="fc6bdda7ee64a55787373a47d2597422688d9afb" translate="yes" xml:space="preserve">
          <source>Returns: the number of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;s actually read, which might be smaller than the number requested if the end of file was reached.</source>
          <target state="translated">返回：实际读取的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 的数目，如果到达文件末尾，则可能小于请求的数目。</target>
        </trans-unit>
        <trans-unit id="3367d7371a0b3059b765bd1a6fff1f5ca0ed7d5b" translate="yes" xml:space="preserve">
          <source>Returns: the number of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;s actually read, which might be smaller than the number requested if the end of file was reached.</source>
          <target state="translated">返回：实际读取的 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 的数目，如果到达文件末尾，则可能小于请求的数目。</target>
        </trans-unit>
        <trans-unit id="e1296bc5bfca3a490c28bbd60da8212b36f1b8c9" translate="yes" xml:space="preserve">
          <source>Returns: the number of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;s actually read, which might be smaller than the number requested if the end of file was reached.</source>
          <target state="translated">返回：实际读取的 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 的数目，如果到达文件末尾，则可能小于请求的数目。</target>
        </trans-unit>
        <trans-unit id="57f9933768794f845d000833d367d5698393211d" translate="yes" xml:space="preserve">
          <source>Reverse</source>
          <target state="translated">Reverse</target>
        </trans-unit>
        <trans-unit id="f1b29d2392f6c1ffa813de793608d1688eec4ffe" translate="yes" xml:space="preserve">
          <source>Reverse all the bits in the argument</source>
          <target state="translated">反转参数中的所有位</target>
        </trans-unit>
        <trans-unit id="fc33d8754555f15068931375920d0f2cef70f740" translate="yes" xml:space="preserve">
          <source>Reverse order of bytes in &lt;code&gt;&lt;a href=&quot;data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 中字节的相反顺序。</target>
        </trans-unit>
        <trans-unit id="6d38b386d6091de460a03ef14e686f58fb0de4b6" translate="yes" xml:space="preserve">
          <source>Reverse order of bytes in &lt;code&gt;&lt;a href=&quot;data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 中字节的相反顺序。</target>
        </trans-unit>
        <trans-unit id="16dcadf031117537b0a4de5e11b84da6506716a2" translate="yes" xml:space="preserve">
          <source>Reverse order of bytes in &lt;code&gt;&lt;a href=&quot;data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 中字节的相反顺序。</target>
        </trans-unit>
        <trans-unit id="ce3879028f945cf89094b3c07186ba273e7bd194" translate="yes" xml:space="preserve">
          <source>Reverse order of bytes in &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 中字节的相反顺序。</target>
        </trans-unit>
        <trans-unit id="fb6e4e5660d77c6a7ef54a949c5684649ea23a6c" translate="yes" xml:space="preserve">
          <source>Reverse order of bytes in &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 中字节的相反顺序。</target>
        </trans-unit>
        <trans-unit id="abd0a331bba34831b2d2e0b4cec13187fdf9f136" translate="yes" xml:space="preserve">
          <source>Reverse order of bytes in &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 中字节的相反顺序。</target>
        </trans-unit>
        <trans-unit id="bb3b2b54206d2f7917f68ce4819891c982302258" translate="yes" xml:space="preserve">
          <source>Reverse ordering of &lt;code&gt;&lt;a href=&quot;data-graph#v:topSort&quot;&gt;topSort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">逆向排序 &lt;code&gt;&lt;a href=&quot;data-graph#v:topSort&quot;&gt;topSort&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="64881c5c2a13ba17fc5266eccf9ebcd6df9bcab5" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a 16-bit word.</source>
          <target state="translated">颠倒16位字中的位顺序。</target>
        </trans-unit>
        <trans-unit id="5dcf236fb13d112d9e19d65d6212210a0b915786" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a 32-bit word.</source>
          <target state="translated">颠倒32位字中的位顺序。</target>
        </trans-unit>
        <trans-unit id="d5372d7e3fd735f302124857c7f0f70b399ec1ee" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a 64-bit word.</source>
          <target state="translated">颠倒64位字中的位顺序。</target>
        </trans-unit>
        <trans-unit id="e84305c1c727c89925582024ec2d7b87ab0a27cf" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a 8-bit word.</source>
          <target state="translated">颠倒8位字中的位顺序。</target>
        </trans-unit>
        <trans-unit id="6bc1049e87c78c4890e903baf69e8135fc10ca5e" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a &lt;code&gt;&lt;a href=&quot;data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">反转 &lt;code&gt;&lt;a href=&quot;data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 中的位顺序。</target>
        </trans-unit>
        <trans-unit id="cba32d1480441f23022442f4dab6baae42fe8759" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a &lt;code&gt;&lt;a href=&quot;data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">反转 &lt;code&gt;&lt;a href=&quot;data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 中的位顺序。</target>
        </trans-unit>
        <trans-unit id="9e01edad93cdb3dcc83afadca7928e1d5b71af81" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a &lt;code&gt;&lt;a href=&quot;data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">反转 &lt;code&gt;&lt;a href=&quot;data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 中的位顺序。</target>
        </trans-unit>
        <trans-unit id="0fbc14d09916a3da668fac2692376c8c936d181b" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a &lt;code&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">反转 &lt;code&gt;&lt;a href=&quot;data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 中的位顺序。</target>
        </trans-unit>
        <trans-unit id="4c11e3199242c4bc82ffdfca9e53dba5695d80eb" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">反转 &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 中的位顺序。</target>
        </trans-unit>
        <trans-unit id="fb98204d3b532c1bb7df2272e692218701fa2713" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">反转 &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 中的位顺序。</target>
        </trans-unit>
        <trans-unit id="0ac092db6b3e74e47de74ccaf04cfeade26d9065" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">反转 &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 中的位顺序。</target>
        </trans-unit>
        <trans-unit id="f88be9676843724d6ce28a9958a6bb74a4bad7ff" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">反转 &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 中的位顺序。</target>
        </trans-unit>
        <trans-unit id="26d795b526c33a2f012b185f3bbbad1b4ab51f11" translate="yes" xml:space="preserve">
          <source>Reverse the order of the bits in a word.</source>
          <target state="translated">颠倒字中的位的顺序。</target>
        </trans-unit>
        <trans-unit id="2207145f56c1086843ae929cdca643dda45296a2" translate="yes" xml:space="preserve">
          <source>Reverse topologically sorted</source>
          <target state="translated">反向拓扑排序</target>
        </trans-unit>
        <trans-unit id="07d6529269dbe464e3ef2e4bed692608f2ba4898" translate="yes" xml:space="preserve">
          <source>Reverse:</source>
          <target state="translated">Reverse:</target>
        </trans-unit>
        <trans-unit id="804c9c82e579d60fb3841aafb7fee29740cb0259" translate="yes" xml:space="preserve">
          <source>Rewrite rules can be used to get the same effect as a feature present in earlier versions of GHC. For example, suppose that:</source>
          <target state="translated">重写规则可以用来获得与GHC早期版本中存在的功能相同的效果。例如,假设:</target>
        </trans-unit>
        <trans-unit id="c83b52d26d0088698518652fdb153807c4de8005" translate="yes" xml:space="preserve">
          <source>Ribbons per line.</source>
          <target state="translated">每行的丝带。</target>
        </trans-unit>
        <trans-unit id="b3138852bdaf3763d016ac63a5c7c2c3e2c6dacb" translate="yes" xml:space="preserve">
          <source>Right and left shifts by amounts greater than or equal to the width of the type result in a zero result. This is contrary to the behaviour in C, which is undefined; a common interpretation is to truncate the shift count to the width of the type, for example &lt;code&gt;1 &amp;lt;&amp;lt;
  32 == 1&lt;/code&gt; in some C implementations.</source>
          <target state="translated">向右和向左移动大于或等于该类型的宽度的量将导致结果为零。这与C中未定义的行为相反。常见的解释是将移位计数截断为该类型的宽度，例如在某些C实现中为 &lt;code&gt;1 &amp;lt;&amp;lt; 32 == 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4405b5d855d35430679b8f5b6802db9d92d20d73" translate="yes" xml:space="preserve">
          <source>Right and left shifts by amounts greater than or equal to the width of the type result in either zero or -1, depending on the sign of the value being shifted. This is contrary to the behaviour in C, which is undefined; a common interpretation is to truncate the shift count to the width of the type, for example &lt;code&gt;1 &amp;lt;&amp;lt; 32
  == 1&lt;/code&gt; in some C implementations.</source>
          <target state="translated">向右和向左移动大于或等于该类型宽度的量将导致零或-1，具体取决于要移动的值的符号。这与C中未定义的行为相反。常见的解释是将移位计数截断为该类型的宽度，例如在某些C实现中为 &lt;code&gt;1 &amp;lt;&amp;lt; 32 == 1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e504a21e956b694360170c2fd28d0e470b89e91" translate="yes" xml:space="preserve">
          <source>Right associative monadic bifold over a structure.</source>
          <target state="translated">结构上的右联一性一双折。</target>
        </trans-unit>
        <trans-unit id="a9e2aceb009f5c71e7fcab284b8b1b2e1bac0f8d" translate="yes" xml:space="preserve">
          <source>Right identity</source>
          <target state="translated">正确的身份</target>
        </trans-unit>
        <trans-unit id="20396e07fc63f679a480f52e947312d23a912a71" translate="yes" xml:space="preserve">
          <source>Right shifts perform sign extension on signed number types; i.e. they fill the top bits with 1 if the &lt;code&gt;x&lt;/code&gt; is negative and with 0 otherwise.</source>
          <target state="translated">右移对有符号的数字类型执行符号扩展；也就是说，如果 &lt;code&gt;x&lt;/code&gt; 为负数，则它们用1填充高位，否则用0 填充。</target>
        </trans-unit>
        <trans-unit id="39a8b324a5636c01dac0b096d9334843dc7b83f3" translate="yes" xml:space="preserve">
          <source>Right-associative fold of a structure, but with strict application of the operator.</source>
          <target state="translated">结构的右联折叠,但要严格应用运算符。</target>
        </trans-unit>
        <trans-unit id="4e9728c3c7c8dc0c07eef5abc20bb21e0e3b7aa8" translate="yes" xml:space="preserve">
          <source>Right-associative fold of a structure, lazy in the accumulator.</source>
          <target state="translated">结构的右联褶皱,在蓄水池中懒惰。</target>
        </trans-unit>
        <trans-unit id="e7d487556c47a2ed2a493781bd0890940ed2d32c" translate="yes" xml:space="preserve">
          <source>Right-associative fold of a structure, strict in the accumulator. This is rarely what you want.</source>
          <target state="translated">结构的右联折叠,严格的在蓄水池。这很少是你想要的。</target>
        </trans-unit>
        <trans-unit id="8d786273bc2b4f065cb4111d4369cb2117126e69" translate="yes" xml:space="preserve">
          <source>Right-associative fold of a structure.</source>
          <target state="translated">结构的右联折叠。</target>
        </trans-unit>
        <trans-unit id="8fb46b967b84799898af36f08402697233e41725" translate="yes" xml:space="preserve">
          <source>Right-to-left composition</source>
          <target state="translated">从右到左的构成</target>
        </trans-unit>
        <trans-unit id="c8d5b70d1daa764c9b36dd6dcba6bbc27215937b" translate="yes" xml:space="preserve">
          <source>Right-to-left composition of Kleisli arrows. &lt;code&gt;(&lt;a href=&quot;control-monad#v:-62--61--62-&quot;&gt;&amp;gt;=&amp;gt;&lt;/a&gt;)&lt;/code&gt;, with the arguments flipped.</source>
          <target state="translated">从右到左组成Kleisli箭头。 &lt;code&gt;(&lt;a href=&quot;control-monad#v:-62--61--62-&quot;&gt;&amp;gt;=&amp;gt;&lt;/a&gt;)&lt;/code&gt; ，其中的参数已翻转。</target>
        </trans-unit>
        <trans-unit id="d18d0622af6613184dce18026185c0b4105c8eac" translate="yes" xml:space="preserve">
          <source>Right-to-left composition of Kleisli arrows. &lt;code&gt;(&lt;a href=&quot;system-directory-internal-prelude#v:-62--61--62-&quot;&gt;&amp;gt;=&amp;gt;&lt;/a&gt;)&lt;/code&gt;, with the arguments flipped.</source>
          <target state="translated">从右到左组成Kleisli箭头。 &lt;code&gt;(&lt;a href=&quot;system-directory-internal-prelude#v:-62--61--62-&quot;&gt;&amp;gt;=&amp;gt;&lt;/a&gt;)&lt;/code&gt; ，其中的参数已翻转。</target>
        </trans-unit>
        <trans-unit id="82305626a22e5a66eda35d5bba0fc29f0d97a54a" translate="yes" xml:space="preserve">
          <source>Right-to-left composition of functors. The composition of applicative functors is always applicative, but the composition of monads is not always a monad.</source>
          <target state="translated">漏子的从右到左的组成。适用性漏斗的组成总是适用性的,但单子的组成并不总是单子。</target>
        </trans-unit>
        <trans-unit id="819514316b4f4b54bdba64481d4287eda6cee587" translate="yes" xml:space="preserve">
          <source>Right-to-left variants</source>
          <target state="translated">从右到左的变体</target>
        </trans-unit>
        <trans-unit id="379bbb03c903b2519ed8e7f314173932cc94b5b8" translate="yes" xml:space="preserve">
          <source>RightAssociative</source>
          <target state="translated">RightAssociative</target>
        </trans-unit>
        <trans-unit id="c3f104d1365744b538bfde9f4adb6a6df4b80355" translate="yes" xml:space="preserve">
          <source>Role</source>
          <target state="translated">Role</target>
        </trans-unit>
        <trans-unit id="93627fd1f79919d436b12ffa76a391d7b4747b58" translate="yes" xml:space="preserve">
          <source>Role annotations</source>
          <target state="translated">角色注释</target>
        </trans-unit>
        <trans-unit id="00a8cc69af800f80142e071f3da079846d26d38d" translate="yes" xml:space="preserve">
          <source>Role annotations are allowed on data, newtype, and class declarations. A role annotation declaration starts with &lt;code&gt;type role&lt;/code&gt; and is followed by one role listing for each parameter of the type. (This parameter count includes parameters implicitly specified by a kind signature in a GADT-style data or newtype declaration.) Each role listing is a role (&lt;code&gt;nominal&lt;/code&gt;, &lt;code&gt;representational&lt;/code&gt;, or &lt;code&gt;phantom&lt;/code&gt;) or a &lt;code&gt;_&lt;/code&gt;. Using a &lt;code&gt;_&lt;/code&gt; says that GHC should infer that role. The role annotation may go anywhere in the same module as the datatype or class definition (much like a value-level type signature). Here are some examples:</source>
          <target state="translated">在数据，新类型和类声明上允许使用角色注释。角色注释声明以 &lt;code&gt;type role&lt;/code&gt; 开头，然后是该类型的每个参数的一个角色列表。 （此参数计数包括由GADT样式的数据或newtype声明中的种类签名隐式指定的参数。）每个角色列表都是一个角色（ &lt;code&gt;nominal&lt;/code&gt; ， &lt;code&gt;representational&lt;/code&gt; 或 &lt;code&gt;phantom&lt;/code&gt; ）或 &lt;code&gt;_&lt;/code&gt; 。使用 &lt;code&gt;_&lt;/code&gt; 表示GHC应该推断该角色。角色注释可以与数据类型或类定义在同一模块中的任何位置（非常类似于值级别的类型签名）。这里有些例子：</target>
        </trans-unit>
        <trans-unit id="5d285d0f925d9008464d2638ff6d3c96ed7ef3db" translate="yes" xml:space="preserve">
          <source>Role annotations can also be used should a programmer wish to write a class with a representational (or phantom) role. However, as a class with non-nominal roles can quickly lead to class instance incoherence, it is necessary to also specify &lt;a href=&quot;#extension-IncoherentInstances&quot;&gt;&lt;code&gt;IncoherentInstances&lt;/code&gt;&lt;/a&gt; to allow non-nominal roles for classes.</source>
          <target state="translated">如果程序员希望编写一个具有代表性（或幻像）角色的类，也可以使用角色注释。但是，由于具有非标称角色的类可能很快导致类实例不一致，因此还必须指定&lt;a href=&quot;#extension-IncoherentInstances&quot;&gt; &lt;code&gt;IncoherentInstances&lt;/code&gt; &lt;/a&gt;以允许类具有非标称角色。</target>
        </trans-unit>
        <trans-unit id="38e8ac1e0499b4557fdad2cf823f65db3a1a8ebd" translate="yes" xml:space="preserve">
          <source>Role annotations can also be used should a programmer wish to write a class with a representational (or phantom) role. However, as a class with non-nominal roles can quickly lead to class instance incoherence, it is necessary to also specify &lt;a href=&quot;instances#extension-IncoherentInstances&quot;&gt;&lt;code&gt;IncoherentInstances&lt;/code&gt;&lt;/a&gt; to allow non-nominal roles for classes.</source>
          <target state="translated">如果程序员希望编写一个具有代表性（或幻像）角色的类，则也可以使用角色注释。但是，由于具有非标称角色的类会迅速导致类实例不一致，因此还必须指定&lt;a href=&quot;instances#extension-IncoherentInstances&quot;&gt; &lt;code&gt;IncoherentInstances&lt;/code&gt; &lt;/a&gt;以允许类具有非标称角色。</target>
        </trans-unit>
        <trans-unit id="91665aa65139fc62f964b33d2e4f6471f47f8017" translate="yes" xml:space="preserve">
          <source>RoleAnnotations</source>
          <target state="translated">RoleAnnotations</target>
        </trans-unit>
        <trans-unit id="f21d347d37a185e4a4339bde6e6ea3b5624475c5" translate="yes" xml:space="preserve">
          <source>Roles as implemented in GHC are a from a simplified version of the work described in &lt;a href=&quot;http://www.seas.upenn.edu/~sweirich/papers/popl163af-weirich.pdf&quot;&gt;Generative type abstraction and type-level computation&lt;/a&gt;, published at POPL 2011.</source>
          <target state="translated">在GHC中实现的角色摘自在POPL 2011上发布的&lt;a href=&quot;http://www.seas.upenn.edu/~sweirich/papers/popl163af-weirich.pdf&quot;&gt;Generative类型抽象和类型级别计算中&lt;/a&gt;描述的工作的简化版本。</target>
        </trans-unit>
        <trans-unit id="4747c588a3531884b7f0d677c1be629af1fc5f9b" translate="yes" xml:space="preserve">
          <source>Roles as implemented in GHC are a from a simplified version of the work described in &lt;a href=&quot;https://www.seas.upenn.edu/~sweirich/papers/popl163af-weirich.pdf&quot;&gt;Generative type abstraction and type-level computation&lt;/a&gt;, published at POPL 2011.</source>
          <target state="translated">在GHC中实现的角色摘自在POPL 2011上发布的&lt;a href=&quot;https://www.seas.upenn.edu/~sweirich/papers/popl163af-weirich.pdf&quot;&gt;Generative类型抽象和类型级别计算中&lt;/a&gt;描述的工作的简化版本。</target>
        </trans-unit>
        <trans-unit id="da8cee54f54784065270562bdc1909f6f51fa588" translate="yes" xml:space="preserve">
          <source>Roles lookup</source>
          <target state="translated">角色查询</target>
        </trans-unit>
        <trans-unit id="c42fd15494a63d8230eaa066b81373c14d4e0d5e" translate="yes" xml:space="preserve">
          <source>Roles of type parameters are subject to the subtyping relation &lt;code&gt;phantom &amp;lt; representational &amp;lt; nominal&lt;/code&gt;: for example, an abstract type with a nominal type parameter can be implemented using a concrete type with a representational type parameter. Merging respects this subtyping relation (e.g., &lt;code&gt;nominal&lt;/code&gt; merged with &lt;code&gt;representational&lt;/code&gt; is &lt;code&gt;representational&lt;/code&gt;.) Roles in signatures default to &lt;code&gt;nominal&lt;/code&gt;, which gives maximum flexibility on the implementor&amp;rsquo;s side. You should only need to give an explicit role annotation if a client of the signature would like to coerce the abstract type in a type parameter (in which case you should specify &lt;code&gt;representational&lt;/code&gt; explicitly.) Unlike regular data types, we do &lt;em&gt;not&lt;/em&gt; assume that abstract data types are representationally injective: if we have &lt;code&gt;Coercible (T a) (T b)&lt;/code&gt;, and &lt;code&gt;T&lt;/code&gt; has role &lt;code&gt;nominal&lt;/code&gt;, this does not imply that &lt;code&gt;a ~ b&lt;/code&gt;.</source>
          <target state="translated">类型参数的作用取决于子类型关系 &lt;code&gt;phantom &amp;lt; representational &amp;lt; nominal&lt;/code&gt; ：&amp;rdquo;：例如，可以使用具有代表类型参数的具体类型来实现具有标称类型参数的抽象类型。合并这方面的子类型关系（例如， &lt;code&gt;nominal&lt;/code&gt; 合并 &lt;code&gt;representational&lt;/code&gt; 是 &lt;code&gt;representational&lt;/code&gt; 。）在签名默认角色 &lt;code&gt;nominal&lt;/code&gt; ，这给实现者的身边最大的灵活性。如果签名的客户希望在类型参数中强制抽象类型（在这种情况下，您应该显式地指定 &lt;code&gt;representational&lt;/code&gt; ），则只需提供显式角色批注。与常规数据类型不同，我们这样做&lt;em&gt;不&lt;/em&gt;假设抽象数据类型是表象射：如果我们有 &lt;code&gt;Coercible (T a) (T b)&lt;/code&gt; ，并且 &lt;code&gt;T&lt;/code&gt; 有作用 &lt;code&gt;nominal&lt;/code&gt; ，这并不意味着 &lt;code&gt;a ~ b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e4d010e49e5bc26ba3b4b046466c867803ac5947" translate="yes" xml:space="preserve">
          <source>Ross Paterson 2005</source>
          <target state="translated">Ross Paterson,2005年</target>
        </trans-unit>
        <trans-unit id="fbd27aa30a95ad22196d6918b13bb431346c5afa" translate="yes" xml:space="preserve">
          <source>Rotate the argument left by the specified number of bits (which must be non-negative).</source>
          <target state="translated">将参数向左旋转指定的位数(必须是非负数)。</target>
        </trans-unit>
        <trans-unit id="0fe016ed8f9eedc521bdd592cfa02ebc0f59c73b" translate="yes" xml:space="preserve">
          <source>Rotate the argument right by the specified number of bits (which must be non-negative).</source>
          <target state="translated">将参数向右旋转指定的位数(必须是非负数)。</target>
        </trans-unit>
        <trans-unit id="58051472c555d154ccb239c9e59fcfb66e67f0f8" translate="yes" xml:space="preserve">
          <source>Rounds towards zero element-wise.</source>
          <target state="translated">元素方面向零的方向发展。</target>
        </trans-unit>
        <trans-unit id="03edb479d9c8ffea9100cec4993af1810c9ece09" translate="yes" xml:space="preserve">
          <source>Rounds towards zero.</source>
          <target state="translated">向零的方向发展。</target>
        </trans-unit>
        <trans-unit id="f2f05a17720b9a694ea73a1824fc70691d4746ff" translate="yes" xml:space="preserve">
          <source>Rounds towards zero. The behavior is undefined if the second argument is zero.</source>
          <target state="translated">趋近于零。如果第二个参数为零,则行为未定义。</target>
        </trans-unit>
        <trans-unit id="2d9b74053b3dfe83bb7d2bee0dc7b331776ee830" translate="yes" xml:space="preserve">
          <source>RoundtripFailure</source>
          <target state="translated">RoundtripFailure</target>
        </trans-unit>
        <trans-unit id="657d849597f2d3e337f76ba58d755750c451b662" translate="yes" xml:space="preserve">
          <source>Routines for testing return values and raising a &lt;code&gt;&lt;a href=&quot;system-io-error#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt; exception in case of values indicating an error state.</source>
          <target state="translated">用于测试返回值并在值指示错误状态的情况下引发 &lt;code&gt;&lt;a href=&quot;system-io-error#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt; 异常的例程。</target>
        </trans-unit>
        <trans-unit id="d3e3e6f1bc5450d69a98b447fa8c548a9cb4e372" translate="yes" xml:space="preserve">
          <source>RtsTime</source>
          <target state="translated">RtsTime</target>
        </trans-unit>
        <trans-unit id="0d8023bd7802662dab455a02b3efe95a426a8682" translate="yes" xml:space="preserve">
          <source>RuleBndr</source>
          <target state="translated">RuleBndr</target>
        </trans-unit>
        <trans-unit id="1cbe389d3784439eacd168bbf7fba6ca33a912d5" translate="yes" xml:space="preserve">
          <source>RuleBndrQ</source>
          <target state="translated">RuleBndrQ</target>
        </trans-unit>
        <trans-unit id="c8865ebf9014d9f16c2870709b8c48749873fecb" translate="yes" xml:space="preserve">
          <source>RuleMatch</source>
          <target state="translated">RuleMatch</target>
        </trans-unit>
        <trans-unit id="90c48df1c92117b73e9121ba8818c7cd5c1fb3ac" translate="yes" xml:space="preserve">
          <source>Rules are enabled (that is, used during optimisation) by the &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fenable-rewrite-rules&lt;/code&gt;&lt;/a&gt; flag. This flag is implied by &lt;a href=&quot;../using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;, and may be switched off (as usual) by &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fno-enable-rewrite-rules&lt;/code&gt;&lt;/a&gt;. (NB: enabling &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fenable-rewrite-rules&lt;/code&gt;&lt;/a&gt; without &lt;a href=&quot;../using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; may not do what you expect, though, because without &lt;a href=&quot;../using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; GHC ignores all optimisation information in interface files; see &lt;a href=&quot;../using-optimisation#ghc-flag--fignore-interface-pragmas&quot;&gt;&lt;code&gt;-fignore-interface-pragmas&lt;/code&gt;&lt;/a&gt;). Note that &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fenable-rewrite-rules&lt;/code&gt;&lt;/a&gt; is an &lt;em&gt;optimisation&lt;/em&gt; flag, and has no effect on parsing or typechecking.</source>
          <target state="translated">&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fenable-rewrite-rules&lt;/code&gt; &lt;/a&gt;标志启用（在优化过程中使用）规则。该标志由&lt;a href=&quot;../using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;隐含，并且可以（与往常一样）由&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fno-enable-rewrite-rules&lt;/code&gt; &lt;/a&gt;关闭。 （注意：不使用&lt;a href=&quot;../using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;启用&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fenable-rewrite-rules&lt;/code&gt; &lt;/a&gt;可能无法达到您的期望，因为如果不使用&lt;a href=&quot;../using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; ,&lt;/a&gt; GHC会忽略接口文件中的所有优化信息；请参见&lt;a href=&quot;../using-optimisation#ghc-flag--fignore-interface-pragmas&quot;&gt; &lt;code&gt;-fignore-interface-pragmas&lt;/code&gt; &lt;/a&gt;）。请注意，&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fenable-rewrite-rules&lt;/code&gt; &lt;/a&gt;是一个&lt;em&gt;优化&lt;/em&gt;标志，对解析或类型检查没有影响。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9da39d742ef2d2a4bf83cc2ae5fa28649ed94414" translate="yes" xml:space="preserve">
          <source>Rules are enabled (that is, used during optimisation) by the &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fenable-rewrite-rules&lt;/code&gt;&lt;/a&gt; flag. This flag is implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;, and may be switched off (as usual) by &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fno-enable-rewrite-rules&lt;/code&gt;&lt;/a&gt;. (NB: enabling &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fenable-rewrite-rules&lt;/code&gt;&lt;/a&gt; without &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; may not do what you expect, though, because without &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt; GHC ignores all optimisation information in interface files; see &lt;a href=&quot;using-optimisation#ghc-flag--fignore-interface-pragmas&quot;&gt;&lt;code&gt;-fignore-interface-pragmas&lt;/code&gt;&lt;/a&gt;). Note that &lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt;&lt;code&gt;-fenable-rewrite-rules&lt;/code&gt;&lt;/a&gt; is an &lt;em&gt;optimisation&lt;/em&gt; flag, and has no effect on parsing or typechecking.</source>
          <target state="translated">&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fenable-rewrite-rules&lt;/code&gt; &lt;/a&gt;标志启用了规则（即在优化期间使用）。该标志由&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;隐含，并且可以（通常）由&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fno-enable-rewrite-rules&lt;/code&gt; &lt;/a&gt;关闭。 （注意：不使用&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt;启用&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fenable-rewrite-rules&lt;/code&gt; &lt;/a&gt;可能不会达到您的期望，因为如果不使用&lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; ,&lt;/a&gt; GHC会忽略接口文件中的所有优化信息；请参阅&lt;a href=&quot;using-optimisation#ghc-flag--fignore-interface-pragmas&quot;&gt; &lt;code&gt;-fignore-interface-pragmas&lt;/code&gt; &lt;/a&gt;）。请注意，&lt;a href=&quot;#ghc-flag--fenable-rewrite-rules&quot;&gt; &lt;code&gt;-fenable-rewrite-rules&lt;/code&gt; &lt;/a&gt;是一个&lt;em&gt;优化&lt;/em&gt;标志，对解析或类型检查没有影响。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="68d0576090ddc092b61c62fcb447bec42dbb16bb" translate="yes" xml:space="preserve">
          <source>Rules are filtered by the user provided string, a rule is kept if a prefix of its name matches the string. The pass then checks whether any of these rules could apply to the program but which didn&amp;rsquo;t file for some reason. For example, specifying &lt;code&gt;-drule-check=SPEC&lt;/code&gt; will check whether there are any applications which might be subject to a rule created by specialisation.</source>
          <target state="translated">规则由用户提供的字符串过滤，如果规则名称的前缀与字符串匹配，则保留规则。然后，该阶段检查这些规则中的任何规则是否可以应用于该程序，但是由于某种原因而没有提交。例如，指定 &lt;code&gt;-drule-check=SPEC&lt;/code&gt; 将检查是否存在任何可能受专业化创建的规则约束的应用程序。</target>
        </trans-unit>
        <trans-unit id="65a428564569492a930c1aefe68483dbdf61444e" translate="yes" xml:space="preserve">
          <source>Rules are filtered by the user provided string, a rule is kept if a prefix of its name matches the string. The pass then checks whether any of these rules could apply to the program but which didn&amp;rsquo;t fire for some reason. For example, specifying &lt;code&gt;-drule-check=SPEC&lt;/code&gt; will check whether there are any applications which might be subject to a rule created by specialisation.</source>
          <target state="translated">规则由用户提供的字符串过滤，如果规则名称的前缀与字符串匹配，则保留规则。然后，该阶段检查这些规则中的任何规则是否可以应用于该程序，但是由于某些原因而没有触发。例如，指定 &lt;code&gt;-drule-check=SPEC&lt;/code&gt; 将检查是否存在任何可能受专业化创建的规则约束的应用程序。</target>
        </trans-unit>
        <trans-unit id="961b5bf1e1c0621155da845303a2be9f0abb7f5a" translate="yes" xml:space="preserve">
          <source>Rules are regarded as left-to-right rewrite rules. When GHC finds an expression that is a substitution instance of the LHS of a rule, it replaces the expression by the (appropriately-substituted) RHS. By &amp;ldquo;a substitution instance&amp;rdquo; we mean that the LHS can be made equal to the expression by substituting for the pattern variables.</source>
          <target state="translated">规则被视为从左到右的重写规则。当GHC找到作为规则LHS替换实例的表达式时，它将用（适当替换的）RHS替换该表达式。通过&amp;ldquo;替换实例&amp;rdquo;，我们的意思是通过替换模式变量，可以使LHS等于表达式。</target>
        </trans-unit>
        <trans-unit id="dccde95933511de1a225f34f6a502e7bd837ebe5" translate="yes" xml:space="preserve">
          <source>Rules support the special phase-control notation &lt;code&gt;[~]&lt;/code&gt;, which means the rule is never active. This feature supports plugins (see &lt;a href=&quot;../extending_ghc#compiler-plugins&quot;&gt;Compiler Plugins&lt;/a&gt;), by making it possible to define a RULE that is never run by GHC, but is nevertheless parsed, typechecked etc, so that it is available to the plugin.</source>
          <target state="translated">规则支持特殊的相位控制符号 &lt;code&gt;[~]&lt;/code&gt; ，这表示该规则永远不会处于活动状态。通过允许定义一个从未由GHC运行，但仍经过解析，类型检查等的RULE，此功能支持插件（请参阅&lt;a href=&quot;../extending_ghc#compiler-plugins&quot;&gt;Compiler Plugins&lt;/a&gt;），以便插件可以使用。</target>
        </trans-unit>
        <trans-unit id="4c39950b1b0d3463482d104795f80836cdb36436" translate="yes" xml:space="preserve">
          <source>Rules support the special phase-control notation &lt;code&gt;[~]&lt;/code&gt;, which means the rule is never active. This feature supports plugins (see &lt;a href=&quot;extending_ghc#compiler-plugins&quot;&gt;Compiler Plugins&lt;/a&gt;), by making it possible to define a RULE that is never run by GHC, but is nevertheless parsed, typechecked etc, so that it is available to the plugin.</source>
          <target state="translated">规则支持特殊的相位控制符号 &lt;code&gt;[~]&lt;/code&gt; ，这意味着该规则永远不会处于活动状态。此功能通过定义一个从未由GHC运行但仍经过解析，类型检查等的RULE来支持插件（请参阅&lt;a href=&quot;extending_ghc#compiler-plugins&quot;&gt;Compiler Plugins&lt;/a&gt;），以便插件可以使用。</target>
        </trans-unit>
        <trans-unit id="bdfc1a6fd22feff8196d064513b680864dec98f2" translate="yes" xml:space="preserve">
          <source>Run &amp;ldquo;main&amp;rdquo; and here is your output:</source>
          <target state="translated">运行&amp;ldquo; main&amp;rdquo;，这是您的输出：</target>
        </trans-unit>
        <trans-unit id="f3cc3a22fa881d976320a326aaf28ee13bb7664b" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;main&lt;/code&gt; and here is your output:</source>
          <target state="translated">运行 &lt;code&gt;main&lt;/code&gt; ，这是您的输出：</target>
        </trans-unit>
        <trans-unit id="618d6a6d2a262d48a555a0f6c8bbb7706e465de7" translate="yes" xml:space="preserve">
          <source>Run &lt;strong&gt;hp2ps&lt;/strong&gt; to produce a Postscript file, &lt;code&gt;&lt;em&gt;prog&lt;/em&gt;.ps&lt;/code&gt;. The &lt;strong&gt;hp2ps&lt;/strong&gt; utility is described in detail in &lt;a href=&quot;#hp2ps&quot;&gt;hp2ps &amp;ndash; Rendering heap profiles to PostScript&lt;/a&gt;.</source>
          <target state="translated">运行&lt;strong&gt;hp2ps&lt;/strong&gt;以生成Postscript文件 &lt;code&gt;&lt;em&gt;prog&lt;/em&gt;.ps&lt;/code&gt; 。所述&lt;strong&gt;hp2ps&lt;/strong&gt;实用程序详细描述于&lt;a href=&quot;#hp2ps&quot;&gt;hp2ps -模拟堆轮廓为PostScript&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="911fcf364edf62850e5ffcd07989b1f697e2705e" translate="yes" xml:space="preserve">
          <source>Run GHC using the given frontend plugin. See &lt;a href=&quot;extending_ghc#frontend-plugins&quot;&gt;Frontend plugins&lt;/a&gt; for details.</source>
          <target state="translated">使用给定的前端插件运行GHC。有关详细信息，请参见&lt;a href=&quot;extending_ghc#frontend-plugins&quot;&gt;前端插件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d9fd5d82a08b556c1588a84ebc156eb28980feb" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad and return &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; on failure and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; on success. In both cases any unconsumed input and the number of bytes consumed is returned. In the case of failure, a human-readable error message is included as well.</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad并在失败时返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ，在成功时返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 。在这两种情况下，都会返回任何未消耗的输入和消耗的字节数。在失败的情况下，还包括人类可读的错误消息。</target>
        </trans-unit>
        <trans-unit id="3b9396e08b478807ee6026a693ef5151770284a6" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad and return &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; on failure and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; on success. In both cases any unconsumed input and the number of bytes consumed is returned. In the case of failure, a human-readable error message is included as well.</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad并在失败时返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ，在成功时返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 。在这两种情况下，都将返回任何未消耗的输入和所消耗的字节数。在失败的情况下，还包括人类可读的错误消息。</target>
        </trans-unit>
        <trans-unit id="965d78fe8955ae2faf5a1e6ce0699bff1999fb95" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad and return &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; on failure and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; on success. In both cases any unconsumed input and the number of bytes consumed is returned. In the case of failure, a human-readable error message is included as well.</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad并在失败时返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ，在成功时返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 。在这两种情况下，都将返回任何未消耗的输入和所消耗的字节数。在失败的情况下，还包括人类可读的错误消息。</target>
        </trans-unit>
        <trans-unit id="27d3ff1ab504e0b66e3c2e4a4954f4863febfa6b" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad. See &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Decoder&quot;&gt;Decoder&lt;/a&gt;&lt;/code&gt; for what to do next, like providing input, handling decoder errors and to get the output value. Hint: Use the helper functions &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushChunk&quot;&gt;pushChunk&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushChunks&quot;&gt;pushChunks&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushEndOfInput&quot;&gt;pushEndOfInput&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">运行一个 &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad。请参阅 &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Decoder&quot;&gt;Decoder&lt;/a&gt;&lt;/code&gt; 以了解下一步操作，例如提供输入，处理解码器错误并获取输出值。提示：使用辅助函数 &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushChunk&quot;&gt;pushChunk&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushChunks&quot;&gt;pushChunks&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-binary-get#v:pushEndOfInput&quot;&gt;pushEndOfInput&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a2047fac4fd63c9345e542f91bc2b20ce025bc7" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; as a side-effect of a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt; ()&lt;/code&gt; action.</source>
          <target state="translated">作为 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt; ()&lt;/code&gt; （）操作的副作用运行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d0fb6503860e9e4e489818701f663ad2fa4dee9" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:finalBuildStep&quot;&gt;finalBuildStep&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:finalBuildStep&quot;&gt;finalBuildStep&lt;/a&gt;&lt;/code&gt; 运行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c58dce72981f7f2e5217c160d4f37c4f85c73c2" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">运行一个 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9b9c04ff8d5743ab8accbf55491a7aad7010b5f" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; action redirecting the produced output to a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 操作，将产生的输出重定向到 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc8fd4293947f966432bfc2a91b948b341034c7e" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; action redirecting the produced output to a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 动作，将产生的输出重定向到 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8ba4c4d701f272a3441f8b3ca2ed7932ea433eba" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; action redirecting the produced output to a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 动作，将产生的输出重定向到 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="335c022c0719fe99fc26bca294484d83c4310f29" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="422e5b221bdc42780f1ab803b6dbf7eac79420db" translate="yes" xml:space="preserve">
          <source>Run a computation with an empty cost-center stack. For example, this is used by the interpreter to run an interpreted computation without the call stack showing that it was invoked from GHC.</source>
          <target state="translated">用空的成本中心栈运行计算。例如,解释器用它来运行解释的计算,而不在调用栈中显示它是由GHC调用的。</target>
        </trans-unit>
        <trans-unit id="3c70a9d8ade27baaef498ee1664afa61565ae7f4" translate="yes" xml:space="preserve">
          <source>Run a late specialisation pass</source>
          <target state="translated">办好后期的专升本证</target>
        </trans-unit>
        <trans-unit id="183b385d6ba52473e0ecf4163ed478ce4985cea1" translate="yes" xml:space="preserve">
          <source>Run a line-reading application according to the given behavior.</source>
          <target state="translated">根据给定的行为运行一个读行应用程序。</target>
        </trans-unit>
        <trans-unit id="60d245c4cf9cf1eaf81f65dece4def9f6a25a167" translate="yes" xml:space="preserve">
          <source>Run a line-reading application.</source>
          <target state="translated">运行一个读行应用程序。</target>
        </trans-unit>
        <trans-unit id="a0650ed8b3ae442ea763332ee6780ee7560f7a2a" translate="yes" xml:space="preserve">
          <source>Run a line-reading application. This function should suffice for most applications.</source>
          <target state="translated">运行一个读行程序。这个功能应该足以满足大多数应用程序的需求。</target>
        </trans-unit>
        <trans-unit id="c9f5f1c288d3ca39171961b2f4776cbc8b9138f4" translate="yes" xml:space="preserve">
          <source>Run a line-reading application. Uses &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:defaultBehavior&quot;&gt;defaultBehavior&lt;/a&gt;&lt;/code&gt; to determine the interaction behavior.</source>
          <target state="translated">运行行读取应用程序。使用 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:defaultBehavior&quot;&gt;defaultBehavior&lt;/a&gt;&lt;/code&gt; 确定交互行为。</target>
        </trans-unit>
        <trans-unit id="b5813516b7ad0bf5051f8ec3ab8eff08394d1ff9" translate="yes" xml:space="preserve">
          <source>Run an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action with the given working directory and restore the original working directory afterwards, even if the given action fails due to an exception.</source>
          <target state="translated">即使给定操作由于异常而失败，也要使用给定的工作目录运行 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 操作，然后恢复原始工作目录。</target>
        </trans-unit>
        <trans-unit id="8d745de77c3f5aed6a42ab8ac9d92a3dba8a6e5f" translate="yes" xml:space="preserve">
          <source>Run an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action with the given working directory and restore the original working directory afterwards, even if the given action fails due to an exception.</source>
          <target state="translated">即使给定操作由于异常而失败，也要使用给定的工作目录运行 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 操作，然后恢复原始工作目录。</target>
        </trans-unit>
        <trans-unit id="314e409c1307df8aa6ac1480db723dc1b169f70d" translate="yes" xml:space="preserve">
          <source>Run an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action with the given working directory and restore the original working directory afterwards, even if the given action fails due to an exception.</source>
          <target state="translated">即使给定操作由于异常而失败，也要使用给定的工作目录运行 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 操作，然后恢复原始工作目录。</target>
        </trans-unit>
        <trans-unit id="cd67e6f9b14b5f1b4f390893a28449fb2a210e6d" translate="yes" xml:space="preserve">
          <source>Run an action in the ST monad and return an immutable array of its result paired with whatever else the action returns.</source>
          <target state="translated">在ST单体中运行一个操作,并返回一个包含其结果的不可变数组,并与该操作返回的任何其他内容配对。</target>
        </trans-unit>
        <trans-unit id="ad9fc00aef2a60fbe890ead5d0fd3cbc251b9f92" translate="yes" xml:space="preserve">
          <source>Run an action in the ST monad and return an immutable array of its result.</source>
          <target state="translated">在ST单体中运行一个动作,并返回其结果的不可变数组。</target>
        </trans-unit>
        <trans-unit id="cf04cb16de76968e0988894c0c83c851d2dfe827" translate="yes" xml:space="preserve">
          <source>Run an action in the underlying monad, as per &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt;, passing it a runner function which restores the current &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:InputT&quot;&gt;InputT&lt;/a&gt;&lt;/code&gt; context. This can be used in the event that we have some function that takes an action in the underlying monad as an argument (such as &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;hoist&lt;/code&gt;, &lt;code&gt;forkIO&lt;/code&gt;, etc) and we want to compose it with actions in &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:InputT&quot;&gt;InputT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">根据 &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt; ，在基础monad中运行一个动作，并向其传递一个运行器函数，该函数将恢复当前 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:InputT&quot;&gt;InputT&lt;/a&gt;&lt;/code&gt; 上下文。如果我们有一些函数可以将底层monad中的一个动作作为参数（例如 &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt; ， &lt;code&gt;hoist&lt;/code&gt; ， &lt;code&gt;forkIO&lt;/code&gt; 等），并且我们希望将其与 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:InputT&quot;&gt;InputT&lt;/a&gt;&lt;/code&gt; 中的动作进行组合，则可以使用此方法。</target>
        </trans-unit>
        <trans-unit id="04ebb7d09f1e8bcafd208fb465bd1c0a97a0f11d" translate="yes" xml:space="preserve">
          <source>Run an action only if an error is thrown in the main action. Unlike &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:onException&quot;&gt;onException&lt;/a&gt;&lt;/code&gt;, this works with every kind of error, not just exceptions. For example, if &lt;code&gt;f&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;../mtl-2.2.2/control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; computation which aborts with a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;, the computation &lt;code&gt;onError f g&lt;/code&gt; will execute &lt;code&gt;g&lt;/code&gt;, while &lt;code&gt;onException f g&lt;/code&gt; will not.</source>
          <target state="translated">仅在主操作中引发错误时才运行操作。与 &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:onException&quot;&gt;onException&lt;/a&gt;&lt;/code&gt; 不同，这适用于所有类型的错误，而不仅仅是异常。例如，如果 &lt;code&gt;f&lt;/code&gt; 是用 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; 终止的 &lt;code&gt;&lt;a href=&quot;../mtl-2.2.2/control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; 计算，则 &lt;code&gt;onError f g&lt;/code&gt; 计算将执行 &lt;code&gt;g&lt;/code&gt; ，而 &lt;code&gt;onException f g&lt;/code&gt; 将不会执行。</target>
        </trans-unit>
        <trans-unit id="f76e0042a6386395644739d326a5fb9836d1e921" translate="yes" xml:space="preserve">
          <source>Run an action only if an error is thrown in the main action. Unlike &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:onException&quot;&gt;onException&lt;/a&gt;&lt;/code&gt;, this works with every kind of error, not just exceptions. For example, if &lt;code&gt;f&lt;/code&gt; is an &lt;code&gt;&lt;a href=&quot;../mtl-2.2.2/control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; computation which aborts with a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;, the computation &lt;code&gt;onError f g&lt;/code&gt; will execute &lt;code&gt;g&lt;/code&gt;, while &lt;code&gt;onException f g&lt;/code&gt; will not.</source>
          <target state="translated">仅在主操作中引发错误时才运行操作。与 &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:onException&quot;&gt;onException&lt;/a&gt;&lt;/code&gt; 不同，这适用于所有类型的错误，而不仅仅是异常。例如，如果 &lt;code&gt;f&lt;/code&gt; 是用 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; 终止的 &lt;code&gt;&lt;a href=&quot;../mtl-2.2.2/control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; 计算，则 &lt;code&gt;onError f g&lt;/code&gt; 计算将执行 &lt;code&gt;g&lt;/code&gt; ，而 &lt;code&gt;onException f g&lt;/code&gt; 将不会执行。</target>
        </trans-unit>
        <trans-unit id="ff6d9eba1c8d691af1662a412cb04852b7d8c2c0" translate="yes" xml:space="preserve">
          <source>Run an action only if an exception is thrown in the main action. The exception is not caught, simply rethrown.</source>
          <target state="translated">只有在主操作中抛出异常时才运行一个操作。异常不会被捕获,只是被重新抛出。</target>
        </trans-unit>
        <trans-unit id="a0593a3587d1d52df5e1119e0c36ad372d09c8af" translate="yes" xml:space="preserve">
          <source>Run an additional strictness analysis before simplifier phase ⟨n⟩</source>
          <target state="translated">在简化阶段前进行额外的严格性分析⟨n⟩。</target>
        </trans-unit>
        <trans-unit id="4bcbd3db63062dfa6231e65999e7f05a00b77dc7" translate="yes" xml:space="preserve">
          <source>Run an additional strictness analysis before simplifier phase ⟨n⟩.</source>
          <target state="translated">在简化阶段前进行额外的严格性分析⟨n⟩。</target>
        </trans-unit>
        <trans-unit id="ed07c24b15fb62eced376881f4e6687ddfcb7e32" translate="yes" xml:space="preserve">
          <source>Run demand analysis again, at the end of the simplification pipeline</source>
          <target state="translated">再次运行需求分析,在简化管道的末端</target>
        </trans-unit>
        <trans-unit id="777b64f39eb2cb43ba27899e14df6d6e3da4eaa1" translate="yes" xml:space="preserve">
          <source>Run demand analysis again, at the end of the simplification pipeline. We found some opportunities for discovering strictness that were not visible earlier; and optimisations like &lt;a href=&quot;#ghc-flag--fspec-constr&quot;&gt;&lt;code&gt;-fspec-constr&lt;/code&gt;&lt;/a&gt; can create functions with unused arguments which are eliminated by late demand analysis. Improvements are modest, but so is the cost. See notes on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/LateDmd&quot;&gt;Trac wiki page&lt;/a&gt;.</source>
          <target state="translated">在简化流程的最后，再次运行需求分析。我们发现了一些发现严格性的机会，这是以前看不到的。诸如&lt;a href=&quot;#ghc-flag--fspec-constr&quot;&gt; &lt;code&gt;-fspec-constr&lt;/code&gt; 之类的&lt;/a&gt;优化可以创建带有未使用参数的函数，这些参数可以通过后期需求分析消除。改进是适度的，但成本也是如此。请参阅&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/LateDmd&quot;&gt;Trac Wiki页面&lt;/a&gt;上的注释。</target>
        </trans-unit>
        <trans-unit id="0a23b4ee81b4d7f03a40590113dea015fd463a52" translate="yes" xml:space="preserve">
          <source>Run demand analysis again, at the end of the simplification pipeline. We found some opportunities for discovering strictness that were not visible earlier; and optimisations like &lt;a href=&quot;#ghc-flag--fspec-constr&quot;&gt;&lt;code&gt;-fspec-constr&lt;/code&gt;&lt;/a&gt; can create functions with unused arguments which are eliminated by late demand analysis. Improvements are modest, but so is the cost. See notes on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/late-dmd&quot;&gt;wiki page&lt;/a&gt;.</source>
          <target state="translated">在简化流程的末尾，再次运行需求分析。我们发现了一些发现严格性的机会，这是以前看不到的。诸如&lt;a href=&quot;#ghc-flag--fspec-constr&quot;&gt; &lt;code&gt;-fspec-constr&lt;/code&gt; 之类的&lt;/a&gt;优化可以创建带有未使用参数的函数，这些参数可以通过后期需求分析消除。改进是适度的，但成本也是如此。请参阅&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/late-dmd&quot;&gt;Wiki页面&lt;/a&gt;上的注释。</target>
        </trans-unit>
        <trans-unit id="14d6eb1f35c6369d6e742b2bcde845dc224c6e2f" translate="yes" xml:space="preserve">
          <source>Run interpreted code (for GHCi, Template Haskell, Quasi-quoting, or Annotations) in a separate process. The interpreter will run in profiling mode if &lt;a href=&quot;profiling#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt; is in effect, and in dynamically-linked mode if &lt;a href=&quot;phases#ghc-flag--dynamic&quot;&gt;&lt;code&gt;-dynamic&lt;/code&gt;&lt;/a&gt; is in effect.</source>
          <target state="translated">在单独的过程中运行解释后的代码（用于GHCi，模板Haskell，准引用或注释）。解释器将在分析模式下，如果运行&lt;a href=&quot;profiling#ghc-flag--prof&quot;&gt; &lt;code&gt;-prof&lt;/code&gt; &lt;/a&gt;生效，并在动态链接模式，如果&lt;a href=&quot;phases#ghc-flag--dynamic&quot;&gt; &lt;code&gt;-dynamic&lt;/code&gt; &lt;/a&gt;生效。</target>
        </trans-unit>
        <trans-unit id="4e3e1f7e6b2e9eebaa7a69a5da07907cfee9fb0e" translate="yes" xml:space="preserve">
          <source>Run interpreted code in a separate process</source>
          <target state="translated">在一个单独的进程中运行解释的代码</target>
        </trans-unit>
        <trans-unit id="3eeb7fffd0e79015926b457be36571c62c7df4a7" translate="yes" xml:space="preserve">
          <source>Run it with one of the heap profiling options described below (eg. &lt;a href=&quot;runtime_control#rts-flag--h&quot;&gt;&lt;code&gt;-h&lt;/code&gt;&lt;/a&gt; for a basic producer profile). This generates the file &lt;code&gt;&lt;em&gt;prog&lt;/em&gt;.hp&lt;/code&gt;.</source>
          <target state="translated">使用下面描述的堆分析选项之一运行它（例如，&lt;a href=&quot;runtime_control#rts-flag--h&quot;&gt; &lt;code&gt;-h&lt;/code&gt; &lt;/a&gt;表示基本的生产者配置文件）。这将生成文件 &lt;code&gt;&lt;em&gt;prog&lt;/em&gt;.hp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e79dd058cbe769e629170b48754e0d7e7ef07d8" translate="yes" xml:space="preserve">
          <source>Run one action (for example, &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:getInputLine&quot;&gt;getInputLine&lt;/a&gt;&lt;/code&gt;) as part of a session of user interaction.</source>
          <target state="translated">在用户交互会话中运行一个动作（例如， &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:getInputLine&quot;&gt;getInputLine&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d57fa27be2988f809d9529acab96fbef90c6c352" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad</source>
          <target state="translated">运行 &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad</target>
        </trans-unit>
        <trans-unit id="c7822aaa89cafe0ed1b78a1705d18b68fb4f1c6c" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad with a serialiser</source>
          <target state="translated">使用序列化器运行 &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad</target>
        </trans-unit>
        <trans-unit id="bc12f36a855cd28c296b8970e21c134b404b7bd5" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad with a serialiser and get its result</source>
          <target state="translated">使用序列化器运行 &lt;code&gt;&lt;a href=&quot;data-binary-put#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; monad并获得其结果</target>
        </trans-unit>
        <trans-unit id="15a91ed56f7eda8a762d99a1cbc9c6f9ca392a8e" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument. If the calling thread is &lt;em&gt;bound&lt;/em&gt;, an unbound thread is created temporarily using &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;runInBoundThread&lt;/code&gt; doesn't finish until the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation finishes.</source>
          <target state="translated">运行作为第一个参数传递的 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 计算。如果调用线程是&lt;em&gt;绑定的&lt;/em&gt;，则使用 &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; 临时创建一个未绑定的线程。直到 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 计算完成， &lt;code&gt;runInBoundThread&lt;/code&gt; 才会完成。</target>
        </trans-unit>
        <trans-unit id="39a55d8f298922fc3d80bcb0f67d3a91ca4143e0" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation passed as the first argument. If the calling thread is not &lt;em&gt;bound&lt;/em&gt;, a bound thread is created temporarily. &lt;code&gt;runInBoundThread&lt;/code&gt; doesn't finish until the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation finishes.</source>
          <target state="translated">运行作为第一个参数传递的 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 计算。如果调用线程未&lt;em&gt;绑定&lt;/em&gt;，则将临时创建绑定线程。直到 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 计算完成， &lt;code&gt;runInBoundThread&lt;/code&gt; 才会完成。</target>
        </trans-unit>
        <trans-unit id="d1e2537f970c1219bce27f4fde2e232c5e95ff38" translate="yes" xml:space="preserve">
          <source>Run the C pre-processor on Haskell source files</source>
          <target state="translated">在Haskell源文件上运行C预处理器。</target>
        </trans-unit>
        <trans-unit id="2bc40f11b79f2845f13680d5f55ceb53d5b2846e" translate="yes" xml:space="preserve">
          <source>Run the full laziness optimisation (also known as let-floating), which floats let-bindings outside enclosing lambdas, in the hope they will be thereby be computed less often. See &lt;a href=&quot;http://research.microsoft.com/en-us/um/people/simonpj/papers/float.ps.gz&quot;&gt;Let-floating: moving bindings to give faster programs (ICFP&amp;lsquo;96)&lt;/a&gt;. Full laziness increases sharing, which can lead to increased memory residency.</source>
          <target state="translated">运行完全惰性优化（也称为let-floating），该优化将let绑定浮动到封闭的lambda之外，希望由此可以减少计算它们的频率。请参阅&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/simonpj/papers/float.ps.gz&quot;&gt;浮动：移动绑定以提供更快的程序（ICFP'96）&lt;/a&gt;。完全懒惰会增加共享，这可能导致内存驻留时间增加。</target>
        </trans-unit>
        <trans-unit id="7ccd1c26409863d293e65d0c896041b206d99caf" translate="yes" xml:space="preserve">
          <source>Run the full laziness optimisation (also known as let-floating), which floats let-bindings outside enclosing lambdas, in the hope they will be thereby be computed less often. See &lt;a href=&quot;http://research.microsoft.com/en-us/um/people/simonpj/papers/float.ps.gz&quot;&gt;Let-floating: moving bindings to give faster programs (ICFP&amp;rsquo;96)&lt;/a&gt;. Full laziness increases sharing, which can lead to increased memory residency.</source>
          <target state="translated">运行完全惰性优化（也称为let-floating），该优化将let绑定浮动到封闭的lambda之外，希望由此可以减少计算它们的频率。请参阅&lt;a href=&quot;http://research.microsoft.com/en-us/um/people/simonpj/papers/float.ps.gz&quot;&gt;浮动：移动绑定以提供更快的程序（ICFP'96）&lt;/a&gt;。完全懒惰会增加共享，这可能导致内存驻留时间增加。</target>
        </trans-unit>
        <trans-unit id="cebc7466edc5c643c6fd34b1dee7b3748354f93d" translate="yes" xml:space="preserve">
          <source>Run the given decoder, and only consume its input if it returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; is returned, the input will be unconsumed. If the given decoder fails, then so will this function.</source>
          <target state="translated">运行给定的解码器，并且仅在返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 时才使用其输入。如果返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ，则输入将不使用。如果给定的解码器失败，则此功能也会失败。</target>
        </trans-unit>
        <trans-unit id="48b2335cfe69fde08e5fb7ae064631dea3e3e163" translate="yes" xml:space="preserve">
          <source>Run the given decoder, and only consume its input if it returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; is returned, the input will be unconsumed. If the given decoder fails, then so will this function.</source>
          <target state="translated">运行给定的解码器，并且仅在返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; 时才使用其输入。如果未返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 内容，则该输入将不使用。如果给定的解码器失败，则此功能也会失败。</target>
        </trans-unit>
        <trans-unit id="91db76ec878a21b6ef9305ed216d407c42529d15" translate="yes" xml:space="preserve">
          <source>Run the given decoder, and only consume its input if it returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; is returned, the input will be unconsumed. If the given decoder fails, then so will this function.</source>
          <target state="translated">运行给定的解码器，并且仅在返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 时才使用其输入。如果返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ，则输入将不使用。如果给定的解码器失败，则此功能也会失败。</target>
        </trans-unit>
        <trans-unit id="e707bb9c05d4a4e7b7aa2ff317e62a251a1fff57" translate="yes" xml:space="preserve">
          <source>Run the given decoder, and only consume its input if it returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; is returned, the input will be unconsumed. If the given decoder fails, then so will this function.</source>
          <target state="translated">运行给定的解码器，并且仅在返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; 时才使用其输入。如果未返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 内容，则该输入将不使用。如果给定的解码器失败，则此功能也会失败。</target>
        </trans-unit>
        <trans-unit id="62f7c74c7a4d0d4952e0a486ac0c9296aba74171" translate="yes" xml:space="preserve">
          <source>Run the given decoder, and only consume its input if it returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; is returned, the input will be unconsumed. If the given decoder fails, then so will this function.</source>
          <target state="translated">运行给定的解码器，并且仅在返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 时才使用其输入。如果返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ，则输入将不使用。如果给定的解码器失败，则此功能也会失败。</target>
        </trans-unit>
        <trans-unit id="f142942efdf4b42d2fcd3de7eb2f4538d913637b" translate="yes" xml:space="preserve">
          <source>Run the given decoder, and only consume its input if it returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; is returned, the input will be unconsumed. If the given decoder fails, then so will this function.</source>
          <target state="translated">运行给定的解码器，并且仅在返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; 时才使用其输入。如果未返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 内容，则该输入将不使用。如果给定的解码器失败，则此功能也会失败。</target>
        </trans-unit>
        <trans-unit id="4478823b43946bc8c6e78124aa9b1f0d67f43d61" translate="yes" xml:space="preserve">
          <source>Run the given decoder, but without consuming its input. If the given decoder fails, then so will this function.</source>
          <target state="translated">运行给定的解码器,但不消耗其输入。如果给定的解码器失败,那么这个函数也会失败。</target>
        </trans-unit>
        <trans-unit id="dcd41406029e6406480383fb84266bf1348d4497" translate="yes" xml:space="preserve">
          <source>Run the given mod finalizers.</source>
          <target state="translated">运行给定的model finalizers。</target>
        </trans-unit>
        <trans-unit id="8b176b07be206bdcb95736b2b498d455b027fd1e" translate="yes" xml:space="preserve">
          <source>Run the supplied IO action with an empty CCS. For example, this is used by the interpreter to run an interpreted computation without the call stack showing that it was invoked from GHC.</source>
          <target state="translated">用一个空的CCS运行所提供的IO操作。例如,解释器用它来运行解释的计算,而不在调用栈中显示它是由GHC调用的。</target>
        </trans-unit>
        <trans-unit id="20832ca6085c4b502e7eebf7e021a540475c97d5" translate="yes" xml:space="preserve">
          <source>RunIO</source>
          <target state="translated">RunIO</target>
        </trans-unit>
        <trans-unit id="95f65dbb3c870989ff905e99797f95da37004464" translate="yes" xml:space="preserve">
          <source>RunTH called &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">RunTH称为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5b14b1de606445983aa168d6bf8a2d6e2d6eeff" translate="yes" xml:space="preserve">
          <source>RunTH called &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">RunTH称为 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57af8235663169b6139d510156489b353ea30080" translate="yes" xml:space="preserve">
          <source>RunTH called &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">RunTH称为 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a7c65d9b24c951ddf2a8d49d3996c27df48d47f7" translate="yes" xml:space="preserve">
          <source>RunTH finished successfully; return value follows</source>
          <target state="translated">RunTH成功结束;返回值如下</target>
        </trans-unit>
        <trans-unit id="55f5d6f3fbc37e8e0ac70b5616ceb4c8cae7da87" translate="yes" xml:space="preserve">
          <source>RunTH threw an exception</source>
          <target state="translated">RunTH抛出一个异常</target>
        </trans-unit>
        <trans-unit id="c7e2ecdf98b9f298685656e1a05e2f96a4be51e5" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;RealWorld&lt;/code&gt; state thread</source>
          <target state="translated">运行 &lt;code&gt;RealWorld&lt;/code&gt; 状态线程</target>
        </trans-unit>
        <trans-unit id="110ccc2b82282cf1f137b071c8241407f8dbc74c" translate="yes" xml:space="preserve">
          <source>Running TH splices</source>
          <target state="translated">运行TH拼接</target>
        </trans-unit>
        <trans-unit id="5473653cff7c9841a6824eb8ab32656a543592d4" translate="yes" xml:space="preserve">
          <source>Running a custom pre-processor at compile-time is in some settings appropriate and useful. The &lt;code&gt;-F&lt;/code&gt; option lets you run a pre-processor as part of the overall GHC compilation pipeline, which has the advantage over running a Haskell pre-processor separately in that it works in interpreted mode and you can continue to take reap the benefits of GHC&amp;rsquo;s recompilation checker.</source>
          <target state="translated">在某些设置中，在编译时运行自定义预处理器是适当且有用的。该 &lt;code&gt;-F&lt;/code&gt; 选项允许你运行的预处理器作为整个GHC编译流水线，其中分别有优于运行Haskell的预处理器，它工作在解释模式下，你可以继续服用收获GHC的好处的一部分重新编译检查器。</target>
        </trans-unit>
        <trans-unit id="debf34040ba2a5acc7a78a8f0a6722c03bde589c" translate="yes" xml:space="preserve">
          <source>Running a parser</source>
          <target state="translated">运行解析器</target>
        </trans-unit>
        <trans-unit id="60f20d277b623f5c35e48bfd4dc187e65b923ce6" translate="yes" xml:space="preserve">
          <source>Running multiple plugins is also supported, by passing multiple &lt;code&gt;-fplugin=...&lt;/code&gt; options. GHC will load the plugins in the order in which they are specified on the command line and, when appropriate, compose their effects in the same order. That is, if we had two Core plugins, &lt;code&gt;Plugin1&lt;/code&gt; and &lt;code&gt;Plugin2&lt;/code&gt;, each defining an &lt;code&gt;install&lt;/code&gt; function like the one above, then GHC would first run &lt;code&gt;Plugin1.install&lt;/code&gt; on the default &lt;code&gt;[CoreToDo]&lt;/code&gt;, take the result and feed it to &lt;code&gt;Plugin2.install&lt;/code&gt;. &lt;code&gt;-fplugin=Plugin1 -fplugin=Plugin2&lt;/code&gt; will update the Core pipeline by applying &lt;code&gt;Plugin1.install opts1 &amp;gt;=&amp;gt; Plugin2.install opts2&lt;/code&gt; (where &lt;code&gt;opts1&lt;/code&gt; and &lt;code&gt;opts2&lt;/code&gt; are the options passed to each plugin using &lt;code&gt;-fplugin-opt=...&lt;/code&gt;). This is not specific to Core plugins but holds for all the types of plugins that can be composed or sequenced in some way: the first plugin to appear on the GHC command line will always act first.</source>
          <target state="translated">通过传递多个 &lt;code&gt;-fplugin=...&lt;/code&gt; 选项，也支持运行多个插件。 GHC将按照在命令行上指定的顺序加载插件，并在适当时以相同顺序组合其效果。也就是说，如果我们有两个Core插件 &lt;code&gt;Plugin1&lt;/code&gt; 和 &lt;code&gt;Plugin2&lt;/code&gt; ，每个插件都定义了与上述插件类似的 &lt;code&gt;install&lt;/code&gt; 功能，那么GHC将首先在默认的 &lt;code&gt;[CoreToDo]&lt;/code&gt; 上运行 &lt;code&gt;Plugin1.install&lt;/code&gt; ，获取结果并将其提供给 &lt;code&gt;Plugin2.install&lt;/code&gt; 。 &lt;code&gt;-fplugin=Plugin1 -fplugin=Plugin2&lt;/code&gt; 将通过应用 &lt;code&gt;Plugin1.install opts1 &amp;gt;=&amp;gt; Plugin2.install opts2&lt;/code&gt; 更新核心管道。install opts1&amp;gt; =&amp;gt; Plugin2.install opts2（其中 &lt;code&gt;opts1&lt;/code&gt; 和 &lt;code&gt;opts2&lt;/code&gt; 是使用 &lt;code&gt;-fplugin-opt=...&lt;/code&gt; 传递给每个插件的选项。这并非特定于Core插件，而是适用于可以通过某种方式组合或排序的所有类型的插件：出现在GHC命令行上的第一个插件将始终优先执行。</target>
        </trans-unit>
        <trans-unit id="3ea0b855fd4a1f0434152ed3530d89a3c80488bf" translate="yes" xml:space="preserve">
          <source>Running sub-processes</source>
          <target state="translated">运行子进程</target>
        </trans-unit>
        <trans-unit id="8a61554b223b5c9fc4ee8fbf79b7a49f7b54226a" translate="yes" xml:space="preserve">
          <source>Running the program generates a file with the &lt;code&gt;.tix&lt;/code&gt; suffix, in this case &lt;code&gt;Recip.tix&lt;/code&gt;, which contains the coverage data for this run of the program. The program may be run multiple times (e.g. with different test data), and the coverage data from the separate runs is accumulated in the &lt;code&gt;.tix&lt;/code&gt; file. To reset the coverage data and start again, just remove the &lt;code&gt;.tix&lt;/code&gt; file. You can control where the &lt;code&gt;.tix&lt;/code&gt; file is generated using the environment variable &lt;a href=&quot;#envvar-HPCTIXFILE&quot; id=&quot;index-9&quot;&gt;&lt;code&gt;HPCTIXFILE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">运行该程序会生成一个带有 &lt;code&gt;.tix&lt;/code&gt; 后缀的文件，在本例中为 &lt;code&gt;Recip.tix&lt;/code&gt; ，其中包含此程序运行的覆盖率数据。该程序可以运行多次（例如，使用不同的测试数据），并且来自单独运行的覆盖率数据会累积在 &lt;code&gt;.tix&lt;/code&gt; 文件中。要重置coverage数据并重新开始，只需删除 &lt;code&gt;.tix&lt;/code&gt; 文件。您可以使用环境变量&lt;a href=&quot;#envvar-HPCTIXFILE&quot; id=&quot;index-9&quot;&gt; &lt;code&gt;HPCTIXFILE&lt;/code&gt; &lt;/a&gt;来控制 &lt;code&gt;.tix&lt;/code&gt; 文件的生成位置。</target>
        </trans-unit>
        <trans-unit id="ebe0179422c905f3cf2c2e60f92ac32bd6424cf7" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;Reader&lt;/code&gt; and extracts the final value from it. (The inverse of &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-reader#v:reader&quot;&gt;reader&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">运行 &lt;code&gt;Reader&lt;/code&gt; 并从中提取最终值。（与 &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-reader#v:reader&quot;&gt;reader&lt;/a&gt;&lt;/code&gt; 相反。）</target>
        </trans-unit>
        <trans-unit id="d81daff38a2e8becbe69003e3d64a0d02582ad64" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;Reader&lt;/code&gt; and extracts the final value from it. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-reader#v:reader&quot;&gt;reader&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">运行 &lt;code&gt;Reader&lt;/code&gt; 并从中提取最终值。（与 &lt;code&gt;&lt;a href=&quot;control-monad-trans-reader#v:reader&quot;&gt;reader&lt;/a&gt;&lt;/code&gt; 相反。）</target>
        </trans-unit>
        <trans-unit id="b24f6b665ff90e778b2bc1246990ffb02aedd0ce" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;Select&lt;/code&gt; computation with a function for evaluating answers to select a particular answer. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#v:select&quot;&gt;select&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">运行带有用于评估答案以选择特定答案的功能的 &lt;code&gt;Select&lt;/code&gt; 计算。（ &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#v:select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; 的倒数。）</target>
        </trans-unit>
        <trans-unit id="3ce8221138916a0224e49c3a5cb2e8ca476f8705" translate="yes" xml:space="preserve">
          <source>Runs a &lt;code&gt;SelectT&lt;/code&gt; computation with a function for evaluating answers to select a particular answer. (The inverse of &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#v:select&quot;&gt;select&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">运行带有评估答案以选择特定答案的功能的 &lt;code&gt;SelectT&lt;/code&gt; 计算。（ &lt;code&gt;&lt;a href=&quot;control-monad-trans-select#v:select&quot;&gt;select&lt;/a&gt;&lt;/code&gt; 的倒数。）</target>
        </trans-unit>
        <trans-unit id="9702b4260727983ec3835e361a57f86bf43eb272" translate="yes" xml:space="preserve">
          <source>Runs a command using the shell, and returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s that may be used to communicate with the process via its &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, and &lt;code&gt;stderr&lt;/code&gt; respectively.</source>
          <target state="translated">使用shell运行命令，并返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; ，可分别通过其 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 与该进程进行通信。</target>
        </trans-unit>
        <trans-unit id="dc39087668ee73d261d085af5bfa7aaea25ad529" translate="yes" xml:space="preserve">
          <source>Runs a command using the shell, and returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s that may be used to communicate with the process via its &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, and &lt;code&gt;stderr&lt;/code&gt; respectively.</source>
          <target state="translated">使用shell运行命令，并返回 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; ，可分别通过其 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 与该进程进行通信。</target>
        </trans-unit>
        <trans-unit id="80a3aa5db5f9b19220f922db252105c09ebe8b23" translate="yes" xml:space="preserve">
          <source>Runs a command using the shell, and returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s that may be used to communicate with the process via its &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt;, and &lt;code&gt;stderr&lt;/code&gt; respectively.</source>
          <target state="translated">使用shell运行命令，并返回 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; ，可分别通过其 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 与该进程进行通信。</target>
        </trans-unit>
        <trans-unit id="e76e6388ca9a52ed94e2a298db04cfe4bd7865ce" translate="yes" xml:space="preserve">
          <source>Runs a command using the shell.</source>
          <target state="translated">使用shell运行一个命令。</target>
        </trans-unit>
        <trans-unit id="7d3eb255b4482ad8e99fec5f8dd54522d3f17add" translate="yes" xml:space="preserve">
          <source>Runs a raw command, and returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s that may be used to communicate with the process via its &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; respectively.</source>
          <target state="translated">运行原始命令，并返回分别用于通过其 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 与进程通信的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cefa4942e627a2e65d74f7eb4176a1ffe6fffb38" translate="yes" xml:space="preserve">
          <source>Runs a raw command, and returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s that may be used to communicate with the process via its &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; respectively.</source>
          <target state="translated">运行原始命令，并返回分别用于通过其 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 与进程进行通信的 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5dc8c77ed9c979f1789e47db5d3b0f1acdcd1bdc" translate="yes" xml:space="preserve">
          <source>Runs a raw command, and returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s that may be used to communicate with the process via its &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; respectively.</source>
          <target state="translated">运行原始命令，并返回分别用于通过其 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 与进程进行通信的 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ac0263c85df97edaad82961ff458ab2a1952c1b" translate="yes" xml:space="preserve">
          <source>Runs a raw command, optionally specifying &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s from which to take the &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; channels for the new process (otherwise these handles are inherited from the current process).</source>
          <target state="translated">运行原始命令，可选地指定 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; ，从中获取用于新进程的 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 通道（否则，这些句柄将从当前进程继承）。</target>
        </trans-unit>
        <trans-unit id="1f6c09d81a04a291610fc12c4731bdc523778432" translate="yes" xml:space="preserve">
          <source>Runs a raw command, optionally specifying &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s from which to take the &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; channels for the new process (otherwise these handles are inherited from the current process).</source>
          <target state="translated">运行原始命令，可选地指定 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; ，从中获取用于新进程的 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 通道（否则，这些句柄将从当前进程继承）。</target>
        </trans-unit>
        <trans-unit id="baae3dfd91e1b73430259a143a21608146c85282" translate="yes" xml:space="preserve">
          <source>Runs a raw command, optionally specifying &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s from which to take the &lt;code&gt;stdin&lt;/code&gt;, &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt; channels for the new process (otherwise these handles are inherited from the current process).</source>
          <target state="translated">运行原始命令，可选地指定 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; ，从中获取用于新进程的 &lt;code&gt;stdin&lt;/code&gt; ， &lt;code&gt;stdout&lt;/code&gt; 和 &lt;code&gt;stderr&lt;/code&gt; 通道（否则，这些句柄将从当前进程继承）。</target>
        </trans-unit>
        <trans-unit id="5cb758bfedb5892b023f8cd504b7def95c728d00" translate="yes" xml:space="preserve">
          <source>Runs a series of sanity checks and lints on the extended interface files that are being written out. These include testing things properties such as variables not occuring outside of their expected scopes.</source>
          <target state="translated">对正在写入的扩展接口文件进行一系列的安全检查和过滤。这些检查包括测试一些属性,比如变量不会出现在预期范围之外。</target>
        </trans-unit>
        <trans-unit id="13e3ae59817862d6e24a80cea25f9d7d70d5c0ab" translate="yes" xml:space="preserve">
          <source>Runs a series of sanity checks and lints on the extended interface files that are being written out. These include testing things properties such as variables not occurring outside of their expected scopes.</source>
          <target state="translated">在被写入的扩展接口文件上运行一系列理智性检查和线程。这些检查包括测试一些属性,比如变量不会出现在预期范围之外。</target>
        </trans-unit>
        <trans-unit id="fd82f504d2d58af05429e9e10aa1f178ddf80204" translate="yes" xml:space="preserve">
          <source>Runs an action with asynchronous exceptions disabled. The action is provided a method for restoring the async. environment to what it was at the &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; call. See &lt;a href=&quot;../base-4.14.1.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;'s &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在禁用异步异常的情况下运行操作。该操作提供了一种用于还原异步的方法。 &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; 呼叫所处的环境。请参见&lt;a href=&quot;../base-4.14.1.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;的 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="764ddd4c68ca6dd931e1972b88a7147fdfa86781" translate="yes" xml:space="preserve">
          <source>Runs an action with asynchronous exceptions disabled. The action is provided a method for restoring the async. environment to what it was at the &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; call. See &lt;a href=&quot;../base-4.15.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;'s &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">在禁用异步异常的情况下运行操作。该操作提供了一种用于还原异步的方法。 &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; 呼叫所处的环境。请参见&lt;a href=&quot;../base-4.15.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;的 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:mask&quot;&gt;mask&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fe6084c1a3fd5b43bacc585f14f922412cce042" translate="yes" xml:space="preserve">
          <source>Runs an anonymous &lt;code&gt;&lt;a href=&quot;control-monad-cont#t:Cont&quot;&gt;Cont&lt;/a&gt;&lt;/code&gt; block and extracts value from it with &lt;code&gt;(`runCont` id)&lt;/code&gt;. Here &lt;code&gt;id&lt;/code&gt; is the continuation, passed to the &lt;code&gt;Cont&lt;/code&gt; block.</source>
          <target state="translated">运行一个匿名的 &lt;code&gt;&lt;a href=&quot;control-monad-cont#t:Cont&quot;&gt;Cont&lt;/a&gt;&lt;/code&gt; 块并使用 &lt;code&gt;(`runCont` id)&lt;/code&gt; 从中提取值。这里 &lt;code&gt;id&lt;/code&gt; 是延续，传递到 &lt;code&gt;Cont&lt;/code&gt; 块。</target>
        </trans-unit>
        <trans-unit id="1c2160e3536a24db1fa5c7d6a9b48fc51e2b4654" translate="yes" xml:space="preserve">
          <source>Runs another specialisation pass towards the end of the optimisation pipeline. This can catch specialisation opportunities which arose from the previous specialisation pass or other inlining.</source>
          <target state="translated">在优化管道的最后运行另一个专业化通道。这可以捕捉从上一个专门化通道或其他内联中产生的专门化机会。</target>
        </trans-unit>
        <trans-unit id="7a9d67a12e147a14423a8f285de654f95371aa27" translate="yes" xml:space="preserve">
          <source>Runs the mod finalizers.</source>
          <target state="translated">运行model finalizers。</target>
        </trans-unit>
        <trans-unit id="17c0231a9c26233bc34f91a12eb6403f13a57ed2" translate="yes" xml:space="preserve">
          <source>Runtime statistics</source>
          <target state="translated">运行时统计</target>
        </trans-unit>
        <trans-unit id="08e8f6f71c9bbd3500f65426030c8c9f591149d5" translate="yes" xml:space="preserve">
          <source>Runtime system name and version.</source>
          <target state="translated">运行时系统名称和版本。</target>
        </trans-unit>
        <trans-unit id="7a012dd66b31c20680aae0c2a22bff371d2224bd" translate="yes" xml:space="preserve">
          <source>RuntimeRep</source>
          <target state="translated">RuntimeRep</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="1c12fa511d52194a5681ee8be41a1e398d85f290" translate="yes" xml:space="preserve">
          <source>S1</source>
          <target state="translated">S1</target>
        </trans-unit>
        <trans-unit id="899bf6f720e849dde5d0680c3b936af1ed0ed670" translate="yes" xml:space="preserve">
          <source>SCC</source>
          <target state="translated">SCC</target>
        </trans-unit>
        <trans-unit id="6745b0587785756298faec14a364901bd599fdd1" translate="yes" xml:space="preserve">
          <source>SCC stands for &amp;ldquo;Set Cost Centre&amp;rdquo;. The double quotes can be omitted if &lt;code&gt;name&lt;/code&gt; is a Haskell identifier starting with a lowercase letter, for example:</source>
          <target state="translated">SCC代表&amp;ldquo;设定成本中心&amp;rdquo;。如果 &lt;code&gt;name&lt;/code&gt; 是以小写字母开头的Haskell标识符，则可以省略双引号，例如：</target>
        </trans-unit>
        <trans-unit id="f65329558d58550d256c29ddd08aefa1318badd6" translate="yes" xml:space="preserve">
          <source>SECURITY_DESCRIPTOR</source>
          <target state="translated">SECURITY_DESCRIPTOR</target>
        </trans-unit>
        <trans-unit id="7f9a19de07cd8af5c4dcf36abf5107acdd7e5e90" translate="yes" xml:space="preserve">
          <source>SECURITY_DESCRIPTOR_CONTROL</source>
          <target state="translated">SECURITY_DESCRIPTOR_CONTROL</target>
        </trans-unit>
        <trans-unit id="759f1d01aa3aa6eb019eaff57105108a241121c8" translate="yes" xml:space="preserve">
          <source>SECURITY_INFORMATION</source>
          <target state="translated">SECURITY_INFORMATION</target>
        </trans-unit>
        <trans-unit id="3ea6ea5359c3ec5b8c733abed79488b6cffb3f80" translate="yes" xml:space="preserve">
          <source>SHORT</source>
          <target state="translated">SHORT</target>
        </trans-unit>
        <trans-unit id="9c4876c894699d2a14673f8407ae9f51b03fe93b" translate="yes" xml:space="preserve">
          <source>SID</source>
          <target state="translated">SID</target>
        </trans-unit>
        <trans-unit id="7817913a615ba3fb96f9c4017b8bda6cab9a4d1c" translate="yes" xml:space="preserve">
          <source>SIZE_T</source>
          <target state="translated">SIZE_T</target>
        </trans-unit>
        <trans-unit id="a33fb99f39b188826f024829271dfaaae83bcff7" translate="yes" xml:space="preserve">
          <source>SMALL_RECT</source>
          <target state="translated">SMALL_RECT</target>
        </trans-unit>
        <trans-unit id="6a4bc1de8a6c2370dc5e29fab0a79b7d0110167d" translate="yes" xml:space="preserve">
          <source>SPEC</source>
          <target state="translated">SPEC</target>
        </trans-unit>
        <trans-unit id="51dd3a2be39f013fea07f9619118212919b9dc82" translate="yes" xml:space="preserve">
          <source>SPEC2</source>
          <target state="translated">SPEC2</target>
        </trans-unit>
        <trans-unit id="6df63cad9f75b5c64b7535d25c4ff47f6a51cc0d" translate="yes" xml:space="preserve">
          <source>SPLIT</source>
          <target state="translated">SPLIT</target>
        </trans-unit>
        <trans-unit id="6b42bd15d0f3851ba94b9c6f46ece2f62da81d54" translate="yes" xml:space="preserve">
          <source>SSE2 is unconditionally used on x86-64 platforms.</source>
          <target state="translated">在x86-64平台上无条件使用SSE2。</target>
        </trans-unit>
        <trans-unit id="950615819f3a7970b3e5eaf04967ce0a92bb2835" translate="yes" xml:space="preserve">
          <source>ST</source>
          <target state="translated">ST</target>
        </trans-unit>
        <trans-unit id="e5c2bad261297a0753db2fa8888147b037862b4a" translate="yes" xml:space="preserve">
          <source>STArray</source>
          <target state="translated">STArray</target>
        </trans-unit>
        <trans-unit id="c0b3e8442a3ffe44627f4a9836264ede1d95c8cd" translate="yes" xml:space="preserve">
          <source>STG pass sanity checking</source>
          <target state="translated">STG通过安全性检查</target>
        </trans-unit>
        <trans-unit id="a6a77f4184b5dc9ae0ae578b959c5420076bb090" translate="yes" xml:space="preserve">
          <source>STG representation</source>
          <target state="translated">STG代表</target>
        </trans-unit>
        <trans-unit id="cec127d634b8483c65675fe331bb988cce390f37" translate="yes" xml:space="preserve">
          <source>STM</source>
          <target state="translated">STM</target>
        </trans-unit>
        <trans-unit id="9066766844f7ae4915ba3de7074af6f2d62f2724" translate="yes" xml:space="preserve">
          <source>STM transactions that do not use &lt;code&gt;&lt;a href=&quot;ghc-conc#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">不使用 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; STM事务</target>
        </trans-unit>
        <trans-unit id="e5a520427dd21587b99c696298b392dd5580f65f" translate="yes" xml:space="preserve">
          <source>STRef</source>
          <target state="translated">STRef</target>
        </trans-unit>
        <trans-unit id="e978eeb54fadf054d78e68edb89b81271ed3f4dd" translate="yes" xml:space="preserve">
          <source>STRefs</source>
          <target state="translated">STRefs</target>
        </trans-unit>
        <trans-unit id="90f5b7ef29126e57f0d1e034cac1ded1fa114c30" translate="yes" xml:space="preserve">
          <source>STRep</source>
          <target state="translated">STRep</target>
        </trans-unit>
        <trans-unit id="16e4def8ced7122c8ea371b85fa1cc9e985f98ab" translate="yes" xml:space="preserve">
          <source>STUArray</source>
          <target state="translated">STUArray</target>
        </trans-unit>
        <trans-unit id="ef9739d368e51997aa5b6a749bd020ce6df5c75d" translate="yes" xml:space="preserve">
          <source>STret</source>
          <target state="translated">STret</target>
        </trans-unit>
        <trans-unit id="9525ae1781bb71fc767a9bab4b6f299ac5cc8c5d" translate="yes" xml:space="preserve">
          <source>Safe</source>
          <target state="translated">Safe</target>
        </trans-unit>
        <trans-unit id="7535c06f3f5a4d0548fb0642ce1d61948347b105" translate="yes" xml:space="preserve">
          <source>Safe API Only.</source>
          <target state="translated">只有安全的API。</target>
        </trans-unit>
        <trans-unit id="f756f346c9c3c1563af96de59654e6aa5b1dbb24" translate="yes" xml:space="preserve">
          <source>Safe API only of &lt;a href=&quot;data-array-st&quot;&gt;Data.Array.ST&lt;/a&gt;.</source>
          <target state="translated">仅&lt;a href=&quot;data-array-st&quot;&gt;Data.Array.ST的&lt;/a&gt;安全API 。</target>
        </trans-unit>
        <trans-unit id="b3d31a46f8a0b8d8beabe9685ebfe7850f5f2245" translate="yes" xml:space="preserve">
          <source>Safe API only of &lt;a href=&quot;data-array-storable&quot;&gt;Data.Array.Storable&lt;/a&gt;.</source>
          <target state="translated">仅&lt;a href=&quot;data-array-storable&quot;&gt;Data.Array.Storable的&lt;/a&gt;安全API 。</target>
        </trans-unit>
        <trans-unit id="e2daafb40e6c8d93bbdd4a902b19d52db880bc51" translate="yes" xml:space="preserve">
          <source>Safe API only.</source>
          <target state="translated">只有安全的API。</target>
        </trans-unit>
        <trans-unit id="c2b4f1c091c04d25018e09e575dd73be9c363a4b" translate="yes" xml:space="preserve">
          <source>Safe Haskell</source>
          <target state="translated">安全的Haskell</target>
        </trans-unit>
        <trans-unit id="e67a69e7e826590a4bb3f189a2199e3523fbaf17" translate="yes" xml:space="preserve">
          <source>Safe Haskell enables a small extension to the usual import syntax of Haskell, adding a &lt;code&gt;safe&lt;/code&gt; keyword:</source>
          <target state="translated">安全Haskell对Haskell的常规导入语法进行了小扩展，并添加了一个 &lt;code&gt;safe&lt;/code&gt; 关键字：</target>
        </trans-unit>
        <trans-unit id="61c09516b28b6110495b29552e9b7bdd6bc15fb3" translate="yes" xml:space="preserve">
          <source>Safe Haskell gives packages a new Boolean property, that of trust. Several new options are available at the GHC command-line to specify the trust property of packages:</source>
          <target state="translated">Safe Haskell 赋予了 packages 一个新的布尔属性,即信任属性。在 GHC 命令行中,有几个新的选项可以用来指定包的信任属性。</target>
        </trans-unit>
        <trans-unit id="b786b78a86f23785f5ed0ec33c27ec5ab85e8ccf" translate="yes" xml:space="preserve">
          <source>Safe Haskell has been designed with two use cases in mind:</source>
          <target state="translated">Safe Haskell在设计时考虑到了两个用例。</target>
        </trans-unit>
        <trans-unit id="7f51b5c9d1647923f4ab94e1f294b850fe65601a" translate="yes" xml:space="preserve">
          <source>Safe Haskell introduces the following three language flags:</source>
          <target state="translated">Safe Haskell引入了以下三个语言标志。</target>
        </trans-unit>
        <trans-unit id="dd09bfe0fa2d84cc1187db0f1ff4b4aad99dff27" translate="yes" xml:space="preserve">
          <source>Safe Haskell is an extension to the Haskell language that is implemented in GHC as of version 7.2. It allows for unsafe code to be securely included in a trusted code base by restricting the features of GHC Haskell the code is allowed to use. Put simply, it makes the types of programs trustable.</source>
          <target state="translated">安全Haskell是对Haskell语言的扩展,从7.2版本开始在GHC中实施。它通过限制GHC Haskell允许使用的功能,允许不安全的代码安全地包含在可信代码库中。简单地说,它使程序的类型变得可信任。</target>
        </trans-unit>
        <trans-unit id="7c263edc13b21bba8432087d3c5e3665015e0f69" translate="yes" xml:space="preserve">
          <source>Safe Haskell prevents all these attacks. This is done by compiling the RIO module with the &lt;a href=&quot;#extension-Safe&quot;&gt;&lt;code&gt;Safe&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#extension-Trustworthy&quot;&gt;&lt;code&gt;Trustworthy&lt;/code&gt;&lt;/a&gt; flag and compiling &lt;code&gt;Danger&lt;/code&gt; with the &lt;a href=&quot;#extension-Safe&quot;&gt;&lt;code&gt;Safe&lt;/code&gt;&lt;/a&gt; flag. We explain each below.</source>
          <target state="translated">Safe Haskell可以防止所有这些攻击。这是由编译RIO模块用做&lt;a href=&quot;#extension-Safe&quot;&gt; &lt;code&gt;Safe&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#extension-Trustworthy&quot;&gt; &lt;code&gt;Trustworthy&lt;/code&gt; &lt;/a&gt;标志和编译 &lt;code&gt;Danger&lt;/code&gt; 与&lt;a href=&quot;#extension-Safe&quot;&gt; &lt;code&gt;Safe&lt;/code&gt; &lt;/a&gt;标志。我们在下面解释每个。</target>
        </trans-unit>
        <trans-unit id="d6b18ccf751a55eeedf1919de6a02a1a66f79af5" translate="yes" xml:space="preserve">
          <source>Safe Haskell, however, &lt;em&gt;does not offer&lt;/em&gt; compilation safety. During compilation time it is possible for arbitrary processes to be launched, using for example the &lt;a href=&quot;../phases#pre-processor&quot;&gt;custom pre-processor&lt;/a&gt; flag. This can be manipulated to either compromise a user&amp;rsquo;s system at compilation time, or to modify the source code just before compilation to try to alter Safe Haskell flags. This is discussed further in section &lt;a href=&quot;#safe-compilation&quot;&gt;Safe Compilation&lt;/a&gt;.</source>
          <target state="translated">但是，Safe Haskell&lt;em&gt;不提供&lt;/em&gt;编译安全性。在编译期间，可以使用例如&lt;a href=&quot;../phases#pre-processor&quot;&gt;自定义预处理器&lt;/a&gt;标志启动任意进程。可以对其进行操作，以在编译时危及用户的系统，也可以在编译前修改源代码以尝试更改Safe Haskell标志。在&amp;ldquo;&lt;a href=&quot;#safe-compilation&quot;&gt;安全编译&amp;rdquo;&lt;/a&gt;部分中将对此进行进一步讨论。</target>
        </trans-unit>
        <trans-unit id="b3aeec5ca1980ad741d3ad1d344e12965e713814" translate="yes" xml:space="preserve">
          <source>Safe Haskell, however, &lt;em&gt;does not offer&lt;/em&gt; compilation safety. During compilation time it is possible for arbitrary processes to be launched, using for example the &lt;a href=&quot;phases#pre-processor&quot;&gt;custom pre-processor&lt;/a&gt; flag. This can be manipulated to either compromise a user&amp;rsquo;s system at compilation time, or to modify the source code just before compilation to try to alter Safe Haskell flags. This is discussed further in section &lt;a href=&quot;#safe-compilation&quot;&gt;Safe Compilation&lt;/a&gt;.</source>
          <target state="translated">但是，Safe Haskell &lt;em&gt;不提供&lt;/em&gt;编译安全性。在编译期间，可以使用例如&lt;a href=&quot;phases#pre-processor&quot;&gt;自定义预处理器&lt;/a&gt;标志启动任意进程。可以对其进行操作，以在编译时危及用户的系统，也可以在编译前修改源代码以尝试更改Safe Haskell标志。在&amp;ldquo; &lt;a href=&quot;#safe-compilation&quot;&gt;安全编译&amp;rdquo;&lt;/a&gt;部分中将进一步讨论。</target>
        </trans-unit>
        <trans-unit id="7559a2e6feca986de7fcdcc33b5293ce51f1953d" translate="yes" xml:space="preserve">
          <source>Safe coercions</source>
          <target state="translated">安全胁迫</target>
        </trans-unit>
        <trans-unit id="487c71c35953bfc2f56e52fc2926a6b36c72c198" translate="yes" xml:space="preserve">
          <source>Safe coercions between data types.</source>
          <target state="translated">数据类型之间的安全胁迫。</target>
        </trans-unit>
        <trans-unit id="15321e8ea7eb095fd68c7d2b0920edd30f70ee3f" translate="yes" xml:space="preserve">
          <source>Safe conversion functions</source>
          <target state="translated">安全转换功能</target>
        </trans-unit>
        <trans-unit id="de5976ed065d66227eff9327d19b54162d6c1027" translate="yes" xml:space="preserve">
          <source>Safe-Inferred</source>
          <target state="translated">Safe-Inferred</target>
        </trans-unit>
        <trans-unit id="db6e7e410412f58574f766c3911f49badd42beca" translate="yes" xml:space="preserve">
          <source>Safety</source>
          <target state="translated">Safety</target>
        </trans-unit>
        <trans-unit id="7d347ee88f531b10951954bcba6275794f5522ac" translate="yes" xml:space="preserve">
          <source>Same again, only with a pattern binding:</source>
          <target state="translated">又是一样的,只是用图案装订。</target>
        </trans-unit>
        <trans-unit id="42f54e3d92f1c859e49ab129bf706a1c9c9cab81" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt;, but with the arguments interchanged.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; 相同，但参数互换。</target>
        </trans-unit>
        <trans-unit id="b0b5e4ab3cff2b44673ef6d4dea093f7b4dfc984" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同 &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c65c594f9b38468c895de45f5ed76cd46d6ec29f" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同 &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f972204c79e140345242f558fff756977035eef" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同 &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c6bc0e31c039cc996e63332133a33c423d504c6" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同 &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1f573a703c6961ba94fbaef77183875d6c5cd3a6" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;data-map-strict#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">同 &lt;code&gt;&lt;a href=&quot;data-map-strict#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3f74cdd5ce7f2024b9dd79782a5c31a10f4ddf9" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;ghc-base#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt;, but with the arguments interchanged.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;ghc-base#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; 相同，但参数互换。</target>
        </trans-unit>
        <trans-unit id="e71b9165ae8f3cbcf5b73c9aa1bad1d9b5f6a9b6" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:indexBigNat-35-&quot;&gt;indexBigNat#&lt;/a&gt; bn 0#&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:indexBigNat-35-&quot;&gt;indexBigNat#&lt;/a&gt; bn 0#&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2b6daf2b66f8854291aa22564f2eaa97349e4920" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;ghc-show#v:showLitChar&quot;&gt;showLitChar&lt;/a&gt;&lt;/code&gt;, but for strings It converts the string to a string using Haskell escape conventions for non-printable characters. Does not add double-quotes around the whole thing; the caller should do that. The main difference from showLitChar (apart from the fact that the argument is a string not a list) is that we must escape double-quotes</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;ghc-show#v:showLitChar&quot;&gt;showLitChar&lt;/a&gt;&lt;/code&gt; 相同，但用于字符串它使用Haskell转义约定将不可打印字符转换为字符串。不会在整个事情上加上双引号；呼叫者应该这样做。与showLitChar的主要区别（除了参数是字符串而不是列表的事实）是我们必须转义双引号</target>
        </trans-unit>
        <trans-unit id="30898b69e47931db50d50b02f157bc6df3bd4ce9" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addForeignSource&quot;&gt;addForeignSource&lt;/a&gt;&lt;/code&gt;, but expects to receive a path pointing to the foreign file instead of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; of its contents. Consider using this in conjunction with &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addTempFile&quot;&gt;addTempFile&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addForeignSource&quot;&gt;addForeignSource&lt;/a&gt;&lt;/code&gt; 相同，但期望接收指向外部文件的路径，而不是其内容的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。考虑将其与 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addTempFile&quot;&gt;addTempFile&lt;/a&gt;&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="0dd41aa353c5cad35016988621972655c6ee09ee" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addForeignSource&quot;&gt;addForeignSource&lt;/a&gt;&lt;/code&gt;, but expects to receive a path pointing to the foreign file instead of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; of its contents. Consider using this in conjunction with &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addTempFile&quot;&gt;addTempFile&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addForeignSource&quot;&gt;addForeignSource&lt;/a&gt;&lt;/code&gt; 相同，但希望接收指向外部文件的路径，而不是其内容的 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。考虑将其与 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addTempFile&quot;&gt;addTempFile&lt;/a&gt;&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="00137cf474aa3291fae1d8cb980679602d1d2ed5" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addForeignSource&quot;&gt;addForeignSource&lt;/a&gt;&lt;/code&gt;, but expects to receive a path pointing to the foreign file instead of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; of its contents. Consider using this in conjunction with &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addTempFile&quot;&gt;addTempFile&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addForeignSource&quot;&gt;addForeignSource&lt;/a&gt;&lt;/code&gt; 相同，但希望接收指向外部文件的路径，而不是其内容的 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。考虑将其与 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:addTempFile&quot;&gt;addTempFile&lt;/a&gt;&lt;/code&gt; 结合使用。</target>
        </trans-unit>
        <trans-unit id="db447a776588fef1645ee31ea1870e0abb16ba2d" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt;, but with the arguments interchanged.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; 相同，但参数互换。</target>
        </trans-unit>
        <trans-unit id="4aa4d6a43b4d65f2e57f90340aedc9abdbfbac32" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="8f568cab24dde73b38ef0088da38eb953dfcc1a3" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="a7b601cf774784717e90b534e29f08f76d19896f" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:paragraph&quot;&gt;paragraph&lt;/a&gt;&lt;/code&gt; 相同。</target>
        </trans-unit>
        <trans-unit id="259d74b1086bc9c590828600acb6b3fa772be181" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;ignore&lt;/code&gt; but also ignores &lt;code&gt;GHCRTS&lt;/code&gt;.</source>
          <target state="translated">与 &lt;code&gt;ignore&lt;/code&gt; 相同，但也忽略 &lt;code&gt;GHCRTS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4651d7eb6692e845dd60cf4b29e508298b8de997" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;text&lt;/code&gt;. Used to be used for Bytestrings.</source>
          <target state="translated">与 &lt;code&gt;text&lt;/code&gt; 相同。用于字节串。</target>
        </trans-unit>
        <trans-unit id="e2891da0f76cce0b60708f9a0abe80a850b0bc91" translate="yes" xml:space="preserve">
          <source>Same as previous item, but also exports all the data constructors for &lt;code&gt;GMap&lt;/code&gt;, namely &lt;code&gt;GMapEither&lt;/code&gt;.</source>
          <target state="translated">与上一项相同，但还导出 &lt;code&gt;GMap&lt;/code&gt; 的所有数据构造函数，即 &lt;code&gt;GMapEither&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d00a46d1ceda265f0fed0d1744950e3bd2e387e" translate="yes" xml:space="preserve">
          <source>Same as previous item.</source>
          <target state="translated">与上一项相同。</target>
        </trans-unit>
        <trans-unit id="edbc114aaea9352f5c850f9f7038b9b219489025" translate="yes" xml:space="preserve">
          <source>Same as the previous item. Note the &amp;ldquo;&lt;code&gt;type&lt;/code&gt;&amp;rdquo; keyword.</source>
          <target state="translated">与上一项相同。注意&amp;ldquo; &lt;code&gt;type&lt;/code&gt; &amp;rdquo;关键字。</target>
        </trans-unit>
        <trans-unit id="fb73a9a1da0c27b0a141302dc0b405c29b6c6b56" translate="yes" xml:space="preserve">
          <source>Same idea, except for instance declarations. For example:</source>
          <target state="translated">同样的想法,除了实例声明。例如:</target>
        </trans-unit>
        <trans-unit id="de41e8b279e79f48a4ce6e3563759979a51de726" translate="yes" xml:space="preserve">
          <source>Sample instance</source>
          <target state="translated">样例</target>
        </trans-unit>
        <trans-unit id="de2a172486ea001bd4a04b969b6804b8695266a2" translate="yes" xml:space="preserve">
          <source>Satisfies &lt;code&gt;(quot# x y) times# y plus# (rem# x y) == x&lt;/code&gt;.</source>
          <target state="translated">满足 &lt;code&gt;(quot# x y) times# y plus# (rem# x y) == x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62dc0506f62492cd0477624e00360efb6cf5d5de" translate="yes" xml:space="preserve">
          <source>Satisfies &lt;code&gt;(quotInt# x y) *# y +# (remInt# x y) == x&lt;/code&gt;. The behavior is undefined if the second argument is zero.</source>
          <target state="translated">满足 &lt;code&gt;(quotInt# x y) *# y +# (remInt# x y) == x&lt;/code&gt; 。如果第二个参数为零，则行为是不确定的。</target>
        </trans-unit>
        <trans-unit id="17063c506b81a46c2eb7716af50cf19d4ed5a6c6" translate="yes" xml:space="preserve">
          <source>Saturday</source>
          <target state="translated">Saturday</target>
        </trans-unit>
        <trans-unit id="a9478dccf725e7e77bb9bdb404a579319bda90bb" translate="yes" xml:space="preserve">
          <source>Saying &lt;code&gt;-ignore-package ⟨pkg⟩&lt;/code&gt; is the same as giving &lt;a href=&quot;#ghc-flag--hide-package%20%E2%9F%A8pkg%E2%9F%A9&quot;&gt;&lt;code&gt;-hide-package ⟨pkg⟩&lt;/code&gt;&lt;/a&gt; flags for ⟨pkg⟩ and all the packages that depend on ⟨pkg⟩. Sometimes we don&amp;rsquo;t know ahead of time which packages will be installed that depend on ⟨pkg⟩, which is when the &lt;a href=&quot;#ghc-flag--ignore-package%20%E2%9F%A8pkg%E2%9F%A9&quot;&gt;&lt;code&gt;-ignore-package ⟨pkg⟩&lt;/code&gt;&lt;/a&gt; flag can be useful.</source>
          <target state="translated">说 &lt;code&gt;-ignore-package ⟨pkg⟩&lt;/code&gt; 与为⟨pkg⟩和所有依赖&lt;a href=&quot;#ghc-flag--hide-package%20%E2%9F%A8pkg%E2%9F%A9&quot;&gt; &lt;code&gt;-hide-package ⟨pkg⟩&lt;/code&gt; &lt;/a&gt;赋予-hide-package⟨pkg⟩标志相同。有时我们不知道将要安装哪些取决于&lt;a href=&quot;#ghc-flag--ignore-package%20%E2%9F%A8pkg%E2%9F%A9&quot;&gt; &lt;code&gt;-ignore-package ⟨pkg⟩&lt;/code&gt; &lt;/a&gt;标志才有用。</target>
        </trans-unit>
        <trans-unit id="338131a09df3c89b4b3a6759393cb8cab73f4a09" translate="yes" xml:space="preserve">
          <source>Sc: Symbol, Currency</source>
          <target state="translated">Sc:符号、货币</target>
        </trans-unit>
        <trans-unit id="546401c167d48728b944d3dac7bc4865e17a9993" translate="yes" xml:space="preserve">
          <source>Scale by a factor. Note that &lt;code&gt;scaleCalendarDiffDays (-1)&lt;/code&gt; will not perfectly invert a duration, due to variable month lengths.</source>
          <target state="translated">按比例缩放。请注意，由于月份长度的变化， &lt;code&gt;scaleCalendarDiffDays (-1)&lt;/code&gt; 不能完美地反转持续时间。</target>
        </trans-unit>
        <trans-unit id="c514fa51cd274818822919c3c3118e8271c0700a" translate="yes" xml:space="preserve">
          <source>Scale by a factor. Note that &lt;code&gt;scaleCalendarDiffTime (-1)&lt;/code&gt; will not perfectly invert a duration, due to variable month lengths.</source>
          <target state="translated">按比例缩放。请注意，由于月份长度的变化， &lt;code&gt;scaleCalendarDiffTime (-1)&lt;/code&gt; 不能完美地反转持续时间。</target>
        </trans-unit>
        <trans-unit id="28cba55d2aadf568463a9e7e645f8c7b1eed5e8b" translate="yes" xml:space="preserve">
          <source>Scan</source>
          <target state="translated">Scan</target>
        </trans-unit>
        <trans-unit id="71faf74908acae0c765880b1aea70a5559c3733d" translate="yes" xml:space="preserve">
          <source>Scans</source>
          <target state="translated">Scans</target>
        </trans-unit>
        <trans-unit id="b1429a72540c69e025c517fcc5b792419c88cd1a" translate="yes" xml:space="preserve">
          <source>Scheduling</source>
          <target state="translated">Scheduling</target>
        </trans-unit>
        <trans-unit id="6faf39f011de9cbf53782c396ae03385893350ef" translate="yes" xml:space="preserve">
          <source>Scheduling may be either pre-emptive or co-operative, depending on the implementation of Concurrent Haskell (see below for information related to specific compilers). In a co-operative system, context switches only occur when you use one of the primitives defined in this module. This means that programs such as:</source>
          <target state="translated">调度可以是先发制人的,也可以是合作式的,这取决于并发 Haskell 的实现(请参阅下面有关特定编译器的信息)。在合作系统中,只有当您使用本模块中定义的一个基元时,才会发生上下文切换。这意味着,程序如。</target>
        </trans-unit>
        <trans-unit id="dccc54d9b157582e483a96946579d9be83fa9db6" translate="yes" xml:space="preserve">
          <source>Scheduling priority</source>
          <target state="translated">排列优先级</target>
        </trans-unit>
        <trans-unit id="5bbd286bc5c8c1f1c865fd99417573a56571d9da" translate="yes" xml:space="preserve">
          <source>Science and Technology 1999-2001</source>
          <target state="translated">1999-2001年科学和技术</target>
        </trans-unit>
        <trans-unit id="22beb4222dc3e5cbee9b467d0b9786f4f3e50125" translate="yes" xml:space="preserve">
          <source>Scientific notation (e.g. &lt;code&gt;2.3e123&lt;/code&gt;).</source>
          <target state="translated">科学计数法（例如 &lt;code&gt;2.3e123&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="75380ef7a817972c15f49b0a28115411b698cf58" translate="yes" xml:space="preserve">
          <source>ScopedTypeVariables</source>
          <target state="translated">ScopedTypeVariables</target>
        </trans-unit>
        <trans-unit id="6c3ba74480874ebe767282d193c80088bceb78f7" translate="yes" xml:space="preserve">
          <source>Scoping: The variables bound by the view pattern are the variables bound by ⟨pat⟩.</source>
          <target state="translated">范围化。视图模式所约束的变量是由⟨pat⟩约束的变量。</target>
        </trans-unit>
        <trans-unit id="0eebf4033ed3e2297458d965e638dd57e37fe477" translate="yes" xml:space="preserve">
          <source>Screen buffer</source>
          <target state="translated">屏幕缓冲区</target>
        </trans-unit>
        <trans-unit id="156b2b4d9bc708c55fb5b68f1d70e2d191678cf6" translate="yes" xml:space="preserve">
          <source>Scrolling</source>
          <target state="translated">Scrolling</target>
        </trans-unit>
        <trans-unit id="334dcf943f6bb00acd4e042e9bce8b88540c2911" translate="yes" xml:space="preserve">
          <source>Search PATH?</source>
          <target state="translated">搜索PATH?</target>
        </trans-unit>
        <trans-unit id="a127436f7e4ae37e45a1614cfb90e823c1d58a78" translate="yes" xml:space="preserve">
          <source>Search for arbitrary substrings</source>
          <target state="translated">搜索任意子串</target>
        </trans-unit>
        <trans-unit id="12389b6db2d6a15654261b506b03b98a8c4840a8" translate="yes" xml:space="preserve">
          <source>Search for executable files in a list of system-defined locations, which generally includes &lt;code&gt;PATH&lt;/code&gt; and possibly more.</source>
          <target state="translated">在系统定义的位置列表中搜索可执行文件，该位置通常包括 &lt;code&gt;PATH&lt;/code&gt; 以及可能更多的文件。</target>
        </trans-unit>
        <trans-unit id="a98c62f49b59f930f47977df6863e5ad4360e7ef" translate="yes" xml:space="preserve">
          <source>Search paths for various application data, as specified by the &lt;a href=&quot;http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot;&gt;XDG Base Directory Specification&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot;&gt;XDG基本目录规范&lt;/a&gt;所指定的各种应用程序数据的搜索路径。</target>
        </trans-unit>
        <trans-unit id="7ec2a2567b823b14f349f3b42b249b53fc635616" translate="yes" xml:space="preserve">
          <source>Search paths for various application data, as specified by the &lt;a href=&quot;https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot;&gt;XDG Base Directory Specification&lt;/a&gt;.</source>
          <target state="translated">根据&lt;a href=&quot;https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot;&gt;XDG基本目录规范&lt;/a&gt;所指定的各种应用程序数据的搜索路径。</target>
        </trans-unit>
        <trans-unit id="e93e1199d58861a512ab27cc34a406b320a884b9" translate="yes" xml:space="preserve">
          <source>Search through a given list of directories for a file that has the given name and satisfies the given predicate and return the path of the first occurrence. The directories are checked in a left-to-right order.</source>
          <target state="translated">在给定的目录列表中搜索具有给定名称并满足给定前提条件的文件,并返回第一个出现的路径。按照从左到右的顺序检查目录。</target>
        </trans-unit>
        <trans-unit id="71e66c7ed9a4c56bca17f8617c77a3b69ad27a5b" translate="yes" xml:space="preserve">
          <source>Search through the given list of directories for the given file and returns all paths where the given file exists.</source>
          <target state="translated">通过给定的目录列表搜索给定文件,并返回给定文件存在的所有路径。</target>
        </trans-unit>
        <trans-unit id="146f51cc73f2b136886c580f8108ca9198253c2d" translate="yes" xml:space="preserve">
          <source>Search through the given list of directories for the given file.</source>
          <target state="translated">通过给定的目录列表搜索给定的文件。</target>
        </trans-unit>
        <trans-unit id="450d52d3ef8975d374969138d196d6c1747d2a25" translate="yes" xml:space="preserve">
          <source>Searches</source>
          <target state="translated">Searches</target>
        </trans-unit>
        <trans-unit id="98cc363c0119e35d1c8070755fc4d4c2387aad71" translate="yes" xml:space="preserve">
          <source>Searching</source>
          <target state="translated">Searching</target>
        </trans-unit>
        <trans-unit id="99d17743e74ce54537b8c991a4a30b52cb4d36eb" translate="yes" xml:space="preserve">
          <source>Searching ByteStrings</source>
          <target state="translated">搜索ByteStrings</target>
        </trans-unit>
        <trans-unit id="a67f0f78137f986e35f6c4d42fd904b4d1ec2b50" translate="yes" xml:space="preserve">
          <source>Searching by equality</source>
          <target state="translated">按平等原则搜索</target>
        </trans-unit>
        <trans-unit id="fd334e8959b428cb282a19f2d183762892a2bb5b" translate="yes" xml:space="preserve">
          <source>Searching lists</source>
          <target state="translated">搜索清单</target>
        </trans-unit>
        <trans-unit id="e43759c82dd08f2e272ceeee2ea1b6915d671c48" translate="yes" xml:space="preserve">
          <source>Searching with a predicate</source>
          <target state="translated">用谓词搜索</target>
        </trans-unit>
        <trans-unit id="2a4bcae654f264daf22579fb462bf0bae302a057" translate="yes" xml:space="preserve">
          <source>Second</source>
          <target state="translated">Second</target>
        </trans-unit>
        <trans-unit id="41aadab64e8c4c09f38d5ce9dba630974c5030fc" translate="yes" xml:space="preserve">
          <source>Second, &lt;code&gt;M&lt;/code&gt; safe imports &lt;code&gt;Buggle&lt;/code&gt;. For this import &lt;code&gt;P&lt;/code&gt;&amp;lsquo;s author takes no responsibility for the safety, instead asking GHC to check whether &lt;code&gt;Buggle&lt;/code&gt; is trusted by &lt;code&gt;C&lt;/code&gt;. Is it?</source>
          <target state="translated">其次， &lt;code&gt;M&lt;/code&gt; 安全进口 &lt;code&gt;Buggle&lt;/code&gt; 。对于此导入， &lt;code&gt;P&lt;/code&gt; 的作者对安全性不承担任何责任，而是要求GHC检查 &lt;code&gt;Buggle&lt;/code&gt; 是否受 &lt;code&gt;C&lt;/code&gt; 信任。是吗？</target>
        </trans-unit>
        <trans-unit id="2e928be918c85dcaa47082721f2415da45b64f49" translate="yes" xml:space="preserve">
          <source>Second, &lt;code&gt;M&lt;/code&gt; safe imports &lt;code&gt;Buggle&lt;/code&gt;. For this import &lt;code&gt;P&lt;/code&gt;&amp;rsquo;s author takes no responsibility for the safety, instead asking GHC to check whether &lt;code&gt;Buggle&lt;/code&gt; is trusted by &lt;code&gt;C&lt;/code&gt;. Is it?</source>
          <target state="translated">其次， &lt;code&gt;M&lt;/code&gt; 安全进口 &lt;code&gt;Buggle&lt;/code&gt; 。对于此导入， &lt;code&gt;P&lt;/code&gt; 的作者对安全性不承担任何责任，而是要求GHC检查 &lt;code&gt;Buggle&lt;/code&gt; 是否受 &lt;code&gt;C&lt;/code&gt; 信任。是吗？</target>
        </trans-unit>
        <trans-unit id="6c78dcd73014ae61f9a2861d5642f4a3842b7141" translate="yes" xml:space="preserve">
          <source>Secondary field width specifier.</source>
          <target state="translated">次要字段宽度指定器。</target>
        </trans-unit>
        <trans-unit id="535a8dd9a0bf8f6685407cc23c4fc9b41645994f" translate="yes" xml:space="preserve">
          <source>Secondly, quantified constraints allow for more concise and precise specifications. As an example, consider the MTL type class for monad transformers:</source>
          <target state="translated">其次,量化的约束条件可以使规范更加简洁和精确。举个例子,考虑单体变压器的MTL类型类。</target>
        </trans-unit>
        <trans-unit id="59f6f8daaa2e8298b150972a1f24b2062e5ac468" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#explicit-namespaces&quot;&gt;Explicit namespaces in import/export&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;#explicit-namespaces&quot;&gt;import / export中的显式名称空间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b3d2323e785e9fbeead9b84a569915c4adbc461e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#ghci-cmd-:ctags&quot;&gt;&lt;code&gt;:ctags&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;#ghci-cmd-:ctags&quot;&gt; &lt;code&gt;:ctags&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c67269b07f4bc963dc25959c7df0f9e713b5e55" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#ghci-cmd-:main&quot;&gt;&lt;code&gt;:main&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">参见&lt;a href=&quot;#ghci-cmd-:main&quot;&gt; &lt;code&gt;:main&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c85401a395f7d969a0e271b5ee0adc2370d964e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#options-f-compact&quot;&gt;Individual optimisations&lt;/a&gt; for a list of optimisations enabled on level 1 and level 2.</source>
          <target state="translated">有关在级别1和级别2上启用的优化的列表，请参阅&lt;a href=&quot;#options-f-compact&quot;&gt;单个优化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="952031d44aeabc0d6d835e921383416a26a07b30" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#pts-where&quot;&gt;Where can they occur?&lt;/a&gt; for using partial type signatures in quotations.</source>
          <target state="translated">请参阅&lt;a href=&quot;#pts-where&quot;&gt;它们在哪里发生？&lt;/a&gt;用于在引号中使用部分类型签名。</target>
        </trans-unit>
        <trans-unit id="218c2cf2c21ad2b7f56bfd38658bd4e72f80809c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#recursive-and-polymorphic-let-bindings&quot;&gt;Semantics of let bindings with bang patterns&lt;/a&gt; for the detailed semantics.</source>
          <target state="translated">有关详细&lt;a href=&quot;#recursive-and-polymorphic-let-bindings&quot;&gt;语义，&lt;/a&gt;请参见具有爆炸模式的let绑定的语义。</target>
        </trans-unit>
        <trans-unit id="45eed7f7734a6bded8533bbaee887d678010db32" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../libraries/base-4.15.0.0/ghc-staticptr#t:IsStatic&quot;&gt;GHC.StaticPtr.IsStatic&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;../../libraries/base-4.15.0.0/ghc-staticptr#t:IsStatic&quot;&gt;GHC.StaticPtr.IsStatic&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b1f2d904d5a6d15342e041470413d0dbc8b15aad" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#t:IsStatic&quot;&gt;GHC.StaticPtr.IsStatic&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;../libraries/base-4.13.0.0/ghc-staticptr#t:IsStatic&quot;&gt;GHC.StaticPtr.IsStatic&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="544ebcc273d4071b5a34688d769bf8ffe59ed9d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../libraries/base-4.14.1.0/ghc-staticptr#t:IsStatic&quot;&gt;GHC.StaticPtr.IsStatic&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;../libraries/base-4.14.1.0/ghc-staticptr#t:IsStatic&quot;&gt;GHC.StaticPtr.IsStatic&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc0b9e966872710b1e51708c686a203eb9661736" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;data-list&quot;&gt;Data.List&lt;/a&gt; for operations on lists.</source>
          <target state="translated">有关&lt;a href=&quot;data-list&quot;&gt;列表上&lt;/a&gt;的操作，请参见Data.List。</target>
        </trans-unit>
        <trans-unit id="b103cec5a426d82d1f0f3b305273d3fc5fa5b795" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;data-map-merge-lazy&quot;&gt;Data.Map.Merge.Lazy&lt;/a&gt;</source>
          <target state="translated">请参见&lt;a href=&quot;data-map-merge-lazy&quot;&gt;Data.Map.Merge.Lazy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="348d6eee6a1b58b191ea3c36bfa6ce95e893a2a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;data-map-merge-strict&quot;&gt;Data.Map.Merge.Strict&lt;/a&gt;</source>
          <target state="translated">请参见&lt;a href=&quot;data-map-merge-strict&quot;&gt;Data.Map.Merge.Strict&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3a6fe43ed9f740f6e4129c00a0d02c391632d4e0" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;explicit_namespaces#explicit-namespaces&quot;&gt;Explicit namespaces in import/export&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;explicit_namespaces#explicit-namespaces&quot;&gt;import / export中的显式名称空间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf2183ef5bcefc29fa8fa07b54b7a0fe01eaf8fc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;field_selectors_and_type_applications#field-selectors-and-type-applications&quot;&gt;Field selectors and TypeApplications&lt;/a&gt; for a full description of how the types of top-level field selectors are determined.</source>
          <target state="translated">有关如何确定顶级字段选择器的类型的完整说明，请参见&lt;a href=&quot;field_selectors_and_type_applications#field-selectors-and-type-applications&quot;&gt;字段选择器和TypeApplications&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8e15ea175220d64e983de65280b7e415868056c4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://i.cs.hku.hk/~bruno//papers/hs2017.pdf&quot;&gt;the paper&lt;/a&gt;.</source>
          <target state="translated">见&lt;a href=&quot;http://i.cs.hku.hk/~bruno//papers/hs2017.pdf&quot;&gt;论文&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fc16f292766496887e78f66d0c501279f8608f5d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://www.w3.org/TR/xhtml1/&quot;&gt;http://www.w3.org/TR/xhtml1/&lt;/a&gt; for more information about XHTML 1.0.</source>
          <target state="translated">有关XHTML 1.0的更多信息，请参见&lt;a href=&quot;http://www.w3.org/TR/xhtml1/&quot;&gt;http://www.w3.org/TR/xhtml1/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="886ede7df1936e301a64ca1c3c96b46bc86dffec" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/14733#comment:6&quot;&gt;Iceland Jack&amp;rsquo;s summary&lt;/a&gt;. The key point is that the bit to the right of the &lt;code&gt;=&amp;gt;&lt;/code&gt; may be headed by a type &lt;em&gt;variable&lt;/em&gt; (&lt;code&gt;c&lt;/code&gt; in this case), rather than a class. It should not be one of the forall&amp;rsquo;d variables, though.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/14733#comment:6&quot;&gt;冰岛杰克的摘要&lt;/a&gt;。关键是 &lt;code&gt;=&amp;gt;&lt;/code&gt; 右边的位可以由类型&lt;em&gt;变量&lt;/em&gt;（在这种情况下为 &lt;code&gt;c&lt;/code&gt; ）而不是类作为标题。但是，它不应该是永远的变量之一。</target>
        </trans-unit>
        <trans-unit id="064de84f526dbd16cfbd26e503de3f36c8f29b17" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/5122&quot;&gt;https://ghc.haskell.org/trac/ghc/ticket/5122&lt;/a&gt; for the origin of the code in this module</source>
          <target state="translated">有关此模块中代码的来源，请参见&lt;a href=&quot;https://ghc.haskell.org/trac/ghc/ticket/5122&quot;&gt;https://ghc.haskell.org/trac/ghc/ticket/5122&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="451d331a283d1f20b1c366f73288b4312d9b70bf" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/ghc-proposals/ghc-proposals/blob/master/proposals/0229-whitespace-bang-patterns.rst&quot;&gt;GHC Proposal #229&lt;/a&gt; for the precise rules.</source>
          <target state="translated">有关确切规则，请参见&lt;a href=&quot;https://github.com/ghc-proposals/ghc-proposals/blob/master/proposals/0229-whitespace-bang-patterns.rst&quot;&gt;GHC提案＃229&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3dfa61c2f8834364556f8f505e7b22705febb183" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://github.com/haskell/parsec/issues/8&quot;&gt;haskell/parsec#8&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://github.com/haskell/parsec/issues/8&quot;&gt;haskell / parsec＃8&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b7dea437e1272d98dced7d4deb845f55f338ee5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14733#note_148352&quot;&gt;Iceland Jack&amp;rsquo;s summary&lt;/a&gt;. The key point is that the bit to the right of the &lt;code&gt;=&amp;gt;&lt;/code&gt; may be headed by a type &lt;em&gt;variable&lt;/em&gt; (&lt;code&gt;c&lt;/code&gt; in this case), rather than a class. It should not be one of the forall&amp;rsquo;d variables, though.</source>
          <target state="translated">请参阅&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14733#note_148352&quot;&gt;冰岛杰克的摘要&lt;/a&gt;。关键是 &lt;code&gt;=&amp;gt;&lt;/code&gt; 右边的位可以由类型&lt;em&gt;变量&lt;/em&gt;（在这种情况下为 &lt;code&gt;c&lt;/code&gt; ）而不是类作为标题。但是，它不应该是永远的变量之一。</target>
        </trans-unit>
        <trans-unit id="3d01fc185a64f8788ef3d9ed26efd5c27fdd74a4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/5122&quot;&gt;https://gitlab.haskell.org/ghc/ghc/issues/5122&lt;/a&gt; for the origin of the code in this module</source>
          <target state="translated">有关此模块中代码的来源，请参见&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/5122&quot;&gt;https://gitlab.haskell.org/ghc/ghc/issues/5122&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a383eedfab30ff8810ffd0f9f2d1fca298054ee6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail&quot;&gt;https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail&quot;&gt;https://prime.haskell.org/wiki/Libraries/Proposals/MonadFail&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6af523ed59a69391f5fa5c878f8a8cfa0e09d84" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.w3.org/TR/xhtml1/&quot;&gt;http://www.w3.org/TR/xhtml1/&lt;/a&gt; for more information about XHTML 1.0.</source>
          <target state="translated">有关XHTML 1.0的更多信息，请参见&lt;a href=&quot;https://www.w3.org/TR/xhtml1/&quot;&gt;http://www.w3.org/TR/xhtml1/&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8f192387dd8900b1428692526b4d54bc13b90c2d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;language-haskell-th-syntax#infix&quot;&gt;Language.Haskell.TH.Syntax&lt;/a&gt;</source>
          <target state="translated">参见&lt;a href=&quot;language-haskell-th-syntax#infix&quot;&gt;Language.Haskell.TH。语法&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6499e97d267b7e58d3e433850d6ae54ab7433600" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;partial_type_signatures#pts-where&quot;&gt;Where can they occur?&lt;/a&gt; for using partial type signatures in quotations.</source>
          <target state="translated">请参阅&lt;a href=&quot;partial_type_signatures#pts-where&quot;&gt;它们在哪里发生？&lt;/a&gt;用于在引号中使用部分类型签名。</target>
        </trans-unit>
        <trans-unit id="867f406c1d13a840407c602b6875530e87a5cf57" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;type_families#scoping-class-params&quot;&gt;Scoping of class parameters&lt;/a&gt; for further information.</source>
          <target state="translated">有关更多信息，请参见&lt;a href=&quot;type_families#scoping-class-params&quot;&gt;类参数的作用域&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3b803be622c53ea782de38773c465e88dde41c7c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using#modes&quot;&gt;Modes of operation&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;using#modes&quot;&gt;操作模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7290dc1cd6ef3fed1927cdff57ec8e269bc0cfa" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using-concurrent#parallel-compile-options&quot;&gt;Compile-time options for SMP parallelism&lt;/a&gt; for a dicussion on its use.</source>
          <target state="translated">有关&lt;a href=&quot;using-concurrent#parallel-compile-options&quot;&gt;使用SMP的&lt;/a&gt;更多信息，请参见SMP并行性的编译时选项。</target>
        </trans-unit>
        <trans-unit id="03e2306a737db14198fc25aa3524ba1d9104ac8f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;using-concurrent#parallel-compile-options&quot;&gt;Compile-time options for SMP parallelism&lt;/a&gt; for a discussion on its use.</source>
          <target state="translated">有关其用法的讨论，请参见&lt;a href=&quot;using-concurrent#parallel-compile-options&quot;&gt;SMP并行性的编译时选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="acfe4e766c9030345d7f21a1a81009297543750f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;win32-dlls#ghci-windows&quot;&gt;Running GHCi on Windows&lt;/a&gt;.</source>
          <target state="translated">请参阅&lt;a href=&quot;win32-dlls#ghci-windows&quot;&gt;在Windows上运行GHCi&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e77258de6e014646d7bc2c75986128d049b87e77" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">参见 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2f8183c6b8895104deecc469e863d26d53cf0cd" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">参见 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="50d08ddee3fbcfe7cd5b7019c242d2a90b387056" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">参见 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec0b4883c065a32c435126c490a4b2f54ad1869c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; for the generic deriving.</source>
          <target state="translated">有关通用派生，请参见 &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7dc5167b59211f4555235a766237a08a49479f4c" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldForest&quot;&gt;unfoldForest&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldForest&quot;&gt;unfoldForest&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="80b7b6980434ec4f61f63b797ab275b23f9c9ecc" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldTree&quot;&gt;unfoldTree&lt;/a&gt;&lt;/code&gt; for more info.</source>
          <target state="translated">有关更多信息，请参见 &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldTree&quot;&gt;unfoldTree&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92bc38145e2678558bfb1ad312ab956bbb332712" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">参见 &lt;code&gt;&lt;a href=&quot;system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28714bc9affad760d31bd7893e6648731274081e" translate="yes" xml:space="preserve">
          <source>See &lt;code&gt;&lt;a href=&quot;system-process#v:RawCommand&quot;&gt;RawCommand&lt;/a&gt;&lt;/code&gt; for precise semantics of the specified &lt;code&gt;FilePath&lt;/code&gt;.</source>
          <target state="translated">有关指定 &lt;code&gt;FilePath&lt;/code&gt; 的精确语义，请参见 &lt;code&gt;&lt;a href=&quot;system-process#v:RawCommand&quot;&gt;RawCommand&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d02a20ac57d0e8d781baf120837224dcf49cb430" translate="yes" xml:space="preserve">
          <source>See GHC issue #17760 for more information about the unsoundness behavior that this function can result in.</source>
          <target state="translated">有关该函数可能导致的不健全行为的更多信息,请参见GHC问题#17760。</target>
        </trans-unit>
        <trans-unit id="6bc669e6ecb3d6e0ab576ee91eccc170d9e50b8d" translate="yes" xml:space="preserve">
          <source>See GHC.Classes#matching_overloaded_methods_in_rules</source>
          <target state="translated">参见GHC.Classes#matching_overloaded_methods_in_rules。</target>
        </trans-unit>
        <trans-unit id="e326365b0584b5b9b467460d9f7981dd7976cce5" translate="yes" xml:space="preserve">
          <source>See Microsoft documentation for details, but a module definition file simply lists what entry points you want to export. Here&amp;rsquo;s one that&amp;rsquo;s suitable when building a Haskell COM server DLL:</source>
          <target state="translated">有关详细信息，请参见Microsoft文档，但是模块定义文件仅列出您要导出的入口点。这是构建Haskell COM服务器DLL时合适的一个：</target>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">另见</target>
        </trans-unit>
        <trans-unit id="792a116eabc7383cf8c24e606c9b84b1fb2c92cf" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#actions-at-prompt&quot;&gt;I/O actions at the prompt&lt;/a&gt; for how the monad of a computational expression defaults to &lt;code&gt;IO&lt;/code&gt; if possible.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#actions-at-prompt&quot;&gt;提示符下的I / O操作，&lt;/a&gt;以了解计算表达式的单子如何默认设置为 &lt;code&gt;IO&lt;/code&gt; (如果可能）。</target>
        </trans-unit>
        <trans-unit id="f990b2ac161fedd9eed5b94eec33c55861665921" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ghc-flag--Wmissing-monadfail-instances&quot;&gt;&lt;code&gt;-Wmissing-monadfail-instances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#ghc-flag--Wmissing-monadfail-instances&quot;&gt; &lt;code&gt;-Wmissing-monadfail-instances&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bb98b6ede0fc9c98fa19f5ce8b4b776f013fd76b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ghc-flag--Wnoncanonical-monadfail-instances&quot;&gt;&lt;code&gt;-Wnoncanonical-monadfail-instances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;#ghc-flag--Wnoncanonical-monadfail-instances&quot;&gt; &lt;code&gt;-Wnoncanonical-monadfail-instances&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="47244a3231a9351f80a23391592cdd1f003ae73b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#ghc-flag--pgmwindres%20%E2%9F%A8cmd%E2%9F%A9&quot;&gt;&lt;code&gt;-pgmwindres ⟨cmd⟩&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;#replacing-phases&quot;&gt;Replacing the program for one or more phases&lt;/a&gt;) and &lt;a href=&quot;#ghc-flag--optwindres%20%E2%9F%A8option%E2%9F%A9&quot;&gt;&lt;code&gt;-optwindres ⟨option⟩&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;#forcing-options-through&quot;&gt;Forcing options to a particular phase&lt;/a&gt;).</source>
          <target state="translated">另请参见&lt;a href=&quot;#ghc-flag--pgmwindres%20%E2%9F%A8cmd%E2%9F%A9&quot;&gt; &lt;code&gt;-pgmwindres ⟨cmd⟩&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;#replacing-phases&quot;&gt;将程序替换为一个或多个阶段&lt;/a&gt;）和&lt;a href=&quot;#ghc-flag--optwindres%20%E2%9F%A8option%E2%9F%A9&quot;&gt; &lt;code&gt;-optwindres ⟨option⟩&lt;/code&gt; &lt;/a&gt;（将&lt;a href=&quot;#forcing-options-through&quot;&gt;选项强制到特定阶段&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4647e38c1e7a6b944c94b406914cbd3600fe74e6" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;#instance-overlap&quot;&gt;Overlapping instances&lt;/a&gt; for flags that loosen the instance resolution rules.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#instance-overlap&quot;&gt;重叠实例&lt;/a&gt;以获取松散实例解析规则的标志。</target>
        </trans-unit>
        <trans-unit id="68bec63d7198462a9a405bc8b9bfd8eea044f5f1" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Commentary/Libraries/Integer&quot;&gt;GHC Commentary: Libraries/Integer&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;https://ghc.haskell.org/trac/ghc/wiki/Commentary/Libraries/Integer&quot;&gt;GHC评论：库/整数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="351782363a8c5ac7d4713a5632c30ddf80b39ea2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/7347&quot;&gt;#7347&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/7347&quot;&gt;＃7347&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bae01c432460f8f4807fff5321397d8daf2f6631" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/7347&quot;&gt;Issue #7347&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/7347&quot;&gt;问题＃7347&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a3bdbd9098e01a83f087eadf85700c50f3f61a6a" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/commentary/libraries/integer&quot;&gt;GHC Commentary: Libraries/Integer&lt;/a&gt;.</source>
          <target state="translated">另请参见&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/commentary/libraries/integer&quot;&gt;GHC评论：库/整数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c593dec67f89b0b8a48390421d4674b799715947" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;data-bits#v:zeroBits&quot;&gt;zeroBits&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;data-bits#v:zeroBits&quot;&gt;zeroBits&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b246c35f93a333d56b43a521850d9d5706bc6244" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;data-containers-listutils#v:nubIntOn&quot;&gt;nubIntOn&lt;/a&gt;&lt;/code&gt;, a more widely applicable generalization.</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;data-containers-listutils#v:nubIntOn&quot;&gt;nubIntOn&lt;/a&gt;&lt;/code&gt; ，这是一种更广泛适用的概括。</target>
        </trans-unit>
        <trans-unit id="ac94b04577d6105b486e64aa04c9e8a70f5f371f" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/template-haskell-2.16.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; for a useful combinator. The above example could be rewritten using &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/template-haskell-2.16.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; as</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/template-haskell-2.16.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; 以获取有用的组合器。上面的示例可以使用 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/template-haskell-2.16.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; 重写为</target>
        </trans-unit>
        <trans-unit id="8a7eaa326d349e30843aed13689b8e2af5c152c9" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; for a useful combinator. The above example could be rewritten using &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; as</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; 以获取有用的组合器。上面的示例可以使用 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; 重写为</target>
        </trans-unit>
        <trans-unit id="cd097cd14c0e35bdb5b898f6ec7aee1387f8cc36" translate="yes" xml:space="preserve">
          <source>See also &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/template-haskell-2.17.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; for a useful combinator. The above example could be rewritten using &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/template-haskell-2.17.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; as</source>
          <target state="translated">另请参见 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/template-haskell-2.17.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; 以获取有用的组合器。上面的示例可以使用 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/template-haskell-2.17.0.0/Language-Haskell-TH-Lib.html#v:dyn&quot;&gt;dyn&lt;/a&gt;&lt;/code&gt; 重写为</target>
        </trans-unit>
        <trans-unit id="77cc8e5b2ed282e5f51037345f1dc397c5c3b6fd" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;#instance-overlap&quot;&gt;rules on overlap&lt;/a&gt;.</source>
          <target state="translated">另请参阅&lt;a href=&quot;#instance-overlap&quot;&gt;重叠规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0734e5814b7657a0b4d49d2cd0d4b40c67654fb0" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;../using-optimisation#ghc-flag--funbox-strict-fields&quot;&gt;&lt;code&gt;-funbox-strict-fields&lt;/code&gt;&lt;/a&gt; flag, which essentially has the effect of adding &lt;code&gt;{-# UNPACK #-}&lt;/code&gt; to every strict constructor field.</source>
          <target state="translated">另请参见&lt;a href=&quot;../using-optimisation#ghc-flag--funbox-strict-fields&quot;&gt; &lt;code&gt;-funbox-strict-fields&lt;/code&gt; &lt;/a&gt;标志，该标志实际上具有将 &lt;code&gt;{-# UNPACK #-}&lt;/code&gt; 到每个严格构造函数字段的作用。</target>
        </trans-unit>
        <trans-unit id="00aebdaeda9ba50a4cf396d83d221ba0f9b164bf" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;http://hackage.haskell.org/package/parser-combinators&quot;&gt;parser-combinators&lt;/a&gt; package for additional (and generalised) combinators.</source>
          <target state="translated">另请参阅&lt;a href=&quot;http://hackage.haskell.org/package/parser-combinators&quot;&gt;解析器组合&lt;/a&gt;程序包，以获取其他（广义）组合器。</target>
        </trans-unit>
        <trans-unit id="44adb3d0f3bbc1753332184898268e0024f12f55" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;https://hackage.haskell.org/package/parser-combinators&quot;&gt;parser-combinators&lt;/a&gt; package for additional (and generalised) combinators.</source>
          <target state="translated">另请参阅&lt;a href=&quot;https://hackage.haskell.org/package/parser-combinators&quot;&gt;解析器组合&lt;/a&gt;程序包，以获取其他（和广义的）组合器。</target>
        </trans-unit>
        <trans-unit id="18439f44eba3153bdbcb728626e4cc51ef2aa2ef" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;using-optimisation#ghc-flag--funbox-strict-fields&quot;&gt;&lt;code&gt;-funbox-strict-fields&lt;/code&gt;&lt;/a&gt; flag, which essentially has the effect of adding &lt;code&gt;{-# UNPACK #-}&lt;/code&gt; to every strict constructor field.</source>
          <target state="translated">另请参见&lt;a href=&quot;using-optimisation#ghc-flag--funbox-strict-fields&quot;&gt; &lt;code&gt;-funbox-strict-fields&lt;/code&gt; &lt;/a&gt;标志，该标志实际上具有将 &lt;code&gt;{-# UNPACK #-}&lt;/code&gt; 到每个严格构造函数字段的作用。</target>
        </trans-unit>
        <trans-unit id="a605b8449779131636ca56735634d351dade9873" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;--help&lt;/code&gt;, &lt;code&gt;--version&lt;/code&gt;, &lt;code&gt;--numeric-version&lt;/code&gt;, and &lt;code&gt;--print-libdir&lt;/code&gt; modes in &lt;a href=&quot;#modes&quot;&gt;Modes of operation&lt;/a&gt;.</source>
          <target state="translated">又见 &lt;code&gt;--help&lt;/code&gt; ， &lt;code&gt;--version&lt;/code&gt; ， &lt;code&gt;--numeric-version&lt;/code&gt; ，和 &lt;code&gt;--print-libdir&lt;/code&gt; 在模式&lt;a href=&quot;#modes&quot;&gt;的操作模式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f495a5d4ad082f7878b188b1d38f1a6c34c873d" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;-pgmi ⟨cmd⟩&lt;/code&gt; (&lt;a href=&quot;phases#replacing-phases&quot;&gt;Replacing the program for one or more phases&lt;/a&gt;) and &lt;code&gt;-opti ⟨option⟩&lt;/code&gt; (&lt;a href=&quot;phases#forcing-options-through&quot;&gt;Forcing options to a particular phase&lt;/a&gt;) flags.</source>
          <target state="translated">另请参见 &lt;code&gt;-pgmi ⟨cmd⟩&lt;/code&gt; （&lt;a href=&quot;phases#replacing-phases&quot;&gt;将程序替换为一个或多个阶段&lt;/a&gt;）和 &lt;code&gt;-opti ⟨option⟩&lt;/code&gt; （将&lt;a href=&quot;phases#forcing-options-through&quot;&gt;选项强制到特定阶段&lt;/a&gt;）标志。</target>
        </trans-unit>
        <trans-unit id="cdc687b8f290f0c9f5f26bece9cee4f8c5c711e9" translate="yes" xml:space="preserve">
          <source>See also the &lt;code&gt;NOINLINE&lt;/code&gt; (&lt;a href=&quot;#noinline-pragma&quot;&gt;NOINLINE pragma&lt;/a&gt;) and &lt;code&gt;INLINABLE&lt;/code&gt; (&lt;a href=&quot;#inlinable-pragma&quot;&gt;INLINABLE pragma&lt;/a&gt;) pragmas.</source>
          <target state="translated">另请参见 &lt;code&gt;NOINLINE&lt;/code&gt; （&lt;a href=&quot;#noinline-pragma&quot;&gt;NOINLINE pragma&lt;/a&gt;）和 &lt;code&gt;INLINABLE&lt;/code&gt; （&lt;a href=&quot;#inlinable-pragma&quot;&gt;INLINABLE pragma&lt;/a&gt;）编译指示。</target>
        </trans-unit>
        <trans-unit id="d5bd3e029bdf78a3efc7994aa97cf299f92ddbb3" translate="yes" xml:space="preserve">
          <source>See also the function &lt;code&gt;traceStack&lt;/code&gt; in the module &lt;code&gt;Debug.Trace&lt;/code&gt; for another way to view call stacks.</source>
          <target state="translated">另请参阅模块 &lt;code&gt;Debug.Trace&lt;/code&gt; 中的函数 &lt;code&gt;traceStack&lt;/code&gt; ，以查看调用堆栈的另一种方法。</target>
        </trans-unit>
        <trans-unit id="cb6db37620dbcc1339dd7c9ee105029b4650573c" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-utils#v:maybePeek&quot;&gt;maybePeek&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">另请参见： &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-utils#v:maybePeek&quot;&gt;maybePeek&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="8b3b279d8e2b97e201733853f5f17667d054456c" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-utils#v:maybeWith&quot;&gt;maybeWith&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">另请参阅： &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-utils#v:maybeWith&quot;&gt;maybeWith&lt;/a&gt;&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="9d2371d388d228011e90799af207212df8e7540d" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-marshal-utils#v:maybePeek&quot;&gt;maybePeek&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">另请参见： &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-marshal-utils#v:maybePeek&quot;&gt;maybePeek&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="7254155fcdbc15e25c816d055a1da93b5da0ad67" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-marshal-utils#v:maybeWith&quot;&gt;maybeWith&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">另请参阅： &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-marshal-utils#v:maybeWith&quot;&gt;maybeWith&lt;/a&gt;&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="fcb1a162f50889555af4685d1e76b574034e10cd" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;../base/foreign-marshal-utils#v:maybePeek&quot;&gt;maybePeek&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">另请参见： &lt;code&gt;&lt;a href=&quot;../base/foreign-marshal-utils#v:maybePeek&quot;&gt;maybePeek&lt;/a&gt;&lt;/code&gt; 函数。</target>
        </trans-unit>
        <trans-unit id="e26edec8001f446bfa5c3f8c48b16cf566a589ff" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;../base/foreign-marshal-utils#v:maybeWith&quot;&gt;maybeWith&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">另请参阅： &lt;code&gt;&lt;a href=&quot;../base/foreign-marshal-utils#v:maybeWith&quot;&gt;maybeWith&lt;/a&gt;&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="29b443ed246b867336cd161ca8d820cc0d6bc9bc" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;&lt;a href=&quot;system-directory#v:removeFile&quot;&gt;removeFile&lt;/a&gt;&lt;/code&gt;, which can remove an existing &lt;em&gt;file&lt;/em&gt; symbolic link.</source>
          <target state="translated">另请参阅： &lt;code&gt;&lt;a href=&quot;system-directory#v:removeFile&quot;&gt;removeFile&lt;/a&gt;&lt;/code&gt; ，它可以删除现有的&lt;em&gt;文件&lt;/em&gt;符号链接。</target>
        </trans-unit>
        <trans-unit id="69335fcf6cfea5a3406385f338964fc25094e818" translate="yes" xml:space="preserve">
          <source>See description of &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:exportIntegerToMutableByteArray&quot;&gt;exportIntegerToMutableByteArray&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:exportIntegerToMutableByteArray&quot;&gt;exportIntegerToMutableByteArray&lt;/a&gt;&lt;/code&gt; 的描述。</target>
        </trans-unit>
        <trans-unit id="054a62d1694599bebea7a0ec77ba51ad0757eb80" translate="yes" xml:space="preserve">
          <source>See description of &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:importIntegerFromByteArray&quot;&gt;importIntegerFromByteArray&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:importIntegerFromByteArray&quot;&gt;importIntegerFromByteArray&lt;/a&gt;&lt;/code&gt; 的描述。</target>
        </trans-unit>
        <trans-unit id="abb414eb9521a6f2ecf3bd6ec8247dec4954debc" translate="yes" xml:space="preserve">
          <source>See examples in &lt;a href=&quot;control-monad-reader&quot;&gt;Control.Monad.Reader&lt;/a&gt;. Note, the partially applied function type &lt;code&gt;(-&amp;gt;) r&lt;/code&gt; is a simple reader monad. See the &lt;code&gt;instance&lt;/code&gt; declaration below.</source>
          <target state="translated">请参见&lt;a href=&quot;control-monad-reader&quot;&gt;Control.Monad.Reader中的&lt;/a&gt;示例。注意，部分应用的函数类型 &lt;code&gt;(-&amp;gt;) r&lt;/code&gt; 是一个简单的阅读器monad。请参阅下面的 &lt;code&gt;instance&lt;/code&gt; 声明。</target>
        </trans-unit>
        <trans-unit id="9639b57ad9c93125c26e7276738fa7285d5924f0" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms&quot;&gt;Wiki page&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms&quot;&gt;Wiki页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ce8c8e6374d9bf56b2187c6495df5d99fdb1bdb" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/pattern-synonyms&quot;&gt;Wiki page&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/pattern-synonyms&quot;&gt;Wiki页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d756583aed3555a5a65eb4cd9d152d5b8bc07cc4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247.aspx&quot;&gt;Windows documentation&lt;/a&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247.aspx&quot;&gt;Windows文档&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b9368a6baa608e351b34f0f4bb3e3b50caa6b7ad" translate="yes" xml:space="preserve">
          <source>See the GHC user's guide for more information on pattern synonyms and their types: &lt;a href=&quot;https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pattern-synonyms&quot;&gt;https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pattern-synonyms&lt;/a&gt;.</source>
          <target state="translated">有关模式同义词及其类型的更多信息，请参见GHC用户指南：&lt;a href=&quot;https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pattern-synonyms&quot;&gt;https&lt;/a&gt; : //downloads.haskell.org/~ghc/latest/docs/html/users_guide/glasgow_exts.html#pattern-synonyms。</target>
        </trans-unit>
        <trans-unit id="686cb337448a33c7768588af6b116f588bb1690b" translate="yes" xml:space="preserve">
          <source>See the note about efficiency at &lt;code&gt;&lt;a href=&quot;data-sequence#v:unzipWith&quot;&gt;unzipWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">请参阅 &lt;code&gt;&lt;a href=&quot;data-sequence#v:unzipWith&quot;&gt;unzipWith&lt;/a&gt;&lt;/code&gt; 有关效率的说明。</target>
        </trans-unit>
        <trans-unit id="497dea2253a9763272c1d3ca91776ece14a847f1" translate="yes" xml:space="preserve">
          <source>See:</source>
          <target state="translated">See:</target>
        </trans-unit>
        <trans-unit id="d21835f29f64932ec50984ab5a7348670e80bfa2" translate="yes" xml:space="preserve">
          <source>SeekFromEnd</source>
          <target state="translated">SeekFromEnd</target>
        </trans-unit>
        <trans-unit id="c3b12b56a9fcafcaa59c660bef173a584ff8d094" translate="yes" xml:space="preserve">
          <source>SeekMode</source>
          <target state="translated">SeekMode</target>
        </trans-unit>
        <trans-unit id="08f7bb09909c995355ec3ded63e7d52066ec605d" translate="yes" xml:space="preserve">
          <source>Seeking</source>
          <target state="translated">Seeking</target>
        </trans-unit>
        <trans-unit id="191e7912fbdc95ca4ac43e8850c406317d9b8a3b" translate="yes" xml:space="preserve">
          <source>Segments in this sense are related to &lt;em&gt;strongly-connected components&lt;/em&gt; analysis, with the exception that bindings in a segment cannot be reordered and must be contiguous.</source>
          <target state="translated">从这个意义上讲，段与&lt;em&gt;强连接的组件&lt;/em&gt;分析有关，但段中的绑定不能重新排序，并且必须是连续的。</target>
        </trans-unit>
        <trans-unit id="8598222918d3c6e513d63060cf55e2971ded729a" translate="yes" xml:space="preserve">
          <source>Select</source>
          <target state="translated">Select</target>
        </trans-unit>
        <trans-unit id="9ceed8562d4a3b2f05d5c2a988f33289c14848dd" translate="yes" xml:space="preserve">
          <source>Select binary mode (&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;) or text mode (&lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;) on a open handle. (See also &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">在打开的句柄上选择二进制模式（ &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ）或文本模式（ &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ）。（另请参见 &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="ebfdbf32e897189b70b5437b726826c8e100dc90" translate="yes" xml:space="preserve">
          <source>Select binary mode (&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;) or text mode (&lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;) on a open handle. (See also &lt;code&gt;&lt;a href=&quot;ghc-io-stdhandles#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">在打开的句柄上选择二进制模式（ &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ）或文本模式（ &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ）。（另请参见 &lt;code&gt;&lt;a href=&quot;ghc-io-stdhandles#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="53acb5d741db274cf9b515c4a37f2572d3437616" translate="yes" xml:space="preserve">
          <source>Select binary mode (&lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;) or text mode (&lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;) on a open handle. (See also &lt;code&gt;&lt;a href=&quot;system-io#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">在打开的句柄上选择二进制模式（ &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ）或文本模式（ &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ）。（另请参见 &lt;code&gt;&lt;a href=&quot;system-io#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="c6563b60a85f0dd6dabcd9fbc69c9585048457c9" translate="yes" xml:space="preserve">
          <source>Select the function to use for printing evaluated expressions in GHCi</source>
          <target state="translated">选择在GHCi中打印计算过的表达式的函数。</target>
        </trans-unit>
        <trans-unit id="533e53a4ab3af0eff06d0968b1f9088632ec4912" translate="yes" xml:space="preserve">
          <source>SelectT</source>
          <target state="translated">SelectT</target>
        </trans-unit>
        <trans-unit id="3d6d281a753285e78d85aed3cd7b15d753ca8438" translate="yes" xml:space="preserve">
          <source>Selection monad transformer, modelling search algorithms.</source>
          <target state="translated">选择单体变换,建模搜索算法。</target>
        </trans-unit>
        <trans-unit id="e2fdfe0ef20a653e062f7f1ccf475abbd234ff40" translate="yes" xml:space="preserve">
          <source>Selection monad transformer.</source>
          <target state="translated">选择单体变压器。</target>
        </trans-unit>
        <trans-unit id="43b0c2cc2f6ddf409049775ebfb86327940fecd3" translate="yes" xml:space="preserve">
          <source>Selection monad.</source>
          <target state="translated">选择一元化。</target>
        </trans-unit>
        <trans-unit id="b240d04328a96aac53d166b5299cca81675589d4" translate="yes" xml:space="preserve">
          <source>Selector</source>
          <target state="translated">Selector</target>
        </trans-unit>
        <trans-unit id="a1991427effecf62e13936bf676a6fbfc4333be9" translate="yes" xml:space="preserve">
          <source>Selector function to extract the field from the record.</source>
          <target state="translated">从记录中提取字段的选择器功能。</target>
        </trans-unit>
        <trans-unit id="78bdbb0db01f35bd6a638a54894b23a56fff7305" translate="yes" xml:space="preserve">
          <source>Selects ASCII digits, i.e. &lt;code&gt;'0'&lt;/code&gt;..&lt;code&gt;'9'&lt;/code&gt;.</source>
          <target state="translated">选择ASCII数字，即 &lt;code&gt;'0'&lt;/code&gt; .. &lt;code&gt;'9'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3b7e6e3d385a486c8480045875a98e2d81e2088" translate="yes" xml:space="preserve">
          <source>Selects ASCII hexadecimal digits, i.e. &lt;code&gt;'0'&lt;/code&gt;..&lt;code&gt;'9'&lt;/code&gt;, &lt;code&gt;'a'&lt;/code&gt;..&lt;code&gt;'f'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;..&lt;code&gt;'F'&lt;/code&gt;.</source>
          <target state="translated">选择ASCII十六进制数字，即 &lt;code&gt;'0'&lt;/code&gt; .. &lt;code&gt;'9'&lt;/code&gt; ， &lt;code&gt;'a'&lt;/code&gt; .. &lt;code&gt;'f'&lt;/code&gt; ， &lt;code&gt;'A'&lt;/code&gt; .. &lt;code&gt;'F'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f19f72dddfd78fe0e7633807c00077ccf746375" translate="yes" xml:space="preserve">
          <source>Selects ASCII lower-case letters, i.e. characters satisfying both &lt;code&gt;&lt;a href=&quot;data-char#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择ASCII小写字母，即同时满足 &lt;code&gt;&lt;a href=&quot;data-char#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="f3bdb7623d79b25c9608fb58d82339cdd31e7ac2" translate="yes" xml:space="preserve">
          <source>Selects ASCII lower-case letters, i.e. characters satisfying both &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择ASCII小写字母，即同时满足 &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="addb8a785afa33a3dd84101eedebd7a5fd002260" translate="yes" xml:space="preserve">
          <source>Selects ASCII octal digits, i.e. &lt;code&gt;'0'&lt;/code&gt;..&lt;code&gt;'7'&lt;/code&gt;.</source>
          <target state="translated">选择ASCII八进制数字，即 &lt;code&gt;'0'&lt;/code&gt; .. &lt;code&gt;'7'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6733d15ea36ff652cead4012951bc3d30ea249a9" translate="yes" xml:space="preserve">
          <source>Selects ASCII upper-case letters, i.e. characters satisfying both &lt;code&gt;&lt;a href=&quot;data-char#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择ASCII大写字母，即同时满足 &lt;code&gt;&lt;a href=&quot;data-char#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="f609e16b1b7b0dad162a1675e8998ff584c4afb8" translate="yes" xml:space="preserve">
          <source>Selects ASCII upper-case letters, i.e. characters satisfying both &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择ASCII大写字母，即同时满足 &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isAscii&quot;&gt;isAscii&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-unicode#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt; 的字符。</target>
        </trans-unit>
        <trans-unit id="afdcb493cc7140df5adae23c341088f5f626690a" translate="yes" xml:space="preserve">
          <source>Selects Unicode mark characters, for example accents and the like, which combine with preceding characters.</source>
          <target state="translated">选择与前面的字符结合的Unicode标记字符,例如重音等。</target>
        </trans-unit>
        <trans-unit id="d6394f6fcb1e6b142711f2b4df0a823312644330" translate="yes" xml:space="preserve">
          <source>Selects Unicode numeric characters, including digits from various scripts, Roman numerals, et cetera.</source>
          <target state="translated">选择Unicode数字字符,包括各种字体的数字、罗马数字等。</target>
        </trans-unit>
        <trans-unit id="046d34ca61ae5a8dfe5cd59eb8542df48781a43d" translate="yes" xml:space="preserve">
          <source>Selects Unicode punctuation characters, including various kinds of connectors, brackets and quotes.</source>
          <target state="translated">选择Unicode标点符号,包括各种连接符、括号和引号。</target>
        </trans-unit>
        <trans-unit id="ce1c4e328d65bbec99383ebc3fe1314029706e58" translate="yes" xml:space="preserve">
          <source>Selects Unicode space and separator characters.</source>
          <target state="translated">选择Unicode空格和分隔符。</target>
        </trans-unit>
        <trans-unit id="4a10c50227b040198186e71354e5bc14a9c8c74d" translate="yes" xml:space="preserve">
          <source>Selects Unicode symbol characters, including mathematical and currency symbols.</source>
          <target state="translated">选择Unicode符号字符,包括数学和货币符号。</target>
        </trans-unit>
        <trans-unit id="00adbe1aaee25e403afbd1494b4398cf0260b08d" translate="yes" xml:space="preserve">
          <source>Selects alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters). This function is equivalent to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择字母Unicode字符（小写，大写和标题大写字母，以及无大小写的脚本字母和修饰符字母）。此功能等效于 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a96ef63922e017b107eb4ab6fd870bd71d35e740" translate="yes" xml:space="preserve">
          <source>Selects alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters). This function is equivalent to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择字母Unicode字符（小写，大写和标题大写字母，以及无大小写的脚本字母和修饰符字母）。此功能等效于 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c15ff27eb2c6e1b0e9dda127fe1cb21b4c9425bf" translate="yes" xml:space="preserve">
          <source>Selects alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters). This function is equivalent to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择字母Unicode字符（小写，大写和标题大写字母，以及无大小写的脚本字母和修饰符字母）。此功能等效于 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bf31a0e79f23f03e2354953120c3bf230be608c" translate="yes" xml:space="preserve">
          <source>Selects alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters). This function is equivalent to &lt;code&gt;&lt;a href=&quot;data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择字母Unicode字符（小写，大写和标题大写字母，以及无大小写的脚本字母和修饰符字母）。此功能等效于 &lt;code&gt;&lt;a href=&quot;data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76a07761b0c7360d09184f968f819a0589585073" translate="yes" xml:space="preserve">
          <source>Selects alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters). This function is equivalent to &lt;code&gt;&lt;a href=&quot;data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">选择字母Unicode字符（小写，大写和标题大写字母，以及无大小写的脚本字母和修饰符字母）。此功能等效于 &lt;code&gt;&lt;a href=&quot;data-char#v:isLetter&quot;&gt;isLetter&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfc14a1636219a13c955b8047638b74c65b5ac69" translate="yes" xml:space="preserve">
          <source>Selects alphabetic or numeric Unicode characters.</source>
          <target state="translated">选择字母或数字Unicode字符。</target>
        </trans-unit>
        <trans-unit id="465acfc244e1a3462f43074af569ba71dbdf8eff" translate="yes" xml:space="preserve">
          <source>Selects control characters, which are the non-printing characters of the Latin-1 subset of Unicode.</source>
          <target state="translated">选择控制字符,即Unicode的Latin-1子集的非打印字符。</target>
        </trans-unit>
        <trans-unit id="0f520a55599d6009f6b5a8111528d07771d2fe96" translate="yes" xml:space="preserve">
          <source>Selects lower-case alphabetic Unicode characters (letters).</source>
          <target state="translated">选择小写字母Unicode字符(字母)。</target>
        </trans-unit>
        <trans-unit id="7756c6924d48c99e6a26e45484199ec3fd702299" translate="yes" xml:space="preserve">
          <source>Selects one of a number of modes for finding shared libraries at runtime.</source>
          <target state="translated">在运行时选择多种模式中的一种来寻找共享库。</target>
        </trans-unit>
        <trans-unit id="dd03d64c804b48c585951c561d6b86387cc242a1" translate="yes" xml:space="preserve">
          <source>Selects printable Unicode characters (letters, numbers, marks, punctuation, symbols and spaces).</source>
          <target state="translated">选择可打印的Unicode字符(字母、数字、标记、标点、符号和空格)。</target>
        </trans-unit>
        <trans-unit id="c5b7d37c528ab7c89a2594e4ff45c15799470e68" translate="yes" xml:space="preserve">
          <source>Selects the first 128 characters of the Unicode character set, corresponding to the ASCII character set.</source>
          <target state="translated">选择Unicode字符集的前128个字符,对应ASCII字符集。</target>
        </trans-unit>
        <trans-unit id="60b6ecd74d59bb6b87975edcb21e687e743d61e3" translate="yes" xml:space="preserve">
          <source>Selects the first 256 characters of the Unicode character set, corresponding to the ISO 8859-1 (Latin-1) character set.</source>
          <target state="translated">选择Unicode字符集的前256个字符,对应ISO 8859-1(Latin-1)字符集。</target>
        </trans-unit>
        <trans-unit id="e8ff50373d2be449d4352b13491627d479a80472" translate="yes" xml:space="preserve">
          <source>Selects upper-case or title-case alphabetic Unicode characters (letters). Title case is used by a small number of letter ligatures like the single-character form of &lt;em&gt;Lj&lt;/em&gt;.</source>
          <target state="translated">选择大写或标题大写的Unicode字符（字母）。标题大小写由少量字母连字使用，例如&lt;em&gt;Lj&lt;/em&gt;的单字符形式。</target>
        </trans-unit>
        <trans-unit id="61b98f1a0a08ab6480df5416102a5a731ccaae63" translate="yes" xml:space="preserve">
          <source>Selects white-space characters in the Latin-1 range</source>
          <target state="translated">选择Latin-1范围内的空白字符。</target>
        </trans-unit>
        <trans-unit id="ab68f6b2f89d019ad5adf0e1f341ed5d51e13b1b" translate="yes" xml:space="preserve">
          <source>Selects words corresponding to white-space characters in the Latin-1 range ordered by frequency.</source>
          <target state="translated">选择按频率排序的Latin-1范围内的空白字符对应的单词。</target>
        </trans-unit>
        <trans-unit id="9cb881ab1cd188ae66aa99c3dc8228baeb938bc3" translate="yes" xml:space="preserve">
          <source>Semaphore</source>
          <target state="translated">Semaphore</target>
        </trans-unit>
        <trans-unit id="80603f4ab5e8b245111bd9242e8a03cb1c042219" translate="yes" xml:space="preserve">
          <source>SemiClosedHandle</source>
          <target state="translated">SemiClosedHandle</target>
        </trans-unit>
        <trans-unit id="a7606fabb901db270a3a5b79254909611ffd627b" translate="yes" xml:space="preserve">
          <source>Semigroup</source>
          <target state="translated">Semigroup</target>
        </trans-unit>
        <trans-unit id="ef263c15e407f90a41b0a8c2dd9d910e87631aeb" translate="yes" xml:space="preserve">
          <source>Semigroups</source>
          <target state="translated">Semigroups</target>
        </trans-unit>
        <trans-unit id="80519dd6a843976af96095c2977d511895377e4e" translate="yes" xml:space="preserve">
          <source>Semigroups and Monoids</source>
          <target state="translated">半目和单目</target>
        </trans-unit>
        <trans-unit id="83cdcbcc428cdc3fd53584aa033fba0b223ba7f5" translate="yes" xml:space="preserve">
          <source>Send the first component of the input through the argument arrow, and copy the rest unchanged to the output.</source>
          <target state="translated">通过参数箭头发送输入的第一个分量,其余部分不变地复制到输出。</target>
        </trans-unit>
        <trans-unit id="3af5eab8c1c4368fcdd626600364204a74e3ae44" translate="yes" xml:space="preserve">
          <source>Sending signals</source>
          <target state="translated">发送信号</target>
        </trans-unit>
        <trans-unit id="e0ec931e78437a9bab75ec98f19a51071a6782d9" translate="yes" xml:space="preserve">
          <source>Sends an interrupt signal to the process group of the given process.</source>
          <target state="translated">向给定进程的进程组发送中断信号。</target>
        </trans-unit>
        <trans-unit id="f7f3f1da303067b2797bd4e61532ea8f79fde2cc" translate="yes" xml:space="preserve">
          <source>Separator predicates</source>
          <target state="translated">分隔符谓词</target>
        </trans-unit>
        <trans-unit id="fa328f49b32e6dbe61c90ab9a659303e1d388d15" translate="yes" xml:space="preserve">
          <source>Seq</source>
          <target state="translated">Seq</target>
        </trans-unit>
        <trans-unit id="1ed99d1021ac12934f5a0ea0644a9df0bb383640" translate="yes" xml:space="preserve">
          <source>Sequence actions, discarding the value of the first argument.</source>
          <target state="translated">序列动作,丢弃第一个参数的值。</target>
        </trans-unit>
        <trans-unit id="e3de6221f2c2fce3b329fbb42e1fb8e511f5e9e0" translate="yes" xml:space="preserve">
          <source>Sequence actions, discarding the value of the second argument.</source>
          <target state="translated">序列动作,丢弃第二个参数的值。</target>
        </trans-unit>
        <trans-unit id="1552c16c6f8c19183500f6789356943755236c93" translate="yes" xml:space="preserve">
          <source>Sequences all the actions in a structure, building a new structure with the same shape using the results of the actions. For a version that ignores the results, see &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bisequence_&quot;&gt;bisequence_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">对结构中的所有动作进行排序，使用动作的结果构建具有相同形状的新结构。有关忽略结果的版本，请参见 &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bisequence_&quot;&gt;bisequence_&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be00770ac3fb3c8ed2118045f75c580016a588d9" translate="yes" xml:space="preserve">
          <source>Sequences generally behave very much like lists.</source>
          <target state="translated">序列的行为一般很像列表。</target>
        </trans-unit>
        <trans-unit id="389f8ea9e3e0ed9529c5ac9773a8c9859e399680" translate="yes" xml:space="preserve">
          <source>Sequences may also be compared to immutable &lt;a href=&quot;https://hackage.haskell.org/package/array&quot;&gt;arrays&lt;/a&gt; or &lt;a href=&quot;https://hackage.haskell.org/package/vector&quot;&gt;vectors&lt;/a&gt;. Like these structures, sequences support fast indexing, although not as fast. But editing an immutable array or vector, or combining it with another, generally requires copying the entire structure; sequences generally avoid that, copying only the portion that has changed.</source>
          <target state="translated">序列也可以与不变&lt;a href=&quot;https://hackage.haskell.org/package/array&quot;&gt;数组&lt;/a&gt;或&lt;a href=&quot;https://hackage.haskell.org/package/vector&quot;&gt;向量&lt;/a&gt;进行比较。像这些结构一样，序列支持快速索引，尽管速度不那么快。但是，编辑不可变的数组或向量，或将其与另一个数组或向量组合，通常需要复制整个结构。序列通常会避免这种情况，只复制已更改的部分。</target>
        </trans-unit>
        <trans-unit id="ddedd12a32633bb1e35ed359ae63bdca7bd52d10" translate="yes" xml:space="preserve">
          <source>Sequences support a wider variety of efficient operations than do lists. Notably, they offer</source>
          <target state="translated">序列支持比do list更广泛的高效操作。值得注意的是,它们提供了</target>
        </trans-unit>
        <trans-unit id="89275bcb3e26634eb9740ec6d09439242c7194a8" translate="yes" xml:space="preserve">
          <source>Sequential application.</source>
          <target state="translated">顺序应用。</target>
        </trans-unit>
        <trans-unit id="238e3ee46b4adde5ae0db52db8c52d7371ab37cc" translate="yes" xml:space="preserve">
          <source>Sequential searches</source>
          <target state="translated">顺序搜索</target>
        </trans-unit>
        <trans-unit id="4eac8d8bd1b81b5be12df86539df26405ff3e4bc" translate="yes" xml:space="preserve">
          <source>Sequentially compose two actions, discarding any value produced by the first, like sequencing operators (such as the semicolon) in imperative languages.</source>
          <target state="translated">按顺序组成两个动作,丢弃第一个动作产生的任何值,就像命令式语言中的排序操作符(如分号)一样。</target>
        </trans-unit>
        <trans-unit id="a2295bbe9882331f9f8b1ec826238cac729e3c32" translate="yes" xml:space="preserve">
          <source>Sequentially compose two actions, passing any value produced by the first as an argument to the second.</source>
          <target state="translated">按顺序组成两个动作,将第一个动作产生的任何值作为参数传递给第二个动作。</target>
        </trans-unit>
        <trans-unit id="75fafb05751081f64a2484050588d619699d9e20" translate="yes" xml:space="preserve">
          <source>SerializableException</source>
          <target state="translated">SerializableException</target>
        </trans-unit>
        <trans-unit id="f7f1997c6cd1aa051279675742272a956e7db628" translate="yes" xml:space="preserve">
          <source>Session</source>
          <target state="translated">Session</target>
        </trans-unit>
        <trans-unit id="e11e37a9253b34ff1c7224447e143fabca1be9fd" translate="yes" xml:space="preserve">
          <source>Sessions</source>
          <target state="translated">Sessions</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="6b3ea658a653e86954be656e000ca590af97c259" translate="yes" xml:space="preserve">
          <source>Set a breakpoint on the specified function or line and column. See &lt;a href=&quot;#setting-breakpoints&quot;&gt;Setting breakpoints&lt;/a&gt;.</source>
          <target state="translated">在指定的函数或行和列上设置一个断点。请参阅&lt;a href=&quot;#setting-breakpoints&quot;&gt;设置断点&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="92eaa5df14d7b4342d4c3472a75bac1066b25b14" translate="yes" xml:space="preserve">
          <source>Set a command to be executed when a breakpoint is hit, or a new item in the history is selected. The most common use of &lt;a href=&quot;#ghci-cmd-:set%20stop&quot;&gt;&lt;code&gt;:set stop&lt;/code&gt;&lt;/a&gt; is to display the source code at the current location, e.g. &lt;code&gt;:set stop :list&lt;/code&gt;.</source>
          <target state="translated">设置一个命中断点或在历史记录中选择一个新项目时要执行的命令。&lt;a href=&quot;#ghci-cmd-:set%20stop&quot;&gt; &lt;code&gt;:set stop&lt;/code&gt; &lt;/a&gt;最常见的用法是在当前位置显示源代码，例如 &lt;code&gt;:set stop :list&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5598d7c57da0bd198cfe4beaeacb18883914b13" translate="yes" xml:space="preserve">
          <source>Set group ID on execution.</source>
          <target state="translated">执行时设置组ID。</target>
        </trans-unit>
        <trans-unit id="38b2740eea5d30754b321b1f957647cbf10eef28" translate="yes" xml:space="preserve">
          <source>Set handlers of console Ctrl events.</source>
          <target state="translated">设置控制台Ctrl事件的处理程序。</target>
        </trans-unit>
        <trans-unit id="c6849edf0874e35a7f99bd004eccf06f8811bb47" translate="yes" xml:space="preserve">
          <source>Set main module and function</source>
          <target state="translated">设置主模块和功能</target>
        </trans-unit>
        <trans-unit id="df7c45a9c440cc50cf4a96b4f73bdf1c9e3dffa5" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the specified &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. All buffered data is flushed first.</source>
          <target state="translated">在指定的 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 上设置 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; 。首先缓冲所有缓冲的数据。</target>
        </trans-unit>
        <trans-unit id="adcf1477b97e38d4050ce06778e07f2844dda0a9" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the specified &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. All buffered data is flushed first.</source>
          <target state="translated">在指定的 &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 上设置 &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; 。首先缓冲所有缓冲的数据。</target>
        </trans-unit>
        <trans-unit id="ec3b1d845fd2a0839efd12505034aac565fb1ed5" translate="yes" xml:space="preserve">
          <source>Set the HPC &lt;code&gt;.tix&lt;/code&gt; file output path.</source>
          <target state="translated">设置HPC &lt;code&gt;.tix&lt;/code&gt; 文件输出路径。</target>
        </trans-unit>
        <trans-unit id="c3b1100fbcb5c70102dfb3bcb48cd78df26f1a7b" translate="yes" xml:space="preserve">
          <source>Set the allocation area size used by the garbage collector. The allocation area (actually generation 0 step 0) is fixed and is never resized (unless you use &lt;a href=&quot;#rts-flag--H%20%5B%E2%9F%A8size%E2%9F%A9%5D&quot;&gt;&lt;code&gt;-H [⟨size⟩]&lt;/code&gt;&lt;/a&gt;, below).</source>
          <target state="translated">设置垃圾收集器使用的分配区域大小。分配区域（实际上是第0代第0步）是固定的，并且永远不会调整大小（除非您使用下面的&lt;a href=&quot;#rts-flag--H%20%5B%E2%9F%A8size%E2%9F%A9%5D&quot;&gt; &lt;code&gt;-H [⟨size⟩]&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b4de9ea3fbc0c683d350f778336c93e1c0198e16" translate="yes" xml:space="preserve">
          <source>Set the base name.</source>
          <target state="translated">设置基础名称。</target>
        </trans-unit>
        <trans-unit id="c2f2dd85f886cd5f61def475f8048755ecfe9183" translate="yes" xml:space="preserve">
          <source>Set the column number of a source position.</source>
          <target state="translated">设置源位置的列号。</target>
        </trans-unit>
        <trans-unit id="b68583ed6a9e011dbab8bcc63b309be6143a778d" translate="yes" xml:space="preserve">
          <source>Set the default RTS options to ⟨opts⟩.</source>
          <target state="translated">设置默认的RTS选项为⟨opts⟩。</target>
        </trans-unit>
        <trans-unit id="c2acc9c7cfde8a35f523643587479d53c6a2b3b1" translate="yes" xml:space="preserve">
          <source>Set the depth for printing expressions in error msgs</source>
          <target state="translated">设置错误信息中打印表达式的深度。</target>
        </trans-unit>
        <trans-unit id="4d40edafcf71cbe8b907f85415c07a59806caed9" translate="yes" xml:space="preserve">
          <source>Set the directory, keeping the filename the same.</source>
          <target state="translated">设置目录,保持文件名不变。</target>
        </trans-unit>
        <trans-unit id="0f7688bac0b0bbbb282f78d52fac7367accf5419" translate="yes" xml:space="preserve">
          <source>Set the echoing status of a handle connected to a terminal.</source>
          <target state="translated">设置连接到终端的手柄的呼应状态。</target>
        </trans-unit>
        <trans-unit id="bd42a1bfee166e7b293085f2f6e5dc908349a204" translate="yes" xml:space="preserve">
          <source>Set the extension of a file, overwriting one if already present, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">设置文件扩展名，如果已存在，则覆盖该文件扩展名，等效于 &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45b63fada149a85372819a2585bf563905a2657d" translate="yes" xml:space="preserve">
          <source>Set the extension of a file, overwriting one if already present, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">设置文件扩展名，如果已存在，则覆盖该文件扩展名，等效于 &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-45--60-.-62-&quot;&gt;-&amp;lt;.&amp;gt;&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ad1fc1ee716e1bb760078c3d1f06b25654cdc2d" translate="yes" xml:space="preserve">
          <source>Set the filename.</source>
          <target state="translated">设置文件名。</target>
        </trans-unit>
        <trans-unit id="90b40690754f79e9fcf62ced7a8d41858f549afb" translate="yes" xml:space="preserve">
          <source>Set the function used by GHCi to print evaluation results. Expression must be of type &lt;code&gt;C a =&amp;gt; a -&amp;gt; IO ()&lt;/code&gt;.</source>
          <target state="translated">设置GHCi用于打印评估结果的功能。表达式必须为 &lt;code&gt;C a =&amp;gt; a -&amp;gt; IO ()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb3560177d2aa96dba9e086ae11ef4922fcc790b" translate="yes" xml:space="preserve">
          <source>Set the function used by GHCi to print evaluation results. Given name must be of type &lt;code&gt;C a =&amp;gt; a -&amp;gt; IO ()&lt;/code&gt;.</source>
          <target state="translated">设置GHCi用于打印评估结果的功能。给定名称必须为 &lt;code&gt;C a =&amp;gt; a -&amp;gt; IO ()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="309de2db0b79340c9b93043c2bfb3105bca1551e" translate="yes" xml:space="preserve">
          <source>Set the increment for the generated &lt;code&gt;Unique&lt;/code&gt;&amp;lsquo;s to ⟨i⟩.</source>
          <target state="translated">将生成的 &lt;code&gt;Unique&lt;/code&gt; 的增量设置为⟨i⟩。</target>
        </trans-unit>
        <trans-unit id="3c44a6888eb466e5ca0e864954471062da1edc64" translate="yes" xml:space="preserve">
          <source>Set the increment for the generated &lt;code&gt;Unique&lt;/code&gt;&amp;rsquo;s to ⟨i⟩.</source>
          <target state="translated">将生成的 &lt;code&gt;Unique&lt;/code&gt; 的增量设置为⟨i⟩。</target>
        </trans-unit>
        <trans-unit id="c10386b74d0839ff7965a7601425bb82c13edc89" translate="yes" xml:space="preserve">
          <source>Set the increment for the generated &lt;code&gt;Unique&lt;/code&gt;'s to ⟨i⟩.</source>
          <target state="translated">将生成的 &lt;code&gt;Unique&lt;/code&gt; 的增量设置为⟨i⟩。</target>
        </trans-unit>
        <trans-unit id="153a6823d609e74f71260ffedc330bb0f1974e42" translate="yes" xml:space="preserve">
          <source>Set the initial stack size for new threads.</source>
          <target state="translated">设置新线程的初始栈大小。</target>
        </trans-unit>
        <trans-unit id="f079f0827adbcd29a1f309fa55de1d4d021c672e" translate="yes" xml:space="preserve">
          <source>Set the install name (via &lt;code&gt;-install_name&lt;/code&gt; passed to Apple&amp;rsquo;s linker), specifying the full install path of the library file. Any libraries or executables that link with it later will pick up that path as their runtime search location for it. (Darwin/OS X only)</source>
          <target state="translated">设置安装名称（通过传递给Apple链接器的 &lt;code&gt;-install_name&lt;/code&gt; ），并指定库文件的完整安装路径。以后与其链接的所有库或可执行文件都将使用该路径作为其运行时搜索位置。（仅适用于Darwin / OS X）</target>
        </trans-unit>
        <trans-unit id="74254bb0267016ebcc16df3066fccdb36aaa93ae" translate="yes" xml:space="preserve">
          <source>Set the install name (via &lt;code&gt;-install_name&lt;/code&gt; passed to Apple's linker), specifying the full install path of the library file. Any libraries or executables that link with it later will pick up that path as their runtime search location for it. (Darwin/OS X only)</source>
          <target state="translated">设置安装名称（通过传递给Apple链接器的 &lt;code&gt;-install_name&lt;/code&gt; ），并指定库文件的完整安装路径。以后与其链接的任何库或可执行文件都将使用该路径作为其运行时搜索位置。（仅适用于Darwin / OS X）</target>
        </trans-unit>
        <trans-unit id="154d944f5b541b4441cc4626008fba5da50b9508" translate="yes" xml:space="preserve">
          <source>Set the line input history.</source>
          <target state="translated">设置行输入历史。</target>
        </trans-unit>
        <trans-unit id="9642e6627b8a554a8d171d7ea7a1cc7466b2bd29" translate="yes" xml:space="preserve">
          <source>Set the line number of a source position.</source>
          <target state="translated">设置源位置的行号。</target>
        </trans-unit>
        <trans-unit id="7f73c27e7dc3cbc3d482b15751ee8f603c17f752" translate="yes" xml:space="preserve">
          <source>Set the maximum heap size to ⟨size⟩ bytes. The heap normally grows and shrinks according to the memory requirements of the program. The only reason for having this option is to stop the heap growing without bound and filling up all the available swap space, which at the least will result in the program being summarily killed by the operating system.</source>
          <target state="translated">设置最大堆大小为⟨size⟩字节。一般情况下,堆会根据程序对内存的要求进行增长和收缩。有这个选项的唯一原因是为了阻止堆的无约束增长,填满所有可用的交换空间,至少会导致程序被操作系统立即杀死。</target>
        </trans-unit>
        <trans-unit id="67c636527be62639907ed3cd2e046479f5422b13" translate="yes" xml:space="preserve">
          <source>Set the maximum number of specialisations that will be created for any one function by the SpecConstr transformation.</source>
          <target state="translated">设置通过SpecConstr转换为任何一个函数创建的最大专业化数量。</target>
        </trans-unit>
        <trans-unit id="3c3d333729e5d534623f2d0eaba82012fecfe32c" translate="yes" xml:space="preserve">
          <source>Set the maximum size of inline array allocations to n bytes. GHC will allocate non-pinned arrays of statically known size in the current nursery block if they&amp;rsquo;re no bigger than n bytes, ignoring GC overheap. This value should be quite a bit smaller than the block size (typically: 4096).</source>
          <target state="translated">将内联数组分配的最大大小设置为n个字节。如果它们不大于n个字节，则GHC将在当前托儿所块中分配静态固定大小的非固定数组，而忽略GC堆。该值应比块大小小很多（通常：4096）。</target>
        </trans-unit>
        <trans-unit id="df6bf309de0671ddb20082e0e3ee95f06fd0f8ee" translate="yes" xml:space="preserve">
          <source>Set the maximum stack size for an individual thread to ⟨size⟩ bytes. If the thread attempts to exceed this limit, it will be sent the &lt;code&gt;StackOverflow&lt;/code&gt; exception. The limit can be disabled entirely by specifying a size of zero.</source>
          <target state="translated">将单个线程的最大堆栈大小设置为&amp;ldquo; size&amp;rdquo;个字节。如果线程尝试超过此限制，则会向其发送 &lt;code&gt;StackOverflow&lt;/code&gt; 异常。通过指定大小为零，可以完全禁用该限制。</target>
        </trans-unit>
        <trans-unit id="34a28a7a0ff4a3b46cf3855427f3aaf3ef912902" translate="yes" xml:space="preserve">
          <source>Set the minimum size of the heap to ⟨size⟩</source>
          <target state="translated">设置堆的最小大小为⟨size⟩。</target>
        </trans-unit>
        <trans-unit id="c3c689345a8a5e3e1614c388852a7d992055d604" translate="yes" xml:space="preserve">
          <source>Set the minimum size of the heap to ⟨size⟩. This option is equivalent to &lt;code&gt;+RTS -Hsize&lt;/code&gt;, see &lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS options to control the garbage collector&lt;/a&gt;.</source>
          <target state="translated">将堆的最小大小设置为&amp;ldquo;大小&amp;rdquo;。此选项等效于 &lt;code&gt;+RTS -Hsize&lt;/code&gt; ，请参阅&lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS选项以控制垃圾收集器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ccd1e013c9acb626c6617269e9ad4b0a715fee04" translate="yes" xml:space="preserve">
          <source>Set the minimum size of the old generation. The old generation is collected whenever it grows to this size or the value of the &lt;a href=&quot;#rts-flag--F%20%E2%9F%A8factor%E2%9F%A9&quot;&gt;&lt;code&gt;-F ⟨factor⟩&lt;/code&gt;&lt;/a&gt; option multiplied by the size of the live data at the previous major collection, whichever is larger.</source>
          <target state="translated">设置旧一代的最小大小。只要增长到此大小或&lt;a href=&quot;#rts-flag--F%20%E2%9F%A8factor%E2%9F%A9&quot;&gt; &lt;code&gt;-F ⟨factor⟩&lt;/code&gt; &lt;/a&gt;选项的值乘以先前的主要集合中实时数据的大小（以较大者为准），就会收集旧的一代。</target>
        </trans-unit>
        <trans-unit id="d81c121bc14e581e519dbc75d7eda8d3a59f503e" translate="yes" xml:space="preserve">
          <source>Set the name of the source.</source>
          <target state="translated">设置源的名称。</target>
        </trans-unit>
        <trans-unit id="93cc8334ff7df03aaf2a23a40c74dfb0bccb9fba" translate="yes" xml:space="preserve">
          <source>Set the new allocation size of the CNF. This value (in bytes) determines the capacity of each compact block in the CNF. It does not retroactively affect existing compact blocks in the CNF.</source>
          <target state="translated">设置CNF的新分配大小。该值(以字节为单位)决定了CNF中每个压缩块的容量。它不会追溯影响CNF中现有的压缩块。</target>
        </trans-unit>
        <trans-unit id="3f2ff124f59a1531283a72f83e200ebc1a76d661" translate="yes" xml:space="preserve">
          <source>Set the new allocation size of the compact. This value (in bytes) determines the size of each block in the compact chain.</source>
          <target state="translated">设置契约的新的分配大小,这个值(以字节为单位)决定了契约链中每个块的大小。这个值(以字节为单位)决定了契约链中每个块的大小。</target>
        </trans-unit>
        <trans-unit id="be84fc95b69c36167451b2aaed77808d4f4d2797" translate="yes" xml:space="preserve">
          <source>Set the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. The number passed to &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is interpreted modulo this value. The initial value is given by the &lt;code&gt;+RTS -N&lt;/code&gt; runtime flag.</source>
          <target state="translated">设置可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。传递给 &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; 的数字将对此值取模。初始值由 &lt;code&gt;+RTS -N&lt;/code&gt; 运行时标志给出。</target>
        </trans-unit>
        <trans-unit id="08ef23c845062be45d68cae8bd4d9e0a89f5300c" translate="yes" xml:space="preserve">
          <source>Set the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. The number passed to &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is interpreted modulo this value. The initial value is given by the &lt;code&gt;+RTS -N&lt;/code&gt; runtime flag.</source>
          <target state="translated">设置可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。传递给 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; 的数字将对此值取模。初始值由 &lt;code&gt;+RTS -N&lt;/code&gt; 运行时标志给出。</target>
        </trans-unit>
        <trans-unit id="4b8986d6631f648280b8824a5e9acaa22cfd5ede" translate="yes" xml:space="preserve">
          <source>Set the number of Haskell threads that can run truly simultaneously (on separate physical processors) at any given time. The number passed to &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is interpreted modulo this value. The initial value is given by the &lt;code&gt;+RTS -N&lt;/code&gt; runtime flag.</source>
          <target state="translated">设置可以在任何给定时间真正同时（在单独的物理处理器上）运行的Haskell线程数。传递给 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; 的数字将对此值取模。初始值由 &lt;code&gt;+RTS -N&lt;/code&gt; 运行时标志给出。</target>
        </trans-unit>
        <trans-unit id="49914586be421c1a51499082896596cdc3d1b52d" translate="yes" xml:space="preserve">
          <source>Set the number of entries GHCi keeps for &lt;code&gt;:history&lt;/code&gt;. See &lt;a href=&quot;ghci#ghci-debugger&quot;&gt;The GHCi Debugger&lt;/a&gt;.</source>
          <target state="translated">设置GHCi为 &lt;code&gt;:history&lt;/code&gt; 保留的条目数。请参阅&lt;a href=&quot;ghci#ghci-debugger&quot;&gt;GHCi调试器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78111973c0a6975132f723e2af152cf8bff28dbe" translate="yes" xml:space="preserve">
          <source>Set the number of generations used by the garbage collector. The default of 2 seems to be good, but the garbage collector can support any number of generations. Anything larger than about 4 is probably not a good idea unless your program runs for a &lt;em&gt;long&lt;/em&gt; time, because the oldest generation will hardly ever get collected.</source>
          <target state="translated">设置垃圾收集器使用的世代数。默认值为2似乎不错，但是垃圾收集器可以支持任何数量的世代。除非程序运行&lt;em&gt;很&lt;/em&gt;长时间，否则大于4的值可能不是一个好主意，因为最老的一代几乎都不会被收集到。</target>
        </trans-unit>
        <trans-unit id="974f10915fc1e5bb5d4657e8bfa0ee8f69071586" translate="yes" xml:space="preserve">
          <source>Set the number of phases for the simplifier. Ignored with &lt;code&gt;-O0&lt;/code&gt;.</source>
          <target state="translated">设置简化器的相数。用 &lt;code&gt;-O0&lt;/code&gt; 忽略。</target>
        </trans-unit>
        <trans-unit id="9d55f6df845d396fb3f26af370d6593432197c2d" translate="yes" xml:space="preserve">
          <source>Set the permissions of a file or directory.</source>
          <target state="translated">设置文件或目录的权限。</target>
        </trans-unit>
        <trans-unit id="581f262ffcc5b132fc178bf2b945da3fa032db33" translate="yes" xml:space="preserve">
          <source>Set the prefix of the filenames used for debugging output.</source>
          <target state="translated">设置用于调试输出的文件名的前缀。</target>
        </trans-unit>
        <trans-unit id="27569170844fcd82a186fdf61977ee9c0555a54c" translate="yes" xml:space="preserve">
          <source>Set the prefix of the filenames used for debugging output. For example, &lt;code&gt;-ddump-file-prefix=Foo&lt;/code&gt; will cause the output from &lt;a href=&quot;#ghc-flag--ddump-simpl&quot;&gt;&lt;code&gt;-ddump-simpl&lt;/code&gt;&lt;/a&gt; to be dumped to &lt;code&gt;Foo.dump-simpl&lt;/code&gt;.</source>
          <target state="translated">设置用于调试输出的文件名的前缀。例如， &lt;code&gt;-ddump-file-prefix=Foo&lt;/code&gt; 将导致&lt;a href=&quot;#ghc-flag--ddump-simpl&quot;&gt; &lt;code&gt;-ddump-simpl&lt;/code&gt; &lt;/a&gt;的输出转储到 &lt;code&gt;Foo.dump-simpl&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee90ac8ed288a340065381772b8b9d149143a2f0" translate="yes" xml:space="preserve">
          <source>Set the profiling (sampling) interval to ⟨secs⟩ seconds (the default is 0.1 second). Fractions are allowed: for example &lt;code&gt;-i0.2&lt;/code&gt; will get 5 samples per second. This only affects heap profiling; time profiles are always sampled with the frequency of the RTS clock. See &lt;a href=&quot;#prof-time-options&quot;&gt;Time and allocation profiling&lt;/a&gt; for changing that.</source>
          <target state="translated">将分析（采样）间隔设置为&amp;ldquo;秒&amp;rdquo;秒（默认值为0.1秒）。允许使用分数：例如 &lt;code&gt;-i0.2&lt;/code&gt; 每秒将获得5个样本。这只会影响堆分析；时间配置文件始终以RTS时钟的频率进行采样。请参阅&lt;a href=&quot;#prof-time-options&quot;&gt;时间和分配分析&lt;/a&gt;以进行更改。</target>
        </trans-unit>
        <trans-unit id="bde393e1c3aa9e9db3da19eaa0ed0bed96e40bc3" translate="yes" xml:space="preserve">
          <source>Set the size of &amp;ldquo;stack chunks&amp;rdquo;. When a thread&amp;rsquo;s current stack overflows, a new stack chunk is created and added to the thread&amp;rsquo;s stack, until the limit set by &lt;a href=&quot;#rts-flag--K%20%E2%9F%A8size%E2%9F%A9&quot;&gt;&lt;code&gt;-K ⟨size⟩&lt;/code&gt;&lt;/a&gt; is reached.</source>
          <target state="translated">设置&amp;ldquo;堆栈块&amp;rdquo;的大小。当线程的当前堆栈溢出时，将创建一个新的堆栈块并将其添加到该线程的堆栈中，直到达到由&lt;a href=&quot;#rts-flag--K%20%E2%9F%A8size%E2%9F%A9&quot;&gt; &lt;code&gt;-K ⟨size⟩&lt;/code&gt; &lt;/a&gt;设置的限制。</target>
        </trans-unit>
        <trans-unit id="13830a2153ac99e2e5187f2607fe01677efb61a6" translate="yes" xml:space="preserve">
          <source>Set the size threshold for the SpecConstr transformation.</source>
          <target state="translated">设置SpecConstr变换的大小阈值。</target>
        </trans-unit>
        <trans-unit id="1212f3cff89daa6357cba7682f3eb8eb280b1c85" translate="yes" xml:space="preserve">
          <source>Set the size threshold for the liberate-case transformation.</source>
          <target state="translated">设置自由大小写转换的大小阈值。</target>
        </trans-unit>
        <trans-unit id="a2ae25c78040fee94d69d11436a78f01d6fca2d0" translate="yes" xml:space="preserve">
          <source>Set the width of debugging output. For example &lt;code&gt;-dppr-cols200&lt;/code&gt;</source>
          <target state="translated">设置调试输出的宽度。例如 &lt;code&gt;-dppr-cols200&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="019b4ecc06f7c2f22b40358cf37ba57f0d48c6a8" translate="yes" xml:space="preserve">
          <source>Set the width of debugging output. Use this if your code is wrapping too much. For example: &lt;code&gt;-dppr-cols=200&lt;/code&gt;.</source>
          <target state="translated">设置调试输出的宽度。如果您的代码包装太多，请使用此选项。例如： &lt;code&gt;-dppr-cols=200&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c74eca7c43ef9fb73346c302c6712b095e6934a" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the language is case sensitive.</source>
          <target state="translated">如果语言区分大小写，则设置为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="73a9144ce523c26ead35be5e17a8b419754fb0f2" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the language supports nested block comments.</source>
          <target state="translated">如果该语言支持嵌套块注释，则设置为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a4ba15fda4bbbf376e19cc429fd5c215384831c8" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the language is case sensitive.</source>
          <target state="translated">如果语言区分大小写，则设置为 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f435d9dbcd9ebd77b8861f8b64110f1d0062614f" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the language supports nested block comments.</source>
          <target state="translated">如果该语言支持嵌套块注释，则设置为 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5071d6a2399b543969684c2a37cc3cf3caaaf458" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the language is case sensitive.</source>
          <target state="translated">如果语言区分大小写，则设置为 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb6cc723365f51624a7fb5fc4976d9b75b2ecd2c" translate="yes" xml:space="preserve">
          <source>Set to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the language supports nested block comments.</source>
          <target state="translated">如果该语言支持嵌套块注释，则设置为 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ba8a4e35c2ca993f0910108377e4d4052112de4" translate="yes" xml:space="preserve">
          <source>Set type</source>
          <target state="translated">设置类型</target>
        </trans-unit>
        <trans-unit id="3d5891cb9e8a0fc091a9171a8d1b4dbcf2f1f52b" translate="yes" xml:space="preserve">
          <source>Set user ID on execution.</source>
          <target state="translated">执行时设置用户ID。</target>
        </trans-unit>
        <trans-unit id="62d7122885b6e1739f21a82263b34706a4d08844" translate="yes" xml:space="preserve">
          <source>SetOwnerAndGroupIsRestricted</source>
          <target state="translated">SetOwnerAndGroupIsRestricted</target>
        </trans-unit>
        <trans-unit id="5752a633b29be2c2c6d999e8ad3cf0d34e0b6bbb" translate="yes" xml:space="preserve">
          <source>SetWindowPosFlags</source>
          <target state="translated">SetWindowPosFlags</target>
        </trans-unit>
        <trans-unit id="5d59fc0c1ba1d0f45cfcd2a1a313a95a2f55060a" translate="yes" xml:space="preserve">
          <source>Sets edge weights used by the new code layout algorithm.</source>
          <target state="translated">设置新的代码布局算法使用的边缘权重。</target>
        </trans-unit>
        <trans-unit id="ea257dcefad7ec78df6ea3c4001b110c8fb57d58" translate="yes" xml:space="preserve">
          <source>Sets how many iterations of the pattern-match checker will perform before giving up. This limit is to catch cases where pattern-match checking might be excessively costly (due to the exponential complexity of coverage checking in the general case). It typically shouldn&amp;rsquo;t be necessary to set this unless GHC informs you that it has exceeded the pattern match checker&amp;rsquo;s iteration limit (in which case you may want to consider refactoring your pattern match, for the sake of future readers of your code.</source>
          <target state="translated">设置在放弃之前模式匹配检查程序将执行多少次迭代。此限制是为了捕获模式匹配检查可能过于昂贵的情况（由于通常情况下覆盖检查的指数复杂性）。除非GHC通知您它已经超过了模式匹配检查器的迭代限制，否则通常不需要设置该值（在这种情况下，为了将来的代码读者，您可能需要考虑重构模式匹配。</target>
        </trans-unit>
        <trans-unit id="b920f85990a248c4469d8197adacc9f2e5b9eddc" translate="yes" xml:space="preserve">
          <source>Sets or modifies the current context for statements typed at the prompt. The form &lt;code&gt;import mod&lt;/code&gt; is equivalent to &lt;code&gt;:module +mod&lt;/code&gt;. See &lt;a href=&quot;#ghci-scope&quot;&gt;What&amp;rsquo;s really in scope at the prompt?&lt;/a&gt; for more details.</source>
          <target state="translated">设置或修改在提示符下键入的语句的当前上下文。形式 &lt;code&gt;import mod&lt;/code&gt; 等效于 &lt;code&gt;:module +mod&lt;/code&gt; 。看到&lt;a href=&quot;#ghci-scope&quot;&gt;提示时真正的作用域是什么？&lt;/a&gt;更多细节。</target>
        </trans-unit>
        <trans-unit id="674cd41ed08ffde00fe81d47ba369ce3000c07a0" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;exposed&lt;/code&gt; flag for package ⟨P⟩ to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">将包⟨P⟩ 的 &lt;code&gt;exposed&lt;/code&gt; 标志设置为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21880bfdad398070705f7eac77b513092fea6267" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;exposed&lt;/code&gt; flag for package ⟨P⟩ to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">将包⟨P⟩ 的 &lt;code&gt;exposed&lt;/code&gt; 标志设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5475a6c0aa3b60ca9256f7baef6f42fb4d21e58" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;trusted&lt;/code&gt; flag for package ⟨P⟩ to &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">将包⟨P⟩ 的 &lt;code&gt;trusted&lt;/code&gt; 标志设置为 &lt;code&gt;False&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74610355e107472e2529949895e79f33df809382" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;trusted&lt;/code&gt; flag for package ⟨P⟩ to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">将包⟨P⟩ 的 &lt;code&gt;trusted&lt;/code&gt; 标志设置为 &lt;code&gt;True&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2e20ad62225863877ba8e6cb0b1dff5279b2d25" translate="yes" xml:space="preserve">
          <source>Sets the allocation counter for the current thread to the given value.</source>
          <target state="translated">将当前线程的分配计数器设置为给定值。</target>
        </trans-unit>
        <trans-unit id="b2c4dc1f6b2f05486d3823652f2f61d8d864b1c5" translate="yes" xml:space="preserve">
          <source>Sets the attributes on or off before outputting the given text, and then turns them all off. This capability will always succeed; properties which cannot be set in the current terminal will be ignored.</source>
          <target state="translated">在输出给定的文本之前设置属性的开启或关闭,然后将它们全部关闭。该功能总是成功的,在当前终端无法设置的属性将被忽略。</target>
        </trans-unit>
        <trans-unit id="f044a6bd0542095b6f8d833a9f63a0b91b0c7314" translate="yes" xml:space="preserve">
          <source>Sets the attributes on or off. This capability will always succeed; properties which cannot be set in the current terminal will be ignored.</source>
          <target state="translated">设置属性的开启或关闭。该功能永远成功,当前终端无法设置的属性将被忽略。</target>
        </trans-unit>
        <trans-unit id="9e9d6260f5eb86f113f53ee7f94bef58759c1f45" translate="yes" xml:space="preserve">
          <source>Sets the background color of all further text output, using either the &lt;code&gt;setab&lt;/code&gt; or &lt;code&gt;setb&lt;/code&gt; capability.</source>
          <target state="translated">使用 &lt;code&gt;setab&lt;/code&gt; 或 &lt;code&gt;setb&lt;/code&gt; 功能设置所有其他文本输出的背景色。</target>
        </trans-unit>
        <trans-unit id="ec6f9b0ef35dbec0ee3e8807330155257d874c11" translate="yes" xml:space="preserve">
          <source>Sets the command used by &lt;a href=&quot;#ghci-cmd-:edit&quot;&gt;&lt;code&gt;:edit&lt;/code&gt;&lt;/a&gt; to ⟨cmd⟩.</source>
          <target state="translated">将&lt;a href=&quot;#ghci-cmd-:edit&quot;&gt; &lt;code&gt;:edit&lt;/code&gt; &lt;/a&gt;使用的命令设置为tocmd⟩。</target>
        </trans-unit>
        <trans-unit id="311542d39835606741eb83c49a3747557cb52c29" translate="yes" xml:space="preserve">
          <source>Sets the context switch interval to ⟨s⟩ seconds. A context switch will occur at the next heap block allocation after the timer expires (a heap block allocation occurs every 4k of allocation). With &lt;code&gt;-C0&lt;/code&gt; or &lt;code&gt;-C&lt;/code&gt;, context switches will occur as often as possible (at every heap block allocation).</source>
          <target state="translated">将上下文切换间隔设置为⟨s⟩秒。计时器到期后，上下文切换将在下一个堆块分配处发生（每4k分配发生一次堆块分配）。使用 &lt;code&gt;-C0&lt;/code&gt; 或 &lt;code&gt;-C&lt;/code&gt; ，上下文切换将尽可能频繁地发生（在每个堆块分配中）。</target>
        </trans-unit>
        <trans-unit id="3cc3e2dca487963eddc51e609356dd3f2ebd666d" translate="yes" xml:space="preserve">
          <source>Sets the destination for the eventlog produced with the &lt;a href=&quot;#rts-flag--l%20%E2%9F%A8flags%E2%9F%A9&quot;&gt;&lt;code&gt;-l ⟨flags⟩&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">设置使用&lt;a href=&quot;#rts-flag--l%20%E2%9F%A8flags%E2%9F%A9&quot;&gt; &lt;code&gt;-l ⟨flags⟩&lt;/code&gt; &lt;/a&gt;标志标志生成的事件日志的目标。</target>
        </trans-unit>
        <trans-unit id="a7155bad6d4be2ffdb5bd3858939d96fb2158b21" translate="yes" xml:space="preserve">
          <source>Sets the destination for the eventlog produced with the &lt;a href=&quot;profiling#rts-flag--l&quot;&gt;&lt;code&gt;-l&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">设置使用&lt;a href=&quot;profiling#rts-flag--l&quot;&gt; &lt;code&gt;-l&lt;/code&gt; &lt;/a&gt;标志生成的事件日志的目标。</target>
        </trans-unit>
        <trans-unit id="3eeab4f5d8791e9b07157ed1c993b7d984742a51" translate="yes" xml:space="preserve">
          <source>Sets the foreground color of all further text output, using either the &lt;code&gt;setaf&lt;/code&gt; or &lt;code&gt;setf&lt;/code&gt; capability.</source>
          <target state="translated">使用 &lt;code&gt;setaf&lt;/code&gt; 或 &lt;code&gt;setf&lt;/code&gt; 功能设置所有其他文本输出的前景色。</target>
        </trans-unit>
        <trans-unit id="544f549a696a2ab69ee245ced9c83bd2e2b3a6fd" translate="yes" xml:space="preserve">
          <source>Sets the function to be used for the continuation prompt (used when using the &lt;a href=&quot;#ghci-cmd-:%7B&quot;&gt;&lt;code&gt;:{&lt;/code&gt;&lt;/a&gt; command) displaying in GHCi.</source>
          <target state="translated">设置用于GHCi中显示的继续提示的功能（使用&lt;a href=&quot;#ghci-cmd-:%7B&quot;&gt; &lt;code&gt;:{&lt;/code&gt; &lt;/a&gt;命令时使用）。</target>
        </trans-unit>
        <trans-unit id="926985e64e5398fb8d04ccea5a3fc65cf84c7728" translate="yes" xml:space="preserve">
          <source>Sets the function to be used for the prompt displaying in GHCi. The function should be of the type &lt;code&gt;[String] -&amp;gt; Int -&amp;gt; IO String&lt;/code&gt;. This function is called each time the prompt is being made. The first argument stands for the names of the modules currently in scope(the name of the &amp;ldquo;topmost&amp;rdquo; module will begin with a &lt;code&gt;*&lt;/code&gt;; see &lt;a href=&quot;#ghci-scope&quot;&gt;What&amp;rsquo;s really in scope at the prompt?&lt;/a&gt; for more information). The second arguments is the line number (as referenced in compiler messages) of the current prompt.</source>
          <target state="translated">设置用于在GHCi中显示提示的功能。该函数应为 &lt;code&gt;[String] -&amp;gt; Int -&amp;gt; IO String&lt;/code&gt; 。每次发出提示时都会调用此函数。第一个参数代表当前作用域中的模块的名称（&amp;ldquo;最顶层&amp;rdquo;模块的名称以 &lt;code&gt;*&lt;/code&gt; 开头；有关更多信息，请参见&lt;a href=&quot;#ghci-scope&quot;&gt;提示符处的真正作用域？&lt;/a&gt;）。第二个参数是当前提示的行号（在编译器消息中引用）。</target>
        </trans-unit>
        <trans-unit id="85a9cc84fb8a975ac3d6d428a3e058beac0c24b8" translate="yes" xml:space="preserve">
          <source>Sets the interval that the RTS clock ticks at, which is also the sampling interval of the time and allocation profile. The default is 0.02 seconds. The runtime uses a single timer signal to count ticks; this timer signal is used to control the context switch timer (&lt;a href=&quot;using-concurrent#using-concurrent&quot;&gt;Using Concurrent Haskell&lt;/a&gt;) and the heap profiling timer &lt;a href=&quot;#rts-options-heap-prof&quot;&gt;RTS options for heap profiling&lt;/a&gt;. Also, the time profiler uses the RTS timer signal directly to record time profiling samples.</source>
          <target state="translated">设置RTS时钟的滴答间隔，它也是时间和分配配置文件的采样间隔。默认值为0.02秒。运行时使用单个计时器信号来计算滴答声；此计时器信号用于控制上下文切换计时器（&lt;a href=&quot;using-concurrent#using-concurrent&quot;&gt;使用并发Haskell&lt;/a&gt;）和&lt;a href=&quot;#rts-options-heap-prof&quot;&gt;用于堆分析&lt;/a&gt;的堆分析计时器RTS选项。同样，时间分析器直接使用RTS计时器信号来记录时间分析样本。</target>
        </trans-unit>
        <trans-unit id="766f638ba7d4bfc1f02388075a4f5e3e2202bb95" translate="yes" xml:space="preserve">
          <source>Sets the limit on the total size of &amp;ldquo;large objects&amp;rdquo; (objects larger than about 3KB) that can be allocated before a GC is triggered. By default this limit is the same as the &lt;a href=&quot;#rts-flag--A%20%E2%9F%A8size%E2%9F%A9&quot;&gt;&lt;code&gt;-A&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">设置在触发GC之前可以分配的&amp;ldquo;大对象&amp;rdquo;（大于3KB的对象）总大小的限制。缺省情况下，此限制与&lt;a href=&quot;#rts-flag--A%20%E2%9F%A8size%E2%9F%A9&quot;&gt; &lt;code&gt;-A&lt;/code&gt; &lt;/a&gt;值相同。</target>
        </trans-unit>
        <trans-unit id="c10a33938d60c3ade609b314a9182d052ff36554" translate="yes" xml:space="preserve">
          <source>Sets the list of arguments which are returned when the program calls &lt;code&gt;System.getArgs&lt;/code&gt;.</source>
          <target state="translated">设置程序调用 &lt;code&gt;System.getArgs&lt;/code&gt; 时返回的参数列表。</target>
        </trans-unit>
        <trans-unit id="88921b7993f4ba8443e5f38b8fae986488002e50" translate="yes" xml:space="preserve">
          <source>Sets the maximal number of iterations for the simplifier.</source>
          <target state="translated">设置简化器的最大迭代次数。</target>
        </trans-unit>
        <trans-unit id="ddf6bcb4466d2f01e0e37403eb932bfd13d26db4" translate="yes" xml:space="preserve">
          <source>Sets the maximum length of a cost-centre stack name in a heap profile. Defaults to 25.</source>
          <target state="translated">设置堆配置文件中成本中心堆名的最大长度。默认值为25。</target>
        </trans-unit>
        <trans-unit id="47f52e8de421c0d9f22c2be275bb2873b4389bb1" translate="yes" xml:space="preserve">
          <source>Sets the maximum length of the cost-centre names listed in the heap profile.</source>
          <target state="translated">设置堆配置文件中列出的成本中心名称的最大长度。</target>
        </trans-unit>
        <trans-unit id="92f9bcec4dcffeb64d9f3f058d9712b71bf5e230" translate="yes" xml:space="preserve">
          <source>Sets the stack chunk buffer size. When a stack chunk overflows and a new stack chunk is created, some of the data from the previous stack chunk is moved into the new chunk, to avoid an immediate underflow and repeated overflow/underflow at the boundary. The amount of stack moved is set by the &lt;code&gt;-kb&lt;/code&gt; option.</source>
          <target state="translated">设置堆栈块缓冲区大小。当堆栈块溢出并创建了新的堆栈块时，前一个堆栈块中的某些数据将移入新块中，以避免在边界处立即发生下溢和重复上溢/下溢。移动的堆栈量由 &lt;code&gt;-kb&lt;/code&gt; 选项设置。</target>
        </trans-unit>
        <trans-unit id="4939bbb209646ab6d5403c578234d941ca697dd6" translate="yes" xml:space="preserve">
          <source>Sets the string to be returned when the program calls &lt;code&gt;System.getProgName&lt;/code&gt;.</source>
          <target state="translated">设置程序调用 &lt;code&gt;System.getProgName&lt;/code&gt; 时要返回的字符串。</target>
        </trans-unit>
        <trans-unit id="8a9b5c7bb27221f5a048ae6726e49420ae5ede27" translate="yes" xml:space="preserve">
          <source>Sets the string to be used as the continuation prompt (used when using the &lt;a href=&quot;#ghci-cmd-:%7B&quot;&gt;&lt;code&gt;:{&lt;/code&gt;&lt;/a&gt; command) in GHCi.</source>
          <target state="translated">设置GHCi中用作继续提示的字符串（在使用&lt;a href=&quot;#ghci-cmd-:%7B&quot;&gt; &lt;code&gt;:{&lt;/code&gt; &lt;/a&gt;命令时使用）。</target>
        </trans-unit>
        <trans-unit id="bccac63e58aa6d8722988126735a8bcd5644668e" translate="yes" xml:space="preserve">
          <source>Sets the string to be used as the prompt in GHCi. Inside ⟨prompt⟩, the next sequences are replaced:</source>
          <target state="translated">设置在GHCi中用作提示的字符串。在⟨prompt⟩内,替换下一个序列。</target>
        </trans-unit>
        <trans-unit id="ff691e62db73541f4c4094c63d16da5485d8223c" translate="yes" xml:space="preserve">
          <source>Sets various options. See &lt;a href=&quot;#ghci-set&quot;&gt;The :set and :seti commands&lt;/a&gt; for a list of available options and &lt;a href=&quot;flags#interactive-mode-options&quot;&gt;Interactive-mode options&lt;/a&gt; for a list of GHCi-specific flags. The &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt; command by itself shows which options are currently set. It also lists the current dynamic flag settings, with GHCi-specific flags listed separately.</source>
          <target state="translated">设置各种选项。有关可用选项的列表，请参见&lt;a href=&quot;#ghci-set&quot;&gt;：set和：seti命令；&lt;/a&gt;对于GHCi特定标志的列表，请参见&lt;a href=&quot;flags#interactive-mode-options&quot;&gt;交互模式选项&lt;/a&gt;。的&lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt;由本身就说明了命令的选项当前设置。它还列出了当前的动态标志设置，并单独列出了GHCi特定的标志。</target>
        </trans-unit>
        <trans-unit id="b02b3fb57dbb29ad2afd733a05004b902652d901" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;-N&lt;/code&gt; also has the effect of enabling the parallel garbage collector (see &lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS options to control the garbage collector&lt;/a&gt;).</source>
          <target state="translated">设置 &lt;code&gt;-N&lt;/code&gt; 还具有启用并行垃圾收集器的效果（请参阅&lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS选项以控制垃圾收集器&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f8b24a10f616425c10b2f160079c3eaf143ea5b5" translate="yes" xml:space="preserve">
          <source>Setting Window to Foreground. See: &lt;a href=&quot;https://github.com/haskell/win32/pull/9&quot;&gt;https://github.com/haskell/win32/pull/9&lt;/a&gt;, &lt;a href=&quot;http://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&quot;&gt;http://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&lt;/a&gt;.</source>
          <target state="translated">将窗口设置为前景。请参阅：&lt;a href=&quot;https://github.com/haskell/win32/pull/9&quot;&gt;https://github.com/haskell/win32/pull/9&lt;/a&gt;，&lt;a href=&quot;http://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&quot;&gt;http://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="592c4220f4b3f852447765c28046882c8a6233ef" translate="yes" xml:space="preserve">
          <source>Setting Window to Foreground. See: &lt;a href=&quot;https://github.com/haskell/win32/pull/9&quot;&gt;https://github.com/haskell/win32/pull/9&lt;/a&gt;, &lt;a href=&quot;https://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&quot;&gt;http://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&lt;/a&gt;.</source>
          <target state="translated">将&amp;ldquo;窗口&amp;rdquo;设置为&amp;ldquo;前景&amp;rdquo;。请参阅：&lt;a href=&quot;https://github.com/haskell/win32/pull/9&quot;&gt;https://github.com/haskell/win32/pull/9&lt;/a&gt;，&lt;a href=&quot;https://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&quot;&gt;http://stackoverflow.com/questions/14297146/win32-setforegroundwindow-in-haskell&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="911e0f1e977e5874471327f6e88d2e9b306f382c" translate="yes" xml:space="preserve">
          <source>Setting file modes</source>
          <target state="translated">设置文件模式</target>
        </trans-unit>
        <trans-unit id="5a156bca207a4fa656b883b4543cb1921c262677" translate="yes" xml:space="preserve">
          <source>Setting file sizes</source>
          <target state="translated">设置文件大小</target>
        </trans-unit>
        <trans-unit id="104d388801cda83de3626670853dc2869f6271b4" translate="yes" xml:space="preserve">
          <source>Setting something like &lt;code&gt;GHCRTS=-M2G&lt;/code&gt; in your environment is a handy way to avoid Haskell programs growing beyond the real memory in your machine, which is easy to do by accident and can cause the machine to slow to a crawl until the OS decides to kill the process (and you hope it kills the right one).</source>
          <target state="translated">在环境中设置类似 &lt;code&gt;GHCRTS=-M2G&lt;/code&gt; 的方法是避免Haskell程序超出计算机实际内存的简便方法，这很容易偶然发生，并且可能导致计算机缓慢爬行，直到操作系统决定终止这个过程（您希望它杀死了正确的过程）。</target>
        </trans-unit>
        <trans-unit id="c7f73bb54d928922c3838bb789ee9fb8a5b1eb37" translate="yes" xml:space="preserve">
          <source>Settings</source>
          <target state="translated">Settings</target>
        </trans-unit>
        <trans-unit id="c5f6db8a79708d4475b4d45a9e56ed745f590d17" translate="yes" xml:space="preserve">
          <source>SetupTermError</source>
          <target state="translated">SetupTermError</target>
        </trans-unit>
        <trans-unit id="6af121bc9dfbeb28111655f8f6ac0ed254fd498a" translate="yes" xml:space="preserve">
          <source>Several functions take special advantage of sharing to produce results using much less time and memory than one might expect. These are documented individually for functions, but also include certain class methods:</source>
          <target state="translated">有几个函数利用共享的特殊优势,以比人们期望的更少的时间和内存产生结果。这些都是单独为函数编写的文档,但也包括某些类方法。</target>
        </trans-unit>
        <trans-unit id="5d264d925dcb62f989810a7e93f01c3dbbe4c5f3" translate="yes" xml:space="preserve">
          <source>Several functions take special advantage of sharing to produce results using much less time and memory than one might expect. These are documented individually for functions, but also include the methods &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;, each of which take time and space proportional to the logarithm of the size of the result.</source>
          <target state="translated">几个功能具有共享的特殊优势，可以使用比他们预期更少的时间和内存来产生结果。这些分别针对函数进行了记录，但还包括方法 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; ，每个方法所花费的时间和空间与结果大小的对数成比例。</target>
        </trans-unit>
        <trans-unit id="2b2ffa3efe672ce8c5db2d19f5a868eb06b858f6" translate="yes" xml:space="preserve">
          <source>Several functions take special advantage of sharing to produce results using much less time and memory than one might expect. These are documented individually for functions, but also include the methods &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;, each of which take time and space proportional to the logarithm of the size of the result.</source>
          <target state="translated">几个功能具有共享的特殊优势，可以使用比他们可能期望的时间和内存少得多的时间和内存来产生结果。这些分别针对函数进行了文档记录，但还包括方法 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; ，每个方法所花费的时间和空间与结果大小的对数成比例。</target>
        </trans-unit>
        <trans-unit id="14623131cbbfbf706f6da750cb4eda364534f0b7" translate="yes" xml:space="preserve">
          <source>Several type synonyms are provided for convenience:</source>
          <target state="translated">为方便起见,提供了几种类型的同义词。</target>
        </trans-unit>
        <trans-unit id="608834b8d971a99fa89ed3af5a6e5012cd7bd2a3" translate="yes" xml:space="preserve">
          <source>ShareMode</source>
          <target state="translated">ShareMode</target>
        </trans-unit>
        <trans-unit id="583a9b1c36af1bd025814d0fc796efab9d31a19c" translate="yes" xml:space="preserve">
          <source>Shared libraries allow a single instance of some pre-compiled code to be shared between several programs. In contrast, with static linking the code is copied into each program. Using shared libraries can thus save disk space. They also allow a single copy of code to be shared in memory between several programs that use it. Shared libraries are often used as a way of structuring large projects, especially where different parts are written in different programming languages. Shared libraries are also commonly used as a plugin mechanism by various applications. This is particularly common on Windows using COM.</source>
          <target state="translated">共享库允许几个程序之间共享一些预编译代码的单一实例。与此相反,使用静态链接时,代码会被复制到每个程序中。因此,使用共享库可以节省磁盘空间。它们还允许使用它的几个程序之间在内存中共享一个代码副本。共享库经常被用作组织大型项目的一种方式,特别是当不同的部分用不同的编程语言编写时。共享库还经常被各种应用程序用作插件机制。这在使用COM的Windows上尤其常见。</target>
        </trans-unit>
        <trans-unit id="13954234065088eecc3bac65c756d464b4d46a13" translate="yes" xml:space="preserve">
          <source>Shared memory locations that support atomic memory transactions.</source>
          <target state="translated">支持原子内存事务的共享内存位置。</target>
        </trans-unit>
        <trans-unit id="9a6aa7a13d566b94eda1e2645e28063caf25a8e2" translate="yes" xml:space="preserve">
          <source>Shared operators</source>
          <target state="translated">共享运营商</target>
        </trans-unit>
        <trans-unit id="274fc725957aa6d4979c2432b7d496117e9ed8db" translate="yes" xml:space="preserve">
          <source>SharedLock</source>
          <target state="translated">SharedLock</target>
        </trans-unit>
        <trans-unit id="5e34744b030e47f16f130270af0058932e6a1f29" translate="yes" xml:space="preserve">
          <source>Sharing mode, no sharing, share read, share read+write</source>
          <target state="translated">共享模式,不共享,共享读取,共享读取+写入</target>
        </trans-unit>
        <trans-unit id="38f4b8a455a292466f157f316e3093c50f02bae3" translate="yes" xml:space="preserve">
          <source>Shift left logical. Result undefined if shift amount is not in the range 0 to word size - 1 inclusive.</source>
          <target state="translated">左移位逻辑,如果移位量不在0到字数范围内,结果未定义。如果移位量不在0到字数范围内,结果未定义。</target>
        </trans-unit>
        <trans-unit id="b2f8cb7e781b6bb9aed0002ab2fc6106b973ae86" translate="yes" xml:space="preserve">
          <source>Shift left. Result undefined if shift amount is not in the range 0 to word size - 1 inclusive.</source>
          <target state="translated">向左移位,如果移位量不在0到字数范围内,结果未定义。如果移位量不在0到字的大小-1的范围内,结果未定义。</target>
        </trans-unit>
        <trans-unit id="e901c21d90a3526cb783e1819f6ca30b9c70da91" translate="yes" xml:space="preserve">
          <source>Shift right arithmetic. Result undefined if shift amount is not in the range 0 to word size - 1 inclusive.</source>
          <target state="translated">右移运算。如果移位量不在0到字数范围内,结果未定义。</target>
        </trans-unit>
        <trans-unit id="28a0660fffccb3ba1167e3a72d89322af4281d51" translate="yes" xml:space="preserve">
          <source>Shift right logical. Result undefined if shift amount is not in the range 0 to word size - 1 inclusive.</source>
          <target state="translated">向右移位的逻辑性,如果移位量不在0到字数范围内,结果未定义。如果移位量不在0到字数范围内,结果未定义。</target>
        </trans-unit>
        <trans-unit id="a52c028eff42818390bc2b9bd7519a304a6a92f1" translate="yes" xml:space="preserve">
          <source>Shift the argument left by the specified number of bits (which must be non-negative).</source>
          <target state="translated">将参数左移指定的位数(必须是非负数)。</target>
        </trans-unit>
        <trans-unit id="b6e53836ae613854d860d1f2fe1c8505679f067d" translate="yes" xml:space="preserve">
          <source>Shift the argument left by the specified number of bits (which must be non-negative). Some instances may throw an &lt;code&gt;&lt;a href=&quot;control-exception#v:Overflow&quot;&gt;Overflow&lt;/a&gt;&lt;/code&gt; exception if given a negative input.</source>
          <target state="translated">将参数左移指定的位数（必须为非负数）。如果输入为负，则某些实例可能会引发 &lt;code&gt;&lt;a href=&quot;control-exception#v:Overflow&quot;&gt;Overflow&lt;/a&gt;&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="c3166679ee9af6f6f1606e73456f12038a442fcb" translate="yes" xml:space="preserve">
          <source>Shift the argument left by the specified number of bits. The result is undefined for negative shift amounts and shift amounts greater or equal to the &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将参数左移指定的位数。对于负移位量和大于或等于 &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; 的移位量，结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="470c27383beb816adacca5b2bcd6516fa9b92d07" translate="yes" xml:space="preserve">
          <source>Shift the argument right (signed) by the specified number of bits (which must be non-negative). The &lt;a href=&quot;ra&quot;&gt;RA&lt;/a&gt; means &quot;right, arithmetic&quot; (as opposed to RL for logical)</source>
          <target state="translated">将参数右移（带符号）指定的位数（必须为非负数）。所述&lt;a href=&quot;ra&quot;&gt;RA&lt;/a&gt;装置&amp;ldquo;右算术&amp;rdquo;（相对于RL逻辑）</target>
        </trans-unit>
        <trans-unit id="5043c22cbbec3f3a95767439230311f3d6b9e1f7" translate="yes" xml:space="preserve">
          <source>Shift the argument right (unsigned) by the specified number of bits (which must be non-negative). The &lt;a href=&quot;rl&quot;&gt;RL&lt;/a&gt; means &quot;right, logical&quot; (as opposed to RA for arithmetic)</source>
          <target state="translated">将参数右移（无符号）指定的位数（必须为非负数）。所述&lt;a href=&quot;rl&quot;&gt;RL&lt;/a&gt;手段&amp;ldquo;权利，逻辑&amp;rdquo;（相对于RA用于算术）</target>
        </trans-unit>
        <trans-unit id="51b6bbae92783fa587d037a508b5389c9ab60376" translate="yes" xml:space="preserve">
          <source>Shift the argument right by the specified number of bits (which must be non-negative). The &lt;a href=&quot;rl&quot;&gt;RL&lt;/a&gt; means &quot;right, logical&quot; (as opposed to RA for arithmetic) (although an arithmetic right shift wouldn't make sense for Word#)</source>
          <target state="translated">将参数右移指定的位数（必须为非负数）。该&lt;a href=&quot;rl&quot;&gt;RL&lt;/a&gt;的意思是&amp;ldquo;正确的，合乎逻辑的&amp;rdquo;（与RA算术）（虽然算术右移不会做出词＃感）</target>
        </trans-unit>
        <trans-unit id="0619240237ce131da774f1374298d4c953fc7e8d" translate="yes" xml:space="preserve">
          <source>Shift the first argument right by the specified number of bits, which must be non-negative and smaller than the number of bits in the type.</source>
          <target state="translated">将第一个参数右移指定的位数,必须是非负数,且小于类型中的位数。</target>
        </trans-unit>
        <trans-unit id="46adb6ebe5f10576d4b174f20323e6c4db2a6e91" translate="yes" xml:space="preserve">
          <source>Shift the first argument right by the specified number of bits. The result is undefined for negative shift amounts and shift amounts greater or equal to the &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt;. Some instances may throw an &lt;code&gt;&lt;a href=&quot;control-exception#v:Overflow&quot;&gt;Overflow&lt;/a&gt;&lt;/code&gt; exception if given a negative input.</source>
          <target state="translated">将第一个参数右移指定的位数。对于负移位量和大于或等于 &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; 的移位量，结果是不确定的。如果输入为负，则某些实例可能会引发 &lt;code&gt;&lt;a href=&quot;control-exception#v:Overflow&quot;&gt;Overflow&lt;/a&gt;&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="1a32afa70276a01c18c059113ba751b05104a74c" translate="yes" xml:space="preserve">
          <source>Shift-left operation</source>
          <target state="translated">左移操作</target>
        </trans-unit>
        <trans-unit id="0c5bc1ae01ce5504f9c4592b24f607b48210b732" translate="yes" xml:space="preserve">
          <source>Shifts</source>
          <target state="translated">Shifts</target>
        </trans-unit>
        <trans-unit id="08e0b171e80174af8f80564fa9b86dd93a7ae3d6" translate="yes" xml:space="preserve">
          <source>ShmOpenFlags</source>
          <target state="translated">ShmOpenFlags</target>
        </trans-unit>
        <trans-unit id="95895f33c6a9f0dfa8b81159786f55bbd7ac5a0d" translate="yes" xml:space="preserve">
          <source>Short-circuit folds</source>
          <target state="translated">短路折叠</target>
        </trans-unit>
        <trans-unit id="4201119b032db5c4951c0cb35d2d2de5c804364c" translate="yes" xml:space="preserve">
          <source>Short-circuiting</source>
          <target state="translated">Short-circuiting</target>
        </trans-unit>
        <trans-unit id="3544188ea4cceda2e27a126288058ee4da4a27f9" translate="yes" xml:space="preserve">
          <source>ShortByteString</source>
          <target state="translated">ShortByteString</target>
        </trans-unit>
        <trans-unit id="6573672f191fd1aa7184c9c7463aac2307f40385" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字母的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="56e27a99e38741b3b87777b7c4dc04c2829c5d08" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="dfdd9446387fcb0ec3c52de0f37815bd0ead1c76" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="b29fa1327fbe2d0a9435aa142e5fe6a7fa89516a" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="bdcf7077aa810b8c43c689c42f8ac17e0857c869" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="c5b3299b64f41e53c5656a894b54bb0f75c7a562" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="a7b69106f4f5891e3677d2928483100449c294dc" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="cdc270bd4463bfc79b05862c35bff48530d61308" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="f85f67b14e8e5a59ca6c871a3e2a191d9ce10be2" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="c5930a3963156e2a5c930d8f980579a40e8741f5" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="d261053f7798346589e438e38d4551a0ed78fdbf" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="30ed90abafb2a2cdf1f6c12eb075d06480cadf66" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="4b979b0f99707dcc9955d6e53d501cfa19bc7cac" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word32&quot;&gt;Word32&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="4fc6b5d04646492d4498d26eb286aae109029911" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="e18fc21a23bff33729f2a7c124cb46b96e38390b" translate="yes" xml:space="preserve">
          <source>Shortest hexadecimal encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; using lower-case characters.</source>
          <target state="translated">使用小写字符的 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 的最短十六进制编码。</target>
        </trans-unit>
        <trans-unit id="60afd75a2b48bdc652a0df2879db9c8e99176f89" translate="yes" xml:space="preserve">
          <source>Should rather be called &lt;code&gt;intToInteger&lt;/code&gt;</source>
          <target state="translated">应该被称为 &lt;code&gt;intToInteger&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="038bf6d0706d4605e93d495d1dd3f386418854e1" translate="yes" xml:space="preserve">
          <source>Should satisfy the law:</source>
          <target state="translated">应满足法律。</target>
        </trans-unit>
        <trans-unit id="df01aa5e87d9f37c0304ad2ad1f465aabd71c890" translate="yes" xml:space="preserve">
          <source>Should the RTS produce a cost-center summary?</source>
          <target state="translated">RTS是否应编制成本中心摘要?</target>
        </trans-unit>
        <trans-unit id="bf378608eeb65194b94d70b91defec0ecbb44b40" translate="yes" xml:space="preserve">
          <source>Should the handler need to abort processing, it should use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; an exception (preferably a &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:UnicodeException&quot;&gt;UnicodeException&lt;/a&gt;&lt;/code&gt;). It may use the description provided to construct a more helpful error report.</source>
          <target state="translated">如果处理程序需要中止处理，则应使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; 异常（最好是 &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:UnicodeException&quot;&gt;UnicodeException&lt;/a&gt;&lt;/code&gt; ）。它可以使用提供的描述来构建更有用的错误报告。</target>
        </trans-unit>
        <trans-unit id="923b18d477f2cd41d3c8498a9969502f09a82ce0" translate="yes" xml:space="preserve">
          <source>Should the handler need to abort processing, it should use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; an exception (preferably a &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:UnicodeException&quot;&gt;UnicodeException&lt;/a&gt;&lt;/code&gt;). It may use the description provided to construct a more helpful error report.</source>
          <target state="translated">如果处理程序需要中止处理，则应使用 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; 异常（最好是 &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:UnicodeException&quot;&gt;UnicodeException&lt;/a&gt;&lt;/code&gt; ）。它可以使用提供的描述来构建更有用的错误报告。</target>
        </trans-unit>
        <trans-unit id="554b4edbf1375b08df9085cbde94c81847f401e0" translate="yes" xml:space="preserve">
          <source>Should the handler need to abort processing, it should use &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; an exception (preferably a &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:UnicodeException&quot;&gt;UnicodeException&lt;/a&gt;&lt;/code&gt;). It may use the description provided to construct a more helpful error report.</source>
          <target state="translated">如果处理程序需要中止处理，则应使用 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:throw&quot;&gt;throw&lt;/a&gt;&lt;/code&gt; 异常（最好是 &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:UnicodeException&quot;&gt;UnicodeException&lt;/a&gt;&lt;/code&gt; ）。它可以使用提供的描述来构建更有用的错误报告。</target>
        </trans-unit>
        <trans-unit id="4198e75e3af4d31ecdb60ac624c0fe4351c8180d" translate="yes" xml:space="preserve">
          <source>Should we produce a summary of the garbage collector statistics after the program has exited?</source>
          <target state="translated">我们是否应该在程序退出后产生一个垃圾收集器的统计摘要?</target>
        </trans-unit>
        <trans-unit id="3c652c65622492bec520d3119019e65c87e27305" translate="yes" xml:space="preserve">
          <source>Should you wish to see levity polymorphism in your types, enable the flag &lt;a href=&quot;#ghc-flag--fprint-explicit-runtime-reps&quot;&gt;&lt;code&gt;-fprint-explicit-runtime-reps&lt;/code&gt;&lt;/a&gt;. For example,</source>
          <target state="translated">如果您希望看到类型中的levity多态性，请启用标志&lt;a href=&quot;#ghc-flag--fprint-explicit-runtime-reps&quot;&gt; &lt;code&gt;-fprint-explicit-runtime-reps&lt;/code&gt; &lt;/a&gt;。例如，</target>
        </trans-unit>
        <trans-unit id="2895242999379ba36350c153d4bfcf8184653646" translate="yes" xml:space="preserve">
          <source>Should you wish to see levity polymorphism in your types, enable the flag &lt;a href=&quot;using#ghc-flag--fprint-explicit-runtime-reps&quot;&gt;&lt;code&gt;-fprint-explicit-runtime-reps&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果您希望看到类型中的levity多态性，请启用标志&lt;a href=&quot;using#ghc-flag--fprint-explicit-runtime-reps&quot;&gt; &lt;code&gt;-fprint-explicit-runtime-reps&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="21b265b29551b11438c8fce43d62f0508b9c3b80" translate="yes" xml:space="preserve">
          <source>ShouldRetainCAFs</source>
          <target state="translated">ShouldRetainCAFs</target>
        </trans-unit>
        <trans-unit id="d97d1ee339e4eeaba8cac91dca37c8b4ec8f5501" translate="yes" xml:space="preserve">
          <source>Show</source>
          <target state="translated">Show</target>
        </trans-unit>
        <trans-unit id="117d29428688243aaaaab142ae449651dc6629f6" translate="yes" xml:space="preserve">
          <source>Show &lt;em&gt;non-negative&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; numbers in base 10.</source>
          <target state="translated">显示以10为底的&lt;em&gt;非负&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="acf1cf75ee8f171bde11dd0e3e91773a691821fd" translate="yes" xml:space="preserve">
          <source>Show &lt;em&gt;non-negative&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; numbers in base 16.</source>
          <target state="translated">显示以16为底的&lt;em&gt;非负&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56a6c6a7bb27d30a360d75cd09a099c690e0b00e" translate="yes" xml:space="preserve">
          <source>Show &lt;em&gt;non-negative&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; numbers in base 8.</source>
          <target state="translated">显示以8为底​​的&lt;em&gt;非负&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e3b232efc848d3cdba797e3bc15a04962a2670f" translate="yes" xml:space="preserve">
          <source>Show CoreToStg output</source>
          <target state="translated">显示CoreToStg输出</target>
        </trans-unit>
        <trans-unit id="f6bbb62ea9eafa153dda5dc2ee2f981379363988" translate="yes" xml:space="preserve">
          <source>Show a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; as a &lt;code&gt;[String]&lt;/code&gt;</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; 显示为 &lt;code&gt;[String]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8cd9f8ae0b4f88e62f250dedec4d7ad79711b70c" translate="yes" xml:space="preserve">
          <source>Show a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; as a &lt;code&gt;[String]&lt;/code&gt;</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; 显示为 &lt;code&gt;[String]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="16e2f460802c9bd67a7fd057be8dc3617ffb09ba" translate="yes" xml:space="preserve">
          <source>Show a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; as a &lt;code&gt;[String]&lt;/code&gt;</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-stack-ccs#t:CostCentreStack&quot;&gt;CostCentreStack&lt;/a&gt;&lt;/code&gt; 显示为 &lt;code&gt;[String]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13692eca48186ec0ecd895780a325fda9e13feba" translate="yes" xml:space="preserve">
          <source>Show a floating-point value in the hexadecimal format, similar to the &lt;code&gt;%a&lt;/code&gt; specifier in C's printf.</source>
          <target state="translated">以十六进制格式显示浮点值，类似于C的printf中的 &lt;code&gt;%a&lt;/code&gt; 指定符。</target>
        </trans-unit>
        <trans-unit id="f913e71ca89b869c42305e4cf638482299992887" translate="yes" xml:space="preserve">
          <source>Show a list (using square brackets and commas), given a function for showing elements.</source>
          <target state="translated">显示一个列表(使用方括号和逗号),给定一个显示元素的函数。</target>
        </trans-unit>
        <trans-unit id="e43e221ce3f46ebb3bf206d35b3380250ce6a74f" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value to full precision, using standard decimal notation for arguments whose absolute value lies between &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;9,999,999&lt;/code&gt;, and scientific notation otherwise.</source>
          <target state="translated">使用标准的十进制表示法显示绝对值介于 &lt;code&gt;0.1&lt;/code&gt; 到 &lt;code&gt;9,999,999&lt;/code&gt; 之间的实数，以全精度显示带符号的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 值，否则使用科学计数法。</target>
        </trans-unit>
        <trans-unit id="acb80109bd5ef5d33f98c9ae9e62bef32eb1a9f4" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value to full precision, using standard decimal notation for arguments whose absolute value lies between &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;9,999,999&lt;/code&gt;, and scientific notation otherwise.</source>
          <target state="translated">使用标准的十进制符号表示绝对值介于 &lt;code&gt;0.1&lt;/code&gt; 到 &lt;code&gt;9,999,999&lt;/code&gt; 之间的自变量，以完全精度显示带符号的 &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 值，否则使用科学计数法。</target>
        </trans-unit>
        <trans-unit id="74d4c6a537d33866b5e027436caa379eddad6fff" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value to full precision, using standard decimal notation for arguments whose absolute value lies between &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;9,999,999&lt;/code&gt;, and scientific notation otherwise.</source>
          <target state="translated">使用标准的十进制符号表示绝对值介于 &lt;code&gt;0.1&lt;/code&gt; 到 &lt;code&gt;9,999,999&lt;/code&gt; 之间的自变量，以完全精度显示带符号的 &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 值，否则使用科学计数法。</target>
        </trans-unit>
        <trans-unit id="655607e0094501ed2be906fe48ca250abcfa4446" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value to full precision using standard decimal notation for arguments whose absolute value lies between &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;9,999,999&lt;/code&gt;, and scientific notation otherwise.</source>
          <target state="translated">对于绝对值在 &lt;code&gt;0.1&lt;/code&gt; 到 &lt;code&gt;9,999,999&lt;/code&gt; 之间的参数，使用标准的十进制表示法将带符号的 &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 值显示为全精度，否则使用科学计数法。</target>
        </trans-unit>
        <trans-unit id="7833c1f677da9a57a749b69c54994e027b564fc2" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value to full precision using standard decimal notation for arguments whose absolute value lies between &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;9,999,999&lt;/code&gt;, and scientific notation otherwise.</source>
          <target state="translated">对于绝对值在 &lt;code&gt;0.1&lt;/code&gt; 到 &lt;code&gt;9,999,999&lt;/code&gt; 之间的参数，使用标准的十进制表示法将带符号的 &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 值显示为全精度，否则使用科学计数法。</target>
        </trans-unit>
        <trans-unit id="83475c788fb6600a77565e8fbf321c1cdb3d99a1" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value using scientific (exponential) notation (e.g. &lt;code&gt;2.45e2&lt;/code&gt;, &lt;code&gt;1.5e-3&lt;/code&gt;).</source>
          <target state="translated">显示一个签名 &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 用科学（指数）符号值（例如 &lt;code&gt;2.45e2&lt;/code&gt; ， &lt;code&gt;1.5e-3&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="02e6ea9af4efca08b8f3c6e64035d16e99b21d5b" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value using standard decimal notation (e.g. &lt;code&gt;245000&lt;/code&gt;, &lt;code&gt;0.0015&lt;/code&gt;).</source>
          <target state="translated">显示一个签名 &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 使用标准十进制形式（例如，值 &lt;code&gt;245000&lt;/code&gt; ， &lt;code&gt;0.0015&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="03f7fa01d32f4e2f9b54104be5978b502ea8cb9f" translate="yes" xml:space="preserve">
          <source>Show a signed &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; value using standard decimal notation for arguments whose absolute value lies between &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;9,999,999&lt;/code&gt;, and scientific notation otherwise.</source>
          <target state="translated">对于绝对值在 &lt;code&gt;0.1&lt;/code&gt; 到 &lt;code&gt;9,999,999&lt;/code&gt; 之间的参数，使用标准的十进制表示法显示带符号的 &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 值，否则使用科学计数法。</target>
        </trans-unit>
        <trans-unit id="eaf538a2c78e6687f4dbe685bf90666dd8d48144" translate="yes" xml:space="preserve">
          <source>Show a type representation</source>
          <target state="translated">显示类型表示</target>
        </trans-unit>
        <trans-unit id="024ac7d8d11b4e2986b03a249f8abd0c904d123f" translate="yes" xml:space="preserve">
          <source>Show a value in the format, if representable</source>
          <target state="translated">显示一个格式的值,如果可以表示的话。</target>
        </trans-unit>
        <trans-unit id="4b7a4151b67efe9cefbd5725d97622068e6694c5" translate="yes" xml:space="preserve">
          <source>Show a value in the format, or error if unrepresentable</source>
          <target state="translated">显示格式中的值,如果无法表示则显示错误。</target>
        </trans-unit>
        <trans-unit id="4ac9419264b8cd5acd5dfd4d21b01a8b3e2d3532" translate="yes" xml:space="preserve">
          <source>Show allocation and runtime statistics for various stages of compilation.</source>
          <target state="translated">显示编译的各个阶段的分配和运行时间统计。</target>
        </trans-unit>
        <trans-unit id="83516217e9b3bdb2505c8054e270cdc1bfa38ed1" translate="yes" xml:space="preserve">
          <source>Show allocation and runtime statistics for various stages of compilation. Allocations are measured in bytes. Timings are measured in milliseconds.</source>
          <target state="translated">显示不同编译阶段的分配和运行时间统计。分配量以字节为单位。时间以毫秒为单位。</target>
        </trans-unit>
        <trans-unit id="a5efb61f79bd9234a002a9cb9f057671d8e47bf1" translate="yes" xml:space="preserve">
          <source>Show constraints when reporting typed holes.</source>
          <target state="translated">报告打孔时显示约束条件。</target>
        </trans-unit>
        <trans-unit id="9a147147deb6493ac159aee5669b9717aef338ff" translate="yes" xml:space="preserve">
          <source>Show in ISO 8601 Ordinal Date format (yyyy-ddd)</source>
          <target state="translated">以ISO 8601顺序日期格式显示(yyy-ddd)。</target>
        </trans-unit>
        <trans-unit id="afb826724b2cd9f2d602f35271085b26f8512996" translate="yes" xml:space="preserve">
          <source>Show in ISO 8601 Week Date format as yyyy-Www-d (e.g. &quot;2006-W46-3&quot;).</source>
          <target state="translated">以ISO 8601周日期格式显示为yyy-Www-d(如 &quot;2006-W46-3&quot;)。</target>
        </trans-unit>
        <trans-unit id="556868b631229aa9d8ff5b6afc0f4ed6fa7dcdab" translate="yes" xml:space="preserve">
          <source>Show in ISO 8601 format (yyyy-mm-dd)</source>
          <target state="translated">以ISO 8601格式显示(yyy-mm-dd)。</target>
        </trans-unit>
        <trans-unit id="4961f0e3173af1c0d92452eecdeec2827dc30124" translate="yes" xml:space="preserve">
          <source>Show in proleptic Julian year and day format (yyyy-ddd)</source>
          <target state="translated">显示为无序的Julian年和日格式(yyy-ddd)</target>
        </trans-unit>
        <trans-unit id="3738b3260929b65ec16b653b3c3a9efae2f8f165" translate="yes" xml:space="preserve">
          <source>Show in the most commonly used ISO 8601 format.</source>
          <target state="translated">以最常用的ISO 8601格式显示。</target>
        </trans-unit>
        <trans-unit id="40c270f2bac6fc2501d4cef99e3eb8e339b58924" translate="yes" xml:space="preserve">
          <source>Show just a single field of the installed package description for &lt;code&gt;P&lt;/code&gt;. Multiple fields can be selected by separating them with commas</source>
          <target state="translated">仅显示 &lt;code&gt;P&lt;/code&gt; 的已安装软件包描述的单个字段。可以使用逗号分隔多个字段</target>
        </trans-unit>
        <trans-unit id="d0faea938c36bd656177bef1c36b6444e9ed91c5" translate="yes" xml:space="preserve">
          <source>Show output from each STG-to-STG pass</source>
          <target state="translated">显示每次STG到STG的输出。</target>
        </trans-unit>
        <trans-unit id="0ed1cebcb7a9bc78d1767f4efa25a6ddab123221" translate="yes" xml:space="preserve">
          <source>Show output from each core-to-core pass</source>
          <target state="translated">显示每个核对核通道的输出</target>
        </trans-unit>
        <trans-unit id="e4b24a50e7f3934afbfc83402685bb6ced50bb4b" translate="yes" xml:space="preserve">
          <source>Show output from main C-\- pipeline passes</source>
          <target state="translated">显示主要的C-/C-管道通道的输出</target>
        </trans-unit>
        <trans-unit id="b5ae6859ddc29cf979e805a4215774d7885bef31" translate="yes" xml:space="preserve">
          <source>Show output from main C-\- pipeline passes (grouped by proc)</source>
          <target state="translated">显示主要C-/C-管道通道的输出(按proc分组)。</target>
        </trans-unit>
        <trans-unit id="70bce662e9062620f80815f21cc16672010761be" translate="yes" xml:space="preserve">
          <source>Show output of last STG pass.</source>
          <target state="translated">显示最后一个STG通道的输出。</target>
        </trans-unit>
        <trans-unit id="40203dda604b39e83b98b0160a4fa91c962373fb" translate="yes" xml:space="preserve">
          <source>Show statistics for fast string usage when finished</source>
          <target state="translated">完成后显示快速字符串使用的统计数据</target>
        </trans-unit>
        <trans-unit id="a504ea4918a73e784191cf8cadcc145e4baef3fb" translate="yes" xml:space="preserve">
          <source>Show statistics on the usage of fast strings by the compiler.</source>
          <target state="translated">显示编译器使用快速字符串的统计数据。</target>
        </trans-unit>
        <trans-unit id="15f0977262d8b15de95a92064ddda120a6abc341" translate="yes" xml:space="preserve">
          <source>Show the bindings made at the prompt and their types.</source>
          <target state="translated">显示在提示下所做的绑定及其类型。</target>
        </trans-unit>
        <trans-unit id="28f89a7efb551473fa814d00df8904658b42a4bc" translate="yes" xml:space="preserve">
          <source>Show the current working directory (as set via &lt;a href=&quot;#ghci-cmd-:cd&quot;&gt;&lt;code&gt;:cd&lt;/code&gt;&lt;/a&gt; command), as well as the list of directories searched for source files (as set by the &lt;code&gt;-i&lt;/code&gt; option).</source>
          <target state="translated">显示当前工作目录（通过&lt;a href=&quot;#ghci-cmd-:cd&quot;&gt; &lt;code&gt;:cd&lt;/code&gt; &lt;/a&gt;命令设置），以及搜索源文件的目录列表（通过 &lt;code&gt;-i&lt;/code&gt; 选项设置）。</target>
        </trans-unit>
        <trans-unit id="06a3a8fa8e767a5deebcbb315f19467f070333f6" translate="yes" xml:space="preserve">
          <source>Show the currently active language flags for expressions typed at the prompt (see also &lt;a href=&quot;#ghci-cmd-:seti&quot;&gt;&lt;code&gt;:seti&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">显示在提示符下键入的表达式的当前活动语言标记（另请参见&lt;a href=&quot;#ghci-cmd-:seti&quot;&gt; &lt;code&gt;:seti&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="53c0a868fbcfa7a64327e51999687a40dba89052" translate="yes" xml:space="preserve">
          <source>Show the currently active language flags for source files.</source>
          <target state="translated">显示源文件的当前活动语言标志。</target>
        </trans-unit>
        <trans-unit id="7e7f8e31c3c7b636fff61336a41f3cf5933177b6" translate="yes" xml:space="preserve">
          <source>Show the currently active package flags, as well as the list of packages currently loaded.</source>
          <target state="translated">显示当前活动的软件包标志,以及当前加载的软件包列表。</target>
        </trans-unit>
        <trans-unit id="5574acbc151b9dd07bf6ae5d8664d6f13a1a82bc" translate="yes" xml:space="preserve">
          <source>Show the differences vs. the old interface</source>
          <target state="translated">显示与旧界面的差异</target>
        </trans-unit>
        <trans-unit id="a81a9150b94eae9fbd51cfd6db684dd8e5f3f837" translate="yes" xml:space="preserve">
          <source>Show the imports that are currently in force, as created by &lt;code&gt;import&lt;/code&gt; and &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt; commands.</source>
          <target state="translated">显示由 &lt;code&gt;import&lt;/code&gt; 和&lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt;命令创建的当前有效的导入。</target>
        </trans-unit>
        <trans-unit id="34b75e6c8dfbe2ca768a85bdc7bd776bfe32ccef" translate="yes" xml:space="preserve">
          <source>Show the list of modules currently loaded.</source>
          <target state="translated">显示当前加载的模块列表。</target>
        </trans-unit>
        <trans-unit id="31b56e398b4d864e4d7a8a31be37cb76a8a54c5f" translate="yes" xml:space="preserve">
          <source>Show the names of modules that GHCi loaded after a &lt;a href=&quot;ghci#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">在&lt;a href=&quot;ghci#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt;命令后显示GHCi加载的模块的名称。</target>
        </trans-unit>
        <trans-unit id="25ab7debc44d05482144313b87da47401942243d" translate="yes" xml:space="preserve">
          <source>Show the output of CoreToStg pass.</source>
          <target state="translated">显示CoreToStg pass的输出。</target>
        </trans-unit>
        <trans-unit id="b58222d59ce5f7ecd6949b5835cc64ddea5909ec" translate="yes" xml:space="preserve">
          <source>Show the output of each &lt;em&gt;iteration&lt;/em&gt; of the simplifier (each run of the simplifier has a maximum number of iterations, normally 4).</source>
          <target state="translated">显示简化器每次&lt;em&gt;迭代&lt;/em&gt;的输出（简化器的每次运行都具有最大迭代次数，通常为4）。</target>
        </trans-unit>
        <trans-unit id="3862e8bc3d8608ff50d37aec477df5fe81fa6fa0" translate="yes" xml:space="preserve">
          <source>Show the output of the intermediate Core-to-Core pass. (&lt;em&gt;lots&lt;/em&gt; of output!) So: when we&amp;rsquo;re really desperate:</source>
          <target state="translated">显示中间&amp;ldquo;核心到核心&amp;rdquo;通道的输出。（输出&lt;em&gt;很多&lt;/em&gt;！）所以：当我们真的绝望时：</target>
        </trans-unit>
        <trans-unit id="1be64e20ffc163ff32f6f1057b29216586a7df33" translate="yes" xml:space="preserve">
          <source>Show the output of the intermediate STG-to-STG pass. (&lt;em&gt;lots&lt;/em&gt; of output!)</source>
          <target state="translated">显示中间STG到STG通道的输出。（&lt;em&gt;很多&lt;/em&gt;输出！）</target>
        </trans-unit>
        <trans-unit id="adfd8257fe95d91ad70abd2b9e6fbaba3bb057c5" translate="yes" xml:space="preserve">
          <source>Show the output of the last STG pass before we generate Cmm.</source>
          <target state="translated">在我们生成Cmm之前,显示最后一个STG通道的输出。</target>
        </trans-unit>
        <trans-unit id="68d087ea4f9b35e73575659a33a92461b792bfc5" translate="yes" xml:space="preserve">
          <source>Show the output of the unarise pass.</source>
          <target state="translated">显示unarise pass的输出。</target>
        </trans-unit>
        <trans-unit id="3f0d98a1ccfebb8cc2a096ec79bf4121a7bd5e58" translate="yes" xml:space="preserve">
          <source>Show the text as is.</source>
          <target state="translated">按原样显示文本。</target>
        </trans-unit>
        <trans-unit id="45e992ad602584684c807ff6d3b437e31050c34d" translate="yes" xml:space="preserve">
          <source>Show unarised STG</source>
          <target state="translated">显示未化验的STG</target>
        </trans-unit>
        <trans-unit id="18ff03ed114fc78065d8eacccc0669031fb6bab0" translate="yes" xml:space="preserve">
          <source>Show1</source>
          <target state="translated">Show1</target>
        </trans-unit>
        <trans-unit id="d3cc2be9d2d10bc7b577435ab1fbe4b427d0047b" translate="yes" xml:space="preserve">
          <source>Show2</source>
          <target state="translated">Show2</target>
        </trans-unit>
        <trans-unit id="120ac7014d0d2d597e3d53430994b3b2374decd6" translate="yes" xml:space="preserve">
          <source>ShowS</source>
          <target state="translated">ShowS</target>
        </trans-unit>
        <trans-unit id="ba936cdd85da100a54393673071567edb3322323" translate="yes" xml:space="preserve">
          <source>ShowWindowControl</source>
          <target state="translated">ShowWindowControl</target>
        </trans-unit>
        <trans-unit id="163d8174ff4b0e67eec2f84dd87c1bb9e1da3b56" translate="yes" xml:space="preserve">
          <source>Showing</source>
          <target state="translated">Showing</target>
        </trans-unit>
        <trans-unit id="d518a310de1dd39d877eade8a197bc26d09255ea" translate="yes" xml:space="preserve">
          <source>Showing handle state (not portable: GHC only)</source>
          <target state="translated">显示手柄状态(不可移植:仅GHC)</target>
        </trans-unit>
        <trans-unit id="f391976f27b45e2222ab2b8077db82ced705b371" translate="yes" xml:space="preserve">
          <source>Shows a &lt;em&gt;non-negative&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; number using the base specified by the first argument, and the character representation specified by the second.</source>
          <target state="translated">使用第一个参数指定的基数和第二个参数指定的字符表示来显示&lt;em&gt;非负&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="052cc884d288956acfade3a9b77de2284678144f" translate="yes" xml:space="preserve">
          <source>Shows how to modify Reader content with &lt;code&gt;&lt;a href=&quot;control-monad-reader#v:local&quot;&gt;local&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">显示如何使用 &lt;code&gt;&lt;a href=&quot;control-monad-reader#v:local&quot;&gt;local&lt;/a&gt;&lt;/code&gt; 修改Reader的内容。</target>
        </trans-unit>
        <trans-unit id="82a0cb6f0185762603280b351ff4017f6c3a3963" translate="yes" xml:space="preserve">
          <source>Shrink mutable array to new specified size, in the specified state thread. The new size argument must be less than or equal to the current size as reported by &lt;code&gt;getSizeofSmallMutableArray#&lt;/code&gt;.</source>
          <target state="translated">在指定状态线程中将可变数组缩小到新的指定大小。新的size参数必须小于或等于 &lt;code&gt;getSizeofSmallMutableArray#&lt;/code&gt; 报告的当前大小。</target>
        </trans-unit>
        <trans-unit id="431bd266399ea144a2d9b12be58bd9d8f995dc7e" translate="yes" xml:space="preserve">
          <source>Shrink mutable array to new specified size, in the specified state thread. The new size argument must be less than or equal to the current size as reported by &lt;code&gt;sizeofSmallMutableArray#&lt;/code&gt;.</source>
          <target state="translated">在指定状态线程中将可变数组缩小为新的指定大小。新的size参数必须小于或等于 &lt;code&gt;sizeofSmallMutableArray#&lt;/code&gt; 报告的当前大小。</target>
        </trans-unit>
        <trans-unit id="f3b3f9764654b544c2aa41ecce303f8aa5d01a81" translate="yes" xml:space="preserve">
          <source>Shrink mutable byte array to new specified size (in bytes), in the specified state thread. The new size argument must be less than or equal to the current size as reported by &lt;code&gt;getSizeofMutableByteArray#&lt;/code&gt;.</source>
          <target state="translated">在指定状态线程中，将可变字节数组缩小为新的指定大小（以字节为单位）。新的size参数必须小于或等于 &lt;code&gt;getSizeofMutableByteArray#&lt;/code&gt; 报告的当前大小。</target>
        </trans-unit>
        <trans-unit id="c5812cf0f14ba366eb8c3d7b9c7c7e98044bde57" translate="yes" xml:space="preserve">
          <source>Shrink mutable byte array to new specified size (in bytes), in the specified state thread. The new size argument must be less than or equal to the current size as reported by &lt;code&gt;sizeofMutableArray#&lt;/code&gt;.</source>
          <target state="translated">在指定状态线程中，将可变字节数组缩小为新的指定大小（以字节为单位）。新的size参数必须小于或等于 &lt;code&gt;sizeofMutableArray#&lt;/code&gt; 报告的当前大小。</target>
        </trans-unit>
        <trans-unit id="8237232a974460e2a77d748af661ebdf08f6f9cd" translate="yes" xml:space="preserve">
          <source>Shrink mutable byte array to new specified size (in bytes), in the specified state thread. The new size argument must be less than or equal to the current size as reported by &lt;code&gt;sizeofMutableByteArray#&lt;/code&gt;.</source>
          <target state="translated">在指定状态线程中，将可变字节数组缩小为新的指定大小（以字节为单位）。新的size参数必须小于或等于 &lt;code&gt;sizeofMutableByteArray#&lt;/code&gt; 报告的当前大小。</target>
        </trans-unit>
        <trans-unit id="92b276ec3bcdf774d24b35d986ab30eb929cd4d9" translate="yes" xml:space="preserve">
          <source>Side note: the given performance bound is missing some messy terms that only really affect edge cases. Performance degrades smoothly from \( O(1) \) (for \( c = n \)) to \( O(n) \) (for \( c = 1 \)). The true bound is more like \( O \Bigl( \bigl(\frac{n}{c} - 1\bigr) (\log (c + 1)) + 1 \Bigr) \)</source>
          <target state="translated">附注:给定的性能约束缺少了一些乱七八糟的条款,而这些条款只影响边缘情况。性能从 \(O(1)\)(对于 \(c=n \))到 \(O(n)\)(对于 \(c=1 \))平滑地退化。真正的界线更像是(O \Bigl(\bigl(frac{n}{c}-1\bigr)(log (c+1))。+1 %)%)</target>
        </trans-unit>
        <trans-unit id="7bee6c65dcbca5aedde79f9f241234ee51b14d9e" translate="yes" xml:space="preserve">
          <source>SigChldInfo</source>
          <target state="translated">SigChldInfo</target>
        </trans-unit>
        <trans-unit id="6b4399d9583ca6e546dcf68dd0206536f7d46df1" translate="yes" xml:space="preserve">
          <source>Sign of a number. The functions &lt;code&gt;&lt;a href=&quot;ghc-num#v:abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-num#v:signum&quot;&gt;signum&lt;/a&gt;&lt;/code&gt; should satisfy the law:</source>
          <target state="translated">数字的符号。 &lt;code&gt;&lt;a href=&quot;ghc-num#v:abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-num#v:signum&quot;&gt;signum&lt;/a&gt;&lt;/code&gt; 函数应满足以下规则：</target>
        </trans-unit>
        <trans-unit id="8553aa30993045eb3e1c2102724a6deeb3be4c27" translate="yes" xml:space="preserve">
          <source>Sign of a number. The functions &lt;code&gt;&lt;a href=&quot;prelude#v:abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:signum&quot;&gt;signum&lt;/a&gt;&lt;/code&gt; should satisfy the law:</source>
          <target state="translated">数字的符号。 &lt;code&gt;&lt;a href=&quot;prelude#v:abs&quot;&gt;abs&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;prelude#v:signum&quot;&gt;signum&lt;/a&gt;&lt;/code&gt; 函数应满足以下规则：</target>
        </trans-unit>
        <trans-unit id="0466eed806bc3457c20fac70f46de4f930e80c3f" translate="yes" xml:space="preserve">
          <source>SignPlus</source>
          <target state="translated">SignPlus</target>
        </trans-unit>
        <trans-unit id="bbde2edb0df57d1da64ca238b03cd065ed3acfd5" translate="yes" xml:space="preserve">
          <source>SignSpace</source>
          <target state="translated">SignSpace</target>
        </trans-unit>
        <trans-unit id="27bed13a88c60350c3de92ec3820e1cc4f7d6ec3" translate="yes" xml:space="preserve">
          <source>Signal</source>
          <target state="translated">Signal</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
