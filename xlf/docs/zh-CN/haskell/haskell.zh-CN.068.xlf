<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="34d3235657a416a08470e9737648f234dc9b564c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of strings at newline characters. The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; 断线成以换行字符的字符串列表。结果字符串不包含换行符。</target>
        </trans-unit>
        <trans-unit id="d257a40bab1ece98bfd0554292505ad0b8197913" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:maximum&quot;&gt;maximum&lt;/a&gt;&lt;/code&gt; returns the maximum value from a list, which must be non-empty, finite, and of an ordered type. It is a special case of &lt;code&gt;&lt;a href=&quot;data-list#v:maximumBy&quot;&gt;maximumBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own comparison function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:maximum&quot;&gt;maximum&lt;/a&gt;&lt;/code&gt; 从列表返回最大值，该列表必须为非空，有限且有序类型。这是 &lt;code&gt;&lt;a href=&quot;data-list#v:maximumBy&quot;&gt;maximumBy&lt;/a&gt;&lt;/code&gt; 的特例，它允许程序员提供自己的比较功能。</target>
        </trans-unit>
        <trans-unit id="2b409d587004226531c4c952954bf3a65187c828" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:minimum&quot;&gt;minimum&lt;/a&gt;&lt;/code&gt; returns the minimum value from a list, which must be non-empty, finite, and of an ordered type. It is a special case of &lt;code&gt;&lt;a href=&quot;data-list#v:minimumBy&quot;&gt;minimumBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own comparison function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:minimum&quot;&gt;minimum&lt;/a&gt;&lt;/code&gt; 从列表中返回最小值，该列表必须为非空，有限且为有序类型。这是 &lt;code&gt;&lt;a href=&quot;data-list#v:minimumBy&quot;&gt;minimumBy&lt;/a&gt;&lt;/code&gt; 的特例，它允许程序员提供自己的比较功能。</target>
        </trans-unit>
        <trans-unit id="e9f4ff7773a89ae60de1da2aac827c2152bcd23c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; is the negation of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; 是对 &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt; 的否定。</target>
        </trans-unit>
        <trans-unit id="f5918c8d1b197ed3a0becf2b7ca664b38cc19f74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; returns the disjunction of a Boolean list. For the result to be &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, the list must be finite; &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value at a finite index of a finite or infinite list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; 返回布尔列表的析取。为了使结果为 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ，列表必须是有限的； &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ，然而，从结果 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 值在有限或无限列表的有限索引。</target>
        </trans-unit>
        <trans-unit id="a677af46f3e047946923afd966e750559d7d679a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt;&lt;code&gt;x&lt;/code&gt; is an infinite list, with &lt;code&gt;x&lt;/code&gt; the value of every element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; 是一个无限列表，其中 &lt;code&gt;x&lt;/code&gt; 是每个元素的值。</target>
        </trans-unit>
        <trans-unit id="255b893eabb96daf6eb78db66aa3d00d0aacdcd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n x&lt;/code&gt; is a list of length &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;x&lt;/code&gt; the value of every element. It is an instance of the more general &lt;code&gt;&lt;a href=&quot;data-list#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt;, in which &lt;code&gt;n&lt;/code&gt; may be of any integral type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n x&lt;/code&gt; 是长度为 &lt;code&gt;n&lt;/code&gt; 的列表，其中 &lt;code&gt;x&lt;/code&gt; 为每个元素的值。它是更通用的 &lt;code&gt;&lt;a href=&quot;data-list#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt; 的实例，其中 &lt;code&gt;n&lt;/code&gt; 可以是任何整数类型。</target>
        </trans-unit>
        <trans-unit id="c67f8631f7545bf0267d1a9d6bde0113e4bd6401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt;&lt;code&gt;xs&lt;/code&gt; returns the elements of &lt;code&gt;xs&lt;/code&gt; in reverse order. &lt;code&gt;xs&lt;/code&gt; must be finite.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; &lt;code&gt;xs&lt;/code&gt; 返回的元素 &lt;code&gt;xs&lt;/code&gt; 以相反的顺序。 &lt;code&gt;xs&lt;/code&gt; 必须是有限的。</target>
        </trans-unit>
        <trans-unit id="a62d4347f16c1bd4b0511872d22b982a5a62c665" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns a tuple where first element is longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt; and second element is the remainder of the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; 应用于谓词 &lt;code&gt;p&lt;/code&gt; 和列表 &lt;code&gt;xs&lt;/code&gt; ，返回一个元组，其中第一个元素是满足 &lt;code&gt;p&lt;/code&gt; 的元素的 &lt;code&gt;xs&lt;/code&gt; 的最长前缀（可能为空），第二个元素是列表的其余部分：</target>
        </trans-unit>
        <trans-unit id="bb6be4a3e987c474d875791b91a20621fb5f5954" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; is equivalent to &lt;code&gt;(&lt;a href=&quot;ghc-oldlist#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;ghc-oldlist#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 等效于 &lt;code&gt;(&lt;a href=&quot;ghc-oldlist#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;ghc-oldlist#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1dd2175a54ef8e7543543661ef61e6630901d48d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; returns a tuple where first element is &lt;code&gt;xs&lt;/code&gt; prefix of length &lt;code&gt;n&lt;/code&gt; and second element is the remainder of the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; 返回一个元组，其中第一个元素是长度为 &lt;code&gt;n&lt;/code&gt; 的 &lt;code&gt;xs&lt;/code&gt; 前缀，第二个元素是列表的其余部分：</target>
        </trans-unit>
        <trans-unit id="3a431017754ad67adc003f8933b8daf88f503298" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;, applied to a list &lt;code&gt;xs&lt;/code&gt;, returns the prefix of &lt;code&gt;xs&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt;, or &lt;code&gt;xs&lt;/code&gt; itself if &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-oldlist#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; ，施加到一个列表 &lt;code&gt;xs&lt;/code&gt; ，返回的前缀 &lt;code&gt;xs&lt;/code&gt; 长度的 &lt;code&gt;n&lt;/code&gt; ，或 &lt;code&gt;xs&lt;/code&gt; 本身如果 &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-oldlist#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9416f8ab38a6a456ce2ab46b5cb5ee0a714c32f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 应用于谓词 &lt;code&gt;p&lt;/code&gt; 和列表 &lt;code&gt;xs&lt;/code&gt; ，返回满足 &lt;code&gt;p&lt;/code&gt; 的元素 &lt;code&gt;xs&lt;/code&gt; 的最长前缀（可能为空）：</target>
        </trans-unit>
        <trans-unit id="ca3260bd80e445c70ebee8ef36bb94699933245d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt;. It joins lines, after appending a terminating newline to each.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; 是逆操作 &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; 。在每行末尾添加换行符后，它会合并行。</target>
        </trans-unit>
        <trans-unit id="2c343661c4c5b2ba3867b786e6ec22fcd23bab38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt;. It joins words with separating spaces.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; 的逆运算。它用分隔的空格连接单词。</target>
        </trans-unit>
        <trans-unit id="e15cac96c59f8fe5a7d26cbe12b261e69528ec10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; transforms a list of pairs into a list of first components and a list of second components.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; 将成对的列表转换为第一组件的列表和第二组件的列表。</target>
        </trans-unit>
        <trans-unit id="21fad57b58ceda8fc2c35e80ccbbf130647310a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of words, which were delimited by white space.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; 将字符串分解为单词列表，这些单词列表由空格分隔。</target>
        </trans-unit>
        <trans-unit id="dcdc3bff0e3d396c9659b6e0817fd3ca5435c91f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 可以进行列表融合，但仅限于其第一个list参数及其结果列表。</target>
        </trans-unit>
        <trans-unit id="a4c74902e41e6a90fe42cbdb4a15b17aa3612718" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; is right-lazy:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 是懒惰的：</target>
        </trans-unit>
        <trans-unit id="27dc5d2945ebc8477d5418718b41eff26f59f736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; takes three lists and returns a list of triples, analogous to &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; 接受三个列表并返回一个三元组列表，类似于 &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 。它能够进行列表融合，但仅限于其第一个列表参数及其结果列表。</target>
        </trans-unit>
        <trans-unit id="5704149f69dc4d065be3de2c92a9bfd3b028b253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 可以进行列表融合，但仅限于其第一个list参数及其结果列表。</target>
        </trans-unit>
        <trans-unit id="3067983166d12ffd7099880da0207ed3c82c3b10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; is right-lazy:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 是懒惰的：</target>
        </trans-unit>
        <trans-unit id="3b8a40cd1a39553a12b4e46d896437e11f11ae50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; parser for a record field, of the form &lt;code&gt;fieldName#=value&lt;/code&gt;. That is, an alphanumeric identifier &lt;code&gt;fieldName&lt;/code&gt; followed by the symbol &lt;code&gt;#&lt;/code&gt;. The second argument is a parser for the field value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; 记录器的解析器，其格式为 &lt;code&gt;fieldName#=value&lt;/code&gt; 。也就是说，一个字母数字标识符 &lt;code&gt;fieldName&lt;/code&gt; 后跟符号 &lt;code&gt;#&lt;/code&gt; 。第二个参数是字段值的解析器。</target>
        </trans-unit>
        <trans-unit id="ae5a5faeb26de5b3c48d6dd9e8be5375ec884457" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; parser for a record field, of the form &lt;code&gt;fieldName=value&lt;/code&gt;. The &lt;code&gt;fieldName&lt;/code&gt; must be an alphanumeric identifier; for symbols (operator-style) field names, e.g. &lt;code&gt;(#)&lt;/code&gt;, use &lt;code&gt;&lt;a href=&quot;ghc-read#v:readSymField&quot;&gt;readSymField&lt;/a&gt;&lt;/code&gt;). The second argument is a parser for the field value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; 解析器，获取格式为 &lt;code&gt;fieldName=value&lt;/code&gt; 的记录字段。的 &lt;code&gt;fieldName&lt;/code&gt; 的必须是一个字母数字标识符; 对于符号（操作符样式）字段名，例如 &lt;code&gt;(#)&lt;/code&gt; ，请使用 &lt;code&gt;&lt;a href=&quot;ghc-read#v:readSymField&quot;&gt;readSymField&lt;/a&gt;&lt;/code&gt; 。第二个参数是字段值的解析器。</target>
        </trans-unit>
        <trans-unit id="3da2aac9b80108a5b3b6a34b0e30c108d0d00cca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; parser for a symbol record field, of the form &lt;code&gt;(###)=value&lt;/code&gt; (where &lt;code&gt;###&lt;/code&gt; is the field name). The field name must be a symbol (operator-style), e.g. &lt;code&gt;(#)&lt;/code&gt;. For regular (alphanumeric) field names, use &lt;code&gt;&lt;a href=&quot;ghc-read#v:readField&quot;&gt;readField&lt;/a&gt;&lt;/code&gt;. The second argument is a parser for the field value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; 符号记录字段的解析器，格式为 &lt;code&gt;(###)=value&lt;/code&gt; （其中 &lt;code&gt;###&lt;/code&gt; 是字段名称）。字段名称必须是符号（操作符样式），例如 &lt;code&gt;(#)&lt;/code&gt; 。对于常规（字母数字）字段名称，请使用 &lt;code&gt;&lt;a href=&quot;ghc-read#v:readField&quot;&gt;readField&lt;/a&gt;&lt;/code&gt; 。第二个参数是字段值的解析器。</target>
        </trans-unit>
        <trans-unit id="fc1e4a49a842bcc7357116b4bcaf1dbd3fe4f53e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-read#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt; p&lt;/code&gt; parses what &lt;code&gt;p&lt;/code&gt; parses, but optionally surrounded with parentheses.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-read#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt; p&lt;/code&gt; 解析 &lt;code&gt;p&lt;/code&gt; 解析的内容，但可选地用括号括起来。</target>
        </trans-unit>
        <trans-unit id="8bae4abccfaabf546f2e1228b2518d60b461a6ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-read#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt; p&lt;/code&gt; parses what &lt;code&gt;p&lt;/code&gt; parses, but surrounded with parentheses.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-read#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt; p&lt;/code&gt; 解析 &lt;code&gt;p&lt;/code&gt; 解析的内容，但用括号括起来。</target>
        </trans-unit>
        <trans-unit id="567d3f90c45d29b23b2c186f5f5cc356673aa5cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt;, on the other hand, is based on a much more efficient &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readprec#t:ReadPrec&quot;&gt;ReadPrec&lt;/a&gt;&lt;/code&gt; datatype (a.k.a &quot;new-style parsers&quot;), but its definition relies on the use of the &lt;code&gt;RankNTypes&lt;/code&gt; language extension. Therefore, &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; (and its cousin, &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt;) are marked as GHC-only. Nevertheless, it is recommended to use &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; whenever possible for the efficiency improvements it brings.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 另一方面， readPrec基于效率更高的 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readprec#t:ReadPrec&quot;&gt;ReadPrec&lt;/a&gt;&lt;/code&gt; 数据类型（也称为&amp;ldquo;新型解析器&amp;rdquo;），但其定义依赖于 &lt;code&gt;RankNTypes&lt;/code&gt; 语言扩展的使用。因此， &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; （及其表亲 &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; ）被标记为仅GHC。但是，建议尽可能使用 &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 而不是 &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; 来提高效率。</target>
        </trans-unit>
        <trans-unit id="f818d33f49c36e5bd08eeae556f19678592545d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-real#v:ceiling&quot;&gt;ceiling&lt;/a&gt; x&lt;/code&gt; returns the least integer not less than &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-real#v:ceiling&quot;&gt;ceiling&lt;/a&gt; x&lt;/code&gt; 返回不小于 &lt;code&gt;x&lt;/code&gt; 的最小整数</target>
        </trans-unit>
        <trans-unit id="9c50aa2a62a618744936a20658cca1344b434a10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-real#v:floor&quot;&gt;floor&lt;/a&gt; x&lt;/code&gt; returns the greatest integer not greater than &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-real#v:floor&quot;&gt;floor&lt;/a&gt; x&lt;/code&gt; 返回不大于 &lt;code&gt;x&lt;/code&gt; 的最大整数</target>
        </trans-unit>
        <trans-unit id="319a905d94ae2e8f071c1798237712390429f2dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-real#v:gcd&quot;&gt;gcd&lt;/a&gt; x y&lt;/code&gt; is the non-negative factor of both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; of which every common factor of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; is also a factor; for example &lt;code&gt;&lt;a href=&quot;ghc-real#v:gcd&quot;&gt;gcd&lt;/a&gt; 4 2 = 2&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-real#v:gcd&quot;&gt;gcd&lt;/a&gt; (-4) 6 = 2&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-real#v:gcd&quot;&gt;gcd&lt;/a&gt; 0 4&lt;/code&gt; = &lt;code&gt;4&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;ghc-real#v:gcd&quot;&gt;gcd&lt;/a&gt; 0 0&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt;. (That is, the common divisor that is &quot;greatest&quot; in the divisibility preordering.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-real#v:gcd&quot;&gt;gcd&lt;/a&gt; x y&lt;/code&gt; 是两者的非负因子 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 其中的每一个共同的因子 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 也是一个因素; 例如 &lt;code&gt;&lt;a href=&quot;ghc-real#v:gcd&quot;&gt;gcd&lt;/a&gt; 4 2 = 2&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;ghc-real#v:gcd&quot;&gt;gcd&lt;/a&gt; (-4) 6 = 2&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;ghc-real#v:gcd&quot;&gt;gcd&lt;/a&gt; 0 4&lt;/code&gt; = &lt;code&gt;4&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;ghc-real#v:gcd&quot;&gt;gcd&lt;/a&gt; 0 0&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt; 。（即，除数预排序中&amp;ldquo;最大&amp;rdquo;的公共除数。）</target>
        </trans-unit>
        <trans-unit id="e92565e2a3dec9cdb3459eed5d5f0d227e08643d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-real#v:lcm&quot;&gt;lcm&lt;/a&gt; x y&lt;/code&gt; is the smallest positive integer that both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; divide.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-real#v:lcm&quot;&gt;lcm&lt;/a&gt; x y&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 均除的最小正整数。</target>
        </trans-unit>
        <trans-unit id="cb83bf837be47ed6a65ffe14ae13c31a18082e8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-real#v:reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt; is a subsidiary function used only in this module. It normalises a ratio by dividing both numerator and denominator by their greatest common divisor.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-real#v:reduce&quot;&gt;reduce&lt;/a&gt;&lt;/code&gt; 是仅在此模块中使用的辅助功能。通过将分子和分母除以它们的最大公约数来归一化比率。</target>
        </trans-unit>
        <trans-unit id="a9dd499cd9c9b751c0fca50154687b004edfff3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-real#v:round&quot;&gt;round&lt;/a&gt; x&lt;/code&gt; returns the nearest integer to &lt;code&gt;x&lt;/code&gt;; the even integer if &lt;code&gt;x&lt;/code&gt; is equidistant between two integers</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-real#v:round&quot;&gt;round&lt;/a&gt; x&lt;/code&gt; 将最接近的整数返回给 &lt;code&gt;x&lt;/code&gt; ；如果 &lt;code&gt;x&lt;/code&gt; 在两个整数之间等距，则为偶数整数</target>
        </trans-unit>
        <trans-unit id="b18f58d80977e91ef26ad42b2e08deecc2d7820e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-real#v:truncate&quot;&gt;truncate&lt;/a&gt; x&lt;/code&gt; returns the integer nearest &lt;code&gt;x&lt;/code&gt; between zero and &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-real#v:truncate&quot;&gt;truncate&lt;/a&gt; x&lt;/code&gt; 返回零和 &lt;code&gt;x&lt;/code&gt; 之间最接近 &lt;code&gt;x&lt;/code&gt; 的整数</target>
        </trans-unit>
        <trans-unit id="f18b7e588038bb2313fb65fa5f5ae38b5e024f32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-rts-flags#t:RtsTime&quot;&gt;RtsTime&lt;/a&gt;&lt;/code&gt; is defined as a &lt;code&gt;StgWord64&lt;/code&gt; in &lt;code&gt;stg/Types.h&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-rts-flags#t:RtsTime&quot;&gt;RtsTime&lt;/a&gt;&lt;/code&gt; 被定义为 &lt;code&gt;StgWord64&lt;/code&gt; 在 &lt;code&gt;stg/Types.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3914e0bcc8d1236c512d64770c07549eca388052" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-show#v:show&quot;&gt;show&lt;/a&gt; (Leaf 1 :^: Leaf 2 :^: Leaf 3)&lt;/code&gt; produces the string &lt;code&gt;&quot;Leaf 1 :^: (Leaf 2 :^: Leaf 3)&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-show#v:show&quot;&gt;show&lt;/a&gt; (Leaf 1 :^: Leaf 2 :^: Leaf 3)&lt;/code&gt; 产生字符串 &lt;code&gt;&quot;Leaf 1 :^: (Leaf 2 :^: Leaf 3)&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc45df7c2d0510c8aff5c5b3a84ba902911f4890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; should satisfy the law</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; 应该符合法律</target>
        </trans-unit>
        <trans-unit id="3eb99f6e79be6e92cc4c84aa3ae6ef2cf6ebfb21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-st#v:unsafeDupableInterleaveST&quot;&gt;unsafeDupableInterleaveST&lt;/a&gt;&lt;/code&gt; allows an &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be deferred lazily. When passed a value of type &lt;code&gt;ST a&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation will only be performed when the value of the &lt;code&gt;a&lt;/code&gt; is demanded.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-st#v:unsafeDupableInterleaveST&quot;&gt;unsafeDupableInterleaveST&lt;/a&gt;&lt;/code&gt; 允许延迟进行 &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算。当传递类型的值 &lt;code&gt;ST a&lt;/code&gt; ，所述 &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 的值时才会被执行的计算 &lt;code&gt;a&lt;/code&gt; 被征求。</target>
        </trans-unit>
        <trans-unit id="7912136bfe56b731805d99e4b630da55cbd9f2ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-st#v:unsafeInterleaveST&quot;&gt;unsafeInterleaveST&lt;/a&gt;&lt;/code&gt; allows an &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation to be deferred lazily. When passed a value of type &lt;code&gt;ST a&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation will only be performed when the value of the &lt;code&gt;a&lt;/code&gt; is demanded.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-st#v:unsafeInterleaveST&quot;&gt;unsafeInterleaveST&lt;/a&gt;&lt;/code&gt; 允许延迟进行 &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 计算。当传递类型的值 &lt;code&gt;ST a&lt;/code&gt; ，所述 &lt;code&gt;&lt;a href=&quot;ghc-st#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 的值时才会被执行的计算 &lt;code&gt;a&lt;/code&gt; 被征求。</target>
        </trans-unit>
        <trans-unit id="b4c9af8fda41ef6eb26ff7db581519d20c9414c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;s are a lightweight method of obtaining a partial call-stack at any point in the program.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 是一种轻量级的方法，可以在程序的任何位置获取部分调用堆栈。</target>
        </trans-unit>
        <trans-unit id="bed0ecabea47e9d304fac4c13dc87e914b8dc670" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;s do not interact with the RTS and do not require compilation with &lt;code&gt;-prof&lt;/code&gt;. On the other hand, as they are built up explicitly via the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; constraints, they will generally not contain as much information as the simulated call-stacks maintained by the RTS.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 不会与RTS交互，并且不需要使用 &lt;code&gt;-prof&lt;/code&gt; 进行编译。另一方面，由于它们是通过 &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; 约束显式构建的，因此它们通常不包含与RTS维护的模拟调用堆栈一样多的信息。</target>
        </trans-unit>
        <trans-unit id="0b54b6378609adfef6bcc92559ed48934566d6dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;s are a lightweight method of obtaining a partial call-stack at any point in the program.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 是一种轻量级的方法，可以在程序的任何位置获取部分调用堆栈。</target>
        </trans-unit>
        <trans-unit id="1ccdf2703d063754e5da79d77d000c1e4a8bdf62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;s do not interact with the RTS and do not require compilation with &lt;code&gt;-prof&lt;/code&gt;. On the other hand, as they are built up explicitly via the &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; constraints, they will generally not contain as much information as the simulated call-stacks maintained by the RTS.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 不会与RTS交互，并且不需要使用 &lt;code&gt;-prof&lt;/code&gt; 进行编译。另一方面，由于它们是通过 &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; 约束显式构建的，因此它们通常不包含与RTS维护的模拟调用堆栈一样多的信息。</target>
        </trans-unit>
        <trans-unit id="93b4a0b3ee1f7074fdbceb2404e3c332a0581142" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticPtrInfo&quot;&gt;StaticPtrInfo&lt;/a&gt;&lt;/code&gt; of the given &lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticPtr&quot;&gt;StaticPtr&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticPtrInfo&quot;&gt;StaticPtrInfo&lt;/a&gt;&lt;/code&gt; 给定的 &lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticPtr&quot;&gt;StaticPtr&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eaf127c76c486df4dbaba4066f38234d89487977" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-tophandler#v:runIO&quot;&gt;runIO&lt;/a&gt;&lt;/code&gt; is wrapped around every &lt;code&gt;foreign export&lt;/code&gt; and &lt;code&gt;foreign
 import &quot;wrapper&quot;&lt;/code&gt; to mop up any uncaught exceptions. Thus, the result of running &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; in a foreign-exported function is the same as in the main thread: it terminates the program.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-tophandler#v:runIO&quot;&gt;runIO&lt;/a&gt;&lt;/code&gt; 包裹在每个 &lt;code&gt;foreign export&lt;/code&gt; 和 &lt;code&gt;foreign import &quot;wrapper&quot;&lt;/code&gt; 以清除所有未捕获的异常。因此，在外部导出的函数中运行 &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; 的结果与在主线程中运行的结果相同：它终止程序。</target>
        </trans-unit>
        <trans-unit id="30e2557cd44bda005fab1056fa2bf589342d1921" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;ghc-tophandler#v:runMainIO&quot;&gt;runMainIO&lt;/a&gt;&lt;/code&gt; is wrapped around &lt;code&gt;&lt;a href=&quot;main#v:main&quot;&gt;main&lt;/a&gt;&lt;/code&gt; (or whatever main is called in the program). It catches otherwise uncaught exceptions, and also flushes stdout/stderr before exiting.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-tophandler#v:runMainIO&quot;&gt;runMainIO&lt;/a&gt;&lt;/code&gt; 包装在 &lt;code&gt;&lt;a href=&quot;main#v:main&quot;&gt;main&lt;/a&gt;&lt;/code&gt; （或程序中调用的main）周围。它会捕获其他未捕获的异常，并在退出前刷新stdout / stderr。</target>
        </trans-unit>
        <trans-unit id="0e33df6a525249c18105a29a873ed6404b98744d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:assert&quot;&gt;assert&lt;/a&gt;&lt;/code&gt; was applied to &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:assert&quot;&gt;assert&lt;/a&gt;&lt;/code&gt; 应用于 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ac0d90eaed26f78e7e904a221a7ec137823fb97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#t:ByteArray-35-&quot;&gt;ByteArray#&lt;/a&gt;&lt;/code&gt; size is an exact multiple of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#t:Word-35-&quot;&gt;Word#&lt;/a&gt;&lt;/code&gt; size</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#t:ByteArray-35-&quot;&gt;ByteArray#&lt;/a&gt;&lt;/code&gt; 大小是 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#t:Word-35-&quot;&gt;Word#&lt;/a&gt;&lt;/code&gt; 大小的整数倍</target>
        </trans-unit>
        <trans-unit id="2cfa58e5846605bc97f27d46b944d2cffadf6d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th#t:InstanceDec&quot;&gt;InstanceDec&lt;/a&gt;&lt;/code&gt; desribes a single instance of a class or type function. It is just a &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt;, but guaranteed to be one of the following:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th#t:InstanceDec&quot;&gt;InstanceDec&lt;/a&gt;&lt;/code&gt; 描述了一个类或类型函数的单个实例。它只是 &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt; ，但保证是以下之一：</target>
        </trans-unit>
        <trans-unit id="07bd31aaac16d5e33d0f79df81ab94bfb8d25b35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Name&quot;&gt;Name&lt;/a&gt;&lt;/code&gt;s can be constructed in several ways, which come with different name-capture guarantees (see &lt;a href=&quot;language-haskell-th-syntax#namecapture&quot;&gt;Language.Haskell.TH.Syntax&lt;/a&gt; for an explanation of name capture):</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Name&quot;&gt;Name&lt;/a&gt;&lt;/code&gt; 可以通过几种方式构造 Name，它们带有不同的名称捕获保证（有关名称捕获的说明，请参见&lt;a href=&quot;language-haskell-th-syntax#namecapture&quot;&gt; Language.Haskell.TH.Syntax&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="79e0fef24bf5f2a737953d8e70adf7276053b2a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:DataInstD&quot;&gt;DataInstD&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:NewtypeInstD&quot;&gt;NewtypeInstD&lt;/a&gt;&lt;/code&gt; (with empty derived &lt;code&gt;[&lt;a href=&quot;language-haskell-th#t:Name&quot;&gt;Name&lt;/a&gt;]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:DataInstD&quot;&gt;DataInstD&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:NewtypeInstD&quot;&gt;NewtypeInstD&lt;/a&gt;&lt;/code&gt; （带有空派生的 &lt;code&gt;[&lt;a href=&quot;language-haskell-th#t:Name&quot;&gt;Name&lt;/a&gt;]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3f8654d746f2c60644b5d2281313083cc9a1aa53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:InstanceD&quot;&gt;InstanceD&lt;/a&gt;&lt;/code&gt; (with empty &lt;code&gt;[&lt;a href=&quot;language-haskell-th#t:Dec&quot;&gt;Dec&lt;/a&gt;]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:InstanceD&quot;&gt;InstanceD&lt;/a&gt;&lt;/code&gt; （具有空的 &lt;code&gt;[&lt;a href=&quot;language-haskell-th#t:Dec&quot;&gt;Dec&lt;/a&gt;]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="d9c7ba6a896ef8663fc06d9c179a38c6ce1844ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupValueName&quot;&gt;lookupValueName&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; are similar to &lt;code&gt;'f&lt;/code&gt; and &lt;code&gt;''T&lt;/code&gt; respectively, but the &lt;code&gt;Name&lt;/code&gt;s are looked up at the point where the current splice is being run. These names can never be captured.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupValueName&quot;&gt;lookupValueName&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; 分别类似于 &lt;code&gt;'f&lt;/code&gt; 和 &lt;code&gt;''T&lt;/code&gt; ，但在运行当前接头的位置查找 &lt;code&gt;Name&lt;/code&gt; 。这些名称永远不会被捕获。</target>
        </trans-unit>
        <trans-unit id="dcbce836ad277a603ffcf7c220b9f06cb8eab87f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:mkName&quot;&gt;mkName&lt;/a&gt;&lt;/code&gt; generates a capturable name.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:mkName&quot;&gt;mkName&lt;/a&gt;&lt;/code&gt; 生成一个可捕获的名称。</target>
        </trans-unit>
        <trans-unit id="5c56cad08125fd33a494fa84bec89a27cd88b90a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:newName&quot;&gt;newName&lt;/a&gt;&lt;/code&gt; monadically generates a new name, which can never be captured.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:newName&quot;&gt;newName&lt;/a&gt;&lt;/code&gt; 单调生成一个新名称，该名称永远无法捕获。</target>
        </trans-unit>
        <trans-unit id="8c4147d27888b89b2c78b46305d524b8aa858515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reify&quot;&gt;reify&lt;/a&gt;&lt;/code&gt; looks up information about the &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Name&quot;&gt;Name&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reify&quot;&gt;reify&lt;/a&gt;&lt;/code&gt; 查找有关 &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Name&quot;&gt;Name&lt;/a&gt;&lt;/code&gt; 的信息。</target>
        </trans-unit>
        <trans-unit id="1232001b6fbae38e36c1cd90a7584f019a4964b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyConStrictness&quot;&gt;reifyConStrictness&lt;/a&gt;&lt;/code&gt; would return &lt;code&gt;[&lt;a href=&quot;language-haskell-th#v:DecidedLazy&quot;&gt;DecidedLazy&lt;/a&gt;, DecidedLazy]&lt;/code&gt; under most circumstances, but it would return &lt;code&gt;[&lt;a href=&quot;language-haskell-th#v:DecidedStrict&quot;&gt;DecidedStrict&lt;/a&gt;, DecidedStrict]&lt;/code&gt; if the &lt;code&gt;-XStrictData&lt;/code&gt; language extension was enabled.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyConStrictness&quot;&gt;reifyConStrictness&lt;/a&gt;&lt;/code&gt; 在大多数情况下， reifyConStrictness将返回 &lt;code&gt;[&lt;a href=&quot;language-haskell-th#v:DecidedLazy&quot;&gt;DecidedLazy&lt;/a&gt;, DecidedLazy]&lt;/code&gt; ，但如果启用了 &lt;code&gt;-XStrictData&lt;/code&gt; 语言扩展 &lt;code&gt;[&lt;a href=&quot;language-haskell-th#v:DecidedStrict&quot;&gt;DecidedStrict&lt;/a&gt;, DecidedStrict]&lt;/code&gt; 它将返回 [ &lt;a href=&quot;language-haskell-th#v:DecidedStrict&quot;&gt;DecidedStrict&lt;/a&gt;，DecidedStrict]。</target>
        </trans-unit>
        <trans-unit id="dc83d1bc9715c0147848c379b12c8b18d57a5085" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:dataToExpQ&quot;&gt;dataToExpQ&lt;/a&gt;&lt;/code&gt; converts a value to a 'Q Exp' representation of the same value, in the SYB style. It is generalized to take a function override type-specific cases; see &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:liftData&quot;&gt;liftData&lt;/a&gt;&lt;/code&gt; for a more commonly used variant.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:dataToExpQ&quot;&gt;dataToExpQ&lt;/a&gt;&lt;/code&gt; 以SYB样式将值转换为相同值的&amp;ldquo; Q Exp&amp;rdquo;表示。一般情况下，函数要覆盖特定于类型的情况；有关更常用的变体，请参见 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:liftData&quot;&gt;liftData&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a796695d16121f87b865283cf6538c18e0ac6eac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:dataToPatQ&quot;&gt;dataToPatQ&lt;/a&gt;&lt;/code&gt; converts a value to a 'Q Pat' representation of the same value, in the SYB style. It takes a function to handle type-specific cases, alternatively, pass &lt;code&gt;const Nothing&lt;/code&gt; to get default behavior.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:dataToPatQ&quot;&gt;dataToPatQ&lt;/a&gt;&lt;/code&gt; 以SYB样式将值转换为相同值的&amp;ldquo; Q Pat&amp;rdquo;表示。它需要一个函数来处理特定于类型的情况，或者，传递 &lt;code&gt;const Nothing&lt;/code&gt; 以获取默认行为。</target>
        </trans-unit>
        <trans-unit id="9649b818454081f402bceec28a692626aec7dcbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:dataToQa&quot;&gt;dataToQa&lt;/a&gt;&lt;/code&gt; is an internal utility function for constructing generic conversion functions from types with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#t:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; instances to various quasi-quoting representations. See the source of &lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:dataToExpQ&quot;&gt;dataToExpQ&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:dataToPatQ&quot;&gt;dataToPatQ&lt;/a&gt;&lt;/code&gt; for two example usages: &lt;code&gt;mkCon&lt;/code&gt;, &lt;code&gt;mkLit&lt;/code&gt; and &lt;code&gt;appQ&lt;/code&gt; are overloadable to account for different syntax for expressions and patterns; &lt;code&gt;antiQ&lt;/code&gt; allows you to override type-specific cases, a common usage is just &lt;code&gt;const Nothing&lt;/code&gt;, which results in no overloading.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:dataToQa&quot;&gt;dataToQa&lt;/a&gt;&lt;/code&gt; 是一个内部实用程序函数，用于构造通用转换函数，从具有 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#t:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; 实例的类型到各种准引用表示形式。有关两个示例用法，请参见 &lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:dataToExpQ&quot;&gt;dataToExpQ&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:dataToPatQ&quot;&gt;dataToPatQ&lt;/a&gt;&lt;/code&gt; 的来源： &lt;code&gt;mkCon&lt;/code&gt; ， &lt;code&gt;mkLit&lt;/code&gt; 和 &lt;code&gt;appQ&lt;/code&gt; 可重载以说明表达式和模式的不同语法。 &lt;code&gt;antiQ&lt;/code&gt; 允许您覆盖特定于类型的情况，常见用法只是 &lt;code&gt;const Nothing&lt;/code&gt; ，这不会导致任何重载。</target>
        </trans-unit>
        <trans-unit id="1d9999bf12ab30c952de4581c3e5219fe3da4a3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:quoteFile&quot;&gt;quoteFile&lt;/a&gt;&lt;/code&gt; takes a &lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#t:QuasiQuoter&quot;&gt;QuasiQuoter&lt;/a&gt;&lt;/code&gt; and lifts it into one that read the data out of a file. For example, suppose &lt;code&gt;asmq&lt;/code&gt; is an assembly-language quoter, so that you can write [asmq| ld r1, r2 |] as an expression. Then if you define &lt;code&gt;asmq_f = quoteFile asmq&lt;/code&gt;, then the quote [asmq_f|foo.s|] will take input from file &lt;code&gt;&quot;foo.s&quot;&lt;/code&gt; instead of the inline text</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#v:quoteFile&quot;&gt;quoteFile&lt;/a&gt;&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#t:QuasiQuoter&quot;&gt;QuasiQuoter&lt;/a&gt;&lt;/code&gt; 并将其提升为一个从文件中读取数据的程序。例如，假设 &lt;code&gt;asmq&lt;/code&gt; 是汇编语言引号，因此您可以编写[asmq | ld r1，r2 |]作为表达式。然后，如果定义 &lt;code&gt;asmq_f = quoteFile asmq&lt;/code&gt; ，则引号[asmq_f | foo.s |]将从文件 &lt;code&gt;&quot;foo.s&quot;&lt;/code&gt; 获取输入，而不是内联文本</target>
        </trans-unit>
        <trans-unit id="494cab9c250a45952ecb439d0268aa339e64f1eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:InstanceDec&quot;&gt;InstanceDec&lt;/a&gt;&lt;/code&gt; desribes a single instance of a class or type function. It is just a &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt;, but guaranteed to be one of the following:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:InstanceDec&quot;&gt;InstanceDec&lt;/a&gt;&lt;/code&gt; 描述了一个类或类型函数的单个实例。它只是 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt; ，但保证是以下之一：</target>
        </trans-unit>
        <trans-unit id="bd3b710ead83ecd7653b5b900b934a99e2f05f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; instances can be derived automatically by use of the &lt;code&gt;-XDeriveLift&lt;/code&gt; GHC language extension:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; 实例可以使用 &lt;code&gt;-XDeriveLift&lt;/code&gt; GHC语言扩展自动获得：</target>
        </trans-unit>
        <trans-unit id="23d7b99c603ed7e2bb515dc1e52c2959a87dc223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Name&quot;&gt;Name&lt;/a&gt;&lt;/code&gt;s can be constructed in several ways, which come with different name-capture guarantees (see &lt;a href=&quot;language-haskell-th-syntax#namecapture&quot;&gt;Language.Haskell.TH.Syntax&lt;/a&gt; for an explanation of name capture):</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Name&quot;&gt;Name&lt;/a&gt;&lt;/code&gt; 可以通过几种方式构造 Name，它们带有不同的名称捕获保证（有关名称捕获的说明，请参见&lt;a href=&quot;language-haskell-th-syntax#namecapture&quot;&gt; Language.Haskell.TH.Syntax&lt;/a&gt;）：</target>
        </trans-unit>
        <trans-unit id="840f5a195d18c505eed5b6054a43f1d20883a5c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:DataInstD&quot;&gt;DataInstD&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:NewtypeInstD&quot;&gt;NewtypeInstD&lt;/a&gt;&lt;/code&gt; (with empty derived &lt;code&gt;[&lt;a href=&quot;language-haskell-th-syntax#t:Name&quot;&gt;Name&lt;/a&gt;]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:DataInstD&quot;&gt;DataInstD&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:NewtypeInstD&quot;&gt;NewtypeInstD&lt;/a&gt;&lt;/code&gt; （带有空派生的 &lt;code&gt;[&lt;a href=&quot;language-haskell-th-syntax#t:Name&quot;&gt;Name&lt;/a&gt;]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ff569f15354913d27bea83e61cb925996c8b4b80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:InstanceD&quot;&gt;InstanceD&lt;/a&gt;&lt;/code&gt; (with empty &lt;code&gt;[&lt;a href=&quot;language-haskell-th-syntax#t:Dec&quot;&gt;Dec&lt;/a&gt;]&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:InstanceD&quot;&gt;InstanceD&lt;/a&gt;&lt;/code&gt; （具有空的 &lt;code&gt;[&lt;a href=&quot;language-haskell-th-syntax#t:Dec&quot;&gt;Dec&lt;/a&gt;]&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f86a8355fed83acbfb520a5aab5343fc869dd2e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:dataToExpQ&quot;&gt;dataToExpQ&lt;/a&gt;&lt;/code&gt; converts a value to a 'Q Exp' representation of the same value, in the SYB style. It is generalized to take a function override type-specific cases; see &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:liftData&quot;&gt;liftData&lt;/a&gt;&lt;/code&gt; for a more commonly used variant.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:dataToExpQ&quot;&gt;dataToExpQ&lt;/a&gt;&lt;/code&gt; 以SYB样式将值转换为相同值的&amp;ldquo; Q Exp&amp;rdquo;表示。一般情况下，函数要覆盖特定于类型的情况；有关更常用的变体，请参见 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:liftData&quot;&gt;liftData&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9c6b26f7ad040178ea0b3b4d3d2be19ece4e031f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:dataToPatQ&quot;&gt;dataToPatQ&lt;/a&gt;&lt;/code&gt; converts a value to a 'Q Pat' representation of the same value, in the SYB style. It takes a function to handle type-specific cases, alternatively, pass &lt;code&gt;const Nothing&lt;/code&gt; to get default behavior.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:dataToPatQ&quot;&gt;dataToPatQ&lt;/a&gt;&lt;/code&gt; 以SYB样式将值转换为相同值的&amp;ldquo; Q Pat&amp;rdquo;表示。它需要一个函数来处理特定于类型的情况，或者，传递 &lt;code&gt;const Nothing&lt;/code&gt; 以获取默认行为。</target>
        </trans-unit>
        <trans-unit id="22aaea3f49bbbb1c791befecde6970da7b81782b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:dataToQa&quot;&gt;dataToQa&lt;/a&gt;&lt;/code&gt; is an internal utility function for constructing generic conversion functions from types with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#t:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; instances to various quasi-quoting representations. See the source of &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:dataToExpQ&quot;&gt;dataToExpQ&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:dataToPatQ&quot;&gt;dataToPatQ&lt;/a&gt;&lt;/code&gt; for two example usages: &lt;code&gt;mkCon&lt;/code&gt;, &lt;code&gt;mkLit&lt;/code&gt; and &lt;code&gt;appQ&lt;/code&gt; are overloadable to account for different syntax for expressions and patterns; &lt;code&gt;antiQ&lt;/code&gt; allows you to override type-specific cases, a common usage is just &lt;code&gt;const Nothing&lt;/code&gt;, which results in no overloading.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:dataToQa&quot;&gt;dataToQa&lt;/a&gt;&lt;/code&gt; 是一个内部实用程序函数，用于构造通用转换函数，从具有 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#t:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; 实例的类型到各种准引用表示形式。有关两个示例用法，请参见 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:dataToExpQ&quot;&gt;dataToExpQ&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:dataToPatQ&quot;&gt;dataToPatQ&lt;/a&gt;&lt;/code&gt; 的来源： &lt;code&gt;mkCon&lt;/code&gt; ， &lt;code&gt;mkLit&lt;/code&gt; 和 &lt;code&gt;appQ&lt;/code&gt; 可重载以说明表达式和模式的不同语法。 &lt;code&gt;antiQ&lt;/code&gt; 允许您覆盖特定于类型的情况，常见用法只是 &lt;code&gt;const Nothing&lt;/code&gt; ，这不会导致任何重载。</target>
        </trans-unit>
        <trans-unit id="b4f75bfe15dbc2aba3edb2e4be0269424f421b58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:liftData&quot;&gt;liftData&lt;/a&gt;&lt;/code&gt; is a variant of &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; type class which works for any type with a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#t:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:liftData&quot;&gt;liftData&lt;/a&gt;&lt;/code&gt; 是的变种 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lift&quot;&gt;lift&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; 式类适用于任何类型的一个 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#t:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="dcc1818b27997f484d76b1b79bfb3ed25655b1c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupValueName&quot;&gt;lookupValueName&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; are similar to &lt;code&gt;'f&lt;/code&gt; and &lt;code&gt;''T&lt;/code&gt; respectively, but the &lt;code&gt;Name&lt;/code&gt;s are looked up at the point where the current splice is being run. These names can never be captured.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupValueName&quot;&gt;lookupValueName&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; 分别类似于 &lt;code&gt;'f&lt;/code&gt; 和 &lt;code&gt;''T&lt;/code&gt; ，但在运行当前接头的位置查找 &lt;code&gt;Name&lt;/code&gt; 。这些名称永远不会被捕获。</target>
        </trans-unit>
        <trans-unit id="782af2f301a050a096829ddcc020be752f84b031" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:mkName&quot;&gt;mkName&lt;/a&gt;&lt;/code&gt; generates a capturable name.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:mkName&quot;&gt;mkName&lt;/a&gt;&lt;/code&gt; 生成一个可捕获的名称。</target>
        </trans-unit>
        <trans-unit id="a79c55fb6b73bfd7edc3807f496aa3696fb852af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:newName&quot;&gt;newName&lt;/a&gt;&lt;/code&gt; monadically generates a new name, which can never be captured.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:newName&quot;&gt;newName&lt;/a&gt;&lt;/code&gt; 单调生成一个新名称，该名称永远无法捕获。</target>
        </trans-unit>
        <trans-unit id="381c1a27fd7e44fc833c358502fc48714bafb7d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reify&quot;&gt;reify&lt;/a&gt;&lt;/code&gt; looks up information about the &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Name&quot;&gt;Name&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reify&quot;&gt;reify&lt;/a&gt;&lt;/code&gt; 查找有关 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Name&quot;&gt;Name&lt;/a&gt;&lt;/code&gt; 的信息。</target>
        </trans-unit>
        <trans-unit id="f3240516619298cb631a45a4cbd8e169f3c59649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyConStrictness&quot;&gt;reifyConStrictness&lt;/a&gt;&lt;/code&gt; would return &lt;code&gt;[&lt;a href=&quot;language-haskell-th-syntax#v:DecidedLazy&quot;&gt;DecidedLazy&lt;/a&gt;, DecidedLazy]&lt;/code&gt; under most circumstances, but it would return &lt;code&gt;[&lt;a href=&quot;language-haskell-th-syntax#v:DecidedStrict&quot;&gt;DecidedStrict&lt;/a&gt;, DecidedStrict]&lt;/code&gt; if the &lt;code&gt;-XStrictData&lt;/code&gt; language extension was enabled.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyConStrictness&quot;&gt;reifyConStrictness&lt;/a&gt;&lt;/code&gt; 在大多数情况下， reifyConStrictness将返回 &lt;code&gt;[&lt;a href=&quot;language-haskell-th-syntax#v:DecidedLazy&quot;&gt;DecidedLazy&lt;/a&gt;, DecidedLazy]&lt;/code&gt; ，但如果启用了 &lt;code&gt;-XStrictData&lt;/code&gt; 语言扩展 &lt;code&gt;[&lt;a href=&quot;language-haskell-th-syntax#v:DecidedStrict&quot;&gt;DecidedStrict&lt;/a&gt;, DecidedStrict]&lt;/code&gt; 它将返回 [ &lt;a href=&quot;language-haskell-th-syntax#v:DecidedStrict&quot;&gt;DecidedStrict&lt;/a&gt;，DecidedStrict]。</target>
        </trans-unit>
        <trans-unit id="454769dfaae8136c2efb11174dc30677b704c7d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;numeric#v:expm1&quot;&gt;expm1&lt;/a&gt; x&lt;/code&gt; computes &lt;code&gt;&lt;a href=&quot;numeric#v:exp&quot;&gt;exp&lt;/a&gt; x - 1&lt;/code&gt;, but provides more precise results for small (absolute) values of &lt;code&gt;x&lt;/code&gt; if possible.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;numeric#v:expm1&quot;&gt;expm1&lt;/a&gt; x&lt;/code&gt; 计算 &lt;code&gt;&lt;a href=&quot;numeric#v:exp&quot;&gt;exp&lt;/a&gt; x - 1&lt;/code&gt; ，但是如果可能的话，为 &lt;code&gt;x&lt;/code&gt; 的小（绝对）值提供更精确的结果。</target>
        </trans-unit>
        <trans-unit id="37a695e4fedd553cca25bc687a091bbb8bd1eb4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;numeric#v:floatToDigits&quot;&gt;floatToDigits&lt;/a&gt;&lt;/code&gt; takes a base and a non-negative &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; number, and returns a list of digits and an exponent. In particular, if &lt;code&gt;x&amp;gt;=0&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;numeric#v:floatToDigits&quot;&gt;floatToDigits&lt;/a&gt;&lt;/code&gt; 采用一个底数和一个非负数的 &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 数，并返回一个数字列表和一个指数。特别是，如果 &lt;code&gt;x&amp;gt;=0&lt;/code&gt; ，并且</target>
        </trans-unit>
        <trans-unit id="2bc289c8e0f3df346b3f2df9d3046765701b5d00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;numeric#v:log1mexp&quot;&gt;log1mexp&lt;/a&gt; x&lt;/code&gt; computes &lt;code&gt;&lt;a href=&quot;numeric#v:log&quot;&gt;log&lt;/a&gt; (1 - &lt;a href=&quot;numeric#v:exp&quot;&gt;exp&lt;/a&gt; x)&lt;/code&gt;, but provides more precise results if possible.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;numeric#v:log1mexp&quot;&gt;log1mexp&lt;/a&gt; x&lt;/code&gt; 计算 &lt;code&gt;&lt;a href=&quot;numeric#v:log&quot;&gt;log&lt;/a&gt; (1 - &lt;a href=&quot;numeric#v:exp&quot;&gt;exp&lt;/a&gt; x)&lt;/code&gt; ，但在可能的情况下提供更精确的结果。</target>
        </trans-unit>
        <trans-unit id="73d3a0d65b796f7a7d489e2a0759ae805e686ffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;numeric#v:log1p&quot;&gt;log1p&lt;/a&gt; x&lt;/code&gt; computes &lt;code&gt;&lt;a href=&quot;numeric#v:log&quot;&gt;log&lt;/a&gt; (1 + x)&lt;/code&gt;, but provides more precise results for small (absolute) values of &lt;code&gt;x&lt;/code&gt; if possible.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;numeric#v:log1p&quot;&gt;log1p&lt;/a&gt; x&lt;/code&gt; 计算 &lt;code&gt;&lt;a href=&quot;numeric#v:log&quot;&gt;log&lt;/a&gt; (1 + x)&lt;/code&gt; ，但是如果可能的话，为 &lt;code&gt;x&lt;/code&gt; 的小（绝对）值提供更精确的结果。</target>
        </trans-unit>
        <trans-unit id="a6b46197cb9efd3cbb22ddf1716cbb034ebe2c34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;numeric#v:log1pexp&quot;&gt;log1pexp&lt;/a&gt; x&lt;/code&gt; computes &lt;code&gt;&lt;a href=&quot;numeric#v:log&quot;&gt;log&lt;/a&gt; (1 + &lt;a href=&quot;numeric#v:exp&quot;&gt;exp&lt;/a&gt; x)&lt;/code&gt;, but provides more precise results if possible.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;numeric#v:log1pexp&quot;&gt;log1pexp&lt;/a&gt; x&lt;/code&gt; 计算 &lt;code&gt;&lt;a href=&quot;numeric#v:log&quot;&gt;log&lt;/a&gt; (1 + &lt;a href=&quot;numeric#v:exp&quot;&gt;exp&lt;/a&gt; x)&lt;/code&gt; ，但在可能的情况下提供更精确的结果。</target>
        </trans-unit>
        <trans-unit id="6424498da93c2983f328c66db54a22f98306bf63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="0c1a4639ba97766eb5656c3df06ea8d4a0f0d9b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="b9bd3b22141c968eee8ca6b786e08d4e759efff8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; is a monad, so &lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; actions can be combined using either the do-notation or the &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; operations from the &lt;code&gt;&lt;a href=&quot;prelude#v:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 是一个单子，所以 &lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 动作就可以利用DO-符号或组合 &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; 操作自 &lt;code&gt;&lt;a href=&quot;prelude#v:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="e32ea5f5b152080a9f34fd24ca98e1512f639bbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; types, including &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 类型，包括 &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea52587d7432250da9aeb55e6e11c439a3603740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; types</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="39e34dbd740d7bf97972384f8bcece1a0e39559e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE &quot;not-a-number&quot; (NaN) value</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 如果参数是IEEE&amp;ldquo;非数字&amp;rdquo;（NaN）值，则为 True</target>
        </trans-unit>
        <trans-unit id="180bb4b0bf7a783f528ceb51480a97a340dccdf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE floating point number</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 如果参数是IEEE浮点数，则为 True</target>
        </trans-unit>
        <trans-unit id="c29dfef2c890e37ba43e2c88e4bce45d2762f25c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE infinity or negative infinity</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 如果参数是IEEE无限或负无限，则为 true</target>
        </trans-unit>
        <trans-unit id="30bab898a810255506ac0b849f91dc439e83157a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is an IEEE negative zero</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 如果参数为IEEE负零，则为 True</target>
        </trans-unit>
        <trans-unit id="e885ccee58dc4e7f6edcffcd266655296a0da640" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is too small to be represented in normalized format</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 如果参数太小而无法以规范化格式表示，则为 True</target>
        </trans-unit>
        <trans-unit id="3ea9bb036ffe299726473f5b83da12eaf2ce2ab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:abs&quot;&gt;abs&lt;/a&gt; (&lt;a href=&quot;data-ratio#v:numerator&quot;&gt;numerator&lt;/a&gt; y) &amp;lt;= &lt;a href=&quot;prelude#v:abs&quot;&gt;abs&lt;/a&gt; (&lt;a href=&quot;data-ratio#v:numerator&quot;&gt;numerator&lt;/a&gt; y')&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:abs&quot;&gt;abs&lt;/a&gt; (&lt;a href=&quot;data-ratio#v:numerator&quot;&gt;numerator&lt;/a&gt; y) &amp;lt;= &lt;a href=&quot;prelude#v:abs&quot;&gt;abs&lt;/a&gt; (&lt;a href=&quot;data-ratio#v:numerator&quot;&gt;numerator&lt;/a&gt; y')&lt;/code&gt; ，和</target>
        </trans-unit>
        <trans-unit id="fceec3ddb765a69aa6c91cd7fc9f35374de2ae71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:and&quot;&gt;and&lt;/a&gt;&lt;/code&gt; returns the conjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;prelude#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;prelude#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:and&quot;&gt;and&lt;/a&gt;&lt;/code&gt; 返回布尔型容器的合取。为了使结果为 &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ，容器必须是有限的。 &lt;code&gt;&lt;a href=&quot;prelude#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ，然而，从结果 &lt;code&gt;&lt;a href=&quot;prelude#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 值从左端有限远。</target>
        </trans-unit>
        <trans-unit id="0f9c668715480a625fd9af9eb80eeeb206edb78b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:asTypeOf&quot;&gt;asTypeOf&lt;/a&gt;&lt;/code&gt; is a type-restricted version of &lt;code&gt;&lt;a href=&quot;prelude#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;. It is usually used as an infix operator, and its typing forces its first argument (which is usually overloaded) to have the same type as the second.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:asTypeOf&quot;&gt;asTypeOf&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;prelude#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; 的类型限制版本。它通常用作中缀运算符，其类型强制其第一个参数（通常是重载的）具有与第二个参数相同的类型。</target>
        </trans-unit>
        <trans-unit id="b0d89710515219cec11872fcfa257cbf3a150eab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns a tuple where first element is longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that &lt;em&gt;do not satisfy&lt;/em&gt;&lt;code&gt;p&lt;/code&gt; and second element is the remainder of the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; 应用于谓词 &lt;code&gt;p&lt;/code&gt; 和列表 &lt;code&gt;xs&lt;/code&gt; ，返回一个元组，其中第一个元素是&lt;em&gt;不满足&lt;/em&gt; &lt;code&gt;p&lt;/code&gt; 的元素的 &lt;code&gt;xs&lt;/code&gt; 的最长前缀（可能为空），第二个元素是列表的其余部分：&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="65677c9d5d8e6310793e1ab8a36f6af8c40c3791" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;prelude#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;prelude#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p&lt;/code&gt; 等于 &lt;code&gt;&lt;a href=&quot;prelude#v:span&quot;&gt;span&lt;/a&gt; (&lt;a href=&quot;prelude#v:not&quot;&gt;not&lt;/a&gt; . p)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be66c280ca45c2cf1c5ce3828088758d49c7d3ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:ceiling&quot;&gt;ceiling&lt;/a&gt; x&lt;/code&gt; returns the least integer not less than &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:ceiling&quot;&gt;ceiling&lt;/a&gt; x&lt;/code&gt; 返回不小于 &lt;code&gt;x&lt;/code&gt; 的最小整数</target>
        </trans-unit>
        <trans-unit id="35530e911664fd9b3c43e39777246bc6aad72b52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:curry&quot;&gt;curry&lt;/a&gt;&lt;/code&gt; converts an uncurried function to a curried function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:curry&quot;&gt;curry&lt;/a&gt;&lt;/code&gt; 将未咖喱函数转换为咖喱函数。</target>
        </trans-unit>
        <trans-unit id="2d8691393163701b125cd36603fd414089952c93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; ties a finite list into a circular one, or equivalently, the infinite repetition of the original list. It is the identity on infinite lists.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 将一个有限列表绑定到一个循环列表中，或等效地将原始列表无限重复。它是无限列表上的标识。</target>
        </trans-unit>
        <trans-unit id="e37417a71dbc3a4e0a039f0004373fc1c05087a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; returns the suffix of &lt;code&gt;xs&lt;/code&gt; after the first &lt;code&gt;n&lt;/code&gt; elements, or &lt;code&gt;[]&lt;/code&gt; if &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; 返回前 &lt;code&gt;n&lt;/code&gt; 个元素后的 &lt;code&gt;xs&lt;/code&gt; 后缀；如果 &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs，则返回 &lt;code&gt;[]&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="538ae1fd53b40794542f19501354d2d6fa15020e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;prelude#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 返回 &lt;code&gt;&lt;a href=&quot;prelude#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 之后剩余的后缀：</target>
        </trans-unit>
        <trans-unit id="b506e84360977987754db1c0f4ccade20a2e0af4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt;&lt;/code&gt; performs the inverse of &lt;code&gt;&lt;a href=&quot;prelude#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt;&lt;/code&gt; in the sense that for finite &lt;code&gt;x&lt;/code&gt; with the exception of &lt;code&gt;-0.0&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#v:uncurry&quot;&gt;uncurry&lt;/a&gt; &lt;a href=&quot;prelude#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt; (&lt;a href=&quot;prelude#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt; x) = x&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;prelude#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt; m n&lt;/code&gt; is one of the two closest representable floating-point numbers to &lt;code&gt;m*b^^n&lt;/code&gt; (or &lt;code&gt;&amp;plusmn;Infinity&lt;/code&gt; if overflow occurs); usually the closer, but if &lt;code&gt;m&lt;/code&gt; contains too many bits, the result may be rounded in the wrong direction.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt;&lt;/code&gt; 在某种意义上执行 decodeFloat的逆 &lt;code&gt;&lt;a href=&quot;prelude#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt;&lt;/code&gt; ，即对于 &lt;code&gt;x&lt;/code&gt; 有限的 x，除 &lt;code&gt;-0.0&lt;/code&gt; 以外，非 &lt;code&gt;&lt;a href=&quot;prelude#v:uncurry&quot;&gt;uncurry&lt;/a&gt; &lt;a href=&quot;prelude#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt; (&lt;a href=&quot;prelude#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt; x) = x&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;prelude#v:encodeFloat&quot;&gt;encodeFloat&lt;/a&gt; m n&lt;/code&gt; 是最接近 &lt;code&gt;m*b^^n&lt;/code&gt; 的两个可表示的浮点数之一（如果发生溢出，则为 &lt;code&gt;&amp;plusmn;Infinity&lt;/code&gt; ）；通常更接近，但如果 &lt;code&gt;m&lt;/code&gt; 包含太多位，则结果可能会沿错误的方向取整。</target>
        </trans-unit>
        <trans-unit id="7e005e5bf5443bae1200923a51681b7678dea36c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:enumFrom&quot;&gt;enumFrom&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:enumFromThen&quot;&gt;enumFromThen&lt;/a&gt;&lt;/code&gt; should be defined with an implicit bound, thus:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:enumFrom&quot;&gt;enumFrom&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;prelude#v:enumFromThen&quot;&gt;enumFromThen&lt;/a&gt;&lt;/code&gt; 应该定义一个隐式绑定，因此：</target>
        </trans-unit>
        <trans-unit id="5f76a96d436885ad0fc422b0d0033bcce4f84b92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; stops execution and displays an error message.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; 停止执行并显示错误消息。</target>
        </trans-unit>
        <trans-unit id="99cd8d4c12d9480115246931f5727c25ecc68890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:exponent&quot;&gt;exponent&lt;/a&gt;&lt;/code&gt; corresponds to the second component of &lt;code&gt;&lt;a href=&quot;prelude#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;prelude#v:exponent&quot;&gt;exponent&lt;/a&gt; 0 = 0&lt;/code&gt; and for finite nonzero &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#v:exponent&quot;&gt;exponent&lt;/a&gt; x = snd (&lt;a href=&quot;prelude#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt; x) + &lt;a href=&quot;prelude#v:floatDigits&quot;&gt;floatDigits&lt;/a&gt; x&lt;/code&gt;. If &lt;code&gt;x&lt;/code&gt; is a finite floating-point number, it is equal in value to &lt;code&gt;&lt;a href=&quot;prelude#v:significand&quot;&gt;significand&lt;/a&gt; x * b ^^ &lt;a href=&quot;prelude#v:exponent&quot;&gt;exponent&lt;/a&gt; x&lt;/code&gt;, where &lt;code&gt;b&lt;/code&gt; is the floating-point radix. The behaviour is unspecified on infinite or &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:exponent&quot;&gt;exponent&lt;/a&gt;&lt;/code&gt; 对应于 &lt;code&gt;&lt;a href=&quot;prelude#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt;&lt;/code&gt; 的第二个组件。 &lt;code&gt;&lt;a href=&quot;prelude#v:exponent&quot;&gt;exponent&lt;/a&gt; 0 = 0&lt;/code&gt; 并且对于有限的非零 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;prelude#v:exponent&quot;&gt;exponent&lt;/a&gt; x = snd (&lt;a href=&quot;prelude#v:decodeFloat&quot;&gt;decodeFloat&lt;/a&gt; x) + &lt;a href=&quot;prelude#v:floatDigits&quot;&gt;floatDigits&lt;/a&gt; x&lt;/code&gt; 。如果 &lt;code&gt;x&lt;/code&gt; 是一个有限的浮点数，则其值等于 &lt;code&gt;&lt;a href=&quot;prelude#v:significand&quot;&gt;significand&lt;/a&gt; x * b ^^ &lt;a href=&quot;prelude#v:exponent&quot;&gt;exponent&lt;/a&gt; x&lt;/code&gt; ，其中 &lt;code&gt;b&lt;/code&gt; 是浮点基数。该行为在无限值或 &lt;code&gt;NaN&lt;/code&gt; 值上未指定。</target>
        </trans-unit>
        <trans-unit id="9eb0d52360c67c8eed2b8ebe7918d0021bfca7cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:flip&quot;&gt;flip&lt;/a&gt; f&lt;/code&gt; takes its (first) two arguments in the reverse order of &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:flip&quot;&gt;flip&lt;/a&gt; f&lt;/code&gt; 取其（第一）两个参数中的相反的顺序 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74582fe2c1b8b6147f60f7d9b00babc28681d6af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:floor&quot;&gt;floor&lt;/a&gt; x&lt;/code&gt; returns the greatest integer not greater than &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:floor&quot;&gt;floor&lt;/a&gt; x&lt;/code&gt; 返回不大于 &lt;code&gt;x&lt;/code&gt; 的最大整数</target>
        </trans-unit>
        <trans-unit id="41ab1bc2943c0be811d10077bb62e6127ff2dd29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:fromEnum&quot;&gt;fromEnum&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:toEnum&quot;&gt;toEnum&lt;/a&gt;&lt;/code&gt; should give a runtime error if the result value is not representable in the result type. For example, &lt;code&gt;&lt;a href=&quot;prelude#v:toEnum&quot;&gt;toEnum&lt;/a&gt; 7 :: &lt;a href=&quot;prelude#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; is an error.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:fromEnum&quot;&gt;fromEnum&lt;/a&gt;&lt;/code&gt; 如果结果值在结果类型中不可表示，则 fromEnum和 &lt;code&gt;&lt;a href=&quot;prelude#v:toEnum&quot;&gt;toEnum&lt;/a&gt;&lt;/code&gt; 应给出运行时错误。例如， &lt;code&gt;&lt;a href=&quot;prelude#v:toEnum&quot;&gt;toEnum&lt;/a&gt; 7 :: &lt;a href=&quot;prelude#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; 是错误。</target>
        </trans-unit>
        <trans-unit id="4ce643c41c2db2cd82ad44ae59c126bfc3d20a14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:gcd&quot;&gt;gcd&lt;/a&gt; x y&lt;/code&gt; is the non-negative factor of both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; of which every common factor of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; is also a factor; for example &lt;code&gt;&lt;a href=&quot;prelude#v:gcd&quot;&gt;gcd&lt;/a&gt; 4 2 = 2&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#v:gcd&quot;&gt;gcd&lt;/a&gt; (-4) 6 = 2&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#v:gcd&quot;&gt;gcd&lt;/a&gt; 0 4&lt;/code&gt; = &lt;code&gt;4&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;prelude#v:gcd&quot;&gt;gcd&lt;/a&gt; 0 0&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt;. (That is, the common divisor that is &quot;greatest&quot; in the divisibility preordering.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:gcd&quot;&gt;gcd&lt;/a&gt; x y&lt;/code&gt; 是两者的非负因子 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 其中的每一个共同的因子 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 也是一个因素; 例如 &lt;code&gt;&lt;a href=&quot;prelude#v:gcd&quot;&gt;gcd&lt;/a&gt; 4 2 = 2&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;prelude#v:gcd&quot;&gt;gcd&lt;/a&gt; (-4) 6 = 2&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;prelude#v:gcd&quot;&gt;gcd&lt;/a&gt; 0 4&lt;/code&gt; = &lt;code&gt;4&lt;/code&gt; 。 &lt;code&gt;&lt;a href=&quot;prelude#v:gcd&quot;&gt;gcd&lt;/a&gt; 0 0&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt; 。（即，除数预排序中&amp;ldquo;最大&amp;rdquo;的公共除数。）</target>
        </trans-unit>
        <trans-unit id="5cca57c5550be7ce21679621b488ce401911a226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt;&lt;code&gt;f x&lt;/code&gt; returns an infinite list of repeated applications of &lt;code&gt;f&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:iterate&quot;&gt;iterate&lt;/a&gt;&lt;/code&gt; &lt;code&gt;f x&lt;/code&gt; 返回 &lt;code&gt;f&lt;/code&gt; 到 &lt;code&gt;x&lt;/code&gt; 的重复应用的无限列表：</target>
        </trans-unit>
        <trans-unit id="9a579489e99e31a99cb9989088525deb9b63c304" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:lcm&quot;&gt;lcm&lt;/a&gt; x y&lt;/code&gt; is the smallest positive integer that both &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; divide.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:lcm&quot;&gt;lcm&lt;/a&gt; x y&lt;/code&gt; 是 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 均除的最小正整数。</target>
        </trans-unit>
        <trans-unit id="ad1e9d56d03a39d084962d1040fb10f5830e566d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of strings at newline characters. The resulting strings do not contain newlines.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; 断线成以换行字符的字符串列表。结果字符串不包含换行符。</target>
        </trans-unit>
        <trans-unit id="90c3b95d95e8a8b18102086e126bd104cf69ecf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; is the negation of &lt;code&gt;&lt;a href=&quot;prelude#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:notElem&quot;&gt;notElem&lt;/a&gt;&lt;/code&gt; 是对 &lt;code&gt;&lt;a href=&quot;prelude#v:elem&quot;&gt;elem&lt;/a&gt;&lt;/code&gt; 的否定。</target>
        </trans-unit>
        <trans-unit id="4b28da115bfd5d00bf1b920bb984e01a5fc3c009" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; returns the disjunction of a container of Bools. For the result to be &lt;code&gt;&lt;a href=&quot;prelude#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, the container must be finite; &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, however, results from a &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value finitely far from the left end.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:or&quot;&gt;or&lt;/a&gt;&lt;/code&gt; 返回布尔容器的析取。为了使结果为 &lt;code&gt;&lt;a href=&quot;prelude#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ，容器必须是有限的； &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ，然而，从结果 &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 值从左端有限远。</target>
        </trans-unit>
        <trans-unit id="e4fd83f3d011b16b6dc51c43a910c7e9a78e1cd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:otherwise&quot;&gt;otherwise&lt;/a&gt;&lt;/code&gt; is defined as the value &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;. It helps to make guards more readable. eg.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:otherwise&quot;&gt;otherwise&lt;/a&gt;&lt;/code&gt; 定义为值 &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。它有助于使警卫人员更具可读性。例如。</target>
        </trans-unit>
        <trans-unit id="ea0cc360ae261aac376aac41131de9104e521a59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;prelude#v:False&quot;&gt;False&lt;/a&gt; p&lt;/code&gt; parses what &lt;code&gt;p&lt;/code&gt; parses, but optionally surrounded with parentheses.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;prelude#v:False&quot;&gt;False&lt;/a&gt; p&lt;/code&gt; 解析 &lt;code&gt;p&lt;/code&gt; 解析的内容，但可选地用括号括起来。</target>
        </trans-unit>
        <trans-unit id="6e7b88af6312a71be1e6cc5991346df63e87cce7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt; p&lt;/code&gt; parses what &lt;code&gt;p&lt;/code&gt; parses, but surrounded with parentheses.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt; p&lt;/code&gt; 解析 &lt;code&gt;p&lt;/code&gt; 解析的内容，但用括号括起来。</target>
        </trans-unit>
        <trans-unit id="95cc0f4a75c44098555587a9b632e29fb9c47ba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt;&lt;code&gt;x&lt;/code&gt; is an infinite list, with &lt;code&gt;x&lt;/code&gt; the value of every element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; &lt;code&gt;x&lt;/code&gt; 是一个无限列表，其中 &lt;code&gt;x&lt;/code&gt; 是每个元素的值。</target>
        </trans-unit>
        <trans-unit id="14ec4a6aab6c31f279c50924ed8fe63b61c8afc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n x&lt;/code&gt; is a list of length &lt;code&gt;n&lt;/code&gt; with &lt;code&gt;x&lt;/code&gt; the value of every element. It is an instance of the more general &lt;code&gt;&lt;a href=&quot;data-list#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt;, in which &lt;code&gt;n&lt;/code&gt; may be of any integral type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n x&lt;/code&gt; 是长度为 &lt;code&gt;n&lt;/code&gt; 的列表，其中 &lt;code&gt;x&lt;/code&gt; 为每个元素的值。它是更通用的 &lt;code&gt;&lt;a href=&quot;data-list#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt; 的实例，其中 &lt;code&gt;n&lt;/code&gt; 可以是任何整数类型。</target>
        </trans-unit>
        <trans-unit id="eb0f5651974cd39db6372713ad54f0e127cd892e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt;&lt;code&gt;xs&lt;/code&gt; returns the elements of &lt;code&gt;xs&lt;/code&gt; in reverse order. &lt;code&gt;xs&lt;/code&gt; must be finite.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:reverse&quot;&gt;reverse&lt;/a&gt;&lt;/code&gt; &lt;code&gt;xs&lt;/code&gt; 返回的元素 &lt;code&gt;xs&lt;/code&gt; 以相反的顺序。 &lt;code&gt;xs&lt;/code&gt; 必须是有限的。</target>
        </trans-unit>
        <trans-unit id="8866f3369aabdd70b6cea2f8ac67cc5354993ba5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:round&quot;&gt;round&lt;/a&gt; x&lt;/code&gt; returns the nearest integer to &lt;code&gt;x&lt;/code&gt;; the even integer if &lt;code&gt;x&lt;/code&gt; is equidistant between two integers</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:round&quot;&gt;round&lt;/a&gt; x&lt;/code&gt; 将最接近的整数返回给 &lt;code&gt;x&lt;/code&gt; ；如果 &lt;code&gt;x&lt;/code&gt; 在两个整数之间等距，则为偶数整数</target>
        </trans-unit>
        <trans-unit id="8197db2f8f42c33ac929501c115f060c4003dc88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt; (Leaf 1 :^: Leaf 2 :^: Leaf 3)&lt;/code&gt; produces the string &lt;code&gt;&quot;Leaf 1 :^: (Leaf 2 :^: Leaf 3)&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:show&quot;&gt;show&lt;/a&gt; (Leaf 1 :^: Leaf 2 :^: Leaf 3)&lt;/code&gt; 产生字符串 &lt;code&gt;&quot;Leaf 1 :^: (Leaf 2 :^: Leaf 3)&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ff5551274655dfcc8b4e4f810e9c6303ce24ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; should satisfy the law</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; 应该符合法律</target>
        </trans-unit>
        <trans-unit id="cd876887b676862f1db8746de58d3818bafe9192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns a tuple where first element is longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt; and second element is the remainder of the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; 应用于谓词 &lt;code&gt;p&lt;/code&gt; 和列表 &lt;code&gt;xs&lt;/code&gt; ，返回一个元组，其中第一个元素是满足 &lt;code&gt;p&lt;/code&gt; 的元素的 &lt;code&gt;xs&lt;/code&gt; 的最长前缀（可能为空），第二个元素是列表的其余部分：</target>
        </trans-unit>
        <trans-unit id="9ef69a25e6b580461c6edf12e74a04f68967a80a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt;&lt;code&gt;p xs&lt;/code&gt; is equivalent to &lt;code&gt;(&lt;a href=&quot;prelude#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;prelude#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:span&quot;&gt;span&lt;/a&gt;&lt;/code&gt; &lt;code&gt;p xs&lt;/code&gt; 等效于 &lt;code&gt;(&lt;a href=&quot;prelude#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt; p xs, &lt;a href=&quot;prelude#v:dropWhile&quot;&gt;dropWhile&lt;/a&gt; p xs)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a9986add984ef8935e2a10368b30a5809dab25a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; returns a tuple where first element is &lt;code&gt;xs&lt;/code&gt; prefix of length &lt;code&gt;n&lt;/code&gt; and second element is the remainder of the list:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; 返回一个元组，其中第一个元素是长度为 &lt;code&gt;n&lt;/code&gt; 的 &lt;code&gt;xs&lt;/code&gt; 前缀，第二个元素是列表的其余部分：</target>
        </trans-unit>
        <trans-unit id="85f7535d630138e7e51f7c3606a32ee218bfc27c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;, applied to a list &lt;code&gt;xs&lt;/code&gt;, returns the prefix of &lt;code&gt;xs&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt;, or &lt;code&gt;xs&lt;/code&gt; itself if &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; ，施加到一个列表 &lt;code&gt;xs&lt;/code&gt; ，返回的前缀 &lt;code&gt;xs&lt;/code&gt; 长度的 &lt;code&gt;n&lt;/code&gt; ，或 &lt;code&gt;xs&lt;/code&gt; 本身如果 &lt;code&gt;n &amp;gt; &lt;a href=&quot;ghc-list#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e32f5f2062f7bfd5341a8a4f847eef925def4c9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a list &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:takeWhile&quot;&gt;takeWhile&lt;/a&gt;&lt;/code&gt; 应用于谓词 &lt;code&gt;p&lt;/code&gt; 和列表 &lt;code&gt;xs&lt;/code&gt; ，返回满足 &lt;code&gt;p&lt;/code&gt; 的元素 &lt;code&gt;xs&lt;/code&gt; 的最长前缀（可能为空）：</target>
        </trans-unit>
        <trans-unit id="c565b5e43a2f7011ee17ba13f5a371da254c5bd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:truncate&quot;&gt;truncate&lt;/a&gt; x&lt;/code&gt; returns the integer nearest &lt;code&gt;x&lt;/code&gt; between zero and &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:truncate&quot;&gt;truncate&lt;/a&gt; x&lt;/code&gt; 返回零和 &lt;code&gt;x&lt;/code&gt; 之间最接近 &lt;code&gt;x&lt;/code&gt; 的整数</target>
        </trans-unit>
        <trans-unit id="6833bf4f6e77728c935667d52aa1f8e4d0e22592" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:uncurry&quot;&gt;uncurry&lt;/a&gt;&lt;/code&gt; converts a curried function to a function on pairs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:uncurry&quot;&gt;uncurry&lt;/a&gt;&lt;/code&gt; 将咖喱函数转换为成对函数。</target>
        </trans-unit>
        <trans-unit id="82b39b05584d753464e0a137e37b0275efe3cd36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;prelude#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt;. It joins lines, after appending a terminating newline to each.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; 是逆操作 &lt;code&gt;&lt;a href=&quot;prelude#v:lines&quot;&gt;lines&lt;/a&gt;&lt;/code&gt; 。在每行末尾添加换行符后，它会合并行。</target>
        </trans-unit>
        <trans-unit id="4c0909cfb4024e044a781c8cc3e577608acc465b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:until&quot;&gt;until&lt;/a&gt; p f&lt;/code&gt; yields the result of applying &lt;code&gt;f&lt;/code&gt; until &lt;code&gt;p&lt;/code&gt; holds.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:until&quot;&gt;until&lt;/a&gt; p f&lt;/code&gt; 得出应用 &lt;code&gt;f&lt;/code&gt; 直到 &lt;code&gt;p&lt;/code&gt; 成立的结果。</target>
        </trans-unit>
        <trans-unit id="8bd1257a93569ed215b8f5b00ca0ecbd2be3bd4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; is an inverse operation to &lt;code&gt;&lt;a href=&quot;prelude#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt;. It joins words with separating spaces.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;prelude#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; 的逆运算。它用分隔的空格连接单词。</target>
        </trans-unit>
        <trans-unit id="01bef010073b5e20e4dd758bd14bfeda1aaccea8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; transforms a list of pairs into a list of first components and a list of second components.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; 将成对的列表转换为第一组件的列表和第二组件的列表。</target>
        </trans-unit>
        <trans-unit id="c52b4c6fc29dbc556d93ce39796f1355a44b3669" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; breaks a string up into a list of words, which were delimited by white space.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:words&quot;&gt;words&lt;/a&gt;&lt;/code&gt; 将字符串分解为单词列表，这些单词列表由空格分隔。</target>
        </trans-unit>
        <trans-unit id="9e4c37f6f58036a01b451e7d137537e6c4533a7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 可以进行列表融合，但仅限于其第一个list参数及其结果列表。</target>
        </trans-unit>
        <trans-unit id="5f0622371527d648d60c30d9849cadcf847e4eb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; is right-lazy:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 是懒惰的：</target>
        </trans-unit>
        <trans-unit id="a7a23fc01912013cc00c836f8604380b992b0b40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; takes three lists and returns a list of triples, analogous to &lt;code&gt;&lt;a href=&quot;prelude#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; 接受三个列表并返回一个三元组列表，类似于 &lt;code&gt;&lt;a href=&quot;prelude#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; 。它能够进行列表融合，但仅限于其第一个列表参数及其结果列表。</target>
        </trans-unit>
        <trans-unit id="5690d97420c567a27377bcacc8f8b46ef04bfcdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 可以进行列表融合，但仅限于其第一个list参数及其结果列表。</target>
        </trans-unit>
        <trans-unit id="1fa4a1a38d950808687c491ece1044d0ba291c72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;prelude#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; is right-lazy:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; 是懒惰的：</target>
        </trans-unit>
        <trans-unit id="3cfd4533290c5ef0e949ada807c3772d5eebbee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-console-getopt#v:getOpt&quot;&gt;getOpt&lt;/a&gt;&lt;/code&gt; returns a triple consisting of the option arguments, a list of non-options, and a list of error messages.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-console-getopt#v:getOpt&quot;&gt;getOpt&lt;/a&gt;&lt;/code&gt; 返回一个由选项参数，非选项列表和错误消息列表组成的三元组。</target>
        </trans-unit>
        <trans-unit id="428066ca06ed596ddd333bde5016b887aba49d76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Prefs&quot;&gt;Prefs&lt;/a&gt;&lt;/code&gt; allow the user to customize the terminal-style line-editing interface. They are read by default from &lt;code&gt;~/.haskeline&lt;/code&gt;; to override that behavior, use &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:readPrefs&quot;&gt;readPrefs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;runInputTWithPrefs&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Prefs&quot;&gt;Prefs&lt;/a&gt;&lt;/code&gt; 允许用户自定义终端样式的行编辑界面。默认情况下，它们是从 &lt;code&gt;~/.haskeline&lt;/code&gt; 中读取的；要覆盖该行为，请使用 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:readPrefs&quot;&gt;readPrefs&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;runInputTWithPrefs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f6d385a35e1b7babd43615a60f7444f80af2444" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory#v:createDirectory&quot;&gt;createDirectory&lt;/a&gt; dir&lt;/code&gt; creates a new directory &lt;code&gt;dir&lt;/code&gt; which is initially empty, or as near to empty as the operating system allows.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory#v:createDirectory&quot;&gt;createDirectory&lt;/a&gt; dir&lt;/code&gt; 创建一个新目录 &lt;code&gt;dir&lt;/code&gt; ，该目录最初为空，或者在操作系统允许的情况下尽可能接近空。</target>
        </trans-unit>
        <trans-unit id="705ef22f70043a77d804ac1a1f20e78c6f911351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory#v:createDirectoryIfMissing&quot;&gt;createDirectoryIfMissing&lt;/a&gt; parents dir&lt;/code&gt; creates a new directory &lt;code&gt;dir&lt;/code&gt; if it doesn't exist. If the first argument is &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; the function will also create all parent directories if they are missing.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory#v:createDirectoryIfMissing&quot;&gt;createDirectoryIfMissing&lt;/a&gt; parents dir&lt;/code&gt; 如果不存在新目录 &lt;code&gt;dir&lt;/code&gt; ,则 createDirectoryIfMissing父目录将创建一个新目录。如果第一个参数为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ,则该函数还将创建所有父目录（如果缺少）。</target>
        </trans-unit>
        <trans-unit id="5dd8d9e061e9438354e5ec94c30200556169080d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory#v:createDirectoryIfMissing&quot;&gt;createDirectoryIfMissing&lt;/a&gt; parents dir&lt;/code&gt; creates a new directory &lt;code&gt;dir&lt;/code&gt; if it doesn't exist. If the first argument is &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; the function will also create all parent directories if they are missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f166a33c1b1210e5ef26e6bcfe69d6be0bbcfca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory#v:listDirectory&quot;&gt;listDirectory&lt;/a&gt; dir&lt;/code&gt; returns a list of &lt;em&gt;all&lt;/em&gt; entries in &lt;em&gt;dir&lt;/em&gt; without the special entries (&lt;code&gt;.&lt;/code&gt; and &lt;code&gt;..&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory#v:listDirectory&quot;&gt;listDirectory&lt;/a&gt; dir&lt;/code&gt; 返回一个列表&lt;em&gt;的所有&lt;/em&gt;在项目&lt;em&gt;目录&lt;/em&gt;无特殊条目（ &lt;code&gt;.&lt;/code&gt; 和 &lt;code&gt;..&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1f17bbcb6b2bedb9848c973e471df1323555cd5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory#v:removeDirectory&quot;&gt;removeDirectory&lt;/a&gt; dir&lt;/code&gt; removes an existing directory &lt;em&gt;dir&lt;/em&gt;. The implementation may specify additional constraints which must be satisfied before a directory can be removed (e.g. the directory has to be empty, or may not be in use by other processes). It is not legal for an implementation to partially remove a directory unless the entire directory is removed. A conformant implementation need not support directory removal in all situations (e.g. removal of the root directory).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory#v:removeDirectory&quot;&gt;removeDirectory&lt;/a&gt; dir&lt;/code&gt; 删除现有目录&lt;em&gt; dir&lt;/em&gt;。该实现可以指定在删除目录之前必须满足的其他约束（例如，目录必须为空，或者其他进程可能未使用该目录）。除非删除整个目录，否则部分实施删除目录是不合法的。一致的实现不必在所有情况下都支持目录删除（例如，删除根目录）。</target>
        </trans-unit>
        <trans-unit id="811605cb16909a2d10f9fbab42d71ae040bd7169" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory#v:removeDirectoryRecursive&quot;&gt;removeDirectoryRecursive&lt;/a&gt; dir&lt;/code&gt; removes an existing directory &lt;em&gt;dir&lt;/em&gt; together with its contents and subdirectories. Within this directory, symbolic links are removed without affecting their targets.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory#v:removeDirectoryRecursive&quot;&gt;removeDirectoryRecursive&lt;/a&gt; dir&lt;/code&gt; 删除现有目录&lt;em&gt; dir&lt;/em&gt;及其内容和子目录。在此目录中，将删除符号链接而不会影响其目标。</target>
        </trans-unit>
        <trans-unit id="16d7e645324acff7f68a3c901de6f888fcae3589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory#v:removeFile&quot;&gt;removeFile&lt;/a&gt;&lt;/code&gt;&lt;em&gt;file&lt;/em&gt; removes the directory entry for an existing file &lt;em&gt;file&lt;/em&gt;, where &lt;em&gt;file&lt;/em&gt; is not itself a directory. The implementation may specify additional constraints which must be satisfied before a file can be removed (e.g. the file may not be in use by other processes).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory#v:removeFile&quot;&gt;removeFile&lt;/a&gt;&lt;/code&gt; &lt;em&gt; file&lt;/em&gt;删除现有文件&lt;em&gt; file&lt;/em&gt;的目录条目，其中&lt;em&gt; file&lt;/em&gt;本身不是目录。该实现可以指定在可以删除文件之前必须满足的其他约束（例如，其他进程可能未使用该文件）。</target>
        </trans-unit>
        <trans-unit id="512fb3e5392402ecd530cb7a00735e380b377ae0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory#v:renameDirectory&quot;&gt;renameDirectory&lt;/a&gt; old new&lt;/code&gt; changes the name of an existing directory from &lt;em&gt;old&lt;/em&gt; to &lt;em&gt;new&lt;/em&gt;. If the &lt;em&gt;new&lt;/em&gt; directory already exists, it is atomically replaced by the &lt;em&gt;old&lt;/em&gt; directory. If the &lt;em&gt;new&lt;/em&gt; directory is neither the &lt;em&gt;old&lt;/em&gt; directory nor an alias of the &lt;em&gt;old&lt;/em&gt; directory, it is removed as if by &lt;code&gt;&lt;a href=&quot;system-directory#v:removeDirectory&quot;&gt;removeDirectory&lt;/a&gt;&lt;/code&gt;. A conformant implementation need not support renaming directories in all situations (e.g. renaming to an existing directory, or across different physical devices), but the constraints must be documented.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory#v:renameDirectory&quot;&gt;renameDirectory&lt;/a&gt; old new&lt;/code&gt; 将现有目录的名称从&lt;em&gt; old&lt;/em&gt;更改为&lt;em&gt; new&lt;/em&gt;。如果&lt;em&gt;新&lt;/em&gt;目录已经存在，则将其自动替换为&lt;em&gt;旧&lt;/em&gt;目录。如果&lt;em&gt;新的&lt;/em&gt;目录既不是&lt;em&gt;旧&lt;/em&gt;目录，也不是一个别名&lt;em&gt;旧&lt;/em&gt;目录，它是仿佛被删除 &lt;code&gt;&lt;a href=&quot;system-directory#v:removeDirectory&quot;&gt;removeDirectory&lt;/a&gt;&lt;/code&gt; 。一致的实现不必在所有情况下都支持重命名目录（例如，重命名到现有目录或跨不同的物理设备），但是必须记录约束。</target>
        </trans-unit>
        <trans-unit id="1eb6bb0aba7cc14757847ba9a69350ee82df65ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory#v:renameFile&quot;&gt;renameFile&lt;/a&gt; old new&lt;/code&gt; changes the name of an existing file system object from &lt;em&gt;old&lt;/em&gt; to &lt;em&gt;new&lt;/em&gt;. If the &lt;em&gt;new&lt;/em&gt; object already exists, it is atomically replaced by the &lt;em&gt;old&lt;/em&gt; object. Neither path may refer to an existing directory. A conformant implementation need not support renaming files in all situations (e.g. renaming across different physical devices), but the constraints must be documented.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory#v:renameFile&quot;&gt;renameFile&lt;/a&gt; old new&lt;/code&gt; 将现有文件系统对象的名称从&lt;em&gt; old&lt;/em&gt;更改为&lt;em&gt; new&lt;/em&gt;。如果&lt;em&gt;新&lt;/em&gt;对象已经存在，则将其原子替换为&lt;em&gt;旧&lt;/em&gt;对象。这两个路径都不能引用现有目录。一致的实现不必在所有情况下都支持重命名文件（例如，跨不同的物理设备重命名），但是必须记录约束。</target>
        </trans-unit>
        <trans-unit id="51de27a973f5ea2ab881c2dcfed1f431af95026d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:alloca&quot;&gt;alloca&lt;/a&gt; f&lt;/code&gt; executes the computation &lt;code&gt;f&lt;/code&gt;, passing as argument a pointer to a temporarily allocated block of memory sufficient to hold values of type &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:alloca&quot;&gt;alloca&lt;/a&gt; f&lt;/code&gt; 执行计算 &lt;code&gt;f&lt;/code&gt; ，将指向临时分配的足以容纳 &lt;code&gt;a&lt;/code&gt; 类型值的内存块的指针作为参数传递。</target>
        </trans-unit>
        <trans-unit id="30881e33e4b76a76383543da3ebacc9cb6fcb0de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:allocaBytes&quot;&gt;allocaBytes&lt;/a&gt; n f&lt;/code&gt; executes the computation &lt;code&gt;f&lt;/code&gt;, passing as argument a pointer to a temporarily allocated block of memory of &lt;code&gt;n&lt;/code&gt; bytes. The block of memory is sufficiently aligned for any of the basic foreign types that fits into a memory block of the allocated size.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:allocaBytes&quot;&gt;allocaBytes&lt;/a&gt; n f&lt;/code&gt; 执行计算 &lt;code&gt;f&lt;/code&gt; ，将指向临时分配的 &lt;code&gt;n&lt;/code&gt; 字节内存块的指针作为参数传递。对于适合分配大小的存储块的任何基本外部类型，该存储块都已充分对齐。</target>
        </trans-unit>
        <trans-unit id="f2ba2e7e29aaa12a74022482ac7bb88fbe0e0b96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; 其参数翻转。有关忽略结果的版本，请参见 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6ab889ad9f194c93c1eea10d838337f057a56901" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that ignores the results see &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdb0cf82593649629819bceb7666b11e7e622a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; ，其参数已翻转。对于一个版本不忽视，结果看到 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df8475c8cf49f84b6370923213383095fa9333d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:for_&quot;&gt;for_&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:traverse_&quot;&gt;traverse_&lt;/a&gt;&lt;/code&gt; with its arguments flipped. For a version that doesn't ignore the results see &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-traversable#v:for&quot;&gt;for&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028b5625464fb8097365abe596c3d54434e3ec10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; ignores the prevailing &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, and reads bytes directly.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; 忽略了 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 上流行的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; ，并直接读取字节。</target>
        </trans-unit>
        <trans-unit id="eaf72ee3c4b139e6871f68b5d4b0867bf429a8ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; ignores the prevailing &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, and reads bytes directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cfc1e5042a12660b3e720d93cf0cab9c7794d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; never raises an EOF exception, instead it returns a value smaller than &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; 从不引发EOF异常，而是返回小于 &lt;code&gt;count&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="f11b3c0865d210f9ab7b132999b6c4c16d6ef98e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;&lt;code&gt;hdl buf count&lt;/code&gt; reads data from the handle &lt;code&gt;hdl&lt;/code&gt; into the buffer &lt;code&gt;buf&lt;/code&gt; until either EOF is reached or &lt;code&gt;count&lt;/code&gt; 8-bit bytes have been read. It returns the number of bytes actually read. This may be zero if EOF was reached before any data was read (or if &lt;code&gt;count&lt;/code&gt; is zero).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; &lt;code&gt;hdl buf count&lt;/code&gt; 将数据从句柄 &lt;code&gt;hdl&lt;/code&gt; 读取到缓冲区 &lt;code&gt;buf&lt;/code&gt; 中,直到达到EOF或已读取8位字节 &lt;code&gt;count&lt;/code&gt; 为止。它返回实际读取的字节数。如果在读取任何数据之前已达到EOF（或 &lt;code&gt;count&lt;/code&gt; 为零），则该值为零。</target>
        </trans-unit>
        <trans-unit id="14075775c0ee25ea68f9e2f09601e21154b0a0f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt; ignores any text encoding that applies to the &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, writing the bytes directly to the underlying file or device.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt; 忽略适用于 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 的任何文本编码，直接将字节写入底层文件或设备。</target>
        </trans-unit>
        <trans-unit id="d99d667e36582cea7f2334c492a206fcb6df9006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt; ignores the prevailing &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, and writes bytes directly.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt; 忽略了 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 上流行的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; ，并直接写入字节。</target>
        </trans-unit>
        <trans-unit id="4692edaab9643d8a5e7c5c6c2f995daef5ee1220" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt; ignores the prevailing &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, and writes bytes directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0490d1f560a432f99bac3122c75fb8ef6af90f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt;&lt;code&gt;hdl buf count&lt;/code&gt; writes &lt;code&gt;count&lt;/code&gt; 8-bit bytes from the buffer &lt;code&gt;buf&lt;/code&gt; to the handle &lt;code&gt;hdl&lt;/code&gt;. It returns ().</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt; &lt;code&gt;hdl buf count&lt;/code&gt; 将来自缓冲区 &lt;code&gt;buf&lt;/code&gt; 的 &lt;code&gt;count&lt;/code&gt; 8位字节写入到句柄 &lt;code&gt;hdl&lt;/code&gt; 中。它返回（）。</target>
        </trans-unit>
        <trans-unit id="675e0c5497e4318c63592abccd2c82715047a160" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isAlreadyExistsError&quot;&gt;isAlreadyExistsError&lt;/a&gt;&lt;/code&gt; The operand refers to a directory that already exists. &lt;code&gt; [EEXIST]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isAlreadyExistsError&quot;&gt;isAlreadyExistsError&lt;/a&gt;&lt;/code&gt; 操作数引用一个已经存在的目录。 &lt;code&gt; [EEXIST]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e8d3a2ed896f8f5ead7e97db7d1db41059cac067" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; The directory does not exist. &lt;code&gt;[ENOENT, ENOTDIR]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 该目录不存在。 &lt;code&gt;[ENOENT, ENOTDIR]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="570fc6e70848e62062b5f67d22eb279fa47e3442" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; The document directory for the current user does not exist, or cannot be found.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 当前用户的文档目录不存在，或者找不到。</target>
        </trans-unit>
        <trans-unit id="e20e3f01828fc8f87cbe164a8b5c4e1b2aa04ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; The file does not exist. &lt;code&gt;[ENOENT, ENOTDIR]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 文件不存在。 &lt;code&gt;[ENOENT, ENOTDIR]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="858cd772984a7e4429db514018b70ce3afd9ae06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; The home directory for the current user does not exist, or cannot be found.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 当前用户的主目录不存在，或者找不到。</target>
        </trans-unit>
        <trans-unit id="7a85b3657c156b8ae293b591e0cb872c2e655091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; The original directory does not exist, or there is no path to the target. &lt;code&gt;[ENOENT, ENOTDIR]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 原始目录不存在，或者没有指向目标的路径。 &lt;code&gt;[ENOENT, ENOTDIR]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47c5c9601ce63bc94ccc8604c54e7bb22d69d8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; The original file does not exist, or there is no path to the target. &lt;code&gt;[ENOENT, ENOTDIR]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 原始文件不存在，或者没有指向目标的路径。 &lt;code&gt;[ENOENT, ENOTDIR]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d2ab4ae517a822445df2a1a704ad3674534b7b20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; There is no path referring to the working directory. &lt;code&gt;[EPERM, ENOENT, ESTALE...]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 没有指向工作目录的路径。 &lt;code&gt;[EPERM, ENOENT, ESTALE...]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae0dd37d90f48cfbdef6a570db9acc64836085b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; There is no path to the directory. &lt;code&gt;[ENOENT, ENOTDIR]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 没有目录的路径。 &lt;code&gt;[ENOENT, ENOTDIR]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="347fc8584d20e401ff8f78ac63c1500e20cf5de5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if the file or directory does not exist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 如果文件或目录不存在。</target>
        </trans-unit>
        <trans-unit id="e5fc418c169c85bf7e022cca595290b216e02ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if the symbolic link does not exist; or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 如果符号链接不存在；要么</target>
        </trans-unit>
        <trans-unit id="a4a49ab0d29fe4fe855dfb979840d520e0507041" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; The process has insufficient privileges to perform the operation. &lt;code&gt;[EACCES]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 该进程没有足够的权限执行该操作。 &lt;code&gt;[EACCES]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee56e32bdbd4711aea4be33a1fcaaf4bda21f029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; The process has insufficient privileges to perform the operation. &lt;code&gt;[EROFS, EACCES, EPERM]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 该进程没有足够的权限执行该操作。 &lt;code&gt;[EROFS, EACCES, EPERM]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b64e747953087c74ce74e2be09ce5f51ed1f10f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; The process has insufficient privileges to perform the operation. &lt;code&gt;[EROFS, EACCES]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 该进程没有足够的权限执行该操作。 &lt;code&gt;[EROFS, EACCES]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9131e447f68b5aa32b4fe3baa0338cd3a6741e0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if another system resource limit would be exceeded.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 如果将超过另一个系统资源限制。</target>
        </trans-unit>
        <trans-unit id="42d89f5accd453087b393d912d9093968f25de64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if the user is not permitted to access the permissions, or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 如果不允许用户访问权限，则为isPermissionError，或者</target>
        </trans-unit>
        <trans-unit id="c180a36cc0fcd2cf5d5a734f85406f596ffb1a04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if the user is not permitted to alter the access time; or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; ,如果不允许用户更改访问时间；要么</target>
        </trans-unit>
        <trans-unit id="05cff511b1fbc5935a930f77cb71c60e1570a1cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if the user is not permitted to alter the modification time; or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; ,如果不允许用户更改修改时间；要么</target>
        </trans-unit>
        <trans-unit id="60d066f5275ae106507bc969993fbcf135694886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if the user is not permitted to read the access time; or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; ,如果不允许用户读取访问时间；要么</target>
        </trans-unit>
        <trans-unit id="8fc550853d68871a0ca61e37d18be5e8873706bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if the user is not permitted to read the modification time; or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; ,如果不允许用户读取修改时间；要么</target>
        </trans-unit>
        <trans-unit id="7cfd615404ba5f6b6c0ef4f41d095e3187b64658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if the user is not permitted to read the symbolic link.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 如果不允许用户读取符号链接。</target>
        </trans-unit>
        <trans-unit id="d6d79b4dc766b0087bfb9c761ba001e872def17a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if the user is not permitted to set the permissions, or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; (如果不允许用户设置权限），或者</target>
        </trans-unit>
        <trans-unit id="8d1c7bba021927430b68ec57e72e32c19451ce3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344e76d740bf897453387371cea23cc330cac420" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; raises the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; exception in the given thread (GHC only).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:killThread&quot;&gt;killThread&lt;/a&gt;&lt;/code&gt; 在给定线程中引发 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:ThreadKilled&quot;&gt;ThreadKilled&lt;/a&gt;&lt;/code&gt; 异常（仅限GHC）。</target>
        </trans-unit>
        <trans-unit id="e615977c2722c4f0e45c54f7345e00cff9115bc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:on&quot;&gt;on&lt;/a&gt; b u x y&lt;/code&gt; runs the binary function &lt;code&gt;b&lt;/code&gt;&lt;em&gt;on&lt;/em&gt; the results of applying unary function &lt;code&gt;u&lt;/code&gt; to two arguments &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. From the opposite perspective, it transforms two inputs and combines the outputs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:on&quot;&gt;on&lt;/a&gt; b u x y&lt;/code&gt; &lt;em&gt;上&lt;/em&gt;，将一元函数 &lt;code&gt;u&lt;/code&gt; 应用于两个参数 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的结果运行二进制函数 &lt;code&gt;b&lt;/code&gt; 。从相反的角度来看，它转换两个输入并合并输出。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="786c99907a020f9c48152e8d24c6885af0611c87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; is single-wakeup. That is, if there are multiple threads blocked in &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; becomes empty, only one thread will be woken up. The runtime guarantees that the woken thread completes its &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 是单次唤醒。也就是说，如果 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 中阻塞了多个线程，而 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 变为空，则只会唤醒一个线程。运行时保证唤醒的线程完成其 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="74a812d8a8c0f3519c071dad1226398b35116293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; is single-wakeup. That is, if there are multiple threads blocked in &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; becomes empty, only one thread will be woken up. The runtime guarantees that the woken thread completes its &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e578064f0da8499089a403d976f0baf9159aed9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; is multiple-wakeup, so when multiple readers are blocked on an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, all of them are woken up at the same time.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 是多次唤醒，因此当在 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 上阻止多个读取器时，所有这些读取器将同时被唤醒。</target>
        </trans-unit>
        <trans-unit id="249cb4fb75c51d144375974f15423f8de0ca57cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; is multiple-wakeup, so when multiple readers are blocked on an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, all of them are woken up at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b3f50ac80b1318619fa52bcf2532a8192f5aefc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; is single-wakeup. That is, if there are multiple threads blocked in &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; becomes full, only one thread will be woken up. The runtime guarantees that the woken thread completes its &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 是单次唤醒。也就是说，如果 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 中阻塞了多个线程，并且 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 已满，则只会唤醒一个线程。运行时保证唤醒的线程完成其 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="b69d3fc09ff33c36a03a7ba1a1ea73aff653b08e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; is single-wakeup. That is, if there are multiple threads blocked in &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; becomes full, only one thread will be woken up. The runtime guarantees that the woken thread completes its &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4939a05367193825eecc5af2806613fa289229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:with&quot;&gt;with&lt;/a&gt; val f&lt;/code&gt; executes the computation &lt;code&gt;f&lt;/code&gt;, passing as argument a pointer to a temporarily allocated block of memory into which &lt;code&gt;val&lt;/code&gt; has been marshalled (the combination of &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:alloca&quot;&gt;alloca&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:poke&quot;&gt;poke&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:with&quot;&gt;with&lt;/a&gt; val f&lt;/code&gt; 执行计算 &lt;code&gt;f&lt;/code&gt; ，将指向一个临时分配的内存块的指针作为参数传递， &lt;code&gt;val&lt;/code&gt; 被编组到其中（ &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:alloca&quot;&gt;alloca&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:poke&quot;&gt;poke&lt;/a&gt;&lt;/code&gt; 的组合）。</target>
        </trans-unit>
        <trans-unit id="9e61feadfc129e536f83d38e4032d764857e8122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:withBinaryFile&quot;&gt;withBinaryFile&lt;/a&gt; name mode act&lt;/code&gt; opens a file using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; and passes the resulting handle to the computation &lt;code&gt;act&lt;/code&gt;. The handle will be closed on exit from &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:withBinaryFile&quot;&gt;withBinaryFile&lt;/a&gt;&lt;/code&gt;, whether by normal termination or by raising an exception.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:withBinaryFile&quot;&gt;withBinaryFile&lt;/a&gt; name mode act&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; 打开文件并将结果句柄传递给计算 &lt;code&gt;act&lt;/code&gt; 。无论是通过正常终止还是引发异常，都将在 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:withBinaryFile&quot;&gt;withBinaryFile&lt;/a&gt;&lt;/code&gt; 退出时关闭该句柄。</target>
        </trans-unit>
        <trans-unit id="c6dad49a905f8d674e7d0ee29159ce4a7bd8962f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:withBinaryFile&quot;&gt;withBinaryFile&lt;/a&gt; name mode act&lt;/code&gt; opens a file using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle-fd#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; and passes the resulting handle to the computation &lt;code&gt;act&lt;/code&gt;. The handle will be closed on exit from &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:withBinaryFile&quot;&gt;withBinaryFile&lt;/a&gt;&lt;/code&gt;, whether by normal termination or by raising an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f4bfc1af66b1f78e6fa201119dedebf31cea28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-environment#v:getEnvironment&quot;&gt;getEnvironment&lt;/a&gt;&lt;/code&gt; retrieves the entire environment as a list of &lt;code&gt;(key,value)&lt;/code&gt; pairs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-environment#v:getEnvironment&quot;&gt;getEnvironment&lt;/a&gt;&lt;/code&gt; 检索整个环境作为 &lt;code&gt;(key,value)&lt;/code&gt; 对的列表。</target>
        </trans-unit>
        <trans-unit id="77b5a03cf9bedea531e171f5f1e26bc4003a8f2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-environment#v:withArgs&quot;&gt;withArgs&lt;/a&gt;&lt;/code&gt;&lt;code&gt;args act&lt;/code&gt; - while executing action &lt;code&gt;act&lt;/code&gt;, have &lt;code&gt;&lt;a href=&quot;system-environment#v:getArgs&quot;&gt;getArgs&lt;/a&gt;&lt;/code&gt; return &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-environment#v:withArgs&quot;&gt;withArgs&lt;/a&gt;&lt;/code&gt; &lt;code&gt;args act&lt;/code&gt; act-在执行动作 &lt;code&gt;act&lt;/code&gt; 时，让 &lt;code&gt;&lt;a href=&quot;system-environment#v:getArgs&quot;&gt;getArgs&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;args&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab56e078d2844082ad734d0aabb2c57a6ce5bc98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-environment#v:withProgName&quot;&gt;withProgName&lt;/a&gt;&lt;/code&gt;&lt;code&gt;name act&lt;/code&gt; - while executing action &lt;code&gt;act&lt;/code&gt;, have &lt;code&gt;&lt;a href=&quot;system-environment#v:getProgName&quot;&gt;getProgName&lt;/a&gt;&lt;/code&gt; return &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-environment#v:withProgName&quot;&gt;withProgName&lt;/a&gt;&lt;/code&gt; &lt;code&gt;name act&lt;/code&gt; act-执行动作 &lt;code&gt;act&lt;/code&gt; 时，具有 &lt;code&gt;&lt;a href=&quot;system-environment#v:getProgName&quot;&gt;getProgName&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f58d145ae3238904f6ded50a490545f505e32944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-environment-blank#v:getEnvironment&quot;&gt;getEnvironment&lt;/a&gt;&lt;/code&gt; retrieves the entire environment as a list of &lt;code&gt;(key,value)&lt;/code&gt; pairs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-environment-blank#v:getEnvironment&quot;&gt;getEnvironment&lt;/a&gt;&lt;/code&gt; 检索整个环境作为 &lt;code&gt;(key,value)&lt;/code&gt; 对的列表。</target>
        </trans-unit>
        <trans-unit id="6013d33c430ebf7ce02db5cc25b9470bb617134d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-environment-blank#v:withArgs&quot;&gt;withArgs&lt;/a&gt;&lt;/code&gt;&lt;code&gt;args act&lt;/code&gt; - while executing action &lt;code&gt;act&lt;/code&gt;, have &lt;code&gt;&lt;a href=&quot;system-environment-blank#v:getArgs&quot;&gt;getArgs&lt;/a&gt;&lt;/code&gt; return &lt;code&gt;args&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-environment-blank#v:withArgs&quot;&gt;withArgs&lt;/a&gt;&lt;/code&gt; &lt;code&gt;args act&lt;/code&gt; act-在执行动作 &lt;code&gt;act&lt;/code&gt; 时，让 &lt;code&gt;&lt;a href=&quot;system-environment-blank#v:getArgs&quot;&gt;getArgs&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;args&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff4e2cb305925639cfd5cfb1c2f1ba63b4d75cb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-environment-blank#v:withProgName&quot;&gt;withProgName&lt;/a&gt;&lt;/code&gt;&lt;code&gt;name act&lt;/code&gt; - while executing action &lt;code&gt;act&lt;/code&gt;, have &lt;code&gt;&lt;a href=&quot;system-environment-blank#v:getProgName&quot;&gt;getProgName&lt;/a&gt;&lt;/code&gt; return &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-environment-blank#v:withProgName&quot;&gt;withProgName&lt;/a&gt;&lt;/code&gt; &lt;code&gt;name act&lt;/code&gt; act-执行动作 &lt;code&gt;act&lt;/code&gt; 时，具有 &lt;code&gt;&lt;a href=&quot;system-environment-blank#v:getProgName&quot;&gt;getProgName&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="750cbc8039fe1c83e8763f28996fdc34077a41e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:dropExtension&quot;&gt;dropExtension&lt;/a&gt;&lt;/code&gt; gives &lt;code&gt;&quot;/directory/file&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:dropExtension&quot;&gt;dropExtension&lt;/a&gt;&lt;/code&gt; 给出 &lt;code&gt;&quot;/directory/file&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee498c484d9daa5b759cbcd3d038588c60a44a4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeBaseName&quot;&gt;takeBaseName&lt;/a&gt;&lt;/code&gt; gives &lt;code&gt;&quot;file&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeBaseName&quot;&gt;takeBaseName&lt;/a&gt;&lt;/code&gt; 给出 &lt;code&gt;&quot;file&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="204e024900f7186a24f70c664c7a279d94013014" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt; gives &lt;code&gt;&quot;/directory&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt; 给出 &lt;code&gt;&quot;/directory&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="505fc89627c6e7b66a4e50349bdf9c2ce4989f4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeExtension&quot;&gt;takeExtension&lt;/a&gt;&lt;/code&gt; gives &lt;code&gt;&quot;.ext&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeExtension&quot;&gt;takeExtension&lt;/a&gt;&lt;/code&gt; 给出 &lt;code&gt;&quot;.ext&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9828687142d3f94e89126e3b00c12daaf2d4cd55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeFileName&quot;&gt;takeFileName&lt;/a&gt;&lt;/code&gt; gives &lt;code&gt;&quot;file.ext&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:takeFileName&quot;&gt;takeFileName&lt;/a&gt;&lt;/code&gt; 给出 &lt;code&gt;&quot;file.ext&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a8b69a5412a9c411b18cda76536b61138da5070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:dropExtension&quot;&gt;dropExtension&lt;/a&gt;&lt;/code&gt; gives &lt;code&gt;&quot;/directory/file&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:dropExtension&quot;&gt;dropExtension&lt;/a&gt;&lt;/code&gt; 给出 &lt;code&gt;&quot;/directory/file&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67fe48558f1fa4ec40f72ce35a9aab921fcd7182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeBaseName&quot;&gt;takeBaseName&lt;/a&gt;&lt;/code&gt; gives &lt;code&gt;&quot;file&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeBaseName&quot;&gt;takeBaseName&lt;/a&gt;&lt;/code&gt; 给出 &lt;code&gt;&quot;file&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f3d9d266b688f599b0358a6292fe227b5ec8759f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt; gives &lt;code&gt;&quot;/directory&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeDirectory&quot;&gt;takeDirectory&lt;/a&gt;&lt;/code&gt; 给出 &lt;code&gt;&quot;/directory&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e898427c7f13c21982b1e0944597a896ad6ad697" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeExtension&quot;&gt;takeExtension&lt;/a&gt;&lt;/code&gt; gives &lt;code&gt;&quot;.ext&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeExtension&quot;&gt;takeExtension&lt;/a&gt;&lt;/code&gt; 给出 &lt;code&gt;&quot;.ext&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6f4096a36fedbe5e31682897c961e85cc71b392" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeFileName&quot;&gt;takeFileName&lt;/a&gt;&lt;/code&gt; gives &lt;code&gt;&quot;file.ext&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:takeFileName&quot;&gt;takeFileName&lt;/a&gt;&lt;/code&gt; 给出 &lt;code&gt;&quot;file.ext&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fd87e5da495cc20bcf39cf6c0ba9d2a05fc5f65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; is a monad, so &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; actions can be combined using either the do-notation or the &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; operations from the &lt;code&gt;&lt;a href=&quot;prelude#v:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 是一个单子，所以 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 动作就可以利用DO-符号或组合 &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;prelude#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; 操作自 &lt;code&gt;&lt;a href=&quot;prelude#v:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="0c113f8cff9254292f69bc05445fda1246e90fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; ignores the prevailing &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, and reads bytes directly.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; 忽略了 &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 上流行的 &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; ，并直接读取字节。</target>
        </trans-unit>
        <trans-unit id="1e51dc3c610b9def739345e883f90795ad069471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; never raises an EOF exception, instead it returns a value smaller than &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; 从不引发EOF异常，而是返回小于 &lt;code&gt;count&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="fedf06dacc84d057e0aff65b80b4609f5234e578" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;&lt;code&gt;hdl buf count&lt;/code&gt; reads data from the handle &lt;code&gt;hdl&lt;/code&gt; into the buffer &lt;code&gt;buf&lt;/code&gt; until either EOF is reached or &lt;code&gt;count&lt;/code&gt; 8-bit bytes have been read. It returns the number of bytes actually read. This may be zero if EOF was reached before any data was read (or if &lt;code&gt;count&lt;/code&gt; is zero).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; &lt;code&gt;hdl buf count&lt;/code&gt; 将数据从句柄 &lt;code&gt;hdl&lt;/code&gt; 读取到缓冲区 &lt;code&gt;buf&lt;/code&gt; 中,直到达到EOF或已读取8位字节 &lt;code&gt;count&lt;/code&gt; 为止。它返回实际读取的字节数。如果在读取任何数据之前已达到EOF（或 &lt;code&gt;count&lt;/code&gt; 为零），则该值为零。</target>
        </trans-unit>
        <trans-unit id="47492e6c7d3b7b167bf4a77f02ebb3177702211f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufNonBlocking&quot;&gt;hGetBufNonBlocking&lt;/a&gt;&lt;/code&gt; ignores the prevailing &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, and reads bytes directly.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufNonBlocking&quot;&gt;hGetBufNonBlocking&lt;/a&gt;&lt;/code&gt; 忽略了 &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 上流行的 &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; ，并直接读取字节。</target>
        </trans-unit>
        <trans-unit id="8d5e68a418777562629e83c6914b5965e4f8b7de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufNonBlocking&quot;&gt;hGetBufNonBlocking&lt;/a&gt;&lt;/code&gt; is identical to &lt;code&gt;&lt;a href=&quot;system-io#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt;, except that it will never block waiting for data to become available, instead it returns only whatever data is available. To wait for data to arrive before calling &lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufNonBlocking&quot;&gt;hGetBufNonBlocking&lt;/a&gt;&lt;/code&gt;, use &lt;code&gt;&lt;a href=&quot;system-io#v:hWaitForInput&quot;&gt;hWaitForInput&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufNonBlocking&quot;&gt;hGetBufNonBlocking&lt;/a&gt;&lt;/code&gt; 是相同的 &lt;code&gt;&lt;a href=&quot;system-io#v:hGetBuf&quot;&gt;hGetBuf&lt;/a&gt;&lt;/code&gt; ，但它不会阻塞等待数据变得可用，而不是它的任何数据只能返回。要在调用 &lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufNonBlocking&quot;&gt;hGetBufNonBlocking&lt;/a&gt;&lt;/code&gt; 之前等待数据到达，请使用 &lt;code&gt;&lt;a href=&quot;system-io#v:hWaitForInput&quot;&gt;hWaitForInput&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="01b3ffe2679a681145b675a90cf9229e33661ea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufNonBlocking&quot;&gt;hGetBufNonBlocking&lt;/a&gt;&lt;/code&gt;&lt;code&gt;hdl buf count&lt;/code&gt; reads data from the handle &lt;code&gt;hdl&lt;/code&gt; into the buffer &lt;code&gt;buf&lt;/code&gt; until either EOF is reached, or &lt;code&gt;count&lt;/code&gt; 8-bit bytes have been read, or there is no more data available to read immediately.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufNonBlocking&quot;&gt;hGetBufNonBlocking&lt;/a&gt;&lt;/code&gt; &lt;code&gt;hdl buf count&lt;/code&gt; 将数据从句柄 &lt;code&gt;hdl&lt;/code&gt; 读取到缓冲区 &lt;code&gt;buf&lt;/code&gt; 中,直到达到EOF或已读取8位字节 &lt;code&gt;count&lt;/code&gt; ，或者没有更多数据可立即读取。</target>
        </trans-unit>
        <trans-unit id="900ccd5046937da12e632c0bd8f4813e0b7ef207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufSome&quot;&gt;hGetBufSome&lt;/a&gt;&lt;/code&gt; ignores the prevailing &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, and reads bytes directly.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufSome&quot;&gt;hGetBufSome&lt;/a&gt;&lt;/code&gt; 忽略了 &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 上流行的 &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; ，并直接读取字节。</target>
        </trans-unit>
        <trans-unit id="22c26258224fd2f78d0012cf7ca47b489b5ae960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufSome&quot;&gt;hGetBufSome&lt;/a&gt;&lt;/code&gt; never raises an EOF exception, instead it returns a value smaller than &lt;code&gt;count&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufSome&quot;&gt;hGetBufSome&lt;/a&gt;&lt;/code&gt; 永远不会引发EOF异常，而是返回小于 &lt;code&gt;count&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="118c238c7398f2db604334baf0dccba6607b9e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufSome&quot;&gt;hGetBufSome&lt;/a&gt;&lt;/code&gt;&lt;code&gt;hdl buf count&lt;/code&gt; reads data from the handle &lt;code&gt;hdl&lt;/code&gt; into the buffer &lt;code&gt;buf&lt;/code&gt;. If there is any data available to read, then &lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufSome&quot;&gt;hGetBufSome&lt;/a&gt;&lt;/code&gt; returns it immediately; it only blocks if there is no data to be read.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufSome&quot;&gt;hGetBufSome&lt;/a&gt;&lt;/code&gt; &lt;code&gt;hdl buf count&lt;/code&gt; 将数据从句柄 &lt;code&gt;hdl&lt;/code&gt; 读取到缓冲区 &lt;code&gt;buf&lt;/code&gt; 中。如果有任何数据可读取，则 &lt;code&gt;&lt;a href=&quot;system-io#v:hGetBufSome&quot;&gt;hGetBufSome&lt;/a&gt;&lt;/code&gt; 立即将其返回；否则， hGetBufSome将立即返回该数据。仅当没有数据要读取时才阻塞。</target>
        </trans-unit>
        <trans-unit id="70fd3acb2ea09a247c6cc9f61439f4360fb06b9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt; ignores any text encoding that applies to the &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, writing the bytes directly to the underlying file or device.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt; 忽略适用于 &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 的任何文本编码，直接将字节写入底层文件或设备。</target>
        </trans-unit>
        <trans-unit id="e2c77d44f270fef69a537c97036ebff6b054a777" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt; ignores the prevailing &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, and writes bytes directly.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt; 忽略了 &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 上流行的 &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-io#t:NewlineMode&quot;&gt;NewlineMode&lt;/a&gt;&lt;/code&gt; ，并直接写入字节。</target>
        </trans-unit>
        <trans-unit id="79fa5cc1f0dea220b5d570d24561ebd4cee15a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt;&lt;code&gt;hdl buf count&lt;/code&gt; writes &lt;code&gt;count&lt;/code&gt; 8-bit bytes from the buffer &lt;code&gt;buf&lt;/code&gt; to the handle &lt;code&gt;hdl&lt;/code&gt;. It returns ().</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hPutBuf&quot;&gt;hPutBuf&lt;/a&gt;&lt;/code&gt; &lt;code&gt;hdl buf count&lt;/code&gt; 将来自缓冲区 &lt;code&gt;buf&lt;/code&gt; 的 &lt;code&gt;count&lt;/code&gt; 8位字节写入到句柄 &lt;code&gt;hdl&lt;/code&gt; 中。它返回（）。</target>
        </trans-unit>
        <trans-unit id="d26bfccb8bc5cc4f2e1a6ae4c49863b3fecc5656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hSetEncoding&quot;&gt;hSetEncoding&lt;/a&gt;&lt;/code&gt; may need to flush buffered data in order to change the encoding.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hSetEncoding&quot;&gt;hSetEncoding&lt;/a&gt;&lt;/code&gt; 可能需要刷新缓冲的数据才能更改编码。</target>
        </trans-unit>
        <trans-unit id="4f709fcc15fedd012e20af0c4a2ce129ee579458" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hSetFileSize&quot;&gt;hSetFileSize&lt;/a&gt;&lt;/code&gt;&lt;code&gt;hdl&lt;/code&gt;&lt;code&gt;size&lt;/code&gt; truncates the physical file with handle &lt;code&gt;hdl&lt;/code&gt; to &lt;code&gt;size&lt;/code&gt; bytes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hSetFileSize&quot;&gt;hSetFileSize&lt;/a&gt;&lt;/code&gt; &lt;code&gt;hdl&lt;/code&gt; &lt;code&gt;size&lt;/code&gt; 截断带手柄的物理文件 &lt;code&gt;hdl&lt;/code&gt; 到 &lt;code&gt;size&lt;/code&gt; 字节。</target>
        </trans-unit>
        <trans-unit id="fee68b3d1c21bbb0d90dc848ac40c2956dc50c88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:hShow&quot;&gt;hShow&lt;/a&gt;&lt;/code&gt; is in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad, and gives more comprehensive output than the (pure) instance of &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:hShow&quot;&gt;hShow&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad中，并且比 &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; for &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 的（纯）实例提供更全面的输出。</target>
        </trans-unit>
        <trans-unit id="5868d6a3771c787f8c7a6ca4570efb80ef87837a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:withBinaryFile&quot;&gt;withBinaryFile&lt;/a&gt; name mode act&lt;/code&gt; opens a file using &lt;code&gt;&lt;a href=&quot;system-io#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; and passes the resulting handle to the computation &lt;code&gt;act&lt;/code&gt;. The handle will be closed on exit from &lt;code&gt;&lt;a href=&quot;system-io#v:withBinaryFile&quot;&gt;withBinaryFile&lt;/a&gt;&lt;/code&gt;, whether by normal termination or by raising an exception.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:withBinaryFile&quot;&gt;withBinaryFile&lt;/a&gt; name mode act&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;system-io#v:openBinaryFile&quot;&gt;openBinaryFile&lt;/a&gt;&lt;/code&gt; 打开文件并将结果句柄传递给计算 &lt;code&gt;act&lt;/code&gt; 。无论是通过正常终止还是引发异常，都将在 &lt;code&gt;&lt;a href=&quot;system-io#v:withBinaryFile&quot;&gt;withBinaryFile&lt;/a&gt;&lt;/code&gt; 退出时关闭该句柄。</target>
        </trans-unit>
        <trans-unit id="bbf5cb2c1fd5be3e782db10ab3e5cb2a4b1ee149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io#v:withFile&quot;&gt;withFile&lt;/a&gt; name mode act&lt;/code&gt; opens a file using &lt;code&gt;&lt;a href=&quot;system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt; and passes the resulting handle to the computation &lt;code&gt;act&lt;/code&gt;. The handle will be closed on exit from &lt;code&gt;&lt;a href=&quot;system-io#v:withFile&quot;&gt;withFile&lt;/a&gt;&lt;/code&gt;, whether by normal termination or by raising an exception. If closing the handle raises an exception, then this exception will be raised by &lt;code&gt;&lt;a href=&quot;system-io#v:withFile&quot;&gt;withFile&lt;/a&gt;&lt;/code&gt; rather than any exception raised by &lt;code&gt;act&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#v:withFile&quot;&gt;withFile&lt;/a&gt; name mode act&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;system-io#v:openFile&quot;&gt;openFile&lt;/a&gt;&lt;/code&gt; 打开文件并将结果句柄传递给计算 &lt;code&gt;act&lt;/code&gt; 。在退出 &lt;code&gt;&lt;a href=&quot;system-io#v:withFile&quot;&gt;withFile&lt;/a&gt;&lt;/code&gt; 时，无论是正常终止还是引发异常，都将关闭该句柄。如果关闭句柄引发异常，则此异常将由 &lt;code&gt;&lt;a href=&quot;system-io#v:withFile&quot;&gt;withFile&lt;/a&gt;&lt;/code&gt; 引发，而不是 &lt;code&gt;act&lt;/code&gt; 引发的任何异常。</target>
        </trans-unit>
        <trans-unit id="dabc71eec17f83a93ea23ff66cab4a1dc6ba84c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isAlreadyInUseError&quot;&gt;isAlreadyInUseError&lt;/a&gt;&lt;/code&gt; if the file is already open and cannot be reopened;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isAlreadyInUseError&quot;&gt;isAlreadyInUseError&lt;/a&gt;&lt;/code&gt; 如果文件已经打开并且无法重新打开；</target>
        </trans-unit>
        <trans-unit id="75e8b0ed7a31703858ed0a28c48503222d5319df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if the encoding is unknown</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 如果编码未知</target>
        </trans-unit>
        <trans-unit id="a3003e85eaf3fbc4d4ba4bf2a4cb43b86fc85bdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if the environment variable does not exist.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 如果环境变量不存在，则为isDoesNotExistError。</target>
        </trans-unit>
        <trans-unit id="084f3f0a8dd95c22a11cd704ae034bf71b1f18cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if the file does not exist or (on POSIX systems) is a FIFO without a reader and &lt;code&gt;&lt;a href=&quot;system-io#v:WriteMode&quot;&gt;WriteMode&lt;/a&gt;&lt;/code&gt; was requested; or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; ,如果文件不存在或（在POSIX系统上）是没有读取器的FIFO并请求了 &lt;code&gt;&lt;a href=&quot;system-io#v:WriteMode&quot;&gt;WriteMode&lt;/a&gt;&lt;/code&gt; ；要么</target>
        </trans-unit>
        <trans-unit id="c936737e355c2bbc41be6c619b317caa00c885f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isEOFError&quot;&gt;isEOFError&lt;/a&gt;&lt;/code&gt; if the end of file has been reached.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isEOFError&quot;&gt;isEOFError&lt;/a&gt;&lt;/code&gt; 如果已到达文件末尾。</target>
        </trans-unit>
        <trans-unit id="ea9e4b0caa72bab041ae1ff68c755698491c977d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isEOFError&quot;&gt;isEOFError&lt;/a&gt;&lt;/code&gt; if the end of file is encountered when reading the &lt;em&gt;first&lt;/em&gt; character of the line.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isEOFError&quot;&gt;isEOFError&lt;/a&gt;&lt;/code&gt; 如果在读取行的&lt;em&gt;第一个&lt;/em&gt;字符时遇到文件结尾。</target>
        </trans-unit>
        <trans-unit id="61c609bcfaa99944aeb4ff3e9dd3d277f3cdb404" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 如果设备已满；</target>
        </trans-unit>
        <trans-unit id="8b22ca3a03b411a711bed4b581a930e9ee4bf29b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; if the device is full; or</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isFullError&quot;&gt;isFullError&lt;/a&gt;&lt;/code&gt; 如果设备已满；要么</target>
        </trans-unit>
        <trans-unit id="45e7a82af7669853759d0945fa89a702e11253c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;hdl&lt;/code&gt; has buffered read data, and is not seekable.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isIllegalOperation&quot;&gt;isIllegalOperation&lt;/a&gt;&lt;/code&gt; ,如果 &lt;code&gt;hdl&lt;/code&gt; 已缓冲读取的数据，并且不可搜索。</target>
        </trans-unit>
        <trans-unit id="4da7adc31ef4edef17a242440c7d64d638a8bd80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isIllegalOperationError&quot;&gt;isIllegalOperationError&lt;/a&gt;&lt;/code&gt; if the Handle is not seekable, or does not support the requested seek mode.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isIllegalOperationError&quot;&gt;isIllegalOperationError&lt;/a&gt;&lt;/code&gt; 如果该句柄不可搜索，或不支持请求的搜索模式。</target>
        </trans-unit>
        <trans-unit id="c8e8eb6cf62901659fe79c54f96421c223046405" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isIllegalOperationError&quot;&gt;isIllegalOperationError&lt;/a&gt;&lt;/code&gt; if the Handle is not seekable.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isIllegalOperationError&quot;&gt;isIllegalOperationError&lt;/a&gt;&lt;/code&gt; (如果该句柄不可搜索）。</target>
        </trans-unit>
        <trans-unit id="5ce2292e357dc0bd830c43d2560fdb040d147b0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if a system resource limit would be exceeded.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 如果将超过系统资源限制。</target>
        </trans-unit>
        <trans-unit id="8c1106621d2a78ef47cd789f50dfd1a8b9f50c67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if a system resource limit would be exceeded. It is unspecified whether the characters in the buffer are discarded or retained under these circumstances.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 如果将超过系统资源限制。在这些情况下，是否丢弃或保留缓冲区中的字符尚不确定。</target>
        </trans-unit>
        <trans-unit id="2180955149dbf5012930133930c9cc308ff60476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if a system resource limit would be exceeded. It is unspecified whether the characters in the buffer are discarded or retained under these circumstances;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 如果将超过系统资源限制。在这种情况下，是否丢弃或保留缓冲区中的字符尚不确定。</target>
        </trans-unit>
        <trans-unit id="f1e9517f13f2c20a3e48c3a33ab514f471703b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if another system resource limit would be exceeded.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 如果将超过另一个系统资源限制。</target>
        </trans-unit>
        <trans-unit id="d8930e357a572dfef9dbdede92f4e890fe39a178" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if the handle has already been used for reading or writing and the implementation does not allow the buffering mode to be changed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; ,如果该句柄已经用于读取或写入，并且实现不允许更改缓冲模式。</target>
        </trans-unit>
        <trans-unit id="e9bbfadf606b4d0c13351714bfa1ed22830942d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; if the user does not have permission to open the file.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-error#v:isPermissionError&quot;&gt;isPermissionError&lt;/a&gt;&lt;/code&gt; 如果用户没有打开文件的权限，则为isPermissionError。</target>
        </trans-unit>
        <trans-unit id="9a84d685062db941954c961e65e03ffbf15c9da5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafeInterleaveIO&quot;&gt;unsafeInterleaveIO&lt;/a&gt;&lt;/code&gt; allows an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation to be deferred lazily. When passed a value of type &lt;code&gt;IO a&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; will only be performed when the value of the &lt;code&gt;a&lt;/code&gt; is demanded. This is used to implement lazy file reading, see &lt;code&gt;&lt;a href=&quot;system-io#v:hGetContents&quot;&gt;hGetContents&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafeInterleaveIO&quot;&gt;unsafeInterleaveIO&lt;/a&gt;&lt;/code&gt; 允许延迟 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 计算。当传递类型的值 &lt;code&gt;IO a&lt;/code&gt; ，所述 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 将仅在的值时所执行的 &lt;code&gt;a&lt;/code&gt; 被征求。这用于实现懒文件读取，请参阅 &lt;code&gt;&lt;a href=&quot;system-io#v:hGetContents&quot;&gt;hGetContents&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="636f9ef00f0bbe41d9813b08a2e27024248f864a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix#v:dlsym&quot;&gt;dlsym&lt;/a&gt;&lt;/code&gt; returns the address binding of the symbol described in &lt;code&gt;symbol&lt;/code&gt;, as it occurs in the shared object identified by &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix#v:dlsym&quot;&gt;dlsym&lt;/a&gt;&lt;/code&gt; 返回符号中描述的 &lt;code&gt;symbol&lt;/code&gt; 的地址绑定，因为它发生在 &lt;code&gt;source&lt;/code&gt; 标识的共享库中。</target>
        </trans-unit>
        <trans-unit id="db638659b004f209b3be8d77aaba2e2a820082ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix#v:undl&quot;&gt;undl&lt;/a&gt;&lt;/code&gt; obtains the raw handle. You mustn't do something like &lt;code&gt;withDL mod flags $ liftM undl &amp;gt;&amp;gt;=  p -&amp;gt; use p&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix#v:undl&quot;&gt;undl&lt;/a&gt;&lt;/code&gt; 获取原始句柄。您一定不能对 &lt;code&gt;withDL mod flags $ liftM undl &amp;gt;&amp;gt;= p -&amp;gt; use p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="594f51891d30d86cfed741461446e3a9341bd7ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-bytestring#v:dlsym&quot;&gt;dlsym&lt;/a&gt;&lt;/code&gt; returns the address binding of the symbol described in &lt;code&gt;symbol&lt;/code&gt;, as it occurs in the shared object identified by &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-bytestring#v:dlsym&quot;&gt;dlsym&lt;/a&gt;&lt;/code&gt; 返回符号中描述的 &lt;code&gt;symbol&lt;/code&gt; 的地址绑定，因为它发生在 &lt;code&gt;source&lt;/code&gt; 标识的共享库中。</target>
        </trans-unit>
        <trans-unit id="38a741da0985ccc5379b3b2289e21c9c8ecc6c53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-bytestring#v:undl&quot;&gt;undl&lt;/a&gt;&lt;/code&gt; obtains the raw handle. You mustn't do something like &lt;code&gt;withDL mod flags $ liftM undl &amp;gt;&amp;gt;=  p -&amp;gt; use p&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-bytestring#v:undl&quot;&gt;undl&lt;/a&gt;&lt;/code&gt; 获取原始句柄。您一定不能对 &lt;code&gt;withDL mod flags $ liftM undl &amp;gt;&amp;gt;= p -&amp;gt; use p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6ffd9b58b987c6fd0a2c462b44c0987761e83f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker#v:dlsym&quot;&gt;dlsym&lt;/a&gt;&lt;/code&gt; returns the address binding of the symbol described in &lt;code&gt;symbol&lt;/code&gt;, as it occurs in the shared object identified by &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker#v:dlsym&quot;&gt;dlsym&lt;/a&gt;&lt;/code&gt; 返回符号中描述的 &lt;code&gt;symbol&lt;/code&gt; 的地址绑定，因为它发生在 &lt;code&gt;source&lt;/code&gt; 标识的共享库中。</target>
        </trans-unit>
        <trans-unit id="6bc263b138bbc4a173923c1e1aefd1e9bda3260d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker#v:undl&quot;&gt;undl&lt;/a&gt;&lt;/code&gt; obtains the raw handle. You mustn't do something like &lt;code&gt;withDL mod flags $ liftM undl &amp;gt;&amp;gt;=  p -&amp;gt; use p&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker#v:undl&quot;&gt;undl&lt;/a&gt;&lt;/code&gt; 获取原始句柄。您一定不能对 &lt;code&gt;withDL mod flags $ liftM undl &amp;gt;&amp;gt;= p -&amp;gt; use p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e4787c41d0942e72d36598464f8701661cb6393" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker-bytestring#v:dlsym&quot;&gt;dlsym&lt;/a&gt;&lt;/code&gt; returns the address binding of the symbol described in &lt;code&gt;symbol&lt;/code&gt;, as it occurs in the shared object identified by &lt;code&gt;source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker-bytestring#v:dlsym&quot;&gt;dlsym&lt;/a&gt;&lt;/code&gt; 返回符号中描述的 &lt;code&gt;symbol&lt;/code&gt; 的地址绑定，因为它发生在 &lt;code&gt;source&lt;/code&gt; 标识的共享库中。</target>
        </trans-unit>
        <trans-unit id="3bc21cb66946a59fcabcd04a2651b642cc04cdfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker-bytestring#v:undl&quot;&gt;undl&lt;/a&gt;&lt;/code&gt; obtains the raw handle. You mustn't do something like &lt;code&gt;withDL mod flags $ liftM undl &amp;gt;&amp;gt;=  p -&amp;gt; use p&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker-bytestring#v:undl&quot;&gt;undl&lt;/a&gt;&lt;/code&gt; 获取原始句柄。您一定不能对 &lt;code&gt;withDL mod flags $ liftM undl &amp;gt;&amp;gt;= p -&amp;gt; use p&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="875b6886f5f845cde066821d5d52dcec6a8d27c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-env#v:getEnv&quot;&gt;getEnv&lt;/a&gt;&lt;/code&gt; looks up a variable in the environment.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-env#v:getEnv&quot;&gt;getEnv&lt;/a&gt;&lt;/code&gt; 在环境中查找变量。</target>
        </trans-unit>
        <trans-unit id="77f55c89f7417b0b10d95b889afaa28b4a9090e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-env#v:getEnvDefault&quot;&gt;getEnvDefault&lt;/a&gt;&lt;/code&gt; is a wrapper around &lt;code&gt;&lt;a href=&quot;system-posix-env#v:getEnv&quot;&gt;getEnv&lt;/a&gt;&lt;/code&gt; where the programmer can specify a fallback if the variable is not found in the environment.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-env#v:getEnvDefault&quot;&gt;getEnvDefault&lt;/a&gt;&lt;/code&gt; 周围的包装 &lt;code&gt;&lt;a href=&quot;system-posix-env#v:getEnv&quot;&gt;getEnv&lt;/a&gt;&lt;/code&gt; 其中如果变量未在环境中发现的程序员可以指定一个备用。</target>
        </trans-unit>
        <trans-unit id="cca2c0a4d829cb0ea281df253eab24ce8639f433" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-env#v:getEnvironment&quot;&gt;getEnvironment&lt;/a&gt;&lt;/code&gt; retrieves the entire environment as a list of &lt;code&gt;(key,value)&lt;/code&gt; pairs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-env#v:getEnvironment&quot;&gt;getEnvironment&lt;/a&gt;&lt;/code&gt; 检索整个环境作为 &lt;code&gt;(key,value)&lt;/code&gt; 对的列表。</target>
        </trans-unit>
        <trans-unit id="4ec6916cb7447bb41f13e0beda26ad49291fcde9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-env#v:putEnv&quot;&gt;putEnv&lt;/a&gt;&lt;/code&gt; function takes an argument of the form &lt;code&gt;name=value&lt;/code&gt; and is equivalent to &lt;code&gt;setEnv(key,value,True{-overwrite-})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-env#v:putEnv&quot;&gt;putEnv&lt;/a&gt;&lt;/code&gt; 函数采用 &lt;code&gt;name=value&lt;/code&gt; 形式的参数，等效于 &lt;code&gt;setEnv(key,value,True{-overwrite-})&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f64fc2012cb425156b398f64b5e3be84f23273cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-env#v:setEnvironment&quot;&gt;setEnvironment&lt;/a&gt;&lt;/code&gt; resets the entire environment to the given list of &lt;code&gt;(key,value)&lt;/code&gt; pairs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-env#v:setEnvironment&quot;&gt;setEnvironment&lt;/a&gt;&lt;/code&gt; 将整个环境重置为 &lt;code&gt;(key,value)&lt;/code&gt; 对的给定列表。</target>
        </trans-unit>
        <trans-unit id="e4643c36ddd3c482bcd236e8e545490ab553c2dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-env-bytestring#v:getEnv&quot;&gt;getEnv&lt;/a&gt;&lt;/code&gt; looks up a variable in the environment.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-env-bytestring#v:getEnv&quot;&gt;getEnv&lt;/a&gt;&lt;/code&gt; 在环境中查找变量。</target>
        </trans-unit>
        <trans-unit id="45ae85a79131db90987ae906284712d80186032c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-env-bytestring#v:getEnvDefault&quot;&gt;getEnvDefault&lt;/a&gt;&lt;/code&gt; is a wrapper around &lt;code&gt;&lt;a href=&quot;system-posix-env-bytestring#v:getEnv&quot;&gt;getEnv&lt;/a&gt;&lt;/code&gt; where the programmer can specify a fallback if the variable is not found in the environment.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-env-bytestring#v:getEnvDefault&quot;&gt;getEnvDefault&lt;/a&gt;&lt;/code&gt; 周围的包装 &lt;code&gt;&lt;a href=&quot;system-posix-env-bytestring#v:getEnv&quot;&gt;getEnv&lt;/a&gt;&lt;/code&gt; 其中如果变量未在环境中发现的程序员可以指定一个备用。</target>
        </trans-unit>
        <trans-unit id="1d18cbcc5157f7be9ed80d4af97fcdb77623d64a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-env-bytestring#v:getEnvironment&quot;&gt;getEnvironment&lt;/a&gt;&lt;/code&gt; retrieves the entire environment as a list of &lt;code&gt;(key,value)&lt;/code&gt; pairs.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-env-bytestring#v:getEnvironment&quot;&gt;getEnvironment&lt;/a&gt;&lt;/code&gt; 检索整个环境作为 &lt;code&gt;(key,value)&lt;/code&gt; 对的列表。</target>
        </trans-unit>
        <trans-unit id="6df8503d7e50a0837aebd3fee4a3c41e23fd2cbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-env-bytestring#v:putEnv&quot;&gt;putEnv&lt;/a&gt;&lt;/code&gt; function takes an argument of the form &lt;code&gt;name=value&lt;/code&gt; and is equivalent to &lt;code&gt;setEnv(key,value,True{-overwrite-})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-env-bytestring#v:putEnv&quot;&gt;putEnv&lt;/a&gt;&lt;/code&gt; 函数采用 &lt;code&gt;name=value&lt;/code&gt; 形式的参数，等效于 &lt;code&gt;setEnv(key,value,True{-overwrite-})&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c9265b7d41ad37773728bc0c5f02dcfc38e8770" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:createProcessGroup&quot;&gt;createProcessGroup&lt;/a&gt; pid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to make process &lt;code&gt;pid&lt;/code&gt; a new process group leader. This function is currently deprecated, and might be changed to making the current process a new process group leader in future versions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:createProcessGroup&quot;&gt;createProcessGroup&lt;/a&gt; pid&lt;/code&gt; 调用 &lt;code&gt;setpgid&lt;/code&gt; 以使流程 &lt;code&gt;pid&lt;/code&gt; 成为新的流程组负责人。该功能当前已被弃用，可能会更改为使当前流程成为将来版本中的新流程组负责人。</target>
        </trans-unit>
        <trans-unit id="afde6d8639aaa455c87557d905849cd65ad38cfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:createProcessGroupFor&quot;&gt;createProcessGroupFor&lt;/a&gt; pid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to make process &lt;code&gt;pid&lt;/code&gt; a new process group leader.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:createProcessGroupFor&quot;&gt;createProcessGroupFor&lt;/a&gt; pid&lt;/code&gt; 调用 &lt;code&gt;setpgid&lt;/code&gt; 使流程 &lt;code&gt;pid&lt;/code&gt; 成为新的流程组负责人。</target>
        </trans-unit>
        <trans-unit id="33add91f94714967891e5a07f35980bf1089bae0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:createSession&quot;&gt;createSession&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;setsid&lt;/code&gt; to create a new session with the current process as session leader.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:createSession&quot;&gt;createSession&lt;/a&gt;&lt;/code&gt; 调用 &lt;code&gt;setsid&lt;/code&gt; 以使用当前进程作为会话领导者创建一个新会话。</target>
        </trans-unit>
        <trans-unit id="245ba1378d38e9bdbe623e874acbfa4bb68bd7dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:executeFile&quot;&gt;executeFile&lt;/a&gt; cmd args env&lt;/code&gt; calls one of the &lt;code&gt;execv*&lt;/code&gt; family, depending on whether or not the current PATH is to be searched for the command, and whether or not an environment is provided to supersede the process's current environment. The basename (leading directory names suppressed) of the command is passed to &lt;code&gt;execv*&lt;/code&gt; as &lt;code&gt;arg[0]&lt;/code&gt;; the argument list passed to &lt;code&gt;&lt;a href=&quot;system-posix-process#v:executeFile&quot;&gt;executeFile&lt;/a&gt;&lt;/code&gt; therefore begins with &lt;code&gt;arg[1]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:executeFile&quot;&gt;executeFile&lt;/a&gt; cmd args env&lt;/code&gt; 调用 &lt;code&gt;execv*&lt;/code&gt; 系列之一，具体取决于是否要在当前PATH中搜索该命令，以及是否提供了可以代替进程当前环境的环境。命令的基本名称（取消显示的前导目​​录名称）以 &lt;code&gt;arg[0]&lt;/code&gt; 形式传递给 &lt;code&gt;execv*&lt;/code&gt; ；因此，传递给 &lt;code&gt;&lt;a href=&quot;system-posix-process#v:executeFile&quot;&gt;executeFile&lt;/a&gt;&lt;/code&gt; 的参数列表以 &lt;code&gt;arg[1]&lt;/code&gt; 开头。</target>
        </trans-unit>
        <trans-unit id="4f8a276c3f2654ee2807265a2207fd529c00542f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:exitImmediately&quot;&gt;exitImmediately&lt;/a&gt; status&lt;/code&gt; calls &lt;code&gt;_exit&lt;/code&gt; to terminate the process with the indicated exit &lt;code&gt;status&lt;/code&gt;. The operation never returns.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:exitImmediately&quot;&gt;exitImmediately&lt;/a&gt; status&lt;/code&gt; 调用 &lt;code&gt;_exit&lt;/code&gt; 以指示的退出 &lt;code&gt;status&lt;/code&gt; 终止该进程。该操作永不返回。</target>
        </trans-unit>
        <trans-unit id="b331a44e9f2d96759818096d963d90ff6d61a2b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; comes with a giant warning: since any other running threads are not copied into the child process, it's easy to go wrong: e.g. by accessing some shared resource that was held by another thread in the parent.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; 带有一个巨大的警告：由于没有将任何其他正在运行的线程复制到子进程中，因此很容易出错：例如，通过访问父线程中另一个线程持有的共享资源。</target>
        </trans-unit>
        <trans-unit id="a4692b194fcb7b65a798de44ae9867dce23eaa1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; corresponds to the POSIX &lt;code&gt;fork&lt;/code&gt; system call. The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action passed as an argument is executed in the child process; no other threads will be copied to the child process. On success, &lt;code&gt;&lt;a href=&quot;system-posix-process#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; returns the child's &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; to the parent process; in case of an error, an exception is thrown.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; 对应于POSIX &lt;code&gt;fork&lt;/code&gt; 系统调用。作为参数传递的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 操作在子进程中执行；没有其他线程将被复制到子进程。成功后， &lt;code&gt;&lt;a href=&quot;system-posix-process#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; 将子进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; 返回给父进程；如果发生错误，将引发异常。</target>
        </trans-unit>
        <trans-unit id="af51370316e8fa699d7f1a30060504b482c10353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; corresponds to the POSIX &lt;code&gt;fork&lt;/code&gt; system call. The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action passed as an argument is executed in the child process; no other threads will be copied to the child process. On success, &lt;code&gt;&lt;a href=&quot;system-posix-process#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; returns the child's &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; to the parent process; in case of an error, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b809bf2a9fb32b1598e28df2a68a97866ebf61db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt; blk stopped&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-process#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for any child process if a child process has exited, or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there are child processes but none have exited. If there are no child processes, then &lt;code&gt;&lt;a href=&quot;system-posix-process#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt;&lt;/code&gt; raises an &lt;code&gt;isDoesNotExistError&lt;/code&gt; exception.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt; blk stopped&lt;/code&gt; 调用 &lt;code&gt;waitpid&lt;/code&gt; ，如果子进程已退出，则返回任何子进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-posix-process#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; ；如果有子进程但没有退出，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。如果没有子进程，则 &lt;code&gt;&lt;a href=&quot;system-posix-process#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt;&lt;/code&gt; 会引发 &lt;code&gt;isDoesNotExistError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="e41dc14e618360849da7757b81e03c6d1da557c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt; blk stopped&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-process#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for any child process if a child process has exited, or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there are child processes but none have exited. If there are no child processes, then &lt;code&gt;&lt;a href=&quot;system-posix-process#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt;&lt;/code&gt; raises an &lt;code&gt;isDoesNotExistError&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98ebfb294b94ec9189fdc4e24a36426044fac82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt; blk stopped pgid&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-process#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for any process in group &lt;code&gt;pgid&lt;/code&gt; if one is available, or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there are child processes but none have exited. If there are no child processes, then &lt;code&gt;&lt;a href=&quot;system-posix-process#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt;&lt;/code&gt; raises an &lt;code&gt;isDoesNotExistError&lt;/code&gt; exception.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt; blk stopped pgid&lt;/code&gt; 调用 &lt;code&gt;waitpid&lt;/code&gt; ，如果组 &lt;code&gt;pgid&lt;/code&gt; 中的任何进程可用，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-posix-process#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; ；如果有子进程但没有退出，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。如果没有子进程，则 &lt;code&gt;&lt;a href=&quot;system-posix-process#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt;&lt;/code&gt; 会引发 &lt;code&gt;isDoesNotExistError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="4398624eeea97dd37bcf79734f76f75600b92ced" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt; blk stopped pgid&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-process#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for any process in group &lt;code&gt;pgid&lt;/code&gt; if one is available, or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there are child processes but none have exited. If there are no child processes, then &lt;code&gt;&lt;a href=&quot;system-posix-process#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt;&lt;/code&gt; raises an &lt;code&gt;isDoesNotExistError&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb25d6c41db8f5f6945414c45e95ecdf7eb42feb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessGroupID&quot;&gt;getProcessGroupID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getpgrp&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for the current process.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessGroupID&quot;&gt;getProcessGroupID&lt;/a&gt;&lt;/code&gt; 调用 &lt;code&gt;getpgrp&lt;/code&gt; 获取当前进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35000f6c82ef3af2376fdde5f80d49175fb12291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessGroupID&quot;&gt;getProcessGroupID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getpgrp&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f67b7427ac92b4b61f43521ff5a27e70fd55c8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessGroupIDOf&quot;&gt;getProcessGroupIDOf&lt;/a&gt; pid&lt;/code&gt; calls &lt;code&gt;getpgid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessGroupIDOf&quot;&gt;getProcessGroupIDOf&lt;/a&gt; pid&lt;/code&gt; 调用 &lt;code&gt;getpgid&lt;/code&gt; 以获得进程 &lt;code&gt;pid&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46a851a447c67bd1371b24ded961af267f234f12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessGroupIDOf&quot;&gt;getProcessGroupIDOf&lt;/a&gt; pid&lt;/code&gt; calls &lt;code&gt;getpgid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48849504f015622f71b1e18ff371e828e5bee0ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getpid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; for the current process.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; 调用 &lt;code&gt;getpid&lt;/code&gt; 获取当前进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70f9238aecdfcdf1b12e61afd35983097f9772a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getpid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; for the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="decddcab9a19d21de13b036047e55700e721b43c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getppid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; for the parent of the current process.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; 调用 &lt;code&gt;getppid&lt;/code&gt; 获取当前进程的父进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7cc151819d797fce9c21a832e6de34540fea1f28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getppid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; for the parent of the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8af69aea7593c4003bc5ffe850e0a4ff63aa42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessStatus&quot;&gt;getProcessStatus&lt;/a&gt; blk stopped pid&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; tc&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;system-posix-process#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt; if it is available, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; otherwise. If &lt;code&gt;blk&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;WNOHANG&lt;/code&gt; is set in the options for &lt;code&gt;waitpid&lt;/code&gt;, otherwise not. If &lt;code&gt;stopped&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;WUNTRACED&lt;/code&gt; is set in the options for &lt;code&gt;waitpid&lt;/code&gt;, otherwise not.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessStatus&quot;&gt;getProcessStatus&lt;/a&gt; blk stopped pid&lt;/code&gt; 调用 &lt;code&gt;waitpid&lt;/code&gt; 函数，返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; tc&lt;/code&gt; ，该 &lt;code&gt;&lt;a href=&quot;system-posix-process#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; 过程 &lt;code&gt;pid&lt;/code&gt; （如果可用）， &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 其他。如果 &lt;code&gt;blk&lt;/code&gt; 为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ，则在 &lt;code&gt;waitpid&lt;/code&gt; 的选项中设置 &lt;code&gt;WNOHANG&lt;/code&gt; ，否则不设置。如果 &lt;code&gt;stopped&lt;/code&gt; 为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ，那么 &lt;code&gt;WUNTRACED&lt;/code&gt; 设置在选项 &lt;code&gt;waitpid&lt;/code&gt; 函数，否则不是。</target>
        </trans-unit>
        <trans-unit id="579432a4355fa782df05cd3e056646e7b878df3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessStatus&quot;&gt;getProcessStatus&lt;/a&gt; blk stopped pid&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; tc&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;system-posix-process#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt; if it is available, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; otherwise. If &lt;code&gt;blk&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;WNOHANG&lt;/code&gt; is set in the options for &lt;code&gt;waitpid&lt;/code&gt;, otherwise not. If &lt;code&gt;stopped&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;WUNTRACED&lt;/code&gt; is set in the options for &lt;code&gt;waitpid&lt;/code&gt;, otherwise not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f018d81ab726d4c0eb48f687fbe0b88d32709812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessTimes&quot;&gt;getProcessTimes&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;times&lt;/code&gt; to obtain time-accounting information for the current process and its children.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:getProcessTimes&quot;&gt;getProcessTimes&lt;/a&gt;&lt;/code&gt; 调用 &lt;code&gt;times&lt;/code&gt; 以获取当前进程及其子进程的时间计费信息。</target>
        </trans-unit>
        <trans-unit id="ee83b521f68e9f8ba6aacfaae6c1f93e7e178ebf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:joinProcessGroup&quot;&gt;joinProcessGroup&lt;/a&gt; pgid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to set the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; of the current process to &lt;code&gt;pgid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:joinProcessGroup&quot;&gt;joinProcessGroup&lt;/a&gt; pgid&lt;/code&gt; 调用 &lt;code&gt;setpgid&lt;/code&gt; 将当前进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; 设置为 &lt;code&gt;pgid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7a1554e08d9805f8d7b85b2bcb9156a604fe233" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:joinProcessGroup&quot;&gt;joinProcessGroup&lt;/a&gt; pgid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to set the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; of the current process to &lt;code&gt;pgid&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72301bac429c0fcb4bdd937a5f747b9535a5d2a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:setProcessGroupID&quot;&gt;setProcessGroupID&lt;/a&gt; pid pgid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to set the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt; to &lt;code&gt;pgid&lt;/code&gt;. This function is currently deprecated, and might be changed to setting the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for the current process in future versions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:setProcessGroupID&quot;&gt;setProcessGroupID&lt;/a&gt; pid pgid&lt;/code&gt; 调用 &lt;code&gt;setpgid&lt;/code&gt; 将进程 &lt;code&gt;pid&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; 设置为 &lt;code&gt;pgid&lt;/code&gt; 。该功能当前已被弃用，在将来的版本中，可能会更改为设置当前进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0cc89a927ba375b64508c726899bf6a65979b8bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:setProcessGroupID&quot;&gt;setProcessGroupID&lt;/a&gt; pid pgid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to set the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt; to &lt;code&gt;pgid&lt;/code&gt;. This function is currently deprecated, and might be changed to setting the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for the current process in future versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6326a70dbe10166b3d108453064f69feb6545960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process#v:setProcessGroupIDOf&quot;&gt;setProcessGroupIDOf&lt;/a&gt; pid pgid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to set the &lt;code&gt;ProcessGroupIDOf&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt; to &lt;code&gt;pgid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process#v:setProcessGroupIDOf&quot;&gt;setProcessGroupIDOf&lt;/a&gt; pid pgid&lt;/code&gt; 调用 &lt;code&gt;setpgid&lt;/code&gt; 将进程 &lt;code&gt;pid&lt;/code&gt; 的 &lt;code&gt;ProcessGroupIDOf&lt;/code&gt; 设置为 &lt;code&gt;pgid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49bd46c02e8acf48d5c4c4f61e50fb216e1bf2b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:createProcessGroup&quot;&gt;createProcessGroup&lt;/a&gt; pid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to make process &lt;code&gt;pid&lt;/code&gt; a new process group leader. This function is currently deprecated, and might be changed to making the current process a new process group leader in future versions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:createProcessGroup&quot;&gt;createProcessGroup&lt;/a&gt; pid&lt;/code&gt; 调用 &lt;code&gt;setpgid&lt;/code&gt; 以使流程 &lt;code&gt;pid&lt;/code&gt; 成为新的流程组负责人。该功能当前已被弃用，可能会更改为使当前流程成为将来版本中的新流程组负责人。</target>
        </trans-unit>
        <trans-unit id="bdaf0e0f4ace757b290ce823bf71937210469424" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:createProcessGroupFor&quot;&gt;createProcessGroupFor&lt;/a&gt; pid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to make process &lt;code&gt;pid&lt;/code&gt; a new process group leader.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:createProcessGroupFor&quot;&gt;createProcessGroupFor&lt;/a&gt; pid&lt;/code&gt; 调用 &lt;code&gt;setpgid&lt;/code&gt; 使流程 &lt;code&gt;pid&lt;/code&gt; 成为新的流程组负责人。</target>
        </trans-unit>
        <trans-unit id="469b4647b75bb623290b754f947b421cc558a3a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:createSession&quot;&gt;createSession&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;setsid&lt;/code&gt; to create a new session with the current process as session leader.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:createSession&quot;&gt;createSession&lt;/a&gt;&lt;/code&gt; 调用 &lt;code&gt;setsid&lt;/code&gt; 以使用当前进程作为会话领导者创建一个新会话。</target>
        </trans-unit>
        <trans-unit id="3b6263bdcc9198f197573ea3e7bff7fd1a1f9b98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:executeFile&quot;&gt;executeFile&lt;/a&gt; cmd args env&lt;/code&gt; calls one of the &lt;code&gt;execv*&lt;/code&gt; family, depending on whether or not the current PATH is to be searched for the command, and whether or not an environment is provided to supersede the process's current environment. The basename (leading directory names suppressed) of the command is passed to &lt;code&gt;execv*&lt;/code&gt; as &lt;code&gt;arg[0]&lt;/code&gt;; the argument list passed to &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:executeFile&quot;&gt;executeFile&lt;/a&gt;&lt;/code&gt; therefore begins with &lt;code&gt;arg[1]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:executeFile&quot;&gt;executeFile&lt;/a&gt; cmd args env&lt;/code&gt; 调用 &lt;code&gt;execv*&lt;/code&gt; 系列之一，具体取决于是否要在当前PATH中搜索该命令，以及是否提供了可以代替进程当前环境的环境。命令的基本名称（取消显示的前导目​​录名称）以 &lt;code&gt;arg[0]&lt;/code&gt; 形式传递给 &lt;code&gt;execv*&lt;/code&gt; ；因此，传递给 &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:executeFile&quot;&gt;executeFile&lt;/a&gt;&lt;/code&gt; 的参数列表以 &lt;code&gt;arg[1]&lt;/code&gt; 开头。</target>
        </trans-unit>
        <trans-unit id="f62df387d69aa46aebb9fd22e8170de79505247a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:exitImmediately&quot;&gt;exitImmediately&lt;/a&gt; status&lt;/code&gt; calls &lt;code&gt;_exit&lt;/code&gt; to terminate the process with the indicated exit &lt;code&gt;status&lt;/code&gt;. The operation never returns.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:exitImmediately&quot;&gt;exitImmediately&lt;/a&gt; status&lt;/code&gt; 调用 &lt;code&gt;_exit&lt;/code&gt; 以指示的退出 &lt;code&gt;status&lt;/code&gt; 终止该进程。该操作永不返回。</target>
        </trans-unit>
        <trans-unit id="b6fbeeb193386e128dd8791d9dbb3d92d21dddff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; comes with a giant warning: since any other running threads are not copied into the child process, it's easy to go wrong: e.g. by accessing some shared resource that was held by another thread in the parent.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; 带有一个巨大的警告：由于没有将任何其他正在运行的线程复制到子进程中，因此很容易出错：例如，通过访问父线程中另一个线程持有的共享资源。</target>
        </trans-unit>
        <trans-unit id="d58c670bbc1937d16c9525d1af1ece17d42e24b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; corresponds to the POSIX &lt;code&gt;fork&lt;/code&gt; system call. The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action passed as an argument is executed in the child process; no other threads will be copied to the child process. On success, &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; returns the child's &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; to the parent process; in case of an error, an exception is thrown.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; 对应于POSIX &lt;code&gt;fork&lt;/code&gt; 系统调用。作为参数传递的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 操作在子进程中执行；没有其他线程将被复制到子进程。成功后， &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; 将子进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; 返回给父进程；如果发生错误，将引发异常。</target>
        </trans-unit>
        <trans-unit id="1d73f9a1ea23a3c6cbe77983b6fc1fcbe1c10802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; corresponds to the POSIX &lt;code&gt;fork&lt;/code&gt; system call. The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action passed as an argument is executed in the child process; no other threads will be copied to the child process. On success, &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:forkProcess&quot;&gt;forkProcess&lt;/a&gt;&lt;/code&gt; returns the child's &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; to the parent process; in case of an error, an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c78fd307d5e5a42736a557bf89bf2c903970904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt; blk stopped&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for any child process if a child process has exited, or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there are child processes but none have exited. If there are no child processes, then &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt;&lt;/code&gt; raises an &lt;code&gt;isDoesNotExistError&lt;/code&gt; exception.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt; blk stopped&lt;/code&gt; 调用 &lt;code&gt;waitpid&lt;/code&gt; ，如果子进程已退出，则返回任何子进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; ；如果有子进程但没有退出，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。如果没有子进程，则 &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt;&lt;/code&gt; 会引发 &lt;code&gt;isDoesNotExistError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="58aa010afbdea9f9c683c6e4ae48ebc9ed80f53a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt; blk stopped&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for any child process if a child process has exited, or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there are child processes but none have exited. If there are no child processes, then &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getAnyProcessStatus&quot;&gt;getAnyProcessStatus&lt;/a&gt;&lt;/code&gt; raises an &lt;code&gt;isDoesNotExistError&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0156321aba7322067db6b6b754a4fa5290e04b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt; blk stopped pgid&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for any process in group &lt;code&gt;pgid&lt;/code&gt; if one is available, or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there are child processes but none have exited. If there are no child processes, then &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt;&lt;/code&gt; raises an &lt;code&gt;isDoesNotExistError&lt;/code&gt; exception.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt; blk stopped pgid&lt;/code&gt; 调用 &lt;code&gt;waitpid&lt;/code&gt; ，如果组 &lt;code&gt;pgid&lt;/code&gt; 中的任何进程可用，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt; ， &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; ；如果有子进程但没有退出，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。如果没有子进程，则 &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt;&lt;/code&gt; 会引发 &lt;code&gt;isDoesNotExistError&lt;/code&gt; 异常。</target>
        </trans-unit>
        <trans-unit id="af035c09a69441b421533cd8e0b957536055b1f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt; blk stopped pgid&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (pid, tc)&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for any process in group &lt;code&gt;pgid&lt;/code&gt; if one is available, or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there are child processes but none have exited. If there are no child processes, then &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getGroupProcessStatus&quot;&gt;getGroupProcessStatus&lt;/a&gt;&lt;/code&gt; raises an &lt;code&gt;isDoesNotExistError&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c9e9b139b243bcf78e76dd75ea702542d69581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessGroupID&quot;&gt;getProcessGroupID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getpgrp&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for the current process.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessGroupID&quot;&gt;getProcessGroupID&lt;/a&gt;&lt;/code&gt; 调用 &lt;code&gt;getpgrp&lt;/code&gt; 获取当前进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e0c4fd79c2ba2ad4684e017c47b25f789ff7ad57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessGroupID&quot;&gt;getProcessGroupID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getpgrp&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74dd1b917e9a69953bf4b8c937d8de8237d2dc57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessGroupIDOf&quot;&gt;getProcessGroupIDOf&lt;/a&gt; pid&lt;/code&gt; calls &lt;code&gt;getpgid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessGroupIDOf&quot;&gt;getProcessGroupIDOf&lt;/a&gt; pid&lt;/code&gt; 调用 &lt;code&gt;getpgid&lt;/code&gt; 以获得进程 &lt;code&gt;pid&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2722768d62346c78e55322c9c90b517d3798beb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessGroupIDOf&quot;&gt;getProcessGroupIDOf&lt;/a&gt; pid&lt;/code&gt; calls &lt;code&gt;getpgid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54cca06453c3413022dab30e1c4b8ad600d8a92b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getpid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; for the current process.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; 调用 &lt;code&gt;getpid&lt;/code&gt; 获取当前进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ac8b6dd9e674ed076100afb6b8f72517c55a5a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getpid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; for the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79de4d0dd36d60e8d1af122d16523600e029dc2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getppid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; for the parent of the current process.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; 调用 &lt;code&gt;getppid&lt;/code&gt; 获取当前进程的父进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6332a3dd49bea9bab89b165d20990868c0b72be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessID&quot;&gt;getProcessID&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;getppid&lt;/code&gt; to obtain the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessID&quot;&gt;ProcessID&lt;/a&gt;&lt;/code&gt; for the parent of the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4c674b6cb46e258db01fef8f8501dd6db5f62c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessStatus&quot;&gt;getProcessStatus&lt;/a&gt; blk stopped pid&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; tc&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt; if it is available, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; otherwise. If &lt;code&gt;blk&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;WNOHANG&lt;/code&gt; is set in the options for &lt;code&gt;waitpid&lt;/code&gt;, otherwise not. If &lt;code&gt;stopped&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;WUNTRACED&lt;/code&gt; is set in the options for &lt;code&gt;waitpid&lt;/code&gt;, otherwise not.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessStatus&quot;&gt;getProcessStatus&lt;/a&gt; blk stopped pid&lt;/code&gt; 调用 &lt;code&gt;waitpid&lt;/code&gt; 函数，返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; tc&lt;/code&gt; ，该 &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; 过程 &lt;code&gt;pid&lt;/code&gt; （如果可用）， &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 其他。如果 &lt;code&gt;blk&lt;/code&gt; 为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ，则在 &lt;code&gt;waitpid&lt;/code&gt; 的选项中设置 &lt;code&gt;WNOHANG&lt;/code&gt; ，否则不设置。如果 &lt;code&gt;stopped&lt;/code&gt; 为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ，那么 &lt;code&gt;WUNTRACED&lt;/code&gt; 设置在选项 &lt;code&gt;waitpid&lt;/code&gt; 函数，否则不是。</target>
        </trans-unit>
        <trans-unit id="65781d113566d57dadcf38da291555269df6461a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessStatus&quot;&gt;getProcessStatus&lt;/a&gt; blk stopped pid&lt;/code&gt; calls &lt;code&gt;waitpid&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; tc&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#t:ProcessStatus&quot;&gt;ProcessStatus&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt; if it is available, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; otherwise. If &lt;code&gt;blk&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;WNOHANG&lt;/code&gt; is set in the options for &lt;code&gt;waitpid&lt;/code&gt;, otherwise not. If &lt;code&gt;stopped&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;WUNTRACED&lt;/code&gt; is set in the options for &lt;code&gt;waitpid&lt;/code&gt;, otherwise not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7311896f40e30cb5781949c817e42696c43aed9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessTimes&quot;&gt;getProcessTimes&lt;/a&gt;&lt;/code&gt; calls &lt;code&gt;times&lt;/code&gt; to obtain time-accounting information for the current process and its children.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:getProcessTimes&quot;&gt;getProcessTimes&lt;/a&gt;&lt;/code&gt; 调用 &lt;code&gt;times&lt;/code&gt; 以获取当前进程及其子进程的时间计费信息。</target>
        </trans-unit>
        <trans-unit id="b6c595a2d722abb1bcf2e66915b65efc8d9368e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:joinProcessGroup&quot;&gt;joinProcessGroup&lt;/a&gt; pgid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to set the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; of the current process to &lt;code&gt;pgid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:joinProcessGroup&quot;&gt;joinProcessGroup&lt;/a&gt; pgid&lt;/code&gt; 调用 &lt;code&gt;setpgid&lt;/code&gt; 将当前进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; 设置为 &lt;code&gt;pgid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="240034462e5baf7004d022d107b82e4b88ad9176" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:joinProcessGroup&quot;&gt;joinProcessGroup&lt;/a&gt; pgid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to set the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; of the current process to &lt;code&gt;pgid&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc571de8e85d6e8e708d01bd91d87adf802e837" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:setProcessGroupID&quot;&gt;setProcessGroupID&lt;/a&gt; pid pgid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to set the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt; to &lt;code&gt;pgid&lt;/code&gt;. This function is currently deprecated, and might be changed to setting the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for the current process in future versions.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:setProcessGroupID&quot;&gt;setProcessGroupID&lt;/a&gt; pid pgid&lt;/code&gt; 调用 &lt;code&gt;setpgid&lt;/code&gt; 将进程 &lt;code&gt;pid&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; 设置为 &lt;code&gt;pgid&lt;/code&gt; 。该功能当前已被弃用，在将来的版本中可能会更改为设置当前进程的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa3ce82401a2804b5bdee5fc9addab00f4af2750" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:setProcessGroupID&quot;&gt;setProcessGroupID&lt;/a&gt; pid pgid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to set the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt; to &lt;code&gt;pgid&lt;/code&gt;. This function is currently deprecated, and might be changed to setting the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:ProcessGroupID&quot;&gt;ProcessGroupID&lt;/a&gt;&lt;/code&gt; for the current process in future versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ceb7acc2877b94d34a92c5a21115598457dc92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:setProcessGroupIDOf&quot;&gt;setProcessGroupIDOf&lt;/a&gt; pid pgid&lt;/code&gt; calls &lt;code&gt;setpgid&lt;/code&gt; to set the &lt;code&gt;ProcessGroupIDOf&lt;/code&gt; for process &lt;code&gt;pid&lt;/code&gt; to &lt;code&gt;pgid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-process-bytestring#v:setProcessGroupIDOf&quot;&gt;setProcessGroupIDOf&lt;/a&gt; pid pgid&lt;/code&gt; 调用 &lt;code&gt;setpgid&lt;/code&gt; 将进程 &lt;code&gt;pid&lt;/code&gt; 的 &lt;code&gt;ProcessGroupIDOf&lt;/code&gt; 设置为 &lt;code&gt;pgid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="15c39aa4ff44d160dd0591f998e5da759c4de9d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-posix-temp-bytestring#v:mkstemps&quot;&gt;mkstemps&lt;/a&gt;&lt;/code&gt; - make a unique filename with a given prefix and suffix and open it for reading/writing (only safe on GHC &amp;amp; Hugs). The returned &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#t:RawFilePath&quot;&gt;RawFilePath&lt;/a&gt;&lt;/code&gt; is the (possibly relative) path of the created file, which contains 6 random characters in between the prefix and suffix.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-posix-temp-bytestring#v:mkstemps&quot;&gt;mkstemps&lt;/a&gt;&lt;/code&gt; -使用给定的前缀和后缀创建唯一的文件名，然后将其打开以进行读取/写入（仅在GHC和Hugs上安全）。返回的 &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#t:RawFilePath&quot;&gt;RawFilePath&lt;/a&gt;&lt;/code&gt; 是创建文件的路径（可能是相对路径），该路径在前缀和后缀之间包含6个随机字符。</target>
        </trans-unit>
        <trans-unit id="46bea2aa50741b2e7f2386613326bfd099a95d84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;(&lt;em&gt;mb_stdin_hdl&lt;/em&gt;, &lt;em&gt;mb_stdout_hdl&lt;/em&gt;, &lt;em&gt;mb_stderr_hdl&lt;/em&gt;, &lt;em&gt;ph&lt;/em&gt;)&lt;/code&gt;, where</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt; 返回 &lt;code&gt;(&lt;em&gt;mb_stdin_hdl&lt;/em&gt;, &lt;em&gt;mb_stdout_hdl&lt;/em&gt;, &lt;em&gt;mb_stderr_hdl&lt;/em&gt;, &lt;em&gt;ph&lt;/em&gt;)&lt;/code&gt; ，其中</target>
        </trans-unit>
        <trans-unit id="de0c3cc659c266f87b433652ed3e05f145a2368e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-process#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; can be set in CreateProcess since 1.5.0.0 in order to create an I/O completion port to monitor a process tree's progress on Windows.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-process#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; 可以在CreateProcess中设置 use_process_jobs，以创建一个I / O完成端口以监视Windows上进程树的进度。</target>
        </trans-unit>
        <trans-unit id="d33ffc652cd6edf400a46276eaaa778541643378" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;system-process-internals#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; can be set in CreateProcess since 1.5.0.0 in order to create an I/O completion port to monitor a process tree's progress on Windows.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-process-internals#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; 可以在CreateProcess中设置 use_process_jobs，以创建一个I / O完成端口以监视Windows上进程树的进度。</target>
        </trans-unit>
        <trans-unit id="7f52a0c6f660fe927ed21e05a3a1360d4ea9efe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-parsec#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; . &lt;a href=&quot;text-parsec#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; equivalent to &lt;code&gt;&lt;a href=&quot;text-parsec#v:lookAhead&quot;&gt;lookAhead&lt;/a&gt;&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsec#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; . &lt;a href=&quot;text-parsec#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; 是&lt;em&gt;不是&lt;/em&gt;等同于 &lt;code&gt;&lt;a href=&quot;text-parsec#v:lookAhead&quot;&gt;lookAhead&lt;/a&gt;&lt;/code&gt; ，并</target>
        </trans-unit>
        <trans-unit id="68c49529901eea1e0cb2b493adedce1abc8b1a33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-parsec#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; &lt;a href=&quot;text-parsec#v:eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt;&lt;em&gt;never&lt;/em&gt; fails.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsec#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; &lt;a href=&quot;text-parsec#v:eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; &lt;em&gt;永远不会&lt;/em&gt;失败。</target>
        </trans-unit>
        <trans-unit id="3af5a9904d9710409de9c4aebdf7e5361ebc65a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; . &lt;a href=&quot;text-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; equivalent to &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:lookAhead&quot;&gt;lookAhead&lt;/a&gt;&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; . &lt;a href=&quot;text-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; 是&lt;em&gt;不是&lt;/em&gt;等同于 &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:lookAhead&quot;&gt;lookAhead&lt;/a&gt;&lt;/code&gt; ，并</target>
        </trans-unit>
        <trans-unit id="92803927bf6a1f9b9f8b4ddc08877befa5fdd4e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; &lt;a href=&quot;text-parsec-combinator#v:eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt;&lt;em&gt;never&lt;/em&gt; fails.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; &lt;a href=&quot;text-parsec-combinator#v:eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; &lt;em&gt;永远不会&lt;/em&gt;失败。</target>
        </trans-unit>
        <trans-unit id="35e8fcc93dfde1032e0672527b4aa4de752f9942" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; . &lt;a href=&quot;text-parsercombinators-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; equivalent to &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-combinator#v:lookAhead&quot;&gt;lookAhead&lt;/a&gt;&lt;/code&gt;, and</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; . &lt;a href=&quot;text-parsercombinators-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; 是&lt;em&gt;不是&lt;/em&gt;等同于 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-combinator#v:lookAhead&quot;&gt;lookAhead&lt;/a&gt;&lt;/code&gt; ，并</target>
        </trans-unit>
        <trans-unit id="d6635c77539cf16fd391ec1952c7c92332d159d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; &lt;a href=&quot;text-parsercombinators-parsec-combinator#v:eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt;&lt;em&gt;never&lt;/em&gt; fails.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt; &lt;a href=&quot;text-parsercombinators-parsec-combinator#v:eof&quot;&gt;eof&lt;/a&gt;&lt;/code&gt; &lt;em&gt;永远不会&lt;/em&gt;失败。</target>
        </trans-unit>
        <trans-unit id="df3d9cbc949cf6333e88d0ebc550d9fdbbf76c29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt; is associative, with identity &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt;, and also satisfies</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt; 是关联的，身份为 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; ，也满足</target>
        </trans-unit>
        <trans-unit id="141a47d100bf17a87275869021f7f3028622c513" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:text&quot;&gt;text&lt;/a&gt; &quot;&quot; &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; x = x&lt;/code&gt;, if &lt;code&gt;x&lt;/code&gt; non-empty</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:text&quot;&gt;text&lt;/a&gt; &quot;&quot; &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; x = x&lt;/code&gt; ，如果 &lt;code&gt;x&lt;/code&gt; 非空</target>
        </trans-unit>
        <trans-unit id="457174c44b409f24e8791008f7651eca30c9c696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt; is associative, with identity &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt;, and also satisfies</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt; 是关联的，身份为 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; ，也满足</target>
        </trans-unit>
        <trans-unit id="26226ef68095c42422efb5c3d8302ac36a4708d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:text&quot;&gt;text&lt;/a&gt; &quot;&quot; &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; x = x&lt;/code&gt;, if &lt;code&gt;x&lt;/code&gt; non-empty</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:text&quot;&gt;text&lt;/a&gt; &quot;&quot; &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; x = x&lt;/code&gt; ，如果 &lt;code&gt;x&lt;/code&gt; 非空</target>
        </trans-unit>
        <trans-unit id="45c2291fca5d52ef3b8e385c5f03a12ad549a5f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt; is associative, with identity &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt;, and also satisfies</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:-36--36-&quot;&gt;$$&lt;/a&gt;&lt;/code&gt; 是关联的，身份为 &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; ，也满足</target>
        </trans-unit>
        <trans-unit id="a32bc610caedfebea4dc059d18e1763813e85b09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:text&quot;&gt;text&lt;/a&gt; &quot;&quot; &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; x = x&lt;/code&gt;, if &lt;code&gt;x&lt;/code&gt; non-empty</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:text&quot;&gt;text&lt;/a&gt; &quot;&quot; &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; x = x&lt;/code&gt; ，如果 &lt;code&gt;x&lt;/code&gt; 非空</target>
        </trans-unit>
        <trans-unit id="725f5858e606954b65734f12a822508079606c02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-printf#v:printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; is also extensible to support other types: see below.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-printf#v:printf&quot;&gt;printf&lt;/a&gt;&lt;/code&gt; 还可以扩展为支持其他类型：请参见下文。</target>
        </trans-unit>
        <trans-unit id="0644a1d5dabe87d85072f10dfb2b9115091ba3c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="dd9cd267df7fcaca555ff4ca74cb25cf9a34b68b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; functions for the argument type. The default implementation using standard list syntax is correct for most types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; 函数自变量类型。使用标准列表语法的默认实现对于大多数类型都是正确的。</target>
        </trans-unit>
        <trans-unit id="38cb59ebfa0eac4e107f95758f79cf34e98d7c15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; functions for the argument types. The default implementation using standard list syntax is correct for most types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; 功能参数类型。使用标准列表语法的默认实现对于大多数类型都是正确的。</target>
        </trans-unit>
        <trans-unit id="bdfeef58efc61d05d69245dec05258ba6ce9073b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; functions for the argument type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; 函数自变量类型。</target>
        </trans-unit>
        <trans-unit id="6197b43c339862398a73fc7613d833b3a16c5f39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; functions for the argument types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; 功能参数类型。</target>
        </trans-unit>
        <trans-unit id="8db3b7b54f5fc83a3fcfd970477f8aebb48a3cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt; p&lt;/code&gt; parses what &lt;code&gt;p&lt;/code&gt; parses, but optionally surrounded with parentheses.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt; p&lt;/code&gt; 解析 &lt;code&gt;p&lt;/code&gt; 解析的内容，但可选地用括号括起来。</target>
        </trans-unit>
        <trans-unit id="2044ace9d85fa680cc478309bd2f2ded048a2b39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt; p&lt;/code&gt; parses what &lt;code&gt;p&lt;/code&gt; parses, but surrounded with parentheses.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readParen&quot;&gt;readParen&lt;/a&gt; &lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt; p&lt;/code&gt; 解析 &lt;code&gt;p&lt;/code&gt; 解析的内容，但用括号括起来。</target>
        </trans-unit>
        <trans-unit id="2a9ff89d616e39145786ac040250d647eab33b9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; functions for the argument type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; 函数自变量类型。</target>
        </trans-unit>
        <trans-unit id="5e6189616d11fa36d845ab24a61e5678894ac658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; functions for the argument types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; 功能参数类型。</target>
        </trans-unit>
        <trans-unit id="b0d3b65253e1a0e79d545366904f567a7720fddd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt;, on the other hand, is based on a much more efficient &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readprec#t:ReadPrec&quot;&gt;ReadPrec&lt;/a&gt;&lt;/code&gt; datatype (a.k.a &quot;new-style parsers&quot;), but its definition relies on the use of the &lt;code&gt;RankNTypes&lt;/code&gt; language extension. Therefore, &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; (and its cousin, &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt;) are marked as GHC-only. Nevertheless, it is recommended to use &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; whenever possible for the efficiency improvements it brings.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 另一方面， readPrec基于效率更高的 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readprec#t:ReadPrec&quot;&gt;ReadPrec&lt;/a&gt;&lt;/code&gt; 数据类型（也称为&amp;ldquo;新型解析器&amp;rdquo;），但其定义依赖于 &lt;code&gt;RankNTypes&lt;/code&gt; 语言扩展的使用。因此， &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; （及其表亲 &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; ）被标记为仅GHC。但是，建议尽可能使用 &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 而不是 &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; 来提高效率。</target>
        </trans-unit>
        <trans-unit id="b44fdded4467ee56f959686fa369301287106b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt;, on the other hand, is based on a much more efficient &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readprec#t:ReadPrec&quot;&gt;ReadPrec&lt;/a&gt;&lt;/code&gt; datatype (a.k.a &quot;new-style parsers&quot;), but its definition relies on the use of the &lt;code&gt;RankNTypes&lt;/code&gt; language extension. Therefore, &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; (and its cousin, &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt;) are marked as GHC-only. Nevertheless, it is recommended to use &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; whenever possible for the efficiency improvements it brings.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 另一方面， readPrec基于效率更高的 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-readprec#t:ReadPrec&quot;&gt;ReadPrec&lt;/a&gt;&lt;/code&gt; 数据类型（也称为&amp;ldquo;新型解析器&amp;rdquo;），但其定义依赖于 &lt;code&gt;RankNTypes&lt;/code&gt; 语言扩展的使用。因此， &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; （及其表亲 &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; ）被标记为仅GHC。但是，建议尽可能使用 &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 而不是 &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; 来提高效率。</target>
        </trans-unit>
        <trans-unit id="c25a064a5394131ced760c05653fc84a47396bf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; functions for the argument type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; 函数自变量类型。</target>
        </trans-unit>
        <trans-unit id="c55e89dc1b131b2fd55b8fd8b3cb60cfb042c4be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; functions for the argument types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; 功能参数类型。</target>
        </trans-unit>
        <trans-unit id="13c815201524120824766c3dddd2008bb519e427" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="83e49af0b446f9ab9986d2b037bf28032ad9c217" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt;ing a value of type &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; returns a pretty-printed representation of the object's type; useful for debugging.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; 类型为 &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; 的值将返回该对象类型的漂亮印刷表示形式。对于调试很有用。</target>
        </trans-unit>
        <trans-unit id="12e1a13168f31f937931e2e70ce16a2f67a0264d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-show#v:show&quot;&gt;show&lt;/a&gt; (Leaf 1 :^: Leaf 2 :^: Leaf 3)&lt;/code&gt; produces the string &lt;code&gt;&quot;Leaf 1 :^: (Leaf 2 :^: Leaf 3)&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-show#v:show&quot;&gt;show&lt;/a&gt; (Leaf 1 :^: Leaf 2 :^: Leaf 3)&lt;/code&gt; 产生字符串 &lt;code&gt;&quot;Leaf 1 :^: (Leaf 2 :^: Leaf 3)&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f872106d8005b7af4744ef31052e2ecc016fcb23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; functions for the argument type. The default implementation using standard list syntax is correct for most types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; 函数自变量类型。使用标准列表语法的默认实现对于大多数类型都是正确的。</target>
        </trans-unit>
        <trans-unit id="23c5fb4ec796298a072bbc0df7dcab65babeaf7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; functions for the argument types. The default implementation using standard list syntax is correct for most types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; 功能参数类型。使用标准列表语法的默认实现对于大多数类型都是正确的。</target>
        </trans-unit>
        <trans-unit id="b35b80b86962fdcf1594ced86e6e8402d3fdb4b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; functions for the argument type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; 函数自变量类型。</target>
        </trans-unit>
        <trans-unit id="2cb41c0ec80e9802efc6886fc457bc595361ca2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; function for an application of the type constructor based on &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; functions for the argument types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; 用于基于所述类型构造的应用功能 &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;text-show#v:showList&quot;&gt;showList&lt;/a&gt;&lt;/code&gt; 功能参数类型。</target>
        </trans-unit>
        <trans-unit id="e18c8f572d4c964d5cef3f1b56f579716e61ef57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; should satisfy the law</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; 应该符合法律</target>
        </trans-unit>
        <trans-unit id="8452d2c7d8573e6d8d7eebb138d036b0ba6609e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;trace-hpc-mix#t:Mix&quot;&gt;Mix&lt;/a&gt;&lt;/code&gt; is the information about a modules static properties, like location of Tix's in a file.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;trace-hpc-mix#t:Mix&quot;&gt;Mix&lt;/a&gt;&lt;/code&gt; 是有关模块静态属性的信息，例如Tix在文件中的位置。</target>
        </trans-unit>
        <trans-unit id="1a3f75375d99611ab884a7c4628ca1086ff611c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;trace-hpc-tix#t:Tix&quot;&gt;Tix&lt;/a&gt;&lt;/code&gt; is the storage format for our dynamic information about what boxes are ticked.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;trace-hpc-tix#t:Tix&quot;&gt;Tix&lt;/a&gt;&lt;/code&gt; 是有关选中哪些框的动态信息的存储格式。</target>
        </trans-unit>
        <trans-unit id="cf8eaede1379a8ef516539cf75e1e62246c19952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;trace-hpc-util#t:HpcPos&quot;&gt;HpcPos&lt;/a&gt;&lt;/code&gt; is an Hpc local rendition of a Span.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;trace-hpc-util#t:HpcPos&quot;&gt;HpcPos&lt;/a&gt;&lt;/code&gt; 是Span的Hpc本地格式。</target>
        </trans-unit>
        <trans-unit id="222d13f1ef6a9c1b57a2f449156236fe67454407" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;trace-hpc-util#v:fromHpcPos&quot;&gt;fromHpcPos&lt;/a&gt;&lt;/code&gt; explodes the HpcPos into &lt;em&gt;line:column&lt;/em&gt;-&lt;em&gt;line:column&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;trace-hpc-util#v:fromHpcPos&quot;&gt;fromHpcPos&lt;/a&gt;&lt;/code&gt; 将 HpcPos爆炸成&lt;em&gt; line：column&lt;/em&gt; -&lt;em&gt; line：column&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0cf707979d12a15b678a25d216452eb375b3ad48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;a href=&quot;trace-hpc-util#v:toHpcPos&quot;&gt;toHpcPos&lt;/a&gt;&lt;/code&gt; implodes to HpcPos, from &lt;em&gt;line:column&lt;/em&gt;-&lt;em&gt;line:column&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;trace-hpc-util#v:toHpcPos&quot;&gt;toHpcPos&lt;/a&gt;&lt;/code&gt; 内爆到HpcPos，从&lt;em&gt;行：列&lt;/em&gt; -&lt;em&gt;行：列&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="14d85912577817b4928dad24283578df3ee994e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;em&gt;appdata&lt;/em&gt;/ghc/ghci.conf&lt;/code&gt;, where ⟨appdata⟩ depends on your system, but is usually something like &lt;code&gt;C:/Documents and Settings/user/Application Data&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;appdata&lt;/em&gt;/ghc/ghci.conf&lt;/code&gt; ，其中&amp;ldquo;&lt;em&gt; appdata&amp;rdquo;&lt;/em&gt;取决于您的系统，但通常类似于 &lt;code&gt;C:/Documents and Settings/user/Application Data&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa3074d66d301f190f572eaf6abdc1642ce7ec0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;em&gt;ghcappdata&lt;/em&gt;/ghci.conf&lt;/code&gt;, where ⟨ghcappdata⟩ depends on your system, but is usually something like &lt;code&gt;$HOME/.ghc&lt;/code&gt; on Unix or &lt;code&gt;C:/Documents and Settings/user/Application
Data/ghc&lt;/code&gt; on Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7730656222b7aef7f9ac270eef1ee1a0a0cc87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&lt;em&gt;size&lt;/em&gt;&lt;/code&gt; bytes from the &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#t:ByteArray-35-&quot;&gt;ByteArray#&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;em&gt;ba&lt;/em&gt;&lt;/code&gt; starting at &lt;code&gt;&lt;em&gt;offset&lt;/em&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;size&lt;/em&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Prim.html#t:ByteArray-35-&quot;&gt;ByteArray#&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;em&gt;ba&lt;/em&gt;&lt;/code&gt; 中从 &lt;code&gt;&lt;em&gt;offset&lt;/em&gt;&lt;/code&gt; 开始的&lt;em&gt;大小&lt;/em&gt;字节&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="04cc56f9108b51d563dbeb568d126dd0908fa34e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Alternative&lt;/code&gt; wrapper</source>
          <target state="translated">&lt;code&gt;Alternative&lt;/code&gt; 包装</target>
        </trans-unit>
        <trans-unit id="d1b5ad560a36d111f7b170517bec1ad9c252b361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Applicative&lt;/code&gt; wrapper</source>
          <target state="translated">&lt;code&gt;Applicative&lt;/code&gt; 包装纸</target>
        </trans-unit>
        <trans-unit id="ed139e35c53a715a44b14239fe12ce2befbcd11b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array#&lt;/code&gt;&lt;code&gt;MutableArray#&lt;/code&gt;&lt;code&gt;SmallArray#&lt;/code&gt;&lt;code&gt;MutableSmallArray#&lt;/code&gt;&lt;code&gt;ArrayArray#&lt;/code&gt;&lt;code&gt;MutableArrayArray#&lt;/code&gt; unpinned &lt;code&gt;ByteArray#&lt;/code&gt; unpinned &lt;code&gt;MutableByteArray#&lt;/code&gt; pinned &lt;code&gt;ByteArray#&lt;/code&gt; pinned &lt;code&gt;MutableByteArray#&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ded059f33997a34e4cb25713d008460b2ad90488" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BigNat&lt;/code&gt; arithmetic operations</source>
          <target state="translated">&lt;code&gt;BigNat&lt;/code&gt; 算术运算</target>
        </trans-unit>
        <trans-unit id="d0e53fe9f571fb27c2541c25d32556160cbfe83e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BigNat&lt;/code&gt; comparison predicates</source>
          <target state="translated">&lt;code&gt;BigNat&lt;/code&gt; 比较谓词</target>
        </trans-unit>
        <trans-unit id="d650170048a21327c9057e63a570ab7560de1b5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BigNat&lt;/code&gt; logic operations</source>
          <target state="translated">&lt;code&gt;BigNat&lt;/code&gt; 逻辑运算</target>
        </trans-unit>
        <trans-unit id="98cced63202e4646943f1d5997420ad399053024" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bool&lt;/code&gt; wrappers</source>
          <target state="translated">&lt;code&gt;Bool&lt;/code&gt; 包装纸</target>
        </trans-unit>
        <trans-unit id="f6fac90529992fc3ed472546b3158d027f06fa86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Buggle&lt;/code&gt;, is compiled with &lt;code&gt;-XSafe&lt;/code&gt;, so the code is machine-checked to be OK, but again under the assumption that all of &lt;code&gt;Buggle&lt;/code&gt;&amp;lsquo;s imports are trusted by &lt;code&gt;C&lt;/code&gt;. We must recursively check all imports!</source>
          <target state="translated">&lt;code&gt;Buggle&lt;/code&gt; 是使用 &lt;code&gt;-XSafe&lt;/code&gt; 编译的，因此对代码进行了机器检查是可以的，但是再次假设 &lt;code&gt;Buggle&lt;/code&gt; 的所有导入均受 &lt;code&gt;C&lt;/code&gt; 信任。我们必须递归检查所有进口！</target>
        </trans-unit>
        <trans-unit id="e302746e5a51cd50b17e28f9955a7b45b41bc60c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Buggle&lt;/code&gt;, is compiled with &lt;code&gt;-XSafe&lt;/code&gt;, so the code is machine-checked to be OK, but again under the assumption that all of &lt;code&gt;Buggle&lt;/code&gt;&amp;rsquo;s imports are trusted by &lt;code&gt;C&lt;/code&gt;. We must recursively check all imports!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8776b69f579fb241ce32fd13622015e4d0b83de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ByteString&lt;/code&gt; shared substring: 5 words; 20 or 40 bytes.</source>
          <target state="translated">&lt;code&gt;ByteString&lt;/code&gt; 共享子字符串：5个字；20或40个字节。</target>
        </trans-unit>
        <trans-unit id="7599c125a41ef345c4cf6708fab6e6948fb7ee1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ByteString&lt;/code&gt; unshared: 9 words; 36 or 72 bytes.</source>
          <target state="translated">&lt;code&gt;ByteString&lt;/code&gt; 共享的ByteString：9个字；36或72个字节。</target>
        </trans-unit>
        <trans-unit id="bc938b5f924562545bcd6ad426f0bdc998312507" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C&lt;/code&gt; does not have any associated data families (only type families). To see why data families are forbidden, imagine the following scenario:</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 没有任何关联的数据系列（仅类型系列）。要了解为什么禁止数据族，请想象以下情形：</target>
        </trans-unit>
        <trans-unit id="6ea75b2216d756d059065338554235079a07239d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C&lt;/code&gt; is allowed to be different from &lt;code&gt;C'&lt;/code&gt;, but the right-hand sides of the type signatures must coincide. We require this because when you declare an empty instance for a class that uses &lt;a href=&quot;#extension-DefaultSignatures&quot;&gt;&lt;code&gt;DefaultSignatures&lt;/code&gt;&lt;/a&gt;, GHC implicitly fills in the default implementation like this:</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 允许C与 &lt;code&gt;C'&lt;/code&gt; 不同，但类型签名的右侧必须重合。我们之所以需&lt;a href=&quot;#extension-DefaultSignatures&quot;&gt; &lt;code&gt;DefaultSignatures&lt;/code&gt; &lt;/a&gt;，是因为当您为使用DefaultSignatures的类声明一个空实例时，GHC会隐式填充默认实现，如下所示：</target>
        </trans-unit>
        <trans-unit id="278d10bb958aa2569a8ce66305104a3060e9a7bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C&lt;/code&gt; is allowed to have associated type families, provided they meet the requirements laid out in the section on &lt;a href=&quot;#gnd-and-associated-types&quot;&gt;GND and associated types&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 允许C具有关联的类型族，只要它们满足有关&lt;a href=&quot;#gnd-and-associated-types&quot;&gt;GND和关联类型&lt;/a&gt;一节中列出的要求。</target>
        </trans-unit>
        <trans-unit id="4c00311b73a3a04aff330aa580c1629544cc14f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C&lt;/code&gt; is not &lt;code&gt;Read&lt;/code&gt;, &lt;code&gt;Show&lt;/code&gt;, &lt;code&gt;Typeable&lt;/code&gt;, or &lt;code&gt;Data&lt;/code&gt;. These classes should not &amp;ldquo;look through&amp;rdquo; the type or its constructor. You can still derive these classes for a newtype, but it happens in the usual way, not via this new mechanism. Confer with &lt;a href=&quot;#default-deriving-strategy&quot;&gt;Default deriving strategy&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 不是 &lt;code&gt;Read&lt;/code&gt; ， &lt;code&gt;Show&lt;/code&gt; ，可 &lt;code&gt;Typeable&lt;/code&gt; 或 &lt;code&gt;Data&lt;/code&gt; 。这些类不应&amp;ldquo;浏览&amp;rdquo;类型或其构造函数。您仍然可以为新类型派生这些类，但是它以通常的方式发生，而不是通过这种新机制发生。符合&lt;a href=&quot;#default-deriving-strategy&quot;&gt;默认派生策略&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be4e6723a7a8830f64b1c41d49bc7a4eb6985c7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMPLETE&lt;/code&gt; pragmas are only used by the pattern match checker. If a function definition matches on all the constructors specified in the pragma then the compiler will produce no warning.</source>
          <target state="translated">&lt;code&gt;COMPLETE&lt;/code&gt; 编译指示仅由模式匹配检查器使用。如果函数定义在编译指示中指定的所有构造函数上均匹配，则编译器将不发出警告。</target>
        </trans-unit>
        <trans-unit id="b3da2fa05cdf701d710001ae3f83641efe49d34d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;COMPLETE&lt;/code&gt; pragmas can contain any data constructors or pattern synonyms which are in scope, but must mention at least one data constructor or pattern synonym defined in the same module. &lt;code&gt;COMPLETE&lt;/code&gt; pragmas may only appear at the top level of a module. Once defined, they are automatically imported and exported from modules. &lt;code&gt;COMPLETE&lt;/code&gt; pragmas should be thought of as asserting a universal truth about a set of patterns and as a result, should not be used to silence context specific incomplete match warnings.</source>
          <target state="translated">&lt;code&gt;COMPLETE&lt;/code&gt; 杂项可以包含范围内的任何数据构造函数或模式同义词，但必须提及在同一模块中定义的至少一个数据构造函数或模式同义词。 &lt;code&gt;COMPLETE&lt;/code&gt; 编译指示只能出现在模块的顶层。定义后，它们将自动从模块导入和导出。 &lt;code&gt;COMPLETE&lt;/code&gt; 编译指示应尽可能断言关于一组模式，因此一个普遍的真理，不应该被用于沉默特定语境不完全匹配警告的思想。</target>
        </trans-unit>
        <trans-unit id="485baa405ddb5381f9b1f0f30331e14960f4dfc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONLIKE&lt;/code&gt; is a modifier to an &lt;code&gt;INLINE&lt;/code&gt; or &lt;code&gt;NOINLINE&lt;/code&gt; pragma. It specifies that an application of &lt;code&gt;f&lt;/code&gt; to one argument (in general, the number of arguments to the left of the &lt;code&gt;=&lt;/code&gt; sign) should be considered cheap enough to duplicate, if such a duplication would make rule fire. (The name &amp;ldquo;CONLIKE&amp;rdquo; is short for &amp;ldquo;constructor-like&amp;rdquo;, because constructors certainly have such a property.) The &lt;a href=&quot;#pragma-CONLIKE&quot;&gt;&lt;code&gt;CONLIKE&lt;/code&gt;&lt;/a&gt; pragma is a modifier to &lt;a href=&quot;#pragma-INLINE&quot;&gt;&lt;code&gt;INLINE&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#pragma-NOINLINE&quot;&gt;&lt;code&gt;NOINLINE&lt;/code&gt;&lt;/a&gt; because it really only makes sense to match &lt;code&gt;f&lt;/code&gt; on the LHS of a rule if you are sure that &lt;code&gt;f&lt;/code&gt; is not going to be inlined before the rule has a chance to fire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d81e2d9ec7cf4164a86b31f92b6391db5bcaa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CONLIKE&lt;/code&gt; is a modifier to an &lt;code&gt;INLINE&lt;/code&gt; or &lt;code&gt;NOINLINE&lt;/code&gt; pragma. It specifies that an application of &lt;code&gt;f&lt;/code&gt; to one argument (in general, the number of arguments to the left of the &lt;code&gt;=&lt;/code&gt; sign) should be considered cheap enough to duplicate, if such a duplication would make rule fire. (The name &amp;ldquo;CONLIKE&amp;rdquo; is short for &amp;ldquo;constructor-like&amp;rdquo;, because constructors certainly have such a property.) The &lt;code&gt;CONLIKE&lt;/code&gt; pragma is a modifier to &lt;a href=&quot;#pragma-INLINE&quot;&gt;&lt;code&gt;INLINE&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;#pragma-NOINLINE&quot;&gt;&lt;code&gt;NOINLINE&lt;/code&gt;&lt;/a&gt; because it really only makes sense to match &lt;code&gt;f&lt;/code&gt; on the LHS of a rule if you are sure that &lt;code&gt;f&lt;/code&gt; is not going to be inlined before the rule has a chance to fire.</source>
          <target state="translated">&lt;code&gt;CONLIKE&lt;/code&gt; 是 &lt;code&gt;INLINE&lt;/code&gt; 或 &lt;code&gt;NOINLINE&lt;/code&gt; 编译指示的修饰符。它指定将 &lt;code&gt;f&lt;/code&gt; 应用于一个参数（通常， &lt;code&gt;=&lt;/code&gt; 符号左侧的参数数量）应足够便宜，以至于可以重复，如果这样的重复会使规则火起来。 （名称&amp;ldquo; CONLIKE&amp;rdquo;是&amp;ldquo;类似构造函数的名称&amp;rdquo;的缩写，因为构造函数当然具有这样的属性。） &lt;code&gt;CONLIKE&lt;/code&gt; 编译指示是&lt;a href=&quot;#pragma-INLINE&quot;&gt; &lt;code&gt;INLINE&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;#pragma-NOINLINE&quot;&gt; &lt;code&gt;NOINLINE&lt;/code&gt; &lt;/a&gt;的修饰符，因为只有在满足以下条件的LHS 上匹配 &lt;code&gt;f&lt;/code&gt; 才有意义您确定在规则有机会触发之前不会内联 &lt;code&gt;f&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca0776483d98a399bc40ea0c0a1e8f9c8c9ec7b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CallStack&lt;/code&gt; is kept abstract, but GHC provides a function</source>
          <target state="translated">&lt;code&gt;CallStack&lt;/code&gt; 保持抽象，但是GHC提供了一个功能</target>
        </trans-unit>
        <trans-unit id="f6f472147735abc0cecb50b7cdcae7f9dffd268e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Coercible&lt;/code&gt; is a two-parameter class that has instances for types &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; if the compiler can infer that they have the same representation. This class does not have regular instances; instead they are created on-the-fly during type-checking. Trying to manually declare an instance of &lt;code&gt;Coercible&lt;/code&gt; is an error.</source>
          <target state="translated">&lt;code&gt;Coercible&lt;/code&gt; 是一个两参数类，如果编译器可以推断出它们具有相同的表示形式，则该类具有类型 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 的实例。该类没有常规实例；相反，它们是在类型检查过程中即时创建的。尝试手动声明 &lt;code&gt;Coercible&lt;/code&gt; 实例是错误的。</target>
        </trans-unit>
        <trans-unit id="68695f75a6a8888c47fbc91891863a97d327aa92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoreM&lt;/code&gt; is a monad that all of the Core optimizations live and operate inside of.</source>
          <target state="translated">&lt;code&gt;CoreM&lt;/code&gt; 是一个Monad，所有Core优化都在其中运行和运行。</target>
        </trans-unit>
        <trans-unit id="6583859913f3d3f655e0c5fc1c133204e495bdd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CoreToDo&lt;/code&gt; is effectively a data type that describes all the kinds of optimization passes GHC does on Core. There are passes for simplification, CSE, etc. There is a specific case for plugins, &lt;code&gt;CoreDoPluginPass :: String -&amp;gt; PluginPass -&amp;gt; CoreToDo&lt;/code&gt; which should be what you always use when inserting your own pass into the pipeline. The first parameter is the name of the plugin, and the second is the pass you wish to insert.</source>
          <target state="translated">&lt;code&gt;CoreToDo&lt;/code&gt; 实际上是一种数据类型，它描述了GHC在Core上进行的所有优化过程。有用于简化，CSE等的通行证。对于插件，有特定的情况， &lt;code&gt;CoreDoPluginPass :: String -&amp;gt; PluginPass -&amp;gt; CoreToDo&lt;/code&gt; ，应该是在管道中插入自己的通行证时经常使用的通行证。第一个参数是插件的名称，第二个参数是您想要插入的密码。</target>
        </trans-unit>
        <trans-unit id="dfd16322bf8019d77331194eed535094f9511cf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DW_TAG_ghc_src_note&lt;/code&gt; DIEs (tag 0x5b01) are found as children of &lt;code&gt;DW_TAG_lexical_block&lt;/code&gt; DIEs. They describe source spans which gave rise to the block; formally these spans are causally responsible for produced code: changes to code in the given span may change the code within the block; conversely changes outside the span are guaranteed not to affect the code in the block.</source>
          <target state="translated">&lt;code&gt;DW_TAG_ghc_src_note&lt;/code&gt; （标记0x5b01）是 &lt;code&gt;DW_TAG_lexical_block&lt;/code&gt; DIE的子代。它们描述了导致跨区的源跨度。形式上，这些范围是产生代码的原因：在给定范围内更改代码可能会更改块中的代码；相反，保证跨度之外的更改不会影响块中的代码。</target>
        </trans-unit>
        <trans-unit id="8b7c7d802a6dbb96171248964f81e77ab81fa0f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data.List.splitAt&lt;/code&gt; is more strict than specified in the Report. Specifically, the Report specifies that</source>
          <target state="translated">&lt;code&gt;Data.List.splitAt&lt;/code&gt; 比报告中指定的更为严格。具体而言，报告指定</target>
        </trans-unit>
        <trans-unit id="634502578bcebb8751a50be27b2ca0dc61cb2dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data.List&lt;/code&gt; due to the future addition of &lt;code&gt;Data.List.singleton&lt;/code&gt; and specialisation of exports to the &lt;code&gt;[]&lt;/code&gt; type. See the mailing list for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815ef066b033cb4c87bc7a18a2fa4cd277f22cb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Debug.Trace.traceStack&lt;/code&gt; is a version of &lt;code&gt;Debug.Trace.trace&lt;/code&gt; that also prints the current call stack.</source>
          <target state="translated">&lt;code&gt;Debug.Trace.traceStack&lt;/code&gt; 是一个版本的 &lt;code&gt;Debug.Trace.trace&lt;/code&gt; 也显示当前调用堆栈。</target>
        </trans-unit>
        <trans-unit id="b8d4387e40f23e3472e133e5c182a6f9802e1b6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EVENTLOG_NOT_CONFIGURED&lt;/code&gt;: An &lt;a href=&quot;#c.EventLogWriter&quot;&gt;&lt;code&gt;EventLogWriter&lt;/code&gt;&lt;/a&gt; has not yet been configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27f651b027bed566be4b5cf11369491bee9e73e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EVENTLOG_NOT_SUPPORTED&lt;/code&gt;: The runtime system wasn&amp;rsquo;t compiled with eventlog support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e317c61d93437ba4a2376e0409ff8c943799793b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EVENTLOG_RUNNING&lt;/code&gt;: An &lt;a href=&quot;#c.EventLogWriter&quot;&gt;&lt;code&gt;EventLogWriter&lt;/code&gt;&lt;/a&gt; has been configured and is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1100cc7824ba867b1412485db228fd16684f426f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Errno&lt;/code&gt; functions</source>
          <target state="translated">&lt;code&gt;Errno&lt;/code&gt; 功能</target>
        </trans-unit>
        <trans-unit id="888974bc2aa26aaf4445c229662809d0f31e1715" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExceptT&lt;/code&gt; constructs a monad parameterized over two things:</source>
          <target state="translated">&lt;code&gt;ExceptT&lt;/code&gt; 构造一个参数化为两件事的monad：</target>
        </trans-unit>
        <trans-unit id="8f5c6138e19bc23ad3c13556f8e70f0b98fb7c07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Floats&lt;/code&gt; (probably 32-bits) are almost always a bad idea, anyway, unless you Really Know What You Are Doing. Use &lt;code&gt;Double&lt;/code&gt;s. There&amp;rsquo;s rarely a speed disadvantage&amp;mdash;modern machines will use the same floating-point unit for both. With &lt;code&gt;Double&lt;/code&gt;s, you are much less likely to hang yourself with numerical errors.</source>
          <target state="translated">&lt;code&gt;Floats&lt;/code&gt; 无论如何，浮点数（可能是32位）几乎总是一个坏主意，除非您真正了解自己在做什么。使用 &lt;code&gt;Double&lt;/code&gt; 。速度上几乎没有什么缺点-​​现代机器将对两者使用相同的浮点单元。使用 &lt;code&gt;Double&lt;/code&gt; s时，您极不可能陷入数字错误。</target>
        </trans-unit>
        <trans-unit id="955ed75750440fafd18815a2c675e276a49e5759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foldable&lt;/code&gt; deriving will produce</source>
          <target state="translated">&lt;code&gt;Foldable&lt;/code&gt; 派生将产生</target>
        </trans-unit>
        <trans-unit id="e0678b9641a4a2d85d4305a811bf0abc62c93278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foldable&lt;/code&gt; instances are expected to satisfy the following laws:</source>
          <target state="translated">&lt;code&gt;Foldable&lt;/code&gt; 实例应满足以下法律：</target>
        </trans-unit>
        <trans-unit id="3dce461b4659e9b6b61c24b5f4524e648fc47d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Foldable&lt;/code&gt; instances can be derived for data types in which the last type parameter is existentially constrained or refined in a GADT. For example, this data type:</source>
          <target state="translated">&lt;code&gt;Foldable&lt;/code&gt; 可以为在GADT中存在最后一个类型参数受到约束或完善的数据类型派生可折叠实例。例如，此数据类型：</target>
        </trans-unit>
        <trans-unit id="2cfc19a59e8f6e4775b559a0bc28b66c2ed86472" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ForeignFunctionInterface&lt;/code&gt; &amp;mdash; Foreign import declarations that import a function with a non-&lt;code&gt;IO&lt;/code&gt; type are disallowed.</source>
          <target state="translated">&lt;code&gt;ForeignFunctionInterface&lt;/code&gt; &amp;mdash; 不允许使用非 &lt;code&gt;IO&lt;/code&gt; 类型的函数导入外部导入声明。</target>
        </trans-unit>
        <trans-unit id="de3911b91d2db2e249dba745cebf6cf6a5bd07ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FrontendPlugin&lt;/code&gt; exports a field &lt;code&gt;frontend&lt;/code&gt;, which is a function &lt;code&gt;[String] -&amp;gt; [(String, Maybe Phase)] -&amp;gt; Ghc ()&lt;/code&gt;. The first argument is a list of extra flags passed to the frontend with &lt;code&gt;-ffrontend-opt&lt;/code&gt;; the second argument is the list of arguments, usually source files and module names to be compiled (the &lt;code&gt;Phase&lt;/code&gt; indicates if an &lt;code&gt;-x&lt;/code&gt; flag was set), and a frontend simply executes some operation in the &lt;code&gt;Ghc&lt;/code&gt; monad (which, among other things, has a &lt;code&gt;Session&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;FrontendPlugin&lt;/code&gt; 导出字段 &lt;code&gt;frontend&lt;/code&gt; ，它是一个函数 &lt;code&gt;[String] -&amp;gt; [(String, Maybe Phase)] -&amp;gt; Ghc ()&lt;/code&gt; 。第一个参数是使用 &lt;code&gt;-ffrontend-opt&lt;/code&gt; 传递给前端的其他标志的列表；第二个参数是参数列表，通常是要编译的源文件和模块名称（ &lt;code&gt;Phase&lt;/code&gt; 指示是否设置了 &lt;code&gt;-x&lt;/code&gt; 标志），并且前端仅在 &lt;code&gt;Ghc&lt;/code&gt; monad中执行某些操作（除其他功能外，还具有一个 &lt;code&gt;Session&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e224ff13d4731a0e30f49bc73daccfc5e8a6efb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GHC.Generics&lt;/code&gt; &amp;mdash; Hand crafted instances of the &lt;code&gt;Generic&lt;/code&gt; type class are not allowed in Safe Haskell. Such instances aren&amp;rsquo;t strictly unsafe, but there is an important invariant that a &lt;code&gt;Generic&lt;/code&gt; instance should adhere to the structure of the data type for which the instance is defined, and allowing manually implemented &lt;code&gt;Generic&lt;/code&gt; instances would break that invariant. Derived instances (through the &lt;a href=&quot;glasgow_exts#extension-DeriveGeneric&quot;&gt;&lt;code&gt;DeriveGeneric&lt;/code&gt;&lt;/a&gt; extension) are still allowed. Note that the only allowed &lt;a href=&quot;glasgow_exts#deriving-strategies&quot;&gt;deriving strategy&lt;/a&gt; for deriving &lt;code&gt;Generic&lt;/code&gt; under Safe Haskell is &lt;code&gt;stock&lt;/code&gt;, as another strategy (e.g., &lt;code&gt;anyclass&lt;/code&gt;) would produce an instance that violates the invariant.</source>
          <target state="translated">&lt;code&gt;GHC.Generics&lt;/code&gt; &amp;mdash; Safe Haskell中不允许 &lt;code&gt;Generic&lt;/code&gt; 类型类的手工实例。此类实例并非严格不安全，但有一个重要的不变性，即 &lt;code&gt;Generic&lt;/code&gt; 实例应遵守为其定义实例的数据类型的结构，并且允许手动实现的 &lt;code&gt;Generic&lt;/code&gt; 实例会破坏该不变性。仍然允许派生实例（通过&lt;a href=&quot;glasgow_exts#extension-DeriveGeneric&quot;&gt; &lt;code&gt;DeriveGeneric&lt;/code&gt; &lt;/a&gt;扩展）。请注意，在Safe Haskell下派生 &lt;code&gt;Generic&lt;/code&gt; 的唯一允许&lt;a href=&quot;glasgow_exts#deriving-strategies&quot;&gt;派生策略&lt;/a&gt;是 &lt;code&gt;stock&lt;/code&gt; ，因为另一种策略（例如 &lt;code&gt;anyclass&lt;/code&gt; ）将产生违反不变式的实例。</target>
        </trans-unit>
        <trans-unit id="30bec5effabc453c5c550dd66f484dff6b4e7c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GHC.Stack.HasCallStack&lt;/code&gt; is a lightweight method of obtaining a partial call-stack at any point in the program.</source>
          <target state="translated">&lt;code&gt;GHC.Stack.HasCallStack&lt;/code&gt; 是一种轻量级方法，可以在程序的任何位置获取部分调用堆栈。</target>
        </trans-unit>
        <trans-unit id="03dd505cec7bb9d9c1f6b491b23d69415fd128d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GHC.Stack&lt;/code&gt; additionally exports a function &lt;code&gt;withFrozenCallStack&lt;/code&gt; that allows users to freeze the current &lt;code&gt;CallStack&lt;/code&gt;, preventing any future push operations from having an effect. This can be used by library authors to prevent &lt;code&gt;CallStack&lt;/code&gt;s from exposing unnecessary implementation details. Consider the &lt;code&gt;myHead&lt;/code&gt; example above, the &lt;code&gt;errorWithCallStack&lt;/code&gt; line in the printed stack is not particularly enlightening, so we might choose to suppress it by freezing the &lt;code&gt;CallStack&lt;/code&gt; that we pass to &lt;code&gt;errorWithCallStack&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GHC.Stack&lt;/code&gt; 另外出口的函数 &lt;code&gt;withFrozenCallStack&lt;/code&gt; ，使用户能够冻结当前 &lt;code&gt;CallStack&lt;/code&gt; ，防止任何未来推动业务由具有效果。库作者可以使用它来防止 &lt;code&gt;CallStack&lt;/code&gt; 公开不必要的实现细节。考虑上面的 &lt;code&gt;myHead&lt;/code&gt; 示例，打印堆栈中的 &lt;code&gt;errorWithCallStack&lt;/code&gt; 行不是特别有启发性，因此我们可以选择冻结通过传递给 &lt;code&gt;errorWithCallStack&lt;/code&gt; 的 &lt;code&gt;CallStack&lt;/code&gt; 来抑制它。</target>
        </trans-unit>
        <trans-unit id="cacf23bdced212015af63b3a25cbc43c9f95175b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GeneralisedNewtypeDeriving&lt;/code&gt; &amp;mdash; GND is not allowed in the safe language. This is due to the ability of it to violate module boundaries when module authors forget to put nominal role annotations on their types as appropriate. For this reason, the &lt;code&gt;Data.Coerce&lt;/code&gt; module is also considered unsafe. We are hoping to find a better solution here in the future.</source>
          <target state="translated">&lt;code&gt;GeneralisedNewtypeDeriving&lt;/code&gt; &amp;mdash;安全语言中不允许使用GND。这是由于当模块作者忘记在其类型上适当地添加名义角色注释时，它有能力违反模块边界。因此， &lt;code&gt;Data.Coerce&lt;/code&gt; 模块也被认为是不安全的。我们希望将来在这里找到更好的解决方案。</target>
        </trans-unit>
        <trans-unit id="0c565ee148d058ead79d9d99b67aa40318a498ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Generic1&lt;/code&gt; is used for functions that can only be defined over type containers, such as &lt;code&gt;map&lt;/code&gt;. Note that &lt;code&gt;Generic1&lt;/code&gt; ranges over types of kind &lt;code&gt;Type -&amp;gt; Type&lt;/code&gt; by default, but if the &lt;a href=&quot;#extension-PolyKinds&quot;&gt;&lt;code&gt;PolyKinds&lt;/code&gt;&lt;/a&gt; extension is enabled, then it can range of types of kind &lt;code&gt;k -&amp;gt; Type&lt;/code&gt;, for any kind &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Generic1&lt;/code&gt; 用于只能在类型容器（例如 &lt;code&gt;map&lt;/code&gt; )上定义的函数。请注意，默认情况下， &lt;code&gt;Generic1&lt;/code&gt; 在类型Type- &lt;code&gt;Type -&amp;gt; Type&lt;/code&gt; 的范围内变化，但如果启用了&lt;a href=&quot;#extension-PolyKinds&quot;&gt; &lt;code&gt;PolyKinds&lt;/code&gt; &lt;/a&gt;扩展，则对于任何类型 &lt;code&gt;k&lt;/code&gt; ，它都可以在类型 &lt;code&gt;k -&amp;gt; Type&lt;/code&gt; 范围内。</target>
        </trans-unit>
        <trans-unit id="a148a88bda531280ce07277c149aeeb8b4a7fa46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HEAP_PROF_BREAKDOWN_BIOGRAPHY&lt;/code&gt; (output from &lt;a href=&quot;profiling#rts-flag--hb&quot;&gt;&lt;code&gt;-hb&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;HEAP_PROF_BREAKDOWN_BIOGRAPHY&lt;/code&gt; （来自&lt;a href=&quot;profiling#rts-flag--hb&quot;&gt; &lt;code&gt;-hb&lt;/code&gt; 的&lt;/a&gt;输出）</target>
        </trans-unit>
        <trans-unit id="068621d0e0e41ba086128590df0fff41e1584f9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HEAP_PROF_BREAKDOWN_CLOSURE_DESCR&lt;/code&gt; (output from &lt;a href=&quot;profiling#rts-flag--hd&quot;&gt;&lt;code&gt;-hd&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;HEAP_PROF_BREAKDOWN_CLOSURE_DESCR&lt;/code&gt; （来自&lt;a href=&quot;profiling#rts-flag--hd&quot;&gt; &lt;code&gt;-hd&lt;/code&gt; 的&lt;/a&gt;输出）</target>
        </trans-unit>
        <trans-unit id="58a8b71168176994430a3b85d67178e5de6130f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HEAP_PROF_BREAKDOWN_CLOSURE_TYPE&lt;/code&gt; (output from &lt;a href=&quot;runtime_control#rts-flag--hT&quot;&gt;&lt;code&gt;-hT&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;HEAP_PROF_BREAKDOWN_CLOSURE_TYPE&lt;/code&gt; （来自&lt;a href=&quot;runtime_control#rts-flag--hT&quot;&gt; &lt;code&gt;-hT&lt;/code&gt; 的&lt;/a&gt;输出）</target>
        </trans-unit>
        <trans-unit id="209a144514bd6e95585d78e3e5e19f871cad323d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HEAP_PROF_BREAKDOWN_COST_CENTER&lt;/code&gt; (output from &lt;a href=&quot;profiling#rts-flag--hc&quot;&gt;&lt;code&gt;-hc&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;HEAP_PROF_BREAKDOWN_COST_CENTER&lt;/code&gt; （从输出&lt;a href=&quot;profiling#rts-flag--hc&quot;&gt; &lt;code&gt;-hc&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f451a9f63b51d74a46a9eb64ea0f9b88a970893b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HEAP_PROF_BREAKDOWN_MODULE&lt;/code&gt; (output from &lt;a href=&quot;profiling#rts-flag--hm&quot;&gt;&lt;code&gt;-hm&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;HEAP_PROF_BREAKDOWN_MODULE&lt;/code&gt; （从输出&lt;a href=&quot;profiling#rts-flag--hm&quot;&gt; &lt;code&gt;-hm&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ec935e2a6930cb421328847852dc23d457d013d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HEAP_PROF_BREAKDOWN_RETAINER&lt;/code&gt; (output from &lt;a href=&quot;profiling#rts-flag--hr&quot;&gt;&lt;code&gt;-hr&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;HEAP_PROF_BREAKDOWN_RETAINER&lt;/code&gt; （从输出&lt;a href=&quot;profiling#rts-flag--hr&quot;&gt; &lt;code&gt;-hr&lt;/code&gt; &lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ca3e72b620b2d3d0650ba2a97060b270f6baaf16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HEAP_PROF_BREAKDOWN_TYPE_DESCR&lt;/code&gt; (output from &lt;a href=&quot;profiling#rts-flag--hy&quot;&gt;&lt;code&gt;-hy&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;HEAP_PROF_BREAKDOWN_TYPE_DESCR&lt;/code&gt; （来自&lt;a href=&quot;profiling#rts-flag--hy&quot;&gt; &lt;code&gt;-hy&lt;/code&gt; 的&lt;/a&gt;输出）</target>
        </trans-unit>
        <trans-unit id="d7bc90056af6e8a8f92b1863498736e87ba72e93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Happy&lt;/code&gt; is at its shining best when compiled by GHC.</source>
          <target state="translated">&lt;code&gt;Happy&lt;/code&gt; 由GHC编译时，Happy处于最佳状态。</target>
        </trans-unit>
        <trans-unit id="4e7fb99a7c08e34fbbbc2b3dcaabb50bc04ddf4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HardwareFault&lt;/code&gt; A physical I/O error has occurred. &lt;code&gt;[EIO]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;HardwareFault&lt;/code&gt; 发生物理I / O错误。 &lt;code&gt;[EIO]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6068446cca90eb8d5dbf34bec50409f58be19461" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HasCallStack&lt;/code&gt; does not interact with the RTS and does not require compilation with &lt;code&gt;-prof&lt;/code&gt;. On the other hand, as the &lt;code&gt;CallStack&lt;/code&gt; is built up explicitly via the &lt;code&gt;HasCallStack&lt;/code&gt; constraints, it will generally not contain as much information as the simulated call-stacks maintained by the RTS.</source>
          <target state="translated">&lt;code&gt;HasCallStack&lt;/code&gt; 不会与RTS交互，并且不需要使用 &lt;code&gt;-prof&lt;/code&gt; 进行编译。另一方面，由于 &lt;code&gt;CallStack&lt;/code&gt; 是通过 &lt;code&gt;HasCallStack&lt;/code&gt; 约束显式构建的，因此通常包含的信息不如RTS维护的模拟调用栈那么多。</target>
        </trans-unit>
        <trans-unit id="e5d8b1de1f8979e61e56730cc1889a483e11eac7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HasField &quot;foo&quot; (T ...) _&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; has a field &lt;code&gt;foo&lt;/code&gt; (but this instance is permitted if it does not).</source>
          <target state="translated">&lt;code&gt;HasField &quot;foo&quot; (T ...) _&lt;/code&gt; 如果 &lt;code&gt;T&lt;/code&gt; 有一个字段 &lt;code&gt;foo&lt;/code&gt; （但是如果没有，则允许此实例）。</target>
        </trans-unit>
        <trans-unit id="5700fafed7e10df4a8c118fcd5e9263f0065a67b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HasField _ (T ...) _&lt;/code&gt; if &lt;code&gt;T&lt;/code&gt; is a data family (because it might have fields introduced later, using data instance declarations);</source>
          <target state="translated">&lt;code&gt;HasField _ (T ...) _&lt;/code&gt; 如果 &lt;code&gt;T&lt;/code&gt; 是一个数据族（因为稍后可能会使用数据实例声明引入字段）；</target>
        </trans-unit>
        <trans-unit id="5264b03696796236f3d719c78abcae6b3f3f0a09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HasField _ r _&lt;/code&gt; where &lt;code&gt;r&lt;/code&gt; is a variable;</source>
          <target state="translated">&lt;code&gt;HasField _ r _&lt;/code&gt; ，其中 &lt;code&gt;r&lt;/code&gt; 是变量；</target>
        </trans-unit>
        <trans-unit id="e9c05d6fdac6e1567fec438d0cdab0fc4afb3545" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HasField x (T ...) _&lt;/code&gt; if &lt;code&gt;x&lt;/code&gt; is a variable and &lt;code&gt;T&lt;/code&gt; has any fields at all (but this instance is permitted if &lt;code&gt;T&lt;/code&gt; has no fields);</source>
          <target state="translated">&lt;code&gt;HasField x (T ...) _&lt;/code&gt; 如果 &lt;code&gt;x&lt;/code&gt; 是变量并且 &lt;code&gt;T&lt;/code&gt; 根本没有任何字段（但是如果 &lt;code&gt;T&lt;/code&gt; 没有字段，则允许此实例）；</target>
        </trans-unit>
        <trans-unit id="7aec9ce990f77203a5be3e65db8c8327be14721f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HasField&lt;/code&gt; is a magic built-in typeclass (similar to &lt;code&gt;Coercible&lt;/code&gt;, for example). It is given special treatment by the constraint solver (see &lt;a href=&quot;#solving-hasfield-constraints&quot;&gt;Solving HasField constraints&lt;/a&gt;). Users may define their own instances of &lt;code&gt;HasField&lt;/code&gt; also (see &lt;a href=&quot;#virtual-record-fields&quot;&gt;Virtual record fields&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;HasField&lt;/code&gt; 是一个神奇的内置类型类（例如，类似于 &lt;code&gt;Coercible&lt;/code&gt; ）。约束求解器&lt;a href=&quot;#solving-hasfield-constraints&quot;&gt;对它&lt;/a&gt;进行了特殊处理（请参阅解决HasField约束）。用户也可以定义自己的 &lt;code&gt;HasField&lt;/code&gt; 实例（请参见&lt;a href=&quot;#virtual-record-fields&quot;&gt;虚拟记录字段&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d20e178ee4e7ec8ad37a957ea188f63fe497426d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HoleFitPlugins&lt;/code&gt; are then defined as follows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533982614e84625b9b013ab97e717a02d3751315" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HoleFitPlugins&lt;/code&gt; are wrapped in a &lt;code&gt;HoleFitPluginR&lt;/code&gt;, which provides a &lt;code&gt;TcRef&lt;/code&gt; for the plugin to use to track internal state, and to facilitate communication between the candidate and fit plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6cffe526f8b73f4e82196500374e9b8a6444bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;INLINE&lt;/code&gt; pragmas are a particularly good idea for the &lt;code&gt;then&lt;/code&gt;/&lt;code&gt;return&lt;/code&gt; (or &lt;code&gt;bind&lt;/code&gt;/&lt;code&gt;unit&lt;/code&gt;) functions in a monad. For example, in GHC&amp;rsquo;s own &lt;code&gt;UniqueSupply&lt;/code&gt; monad code, we have:</source>
          <target state="translated">&lt;code&gt;INLINE&lt;/code&gt; 对于monad中的 &lt;code&gt;then&lt;/code&gt; / &lt;code&gt;return&lt;/code&gt; （或 &lt;code&gt;bind&lt;/code&gt; / &lt;code&gt;unit&lt;/code&gt; ）功能，INLINE编译指示是一个特别好的主意。例如，在GHC自己的 &lt;code&gt;UniqueSupply&lt;/code&gt; monad代码中，我们具有：</target>
        </trans-unit>
        <trans-unit id="901c047eb44abad4b6a88d748d755034c6f1a34d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; arrays with boxed elements</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 带框元素的IO阵列</target>
        </trans-unit>
        <trans-unit id="42a7b46391e9bb7b64c3bb83e7cfb74f064ef781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; arrays with unboxed elements</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 带有未装箱元素的IO阵列</target>
        </trans-unit>
        <trans-unit id="1bab4139528505f1933a5126ca5e8dad8d6f05a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#v:newTBQueue&quot;&gt;newTBQueue&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;atomically&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 版本的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#v:newTBQueue&quot;&gt;newTBQueue&lt;/a&gt;&lt;/code&gt; 。这对于使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 创建顶级 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 很有用，因为不可能在 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 内部 &lt;code&gt;atomically&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="379e487bf600ecb8b0dc3c55ed12ff6ecee70812" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#v:newTBQueue&quot;&gt;newTBQueue&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;atomically&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fe5fae312067423e670caed31b21f21aec8380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:newBroadcastTChan&quot;&gt;newBroadcastTChan&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 版本的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:newBroadcastTChan&quot;&gt;newBroadcastTChan&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b624f4c489644af79e12b03eb404af311649a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:newTChan&quot;&gt;newTChan&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 版本的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:newTChan&quot;&gt;newTChan&lt;/a&gt;&lt;/code&gt; 。这对于使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 创建顶级 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; 很有用，因为不可能在 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 内部 &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="ea4f0d05d35ce3750a6c2a025173003d7ee8e4b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#v:newTChan&quot;&gt;newTChan&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf20f0a03d2295cf766d6ee202fdb2629a13ab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:newEmptyTMVar&quot;&gt;newEmptyTMVar&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 版本的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:newEmptyTMVar&quot;&gt;newEmptyTMVar&lt;/a&gt;&lt;/code&gt; 。这对于使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 创建顶级 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 很有用，因为不可能在 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 内部 &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="da9f8cb745e6853c75472a31ab7067ff76e01f36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:newEmptyTMVar&quot;&gt;newEmptyTMVar&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d30910e61968ba33e90093ef732f69e067e626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:newTMVar&quot;&gt;newTMVar&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 版本的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:newTMVar&quot;&gt;newTMVar&lt;/a&gt;&lt;/code&gt; 。这对于使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 创建顶级 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 很有用，因为不可能在 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 内部 &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="8cebd28d4c93e1df1496cde6e41b72ebde7a7ad0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:newTMVar&quot;&gt;newTMVar&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1336f44e50c7b39bebbf08a440daab9c174089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#v:newTQueue&quot;&gt;newTQueue&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 版本的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#v:newTQueue&quot;&gt;newTQueue&lt;/a&gt;&lt;/code&gt; 。这对于使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 创建顶级 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; 很有用，因为不可能在 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 内部 &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="e714c34e96580f3404158dafccee4018c47a4e7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#v:newTQueue&quot;&gt;newTQueue&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d874a88b64c4df2448eb9e342598edefa0288cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#v:newTVar&quot;&gt;newTVar&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 版本的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#v:newTVar&quot;&gt;newTVar&lt;/a&gt;&lt;/code&gt; 。这对于使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 创建顶级 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 很有用，因为不可能在 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 内部 &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="4a6fecbf37ac802d728b75b399dce7f6cb65a300" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#v:newTVar&quot;&gt;newTVar&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516f29992eac640bfb59ed6888b6d20b2bbab2db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;ghc-conc#v:newTVar&quot;&gt;newTVar&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;ghc-conc#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 版本的 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:newTVar&quot;&gt;newTVar&lt;/a&gt;&lt;/code&gt; 。这对于使用 &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 创建顶级 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 很有用，因为不可能在 &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 内部 &lt;code&gt;&lt;a href=&quot;ghc-conc#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="bceb1c379d548419d109f13f58a3de8d417d8817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IO&lt;/code&gt; version of &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:newTVar&quot;&gt;newTVar&lt;/a&gt;&lt;/code&gt;. This is useful for creating top-level &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s using &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt;, because using &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; inside &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; isn't possible.</source>
          <target state="translated">&lt;code&gt;IO&lt;/code&gt; 版本的 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:newTVar&quot;&gt;newTVar&lt;/a&gt;&lt;/code&gt; 。这对于使用 &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 创建顶级 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 很有用，因为不可能在 &lt;code&gt;&lt;a href=&quot;system-io-unsafe#v:unsafePerformIO&quot;&gt;unsafePerformIO&lt;/a&gt;&lt;/code&gt; 内部 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:atomically&quot;&gt;atomically&lt;/a&gt;&lt;/code&gt; 使用。</target>
        </trans-unit>
        <trans-unit id="1ce0b487e317e9c5b653ea8d945068173ff933f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IOErrorType&lt;/code&gt; predicates</source>
          <target state="translated">&lt;code&gt;IOErrorType&lt;/code&gt; 谓词</target>
        </trans-unit>
        <trans-unit id="c15b27b6cc7c3faa78681c91847f1fd46e4be27b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImportQualifiedPost&lt;/code&gt; allows the syntax &lt;code&gt;import M qualified&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13aa25c95855e50897a4ca7fc4be0bc55141120" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ImportQualifiedPost&lt;/code&gt; allows the syntax &lt;code&gt;import M qualified&lt;/code&gt;, that is, to annotate a module as qualified by writing &lt;code&gt;qualified&lt;/code&gt; after the module name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec2892e99b7bf5db3e130e5a59572fb77c0cfde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InappropriateType&lt;/code&gt; Either path refers to an existing directory. &lt;code&gt;[ENOTDIR, EISDIR, EINVAL, EEXIST, ENOTEMPTY]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InappropriateType&lt;/code&gt; 任一路径均引用现有目录。 &lt;code&gt;[ENOTDIR, EISDIR, EINVAL, EEXIST, ENOTEMPTY]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9167ba62b64c56ed3fb570018b11a056ec8c14e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InappropriateType&lt;/code&gt; Either path refers to an existing non-directory object. &lt;code&gt;[ENOTDIR, EISDIR]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InappropriateType&lt;/code&gt; 任一路径均引用现有的非目录对象。 &lt;code&gt;[ENOTDIR, EISDIR]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fde883260c4267d5fd7e6f9499278487dbc99deb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InappropriateType&lt;/code&gt; Either the destination path refers to an existing directory, or one of the parent segments in the destination path is not a directory. &lt;code&gt;[ENOTDIR, EISDIR, EINVAL, EEXIST, ENOTEMPTY]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InappropriateType&lt;/code&gt; 目标路径引用现有目录，或者目标路径中的父段之一不是目录。 &lt;code&gt;[ENOTDIR, EISDIR, EINVAL, EEXIST, ENOTEMPTY]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19368a400e931bcc5f0723b99aa19e33c6f36db3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InappropriateType&lt;/code&gt; The operand refers to an existing directory. &lt;code&gt;[EPERM, EINVAL]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InappropriateType&lt;/code&gt; 操作数引用现有目录。 &lt;code&gt;[EPERM, EINVAL]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d93edc091d9addc333a574a6fb146b6b670ded1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InappropriateType&lt;/code&gt; The operand refers to an existing non-directory object. &lt;code&gt;[ENOTDIR]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InappropriateType&lt;/code&gt; 操作数引用现有的非目录对象。 &lt;code&gt;[ENOTDIR]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2653bd58a2db75a12dbbb3dfbc2c005ae4a403db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InappropriateType&lt;/code&gt; The path refers to an existing non-directory object. &lt;code&gt;[EEXIST]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InappropriateType&lt;/code&gt; 路径引用现有的非目录对象。 &lt;code&gt;[EEXIST]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="97c23c3e11cba77cebb16481b8ae3eb81980a2f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InappropriateType&lt;/code&gt; The path refers to an existing non-directory object. &lt;code&gt;[ENOTDIR]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InappropriateType&lt;/code&gt; 路径引用现有的非目录对象。 &lt;code&gt;[ENOTDIR]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e316f50b68392c3bf88565809d8d5921608e25e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Int#&lt;/code&gt;-boolean valued versions of comparison predicates</source>
          <target state="translated">&lt;code&gt;Int#&lt;/code&gt; -比较谓词的布尔值版本</target>
        </trans-unit>
        <trans-unit id="3c5af0835484c93acfce75dd1f0be2a7475a5843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, and &lt;code&gt;Double&lt;/code&gt; arithmetic is &lt;em&gt;unchecked&lt;/em&gt;. Overflows, underflows and loss of precision are either silent or reported as an exception by the operating system (depending on the platform). Divide-by-zero &lt;em&gt;may&lt;/em&gt; cause an untrapped exception (please report it if it does).</source>
          <target state="translated">&lt;code&gt;Int&lt;/code&gt; &lt;em&gt;不检查&lt;/em&gt;Int， &lt;code&gt;Float&lt;/code&gt; 和 &lt;code&gt;Double&lt;/code&gt; 算术。溢出，下溢和精度损失是静默的，或者由操作系统报告为异常（取决于平台）。除以零&lt;em&gt;可能会&lt;/em&gt;导致未捕获的异常（如果发生，请报告）。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d99bc7e94a1d72caaafed95443b5f36b2617ac42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidArgument&lt;/code&gt; Either operand is not a valid directory name. &lt;code&gt;[ENAMETOOLONG, ELOOP]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InvalidArgument&lt;/code&gt; 任何一个操作数都不是有效的目录名称。 &lt;code&gt;[ENAMETOOLONG, ELOOP]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96ababa591787c1343e9b7ad0aaab21ce4e69061" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidArgument&lt;/code&gt; Either operand is not a valid file name. &lt;code&gt;[ENAMETOOLONG, ELOOP]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InvalidArgument&lt;/code&gt; 操作数都不是有效的文件名。 &lt;code&gt;[ENAMETOOLONG, ELOOP]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9840b1befc0df2612d36488b1b1d4ecccc5f414" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidArgument&lt;/code&gt; The operand is not a valid directory name. &lt;code&gt;[ENAMETOOLONG, ELOOP]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InvalidArgument&lt;/code&gt; 操作数不是有效的目录名称。 &lt;code&gt;[ENAMETOOLONG, ELOOP]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f49c8b69035a45d96153fa175c98a2806e9feead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InvalidArgument&lt;/code&gt; The operand is not a valid file name. &lt;code&gt;[ENAMETOOLONG, ELOOP]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InvalidArgument&lt;/code&gt; 操作数不是有效的文件名。 &lt;code&gt;[ENAMETOOLONG, ELOOP]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7fd3d7a643641e7914c0691c98647c1656fdbcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ix&lt;/code&gt; is an orphan instance or a multi-parameter-type-class.</source>
          <target state="translated">&lt;code&gt;Ix&lt;/code&gt; 是一个孤立实例或多参数类型类。</target>
        </trans-unit>
        <trans-unit id="9bf57a5f62276c3028a14efb3cc961be69551b17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Iy&lt;/code&gt; is not marked &lt;code&gt;OVERLAPPABLE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Iy&lt;/code&gt; 未标记为 &lt;code&gt;OVERLAPPABLE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7de88eab6cd0113c6c7ff7d763258bf2eb18a9bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LANGUAGE&lt;/code&gt; is a file-header pragma (see &lt;a href=&quot;#pragmas&quot;&gt;Pragmas&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;LANGUAGE&lt;/code&gt; 是文件头编译指示（请参见&lt;a href=&quot;#pragmas&quot;&gt;Pragmas&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f076d3164cc7f28be9ed21236444f2fb85c29cd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LINE&lt;/code&gt; pragmas generated from Template Haskell set the file and line position for the duration of the splice and are limited to the splice. Note that because Template Haskell splices abstract syntax, the file positions are not automatically advanced.</source>
          <target state="translated">&lt;code&gt;LINE&lt;/code&gt; 从模板Haskell生成的LINE编译指示设置了拼接期间的文件和行位置，并且仅限于拼接。请注意，由于Template Haskell拼接了抽象语法，因此文件位置不会自动前进。</target>
        </trans-unit>
        <trans-unit id="470d6dd2e7912f4907d0f83a0fcef8239178e8af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MVar&lt;/code&gt;s</source>
          <target state="translated">&lt;code&gt;MVar&lt;/code&gt;s</target>
        </trans-unit>
        <trans-unit id="8e950852064463f2891ce5299025a3f0486b0f69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Maybe&lt;/code&gt; wrappers</source>
          <target state="translated">&lt;code&gt;Maybe&lt;/code&gt; 包装</target>
        </trans-unit>
        <trans-unit id="f1847b86db7d48ce524d541637255e35bc38b76a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MkFoo1&lt;/code&gt; and &lt;code&gt;MkFoo2&lt;/code&gt; can be promoted, since their contexts only involve equality-oriented constraints. However, &lt;code&gt;MkFoo3&lt;/code&gt;&amp;lsquo;s context contains a non-equality constraint &lt;code&gt;Show a&lt;/code&gt;, and thus cannot be promoted.</source>
          <target state="translated">&lt;code&gt;MkFoo1&lt;/code&gt; 和 &lt;code&gt;MkFoo2&lt;/code&gt; 的上下文仅涉及面向平等的约束，因此可以对其进行升级。但是， &lt;code&gt;MkFoo3&lt;/code&gt; 的上下文包含非等式约束 &lt;code&gt;Show a&lt;/code&gt; ，因此无法提升。</target>
        </trans-unit>
        <trans-unit id="9f5ee6f833d3b2e9951ec6ab238d8ea1b6fd3579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MkFoo1&lt;/code&gt; and &lt;code&gt;MkFoo2&lt;/code&gt; can be promoted, since their contexts only involve equality-oriented constraints. However, &lt;code&gt;MkFoo3&lt;/code&gt;&amp;rsquo;s context contains a non-equality constraint &lt;code&gt;Show a&lt;/code&gt;, and thus cannot be promoted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db30a94611388e3ec6f6f7a0d10306ac89b36b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Monoid&lt;/code&gt; typeclass</source>
          <target state="translated">&lt;code&gt;Monoid&lt;/code&gt; 类型类</target>
        </trans-unit>
        <trans-unit id="6ce30fdd32f587a07c3ccd03a7589cbe882b388f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NFData&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;NFData&lt;/code&gt; 类</target>
        </trans-unit>
        <trans-unit id="ec680a929ede9b766f3bf18664d11ed7399400a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOTINLINE&lt;/code&gt; is a synonym for &lt;code&gt;NOINLINE&lt;/code&gt; (&lt;code&gt;NOINLINE&lt;/code&gt; is specified by Haskell 98 as the standard way to disable inlining, so it should be used if you want your code to be portable).</source>
          <target state="translated">&lt;code&gt;NOTINLINE&lt;/code&gt; 是一个同义词 &lt;code&gt;NOINLINE&lt;/code&gt; （ &lt;code&gt;NOINLINE&lt;/code&gt; 被哈斯克尔98指定为标准的方法来禁用内联，所以它应该，如果你想你的代码是便携式使用）。</target>
        </trans-unit>
        <trans-unit id="d2cb5297978bdd0d73f9920f2cb94ca4e2c109d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NominalDiffTime&lt;/code&gt; and &lt;code&gt;DiffTime&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NominalDiffTime&lt;/code&gt; 和 &lt;code&gt;DiffTime&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c84f1d4a4b497e7078e729e86506cddd7bfb2b75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Num&lt;/code&gt; instance, and</source>
          <target state="translated">&lt;code&gt;Num&lt;/code&gt; 实例，和</target>
        </trans-unit>
        <trans-unit id="45c396e63bd9c44eeb55cdefadb405ee01a84408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Num&lt;/code&gt; wrappers</source>
          <target state="translated">&lt;code&gt;Num&lt;/code&gt; 包装</target>
        </trans-unit>
        <trans-unit id="339e7f1c84a18e65c7b455719bba422a3d544601" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPTIONS_GHC&lt;/code&gt; is a &lt;em&gt;file-header pragma&lt;/em&gt; (see &lt;a href=&quot;glasgow_exts#options-pragma&quot;&gt;OPTIONS_GHC pragma&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;OPTIONS_GHC&lt;/code&gt; 是&lt;em&gt;文件头编译指示&lt;/em&gt;（请参阅&lt;a href=&quot;glasgow_exts#options-pragma&quot;&gt;OPTIONS_GHC pragma&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e59fff9df8173d07867cecfecb2c5ff2512242c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPTIONS_GHC&lt;/code&gt; is a file-header pragma (see &lt;a href=&quot;#pragmas&quot;&gt;Pragmas&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;OPTIONS_GHC&lt;/code&gt; 是文件头编译指示（请参见&lt;a href=&quot;#pragmas&quot;&gt;Pragmas&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7765f78f62ac1e9afb8eb0f2da33f6f7ea4ee12d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OverlappingInstances&lt;/code&gt; &amp;mdash; There is no restriction on the creation of overlapping instances, but we do restrict their use at a particular call site. This is a detailed restriction, please refer to &lt;a href=&quot;#safe-overlapping-instances&quot;&gt;Safe Overlapping Instances&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;OverlappingInstances&lt;/code&gt; -对创建重叠实例没有任何限制，但是我们确实限制了它们在特定呼叫站点的使用。这是一个详细的限制，请参阅&lt;a href=&quot;#safe-overlapping-instances&quot;&gt;安全重叠实例&lt;/a&gt;以获取详细信息。</target>
        </trans-unit>
        <trans-unit id="36255b2fbbb41ed1d004bec3abd13a6f6d816e9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParsecT s u m a&lt;/code&gt; is a parser with stream type &lt;code&gt;s&lt;/code&gt;, user state type &lt;code&gt;u&lt;/code&gt;, underlying monad &lt;code&gt;m&lt;/code&gt; and return type &lt;code&gt;a&lt;/code&gt;. Parsec is strict in the user state. If this is undesirable, simply use a data type like &lt;code&gt;data Box a = Box a&lt;/code&gt; and the state type &lt;code&gt;Box YourStateType&lt;/code&gt; to add a level of indirection.</source>
          <target state="translated">&lt;code&gt;ParsecT s u m a&lt;/code&gt; 是一个解析器，其流类型为 &lt;code&gt;s&lt;/code&gt; ，用户状态类型为 &lt;code&gt;u&lt;/code&gt; ，底层monad为 &lt;code&gt;m&lt;/code&gt; ，返回类型为 &lt;code&gt;a&lt;/code&gt; 。Parsec在用户状态下是严格的。如果不希望这样，只需使用数据类型，例如 &lt;code&gt;data Box a = Box a&lt;/code&gt; 和状态类型 &lt;code&gt;Box YourStateType&lt;/code&gt; 来添加间接级别。</target>
        </trans-unit>
        <trans-unit id="fb6af7ff9bda841f09ba07d97347830184d0f8f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Plugin&lt;/code&gt; exports a field, &lt;code&gt;installCoreToDos&lt;/code&gt; which is a function of type &lt;code&gt;[CommandLineOption] -&amp;gt; [CoreToDo] -&amp;gt; CoreM [CoreToDo]&lt;/code&gt;. A &lt;code&gt;CommandLineOption&lt;/code&gt; is effectively just &lt;code&gt;String&lt;/code&gt;, and a &lt;code&gt;CoreToDo&lt;/code&gt; is basically a function of type &lt;code&gt;Core -&amp;gt; Core&lt;/code&gt;. A &lt;code&gt;CoreToDo&lt;/code&gt; gives your pass a name and runs it over every compiled module when you invoke GHC.</source>
          <target state="translated">&lt;code&gt;Plugin&lt;/code&gt; 导出字段 &lt;code&gt;installCoreToDos&lt;/code&gt; ，该字段的类型为 &lt;code&gt;[CommandLineOption] -&amp;gt; [CoreToDo] -&amp;gt; CoreM [CoreToDo]&lt;/code&gt; 。甲 &lt;code&gt;CommandLineOption&lt;/code&gt; 有效只是 &lt;code&gt;String&lt;/code&gt; ，和一个 &lt;code&gt;CoreToDo&lt;/code&gt; 基本上类型的函数 &lt;code&gt;Core -&amp;gt; Core&lt;/code&gt; 。一个 &lt;code&gt;CoreToDo&lt;/code&gt; 给你传球的名称和它运行在每个编译的模块，当你调用GHC。</target>
        </trans-unit>
        <trans-unit id="67d3d0e89234b63e36a3e1abd25e28e36aa4ba6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Prelude&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;Prelude&lt;/code&gt; 否则就以前奏。</target>
        </trans-unit>
        <trans-unit id="d7a373f7633c479789271c23e1b1277df47fb78a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PyYmMdD&lt;/code&gt; (ISO 8601:2004(E) sec. 4.4.3.2)</source>
          <target state="translated">&lt;code&gt;PyYmMdD&lt;/code&gt; （ISO 8601：2004（E）秒4.4.3.2）</target>
        </trans-unit>
        <trans-unit id="42b6f33dd8dd2f78ec60b0d48abb85f162e0cb84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PyYmMdDThHmMs[.sss]S&lt;/code&gt; (ISO 8601:2004(E) sec. 4.4.3.2)</source>
          <target state="translated">&lt;code&gt;PyYmMdDThHmMs[.sss]S&lt;/code&gt; （ISO 8601：2004（E）秒4.4.3.2）</target>
        </trans-unit>
        <trans-unit id="961ff89792e76bad1270d0352029c98a7f2504d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RULES&lt;/code&gt; &amp;mdash; Rewrite rules defined in a module M compiled with &lt;a href=&quot;#extension-Safe&quot;&gt;&lt;code&gt;Safe&lt;/code&gt;&lt;/a&gt; are dropped. Rules defined in Trustworthy modules that &lt;code&gt;M&lt;/code&gt; imports are still valid and will fire as usual.</source>
          <target state="translated">&lt;code&gt;RULES&lt;/code&gt; &amp;mdash; 删除了用&lt;a href=&quot;#extension-Safe&quot;&gt; &lt;code&gt;Safe&lt;/code&gt; &lt;/a&gt;编译的模块M中定义的重写规则。可信任的模块中定义的 &lt;code&gt;M&lt;/code&gt; 导入的规则仍然有效，并且将照常触发。</target>
        </trans-unit>
        <trans-unit id="f68ff9c1328c6499c92ab6bc0d005a077e93ba0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reader&lt;/code&gt; to run in the modified environment.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; 在修改后的环境中运行。</target>
        </trans-unit>
        <trans-unit id="150747c346cb4043728e6aeb094f71c729c4ff44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RealWorld&lt;/code&gt; is deeply magical. It is &lt;em&gt;primitive&lt;/em&gt;, but it is not &lt;em&gt;unlifted&lt;/em&gt; (hence &lt;code&gt;ptrArg&lt;/code&gt;). We never manipulate values of type &lt;code&gt;RealWorld&lt;/code&gt;; it's only used in the type system, to parameterise &lt;code&gt;State#&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RealWorld&lt;/code&gt; 具有极大的魔力。这是&lt;em&gt;原始的&lt;/em&gt;，但它不是&lt;em&gt;未提升&lt;/em&gt;（因此 &lt;code&gt;ptrArg&lt;/code&gt; ）。我们从不操纵 &lt;code&gt;RealWorld&lt;/code&gt; 类型的值; 它仅在类型系统中用于参数 &lt;code&gt;State#&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="17d8e5b60e541c9708c36f2eb66acc458855d367" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScopedTypeVariables&lt;/code&gt; breaks GHC&amp;rsquo;s usual rule that explicit &lt;code&gt;forall&lt;/code&gt; is optional and doesn&amp;rsquo;t affect semantics. For the &lt;a href=&quot;#decl-type-sigs&quot;&gt;Declaration type signatures&lt;/a&gt; (or &lt;a href=&quot;#exp-type-sigs&quot;&gt;Expression type signatures&lt;/a&gt;) examples in this section, the explicit &lt;code&gt;forall&lt;/code&gt; is required. (If omitted, usually the program will not compile; in a few cases it will compile but the functions get a different signature.) To trigger those forms of &lt;code&gt;ScopedTypeVariables&lt;/code&gt;, the &lt;code&gt;forall&lt;/code&gt; must appear against the top-level signature (or outer expression) but &lt;em&gt;not&lt;/em&gt; against nested signatures referring to the same type variables.</source>
          <target state="translated">&lt;code&gt;ScopedTypeVariables&lt;/code&gt; 违反了GHC的通常规则，即显式 &lt;code&gt;forall&lt;/code&gt; 是可选的，并且不影响语义。对于本节中的&lt;a href=&quot;#decl-type-sigs&quot;&gt;声明类型签名&lt;/a&gt;（或&lt;a href=&quot;#exp-type-sigs&quot;&gt;表达式类型签名&lt;/a&gt;）示例，需要显式的 &lt;code&gt;forall&lt;/code&gt; 。（如果省略，通常程序将不会编译；在某些情况下，它将编译，但是函数会获得不同的签名。）要触发 &lt;code&gt;ScopedTypeVariables&lt;/code&gt; 的这些形式，必须针对顶级签名（或外部表达式）出现 &lt;code&gt;forall&lt;/code&gt; ，但&lt;em&gt;不&lt;/em&gt;反对引用相同类型变量的嵌套签名。</target>
        </trans-unit>
        <trans-unit id="5e8546de8393043d85df6466b8334ea2602c27fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Show&lt;/code&gt; and &lt;code&gt;Eq&lt;/code&gt; instances, and</source>
          <target state="translated">&lt;code&gt;Show&lt;/code&gt; 和 &lt;code&gt;Eq&lt;/code&gt; 实例，以及</target>
        </trans-unit>
        <trans-unit id="b045de224343a1c387b5019818791a2694ab3cd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State#&lt;/code&gt; is the primitive, unlifted type of states. It has one type parameter, thus &lt;code&gt;State# RealWorld&lt;/code&gt;, or &lt;code&gt;State# s&lt;/code&gt;, where s is a type variable. The only purpose of the type parameter is to keep different state threads separate. It is represented by nothing at all.</source>
          <target state="translated">&lt;code&gt;State#&lt;/code&gt; 是原始的，未解除的状态类型。它具有一个类型参数，即 &lt;code&gt;State# RealWorld&lt;/code&gt; 或 &lt;code&gt;State# s&lt;/code&gt; ，其中s是类型变量。type参数的唯一目的是使不同的状态线程保持分离。它根本没有任何代表。</target>
        </trans-unit>
        <trans-unit id="d953c49248db1d20798dbfecf150b0ea4f7ce454" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Strict&lt;/code&gt; and &lt;code&gt;StrictData&lt;/code&gt; only affects definitions in the module they are used in. Functions and data types imported from other modules are unaffected. For example, we won&amp;rsquo;t evaluate the argument to &lt;code&gt;Just&lt;/code&gt; before applying the constructor. Similarly we won&amp;rsquo;t evaluate the first argument to &lt;code&gt;Data.Map.findWithDefault&lt;/code&gt; before applying the function.</source>
          <target state="translated">&lt;code&gt;Strict&lt;/code&gt; 和 &lt;code&gt;StrictData&lt;/code&gt; 仅影响使用它们的模块中的定义。从其他模块导入的功能和数据类型不受影响。例如，在应用构造函数之前，我们不会将参数评估为 &lt;code&gt;Just&lt;/code&gt; 。同样，在应用该函数之前，我们不会评估 &lt;code&gt;Data.Map.findWithDefault&lt;/code&gt; 的第一个参数。</target>
        </trans-unit>
        <trans-unit id="691f5268bc97c136ef0fd5624b38ea2322b13642" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Strict&lt;/code&gt; implies &lt;a href=&quot;#strict-data&quot;&gt;StrictData&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Strict&lt;/code&gt; 意味着&lt;a href=&quot;#strict-data&quot;&gt;StrictData&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3ab68fe30de1834c2407e7d2cc3e965d8327927b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;: Biography filter</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ：传记过滤器</target>
        </trans-unit>
        <trans-unit id="ac96b5031b77df4e051a07a8628edebd8d8b9bd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;: Closure description filter</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ：关闭描述过滤器</target>
        </trans-unit>
        <trans-unit id="828827c4a462555cbd27487175c17eb5af20e685" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;: Cost centre filter</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ：成本中心过滤器</target>
        </trans-unit>
        <trans-unit id="dd397d881f95605a8a1624c0c1e46541c77ed119" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;: Cost centre stack filter</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ：成本中心堆栈过滤器</target>
        </trans-unit>
        <trans-unit id="766256d50228d727faf935a0f569e1ea819a4474" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;: Module filter</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ：模块过滤器</target>
        </trans-unit>
        <trans-unit id="ad54b46a3384c1f6d54893db00cf8b346306d510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;: Retainer filter</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ：固定器过滤器</target>
        </trans-unit>
        <trans-unit id="c65175f99eb3eb09144f63eeba4ed2896107f996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;: Type description filter</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ：类型描述过滤器</target>
        </trans-unit>
        <trans-unit id="35e6ada374a8716af991f1b75981c04e5ec1447a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;: label</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ：标签</target>
        </trans-unit>
        <trans-unit id="fe2014b1e5fbc9dfd7f95e8a5e6c5b90d10ec94b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;: module</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ：模块</target>
        </trans-unit>
        <trans-unit id="9cce2ee62be918d933789d987c72075e686fd01f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;: source location</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ：源位置</target>
        </trans-unit>
        <trans-unit id="cbeeb8eae0e3e79bc5d61d9b5f58ef4cd5fe08ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;: type or closure description, or module name</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; ：类型或闭包描述或模块名称</target>
        </trans-unit>
        <trans-unit id="593aedd04957fecb0ecd4a0d1682f6ecef4e48ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TemplateHaskell&lt;/code&gt; &amp;mdash; Can be used to gain access to constructors and abstract data types that weren&amp;rsquo;t exported by a module, subverting module boundaries.</source>
          <target state="translated">&lt;code&gt;TemplateHaskell&lt;/code&gt; &amp;mdash;可用于访问未由模块导出的构造函数和抽象数据类型，从而颠覆模块边界。</target>
        </trans-unit>
        <trans-unit id="a239272fe0fbb6f9e56ba6d7932a7c3e4ef6a90e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Typeable&lt;/code&gt; is kind-polymorphic (see &lt;a href=&quot;#kind-polymorphism&quot;&gt;Kind polymorphism&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Typeable&lt;/code&gt; 是kind-polymorphic（请参阅&lt;a href=&quot;#kind-polymorphism&quot;&gt;Kind polymorphism&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="52040b4bac337720bdaeb27d72d21766b604d15d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UTCTime&lt;/code&gt; and &lt;code&gt;ZonedTime&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UTCTime&lt;/code&gt; 和 &lt;code&gt;ZonedTime&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d6bf75fee53246b618432df56bf7f00bae7355c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UTF-16&lt;/code&gt;, &lt;code&gt;UTF-16BE&lt;/code&gt;, &lt;code&gt;UTF-16LE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UTF-16&lt;/code&gt; ， &lt;code&gt;UTF-16BE&lt;/code&gt; ， &lt;code&gt;UTF-16LE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83582f01952008dd81c27fec6422bc954d9d5f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UTF-32&lt;/code&gt;, &lt;code&gt;UTF-32BE&lt;/code&gt;, &lt;code&gt;UTF-32LE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UTF-32&lt;/code&gt; ， &lt;code&gt;UTF-32BE&lt;/code&gt; ， &lt;code&gt;UTF-32LE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b54c2f57fb807de8cc0df62106b648136974182" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsatisfiedConstraints&lt;/code&gt; Implementation-dependent constraints are not satisfied. &lt;code&gt;[EBUSY, ENOTEMPTY, EEXIST]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UnsatisfiedConstraints&lt;/code&gt; 不满足依赖于实现的约束。 &lt;code&gt;[EBUSY, ENOTEMPTY, EEXIST]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da250b3804989b0a72671f1b86ef79968ebb5238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsatisfiedConstraints&lt;/code&gt; Implementation-dependent constraints are not satisfied. &lt;code&gt;[EBUSY]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UnsatisfiedConstraints&lt;/code&gt; 不满足依赖于实现的约束。 &lt;code&gt;[EBUSY]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0660b241338bccd2fb6cd29b6bb53ab9cc39c5c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedOperation&lt;/code&gt; The implementation does not support removal in this situation. &lt;code&gt;[EINVAL]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UnsupportedOperation&lt;/code&gt; 在这种情况下，实现不支持删除。 &lt;code&gt;[EINVAL]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d46558055619c14ce6a83bcc00dd667c816ea08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedOperation&lt;/code&gt; The implementation does not support renaming in this situation. &lt;code&gt;[EINVAL, EXDEV]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UnsupportedOperation&lt;/code&gt; 在这种情况下，实现不支持重命名。 &lt;code&gt;[EINVAL, EXDEV]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6dc475e868fb74e8ba3bdab39d0aff97dc8489c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedOperation&lt;/code&gt; The implementation does not support renaming in this situation. &lt;code&gt;[EXDEV]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;UnsupportedOperation&lt;/code&gt; 在这种情况下，实现不支持重命名。 &lt;code&gt;[EXDEV]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9545512e2aded1a5123c575c06b5c671197e8add" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedOperation&lt;/code&gt; The operating system has no notion of application-specific data directory.</source>
          <target state="translated">&lt;code&gt;UnsupportedOperation&lt;/code&gt; 操作系统没有特定于应用程序的数据目录的概念。</target>
        </trans-unit>
        <trans-unit id="9af063b48cb70612c9e31e94606b9d63a49558b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedOperation&lt;/code&gt; The operating system has no notion of current working directory, or the working directory cannot be dynamically changed.</source>
          <target state="translated">&lt;code&gt;UnsupportedOperation&lt;/code&gt; 操作系统没有当前工作目录的概念，或者无法动态更改工作目录。</target>
        </trans-unit>
        <trans-unit id="f2d2661856a3cd03506f48fe4735aa425a9e11e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedOperation&lt;/code&gt; The operating system has no notion of current working directory.</source>
          <target state="translated">&lt;code&gt;UnsupportedOperation&lt;/code&gt; 操作系统没有当前工作目录的概念。</target>
        </trans-unit>
        <trans-unit id="de72e737e54be81258b64fb7ba3aff517fab9709" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedOperation&lt;/code&gt; The operating system has no notion of document directory.</source>
          <target state="translated">&lt;code&gt;UnsupportedOperation&lt;/code&gt; 操作系统没有文档目录的概念。</target>
        </trans-unit>
        <trans-unit id="f20d062d31428763adab8d45ff072cb7e3756899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedOperation&lt;/code&gt; The operating system has no notion of home directory.</source>
          <target state="translated">&lt;code&gt;UnsupportedOperation&lt;/code&gt; 操作系统没有主目录的概念。</target>
        </trans-unit>
        <trans-unit id="db45167ed4c480f8e5ee5133b810c044467b5f89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UnsupportedOperation&lt;/code&gt; The operating system has no notion of temporary directory.</source>
          <target state="translated">&lt;code&gt;UnsupportedOperation&lt;/code&gt; 操作系统没有临时目录的概念。</target>
        </trans-unit>
        <trans-unit id="6d187643c9b7dbe49cc293ea82ff2dfa5448a074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WhenMatched&lt;/code&gt; tactics</source>
          <target state="translated">&lt;code&gt;WhenMatched&lt;/code&gt; 策略</target>
        </trans-unit>
        <trans-unit id="159616400a692c69b068d46bd4c970d467315dc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WhenMissing&lt;/code&gt; tactics</source>
          <target state="translated">&lt;code&gt;WhenMissing&lt;/code&gt; 战术</target>
        </trans-unit>
        <trans-unit id="e1e8c1ea96c98074e49f8099c1ba8333765ef6b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Word32&lt;/code&gt;: Sample break-down type. One of,</source>
          <target state="translated">&lt;code&gt;Word32&lt;/code&gt; ：示例细分类型。之一，</target>
        </trans-unit>
        <trans-unit id="e974cf0cf18bc7a75aada6d6fbad1643ca335886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Word32&lt;/code&gt;: cost centre number</source>
          <target state="translated">&lt;code&gt;Word32&lt;/code&gt; ：成本中心编号</target>
        </trans-unit>
        <trans-unit id="5f4ada9410b62496b425a16307d467f11f28d2d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Word32[]&lt;/code&gt;: cost centre stack starting with inner-most (cost centre numbers)</source>
          <target state="translated">&lt;code&gt;Word32[]&lt;/code&gt; ：成本中心堆栈从最里面开始（成本中心编号）</target>
        </trans-unit>
        <trans-unit id="a7e547fe5072b36274cbe18086fdc1cef3c94170" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Word64&lt;/code&gt;: Sampling period in nanoseconds</source>
          <target state="translated">&lt;code&gt;Word64&lt;/code&gt; ：采样周期（以纳秒为单位）</target>
        </trans-unit>
        <trans-unit id="655461f866e8dcf7a719b29ca9eae06d41cc16f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Word64&lt;/code&gt;: heap residency in bytes</source>
          <target state="translated">&lt;code&gt;Word64&lt;/code&gt; ：以字节为单位的堆驻留时间</target>
        </trans-unit>
        <trans-unit id="57c4bf76d18b8d73b8885944b2c3aba87800835e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Word64&lt;/code&gt;: sample number</source>
          <target state="translated">&lt;code&gt;Word64&lt;/code&gt; ：样本编号</target>
        </trans-unit>
        <trans-unit id="8c1b5641770bd3fd50e280d95a8774029f41ec91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Word8&lt;/code&gt;: Profile ID</source>
          <target state="translated">&lt;code&gt;Word8&lt;/code&gt; ：个人资料ID</target>
        </trans-unit>
        <trans-unit id="74a3555d86cd073ebeb3b493a6db6382cf95b8cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Word8&lt;/code&gt;: flags</source>
          <target state="translated">&lt;code&gt;Word8&lt;/code&gt; ：标志</target>
        </trans-unit>
        <trans-unit id="5f5c8012178da4dfb98e24b91a15275dc83f0cb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Word8&lt;/code&gt;: stack depth</source>
          <target state="translated">&lt;code&gt;Word8&lt;/code&gt; ：堆栈深度</target>
        </trans-unit>
        <trans-unit id="3c0de180396ecebd5a0cc21d0d8efc7bd303c02c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[d| ... |]&lt;/code&gt;, where the &amp;ldquo;&amp;hellip;&amp;rdquo; is a list of top-level declarations; the quotation has type &lt;code&gt;Q [Dec]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6dbcfd4aff3d285d540a23f09e537c93ce97438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[d| ... |]&lt;/code&gt;, where the &amp;rdquo;...&amp;rdquo; is a list of top-level declarations; the quotation has type &lt;code&gt;Q [Dec]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[d| ... |]&lt;/code&gt; ，其中&amp;ldquo; ...&amp;rdquo;是顶级声明的列表；引用的类型为 &lt;code&gt;Q [Dec]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1376f4269d1a1b13c9bee1537886b55bc5e97ed3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[p| ... |]&lt;/code&gt;, where the &amp;ldquo;&amp;hellip;&amp;rdquo; is a pattern; the quotation has type &lt;code&gt;Q Pat&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1e911488d0253fbdf7543f136d38edfc246336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[p| ... |]&lt;/code&gt;, where the &amp;rdquo;...&amp;rdquo; is a pattern; the quotation has type &lt;code&gt;Q Pat&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[p| ... |]&lt;/code&gt; ，其中&amp;ldquo; ...&amp;rdquo;是模式；报价的类型为 &lt;code&gt;Q Pat&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4733a2580f30b50f050ebbd7f025ec21e698c97f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[t| ... |]&lt;/code&gt;, where the &amp;ldquo;&amp;hellip;&amp;rdquo; is a type; the quotation has type &lt;code&gt;Q Type&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2025e48e0db384fd506f6cfd601352a1e0460961" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[t| ... |]&lt;/code&gt;, where the &amp;rdquo;...&amp;rdquo; is a type; the quotation has type &lt;code&gt;Q Type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[t| ... |]&lt;/code&gt; ，其中&amp;ldquo; ...&amp;rdquo;是类型；报价的类型为 &lt;code&gt;Q Type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f40b2c7c94c5e2a59a4dc6260ed1675d91eea1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[varid| ... |]&lt;/code&gt;, where the &amp;ldquo;&amp;hellip;&amp;rdquo; is an arbitrary string; a full description of the quasi-quotation facility is given in &lt;a href=&quot;#th-quasiquotation&quot;&gt;Template Haskell Quasi-quotation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f1a9cdc8c400f772fa51edfe8a34908baf7581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[varid| ... |]&lt;/code&gt;, where the &amp;rdquo;...&amp;rdquo; is an arbitrary string; a full description of the quasi-quotation facility is given in &lt;a href=&quot;#th-quasiquotation&quot;&gt;Template Haskell Quasi-quotation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;[varid| ... |]&lt;/code&gt; ，其中&amp;ldquo; ...&amp;rdquo;是任意字符串；&lt;a href=&quot;#th-quasiquotation&quot;&gt;模板Haskell准&lt;/a&gt;报价中提供了对准报价工具的完整描述。</target>
        </trans-unit>
        <trans-unit id="30ab6f1a47eb9bba8ed335ad0c82c4a9273a314e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[| ... |]&lt;/code&gt;, or &lt;code&gt;[e| ... |]&lt;/code&gt;, where the &amp;ldquo;&amp;hellip;&amp;rdquo; is an expression; the quotation has type &lt;code&gt;Q Exp&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0447e54062d56fc83577942673bc23adc6a785d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[| ... |]&lt;/code&gt;, or &lt;code&gt;[e| ... |]&lt;/code&gt;, where the &amp;rdquo;...&amp;rdquo; is an expression; the quotation has type &lt;code&gt;Q Exp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[| ... |]&lt;/code&gt; 或 &lt;code&gt;[e| ... |]&lt;/code&gt; ，其中&amp;ldquo; ...&amp;rdquo;是一个表达式；报价的类型为 &lt;code&gt;Q Exp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2eb1f60931044aab8e92659cfcd1fa7dd4353883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a * (b + c)&lt;/code&gt; = &lt;code&gt;(a * b) + (a * c)&lt;/code&gt; and &lt;code&gt;(b + c) * a&lt;/code&gt; = &lt;code&gt;(b * a) + (c * a)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a * (b + c)&lt;/code&gt; = &lt;code&gt;(a * b) + (a * c)&lt;/code&gt; 和 &lt;code&gt;(b + c) * a&lt;/code&gt; = &lt;code&gt;(b * a) + (c * a)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7186a6c673d735648990c73c641adbe3bdd3474f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; &amp;mdash; enable all event classes listed above</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; -使上述所有事件类</target>
        </trans-unit>
        <trans-unit id="149cba18745043c4326ac22f19718f7a6d529cae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; must appear after &lt;code&gt;k&lt;/code&gt; in the declaration, and</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 后必须出现 &lt;code&gt;k&lt;/code&gt; 的声明，</target>
        </trans-unit>
        <trans-unit id="6dd7f136797a73d97f172726782cf449cc821102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accum f&lt;/code&gt; takes an array and an association list and accumulates pairs from the list into the array with the accumulating function &lt;code&gt;f&lt;/code&gt;. Thus &lt;code&gt;&lt;a href=&quot;data-array-iarray#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; can be defined using &lt;code&gt;&lt;a href=&quot;data-array-iarray#v:accum&quot;&gt;accum&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;accum f&lt;/code&gt; 获取一个数组和一个关联列表，并使用累加函数 &lt;code&gt;f&lt;/code&gt; 将列表中的对累积到数组中。因此可以使用 &lt;code&gt;&lt;a href=&quot;data-array-iarray#v:accum&quot;&gt;accum&lt;/a&gt;&lt;/code&gt; 定义 &lt;code&gt;&lt;a href=&quot;data-array-iarray#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bc2d0019a6be9362d0d370987d97b795ac5b5928" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accum&lt;/code&gt; is strict in all the results of applying the accumulation. However, it is lazy in the initial values of the array.</source>
          <target state="translated">&lt;code&gt;accum&lt;/code&gt; 在应用累积的所有结果中，accum都是严格的。但是，它在数组的初始值方面是懒惰的。</target>
        </trans-unit>
        <trans-unit id="92c3c436ea0e922399fff00f11ab69e17acf33e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accumArray&lt;/code&gt; is strict in each result of applying the accumulating function, although it is lazy in the initial value. Thus, unlike arrays built with &lt;code&gt;&lt;a href=&quot;data-array#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt;, accumulated arrays should not in general be recursive.</source>
          <target state="translated">&lt;code&gt;accumArray&lt;/code&gt; 尽管它在初始值上比较懒惰，但是在应用累加函数的每个结果中，accumArray都很严格。因此，与使用array构建的 &lt;code&gt;&lt;a href=&quot;data-array#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt; ，累积的数组通常不应递归。</target>
        </trans-unit>
        <trans-unit id="83233de3ba4aa8ca11ffaf932deec605d107e1a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;accumArray&lt;/code&gt; is strict in each result of applying the accumulating function, although it is lazy in the initial value. Thus, unlike arrays built with &lt;code&gt;&lt;a href=&quot;ghc-arr#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt;, accumulated arrays should not in general be recursive.</source>
          <target state="translated">&lt;code&gt;accumArray&lt;/code&gt; 尽管它在初始值上比较懒惰，但是在应用累加函数的每个结果中，accumArray都很严格。因此，与使用array构建的 &lt;code&gt;&lt;a href=&quot;ghc-arr#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt; ，累积的数组通常不应递归。</target>
        </trans-unit>
        <trans-unit id="9923105636c6caa73cb09df905df6a129e309eff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addCFinalizerToWeak# fptr ptr flag eptr w&lt;/code&gt; attaches a C function pointer &lt;code&gt;fptr&lt;/code&gt; to a weak pointer &lt;code&gt;w&lt;/code&gt; as a finalizer. If &lt;code&gt;flag&lt;/code&gt; is zero, &lt;code&gt;fptr&lt;/code&gt; will be called with one argument, &lt;code&gt;ptr&lt;/code&gt;. Otherwise, it will be called with two arguments, &lt;code&gt;eptr&lt;/code&gt; and &lt;code&gt;ptr&lt;/code&gt;. &lt;code&gt;addCFinalizerToWeak#&lt;/code&gt; returns 1 on success, or 0 if &lt;code&gt;w&lt;/code&gt; is already dead.</source>
          <target state="translated">&lt;code&gt;addCFinalizerToWeak# fptr ptr flag eptr w&lt;/code&gt; 将C函数指针 &lt;code&gt;fptr&lt;/code&gt; 附加到弱指针 &lt;code&gt;w&lt;/code&gt; 作为终结器。如果 &lt;code&gt;flag&lt;/code&gt; 为零，则将使用一个参数 &lt;code&gt;ptr&lt;/code&gt; 调用 &lt;code&gt;fptr&lt;/code&gt; 。否则，将使用两个参数 &lt;code&gt;eptr&lt;/code&gt; 和 &lt;code&gt;ptr&lt;/code&gt; 调用它。 &lt;code&gt;addCFinalizerToWeak#&lt;/code&gt; 成功返回1，如果 &lt;code&gt;w&lt;/code&gt; 已死，则返回0 。</target>
        </trans-unit>
        <trans-unit id="3f49149e870aea23ae76be6e895338577892e46f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;addCorePlugin m&lt;/code&gt; has almost the same effect as passing &lt;code&gt;-fplugin=m&lt;/code&gt; to ghc in the command line. The major difference is that the plugin module &lt;code&gt;m&lt;/code&gt; must not belong to the current package. When TH executes, it is too late to tell the compiler that we needed to compile first a plugin module in the current package.</source>
          <target state="translated">&lt;code&gt;addCorePlugin m&lt;/code&gt; 与在命令行 &lt;code&gt;-fplugin=m&lt;/code&gt; 传递给ghc 具有几乎相同的效果。主要区别在于插件模块 &lt;code&gt;m&lt;/code&gt; 一定不能属于当前软件包。当TH执行时，现在告诉编译器我们需要首先编译当前包中的插件模块为时已晚。</target>
        </trans-unit>
        <trans-unit id="d279010765e6e6b900a3896b2e19ea792336d687" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;and&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;any&lt;/code&gt;, &lt;code&gt;all&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;and&lt;/code&gt; ， &lt;code&gt;or&lt;/code&gt; ， &lt;code&gt;any&lt;/code&gt; ， &lt;code&gt;all&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="51f41197b390a7a1589583f2062f9ff7711a6864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anyclass&lt;/code&gt;: Use &lt;a href=&quot;#extension-DeriveAnyClass&quot;&gt;&lt;code&gt;DeriveAnyClass&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;#derive-any-class&quot;&gt;Deriving any other class&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;anyclass&lt;/code&gt; ：使用&lt;a href=&quot;#extension-DeriveAnyClass&quot;&gt; &lt;code&gt;DeriveAnyClass&lt;/code&gt; &lt;/a&gt;（请参阅&lt;a href=&quot;#derive-any-class&quot;&gt;派生任何其他类&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="5b4c5b8b1d0fbe5510c268591ea1736245a43d72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arg1 `Name` arg2&lt;/code&gt; or &lt;code&gt;arg1 op arg2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;arg1 `Name` arg2&lt;/code&gt; 或 &lt;code&gt;arg1 op arg2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7aaf19cc340c9cf99a449248ea81553e1e61e914" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arithSeqE&lt;/code&gt; Shortcuts</source>
          <target state="translated">&lt;code&gt;arithSeqE&lt;/code&gt; 快捷方式</target>
        </trans-unit>
        <trans-unit id="41adaeb06038cb0ab2e6d98a6ec1c7cd61ee8445" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; (on its second argument)</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; （在第二个参数上）</target>
        </trans-unit>
        <trans-unit id="77ec368c080e175a9a031ae9ab42188f68c395a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoAddHistory&lt;/code&gt;: add nonblank lines to the command history (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; by default).</source>
          <target state="translated">&lt;code&gt;autoAddHistory&lt;/code&gt; ：在命令历史记录中添加非空行（默认为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="dfdb0f8dc66ababee0bfcfeccddd70afba3e3f40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;awaitSignal iset&lt;/code&gt; suspends execution until an interrupt is received. If &lt;code&gt;iset&lt;/code&gt; is &lt;code&gt;Just s&lt;/code&gt;, &lt;code&gt;awaitSignal&lt;/code&gt; calls &lt;code&gt;sigsuspend&lt;/code&gt;, installing &lt;code&gt;s&lt;/code&gt; as the new signal mask before suspending execution; otherwise, it calls &lt;code&gt;sigsuspend&lt;/code&gt; with current signal mask. Note that RTS scheduler signal (either &lt;code&gt;&lt;a href=&quot;system-posix-signals#v:virtualTimerExpired&quot;&gt;virtualTimerExpired&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;system-posix-signals#v:realTimeAlarm&quot;&gt;realTimeAlarm&lt;/a&gt;&lt;/code&gt;) could cause premature termination of this call. It might be necessary to block that signal before invocation of &lt;code&gt;awaitSignal&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;system-posix-signals#v:blockSignals&quot;&gt;blockSignals&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;system-posix-signals#v:reservedSignals&quot;&gt;reservedSignals&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;awaitSignal iset&lt;/code&gt; 暂停执行，直到接收到中断为止。如果 &lt;code&gt;iset&lt;/code&gt; 是 &lt;code&gt;Just s&lt;/code&gt; ，则 &lt;code&gt;awaitSignal&lt;/code&gt; 调用 &lt;code&gt;sigsuspend&lt;/code&gt; ，在暂停执行之前将 &lt;code&gt;s&lt;/code&gt; 安装为新的信号掩码；否则，它将使用当前信号掩码调用 &lt;code&gt;sigsuspend&lt;/code&gt; 。请注意，RTS调度程序信号（ &lt;code&gt;&lt;a href=&quot;system-posix-signals#v:virtualTimerExpired&quot;&gt;virtualTimerExpired&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;system-posix-signals#v:realTimeAlarm&quot;&gt;realTimeAlarm&lt;/a&gt;&lt;/code&gt; ）可能导致此调用提前终止。在调用带有 &lt;code&gt;&lt;a href=&quot;system-posix-signals#v:blockSignals&quot;&gt;blockSignals&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-posix-signals#v:reservedSignals&quot;&gt;reservedSignals&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;awaitSignal&lt;/code&gt; 之前，可能有必要阻塞该信号。</target>
        </trans-unit>
        <trans-unit id="5eddccd6b130a969a4bbe6cdbe1b5a2f2a4ecc07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;awaitSignal&lt;/code&gt; returns when signal was received and processed by a signal handler, or if the signal could not be caught. If you have installed any signal handlers with &lt;code&gt;installHandler&lt;/code&gt;, it may be wise to call &lt;code&gt;yield&lt;/code&gt; directly after &lt;code&gt;awaitSignal&lt;/code&gt; to ensure that the signal handler runs as promptly as possible.</source>
          <target state="translated">&lt;code&gt;awaitSignal&lt;/code&gt; 当信号处理程序接收并处理信号时，或者无法捕获信号时，awaitSignal返回。如果您已经使用 &lt;code&gt;installHandler&lt;/code&gt; 安装了任何信号处理程序，则明智的做法是在 &lt;code&gt;awaitSignal&lt;/code&gt; 之后直接调用 &lt;code&gt;yield&lt;/code&gt; 以确保信号处理程序尽快运行。</target>
        </trans-unit>
        <trans-unit id="3f5527e0647486b41cc4312b1d976476b7d23da3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;between open close p&lt;/code&gt; parses &lt;code&gt;open&lt;/code&gt;, followed by &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt;. Returns the value returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;between open close p&lt;/code&gt; 解析 &lt;code&gt;open&lt;/code&gt; ，然后是 &lt;code&gt;p&lt;/code&gt; 和 &lt;code&gt;close&lt;/code&gt; 。返回 &lt;code&gt;p&lt;/code&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="f0efed973c68857e9c777874430eb0a944f2fb18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;between open close p&lt;/code&gt; parses &lt;code&gt;open&lt;/code&gt;, followed by &lt;code&gt;p&lt;/code&gt; and finally &lt;code&gt;close&lt;/code&gt;. Only the value of &lt;code&gt;p&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;between open close p&lt;/code&gt; 解析为 &lt;code&gt;open&lt;/code&gt; ，其次是 &lt;code&gt;p&lt;/code&gt; ，最后 &lt;code&gt;close&lt;/code&gt; 。仅返回 &lt;code&gt;p&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="b59bced716aaa8611056a86795f00fa553ec80c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bit &lt;em&gt;i&lt;/em&gt;&lt;/code&gt; is a value with the &lt;code&gt;&lt;em&gt;i&lt;/em&gt;&lt;/code&gt;th bit set and all other bits clear.</source>
          <target state="translated">&lt;code&gt;bit &lt;em&gt;i&lt;/em&gt;&lt;/code&gt; 位是第 &lt;code&gt;&lt;em&gt;i&lt;/em&gt;&lt;/code&gt; 个位置1且所有其他位清零的值。</target>
        </trans-unit>
        <trans-unit id="23bb751a500bd875d7a338e20a5b8f74883baf0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blockSignals mask&lt;/code&gt; calls &lt;code&gt;sigprocmask&lt;/code&gt; with &lt;code&gt;SIG_BLOCK&lt;/code&gt; to add all interrupts in &lt;code&gt;mask&lt;/code&gt; to the set of blocked interrupts.</source>
          <target state="translated">&lt;code&gt;blockSignals mask&lt;/code&gt; 使用 &lt;code&gt;SIG_BLOCK&lt;/code&gt; 调用 &lt;code&gt;sigprocmask&lt;/code&gt; ，以将 &lt;code&gt;mask&lt;/code&gt; 中的所有中断添加到已阻止的中断集中。</target>
        </trans-unit>
        <trans-unit id="aa85a6159c096b8d76aaf5324597df0c97865075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;buildExpressionParser table term&lt;/code&gt; builds an expression parser for terms &lt;code&gt;term&lt;/code&gt; with operators from &lt;code&gt;table&lt;/code&gt;, taking the associativity and precedence specified in &lt;code&gt;table&lt;/code&gt; into account. Prefix and postfix operators of the same precedence can only occur once (i.e. &lt;code&gt;--2&lt;/code&gt; is not allowed if &lt;code&gt;-&lt;/code&gt; is prefix negate). Prefix and postfix operators of the same precedence associate to the left (i.e. if &lt;code&gt;++&lt;/code&gt; is postfix increment, than &lt;code&gt;-2++&lt;/code&gt; equals &lt;code&gt;-1&lt;/code&gt;, not &lt;code&gt;-3&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;buildExpressionParser table term&lt;/code&gt; 构建查看条款的表达式分析器 &lt;code&gt;term&lt;/code&gt; 与来自运营商 &lt;code&gt;table&lt;/code&gt; ，以在所指定的关联性和优先级 &lt;code&gt;table&lt;/code&gt; 考虑。一次（即只能出现相同的优先级的前缀和后缀运算符 &lt;code&gt;--2&lt;/code&gt; 是不允许的，如果 &lt;code&gt;-&lt;/code&gt; 是否定前缀）。具有相同优先级的前缀和后缀运算符与左侧关联（即，如果 &lt;code&gt;++&lt;/code&gt; 是后缀增量，则 &lt;code&gt;-2++&lt;/code&gt; 等于 &lt;code&gt;-1&lt;/code&gt; ，而不是 &lt;code&gt;-3&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="fad0cb08a7c9a3cf2d210817336c422f8de0001f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;c&lt;/code&gt; coverage</source>
          <target state="translated">&lt;code&gt;c&lt;/code&gt; 覆盖</target>
        </trans-unit>
        <trans-unit id="3c4f0b1c441a8fe302ce5fcf7e664d845e9fa265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callCC&lt;/code&gt; (call-with-current-continuation) calls a function with the current continuation as its argument. Provides an escape continuation mechanism for use with Continuation monads. Escape continuations allow to abort the current computation and return a value immediately. They achieve a similar effect to &lt;code&gt;&lt;a href=&quot;control-monad-error#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-error#v:catchError&quot;&gt;catchError&lt;/a&gt;&lt;/code&gt; within an &lt;code&gt;&lt;a href=&quot;control-monad-error#v:Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; monad. Advantage of this function over calling &lt;code&gt;return&lt;/code&gt; is that it makes the continuation explicit, allowing more flexibility and better control (see examples in &lt;a href=&quot;control-monad-cont&quot;&gt;Control.Monad.Cont&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;callCC&lt;/code&gt; （call-with-current-continuation）调用一个以当前连续性作为参数的函数。提供与Continuation monad一起使用的转义继续机制。转义继续允许中止当前计算并立即返回值。它们在 &lt;code&gt;&lt;a href=&quot;control-monad-error#v:Error&quot;&gt;Error&lt;/a&gt;&lt;/code&gt; monad中达到与 &lt;code&gt;&lt;a href=&quot;control-monad-error#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;control-monad-error#v:catchError&quot;&gt;catchError&lt;/a&gt;&lt;/code&gt; 类似的效果。此函数优于调用 &lt;code&gt;return&lt;/code&gt; 的优点在于，它使连续性显式，从而允许更大的灵活性和更好的控制（请参阅&lt;a href=&quot;control-monad-cont&quot;&gt;Control.Monad.Cont中的&lt;/a&gt;示例）。</target>
        </trans-unit>
        <trans-unit id="b4ceae3c8a658aaa250e40e1e151e962d689447b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callCC&lt;/code&gt; (call-with-current-continuation) calls its argument function, passing it the current continuation. It provides an escape continuation mechanism for use with continuation monads. Escape continuations one allow to abort the current computation and return a value immediately. They achieve a similar effect to &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:throwE&quot;&gt;throwE&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:catchE&quot;&gt;catchE&lt;/a&gt;&lt;/code&gt; within an &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; monad. The advantage of this function over calling &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; is that it makes the continuation explicit, allowing more flexibility and better control.</source>
          <target state="translated">&lt;code&gt;callCC&lt;/code&gt; （call-with-current-continuation）调用其自变量函数，并向其传递当前的延续。它提供了用于延续单子的转义继续机制。转义继续可以中止当前计算并立即返回一个值。它们在 &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; monad中达到与 &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:throwE&quot;&gt;throwE&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:catchE&quot;&gt;catchE&lt;/a&gt;&lt;/code&gt; 类似的效果。与调用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; 相比，此函数的优势在于它使连续性更加明确，从而提供了更大的灵活性和更好的控制。</target>
        </trans-unit>
        <trans-unit id="26616a8960b4dcf96d8cb0402767831b4e88b141" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callCC&lt;/code&gt; (call-with-current-continuation) calls its argument function, passing it the current continuation. It provides an escape continuation mechanism for use with continuation monads. Escape continuations one allow to abort the current computation and return a value immediately. They achieve a similar effect to &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:throwE&quot;&gt;throwE&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:catchE&quot;&gt;catchE&lt;/a&gt;&lt;/code&gt; within an &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; monad. The advantage of this function over calling &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; is that it makes the continuation explicit, allowing more flexibility and better control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1b977fbb6cf876421ec8abbe31bbe12bcf60ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;canonicalizePath&lt;/code&gt; can resolve at least 64 indirections in a single path, more than what is supported by most operating systems. Therefore, it may return the fully resolved path even though the operating system itself would have long given up.</source>
          <target state="translated">&lt;code&gt;canonicalizePath&lt;/code&gt; 可以在单个路径中解决至少64个间接访问，这比大多数操作系统所支持的更多。因此，即使操作系统本身早已放弃，它也可能返回完全解析的路径。</target>
        </trans-unit>
        <trans-unit id="36dcb166d8a42d48877e184da7dd256de9be24bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chainl p op x&lt;/code&gt; parses &lt;em&gt;zero&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;op&lt;/code&gt;. Returns a value obtained by a &lt;em&gt;left&lt;/em&gt; associative application of all functions returned by &lt;code&gt;op&lt;/code&gt; to the values returned by &lt;code&gt;p&lt;/code&gt;. If there are zero occurrences of &lt;code&gt;p&lt;/code&gt;, the value &lt;code&gt;x&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;chainl p op x&lt;/code&gt; 解析&lt;em&gt;零次&lt;/em&gt;或多次出现的 &lt;code&gt;p&lt;/code&gt; ，以 &lt;code&gt;op&lt;/code&gt; 分隔。返回一个值，该值是由 &lt;code&gt;op&lt;/code&gt; 所返回的所有函数的&lt;em&gt;左&lt;/em&gt;关联应用程序获取到 &lt;code&gt;p&lt;/code&gt; 所返回的值的值。如果 &lt;code&gt;p&lt;/code&gt; 出现零次，则返回值 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="194ab257885ffa8cbd5692de9ec6b0aeef2c6c6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chainl p op x&lt;/code&gt; parses zero or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;op&lt;/code&gt;. Returns a value produced by a &lt;em&gt;left&lt;/em&gt; associative application of all functions returned by &lt;code&gt;op&lt;/code&gt;. If there are no occurrences of &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;chainl p op x&lt;/code&gt; 解析零次或多次出现的 &lt;code&gt;p&lt;/code&gt; ，以 &lt;code&gt;op&lt;/code&gt; 分隔。返回由 &lt;code&gt;op&lt;/code&gt; 所返回的所有函数的&lt;em&gt;左&lt;/em&gt;关联应用程序产生的值。如果没有出现 &lt;code&gt;p&lt;/code&gt; ，则返回 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24ff236a28e78bb8481813277cfd6fb730a2afd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chainl1 p op&lt;/code&gt; parses &lt;em&gt;one&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;op&lt;/code&gt; Returns a value obtained by a &lt;em&gt;left&lt;/em&gt; associative application of all functions returned by &lt;code&gt;op&lt;/code&gt; to the values returned by &lt;code&gt;p&lt;/code&gt;. This parser can for example be used to eliminate left recursion which typically occurs in expression grammars.</source>
          <target state="translated">&lt;code&gt;chainl1 p op&lt;/code&gt; 解析&lt;em&gt;一个&lt;/em&gt;或多个出现 &lt;code&gt;p&lt;/code&gt; ，通过分离 &lt;code&gt;op&lt;/code&gt; 返回由所获得的值&lt;em&gt;左侧&lt;/em&gt;的由返回的所有功能关联应用 &lt;code&gt;op&lt;/code&gt; 到由返回的值 &lt;code&gt;p&lt;/code&gt; 。例如，可以使用此解析器消除表达式语法中通常发生的左递归。</target>
        </trans-unit>
        <trans-unit id="68ed2fa3e7c58bbb8e0801d890944be400e1a245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chainr p op x&lt;/code&gt; parses &lt;em&gt;zero&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;op&lt;/code&gt; Returns a value obtained by a &lt;em&gt;right&lt;/em&gt; associative application of all functions returned by &lt;code&gt;op&lt;/code&gt; to the values returned by &lt;code&gt;p&lt;/code&gt;. If there are no occurrences of &lt;code&gt;p&lt;/code&gt;, the value &lt;code&gt;x&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;chainr p op x&lt;/code&gt; 解析&lt;em&gt;零&lt;/em&gt;或多次出现的 &lt;code&gt;p&lt;/code&gt; ，通过分离 &lt;code&gt;op&lt;/code&gt; 返回由所得的值&lt;em&gt;向右&lt;/em&gt;的由返回的所有功能关联应用 &lt;code&gt;op&lt;/code&gt; 到由返回的值 &lt;code&gt;p&lt;/code&gt; 。如果没有出现 &lt;code&gt;p&lt;/code&gt; ，则返回值 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c985ed0f65a6c5e10c4638ffd95ed75329f0609" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chainr p op x&lt;/code&gt; parses zero or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;op&lt;/code&gt;. Returns a value produced by a &lt;em&gt;right&lt;/em&gt; associative application of all functions returned by &lt;code&gt;op&lt;/code&gt;. If there are no occurrences of &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;chainr p op x&lt;/code&gt; 解析零次或多次出现的 &lt;code&gt;p&lt;/code&gt; ，以 &lt;code&gt;op&lt;/code&gt; 分隔。返回由 &lt;code&gt;op&lt;/code&gt; 返回的所有函数的&lt;em&gt;右&lt;/em&gt;关联应用程序产生的值。如果没有出现 &lt;code&gt;p&lt;/code&gt; ，则返回 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16cb565d6d3d03fad93241fb30def31c12816cc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;chainr1 p op x&lt;/code&gt; parses &lt;em&gt;one&lt;/em&gt; or more occurrences of |p|, separated by &lt;code&gt;op&lt;/code&gt; Returns a value obtained by a &lt;em&gt;right&lt;/em&gt; associative application of all functions returned by &lt;code&gt;op&lt;/code&gt; to the values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chainr1 p op x&lt;/code&gt; 解析&lt;em&gt;一个&lt;/em&gt;或多个出现| P |，由分离 &lt;code&gt;op&lt;/code&gt; 返回由所得的值&lt;em&gt;向右&lt;/em&gt;的由返回的所有功能关联应用 &lt;code&gt;op&lt;/code&gt; 到由返回的值 &lt;code&gt;p&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2063898cc537ebd7e745780ddecfa292106d7e4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;changeWorkingDirectory dir&lt;/code&gt; calls &lt;code&gt;chdir&lt;/code&gt; to change the current working directory to &lt;code&gt;dir&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;changeWorkingDirectory dir&lt;/code&gt; 调用 &lt;code&gt;chdir&lt;/code&gt; 将当前工作目录更改为 &lt;code&gt;dir&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="052c109fb02bbddcf21e7a3e895f702c6cbe4d90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;char c&lt;/code&gt; parses a single character &lt;code&gt;c&lt;/code&gt;. Returns the parsed character (i.e. &lt;code&gt;c&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;char c&lt;/code&gt; 解析单个字符 &lt;code&gt;c&lt;/code&gt; 。返回已解析的字符（即 &lt;code&gt;c&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f74b913f338132524c6dc452f39e326e7016e390" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;choice ps&lt;/code&gt; tries to apply the parsers in the list &lt;code&gt;ps&lt;/code&gt; in order, until one of them succeeds. Returns the value of the succeeding parser.</source>
          <target state="translated">&lt;code&gt;choice ps&lt;/code&gt; 尝试按顺序应用列表 &lt;code&gt;ps&lt;/code&gt; 中的解析器，直到其中之一成功。返回后续解析器的值。</target>
        </trans-unit>
        <trans-unit id="062c2c8918d9490e5adc2e2a085dfd713939cbf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; declarations:</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 声明：</target>
        </trans-unit>
        <trans-unit id="0e0fa4497c830d4b56d4c13c5c623e1dc2dbc3ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;closeDirStream dp&lt;/code&gt; calls &lt;code&gt;closedir&lt;/code&gt; to close the directory stream &lt;code&gt;dp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;closeDirStream dp&lt;/code&gt; 调用 &lt;code&gt;closedir&lt;/code&gt; 关闭目录流 &lt;code&gt;dp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ea4a17d2d326c8280f997479099e349bd994f4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compareByteArrays# src1 src1_ofs src2 src2_ofs n&lt;/code&gt; compares &lt;code&gt;n&lt;/code&gt; bytes starting at offset &lt;code&gt;src1_ofs&lt;/code&gt; in the first &lt;code&gt;ByteArray#&lt;/code&gt;&lt;code&gt;src1&lt;/code&gt; to the range of &lt;code&gt;n&lt;/code&gt; bytes (i.e. same length) starting at offset &lt;code&gt;src2_ofs&lt;/code&gt; of the second &lt;code&gt;ByteArray#&lt;/code&gt;&lt;code&gt;src2&lt;/code&gt;. Both arrays must fully contain the specified ranges, but this is not checked. Returns an &lt;code&gt;Int#&lt;/code&gt; less than, equal to, or greater than zero if the range is found, respectively, to be byte-wise lexicographically less than, to match, or be greater than the second range.</source>
          <target state="translated">&lt;code&gt;compareByteArrays# src1 src1_ofs src2 src2_ofs n&lt;/code&gt; 进行比较 &lt;code&gt;n&lt;/code&gt; 字节起始于偏移 &lt;code&gt;src1_ofs&lt;/code&gt; 在第一 &lt;code&gt;ByteArray#&lt;/code&gt; &lt;code&gt;src1&lt;/code&gt; 至的范围 &lt;code&gt;n&lt;/code&gt; 字节（即，相同的长度）开始偏移 &lt;code&gt;src2_ofs&lt;/code&gt; 第二的 &lt;code&gt;ByteArray#&lt;/code&gt; &lt;code&gt;src2&lt;/code&gt; 。两个数组都必须完全包含指定的范围，但是不会选中。如果发现该范围分别按字节顺序在字典上小于，匹配或大于第二个范围，则返回小于，等于或大于零的 &lt;code&gt;Int#&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e544d236b45af1423cd3bc87ffb5df232a61481e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const x&lt;/code&gt; is a unary function which evaluates to &lt;code&gt;x&lt;/code&gt; for all inputs.</source>
          <target state="translated">&lt;code&gt;const x&lt;/code&gt; 是一元函数，对所有输入求和为 &lt;code&gt;x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62f12c013af092c4fde3972020484445440d928a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controlFlow fd action&lt;/code&gt; calls &lt;code&gt;tcflow&lt;/code&gt; to control the flow of data on &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt;, as indicated by &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;controlFlow fd action&lt;/code&gt; 调用 &lt;code&gt;tcflow&lt;/code&gt; 以控制 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 上的数据流，如 &lt;code&gt;action&lt;/code&gt; 所示。</target>
        </trans-unit>
        <trans-unit id="4520bb319d4ec6dac65138fd7754f5a137bf16e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;copyByteArray# src src_ofs dst dst_ofs n&lt;/code&gt; copies the range starting at offset &lt;code&gt;src_ofs&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt; from the &lt;code&gt;ByteArray#&lt;/code&gt;&lt;code&gt;src&lt;/code&gt; to the &lt;code&gt;MutableByteArray#&lt;/code&gt;&lt;code&gt;dst&lt;/code&gt; starting at offset &lt;code&gt;dst_ofs&lt;/code&gt;. Both arrays must fully contain the specified ranges, but this is not checked. The two arrays must not be the same array in different states, but this is not checked either.</source>
          <target state="translated">&lt;code&gt;copyByteArray# src src_ofs dst dst_ofs n&lt;/code&gt; 将范围从长度 &lt;code&gt;n&lt;/code&gt; 的偏移 &lt;code&gt;src_ofs&lt;/code&gt; 开始，从 &lt;code&gt;ByteArray#&lt;/code&gt; &lt;code&gt;src&lt;/code&gt; &lt;code&gt;MutableByteArray#&lt;/code&gt; 到MutableByteArray＃ &lt;code&gt;dst&lt;/code&gt; ,从偏移 &lt;code&gt;dst_ofs&lt;/code&gt; 开始。两个数组都必须完全包含指定的范围，但是不会选中。两个阵列在不同状态下不得为同一阵列，但也不会选中。</target>
        </trans-unit>
        <trans-unit id="73a9a6ad988ae4dd809544f37834df439c94aeb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count n p&lt;/code&gt; parses &lt;code&gt;n&lt;/code&gt; occurrences of &lt;code&gt;p&lt;/code&gt; in sequence. A list of results is returned.</source>
          <target state="translated">&lt;code&gt;count n p&lt;/code&gt; 按顺序解析 &lt;code&gt;n&lt;/code&gt; 次出现的 &lt;code&gt;p&lt;/code&gt; 次。返回结果列表。</target>
        </trans-unit>
        <trans-unit id="ef3ab7cc4ff01c7961fe0a527f57426f6bcf5c6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count n p&lt;/code&gt; parses &lt;code&gt;n&lt;/code&gt; occurrences of &lt;code&gt;p&lt;/code&gt;. If &lt;code&gt;n&lt;/code&gt; is smaller or equal to zero, the parser equals to &lt;code&gt;return []&lt;/code&gt;. Returns a list of &lt;code&gt;n&lt;/code&gt; values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;count n p&lt;/code&gt; 解析 &lt;code&gt;p&lt;/code&gt; 的 &lt;code&gt;n&lt;/code&gt; 次出现。如果 &lt;code&gt;n&lt;/code&gt; 小于或等于零，则解析器等于 &lt;code&gt;return []&lt;/code&gt; 。返回由 &lt;code&gt;p&lt;/code&gt; 返回的 &lt;code&gt;n&lt;/code&gt; 个值的列表。</target>
        </trans-unit>
        <trans-unit id="e830eb32578a6325a39011990994921443ead963" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createDevice path mode dev&lt;/code&gt; creates either a regular or a special file depending on the value of &lt;code&gt;mode&lt;/code&gt; (and &lt;code&gt;dev&lt;/code&gt;). &lt;code&gt;mode&lt;/code&gt; will normally be either &lt;code&gt;&lt;a href=&quot;system-posix-files#v:blockSpecialMode&quot;&gt;blockSpecialMode&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;system-posix-files#v:characterSpecialMode&quot;&gt;characterSpecialMode&lt;/a&gt;&lt;/code&gt;. May fail with &lt;code&gt;&lt;a href=&quot;system-posix-error#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; if a file named &lt;code&gt;name&lt;/code&gt; already exists or if the effective user ID of the current process doesn't have permission to create the file.</source>
          <target state="translated">&lt;code&gt;createDevice path mode dev&lt;/code&gt; 根据 &lt;code&gt;mode&lt;/code&gt; （和 &lt;code&gt;dev&lt;/code&gt; ）的值创建常规文件或特殊文件。 &lt;code&gt;mode&lt;/code&gt; 通常是 &lt;code&gt;&lt;a href=&quot;system-posix-files#v:blockSpecialMode&quot;&gt;blockSpecialMode&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;system-posix-files#v:characterSpecialMode&quot;&gt;characterSpecialMode&lt;/a&gt;&lt;/code&gt; 。如果名为 &lt;code&gt;name&lt;/code&gt; 的文件已经存在，或者当前进程的有效用户ID没有创建该文件的权限，则可能因 &lt;code&gt;&lt;a href=&quot;system-posix-error#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; 而失败。</target>
        </trans-unit>
        <trans-unit id="bb2dd5362da4181a22373ec75833e78ad69887b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createDevice path mode dev&lt;/code&gt; creates either a regular or a special file depending on the value of &lt;code&gt;mode&lt;/code&gt; (and &lt;code&gt;dev&lt;/code&gt;). &lt;code&gt;mode&lt;/code&gt; will normally be either &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:blockSpecialMode&quot;&gt;blockSpecialMode&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:characterSpecialMode&quot;&gt;characterSpecialMode&lt;/a&gt;&lt;/code&gt;. May fail with &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; if a file named &lt;code&gt;name&lt;/code&gt; already exists or if the effective user ID of the current process doesn't have permission to create the file.</source>
          <target state="translated">&lt;code&gt;createDevice path mode dev&lt;/code&gt; 根据 &lt;code&gt;mode&lt;/code&gt; （和 &lt;code&gt;dev&lt;/code&gt; ）的值创建常规文件或特殊文件。 &lt;code&gt;mode&lt;/code&gt; 通常是 &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:blockSpecialMode&quot;&gt;blockSpecialMode&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#v:characterSpecialMode&quot;&gt;characterSpecialMode&lt;/a&gt;&lt;/code&gt; 。如果名为 &lt;code&gt;name&lt;/code&gt; 的文件已经存在，或者当前进程的有效用户ID没有创建该文件的权限，则可能因 &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; 而失败。</target>
        </trans-unit>
        <trans-unit id="b4db2b138b3574750e07f04c89c2cc7fbde2fdc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createDirectory dir mode&lt;/code&gt; calls &lt;code&gt;mkdir&lt;/code&gt; to create a new directory, &lt;code&gt;dir&lt;/code&gt;, with permissions based on &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;createDirectory dir mode&lt;/code&gt; 调用 &lt;code&gt;mkdir&lt;/code&gt; 创建一个新目录 &lt;code&gt;dir&lt;/code&gt; ，该目录具有基于 &lt;code&gt;mode&lt;/code&gt; 的权限。</target>
        </trans-unit>
        <trans-unit id="c58e82da0a7fba5c9695024c0d36d817d9035005" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createLink old new&lt;/code&gt; creates a new path, &lt;code&gt;new&lt;/code&gt;, linked to an existing file, &lt;code&gt;old&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;createLink old new&lt;/code&gt; 创建一个链接到现有文件 &lt;code&gt;old&lt;/code&gt; 的新路径 &lt;code&gt;new&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a1232f65b6cf592ca37036cb00c10cd711926dd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createNamedPipe fifo mode&lt;/code&gt; creates a new named pipe, &lt;code&gt;fifo&lt;/code&gt;, with permissions based on &lt;code&gt;mode&lt;/code&gt;. May fail with &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; if a file named &lt;code&gt;name&lt;/code&gt; already exists or if the effective user ID of the current process doesn't have permission to create the pipe.</source>
          <target state="translated">&lt;code&gt;createNamedPipe fifo mode&lt;/code&gt; 创建一个新的命名管道 &lt;code&gt;fifo&lt;/code&gt; ，其权限基于 &lt;code&gt;mode&lt;/code&gt; 。如果名为 &lt;code&gt;name&lt;/code&gt; 的文件已经存在，或者当前进程的有效用户ID没有创建管道的权限，则可能因 &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; 而失败。</target>
        </trans-unit>
        <trans-unit id="70ad04d1d6775e833f76121193627201a6e247a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createNamedPipe fifo mode&lt;/code&gt; creates a new named pipe, &lt;code&gt;fifo&lt;/code&gt;, with permissions based on &lt;code&gt;mode&lt;/code&gt;. May fail with &lt;code&gt;&lt;a href=&quot;system-posix-error#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; if a file named &lt;code&gt;name&lt;/code&gt; already exists or if the effective user ID of the current process doesn't have permission to create the pipe.</source>
          <target state="translated">&lt;code&gt;createNamedPipe fifo mode&lt;/code&gt; 创建一个新的命名管道 &lt;code&gt;fifo&lt;/code&gt; ，其权限基于 &lt;code&gt;mode&lt;/code&gt; 。如果名为 &lt;code&gt;name&lt;/code&gt; 的文件已经存在，或者当前进程的有效用户ID没有创建管道的权限，则可能因 &lt;code&gt;&lt;a href=&quot;system-posix-error#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; 而失败。</target>
        </trans-unit>
        <trans-unit id="c9ee9efc00efab99d5643207aebaa92809f127e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;createSymbolicLink file1 file2&lt;/code&gt; creates a symbolic link named &lt;code&gt;file2&lt;/code&gt; which points to the file &lt;code&gt;file1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;createSymbolicLink file1 file2&lt;/code&gt; 创建一个名为 &lt;code&gt;file2&lt;/code&gt; 的符号链接，该链接指向文件 &lt;code&gt;file1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1fbc8e436d708733f29d632bb7c387b44f62477" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;data&lt;/code&gt; declarations:</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 声明：</target>
        </trans-unit>
        <trans-unit id="df60e7df637060c0210c29137e93f51d157ff540" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaultPlugin&lt;/code&gt; defines &lt;code&gt;pluginRecompile&lt;/code&gt; to be &lt;code&gt;impurePlugin&lt;/code&gt; which is the most conservative and backwards compatible option.</source>
          <target state="translated">&lt;code&gt;defaultPlugin&lt;/code&gt; 将 &lt;code&gt;pluginRecompile&lt;/code&gt; 定义为 &lt;code&gt;impurePlugin&lt;/code&gt; ，这是最保守且向后兼容的选项。</target>
        </trans-unit>
        <trans-unit id="9d8ac8ba952e96f2f584ff153d1e0d2c50fbb8b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;discardData fd queues&lt;/code&gt; calls &lt;code&gt;tcflush&lt;/code&gt; to discard pending input and/or output for &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt;, as indicated by the &lt;code&gt;QueueSelector&lt;/code&gt;&lt;code&gt;queues&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;discardData fd queues&lt;/code&gt; 调用 &lt;code&gt;tcflush&lt;/code&gt; 来丢弃 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 的未决输入和/或输出，如 &lt;code&gt;QueueSelector&lt;/code&gt; &lt;code&gt;queues&lt;/code&gt; 所示。</target>
        </trans-unit>
        <trans-unit id="653522ba69eccab6c77a8c5417dd32997d59a2ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dlopen(3)&lt;/code&gt; and friends Derived from &lt;code&gt;GModule.chs&lt;/code&gt; by M.Weber &amp;amp; M.Chakravarty which is part of c2hs. I left the API more or less the same, mostly the flags are different.</source>
          <target state="translated">&lt;code&gt;dlopen(3)&lt;/code&gt; 和朋友来自 &lt;code&gt;GModule.chs&lt;/code&gt; 的M.Weber和M.Chakravarty的GModule.chs。我留下的API大致相同，主要是标志是不同的。</target>
        </trans-unit>
        <trans-unit id="ef46bdd157c3375114408f775493150852e02e44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drainOutput fd&lt;/code&gt; calls &lt;code&gt;tcdrain&lt;/code&gt; to block until all output written to &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt; has been transmitted.</source>
          <target state="translated">&lt;code&gt;drainOutput fd&lt;/code&gt; 调用 &lt;code&gt;tcdrain&lt;/code&gt; 进行阻止，直到写入 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 的所有输出都已传输。</target>
        </trans-unit>
        <trans-unit id="d76e6c62116a09c7ea69142e3b355a99f57dbfe8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dup2 source target&lt;/code&gt; replaces the target device with the source device. The target device is closed first, if necessary, and then it is made into a duplicate of the first device (like Unix &lt;code&gt;dup2&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;dup2 source target&lt;/code&gt; 将源设备替换为目标设备。如果需要，首先关闭目标设备，然后将其复制为第一个设备的副本（例如Unix &lt;code&gt;dup2&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="554a03aaac855cf87b3e1e6f5b648cb30d35ab3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt;: the element type of the array.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; ：数组的元素类型。</target>
        </trans-unit>
        <trans-unit id="466c8896289ba5414e01061af7677aabe076c33c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt;: the element type of the array. Only certain element types are supported.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; ：数组的元素类型。仅支持某些元素类型。</target>
        </trans-unit>
        <trans-unit id="86251c46011752870f8ac6831c8af890201af68f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;e&lt;/code&gt;: the element type of the array. Only certain element types are supported: see &lt;a href=&quot;data-array-marray&quot;&gt;Data.Array.MArray&lt;/a&gt; for a list of instances.</source>
          <target state="translated">&lt;code&gt;e&lt;/code&gt; ：数组的元素类型。仅支持某些元素类型：有关实例列表，请参见&lt;a href=&quot;data-array-marray&quot;&gt;Data.Array.MArray&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="57723498d28290c18a0e14ab2d7a1a61c416dc3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endBy p sep&lt;/code&gt; parses &lt;em&gt;zero&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated and ended by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;endBy p sep&lt;/code&gt; 解析&lt;em&gt;零次&lt;/em&gt;或多次出现的 &lt;code&gt;p&lt;/code&gt; ，并以 &lt;code&gt;sep&lt;/code&gt; 分隔并结束。返回 &lt;code&gt;p&lt;/code&gt; 返回的值的列表。</target>
        </trans-unit>
        <trans-unit id="a3ea67996444d2042ff0261a1d87529799f87f8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endBy p sep&lt;/code&gt; parses one or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated and ended by &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;endBy p sep&lt;/code&gt; 解析的一次或多次出现 &lt;code&gt;p&lt;/code&gt; ，分离并通过结束 &lt;code&gt;sep&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="311ae2cbe599a5740080499a38949d85bd6cacaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endBy p sep&lt;/code&gt; parses zero or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated and ended by &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;endBy p sep&lt;/code&gt; 解析零次或多次出现的 &lt;code&gt;p&lt;/code&gt; ，并以 &lt;code&gt;sep&lt;/code&gt; 分隔并结束。</target>
        </trans-unit>
        <trans-unit id="d1116ff23b47ec9512b9459f3a2fdaf213daad63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;endBy1 p sep&lt;/code&gt; parses &lt;em&gt;one&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated and ended by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;endBy1 p sep&lt;/code&gt; 解析&lt;em&gt;一个&lt;/em&gt;或多个出现 &lt;code&gt;p&lt;/code&gt; ，分离并通过结束 &lt;code&gt;sep&lt;/code&gt; 。返回 &lt;code&gt;p&lt;/code&gt; 返回的值的列表。</target>
        </trans-unit>
        <trans-unit id="3e4bfd1c817ef4eb16eb5e85f5174941b1fb2639" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;epochTime&lt;/code&gt; calls &lt;code&gt;time&lt;/code&gt; to obtain the number of seconds that have elapsed since the epoch (Jan 01 00:00:00 GMT 1970).</source>
          <target state="translated">&lt;code&gt;epochTime&lt;/code&gt; 调用 &lt;code&gt;time&lt;/code&gt; 以获取自该时间段以来的秒数（格林尼治标准时间1970年1月1日00:00:00）。</target>
        </trans-unit>
        <trans-unit id="a3b22431113363995e02522f9f91315f345d06cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;error&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; automatically attach the current stack to the error message. This often complements the &lt;code&gt;HasCallStack&lt;/code&gt; stack (see &lt;a href=&quot;glasgow_exts#hascallstack&quot;&gt;HasCallStack&lt;/a&gt;), so both call stacks are shown.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; 和 &lt;code&gt;undefined&lt;/code&gt; 自动将当前堆栈附加到错误消息。这通常是对 &lt;code&gt;HasCallStack&lt;/code&gt; 堆栈的补充（请参见&lt;a href=&quot;glasgow_exts#hascallstack&quot;&gt;HasCallStack&lt;/a&gt;），因此显示了两个调用堆栈。</target>
        </trans-unit>
        <trans-unit id="c51b9aa0edf648e3722c4daac57a257721f19863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exp (a + b)&lt;/code&gt; = &lt;code&gt;exp a * exp b&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exp (a + b)&lt;/code&gt; = &lt;code&gt;exp a * exp b&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eac0e4af0d48ad50e7fd3f23c631168d62f509d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exp (fromInteger 0)&lt;/code&gt; = &lt;code&gt;fromInteger 1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exp (fromInteger 0)&lt;/code&gt; =来自 &lt;code&gt;fromInteger 1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b126a049558f379fb47e63dbe3b5d5892512a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f1&lt;/code&gt; is a function binding, and &lt;code&gt;f2&lt;/code&gt; binds a bare variable; in both cases the type signature brings &lt;code&gt;a&lt;/code&gt; into scope. However the binding for &lt;code&gt;f3&lt;/code&gt; is a pattern binding, and so &lt;code&gt;f3&lt;/code&gt; is a fresh variable brought into scope by the pattern, not connected with top level &lt;code&gt;f3&lt;/code&gt;. Then type variable &lt;code&gt;a&lt;/code&gt; is not in scope of the right-hand side of &lt;code&gt;Just f3 = ...&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f1&lt;/code&gt; 是函数绑定，而 &lt;code&gt;f2&lt;/code&gt; 绑定裸变量；在这两种情况下的类型签名带来了 &lt;code&gt;a&lt;/code&gt; 进入的范围。但是， &lt;code&gt;f3&lt;/code&gt; 的绑定是模式绑定，因此 &lt;code&gt;f3&lt;/code&gt; 是不带顶级 &lt;code&gt;f3&lt;/code&gt; 的，由模式引入范围的新变量。然后，类型变量 &lt;code&gt;a&lt;/code&gt; 不在 &lt;code&gt;Just f3 = ...&lt;/code&gt; 的右侧范围内。</target>
        </trans-unit>
        <trans-unit id="088aadfe34e0c8fec30aa1426daa42c266d37c9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; &amp;mdash; parallel sparks (fully accurate). Disabled by default.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; &amp;mdash;平行火花（完全准确）。默认禁用。</target>
        </trans-unit>
        <trans-unit id="a21ee40c92d51b07b0a214a5537689b1a9fe1a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; does not use an explicit &lt;code&gt;forall&lt;/code&gt;, so type variables &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are brought into scope implicitly. &lt;code&gt;g&lt;/code&gt; quantifies both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; explicitly. Both &lt;code&gt;f&lt;/code&gt; and &lt;code&gt;g&lt;/code&gt; work today and will continue to work in the future because they adhere to the &amp;ldquo;forall-or-nothing&amp;rdquo; rule: either all type variables in a function definition are introduced explicitly or implicitly, there is no middle ground.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 不使用显式的 &lt;code&gt;forall&lt;/code&gt; ，因此类型变量 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 被隐式带入作用域。 &lt;code&gt;g&lt;/code&gt; 明确量化 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 。无论 &lt;code&gt;f&lt;/code&gt; 和 &lt;code&gt;g&lt;/code&gt; 今天的工作，并会继续工作，在未来，因为他们坚持&amp;ldquo;FORALL有或全无&amp;rdquo;的规则：要么在函数定义的所有类型变量引入或明或暗地，没有中间地带。</target>
        </trans-unit>
        <trans-unit id="d7d648ac806ab27c3b6b97ebdc3984b377a4b72d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; is a fraction with the same type and sign as &lt;code&gt;x&lt;/code&gt;, and with absolute value less than &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 是一个分数，其类型和符号与 &lt;code&gt;x&lt;/code&gt; 相同，并且绝对值小于 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1f56fbf9b84fe774bb4706812a58a48678a4d4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;f&lt;/code&gt; is a record field of constructor &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 是构造函数 &lt;code&gt;C&lt;/code&gt; 的记录字段。</target>
        </trans-unit>
        <trans-unit id="eefbbe91a073414235b75d9f1a3b74ecb7ba1a01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileAccess name read write exec&lt;/code&gt; checks if the file (or other file system object) &lt;code&gt;name&lt;/code&gt; can be accessed for reading, writing and/or executing. To check a permission set the corresponding argument to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fileAccess name read write exec&lt;/code&gt; 检查是否可以访问文件（或其他文件系统对象） &lt;code&gt;name&lt;/code&gt; 以进行读取，写入和/或执行。要检查权限，请将相应的参数设置为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21096c752309e1ba1993b650b0441bde685dce28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileAccess name read write exec&lt;/code&gt; checks if the file (or other file system object) &lt;code&gt;name&lt;/code&gt; can be accessed for reading, writing and/or executing. To check a permission set the corresponding argument to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841b2ff8e1b534d6b7ff33e50bc7b8b488c6d4f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;findFilesWith predicate dirs name&lt;/code&gt; searches through the list of directories (&lt;code&gt;dirs&lt;/code&gt;) for files that have the given &lt;code&gt;name&lt;/code&gt; and satisfy the given &lt;code&gt;predicate&lt;/code&gt; ands return the paths of those files. The directories are checked in a left-to-right order and the paths are returned in the same order.</source>
          <target state="translated">&lt;code&gt;findFilesWith predicate dirs name&lt;/code&gt; 在目录列表（ &lt;code&gt;dirs&lt;/code&gt; ）中搜索具有给定 &lt;code&gt;name&lt;/code&gt; 并满足给定 &lt;code&gt;predicate&lt;/code&gt; 文件，并返回这些文件的路径。按照从左到右的顺序检查目录，并以相同的顺序返回路径。</target>
        </trans-unit>
        <trans-unit id="be93079f8a7e644b25fa4bf9cbf3c7628d158741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;first&lt;/code&gt; returns its first argument if it is non-empty, otherwise its second.</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; 如果非空，则第一个返回其第一个参数，否则返回第二个。</target>
        </trans-unit>
        <trans-unit id="9248da6ebdc881872dcbd69414dec40c653819fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forall&lt;/code&gt; is always a reserved keyword at the type level, contrary to the Haskell Report, which allows type variables to be named &lt;code&gt;forall&lt;/code&gt;. Note that this does not imply that GHC always enables the &lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt;&lt;code&gt;-XExplicitForAll&lt;/code&gt;&lt;/a&gt; extension. Even without this extension enabled, reserving &lt;code&gt;forall&lt;/code&gt; as a keyword has significance. For instance, GHC will not parse the type signature &lt;code&gt;foo :: forall x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forall&lt;/code&gt; 与Haskell报告相反，forall在类型级别始终是保留关键字，Haskell报告允许将类型变量命名为 &lt;code&gt;forall&lt;/code&gt; 。请注意，这并不意味着GHC始终启用&lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt; &lt;code&gt;-XExplicitForAll&lt;/code&gt; &lt;/a&gt;扩展。即使没有这个扩展启用，保留 &lt;code&gt;forall&lt;/code&gt; 作为关键字具有重要意义。例如，GHC不会解析类型签名 &lt;code&gt;foo :: forall x&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e045484c5dafee9e3b89e2862b7036eb43ca1c6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forall&lt;/code&gt; is always a reserved keyword at the type level, contrary to the Haskell Report, which allows type variables to be named &lt;code&gt;forall&lt;/code&gt;. Note that this does not imply that GHC always enables the &lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt;&lt;code&gt;ExplicitForAll&lt;/code&gt;&lt;/a&gt; extension. Even without this extension enabled, reserving &lt;code&gt;forall&lt;/code&gt; as a keyword has significance. For instance, GHC will not parse the type signature &lt;code&gt;foo :: forall x&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b836363d9e5a185a08c9082ffa2e4a6e0db892" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forall&lt;/code&gt;&amp;lsquo;s in type signatures:</source>
          <target state="translated">&lt;code&gt;forall&lt;/code&gt; 的类型签名：</target>
        </trans-unit>
        <trans-unit id="96e1f4d2001cd4c4cadecf2c88a6ab6d6bba71cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forall&lt;/code&gt;&amp;rsquo;s in type signatures:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13628c7bed0f5a87fd30a4a8c34334306d16fb22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;force x&lt;/code&gt; fully evaluates &lt;code&gt;x&lt;/code&gt;, and then returns it. Note that &lt;code&gt;force x&lt;/code&gt; only performs evaluation when the value of &lt;code&gt;force x&lt;/code&gt; itself is demanded, so essentially it turns shallow evaluation into deep evaluation.</source>
          <target state="translated">&lt;code&gt;force x&lt;/code&gt; 完全计算 &lt;code&gt;x&lt;/code&gt; ，然后将其返回。请注意， &lt;code&gt;force x&lt;/code&gt; 仅在需要 &lt;code&gt;force x&lt;/code&gt; 本身的值时才执行评估，因此从本质上讲，它会将浅层评估转换为深层评估。</target>
        </trans-unit>
        <trans-unit id="2d98f965de72b886a03781bc735bd86909818e22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;g&lt;/code&gt; &amp;mdash; GC events, including GC start/stop. Enabled by default.</source>
          <target state="translated">&lt;code&gt;g&lt;/code&gt; -GC事件，包括GC启动/停止。默认启用。</target>
        </trans-unit>
        <trans-unit id="b249929568260bd2badbaaecf85c48a21a93b9b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getAllGroupEntries&lt;/code&gt; returns all group entries on the system by repeatedly calling &lt;code&gt;getgrent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;getAllGroupEntries&lt;/code&gt; 通过重复调用 &lt;code&gt;getgrent&lt;/code&gt; ,getAllGroupEntries返回系统上的所有组条目。</target>
        </trans-unit>
        <trans-unit id="155ffebaf7cac1b73e60ff3d2c7fabfebde64da1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getAllUserEntries&lt;/code&gt; returns all user entries on the system by repeatedly calling &lt;code&gt;getpwent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;getAllUserEntries&lt;/code&gt; 通过重复调用 &lt;code&gt;getpwent&lt;/code&gt; 返回系统上的所有用户条目</target>
        </trans-unit>
        <trans-unit id="d62311d6fe39b7f73808772e922af25463f96b74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getControllingTerminalName&lt;/code&gt; calls &lt;code&gt;ctermid&lt;/code&gt; to obtain a name associated with the controlling terminal for the process. If a controlling terminal exists, &lt;code&gt;getControllingTerminalName&lt;/code&gt; returns the name of the controlling terminal.</source>
          <target state="translated">&lt;code&gt;getControllingTerminalName&lt;/code&gt; 调用 &lt;code&gt;ctermid&lt;/code&gt; 以获取与该过程的控制终端关联的名称。如果存在控制终端，则 &lt;code&gt;getControllingTerminalName&lt;/code&gt; 返回控制终端的名称。</target>
        </trans-unit>
        <trans-unit id="7b48c75090f4029b19deb63392b19507171798cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getEffectiveGroupID&lt;/code&gt; calls &lt;code&gt;getegid&lt;/code&gt; to obtain the effective &lt;code&gt;GroupID&lt;/code&gt; associated with the current process.</source>
          <target state="translated">&lt;code&gt;getEffectiveGroupID&lt;/code&gt; 调用 &lt;code&gt;getegid&lt;/code&gt; 以获取与当前进程关联的有效 &lt;code&gt;GroupID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1466a085d0563a0c255277828065f309f7b37c45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getEffectiveUserID&lt;/code&gt; calls &lt;code&gt;geteuid&lt;/code&gt; to obtain the effective &lt;code&gt;UserID&lt;/code&gt; associated with the current process.</source>
          <target state="translated">&lt;code&gt;getEffectiveUserID&lt;/code&gt; 调用 &lt;code&gt;geteuid&lt;/code&gt; 以获取与当前进程关联的有效 &lt;code&gt;UserID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4f0a78700d175452cf4149f703baaec00541475e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getEffectiveUserName&lt;/code&gt; gets the name associated with the effective &lt;code&gt;UserID&lt;/code&gt; of the process.</source>
          <target state="translated">&lt;code&gt;getEffectiveUserName&lt;/code&gt; 获取与流程的有效 &lt;code&gt;UserID&lt;/code&gt; 相关联的名称。</target>
        </trans-unit>
        <trans-unit id="bb694fd7dcf596ee545e8885cab4fbd6764ef189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFdPathVar var fd&lt;/code&gt; obtains the dynamic value of the requested configurable file limit or option associated with the file or directory attached to the open channel &lt;code&gt;fd&lt;/code&gt;. For defined file limits, &lt;code&gt;getFdPathVar&lt;/code&gt; returns the associated value. For defined file options, the result of &lt;code&gt;getFdPathVar&lt;/code&gt; is undefined, but not failure.</source>
          <target state="translated">&lt;code&gt;getFdPathVar var fd&lt;/code&gt; 获取所请求的可配置文件限制或选项的动态值，该限制或选项与附加到开放通道 &lt;code&gt;fd&lt;/code&gt; 的文件或目录相关联。对于定义的文件限制， &lt;code&gt;getFdPathVar&lt;/code&gt; 返回关联的值。对于已定义的文件选项， &lt;code&gt;getFdPathVar&lt;/code&gt; 的结果是未定义的，但不是失败的。</target>
        </trans-unit>
        <trans-unit id="db3b2f46830208e498ebfb2dd49b7cdea145897b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFdStatus fd&lt;/code&gt; acts as &lt;code&gt;getFileStatus&lt;/code&gt; but uses a file descriptor &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getFdStatus fd&lt;/code&gt; 充当 &lt;code&gt;getFileStatus&lt;/code&gt; ,但使用文件描述符 &lt;code&gt;fd&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b8b63428c73d4d68ccfd8d495d890a2bc5622c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getFileStatus path&lt;/code&gt; calls gets the &lt;code&gt;FileStatus&lt;/code&gt; information (user ID, size, access times, etc.) for the file &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getFileStatus path&lt;/code&gt; 的呼叫获取 &lt;code&gt;FileStatus&lt;/code&gt; 信息（用户ID，大小，访问时间等）的文件 &lt;code&gt;path&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c4b2df9f9650d51c44fc63378f653450e8fbaa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getGroupEntryForID gid&lt;/code&gt; calls &lt;code&gt;getgrgid_r&lt;/code&gt; to obtain the &lt;code&gt;GroupEntry&lt;/code&gt; information associated with &lt;code&gt;GroupID&lt;/code&gt;&lt;code&gt;gid&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if no such group exists.</source>
          <target state="translated">&lt;code&gt;getGroupEntryForID gid&lt;/code&gt; 调用 &lt;code&gt;getgrgid_r&lt;/code&gt; 以获得与 &lt;code&gt;GroupID&lt;/code&gt; &lt;code&gt;gid&lt;/code&gt; 关联的 &lt;code&gt;GroupEntry&lt;/code&gt; 信息。如果不存在此组，则此操作可能会失败，并出现 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85c29b25ea39b82d40b02d29f39278619e3c5996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getGroupEntryForID gid&lt;/code&gt; calls &lt;code&gt;getgrgid_r&lt;/code&gt; to obtain the &lt;code&gt;GroupEntry&lt;/code&gt; information associated with &lt;code&gt;GroupID&lt;/code&gt;&lt;code&gt;gid&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if no such group exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99566a619942846eb4f8f101022a3e21cd7ef5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getGroupEntryForName name&lt;/code&gt; calls &lt;code&gt;getgrnam_r&lt;/code&gt; to obtain the &lt;code&gt;GroupEntry&lt;/code&gt; information associated with the group called &lt;code&gt;name&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if no such group exists.</source>
          <target state="translated">&lt;code&gt;getGroupEntryForName name&lt;/code&gt; 调用 &lt;code&gt;getgrnam_r&lt;/code&gt; 以获取与名为 &lt;code&gt;name&lt;/code&gt; 的组关联的 &lt;code&gt;GroupEntry&lt;/code&gt; 信息。如果不存在此组，则此操作可能会失败，并出现 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5377f754e4ff03e12d095983355683d1a2c03b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getGroupEntryForName name&lt;/code&gt; calls &lt;code&gt;getgrnam_r&lt;/code&gt; to obtain the &lt;code&gt;GroupEntry&lt;/code&gt; information associated with the group called &lt;code&gt;name&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if no such group exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13de22006fa5622016e7393522a11015373b3d37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getGroups&lt;/code&gt; calls &lt;code&gt;getgroups&lt;/code&gt; to obtain the list of supplementary &lt;code&gt;GroupID&lt;/code&gt;s associated with the current process.</source>
          <target state="translated">&lt;code&gt;getGroups&lt;/code&gt; 调用 &lt;code&gt;getgroups&lt;/code&gt; 以获取与当前进程关联的补充 &lt;code&gt;GroupID&lt;/code&gt; 的列表。</target>
        </trans-unit>
        <trans-unit id="85af0049a29319ae7de0479eb0f344f0e66f16b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getLoginName&lt;/code&gt; calls &lt;code&gt;getlogin&lt;/code&gt; to obtain the login name associated with the current process.</source>
          <target state="translated">&lt;code&gt;getLoginName&lt;/code&gt; 调用 &lt;code&gt;getlogin&lt;/code&gt; 以获取与当前进程关联的登录名。</target>
        </trans-unit>
        <trans-unit id="cbddb8a78d2ffe61237c26bedc39c18a07770790" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getPathVar var path&lt;/code&gt; obtains the dynamic value of the requested configurable file limit or option associated with file or directory &lt;code&gt;path&lt;/code&gt;. For defined file limits, &lt;code&gt;getPathVar&lt;/code&gt; returns the associated value. For defined file options, the result of &lt;code&gt;getPathVar&lt;/code&gt; is undefined, but not failure.</source>
          <target state="translated">&lt;code&gt;getPathVar var path&lt;/code&gt; 获取与文件或目录 &lt;code&gt;path&lt;/code&gt; 关联的请求的可配置文件限制或选项的动态值。对于定义的文件限制， &lt;code&gt;getPathVar&lt;/code&gt; 返回关联的值。对于已定义的文件选项， &lt;code&gt;getPathVar&lt;/code&gt; 的结果是未定义的，但不是失败的。</target>
        </trans-unit>
        <trans-unit id="66d396e74c45dc35a39ef497b1e2868eefb84330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getPendingSignals&lt;/code&gt; calls &lt;code&gt;sigpending&lt;/code&gt; to obtain the set of interrupts which have been received but are currently blocked.</source>
          <target state="translated">&lt;code&gt;getPendingSignals&lt;/code&gt; 调用 &lt;code&gt;sigpending&lt;/code&gt; 以获取已接收但当前已阻止的一组中断。</target>
        </trans-unit>
        <trans-unit id="f9d58ff35678f8b2b29a5d781fabf1cb87c05f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getRealGroupID&lt;/code&gt; calls &lt;code&gt;getgid&lt;/code&gt; to obtain the real &lt;code&gt;GroupID&lt;/code&gt; associated with the current process.</source>
          <target state="translated">&lt;code&gt;getRealGroupID&lt;/code&gt; 调用 &lt;code&gt;getgid&lt;/code&gt; 以获得与当前进程关联的实际 &lt;code&gt;GroupID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a3a1137f3fbbbc0823d11c9ceed084d0845b810" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getRealUserID&lt;/code&gt; calls &lt;code&gt;getuid&lt;/code&gt; to obtain the real &lt;code&gt;UserID&lt;/code&gt; associated with the current process.</source>
          <target state="translated">&lt;code&gt;getRealUserID&lt;/code&gt; 调用 &lt;code&gt;getuid&lt;/code&gt; 以获得与当前进程关联的实际 &lt;code&gt;UserID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a0848532c3948ab0f2e080e8d8f66facf8bf125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getSignalMask&lt;/code&gt; calls &lt;code&gt;sigprocmask&lt;/code&gt; to determine the set of interrupts which are currently being blocked.</source>
          <target state="translated">&lt;code&gt;getSignalMask&lt;/code&gt; 调用 &lt;code&gt;sigprocmask&lt;/code&gt; 来确定当前正在阻止的中断集。</target>
        </trans-unit>
        <trans-unit id="45792ac1182ddb07da8ad701cd5db05b437b3f26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getSlaveTerminalName&lt;/code&gt; calls &lt;code&gt;ptsname&lt;/code&gt; to obtain the name of the slave terminal associated with a pseudoterminal pair. The file descriptor to pass in must be that of the master.</source>
          <target state="translated">&lt;code&gt;getSlaveTerminalName&lt;/code&gt; 调用 &lt;code&gt;ptsname&lt;/code&gt; 以获得与伪终端对关联的从终端的名称。传入的文件描述符必须是主文件的描述符。</target>
        </trans-unit>
        <trans-unit id="0b9d53296999bcb92b005cdf6ca8476ec18bb8a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTerminalAttributes fd&lt;/code&gt; calls &lt;code&gt;tcgetattr&lt;/code&gt; to obtain the &lt;code&gt;TerminalAttributes&lt;/code&gt; associated with &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getTerminalAttributes fd&lt;/code&gt; 调用 &lt;code&gt;tcgetattr&lt;/code&gt; 以获得与 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 关联的 &lt;code&gt;TerminalAttributes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0aabec5d2ccf6dc660c81c4d3db77eeda5c51c5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTerminalName fd&lt;/code&gt; calls &lt;code&gt;ttyname&lt;/code&gt; to obtain a name associated with the terminal for &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt;. If &lt;code&gt;fd&lt;/code&gt; is associated with a terminal, &lt;code&gt;getTerminalName&lt;/code&gt; returns the name of the terminal.</source>
          <target state="translated">&lt;code&gt;getTerminalName fd&lt;/code&gt; 调用 &lt;code&gt;ttyname&lt;/code&gt; 以获得与 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 的终端关联的名称。如果 &lt;code&gt;fd&lt;/code&gt; 与终端相关联，则 &lt;code&gt;getTerminalName&lt;/code&gt; 返回终端的名称。</target>
        </trans-unit>
        <trans-unit id="f737b45d8d4b7f86b0a85afaefa9c1d471e82657" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTerminalProcessGroupID fd&lt;/code&gt; calls &lt;code&gt;tcgetpgrp&lt;/code&gt; to obtain the &lt;code&gt;ProcessGroupID&lt;/code&gt; of the foreground process group associated with the terminal attached to &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getTerminalProcessGroupID fd&lt;/code&gt; 调用 &lt;code&gt;tcgetpgrp&lt;/code&gt; 以获得与连接到 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 的终端相关联的前台进程组的 &lt;code&gt;ProcessGroupID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87891a3f9d6eb6431b9cf1cc3d718af57ed5829e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getTixFullName&lt;/code&gt; takes a binary or &lt;code&gt;.tix&lt;/code&gt;-file name, and normalizes it into a &lt;code&gt;.tix&lt;/code&gt;-file name.</source>
          <target state="translated">&lt;code&gt;getTixFullName&lt;/code&gt; 采用二进制或 &lt;code&gt;.tix&lt;/code&gt; 文件名，并将其标准化为 &lt;code&gt;.tix&lt;/code&gt; 文件名。</target>
        </trans-unit>
        <trans-unit id="9261c091b62d2dfbb82de0c098cfc567fa937d7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getUserEntryForID gid&lt;/code&gt; calls &lt;code&gt;getpwuid_r&lt;/code&gt; to obtain the &lt;code&gt;UserEntry&lt;/code&gt; information associated with &lt;code&gt;UserID&lt;/code&gt;&lt;code&gt;uid&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if no such user exists.</source>
          <target state="translated">&lt;code&gt;getUserEntryForID gid&lt;/code&gt; 调用 &lt;code&gt;getpwuid_r&lt;/code&gt; 以获得与 &lt;code&gt;UserID&lt;/code&gt; &lt;code&gt;uid&lt;/code&gt; 关联的 &lt;code&gt;UserEntry&lt;/code&gt; 信息。如果不存在此用户，则此操作可能会失败，并显示 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8344adfa513e619454773c358dd2db2dfd4aeb48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getUserEntryForID gid&lt;/code&gt; calls &lt;code&gt;getpwuid_r&lt;/code&gt; to obtain the &lt;code&gt;UserEntry&lt;/code&gt; information associated with &lt;code&gt;UserID&lt;/code&gt;&lt;code&gt;uid&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if no such user exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf511082d2a6b712638b3e82d5840bf3ca63672" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getUserEntryForName name&lt;/code&gt; calls &lt;code&gt;getpwnam_r&lt;/code&gt; to obtain the &lt;code&gt;UserEntry&lt;/code&gt; information associated with the user login &lt;code&gt;name&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if no such user exists.</source>
          <target state="translated">&lt;code&gt;getUserEntryForName name&lt;/code&gt; 调用 &lt;code&gt;getpwnam_r&lt;/code&gt; 获取与用户登录 &lt;code&gt;name&lt;/code&gt; 关联的 &lt;code&gt;UserEntry&lt;/code&gt; 信息。如果不存在此用户，则此操作可能会失败，并显示 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4164e1d23ba1b22b5610de03ae6cb68bb1d4105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getUserEntryForName name&lt;/code&gt; calls &lt;code&gt;getpwnam_r&lt;/code&gt; to obtain the &lt;code&gt;UserEntry&lt;/code&gt; information associated with the user login &lt;code&gt;name&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#v:isDoesNotExistError&quot;&gt;isDoesNotExistError&lt;/a&gt;&lt;/code&gt; if no such user exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8740046480f41b804442de90b74552696ab9e20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getWorkingDirectory&lt;/code&gt; calls &lt;code&gt;getcwd&lt;/code&gt; to obtain the name of the current working directory.</source>
          <target state="translated">&lt;code&gt;getWorkingDirectory&lt;/code&gt; 调用 &lt;code&gt;getcwd&lt;/code&gt; 以获取当前工作目录的名称。</target>
        </trans-unit>
        <trans-unit id="4762bc4b56e65e8b8a41059f063dd83d23d621b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;graph :: Graph&lt;/code&gt; is the raw, array based adjacency list for the graph.</source>
          <target state="translated">&lt;code&gt;graph :: Graph&lt;/code&gt; 是该图的基于数组的原始邻接表。</target>
        </trans-unit>
        <trans-unit id="e79558186bcedb7ea80b05cefae0ea91dd4a1a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;haystack&lt;/code&gt; in which to search</source>
          <target state="translated">&lt;code&gt;haystack&lt;/code&gt; 要搜索的干草堆</target>
        </trans-unit>
        <trans-unit id="7149c630b16c4633db4eba03d7f955c96e250e83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;haystack&lt;/code&gt; in which to search.</source>
          <target state="translated">&lt;code&gt;haystack&lt;/code&gt; 要搜索的干草堆。</target>
        </trans-unit>
        <trans-unit id="8f32f6945456e580108cadc3338cc8b49521e04a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hh:mm:ss[.sss]&lt;/code&gt; (ISO 8601:2004(E) sec. 4.2.2.2, 4.2.2.4(a) extended format)</source>
          <target state="translated">&lt;code&gt;hh:mm:ss[.sss]&lt;/code&gt; （ISO 8601：2004（E）秒4.2.2.2、4.2.2.4（a）扩展格式）</target>
        </trans-unit>
        <trans-unit id="2a73e769e2f0e725e70eea0a5095b2b787c516ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;historyFile&lt;/code&gt;: read/write the history to a file before and after the line input session.</source>
          <target state="translated">&lt;code&gt;historyFile&lt;/code&gt; ：在行输入会话之前和之后，将历史记录读/写到文件中。</target>
        </trans-unit>
        <trans-unit id="c698564f1a7e7c33afd149f30061f586392287cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hpc combine&lt;/code&gt; is the swiss army knife of &lt;code&gt;hpc&lt;/code&gt;. It can be used to take the difference between &lt;code&gt;.tix&lt;/code&gt; files, to subtract one &lt;code&gt;.tix&lt;/code&gt; file from another, or to add two &lt;code&gt;.tix&lt;/code&gt; files. hpc combine does not change the original &lt;code&gt;.tix&lt;/code&gt; file; it generates a new &lt;code&gt;.tix&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;hpc combine&lt;/code&gt; 是 &lt;code&gt;hpc&lt;/code&gt; 瑞士军刀。它可用于计算 &lt;code&gt;.tix&lt;/code&gt; 文件之间的差异，从另一个文件中减去一个 &lt;code&gt;.tix&lt;/code&gt; 文件，或添加两个 &lt;code&gt;.tix&lt;/code&gt; 文件。HPC &lt;code&gt;.tix&lt;/code&gt; 不会更改原始的.tix文件；它会生成一个新的 &lt;code&gt;.tix&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="84c21af023ae06fb4936ed44b4cdebc2dee607a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hpc markup&lt;/code&gt; marks up source files into colored html.</source>
          <target state="translated">&lt;code&gt;hpc markup&lt;/code&gt; 将源文件标记为彩色html。</target>
        </trans-unit>
        <trans-unit id="7243cfbd88573b525191ebf4ad35c0dcbe0f0b2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hpc report&lt;/code&gt; gives a textual report of coverage. By default, all modules and packages are considered in generating report, unless include or exclude are used. The report is a summary unless the &lt;code&gt;--per-module&lt;/code&gt; flag is used. The &lt;code&gt;--xml-output&lt;/code&gt; option allows for tools to use hpc to glean coverage.</source>
          <target state="translated">&lt;code&gt;hpc report&lt;/code&gt; 提供有关覆盖范围的文本报告。默认情况下，除非使用include或exclude，否则所有模块和软件包都将在生成报告时考虑。该报告是摘要，除非使用 &lt;code&gt;--per-module&lt;/code&gt; 标志。该 &lt;code&gt;--xml-output&lt;/code&gt; 选项允许工具使用HPC搜集覆盖。</target>
        </trans-unit>
        <trans-unit id="3252f4e6796500fd704525666c9774a65171e975" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hpc sum&lt;/code&gt; adds together any number of &lt;code&gt;.tix&lt;/code&gt; files into a single &lt;code&gt;.tix&lt;/code&gt; file. &lt;code&gt;hpc sum&lt;/code&gt; does not change the original &lt;code&gt;.tix&lt;/code&gt; file; it generates a new &lt;code&gt;.tix&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;hpc sum&lt;/code&gt; 将任意数量的 &lt;code&gt;.tix&lt;/code&gt; 文件加到一个 &lt;code&gt;.tix&lt;/code&gt; 文件中。 &lt;code&gt;hpc sum&lt;/code&gt; 不会更改原始 &lt;code&gt;.tix&lt;/code&gt; 文件；它会生成一个新的 &lt;code&gt;.tix&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="7dcb7093805a2f32af47e2a28fbdb5856337eb0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hs_exit()&lt;/code&gt; normally causes the termination of any running Haskell threads in the system, and when &lt;code&gt;hs_exit()&lt;/code&gt; returns, there will be no more Haskell threads running. The runtime will then shut down the system in an orderly way, generating profiling output and statistics if necessary, and freeing all the memory it owns.</source>
          <target state="translated">&lt;code&gt;hs_exit()&lt;/code&gt; 通常会导致系统中所有正在运行的Haskell线程终止，并且当 &lt;code&gt;hs_exit()&lt;/code&gt; 返回时，将不再有运行中的Haskell线程。然后，运行时将有序地关闭系统，并在必要时生成概要分析输出和统计信息，并释放其拥有的所有内存。</target>
        </trans-unit>
        <trans-unit id="6171e08dc403c1068b283577596b39ac17685cb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hs_free_stable_ptr_unsafe&lt;/code&gt; must be used &lt;em&gt;only&lt;/em&gt; when the table has been locked using &lt;code&gt;hs_lock_stable_ptr_table&lt;/code&gt;. It must be unlocked afterwards using &lt;code&gt;hs_unlock_stable_ptr_table&lt;/code&gt;. The Haskell garbage collector cannot run while the table is locked, so it should be unlocked promptly. The following operations are forbidden while the stable pointer table is locked:</source>
          <target state="translated">&lt;code&gt;hs_free_stable_ptr_unsafe&lt;/code&gt; 必须使用&lt;em&gt;仅&lt;/em&gt;当表已经使用锁定 &lt;code&gt;hs_lock_stable_ptr_table&lt;/code&gt; 。之后必须使用 &lt;code&gt;hs_unlock_stable_ptr_table&lt;/code&gt; 将其解锁。锁定表后，Haskell垃圾收集器无法运行，因此应立即将其解锁。稳定指针表被锁定时，禁止以下操作：</target>
        </trans-unit>
        <trans-unit id="158445a439d4ff5a6a7d5923dbb75384af873d21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hsc2hs&lt;/code&gt; normally operates by creating, compiling, and running a C program. That approach doesn&amp;rsquo;t work when cross-compiling &amp;mdash; in this case, the C compiler&amp;rsquo;s generates code for the target machine, not the host machine. For this situation, there&amp;rsquo;s a special mode &lt;code&gt;hsc2hs --cross-compile&lt;/code&gt; which can generate the .hs by extracting information from compilations only &amp;mdash; specifically, whether or not compilation fails.</source>
          <target state="translated">&lt;code&gt;hsc2hs&lt;/code&gt; 通常通过创建，编译和运行C程序来运行。这种方法在交叉编译时不起作用-在这种情况下，C编译器为目标计算机而不是主机生成代码。对于这种情况，有一种特殊的模式 &lt;code&gt;hsc2hs --cross-compile&lt;/code&gt; 可以通过仅从编译中提取信息来生成.hs，特别是编译是否失败。</target>
        </trans-unit>
        <trans-unit id="d99d4db11281b54a6773aae14f2c6331f47f456e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hsc2hs&lt;/code&gt; takes input files as arguments, and flags that modify its behavior:</source>
          <target state="translated">&lt;code&gt;hsc2hs&lt;/code&gt; 将输入文件作为参数，并修改其行为的标志：</target>
        </trans-unit>
        <trans-unit id="3c128fada72033616aaef08247531117855db892" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hsig&lt;/code&gt; files are written in a variant of Haskell similar to &lt;code&gt;hs-boot&lt;/code&gt; files, but with some slight changes:</source>
          <target state="translated">&lt;code&gt;hsig&lt;/code&gt; 文件是用类似于Has &lt;code&gt;hs-boot&lt;/code&gt; 文件的Haskell变体编写的，但有一些细微变化：</target>
        </trans-unit>
        <trans-unit id="fffb7b4d60dfc9369148b986d5c58f8a5d0a5726" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: the index type of the array (should be an instance of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; ：数组的索引类型（应该是 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; 的实例）</target>
        </trans-unit>
        <trans-unit id="b7aad8e1ace6210c4105af3b2907a570de93e87e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: the index type of the array (should be an instance of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db798c17f327bae423b0e022cc72a3fe7bfec9cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: the index type of the array (should be an instance of &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; ：数组的索引类型（应该是 &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; 的实例）</target>
        </trans-unit>
        <trans-unit id="180d4e808183a0bb9849f66107190e0a00a9ef78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: the index type of the array (should be an instance of &lt;code&gt;&lt;a href=&quot;ghc-arr#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; ：数组的索引类型（应该是 &lt;code&gt;&lt;a href=&quot;ghc-arr#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; 的实例）</target>
        </trans-unit>
        <trans-unit id="617a65d4ddc0f8fa29d5630aad7e1b8a5082dbf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i&lt;/code&gt;: the index type of the array (should be an instance of &lt;code&gt;Ix&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;i&lt;/code&gt; ：数组的索引类型（应该是 &lt;code&gt;Ix&lt;/code&gt; 的实例）</target>
        </trans-unit>
        <trans-unit id="5f54123d67fec07d114ce05638f1a7715e824f55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;installHandler int handler iset&lt;/code&gt; calls &lt;code&gt;sigaction&lt;/code&gt; to install an interrupt handler for signal &lt;code&gt;int&lt;/code&gt;. If &lt;code&gt;handler&lt;/code&gt; is &lt;code&gt;Default&lt;/code&gt;, &lt;code&gt;SIG_DFL&lt;/code&gt; is installed; if &lt;code&gt;handler&lt;/code&gt; is &lt;code&gt;Ignore&lt;/code&gt;, &lt;code&gt;SIG_IGN&lt;/code&gt; is installed; if &lt;code&gt;handler&lt;/code&gt; is &lt;code&gt;Catch action&lt;/code&gt;, a handler is installed which will invoke &lt;code&gt;action&lt;/code&gt; in a new thread when (or shortly after) the signal is received. If &lt;code&gt;iset&lt;/code&gt; is &lt;code&gt;Just s&lt;/code&gt;, then the &lt;code&gt;sa_mask&lt;/code&gt; of the &lt;code&gt;sigaction&lt;/code&gt; structure is set to &lt;code&gt;s&lt;/code&gt;; otherwise it is cleared. The previously installed signal handler for &lt;code&gt;int&lt;/code&gt; is returned</source>
          <target state="translated">&lt;code&gt;installHandler int handler iset&lt;/code&gt; 调用 &lt;code&gt;sigaction&lt;/code&gt; 为信号 &lt;code&gt;int&lt;/code&gt; 安装中断处理程序。如果 &lt;code&gt;handler&lt;/code&gt; 为 &lt;code&gt;Default&lt;/code&gt; ，则安装 &lt;code&gt;SIG_DFL&lt;/code&gt; ；否则为false。如果 &lt;code&gt;handler&lt;/code&gt; 为 &lt;code&gt;Ignore&lt;/code&gt; ，则安装 &lt;code&gt;SIG_IGN&lt;/code&gt; ；如果 &lt;code&gt;handler&lt;/code&gt; 是 &lt;code&gt;Catch action&lt;/code&gt; ，则安装一个处理程序，该处理程序将在收到信号时（或之后不久）在新线程中调用 &lt;code&gt;action&lt;/code&gt; 。如果 &lt;code&gt;iset&lt;/code&gt; 是 &lt;code&gt;Just s&lt;/code&gt; ，那么 &lt;code&gt;sa_mask&lt;/code&gt; 中的 &lt;code&gt;sigaction&lt;/code&gt; 的结构设置为 &lt;code&gt;s&lt;/code&gt; ; 否则清除。返回先前为 &lt;code&gt;int&lt;/code&gt; 安装的信号处理程序</target>
        </trans-unit>
        <trans-unit id="2735fff850fb0ce80ad1b2ea06ae65280146117c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;interruptible&lt;/code&gt; behaves exactly as &lt;code&gt;safe&lt;/code&gt;, except that when a &lt;code&gt;throwTo&lt;/code&gt; is directed at a thread in an interruptible foreign call, an OS-specific mechanism will be used to attempt to cause the foreign call to return:</source>
          <target state="translated">&lt;code&gt;interruptible&lt;/code&gt; 的行为完全一样 &lt;code&gt;safe&lt;/code&gt; ，除了将 &lt;code&gt;throwTo&lt;/code&gt; 指向可中断外部调用中的线程时，将使用特定于OS的机制来尝试导致外部调用返回：</target>
        </trans-unit>
        <trans-unit id="2139518b81e5d97293508153cbed8ebe724f4f8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iserv-proxy&lt;/code&gt; needs to be built on the build machine by the build compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b48731a8a7e22b2dcac8d4798c86a629568e47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;iterate&lt;/code&gt;, &lt;code&gt;repeat&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;iterate&lt;/code&gt; ， &lt;code&gt;repeat&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc3895b019e0a39f76ec6015b7f84c618a1850f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;k&lt;/code&gt; is chosen so that &lt;code&gt;C t1..tj (T v1...vk)&lt;/code&gt; is well-kinded. (Or, in the case of a &lt;code&gt;data instance&lt;/code&gt;, so that &lt;code&gt;C t1..tj (T s1..sk)&lt;/code&gt; is well kinded.)</source>
          <target state="translated">&lt;code&gt;k&lt;/code&gt; 选择k是为了使 &lt;code&gt;C t1..tj (T v1...vk)&lt;/code&gt; 具有良好的种类。（或者，对于 &lt;code&gt;data instance&lt;/code&gt; ，则 &lt;code&gt;C t1..tj (T s1..sk)&lt;/code&gt; 很好。）</target>
        </trans-unit>
        <trans-unit id="622e7af3e93d01a6d8d5dc33d97ddfe36bec9e82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;k&lt;/code&gt; must appear explicitly in the kind of &lt;em&gt;some&lt;/em&gt; type variable in that declaration.</source>
          <target state="translated">&lt;code&gt;k&lt;/code&gt; 必须以该声明中&lt;em&gt;某种&lt;/em&gt;类型变量的类型显式出现。</target>
        </trans-unit>
        <trans-unit id="29d303bf07ef6fd38f12c9c9c2623f4ab1cdfe97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;l&lt;/code&gt; the object linker</source>
          <target state="translated">&lt;code&gt;l&lt;/code&gt; 对象链接器</target>
        </trans-unit>
        <trans-unit id="283469c10fca69b6183207317811536889b814a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lexeme p&lt;/code&gt; first applies parser &lt;code&gt;p&lt;/code&gt; and then the &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:whiteSpace&quot;&gt;whiteSpace&lt;/a&gt;&lt;/code&gt; parser, returning the value of &lt;code&gt;p&lt;/code&gt;. Every lexical token (lexeme) is defined using &lt;code&gt;lexeme&lt;/code&gt;, this way every parse starts at a point without white space. Parsers that use &lt;code&gt;lexeme&lt;/code&gt; are called &lt;em&gt;lexeme&lt;/em&gt; parsers in this document.</source>
          <target state="translated">&lt;code&gt;lexeme p&lt;/code&gt; 首先应用解析器 &lt;code&gt;p&lt;/code&gt; ，然后再应用 &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:whiteSpace&quot;&gt;whiteSpace&lt;/a&gt;&lt;/code&gt; 解析器，返回 &lt;code&gt;p&lt;/code&gt; 的值。每个词法标记（lexeme）都使用 &lt;code&gt;lexeme&lt;/code&gt; 定义，这样，每个解析都从没有空格的点开始。使用 &lt;code&gt;lexeme&lt;/code&gt; 的解析器在本文档中称为&lt;em&gt;lexeme&lt;/em&gt;解析器。</target>
        </trans-unit>
        <trans-unit id="ab75ab10eb3e1a67279f20cdfe9db09933d97808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lexeme p&lt;/code&gt; first applies parser &lt;code&gt;p&lt;/code&gt; and then the &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:whiteSpace&quot;&gt;whiteSpace&lt;/a&gt;&lt;/code&gt; parser, returning the value of &lt;code&gt;p&lt;/code&gt;. Every lexical token (lexeme) is defined using &lt;code&gt;lexeme&lt;/code&gt;, this way every parse starts at a point without white space. Parsers that use &lt;code&gt;lexeme&lt;/code&gt; are called &lt;em&gt;lexeme&lt;/em&gt; parsers in this document.</source>
          <target state="translated">&lt;code&gt;lexeme p&lt;/code&gt; 首先应用解析器 &lt;code&gt;p&lt;/code&gt; ，然后再应用 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:whiteSpace&quot;&gt;whiteSpace&lt;/a&gt;&lt;/code&gt; 解析器，返回 &lt;code&gt;p&lt;/code&gt; 的值。每个词法标记（lexeme）都使用 &lt;code&gt;lexeme&lt;/code&gt; 定义，这样，每个解析都从没有空格的点开始。使用 &lt;code&gt;lexeme&lt;/code&gt; 的解析器在本文档中称为&lt;em&gt;lexeme&lt;/em&gt;解析器。</target>
        </trans-unit>
        <trans-unit id="53d24678ad2c8b5597e9f0ac0655b8161c2e0827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lookAhead p&lt;/code&gt; parses &lt;code&gt;p&lt;/code&gt; without consuming any input.</source>
          <target state="translated">&lt;code&gt;lookAhead p&lt;/code&gt; 解析 &lt;code&gt;p&lt;/code&gt; 而不消耗任何输入。</target>
        </trans-unit>
        <trans-unit id="be8260c972c6f5f473130a0d9d8505bde17b521f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m&lt;/code&gt; - The inner monad.</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; -内部monad。</target>
        </trans-unit>
        <trans-unit id="2469e47161db63f9190e78307eaf5fe489c6f0fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;m&lt;/code&gt; does not introduce one of the variables, &lt;code&gt;b&lt;/code&gt;, and thus is rejected.</source>
          <target state="translated">&lt;code&gt;m&lt;/code&gt; 不引入变量 &lt;code&gt;b&lt;/code&gt; 之一，因此被拒绝。</target>
        </trans-unit>
        <trans-unit id="0ccdfdf9e6a52d5ec89e3c0b202b8b38f2042c49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;many p&lt;/code&gt; applies the parser &lt;code&gt;p&lt;/code&gt;&lt;em&gt;zero&lt;/em&gt; or more times. Returns a list of the returned values of &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;many p&lt;/code&gt; 适用解析器 &lt;code&gt;p&lt;/code&gt; &lt;em&gt;零&lt;/em&gt;次或更多次。返回 &lt;code&gt;p&lt;/code&gt; 返回值的列表。</target>
        </trans-unit>
        <trans-unit id="c8386ca93afe24efb128ad974653e26fa09db4a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;many1 p&lt;/code&gt; applies the parser &lt;code&gt;p&lt;/code&gt;&lt;em&gt;one&lt;/em&gt; or more times. Returns a list of the returned values of &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;many1 p&lt;/code&gt; 应用解析器 &lt;code&gt;p&lt;/code&gt; &lt;em&gt;一次&lt;/em&gt;或多次。返回 &lt;code&gt;p&lt;/code&gt; 返回值的列表。</target>
        </trans-unit>
        <trans-unit id="532542dcaa9192e88329138dac2196c78bce7c41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;manyTill p end&lt;/code&gt; applies parser &lt;code&gt;p&lt;/code&gt;&lt;em&gt;zero&lt;/em&gt; or more times until parser &lt;code&gt;end&lt;/code&gt; succeeds. Returns the list of values returned by &lt;code&gt;p&lt;/code&gt;. This parser can be used to scan comments:</source>
          <target state="translated">&lt;code&gt;manyTill p end&lt;/code&gt; 将解析器 &lt;code&gt;p&lt;/code&gt; 应用于&lt;em&gt;零&lt;/em&gt;次或多次，直到解析器 &lt;code&gt;end&lt;/code&gt; 成功。返回 &lt;code&gt;p&lt;/code&gt; 返回的值列表。该解析器可用于扫描注释：</target>
        </trans-unit>
        <trans-unit id="cd84809de445a13b8fa6c8bf6e31f5e5e33ad2ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;manyTill p end&lt;/code&gt; parses zero or more occurrences of &lt;code&gt;p&lt;/code&gt;, until &lt;code&gt;end&lt;/code&gt; succeeds. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;manyTill p end&lt;/code&gt; 解析零次或多次出现的 &lt;code&gt;p&lt;/code&gt; ，直到 &lt;code&gt;end&lt;/code&gt; 成功。返回 &lt;code&gt;p&lt;/code&gt; 返回的值的列表。</target>
        </trans-unit>
        <trans-unit id="9e00baf13c159c42b130a388fa7c68571d949d3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt;&lt;em&gt;XXX&lt;/em&gt;&lt;code&gt;T t . &lt;a href=&quot;control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt; = &lt;a href=&quot;control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt; . t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; &lt;em&gt;XXX &lt;/em&gt; &lt;code&gt;T t . &lt;a href=&quot;control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt; = &lt;a href=&quot;control-monad-trans-class#v:lift&quot;&gt;lift&lt;/a&gt; . t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff044cde3ea44699eaa1733d0c06230bf5e937bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mappend&lt;/code&gt; takes the longer of two lifetimes.</source>
          <target state="translated">&lt;code&gt;mappend&lt;/code&gt; 需要两个生命中的较长者。</target>
        </trans-unit>
        <trans-unit id="cb09e948d69668b5b23f295b4403b0940d6ca175" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max x y == if x &amp;gt;= y then x else y&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;max x y == if x &amp;gt;= y then x else y&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ee5f7e457014efc55712b28856e1e8c43cc3a2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;max x y == if x &amp;gt;= y then x else y&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;max x y == if x &amp;gt;= y then x else y&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2d6f36a3f246953bf407b238d5d4b4956e89839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mergeA&lt;/code&gt; will first &quot;align&quot; these maps by key:</source>
          <target state="translated">&lt;code&gt;mergeA&lt;/code&gt; 将首先通过键&amp;ldquo;对齐&amp;rdquo;这些地图：</target>
        </trans-unit>
        <trans-unit id="07564f3f6292128b7fb23deab444d624083a69a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min x y == if x &amp;lt;= y then x else y&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;min x y == if x &amp;lt;= y then x else y&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5baaa477d2b0357e85c24cc65b9a0c8db647b2d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;min x y == if x &amp;lt;= y then x else y&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;min x y == if x &amp;lt;= y then x else y&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8cc58927959aeb9dab3dc72ab465ca570a504b06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mkWeak# k v finalizer s&lt;/code&gt; creates a weak reference to value &lt;code&gt;k&lt;/code&gt;, with an associated reference to some value &lt;code&gt;v&lt;/code&gt;. If &lt;code&gt;k&lt;/code&gt; is still alive then &lt;code&gt;v&lt;/code&gt; can be retrieved using &lt;code&gt;deRefWeak#&lt;/code&gt;. Note that the type of &lt;code&gt;k&lt;/code&gt; must be represented by a pointer (i.e. of kind &lt;code&gt;TYPE 'LiftedRep&lt;/code&gt; or &lt;code&gt;TYPE 'UnliftedRep&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;mkWeak# k v finalizer s&lt;/code&gt; 创建对值 &lt;code&gt;k&lt;/code&gt; 的弱引用，以及对某个值 &lt;code&gt;v&lt;/code&gt; 的关联引用。如果 &lt;code&gt;k&lt;/code&gt; 仍然存在，则可以使用 &lt;code&gt;deRefWeak#&lt;/code&gt; 检索 &lt;code&gt;v&lt;/code&gt; 。注意， &lt;code&gt;k&lt;/code&gt; 的类型必须由一个指针表示（即 &lt;code&gt;TYPE 'LiftedRep&lt;/code&gt; 或 &lt;code&gt;TYPE 'UnliftedRep&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f980f294fcd0aaa83bf0434a1d2798b56e011816" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;modifyState f&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to the user state. Suppose that we want to count identifiers in a source, we could use the user state as:</source>
          <target state="translated">&lt;code&gt;modifyState f&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 用户状态。假设我们要对源中的标识符进行计数，可以将用户状态用作：</target>
        </trans-unit>
        <trans-unit id="e460b94b8a438c08063c41e5f7e745a074b16b31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt; could be a Haskell source filename with or without the extension. If for some reason the filename starts with a &lt;code&gt;-&lt;/code&gt; you can use a second &lt;code&gt;--&lt;/code&gt; to indicate the end of flags. Anything following a second &lt;code&gt;--&lt;/code&gt; will be considered a program file or module name followed by its arguments. For example:</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; 可以是具有或不具有扩展名的Haskell源文件名。如果由于某种原因文件名以 &lt;code&gt;-&lt;/code&gt; 开头，则可以使用第二个 &lt;code&gt;--&lt;/code&gt; 表示标志的结尾。之后的第二东西 &lt;code&gt;--&lt;/code&gt; 将被视为一个程序文件或模块名称，然后它的参数。例如：</target>
        </trans-unit>
        <trans-unit id="42df5d70d0c8653f3f8af294a83e6694b808b964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; &amp;mdash; non-moving garbage collector (see &lt;a href=&quot;#rts-flag---nonmoving-gc&quot;&gt;&lt;code&gt;--nonmoving-gc&lt;/code&gt;&lt;/a&gt;) events including start and end of the concurrent mark and census information to characterise heap fragmentation. Disabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856fcb98eadbb78f6ce119264b935b6e706ee599" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;n&lt;/code&gt; is an integral number with the same sign as &lt;code&gt;x&lt;/code&gt;; and</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 是一个整数，其符号与 &lt;code&gt;x&lt;/code&gt; 相同；和</target>
        </trans-unit>
        <trans-unit id="33d513bf305b7a102b9a18dbc0caa74d78da4beb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;needle&lt;/code&gt; to search for</source>
          <target state="translated">&lt;code&gt;needle&lt;/code&gt; 寻找</target>
        </trans-unit>
        <trans-unit id="ff8dbf7443db4c2f2acbe71b904cddb2944e1a8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;needle&lt;/code&gt; to search for. If this string is empty, an error will occur.</source>
          <target state="translated">&lt;code&gt;needle&lt;/code&gt; 寻找。如果该字符串为空，将发生错误。</target>
        </trans-unit>
        <trans-unit id="3617913f70a336eee917e86d8a292b8fdc107490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newBCO# instrs lits ptrs arity bitmap&lt;/code&gt; creates a new bytecode object. The resulting object encodes a function of the given arity with the instructions encoded in &lt;code&gt;instrs&lt;/code&gt;, and a static reference table usage bitmap given by &lt;code&gt;bitmap&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;newBCO# instrs lits ptrs arity bitmap&lt;/code&gt; 创建一个新的字节码对象。结果对象使用 &lt;code&gt;instrs&lt;/code&gt; 编码的指令对给定arity的函数进行编码，并由 bitmap给出静态引用表使用位 &lt;code&gt;bitmap&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d5d69a0b7d37427bfa59138ce5d6ff629f5c0f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newtype: Use&lt;/code&gt;&lt;a href=&quot;#extension-GeneralizedNewtypeDeriving&quot;&gt;&lt;code&gt;GeneralizedNewtypeDeriving&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;newtype: Use&lt;/code&gt; &lt;a href=&quot;#extension-GeneralizedNewtypeDeriving&quot;&gt; &lt;code&gt;GeneralizedNewtypeDeriving&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c6ce5e75313c95a77bc3bab8bfba53e26446a4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nodeFromVertex :: Vertex -&amp;gt; (node, key, [key])&lt;/code&gt; returns the node associated with the given 0-based &lt;code&gt;Int&lt;/code&gt; vertex; see &lt;em&gt;warning&lt;/em&gt; below.</source>
          <target state="translated">&lt;code&gt;nodeFromVertex :: Vertex -&amp;gt; (node, key, [key])&lt;/code&gt; 返回与给定的基于0的 &lt;code&gt;Int&lt;/code&gt; 顶点关联的节点；请参阅下面的&lt;em&gt;警告&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c8e41909ff90e256d7c446570c47a96250d4299b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;notFollowedBy p&lt;/code&gt; only succeeds when parser &lt;code&gt;p&lt;/code&gt; fails. This parser does not consume any input. This parser can be used to implement the 'longest match' rule. For example, when recognizing keywords (for example &lt;code&gt;let&lt;/code&gt;), we want to make sure that a keyword is not followed by a legal identifier character, in which case the keyword is actually an identifier (for example &lt;code&gt;lets&lt;/code&gt;). We can program this behaviour as follows:</source>
          <target state="translated">&lt;code&gt;notFollowedBy p&lt;/code&gt; 仅在解析器 &lt;code&gt;p&lt;/code&gt; 失败时成功。该解析器不消耗任何输入。该解析器可用于实现&amp;ldquo;最长匹配&amp;rdquo;规则。例如，在识别关键字时（例如 &lt;code&gt;let&lt;/code&gt; ），我们要确保关键字后没有合法的标识符字符，在这种情况下，关键字实际上是标识符（例如 &lt;code&gt;lets&lt;/code&gt; ）。我们可以对此行为进行编程，如下所示：</target>
        </trans-unit>
        <trans-unit id="1a5fe52c557ae22b302bd14a1e2519394bd13a06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nubInt&lt;/code&gt; is strict in the elements of the list.</source>
          <target state="translated">&lt;code&gt;nubInt&lt;/code&gt; 在列表元素上很严格。</target>
        </trans-unit>
        <trans-unit id="3f23a458f31f92b124a38b0e41aaac962127e60e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nubIntOn&lt;/code&gt; is strict in the values of the function applied to the elements of the list.</source>
          <target state="translated">&lt;code&gt;nubIntOn&lt;/code&gt; 在应用于列表元素的函数的值上很严格。</target>
        </trans-unit>
        <trans-unit id="5d4b8287c8c8882e31b3f8d2880cdfeab11fc132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nubOrd&lt;/code&gt; is strict in the elements of the list.</source>
          <target state="translated">&lt;code&gt;nubOrd&lt;/code&gt; 在列表元素上很严格。</target>
        </trans-unit>
        <trans-unit id="686732935ff85a620a7bd6262da47b1e3811624f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nubOrdOn&lt;/code&gt; is strict in the values of the function applied to the elements of the list.</source>
          <target state="translated">&lt;code&gt;nubOrdOn&lt;/code&gt; 对应用于列表元素的函数的值严格。</target>
        </trans-unit>
        <trans-unit id="7367896f7681bf47f880f32a2ceb33950d3c01be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;oneOf cs&lt;/code&gt; succeeds if the current character is in the supplied list of characters &lt;code&gt;cs&lt;/code&gt;. Returns the parsed character. See also &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;oneOf cs&lt;/code&gt; 成功，如果当前字符的字符所提供的列表 &lt;code&gt;cs&lt;/code&gt; 。返回已解析的字符。另请参阅 &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2dba7dbf8a8ed84fe2b86840692ea4684e4d77da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;oneOf cs&lt;/code&gt; succeeds if the current character is in the supplied list of characters &lt;code&gt;cs&lt;/code&gt;. Returns the parsed character. See also &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-char#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;oneOf cs&lt;/code&gt; 成功，如果当前字符的字符所提供的列表 &lt;code&gt;cs&lt;/code&gt; 。返回已解析的字符。另请参阅 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-char#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0a04efca569dfa9fbbe7d89cb7c4dd3f73aa983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openDirStream dir&lt;/code&gt; calls &lt;code&gt;opendir&lt;/code&gt; to obtain a directory stream for &lt;code&gt;dir&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;openDirStream dir&lt;/code&gt; 调用 &lt;code&gt;opendir&lt;/code&gt; 以获得 &lt;code&gt;dir&lt;/code&gt; 的目录流。</target>
        </trans-unit>
        <trans-unit id="192a654c09f0df329ab2519a071a25e8eab05de9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;openPseudoTerminal&lt;/code&gt; creates a pseudoterminal (pty) pair, and returns the newly created pair as a (&lt;code&gt;master&lt;/code&gt;, &lt;code&gt;slave&lt;/code&gt;) tuple.</source>
          <target state="translated">&lt;code&gt;openPseudoTerminal&lt;/code&gt; 创建一个伪终端（pty）对，并将新创建的对作为（ &lt;code&gt;master&lt;/code&gt; ， &lt;code&gt;slave&lt;/code&gt; ）元组返回。</target>
        </trans-unit>
        <trans-unit id="bace0c54f31a15f5bddbe9ad572bb21e32508f41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;option x p&lt;/code&gt; tries to apply parser &lt;code&gt;p&lt;/code&gt;. If &lt;code&gt;p&lt;/code&gt; fails without consuming input, it returns the value &lt;code&gt;x&lt;/code&gt;, otherwise the value returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;option x p&lt;/code&gt; 尝试应用解析器 &lt;code&gt;p&lt;/code&gt; 。如果 &lt;code&gt;p&lt;/code&gt; 在不消耗任何输入的情况下失败，则返回值 &lt;code&gt;x&lt;/code&gt; ，否则返回 &lt;code&gt;p&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="e4ebf5c81299360ece1c5fcdf4eefbb30ff2d4c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;option x p&lt;/code&gt; will either parse &lt;code&gt;p&lt;/code&gt; or return &lt;code&gt;x&lt;/code&gt; without consuming any input.</source>
          <target state="translated">&lt;code&gt;option x p&lt;/code&gt; 将解析 &lt;code&gt;p&lt;/code&gt; 或返回 &lt;code&gt;x&lt;/code&gt; 而不消耗任何输入。</target>
        </trans-unit>
        <trans-unit id="28b4086a811e0da08b201496f5d39d65225aa8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionMaybe p&lt;/code&gt; tries to apply parser &lt;code&gt;p&lt;/code&gt;. If &lt;code&gt;p&lt;/code&gt; fails without consuming input, it return &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, otherwise it returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; the value returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;optionMaybe p&lt;/code&gt; 尝试应用解析器 &lt;code&gt;p&lt;/code&gt; 。如果 &lt;code&gt;p&lt;/code&gt; 失败而不消耗输入，则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; ，否则返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; ，返回 &lt;code&gt;p&lt;/code&gt; 所返回的值。</target>
        </trans-unit>
        <trans-unit id="b61bd1c4a189a12ad0e625a4e5613f6f3fd49a73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optionMaybe p&lt;/code&gt; tries to apply parser &lt;code&gt;p&lt;/code&gt;. If &lt;code&gt;p&lt;/code&gt; fails without consuming input, it return &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, otherwise it returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; the value returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56f4b419c9e52aaebf3661bb8fc5fd960b9dbbbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optional p&lt;/code&gt; optionally parses &lt;code&gt;p&lt;/code&gt; and always returns &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;optional p&lt;/code&gt; 可选地分析 &lt;code&gt;p&lt;/code&gt; 并始终返回 &lt;code&gt;()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52a9fa7e27cef29971c48bc00d735454128fbbd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;optional p&lt;/code&gt; tries to apply parser &lt;code&gt;p&lt;/code&gt;. It will parse &lt;code&gt;p&lt;/code&gt; or nothing. It only fails if &lt;code&gt;p&lt;/code&gt; fails after consuming input. It discards the result of &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;optional p&lt;/code&gt; 尝试应用解析器 &lt;code&gt;p&lt;/code&gt; 。它将解析 &lt;code&gt;p&lt;/code&gt; 或什么都不解析。仅当使用输入后 &lt;code&gt;p&lt;/code&gt; 失败时，它才会失败。它丢弃 &lt;code&gt;p&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="724942ba218da78a2b98ad86431785fc08972c22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;p&lt;/code&gt; &amp;mdash; parallel sparks (sampled). Enabled by default.</source>
          <target state="translated">&lt;code&gt;p&lt;/code&gt; &amp;mdash;平行火花（采样）。默认启用。</target>
        </trans-unit>
        <trans-unit id="e1500ec5b52d9695092d929dcc0d64f327ff5fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parse p filePath input&lt;/code&gt; runs a parser &lt;code&gt;p&lt;/code&gt; over Identity without user state. The &lt;code&gt;filePath&lt;/code&gt; is only used in error messages and may be the empty string. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;parse p filePath input&lt;/code&gt; 在没有用户状态的情况下在Identity上运行解析器 &lt;code&gt;p&lt;/code&gt; 。的 &lt;code&gt;filePath&lt;/code&gt; 只在错误消息中使用，并且可以是空字符串。返回一个 &lt;code&gt;&lt;a href=&quot;text-parsec#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ）或类型 &lt;code&gt;a&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; ）的值。</target>
        </trans-unit>
        <trans-unit id="5d2afcdb91582af684549b0b5b315b8b27b776e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parse p filePath input&lt;/code&gt; runs a parser &lt;code&gt;p&lt;/code&gt; over Identity without user state. The &lt;code&gt;filePath&lt;/code&gt; is only used in error messages and may be the empty string. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5054021e9af465d95264d1946eaa05a51db43fb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parse p filePath input&lt;/code&gt; runs a parser &lt;code&gt;p&lt;/code&gt; over Identity without user state. The &lt;code&gt;filePath&lt;/code&gt; is only used in error messages and may be the empty string. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;parse p filePath input&lt;/code&gt; 在没有用户状态的情况下在Identity上运行解析器 &lt;code&gt;p&lt;/code&gt; 。的 &lt;code&gt;filePath&lt;/code&gt; 只在错误消息中使用，并且可以是空字符串。返回一个 &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ）或类型 &lt;code&gt;a&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; ）的值。</target>
        </trans-unit>
        <trans-unit id="07ad6dff7f3b300c74accf61e4a0a68f323e23ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parse p filePath input&lt;/code&gt; runs a parser &lt;code&gt;p&lt;/code&gt; over Identity without user state. The &lt;code&gt;filePath&lt;/code&gt; is only used in error messages and may be the empty string. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0116427892802de970e9caf1b430f5b1e1556ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFromFile p filePath&lt;/code&gt; runs a lazy bytestring parser &lt;code&gt;p&lt;/code&gt; on the input read from &lt;code&gt;filePath&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;bytestring-lazy-char8#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt;. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;parseFromFile p filePath&lt;/code&gt; &lt;code&gt;filePath&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;bytestring-lazy-char8#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; 在从filePath读取的输入上运行一个惰性字节字符串解析器 &lt;code&gt;p&lt;/code&gt; 。返回 &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ）或类型 &lt;code&gt;a&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; ）的值。</target>
        </trans-unit>
        <trans-unit id="d1d5cdfb4505652b21669dced167c2669cab0606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFromFile p filePath&lt;/code&gt; runs a lazy bytestring parser &lt;code&gt;p&lt;/code&gt; on the input read from &lt;code&gt;filePath&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;bytestring-lazy-char8#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt;. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0af969a2929691936a95f88bc3a6ec38adc318" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFromFile p filePath&lt;/code&gt; runs a strict bytestring parser &lt;code&gt;p&lt;/code&gt; on the input read from &lt;code&gt;filePath&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;bytestring-char8#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt;. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;parseFromFile p filePath&lt;/code&gt; &lt;code&gt;filePath&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;bytestring-char8#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; 在从filePath读取的输入上运行严格的字节字符串解析器 &lt;code&gt;p&lt;/code&gt; 。返回一个 &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ）或类型 &lt;code&gt;a&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; ）的值。</target>
        </trans-unit>
        <trans-unit id="7c92c41179d84bebc475d2609a463b9b7af88b5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFromFile p filePath&lt;/code&gt; runs a strict bytestring parser &lt;code&gt;p&lt;/code&gt; on the input read from &lt;code&gt;filePath&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;bytestring-char8#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt;. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9274ce751d68bc092fadbf25016576d667e7a055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFromFile p filePath&lt;/code&gt; runs a strict text parser &lt;code&gt;p&lt;/code&gt; on the input read from &lt;code&gt;filePath&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../text-1.2.3.2/data-text-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt;. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56993adb3ddf07cc416f8812b76c888415e3090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFromFile p filePath&lt;/code&gt; runs a strict text parser &lt;code&gt;p&lt;/code&gt; on the input read from &lt;code&gt;filePath&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../text-1.2.3.2/data-text-lazy-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt;. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82856998d9751a3733e60c0607c7b45ff990c62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFromFile p filePath&lt;/code&gt; runs a strict text parser &lt;code&gt;p&lt;/code&gt; on the input read from &lt;code&gt;filePath&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../text-1.2.4.0/data-text-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt;. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;parseFromFile p filePath&lt;/code&gt; &lt;code&gt;filePath&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;../text-1.2.4.0/data-text-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; 在从filePath读取的输入上运行严格的文本解析器 &lt;code&gt;p&lt;/code&gt; 。返回一个 &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ）或类型 &lt;code&gt;a&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; ）的值。</target>
        </trans-unit>
        <trans-unit id="d74d5d2e59d089c23ba274edea898c51fbfd1b0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFromFile p filePath&lt;/code&gt; runs a strict text parser &lt;code&gt;p&lt;/code&gt; on the input read from &lt;code&gt;filePath&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../text-1.2.4.0/data-text-lazy-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt;. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;parseFromFile p filePath&lt;/code&gt; &lt;code&gt;filePath&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;../text-1.2.4.0/data-text-lazy-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; 在从filePath读取的输入上运行严格的文本解析器 &lt;code&gt;p&lt;/code&gt; 。返回一个 &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ）或类型 &lt;code&gt;a&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; ）的值。</target>
        </trans-unit>
        <trans-unit id="10e0c755040d08e0b997234debcadf0bec890c51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFromFile p filePath&lt;/code&gt; runs a string parser &lt;code&gt;p&lt;/code&gt; on the input read from &lt;code&gt;filePath&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt;. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;parseFromFile p filePath&lt;/code&gt; &lt;code&gt;filePath&lt;/code&gt; 使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; 在从filePath读取的输入上运行字符串解析器 &lt;code&gt;p&lt;/code&gt; 。返回 &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; ）或类型 &lt;code&gt;a&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; ）的值。</target>
        </trans-unit>
        <trans-unit id="477dcde6e2ec4bd125a8dff3dd805107405d8b62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFromFile p filePath&lt;/code&gt; runs a string parser &lt;code&gt;p&lt;/code&gt; on the input read from &lt;code&gt;filePath&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt;. Returns either a &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:ParseError&quot;&gt;ParseError&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;) or a value of type &lt;code&gt;a&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43361805333d6340ba3d49341667b633c9628ea2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserTrace label&lt;/code&gt; is an impure function, implemented with &lt;a href=&quot;../base-4.13.0.0/debug-trace&quot;&gt;Debug.Trace&lt;/a&gt; that prints to the console the remaining parser state at the time it is invoked. It is intended to be used for debugging parsers by inspecting their intermediate states.</source>
          <target state="translated">&lt;code&gt;parserTrace label&lt;/code&gt; 是一个不纯函数，由&lt;a href=&quot;../base-4.13.0.0/debug-trace&quot;&gt;Debug.Trace&lt;/a&gt;实现，该函数在调用时将剩余的解析器状态打印到控制台。它旨在用于通过检查解析器的中间状态来调试解析器。</target>
        </trans-unit>
        <trans-unit id="93f3ac1ff6bb5a54866efe8adc497fffdb4a9ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserTrace label&lt;/code&gt; is an impure function, implemented with &lt;a href=&quot;../base-4.14.1.0/debug-trace&quot;&gt;Debug.Trace&lt;/a&gt; that prints to the console the remaining parser state at the time it is invoked. It is intended to be used for debugging parsers by inspecting their intermediate states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d68a071a6f06d0f798f3a76c7a234c33d6d89b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserTraced label p&lt;/code&gt; is an impure function, implemented with &lt;a href=&quot;../base-4.13.0.0/debug-trace&quot;&gt;Debug.Trace&lt;/a&gt; that prints to the console the remaining parser state at the time it is invoked. It then continues to apply parser &lt;code&gt;p&lt;/code&gt;, and if &lt;code&gt;p&lt;/code&gt; fails will indicate that the label has been backtracked. It is intended to be used for debugging parsers by inspecting their intermediate states.</source>
          <target state="translated">&lt;code&gt;parserTraced label p&lt;/code&gt; 是不纯函数，使用&lt;a href=&quot;../base-4.13.0.0/debug-trace&quot;&gt; Debug.Trace&lt;/a&gt;该在调用时将其余解析器状态打印到控制台。然后它将继续应用解析器 &lt;code&gt;p&lt;/code&gt; ，如果 &lt;code&gt;p&lt;/code&gt; 失败将指示标签已回溯。它旨在用于通过检查解析器的中间状态来调试解析器。</target>
        </trans-unit>
        <trans-unit id="1281f6233dfa11f4020888eb8828673fa8d58a8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserTraced label p&lt;/code&gt; is an impure function, implemented with &lt;a href=&quot;../base-4.14.1.0/debug-trace&quot;&gt;Debug.Trace&lt;/a&gt; that prints to the console the remaining parser state at the time it is invoked. It then continues to apply parser &lt;code&gt;p&lt;/code&gt;, and if &lt;code&gt;p&lt;/code&gt; fails will indicate that the label has been backtracked. It is intended to be used for debugging parsers by inspecting their intermediate states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236d859b7609fc1ca1bc13d6b5fcf5a0b0f249f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserZero&lt;/code&gt; always fails without consuming any input. &lt;code&gt;parserZero&lt;/code&gt; is defined equal to the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:mzero&quot;&gt;mzero&lt;/a&gt;&lt;/code&gt; member of the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt; class and to the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; member of the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:Alternative&quot;&gt;Alternative&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;parserZero&lt;/code&gt; 始终在不消耗任何输入的情况下失败。 &lt;code&gt;parserZero&lt;/code&gt; 定义为等于 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt; 类的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:mzero&quot;&gt;mzero&lt;/a&gt;&lt;/code&gt; 成员，并且为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:Alternative&quot;&gt;Alternative&lt;/a&gt;&lt;/code&gt; 类成员。</target>
        </trans-unit>
        <trans-unit id="9d89f53e0ad613258b6413d6827e25a6d280be5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parserZero&lt;/code&gt; always fails without consuming any input. &lt;code&gt;parserZero&lt;/code&gt; is defined equal to the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:mzero&quot;&gt;mzero&lt;/a&gt;&lt;/code&gt; member of the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt; class and to the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; member of the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:Alternative&quot;&gt;Alternative&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b37ef552b620f945e9569f42eacd214db31f687" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;purgeObj&lt;/code&gt; drops the symbols for the dynamic library from the symbol table. Unlike &lt;code&gt;&lt;a href=&quot;ghci-objlink#v:unloadObj&quot;&gt;unloadObj&lt;/a&gt;&lt;/code&gt;, the library will not be dropped memory during a future major GC.</source>
          <target state="translated">&lt;code&gt;purgeObj&lt;/code&gt; 从符号表中删除动态库的符号。与 &lt;code&gt;&lt;a href=&quot;ghci-objlink#v:unloadObj&quot;&gt;unloadObj&lt;/a&gt;&lt;/code&gt; 不同，在将来的主要GC中不会删除该库。</target>
        </trans-unit>
        <trans-unit id="170f3799fb282ab1d8c87871e662353dc351f122" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;putState st&lt;/code&gt; set the user state to &lt;code&gt;st&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;putState st&lt;/code&gt; 将用户状态设置为 &lt;code&gt;st&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8dae793f8fc921273397467c9a90d1a4fe2513a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;queryTerminal fd&lt;/code&gt; calls &lt;code&gt;isatty&lt;/code&gt; to determine whether or not &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt; is associated with a terminal.</source>
          <target state="translated">&lt;code&gt;queryTerminal fd&lt;/code&gt; 调用 &lt;code&gt;isatty&lt;/code&gt; 确定是否 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 是否与终端相关联。</target>
        </trans-unit>
        <trans-unit id="886c07b9fda367d73fea1ebd7fa724ee8ac39ee2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raiseSignal int&lt;/code&gt; calls &lt;code&gt;kill&lt;/code&gt; to signal the current process with interrupt signal &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;raiseSignal int&lt;/code&gt; 调用 &lt;code&gt;kill&lt;/code&gt; 来用中断信号 &lt;code&gt;int&lt;/code&gt; 指示当前进程。</target>
        </trans-unit>
        <trans-unit id="6dcb68b814fda4f0e43be7d3203f944bd95bb03a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readCreateProcess&lt;/code&gt; works exactly like &lt;code&gt;&lt;a href=&quot;system-process#v:readProcess&quot;&gt;readProcess&lt;/a&gt;&lt;/code&gt; except that it lets you pass &lt;code&gt;&lt;a href=&quot;system-process#t:CreateProcess&quot;&gt;CreateProcess&lt;/a&gt;&lt;/code&gt; giving better flexibility.</source>
          <target state="translated">&lt;code&gt;readCreateProcess&lt;/code&gt; 的工作原理与 &lt;code&gt;&lt;a href=&quot;system-process#v:readProcess&quot;&gt;readProcess&lt;/a&gt;&lt;/code&gt; 完全相同完全相同，不同之处在于，它可以让您传递 &lt;code&gt;&lt;a href=&quot;system-process#t:CreateProcess&quot;&gt;CreateProcess&lt;/a&gt;&lt;/code&gt; ,从而提供更好的灵活性。</target>
        </trans-unit>
        <trans-unit id="81073c68ed5f7be32aa4c53668308268db887816" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readCreateProcessWithExitCode&lt;/code&gt; works exactly like &lt;code&gt;&lt;a href=&quot;system-process#v:readProcessWithExitCode&quot;&gt;readProcessWithExitCode&lt;/a&gt;&lt;/code&gt; except that it lets you pass &lt;code&gt;&lt;a href=&quot;system-process#t:CreateProcess&quot;&gt;CreateProcess&lt;/a&gt;&lt;/code&gt; giving better flexibility.</source>
          <target state="translated">&lt;code&gt;readCreateProcessWithExitCode&lt;/code&gt; 的工作原理与 &lt;code&gt;&lt;a href=&quot;system-process#v:readProcessWithExitCode&quot;&gt;readProcessWithExitCode&lt;/a&gt;&lt;/code&gt; 完全相同，不同之处在于它允许您传递 &lt;code&gt;&lt;a href=&quot;system-process#t:CreateProcess&quot;&gt;CreateProcess&lt;/a&gt;&lt;/code&gt; ,从而提供更好的灵活性。</target>
        </trans-unit>
        <trans-unit id="d854f1fd3410de9533ec03113bd2149d14e1e32f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readDirStream dp&lt;/code&gt; calls &lt;code&gt;readdir&lt;/code&gt; to obtain the next directory entry (&lt;code&gt;struct dirent&lt;/code&gt;) for the open directory stream &lt;code&gt;dp&lt;/code&gt;, and returns the &lt;code&gt;d_name&lt;/code&gt; member of that structure.</source>
          <target state="translated">&lt;code&gt;readDirStream dp&lt;/code&gt; 调用 &lt;code&gt;readdir&lt;/code&gt; 获取打开目录流 &lt;code&gt;dp&lt;/code&gt; 的下一个目录条目（ &lt;code&gt;struct dirent&lt;/code&gt; ），并返回该结构的 &lt;code&gt;d_name&lt;/code&gt; 成员。</target>
        </trans-unit>
        <trans-unit id="2dd1b8c25588d116697950fed46adb2fda59d402" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readProcess&lt;/code&gt; forks an external process, reads its standard output strictly, blocking until the process terminates, and returns the output string. The external process inherits the standard error.</source>
          <target state="translated">&lt;code&gt;readProcess&lt;/code&gt; 派生一个外部进程，严格读取其标准输出，阻塞直到该进程终止，然后返回输出字符串。外部过程继承了标准错误。</target>
        </trans-unit>
        <trans-unit id="b887babad0ba6bd33de067b5d1b4e71a63412ecd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;readProcessWithExitCode&lt;/code&gt; is like &lt;code&gt;&lt;a href=&quot;system-process#v:readProcess&quot;&gt;readProcess&lt;/a&gt;&lt;/code&gt; but with two differences:</source>
          <target state="translated">&lt;code&gt;readProcessWithExitCode&lt;/code&gt; 类似于 &lt;code&gt;&lt;a href=&quot;system-process#v:readProcess&quot;&gt;readProcess&lt;/a&gt;&lt;/code&gt; ,但有两个区别：</target>
        </trans-unit>
        <trans-unit id="4f483a9990e96db9a4f03d5a02fa8dae77197ad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ready dev write msecs&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the device has data to read (if &lt;code&gt;write&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt;) or space to write new data (if &lt;code&gt;write&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;). &lt;code&gt;msecs&lt;/code&gt; specifies how long to wait, in milliseconds.</source>
          <target state="translated">&lt;code&gt;ready dev write msecs&lt;/code&gt; 如果设备有要读取的数据（如果 &lt;code&gt;write&lt;/code&gt; 为 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; ）或有空间写入新数据（如果 &lt;code&gt;write&lt;/code&gt; 为 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ,则ready dev write msecs返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ）），。 &lt;code&gt;msecs&lt;/code&gt; 指定等待多长时间，单位是毫秒。</target>
        </trans-unit>
        <trans-unit id="98f3be57aded45701eafb922c4274e13ced485c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rec&lt;/code&gt; blocks can also be used inside &lt;code&gt;mdo&lt;/code&gt;-expressions, which will be treated as a single statement. However, it is good style to either use &lt;code&gt;mdo&lt;/code&gt; or &lt;code&gt;rec&lt;/code&gt; blocks in a single expression.</source>
          <target state="translated">&lt;code&gt;rec&lt;/code&gt; 块也可以在 &lt;code&gt;mdo&lt;/code&gt; -expressions 内部使用，它将被视为单个语句。但是，使用 &lt;code&gt;mdo&lt;/code&gt; 或 &lt;code&gt;rec&lt;/code&gt; 在单个表达式中 rec块是一种。</target>
        </trans-unit>
        <trans-unit id="dc7e5bdf258b0658e02b38e74dc9e32538cea781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;recover&lt;/code&gt; may raise an exception rather than skipping anything.</source>
          <target state="translated">&lt;code&gt;recover&lt;/code&gt; 可能会引发异常，而不是跳过任何内容。</target>
        </trans-unit>
        <trans-unit id="265d32357e56084e5000a238d381807aead6cf70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;registerFd mgr cb fd evs lt&lt;/code&gt; registers interest in the events &lt;code&gt;evs&lt;/code&gt; on the file descriptor &lt;code&gt;fd&lt;/code&gt; for lifetime &lt;code&gt;lt&lt;/code&gt;. &lt;code&gt;cb&lt;/code&gt; is called for each event that occurs. Returns a cookie that can be handed to &lt;code&gt;&lt;a href=&quot;ghc-event#v:unregisterFd&quot;&gt;unregisterFd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;registerFd mgr cb fd evs lt&lt;/code&gt; 在生命周期 &lt;code&gt;lt&lt;/code&gt; 内对文件描述符 &lt;code&gt;fd&lt;/code&gt; 上的事件 &lt;code&gt;evs&lt;/code&gt; 感兴趣。每个发生的事件都调用 &lt;code&gt;cb&lt;/code&gt; 。返回可以发送给 &lt;code&gt;&lt;a href=&quot;ghc-event#v:unregisterFd&quot;&gt;unregisterFd&lt;/a&gt;&lt;/code&gt; 的cookie。</target>
        </trans-unit>
        <trans-unit id="ceba8248ce54a903b180a608d6cdff89c75e179e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyAnnotations target&lt;/code&gt; returns the list of annotations associated with &lt;code&gt;target&lt;/code&gt;. Only the annotations that are appropriately typed is returned. So if you have &lt;code&gt;Int&lt;/code&gt; and &lt;code&gt;String&lt;/code&gt; annotations for the same target, you have to call this function twice.</source>
          <target state="translated">&lt;code&gt;reifyAnnotations target&lt;/code&gt; 返回与 &lt;code&gt;target&lt;/code&gt; 关联的注释列表。仅返回正确键入的注释。因此，如果您有 &lt;code&gt;Int&lt;/code&gt; 和 &lt;code&gt;String&lt;/code&gt; 同一目标 String批注，则必须调用此函数两次。</target>
        </trans-unit>
        <trans-unit id="1d5cf4e2162253915e3ee1295e39df377a108dba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyConStrictness nm&lt;/code&gt; looks up the strictness information for the fields of the constructor with the name &lt;code&gt;nm&lt;/code&gt;. Note that the strictness information that &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyConStrictness&quot;&gt;reifyConStrictness&lt;/a&gt;&lt;/code&gt; returns may not correspond to what is written in the source code. For example, in the following data declaration:</source>
          <target state="translated">&lt;code&gt;reifyConStrictness nm&lt;/code&gt; 查找名称为 &lt;code&gt;nm&lt;/code&gt; 的构造函数字段的严格性信息。请注意， &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyConStrictness&quot;&gt;reifyConStrictness&lt;/a&gt;&lt;/code&gt; 的严格性信息返回可能与源代码中所写的。例如，在以下数据声明中：</target>
        </trans-unit>
        <trans-unit id="57fa87179057dc8ec4e7011d77aa926ee76aecb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyConStrictness nm&lt;/code&gt; looks up the strictness information for the fields of the constructor with the name &lt;code&gt;nm&lt;/code&gt;. Note that the strictness information that &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyConStrictness&quot;&gt;reifyConStrictness&lt;/a&gt;&lt;/code&gt; returns may not correspond to what is written in the source code. For example, in the following data declaration:</source>
          <target state="translated">&lt;code&gt;reifyConStrictness nm&lt;/code&gt; 查找名称为 &lt;code&gt;nm&lt;/code&gt; 的构造函数字段的严格性信息。请注意， &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyConStrictness&quot;&gt;reifyConStrictness&lt;/a&gt;&lt;/code&gt; 的严格性信息返回可能与源代码中所写的。例如，在以下数据声明中：</target>
        </trans-unit>
        <trans-unit id="3171898bb71444e3f243c891e7ea1ff27407d6b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyFixity nm&lt;/code&gt; attempts to find a fixity declaration for &lt;code&gt;nm&lt;/code&gt;. For example, if the function &lt;code&gt;foo&lt;/code&gt; has the fixity declaration &lt;code&gt;infixr 7 foo&lt;/code&gt;, then &lt;code&gt;reifyFixity 'foo&lt;/code&gt; would return &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (&lt;a href=&quot;language-haskell-th#t:Fixity&quot;&gt;Fixity&lt;/a&gt; 7 &lt;a href=&quot;language-haskell-th#v:InfixR&quot;&gt;InfixR&lt;/a&gt;)&lt;/code&gt;. If the function &lt;code&gt;bar&lt;/code&gt; does not have a fixity declaration, then &lt;code&gt;reifyFixity 'bar&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, so you may assume &lt;code&gt;bar&lt;/code&gt; has &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:defaultFixity&quot;&gt;defaultFixity&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reifyFixity nm&lt;/code&gt; 试图找到一个固定性声明 &lt;code&gt;nm&lt;/code&gt; 。例如，如果函数 &lt;code&gt;foo&lt;/code&gt; 具有固定性声明 &lt;code&gt;infixr 7 foo&lt;/code&gt; ，然后 &lt;code&gt;reifyFixity 'foo&lt;/code&gt; 将返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (&lt;a href=&quot;language-haskell-th#t:Fixity&quot;&gt;Fixity&lt;/a&gt; 7 &lt;a href=&quot;language-haskell-th#v:InfixR&quot;&gt;InfixR&lt;/a&gt;)&lt;/code&gt; 。如果功能 &lt;code&gt;bar&lt;/code&gt; 不具有固定性声明，然后 &lt;code&gt;reifyFixity 'bar&lt;/code&gt; 的回报 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; ，所以你可以假设 &lt;code&gt;bar&lt;/code&gt; 已 &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:defaultFixity&quot;&gt;defaultFixity&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9186e7ae6d03c2aeb322f6526d5dc2396a52ba7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyFixity nm&lt;/code&gt; attempts to find a fixity declaration for &lt;code&gt;nm&lt;/code&gt;. For example, if the function &lt;code&gt;foo&lt;/code&gt; has the fixity declaration &lt;code&gt;infixr 7 foo&lt;/code&gt;, then &lt;code&gt;reifyFixity 'foo&lt;/code&gt; would return &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (&lt;a href=&quot;language-haskell-th-syntax#t:Fixity&quot;&gt;Fixity&lt;/a&gt; 7 &lt;a href=&quot;language-haskell-th-syntax#v:InfixR&quot;&gt;InfixR&lt;/a&gt;)&lt;/code&gt;. If the function &lt;code&gt;bar&lt;/code&gt; does not have a fixity declaration, then &lt;code&gt;reifyFixity 'bar&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, so you may assume &lt;code&gt;bar&lt;/code&gt; has &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:defaultFixity&quot;&gt;defaultFixity&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reifyFixity nm&lt;/code&gt; 试图找到一个固定性声明 &lt;code&gt;nm&lt;/code&gt; 。例如，如果函数 &lt;code&gt;foo&lt;/code&gt; 具有固定性声明 &lt;code&gt;infixr 7 foo&lt;/code&gt; ，然后 &lt;code&gt;reifyFixity 'foo&lt;/code&gt; 将返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; (&lt;a href=&quot;language-haskell-th-syntax#t:Fixity&quot;&gt;Fixity&lt;/a&gt; 7 &lt;a href=&quot;language-haskell-th-syntax#v:InfixR&quot;&gt;InfixR&lt;/a&gt;)&lt;/code&gt; 。如果功能 &lt;code&gt;bar&lt;/code&gt; 不具有固定性声明，然后 &lt;code&gt;reifyFixity 'bar&lt;/code&gt; 的回报 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; ，所以你可以假设 &lt;code&gt;bar&lt;/code&gt; 已 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:defaultFixity&quot;&gt;defaultFixity&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec02029956845456aa9222455473fd38db7f2e45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyInstances ''Eq [ &lt;a href=&quot;language-haskell-th#v:TupleT&quot;&gt;TupleT&lt;/a&gt; 2 `&lt;a href=&quot;language-haskell-th#v:AppT&quot;&gt;AppT&lt;/a&gt;` &lt;a href=&quot;language-haskell-th#v:ConT&quot;&gt;ConT&lt;/a&gt; ''A `&lt;a href=&quot;language-haskell-th#v:AppT&quot;&gt;AppT&lt;/a&gt;` &lt;a href=&quot;language-haskell-th#v:ConT&quot;&gt;ConT&lt;/a&gt; ''B ]&lt;/code&gt; contains the &lt;code&gt;instance (Eq a, Eq b) =&amp;gt; Eq (a, b)&lt;/code&gt; regardless of whether &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; themselves implement &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;reifyInstances ''Eq [ &lt;a href=&quot;language-haskell-th#v:TupleT&quot;&gt;TupleT&lt;/a&gt; 2 `&lt;a href=&quot;language-haskell-th#v:AppT&quot;&gt;AppT&lt;/a&gt;` &lt;a href=&quot;language-haskell-th#v:ConT&quot;&gt;ConT&lt;/a&gt; ''A `&lt;a href=&quot;language-haskell-th#v:AppT&quot;&gt;AppT&lt;/a&gt;` &lt;a href=&quot;language-haskell-th#v:ConT&quot;&gt;ConT&lt;/a&gt; ''B ]&lt;/code&gt; 包含 &lt;code&gt;instance (Eq a, Eq b) =&amp;gt; Eq (a, b)&lt;/code&gt; 不管是否 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 本身实现 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="283004a3b86ddf80020a048e53a2844f731c1145" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyInstances ''Eq [ &lt;a href=&quot;language-haskell-th-syntax#v:TupleT&quot;&gt;TupleT&lt;/a&gt; 2 `&lt;a href=&quot;language-haskell-th-syntax#v:AppT&quot;&gt;AppT&lt;/a&gt;` &lt;a href=&quot;language-haskell-th-syntax#v:ConT&quot;&gt;ConT&lt;/a&gt; ''A `&lt;a href=&quot;language-haskell-th-syntax#v:AppT&quot;&gt;AppT&lt;/a&gt;` &lt;a href=&quot;language-haskell-th-syntax#v:ConT&quot;&gt;ConT&lt;/a&gt; ''B ]&lt;/code&gt; contains the &lt;code&gt;instance (Eq a, Eq b) =&amp;gt; Eq (a, b)&lt;/code&gt; regardless of whether &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; themselves implement &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;reifyInstances ''Eq [ &lt;a href=&quot;language-haskell-th-syntax#v:TupleT&quot;&gt;TupleT&lt;/a&gt; 2 `&lt;a href=&quot;language-haskell-th-syntax#v:AppT&quot;&gt;AppT&lt;/a&gt;` &lt;a href=&quot;language-haskell-th-syntax#v:ConT&quot;&gt;ConT&lt;/a&gt; ''A `&lt;a href=&quot;language-haskell-th-syntax#v:AppT&quot;&gt;AppT&lt;/a&gt;` &lt;a href=&quot;language-haskell-th-syntax#v:ConT&quot;&gt;ConT&lt;/a&gt; ''B ]&lt;/code&gt; 包含 &lt;code&gt;instance (Eq a, Eq b) =&amp;gt; Eq (a, b)&lt;/code&gt; 不管是否 &lt;code&gt;A&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 本身实现 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c88069868bb5989758442814f5f3137ad959b9a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyInstances ''Show [ &lt;a href=&quot;language-haskell-th#v:VarT&quot;&gt;VarT&lt;/a&gt; (&lt;a href=&quot;language-haskell-th#v:mkName&quot;&gt;mkName&lt;/a&gt; &quot;a&quot;) ]&lt;/code&gt; produces every available instance of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;reifyInstances ''Show [ &lt;a href=&quot;language-haskell-th#v:VarT&quot;&gt;VarT&lt;/a&gt; (&lt;a href=&quot;language-haskell-th#v:mkName&quot;&gt;mkName&lt;/a&gt; &quot;a&quot;) ]&lt;/code&gt; 产生 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; 的每个可用实例</target>
        </trans-unit>
        <trans-unit id="7d6895425c26a36b390cb51e247d255d052077ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyInstances ''Show [ &lt;a href=&quot;language-haskell-th-syntax#v:VarT&quot;&gt;VarT&lt;/a&gt; (&lt;a href=&quot;language-haskell-th-syntax#v:mkName&quot;&gt;mkName&lt;/a&gt; &quot;a&quot;) ]&lt;/code&gt; produces every available instance of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;reifyInstances ''Show [ &lt;a href=&quot;language-haskell-th-syntax#v:VarT&quot;&gt;VarT&lt;/a&gt; (&lt;a href=&quot;language-haskell-th-syntax#v:mkName&quot;&gt;mkName&lt;/a&gt; &quot;a&quot;) ]&lt;/code&gt; 产生 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; 的每个可用实例</target>
        </trans-unit>
        <trans-unit id="8593931ee33b1f35174c28ea1bd5868e84bf8fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyInstances nm tys&lt;/code&gt; returns a list of visible instances of &lt;code&gt;nm tys&lt;/code&gt;. That is, if &lt;code&gt;nm&lt;/code&gt; is the name of a type class, then all instances of this class at the types &lt;code&gt;tys&lt;/code&gt; are returned. Alternatively, if &lt;code&gt;nm&lt;/code&gt; is the name of a data family or type family, all instances of this family at the types &lt;code&gt;tys&lt;/code&gt; are returned.</source>
          <target state="translated">&lt;code&gt;reifyInstances nm tys&lt;/code&gt; 回报的可见实例列表 &lt;code&gt;nm tys&lt;/code&gt; 。也就是说，如果 &lt;code&gt;nm&lt;/code&gt; 是类型类的名称，则将返回该类在 &lt;code&gt;tys&lt;/code&gt; 类型的所有实例。或者，如果 &lt;code&gt;nm&lt;/code&gt; 是数据族或类型族的名称，则返回该族在 &lt;code&gt;tys&lt;/code&gt; 类型的所有实例。</target>
        </trans-unit>
        <trans-unit id="b0d42ac930e50199fc7453bb2278f37f2da1f282" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyModule mod&lt;/code&gt; looks up information about module &lt;code&gt;mod&lt;/code&gt;. To look up the current module, call this function with the return value of &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:thisModule&quot;&gt;thisModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reifyModule mod&lt;/code&gt; 查找有关模块 &lt;code&gt;mod&lt;/code&gt; 的信息。要查找当前模块，请使用 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:thisModule&quot;&gt;thisModule&lt;/a&gt;&lt;/code&gt; 的返回值调用此函数。</target>
        </trans-unit>
        <trans-unit id="575396fa065d49a249a7e28aff7323762a2a438f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyRoles nm&lt;/code&gt; returns the list of roles associated with the parameters of the tycon &lt;code&gt;nm&lt;/code&gt;. Fails if &lt;code&gt;nm&lt;/code&gt; cannot be found or is not a tycon. The returned list should never contain &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:InferR&quot;&gt;InferR&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reifyRoles nm&lt;/code&gt; 返回与tycon &lt;code&gt;nm&lt;/code&gt; 参数关联的角色列表。如果找不到 &lt;code&gt;nm&lt;/code&gt; 或不是tycon，则失败。返回的列表不应包含 &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:InferR&quot;&gt;InferR&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3965028a5f0f0e3fcee0452d77c2e97741ed567e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reifyRoles nm&lt;/code&gt; returns the list of roles associated with the parameters of the tycon &lt;code&gt;nm&lt;/code&gt;. Fails if &lt;code&gt;nm&lt;/code&gt; cannot be found or is not a tycon. The returned list should never contain &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:InferR&quot;&gt;InferR&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reifyRoles nm&lt;/code&gt; 返回与tycon &lt;code&gt;nm&lt;/code&gt; 参数关联的角色列表。如果找不到 &lt;code&gt;nm&lt;/code&gt; 或不是tycon，则失败。返回的列表不应包含 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:InferR&quot;&gt;InferR&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0aaf5a16b5281de946b561ad54cd72f255f67752" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remote-iserv&lt;/code&gt; needs to be built with the cross compiler to be executed on the remote host. Or in the case of using it on the same host the stage2 compiler will do as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d448e97359782a5dbe07e79da2577eca574e63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;removeLink path&lt;/code&gt; removes the link named &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;removeLink path&lt;/code&gt; 删除名为 &lt;code&gt;path&lt;/code&gt; 的链接。</target>
        </trans-unit>
        <trans-unit id="550bb511ad425f8c4f3c908fe6da9909ef7c475c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rename old new&lt;/code&gt; renames a file or directory from &lt;code&gt;old&lt;/code&gt; to &lt;code&gt;new&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rename old new&lt;/code&gt; 将文件或目录从 &lt;code&gt;old&lt;/code&gt; 重命名为 &lt;code&gt;new&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="155b28beb538e403a66daa23e12f814af17aba07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacement&lt;/code&gt; to replace &lt;code&gt;needle&lt;/code&gt; with.</source>
          <target state="translated">&lt;code&gt;replacement&lt;/code&gt; 以替换 &lt;code&gt;needle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba4e244589f4c5565cb799374bf758dedf3facf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rewindDirStream dp&lt;/code&gt; calls &lt;code&gt;rewinddir&lt;/code&gt; to reposition the directory stream &lt;code&gt;dp&lt;/code&gt; at the beginning of the directory.</source>
          <target state="translated">&lt;code&gt;rewindDirStream dp&lt;/code&gt; 调用 &lt;code&gt;rewinddir&lt;/code&gt; 以将目录流 &lt;code&gt;dp&lt;/code&gt; 重新定位在目录的开头。</target>
        </trans-unit>
        <trans-unit id="bee3ee293e4f137dbc8b105d9ba4102b86baba79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runInteractiveProcess&lt;/code&gt; blocks signals around the fork(). Since blocking/unblocking of signals is a global state operation, we need to ensure mutual exclusion of calls to &lt;code&gt;runInteractiveProcess&lt;/code&gt;. This lock is exported so that other libraries which also need to fork() (and also need to make the same global state changes) can protect their changes with the same lock. See &lt;a href=&quot;https://github.com/haskell/process/pull/154&quot;&gt;https://github.com/haskell/process/pull/154&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;runInteractiveProcess&lt;/code&gt; 阻止fork（）周围的信号。由于信号的阻塞/解除阻塞是全局状态操作，因此我们需要确保相互排斥对 &lt;code&gt;runInteractiveProcess&lt;/code&gt; 的调用。导出此锁，以便也需要fork（）（还需要进行相同的全局状态更改）的其他库可以使用相同的锁来保护其更改。参见&lt;a href=&quot;https://github.com/haskell/process/pull/154&quot;&gt;https://github.com/haskell/process/pull/154&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34289d913a16bfedba5ca3d6752f02385b8b653b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runghc&lt;/code&gt; allows you to run Haskell programs without first having to compile them.</source>
          <target state="translated">&lt;code&gt;runghc&lt;/code&gt; 允许您运行Haskell程序，而无需首先对其进行编译。</target>
        </trans-unit>
        <trans-unit id="b84851a67c47a052297b1232f321d809608f6e15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s1 .. sm&lt;/code&gt; do not contain any type family constructors,</source>
          <target state="translated">&lt;code&gt;s1 .. sm&lt;/code&gt; 不包含任何类型族构造函数，</target>
        </trans-unit>
        <trans-unit id="3923d4c847731e9498f0e85f056ea723a3948e90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt; &amp;mdash; scheduler events, including Haskell thread creation and start/stop events. Enabled by default.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; &amp;mdash;调度程序事件，包括Haskell线程创建和启动/停止事件。默认启用。</target>
        </trans-unit>
        <trans-unit id="36bb8b9f5b49f0248d1a78893f02454f60534738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt; - The state.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; -状态。</target>
        </trans-unit>
        <trans-unit id="68bd906be5272ad750e3c56fccd45549df340855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: the state variable argument for the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; ： &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 类型的状态变量参数</target>
        </trans-unit>
        <trans-unit id="8c6429e6d8889099651756a94a20ea03db85310f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: the state variable argument for the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="207537d27d8ae7f188d92ab61ff49bb12848f7e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;s&lt;/code&gt;: the state variable argument for the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; ： &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 类型的状态变量参数</target>
        </trans-unit>
        <trans-unit id="c42b28513e488d4362f2dccd9d0d96c921e9f416" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scheduleAlarm i&lt;/code&gt; calls &lt;code&gt;alarm&lt;/code&gt; to schedule a real time alarm at least &lt;code&gt;i&lt;/code&gt; seconds in the future.</source>
          <target state="translated">&lt;code&gt;scheduleAlarm i&lt;/code&gt; 调用 &lt;code&gt;alarm&lt;/code&gt; 来安排至少未来 &lt;code&gt;i&lt;/code&gt; 秒钟的实时警报。</target>
        </trans-unit>
        <trans-unit id="b241c731169644e013bae8079e23dda9697ded53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sendBreak fd duration&lt;/code&gt; calls &lt;code&gt;tcsendbreak&lt;/code&gt; to transmit a continuous stream of zero-valued bits on &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt; for the specified implementation-dependent &lt;code&gt;duration&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sendBreak fd duration&lt;/code&gt; 调用 &lt;code&gt;tcsendbreak&lt;/code&gt; 在指定的与实现相关的 &lt;code&gt;duration&lt;/code&gt; 时间内在 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 上传输连续的零值比特流。</target>
        </trans-unit>
        <trans-unit id="932b7380a5c3d8b991073fc982fdfa0124a38a3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepBy p sep&lt;/code&gt; parses &lt;em&gt;zero&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepBy p sep&lt;/code&gt; 解析&lt;em&gt;零次&lt;/em&gt;或多次出现的 &lt;code&gt;p&lt;/code&gt; ，以 &lt;code&gt;sep&lt;/code&gt; 分隔。返回 &lt;code&gt;p&lt;/code&gt; 返回的值的列表。</target>
        </trans-unit>
        <trans-unit id="d753d6b553c2ce2fda36548d1af42e8658527e8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepBy p sep&lt;/code&gt; parses zero or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepBy p sep&lt;/code&gt; 解析零次或多次出现的 &lt;code&gt;p&lt;/code&gt; ，以 &lt;code&gt;sep&lt;/code&gt; 分隔。返回 &lt;code&gt;p&lt;/code&gt; 返回的值的列表。</target>
        </trans-unit>
        <trans-unit id="b4683bfa7aac305771a4a95bac801e3f83e796a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepBy1 p sep&lt;/code&gt; parses &lt;em&gt;one&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepBy1 p sep&lt;/code&gt; 分析&lt;em&gt;一个&lt;/em&gt;或多个出现的 &lt;code&gt;p&lt;/code&gt; ，由 &lt;code&gt;sep&lt;/code&gt; 分隔。返回 &lt;code&gt;p&lt;/code&gt; 返回的值的列表。</target>
        </trans-unit>
        <trans-unit id="a36ce76f271256567b0fccdc5bddcc30dbb27a74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepBy1 p sep&lt;/code&gt; parses one or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepBy1 p sep&lt;/code&gt; 分析一个或多个出现的 &lt;code&gt;p&lt;/code&gt; ，由 &lt;code&gt;sep&lt;/code&gt; 分隔。返回 &lt;code&gt;p&lt;/code&gt; 返回的值的列表。</target>
        </trans-unit>
        <trans-unit id="d4514573ecb7ee67cbba21f7d6e4bf8c60569679" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepEndBy p sep&lt;/code&gt; parses &lt;em&gt;zero&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated and optionally ended by &lt;code&gt;sep&lt;/code&gt;, ie. haskell style statements. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepEndBy p sep&lt;/code&gt; 解析&lt;em&gt;零次&lt;/em&gt;或多次出现的 &lt;code&gt;p&lt;/code&gt; ，分隔并可选地以 &lt;code&gt;sep&lt;/code&gt; 结束，即。haskell样式声明。返回 &lt;code&gt;p&lt;/code&gt; 返回的值的列表。</target>
        </trans-unit>
        <trans-unit id="15f8af570dc63730d757c1ef207b9f8df71771f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sepEndBy1 p sep&lt;/code&gt; parses &lt;em&gt;one&lt;/em&gt; or more occurrences of &lt;code&gt;p&lt;/code&gt;, separated and optionally ended by &lt;code&gt;sep&lt;/code&gt;. Returns a list of values returned by &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sepEndBy1 p sep&lt;/code&gt; 解析&lt;em&gt;一个&lt;/em&gt;或多个出现 &lt;code&gt;p&lt;/code&gt; ，分离和任选地被结束 &lt;code&gt;sep&lt;/code&gt; 。返回 &lt;code&gt;p&lt;/code&gt; 返回的值的列表。</target>
        </trans-unit>
        <trans-unit id="a3a27f76df4d4fb5d967bac56e73e4bdf074f5cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setByteArray# ba off len c&lt;/code&gt; sets the byte range &lt;code&gt;[off, off+len]&lt;/code&gt; of the &lt;code&gt;MutableByteArray#&lt;/code&gt; to the byte &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setByteArray# ba off len c&lt;/code&gt; 套字节范围 &lt;code&gt;[off, off+len]&lt;/code&gt; 所述的 &lt;code&gt;MutableByteArray#&lt;/code&gt; 到字节 &lt;code&gt;c&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58e35895811f37bfd4db9306e73a869a809a08bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setEffectiveGroupID uid&lt;/code&gt; calls &lt;code&gt;setegid&lt;/code&gt; to set the effective group-id associated with the current process to &lt;code&gt;gid&lt;/code&gt;. This does not update the real group-id or set-group-id.</source>
          <target state="translated">&lt;code&gt;setEffectiveGroupID uid&lt;/code&gt; 调用 &lt;code&gt;setegid&lt;/code&gt; 将与当前进程关联的有效组ID设置为 &lt;code&gt;gid&lt;/code&gt; 。这不会更新真实的组ID或设置组ID。</target>
        </trans-unit>
        <trans-unit id="f5578ba6a4f348fd36d3a550923fc508b1a6c88a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setEffectiveUserID uid&lt;/code&gt; calls &lt;code&gt;seteuid&lt;/code&gt; to set the effective user-id associated with the current process to &lt;code&gt;uid&lt;/code&gt;. This does not update the real user-id or set-user-id.</source>
          <target state="translated">&lt;code&gt;setEffectiveUserID uid&lt;/code&gt; 调用 &lt;code&gt;seteuid&lt;/code&gt; 将与当前进程关联的有效用户ID设置为 &lt;code&gt;uid&lt;/code&gt; 。这不会更新真实的用户ID或set-user-id。</target>
        </trans-unit>
        <trans-unit id="81fcdecb45f79ccf1f68cffd11144812c0eb7951" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setEnv name value&lt;/code&gt; sets the specified environment variable to &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setEnv name value&lt;/code&gt; 将指定的环境变量设置为 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56843a81fcccdcb43ea574b7311cb41248a05565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFdMode fd mode&lt;/code&gt; acts like &lt;code&gt;setFileMode&lt;/code&gt; but uses a file descriptor &lt;code&gt;fd&lt;/code&gt; instead of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setFdMode fd mode&lt;/code&gt; 行为类似于 &lt;code&gt;setFileMode&lt;/code&gt; ,但是使用文件描述符 &lt;code&gt;fd&lt;/code&gt; 而不是 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7eb32e620d3c7d1d6f887e0a29119dd6bca99be4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFdMode fd mode&lt;/code&gt; acts like &lt;code&gt;setFileMode&lt;/code&gt; but uses a file descriptor &lt;code&gt;fd&lt;/code&gt; instead of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffda38437b74002f3ab73764cb13b7c93039a299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFileCreationMask mode&lt;/code&gt; sets the file mode creation mask to &lt;code&gt;mode&lt;/code&gt;. Modes set by this operation are subtracted from files and directories upon creation. The previous file creation mask is returned.</source>
          <target state="translated">&lt;code&gt;setFileCreationMask mode&lt;/code&gt; 将文件模式创建掩码设置为 &lt;code&gt;mode&lt;/code&gt; 。创建时将从文件和目录中减去通过此操作设置的模式。返回先前的文件创建掩码。</target>
        </trans-unit>
        <trans-unit id="8eb867a5a2013f449224127aa025bb592268a99d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFileMode path mode&lt;/code&gt; changes permission of the file given by &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;mode&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; doesn't exist or if the effective user ID of the current process is not that of the file's owner.</source>
          <target state="translated">&lt;code&gt;setFileMode path mode&lt;/code&gt; 将 &lt;code&gt;path&lt;/code&gt; 所给的文件的权限更改为 &lt;code&gt;mode&lt;/code&gt; 。如果 &lt;code&gt;path&lt;/code&gt; 不存在或者当前进程的有效用户ID不是文件所有者的有效用户ID，则此操作可能会因 &lt;code&gt;&lt;a href=&quot;system-posix-bytestring-filepath#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; 而失败。</target>
        </trans-unit>
        <trans-unit id="f5a727db0eead596618d8587d321ff8bbace2092" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFileMode path mode&lt;/code&gt; changes permission of the file given by &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;mode&lt;/code&gt;. This operation may fail with &lt;code&gt;&lt;a href=&quot;system-posix-error#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;path&lt;/code&gt; doesn't exist or if the effective user ID of the current process is not that of the file's owner.</source>
          <target state="translated">&lt;code&gt;setFileMode path mode&lt;/code&gt; 将 &lt;code&gt;path&lt;/code&gt; 所给的文件的权限更改为 &lt;code&gt;mode&lt;/code&gt; 。如果 &lt;code&gt;path&lt;/code&gt; 不存在或者当前进程的有效用户ID不是文件所有者的有效用户ID，则此操作可能会因 &lt;code&gt;&lt;a href=&quot;system-posix-error#v:throwErrnoPathIfMinus1_&quot;&gt;throwErrnoPathIfMinus1_&lt;/a&gt;&lt;/code&gt; 而失败。</target>
        </trans-unit>
        <trans-unit id="b178f8ce3d50ce801bf6b2f53e4f64dee92925da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setFileTimes path atime mtime&lt;/code&gt; sets the access and modification times associated with file &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;atime&lt;/code&gt; and &lt;code&gt;mtime&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;setFileTimes path atime mtime&lt;/code&gt; 将与文件 &lt;code&gt;path&lt;/code&gt; 关联的访问和修改时间分别设置为 &lt;code&gt;atime&lt;/code&gt; 和 &lt;code&gt;mtime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dfa90c6531c31f16f0794119cacd3d6de78a6275" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setGroupID gid&lt;/code&gt; calls &lt;code&gt;setgid&lt;/code&gt; to set the real, effective, and saved set-group-id associated with the current process to &lt;code&gt;gid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setGroupID gid&lt;/code&gt; 调用 &lt;code&gt;setgid&lt;/code&gt; 将与当前进程关联的真实，有效和已保存的set-group-id设置为 &lt;code&gt;gid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cda9d847ff408053039c5d76348b7eca00aa0682" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setGroups&lt;/code&gt; calls &lt;code&gt;setgroups&lt;/code&gt; to set the list of supplementary &lt;code&gt;GroupID&lt;/code&gt;s associated with the current process.</source>
          <target state="translated">&lt;code&gt;setGroups&lt;/code&gt; 调用 &lt;code&gt;setgroups&lt;/code&gt; 来设置与当前进程关联的补充 &lt;code&gt;GroupID&lt;/code&gt; 的列表。</target>
        </trans-unit>
        <trans-unit id="05b6623dc4a1393e991d4276e89fa7b1f65a2ce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setInput input&lt;/code&gt; continues parsing with &lt;code&gt;input&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;text-parsec#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;setInput&lt;/code&gt; functions can for example be used to deal with #include files.</source>
          <target state="translated">&lt;code&gt;setInput input&lt;/code&gt; 继续使用 &lt;code&gt;input&lt;/code&gt; 进行解析。该 &lt;code&gt;&lt;a href=&quot;text-parsec#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;setInput&lt;/code&gt; 设置功能，例如可以用来处理#include文件。</target>
        </trans-unit>
        <trans-unit id="4a31195ceeff2a888e07bb6bd9f69c7f061eb088" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setInput input&lt;/code&gt; continues parsing with &lt;code&gt;input&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;setInput&lt;/code&gt; functions can for example be used to deal with #include files.</source>
          <target state="translated">&lt;code&gt;setInput input&lt;/code&gt; 继续使用 &lt;code&gt;input&lt;/code&gt; 进行解析。该 &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;setInput&lt;/code&gt; 设置功能，例如可以用来处理#include文件。</target>
        </trans-unit>
        <trans-unit id="6865a1400c35697d031421a20797f3c0de3a07c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setInput input&lt;/code&gt; continues parsing with &lt;code&gt;input&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-prim#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;setInput&lt;/code&gt; functions can for example be used to deal with #include files.</source>
          <target state="translated">&lt;code&gt;setInput input&lt;/code&gt; 继续使用 &lt;code&gt;input&lt;/code&gt; 进行解析。该 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-prim#v:getInput&quot;&gt;getInput&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;setInput&lt;/code&gt; 设置功能，例如可以用来处理#include文件。</target>
        </trans-unit>
        <trans-unit id="13049f33a3ce6b4e3ddf9125c0b60ccceb35438d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setOwnerAndGroup path uid gid&lt;/code&gt; changes the owner and group of &lt;code&gt;path&lt;/code&gt; to &lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;gid&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;setOwnerAndGroup path uid gid&lt;/code&gt; 将所有者和 &lt;code&gt;path&lt;/code&gt; 组更改为 &lt;code&gt;uid&lt;/code&gt; 和 &lt;code&gt;gid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f6b2ce14924773d071cdb89feac6b506ff3391d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setParserState st&lt;/code&gt; set the full parser state to &lt;code&gt;st&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setParserState st&lt;/code&gt; 将完整的解析器状态设置为 &lt;code&gt;st&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59f8d0f2b216a37317940928988683ccd8a49ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setPosition pos&lt;/code&gt; sets the current source position to &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setPosition pos&lt;/code&gt; 将当前源位置设置为 &lt;code&gt;pos&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90d7a07e5e261bb44aed049c3d7024d386eace35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setSignalMask mask&lt;/code&gt; calls &lt;code&gt;sigprocmask&lt;/code&gt; with &lt;code&gt;SIG_SETMASK&lt;/code&gt; to block all interrupts in &lt;code&gt;mask&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setSignalMask mask&lt;/code&gt; 电话 &lt;code&gt;sigprocmask&lt;/code&gt; 与 &lt;code&gt;SIG_SETMASK&lt;/code&gt; 以阻止所有中断 &lt;code&gt;mask&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b62df21d578e60086418669f594c90551b40b08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setTerminalAttributes fd attr ts&lt;/code&gt; calls &lt;code&gt;tcsetattr&lt;/code&gt; to change the &lt;code&gt;TerminalAttributes&lt;/code&gt; associated with &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt; to &lt;code&gt;attr&lt;/code&gt;, when the terminal is in the state indicated by &lt;code&gt;ts&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setTerminalAttributes fd attr ts&lt;/code&gt; 当终端处于 &lt;code&gt;ts&lt;/code&gt; 指示的状态时，setTerminalAttributes fd attr ts调用 &lt;code&gt;tcsetattr&lt;/code&gt; 将与 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 关联的 &lt;code&gt;TerminalAttributes&lt;/code&gt; 更改为 &lt;code&gt;attr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3ccc3e3331d7159eb6aaad72d38f33f90d07516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setTerminalProcessGroupID fd pgid&lt;/code&gt; calls &lt;code&gt;tcsetpgrp&lt;/code&gt; to set the &lt;code&gt;ProcessGroupID&lt;/code&gt; of the foreground process group associated with the terminal attached to &lt;code&gt;Fd&lt;/code&gt;&lt;code&gt;fd&lt;/code&gt; to &lt;code&gt;pgid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setTerminalProcessGroupID fd pgid&lt;/code&gt; 调用 &lt;code&gt;tcsetpgrp&lt;/code&gt; ,以将与连接到 &lt;code&gt;Fd&lt;/code&gt; &lt;code&gt;fd&lt;/code&gt; 的终端关联的前台进程组的 &lt;code&gt;ProcessGroupID&lt;/code&gt; 设置为 &lt;code&gt;pgid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71352b8c5016c5719f130ce4158d5795f5364762" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;setUserID uid&lt;/code&gt; calls &lt;code&gt;setuid&lt;/code&gt; to set the real, effective, and saved set-user-id associated with the current process to &lt;code&gt;uid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;setUserID uid&lt;/code&gt; 调用 &lt;code&gt;setuid&lt;/code&gt; 将与当前进程关联的真实，有效和已保存的set-user-id设置为 &lt;code&gt;uid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="36b060ea85ca0f12ed8fd7d54fc896de2be3fbe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;signalProcess int pid&lt;/code&gt; calls &lt;code&gt;kill&lt;/code&gt; to signal process &lt;code&gt;pid&lt;/code&gt; with interrupt signal &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;signalProcess int pid&lt;/code&gt; 调用 &lt;code&gt;kill&lt;/code&gt; 以中断信号 &lt;code&gt;int&lt;/code&gt; 来通知进程 &lt;code&gt;pid&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="768bd67e3ea95321f64a00ec87bddccb6e083afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;signalProcessGroup int pgid&lt;/code&gt; calls &lt;code&gt;kill&lt;/code&gt; to signal all processes in group &lt;code&gt;pgid&lt;/code&gt; with interrupt signal &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;signalProcessGroup int pgid&lt;/code&gt; 调用 &lt;code&gt;kill&lt;/code&gt; 来用中断信号 &lt;code&gt;int&lt;/code&gt; &lt;code&gt;pgid&lt;/code&gt; 组中的所有进程。</target>
        </trans-unit>
        <trans-unit id="13c91da54236e45c36fd001f1da561745fa1f864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skipMany p&lt;/code&gt; applies the parser &lt;code&gt;p&lt;/code&gt;&lt;em&gt;zero&lt;/em&gt; or more times, skipping its result.</source>
          <target state="translated">&lt;code&gt;skipMany p&lt;/code&gt; 将解析器 &lt;code&gt;p&lt;/code&gt; 应用&lt;em&gt;零&lt;/em&gt;次或多次，跳过其结果。</target>
        </trans-unit>
        <trans-unit id="fd3243666dc2a4a55dea6762c3d734849c5a827b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;skipMany1 p&lt;/code&gt; applies the parser &lt;code&gt;p&lt;/code&gt;&lt;em&gt;one&lt;/em&gt; or more times, skipping its result.</source>
          <target state="translated">&lt;code&gt;skipMany1 p&lt;/code&gt; 将解析器 &lt;code&gt;p&lt;/code&gt; &lt;em&gt;一次&lt;/em&gt;或多次应用，跳过其结果。</target>
        </trans-unit>
        <trans-unit id="fe87a301df3e166696a7e70dde2bd92b693b50d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stock&lt;/code&gt;: Have GHC implement a &amp;ldquo;standard&amp;rdquo; instance for a data type, if possible (e.g., &lt;code&gt;Eq&lt;/code&gt;, &lt;code&gt;Ord&lt;/code&gt;, &lt;code&gt;Generic&lt;/code&gt;, &lt;code&gt;Data&lt;/code&gt;, &lt;code&gt;Functor&lt;/code&gt;, etc.)</source>
          <target state="translated">&lt;code&gt;stock&lt;/code&gt; ：如果可能，让GHC为数据类型实现&amp;ldquo;标准&amp;rdquo;实例（例如 &lt;code&gt;Eq&lt;/code&gt; ， &lt;code&gt;Ord&lt;/code&gt; ， &lt;code&gt;Generic&lt;/code&gt; ， &lt;code&gt;Data&lt;/code&gt; ， &lt;code&gt;Functor&lt;/code&gt; 等）</target>
        </trans-unit>
        <trans-unit id="74986175d8266038caefa62ac5e59f42996dccf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string s&lt;/code&gt; parses a sequence of characters given by &lt;code&gt;s&lt;/code&gt;. Returns the parsed string (i.e. &lt;code&gt;s&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;string s&lt;/code&gt; 解析 &lt;code&gt;s&lt;/code&gt; 给定的字符序列。返回已解析的字符串（即 &lt;code&gt;s&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0be1cb00b935dd01926cf0627d3bcb71ec27635f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;product&lt;/code&gt;, &lt;code&gt;maximum&lt;/code&gt;, and &lt;code&gt;minimum&lt;/code&gt; should all be essentially equivalent to &lt;code&gt;foldMap&lt;/code&gt; forms, such as</source>
          <target state="translated">&lt;code&gt;sum&lt;/code&gt; ， &lt;code&gt;product&lt;/code&gt; ， &lt;code&gt;maximum&lt;/code&gt; 和 &lt;code&gt;minimum&lt;/code&gt; 应该基本上都等于 &lt;code&gt;foldMap&lt;/code&gt; 形式，例如</target>
        </trans-unit>
        <trans-unit id="9cde322f2c41ade8bb79e24597dc2f44ca5b188b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t . &lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; = &lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; . &lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; t&lt;/code&gt; for every applicative transformation &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;t . &lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; = &lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; . &lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; t&lt;/code&gt; 每个适用的变换 &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="286fbc3f2e24c73982d6a63e429fda7383660524" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t . &lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt; f = &lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt; (t . f)&lt;/code&gt; for every applicative transformation &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;t . &lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt; f = &lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt; (t . f)&lt;/code&gt; 每个应用变换 &lt;code&gt;t&lt;/code&gt; 的遍历（t。f）</target>
        </trans-unit>
        <trans-unit id="6c4e16b6f9802162989c29abe9e129094dafee5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t . &lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; = &lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; . &lt;a href=&quot;prelude#v:fmap&quot;&gt;fmap&lt;/a&gt; t&lt;/code&gt; for every applicative transformation &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;t . &lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; = &lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt; . &lt;a href=&quot;prelude#v:fmap&quot;&gt;fmap&lt;/a&gt; t&lt;/code&gt; 每个适用的变换 &lt;code&gt;t&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b73b395dd285ab403cad7df445e6f3f3082f0aff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;t . &lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt; f = &lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt; (t . f)&lt;/code&gt; for every applicative transformation &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;t . &lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt; f = &lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt; (t . f)&lt;/code&gt; 每个应用变换 &lt;code&gt;t&lt;/code&gt; 的遍历（t。f）</target>
        </trans-unit>
        <trans-unit id="efd6d2cfb064cae50fe766decb5dfdb2f6546e9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take&lt;/code&gt;, &lt;code&gt;filter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;take&lt;/code&gt; ， &lt;code&gt;filter&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71919383e786fc02ffee26a3052be3266871a72d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;takeMVar&lt;/code&gt; can be interrupted by an asynchronous exception. If this happens, the callback in C will still run at some point in the future, will still write the result, and will still call &lt;code&gt;hs_try_putmvar()&lt;/code&gt;. Therefore we have to arrange that the memory for the result stays alive until the callback has run, so if an exception is thrown during &lt;code&gt;takeMVar&lt;/code&gt; we fork another thread to wait for the callback and hold the memory alive using &lt;code&gt;touchForeignPtr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;takeMVar&lt;/code&gt; 可以被异步异常中断。如果发生这种情况，则C中的回调仍将在将来的某个时刻运行，仍将写入结果，并仍将调用 &lt;code&gt;hs_try_putmvar()&lt;/code&gt; 。因此，我们必须安排结果的内存保持活动状态，直到回调运行为止，因此，如果在 &lt;code&gt;takeMVar&lt;/code&gt; 期间抛出异常，我们将 &lt;code&gt;touchForeignPtr&lt;/code&gt; 另一个线程来等待回调，并使用touchForeignPtr使内存保持活动状态。</target>
        </trans-unit>
        <trans-unit id="0806004cd897adf5e3fdbdd1689fe81a85a3a193" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;touchFile path&lt;/code&gt; sets the access and modification times associated with file &lt;code&gt;path&lt;/code&gt; to the current time.</source>
          <target state="translated">&lt;code&gt;touchFile path&lt;/code&gt; 将与文件 &lt;code&gt;path&lt;/code&gt; 关联的访问和修改时间设置为当前时间。</target>
        </trans-unit>
        <trans-unit id="546955895ba67a1f2fe78c3bc4bc41e85564c2d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; declarations:</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 声明：</target>
        </trans-unit>
        <trans-unit id="c0ac793228c71dc7fba088328f57689df799d75a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;u&lt;/code&gt; &amp;mdash; user events. These are events emitted from Haskell code using functions such as &lt;code&gt;Debug.Trace.traceEvent&lt;/code&gt;. Enabled by default.</source>
          <target state="translated">&lt;code&gt;u&lt;/code&gt; -用户事件。这些是使用诸如 &lt;code&gt;Debug.Trace.traceEvent&lt;/code&gt; 之类的功能从Haskell代码发出的事件。默认启用。</target>
        </trans-unit>
        <trans-unit id="bac91f676ff505dab80496e846b4a80e14109200" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unblockSignals mask&lt;/code&gt; calls &lt;code&gt;sigprocmask&lt;/code&gt; with &lt;code&gt;SIG_UNBLOCK&lt;/code&gt; to remove all interrupts in &lt;code&gt;mask&lt;/code&gt; from the set of blocked interrupts.</source>
          <target state="translated">&lt;code&gt;unblockSignals mask&lt;/code&gt; 使用 &lt;code&gt;SIG_UNBLOCK&lt;/code&gt; 调用 &lt;code&gt;sigprocmask&lt;/code&gt; 来从被屏蔽的中断集中删除 &lt;code&gt;mask&lt;/code&gt; 中的所有中断。</target>
        </trans-unit>
        <trans-unit id="e19ffa0ebfa12476abcd767472f619bfcd6954de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unfoldForest f seeds&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldTree&quot;&gt;unfoldTree&lt;/a&gt;&lt;/code&gt; on each seed value.</source>
          <target state="translated">&lt;code&gt;unfoldForest f seeds&lt;/code&gt; 在每个种子值上调用 &lt;code&gt;&lt;a href=&quot;data-tree#v:unfoldTree&quot;&gt;unfoldTree&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="488e34b3c85668e310a79644972e6a0cc0f4c050" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unfoldTree f b&lt;/code&gt; constructs a tree by starting with the tree &lt;code&gt;Node { rootLabel=b, subForest=[] }&lt;/code&gt; and repeatedly applying &lt;code&gt;f&lt;/code&gt; to each &lt;code&gt;&lt;a href=&quot;data-tree#v:rootLabel&quot;&gt;rootLabel&lt;/a&gt;&lt;/code&gt; value in the tree's leaves to generate its &lt;code&gt;&lt;a href=&quot;data-tree#v:subForest&quot;&gt;subForest&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unfoldTree f b&lt;/code&gt; 通过从树 &lt;code&gt;Node { rootLabel=b, subForest=[] }&lt;/code&gt; 并反复将 &lt;code&gt;f&lt;/code&gt; 应用于树的叶子中的每个 &lt;code&gt;&lt;a href=&quot;data-tree#v:rootLabel&quot;&gt;rootLabel&lt;/a&gt;&lt;/code&gt; 值，以生成其 &lt;code&gt;&lt;a href=&quot;data-tree#v:subForest&quot;&gt;subForest&lt;/a&gt;&lt;/code&gt; ，从而构建树。</target>
        </trans-unit>
        <trans-unit id="c5c0d0af382bafc12f77e85f32fa88d99b7374cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unloadObj&lt;/code&gt; drops the given dynamic library from the symbol table as well as enables the library to be removed from memory during a future major GC.</source>
          <target state="translated">&lt;code&gt;unloadObj&lt;/code&gt; 从符号表中删除给定的动态库，并允许在将来的主要GC中从内存中删除该库。</target>
        </trans-unit>
        <trans-unit id="101f2ddd29363fd0306605ede235ffe98e99f70e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unpackClosure# closure&lt;/code&gt; copies the closure and pointers in the payload of the given closure into two new arrays, and returns a pointer to the first word of the closure's info table, a non-pointer array for the raw bytes of the closure, and a pointer array for the pointers in the payload.</source>
          <target state="translated">&lt;code&gt;unpackClosure# closure&lt;/code&gt; 将闭包和给定闭包的有效负载中的指针复制到两个新数组中，并返回指向闭包的信息表第一个单词的指针，用于闭包原始字节的非指针数组以及一个指针有效负载中的指针的数组。</target>
        </trans-unit>
        <trans-unit id="fe56c4063908142ae106b6be5163c142c0d52eba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unsetEnv name&lt;/code&gt; removes the specified environment variable from the environment of the current process.</source>
          <target state="translated">&lt;code&gt;unsetEnv name&lt;/code&gt; 从当前进程的环境中删除指定的环境变量。</target>
        </trans-unit>
        <trans-unit id="c1d5594570a9a04161ca74be624f7960c0fdf72f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzip&lt;/code&gt;, &lt;code&gt;unzip2&lt;/code&gt;, &lt;code&gt;unzip3&lt;/code&gt;, &lt;code&gt;unzip4&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;unzip&lt;/code&gt; ， &lt;code&gt;unzip2&lt;/code&gt; ， &lt;code&gt;unzip3&lt;/code&gt; ， &lt;code&gt;unzip4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc234395126813de5787b2ab0844753677fb6e91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzipWith&lt;/code&gt; produces its two results in lockstep. If you calculate &lt;code&gt; unzipWith f xs &lt;/code&gt; and fully force &lt;em&gt;either&lt;/em&gt; of the results, then the entire structure of the &lt;em&gt;other&lt;/em&gt; one will be built as well. This behavior allows the garbage collector to collect each calculated pair component as soon as it dies, without having to wait for its mate to die. If you do not need this behavior, you may be better off simply calculating the sequence of pairs and using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; to extract each component sequence.</source>
          <target state="translated">&lt;code&gt;unzipWith&lt;/code&gt; 在锁步中产生两个结果。如果您 &lt;code&gt; unzipWith f xs &lt;/code&gt; 计算unzipWith并完全强制&lt;em&gt;其中&lt;/em&gt;一个结果，那么还将构建&lt;em&gt;另一个&lt;/em&gt;结果的整个结构。此行为允许垃圾收集器在死亡时立即收集每个计算出的对组件，而不必等待其配对对象死亡。如果不需要此行为，则最好只计算对的序列，然后使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; 提取每个组件序列。</target>
        </trans-unit>
        <trans-unit id="1df0cc89a47dbe6ce6069d94344a03d90896a9bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unzipWith&lt;/code&gt; produces its two results in lockstep. If you calculate &lt;code&gt; unzipWith f xs &lt;/code&gt; and fully force &lt;em&gt;either&lt;/em&gt; of the results, then the entire structure of the &lt;em&gt;other&lt;/em&gt; one will be built as well. This behavior allows the garbage collector to collect each calculated pair component as soon as it dies, without having to wait for its mate to die. If you do not need this behavior, you may be better off simply calculating the sequence of pairs and using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; to extract each component sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416424db0eea8d026587dff582e683bbd81b80a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updateParserState f&lt;/code&gt; applies function &lt;code&gt;f&lt;/code&gt; to the parser state.</source>
          <target state="translated">&lt;code&gt;updateParserState f&lt;/code&gt; 适用功能 &lt;code&gt;f&lt;/code&gt; 解析器状态。</target>
        </trans-unit>
        <trans-unit id="d2b7da99b42f639297b767e8ff67542f1759d842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;v1..vn&lt;/code&gt; are type variables, and &lt;code&gt;t&lt;/code&gt;, &lt;code&gt;s1..sk&lt;/code&gt;, &lt;code&gt;t1..tj&lt;/code&gt; are types.</source>
          <target state="translated">&lt;code&gt;v1..vn&lt;/code&gt; 是类型变量， &lt;code&gt;t&lt;/code&gt; ， &lt;code&gt;s1..sk&lt;/code&gt; ， &lt;code&gt;t1..tj&lt;/code&gt; 是类型。</target>
        </trans-unit>
        <trans-unit id="357002452d362f6cfb47953c8fae798bd5f57c66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vertexFromKey :: key -&amp;gt; Maybe Vertex&lt;/code&gt; returns the &lt;code&gt;Int&lt;/code&gt; vertex for the key if it exists in the graph, &lt;code&gt;Nothing&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;vertexFromKey :: key -&amp;gt; Maybe Vertex&lt;/code&gt; 返回键的 &lt;code&gt;Int&lt;/code&gt; 顶点（如果它存在于图中），否则 &lt;code&gt;Nothing&lt;/code&gt; 任何值。</target>
        </trans-unit>
        <trans-unit id="d2f29f83800fb5491f61584614b81837f63da046" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;via&lt;/code&gt;: Use &lt;a href=&quot;#extension-DerivingVia&quot;&gt;&lt;code&gt;DerivingVia&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;#deriving-via&quot;&gt;Deriving via&lt;/a&gt;)</source>
          <target state="translated">&lt;code&gt;via&lt;/code&gt; ：使用&lt;a href=&quot;#extension-DerivingVia&quot;&gt; &lt;code&gt;DerivingVia&lt;/code&gt; &lt;/a&gt;（请参阅&lt;a href=&quot;#deriving-via&quot;&gt;通过导出&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="a16dd80212d6b6ff9f1328d470ef1b17023bdf9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;w&lt;/code&gt; - the output to accumulate.</source>
          <target state="translated">&lt;code&gt;w&lt;/code&gt; -要累积的输出。</target>
        </trans-unit>
        <trans-unit id="5ae241bd707600cfac66e75bb696f2fab5ccfa4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;gt; y&lt;/code&gt; = &lt;code&gt;compare x y == GT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;gt; y&lt;/code&gt; = &lt;code&gt;compare x y == GT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ad96211a0464e341b29628255c9196c833c6b49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;gt; y&lt;/code&gt; = &lt;code&gt;y &amp;lt; x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;gt; y&lt;/code&gt; = &lt;code&gt;y &amp;lt; x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="21e206a9fafe0d666e622b4a7c2cc3622dbf3f78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;gt;= y&lt;/code&gt; = &lt;code&gt;y &amp;lt;= x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;gt;= y&lt;/code&gt; = &lt;code&gt;y &amp;lt;= x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c5aa3feae6a58a1951e17fb22c0c5dcde77347f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt; y&lt;/code&gt; = &lt;code&gt;compare x y == LT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;lt; y&lt;/code&gt; = &lt;code&gt;compare x y == LT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a9c7cfb5259bcfba9ab0dd4ebcc6ea895494fb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt; y&lt;/code&gt; = &lt;code&gt;x &amp;lt;= y &amp;amp;&amp;amp; x /= y&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;lt; y&lt;/code&gt; = &lt;code&gt;x &amp;lt;= y &amp;amp;&amp;amp; x /= y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0566b8324fef43fa53a2e00b874148a34ed135cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt;- e1 | s2, s3 | s4&lt;/code&gt; (in &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:CompE&quot;&gt;CompE&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;x &amp;lt;- e1 | s2, s3 | s4&lt;/code&gt; （在 &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:CompE&quot;&gt;CompE&lt;/a&gt;&lt;/code&gt; 中）</target>
        </trans-unit>
        <trans-unit id="df851ee1aa0a627d07400ff7d24ff292f310106f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt;- e1 | s2, s3 | s4&lt;/code&gt; (in &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:CompE&quot;&gt;CompE&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;x &amp;lt;- e1 | s2, s3 | s4&lt;/code&gt; （在 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:CompE&quot;&gt;CompE&lt;/a&gt;&lt;/code&gt; 中）</target>
        </trans-unit>
        <trans-unit id="0e543755ace2ae50599cf3a46be72a5c50c36024" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt;= x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;lt;= x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae323fb462f45fd714b64e9e0e517235a5743af7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &amp;lt;= x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x &amp;lt;= x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5847085f71415dd64a10a3ce4c86668cee52ef5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x * fromInteger 1&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;fromInteger 1 * x&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x * fromInteger 1&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;fromInteger 1 * x&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb3af3bd4ac91546545e6e62f7ae83fb9fa6691b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x * recip x&lt;/code&gt; = &lt;code&gt;recip x * x&lt;/code&gt; = &lt;code&gt;fromInteger 1&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x * recip x&lt;/code&gt; = &lt;code&gt;recip x * x&lt;/code&gt; = 来自整数 &lt;code&gt;fromInteger 1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0db8141a78e42c3a72acceb8bcef50d72e32db11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x + fromInteger 0&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x + fromInteger 0&lt;/code&gt; = &lt;code&gt;x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="329576ccdcce234a221f901194ef52303fc77904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x + negate x&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x + negate x&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8628b8534b0bc7e99ec149abde799f2ba773658c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x + y&lt;/code&gt; = &lt;code&gt;y + x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x + y&lt;/code&gt; = &lt;code&gt;y + x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf4724f88cb57f27ab7b605e932de14bbcc85988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x /= y&lt;/code&gt; = &lt;code&gt;not (x == y)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x /= y&lt;/code&gt; = &lt;code&gt;not (x == y)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a21fdaa9c0b28d2e6457c85b6d8d0dc0eaa54189" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; law)</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 定律）</target>
        </trans-unit>
        <trans-unit id="dac335da7d714294b4d21d230cb3b6ae9c38b26e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; law)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd2c97c423b20f70854c0cff7205332082d21fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; law)</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 定律）</target>
        </trans-unit>
        <trans-unit id="be2da3669cdcb52cb3ee73a2b65c9a829f34930b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; law)</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 定律）</target>
        </trans-unit>
        <trans-unit id="5d0de2d5e3f27b15cb77f8c3c340f938ed7df7d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; law)</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; (y &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z) = (x &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y) &lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; z&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; 定律）</target>
        </trans-unit>
        <trans-unit id="c84d85e90b905ea5d153c2e0e814ac1f301d5cf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-annotated#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt;, if &lt;code&gt;x&lt;/code&gt; non-empty</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-annotated#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-annotated#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt; （如果 &lt;code&gt;x&lt;/code&gt; 为非空）</target>
        </trans-unit>
        <trans-unit id="e9391da006c7f19060d8cf8ccc10b373d54d3f13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt;, if &lt;code&gt;x&lt;/code&gt; non-empty</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-annotated-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt; （如果 &lt;code&gt;x&lt;/code&gt; 为非空）</target>
        </trans-unit>
        <trans-unit id="3f50b0eb9de4bb7f00d66b4586a69b27604f7656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-hughespj#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt;, if &lt;code&gt;x&lt;/code&gt; non-empty</source>
          <target state="translated">&lt;code&gt;x &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; &lt;a href=&quot;text-prettyprint-hughespj#v:nest&quot;&gt;nest&lt;/a&gt; k y = x &lt;a href=&quot;text-prettyprint-hughespj#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt; y&lt;/code&gt; （如果 &lt;code&gt;x&lt;/code&gt; 为非空）</target>
        </trans-unit>
        <trans-unit id="8e2ac0b3b48aa34bb5e8880b2bcbb579362b11b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x == x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x == x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f84a736278499a1263563c915ebbb19128e9bacd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x == x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x == x&lt;/code&gt; = &lt;code&gt;&lt;a href=&quot;prelude#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d66f413f4cdc855e0b3fe3756077f1da3b373e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x == y&lt;/code&gt; = &lt;code&gt;compare x y == EQ&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x == y&lt;/code&gt; = &lt;code&gt;compare x y == EQ&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="601b2d6b723d90b16f4b9e84daa0b87ef9fa6a82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x == y&lt;/code&gt; = &lt;code&gt;y == x&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x == y&lt;/code&gt; = &lt;code&gt;y == x&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c15f4082bad64847b2240917d3e12b1e3b9d34f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x `clearBit` i&lt;/code&gt; is the same as &lt;code&gt;x .&amp;amp;. complement (bit i)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x `clearBit` i&lt;/code&gt; 与 &lt;code&gt;x .&amp;amp;. complement (bit i)&lt;/code&gt; 相同。补码（位i）</target>
        </trans-unit>
        <trans-unit id="c0ea9caeb1827a2f4126e11b0540e03dc0d9cf05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x `complementBit` i&lt;/code&gt; is the same as &lt;code&gt;x `xor` bit i&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x `complementBit` i&lt;/code&gt; 是一样的 &lt;code&gt;x `xor` bit i&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05d9716de33bb9f08b4a4690f0c099084b01f466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x `setBit` i&lt;/code&gt; is the same as &lt;code&gt;x .|. bit i&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x `setBit` i&lt;/code&gt; 与 &lt;code&gt;x .|. bit i&lt;/code&gt; 相同。咬我</target>
        </trans-unit>
        <trans-unit id="7982d2b1e3786a2550caade576c79f50aa8da8e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; = &lt;code&gt;y * div x y + mod x y&lt;/code&gt; with &lt;code&gt;mod x y&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt; or &lt;code&gt;f (mod x y)&lt;/code&gt; &amp;lt; &lt;code&gt;f y&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; = &lt;code&gt;y * div x y + mod x y&lt;/code&gt; 与 &lt;code&gt;mod x y&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt; 或 &lt;code&gt;f (mod x y)&lt;/code&gt; &amp;lt; &lt;code&gt;f y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d569428b655a245498a73da1168b267093dea2d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;x&lt;/code&gt; = &lt;code&gt;y * quot x y + rem x y&lt;/code&gt; with &lt;code&gt;rem x y&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt; or &lt;code&gt;g (rem x y)&lt;/code&gt; &amp;lt; &lt;code&gt;g y&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; = &lt;code&gt;y * quot x y + rem x y&lt;/code&gt; 与 &lt;code&gt;rem x y&lt;/code&gt; = &lt;code&gt;fromInteger 0&lt;/code&gt; 或 &lt;code&gt;g (rem x y)&lt;/code&gt; &amp;lt; &lt;code&gt;g y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e222eb3b2732525891741d8fd5b65ec684d36fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xs !! n&lt;/code&gt; returns the element of the stream &lt;code&gt;xs&lt;/code&gt; at index &lt;code&gt;n&lt;/code&gt;. Note that the head of the stream has index 0.</source>
          <target state="translated">&lt;code&gt;xs !! n&lt;/code&gt; 返回索引为 &lt;code&gt;n&lt;/code&gt; 的流 &lt;code&gt;xs&lt;/code&gt; 的元素。请注意，流的头具有索引0。</target>
        </trans-unit>
        <trans-unit id="b5370b7f8201938b5ed2347f8567872fae6d4ba8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy-mm-dd&lt;/code&gt; (ISO 8601:2004(E) sec. 4.1.2.2 extended format)</source>
          <target state="translated">&lt;code&gt;yyyy-mm-dd&lt;/code&gt; （ISO 8601：2004（E）秒4.1.2.2扩展格式）</target>
        </trans-unit>
        <trans-unit id="8e41d3d8eebba40636821057acdc4ac6f852d3b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]&amp;plusmn;hh:mm&lt;/code&gt; (ISO 8601:2004(E) sec. 4.3.2 extended format)</source>
          <target state="translated">&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]&amp;plusmn;hh:mm&lt;/code&gt; （ISO 8601：2004（E）秒4.3.2扩展格式）</target>
        </trans-unit>
        <trans-unit id="5bc9d75ce0ced05428136eb2d477a013f2242efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]&lt;/code&gt; (ISO 8601:2004(E) sec. 4.3.2 extended format)</source>
          <target state="translated">&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]&lt;/code&gt; （ISO 8601：2004（E）秒4.3.2扩展格式）</target>
        </trans-unit>
        <trans-unit id="107b9eb89699287951fb08339c754900dcfed7d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]Z&lt;/code&gt; (ISO 8601:2004(E) sec. 4.3.2 extended format)</source>
          <target state="translated">&lt;code&gt;yyyy-mm-ddThh:mm:ss[.sss]Z&lt;/code&gt; （ISO 8601：2004（E）秒4.3.2扩展格式）</target>
        </trans-unit>
        <trans-unit id="365adfe40f8a5c6e9d0a613a2e994422a5f6ceaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;z&lt;/code&gt; stack squeezing &amp;amp; lazy blackholing</source>
          <target state="translated">&lt;code&gt;z&lt;/code&gt; 堆栈压缩和懒人黑洞</target>
        </trans-unit>
        <trans-unit id="f066afb123e9bdff92af0060a807878ad49bd101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;zipWith&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;zip&lt;/code&gt; ， &lt;code&gt;zipWith&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d9bb6877312ac648655613406340d15e406705f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;zipWith&lt;/code&gt; (but on one argument only; if both are good producers, &lt;code&gt;zip&lt;/code&gt; will fuse with one but not the other)</source>
          <target state="translated">&lt;code&gt;zip&lt;/code&gt; ， &lt;code&gt;zipWith&lt;/code&gt; （但仅在一个参数上使用；如果两者都是好的生产者，则 &lt;code&gt;zip&lt;/code&gt; 会与一个融合而不是另一个）</target>
        </trans-unit>
        <trans-unit id="dec683c6c6f4a929a3a633e0aa9cea036ac78cc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ #x }&lt;/code&gt; ( Overloaded label )</source>
          <target state="translated">&lt;code&gt;{ #x }&lt;/code&gt; （重载标签）</target>
        </trans-unit>
        <trans-unit id="65f3bf090257dbf312605b17d03be9ddeb722510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ ?x }&lt;/code&gt; ( Implicit parameter )</source>
          <target state="translated">&lt;code&gt;{ ?x }&lt;/code&gt; （隐式参数）</target>
        </trans-unit>
        <trans-unit id="b742b01ff7fc5676d44094a9a942f4ee62692d0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{ pattern P v1 v2 .. vn &amp;lt;- p }&lt;/code&gt; unidirectional or &lt;code&gt;{ pattern P v1 v2 .. vn = p  }&lt;/code&gt; implicit bidirectional or &lt;code&gt;{ pattern P v1 v2 .. vn &amp;lt;- p
        where P v1 v2 .. vn = e  }&lt;/code&gt; explicit bidirectional</source>
          <target state="translated">&lt;code&gt;{ pattern P v1 v2 .. vn &amp;lt;- p }&lt;/code&gt; 单向或 &lt;code&gt;{ pattern P v1 v2 .. vn = p }&lt;/code&gt; 隐含双向或 &lt;code&gt;{ pattern P v1 v2 .. vn &amp;lt;- p where P v1 v2 .. vn = e }&lt;/code&gt; 显式双向的</target>
        </trans-unit>
        <trans-unit id="08f08f91cafaaeed1e2f80fb876e8abf6eb37748" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(deprecated)&lt;/em&gt; warn about polymorphic local bindings without signatures</source>
          <target state="translated">&lt;em&gt;（不建议使用）&lt;/em&gt;警告没有签名的多态局部绑定</target>
        </trans-unit>
        <trans-unit id="b3856f9d445424436029ce02ffea084bea60b0f0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(deprecated)&lt;/em&gt; warn about top-level functions without signatures, only if they are exported. takes precedence over -Wmissing-signatures</source>
          <target state="translated">&lt;em&gt;（不建议使用）&lt;/em&gt;仅在没有签名的情况下警告顶级函数。优先于-Wmissing-Signatures</target>
        </trans-unit>
        <trans-unit id="82289b73295a37e000437a3a2561ca5ef13c5b45" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(deprecated)&lt;/em&gt; warn when a &lt;code&gt;.hi&lt;/code&gt; file in the current directory shadows a library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5434178603c89ab9c0003e067becad16160ce143" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A New Notation for Arrows&lt;/em&gt;, by Ross Paterson, in &lt;em&gt;ICFP 2001&lt;/em&gt;, Firenze, Italy, pp229-240.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;罗斯&amp;middot;帕特森（Ross Paterson）所著的《&lt;em&gt;箭的新符号》&lt;/em&gt;，作者：&lt;em&gt;ICFP 2001&lt;/em&gt;，意大利佛罗伦萨，第229-240页。</target>
        </trans-unit>
        <trans-unit id="7dd53ed299ffea23c0efeba5f0f67ff24095eae8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A historical note.&lt;/em&gt; GHC used to impose some more restrictive and less principled conditions on type signatures. For type &lt;code&gt;forall tv1..tvn (c1, ...,cn) =&amp;gt; type&lt;/code&gt; GHC used to require</source>
          <target state="translated">&lt;em&gt;历史笔记。&lt;/em&gt;GHC过去对类型签名施加了更多限制性和原则性较小的条件。对于类型 &lt;code&gt;forall tv1..tvn (c1, ...,cn) =&amp;gt; type&lt;/code&gt; 用于要求的GHC 类型</target>
        </trans-unit>
        <trans-unit id="2a00c3f3848ad82951e14175e94f6a827986c411" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A semantics for imprecise exceptions&lt;/em&gt;, by Simon Peyton Jones, Alastair Reid, Tony Hoare, Simon Marlow, Fergus Henderson, in &lt;em&gt;PLDI'99&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;不精确异常的语义&lt;/em&gt;，作者：Simon Peyton Jones，Alastair Reid，Tony Hoare，Simon Marlow，Fergus Henderson，&lt;em&gt;摘自PLDI'99&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="09c6a41a7c624e1766c417db16cd4d57741cd08c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;All&lt;/em&gt; bindings not marked INLINE, whether exported or not, top level or nested, will be given automatic &lt;code&gt;SCC&lt;/code&gt; annotations. Functions marked INLINE must be given a cost centre manually.</source>
          <target state="translated">&lt;em&gt;所有&lt;/em&gt;未标记为INLINE的绑定（无论是否导出），无论是顶层还是嵌套的，都将被赋予自动 &lt;code&gt;SCC&lt;/code&gt; 注释。标记为INLINE的功能必须手动设置成本中心。</target>
        </trans-unit>
        <trans-unit id="eabcd5305055073d7c098ef6fb1bbbe77609b9d6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;An Extensible Dynamically-Typed Hierarchy of Exceptions&lt;/em&gt;, by Simon Marlow, in &lt;em&gt;Haskell '06&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;西蒙&amp;middot;马洛（Simon Marlow）在&lt;em&gt;Haskell '06中&lt;/em&gt;&lt;em&gt;的可扩展的动态类型异常层次结构&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a159a782aa2062cb24e8bedbd52d57211a37694f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Asynchronous exceptions in Haskell&lt;/em&gt;, by Simon Marlow, Simon Peyton Jones, Andy Moran and John Reppy, in &lt;em&gt;PLDI'01&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;Simon Marlow，Simon Peyton Jones，Andy Moran和John Reppy &lt;em&gt;在Haskell中的异步异常&lt;/em&gt;，在&lt;em&gt;PLDI'01中&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ceb4edf2d3bf3be61162934272e34eec9c7133ac" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Beware&lt;/em&gt;: a negative or out-of-bounds index will cause an error.</source>
          <target state="translated">&lt;em&gt;当心&lt;/em&gt;：负数或越界索引将导致错误。</target>
        </trans-unit>
        <trans-unit id="87e33a6ffeff3f5fd99e5613b63ed994c721b2ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Bounded(-size) primitives&lt;/em&gt; are builder primitives that always result in a sequence of bytes that is no larger than a predetermined bound. That is, the bound is independent of the value that is encoded but the actual length will depend on the value. An example for a bounded primitive is the UTF-8 encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;, which can be 1,2,3 or 4 bytes long, so the bound is 4 bytes.</source>
          <target state="translated">&lt;em&gt;有界（大小）原语&lt;/em&gt;是生成器原语，它们始终导致不大于预定界限的字节序列。也就是说，边界与编码值无关，但是实际长度将取决于该值。有界原语的一个示例是 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; 的UTF-8编码，其长度可以为1,2,3或4个字节，因此界限为4个字节。</target>
        </trans-unit>
        <trans-unit id="a55cd548f9ce635bab44c817ce4170e41a9a84ea" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Bounded(-size) primitives&lt;/em&gt; are builder primitives that always result in a sequence of bytes that is no larger than a predetermined bound. That is, the bound is independent of the value that is encoded but the actual length will depend on the value. An example for a bounded primitive is the UTF-8 encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;, which can be 1,2,3 or 4 bytes long, so the bound is 4 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5d31373296c3101d3eceeac03e8610ad0a71ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Changes since 1.2.3.0:&lt;/em&gt; The function has been altered to be more robust and has the same exception behavior as &lt;code&gt;&lt;a href=&quot;system-directory#v:makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;从1.2.3.0&lt;/em&gt;开始的更改&lt;em&gt;：&lt;/em&gt;函数已更改为更健壮，并且具有与 &lt;code&gt;&lt;a href=&quot;system-directory#v:makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt;&lt;/code&gt; 相同的异常行为。</target>
        </trans-unit>
        <trans-unit id="a86c602774d4cd617593f2c4c7874eb80693a5ee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Changes since 1.3.0.0:&lt;/em&gt; The function no longer preserves the trailing path separator. File symbolic links that appear in the middle of a path are properly dereferenced. Case canonicalization and symbolic link expansion are now performed on Windows.</source>
          <target state="translated">&lt;em&gt;从1.3.0.0开始的更改：&lt;/em&gt;该函数不再保留尾随路径分隔符。正确取消引用出现在路径中间的文件符号链接。现在在Windows上执行大小写规范化和符号链接扩展。</target>
        </trans-unit>
        <trans-unit id="bfb3e1295f6692bfe6aaae665399f93c2bc26cb4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compatibility note:&lt;/em&gt; Prior to base 4.7, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; was a combination of &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;. This mean that in the presence of other threads attempting to &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; could block. Furthermore, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; would not receive the next &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; if there was already a pending thread blocked on &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;. The old behavior can be recovered by implementing 'readMVar as follows:</source>
          <target state="translated">&lt;em&gt;兼容性说明：&lt;/em&gt;在基础4.7之前， &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 的组合。这意味着在存在其他尝试 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 的线程的情况下，readMVar可能会阻塞。此外，如果 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 上已经阻塞了一个挂起的线程，则 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 将不会接收下一个 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 。可以通过实现'readMVar如下来恢复旧行为：</target>
        </trans-unit>
        <trans-unit id="319ca43387d89f62710ae2d4d129701ab966ab80" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compatibility note:&lt;/em&gt; Prior to base 4.7, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; was a combination of &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;. This mean that in the presence of other threads attempting to &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; could block. Furthermore, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; would not receive the next &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; if there was already a pending thread blocked on &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;. The old behavior can be recovered by implementing 'readMVar as follows:</source>
          <target state="translated">&lt;em&gt;兼容性说明：&lt;/em&gt;在基础4.7之前， &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 的组合。这意味着在存在其他尝试 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 的线程的情况下，readMVar可能会阻塞。此外，如果 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 上已经阻塞了一个挂起的线程，则 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 将不会接收下一个 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 。可以通过实现'readMVar如下来恢复旧行为：</target>
        </trans-unit>
        <trans-unit id="e2ac360117f063d2978509684266f81d0b959b00" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Compatibility note:&lt;/em&gt; Prior to base 4.7, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; was a combination of &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;. This mean that in the presence of other threads attempting to &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; could block. Furthermore, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; would not receive the next &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; if there was already a pending thread blocked on &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;. The old behavior can be recovered by implementing 'readMVar as follows:</source>
          <target state="translated">&lt;em&gt;兼容性说明：&lt;/em&gt;在基础4.7之前， &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 是 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 的组合。这意味着在存在其他尝试 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 的线程的情况下，readMVar可能会阻塞。此外，如果 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 上已经阻塞了一个挂起的线程，则 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; 将不会接收下一个 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 。可以通过实现'readMVar如下来恢复旧行为：</target>
        </trans-unit>
        <trans-unit id="c030f78766179d99d8e90f096f9040d5014a348c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Composable memory transactions&lt;/em&gt;, by Tim Harris, Simon Marlow, Simon Peyton Jones, and Maurice Herlihy, in &lt;em&gt;ACM Conference on Principles and Practice of Parallel Programming&lt;/em&gt; 2005. &lt;a href=&quot;https://www.microsoft.com/en-us/research/publication/composable-memory-transactions/&quot;&gt;https://www.microsoft.com/en-us/research/publication/composable-memory-transactions/&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;可组合的内存交易&lt;/em&gt;，由蒂姆&amp;middot;哈里斯，西蒙&amp;middot;马洛，西蒙佩顿琼斯和莫里斯&amp;middot;赫，在&lt;em&gt;ACM会议上原则和并行编程的实践&lt;/em&gt; 2005年&lt;a href=&quot;https://www.microsoft.com/en-us/research/publication/composable-memory-transactions/&quot;&gt;https://www.microsoft.com/en-us/research/publication/composable -内存交易/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1384236f2def3ab4fc185f94284fcd38ee43b6a4" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Concurrency&lt;/em&gt; means implementing a program by using multiple I/O-performing threads. While a concurrent Haskell program &lt;em&gt;can&lt;/em&gt; run on a parallel machine, the primary goal of using concurrency is not to gain performance, but rather because that is the simplest and most direct way to write the program. Since the threads perform I/O, the semantics of the program is necessarily non-deterministic.</source>
          <target state="translated">&lt;em&gt;并发&lt;/em&gt;意味着使用多个I / O执行线程来实现程序。虽然并发的Haskell程序&lt;em&gt;可以&lt;/em&gt;在并行计算机上运行，​​但是使用并发的主要目的不是提高性能，而是因为这是编写程序的最简单，最直接的方法。由于线程执行I / O，因此程序的语义必然是不确定的。</target>
        </trans-unit>
        <trans-unit id="9769d80734ce4bf34dc95f0640efe2c479cd90ba" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Currently slow.&lt;/em&gt; Decimal encoding of an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;目前进展缓慢。&lt;/em&gt;IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 的十进制编码。</target>
        </trans-unit>
        <trans-unit id="ab5e6587c0995d55a3684ee1cd14c3397310ad1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Currently slow.&lt;/em&gt; Decimal encoding of an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;目前进展缓慢。&lt;/em&gt;IEEE &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 的十进制编码。</target>
        </trans-unit>
        <trans-unit id="a7c470140844c8efa9ac7828527d2f6848e1675a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Currently slow.&lt;/em&gt; Decimal encoding of an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501105d057ba603d5e0fe6107331cbb752e4f08a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Currently slow.&lt;/em&gt; Decimal encoding of an IEEE &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef633ea41ab3c775f849cd0c8d5925778e5fd72" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Deprecated&lt;/em&gt;. Decode a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; containing 7-bit ASCII encoded text.</source>
          <target state="translated">&lt;em&gt;不推荐使用&lt;/em&gt;。解码包含7位ASCII编码文本的 &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6587719ee839def4397854c915e327d0c7ab7343" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Deprecated&lt;/em&gt;. Decode a &lt;code&gt;ByteString&lt;/code&gt; containing 7-bit ASCII encoded text.</source>
          <target state="translated">&lt;em&gt;不推荐使用&lt;/em&gt;。解码包含7位ASCII编码文本的 &lt;code&gt;ByteString&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35a4beb7d9ace7831ced9f276401139e209978e5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Either&lt;/em&gt; the class has no functional dependencies, and none of the type constructors in the instance head is declared in &lt;code&gt;M&lt;/code&gt;; &lt;em&gt;or&lt;/em&gt; there is a functional dependency for which none of the type constructors mentioned in the &lt;em&gt;non-determined&lt;/em&gt; part of the instance head is defined in &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;任一&lt;/em&gt;类没有函数依赖，并没有在头中声明的实例的类型构造函数 &lt;code&gt;M&lt;/code&gt; ; &lt;em&gt;或&lt;/em&gt;存在一个功能依赖关系，因此在 &lt;code&gt;M&lt;/code&gt; 中未定义实例头&lt;em&gt;的未确定&lt;/em&gt;部分中提到的所有类型构造函数。</target>
        </trans-unit>
        <trans-unit id="69d233ec3e7419b821cebae877ba853dd31f9606" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 1:&lt;/em&gt; Find the possible locations of a Haskell module &lt;code&gt;Test&lt;/code&gt; imported from module &lt;code&gt;Main&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;示例1：&lt;/em&gt;查找从模块 &lt;code&gt;Main&lt;/code&gt; 导入的Haskell模块 &lt;code&gt;Test&lt;/code&gt; 的可能位置：</target>
        </trans-unit>
        <trans-unit id="36ca18a44d985a8cfc24a08857c736aaad181a9e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 2:&lt;/em&gt; Download a file from &lt;code&gt;url&lt;/code&gt; and save it to disk:</source>
          <target state="translated">&lt;em&gt;示例2：&lt;/em&gt;从 &lt;code&gt;url&lt;/code&gt; 下载文件并将其保存到磁盘：</target>
        </trans-unit>
        <trans-unit id="ae3939ddef267bbf4bf180d9366e5d8818f80256" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Example 3:&lt;/em&gt; Compile a Haskell file, putting the &lt;code&gt;.hi&lt;/code&gt; file under &lt;code&gt;interface&lt;/code&gt;:</source>
          <target state="translated">&lt;em&gt;示例3：&lt;/em&gt;编译Haskell文件，并将 &lt;code&gt;.hi&lt;/code&gt; 文件放在 &lt;code&gt;interface&lt;/code&gt; 下：</target>
        </trans-unit>
        <trans-unit id="a6a420b71e7be83e3bb04156ec688b47d49eebd5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Experimental.&lt;/em&gt; Read a single chunk of strict text from a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The size of the chunk depends on the amount of input currently buffered.</source>
          <target state="translated">&lt;em&gt;实验性的。&lt;/em&gt;从 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 中读取一小段严格的文本。块的大小取决于当前缓冲的输入量。</target>
        </trans-unit>
        <trans-unit id="5944546a01ded45bf6275d83e88add520a72327d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Explicit&lt;/em&gt; &amp;mdash; This gives your library a stable Safe Haskell type that others can depend on. However, it will increase the chance of compilation failure when your package dependencies change.</source>
          <target state="translated">&lt;em&gt;显式&lt;/em&gt; -这为您的库提供了其他人可以依赖的稳定的Safe Haskell类型。但是，当您的程序包依赖项更改时，它将增加编译失败的机会。</target>
        </trans-unit>
        <trans-unit id="f9fb7085892243540161ce1e4eca53598f72dc30" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fixed size&lt;/em&gt;: All event records of a fixed-sized type are of the same length, given in the header event-log header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea33a4779416b430a5ae6cc265baf4a73107f69f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fixed(-size) primitives&lt;/em&gt; are builder primitives that always result in a sequence of bytes of a fixed length. That is, the length is independent of the value that is encoded. An example of a fixed size primitive is the big-endian encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;, which always results in exactly 8 bytes.</source>
          <target state="translated">&lt;em&gt;固定（大小）原语&lt;/em&gt;是生成器原语，它们总是导致固定长度的字节序列。即，长度与编码值无关。固定大小原语的一个示例是 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt; 的big-endian编码，该编码总是精确地为8个字节。</target>
        </trans-unit>
        <trans-unit id="e3a525b75e447e5dd355cddf7b622e8bf3ab9d4d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fixed(-size) primitives&lt;/em&gt; are builder primitives that always result in a sequence of bytes of a fixed length. That is, the length is independent of the value that is encoded. An example of a fixed size primitive is the big-endian encoding of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word64&quot;&gt;Word64&lt;/a&gt;&lt;/code&gt;, which always results in exactly 8 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3289dcdadb15f8d3934b93eb40f90927bb216d11" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; is a better choice. Since GHC uses signals for its internal clock, a call to &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; will usually be interrupted immediately. That makes &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; unusable in a program compiled with GHC, unless the RTS timer is disabled (with &lt;code&gt;+RTS -V0&lt;/code&gt;). Furthermore, without the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; will block all other user threads. Even with the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; requires a full OS thread to itself. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; has none of these shortcomings.</source>
          <target state="translated">&lt;em&gt;GHC注意&lt;/em&gt;： &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 是更好的选择。由于GHC将信号用作其内部时钟，因此进入 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 通常会立即中断。除非禁用RTS计时器（使用 &lt;code&gt;+RTS -V0&lt;/code&gt; ），否则这将导致在使用GHC编译的程序中无法使用 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 。此外，如果没有 &lt;code&gt;-threaded&lt;/code&gt; 选项， &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 将阻止所有其他用户线程。即使使用 &lt;code&gt;-threaded&lt;/code&gt; 选项， &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; 需要完整的OS线程。 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 没有这些缺点。</target>
        </trans-unit>
        <trans-unit id="a15d5da49c36e04ca679f2d22b36974f7d9740c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; is a better choice. Without the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; will block all other user threads. Even with the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; requires a full OS thread to itself. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; has neither of these shortcomings.</source>
          <target state="translated">&lt;em&gt;GHC注意&lt;/em&gt;： &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 是更好的选择。如果没有 &lt;code&gt;-threaded&lt;/code&gt; 选项，则 &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; 将阻止所有其他用户线程。即使使用 &lt;code&gt;-threaded&lt;/code&gt; 选项， &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; 本身也需要完整的OS线程。 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; 没有这些缺点。</target>
        </trans-unit>
        <trans-unit id="8554363f3811b7724bb7944656ead45e58c9ca22" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; is a better choice. Since GHC uses signals for its internal clock, a call to &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; will usually be interrupted immediately. That makes &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; unusable in a program compiled with GHC, unless the RTS timer is disabled (with &lt;code&gt;+RTS -V0&lt;/code&gt;). Furthermore, without the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; will block all other user threads. Even with the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:sleep&quot;&gt;sleep&lt;/a&gt;&lt;/code&gt; requires a full OS thread to itself. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; has none of these shortcomings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6525d7f5973bf76c3974e6f50a56f3a9b6b4511" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; is a better choice. Without the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; will block all other user threads. Even with the &lt;code&gt;-threaded&lt;/code&gt; option, &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; requires a full OS thread to itself. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; has neither of these shortcomings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83e572121dc84da38a01487077757af11bf4ef2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;GHC Note&lt;/em&gt;: the comment for &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; also applies here.</source>
          <target state="translated">&lt;em&gt;GHC注意&lt;/em&gt;： &lt;code&gt;&lt;a href=&quot;system-posix-unistd#v:usleep&quot;&gt;usleep&lt;/a&gt;&lt;/code&gt; 的注释也适用于此处。</target>
        </trans-unit>
        <trans-unit id="45ed8bb553ac516567f209502f17b7cd7842b213" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Generalising Monads to Arrows&lt;/em&gt;, by John Hughes, &lt;em&gt;Science of Computer Programming&lt;/em&gt; 37, pp67-111, May 2000.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;约翰&amp;middot;休斯（John Hughes）的《将&lt;em&gt;Monads转换为箭头》&lt;/em&gt;，&lt;em&gt;计算机编程科学&lt;/em&gt; 37，第67-111页，2000年5月。</target>
        </trans-unit>
        <trans-unit id="cf486314cf99cc4ced55abbd834a237e04e41a59" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Generic instances&lt;/em&gt; for the function, implementing it for most of the representation type constructors introduced above.</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;该函数的&lt;em&gt;通用实例，&lt;/em&gt;为上面介绍的大多数表示形式构造函数实现。</target>
        </trans-unit>
        <trans-unit id="b308dc3ee1f74f1a781f4782dc2dad4ef82ae33f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Haskell Language&lt;/em&gt; &amp;mdash; Restricted to Safe Language</source>
          <target state="translated">&lt;em&gt;Haskell语言&lt;/em&gt; -仅限安全语言</target>
        </trans-unit>
        <trans-unit id="aad50340bc609ad76fc76adb4f31485b5cd83ba8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Haskell Language&lt;/em&gt; &amp;mdash; Unrestricted</source>
          <target state="translated">&lt;em&gt;Haskell语言&lt;/em&gt; -不受限制</target>
        </trans-unit>
        <trans-unit id="5ebaf0411167ad857d8dc7d2ae7807288079f228" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Haskell Language&lt;/em&gt; &amp;mdash; Unrestricted, except only safe overlapping instances allowed.</source>
          <target state="translated">&lt;em&gt;Haskell语言&lt;/em&gt; -无限制，只允许安全重叠的实例。</target>
        </trans-unit>
        <trans-unit id="8151fcb8906a3769463bbe914723d5ffce1fc8d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Heavy inlining.&lt;/em&gt; Encode all bytes of a lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; from left-to-right with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;大量的内联。&lt;/em&gt;使用 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; 从左到右对惰性 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 的所有字节进行编码。</target>
        </trans-unit>
        <trans-unit id="214dabd485077503a8b6a7f38e082f535e1df6da" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Heavy inlining.&lt;/em&gt; Encode all bytes of a strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; from left-to-right with a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt;. This function is quite versatile. For example, we can use it to construct a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; that maps every byte before copying it to the buffer to be filled.</source>
          <target state="translated">&lt;em&gt;大量的内联。&lt;/em&gt;使用 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; 从左到右编码严格 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 的所有字节。此功能非常通用。例如，我们可以使用它来构造一个 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; ，该Builder映射每个字节，然后将其复制到要填充的缓冲区。</target>
        </trans-unit>
        <trans-unit id="0fed53e9a2b24ad96627ee523d518c9c0c02b955" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Heavy inlining.&lt;/em&gt; Execute a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; with custom execution parameters.</source>
          <target state="translated">&lt;em&gt;大量的内联。&lt;/em&gt;使用自定义执行参数执行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="22fb4fc692075d9d0e85632e980c98ab05962217" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Heavy inlining.&lt;/em&gt; Execute a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; with custom execution parameters.</source>
          <target state="translated">&lt;em&gt;大量的内联。&lt;/em&gt;使用自定义执行参数执行 &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="407e90695fb9cc9626dbcdc9743dd1dd428fd272" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Hint:&lt;/em&gt; You can obtain information about the code being generated from GHC by passing the &lt;code&gt;-ddump-deriv&lt;/code&gt; flag. In GHCi, you can expand a type family such as &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;:kind!&lt;/code&gt; command.</source>
          <target state="translated">&lt;em&gt;提示：&lt;/em&gt;您可以通过传递 &lt;code&gt;-ddump-deriv&lt;/code&gt; 标志来获取有关从GHC生成的代码的信息。在GHCi中，您可以使用 &lt;code&gt;:kind!&lt;/code&gt; 扩展诸如 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt; 之类的类型族！命令。</target>
        </trans-unit>
        <trans-unit id="276947b2d66c76922669549b0556dd0c2280a221" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;IMPORTANT&lt;/em&gt;: the size of the annotation string does NOT figure into the layout of the document, so the document will lay out as though the annotations are not present.</source>
          <target state="translated">&lt;em&gt;重要说明&lt;/em&gt;：注释字符串的大小不会影响到文档的布局，因此文档的布局就像没有注释一样。</target>
        </trans-unit>
        <trans-unit id="0ccc6401af7612d98c635a53bcda561bc1cbd018" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Imported Modules&lt;/em&gt; &amp;mdash; All forced to be safe imports, all must be trusted.</source>
          <target state="translated">&lt;em&gt;导入的模块&lt;/em&gt; -所有被强制安全&lt;em&gt;导入的模块&lt;/em&gt;，都必须得到信任。</target>
        </trans-unit>
        <trans-unit id="3177944c79160b113c3e6825a1110e135d8482a0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Imported Modules&lt;/em&gt; &amp;mdash; Under control of module author which ones must be trusted.</source>
          <target state="translated">&lt;em&gt;导入的模块&lt;/em&gt; -在模块作者的控制下，必须信任哪些模块。</target>
        </trans-unit>
        <trans-unit id="5929f52816170952b5022cd518be1d190e68180d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Inferred&lt;/em&gt; &amp;mdash; This works well and adds no dependencies on the Safe Haskell type of any modules in other packages. It does mean that the Safe Haskell type of your own modules could change without warning if a dependency changes. One way to deal with this is through the use of &lt;a href=&quot;#safe-flag-summary&quot;&gt;Safe Haskell warning flags&lt;/a&gt; that will warn if GHC infers a Safe Haskell type different from expected.</source>
          <target state="translated">&lt;em&gt;推断&lt;/em&gt; -运作良好，并且不对其他软件包中任何模块的Safe Haskell类型添加任何依赖关系。这确实意味着如果依赖项发生更改，您自己的模块的Safe Haskell类型可能会更改而不会发出警告。解决此问题的一种方法是使用&lt;a href=&quot;#safe-flag-summary&quot;&gt;Safe Haskell警告标志&lt;/a&gt;，该标志将在GHC推断出与预期不同的Safe Haskell类型时发出警告。</target>
        </trans-unit>
        <trans-unit id="e324661ef3cfb26e07739b2998871807a6d64fbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Linux&lt;/em&gt;: Use your package management tool.</source>
          <target state="translated">&lt;em&gt;Linux&lt;/em&gt;：使用您的软件包管理工具。</target>
        </trans-unit>
        <trans-unit id="0a054eafd72b0536034dcbbe0d2010494e24e9e0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Mac OS X&lt;/em&gt;: Clang is included by default on recent OS X machines when XCode is installed (from 10.6 and later). LLVM is not included. In order to use the LLVM based code generator, you should install the &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;Homebrew&lt;/a&gt; package manager for OS X. Alternatively you can download binaries for LLVM and Clang from &lt;a href=&quot;http://llvm.org/releases/download.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Mac OS X&lt;/em&gt;：安装XCode（从10.6及更高版本开始）时，默认情况下，最新OS X计算机上默认包含Clang。不包括LLVM。为了使用基于LLVM的代码生成器，您应该为OS X 安装&lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;Homebrew&lt;/a&gt;软件包管理器。或者，您可以从&lt;a href=&quot;http://llvm.org/releases/download.html&quot;&gt;此处&lt;/a&gt;下载LLVM和Clang的二进制文件。</target>
        </trans-unit>
        <trans-unit id="00e93d4ed6d5ea7079faa5a2a3e3003a4f1ddfef" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Mac OS X&lt;/em&gt;: Clang is included by default on recent OS X machines when Xcode is installed (from 10.6 and later). LLVM is not included. In order to use the LLVM based code generator, you should install the &lt;a href=&quot;http://mxcl.github.com/homebrew/&quot;&gt;Homebrew&lt;/a&gt; package manager for OS X. Alternatively you can download binaries for LLVM and Clang from &lt;a href=&quot;http://llvm.org/releases/download.html&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf1b145735dbf1e0dd404a06c2e1f539013cc07" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module Trusted&lt;/em&gt; &amp;mdash; No</source>
          <target state="translated">&lt;em&gt;可信模块&lt;/em&gt; -否</target>
        </trans-unit>
        <trans-unit id="8844cafd0561a033b1cb5d1b26abfcaf377275d5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module Trusted&lt;/em&gt; &amp;mdash; Yes</source>
          <target state="translated">&lt;em&gt;可信模块&lt;/em&gt; -是</target>
        </trans-unit>
        <trans-unit id="7e2e89c9e9c52676de7c3b95d3a7e6d106f82d06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module Trusted&lt;/em&gt; &amp;mdash; Yes.</source>
          <target state="translated">&lt;em&gt;可信模块&lt;/em&gt; -是。</target>
        </trans-unit>
        <trans-unit id="b4df3316e20037d36a201ec12b627c6791628c00" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module Trusted&lt;/em&gt; (&lt;a href=&quot;#ghc-flag--fpackage-trust&quot;&gt;&lt;code&gt;-fpackage-trust&lt;/code&gt;&lt;/a&gt; enabled) &amp;mdash; Yes but only if the package the module resides in is also trusted.</source>
          <target state="translated">&lt;em&gt;可信模块&lt;/em&gt;（启用&lt;a href=&quot;#ghc-flag--fpackage-trust&quot;&gt; &lt;code&gt;-fpackage-trust&lt;/code&gt; &lt;/a&gt;）&amp;mdash;是，但仅当模块所在的软件包也可信时，才可以。</target>
        </trans-unit>
        <trans-unit id="62db890e544c1cb820e640dc6716e0a5d3efb852" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Module boundary control&lt;/em&gt; &amp;mdash; Only symbols that are publicly available through other module export lists can be accessed in the safe language. Values using data constructors not exported by the defining module, cannot be examined or created. As such, if a module &lt;code&gt;M&lt;/code&gt; establishes some invariants through careful use of its export list, then code written in the safe language that imports &lt;code&gt;M&lt;/code&gt; is guaranteed to respect those invariants.</source>
          <target state="translated">&lt;em&gt;模块边界控制&lt;/em&gt; -仅可以使用安全语言访问可通过其他模块导出列表公开使用的符号。无法使用定义模块未导出的使用数据构造函数的值进行检查或创建。这样，如果模块 &lt;code&gt;M&lt;/code&gt; 通过谨慎使用其导出列表建立了一些不变量，则可以保证以安全语言编写的导入 &lt;code&gt;M&lt;/code&gt; 的代码尊重这些不变量。</target>
        </trans-unit>
        <trans-unit id="af6f97a5db3c64ddd8971103b6bc9da3d0737912" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;NB:&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;numeric#v:readInt&quot;&gt;readInt&lt;/a&gt;&lt;/code&gt; is the 'dual' of &lt;code&gt;&lt;a href=&quot;numeric#v:showIntAtBase&quot;&gt;showIntAtBase&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;numeric#v:readDec&quot;&gt;readDec&lt;/a&gt;&lt;/code&gt; is the `dual' of &lt;code&gt;&lt;a href=&quot;numeric#v:showInt&quot;&gt;showInt&lt;/a&gt;&lt;/code&gt;. The inconsistent naming is a historical accident.</source>
          <target state="translated">&lt;em&gt;注：&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;numeric#v:readInt&quot;&gt;readInt&lt;/a&gt;&lt;/code&gt; 是的&amp;ldquo;双反&amp;rdquo; &lt;code&gt;&lt;a href=&quot;numeric#v:showIntAtBase&quot;&gt;showIntAtBase&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;numeric#v:readDec&quot;&gt;readDec&lt;/a&gt;&lt;/code&gt; 是的'双反&amp;rdquo; &lt;code&gt;&lt;a href=&quot;numeric#v:showInt&quot;&gt;showInt&lt;/a&gt;&lt;/code&gt; 。命名不一致是历史性的意外。</target>
        </trans-unit>
        <trans-unit id="bca180f17751f120e4fc116efb72dc04296161c0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note: This is included for backwards compatibility.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;注意：包括在内是为了向后兼容。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e3699309a32757a05c18bbf210b56e81ae43c34b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; The &lt;a href=&quot;data-array-iarray&quot;&gt;Data.Array.IArray&lt;/a&gt; module provides a more general interface to immutable arrays: it defines operations with the same names as those defined below, but with more general types, and also defines &lt;code&gt;&lt;a href=&quot;data-array#t:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; instances of the relevant classes. To use that more general interface, import &lt;a href=&quot;data-array-iarray&quot;&gt;Data.Array.IArray&lt;/a&gt; but not &lt;a href=&quot;data-array&quot;&gt;Data.Array&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;注意：&lt;/em&gt;该&lt;a href=&quot;data-array-iarray&quot;&gt;Data.Array.IArray&lt;/a&gt;模块提供不可变的阵列更一般的接口：它定义操作具有相同名称的那些如下所定义，但是具有更一般的类型，并且还定义了 &lt;code&gt;&lt;a href=&quot;data-array#t:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; 的相关类的实例。要使用更通用的接口，请导入&lt;a href=&quot;data-array-iarray&quot;&gt;Data.Array.IArray&lt;/a&gt;而不是&lt;a href=&quot;data-array&quot;&gt;Data.Array&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99a1736f2957ab2831f3fb2c06b8e3ef16a472ca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; This module will be removed in a future release. Instead, use &lt;a href=&quot;control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except&lt;/a&gt;, which does not restrict the exception type, and also includes a base exception monad.</source>
          <target state="translated">&lt;em&gt;注意：&lt;/em&gt;此模块将在以后的版本中删除。而是使用&lt;a href=&quot;control-monad-trans-except&quot;&gt;Control.Monad.Trans.Except&lt;/a&gt;，它不限制异常类型，并且还包括基本异常monad。</target>
        </trans-unit>
        <trans-unit id="cf3e60fafda98a23cbcee79e00d6faf14e067641" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; You should use &lt;a href=&quot;data-map-strict&quot;&gt;Data.Map.Strict&lt;/a&gt; instead of this module if:</source>
          <target state="translated">&lt;em&gt;注意：&lt;/em&gt;如果满足以下条件，则应使用&lt;a href=&quot;data-map-strict&quot;&gt;Data.Map.Strict&lt;/a&gt;而不是此模块：</target>
        </trans-unit>
        <trans-unit id="7ef42cb512999221456657d1ed0873d9c3a0dd04" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; this does not yield a monad unless the argument monad is commutative.</source>
          <target state="translated">&lt;em&gt;注意：&lt;/em&gt;除非参数monad是可交换的，否则这不会产生monad。</target>
        </trans-unit>
        <trans-unit id="8b10853fe07ed106cc40e33aa049552c45deb62e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; this is valid only on architectures where data and function pointers range over the same set of addresses, and should only be used for bindings to external libraries whose interface already relies on this assumption.</source>
          <target state="translated">&lt;em&gt;注意：&lt;/em&gt;这仅在数据和函数指针位于同一组地址上的体系结构上有效，并且仅应用于绑定接口已经依赖于此假设的外部库。</target>
        </trans-unit>
        <trans-unit id="d46668e6afc2ef7a4c00f5c45217e100c43a41ae" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: For fixed-width integer types, this function does not attempt to detect overflow, so a sufficiently long input may give incorrect results. If you are worried about overflow, use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; for your result type.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：对于固定宽度的整数类型，此函数不会尝试检测溢出，因此足够长的输入可能会给出错误的结果。如果您担心溢出，请将 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; 用作结果类型。</target>
        </trans-unit>
        <trans-unit id="4beca137cb65d5e5734601659db1bb31ff532dee" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: In some languages, case conversion is a locale- and context-dependent operation. The case conversion functions in this module are &lt;em&gt;not&lt;/em&gt; locale sensitive. Programs that require locale sensitivity should use appropriate versions of the &lt;a href=&quot;http://hackage.haskell.org/package/text-icu-0.6.3.7/docs/Data-Text-ICU.html#g:4&quot;&gt;case mapping functions from the text-icu package&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：在某些语言中，大小写转换是与语言环境和上下文相关的操作。此模块中的大小写转换功能&lt;em&gt;不&lt;/em&gt;区分语言环境。需要语言环境敏感性的程序应使用&lt;a href=&quot;http://hackage.haskell.org/package/text-icu-0.6.3.7/docs/Data-Text-ICU.html#g:4&quot;&gt;text-icu包&lt;/a&gt;中的大小写映射函数的适当版本。</target>
        </trans-unit>
        <trans-unit id="6daf5267275b3ec6a8acadfb74c700b91109e913" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: Read below the synopsis for important notes on the use of this module.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：请阅读概要下方的内容，以获取有关使用此模块的重要说明。</target>
        </trans-unit>
        <trans-unit id="dfe49f9a1b9803fa8045d1cd893d57c7cca1fc13" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: The behaviour of functions in this module depends on the version of GHC you are using.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：此模块中功能的行为取决于您使用的GHC版本。</target>
        </trans-unit>
        <trans-unit id="ab507f138df0f9821f8c05dc187d168b78752b2c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: This function is almost ten times faster than &lt;code&gt;&lt;a href=&quot;data-text-lazy-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt;, but is slightly less accurate.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：此功能几乎比 &lt;code&gt;&lt;a href=&quot;data-text-lazy-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt; 快十倍，但准确性稍差。</target>
        </trans-unit>
        <trans-unit id="fc1b3f8e0b226adbcd2f02ea9dc1633a3659acbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: This function is almost ten times faster than &lt;code&gt;&lt;a href=&quot;data-text-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt;, but is slightly less accurate.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：此功能几乎比 &lt;code&gt;&lt;a href=&quot;data-text-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt; 快十倍，但准确性稍差。</target>
        </trans-unit>
        <trans-unit id="56157e5c45db589d39d9fd25447e4e607a3dfb9b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: This operation is highly unsafe, as it can introduce externally visible non-determinism into an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; action.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：此操作非常不安全，因为它会将外部可见的不确定性引入 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; 动作中。</target>
        </trans-unit>
        <trans-unit id="db2c98782f53c435c668ec2d9e1db82df6eb2ab6" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: in GHC, if you have a &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;, you essentially have a pointer to the thread itself. This means the thread itself can't be garbage collected until you drop the &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. This misfeature will hopefully be corrected at a later date.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：在GHC中，如果您具有 &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; ，则实质上是一个指向线程本身的指针。这意味着除非删除 &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; ,否则无法对线程本身进行垃圾回收。希望以后可以纠正此错误。</target>
        </trans-unit>
        <trans-unit id="3aeab860b4eeed250ea1a07689f81707d8979a70" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: in GHC, if you have a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;, you essentially have a pointer to the thread itself. This means the thread itself can't be garbage collected until you drop the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. This misfeature will hopefully be corrected at a later date.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：在GHC中，如果您具有 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; ，则实质上是一个指向线程本身的指针。这意味着除非删除 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; ,否则无法对线程本身进行垃圾回收。希望以后可以纠正此错误。</target>
        </trans-unit>
        <trans-unit id="82625db6b0d8147f8dac816f8114b6297c4e4718" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: in GHC, if you have a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;, you essentially have a pointer to the thread itself. This means the thread itself can't be garbage collected until you drop the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;. This misfeature will hopefully be corrected at a later date.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：在GHC中，如果您具有 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; ，则实质上是一个指向线程本身的指针。这意味着除非删除 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; ,否则无法对线程本身进行垃圾回收。希望以后可以纠正此错误。</target>
        </trans-unit>
        <trans-unit id="be1a1b117be20cf2f08d99126acdd91a639256ca" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: this function does not take language or culture specific rules into account. For instance, in English, different style guides disagree on whether the book name &quot;The Hill of the Red Fox&quot; is correctly title cased&amp;mdash;but this function will capitalize &lt;em&gt;every&lt;/em&gt; word.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：此功能未考虑语言或文化特定的规则。例如，在英语中，不同的风格指南在书名&amp;ldquo; The Red of Fox&amp;rdquo;是否正确使用大小写上存在分歧，但是此功能将大写&lt;em&gt;每个&lt;/em&gt;单词。</target>
        </trans-unit>
        <trans-unit id="20250cede5659fe8bf002a7115317e6d98ec119e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note&lt;/em&gt;: this function is &lt;em&gt;not&lt;/em&gt; lazy, as it must decode its entire input before it can return a result. If you need lazy (streaming) decoding, use &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; in lenient mode.</source>
          <target state="translated">&lt;em&gt;注意&lt;/em&gt;：此函数&lt;em&gt;不是&lt;/em&gt;惰性的，因为它必须先解码整个输入，然后才能返回结果。如果您需要延迟（流）解码， &lt;code&gt;&lt;a href=&quot;data-text-lazy-encoding#v:decodeUtf8With&quot;&gt;decodeUtf8With&lt;/a&gt;&lt;/code&gt; 在宽大模式下使用encodeUtf8With。</target>
        </trans-unit>
        <trans-unit id="b62e2da0e17d12769884b1aa2ba415a21c18dd0d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Only applies in combination with the native code generator.&lt;/em&gt; Use the graph colouring register allocator for register allocation in the native code generator. By default, GHC uses a simpler, faster linear register allocator. The downside being that the linear register allocator usually generates worse code.</source>
          <target state="translated">&lt;em&gt;仅与本机代码生成器结合使用。&lt;/em&gt;使用图形着色寄存器分配器在本机代码生成器中分配寄存器。默认情况下，GHC使用更简单，更快的线性寄存器分配器。缺点是线性寄存器分配器通常会生成较差的代码。</target>
        </trans-unit>
        <trans-unit id="fa91af8cf761e521aabf547672f18803ac273063" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Only applies in combination with the native code generator.&lt;/em&gt; Use the iterative coalescing graph colouring register allocator for register allocation in the native code generator. This is the same register allocator as the &lt;a href=&quot;#ghc-flag--fregs-graph&quot;&gt;&lt;code&gt;-fregs-graph&lt;/code&gt;&lt;/a&gt; one but also enables iterative coalescing during register allocation.</source>
          <target state="translated">&lt;em&gt;仅与本机代码生成器结合使用。&lt;/em&gt;使用迭代合并图着色寄存器分配器在本机代码生成器中分配寄存器。这是与&lt;a href=&quot;#ghc-flag--fregs-graph&quot;&gt; &lt;code&gt;-fregs-graph&lt;/code&gt; &lt;/a&gt;相同的寄存器分配器，但还可以在寄存器分配期间进行迭代合并。</target>
        </trans-unit>
        <trans-unit id="e45b4e85e98a22a00d832409ff973eebd06b5740" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Open type families&lt;/em&gt; Open type families are typechecked incrementally. This means that when a module is imported type family instances contained in that module are checked against instances present in already imported modules.</source>
          <target state="translated">&lt;em&gt;开放式族&lt;/em&gt;开放式族进行增量式类型检查。这意味着在导入模块时，将根据已导入模块中存在的实例检查该模块中包含的系列实例。</target>
        </trans-unit>
        <trans-unit id="7113721ad76d60dd94d004e6812d911541ae5431" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Package database stack:&lt;/em&gt; Package databases are arranged in a stack structure. When GHC starts up it adds the global and the user package databases to the stack, in that order, unless &lt;a href=&quot;#envvar-GHC_PACKAGE_PATH&quot; id=&quot;index-2&quot;&gt;&lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt;&lt;/a&gt; is specified. When &lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt; is specified then it will determine the initial database stack. Several command line options described below can further manipulate this initial stack. You can see GHC&amp;rsquo;s effective package database stack by running GHC with the &lt;a href=&quot;using#ghc-flag--v&quot;&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">&lt;em&gt;程序包数据库堆栈：&lt;/em&gt;程序包数据库以堆栈结构排列。当GHC启动时，除非指定了&lt;a href=&quot;#envvar-GHC_PACKAGE_PATH&quot; id=&quot;index-2&quot;&gt; &lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt; &lt;/a&gt;，否则它将按此顺序将全局数据库和用户软件包数据库添加到堆栈中。当 &lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt; 指定那么它将确定初始数据库堆栈。下面介绍的几个命令行选项可以进一步操纵此初始堆栈。您可以通过使用&lt;a href=&quot;using#ghc-flag--v&quot;&gt; &lt;code&gt;-v&lt;/code&gt; &lt;/a&gt;标志运行GHC来查看GHC的有效软件包数据库堆栈。</target>
        </trans-unit>
        <trans-unit id="f3290aca1792d3baafd6652be0ab62eee820c25a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Package shadowing:&lt;/em&gt; When multiple package databases are in use it is possible, though rarely, that the same installed package id is present in more than one database. In that case, packages closer to the top of the stack will override (&lt;em&gt;shadow&lt;/em&gt;) those below them. If the conflicting packages are found to be equivalent (by ABI hash comparison) then one of them replaces all references to the other, otherwise the overridden package and all those depending on it will be removed.</source>
          <target state="translated">&lt;em&gt;程序包屏蔽：&lt;/em&gt;当使用多个程序包数据库时，虽然很少，但有可能在多个数据库中存在相同的已安装程序包ID。在这种情况下，靠近堆栈顶部的包装将覆盖（&lt;em&gt;阴影&lt;/em&gt;）位于其下方的包装。如果发现冲突的程序包是等效的（通过ABI哈希比较），则其中一个程序包将替换对另一个程序包的所有引用，否则将删除被覆盖的程序包以及所有依赖于该程序包的包。</target>
        </trans-unit>
        <trans-unit id="912b6dba6e6e1a26c1c6c1b4ec3b984dd9aa9c87" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Package version selection:&lt;/em&gt; When selecting a package, GHC will search for packages in all available databases. If multiple versions of the same package are available the latest non-broken version will be chosen.</source>
          <target state="translated">&lt;em&gt;软件包版本选择：&lt;/em&gt;选择软件包时，GHC将在所有可用数据库中搜索软件包。如果同一软件包的多个版本可用，则将选择最新的不间断版本。</target>
        </trans-unit>
        <trans-unit id="d0a2b1f35156dec789ec1cde8499bf3f8439c973" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Parallelism&lt;/em&gt; means running a Haskell program on multiple processors, with the goal of improving performance. Ideally, this should be done invisibly, and with no semantic changes.</source>
          <target state="translated">&lt;em&gt;并行&lt;/em&gt;是指在多个处理器上运行Haskell程序，目的是提高性能。理想情况下，这应该是无形的并且没有语义变化。</target>
        </trans-unit>
        <trans-unit id="0261c851960dca416433683c95d0391ecabea5a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Parsing Permutation Phrases,&lt;/em&gt; by Arthur Baars, Andres Loh and Doaitse Swierstra. Published as a functional pearl at the Haskell Workshop 2001.</source>
          <target state="translated">&lt;em&gt;解析置换短语，&lt;/em&gt;由Arthur Baars，Andres Loh和Doaitse Swierstra撰写。作为功​​能性珍珠在Haskell Workshop 2001上出版。</target>
        </trans-unit>
        <trans-unit id="1cf75643fba70a9e965c9a0d56f5ecd26f9a996c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Please note that fold will be deprecated in the future and removed.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;请注意，折页将在以后被弃用并移除。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2b4461f500d5286b1fbbf5fde66a9dce3cef7a3d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Referential transparency&lt;/em&gt; &amp;mdash; The types can be trusted. Any pure function, is guaranteed to be pure. Evaluating them is deterministic and won&amp;rsquo;t cause any side effects. Functions in the &lt;code&gt;IO&lt;/code&gt; monad are still allowed and behave as usual. So, for example, the &lt;code&gt;unsafePerformIO :: IO a -&amp;gt; a&lt;/code&gt; function is disallowed in the safe language to enforce this property.</source>
          <target state="translated">&lt;em&gt;引用透明性&lt;/em&gt; -可以信任的类型。任何纯函数，都保证是纯函数。评估它们是确定性的，不会引起任何副作用。仍然允许 &lt;code&gt;IO&lt;/code&gt; monad中的功能，并且它们的功能照常。因此，例如，在安全语言中不允许使用 &lt;code&gt;unsafePerformIO :: IO a -&amp;gt; a&lt;/code&gt; 函数来强制执行此属性。</target>
        </trans-unit>
        <trans-unit id="705e87f1f4b75ba77eb74be2111fcfa0a7270e06" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Break down the graph by biography. Biographical profiling is described in more detail below (&lt;a href=&quot;#biography-prof&quot;&gt;Biographical Profiling&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;需要：-prof` &lt;/em&gt;按传记细分图表。有关个人简介的详细信息，请参见下文（个人&lt;a href=&quot;#biography-prof&quot;&gt;简介&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="42f2b1f3a6341c4a533f0870768e002177176b61" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Break down the graph by retainer set. Retainer profiling is described in more detail below (&lt;a href=&quot;#retainer-prof&quot;&gt;Retainer Profiling&lt;/a&gt;).</source>
          <target state="translated">&lt;em&gt;需要：-prof` &lt;/em&gt;通过固定器分解图。保持器性能分析将在下面更详细地描述（&lt;a href=&quot;#retainer-prof&quot;&gt;保持器性能分析&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="e8fb77f52aacf2a8ea7260f93819ef43bb939eb9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Break down the live heap by the module containing the code which produced the data.</source>
          <target state="translated">&lt;em&gt;需要：-prof` &lt;/em&gt;通过包含产生数据的代码的模块分解活动堆。</target>
        </trans-unit>
        <trans-unit id="a0658daba7f9f5546286f9552e60fcd18e33daa3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Breaks down the graph by closure description. For actual data, the description is just the constructor name, for other closures it is a compiler-generated string identifying the closure.</source>
          <target state="translated">&lt;em&gt;需要：-prof` &lt;/em&gt;通过闭包描述分解图。对于实际数据，描述只是构造函数名称，对于其他闭包，它是编译器生成的标识闭包的字符串。</target>
        </trans-unit>
        <trans-unit id="123d7cdc18e17372a1940b984b00aee65bc8b638" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Breaks down the graph by the cost-centre stack which produced the data.</source>
          <target state="translated">&lt;em&gt;需要：-prof`&lt;/em&gt;按产生数据的成本中心堆栈分解图表。</target>
        </trans-unit>
        <trans-unit id="57721a591ecc617b70db041058504ed77707be00" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires :ghc-flag:`-prof`.&lt;/em&gt; Breaks down the graph by type. For closures which have function type or unknown/polymorphic type, the string will represent an approximation to the actual type.</source>
          <target state="translated">&lt;em&gt;要求：ghc-flag：`-prof`。&lt;/em&gt;按类型细分图表。对于具有函数类型或未知/多态类型的闭包，字符串将表示实际类型的近似值。</target>
        </trans-unit>
        <trans-unit id="462386cf81a5d9ff64647c9902f04e34274934c2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Break down the graph by biography. Biographical profiling is described in more detail below (&lt;a href=&quot;#biography-prof&quot;&gt;Biographical Profiling&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e800810d90bf54a05dd074d7404e3f55f6dfe5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Break down the graph by retainer set. Retainer profiling is described in more detail below (&lt;a href=&quot;#retainer-prof&quot;&gt;Retainer Profiling&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b33582c594205ec781a8f4ce93138e6af6938cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Break down the live heap by the module containing the code which produced the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a74b213feb21230452d654c07f48705359ea420" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Breaks down the graph by closure description. For actual data, the description is just the constructor name, for other closures it is a compiler-generated string identifying the closure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b3758b9f4d5b38e4146a2f02b81f8056d08bbb" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Breaks down the graph by the cost-centre stack which produced the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a816f0ee8634bf396e7c364e4e63d3ce40f49f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Requires&lt;/em&gt;&lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt;. Breaks down the graph by type. For closures which have function type or unknown/polymorphic type, the string will represent an approximation to the actual type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b425bb33f0cf5570e1aae023075a9a1ba7f42526" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Semantic consistency&lt;/em&gt; &amp;mdash; For any module that imports a module written in the safe language, expressions that compile both with and without the safe import have the same meaning in both cases. That is, importing a module written in the safe language cannot change the meaning of existing code that isn&amp;rsquo;t dependent on that module. So, for example, there are some restrictions placed on the use of &lt;a href=&quot;glasgow_exts#instance-overlap&quot;&gt;OverlappingInstances&lt;/a&gt;, as these can violate this property.</source>
          <target state="translated">&lt;em&gt;语义一致性&lt;/em&gt; -对于任何导入使用安全语言编写的模块的模块，在两种情况下使用和不使用安全导入进行编译的表达式都具有相同的含义。也就是说，导入以安全语言编写的模块不能更改不依赖于该模块的现有代码的含义。因此，例如，对&lt;a href=&quot;glasgow_exts#instance-overlap&quot;&gt;OverlappingInstances&lt;/a&gt;的使用设置了一些限制，因为这些限制可能违反此属性。</target>
        </trans-unit>
        <trans-unit id="89de00924cd3479beec6109e9b79b70ef0022bcc" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Strict subset&lt;/em&gt; &amp;mdash; The safe language is strictly a subset of Haskell as implemented by GHC. Any expression that compiles in the safe language has the same meaning as it does when compiled in normal Haskell.</source>
          <target state="translated">&lt;em&gt;严格子集&lt;/em&gt; -安全语言严格来说是GHC实施的Haskell的子集。使用安全语言进行编译的任何表达式的含义均与使用常规Haskell进行编译时的含义相同。</target>
        </trans-unit>
        <trans-unit id="3db8e3e352c0b76e2e5b6b872c0aa32b584fb409" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Structuring Depth-First Search Algorithms in Haskell&lt;/em&gt;, by David King and John Launchbury, &lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.52.6526&quot;&gt;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.52.6526&lt;/a&gt;</source>
          <target state="translated">&lt;em&gt;&lt;/em&gt;David King和John Launchbury &lt;em&gt;在Haskell中构建深度优先搜索算法&lt;/em&gt;，&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.52.6526&quot;&gt;http：&lt;/a&gt; //citeseerx.ist.psu.edu/viewdoc/summary？doi = 10.1.1.52.6526</target>
        </trans-unit>
        <trans-unit id="6953c31e452f3102215b2750c3df5ff2d08c0540" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Switching off the ambiguity check.&lt;/em&gt; Even if a function has an ambiguous type according the &amp;ldquo;guiding principle&amp;rdquo;, it is possible that the function is callable. For example:</source>
          <target state="translated">&lt;em&gt;关闭歧义检查。&lt;/em&gt;即使某个函数根据&amp;ldquo;指导原则&amp;rdquo;具有不明确的类型，该函数也可能是可调用的。例如：</target>
        </trans-unit>
        <trans-unit id="0dcbc9c8d506fce1593616196ad42863caef94f5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;This module is DEPRECATED and will be removed in the future!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;该模块已弃用，以后将被删除！&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4511ddab48f01e74dbb8517f44eb7eeb29128bed" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Variable size&lt;/em&gt;: Each event record includes a length field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5957913496482cb50d556eae277fd4fdc650517b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Version conflict resolution:&lt;/em&gt; If multiple instances of a package version chosen by GHC are available then GHC will choose an unspecified instance.</source>
          <target state="translated">&lt;em&gt;版本冲突解决：&lt;/em&gt;如果GHC选择了一个软件包版本的多个实例，则GHC将选择一个未指定的实例。</target>
        </trans-unit>
        <trans-unit id="f205a3e455ddcfcad3d33dabd9244ab103b9a8a2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning&lt;/em&gt;: The size of the map must not exceed &lt;code&gt;maxBound::Int&lt;/code&gt;. Violation of this condition is not detected and if the size limit is exceeded, its behaviour is undefined.</source>
          <target state="translated">&lt;em&gt;警告&lt;/em&gt;：地图的大小不得超过 &lt;code&gt;maxBound::Int&lt;/code&gt; 。未检测到违反此条件的情况，如果超出大小限制，则其行为不确定。</target>
        </trans-unit>
        <trans-unit id="7b585db4fa55353109462192344937f67dbb88de" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning&lt;/em&gt;: the &lt;code&gt;&lt;a href=&quot;system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; operation holds a semi-closed handle on the file until the entire contents of the file have been consumed. It follows that an attempt to write to a file (using &lt;code&gt;&lt;a href=&quot;system-io#v:writeFile&quot;&gt;writeFile&lt;/a&gt;&lt;/code&gt;, for example) that was earlier opened by &lt;code&gt;&lt;a href=&quot;system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; will usually result in failure with &lt;code&gt;&lt;a href=&quot;system-io-error#v:isAlreadyInUseError&quot;&gt;isAlreadyInUseError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;警告&lt;/em&gt;： &lt;code&gt;&lt;a href=&quot;system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; 操作将在文件上保留半封闭的句柄，直到文件的全部内容都用完为止。因此，尝试写入一个由 &lt;code&gt;&lt;a href=&quot;system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; 先前打开的文件（例如，使用 &lt;code&gt;&lt;a href=&quot;system-io#v:writeFile&quot;&gt;writeFile&lt;/a&gt;&lt;/code&gt; ）通常会导致 &lt;code&gt;&lt;a href=&quot;system-io-error#v:isAlreadyInUseError&quot;&gt;isAlreadyInUseError&lt;/a&gt;&lt;/code&gt; 失败。</target>
        </trans-unit>
        <trans-unit id="93166860cf34225f1627c354dd12c3b2a1360b00" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning&lt;/em&gt;: this is an internal module, and does not have a stable API or name. Functions in this module may not check or enforce preconditions expected by public modules. Use at your own risk!</source>
          <target state="translated">&lt;em&gt;警告&lt;/em&gt;：这是一个内部模块，没有稳定的API或名称。该模块中的功能可能不会检查或强制执行公共模块所期望的前提条件。使用风险自负！</target>
        </trans-unit>
        <trans-unit id="82ff565161479f911aee1e9f05ae8c38c6c1a1ec" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Warning&lt;/em&gt;: this is an internal module, and does not have a stable API or name. Use at your own risk!</source>
          <target state="translated">&lt;em&gt;警告&lt;/em&gt;：这是一个内部模块，没有稳定的API或名称。使用风险自负！</target>
        </trans-unit>
        <trans-unit id="d127c14d0847810ba261c5a1deb29d3cf81d4266" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;When there is a right-hand side, GHC infers the most polymorphic kind consistent with the right-hand side.&lt;/em&gt; Examples: ordinary data type and GADT declarations, class declarations. In the case of a class declaration the role of &amp;ldquo;right hand side&amp;rdquo; is played by the class method signatures.</source>
          <target state="translated">&lt;em&gt;当存在右侧时，GHC会推断出与右侧一致的最多态类型。&lt;/em&gt;示例：普通数据类型和GADT声明，类声明。在类声明的情况下，&amp;ldquo;右手侧&amp;rdquo;的角色由类方法签名来扮演。</target>
        </trans-unit>
        <trans-unit id="4a842e58b2e8acdebedf4712bca8d844fe2498be" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;When there is no right hand side, GHC defaults argument and result kinds to ``Type``, except when directed otherwise by a kind signature&lt;/em&gt;. Examples: data and open type family declarations.</source>
          <target state="translated">&lt;em&gt;当没有右手边时，GHC将参数和结果类型默认为``Type''，除非由种类签名另行指示&lt;/em&gt;。示例：数据和开放类型族声明。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
