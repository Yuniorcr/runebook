<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="01b9f449ab6343ea54f02e26f1e9faf3b8a4900b" translate="yes" xml:space="preserve">
          <source>Parse a time value given a format string. See &lt;code&gt;&lt;a href=&quot;data-time-format#v:parseTimeM&quot;&gt;parseTimeM&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">给定格式字符串解析时间值。有关详细信息，请参见 &lt;code&gt;&lt;a href=&quot;data-time-format#v:parseTimeM&quot;&gt;parseTimeM&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2bcd9fc04842aba6ce12e98373cf3b96da5c978b" translate="yes" xml:space="preserve">
          <source>Parse a value in either extended or basic format</source>
          <target state="translated">以扩展或基本格式解析一个值。</target>
        </trans-unit>
        <trans-unit id="2960f380b30894cf9484ebfaf5167a7bcf5265fb" translate="yes" xml:space="preserve">
          <source>Parse a value in the format</source>
          <target state="translated">解析一个值,格式为</target>
        </trans-unit>
        <trans-unit id="9f1ffb1644b47f32b305b727b8e2f0c4183a5335" translate="yes" xml:space="preserve">
          <source>Parse errors</source>
          <target state="translated">解析错误</target>
        </trans-unit>
        <trans-unit id="7d315fdee5a3dc981c3a0b2bb2a2a03e5b911e53" translate="yes" xml:space="preserve">
          <source>Parse the most commonly used ISO 8601 format.</source>
          <target state="translated">解析最常用的ISO 8601格式。</target>
        </trans-unit>
        <trans-unit id="ba0d4aca2cb647cf93798740ced61a0bfc954e4c" translate="yes" xml:space="preserve">
          <source>Parse the specified lexeme and continue as specified. Esp useful for nullary constructors; e.g. &lt;code&gt;choose [(&quot;A&quot;, return A), (&quot;B&quot;, return B)]&lt;/code&gt; We match both Ident and Symbol because the constructor might be an operator eg &lt;code&gt;(:~:)&lt;/code&gt;</source>
          <target state="translated">解析指定的词素并按指定继续。Esp对null构造函数有用；例如， &lt;code&gt;choose [(&quot;A&quot;, return A), (&quot;B&quot;, return B)]&lt;/code&gt; 我们匹配Ident和Symbol，因为构造函数可能是运算符，例如 &lt;code&gt;(:~:)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df633b0d4b46131792d5ed485e94f872474b0ba2" translate="yes" xml:space="preserve">
          <source>ParseError</source>
          <target state="translated">ParseError</target>
        </trans-unit>
        <trans-unit id="e74c212b67cd9480fc62438093300cf8d7822087" translate="yes" xml:space="preserve">
          <source>ParseTime</source>
          <target state="translated">ParseTime</target>
        </trans-unit>
        <trans-unit id="6b8eadf238999f4577c899508ccf16700302cf3d" translate="yes" xml:space="preserve">
          <source>Parsec</source>
          <target state="translated">Parsec</target>
        </trans-unit>
        <trans-unit id="93d479a55d45ca812192b9c77cc2d7af365791e8" translate="yes" xml:space="preserve">
          <source>Parsec compatibility module</source>
          <target state="translated">Parsec兼容性模块</target>
        </trans-unit>
        <trans-unit id="0ebbdba417d24c756ec9c6928e541e59b0910456" translate="yes" xml:space="preserve">
          <source>ParsecT</source>
          <target state="translated">ParsecT</target>
        </trans-unit>
        <trans-unit id="1b3cf5033ed01a4fcbff3f2957e66cfe44af45a9" translate="yes" xml:space="preserve">
          <source>Parser</source>
          <target state="translated">Parser</target>
        </trans-unit>
        <trans-unit id="7a7dcdbfe4da553cb0bcd34e1518876f24101cf8" translate="yes" xml:space="preserve">
          <source>Parser from ParseLib with Hugs:</source>
          <target state="translated">从ParseLib与Hugs的解析器。</target>
        </trans-unit>
        <trans-unit id="e72f7d0405a8ed6b01d53d0eb6448cf48e5195fa" translate="yes" xml:space="preserve">
          <source>ParserT monad transformer and Parser type</source>
          <target state="translated">ParserT单项式变换器和Parser类型。</target>
        </trans-unit>
        <trans-unit id="efdb99a054fb37fae9696b10ed15efeeb9f36b28" translate="yes" xml:space="preserve">
          <source>Parsers</source>
          <target state="translated">Parsers</target>
        </trans-unit>
        <trans-unit id="028c9661ab1e61cb4cec3408691389cf51931b07" translate="yes" xml:space="preserve">
          <source>Parses a CRLF (see &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:crlf&quot;&gt;crlf&lt;/a&gt;&lt;/code&gt;) or LF (see &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:newline&quot;&gt;newline&lt;/a&gt;&lt;/code&gt;) end-of-line. Returns a newline character ('\n').</source>
          <target state="translated">解析CRLF（请参阅 &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:crlf&quot;&gt;crlf&lt;/a&gt;&lt;/code&gt; ）或LF（请参阅 &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:newline&quot;&gt;newline&lt;/a&gt;&lt;/code&gt; ）行尾。返回换行符（'\ n'）。</target>
        </trans-unit>
        <trans-unit id="8d0fe9ef051a87bd91f7557d4ccd0b8aa18260b8" translate="yes" xml:space="preserve">
          <source>Parses a alphabetic or numeric Unicode characters according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlphaNum&quot;&gt;isAlphaNum&lt;/a&gt;&lt;/code&gt;. Returns the parsed character.</source>
          <target state="translated">根据 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlphaNum&quot;&gt;isAlphaNum&lt;/a&gt;&lt;/code&gt; 解析字母或数字Unicode字符。返回已解析的字符。</target>
        </trans-unit>
        <trans-unit id="9deeeeaf087ec53d20f87cb865f75c4b16fddfbf" translate="yes" xml:space="preserve">
          <source>Parses a alphabetic or numeric Unicode characters according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isAlphaNum&quot;&gt;isAlphaNum&lt;/a&gt;&lt;/code&gt;. Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec0ce986154232212bbae5b429b845073d2f256" translate="yes" xml:space="preserve">
          <source>Parses a carriage return character ('\r') followed by a newline character ('\n'). Returns a newline character.</source>
          <target state="translated">解析一个回车字符('\r')和一个换行字符('\n')。返回一个换行符。</target>
        </trans-unit>
        <trans-unit id="6fcd7bd8ab3c7f5c13d44837c892a5fb90c8df7f" translate="yes" xml:space="preserve">
          <source>Parses a hexadecimal digit (a digit or a letter between 'a' and 'f' or 'A' and 'F'). Returns the parsed character.</source>
          <target state="translated">解析一个十六进制数字(介于'a'和'f'或'A'和'F'之间的数字或字母)。返回解析后的字符。</target>
        </trans-unit>
        <trans-unit id="dc1d6a166fc0a683ffa31ab7722f3e4d373d0800" translate="yes" xml:space="preserve">
          <source>Parses a lower case character (according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="translated">解析一个小写字符（根据 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt; ）。返回已解析的字符。</target>
        </trans-unit>
        <trans-unit id="bb6d66af149d4f2597f57f132fa38ff395ba24cb" translate="yes" xml:space="preserve">
          <source>Parses a lower case character (according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fea022f0b2ddc5b11db2fc69fd4e212597b724d" translate="yes" xml:space="preserve">
          <source>Parses a newline character ('\n'). Returns a newline character.</source>
          <target state="translated">解析一个换行符('/n')。返回一个换行符。</target>
        </trans-unit>
        <trans-unit id="eb63a33324f0ad8223e6e2bee48f6654bd369140" translate="yes" xml:space="preserve">
          <source>Parses a non-negative whole number in the decimal system. Returns the value of the number.</source>
          <target state="translated">在十进制系统中解析一个非负的整数。返回数字的值。</target>
        </trans-unit>
        <trans-unit id="5df553864aa00be005f0685bbc7543dc85668e7b" translate="yes" xml:space="preserve">
          <source>Parses a non-negative whole number in the hexadecimal system. The number should be prefixed with &quot;x&quot; or &quot;X&quot;. Returns the value of the number.</source>
          <target state="translated">在十六进制系统中解析一个非负的整数。数字应该以 &quot;x &quot;或 &quot;X &quot;为前缀。返回数字的值。</target>
        </trans-unit>
        <trans-unit id="9fdb8835ffaf98232d803de2c75c7f642b6b9764" translate="yes" xml:space="preserve">
          <source>Parses a non-negative whole number in the octal system. The number should be prefixed with &quot;o&quot; or &quot;O&quot;. Returns the value of the number.</source>
          <target state="translated">在八进制系统中解析一个非负的整数。数字应该以 &quot;o &quot;或 &quot;O &quot;为前缀。返回数字的值。</target>
        </trans-unit>
        <trans-unit id="702ae31de69c688b66eaaac89301521608613ccc" translate="yes" xml:space="preserve">
          <source>Parses a tab character ('\t'). Returns a tab character.</source>
          <target state="translated">解析一个制表符('/t')。返回一个tab字符。</target>
        </trans-unit>
        <trans-unit id="a9324545ed792c080b35aa8a66315fcacf5866ec" translate="yes" xml:space="preserve">
          <source>Parses a time value given a format string. Supports the same %-codes as &lt;code&gt;formatTime&lt;/code&gt;, including &lt;code&gt;%-&lt;/code&gt;, &lt;code&gt;%_&lt;/code&gt; and &lt;code&gt;%0&lt;/code&gt; modifiers, however padding widths are not supported. Case is not significant in the input string. Some variations in the input are accepted:</source>
          <target state="translated">解析给定格式字符串的时间值。支持相同的％-codes如 &lt;code&gt;formatTime&lt;/code&gt; ，包括 &lt;code&gt;%-&lt;/code&gt; ， &lt;code&gt;%_&lt;/code&gt; 和 &lt;code&gt;%0&lt;/code&gt; 改性剂，但是填充的宽度不被支持。输入字符串中的大小写无关紧要。接受输入中的一些变化：</target>
        </trans-unit>
        <trans-unit id="05a240ec2c4ee54b0aafba8944a0f8fd2d337fdb" translate="yes" xml:space="preserve">
          <source>Parses a white space character (any character which satisfies &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isSpace&quot;&gt;isSpace&lt;/a&gt;&lt;/code&gt;) Returns the parsed character.</source>
          <target state="translated">解析空白字符（任何满足 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isSpace&quot;&gt;isSpace&lt;/a&gt;&lt;/code&gt; 的字符）返回已解析的字符。</target>
        </trans-unit>
        <trans-unit id="d903820e65a3e9a2aa9445b7aba2e9d2375393f9" translate="yes" xml:space="preserve">
          <source>Parses a white space character (any character which satisfies &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isSpace&quot;&gt;isSpace&lt;/a&gt;&lt;/code&gt;) Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2249741f599993c9ad36b1f2a0b1cf7813b2acd1" translate="yes" xml:space="preserve">
          <source>Parses an ASCII digit. Returns the parsed character.</source>
          <target state="translated">解析一个ASCII数字。返回解析后的字符。</target>
        </trans-unit>
        <trans-unit id="c370ae0764a200203299326c366ffab380d2d3ab" translate="yes" xml:space="preserve">
          <source>Parses an alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="translated">解析字母Unicode字符（小写，大写和标题大写字母，再加上无大小写的脚本字母和根据 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt; 的修饰符字母）。返回已解析的字符。</target>
        </trans-unit>
        <trans-unit id="d33286169144156c705451434bd3458f2c243164" translate="yes" xml:space="preserve">
          <source>Parses an alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b02856d3ea3b460a7fe547f16d9711dbfd09488" translate="yes" xml:space="preserve">
          <source>Parses an octal digit (a character between '0' and '7'). Returns the parsed character.</source>
          <target state="translated">解析一个八进制数字('0'和'7'之间的字符)。返回解析后的字符。</target>
        </trans-unit>
        <trans-unit id="33366516b691b44fa5ef3fef5829a9e0268ab2e5" translate="yes" xml:space="preserve">
          <source>Parses an upper case letter (according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="translated">解析一个大写字母（根据 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt; ）。返回已解析的字符。</target>
        </trans-unit>
        <trans-unit id="70ed6ac072bae182bcb0c4097a1ee90360d81c38" translate="yes" xml:space="preserve">
          <source>Parses an upper case letter (according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20d25499201ff10834936ff90921a8f64cf44d5" translate="yes" xml:space="preserve">
          <source>Parses and returns the specified character.</source>
          <target state="translated">解析并返回指定的字符。</target>
        </trans-unit>
        <trans-unit id="10734aa6302a05d65e718e02f8812ae26f28348b" translate="yes" xml:space="preserve">
          <source>Parses and returns the specified string.</source>
          <target state="translated">解析并返回指定的字符串。</target>
        </trans-unit>
        <trans-unit id="d6fafa4ab77dbc509075d8350b5ba85d1892f213" translate="yes" xml:space="preserve">
          <source>Parses any white space. White space consists of &lt;em&gt;zero&lt;/em&gt; or more occurrences of a &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt;, a line comment or a block (multi line) comment. Block comments may be nested. How comments are started and ended is defined in the &lt;code&gt;&lt;a href=&quot;text-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; that is passed to &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">解析任何空白。空白由&lt;em&gt;零个&lt;/em&gt;或多个出现的 &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt; ，一行注释或一个块（多行）注释组成。块注释可能是嵌套的。注释的开始和结束方式在传递给 &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;text-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; 中定义。</target>
        </trans-unit>
        <trans-unit id="7901356594fa3bfff82ffd8d1edc90fccbbbe877" translate="yes" xml:space="preserve">
          <source>Parses any white space. White space consists of &lt;em&gt;zero&lt;/em&gt; or more occurrences of a &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt;, a line comment or a block (multi line) comment. Block comments may be nested. How comments are started and ended is defined in the &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; that is passed to &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">解析任何空白。空白由&lt;em&gt;零个&lt;/em&gt;或多个出现的 &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt; ，一行注释或一个块（多行）注释组成。块注释可能是嵌套的。注释的开始和结束方式在传递给 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt; 的 &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; 中定义。</target>
        </trans-unit>
        <trans-unit id="1e703e840a13f17d4e0aa6d6407f1c2c408c1f58" translate="yes" xml:space="preserve">
          <source>Parses one or more occurrences of the given parser.</source>
          <target state="translated">解析一个或多个给定解析器的出现。</target>
        </trans-unit>
        <trans-unit id="9d53b4cf7f3be2a61b0e8567c529b4e5312e73c2" translate="yes" xml:space="preserve">
          <source>Parses the first one or more characters satisfying the predicate. Fails if none, else succeeds exactly once having consumed all the characters Hence NOT the same as (many1 (satisfy p))</source>
          <target state="translated">解析第一个或多个满足谓词的字符。如果没有,则失败,否则在解析完所有字符后就成功一次,因此与(many1 (success p))不同。</target>
        </trans-unit>
        <trans-unit id="4ea87d4852d98a90a7eae890a816dda2be9b64c4" translate="yes" xml:space="preserve">
          <source>Parses the first zero or more characters satisfying the predicate. Always succeeds, exactly once having consumed all the characters Hence NOT the same as (many (satisfy p))</source>
          <target state="translated">解析第一个零或更多满足谓词的字符。总是成功的,只用了一次就用完了所有的字符,因此和(many (success p))不一样。</target>
        </trans-unit>
        <trans-unit id="572002c6d8895463e970cc35f3fcfe00a42feb77" translate="yes" xml:space="preserve">
          <source>Parses zero or more occurrences of the given parser.</source>
          <target state="translated">解析给定解析器的零次或多次出现。</target>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="translated">Parsing</target>
        </trans-unit>
        <trans-unit id="22a3a9fff72c57faae1e1019e01bc253d1b1b0fd" translate="yes" xml:space="preserve">
          <source>Parsing and counting</source>
          <target state="translated">解析和计数</target>
        </trans-unit>
        <trans-unit id="ba8c1940ba355106d471b605df97a6aaed96283a" translate="yes" xml:space="preserve">
          <source>Parsing of &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s, producing values.</source>
          <target state="translated">解析 &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ，产生值。</target>
        </trans-unit>
        <trans-unit id="d9978c1c7b4b043b4e8ba4d6fd699578663835c5" translate="yes" xml:space="preserve">
          <source>Parsing of &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s, producing values.</source>
          <target state="translated">解析 &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ，产生值。</target>
        </trans-unit>
        <trans-unit id="146ac34ef08d750fbdfddd6a4da5cec9cef4309b" translate="yes" xml:space="preserve">
          <source>Partial type signatures (&lt;a href=&quot;#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt;) work nicely with visible type application. If you want to specify only the second type argument to &lt;code&gt;wurble&lt;/code&gt;, then you can say &lt;code&gt;wurble @_ @Int&lt;/code&gt;. The first argument is a wildcard, just like in a partial type signature. However, if used in a visible type application/visible kind application, it is &lt;em&gt;not&lt;/em&gt; necessary to specify &lt;a href=&quot;#extension-PartialTypeSignatures&quot;&gt;&lt;code&gt;PartialTypeSignatures&lt;/code&gt;&lt;/a&gt; and your code will not generate a warning informing you of the omitted type.</source>
          <target state="translated">部分类型签名（&lt;a href=&quot;#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt;）与可见类型应用程序很好地配合。如果只想为 &lt;code&gt;wurble&lt;/code&gt; 指定第二个类型参数，则可以说 &lt;code&gt;wurble @_ @Int&lt;/code&gt; 。第一个参数是通配符，就像在部分类型签名中一样。然而，如果在一个可见的类型application /可见这类应用中使用，它是&lt;em&gt;不是&lt;/em&gt;必要指定&lt;a href=&quot;#extension-PartialTypeSignatures&quot;&gt; &lt;code&gt;PartialTypeSignatures&lt;/code&gt; &lt;/a&gt;和你的代码不会产生警告，通知您省略类型。</target>
        </trans-unit>
        <trans-unit id="1fba127279063c3a22121b9b4cb6f20bc4417959" translate="yes" xml:space="preserve">
          <source>Partial type signatures are allowed for bindings, pattern and expression signatures, except that extra-constraints wildcards are not supported in pattern or expression signatures. In the following example a wildcard is used in each of the three possible contexts.</source>
          <target state="translated">部分类型签名允许用于绑定、模式和表达式签名,但模式或表达式签名中不支持约束外通配符。在下面的例子中,在三种可能的上下文中都使用了通配符。</target>
        </trans-unit>
        <trans-unit id="99197905e62274bd86f62c48326e7d56161c0bff" translate="yes" xml:space="preserve">
          <source>Partial type signatures can also be used in &lt;a href=&quot;#template-haskell&quot;&gt;Template Haskell&lt;/a&gt; splices.</source>
          <target state="translated">部分类型签名也可以在&lt;a href=&quot;#template-haskell&quot;&gt;Template Haskell&lt;/a&gt;拼接中使用。</target>
        </trans-unit>
        <trans-unit id="cd1d72bf2e9837a6f932897368ed11b7f1f0901d" translate="yes" xml:space="preserve">
          <source>PartialTypeSignatures</source>
          <target state="translated">PartialTypeSignatures</target>
        </trans-unit>
        <trans-unit id="edf72a43b1f566581c4c8c61fcedab5c2b680b1f" translate="yes" xml:space="preserve">
          <source>Partially-applied type synonym.</source>
          <target state="translated">部分应用型同义词。</target>
        </trans-unit>
        <trans-unit id="cb737fe624c5231bedfcaa54cdb5adc3c111d709" translate="yes" xml:space="preserve">
          <source>Partitions a list of &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; into two lists. All the &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; elements are extracted, in order, to the first component of the output. Similarly the &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; elements are extracted to the second component of the output.</source>
          <target state="translated">分区的列表 &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; 为两个列表。按顺序将所有 &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; 元素提取到输出的第一部分。同样，将 &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 元素提取到输出的第二部分。</target>
        </trans-unit>
        <trans-unit id="d7cd56f2a2a3f47830760edfb89946eb7b9e2cd1" translate="yes" xml:space="preserve">
          <source>Pass</source>
          <target state="translated">Pass</target>
        </trans-unit>
        <trans-unit id="b656895c2b247f1e0e70e028d10540d37d0e6599" translate="yes" xml:space="preserve">
          <source>Pass vector value in vector registers for function calls</source>
          <target state="translated">在向量寄存器中传递向量值,用于函数调用</target>
        </trans-unit>
        <trans-unit id="c54625ea849b5bef109f8ba0d861127d6f59b6f9" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to &lt;code&gt;windres&lt;/code&gt; when embedding manifests on Windows. See &lt;code&gt;-fno-embed-manifest&lt;/code&gt; in &lt;a href=&quot;#options-linker&quot;&gt;Options affecting linking&lt;/a&gt;.</source>
          <target state="translated">在Windows上嵌入清单时，将 &lt;code&gt;windres&lt;/code&gt; 传递给windes。见 &lt;code&gt;-fno-embed-manifest&lt;/code&gt; 的&lt;a href=&quot;#options-linker&quot;&gt;选项链接的影响&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d8e81975f1a1782e659196379fb59c4474c28b85" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to CPP (makes sense only if &lt;code&gt;-cpp&lt;/code&gt; is also on).</source>
          <target state="translated">将⟨option⟩传递给CPP（仅当 &lt;code&gt;-cpp&lt;/code&gt; 也打开时才有意义）。</target>
        </trans-unit>
        <trans-unit id="1ea097fe05a9a04a2624d60c283feabd36342c47" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the C compiler.</source>
          <target state="translated">将⟨option⟩传给C编译器。</target>
        </trans-unit>
        <trans-unit id="84280cb2173bd4a147ed2710a0aa106da9c6e256" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the C++ compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2245e044e2ee9c7852e79e8e7a89e223c413d0" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the DLL generator.</source>
          <target state="translated">将⟨option⟩传递给DLL生成器。</target>
        </trans-unit>
        <trans-unit id="3e2650a6a6f4302b3800e44c6e47bf2e4cf0ce70" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the LLVM compiler.</source>
          <target state="translated">将⟨option⟩传递给LLVM编译器。</target>
        </trans-unit>
        <trans-unit id="b7042edda33fdbf17c12be5107e2f71d34b5db58" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the LLVM optimiser.</source>
          <target state="translated">将⟨option⟩传递给LLVM优化器。</target>
        </trans-unit>
        <trans-unit id="87ef00b3846b0862a7242d922be5b1f78c247481" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the assembler.</source>
          <target state="translated">将⟨option⟩传递给汇编器。</target>
        </trans-unit>
        <trans-unit id="e1c14b71df065b66ba63fa6a047ddbfc4df7c5f0" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the custom pre-processor (see &lt;a href=&quot;#pre-processor&quot;&gt;Options affecting a Haskell pre-processor&lt;/a&gt;).</source>
          <target state="translated">将⟨option传递给自定义预处理器（请参阅&lt;a href=&quot;#pre-processor&quot;&gt;影响Haskell预处理器的选项&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d4e91bac9331b7ddc74206f5303bffcecba44d00" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the interpreter sub-process (see &lt;a href=&quot;ghci#external-interpreter&quot;&gt;Running the interpreter in a separate process&lt;/a&gt;). A common use for this is to pass RTS options e.g., &lt;code&gt;-opti+RTS -opti-A64m&lt;/code&gt;, or to enable verbosity with &lt;code&gt;-opti-v&lt;/code&gt; to see what messages are being exchanged by GHC and the interpreter.</source>
          <target state="translated">将&amp;ldquo; option&amp;rdquo;传递给解释器子流程（请参阅&lt;a href=&quot;ghci#external-interpreter&quot;&gt;在单独的进程中运行解释器&lt;/a&gt;）。为此，通常的用法是传递RTS选项，例如 &lt;code&gt;-opti+RTS -opti-A64m&lt;/code&gt; ，或使用 &lt;code&gt;-opti-v&lt;/code&gt; 启用详细信息以查看GHC和解释器正在交换的消息。</target>
        </trans-unit>
        <trans-unit id="123e7106bfca8a16ebd4af1ce4024a5589cb8353" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the linker when merging object files. In the case of a standard &lt;code&gt;ld&lt;/code&gt;-style linker this should generally include the &lt;code&gt;-r&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7477215f28d252ddc7702887bc7fd7f09e390008" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the linker.</source>
          <target state="translated">将⟨option⟩传递给链接器。</target>
        </trans-unit>
        <trans-unit id="ad6fb68d25dbefa94a70ca45187327b9fda1d37c" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the literate pre-processor</source>
          <target state="translated">将⟨选项⟩传给识字的预处理器</target>
        </trans-unit>
        <trans-unit id="b3edfb19da259e0de688de612c935956f2c99d75" translate="yes" xml:space="preserve">
          <source>Passed to the C compiler.</source>
          <target state="translated">传递给C编译器。</target>
        </trans-unit>
        <trans-unit id="8be3c943b1609fffbfc51aad666d0a04adf83c9d" translate="yes" xml:space="preserve">
          <source>Password</source>
          <target state="translated">Password</target>
        </trans-unit>
        <trans-unit id="702f90f9120506c7fbea366d22307493c04740b3" translate="yes" xml:space="preserve">
          <source>Password -- may be empty or fake if shadow is in use (pw_passwd)</source>
          <target state="translated">密码 --如果使用影子,密码可能是空的或假的 (pw_passwd)</target>
        </trans-unit>
        <trans-unit id="22002d5b59087455e3e7a19bdb64f504fafce246" translate="yes" xml:space="preserve">
          <source>Pat</source>
          <target state="translated">Pat</target>
        </trans-unit>
        <trans-unit id="eb730bfcc87dd3826515b26e8682ec5987a8eee0" translate="yes" xml:space="preserve">
          <source>PatQ</source>
          <target state="translated">PatQ</target>
        </trans-unit>
        <trans-unit id="9b6958725be0676bc2831daffab79014db1e02d1" translate="yes" xml:space="preserve">
          <source>PatSynArgs</source>
          <target state="translated">PatSynArgs</target>
        </trans-unit>
        <trans-unit id="e528cddb6d761afbae92bc5520282c106e797b9b" translate="yes" xml:space="preserve">
          <source>PatSynArgsQ</source>
          <target state="translated">PatSynArgsQ</target>
        </trans-unit>
        <trans-unit id="fe6ca4a2046e9092fc8b91acbe65f2196eafaf25" translate="yes" xml:space="preserve">
          <source>PatSynDir</source>
          <target state="translated">PatSynDir</target>
        </trans-unit>
        <trans-unit id="a00df6fba9cdb213b7e8fda3d468202a26221183" translate="yes" xml:space="preserve">
          <source>PatSynDirQ</source>
          <target state="translated">PatSynDirQ</target>
        </trans-unit>
        <trans-unit id="f84514555442628f00d3e5269a9f8b67460106af" translate="yes" xml:space="preserve">
          <source>PatSynType</source>
          <target state="translated">PatSynType</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="de556ff45621853b72f3cba9bbc16ba72c53c17f" translate="yes" xml:space="preserve">
          <source>PathNameLimit</source>
          <target state="translated">PathNameLimit</target>
        </trans-unit>
        <trans-unit id="74b7902cc01d30f193138477b0b3be38408b6f9e" translate="yes" xml:space="preserve">
          <source>PathVar</source>
          <target state="translated">PathVar</target>
        </trans-unit>
        <trans-unit id="c605d6954cb5f7d896d41bcc8529b02fa99e63c3" translate="yes" xml:space="preserve">
          <source>Pathname conventions vary from system to system. In particular, the directory separator is &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; on Unix systems and &amp;ldquo;&lt;code&gt;\&lt;/code&gt;&amp;rdquo; on Windows systems. In the sections that follow, we shall consistently use &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; as the directory separator; substitute this for the appropriate character for your system.</source>
          <target state="translated">路径名约定因系统而异。特别是，目录分隔符在Unix系统上为&amp;ldquo; &lt;code&gt;/&lt;/code&gt; &amp;rdquo;，在Windows系统上为&amp;ldquo; &lt;code&gt;\&lt;/code&gt; &amp;rdquo;。在以下各节中，我们将始终使用&amp;ldquo; &lt;code&gt;/&lt;/code&gt; &amp;rdquo;作为目录分隔符；将其替换为适合您系统的字符。</target>
        </trans-unit>
        <trans-unit id="011311874049b892a9a1e123a9582477aceacecd" translate="yes" xml:space="preserve">
          <source>Paths specified using the &lt;code&gt;-L ⟨dir⟩&lt;/code&gt; command-line option,</source>
          <target state="translated">使用 &lt;code&gt;-L ⟨dir⟩&lt;/code&gt; 命令行选项指定的路径，</target>
        </trans-unit>
        <trans-unit id="32c2dd7f8e76f04657fd849dcf202fe7562da7ba" translate="yes" xml:space="preserve">
          <source>Paths with a drive letter are &lt;em&gt;legacy&lt;/em&gt; paths. The drive letters are actually meaningless to the kernel. Just like Unix operating systems, drive letters are just a mount point. You can view your mount points by using the &lt;strong&gt;mountvol&lt;/strong&gt; command.</source>
          <target state="translated">带驱动器号的路径是&lt;em&gt;旧&lt;/em&gt;路径。实际上，驱动器号对内核毫无意义。就像Unix操作系统一样，驱动器号只是一个安装点。您可以使用&lt;strong&gt;mountvol&lt;/strong&gt;命令查看安装点。</target>
        </trans-unit>
        <trans-unit id="1fff6a31661b491fc40cc9c1ad7fe5e479cb7500" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">Pattern</target>
        </trans-unit>
        <trans-unit id="c986f82232ab7547ffc16ab2d32c4eed2d129027" translate="yes" xml:space="preserve">
          <source>Pattern &lt;code&gt;P1&lt;/code&gt; can only match against a value of type &lt;code&gt;Maybe Bool&lt;/code&gt;, so function &lt;code&gt;f&lt;/code&gt; is rejected because the type signature is &lt;code&gt;Maybe a&lt;/code&gt;. (To see this, imagine expanding the pattern synonym.)</source>
          <target state="translated">模式 &lt;code&gt;P1&lt;/code&gt; 只能与 &lt;code&gt;Maybe Bool&lt;/code&gt; 类型的值匹配，因此函数 &lt;code&gt;f&lt;/code&gt; 被拒绝，因为类型签名 &lt;code&gt;Maybe a&lt;/code&gt; 。（为此，请想象扩展模式同义词。）</target>
        </trans-unit>
        <trans-unit id="02736a97b0f28b320047652ff9db6e4230fbb7da" translate="yes" xml:space="preserve">
          <source>Pattern Synonyms (sub constructs)</source>
          <target state="translated">模式同义词(子结构)</target>
        </trans-unit>
        <trans-unit id="cc7430cf470514ab4cb77ac5dbdcb450d6be72dc" translate="yes" xml:space="preserve">
          <source>Pattern in Haskell given in &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{}&lt;/code&gt; 中给出的Haskell模式</target>
        </trans-unit>
        <trans-unit id="006f91db2b8fd81b325a7a341c644b6d5a498639" translate="yes" xml:space="preserve">
          <source>Pattern match on a type constructor</source>
          <target state="translated">类型构造函数的模式匹配</target>
        </trans-unit>
        <trans-unit id="429f1b07411fa0d99aa1398b100abdf4c33d79a4" translate="yes" xml:space="preserve">
          <source>Pattern match on a type constructor including its instantiated kind variables.</source>
          <target state="translated">类型构造函数的模式匹配,包括它的实例化种类变量。</target>
        </trans-unit>
        <trans-unit id="6bca3430dd62bc5373edba36f1b7fdbacb161c1c" translate="yes" xml:space="preserve">
          <source>Pattern splices introduce variable binders but scoping of variables in expressions inside the pattern&amp;rsquo;s scope is only checked when a splice is run. Note that pattern splices that occur outside of any quotation brackets are run at compile time. Pattern splices occurring inside a quotation bracket are &lt;em&gt;not&lt;/em&gt; run at compile time; they are run when the bracket is spliced in, sometime later. For example,</source>
          <target state="translated">模式拼接引入了变量绑定器，但是仅在运行拼接时才检查模式范围内表达式中变量的作用域。请注意，出现在任何引号括号之外的模式拼接在编译时运行。引号括弧内出现的模式拼接在编译时&lt;em&gt;不会&lt;/em&gt;运行；它们在拼接支架时运行，稍后再运行。例如，</target>
        </trans-unit>
        <trans-unit id="a6afa01cf2dd70cd7e0003f6ed14c46fc954840d" translate="yes" xml:space="preserve">
          <source>Pattern splices: anonymous and named wildcards can be used in pattern signatures. Note that &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt;&lt;code&gt;ScopedTypeVariables&lt;/code&gt;&lt;/a&gt; has to be enabled to allow pattern signatures. Extra-constraints wildcards are not supported, just like in regular pattern signatures.</source>
          <target state="translated">模式拼接：模式签名中可以使用匿名通配符和命名通配符。请注意，必须启用&lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt; &lt;code&gt;ScopedTypeVariables&lt;/code&gt; &lt;/a&gt;才能允许模式签名。不像常规模式签名一样，不支持额外约束通配符。</target>
        </trans-unit>
        <trans-unit id="2f77741e8cc6b9f0b1d51a80487612daf3480f01" translate="yes" xml:space="preserve">
          <source>Pattern synonym declaration</source>
          <target state="translated">模式同义词声明</target>
        </trans-unit>
        <trans-unit id="87f1062186506aaa4f45d8a2e88afacdc300284d" translate="yes" xml:space="preserve">
          <source>Pattern synonym declarations can only occur in the top level of a module. In particular, they are not allowed as local definitions.</source>
          <target state="translated">模式同义词声明只能出现在一个模块的顶层。特别是,它们不允许作为本地定义。</target>
        </trans-unit>
        <trans-unit id="d2c3bb10828440ff7c7e123c5c710d07e5748ac9" translate="yes" xml:space="preserve">
          <source>Pattern synonym examples</source>
          <target state="translated">模式同义词例子</target>
        </trans-unit>
        <trans-unit id="c5e40750951e5693f88641df15605c5bd88c4b78" translate="yes" xml:space="preserve">
          <source>Pattern synonym type signature</source>
          <target state="translated">模式同义词类型签名</target>
        </trans-unit>
        <trans-unit id="51c5410ff060e342b214a06f194717b99df3b318" translate="yes" xml:space="preserve">
          <source>Pattern synonym types interact with TH when (a) reifying a pattern synonym, (b) pretty printing, or (c) specifying a pattern synonym's type signature explicitly:</source>
          <target state="translated">模式同义词类型在以下情况下与TH交互:(a)重述模式同义词,(b)漂亮打印,或(c)明确指定模式同义词的类型签名。</target>
        </trans-unit>
        <trans-unit id="f1ad9c9cdb2599bd5e1fe2e83cbb8368c9be95f6" translate="yes" xml:space="preserve">
          <source>Pattern synonyms</source>
          <target state="translated">模式的同义词</target>
        </trans-unit>
        <trans-unit id="f284b9c8384401a92e74a36de73bee9bba48c472" translate="yes" xml:space="preserve">
          <source>Pattern synonyms are enabled by the language extension &lt;a href=&quot;#extension-PatternSynonyms&quot;&gt;&lt;code&gt;PatternSynonyms&lt;/code&gt;&lt;/a&gt;, which is required for defining them, but &lt;em&gt;not&lt;/em&gt; for using them. More information and examples of pattern synonyms can be found on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms&quot;&gt;Wiki page&lt;/a&gt;.</source>
          <target state="translated">模式同义词由语言扩展&lt;a href=&quot;#extension-PatternSynonyms&quot;&gt; &lt;code&gt;PatternSynonyms&lt;/code&gt; &lt;/a&gt;启用，这是定义它们（而&lt;em&gt;不是&lt;/em&gt;使用它们）所必需的。可以在&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms&quot;&gt;Wiki页面&lt;/a&gt;上找到更多信息和模式同义词示例。</target>
        </trans-unit>
        <trans-unit id="3892448115b360ea1d603f7a781a0d734d72148a" translate="yes" xml:space="preserve">
          <source>Pattern synonyms are enabled by the language extension &lt;a href=&quot;#extension-PatternSynonyms&quot;&gt;&lt;code&gt;PatternSynonyms&lt;/code&gt;&lt;/a&gt;, which is required for defining them, but &lt;em&gt;not&lt;/em&gt; for using them. More information and examples of pattern synonyms can be found on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/pattern-synonyms&quot;&gt;Wiki page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0924abc7007f369091850e500801334d4015307f" translate="yes" xml:space="preserve">
          <source>Pattern synonyms are not supported.</source>
          <target state="translated">不支持模式同义词。</target>
        </trans-unit>
        <trans-unit id="34d581f8945b7df9b46a71872a91832ad9199e66" translate="yes" xml:space="preserve">
          <source>Pattern synonyms cannot be defined recursively.</source>
          <target state="translated">模式同义词不能递归定义。</target>
        </trans-unit>
        <trans-unit id="2dc90cc727d872f8ad295d8c8e70891697a625b4" translate="yes" xml:space="preserve">
          <source>Pattern synonyms enable giving names to parametrized pattern schemes. They can also be thought of as abstract constructors that don&amp;rsquo;t have a bearing on data representation. For example, in a programming language implementation, we might represent types of the language as follows:</source>
          <target state="translated">模式同义词可以为参数化的模式方案命名。也可以将它们视为与数据表示形式无关的抽象构造函数。例如，在一种编程语言实现中，我们可能表示语言的类型如下：</target>
        </trans-unit>
        <trans-unit id="f21344d9f424a665540813e111458633c97a5bdc" translate="yes" xml:space="preserve">
          <source>Pattern synonyms permit abstracting from the representation to expose matchers that behave in a constructor-like manner with respect to pattern matching. We can create pattern synonyms for the known types we care about, without committing the representation to them (note that these don&amp;rsquo;t have to be defined in the same module as the &lt;code&gt;Type&lt;/code&gt; type):</source>
          <target state="translated">模式同义词允许从表示形式中抽象出来，以揭示匹配器，这些匹配器在模式匹配方面表现出类似于构造函数的方式。我们可以为我们关心的已知类型创建模式同义词，而无需将表示形式提交给它们（请注意，不必在与 &lt;code&gt;Type&lt;/code&gt; 类型相同的模块中定义它们）：</target>
        </trans-unit>
        <trans-unit id="f1b5e68af793661029a634f35b2a59b11f9b9320" translate="yes" xml:space="preserve">
          <source>PatternGuards</source>
          <target state="translated">PatternGuards</target>
        </trans-unit>
        <trans-unit id="b082623c56fa21b4be183e2556bcea6fc12a68f9" translate="yes" xml:space="preserve">
          <source>PatternMatchFail</source>
          <target state="translated">PatternMatchFail</target>
        </trans-unit>
        <trans-unit id="8b4c340e8567284d5ccd5a9a1b9deca1c715a890" translate="yes" xml:space="preserve">
          <source>PatternSynonyms</source>
          <target state="translated">PatternSynonyms</target>
        </trans-unit>
        <trans-unit id="4d34f7a2b0b3b6df62a051917d7e7ac2de8a38df" translate="yes" xml:space="preserve">
          <source>Patterns</source>
          <target state="translated">Patterns</target>
        </trans-unit>
        <trans-unit id="5aa426e2424e04e94a5a3e7b592a1b40bfa6724a" translate="yes" xml:space="preserve">
          <source>Pc: Punctuation, Connector</source>
          <target state="translated">Pc:标点符号,连接器</target>
        </trans-unit>
        <trans-unit id="30297337298c9a17c0e9ce8ff4fbffe4052874dd" translate="yes" xml:space="preserve">
          <source>Pd: Punctuation, Dash</source>
          <target state="translated">Pd:标点符号,破折号</target>
        </trans-unit>
        <trans-unit id="a80098f29b2d23293bbe78beff8b9cdca1b4c011" translate="yes" xml:space="preserve">
          <source>Pe: Punctuation, Close</source>
          <target state="translated">Pe:标点符号,关闭</target>
        </trans-unit>
        <trans-unit id="d2ade9ac589ddabb36b03a6f5440ab0dd29693cc" translate="yes" xml:space="preserve">
          <source>Per default the events are written to &lt;code&gt;&lt;em&gt;program&lt;/em&gt;.eventlog&lt;/code&gt; though the mechanism for writing event log data can be overridden with a custom &lt;code&gt;EventLogWriter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31566e3d063dad33b6e08c2f7f3e776d7e1473fd" translate="yes" xml:space="preserve">
          <source>Per default the events are written to &lt;code&gt;&lt;em&gt;program&lt;/em&gt;.eventlog&lt;/code&gt; though the mechanism for writing event log data can be overriden with a custom &lt;code&gt;EventLogWriter&lt;/code&gt;.</source>
          <target state="translated">尽管可以使用自定义 &lt;code&gt;EventLogWriter&lt;/code&gt; 覆盖写入事件日志数据的机制，但默认情况下，事件会写入 &lt;code&gt;&lt;em&gt;program&lt;/em&gt;.eventlog&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f7ef19e5bbcb51e651936b58513fef51416adde3" translate="yes" xml:space="preserve">
          <source>Perform a series of STM actions atomically.</source>
          <target state="translated">以原子方式执行一系列STM动作。</target>
        </trans-unit>
        <trans-unit id="2c9ff4fe99f8968fc212ca25889a616ce793a23b" translate="yes" xml:space="preserve">
          <source>Perform compilation in parallel when possible. GHC will use up to ⟨N⟩ threads during compilation. If N is omitted, then it defaults to the number of processors. Note that compilation of a module may not begin until its dependencies have been built.</source>
          <target state="translated">尽可能地进行并行编译。GHC在编译过程中最多使用⟨N⟩线程。如果省略N,则默认为处理器的数量。需要注意的是,一个模块的编译可能要等到它的依赖关系被建立后才开始。</target>
        </trans-unit>
        <trans-unit id="f08a49b25677e2e61a727558011649fabe0e79a8" translate="yes" xml:space="preserve">
          <source>Perform other memory allocation, including in the GC, from node-local memory.</source>
          <target state="translated">从节点本地内存进行其他内存分配,包括在GC中。</target>
        </trans-unit>
        <trans-unit id="9c8aeaee99f19647da8cbc145bb54bbe2aea3ac7" translate="yes" xml:space="preserve">
          <source>Perform some computation without adding new entries to the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">执行一些计算而无需向 &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 添加新条目。</target>
        </trans-unit>
        <trans-unit id="bc6f40aca7e3932befef5ea8a6cf34162fbd455b" translate="yes" xml:space="preserve">
          <source>Perform some simplification of a built up &lt;code&gt;GDoc&lt;/code&gt;.</source>
          <target state="translated">对构建的 &lt;code&gt;GDoc&lt;/code&gt; 进行一些简化。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="a40043065024f7a1212f7fbbfa9112c036c35b22" translate="yes" xml:space="preserve">
          <source>Performance information</source>
          <target state="translated">业绩信息</target>
        </trans-unit>
        <trans-unit id="2195bce8153488b859e69e630a7482f89cfcc5de" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;fdatasync(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">对文件描述符执行 &lt;code&gt;fdatasync(2)&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="b7a0417e81aba8bc8d001bca03740cbc7548d90f" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;fsync(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">对文件描述符执行 &lt;code&gt;fsync(2)&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="b29525a36bb807819b75d77b028444eec3dd3744" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;posix_fadvise(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">对文件描述符执行 &lt;code&gt;posix_fadvise(2)&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="abc537c00b7a43d3addf179337e100cbe868862f" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;posix_fallocate(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">对文件描述符执行 &lt;code&gt;posix_fallocate(2)&lt;/code&gt; 操作。</target>
        </trans-unit>
        <trans-unit id="979b1f14628086440e0d691aadba7221f17405ab" translate="yes" xml:space="preserve">
          <source>Performs completions from the given line state.</source>
          <target state="translated">从给定的行状态中执行完成。</target>
        </trans-unit>
        <trans-unit id="d6f5806ebaf90276049ece561409944ce93d2f6e" translate="yes" xml:space="preserve">
          <source>PermParser</source>
          <target state="translated">PermParser</target>
        </trans-unit>
        <trans-unit id="4636c20125232583a78fcf9bd2b7beb3e0ee79a6" translate="yes" xml:space="preserve">
          <source>PermissionDenied</source>
          <target state="translated">PermissionDenied</target>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="translated">Permissions</target>
        </trans-unit>
        <trans-unit id="d8940d325390445ba152697d12492c72d0b04785" translate="yes" xml:space="preserve">
          <source>Permit definition of instances which may lead to type-checker non-termination.</source>
          <target state="translated">允许定义可能导致类型检查员不终止的实例。</target>
        </trans-unit>
        <trans-unit id="393bb39440da7f4d26358355203d3146a3259f99" translate="yes" xml:space="preserve">
          <source>Permute</source>
          <target state="translated">Permute</target>
        </trans-unit>
        <trans-unit id="bf005fa540ff716e77993a2f382021660a60dc6a" translate="yes" xml:space="preserve">
          <source>Pf: Punctuation, Final quote</source>
          <target state="translated">Pf:标点符号,最后引用</target>
        </trans-unit>
        <trans-unit id="130c4886394ecb032566d46f2ceb00d5633b56b7" translate="yes" xml:space="preserve">
          <source>PhantomR</source>
          <target state="translated">PhantomR</target>
        </trans-unit>
        <trans-unit id="5c5efd35d4de06a56cd9d8bce7ff35054fbfb6e4" translate="yes" xml:space="preserve">
          <source>Phase of the compilation system</source>
          <target state="translated">汇编系统的阶段</target>
        </trans-unit>
        <trans-unit id="1299c5da4d36f7c6543acebafdc41ccf1b565939" translate="yes" xml:space="preserve">
          <source>Phases</source>
          <target state="translated">Phases</target>
        </trans-unit>
        <trans-unit id="9e4383ed7770bf7128e27cfd3770dcc6a2f9ac77" translate="yes" xml:space="preserve">
          <source>Pi: Punctuation, Initial quote</source>
          <target state="translated">皮。标点符号,初始报价</target>
        </trans-unit>
        <trans-unit id="6dc7779c6f76a5529f40811ad41c4010cc153569" translate="yes" xml:space="preserve">
          <source>Picking the right capability will help avoid unnecessary context switches. Ideally you should pass the capability that the thread that will be woken up last ran on, which you can find by calling &lt;code&gt;threadCapability&lt;/code&gt; in Haskell.</source>
          <target state="translated">选择正确的功能将有助于避免不必要的上下文切换。理想情况下，您应该传递上一次将被唤醒的线程所运行的功能，可以通过在Haskell中调用 &lt;code&gt;threadCapability&lt;/code&gt; 来找到该功能。</target>
        </trans-unit>
        <trans-unit id="6b18587952820d0dbe6bad15e1dae415748031e5" translate="yes" xml:space="preserve">
          <source>Pico</source>
          <target state="translated">Pico</target>
        </trans-unit>
        <trans-unit id="f298de9cea75ea5230dda5d9d28b4989aaf746f4" translate="yes" xml:space="preserve">
          <source>Pid</source>
          <target state="translated">Pid</target>
        </trans-unit>
        <trans-unit id="00dae071c082bb73eaed17b4bb3429280e110e8c" translate="yes" xml:space="preserve">
          <source>Pipe</source>
          <target state="translated">Pipe</target>
        </trans-unit>
        <trans-unit id="24a740d84ffcf739518c3074866ef1329aa79368" translate="yes" xml:space="preserve">
          <source>PipeBufferLimit</source>
          <target state="translated">PipeBufferLimit</target>
        </trans-unit>
        <trans-unit id="785af2a4ad3c4ee912623c6e0b6d4299ea305bf6" translate="yes" xml:space="preserve">
          <source>Pipes</source>
          <target state="translated">Pipes</target>
        </trans-unit>
        <trans-unit id="9e0a7d72506eac8eb62beb562cc0a99b2b58da61" translate="yes" xml:space="preserve">
          <source>PkgName</source>
          <target state="translated">PkgName</target>
        </trans-unit>
        <trans-unit id="323e26c5cebb97e7dbf03cace1de3f19bb3506f8" translate="yes" xml:space="preserve">
          <source>Place each generated function or data item into its own section in the output file if the target supports arbitrary sections. The name of the function or the name of the data item determines the section&amp;rsquo;s name in the output file.</source>
          <target state="translated">如果目标支持任意部分，则将每个生成的函数或数据项放入输出文件中其自己的部分中。函数的名称或数据项的名称决定了输出文件中该节的名称。</target>
        </trans-unit>
        <trans-unit id="7dccde26d3e873a5cc6c187e13a2e64082046864" translate="yes" xml:space="preserve">
          <source>Placing &lt;code&gt;INLINE&lt;/code&gt; pragmas on certain functions that are used a lot can have a dramatic effect. See &lt;a href=&quot;glasgow_exts#inline-pragma&quot;&gt;INLINE pragma&lt;/a&gt;.</source>
          <target state="translated">将 &lt;code&gt;INLINE&lt;/code&gt; 实用程序放在经常使用的某些功能上会产生巨大的影响。请参阅&lt;a href=&quot;glasgow_exts#inline-pragma&quot;&gt;INLINE编译指示&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a5104db6573a7bcd152469e6c86edf365a7ccbe8" translate="yes" xml:space="preserve">
          <source>Placing a &lt;code&gt;.ghci&lt;/code&gt; file in a directory with a Haskell project is a useful way to set certain project-wide options so you don&amp;rsquo;t have to type them every time you start GHCi: eg. if your project uses multi-parameter type classes, scoped type variables, and CPP, and has source files in three subdirectories A, B and C, you might put the following lines in &lt;code&gt;.ghci&lt;/code&gt;:</source>
          <target state="translated">将 &lt;code&gt;.ghci&lt;/code&gt; 文件放在具有Haskell项目的目录中是一种设置某些项目范围内选项的有用方法，因此您不必在每次启动GHCi时都键入它们：如果您的项目使用多参数类型类，作用域类型变量和CPP，并且源文件位于三个子目录A，B和C中，则可以在 &lt;code&gt;.ghci&lt;/code&gt; 中添加以下行：</target>
        </trans-unit>
        <trans-unit id="9c995f73efb3edc21d7f6d4456e31809091cc4f7" translate="yes" xml:space="preserve">
          <source>Platform differences</source>
          <target state="translated">平台差异</target>
        </trans-unit>
        <trans-unit id="f47156297a84abbf7baa9ecfe8129e469a19a3f7" translate="yes" xml:space="preserve">
          <source>Please advise us of other &amp;ldquo;helpful hints&amp;rdquo; that should go here!</source>
          <target state="translated">请告诉我们其他应该在此处的&amp;ldquo;有用提示&amp;rdquo;！</target>
        </trans-unit>
        <trans-unit id="7eaa184d05b12ec4d0c22d4d64c1a97838a9baab" translate="yes" xml:space="preserve">
          <source>Please also note that when doing incremental compilation (by &lt;code&gt;ghc --make&lt;/code&gt; or &lt;code&gt;ghc -c&lt;/code&gt;), this directory is where GHC looks into to find extended interface files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f5a17562e092a639487a7dbd4558ee40520423" translate="yes" xml:space="preserve">
          <source>Please also note that when doing incremental compilation (by &lt;code&gt;ghc --make&lt;/code&gt; or &lt;code&gt;ghc -c&lt;/code&gt;), this directory is where GHC looks into to find interface files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc75381c4117eac8071f7754c526f344d1d5cfd7" translate="yes" xml:space="preserve">
          <source>Please also note that when doing incremental compilation, this directory is where GHC looks into to find object files from previous builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506c81a0d84a987facc6b6cad61df64acf77c49e" translate="yes" xml:space="preserve">
          <source>Please do not confuse &lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-except#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;, respectively. The latter are for exceptions built into GHC, by default, and are mostly used from within the IO monad. They do not interact with the &quot;exceptions&quot; in this package at all. This package allows you to define a new kind of exception control mechanism which does not necessarily need your code to be placed in the IO monad.</source>
          <target state="translated">请不要将 &lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;control-monad-except#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; 与 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; 分别混淆。默认情况下，后者是GHC内置的例外，通常在IO monad内部使用。它们根本不与该程序包中的&amp;ldquo;例外&amp;rdquo;进行交互。该软件包允许您定义一种新型的异常控制机制，该机制不一定需要将代码放置在IO monad中。</target>
        </trans-unit>
        <trans-unit id="c692e6e78b4a6c4d677fe5be7d6b2a1582726f5d" translate="yes" xml:space="preserve">
          <source>Please do not confuse &lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-except#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;, respectively. The latter are for exceptions built into GHC, by default, and are mostly used from within the IO monad. They do not interact with the &quot;exceptions&quot; in this package at all. This package allows you to define a new kind of exception control mechanism which does not necessarily need your code to be placed in the IO monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c73afae87542d6e8cd63fcf7f4fddd71f7004f" translate="yes" xml:space="preserve">
          <source>Please make sure you know what is going on when using &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;, otherwise you can be surprised by unexpected code growth or even corruption of the data structure.</source>
          <target state="translated">请确保您知道使用 &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; 时发生了什么，否则您可能会因意外的代码增长甚至数据结构损坏而感到惊讶。</target>
        </trans-unit>
        <trans-unit id="5600a929920bed98ead548566e18fe4443f663d1" translate="yes" xml:space="preserve">
          <source>Please make sure you know what is going on when using &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;, otherwise you can be surprised by unexpected code growth or even corruption of the data structure.</source>
          <target state="translated">请确保您知道使用 &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; 时发生了什么，否则您可能会因意外的代码增长甚至数据结构损坏而感到惊讶。</target>
        </trans-unit>
        <trans-unit id="e69690c3be83e6b82a76a0137695bb5c56adc7bc" translate="yes" xml:space="preserve">
          <source>Please make sure you know what is going on when using &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;, otherwise you can be surprised by unexpected code growth or even corruption of the data structure.</source>
          <target state="translated">请确保您知道使用 &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; 时发生了什么，否则您可能会因意外的代码增长甚至数据结构损坏而感到惊讶。</target>
        </trans-unit>
        <trans-unit id="11da447f43cf46de988876b5572b594db0d725d8" translate="yes" xml:space="preserve">
          <source>Please report any overly-slow GHC-compiled programs. Since GHC doesn&amp;rsquo;t have any credible competition in the performance department these days it&amp;rsquo;s hard to say what overly-slow means, so just use your judgement! Of course, if a GHC compiled program runs slower than the same program compiled with NHC or Hugs, then it&amp;rsquo;s definitely a bug.</source>
          <target state="translated">请报告任何GHC编译过慢的程序。由于GHC如今在绩效部门中没有任何可信的竞争，因此很难说过慢意味着什么，所以请使用您的判断！当然，如果GHC编译程序的运行速度比使用NHC或Hugs编译的程序慢，那么这肯定是一个错误。</target>
        </trans-unit>
        <trans-unit id="fe030bc44cd445dd18c598d2cb1edf112abb8e3c" translate="yes" xml:space="preserve">
          <source>Please report line-number errors that you find particularly unhelpful.</source>
          <target state="translated">请报告您认为特别无益的行号错误。</target>
        </trans-unit>
        <trans-unit id="4bd277cac9b50a94c530d065fbd95d2bb254e2e7" translate="yes" xml:space="preserve">
          <source>Please see the GHC API documentation for more about how to use internal APIs, etc.</source>
          <target state="translated">关于如何使用内部API等,请参见GHC API文档。</target>
        </trans-unit>
        <trans-unit id="cda26be1b0861c9ec0b102448fed676a99b6b48e" translate="yes" xml:space="preserve">
          <source>Please, oh please, use the &lt;code&gt;-v&lt;/code&gt; option when reporting bugs! Knowing that you ran the right bits in the right order is always the first thing we want to verify.</source>
          <target state="translated">请，哦，请在报告错误时使用 &lt;code&gt;-v&lt;/code&gt; 选项！知道您以正确的顺序运行了正确的位始终是我们要验证的第一件事。</target>
        </trans-unit>
        <trans-unit id="6f4d3ab5a5554b6ec4bae40adfb407a50ae52738" translate="yes" xml:space="preserve">
          <source>Plugin code runs in the &lt;code&gt;TcPluginM&lt;/code&gt; monad, which provides a restricted interface to GHC API functionality that is relevant for typechecker plugins, including &lt;code&gt;IO&lt;/code&gt; and reading the environment. If you need functionality that is not exposed in the &lt;code&gt;TcPluginM&lt;/code&gt; module, you can use &lt;code&gt;unsafeTcPluginTcM :: TcM a -&amp;gt; TcPluginM a&lt;/code&gt;, but are encouraged to contact the GHC team to suggest additions to the interface. Note that &lt;code&gt;TcPluginM&lt;/code&gt; can perform arbitrary IO via &lt;code&gt;tcPluginIO :: IO a -&amp;gt; TcPluginM a&lt;/code&gt;, although some care must be taken with side effects (particularly in &lt;code&gt;tcPluginSolve&lt;/code&gt;). In general, it is up to the plugin author to make sure that any IO they do is safe.</source>
          <target state="translated">插件代码在 &lt;code&gt;TcPluginM&lt;/code&gt; monad中运行，该插件提供GHC API功能的受限接口，该接口与typechecker插件（包括 &lt;code&gt;IO&lt;/code&gt; 和读取环境）相关。如果您需要 &lt;code&gt;TcPluginM&lt;/code&gt; 模块中未提供的功能，则可以使用 &lt;code&gt;unsafeTcPluginTcM :: TcM a -&amp;gt; TcPluginM a&lt;/code&gt; ，但是建议联系GHC团队以建议对该接口进行补充。请注意，尽管必须特别注意副作用，但 &lt;code&gt;TcPluginM&lt;/code&gt; 可以通过 &lt;code&gt;tcPluginIO :: IO a -&amp;gt; TcPluginM a&lt;/code&gt; 执行任意IO （尤其是在 &lt;code&gt;tcPluginSolve&lt;/code&gt; 中）。通常，由插件作者来确定他们所做的任何IO是安全的。</target>
        </trans-unit>
        <trans-unit id="0a02b13ee0dd37a4f7f44345efb7f4d0b31df1b9" translate="yes" xml:space="preserve">
          <source>Plugin modules live in a separate namespace from the user import namespace. By default, these two namespaces are the same; however, there are a few command line options which control specifically plugin packages:</source>
          <target state="translated">插件模块与用户导入的命名空间是分开的,默认情况下,这两个命名空间是一样的,但是,有一些命令行选项可以控制专门的插件包。默认情况下,这两个命名空间是相同的;然而,有一些命令行选项可以专门控制插件包。</target>
        </trans-unit>
        <trans-unit id="f76e0a28ea1fdb9e9e6ad3248cf9ef3d98836e8e" translate="yes" xml:space="preserve">
          <source>Plugins are modules that export at least a single identifier, &lt;code&gt;plugin&lt;/code&gt;, of type &lt;code&gt;GhcPlugins.Plugin&lt;/code&gt;. All plugins should &lt;code&gt;import GhcPlugins&lt;/code&gt; as it defines the interface to the compilation pipeline.</source>
          <target state="translated">插件是导出至少一个 &lt;code&gt;GhcPlugins.Plugin&lt;/code&gt; 类型的单个标识符 &lt;code&gt;plugin&lt;/code&gt; 的模块。所有插件都应 &lt;code&gt;import GhcPlugins&lt;/code&gt; 因为它定义了编译管道的接口。</target>
        </trans-unit>
        <trans-unit id="50a78f3b1666118502953351a9e4c0ece78555a4" translate="yes" xml:space="preserve">
          <source>Plugins are provided with all available constraints (including equalities and typeclass constraints), but it is easy for them to discard those that are not relevant to their domain, because they need return only those constraints for which they have made progress (either by solving or contradicting them).</source>
          <target state="translated">插件提供了所有可用的约束条件(包括等价性和类型类约束条件),但它们很容易抛弃那些与它们的领域无关的约束条件,因为它们只需要返回那些它们已经取得进展的约束条件(无论是通过解决还是矛盾)。</target>
        </trans-unit>
        <trans-unit id="bcfecc84377584d4ad3cb1e967e83c8d968b6d81" translate="yes" xml:space="preserve">
          <source>Plugins can be added on the command line with the &lt;a href=&quot;#ghc-flag--fplugin=%E2%9F%A8module%E2%9F%A9&quot;&gt;&lt;code&gt;-fplugin=⟨module⟩&lt;/code&gt;&lt;/a&gt; option where ⟨module⟩ is a module in a registered package that exports the plugin. Arguments can be passed to the plugins with the &lt;a href=&quot;#ghc-flag--fplugin-opt=%E2%9F%A8module%E2%9F%A9:%E2%9F%A8args%E2%9F%A9&quot;&gt;&lt;code&gt;-fplugin-opt=⟨module⟩:⟨args⟩&lt;/code&gt;&lt;/a&gt; option. The list of enabled plugins can be reset with the &lt;a href=&quot;#ghc-flag--fclear-plugins&quot;&gt;&lt;code&gt;-fclear-plugins&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">可以使用&lt;a href=&quot;#ghc-flag--fplugin=%E2%9F%A8module%E2%9F%A9&quot;&gt; &lt;code&gt;-fplugin=⟨module⟩&lt;/code&gt; &lt;/a&gt;选项在命令行中添加插件，其中⟨module⟩是已注册软件包中用于导出插件的模块。可以使用&lt;a href=&quot;#ghc-flag--fplugin-opt=%E2%9F%A8module%E2%9F%A9:%E2%9F%A8args%E2%9F%A9&quot;&gt; &lt;code&gt;-fplugin-opt=⟨module⟩:⟨args⟩&lt;/code&gt; &lt;/a&gt;选项将参数传递给插件。可以使用&lt;a href=&quot;#ghc-flag--fclear-plugins&quot;&gt; &lt;code&gt;-fclear-plugins&lt;/code&gt; &lt;/a&gt;选项重置启用的插件列表。</target>
        </trans-unit>
        <trans-unit id="9dae985525fa5c1bd52094480c5fadf0801829a6" translate="yes" xml:space="preserve">
          <source>Plugins cannot optimize/inspect C--, nor can they implement things like parser/front-end modifications like GCC, apart from limited changes to the constraint solver. If you feel strongly that any of these restrictions are too onerous, &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/mailing-lists-and-irc&quot;&gt;please give the GHC team a shout&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c33bcc738bc3d4e4633fbe0d574f0b8c7bf15d" translate="yes" xml:space="preserve">
          <source>Plugins cannot optimize/inspect C-\-, nor can they implement things like parser/front-end modifications like GCC, apart from limited changes to the constraint solver. If you feel strongly that any of these restrictions are too onerous, &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/MailingListsAndIRC&quot;&gt;please give the GHC team a shout&lt;/a&gt;.</source>
          <target state="translated">插件无法优化/检查C-\-，也不能实现诸如解析器/前端修改之类的功能（如GCC），除了对约束求解器的有限更改之外。如果您强烈认为上述限制中的任何一项都过于繁重，&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/MailingListsAndIRC&quot;&gt;请向GHC小组大喊一声&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="657ba732d1e87d8b93008540bca513f726773ecb" translate="yes" xml:space="preserve">
          <source>Plugins do not work with &lt;code&gt;-fexternal-interpreter&lt;/code&gt;. If you need to run plugins with &lt;code&gt;-fexternal-interpreter&lt;/code&gt; let GHC developers know in &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14335&quot;&gt;#14335&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acd4a0590b84ad78012a8281aa3759223cdd151" translate="yes" xml:space="preserve">
          <source>Plugins do not work with &lt;code&gt;-fexternal-interpreter&lt;/code&gt;. If you need to run plugins with &lt;code&gt;-fexternal-interpreter&lt;/code&gt; let GHC developers know in &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14335&quot;&gt;Issue #14335&lt;/a&gt;.</source>
          <target state="translated">插件不适用于 &lt;code&gt;-fexternal-interpreter&lt;/code&gt; 。如果您需要使用 &lt;code&gt;-fexternal-interpreter&lt;/code&gt; 运行插件，请在&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14335&quot;&gt;问题＃14335中&lt;/a&gt;告知GHC开发人员。</target>
        </trans-unit>
        <trans-unit id="0d1483c843780c87aec4fd3aa51d7d94a8b96a4e" translate="yes" xml:space="preserve">
          <source>Po: Punctuation, Other</source>
          <target state="translated">Po:标点符号,其他</target>
        </trans-unit>
        <trans-unit id="f79a28423ed1ae0232efb54ad41227d0955084f3" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="translated">Point</target>
        </trans-unit>
        <trans-unit id="a7f9dff21b1ddcdcf80248743f347d8d0da9bd72" translate="yes" xml:space="preserve">
          <source>Pointer equality.</source>
          <target state="translated">指针平等。</target>
        </trans-unit>
        <trans-unit id="c8e8cc6922489fcddbf0a22dd3e2de7b10d8bd37" translate="yes" xml:space="preserve">
          <source>Polar form</source>
          <target state="translated">极性形式</target>
        </trans-unit>
        <trans-unit id="08ec06c8c3d316a130a751bea478b9d8cd36463e" translate="yes" xml:space="preserve">
          <source>Poll the semaphore until it is available, then lock it. Unlike semWait, this will block only the current thread rather than the entire process.</source>
          <target state="translated">轮询信号体直到它可用,然后锁定它。与semWait不同的是,这将只阻塞当前线程而不是整个进程。</target>
        </trans-unit>
        <trans-unit id="f60030530d452b22d889af65e4dbea1ad5231ba6" translate="yes" xml:space="preserve">
          <source>PolyKinds</source>
          <target state="translated">PolyKinds</target>
        </trans-unit>
        <trans-unit id="778627418cb4b30cdfe47281afdbf30f1a173700" translate="yes" xml:space="preserve">
          <source>Pool</source>
          <target state="translated">Pool</target>
        </trans-unit>
        <trans-unit id="41b680d741ab1eaec7b7f722d04d7131ec90b3b5" translate="yes" xml:space="preserve">
          <source>Pool management</source>
          <target state="translated">泳池管理</target>
        </trans-unit>
        <trans-unit id="71deae26a59f4c366e9d565ae1eea4f3ace4a347" translate="yes" xml:space="preserve">
          <source>Pools are currently implemented using &lt;code&gt;malloc/free&lt;/code&gt;, so while they might be a more convenient way to structure your memory allocation than using one of the other forms of allocation, they won&amp;rsquo;t be any more efficient. We do plan to provide an improved-performance implementation of Pools in the future, however.</source>
          <target state="translated">池当前是使用 &lt;code&gt;malloc/free&lt;/code&gt; 实现的，因此尽管与使用其他形式的分配相比，它们可能是一种更方便的结构化内存分配方式，但它们的效率不会更高。但是，我们确实计划在将来提供性能更好的Pools实现。</target>
        </trans-unit>
        <trans-unit id="2df5eed666ad15052a9c4b2714990bcfc3e1bfe4" translate="yes" xml:space="preserve">
          <source>Pop the ByteString we have constructed so far, if any, yielding a new chunk in the result ByteString.</source>
          <target state="translated">弹出到目前为止我们已经构建的ByteString,如果有的话,在结果ByteString中产生一个新的块。</target>
        </trans-unit>
        <trans-unit id="fe9afec2cdc2c7d8517084a2d65a63864d25ccaa" translate="yes" xml:space="preserve">
          <source>Pop the most recent call-site off the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 弹出最近的呼叫站点。</target>
        </trans-unit>
        <trans-unit id="184d55340a7ea9436efac0e4b30658a294cc194c" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator on the tag, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用标签上提供的比较器，从队列中弹出最小的元素，当比较器返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt; 时，推迟到项目的原始位置。</target>
        </trans-unit>
        <trans-unit id="0c1beba4a0f9fa2d27717b6fdfbe4fe2c7701db7" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator on the tag, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8d7b36ba997a86666ef5b0a2e955a7f3121f1d" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator on the tag.</source>
          <target state="translated">使用标签上提供的比较器,从队列中弹出最小的元素。</target>
        </trans-unit>
        <trans-unit id="d0305355484ccbf0a5332dd6a8f21a5cc2b3e243" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用提供的比较器从队列中弹出最小的元素，当比较器返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt; 时，推迟到项目的原始位置。</target>
        </trans-unit>
        <trans-unit id="01d0a772369a2f419cd1206d689c75ab3f892dbb" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecde65687583e5067a6f236eb0adeaea9fb3c926" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator.</source>
          <target state="translated">使用提供的比较器,从队列中取出最小的元素。</target>
        </trans-unit>
        <trans-unit id="b307b88c84327b1804aee227595be53342245965" translate="yes" xml:space="preserve">
          <source>Portability</source>
          <target state="translated">Portability</target>
        </trans-unit>
        <trans-unit id="1bacaf21b2fe90b21bbc565ba919a04acd5baee5" translate="yes" xml:space="preserve">
          <source>Portable</source>
          <target state="translated">Portable</target>
        </trans-unit>
        <trans-unit id="89d8f29ace289b18dbbef31338d9cf587f44295f" translate="yes" xml:space="preserve">
          <source>Portable to Hugs and GHC. Requires MPTCs</source>
          <target state="translated">便携于Hugs和GHC。需要MPTCs</target>
        </trans-unit>
        <trans-unit id="d67331323a539f65439ac2219e811fa90a48d4a1" translate="yes" xml:space="preserve">
          <source>Portions Copyright : (c) Tom Harper 2008-2009, (c) Bryan O'Sullivan 2009, (c) Duncan Coutts 2009</source>
          <target state="translated">部分版权:(c)Tom Harper 2008-2009,(c)Bryan O'Sullivan 2009,(c)Duncan Coutts 2009。</target>
        </trans-unit>
        <trans-unit id="3db8887ea19a282f0bf7fbe5de701083bec25186" translate="yes" xml:space="preserve">
          <source>Portions obtained from hbc (c) Lennart Augusstson</source>
          <target state="translated">从hbc获得的部分 (c)Lennart Augusstson。</target>
        </trans-unit>
        <trans-unit id="c9b1b30d011fe2b612eff7c95b1c553cdf039f7c" translate="yes" xml:space="preserve">
          <source>Pos</source>
          <target state="translated">Pos</target>
        </trans-unit>
        <trans-unit id="cf1c85adba548e8d681255278976584a7e4a44de" translate="yes" xml:space="preserve">
          <source>Position</source>
          <target state="translated">Position</target>
        </trans-unit>
        <trans-unit id="718239faf2c7ad4b5be8fc3d53f933e6298dd64c" translate="yes" xml:space="preserve">
          <source>Position in file</source>
          <target state="translated">在档案中的位置</target>
        </trans-unit>
        <trans-unit id="a98f91ff888a0baac961ccc11866ac56d92f3491" translate="yes" xml:space="preserve">
          <source>Position independent executables are required by some platforms as they enable address-space layout randomization (ASLR), a common security measure. They can also be useful as they can be dynamically loaded and used as shared libraries by other executables.</source>
          <target state="translated">一些平台需要独立于位置的可执行文件,因为它们可以实现地址-空间布局随机化(ASLR),这是一种常见的安全措施。它们也很有用,因为它们可以被其他可执行文件动态加载并作为共享库使用。</target>
        </trans-unit>
        <trans-unit id="6a42e40e7381223e58fc6699427898624e3d568b" translate="yes" xml:space="preserve">
          <source>Position independent executables should be dynamically-linked (e.g. built with &lt;a href=&quot;#ghc-flag--dynamic&quot;&gt;&lt;code&gt;-dynamic&lt;/code&gt;&lt;/a&gt; and only loaded into other dynamically-linked executables to ensure that only one &lt;code&gt;libHSrts&lt;/code&gt; is present if loaded into the address space of another Haskell process.</source>
          <target state="translated">位置无关的可执行文件应进行动态链接（例如，使用&lt;a href=&quot;#ghc-flag--dynamic&quot;&gt; &lt;code&gt;-dynamic&lt;/code&gt; &lt;/a&gt;构建，并且仅加载到其他动态链接的可执行文件中，以确保如果加载到另一个Haskell进程的地址空间中，则仅存在一个 &lt;code&gt;libHSrts&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f21a0136d6ab8fb27cd7d944927f57c96bb35706" translate="yes" xml:space="preserve">
          <source>PosixVersion</source>
          <target state="translated">PosixVersion</target>
        </trans-unit>
        <trans-unit id="6662b9da87a72fea9bd249c0718c63c20d41c5e4" translate="yes" xml:space="preserve">
          <source>Postcomposition with a pure function (right-to-left variant).</source>
          <target state="translated">纯函数的后组合(从右到左的变体)。</target>
        </trans-unit>
        <trans-unit id="68b34bc77c96ccaa5d23f02c3788537d21fd9171" translate="yes" xml:space="preserve">
          <source>Postcomposition with a pure function.</source>
          <target state="translated">用纯函数进行后组合。</target>
        </trans-unit>
        <trans-unit id="c4450a1082e97ad779541d6b592b90e8113cd10b" translate="yes" xml:space="preserve">
          <source>PostfixOperators</source>
          <target state="translated">PostfixOperators</target>
        </trans-unit>
        <trans-unit id="5190c068a9cfa9fe6dafeaa183d9b2aaef45c829" translate="yes" xml:space="preserve">
          <source>Ppr</source>
          <target state="translated">Ppr</target>
        </trans-unit>
        <trans-unit id="0c19dcec06f6c91c0f2eff83d377b3454295bda3" translate="yes" xml:space="preserve">
          <source>PprM</source>
          <target state="translated">PprM</target>
        </trans-unit>
        <trans-unit id="38f93d32853eca4603a582eb7a404079e10b855d" translate="yes" xml:space="preserve">
          <source>Pragma</source>
          <target state="translated">Pragma</target>
        </trans-unit>
        <trans-unit id="6a503249a0dda8aeffc97783a04cdefe488d7002" translate="yes" xml:space="preserve">
          <source>Pragmas all take the form &lt;code&gt;{-# word ... #-}&lt;/code&gt; where ⟨word⟩ indicates the type of pragma, and is followed optionally by information specific to that type of pragma. Case is ignored in ⟨word⟩. The various values for ⟨word⟩ that GHC understands are described in the following sections; any pragma encountered with an unrecognised ⟨word⟩ is ignored. The layout rule applies in pragmas, so the closing &lt;code&gt;#-}&lt;/code&gt; should start in a column to the right of the opening &lt;code&gt;{-#&lt;/code&gt;.</source>
          <target state="translated">语法全都采用 &lt;code&gt;{-# word ... #-}&lt;/code&gt; ，其中⟨word⟩表示语法的类型，并在其后可选地包含特定于该语法的信息。在&amp;ldquo;单词&amp;rdquo;中忽略大小写。以下各节介绍了GHC可以理解的&amp;ldquo;单词&amp;rdquo;的各种值；遇到无法识别的&amp;ldquo;单词&amp;rdquo;时，将忽略所有杂语。布局规则适用于编译指示，因此结尾的 &lt;code&gt;#-}&lt;/code&gt; 应该在开头 &lt;code&gt;{-#&lt;/code&gt; 右边的一列中开始。</target>
        </trans-unit>
        <trans-unit id="de91c36fde9f78913dd737b3ac96a872a8cf867b" translate="yes" xml:space="preserve">
          <source>Pre-defined directories</source>
          <target state="translated">预先定义的目录</target>
        </trans-unit>
        <trans-unit id="b7f5558e808991eda01cbcf863b6fb9f860df9c3" translate="yes" xml:space="preserve">
          <source>Pre-emption</source>
          <target state="translated">Pre-emption</target>
        </trans-unit>
        <trans-unit id="616e1d6e6f47b2dc96ac1a5ae54540016239b6ef" translate="yes" xml:space="preserve">
          <source>Pre-processing is optional, the &lt;a href=&quot;phases#ghc-flag--cpp&quot;&gt;&lt;code&gt;-cpp&lt;/code&gt;&lt;/a&gt; flag turns it on. See &lt;a href=&quot;phases#c-pre-processor&quot;&gt;Options affecting the C pre-processor&lt;/a&gt; for more details.</source>
          <target state="translated">预处理是可选的，&lt;a href=&quot;phases#ghc-flag--cpp&quot;&gt; &lt;code&gt;-cpp&lt;/code&gt; &lt;/a&gt;标志将其打开。有关更多详细信息，请参见&lt;a href=&quot;phases#c-pre-processor&quot;&gt;影响C预处理程序的选项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b56df0dc547f1c3c9c6bdf3cf6bc836ae75d592f" translate="yes" xml:space="preserve">
          <source>Prec</source>
          <target state="translated">Prec</target>
        </trans-unit>
        <trans-unit id="ab86fb82a986460447b29bbb55ca5b9bf867bad6" translate="yes" xml:space="preserve">
          <source>Precedence</source>
          <target state="translated">Precedence</target>
        </trans-unit>
        <trans-unit id="69d353b33ac29db4cf194048bdbcd68112b6f57f" translate="yes" xml:space="preserve">
          <source>Precedence operations</source>
          <target state="translated">优先权业务</target>
        </trans-unit>
        <trans-unit id="6e9db1fa77d52cf522ad8a7a915070250aa06a60" translate="yes" xml:space="preserve">
          <source>Precedences</source>
          <target state="translated">Precedences</target>
        </trans-unit>
        <trans-unit id="7d4c782369e2a524fee0cc4b706316c8a2f516ce" translate="yes" xml:space="preserve">
          <source>Precomposition with a pure function (right-to-left variant).</source>
          <target state="translated">纯函数的预组合(从右到左的变体)。</target>
        </trans-unit>
        <trans-unit id="7efe8aecf7d7ec9a6579a56c2d3f073a07aea88e" translate="yes" xml:space="preserve">
          <source>Precomposition with a pure function.</source>
          <target state="translated">用纯函数进行预组合。</target>
        </trans-unit>
        <trans-unit id="754ba6611e7bacba5a9fb90876697ee505efa3e8" translate="yes" xml:space="preserve">
          <source>Pred</source>
          <target state="translated">Pred</target>
        </trans-unit>
        <trans-unit id="7b11e8e297f569849de36b44d30fcbbb4fbbe8ad" translate="yes" xml:space="preserve">
          <source>PredQ</source>
          <target state="translated">PredQ</target>
        </trans-unit>
        <trans-unit id="9eee28bfd739e1debf4d3b892d013537ae16da9f" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="translated">Predicate</target>
        </trans-unit>
        <trans-unit id="5d3249c48d800f447f533f0fa317e54353a59d06" translate="yes" xml:space="preserve">
          <source>Predicate determining whether the first argument is inside the second argument.</source>
          <target state="translated">确定第一个参数是否在第二个参数内部的谓词。</target>
        </trans-unit>
        <trans-unit id="55b56b7a38f2aaf5493f86b3d26035da3508b3bb" translate="yes" xml:space="preserve">
          <source>Predicate to select exceptions</source>
          <target state="translated">选择例外情况的谓词</target>
        </trans-unit>
        <trans-unit id="74ff649a3a1be6633677b33ec66e3623a45738d8" translate="yes" xml:space="preserve">
          <source>Predicates</source>
          <target state="translated">Predicates</target>
        </trans-unit>
        <trans-unit id="96b847cc7746c0d1f7662c2ba5e962da4df9bff5" translate="yes" xml:space="preserve">
          <source>Predicates on documents</source>
          <target state="translated">文件的谓词</target>
        </trans-unit>
        <trans-unit id="90eceb016c51a762f15c7287008c113f6f37296c" translate="yes" xml:space="preserve">
          <source>Prefix</source>
          <target state="translated">Prefix</target>
        </trans-unit>
        <trans-unit id="10a0703c5e9784ab6072eefca5e5d67b8bab1aea" translate="yes" xml:space="preserve">
          <source>PrefixI</source>
          <target state="translated">PrefixI</target>
        </trans-unit>
        <trans-unit id="3d7f56ffea75d06f65599fca02fef48b1a3c121a" translate="yes" xml:space="preserve">
          <source>Prefs</source>
          <target state="translated">Prefs</target>
        </trans-unit>
        <trans-unit id="2d8e8af65e69e615c74499754307d13c9b3e4bab" translate="yes" xml:space="preserve">
          <source>Prelude</source>
          <target state="translated">Prelude</target>
        </trans-unit>
        <trans-unit id="17951797c095385f82b7ed2be1b0b9cbd50b504e" translate="yes" xml:space="preserve">
          <source>Prepares an empty write buffer. This lets the device decide how to set up a write buffer: the buffer may need to point to a specific location in memory, for example. This is typically used by the client when switching from reading to writing on a buffered read/write device.</source>
          <target state="translated">准备一个空的写缓冲区。这让设备决定如何设置写缓冲区:例如,缓冲区可能需要指向内存中的特定位置。这通常是客户端在缓冲读/写设备上从读切换到写时使用的。</target>
        </trans-unit>
        <trans-unit id="e756fbcebaf305207bf892820ae2fb41ad4bdd3f" translate="yes" xml:space="preserve">
          <source>Prepend an element to the stream.</source>
          <target state="translated">将一个元素预置到流中。</target>
        </trans-unit>
        <trans-unit id="24451f10c39a033b9d567c3384a201089e447d0e" translate="yes" xml:space="preserve">
          <source>Present a visual alert using the &lt;code&gt;flash&lt;/code&gt; capability.</source>
          <target state="translated">使用 &lt;code&gt;flash&lt;/code&gt; 功能显示视觉警报。</target>
        </trans-unit>
        <trans-unit id="0f1fbb34fcfce7c17bb348ece516318a4a36a3e4" translate="yes" xml:space="preserve">
          <source>Presently, only standard constraints, tuples and type synonyms for those two sorts of constraint are permitted in instance contexts and superclasses (without extra flags). The reason is that permitting more general constraints can cause type checking to loop, as it would with these two programs:</source>
          <target state="translated">目前,在实例上下文和超类中只允许标准约束、元组和这两种约束的类型同义词(没有额外的标志)。原因是允许更多的通用约束会导致类型检查循环,就像这两个程序一样。</target>
        </trans-unit>
        <trans-unit id="3a533287e20f4ecff2b1e94d9ecd624990690055" translate="yes" xml:space="preserve">
          <source>Preserve, unchanged, the entries whose keys are missing from the other map.</source>
          <target state="translated">保留其他地图中键值缺失的条目,保持不变。</target>
        </trans-unit>
        <trans-unit id="b0f7adbbb69e916ea1927afb55f2ecddd2cc7a5f" translate="yes" xml:space="preserve">
          <source>Pretty</source>
          <target state="translated">Pretty</target>
        </trans-unit>
        <trans-unit id="9bfe234869187d35c7a0ae4cca314aded4bb1a5b" translate="yes" xml:space="preserve">
          <source>Pretty much anyone who uses this function is in a state of sin because whether or not a character is encodable will, in general, depend on the context in which it occurs.</source>
          <target state="translated">几乎所有使用这个功能的人都处于罪恶状态,因为一个字符是否可以编码,一般来说,会取决于它出现的上下文。</target>
        </trans-unit>
        <trans-unit id="9a3ba5e8fa76ce9f1f76507bf772a40b2714f091" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">漂亮打印一个 &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6dedd939f5eb8f17de16de0deb9579148f161282" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-exception#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">漂亮地打印一个 &lt;code&gt;&lt;a href=&quot;ghc-exception#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d2157c3e2c2e08e7d9469e18b1d6d2509fdc1116" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">漂亮打印一个 &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24a5908c42be14f75c50cae9cb71fef066d896a2" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-stack#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">漂亮地打印一个 &lt;code&gt;&lt;a href=&quot;ghc-stack#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="296539186fb752a49f377917ff5a8b60910cd510" translate="yes" xml:space="preserve">
          <source>Pretty print a value with the &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; level.</source>
          <target state="translated">用 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; 级别漂亮地打印一个值。</target>
        </trans-unit>
        <trans-unit id="dee0fe2bf13d7aeaf670d551f0f8e724a8229133" translate="yes" xml:space="preserve">
          <source>Pretty print a value with the &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; level.</source>
          <target state="translated">用 &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; 级别漂亮地打印一个值。</target>
        </trans-unit>
        <trans-unit id="3902ef81760a73ba152aafba884456ad6ae55826" translate="yes" xml:space="preserve">
          <source>Pretty print the type. &lt;code&gt;ShowType :: k -&amp;gt; ErrorMessage&lt;/code&gt;</source>
          <target state="translated">漂亮打印类型。 &lt;code&gt;ShowType :: k -&amp;gt; ErrorMessage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d1c61942f4d68589a44b45a71c4f04ff54f0e46" translate="yes" xml:space="preserve">
          <source>Pretty printing class, simlar to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; but nicer looking.</source>
          <target state="translated">漂亮的印刷课，类似的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; 但看起来更好。</target>
        </trans-unit>
        <trans-unit id="fb9fb477d57eb6faf402bf1e5b55cd7c5bcd432d" translate="yes" xml:space="preserve">
          <source>Pretty printing class, simlar to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; but nicer looking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa35ad6c9b5033404eb8f0e2bfca62d78aef25b2" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">漂亮的印刷课。优先级别的使用方式与 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; 类中的使用方式类似。最小的完整定义是 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6003344bfaa462ef2829aa012e40d0f204fd8d4b" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">漂亮的印刷课。优先级别的使用方式与 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; 类中的使用方式类似。最小的完整定义是 &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7605fec354fe6f4bc05aa4679861cd3ca163d486" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ed9c1885cc6441472c3a338a7ff234773679fa" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0b905e0e2fe34c10df06c3257897a0d4174db5" translate="yes" xml:space="preserve">
          <source>Pretty printing via &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprPatSynType&quot;&gt;pprPatSynType&lt;/a&gt;&lt;/code&gt; abbreviates a pattern synonym's type unambiguously in concrete syntax: The rule of thumb is to print initial empty universals and the required context as &lt;code&gt;() =&amp;gt;&lt;/code&gt;, if existentials and a provided context follow. If only universals and their required context, but no existentials are specified, only the universals and their required context are printed. If both or none are specified, so both (or none) are printed.</source>
          <target state="translated">通过 &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprPatSynType&quot;&gt;pprPatSynType&lt;/a&gt;&lt;/code&gt; 进行漂亮的打印将在具体语法中明确地缩写出模式同义词的类型：经验法则是，如果遵循存在和提供的上下文，则将初始的空通用字符和所需的上下文打印为 &lt;code&gt;() =&amp;gt;&lt;/code&gt; 。如果仅指定通用性及其所需的上下文，但未指定存在性，则仅打印通用性及其所需的上下文。如果未指定任何一个或全部，则同时打印两个（或全部）。</target>
        </trans-unit>
        <trans-unit id="913403112273ef6e2854bcf0f8c908964725c43b" translate="yes" xml:space="preserve">
          <source>Pretty prints a pattern synonym type signature</source>
          <target state="translated">漂亮的打印图案同义词类型签名</target>
        </trans-unit>
        <trans-unit id="d4e682f695f1f2c1d3c722dd6d5b3b250860bb3f" translate="yes" xml:space="preserve">
          <source>Pretty prints a pattern synonym's type; follows the usual conventions to print a pattern synonym type compactly, yet unambiguously. See the note on &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:PatSynType&quot;&gt;PatSynType&lt;/a&gt;&lt;/code&gt; and the section on pattern synonyms in the GHC user's guide for more information.</source>
          <target state="translated">Pretty打印模式同义词的类型；遵循通常的约定来紧凑而明确地打印模式同义词类型。有关更多信息，请参见GHC用户指南中有关 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:PatSynType&quot;&gt;PatSynType&lt;/a&gt;&lt;/code&gt; 的注释和有关模式同义词的部分。</target>
        </trans-unit>
        <trans-unit id="f7763808de129b1653f86f4b6c4478b1be06d267" translate="yes" xml:space="preserve">
          <source>Pretty typeclass</source>
          <target state="translated">漂亮的类型</target>
        </trans-unit>
        <trans-unit id="9e53c1cac90b48260e445d3942d8dc757e8a9ad1" translate="yes" xml:space="preserve">
          <source>Pretty-printer</source>
          <target state="translated">Pretty-printer</target>
        </trans-unit>
        <trans-unit id="299e09a4ecf7d0f0c71dd28f182c4640d6372f53" translate="yes" xml:space="preserve">
          <source>PrettyLevel</source>
          <target state="translated">PrettyLevel</target>
        </trans-unit>
        <trans-unit id="cfad1a2758e3a164bd5b4b3f7f8ff793ee9e089b" translate="yes" xml:space="preserve">
          <source>Prevent loading of the user&amp;rsquo;s local package database in the initial stack.</source>
          <target state="translated">防止在初始堆栈中加载用户的本地软件包数据库。</target>
        </trans-unit>
        <trans-unit id="82f73f32fff7781aec7b0b514e54e58cf7551ee7" translate="yes" xml:space="preserve">
          <source>Prevents the compiler from applying the monomorphism restriction to bindings lacking explicit type signatures.</source>
          <target state="translated">防止编译器将单形限制应用于缺乏显式类型签名的绑定。</target>
        </trans-unit>
        <trans-unit id="9628fe995a8e090e6fd2edb95cb73c1eb15224d5" translate="yes" xml:space="preserve">
          <source>Previous versions of GHC accepted &lt;code&gt;OPTIONS&lt;/code&gt; rather than &lt;code&gt;OPTIONS_GHC&lt;/code&gt;, but that is now deprecated.</source>
          <target state="translated">GHC的 &lt;code&gt;OPTIONS_GHC&lt;/code&gt; 版本接受 &lt;code&gt;OPTIONS&lt;/code&gt; 而不是OPTIONS_GHC，但现已弃用。</target>
        </trans-unit>
        <trans-unit id="91406666c314d5f229091e983a7d1e2bee142e52" translate="yes" xml:space="preserve">
          <source>Previously we discussed annotation pragmas (&lt;a href=&quot;#annotation-pragmas&quot;&gt;Source annotations&lt;/a&gt;), which we mentioned could be used to give compiler plugins extra guidance or information. Annotations for a module can be retrieved by a plugin, but you must go through the modules &lt;code&gt;ModGuts&lt;/code&gt; in order to get it. Because annotations can be arbitrary instances of &lt;code&gt;Data&lt;/code&gt; and &lt;code&gt;Typeable&lt;/code&gt;, you need to give a type annotation specifying the proper type of data to retrieve from the interface file, and you need to make sure the annotation type used by your users is the same one your plugin uses. For this reason, we advise distributing annotations as part of the package which also provides compiler plugins if possible.</source>
          <target state="translated">先前我们讨论了注释注释（&lt;a href=&quot;#annotation-pragmas&quot;&gt;源注释&lt;/a&gt;），我们提到的注释注释可用于为编译器插件提供额外的指导或信息。可以通过插件检索模块的注释，但是必须通过模块 &lt;code&gt;ModGuts&lt;/code&gt; 才能获取它。由于注释可以是 &lt;code&gt;Data&lt;/code&gt; 和 &lt;code&gt;Typeable&lt;/code&gt; 的任意实例，因此您需要提供一种类型注释，以指定要从接口文件中检索的数据的正确类型，并且需要确保用户使用的注释类型与您的插件相同用途。因此，我们建议在程序包中分发注释，如果可能的话，它还提供编译器插件。</target>
        </trans-unit>
        <trans-unit id="c4a698fc939e769737cd9fa4869e3c7f6a0dd613" translate="yes" xml:space="preserve">
          <source>Prim</source>
          <target state="translated">Prim</target>
        </trans-unit>
        <trans-unit id="097f7b8f054d460e64f528c1af758136a46531eb" translate="yes" xml:space="preserve">
          <source>PrimMVar</source>
          <target state="translated">PrimMVar</target>
        </trans-unit>
        <trans-unit id="b7683822a291cb2b58d760a6c293578f8d5053f1" translate="yes" xml:space="preserve">
          <source>Primality tests</source>
          <target state="translated">首要性测试</target>
        </trans-unit>
        <trans-unit id="82232b5d4e89a2db12db9f128d9da3055f65c345" translate="yes" xml:space="preserve">
          <source>Primarily, this module consists of an interface to the C-land dynamic linker.</source>
          <target state="translated">主要是这个模块包括一个C地动态链接器的接口。</target>
        </trans-unit>
        <trans-unit id="0889b00639729e1c129ac932d18003c7a198375f" translate="yes" xml:space="preserve">
          <source>Primary format character.</source>
          <target state="translated">主要格式字符:</target>
        </trans-unit>
        <trans-unit id="d2a03ab0b74a812f6fdc4dae75971c24107ba46b" translate="yes" xml:space="preserve">
          <source>Primary group ID (pw_gid)</source>
          <target state="translated">主要群体ID(pw_gid)</target>
        </trans-unit>
        <trans-unit id="7607b51c8e1274c8fe1e933fecba18513d4f362a" translate="yes" xml:space="preserve">
          <source>PrimaryLANGID</source>
          <target state="translated">PrimaryLANGID</target>
        </trans-unit>
        <trans-unit id="cdd32e5e2d189473b1b0376cb2f1fe6ef6aad406" translate="yes" xml:space="preserve">
          <source>Primitive (unboxed) types cannot be defined in Haskell, and are therefore built into the language and compiler. Primitive types are always unlifted; that is, a value of a primitive type cannot be bottom. (Note: a &amp;ldquo;boxed&amp;rdquo; type means that a value is represented by a pointer to a heap object; a &amp;ldquo;lifted&amp;rdquo; type means that terms of that type may be bottom. See the next paragraph for an example.) We use the convention (but it is only a convention) that primitive types, values, and operations have a &lt;code&gt;#&lt;/code&gt; suffix (see &lt;a href=&quot;#magic-hash&quot;&gt;The magic hash&lt;/a&gt;). For some primitive types we have special syntax for literals, also described in the &lt;a href=&quot;#magic-hash&quot;&gt;same section&lt;/a&gt;.</source>
          <target state="translated">无法在Haskell中定义原始（未装箱）类型，因此它们被内置在语言和编译器中。原始类型总是不被提升的。也就是说，基本类型的值不能为底部。 （注意：&amp;ldquo;盒装&amp;rdquo;类型表示值由指向堆对象的指针表示；&amp;ldquo;提升&amp;rdquo;类型表示该类型的术语可能在底部。有关示例，请参见下一段。）我们使用约定（但仅是一个约定）原始类型，值和操作都带有 &lt;code&gt;#&lt;/code&gt; 后缀（请参阅&lt;a href=&quot;#magic-hash&quot;&gt;魔术哈希&lt;/a&gt;）。对于某些原始类型，我们对文字有特殊的语法，这在&lt;a href=&quot;#magic-hash&quot;&gt;同一部分中&lt;/a&gt;也有介绍。</target>
        </trans-unit>
        <trans-unit id="81e9ce0c637b5622aea322e7cbd9b861a8cb4dc6" translate="yes" xml:space="preserve">
          <source>Primitive Documents</source>
          <target state="translated">原始文件</target>
        </trans-unit>
        <trans-unit id="f422d79426f666f61a7d39fe5b03b368a8e73a13" translate="yes" xml:space="preserve">
          <source>Primitive bytecode type.</source>
          <target state="translated">原始字节码类型。</target>
        </trans-unit>
        <trans-unit id="c1c26c88e959f52e5cf4888bbad7bcf524b8820f" translate="yes" xml:space="preserve">
          <source>Primitive combinators</source>
          <target state="translated">原始组合器</target>
        </trans-unit>
        <trans-unit id="2e21eceae717d39a08de608f7fc31fb7d5627808" translate="yes" xml:space="preserve">
          <source>Primitive movement capabilities</source>
          <target state="translated">原始的移动能力</target>
        </trans-unit>
        <trans-unit id="c2de126cf4ab0cd60ff18f3b3c4a2455396c348e" translate="yes" xml:space="preserve">
          <source>Primitive operations</source>
          <target state="translated">原始操作</target>
        </trans-unit>
        <trans-unit id="7e8cb2eba99c97514ca435a92c7b1f3eff1bdea3" translate="yes" xml:space="preserve">
          <source>Primitive values are often represented by a simple bit-pattern, such as &lt;code&gt;Int#&lt;/code&gt;, &lt;code&gt;Float#&lt;/code&gt;, &lt;code&gt;Double#&lt;/code&gt;. But this is not necessarily the case: a primitive value might be represented by a pointer to a heap-allocated object. Examples include &lt;code&gt;Array#&lt;/code&gt;, the type of primitive arrays. Thus, &lt;code&gt;Array#&lt;/code&gt; is an unlifted, boxed type. A primitive array is heap-allocated because it is too big a value to fit in a register, and would be too expensive to copy around; in a sense, it is accidental that it is represented by a pointer. If a pointer represents a primitive value, then it really does point to that value: no unevaluated thunks, no indirections. Nothing can be at the other end of the pointer than the primitive value. A numerically-intensive program using unboxed types can go a &lt;em&gt;lot&lt;/em&gt; faster than its &amp;ldquo;standard&amp;rdquo; counterpart&amp;mdash;we saw a threefold speedup on one example.</source>
          <target state="translated">原始值通常由简单的位模式表示，例如 &lt;code&gt;Int#&lt;/code&gt; ， &lt;code&gt;Float#&lt;/code&gt; ， &lt;code&gt;Double#&lt;/code&gt; 。但这不是必然的情况：原始值可能由指向堆分配对象的指针表示。示例包括 &lt;code&gt;Array#&lt;/code&gt; （原始数组的类型）。因此， &lt;code&gt;Array#&lt;/code&gt; 是未装箱的盒装类型。原始数组是堆分配的，因为它太大了以至于不能容纳在寄存器中，并且复制起来太昂贵了。从某种意义上说，它是由指针表示的。如果指针表示原始值，则它确实指向该值：没有未评估的重击，没有间接引用。指针的另一端不能是原始值。使用未装箱的类型可以去一个一个数字密集型程序&lt;em&gt;很多&lt;/em&gt;比它的&amp;ldquo;标准&amp;rdquo;更快的对方，我们看到的一个例子的三倍加速。</target>
        </trans-unit>
        <trans-unit id="ffafa88c6f976297b9421ad4171675a387b485a2" translate="yes" xml:space="preserve">
          <source>Primitives</source>
          <target state="translated">Primitives</target>
        </trans-unit>
        <trans-unit id="66914127445228947976717f3559fb76a49308ac" translate="yes" xml:space="preserve">
          <source>Primitives and basic combinators</source>
          <target state="translated">基元和基本组合器</target>
        </trans-unit>
        <trans-unit id="0f20585a9b902d862530a747335f7e0f0fd615e0" translate="yes" xml:space="preserve">
          <source>Primitives are available to decode words of various sizes, both big and little endian.</source>
          <target state="translated">基元可用于解码大小不一的字,包括大恩字和小恩字。</target>
        </trans-unit>
        <trans-unit id="c11324a450fecb745dc9a0165fed6d81224cd078" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;RuntimeRep&lt;/code&gt; parameters as they appear; otherwise, they are defaulted to &lt;code&gt;'LiftedRep&lt;/code&gt;.</source>
          <target state="translated">打印出现的 &lt;code&gt;RuntimeRep&lt;/code&gt; 参数；否则，它们默认为 &lt;code&gt;'LiftedRep&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eeb81239159c8f60639d490579db34ba47cedde5" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;RuntimeRep&lt;/code&gt; variables in types which are runtime-representation polymorphic.</source>
          <target state="translated">以运行时表示多态的类型打印 &lt;code&gt;RuntimeRep&lt;/code&gt; 变量。</target>
        </trans-unit>
        <trans-unit id="eb7f33c02cf627c59368ecbf1b10534cd5ee7098" translate="yes" xml:space="preserve">
          <source>Print GHC&amp;rsquo;s numeric version number only.</source>
          <target state="translated">仅打印GHC的数字版本号。</target>
        </trans-unit>
        <trans-unit id="5a8565f8c11652d5f9aaf3cf4b7da14d30635811" translate="yes" xml:space="preserve">
          <source>Print a full list of the module dependencies to stdout. (This is the standard verbosity flag, so the list will also be displayed with &lt;code&gt;-v3&lt;/code&gt; and &lt;code&gt;-v4&lt;/code&gt;; see &lt;a href=&quot;using#options-help&quot;&gt;Verbosity options&lt;/a&gt;.)</source>
          <target state="translated">将模块依赖项的完整列表打印到stdout。（这是标准的详细程度标志，因此该列表还将与 &lt;code&gt;-v3&lt;/code&gt; 和 &lt;code&gt;-v4&lt;/code&gt; 一起显示；请参见&lt;a href=&quot;using#options-help&quot;&gt;详细选项&lt;/a&gt;。）</target>
        </trans-unit>
        <trans-unit id="80be7ba4189d5acb5419cc416166ad88b14a93ab" translate="yes" xml:space="preserve">
          <source>Print a one-line string including GHC&amp;rsquo;s version number.</source>
          <target state="translated">打印包含GHC版本号的单行字符串。</target>
        </trans-unit>
        <trans-unit id="2bc805e229391602d4747b2b177e7eedc95c2396" translate="yes" xml:space="preserve">
          <source>Print a one-line summary of the size of the Core program at the end of the optimisation pipeline</source>
          <target state="translated">在优化管道结束时,打印核心计划规模的单行摘要</target>
        </trans-unit>
        <trans-unit id="568fb95ae04c3a3502b02cfb9ffd902745997992" translate="yes" xml:space="preserve">
          <source>Print a one-line summary of the size of the Core program at the end of the optimisation pipeline.</source>
          <target state="translated">在优化管道结束时,打印核心程序规模的单行摘要。</target>
        </trans-unit>
        <trans-unit id="6606d0f053fe23bd0db8aac9087cd16974cb24e2" translate="yes" xml:space="preserve">
          <source>Print coercions in types</source>
          <target state="translated">类型的印刷品胁迫</target>
        </trans-unit>
        <trans-unit id="0432cd36a550ecbc08a2b9824c1b63189a9b6ee6" translate="yes" xml:space="preserve">
          <source>Print explicit &lt;code&gt;forall&lt;/code&gt; quantification in types. See also &lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt;&lt;code&gt;-XExplicitForAll&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">打印类型的显式 &lt;code&gt;forall&lt;/code&gt; 定量。另请参见&lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt; &lt;code&gt;-XExplicitForAll&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37d21fefc9ecda651a1fad5250210b879a85ecad" translate="yes" xml:space="preserve">
          <source>Print explicit &lt;code&gt;forall&lt;/code&gt; quantification in types. See also &lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt;&lt;code&gt;ExplicitForAll&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d90f3662f54252f7284d92a4b10054139a2658" translate="yes" xml:space="preserve">
          <source>Print explicit kind foralls and kind arguments in types. See also &lt;a href=&quot;glasgow_exts#extension-KindSignatures&quot;&gt;&lt;code&gt;-XKindSignatures&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">打印显式的kind forall和类型中的kind参数。另请参见&lt;a href=&quot;glasgow_exts#extension-KindSignatures&quot;&gt; &lt;code&gt;-XKindSignatures&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e56540a92be164f6f8a1c47dd5d494997f195e34" translate="yes" xml:space="preserve">
          <source>Print explicit kind foralls and kind arguments in types. See also &lt;a href=&quot;glasgow_exts#extension-KindSignatures&quot;&gt;&lt;code&gt;KindSignatures&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc5df58f6562a5f05e5a96496e219a954a057a2" translate="yes" xml:space="preserve">
          <source>Print extra information from typechecker.</source>
          <target state="translated">打印来自tyechecker的额外信息。</target>
        </trans-unit>
        <trans-unit id="1c689b67035c8c53f98145aff3c638fb305e66de" translate="yes" xml:space="preserve">
          <source>Print information about the compiler.</source>
          <target state="translated">打印关于编译器的信息。</target>
        </trans-unit>
        <trans-unit id="c17674ed7a508bc28415982ff7aee239af184532" translate="yes" xml:space="preserve">
          <source>Print out each pass name as it happens</source>
          <target state="translated">打印出每张通行证的名称,因为它发生</target>
        </trans-unit>
        <trans-unit id="6346e07b56af6623e4a5cded288d10867e65bab0" translate="yes" xml:space="preserve">
          <source>Print out each pass name, its runtime and heap allocations as it happens. Note that this may come at a slight performance cost as the compiler will be a bit more eager in forcing pass results to more accurately account for their costs.</source>
          <target state="translated">打印出每个通证的名称,它的运行时间和发生时的堆分配。请注意,这可能会带来轻微的性能代价,因为编译器会更急切地强迫传递结果更准确地计算其成本。</target>
        </trans-unit>
        <trans-unit id="5e4bdf4d18e7fa5c826928aec79e1ccb449c15ff" translate="yes" xml:space="preserve">
          <source>Print out summary of what kind of information the renamer had to bring in.</source>
          <target state="translated">打印出重命名者必须带入的信息摘要。</target>
        </trans-unit>
        <trans-unit id="bc9a53e87cca6954b36dc36c0f11d367ea1e424e" translate="yes" xml:space="preserve">
          <source>Print out usage information.</source>
          <target state="translated">打印出使用信息。</target>
        </trans-unit>
        <trans-unit id="b2c88a9f866c4e0f0dc02f44c6ee50187a966424" translate="yes" xml:space="preserve">
          <source>Print single alternative case expressions as strict lets.</source>
          <target state="translated">将单一的备选案例表达式打印成严格的让。</target>
        </trans-unit>
        <trans-unit id="8fb7a347c6a4aa8013e70856b20c399cd1c29ff8" translate="yes" xml:space="preserve">
          <source>Print single alternative case expressions as though they were strict let expressions. This is helpful when your code does a lot of unboxing.</source>
          <target state="translated">打印单个替代的case表达式,就像打印严格的let表达式一样。当你的代码需要进行大量的拆箱操作时,这很有帮助。</target>
        </trans-unit>
        <trans-unit id="2d376b6f72267ae8b071df5ba4178bc23f3f30f8" translate="yes" xml:space="preserve">
          <source>Print the name of each compilation phase as it is executed. (equivalent to &lt;a href=&quot;debugging#ghc-flag--dshow-passes&quot;&gt;&lt;code&gt;-dshow-passes&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">在执行时打印每个编译阶段的名称。（相当于&lt;a href=&quot;debugging#ghc-flag--dshow-passes&quot;&gt; &lt;code&gt;-dshow-passes&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="2d35a116b4eacba35aab727296180081e67d78e2" translate="yes" xml:space="preserve">
          <source>Print the path to GHC&amp;rsquo;s library directory. This is the top of the directory tree containing GHC&amp;rsquo;s libraries, interfaces, and include files (usually something like &lt;code&gt;/usr/local/lib/ghc-5.04&lt;/code&gt; on Unix). This is the value of &lt;code&gt;$libdir&lt;/code&gt; in the package configuration file (see &lt;a href=&quot;packages#packages&quot;&gt;Packages&lt;/a&gt;).</source>
          <target state="translated">打印到GHC的库目录的路径。这是目录树的顶部，其中包含GHC的库，接口和包含文件（在Unix上通常类似于 &lt;code&gt;/usr/local/lib/ghc-5.04&lt;/code&gt; ）。这是软件包配置文件中 &lt;code&gt;$libdir&lt;/code&gt; 的值（请参阅&lt;a href=&quot;packages#packages&quot;&gt;Packages&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7dddff095a26ddf9987f527bca4da1fdb41bb6b7" translate="yes" xml:space="preserve">
          <source>Print the supported command line options. This flag can be used for autocompletion in a shell.</source>
          <target state="translated">打印支持的命令行选项。这个标志可以用于shell中的自动完成。</target>
        </trans-unit>
        <trans-unit id="0de10c90956a31b467677165023124cbf6667b11" translate="yes" xml:space="preserve">
          <source>Print the supported language extensions.</source>
          <target state="translated">打印支持的语言扩展。</target>
        </trans-unit>
        <trans-unit id="0536d584c0b1d66d30f2000068d79cde18e65738" translate="yes" xml:space="preserve">
          <source>Print values of type &lt;code&gt;Word#&lt;/code&gt; and &lt;code&gt;Word64#&lt;/code&gt; (but not values of type &lt;code&gt;Int#&lt;/code&gt; and &lt;code&gt;Int64#&lt;/code&gt;) in hexadecimal instead of decimal. The hexadecimal is zero-padded to make the length of the representation a power of two. For example: &lt;code&gt;0x0A0A##&lt;/code&gt;, &lt;code&gt;0x000FFFFF##&lt;/code&gt;, &lt;code&gt;0xC##&lt;/code&gt;. This flag may be helpful when you are producing a bit pattern that to expect to work correctly on a 32-bit or a 64-bit architecture. Dumping hexadecimal literals after optimizations and constant folding makes it easier to confirm that the generated bit pattern is correct.</source>
          <target state="translated">用十六进制而不是十进制打印 &lt;code&gt;Word#&lt;/code&gt; 和 &lt;code&gt;Word64#&lt;/code&gt; 类型的值（但不打印 &lt;code&gt;Int#&lt;/code&gt; 和 &lt;code&gt;Int64#&lt;/code&gt; 类型的值）。十六进制填充零以使表示的长度为2的幂。例如： &lt;code&gt;0x0A0A##&lt;/code&gt; ， &lt;code&gt;0x000FFFFF##&lt;/code&gt; ， &lt;code&gt;0xC##&lt;/code&gt; 。当您生成期望在32位或64位体系结构上正常工作的位模式时，此标志可能会有所帮助。经过优化和常量折叠后转储十六进制文字，可以更轻松地确认生成的位模式是否正确。</target>
        </trans-unit>
        <trans-unit id="3c8fc49ee76dfe430eaaae5d2c003a633432f9f0" translate="yes" xml:space="preserve">
          <source>Print values of type &lt;code&gt;Word#&lt;/code&gt; in hexadecimal.</source>
          <target state="translated">以十六进制打印 &lt;code&gt;Word#&lt;/code&gt; 类型的值。</target>
        </trans-unit>
        <trans-unit id="f7be34b673808f2d48e5ab2574882b799d823a21" translate="yes" xml:space="preserve">
          <source>PrintfArg</source>
          <target state="translated">PrintfArg</target>
        </trans-unit>
        <trans-unit id="7089bc7979848c154683cd0084ff2f7d3644e64b" translate="yes" xml:space="preserve">
          <source>PrintfType</source>
          <target state="translated">PrintfType</target>
        </trans-unit>
        <trans-unit id="78c20ed70f591c5b802ec52da8af22641a65cb47" translate="yes" xml:space="preserve">
          <source>Printing Functions</source>
          <target state="translated">打印功能</target>
        </trans-unit>
        <trans-unit id="81c35c214270ee006f5c56860fe38a2f038e3898" translate="yes" xml:space="preserve">
          <source>Prints a one-line summary of timing statistics for the GHC run. This option is equivalent to &lt;code&gt;+RTS -tstderr&lt;/code&gt;, see &lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS options to control the garbage collector&lt;/a&gt;.</source>
          <target state="translated">打印GHC运行的时间统计信息的单行摘要。此选项等效于 &lt;code&gt;+RTS -tstderr&lt;/code&gt; ，请参阅&lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS选项以控制垃圾收集器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0a32b1200253fea3bdcc41abafe3985fec209486" translate="yes" xml:space="preserve">
          <source>Prints a value without forcing its evaluation. &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; may be used on values whose types are unknown or partially known, which might be the case for local variables with polymorphic types at a breakpoint. While inspecting the runtime value, &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; attempts to reconstruct the type of the value, and will elaborate the type in GHCi&amp;rsquo;s environment if possible. If any unevaluated components (thunks) are encountered, then &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; binds a fresh variable with a name beginning with &lt;code&gt;_t&lt;/code&gt; to each thunk. See &lt;a href=&quot;#breakpoints&quot;&gt;Breakpoints and inspecting variables&lt;/a&gt; for more information. See also the &lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt;&lt;code&gt;:sprint&lt;/code&gt;&lt;/a&gt; command, which works like &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; but does not bind new variables.</source>
          <target state="translated">打印一个值而不强制其求值。&lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt;可以用于类型未知或部分已知的值，断点处具有多态类型的局部变量可能是这种情况。在检查运行时值时，&lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt;尝试重建值的类型，并在可能的情况下在GHCi的环境中详细说明该类型。如果遇到任何未评估的组件（thunk），则&lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt;将名称以 &lt;code&gt;_t&lt;/code&gt; 开头的新鲜变量绑定到每个thunk。有关更多信息，请参见&lt;a href=&quot;#breakpoints&quot;&gt;断点和检查变量&lt;/a&gt;。另请参见&lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt; &lt;code&gt;:sprint&lt;/code&gt; &lt;/a&gt;命令，该命令的工作方式类似于&lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; ,&lt;/a&gt;但不绑定新变量。</target>
        </trans-unit>
        <trans-unit id="1901cde8b08fed8941230e3f83f1c3cf4a834d5a" translate="yes" xml:space="preserve">
          <source>Prints a value without forcing its evaluation. &lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt;&lt;code&gt;:sprint&lt;/code&gt;&lt;/a&gt; is similar to &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt;, with the difference that unevaluated subterms are not bound to new variables, they are simply denoted by &lt;code&gt;_&lt;/code&gt;.</source>
          <target state="translated">打印一个值而不强制其求值。&lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt; &lt;code&gt;:sprint&lt;/code&gt; &lt;/a&gt;类似于&lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt;，不同之处在于未评估的子项未绑定到新变量，它们简单地用 &lt;code&gt;_&lt;/code&gt; 表示。</target>
        </trans-unit>
        <trans-unit id="ac4afe4944ea3331a3d2c608c60d31227edcb709" translate="yes" xml:space="preserve">
          <source>Prints the latest available version of package ⟨P⟩.</source>
          <target state="translated">打印最新版本的软件包⟨P⟩。</target>
        </trans-unit>
        <trans-unit id="7595d277dda450dbba120e42b0d8f0d521de9f36" translate="yes" xml:space="preserve">
          <source>Prints the value of ⟨identifier⟩ in the same way as &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt;. Unlike &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:force&quot;&gt;&lt;code&gt;:force&lt;/code&gt;&lt;/a&gt; evaluates each thunk that it encounters while traversing the value. This may cause exceptions or infinite loops, or further breakpoints (which are ignored, but displayed).</source>
          <target state="translated">以&lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt;相同的方式打印 ⟨identifier⟩的值。与&lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt;不同，&lt;a href=&quot;#ghci-cmd-:force&quot;&gt; &lt;code&gt;:force&lt;/code&gt; &lt;/a&gt;评估遍历值时遇到的每个重击。这可能会导致异常或无限循环，或导致其他断点（被忽略但显示）。</target>
        </trans-unit>
        <trans-unit id="c61486fb3c29083825fc530e85db902f694779e3" translate="yes" xml:space="preserve">
          <source>PrioIOAvailable</source>
          <target state="translated">PrioIOAvailable</target>
        </trans-unit>
        <trans-unit id="cbad2d411713243f18b25f4ad0c20cdf1f597155" translate="yes" xml:space="preserve">
          <source>Prior to GHC 8.10, when passing an &lt;code&gt;ArrayArray#&lt;/code&gt; argument to a foreign function, the foreign function would see a pointer to the &lt;code&gt;StgMutArrPtrs&lt;/code&gt; rather than just the payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabfc2adbe5a1490690f6f40c6d623b433df0934" translate="yes" xml:space="preserve">
          <source>Prior to version 1.4.0.0, the default implementation of the &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; method was defined as</source>
          <target state="translated">在1.4.0.0版之前， &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; 方法的默认实现定义为</target>
        </trans-unit>
        <trans-unit id="cda4f4476ac13bb2ae7bc15ee6736ba96cc21c68" translate="yes" xml:space="preserve">
          <source>PrivateUse</source>
          <target state="translated">PrivateUse</target>
        </trans-unit>
        <trans-unit id="77a4e6819b3e432af8190d38019f1fa2de3878fb" translate="yes" xml:space="preserve">
          <source>Probalistic Miller-Rabin primality test.</source>
          <target state="translated">Probalistic Miller-Rabin primality test.</target>
        </trans-unit>
        <trans-unit id="52ec5a32c2a80f826813962523827657c92e7c45" translate="yes" xml:space="preserve">
          <source>ProcRetHandles</source>
          <target state="translated">ProcRetHandles</target>
        </trans-unit>
        <trans-unit id="59240a07db79f390a176a1da2a0e4e73723df8cb" translate="yes" xml:space="preserve">
          <source>Proceed as normal, but do not delete any intermediate files.</source>
          <target state="translated">如常进行,但不要删除任何中间文件。</target>
        </trans-unit>
        <trans-unit id="3413e1941d2b768b5d94e902b36b50f24a0b9e21" translate="yes" xml:space="preserve">
          <source>Process completion</source>
          <target state="translated">进程完成</target>
        </trans-unit>
        <trans-unit id="78730cfe630ab980fa7c67900c84883cadf329d1" translate="yes" xml:space="preserve">
          <source>Process environment</source>
          <target state="translated">流程环境</target>
        </trans-unit>
        <trans-unit id="c650b71115a88a0c6c8c39f8cb70327da49c6469" translate="yes" xml:space="preserve">
          <source>Process groups</source>
          <target state="translated">流程组</target>
        </trans-unit>
        <trans-unit id="e19a92ef9380a074cb7ab3ec33973d7ac5dd17b1" translate="yes" xml:space="preserve">
          <source>Process status</source>
          <target state="translated">进程状态</target>
        </trans-unit>
        <trans-unit id="450d3838ec09ee134c6165b911e3bfce5c2da9f2" translate="yes" xml:space="preserve">
          <source>Process the command-line, and return the list of values that matched (and those that didn't). The arguments are:</source>
          <target state="translated">处理命令行,并返回匹配的值列表(和不匹配的值)。参数是:</target>
        </trans-unit>
        <trans-unit id="165237f99277fa9f8a75372d3b27ef4e2226ebb6" translate="yes" xml:space="preserve">
          <source>Process times</source>
          <target state="translated">流程时间</target>
        </trans-unit>
        <trans-unit id="b8940363e3104375a16f75f2a6c0076297b5bcc8" translate="yes" xml:space="preserve">
          <source>ProcessAccessRights</source>
          <target state="translated">ProcessAccessRights</target>
        </trans-unit>
        <trans-unit id="6feb0f0bc2fdaddeeb0ce66961c31fda1b5189f4" translate="yes" xml:space="preserve">
          <source>ProcessEntry32</source>
          <target state="translated">ProcessEntry32</target>
        </trans-unit>
        <trans-unit id="3c0317db948b70e6ca821af4a8b48f2b33ee6e46" translate="yes" xml:space="preserve">
          <source>ProcessGroupID</source>
          <target state="translated">ProcessGroupID</target>
        </trans-unit>
        <trans-unit id="21e8dd5d13542f0c6a51fa47c09f48b388d00925" translate="yes" xml:space="preserve">
          <source>ProcessHandle</source>
          <target state="translated">ProcessHandle</target>
        </trans-unit>
        <trans-unit id="2f4686b1023443590b468cf68975e34698d5dce7" translate="yes" xml:space="preserve">
          <source>ProcessHandle__</source>
          <target state="translated">ProcessHandle__</target>
        </trans-unit>
        <trans-unit id="5906efeedbc929caae1ebc56efbb67f6db7d732f" translate="yes" xml:space="preserve">
          <source>ProcessID</source>
          <target state="translated">ProcessID</target>
        </trans-unit>
        <trans-unit id="0e72272456a5dfc962478aaa4cd24c7dbdabd6cf" translate="yes" xml:space="preserve">
          <source>ProcessId</source>
          <target state="translated">ProcessId</target>
        </trans-unit>
        <trans-unit id="01ccef775dbbfe8438822cf4c77cb31753b62e29" translate="yes" xml:space="preserve">
          <source>ProcessId, number of threads, parent ProcessId, process base priority, path of executable file</source>
          <target state="translated">ProcessId,线程数,父ProcessId,进程基本优先级,可执行文件路径。</target>
        </trans-unit>
        <trans-unit id="14d4e6622d64799268058fe065228ec4cdce7733" translate="yes" xml:space="preserve">
          <source>ProcessInput</source>
          <target state="translated">ProcessInput</target>
        </trans-unit>
        <trans-unit id="b1f9a72a478a9193ff3d8c1d61ee84b82b8b55d5" translate="yes" xml:space="preserve">
          <source>ProcessOutput</source>
          <target state="translated">ProcessOutput</target>
        </trans-unit>
        <trans-unit id="b85a49842dd03687134a104f7f2c219a332fd41b" translate="yes" xml:space="preserve">
          <source>ProcessStatus</source>
          <target state="translated">ProcessStatus</target>
        </trans-unit>
        <trans-unit id="6f22a38212f7ae729981dc2920c82da11507b5bd" translate="yes" xml:space="preserve">
          <source>ProcessTimes</source>
          <target state="translated">ProcessTimes</target>
        </trans-unit>
        <trans-unit id="ed7308bb59f2876220e45299939d241199595df2" translate="yes" xml:space="preserve">
          <source>Processes</source>
          <target state="translated">Processes</target>
        </trans-unit>
        <trans-unit id="d9138d8dd701d266606ca4c3ec53b292b58d6a6e" translate="yes" xml:space="preserve">
          <source>Processing Strings into Html friendly things.</source>
          <target state="translated">将字符串处理成Html友好的东西。</target>
        </trans-unit>
        <trans-unit id="31e08f0a5d6400f5a893fc895b0737af9fc1c866" translate="yes" xml:space="preserve">
          <source>Processor features</source>
          <target state="translated">处理器功能</target>
        </trans-unit>
        <trans-unit id="51346a24d3f29d2ffa996e556945ed4655cf318e" translate="yes" xml:space="preserve">
          <source>ProcessorFeature</source>
          <target state="translated">ProcessorFeature</target>
        </trans-unit>
        <trans-unit id="3fb1ad2abc3a670a4b947bec2fed69232206dac4" translate="yes" xml:space="preserve">
          <source>Produce &amp;ldquo;ticky-ticky&amp;rdquo; statistics at the end of the program run (only available if the program was linked with &lt;a href=&quot;phases#ghc-flag--debug&quot;&gt;&lt;code&gt;-debug&lt;/code&gt;&lt;/a&gt;). The ⟨file⟩ business works just like on the &lt;a href=&quot;#rts-flag--S%20%5B%E2%9F%A8file%E2%9F%A9%5D&quot;&gt;&lt;code&gt;-S [⟨file⟩]&lt;/code&gt;&lt;/a&gt; RTS option, above.</source>
          <target state="translated">在程序运行结束时生成&amp;ldquo; ticky-ticky&amp;rdquo;统计信息（仅当程序与&lt;a href=&quot;phases#ghc-flag--debug&quot;&gt; &lt;code&gt;-debug&lt;/code&gt; &lt;/a&gt;链接时才可用）。⟨file⟩业务的工作方式与上面的&lt;a href=&quot;#rts-flag--S%20%5B%E2%9F%A8file%E2%9F%A9%5D&quot;&gt; &lt;code&gt;-S [⟨file⟩]&lt;/code&gt; &lt;/a&gt; RTS选项相同。</target>
        </trans-unit>
        <trans-unit id="6cf463b6f4624fb94cd58e7897c4e59d5fb1fb3f" translate="yes" xml:space="preserve">
          <source>Produce DWARF debug information in compiled object files. ⟨n⟩ can be 0, 1, or 2, with higher numbers producing richer output. If ⟨n⟩ is omitted, level 2 is assumed.</source>
          <target state="translated">在编译后的对象文件中产生DWARF调试信息。⟨n⟩可以是0、1或2,数字越高输出的信息越丰富。如果省略了⟨n⟩,则假设为2级。</target>
        </trans-unit>
        <trans-unit id="311b86090be24794748573ba1bb8b1841bef8144" translate="yes" xml:space="preserve">
          <source>Produces XHTML 1.0 Frameset.</source>
          <target state="translated">你制作XHTML 1.0框架集。</target>
        </trans-unit>
        <trans-unit id="f0bce322e51b0e5e1f30cc905d309ee358c3950a" translate="yes" xml:space="preserve">
          <source>Produces XHTML 1.0 Strict.</source>
          <target state="translated">你制作XHTML 1.0 Strict。</target>
        </trans-unit>
        <trans-unit id="feb762b8a956256336a4059b532f2566785ff8e7" translate="yes" xml:space="preserve">
          <source>Produces XHTML 1.0 Transitional.</source>
          <target state="translated">你制作XHTML 1.0过渡版。</target>
        </trans-unit>
        <trans-unit id="dd3b86d1ef21b9fb2e1edc30f524e7afb491b1ad" translate="yes" xml:space="preserve">
          <source>Product</source>
          <target state="translated">Product</target>
        </trans-unit>
        <trans-unit id="9436b2fdb0e7c34a33a3c91d959bba1406290a1a" translate="yes" xml:space="preserve">
          <source>ProductType</source>
          <target state="translated">ProductType</target>
        </trans-unit>
        <trans-unit id="0c7c0674cb4b4821337188133a7e093a0462c24f" translate="yes" xml:space="preserve">
          <source>Products, lifted to functors.</source>
          <target state="translated">产品,提升为漏斗。</target>
        </trans-unit>
        <trans-unit id="45873739b5a096f14b6618d0351cf66a0fc902fa" translate="yes" xml:space="preserve">
          <source>Products: encode multiple arguments to constructors</source>
          <target state="translated">产品:对构造函数的多个参数进行编码。</target>
        </trans-unit>
        <trans-unit id="3baa38b5927954f86d772798f9128466bb7cb156" translate="yes" xml:space="preserve">
          <source>ProfFlags</source>
          <target state="translated">ProfFlags</target>
        </trans-unit>
        <trans-unit id="684ae62f53358a3d6fa087ccc73007ad4415d51e" translate="yes" xml:space="preserve">
          <source>Profiling a program is a three-step process:</source>
          <target state="translated">剖析一个项目是一个三步走的过程。</target>
        </trans-unit>
        <trans-unit id="8b0bf225ec1be7116f5172952f591da561f081d7" translate="yes" xml:space="preserve">
          <source>Profiling call stacks</source>
          <target state="translated">剖析呼叫堆栈</target>
        </trans-unit>
        <trans-unit id="182323e605505b651eaa881921e0342a44be8b4d" translate="yes" xml:space="preserve">
          <source>Program arguments</source>
          <target state="translated">程序参数</target>
        </trans-unit>
        <trans-unit id="f0abc2008747749add9fef13512caaf5675a5840" translate="yes" xml:space="preserve">
          <source>Programmers using the &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API should be aware that EAGAIN exceptions may occur for non-blocking IO!</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API的程序员应注意，非阻塞IO可能会发生EAGAIN异常！</target>
        </trans-unit>
        <trans-unit id="6e4856079c43518428585d9f6f55af53723c39a0" translate="yes" xml:space="preserve">
          <source>Programmers using the &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API should be aware that EAGAIN exceptions may occur for non-blocking IO!</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API的程序员应注意，非阻塞IO可能会发生EAGAIN异常！</target>
        </trans-unit>
        <trans-unit id="f5db4bda11e8bec3e596786fc436f585dc33173f" translate="yes" xml:space="preserve">
          <source>Programs compiled with &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt; may fail a bit more eagerly than one might expect. For instance,</source>
          <target state="translated">用&lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt; &lt;code&gt;-fdefer-type-errors&lt;/code&gt; &lt;/a&gt;编译的程序可能比人们预期的要急得多。例如，</target>
        </trans-unit>
        <trans-unit id="ec0bc39a0924b82acddd145c4bb3e23cd22b3bc0" translate="yes" xml:space="preserve">
          <source>Progress will usually be made by skipping the first element of the &lt;code&gt;from&lt;/code&gt; buffer. This function should only be called if you are certain that you wish to do this skipping and if the &lt;code&gt;to&lt;/code&gt; buffer has at least one element of free space. Because this function deals with decoding failure, it assumes that the from buffer has at least one element.</source>
          <target state="translated">通常可以通过跳过 &lt;code&gt;from&lt;/code&gt; 缓冲区的第一个元素来取得进展。仅当您确定要跳过此步并且 &lt;code&gt;to&lt;/code&gt; 缓冲区至少具有一个可用空间元素时，才应调用此函数。因为此函数处理解码失败，所以它假定from缓冲区中至少有一个元素。</target>
        </trans-unit>
        <trans-unit id="a01e7be7e338ce65feff32bc980eb7c0c7eb6754" translate="yes" xml:space="preserve">
          <source>Projection to the other functor.</source>
          <target state="translated">投射到另一个漏斗上。</target>
        </trans-unit>
        <trans-unit id="aaf4dfbf169435dac06d1f7571397f1db30f3f9a" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad, scanning the monadic arguments from left to right (cf. &lt;code&gt;&lt;a href=&quot;control-monad#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">将功能提升为monad，从左到右扫描 &lt;code&gt;&lt;a href=&quot;control-monad#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt; 参数（请参见liftM2）。</target>
        </trans-unit>
        <trans-unit id="90322d805d75363f5e2ba902de35d5fb3e329291" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad, scanning the monadic arguments from left to right (cf. &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">将功能提升为monad，从左到右扫描 &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt; 参数（请参见liftM2）。</target>
        </trans-unit>
        <trans-unit id="5b1e023440a1d1251cab82a65c8a674a9ce8f45f" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad, scanning the monadic arguments from left to right. For example,</source>
          <target state="translated">将一个函数推广到一个单项式,从左到右扫描单项式参数。例如:</target>
        </trans-unit>
        <trans-unit id="f05ff30359fcf6d0cd737c9742b3ce528d2a61e0" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad.</source>
          <target state="translated">将一个函数推广到一个单体。</target>
        </trans-unit>
        <trans-unit id="bb699540cce051f9cc1055d53e69e00d6ddd26ac" translate="yes" xml:space="preserve">
          <source>PromotedConsT</source>
          <target state="translated">PromotedConsT</target>
        </trans-unit>
        <trans-unit id="6c11a71a788afd02567c23eab945ff6f9118b661" translate="yes" xml:space="preserve">
          <source>PromotedNilT</source>
          <target state="translated">PromotedNilT</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="0cbea5295e2b199673171bae00d25211a4daa049" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only). The default definition uses &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt;. Instances that define &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; should also define &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">建议使用新型解析器替换 &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; （仅限GHC）。默认定义使用 &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; 。定义 &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 的实例也应将 &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; 定义为 &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c383bc233d01d9f33a1db1df2275ceb34c0bb2c" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only).</source>
          <target state="translated">建议使用新型解析器替换 &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; （仅限GHC）。</target>
        </trans-unit>
        <trans-unit id="25cf3b2ae91b78e363c940dfba15d79fbbffe0a5" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only). The default definition uses &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt;. Instances that define &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; should also define &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">建议使用新型解析器替换 &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; （仅限GHC）。默认定义使用 &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; 。定义 &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; 的实例也应将 &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; 定义为 &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4f8243ce4f1bb9b8bfb0f67f0f3ba9911430da3" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only).</source>
          <target state="translated">建议使用新型解析器替换 &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; （仅限GHC）。</target>
        </trans-unit>
        <trans-unit id="a22e8bd59e18b97a41af964d0ba41a98b37ab76a" translate="yes" xml:space="preserve">
          <source>Propositional equality</source>
          <target state="translated">命题平等</target>
        </trans-unit>
        <trans-unit id="a96dd404b246333ac1350164ef1732587afa0abb" translate="yes" xml:space="preserve">
          <source>Propositional equality. If &lt;code&gt;a :~: b&lt;/code&gt; is inhabited by some terminating value, then the type &lt;code&gt;a&lt;/code&gt; is the same as the type &lt;code&gt;b&lt;/code&gt;. To use this equality in practice, pattern-match on the &lt;code&gt;a :~: b&lt;/code&gt; to get out the &lt;code&gt;Refl&lt;/code&gt; constructor; in the body of the pattern-match, the compiler knows that &lt;code&gt;a ~ b&lt;/code&gt;.</source>
          <target state="translated">命题平等。如果 &lt;code&gt;a :~: b&lt;/code&gt; 被某个终止值占用，则类型 &lt;code&gt;a&lt;/code&gt; 与类型 &lt;code&gt;b&lt;/code&gt; 相同。要在实践中使用这种相等性，请在 &lt;code&gt;a :~: b&lt;/code&gt; 进行模式匹配以获取 &lt;code&gt;Refl&lt;/code&gt; 构造函数；在模式匹配的主体中，编译器知道 &lt;code&gt;a ~ b&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fcb3452df3c76dae9ccbe4cb023c0ba8d83c8c7a" translate="yes" xml:space="preserve">
          <source>ProtectSectionFlags</source>
          <target state="translated">ProtectSectionFlags</target>
        </trans-unit>
        <trans-unit id="a48acfe3b05f29ef5d32e9c4686c610f7573d3ab" translate="yes" xml:space="preserve">
          <source>ProtocolError</source>
          <target state="translated">ProtocolError</target>
        </trans-unit>
        <trans-unit id="f505fd6f5c51f1f0eb05dff31b6b08cb2672b51b" translate="yes" xml:space="preserve">
          <source>Provide a Semigroup for an arbitrary Monoid.</source>
          <target state="translated">提供一个任意Monoid的Semigroup。</target>
        </trans-unit>
        <trans-unit id="d826fc994ddc518cced2dcde7f6017e636b0aac9" translate="yes" xml:space="preserve">
          <source>Provide an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action with the current value of an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; will be empty for the duration that the action is running.</source>
          <target state="translated">提供具有 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前值的 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 操作。该 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 将是空的操作已运行的持续时间。</target>
        </trans-unit>
        <trans-unit id="d318ed93837d829decf4e305a098deca627cd45c" translate="yes" xml:space="preserve">
          <source>Provide sendInput function and INPUT types.</source>
          <target state="translated">提供sendInput功能和INPUT类型。</target>
        </trans-unit>
        <trans-unit id="08b1b035b9a9a2acbcca06ac2bc748267d24aace" translate="yes" xml:space="preserve">
          <source>Provided for backwards compatibility. The tok type is ignored.</source>
          <target state="translated">为向后兼容而提供。忽略tok类型。</target>
        </trans-unit>
        <trans-unit id="a7bc9561c0283aa709c213cb1d134bcbaf33279f" translate="yes" xml:space="preserve">
          <source>Provided that you also specify &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt;&lt;code&gt;ScopedTypeVariables&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;#scoped-type-variables&quot;&gt;Lexically scoped type variables&lt;/a&gt;), the &lt;code&gt;forall b&lt;/code&gt; scopes over the definition of &lt;code&gt;foo&lt;/code&gt;, and in particular over the type signature for &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">如果还指定&lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt; &lt;code&gt;ScopedTypeVariables&lt;/code&gt; &lt;/a&gt;（按&lt;a href=&quot;#scoped-type-variables&quot;&gt;词法&lt;/a&gt;定义的类型变量），则 &lt;code&gt;forall b&lt;/code&gt; 范围将覆盖 &lt;code&gt;foo&lt;/code&gt; 的定义，尤其是 &lt;code&gt;xs&lt;/code&gt; 的类型签名。</target>
        </trans-unit>
        <trans-unit id="a6e2d81ac00c42bbf57971469cfadfc86bb02898" translate="yes" xml:space="preserve">
          <source>Provided you compiled this plugin and registered it in a package (with cabal for instance,) you can then use it by just specifying &lt;code&gt;-fplugin=DoNothing.Plugin&lt;/code&gt; on the command line, and during the compilation you should see GHC say &amp;lsquo;Hello&amp;rsquo;.</source>
          <target state="translated">假设您已编译此插件并将其注册在软件包中（例如，cabal），则可以通过在命令行上指定 &lt;code&gt;-fplugin=DoNothing.Plugin&lt;/code&gt; 来使用它，并且在编译过程中，您应该会看到GHC说&amp;ldquo; Hello&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="91cdb89ab74dded95989b9c01dab7eab785914db" translate="yes" xml:space="preserve">
          <source>Provided you have compiled this plugin and registered it in a package, you can just use it by specifying &lt;code&gt;--frontend DoNothing.FrontendPlugin&lt;/code&gt; on the command line to GHC.</source>
          <target state="translated">如果您已经编译了该插件并将其注册到软件包中，则可以通过在GHC的命令行上指定 &lt;code&gt;--frontend DoNothing.FrontendPlugin&lt;/code&gt; 来使用它。</target>
        </trans-unit>
        <trans-unit id="97713c7be8cb2223c431b97c899d5f61eca5a254" translate="yes" xml:space="preserve">
          <source>Provides a collection of pretty printer combinators, a set of API's that provides a way to easily print out text in a consistent format of your choosing.</source>
          <target state="translated">提供了一个漂亮的打印机组合器的集合,一组API,提供了一种方法来轻松打印出你所选择的一致格式的文本。</target>
        </trans-unit>
        <trans-unit id="a3569e2937eb1626a3038f9ca0b0bd6a7c4988dd" translate="yes" xml:space="preserve">
          <source>Provides one possible concrete representation for &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt;. For a version with &lt;code&gt;&lt;a href=&quot;data-version#v:versionBranch&quot;&gt;versionBranch&lt;/a&gt;&lt;/code&gt;&lt;code&gt;= [1,2,3]&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-version#v:versionTags&quot;&gt;versionTags&lt;/a&gt;&lt;/code&gt;&lt;code&gt;= [&quot;tag1&quot;,&quot;tag2&quot;]&lt;/code&gt;, the output will be &lt;code&gt;1.2.3-tag1-tag2&lt;/code&gt;.</source>
          <target state="translated">提供了一个可能的具体表现 &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt; 。对于 &lt;code&gt;&lt;a href=&quot;data-version#v:versionBranch&quot;&gt;versionBranch&lt;/a&gt;&lt;/code&gt; &lt;code&gt;= [1,2,3]&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-version#v:versionTags&quot;&gt;versionTags&lt;/a&gt;&lt;/code&gt; &lt;code&gt;= [&quot;tag1&quot;,&quot;tag2&quot;]&lt;/code&gt; ，输出为 &lt;code&gt;1.2.3-tag1-tag2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f537eae177b03bcfe703fb9eae32845fd317076" translate="yes" xml:space="preserve">
          <source>Provides the standard warnings plus</source>
          <target state="translated">提供标准警告和</target>
        </trans-unit>
        <trans-unit id="0bd63287653bab9cbabb2d0d820a7d6b107dd1f0" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;-pgmi /path/to/iserv-proxy&lt;/code&gt;, &lt;code&gt;-pgmo ⟨option⟩&lt;/code&gt; and &lt;code&gt;-pgmo ⟨port⟩&lt;/code&gt; in addition to &lt;a href=&quot;#ghc-flag--fexternal-interpreter&quot;&gt;&lt;code&gt;-fexternal-interpreter&lt;/code&gt;&lt;/a&gt; will then make ghc go through the proxy instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e9e18be4d476228c864a05eb9ce60a2f180d98" translate="yes" xml:space="preserve">
          <source>Providing input</source>
          <target state="translated">提供投入</target>
        </trans-unit>
        <trans-unit id="e29e8eedc748840bd27ace9f3607818fa75df015" translate="yes" xml:space="preserve">
          <source>Provisional</source>
          <target state="translated">Provisional</target>
        </trans-unit>
        <trans-unit id="d1cea344353e26ba6f1565ed661d94f610ce9e4f" translate="yes" xml:space="preserve">
          <source>Proxy</source>
          <target state="translated">Proxy</target>
        </trans-unit>
        <trans-unit id="2da1b11ef737c06a07580fdc89d729829ccbcd4b" translate="yes" xml:space="preserve">
          <source>Proxy can even hold types of higher kinds,</source>
          <target state="translated">代理人甚至可以持有类型更高的种类。</target>
        </trans-unit>
        <trans-unit id="010320dc44b945f1389c719222db299dcff6de12" translate="yes" xml:space="preserve">
          <source>Proxy#</source>
          <target state="translated">Proxy#</target>
        </trans-unit>
        <trans-unit id="1ba5ef48b66f74ab8376d1e1f5b429151921ef64" translate="yes" xml:space="preserve">
          <source>Ps: Punctuation, Open</source>
          <target state="translated">Ps:标点符号,开放</target>
        </trans-unit>
        <trans-unit id="aee53da1d005df2b730db32fdeb589f79f6dcef6" translate="yes" xml:space="preserve">
          <source>Pseudoterminal operations</source>
          <target state="translated">伪终端操作</target>
        </trans-unit>
        <trans-unit id="90c83157f6f4a1cfac097841eb12dca4943e9e58" translate="yes" xml:space="preserve">
          <source>Ptr</source>
          <target state="translated">Ptr</target>
        </trans-unit>
        <trans-unit id="6ae22c161ea98cdfc51e0fe5643ee1613027f054" translate="yes" xml:space="preserve">
          <source>Public API</source>
          <target state="translated">公共API</target>
        </trans-unit>
        <trans-unit id="7f59b284c28fa26b669e4ff42d0673d94b35db1d" translate="yes" xml:space="preserve">
          <source>Public representation of constructors</source>
          <target state="translated">构造者的公开表示</target>
        </trans-unit>
        <trans-unit id="b6c8b265dd1cdc6347d98f2b84d442a954eb9c33" translate="yes" xml:space="preserve">
          <source>Public representation of datatypes</source>
          <target state="translated">数据类型的公开表示</target>
        </trans-unit>
        <trans-unit id="3a2bbb378012d44dd1acf3c097c561543bbe6aa6" translate="yes" xml:space="preserve">
          <source>Punctuation or reserved symbol, e.g. &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;::&lt;/code&gt;</source>
          <target state="translated">标点或保留符号，例如 &lt;code&gt;(&lt;/code&gt; ， &lt;code&gt;::&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dfef0dd557351856f42ce75d6f0e19c19a4c0ef" translate="yes" xml:space="preserve">
          <source>Puns and other patterns can be mixed in the same record:</source>
          <target state="translated">双关语和其他模式可以混合在同一记录中。</target>
        </trans-unit>
        <trans-unit id="126aca4de6cf9f540218b2f37eb0a5ee3e8ee157" translate="yes" xml:space="preserve">
          <source>Puns are not necessarily supported:</source>
          <target state="translated">不一定支持双关语。</target>
        </trans-unit>
        <trans-unit id="f9f539fc385ba1011d4c087559f3df068ae7d719" translate="yes" xml:space="preserve">
          <source>Puns can be used wherever record patterns occur (e.g. in &lt;code&gt;let&lt;/code&gt; bindings or at the top-level).</source>
          <target state="translated">可以在出现记录模式的任何地方（例如，在 &lt;code&gt;let&lt;/code&gt; 绑定中或在顶层）使用Puun 。</target>
        </trans-unit>
        <trans-unit id="6b611b1b174cd71f53f8fab72d5be8b17f1336a4" translate="yes" xml:space="preserve">
          <source>Purity</source>
          <target state="translated">Purity</target>
        </trans-unit>
        <trans-unit id="9a02d38905933d4f8be56965d4333c36eabb3bcc" translate="yes" xml:space="preserve">
          <source>Push a call-site onto the stack.</source>
          <target state="translated">将一个调用点推到堆栈上。</target>
        </trans-unit>
        <trans-unit id="7fd768e4fe7bd6bb51e495079370749b0bfeabc8" translate="yes" xml:space="preserve">
          <source>Put</source>
          <target state="translated">Put</target>
        </trans-unit>
        <trans-unit id="31cfeabab1a1a50a1974ce9355eca97ad84b2ad5" translate="yes" xml:space="preserve">
          <source>Put a data item back onto a channel, where it will be the next item read.</source>
          <target state="translated">将一个数据项放回一个通道,在那里它将是下一个读取的项目。</target>
        </trans-unit>
        <trans-unit id="f2671cfd2bf701d44ddbd6aed0423a20b49e9b05" translate="yes" xml:space="preserve">
          <source>Put a data item back onto a channel, where it will be the next item read. Blocks if the queue is full.</source>
          <target state="translated">将一个数据项放回一个通道,在那里它将成为下一个读取的数据项。如果队列满了,就会被阻止。</target>
        </trans-unit>
        <trans-unit id="0488379e7024b984e65d02dffd4763eb7cd460ed" translate="yes" xml:space="preserve">
          <source>Put a value into a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:putTMVar&quot;&gt;putTMVar&lt;/a&gt;&lt;/code&gt; will &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将值放入 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 。如果 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 当前已满，则 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:putTMVar&quot;&gt;putTMVar&lt;/a&gt;&lt;/code&gt; 将 &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd93b0ceaf0ed39d5195f954abbfc8d76b2a79d6" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="translated">将值放入 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 中。如果 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前已满，则 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 将等待直到变空。</target>
        </trans-unit>
        <trans-unit id="42a8fc7267ae8c1ccb347fa39255e3fe7bc6ca11" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94d281c3905d94e39b3d263b1cf9b6250c58bee" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="translated">将值放入 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 中。如果 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前已满，则 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 将等待直到变空。</target>
        </trans-unit>
        <trans-unit id="33e8d3ac33132ba689a91323286fa0c8d9cd0c54" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="translated">将值放入 &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 中。如果 &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前已满，则 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; 将等待直到变空。</target>
        </trans-unit>
        <trans-unit id="73b3278fe6bb373e8f3ee5addd3728dbee9dc19b" translate="yes" xml:space="preserve">
          <source>Put merely lifts Builder into a Writer monad, applied to ().</source>
          <target state="translated">Put只是将Builder提升为Writer单体,应用于()。</target>
        </trans-unit>
        <trans-unit id="798e33a0a2f8665389e39345a5dfc2a745e465a9" translate="yes" xml:space="preserve">
          <source>Put something inside an HTML element.</source>
          <target state="translated">把一些东西放在一个HTML元素里面。</target>
        </trans-unit>
        <trans-unit id="40d8d868890674e2158985b5244b5e97bbdc32ef" translate="yes" xml:space="preserve">
          <source>Put to run</source>
          <target state="translated">投入运行</target>
        </trans-unit>
        <trans-unit id="b438a3bf094fbf042e7f48cbd844a202bc700f5d" translate="yes" xml:space="preserve">
          <source>Put two pieces of error message next to each other.</source>
          <target state="translated">把两块错误信息挨在一起。</target>
        </trans-unit>
        <trans-unit id="353d5eefcc26e9ede7b76010beb4c768d6085770" translate="yes" xml:space="preserve">
          <source>PutM</source>
          <target state="translated">PutM</target>
        </trans-unit>
        <trans-unit id="f84ae14fa11d241b306d7b6dacccea9c11140d12" translate="yes" xml:space="preserve">
          <source>Putting a strictness annotation (&lt;code&gt;!&lt;/code&gt;) on a constructor field helps in two ways: it adds strictness to the program, which gives the strictness analyser more to work with, and it might help to reduce space leaks.</source>
          <target state="translated">在构造函数字段上放置严格性注释（ &lt;code&gt;!&lt;/code&gt; ）有两个方面的帮助：它增加了程序的严格性，这使严格性分析器可以更多地使用它，并且可能有助于减少空间泄漏。</target>
        </trans-unit>
        <trans-unit id="4d65a7ee4d88fd2fe1e2a7a6c25c43f4bace4b92" translate="yes" xml:space="preserve">
          <source>Putting info tables directly next to entry code is a useful performance optimisation that is not available on all platforms. This field tells you whether the program has been compiled with this optimisation. (Usually yes, except on unusual platforms.)</source>
          <target state="translated">将信息表直接放在输入代码旁边是一个有用的性能优化,但不是所有平台都能使用。这个字段告诉你程序是否已经被编译过这个优化。(通常是的,除非在特殊平台上。)</target>
        </trans-unit>
        <trans-unit id="fc4647bde0eb248bbe66e4e9d89dc56ee1bf2032" translate="yes" xml:space="preserve">
          <source>Putting inter-dependencies of the form &lt;code&gt;Foo.o : Bar.hi&lt;/code&gt; into your &lt;code&gt;Makefile&lt;/code&gt; by hand is rather error-prone. Don&amp;rsquo;t worry, GHC has support for automatically generating the required dependencies. Add the following to your &lt;code&gt;Makefile&lt;/code&gt;:</source>
          <target state="translated">用手将形式为 &lt;code&gt;Foo.o : Bar.hi&lt;/code&gt; 放入 &lt;code&gt;Makefile&lt;/code&gt; 中是很容易出错的。不用担心，GHC支持自动生成所需的依赖关系。将以下内容添加到您的 &lt;code&gt;Makefile&lt;/code&gt; 中：</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="b1bf446133c15f6e0cfb6c252c0760ca97cc2113" translate="yes" xml:space="preserve">
          <source>QException</source>
          <target state="translated">QException</target>
        </trans-unit>
        <trans-unit id="5c3e1075bb5ff5f786a2750d2110c97ca76bdb40" translate="yes" xml:space="preserve">
          <source>QList</source>
          <target state="translated">QList</target>
        </trans-unit>
        <trans-unit id="5063349bbf20d077106dd5a047c6294b3d6faa07" translate="yes" xml:space="preserve">
          <source>QResult</source>
          <target state="translated">QResult</target>
        </trans-unit>
        <trans-unit id="1b9473a808c71ad809b076a8f41d58515d649af1" translate="yes" xml:space="preserve">
          <source>QSem</source>
          <target state="translated">QSem</target>
        </trans-unit>
        <trans-unit id="83666298382103e09a359d83713e8de361f9fe1b" translate="yes" xml:space="preserve">
          <source>QSemN</source>
          <target state="translated">QSemN</target>
        </trans-unit>
        <trans-unit id="5979a484b578a0eaaccbbaa187d6db5be875c706" translate="yes" xml:space="preserve">
          <source>QState</source>
          <target state="translated">QState</target>
        </trans-unit>
        <trans-unit id="a8e2772564815455b855b5402a2b67edaeece741" translate="yes" xml:space="preserve">
          <source>QualBinBox</source>
          <target state="translated">QualBinBox</target>
        </trans-unit>
        <trans-unit id="6e364224ed95e99cc9c0e9bc962a7e7788451d4f" translate="yes" xml:space="preserve">
          <source>Qualified names are not handled properly</source>
          <target state="translated">未正确处理限定名称</target>
        </trans-unit>
        <trans-unit id="c78f05422fd2f2885a1a8363abe3991f2f66b957" translate="yes" xml:space="preserve">
          <source>Quantified</source>
          <target state="translated">Quantified</target>
        </trans-unit>
        <trans-unit id="98d966bd103c45a24b72c82c92fc882386ac5126" translate="yes" xml:space="preserve">
          <source>Quantified constraints can potentially lead to overlapping local axioms. Consider for instance the following example:</source>
          <target state="translated">量化约束有可能导致局部公理的重叠。例如,可以考虑以下例子。</target>
        </trans-unit>
        <trans-unit id="e07c2ce6f83e492712da4fb9336c9693d0145f90" translate="yes" xml:space="preserve">
          <source>Quantified constraints enable this property to be made explicit in the &lt;code&gt;Trans&lt;/code&gt; class declaration:</source>
          <target state="translated">量化约束使此属性可以在 &lt;code&gt;Trans&lt;/code&gt; 类声明中明确显示：</target>
        </trans-unit>
        <trans-unit id="313f18ee6bfe32a684a3623fe9ec8d0285e1564b" translate="yes" xml:space="preserve">
          <source>QuantifiedConstraints</source>
          <target state="translated">QuantifiedConstraints</target>
        </trans-unit>
        <trans-unit id="38dd040ad4dd1961b970e417a446a2cd00ec0112" translate="yes" xml:space="preserve">
          <source>Quantity semaphores in which each thread may wait for an arbitrary &quot;amount&quot;.</source>
          <target state="translated">数量符号,每个线程可以等待一个任意的 &quot;数量&quot;。</target>
        </trans-unit>
        <trans-unit id="ef37116e9e2794514df2a30b389623e522929de7" translate="yes" xml:space="preserve">
          <source>Quasi</source>
          <target state="translated">Quasi</target>
        </trans-unit>
        <trans-unit id="78b42522f21485e6763e2011e69bf1fb6467d5cd" translate="yes" xml:space="preserve">
          <source>Quasi-quotation allows patterns and expressions to be written using programmer-defined concrete syntax; the motivation behind the extension and several examples are documented in &amp;ldquo;&lt;a href=&quot;http://www.cs.tufts.edu/comp/150FP/archive/geoff-mainland/quasiquoting.pdf&quot;&gt;Why It&amp;rsquo;s Nice to be Quoted: Quasiquoting for Haskell&lt;/a&gt;&amp;rdquo; (Proc Haskell Workshop 2007). The example below shows how to write a quasiquoter for a simple expression language.</source>
          <target state="translated">准引号允许使用程序员定义的具体语法编写模式和表达式。扩展背后的动机和几个示例记录在&amp;ldquo; &lt;a href=&quot;http://www.cs.tufts.edu/comp/150FP/archive/geoff-mainland/quasiquoting.pdf&quot;&gt;为什么要被引用：Haskell的准报价&lt;/a&gt; &amp;rdquo;（Proc Haskell Workshop 2007）中。下面的示例显示了如何为一种简单的表达语言编写一个准引用。</target>
        </trans-unit>
        <trans-unit id="aeae4316f159225a12a41875ed5cda162b6be2c0" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for declarations, invoked by top-level quotes</source>
          <target state="translated">声明的准引号,由顶层引号调用。</target>
        </trans-unit>
        <trans-unit id="7c4eccaa645a118a37207f34bc767fc3a301a004" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for expressions, invoked by quotes like &lt;code&gt;lhs = $[q|...]&lt;/code&gt;</source>
          <target state="translated">表达式的准引用，由 &lt;code&gt;lhs = $[q|...]&lt;/code&gt; 类的引用调用</target>
        </trans-unit>
        <trans-unit id="cdfa152b402869c6f7ce110c7260465306996f0c" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for patterns, invoked by quotes like &lt;code&gt;f $[q|...] = rhs&lt;/code&gt;</source>
          <target state="translated">模式的准引用，由诸如 &lt;code&gt;f $[q|...] = rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f1c81121c7c915fc9fe161e70133e5fd79fdc0f" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for types, invoked by quotes like &lt;code&gt;f :: $[q|...]&lt;/code&gt;</source>
          <target state="translated">类型的准引用，由诸如 &lt;code&gt;f :: $[q|...]&lt;/code&gt; 引用调用</target>
        </trans-unit>
        <trans-unit id="654d8edecc919612fe0b6f4ce5f5f07b94d042af" translate="yes" xml:space="preserve">
          <source>QuasiQuoter</source>
          <target state="translated">QuasiQuoter</target>
        </trans-unit>
        <trans-unit id="36eafab474a9ed345234950640432af8a19c94cf" translate="yes" xml:space="preserve">
          <source>QuasiQuotes</source>
          <target state="translated">QuasiQuotes</target>
        </trans-unit>
        <trans-unit id="d4a0b7daa1a07138f6cd3dd945862252eb44e73e" translate="yes" xml:space="preserve">
          <source>Quasiquoters must obey the same stage restrictions as Template Haskell, e.g., in the example, &lt;code&gt;expr&lt;/code&gt; cannot be defined in &lt;code&gt;Main.hs&lt;/code&gt; where it is used, but must be imported.</source>
          <target state="translated">准引用程序必须遵守与模板Haskell相同的阶段限制，例如，在示例中，不能在使用 &lt;code&gt;Main.hs&lt;/code&gt; 地方定义 &lt;code&gt;expr&lt;/code&gt; ，而必须将其导入。</target>
        </trans-unit>
        <trans-unit id="2644b7d942f174a4bbf0bc8675c1badf9352393e" translate="yes" xml:space="preserve">
          <source>Queries</source>
          <target state="translated">Queries</target>
        </trans-unit>
        <trans-unit id="702b96b7b97e9c49a9631b74e04d25040710ddfc" translate="yes" xml:space="preserve">
          <source>Queries the current state of the stopped child flag.</source>
          <target state="translated">查询停止的子旗的状态。</target>
        </trans-unit>
        <trans-unit id="a618b4be8d3ac72545f3085fe616d342b7139fba" translate="yes" xml:space="preserve">
          <source>Query</source>
          <target state="translated">Query</target>
        </trans-unit>
        <trans-unit id="6fafa7df09744bce9b17c8089123f793f4571cfc" translate="yes" xml:space="preserve">
          <source>Query the status of a breakpoint (True &lt;a href=&quot;=&quot;&gt;=&lt;/a&gt; enabled)</source>
          <target state="translated">查询断点的状态（True &lt;a href=&quot;=&quot;&gt;=已&lt;/a&gt;启用）</target>
        </trans-unit>
        <trans-unit id="3caf953d995669733dac7e8ef33e2624ffc487eb" translate="yes" xml:space="preserve">
          <source>Query whether the current runtime system supports the eventlog (e.g. whether the current executable was linked with &lt;a href=&quot;phases#ghc-flag--eventlog&quot;&gt;&lt;code&gt;-eventlog&lt;/code&gt;&lt;/a&gt;) and, if it is supported, whether it is currently logging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6aec17edf79a10c680aff1016df32c0c809598" translate="yes" xml:space="preserve">
          <source>Querying file status</source>
          <target state="translated">查询文件状态</target>
        </trans-unit>
        <trans-unit id="e1568d2084e4729e281ef2ad2782d446f7281246" translate="yes" xml:space="preserve">
          <source>Querying sizes</source>
          <target state="translated">查询尺寸</target>
        </trans-unit>
        <trans-unit id="ec159e90e6803b6d4ebd5f32c771f6ca6e6e74a9" translate="yes" xml:space="preserve">
          <source>Querying the compiler</source>
          <target state="translated">查询编译器</target>
        </trans-unit>
        <trans-unit id="bfaa4612023c5d1f8ccc9c95a3472712517c8262" translate="yes" xml:space="preserve">
          <source>Querying the user environment</source>
          <target state="translated">查询用户环境</target>
        </trans-unit>
        <trans-unit id="18607581d63ad915cd6c4d5d3071d782b7938ac8" translate="yes" xml:space="preserve">
          <source>Question: How does GHC find the filename which contains module ⟨M⟩? Answer: it looks for the file &lt;code&gt;M.hs&lt;/code&gt;, or &lt;code&gt;M.lhs&lt;/code&gt;. This means that for most modules, the module name must match the filename. If it doesn&amp;rsquo;t, GHCi won&amp;rsquo;t be able to find it.</source>
          <target state="translated">问题：GHC如何找到包含模块&amp;ldquo; M&amp;rdquo;的文件名？答案：它将查找文件 &lt;code&gt;M.hs&lt;/code&gt; 或 &lt;code&gt;M.lhs&lt;/code&gt; 。这意味着对于大多数模块，模块名称必须与文件名匹配。如果没有，GHCi将无法找到它。</target>
        </trans-unit>
        <trans-unit id="d325fcd919384f395c02751e03d2cd0288b98cca" translate="yes" xml:space="preserve">
          <source>Queue</source>
          <target state="translated">Queue</target>
        </trans-unit>
        <trans-unit id="2e03f68003ba792e4b7e5bce0358c5b5efca5a74" translate="yes" xml:space="preserve">
          <source>QueueSelector</source>
          <target state="translated">QueueSelector</target>
        </trans-unit>
        <trans-unit id="1a2285d8881f226e13430515a9dd2b9fb6294200" translate="yes" xml:space="preserve">
          <source>Quit</source>
          <target state="translated">Quit</target>
        </trans-unit>
        <trans-unit id="29a754ad4dc6f5eb686a9faa7923466078bf2956" translate="yes" xml:space="preserve">
          <source>Quits GHCi. You can also quit by typing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b074b09be2d5847dd9450d55b6f0788a6c3fd1b4" translate="yes" xml:space="preserve">
          <source>Quits GHCi. You can also quit by typing &lt;code&gt;Control-D&lt;/code&gt; at the prompt.</source>
          <target state="translated">退出GHCi。您也可以在提示符下键入 &lt;code&gt;Control-D&lt;/code&gt; 退出。</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="fe89b57ca741803edb678214b1b10b8b1688ab79" translate="yes" xml:space="preserve">
          <source>R. N. Horspool: Practical Fast Searching in Strings. Software - Practice and Experience 10, 501-506 (1980)</source>
          <target state="translated">R.N.Horspool:在字符串中进行实用的快速搜索。软件-实践与经验10,501-506(1980年)。</target>
        </trans-unit>
        <trans-unit id="3bb8e3918a18086493d1beb88c7c61f2cff4fd6b" translate="yes" xml:space="preserve">
          <source>R. S. Boyer, J. S. Moore: A Fast String Searching Algorithm. Communications of the ACM, 20, 10, 762-772 (1977)</source>
          <target state="translated">R.S.Boyer,J.S.Moore:A Fast String Searching Algorithm.ACM通信,20,10,762-772(1977年)。</target>
        </trans-unit>
        <trans-unit id="bcd7a25b27aa3490f6e6a5d52d0d7b57716a72c0" translate="yes" xml:space="preserve">
          <source>R.Paterson@city.ac.uk</source>
          <target state="translated">R.Paterson@city.ac.uk</target>
        </trans-unit>
        <trans-unit id="75248a6efd7ebc0c173be4c755f47f7ae4c4606a" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS ARROW</source>
          <target state="translated">向右箭头</target>
        </trans-unit>
        <trans-unit id="81f0ce7bb79894a5b7e3f20200c1491ae057a5b6" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS ARROW-TAIL</source>
          <target state="translated">右向箭头-尾巴。</target>
        </trans-unit>
        <trans-unit id="d43d55d9c58cbcc25eb6620ba1f32e960004091e" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS DOUBLE ARROW</source>
          <target state="translated">右侧双箭头。</target>
        </trans-unit>
        <trans-unit id="6140cdacfd2f40b8e8a4d0ef59628fa58ba4df25" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS DOUBLE ARROW-TAIL</source>
          <target state="translated">RIGHTWARDS DOUBLE ARROWO-TAIL(双箭头-尾巴)</target>
        </trans-unit>
        <trans-unit id="54561fd891ee8d3bc3718283afdce5d24a9fb9d4" translate="yes" xml:space="preserve">
          <source>RS</source>
          <target state="translated">RS</target>
        </trans-unit>
        <trans-unit id="dff6d1ab4ff535388a3b81748b7e0a759af5b5d4" translate="yes" xml:space="preserve">
          <source>RTLDFlags</source>
          <target state="translated">RTLDFlags</target>
        </trans-unit>
        <trans-unit id="222fd2e5cef2e782850e7e961d3e145177fe55f7" translate="yes" xml:space="preserve">
          <source>RTLD_GLOBAL</source>
          <target state="translated">RTLD_GLOBAL</target>
        </trans-unit>
        <trans-unit id="596d9fed4ec6cd3691a13e454f91e5510fb9bd15" translate="yes" xml:space="preserve">
          <source>RTLD_LAZY</source>
          <target state="translated">RTLD_LAZY</target>
        </trans-unit>
        <trans-unit id="58a6bc97fe1b40864bb1226977041584bdd3246e" translate="yes" xml:space="preserve">
          <source>RTLD_LOCAL</source>
          <target state="translated">RTLD_LOCAL</target>
        </trans-unit>
        <trans-unit id="240dca00b5fccdf8eb9307a95d72a4564efd9a1f" translate="yes" xml:space="preserve">
          <source>RTLD_NOW</source>
          <target state="translated">RTLD_NOW</target>
        </trans-unit>
        <trans-unit id="21a3039e72db0527495ff86a20122cd08a41b0ee" translate="yes" xml:space="preserve">
          <source>RTS options taken from the &lt;a href=&quot;#envvar-GHCRTS&quot; id=&quot;index-6&quot;&gt;&lt;code&gt;GHCRTS&lt;/code&gt;&lt;/a&gt; environment variable can be overridden by options given on the command line.</source>
          <target state="translated">可以从命令行上给定的选项覆盖从&lt;a href=&quot;#envvar-GHCRTS&quot; id=&quot;index-6&quot;&gt; &lt;code&gt;GHCRTS&lt;/code&gt; &lt;/a&gt;环境变量获取的RTS选项。</target>
        </trans-unit>
        <trans-unit id="12038ce4fed76d468c97d3909bb5fa9da8cf36c1" translate="yes" xml:space="preserve">
          <source>RTSFlags</source>
          <target state="translated">RTSFlags</target>
        </trans-unit>
        <trans-unit id="398bdf865c486238761fe9e04c7014d7a95a8878" translate="yes" xml:space="preserve">
          <source>RTSStats</source>
          <target state="translated">RTSStats</target>
        </trans-unit>
        <trans-unit id="173ca40143a1db6b32512b7856cb8403ae881b82" translate="yes" xml:space="preserve">
          <source>RWS</source>
          <target state="translated">RWS</target>
        </trans-unit>
        <trans-unit id="5ed8266ce8d63f9438aafb5e6787b68efadeccab" translate="yes" xml:space="preserve">
          <source>RWS computation to execute</source>
          <target state="translated">执行RWS计算</target>
        </trans-unit>
        <trans-unit id="f1d8da392a9a97e4cb7c42ad2ccf6346e818ebc4" translate="yes" xml:space="preserve">
          <source>RWST</source>
          <target state="translated">RWST</target>
        </trans-unit>
        <trans-unit id="a618f78473842a7cf11f602fffdd35c35387d1a3" translate="yes" xml:space="preserve">
          <source>Raise an &lt;code&gt;&lt;a href=&quot;ghc-io-exception#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">引发 &lt;code&gt;&lt;a href=&quot;ghc-io-exception#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 单子。</target>
        </trans-unit>
        <trans-unit id="ce7820312231ab0cd45ab4d865cc302018e42e8e" translate="yes" xml:space="preserve">
          <source>Raise an &lt;code&gt;&lt;a href=&quot;prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">引发 &lt;code&gt;&lt;a href=&quot;prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 单子。</target>
        </trans-unit>
        <trans-unit id="280c8919cbe0b13ce2a3de884857678191c0df1d" translate="yes" xml:space="preserve">
          <source>Raise an &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">引发 &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; 在 &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; 单子。</target>
        </trans-unit>
        <trans-unit id="933e208c50a30fc4995b36847c474fa5bd3740b5" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; with a printf-specific prefix on the message string.</source>
          <target state="translated">在消息字符串上使用特定于printf的前缀引发 &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00474a4582227a35d8a8ed6e6d74aed95e4bfcf8" translate="yes" xml:space="preserve">
          <source>Raises an error if given an empty list.</source>
          <target state="translated">如果给定的是一个空列表,会引发错误。</target>
        </trans-unit>
        <trans-unit id="a21adad3deb90b02b29a429bf48fc817d912767f" translate="yes" xml:space="preserve">
          <source>Raising Errors</source>
          <target state="translated">提出错误</target>
        </trans-unit>
        <trans-unit id="80befa94c0796e21097bf414e22daac761f1ac3a" translate="yes" xml:space="preserve">
          <source>Ralf Hinze and Ross Paterson, &lt;a href=&quot;http://staff.city.ac.uk/~ross/papers/FingerTree.html&quot;&gt;&quot;Finger trees: a simple general-purpose data structure&quot;&lt;/a&gt;, &lt;em&gt;Journal of Functional Programming&lt;/em&gt; 16:2 (2006) pp 197-217.</source>
          <target state="translated">Ralf Hinze和Ross Paterson，&lt;a href=&quot;http://staff.city.ac.uk/~ross/papers/FingerTree.html&quot;&gt;&amp;ldquo;手指树：一种简单的通用数据结构&amp;rdquo;&lt;/a&gt;，&lt;em&gt;《功能编程杂志&lt;/em&gt;》 16：2（2006），第197-217页。</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="646152cf5c1a35e596164cfc5a137c57f6a78564" translate="yes" xml:space="preserve">
          <source>RangeQ</source>
          <target state="translated">RangeQ</target>
        </trans-unit>
        <trans-unit id="5f87625ea4411af78505260124c7f6d2a45e06b0" translate="yes" xml:space="preserve">
          <source>RankNTypes</source>
          <target state="translated">RankNTypes</target>
        </trans-unit>
        <trans-unit id="693f44324e1039b8be2752916af17049a0ad5dd9" translate="yes" xml:space="preserve">
          <source>Rather than generating code to call &lt;code&gt;f&lt;/code&gt; according to the platform&amp;rsquo;s ABI, we instead call &lt;code&gt;f&lt;/code&gt; using the C API defined in the header &lt;code&gt;header.h&lt;/code&gt;. Thus &lt;code&gt;f&lt;/code&gt; can be called even if it may be defined as a CPP &lt;code&gt;#define&lt;/code&gt; rather than a proper function.</source>
          <target state="translated">而不是生成的代码来呼叫 &lt;code&gt;f&lt;/code&gt; 根据平台的ABI，我们改为调用 &lt;code&gt;f&lt;/code&gt; 使用在报头中定义的C API &lt;code&gt;header.h&lt;/code&gt; 。因此，即使可以将 &lt;code&gt;f&lt;/code&gt; 定义为CPP &lt;code&gt;#define&lt;/code&gt; 而不是适当的函数，也可以调用它。</target>
        </trans-unit>
        <trans-unit id="09e0a509143e1597ce0e4b1a260f1ca99da1f7c7" translate="yes" xml:space="preserve">
          <source>Rather than using &lt;code&gt;(== &lt;a href=&quot;system-filepath-posix#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt;, use this. Test if something is a path separator.</source>
          <target state="translated">而不是使用 &lt;code&gt;(== &lt;a href=&quot;system-filepath-posix#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt; ，而是使用它。测试某些东西是否是路径分隔符。</target>
        </trans-unit>
        <trans-unit id="ed194d2af1d0512a43b9882e2bf53085c69471c2" translate="yes" xml:space="preserve">
          <source>Rather than using &lt;code&gt;(== &lt;a href=&quot;system-filepath-windows#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt;, use this. Test if something is a path separator.</source>
          <target state="translated">而不是使用 &lt;code&gt;(== &lt;a href=&quot;system-filepath-windows#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt; ，而是使用它。测试某些东西是否是路径分隔符。</target>
        </trans-unit>
        <trans-unit id="794f65e9d2064ab6bfab0fa351dcff2763db23d3" translate="yes" xml:space="preserve">
          <source>Ratio</source>
          <target state="translated">Ratio</target>
        </trans-unit>
        <trans-unit id="06abf42877351e1e2ad74c308971eb560fc0aab7" translate="yes" xml:space="preserve">
          <source>Ratio of line length to ribbon length. A ribbon refers to the characters on a line &lt;em&gt;excluding&lt;/em&gt; indentation. So a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; of 100, with a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;2.0&lt;/code&gt; would only allow up to 50 characters of ribbon to be displayed on a line, while allowing it to be indented up to 50 characters.</source>
          <target state="translated">线长与碳带长度之比。功能区是指一行上的字符（&lt;em&gt;不包括&lt;/em&gt;缩进）。因此，如果 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; 为100， &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;2.0&lt;/code&gt; ，则最多只能在一行上显示Ribbon的50个字符，同时最多可以缩进50个字符。</target>
        </trans-unit>
        <trans-unit id="4fffe46763de726cdd41fc5ca5f40572f607297e" translate="yes" xml:space="preserve">
          <source>Ratio of line length to ribbon length. A ribbon refers to the characters on a line &lt;em&gt;excluding&lt;/em&gt; indentation. So a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; of 100, with a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;2.0&lt;/code&gt; would only allow up to 50 characters of ribbon to be displayed on a line, while allowing it to be indented up to 50 characters.</source>
          <target state="translated">线长与碳带长度之比。功能区是指一行上的字符（&lt;em&gt;不包括&lt;/em&gt;缩进）。因此，如果 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; 为100， &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;2.0&lt;/code&gt; ，则最多只能在一行上显示Ribbon的50个字符，同时最多可以缩进50个字符。</target>
        </trans-unit>
        <trans-unit id="ed1304ccb2873b49ac5ad2857447e7d4958a9afc" translate="yes" xml:space="preserve">
          <source>Ratio of line length to ribbon length. A ribbon refers to the characters on a line &lt;em&gt;excluding&lt;/em&gt; indentation. So a &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; of 100, with a &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;2.0&lt;/code&gt; would only allow up to 50 characters of ribbon to be displayed on a line, while allowing it to be indented up to 50 characters.</source>
          <target state="translated">线长与碳带长度之比。功能区是指一行上的字符（&lt;em&gt;不包括&lt;/em&gt;缩进）。因此，如果 &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; 为100， &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; 为 &lt;code&gt;2.0&lt;/code&gt; ，则最多只能在一行上显示Ribbon的50个字符，同时最多可以缩进50个字符。</target>
        </trans-unit>
        <trans-unit id="4d9365e2d43f2f4d7432550032b047d13acc7dc0" translate="yes" xml:space="preserve">
          <source>RatioZeroDenominator</source>
          <target state="translated">RatioZeroDenominator</target>
        </trans-unit>
        <trans-unit id="28f8f8c0856fcd5b648ff5e28234ee17ac5b1a2e" translate="yes" xml:space="preserve">
          <source>Rational</source>
          <target state="translated">Rational</target>
        </trans-unit>
        <trans-unit id="405213edafc737f5ab6efbcc9727c7dbc43be834" translate="yes" xml:space="preserve">
          <source>Rational numbers, with numerator and denominator of some &lt;code&gt;&lt;a href=&quot;ghc-real#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">有理数，具有某种 &lt;code&gt;&lt;a href=&quot;ghc-real#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 类型的分子和分母。</target>
        </trans-unit>
        <trans-unit id="66898ef89145e3251520fcffa27276a730264b3d" translate="yes" xml:space="preserve">
          <source>Rational numbers, with numerator and denominator of some &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">有理数，具有某种 &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 类型的分子和分母。</target>
        </trans-unit>
        <trans-unit id="998e2594b8623ea11ad1729045ff4b74f17b5bbb" translate="yes" xml:space="preserve">
          <source>Raw buffers</source>
          <target state="translated">原始缓冲器</target>
        </trans-unit>
        <trans-unit id="25fb73f383d3356e6e16bbb4088572623344a39b" translate="yes" xml:space="preserve">
          <source>Raw pointer of array version of &lt;code&gt;&lt;a href=&quot;system-win32-automation-input#v:sendInput&quot;&gt;sendInput&lt;/a&gt;&lt;/code&gt;. Use this function to support non-list sequence.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-win32-automation-input#v:sendInput&quot;&gt;sendInput&lt;/a&gt;&lt;/code&gt; 的数组版本的原始指针。使用此功能支持非列表序列。</target>
        </trans-unit>
        <trans-unit id="cee6901eb5dcf876205fb0f25887ebe12845d3fb" translate="yes" xml:space="preserve">
          <source>Raw read/write operations on file descriptors</source>
          <target state="translated">对文件描述符进行原始读/写操作。</target>
        </trans-unit>
        <trans-unit id="157fea958671982fd82ff04ec9ed8c09a6ef6b39" translate="yes" xml:space="preserve">
          <source>RawBuffer</source>
          <target state="translated">RawBuffer</target>
        </trans-unit>
        <trans-unit id="a8a5d4f060e1544d5944caadfd158d5a2d980db6" translate="yes" xml:space="preserve">
          <source>RawCharBuffer</source>
          <target state="translated">RawCharBuffer</target>
        </trans-unit>
        <trans-unit id="8da7c86459d153b460979db3219ab54db7fdba1e" translate="yes" xml:space="preserve">
          <source>RawDevice</source>
          <target state="translated">RawDevice</target>
        </trans-unit>
        <trans-unit id="0f11c5246f5cfda145cd94cc2026acc7a8f85d00" translate="yes" xml:space="preserve">
          <source>RawFilePath</source>
          <target state="translated">RawFilePath</target>
        </trans-unit>
        <trans-unit id="84f85043304c606b67a09190e7260a74e66b4111" translate="yes" xml:space="preserve">
          <source>RawIO</source>
          <target state="translated">RawIO</target>
        </trans-unit>
        <trans-unit id="e601d52c0dfeb733b64b16fa8cfb0f09d668768c" translate="yes" xml:space="preserve">
          <source>RawObject</source>
          <target state="translated">RawObject</target>
        </trans-unit>
        <trans-unit id="64cb694cae0bed8753db87912cef88672b156273" translate="yes" xml:space="preserve">
          <source>RcBcc</source>
          <target state="translated">RcBcc</target>
        </trans-unit>
        <trans-unit id="8c924ffc452540914b6a5f1c353b075e91bb1bc7" translate="yes" xml:space="preserve">
          <source>RcCc</source>
          <target state="translated">RcCc</target>
        </trans-unit>
        <trans-unit id="af90b8ce4325e3befb6865f737325cee4b2f3074" translate="yes" xml:space="preserve">
          <source>RcOriginal</source>
          <target state="translated">RcOriginal</target>
        </trans-unit>
        <trans-unit id="4ad7b36332eb45b360b8020417e1bfa69bfb1958" translate="yes" xml:space="preserve">
          <source>RcTo</source>
          <target state="translated">RcTo</target>
        </trans-unit>
        <trans-unit id="3407f4aa246ee23f71ca756ee8cf2ad566b1ba31" translate="yes" xml:space="preserve">
          <source>Re-compile your program for profiling with the &lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt; option, and probably one of the options for adding automatic annotations: &lt;a href=&quot;#ghc-flag--fno-prof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt; is the most common &lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8173c1f1a663cdea3e376c90c48dd90dcb46e19a" translate="yes" xml:space="preserve">
          <source>Re-compile your program for profiling with the &lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt; option, and probably one of the options for adding automatic annotations: &lt;a href=&quot;#ghc-flag--fprof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt; is the most common &lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;.</source>
          <target state="translated">重新编译程序以使用&lt;a href=&quot;#ghc-flag--prof&quot;&gt; &lt;code&gt;-prof&lt;/code&gt; &lt;/a&gt;选项进行概要分析，并且可能是添加自动注释的选项之一：&lt;a href=&quot;#ghc-flag--fprof-auto&quot;&gt; &lt;code&gt;-fprof-auto&lt;/code&gt; &lt;/a&gt;是最常见的&lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="436cf278924bc8efee40d02b4519461683e18994" translate="yes" xml:space="preserve">
          <source>Re-creates the binary cache file &lt;code&gt;package.cache&lt;/code&gt; for the selected database. This may be necessary if the cache has somehow become out-of-sync with the contents of the database (&lt;code&gt;ghc-pkg&lt;/code&gt; will warn you if this might be the case).</source>
          <target state="translated">重新创建所选数据库的二进制缓存文件 &lt;code&gt;package.cache&lt;/code&gt; 。如果缓存因某种原因与数据库的内容不同步（可能会出现这种情况， &lt;code&gt;ghc-pkg&lt;/code&gt; 会警告您），这可能是必要的。</target>
        </trans-unit>
        <trans-unit id="7ed12af550b46e901d403b9d0f93291b0cf629f6" translate="yes" xml:space="preserve">
          <source>Re-exported monoids from Data.Monoid</source>
          <target state="translated">从Data.Monoid重新导出的单体。</target>
        </trans-unit>
        <trans-unit id="2d04bfb5540a406fa1d417f909b39524de219c43" translate="yes" xml:space="preserve">
          <source>Re-run your program with &lt;code&gt;+RTS -S&lt;/code&gt;, and remove all doubt! (You&amp;rsquo;ll see the heap usage get bigger and bigger&amp;hellip;) (Hmmm&amp;hellip; this might be even easier with the &lt;code&gt;-G1&lt;/code&gt; RTS option; so&amp;hellip; &lt;code&gt;./a.out +RTS -S -G1&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d929a541c0f1ece950e385b483a59027154870" translate="yes" xml:space="preserve">
          <source>Re-run your program with &lt;code&gt;+RTS -S&lt;/code&gt;, and remove all doubt! (You&amp;rsquo;ll see the heap usage get bigger and bigger...) (Hmmm... this might be even easier with the &lt;code&gt;-G1&lt;/code&gt; RTS option; so... &lt;code&gt;./a.out +RTS -S -G1&lt;/code&gt;)</source>
          <target state="translated">使用 &lt;code&gt;+RTS -S&lt;/code&gt; 重新运行您的程序，并消除所有疑问！（您会看到堆使用率越来越大...）（嗯...使用 &lt;code&gt;-G1&lt;/code&gt; RTS选项可能更容易；所以... &lt;code&gt;./a.out +RTS -S -G1&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b39c69b57883ad20cea20e29a43c91838fc5dece" translate="yes" xml:space="preserve">
          <source>ReFS doesn't support hard link currently.</source>
          <target state="translated">ReFS目前不支持硬链接。</target>
        </trans-unit>
        <trans-unit id="852b438f91ad9eb2cdd84419a675a216d543c687" translate="yes" xml:space="preserve">
          <source>Read</source>
          <target state="translated">Read</target>
        </trans-unit>
        <trans-unit id="7e60df3ad56b5aa492c15c3cbc3edcd1117e2890" translate="yes" xml:space="preserve">
          <source>Read 16-bit int; offset in bytes.</source>
          <target state="translated">读取16位int;偏移量为字节。</target>
        </trans-unit>
        <trans-unit id="1a4eb9eb868bf67f4408ba141c666e2672927ff4" translate="yes" xml:space="preserve">
          <source>Read 16-bit integer; offset in 16-bit words.</source>
          <target state="translated">读取16位整数,偏移量为16位字。</target>
        </trans-unit>
        <trans-unit id="b0d87fc9401988038e38b59862ea5b5ccde17d68" translate="yes" xml:space="preserve">
          <source>Read 16-bit word; offset in 16-bit words.</source>
          <target state="translated">读取16位字;偏移量为16位字。</target>
        </trans-unit>
        <trans-unit id="779a27810169b39b14218816baff4c582c906214" translate="yes" xml:space="preserve">
          <source>Read 16-bit word; offset in bytes.</source>
          <target state="translated">读取16位字,偏移量为字节。</target>
        </trans-unit>
        <trans-unit id="4f4589f1ce718b81895e29adc9bfbd6c1f69bec7" translate="yes" xml:space="preserve">
          <source>Read 31-bit character; offset in 4-byte words.</source>
          <target state="translated">读取31位字符;偏移量为4字节的字。</target>
        </trans-unit>
        <trans-unit id="3d7bb4f3250d94c66276a215dac19da0ee208ceb" translate="yes" xml:space="preserve">
          <source>Read 31-bit character; offset in bytes.</source>
          <target state="translated">读取31位字符,偏移量为字节。</target>
        </trans-unit>
        <trans-unit id="25ab04b7ce5915f4baa82606d8db15948630ae37" translate="yes" xml:space="preserve">
          <source>Read 32-bit int; offset in bytes.</source>
          <target state="translated">读取32位int;偏移量(字节)。</target>
        </trans-unit>
        <trans-unit id="6fe96383ba999aacbde564c1a83fb114d382eaa7" translate="yes" xml:space="preserve">
          <source>Read 32-bit integer; offset in 32-bit words.</source>
          <target state="translated">读取32位整数,偏移量为32位字。</target>
        </trans-unit>
        <trans-unit id="60b8324b1d2cdc5721569c3a299a8daf64f2deb2" translate="yes" xml:space="preserve">
          <source>Read 32-bit word; offset in 32-bit words.</source>
          <target state="translated">读取32位字;偏移量为32位字。</target>
        </trans-unit>
        <trans-unit id="62fb98bafc343247ad56086482aff05792ef6f4a" translate="yes" xml:space="preserve">
          <source>Read 32-bit word; offset in bytes.</source>
          <target state="translated">读取32位字,偏移量为字节。</target>
        </trans-unit>
        <trans-unit id="d25a05e0ae959c82425e5422cb88b2cc0c3499b2" translate="yes" xml:space="preserve">
          <source>Read 64-bit int; offset in bytes.</source>
          <target state="translated">读取64位int;偏移量,单位为字节。</target>
        </trans-unit>
        <trans-unit id="5ff8b18e5826d1303bd5d1539c0e10e751fc2467" translate="yes" xml:space="preserve">
          <source>Read 64-bit integer; offset in 64-bit words.</source>
          <target state="translated">读取64位整数,偏移量为64位字。</target>
        </trans-unit>
        <trans-unit id="950cbae1770d68c7ff3f938a1bb875fcf874e61e" translate="yes" xml:space="preserve">
          <source>Read 64-bit word; offset in 64-bit words.</source>
          <target state="translated">读取64位字;偏移量为64位字。</target>
        </trans-unit>
        <trans-unit id="403ce44704144796890a2dd162b7d4b6bd35606a" translate="yes" xml:space="preserve">
          <source>Read 64-bit word; offset in bytes.</source>
          <target state="translated">读取64位字,偏移量为字节。</target>
        </trans-unit>
        <trans-unit id="9bda208a006c005a311a9525872635ddcfb5a7e7" translate="yes" xml:space="preserve">
          <source>Read 8-bit character; offset in bytes.</source>
          <target state="translated">读取8位字符,偏移量为字节。</target>
        </trans-unit>
        <trans-unit id="74ea30c59bd47b466db1dd2696f98867a27d8056" translate="yes" xml:space="preserve">
          <source>Read 8-bit integer; offset in bytes.</source>
          <target state="translated">读取8位整数,偏移量以字节为单位。</target>
        </trans-unit>
        <trans-unit id="66a3f6514090ac475eac95df9cd8e70ae4d2125d" translate="yes" xml:space="preserve">
          <source>Read 8-bit word; offset in bytes.</source>
          <target state="translated">读取8位字,偏移量为字节。</target>
        </trans-unit>
        <trans-unit id="52978387bdf57684002ff4fbf9d9b0b3152378e4" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; (without sign) from byte-array in base-256 representation.</source>
          <target state="translated">从base-256表示形式的字节数组中读取 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; （无符号）。</target>
        </trans-unit>
        <trans-unit id="128adcb084eec4344924afe5344cdb69c152d311" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; (without sign) from memory location at &lt;code&gt;&lt;em&gt;addr&lt;/em&gt;&lt;/code&gt; in base-256 representation.</source>
          <target state="translated">从以base-256表示形式的 &lt;code&gt;&lt;em&gt;addr&lt;/em&gt;&lt;/code&gt; 的内存位置读取 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; （无符号）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bc13cfab1d6d4894e1d0814d5699acd61f42785d" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Prefs&quot;&gt;Prefs&lt;/a&gt;&lt;/code&gt; from a given file. If there is an error reading the file, the &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:defaultPrefs&quot;&gt;defaultPrefs&lt;/a&gt;&lt;/code&gt; will be returned.</source>
          <target state="translated">从给定文件中读取 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Prefs&quot;&gt;Prefs&lt;/a&gt;&lt;/code&gt; 。如果读取文件时出错，则将返回 &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:defaultPrefs&quot;&gt;defaultPrefs&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e82d63ab81fecdb435939dcaf6fe495b71d99f5" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;n&lt;/code&gt; bytes into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">直接从指定的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 读取 &lt;code&gt;n&lt;/code&gt; 个字节到 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="811c646ce78dc8053eececaa8235f624c4c104fa" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;n&lt;/code&gt; bytes into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab54e44cbd0dec1e70996cdb4b7e93cc2071d0a" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;n&lt;/code&gt; bytes into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">直接从指定的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 读取 &lt;code&gt;n&lt;/code&gt; 个字节到 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="af24bb57706a7419040b51a8e704131723223ed4" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;n&lt;/code&gt; bytes into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b3e5b42103757d24b17f7c7998ff8f3f963bcd" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;.tix&lt;/code&gt; File.</source>
          <target state="translated">读取 &lt;code&gt;.tix&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="6d077a34945c77709ea02aa252897b606577a202" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in IEEE-754 format and host endian.</source>
          <target state="translated">读取IEEE-754格式的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 和主机字节序。</target>
        </trans-unit>
        <trans-unit id="2b511be32215f170b894b91b783fc72e7c9eff82" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="translated">阅读大端字节IEEE-754格式的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e270fdae5bb0b921134960c127b008cca47ba123" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="translated">阅读小尾数IEEE-754格式的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31eb10e403ca406961ff361d1965030257ca16fd" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in IEEE-754 format and host endian.</source>
          <target state="translated">阅读IEEE-754格式和主机字节序的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed181842c2d246c2be3b1cafa56c033e14b6ade7" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="translated">读取大端IEEE-754格式的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="450296dc083818a06097a7554a45768d187ae2a3" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="translated">阅读小尾数IEEE-754格式的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fed4ac78abb685c542391281d20196e4c779e56d" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. This is far more efficient than reading the characters into a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and then using &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;. First argument is the Handle to read from, and the second is the number of bytes to read. It returns the bytes read, up to n, or &lt;code&gt;&lt;a href=&quot;data-bytestring#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; if EOF has been reached.</source>
          <target state="translated">直接从指定的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 读取 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 。这比将字符读入 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 然后使用 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 更为有效。第一个参数是要读取的句柄，第二个参数是要读取的字节数。它返回读取的字节，最大为n，如果已达到EOF ，则为 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5234a0eeb8c72238d54687b0b6b7f23ba2958b11" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. This is far more efficient than reading the characters into a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and then using &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;. First argument is the Handle to read from, and the second is the number of bytes to read. It returns the bytes read, up to n, or &lt;code&gt;&lt;a href=&quot;data-bytestring#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; if EOF has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc2ed709a624a8004bd6878cf10a70498433b5d" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. This is far more efficient than reading the characters into a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and then using &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;. First argument is the Handle to read from, and the second is the number of bytes to read. It returns the bytes read, up to n, or &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; if EOF has been reached.</source>
          <target state="translated">直接从指定的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 读取 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 。这比将字符读入 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 然后使用 &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; 更为有效。第一个参数是要读取的句柄，第二个参数是要读取的字节数。它返回读取的字节，最大为n，如果已达到EOF ，则为 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7bbb8eb90662ec335f6b3d2f0ee3cc28e2d9fe7c" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. This is far more efficient than reading the characters into a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and then using &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;. First argument is the Handle to read from, and the second is the number of bytes to read. It returns the bytes read, up to n, or &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; if EOF has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41385428cb32efc10102354ba6b654e89a2182a7" translate="yes" xml:space="preserve">
          <source>Read a Word16 in big endian format</source>
          <target state="translated">阅读大英帝国格式的Word16。</target>
        </trans-unit>
        <trans-unit id="c7059262c6e0dd247842136bc035dbe7fac3eb07" translate="yes" xml:space="preserve">
          <source>Read a Word16 in little endian format</source>
          <target state="translated">阅读一个Word16的小英译本格式</target>
        </trans-unit>
        <trans-unit id="325ed0dff978da255c416ca5e04ee8469ca4aade" translate="yes" xml:space="preserve">
          <source>Read a Word32 in big endian format</source>
          <target state="translated">阅读一个大英式格式的Word32。</target>
        </trans-unit>
        <trans-unit id="9b384ff4a6ad39dcdd029a9762666669ec5b057f" translate="yes" xml:space="preserve">
          <source>Read a Word32 in little endian format</source>
          <target state="translated">读取一个Word32的小英汉格式。</target>
        </trans-unit>
        <trans-unit id="91270ca67d57bd1bdbeb755930779fcca71583f5" translate="yes" xml:space="preserve">
          <source>Read a Word64 in big endian format</source>
          <target state="translated">阅读大英帝国格式的Word64。</target>
        </trans-unit>
        <trans-unit id="5d9a29132fd85c218ab3569276165a1ce2167da2" translate="yes" xml:space="preserve">
          <source>Read a Word64 in little endian format</source>
          <target state="translated">读取一个Word64的小英汉格式。</target>
        </trans-unit>
        <trans-unit id="1dbaa4f5cf708506376d639753739c1d852b4bf9" translate="yes" xml:space="preserve">
          <source>Read a Word8 from the monad state</source>
          <target state="translated">从单体状态读取一个Word8</target>
        </trans-unit>
        <trans-unit id="33687198d0edb29afd53e4ee85d109db96503e2f" translate="yes" xml:space="preserve">
          <source>Read a character from the standard input device (same as &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetChar&quot;&gt;hGetChar&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">从标准输入设备（与 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetChar&quot;&gt;hGetChar&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; 相同）读取一个字符。</target>
        </trans-unit>
        <trans-unit id="b45a0fa5c6ee23b88df0d595555f79b07588df7b" translate="yes" xml:space="preserve">
          <source>Read a character from the standard input device (same as &lt;code&gt;&lt;a href=&quot;system-io#v:hGetChar&quot;&gt;hGetChar&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;system-io#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">从标准输入设备（与 &lt;code&gt;&lt;a href=&quot;system-io#v:hGetChar&quot;&gt;hGetChar&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-io#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; 相同）读取一个字符。</target>
        </trans-unit>
        <trans-unit id="0719ab4b706ee893ead8217fca15c3f09a2af0ce" translate="yes" xml:space="preserve">
          <source>Read a decimal integer. The input must begin with at least one decimal digit, and is consumed until a non-digit or end of string is reached.</source>
          <target state="translated">读取一个十进制整数。输入必须以至少一个小数位数开始,并被消耗,直到达到一个非小数位数或字符串的结束。</target>
        </trans-unit>
        <trans-unit id="54e6d350ae56550c44862ac311a367be600fae92" translate="yes" xml:space="preserve">
          <source>Read a file and return its contents as a string. The file is read lazily, as with &lt;code&gt;&lt;a href=&quot;data-text-lazy-io#v:getContents&quot;&gt;getContents&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">读取文件并以字符串形式返回其内容。与 &lt;code&gt;&lt;a href=&quot;data-text-lazy-io#v:getContents&quot;&gt;getContents&lt;/a&gt;&lt;/code&gt; 一样，文件被延迟读取。</target>
        </trans-unit>
        <trans-unit id="d91c0d58a076465748276893ce00cc9dcf0e0387" translate="yes" xml:space="preserve">
          <source>Read a handle's entire contents strictly into a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">严格将句柄的全部内容读入 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ddde23fb0886b2069060468faf3bddb7c72b3d9d" translate="yes" xml:space="preserve">
          <source>Read a handle's entire contents strictly into a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">严格将句柄的全部内容读入 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7439e315f02f450400e229e67923aa01c829dd88" translate="yes" xml:space="preserve">
          <source>Read a hexadecimal integer, consisting of an optional leading &lt;code&gt;&quot;0x&quot;&lt;/code&gt; followed by at least one hexadecimal digit. Input is consumed until a non-hex-digit or end of string is reached. This function is case insensitive.</source>
          <target state="translated">读取一个十六进制整数，该整数由一个可选的前导 &lt;code&gt;&quot;0x&quot;&lt;/code&gt; 和至少一个十六进制数字组成。消耗输入，直到到达非十六进制数字或字符串结尾。此功能不区分大小写。</target>
        </trans-unit>
        <trans-unit id="4d6ef962b6540180679caac9f11ba078a87836f5" translate="yes" xml:space="preserve">
          <source>Read a line from a handle</source>
          <target state="translated">从手柄上读一行字</target>
        </trans-unit>
        <trans-unit id="5f19303cec3e7c471d3d195797816309df8f8f1f" translate="yes" xml:space="preserve">
          <source>Read a line from stdin.</source>
          <target state="translated">从stdin读取一行。</target>
        </trans-unit>
        <trans-unit id="c0d47f6d713637753c2bcc367aaff8c0fce318ee" translate="yes" xml:space="preserve">
          <source>Read a line from the standard input device (same as &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetLine&quot;&gt;hGetLine&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">从标准输入设备（与 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetLine&quot;&gt;hGetLine&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; 相同）读取一行。</target>
        </trans-unit>
        <trans-unit id="5743e14432024dc17ab0cc94bee7428d51f61dfb" translate="yes" xml:space="preserve">
          <source>Read a line from the standard input device (same as &lt;code&gt;&lt;a href=&quot;system-io#v:hGetLine&quot;&gt;hGetLine&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;system-io#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">从标准输入设备（与 &lt;code&gt;&lt;a href=&quot;system-io#v:hGetLine&quot;&gt;hGetLine&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-io#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; 相同）读取一行。</target>
        </trans-unit>
        <trans-unit id="01c713600966b0fbf993236e350a166e304141fa" translate="yes" xml:space="preserve">
          <source>Read a mix file.</source>
          <target state="translated">读取一个混合文件。</target>
        </trans-unit>
        <trans-unit id="be8f10751cbc4efc5cde4e6e7e38e5094e226876" translate="yes" xml:space="preserve">
          <source>Read a rational number.</source>
          <target state="translated">读一个有理数。</target>
        </trans-unit>
        <trans-unit id="73f99dea456cdd98d70103431dec12bab6720d82" translate="yes" xml:space="preserve">
          <source>Read a single chunk of strict text from a buffer. Used by both the strict and lazy implementations of hGetContents.</source>
          <target state="translated">从缓冲区中读取一块严格文本。被hGetContents的严格和懒惰实现使用。</target>
        </trans-unit>
        <trans-unit id="3128563cca70a9b1fe0217abc816e305e4d7489c" translate="yes" xml:space="preserve">
          <source>Read a single line from a handle.</source>
          <target state="translated">从手柄中读取单行。</target>
        </trans-unit>
        <trans-unit id="adf69306cc90a31c382146419718b352ccd6cad6" translate="yes" xml:space="preserve">
          <source>Read a single line of input from a handle, constructing a list of decoded chunks as we go. When we're done, transform them into the destination type.</source>
          <target state="translated">从一个句柄中读取一行输入,边走边构建一个解码块的列表。当我们完成后,将它们转换为目标类型。</target>
        </trans-unit>
        <trans-unit id="25654588f3da8aeac6ef5d8db3b62a836c06fa32" translate="yes" xml:space="preserve">
          <source>Read a single line of user input from &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; 读取一行用户输入。</target>
        </trans-unit>
        <trans-unit id="3567b42f426069b714bcc5bc523c87fce4bcee1a" translate="yes" xml:space="preserve">
          <source>Read a specific file after the usual startup files. May be specified repeatedly for multiple inputs. &lt;a href=&quot;#ghc-flag--ignore-dot-ghci&quot;&gt;&lt;code&gt;-ignore-dot-ghci&lt;/code&gt;&lt;/a&gt; does not apply to these files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdfe120d485085e70e78fc48c39eb13447bb5f0" translate="yes" xml:space="preserve">
          <source>Read a specific file after the usual startup files. Maybe be specified repeatedly for multiple inputs.</source>
          <target state="translated">在通常的启动文件后读取一个特定的文件。也许可以为多个输入重复指定。</target>
        </trans-unit>
        <trans-unit id="fbdbb8f86925718238233077f610fe66a832424a" translate="yes" xml:space="preserve">
          <source>Read a string representation of a character, using Haskell source-language escape conventions, and convert it to the character that it encodes. For example:</source>
          <target state="translated">使用 Haskell 源语言转义约定,读取字符的字符串表示,并将其转换为它编码的字符。例如</target>
        </trans-unit>
        <trans-unit id="f45ab2992a7f92c89c2d67b45445d7594627e828" translate="yes" xml:space="preserve">
          <source>Read a string representation of a character, using Haskell source-language escape conventions. For example:</source>
          <target state="translated">使用 Haskell 源语言转义约定,读取一个字符的字符串表示。例如:</target>
        </trans-unit>
        <trans-unit id="59574f2898f4af82703bca7202a821293d4ffcc1" translate="yes" xml:space="preserve">
          <source>Read a value from a memory area regarded as an array of values of the same kind. The first argument specifies the start address of the array and the second the index into the array (the first element of the array has index &lt;code&gt;0&lt;/code&gt;). The following equality holds,</source>
          <target state="translated">从被视为同类值数组的存储区中读取一个值。第一个参数指定数组的起始地址，第二个参数指定数组的索引（数组的第一个元素的索引为 &lt;code&gt;0&lt;/code&gt; ）。以下等式成立：</target>
        </trans-unit>
        <trans-unit id="f02dae23f91c992be0064ed7d86e41766eb8e894" translate="yes" xml:space="preserve">
          <source>Read a value from a memory location given by a base address and offset. The following equality holds:</source>
          <target state="translated">从基本地址和偏移量给定的内存位置读取一个值。下面的平等关系成立。</target>
        </trans-unit>
        <trans-unit id="a7b0aa0bd28f22ee1301ca31df70c736ff3ee306" translate="yes" xml:space="preserve">
          <source>Read a value from an &lt;code&gt;&lt;a href=&quot;ghc-ioarray#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;ghc-ioarray#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt; 读取值</target>
        </trans-unit>
        <trans-unit id="4d64cf50eadebd9d63f648489fffc060e93dade0" translate="yes" xml:space="preserve">
          <source>Read a value from the given memory location.</source>
          <target state="translated">从给定的内存位置读取一个值。</target>
        </trans-unit>
        <trans-unit id="c895abdcb0525ce203fd7be7a0c13f00f62176b5" translate="yes" xml:space="preserve">
          <source>Read a value in either extended or basic format</source>
          <target state="translated">读取一个扩展或基本格式的值</target>
        </trans-unit>
        <trans-unit id="f6e13344b410105e46fe8c0c3bb31ba832250e46" translate="yes" xml:space="preserve">
          <source>Read a value in the format</source>
          <target state="translated">读取格式为</target>
        </trans-unit>
        <trans-unit id="dd0b7cb834d846fc1947e62e526ff39953f44c07" translate="yes" xml:space="preserve">
          <source>Read a vector from specified index of immutable array of scalars; offset is in scalar elements.</source>
          <target state="translated">从不可变标量数组的指定索引中读取一个向量,偏移量以标量元素为单位。</target>
        </trans-unit>
        <trans-unit id="f79c6c6b83c77de14c0bf3ded60c02c747a26da6" translate="yes" xml:space="preserve">
          <source>Read a vector from specified index of immutable array.</source>
          <target state="translated">从不可变数组的指定索引中读取一个向量。</target>
        </trans-unit>
        <trans-unit id="5615bbd35bd929521c39374f2e2a2232ced11f9c" translate="yes" xml:space="preserve">
          <source>Read a vector from specified index of mutable array of scalars; offset is in scalar elements.</source>
          <target state="translated">从标量数组的指定索引中读取一个向量,偏移量以标量元素为单位。</target>
        </trans-unit>
        <trans-unit id="4e9fe50a296114dc2b02bd5ca2a79c2f895b774b" translate="yes" xml:space="preserve">
          <source>Read a vector from specified index of mutable array.</source>
          <target state="translated">从指定的可变数组索引中读取一个向量。</target>
        </trans-unit>
        <trans-unit id="a7742b39ce7421c6d47b0effa4450918bdd45632" translate="yes" xml:space="preserve">
          <source>Read additional &lt;code&gt;.ghci&lt;/code&gt; files</source>
          <target state="translated">阅读其他 &lt;code&gt;.ghci&lt;/code&gt; 文件</target>
        </trans-unit>
        <trans-unit id="d233243d198088b2c0450f8380c909a760fb25ad" translate="yes" xml:space="preserve">
          <source>Read address; offset in bytes.</source>
          <target state="translated">读取地址;偏移量(字节)。</target>
        </trans-unit>
        <trans-unit id="3197b5d5666bc282a5115cbbd8185c4015503c26" translate="yes" xml:space="preserve">
          <source>Read all user input on &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; as a single string.</source>
          <target state="translated">读取 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; 输入中所有用户输入的单个字符串。</target>
        </trans-unit>
        <trans-unit id="4df9c1fd5f4c008b55e24b1254682c338fd5c8b5" translate="yes" xml:space="preserve">
          <source>Read an Int16 in big endian format.</source>
          <target state="translated">以大恩迪安格式读取Int16。</target>
        </trans-unit>
        <trans-unit id="6f267e0ba7feb196316db561014fb8a100f37edc" translate="yes" xml:space="preserve">
          <source>Read an Int16 in little endian format.</source>
          <target state="translated">以小恩迪安格式读取一个Int16。</target>
        </trans-unit>
        <trans-unit id="92b6e9e32f49c87b97a18f7e91eae119f1d1535e" translate="yes" xml:space="preserve">
          <source>Read an Int32 in big endian format.</source>
          <target state="translated">以大恩迪安格式读取一个Int32。</target>
        </trans-unit>
        <trans-unit id="295f966253d453f4fa2a13a40bcdb60b3120732b" translate="yes" xml:space="preserve">
          <source>Read an Int32 in little endian format.</source>
          <target state="translated">以小恩迪安格式读取一个Int32。</target>
        </trans-unit>
        <trans-unit id="2a4319e745da1df1fb9ab6def619894697620e21" translate="yes" xml:space="preserve">
          <source>Read an Int64 in big endian format.</source>
          <target state="translated">以大恩迪安格式读取Int64。</target>
        </trans-unit>
        <trans-unit id="7bff0912bbb59ea521663a0f1057dd5874ce2fbf" translate="yes" xml:space="preserve">
          <source>Read an Int64 in little endian format.</source>
          <target state="translated">以小恩迪安格式读取Int64。</target>
        </trans-unit>
        <trans-unit id="9d00ac172a382dbde434bc4bef4d834e10046dba" translate="yes" xml:space="preserve">
          <source>Read an Int8 from the monad state</source>
          <target state="translated">从单体状态中读取一个Int8</target>
        </trans-unit>
        <trans-unit id="29b4fc30960f16d120ae6224ddf706485760e8de" translate="yes" xml:space="preserve">
          <source>Read an element from a mutable array</source>
          <target state="translated">从一个可变数组中读取一个元素</target>
        </trans-unit>
        <trans-unit id="184940591a216fa9ea649f7763278eb44f8d0931" translate="yes" xml:space="preserve">
          <source>Read an entire file &lt;em&gt;lazily&lt;/em&gt; into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The Handle will be held open until EOF is encountered.</source>
          <target state="translated">&lt;em&gt;懒惰地&lt;/em&gt;将整个文件读取到 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 中。该句柄将保持打开状态，直到遇到EOF。</target>
        </trans-unit>
        <trans-unit id="03f1e6feeff9a1725dd05ae88ec08afc7c1d72b9" translate="yes" xml:space="preserve">
          <source>Read an entire file &lt;em&gt;lazily&lt;/em&gt; into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The Handle will be held open until EOF is encountered.</source>
          <target state="translated">&lt;em&gt;懒惰地&lt;/em&gt;将整个文件读取到 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 中。该句柄将保持打开状态，直到遇到EOF。</target>
        </trans-unit>
        <trans-unit id="60570cd035ce237ccf2437d4bfb920a02e53853c" translate="yes" xml:space="preserve">
          <source>Read an entire file strictly into a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">严格将整个文件读入 &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="001be63528cff4e4b1bbe0b696c612c20323c3ab" translate="yes" xml:space="preserve">
          <source>Read an entire file strictly into a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">严格将整个文件读入 &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf17dfd1f6fadf4d500465addd8a6f58eeb87931" translate="yes" xml:space="preserve">
          <source>Read an integer from a string using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt;. If we fail to parse an integer, we want to return &lt;code&gt;0&lt;/code&gt; by default:</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt; 从字符串读取整数。如果我们无法解析整数，则默认情况下要返回 &lt;code&gt;0&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="be0da86fe87d3545be65bcc3b1ff13160afc8f22" translate="yes" xml:space="preserve">
          <source>Read an integer from a string using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt;. If we fail to parse an integer, we want to return &lt;code&gt;0&lt;/code&gt; by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab42205d653354d10c40dc2129358edaf0340a6a" translate="yes" xml:space="preserve">
          <source>Read an integer from a string using &lt;code&gt;&lt;a href=&quot;text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt;. If we fail to parse an integer, we want to return &lt;code&gt;0&lt;/code&gt; by default:</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt; 从字符串读取整数。如果我们无法解析整数，则默认情况下要返回 &lt;code&gt;0&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="8b7be0938cfa7ae7ce0d40e3b9c4c39227699e7a" translate="yes" xml:space="preserve">
          <source>Read an integer from a string using &lt;code&gt;&lt;a href=&quot;text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt;. If we succeed, return twice the integer; that is, apply &lt;code&gt;(*2)&lt;/code&gt; to it. If instead we fail to parse an integer, return &lt;code&gt;0&lt;/code&gt; by default:</source>
          <target state="translated">使用 &lt;code&gt;&lt;a href=&quot;text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt; 从字符串读取整数。如果成功，则返回整数的两倍；否则，返回整数。也就是说，对其应用 &lt;code&gt;(*2)&lt;/code&gt; 。如果相反，我们无法解析整数，则默认返回 &lt;code&gt;0&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="d0e1b310d39697280b0ca5896c55c8f8ddd9e208" translate="yes" xml:space="preserve">
          <source>Read an optional leading sign character (&lt;code&gt;'-'&lt;/code&gt; or &lt;code&gt;'+'&lt;/code&gt;) and apply it to the result of applying the given reader.</source>
          <target state="translated">读取可选的前导符号字符（ &lt;code&gt;'-'&lt;/code&gt; 或 &lt;code&gt;'+'&lt;/code&gt; ），并将其应用于应用给定阅读器的结果。</target>
        </trans-unit>
        <trans-unit id="de974586f48684c65e0aed99e88a68bca9babb04" translate="yes" xml:space="preserve">
          <source>Read an unsigned number in decimal notation.</source>
          <target state="translated">读取一个十进制的无符号数。</target>
        </trans-unit>
        <trans-unit id="edd8a422da79ea12a97bd88bd774c6fa6d5e779c" translate="yes" xml:space="preserve">
          <source>Read an unsigned number in hexadecimal notation. Both upper or lower case letters are allowed.</source>
          <target state="translated">读取一个用十六进制表示的无符号数字。允许使用大写或小写字母。</target>
        </trans-unit>
        <trans-unit id="5feb144c8f7999d7fc0752e59f4bdec2cd116666" translate="yes" xml:space="preserve">
          <source>Read an unsigned number in octal notation.</source>
          <target state="translated">用八进制符号读取一个无符号数。</target>
        </trans-unit>
        <trans-unit id="6ad141bb083704baa04592db003358950eddce08" translate="yes" xml:space="preserve">
          <source>Read contents of &lt;code&gt;MutVar#&lt;/code&gt;. Result is not yet evaluated.</source>
          <target state="translated">阅读 &lt;code&gt;MutVar#&lt;/code&gt; 的内容。结果尚未评估。</target>
        </trans-unit>
        <trans-unit id="44f0e5c6fc9d1c23f9c6ed2b599b6b8d8e417ef0" translate="yes" xml:space="preserve">
          <source>Read contents of &lt;code&gt;TVar#&lt;/code&gt; outside an STM transaction</source>
          <target state="translated">在STM事务之外读取 &lt;code&gt;TVar#&lt;/code&gt; 的内容</target>
        </trans-unit>
        <trans-unit id="5ff6ad28f98052f9fcd898c2d97970160ba11e64" translate="yes" xml:space="preserve">
          <source>Read contents of &lt;code&gt;TVar#&lt;/code&gt;. Result is not yet evaluated.</source>
          <target state="translated">阅读 &lt;code&gt;TVar#&lt;/code&gt; 的内容。结果尚未评估。</target>
        </trans-unit>
        <trans-unit id="3603a43d62483fa4679d6af07c238488c46786c9" translate="yes" xml:space="preserve">
          <source>Read data from an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; and convert it to a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using the locale encoding. Throws an exception if this is an invalid descriptor, or EOF has been reached.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; 读取数据，然后使用区域设置编码将其转换为 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 。如果这是一个无效的描述符，或者已到达EOF，则引发异常。</target>
        </trans-unit>
        <trans-unit id="43ab7f0c4f47fef128b100ea328372f14b6a3498" translate="yes" xml:space="preserve">
          <source>Read data from an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; into memory. This is exactly equivalent to the POSIX &lt;code&gt;read&lt;/code&gt; function.</source>
          <target state="translated">将数据从 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; 读取到内存中。这完全等同于POSIX &lt;code&gt;read&lt;/code&gt; 功能。</target>
        </trans-unit>
        <trans-unit id="944c1e8256532934e3f44d1937f7def6a13dd70a" translate="yes" xml:space="preserve">
          <source>Read data from an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; and convert it to a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using the locale encoding. Throws an exception if this is an invalid descriptor, or EOF has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b425fd701193503b88a9a082df1d09c431fc7f8" translate="yes" xml:space="preserve">
          <source>Read data from an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; into memory. This is exactly equivalent to the POSIX &lt;code&gt;read&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bf8684c269a4820abae27741f614d296efe4c4" translate="yes" xml:space="preserve">
          <source>Read double; offset in bytes.</source>
          <target state="translated">读取双数;偏移量,单位为字节。</target>
        </trans-unit>
        <trans-unit id="b0cca27f8a9fdef6889ea37c66301c876cab8ce6" translate="yes" xml:space="preserve">
          <source>Read entire handle contents &lt;em&gt;lazily&lt;/em&gt; into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. Chunks are read on demand, using the default chunk size.</source>
          <target state="translated">&lt;em&gt;懒惰地&lt;/em&gt;将整个句柄内容读取到 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 中。使用默认块大小按需读取块。</target>
        </trans-unit>
        <trans-unit id="101b8e34a22629aafaa1a8c5025821cec283fe82" translate="yes" xml:space="preserve">
          <source>Read entire handle contents &lt;em&gt;lazily&lt;/em&gt; into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. Chunks are read on demand, using the default chunk size.</source>
          <target state="translated">&lt;em&gt;懒惰地&lt;/em&gt;将整个句柄内容读取到 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 中。使用默认块大小按需读取块。</target>
        </trans-unit>
        <trans-unit id="e54160b8e25354935fce10255c3e4543c690a8d3" translate="yes" xml:space="preserve">
          <source>Read float; offset in bytes.</source>
          <target state="translated">读出浮点数;偏移量,单位为字节。</target>
        </trans-unit>
        <trans-unit id="db90f20fdb5334fdb03e7dc9053d0abf64c43f74" translate="yes" xml:space="preserve">
          <source>Read from specified index of immutable array. Result is packaged into an unboxed singleton; the result itself is not yet evaluated.</source>
          <target state="translated">从不可变数组的指定索引中读取。结果被打包成一个未装箱的单子,结果本身还没有被评估。</target>
        </trans-unit>
        <trans-unit id="0200070728a5fb343af81ee6afd180f318933176" translate="yes" xml:space="preserve">
          <source>Read from specified index of mutable array. Result is not yet evaluated.</source>
          <target state="translated">从可变数组的指定索引中读取。读取结果尚未执行。</target>
        </trans-unit>
        <trans-unit id="d1a39c4b6ea4cc164485bd240d4bd6cf1570e05c" translate="yes" xml:space="preserve">
          <source>Read from the specified index of an immutable array. The result is packaged into an unboxed unary tuple; the result itself is not yet evaluated. Pattern matching on the tuple forces the indexing of the array to happen but does not evaluate the element itself. Evaluating the thunk prevents additional thunks from building up on the heap. Avoiding these thunks, in turn, reduces references to the argument array, allowing it to be garbage collected more promptly.</source>
          <target state="translated">从一个不可变数组的指定索引中读取数据。结果被打包成一个未装箱的单元组;结果本身尚未被评估。在元组上的模式匹配会强制数组的索引发生,但不会评估元素本身。评估thunk可以防止额外的thunks在堆上堆积。避免这些 thunks 反过来又减少了对参数数组的引用,使其能够更及时地被垃圾回收。</target>
        </trans-unit>
        <trans-unit id="36061d225788479538ce96083566a66df2c49724" translate="yes" xml:space="preserve">
          <source>Read input from &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;. Use terminal-style interaction if &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; is connected to a terminal and has echoing enabled. Otherwise (e.g., if &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; is a pipe), use file-style interaction.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; 读取输入。如果 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; 连接到终端并启用了回显功能，则使用终端风格的交互。否则（例如，如果 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; 是管道），则使用文件样式的交互。</target>
        </trans-unit>
        <trans-unit id="e2b87177b15201771ca07ee6fd67e9a5fc97ac6f" translate="yes" xml:space="preserve">
          <source>Read int; offset in bytes.</source>
          <target state="translated">读取 int;偏移量,单位为字节。</target>
        </trans-unit>
        <trans-unit id="509993ef463c0c211358fd0c0596577266fe2fb7" translate="yes" xml:space="preserve">
          <source>Read integer; offset in words.</source>
          <target state="translated">读取整数,偏移量以字为单位。</target>
        </trans-unit>
        <trans-unit id="e9087047c795daa1de0e7dba3f7e080b494418f8" translate="yes" xml:space="preserve">
          <source>Read some text. If the read succeeds, return its value and the remaining text, otherwise an error message.</source>
          <target state="translated">读取一些文本。如果读取成功,返回其值和剩余文本,否则返回错误信息。</target>
        </trans-unit>
        <trans-unit id="385971a1139a0bdb98d1292763e2b5ce86ca29ce" translate="yes" xml:space="preserve">
          <source>Read stable pointer; offset in bytes.</source>
          <target state="translated">读取稳定指针;偏移量为字节。</target>
        </trans-unit>
        <trans-unit id="3fc7f5e6a842e6c7c7f4d5cd93c243638c0a22c7" translate="yes" xml:space="preserve">
          <source>Read the interface in ⟨file⟩ and dump it as text to &lt;code&gt;stdout&lt;/code&gt;. For example &lt;code&gt;ghc --show-iface M.hi&lt;/code&gt;.</source>
          <target state="translated">阅读⟨file⟩中的接口，并将其作为文本转储到 &lt;code&gt;stdout&lt;/code&gt; 。例如 &lt;code&gt;ghc --show-iface M.hi&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="35fd8313e4529e013617beaafbd192823c6b704e" translate="yes" xml:space="preserve">
          <source>Read the next value from the &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;. Blocks when the channel is empty. Since the read end of a channel is an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, this operation inherits fairness guarantees of &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;s (e.g. threads blocked in this operation are woken up in FIFO order).</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; 读取下一个值。当通道为空时阻塞。由于通道的读取端是 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; ，因此此操作继承 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 的公平性保证（例如，以FIFO顺序唤醒了此操作中阻塞的线程）。</target>
        </trans-unit>
        <trans-unit id="a3f42dd07bf605d27f73449bde07c7d88dd5a27e" translate="yes" xml:space="preserve">
          <source>Read the next value from the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 中读取下一个值。</target>
        </trans-unit>
        <trans-unit id="219b4ebe09d71aecd989470d5600adac017a8f74" translate="yes" xml:space="preserve">
          <source>Read the next value from the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; 中读取下一个值。</target>
        </trans-unit>
        <trans-unit id="0e07d0d1882240686a99adef17b39a619c1bef0f" translate="yes" xml:space="preserve">
          <source>Read the next value from the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; 读取下一个值。</target>
        </trans-unit>
        <trans-unit id="e007f69e1d890c7d542d9833535fb4b6a263ffd6" translate="yes" xml:space="preserve">
          <source>Read the remaining contents of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; as a string. The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is closed once the contents have been read, or if an exception is thrown.</source>
          <target state="translated">以字符串形式读取 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 的其余内容。读取内容或引发异常后，将关闭该 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="85f565788b2b9a2c3728b76cecd24c45e236a991" translate="yes" xml:space="preserve">
          <source>Read the value of an &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">读取 &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; 的值</target>
        </trans-unit>
        <trans-unit id="e7780aaaf7afd886eedb902ae89adf47399d57fc" translate="yes" xml:space="preserve">
          <source>Read the value of an &lt;code&gt;&lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">读取 &lt;code&gt;&lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt; 的值</target>
        </trans-unit>
        <trans-unit id="e675dd344452e999c38ed03687aca33c72e023cd" translate="yes" xml:space="preserve">
          <source>Read the value of an &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">读取 &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; 的值</target>
        </trans-unit>
        <trans-unit id="8e716a6f85aeaaaa890a3308400401bdff5d70c0" translate="yes" xml:space="preserve">
          <source>Read the value of an &lt;code&gt;&lt;a href=&quot;ghc-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">读取 &lt;code&gt;&lt;a href=&quot;ghc-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt; 的值</target>
        </trans-unit>
        <trans-unit id="01bf80e08c343263e4bb151f8cf9ca8018bbad19" translate="yes" xml:space="preserve">
          <source>Read the value of an &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">读取 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; 的值</target>
        </trans-unit>
        <trans-unit id="048e888435023fe10ac7481eb2d18a6767a2ae0e" translate="yes" xml:space="preserve">
          <source>Read up to the specified number of bytes, returning the number of bytes actually read, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the end of the stream has been reached.</source>
          <target state="translated">读取最多指定的字节数，返回实际读取的字节数；如果已到达流的末尾，则返回 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ddb4092dc0454475d79a2caf656b95780da4b95" translate="yes" xml:space="preserve">
          <source>Read up to the specified number of bytes, returning the number of bytes actually read. This function should only block if there is no data available. If there is not enough data available, then the function should just return the available data. A return value of zero indicates that the end of the data stream (e.g. end of file) has been reached.</source>
          <target state="translated">读取到指定的字节数,返回实际读取的字节数。只有在没有可用数据的情况下,这个函数才应该阻塞。如果没有足够的数据可用,那么该函数应该只返回可用的数据。返回值为0表示已经到达数据流的末端(如文件的末端)。</target>
        </trans-unit>
        <trans-unit id="29b7483916a09f80924395ee0d7b83ba6ab96615" translate="yes" xml:space="preserve">
          <source>Read word; offset in bytes.</source>
          <target state="translated">读取字;偏移量(字节)。</target>
        </trans-unit>
        <trans-unit id="e12038f525002402b577d6fb2889e55cff2dfbae" translate="yes" xml:space="preserve">
          <source>Read word; offset in words.</source>
          <target state="translated">读字;以字为单位进行偏移。</target>
        </trans-unit>
        <trans-unit id="1b9d7709bfb533d78fbe0b84eb0c51db68ac6e05" translate="yes" xml:space="preserve">
          <source>Read1</source>
          <target state="translated">Read1</target>
        </trans-unit>
        <trans-unit id="81d8932de84f99268c4fd5f11aa697682044fa60" translate="yes" xml:space="preserve">
          <source>Read2</source>
          <target state="translated">Read2</target>
        </trans-unit>
        <trans-unit id="f1e077638634abc3662a6f0c89d3f406f31baa23" translate="yes" xml:space="preserve">
          <source>ReadBuffer</source>
          <target state="translated">ReadBuffer</target>
        </trans-unit>
        <trans-unit id="c5020e6d3d649435fd6a8008235ac63730a66a73" translate="yes" xml:space="preserve">
          <source>ReadEnable</source>
          <target state="translated">ReadEnable</target>
        </trans-unit>
        <trans-unit id="6de7f0656dc34507427ddc07a973f98f0bcc41df" translate="yes" xml:space="preserve">
          <source>ReadHandle</source>
          <target state="translated">ReadHandle</target>
        </trans-unit>
        <trans-unit id="54556afe3251c3e593a21d925fcc337a1e508750" translate="yes" xml:space="preserve">
          <source>ReadLock</source>
          <target state="translated">ReadLock</target>
        </trans-unit>
        <trans-unit id="c2f37f72692c3515483dfa8baf2cb80b52368faa" translate="yes" xml:space="preserve">
          <source>ReadMode</source>
          <target state="translated">ReadMode</target>
        </trans-unit>
        <trans-unit id="35b71d2407f50e29058b6e84ccdbdda494394136" translate="yes" xml:space="preserve">
          <source>ReadOnly</source>
          <target state="translated">ReadOnly</target>
        </trans-unit>
        <trans-unit id="46689621a240954e944093b728ea402ca810f9e1" translate="yes" xml:space="preserve">
          <source>ReadP</source>
          <target state="translated">ReadP</target>
        </trans-unit>
        <trans-unit id="4b68042bf88ac33a1e40bfc7d7f822fcd7009e90" translate="yes" xml:space="preserve">
          <source>ReadPrec</source>
          <target state="translated">ReadPrec</target>
        </trans-unit>
        <trans-unit id="9fe9c76a65059b5111bfa003358795f86d10951b" translate="yes" xml:space="preserve">
          <source>ReadS</source>
          <target state="translated">ReadS</target>
        </trans-unit>
        <trans-unit id="934e6375acc87422b86cc2cd6088641368f302ce" translate="yes" xml:space="preserve">
          <source>ReadWrite</source>
          <target state="translated">ReadWrite</target>
        </trans-unit>
        <trans-unit id="9b64792077a2e304ad52b88e180478893f260952" translate="yes" xml:space="preserve">
          <source>ReadWriteHandle</source>
          <target state="translated">ReadWriteHandle</target>
        </trans-unit>
        <trans-unit id="52f3ccd214d97eb22352b89cf6fab70f198121a0" translate="yes" xml:space="preserve">
          <source>ReadWriteMode</source>
          <target state="translated">ReadWriteMode</target>
        </trans-unit>
        <trans-unit id="ac5bbe8292ed1b69e0f95e5bdaa035569a295fd7" translate="yes" xml:space="preserve">
          <source>Reader</source>
          <target state="translated">Reader</target>
        </trans-unit>
        <trans-unit id="c63a28bc751310feb69d6d85675c8d7417374a2f" translate="yes" xml:space="preserve">
          <source>Reader operations</source>
          <target state="translated">读者操作</target>
        </trans-unit>
        <trans-unit id="c6a6be791f6f7604b9585f870722f3f322f53e43" translate="yes" xml:space="preserve">
          <source>ReaderT</source>
          <target state="translated">ReaderT</target>
        </trans-unit>
        <trans-unit id="cffa2af0a3a67cf2123e3411d020161abc01fc05" translate="yes" xml:space="preserve">
          <source>Reading</source>
          <target state="translated">Reading</target>
        </trans-unit>
        <trans-unit id="c422c2c68b42e2bd58fbc1703fc83cd895932253" translate="yes" xml:space="preserve">
          <source>Reading a &lt;code&gt;&lt;a href=&quot;data-void#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; value is always a parse error, considering &lt;code&gt;&lt;a href=&quot;data-void#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; as a data type with no constructors.</source>
          <target state="translated">读一 &lt;code&gt;&lt;a href=&quot;data-void#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; 值始终是分析错误，考虑 &lt;code&gt;&lt;a href=&quot;data-void#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; 与没有构造函数的数据类型。</target>
        </trans-unit>
        <trans-unit id="f06f44f189a8a36daa4efe052b72e715b174b17d" translate="yes" xml:space="preserve">
          <source>Reading a &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; value is always a parse error, considering &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; as a data type with no constructors.</source>
          <target state="translated">读一 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; 值始终是分析错误，考虑 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; 与没有构造函数的数据类型。</target>
        </trans-unit>
        <trans-unit id="ceb93f69e25dd4f67fafd5c0c9bcf1b6c00353d6" translate="yes" xml:space="preserve">
          <source>Reading and writing</source>
          <target state="translated">阅读和写作</target>
        </trans-unit>
        <trans-unit id="4f18826bef9dfdb927570ae8ab6b9bec70524276" translate="yes" xml:space="preserve">
          <source>Reading and writing mutable arrays</source>
          <target state="translated">读写可变数组</target>
        </trans-unit>
        <trans-unit id="365b9ae589656ef49d750dc632c6d31ceb0c5361" translate="yes" xml:space="preserve">
          <source>Reading directories</source>
          <target state="translated">读取目录</target>
        </trans-unit>
        <trans-unit id="96b64527dbce354910bf9627caf09e2a6cfc34cf" translate="yes" xml:space="preserve">
          <source>Reading from ByteStrings</source>
          <target state="translated">从ByteStrings读取</target>
        </trans-unit>
        <trans-unit id="e253f6b863facf4d77e612851b75f8717edbc34a" translate="yes" xml:space="preserve">
          <source>Reading user input</source>
          <target state="translated">读取用户输入</target>
        </trans-unit>
        <trans-unit id="6a32d6ca2eb1805847b13bc731bea17f663fa696" translate="yes" xml:space="preserve">
          <source>Reading/writing data</source>
          <target state="translated">读/写数据</target>
        </trans-unit>
        <trans-unit id="c80f1cd51e818f0a4c3a4b8c5cf43e874d958e5a" translate="yes" xml:space="preserve">
          <source>Reads 31-bit character; offset in 4-byte words.</source>
          <target state="translated">读取31位字符;偏移量为4字节的字。</target>
        </trans-unit>
        <trans-unit id="921dc7c293431a3a64c3ded33915a5aa38ae62af" translate="yes" xml:space="preserve">
          <source>Reads 8-bit character; offset in bytes.</source>
          <target state="translated">读取8位字符,偏移量以字节为单位。</target>
        </trans-unit>
        <trans-unit id="a5b991e4a4379bd9b80c3767927105724a0875a1" translate="yes" xml:space="preserve">
          <source>Reads a &lt;em&gt;signed&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Real&quot;&gt;Real&lt;/a&gt;&lt;/code&gt; value, given a reader for an unsigned value.</source>
          <target state="translated">读取有&lt;em&gt;符号的&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Real&quot;&gt;Real&lt;/a&gt;&lt;/code&gt; 值，给读者一个无符号的值。</target>
        </trans-unit>
        <trans-unit id="1fd583060d47ecdc99e4f5f0f86aaa58223cfd92" translate="yes" xml:space="preserve">
          <source>Reads a non-empty string of decimal digits.</source>
          <target state="translated">读取一串非空的十进制数字。</target>
        </trans-unit>
        <trans-unit id="cbbbba4aaf9680cf8ac1a308bdb53817ab019a45" translate="yes" xml:space="preserve">
          <source>Reads a number of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;s from the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; directly into an array.</source>
          <target state="translated">从指定的 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 中直接读取多个 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; 到数组中。</target>
        </trans-unit>
        <trans-unit id="556bd04c13e60facc8066057186c581b79650a92" translate="yes" xml:space="preserve">
          <source>Reads a number of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;s from the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; directly into an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07300e7dd09099ac84ef4f53f7fd7ce2c8ce883" translate="yes" xml:space="preserve">
          <source>Reads a package specification from ⟨file⟩ (which may be &amp;ldquo;&lt;code&gt;-&lt;/code&gt;&amp;rdquo; to indicate standard input), and adds it to the database of installed packages. The syntax of ⟨file⟩ is given in &lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo: a package specification&lt;/a&gt;.</source>
          <target state="translated">从&amp;ldquo;文件&amp;rdquo;（可能是&amp;ldquo; &lt;code&gt;-&lt;/code&gt; &amp;rdquo;表示标准输入）中读取软件包规范，并将其添加到已安装软件包的数据库中。&amp;ldquo;文件&amp;rdquo;的语法在&lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo：程序包规范中给出&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="18e64b7710b0f793ca4a73b1986230bc60e374cb" translate="yes" xml:space="preserve">
          <source>Reads an &lt;em&gt;unsigned&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value in an arbitrary base.</source>
          <target state="translated">读取任意基数的&lt;em&gt;无符号&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; 数值。</target>
        </trans-unit>
        <trans-unit id="df34a2a58d81dcca7a482cd5956785905a568c3f" translate="yes" xml:space="preserve">
          <source>Reads an &lt;em&gt;unsigned&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:RealFrac&quot;&gt;RealFrac&lt;/a&gt;&lt;/code&gt; value, expressed in decimal scientific notation.</source>
          <target state="translated">读取&lt;em&gt;无符号&lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:RealFrac&quot;&gt;RealFrac&lt;/a&gt;&lt;/code&gt; 值，以十进制科学计数法表示。</target>
        </trans-unit>
        <trans-unit id="ab426f1eb57de3cd53ffe87e3b87e21c773c64b0" translate="yes" xml:space="preserve">
          <source>Reads one character of input. Ignores non-printable characters.</source>
          <target state="translated">读取输入的一个字符。忽略不可打印的字符。</target>
        </trans-unit>
        <trans-unit id="8db8c0a51e77d5b8ce47a692479eb60e9ad3c1d1" translate="yes" xml:space="preserve">
          <source>Reads one line of input and fills the insertion space with initial text. When using terminal-style interaction, this function provides a rich line-editing user interface with the added ability to give the user default values.</source>
          <target state="translated">读取一行输入,并将初始文本填入插入空间。当使用终端式交互时,该函数提供了丰富的行编辑用户界面,并增加了给用户默认值的功能。</target>
        </trans-unit>
        <trans-unit id="33401a6d6df492bf1a176a021ff28fb4ff727341" translate="yes" xml:space="preserve">
          <source>Reads one line of input, without displaying the input while it is being typed. When using terminal-style interaction, the masking character (if given) will replace each typed character.</source>
          <target state="translated">读取一行输入,在输入过程中不显示输入。当使用终端式交互时,屏蔽字符(如果给定)将替换每个输入的字符。</target>
        </trans-unit>
        <trans-unit id="5e14c26e4702c8715ffc36b86faf8dd417b0a61b" translate="yes" xml:space="preserve">
          <source>Reads one line of input. The final newline (if any) is removed. When using terminal-style interaction, this function provides a rich line-editing user interface.</source>
          <target state="translated">读取一行输入。最后的新行(如果有的话)被删除。当使用终端式交互时,该函数提供了一个丰富的行编辑用户界面。</target>
        </trans-unit>
        <trans-unit id="2fcf3b55305c70b8c82f22537db6b19a7a199aa5" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;FilePath&lt;/code&gt; pointed to by the symbolic link and returns it.</source>
          <target state="translated">读取符号链接指向的 &lt;code&gt;FilePath&lt;/code&gt; 并返回它。</target>
        </trans-unit>
        <trans-unit id="b52ed1233e0f5b938bb0cd5a498ea44aaf2572ed" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;RawFilePath&lt;/code&gt; pointed to by the symbolic link and returns it.</source>
          <target state="translated">读取符号链接指向的 &lt;code&gt;RawFilePath&lt;/code&gt; 并返回它。</target>
        </trans-unit>
        <trans-unit id="722dfe2339359bc8455fa059b0c2ff7e3c1b3b76" translate="yes" xml:space="preserve">
          <source>Reads the line input history from the given file. Returns &lt;code&gt;&lt;a href=&quot;system-console-haskeline-history#v:emptyHistory&quot;&gt;emptyHistory&lt;/a&gt;&lt;/code&gt; if the file does not exist or could not be read.</source>
          <target state="translated">从给定文件中读取行输入历史记录。如果文件不存在或无法读取，则返回 &lt;code&gt;&lt;a href=&quot;system-console-haskeline-history#v:emptyHistory&quot;&gt;emptyHistory&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef042421d404f2b4e066a957f7c03bc5b97e85a1" translate="yes" xml:space="preserve">
          <source>Reads vector; offset in bytes.</source>
          <target state="translated">读取向量;偏移量,单位为字节。</target>
        </trans-unit>
        <trans-unit id="35688a4a54ddf8e2c084064bb89a3f81c25ec6d0" translate="yes" xml:space="preserve">
          <source>Reads vector; offset in scalar elements.</source>
          <target state="translated">读取向量;偏移量为标量元素。</target>
        </trans-unit>
        <trans-unit id="8e16e5b2c446aea3b142d9320755f82932fc2cdf" translate="yes" xml:space="preserve">
          <source>Real</source>
          <target state="translated">Real</target>
        </trans-unit>
        <trans-unit id="fe1df2542911bb9bfc0a0622989aa4692d4d4925" translate="yes" xml:space="preserve">
          <source>RealFloat</source>
          <target state="translated">RealFloat</target>
        </trans-unit>
        <trans-unit id="1d59ea5cfe761d6c3eab8be5af3e930b4e9813c9" translate="yes" xml:space="preserve">
          <source>RealFrac</source>
          <target state="translated">RealFrac</target>
        </trans-unit>
        <trans-unit id="72916ca84578a33d194a32dbc91dd0f2ffc568d0" translate="yes" xml:space="preserve">
          <source>RealWorld</source>
          <target state="translated">RealWorld</target>
        </trans-unit>
        <trans-unit id="5dba1501ceaedf9b453524d857a2faa617cb3fe6" translate="yes" xml:space="preserve">
          <source>Reason: a value of type &lt;code&gt;T&lt;/code&gt; must be represented as a pair of a dictionary for &lt;code&gt;Ord t&lt;/code&gt; and a value of type &lt;code&gt;t&lt;/code&gt;. That contradicts the idea that &lt;code&gt;newtype&lt;/code&gt; should have no concrete representation. You can get just the same efficiency and effect by using &lt;code&gt;data&lt;/code&gt; instead of &lt;code&gt;newtype&lt;/code&gt;. If there is no overloading involved, then there is more of a case for allowing an existentially-quantified &lt;code&gt;newtype&lt;/code&gt;, because the &lt;code&gt;data&lt;/code&gt; version does carry an implementation cost, but single-field existentially quantified constructors aren&amp;rsquo;t much use. So the simple restriction (no existential stuff on &lt;code&gt;newtype&lt;/code&gt;) stands, unless there are convincing reasons to change it.</source>
          <target state="translated">原因：类型 &lt;code&gt;T&lt;/code&gt; 的值必须表示为 &lt;code&gt;Ord t&lt;/code&gt; 的字典和类型 &lt;code&gt;t&lt;/code&gt; 的对。相矛盾的想法， &lt;code&gt;newtype&lt;/code&gt; 不应该有具体的表现。通过使用 &lt;code&gt;data&lt;/code&gt; 而不是 &lt;code&gt;newtype&lt;/code&gt; ,您可以获得相同的效率和效果。如果不涉及重载，则存在更多的情况允许使用存在量化的 &lt;code&gt;newtype&lt;/code&gt; ，因为 &lt;code&gt;data&lt;/code&gt; 版本确实带来了实现成本，但是单字段存在量化的构造函数用处不大。所以简单的限制（上没有存在的东西 &lt;code&gt;newtype&lt;/code&gt; ）的立场，除非有令人信服的理由进行更改。</target>
        </trans-unit>
        <trans-unit id="9a6256eaed9ea1114a2efcaedbce4cb0208a3d14" translate="yes" xml:space="preserve">
          <source>Reason: exactly which implicit parameter you pick up depends on exactly where you invoke a function. But the &amp;ldquo;invocation&amp;rdquo; of instance declarations is done behind the scenes by the compiler, so it&amp;rsquo;s hard to figure out exactly where it is done. Easiest thing is to outlaw the offending types.</source>
          <target state="translated">原因：您选择的隐式参数确切取决于调用函数的确切位置。但是实例声明的&amp;ldquo;调用&amp;rdquo;是由编译器在后台完成的，因此很难确切地知道它在哪里完成。最简单的方法就是取缔违规类型。</target>
        </trans-unit>
        <trans-unit id="298dc73731bc7a4749394c1ed1eaf9eac550e401" translate="yes" xml:space="preserve">
          <source>RebindableSyntax</source>
          <target state="translated">RebindableSyntax</target>
        </trans-unit>
        <trans-unit id="7b3fd32a019ac1e42cb2925f62672bed86d5adf3" translate="yes" xml:space="preserve">
          <source>Rec0</source>
          <target state="translated">Rec0</target>
        </trans-unit>
        <trans-unit id="1295aa259117100bd41b364e47ee19a8bf31b72d" translate="yes" xml:space="preserve">
          <source>Rec1</source>
          <target state="translated">Rec1</target>
        </trans-unit>
        <trans-unit id="1da832231b93d55790d520c684e009389eb2a703" translate="yes" xml:space="preserve">
          <source>RecConError</source>
          <target state="translated">RecConError</target>
        </trans-unit>
        <trans-unit id="fd95315fe03dd1800894931f422af84de4684d14" translate="yes" xml:space="preserve">
          <source>RecSelError</source>
          <target state="translated">RecSelError</target>
        </trans-unit>
        <trans-unit id="f3a0da81b45abf2b006fec20fa2d39ebbd2d4bbf" translate="yes" xml:space="preserve">
          <source>RecUpdError</source>
          <target state="translated">RecUpdError</target>
        </trans-unit>
        <trans-unit id="a335b25548f3bcd7b0fb7f79636f5e2db53c5a11" translate="yes" xml:space="preserve">
          <source>Recall our running &lt;code&gt;GMapKey&lt;/code&gt; class example:</source>
          <target state="translated">回想我们正在运行的 &lt;code&gt;GMapKey&lt;/code&gt; 类示例：</target>
        </trans-unit>
        <trans-unit id="903432601712147eb2434cb8c476ff0e83952cd7" translate="yes" xml:space="preserve">
          <source>Recipient</source>
          <target state="translated">Recipient</target>
        </trans-unit>
        <trans-unit id="9ef05c4a6741a87ca08b890fc7c21f33e2ad896a" translate="yes" xml:space="preserve">
          <source>RecipientClass</source>
          <target state="translated">RecipientClass</target>
        </trans-unit>
        <trans-unit id="78cbf8eb1d8fbe5db88f5c1a9c458b79c931b4c8" translate="yes" xml:space="preserve">
          <source>Recipients</source>
          <target state="translated">Recipients</target>
        </trans-unit>
        <trans-unit id="963a33a0896f0406c37381574c5bd6de3ca240a0" translate="yes" xml:space="preserve">
          <source>Reciprocal fraction.</source>
          <target state="translated">互惠分数。</target>
        </trans-unit>
        <trans-unit id="1c54132b8e5a9fa44a9a1a7d30b1be36ab3c4247" translate="yes" xml:space="preserve">
          <source>Record</source>
          <target state="translated">Record</target>
        </trans-unit>
        <trans-unit id="45d008c06807b89d2865fcbc138d7ad3f636b17b" translate="yes" xml:space="preserve">
          <source>Record external files that runIO is using (dependent upon). The compiler can then recognize that it should re-compile the Haskell file when an external file changes.</source>
          <target state="translated">记录runIO正在使用(依赖)的外部文件。编译器就可以认识到,当外部文件改变时,它应该重新编译Haskell文件。</target>
        </trans-unit>
        <trans-unit id="4b2f37c69064f4d60557c4a483d9e445adf20b7f" translate="yes" xml:space="preserve">
          <source>Record punning can also be used in an expression, writing, for example,</source>
          <target state="translated">记录标点符号也可以用在表达、写作中,比如。</target>
        </trans-unit>
        <trans-unit id="b6bac77d0dae3258bae661dba81781e4a0a53223" translate="yes" xml:space="preserve">
          <source>Record punning permits the variable name to be elided, so one can simply write</source>
          <target state="translated">记录标点允许省略变量名,所以我们可以简单地写下</target>
        </trans-unit>
        <trans-unit id="4d5738e1bf7489c65afdf5cf1dff634de18b8ff4" translate="yes" xml:space="preserve">
          <source>Record puns are enabled by the language extension &lt;a href=&quot;#extension-NamedFieldPuns&quot;&gt;&lt;code&gt;NamedFieldPuns&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过语言扩展&lt;a href=&quot;#extension-NamedFieldPuns&quot;&gt; &lt;code&gt;NamedFieldPuns&lt;/code&gt; &lt;/a&gt;启用记录双关语。</target>
        </trans-unit>
        <trans-unit id="1e65b5bd099154053ee3160874855905008b6109" translate="yes" xml:space="preserve">
          <source>Record update syntax is supported for existentials (and GADTs):</source>
          <target state="translated">存在物(和GADTs)支持记录更新语法。</target>
        </trans-unit>
        <trans-unit id="97ef08acc2a72cd32dfb1cf2b2819a6144dc81c7" translate="yes" xml:space="preserve">
          <source>Record updates are allowed with GADT-style declarations, only fields that have the following property: the type of the field mentions no existential type variables.</source>
          <target state="translated">允许用GADT式的声明进行记录更新,只允许具有以下属性的字段:字段的类型提到不存在类型变量。</target>
        </trans-unit>
        <trans-unit id="f66d5685b07c4c5f1ed77f33423e67329db7364a" translate="yes" xml:space="preserve">
          <source>Record wildcard syntax permits a &amp;ldquo;&lt;code&gt;..&lt;/code&gt;&amp;rdquo; in a record pattern, where each elided field &lt;code&gt;f&lt;/code&gt; is replaced by the pattern &lt;code&gt;f = f&lt;/code&gt;. For example, the above pattern can be written as</source>
          <target state="translated">记录通配符语法允许在记录模式中使用&amp;ldquo; &lt;code&gt;..&lt;/code&gt; &amp;rdquo;，其中每个被忽略的字段 &lt;code&gt;f&lt;/code&gt; 都由模式 &lt;code&gt;f = f&lt;/code&gt; 代替。例如，上述模式可以写成</target>
        </trans-unit>
        <trans-unit id="d84df017928cd2888fe54c1800d0964a95c8472d" translate="yes" xml:space="preserve">
          <source>Record wildcards are enabled by the language extension &lt;a href=&quot;#extension-RecordWildCards&quot;&gt;&lt;code&gt;RecordWildCards&lt;/code&gt;&lt;/a&gt;. This exension implies &lt;a href=&quot;#extension-DisambiguateRecordFields&quot;&gt;&lt;code&gt;DisambiguateRecordFields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">记录通配符由语言扩展&lt;a href=&quot;#extension-RecordWildCards&quot;&gt; &lt;code&gt;RecordWildCards&lt;/code&gt; &lt;/a&gt;启用。这种扩展意味着&lt;a href=&quot;#extension-DisambiguateRecordFields&quot;&gt; &lt;code&gt;DisambiguateRecordFields&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e1ff47d4cf5dcf2f6329432ce3f29be7e4ab2c66" translate="yes" xml:space="preserve">
          <source>Record wildcards can also be used in an expression, when constructing a record. For example,</source>
          <target state="translated">记录通配符也可以在表达式中使用,当构建一条记录时。例如:</target>
        </trans-unit>
        <trans-unit id="9336bd8c227cff18636f075435644bdb01f6a34f" translate="yes" xml:space="preserve">
          <source>Record wildcards cannot be used (a) in a record update construct, and (b) for data constructors that are not declared with record fields. For example:</source>
          <target state="translated">记录通配符不能用于:(a)记录更新构造体,(b)没有用记录字段声明的数据构造体。例如:</target>
        </trans-unit>
        <trans-unit id="edd96f87f6d5e76d68e7b04dc0fd9a0c6dbb1f87" translate="yes" xml:space="preserve">
          <source>Record wildcards in patterns can be mixed with other patterns, including puns (&lt;a href=&quot;#record-puns&quot;&gt;Record puns&lt;/a&gt;); for example, in a pattern &lt;code&gt;(C {a = 1, b, ..})&lt;/code&gt;. Additionally, record wildcards can be used wherever record patterns occur, including in &lt;code&gt;let&lt;/code&gt; bindings and at the top-level. For example, the top-level binding</source>
          <target state="translated">模式中的记录通配符可以与其他模式混合使用，包括双关语（&lt;a href=&quot;#record-puns&quot;&gt;Record puns&lt;/a&gt;）；例如，以某种模式 &lt;code&gt;(C {a = 1, b, ..})&lt;/code&gt; 。此外，记录通配符可以在记录模式出现的任何地方使用，包括在 &lt;code&gt;let&lt;/code&gt; 绑定中和顶层。例如，顶级绑定</target>
        </trans-unit>
        <trans-unit id="51710a4a1d384e827a832ae47b51f21552a87d3d" translate="yes" xml:space="preserve">
          <source>RecordPuns</source>
          <target state="translated">RecordPuns</target>
        </trans-unit>
        <trans-unit id="97d6c35fb960d0aa87a71bff4ce123711c88fffa" translate="yes" xml:space="preserve">
          <source>RecordWildCards</source>
          <target state="translated">RecordWildCards</target>
        </trans-unit>
        <trans-unit id="2eeb2a517c2c3eb4abfae9862f77f4fe5dd0c9c7" translate="yes" xml:space="preserve">
          <source>Recover from errors raised by &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; 引起的错误中恢复或 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="704ab362682b8edb6407654f5c2a1ef4eb552a64" translate="yes" xml:space="preserve">
          <source>Recover from errors raised by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; 引起的错误中恢复或 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd04839409ff12019afbb419b342d461f21fedc9" translate="yes" xml:space="preserve">
          <source>Recover from the monadic &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从单子 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 恢复</target>
        </trans-unit>
        <trans-unit id="0c339e2dbf9dd56253cac56b4a41d7147875527a" translate="yes" xml:space="preserve">
          <source>Rectangular form</source>
          <target state="translated">长方体</target>
        </trans-unit>
        <trans-unit id="3f83835e919f45852d22ee0e479c39ce851cbd86" translate="yes" xml:space="preserve">
          <source>Recursive &lt;code&gt;do&lt;/code&gt;-statements (see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/1262&quot;&gt;#1262&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716fd56982c99c47413170dcc01f043f0ea5c5dd" translate="yes" xml:space="preserve">
          <source>Recursive &lt;code&gt;do&lt;/code&gt;-statements (see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/1262&quot;&gt;Issue #1262&lt;/a&gt;)</source>
          <target state="translated">递归 &lt;code&gt;do&lt;/code&gt; 语句（请参阅&lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/1262&quot;&gt;问题＃1262&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="2c0e843943bdbb03678f7b901c80e258f54ba263" translate="yes" xml:space="preserve">
          <source>Recursive calls of kind &lt;code&gt;* -&amp;gt; *&lt;/code&gt; (or kind &lt;code&gt;k -&amp;gt; *&lt;/code&gt;, when &lt;code&gt;PolyKinds&lt;/code&gt; is enabled)</source>
          <target state="translated">种类 &lt;code&gt;* -&amp;gt; *&lt;/code&gt; （或种类 &lt;code&gt;k -&amp;gt; *&lt;/code&gt; 递归调用，当启用 &lt;code&gt;PolyKinds&lt;/code&gt; 时）</target>
        </trans-unit>
        <trans-unit id="54fc751a32ae132cec503b25942dbbe06a266bd1" translate="yes" xml:space="preserve">
          <source>RecursiveDo</source>
          <target state="translated">RecursiveDo</target>
        </trans-unit>
        <trans-unit id="275dacbf9d7809835c038a9a00d1c21a893a8aa0" translate="yes" xml:space="preserve">
          <source>Recursively add a closure and its transitive closure to a &lt;code&gt;Compact#&lt;/code&gt;, evaluating any unevaluated components at the same time. Note: &lt;code&gt;compactAdd#&lt;/code&gt; is not thread-safe, so only one thread may call &lt;code&gt;compactAdd#&lt;/code&gt; with a particular &lt;code&gt;Compact#&lt;/code&gt; at any given time. The primop does not enforce any mutual exclusion; the caller is expected to arrange this.</source>
          <target state="translated">向 &lt;code&gt;Compact#&lt;/code&gt; 递归添加一个闭包及其可传递闭包，同时评估所有未评估的组件。注意： &lt;code&gt;compactAdd#&lt;/code&gt; 不是线程安全的，因此在任何给定时间只能有一个线程调用具有特定 &lt;code&gt;Compact#&lt;/code&gt; 的 &lt;code&gt;compactAdd#&lt;/code&gt; 。primop不强制执行任何互斥；呼叫者应该安排这个。</target>
        </trans-unit>
        <trans-unit id="9db42c28c37a1bd7dcd5d9a57ba47b3781f19c59" translate="yes" xml:space="preserve">
          <source>Recursively loads the specified ⟨module⟩s, and all the modules they depend on. Here, each ⟨module⟩ must be a module name or filename, but may not be the name of a module in a package.</source>
          <target state="translated">递归加载指定的⟨module⟩,以及它们所依赖的所有模块。这里,每个⟨module⟩必须是模块名或文件名,但不能是包中模块的名称。</target>
        </trans-unit>
        <trans-unit id="cc9db3a795571c7e71f45670a1da7ff49b5f1557" translate="yes" xml:space="preserve">
          <source>Red</source>
          <target state="translated">Red</target>
        </trans-unit>
        <trans-unit id="f35448b6bee96de50ae1e8ff57c24c8d1e0d25df" translate="yes" xml:space="preserve">
          <source>Redirects all dump files into ⟨dir⟩. Dump files are generated when &lt;code&gt;-ddump-to-file&lt;/code&gt; is used with other &lt;code&gt;-ddump-*&lt;/code&gt; flags.</source>
          <target state="translated">将所有转储文件重定向到&amp;ldquo; dir&amp;rdquo;。当 &lt;code&gt;-ddump-to-file&lt;/code&gt; 与其他 &lt;code&gt;-ddump-*&lt;/code&gt; 标志一起使用时，将生成转储文件。</target>
        </trans-unit>
        <trans-unit id="ffcee6acb573e513bf54e2fecdf8ac60da3281ec" translate="yes" xml:space="preserve">
          <source>Redirects all generated FFI stub files into ⟨dir⟩. Stub files are generated when the Haskell source contains a &lt;code&gt;foreign export&lt;/code&gt; or &lt;code&gt;foreign import &quot;&amp;amp;wrapper&quot;&lt;/code&gt; declaration (see &lt;a href=&quot;ffi-chap#foreign-export-ghc&quot;&gt;Using foreign export and foreign import ccall &quot;wrapper&quot; with GHC&lt;/a&gt;). The &lt;code&gt;-stubdir&lt;/code&gt; option behaves in exactly the same way as &lt;code&gt;-odir&lt;/code&gt; and &lt;code&gt;-hidir&lt;/code&gt; with respect to hierarchical modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b3350c72033f92144bca80ed9c6189a91698b5" translate="yes" xml:space="preserve">
          <source>Redirects all generated FFI stub files into ⟨dir⟩. Stub files are generated when the Haskell source contains a &lt;code&gt;foreign export&lt;/code&gt; or &lt;code&gt;foreign import &quot;&amp;amp;wrapper&quot;&lt;/code&gt; declaration (see &lt;a href=&quot;ffi-chap#foreign-export-ghc&quot;&gt;Using foreign export and foreign import ccall &amp;ldquo;wrapper&amp;rdquo; with GHC&lt;/a&gt;). The &lt;code&gt;-stubdir&lt;/code&gt; option behaves in exactly the same way as &lt;code&gt;-odir&lt;/code&gt; and &lt;code&gt;-hidir&lt;/code&gt; with respect to hierarchical modules.</source>
          <target state="translated">将所有生成的FFI存根文件重定向到⟨dir⟩。当Haskell源代码包含 &lt;code&gt;foreign export&lt;/code&gt; 或 &lt;code&gt;foreign import &quot;&amp;amp;wrapper&quot;&lt;/code&gt; 声明时，将生成存根文件（请参阅&lt;a href=&quot;ffi-chap#foreign-export-ghc&quot;&gt;在GHC中使用外部导出和外部调用cwr&amp;ldquo;包装&amp;rdquo;&lt;/a&gt;）。对于分层模块， &lt;code&gt;-stubdir&lt;/code&gt; 选项的行为与 &lt;code&gt;-odir&lt;/code&gt; 和 &lt;code&gt;-hidir&lt;/code&gt; 完全相同。</target>
        </trans-unit>
        <trans-unit id="3486a9a9a04e6a11f983fe636c723b4aeb99470d" translate="yes" xml:space="preserve">
          <source>Redirects all generated extended interface files into ⟨dir⟩, instead of the default.</source>
          <target state="translated">将所有生成的扩展接口文件重定向到⟨dir⟩,而不是默认的。</target>
        </trans-unit>
        <trans-unit id="fafb4cb103b058c31d0ca01a68bbcf1d4a74a011" translate="yes" xml:space="preserve">
          <source>Redirects all generated interface files into ⟨dir⟩, instead of the default.</source>
          <target state="translated">将所有生成的接口文件重定向到⟨dir⟩,而不是默认的。</target>
        </trans-unit>
        <trans-unit id="bafa491122d5e3b44d04eabce2ce9d4d9f3fe18e" translate="yes" xml:space="preserve">
          <source>Redirects object files to directory ⟨dir⟩. For example:</source>
          <target state="translated">将对象文件重定向到目录⟨dir⟩。例如:</target>
        </trans-unit>
        <trans-unit id="fb62c4540305507d65a57dcc74037f8d6c22e2bf" translate="yes" xml:space="preserve">
          <source>Reduce a non-empty list with &lt;code&gt;&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">用 &lt;code&gt;&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt; 减少非空列表</target>
        </trans-unit>
        <trans-unit id="f669409b9317be7b6c92d9326e3ee545e967f0d9" translate="yes" xml:space="preserve">
          <source>Reduce a non-empty list with &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">用 &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt; 减少非空列表</target>
        </trans-unit>
        <trans-unit id="3b0a10cb566308fbe77ba8e40a66aaf874f1d51f" translate="yes" xml:space="preserve">
          <source>Reduce to weak head normal form</source>
          <target state="translated">减少到弱头正常形态</target>
        </trans-unit>
        <trans-unit id="cc4741026efb7365015adcf01e2a9a9c11506ab0" translate="yes" xml:space="preserve">
          <source>Reduces a structure of lists to the concatenation of those lists.</source>
          <target state="translated">将列表结构还原为这些列表的连接。</target>
        </trans-unit>
        <trans-unit id="68e6f6e8e5e68a420b8551a7827770ccd24a99b7" translate="yes" xml:space="preserve">
          <source>Reducing &lt;code&gt;ByteString&lt;/code&gt;s (folds)</source>
          <target state="translated">减少 &lt;code&gt;ByteString&lt;/code&gt; （折叠）</target>
        </trans-unit>
        <trans-unit id="5500c49978ea320adb112aadfa31adc296c7ccd5" translate="yes" xml:space="preserve">
          <source>Reducing lists (folds)</source>
          <target state="translated">减少名单(折页)</target>
        </trans-unit>
        <trans-unit id="2c4aefee968159da773bf3395f055cf516177a64" translate="yes" xml:space="preserve">
          <source>Reexports merge with local declarations; thus, the signature above would successfully merge with:</source>
          <target state="translated">再出口与本地声明合并;因此,上面的签名将成功地与下列声明合并:</target>
        </trans-unit>
        <trans-unit id="93603a5396d363713d725c65e1f3008ad8c1b7a0" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;glasgow_exts#generic-programming&quot;&gt;generic programming&lt;/a&gt; section for more details.</source>
          <target state="translated">有关更多详细信息，请参见&lt;a href=&quot;glasgow_exts#generic-programming&quot;&gt;通用编程&lt;/a&gt;部分。</target>
        </trans-unit>
        <trans-unit id="008c7de1b7be309f3cfe58bf315edd6c93f49696" translate="yes" xml:space="preserve">
          <source>Refer to the docs of &lt;code&gt;&lt;a href=&quot;system-directory#t:XdgDirectory&quot;&gt;XdgDirectory&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参考 &lt;code&gt;&lt;a href=&quot;system-directory#t:XdgDirectory&quot;&gt;XdgDirectory&lt;/a&gt;&lt;/code&gt; 的文档。</target>
        </trans-unit>
        <trans-unit id="e74b881339b17289107509d95c7d406494002649" translate="yes" xml:space="preserve">
          <source>Refer to the docs of &lt;code&gt;&lt;a href=&quot;system-directory#t:XdgDirectoryList&quot;&gt;XdgDirectoryList&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">有关更多详细信息，请参考 &lt;code&gt;&lt;a href=&quot;system-directory#t:XdgDirectoryList&quot;&gt;XdgDirectoryList&lt;/a&gt;&lt;/code&gt; 的文档。</target>
        </trans-unit>
        <trans-unit id="2a9435c3cde07529a15a70848b5052f1d7119dcc" translate="yes" xml:space="preserve">
          <source>References (variables) that can be used within the &lt;code&gt;ST&lt;/code&gt; monad are provided by &lt;a href=&quot;data-stref&quot;&gt;Data.STRef&lt;/a&gt;, and arrays are provided by &lt;a href=&quot;https://hackage.haskell.org/package/array/docs/Data-Array-ST.html&quot;&gt;Data.Array.ST&lt;/a&gt;.</source>
          <target state="translated">可以在 &lt;code&gt;ST&lt;/code&gt; monad中使用的引用（变量）由&lt;a href=&quot;data-stref&quot;&gt;Data.STRef&lt;/a&gt;提供，而数组由&lt;a href=&quot;https://hackage.haskell.org/package/array/docs/Data-Array-ST.html&quot;&gt;Data.Array.ST&lt;/a&gt;提供。</target>
        </trans-unit>
        <trans-unit id="afaad511a2f264ef617c4bd5e27041cac47430f5" translate="yes" xml:space="preserve">
          <source>References from the finalizer to the key are treated in the same way as references from the value to the key: they do not keep the key alive. A finalizer may therefore ressurrect the key, perhaps by storing it in the same data structure.</source>
          <target state="translated">定标器对键的引用与值对键的引用的处理方式相同:它们不会使键存活。因此,定标器可以重新恢复键,也许是通过将其存储在同一数据结构中。</target>
        </trans-unit>
        <trans-unit id="4ae6b3b0a70dc93123b509716449ade56205cac7" translate="yes" xml:space="preserve">
          <source>References in the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad中的参考。</target>
        </trans-unit>
        <trans-unit id="de8ec027bf3ad9a65f5743cae14aaade0d944700" translate="yes" xml:space="preserve">
          <source>References to values are usually implemented with memory addresses, and this is practical when communicating values between the different pieces of a single process.</source>
          <target state="translated">对值的引用通常用内存地址来实现,这在单个进程的不同部件之间进行值的通信时很实用。</target>
        </trans-unit>
        <trans-unit id="9d1e4e7d27b519b1da3d7266c9c87d7861741080" translate="yes" xml:space="preserve">
          <source>References:</source>
          <target state="translated">References:</target>
        </trans-unit>
        <trans-unit id="18431dfb97e878f723ad36ab7a585ebcaa439ca3" translate="yes" xml:space="preserve">
          <source>References: [1] &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa365247.aspx&quot;&gt;Naming Files, Paths and Namespaces&lt;/a&gt; (Microsoft MSDN)</source>
          <target state="translated">参考：[1] &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa365247.aspx&quot;&gt;命名文件，路径和命名空间&lt;/a&gt;（Microsoft MSDN）</target>
        </trans-unit>
        <trans-unit id="bf39b7c2c01888d0a805f728bbe9717c8be184e4" translate="yes" xml:space="preserve">
          <source>Reflexivity</source>
          <target state="translated">Reflexivity</target>
        </trans-unit>
        <trans-unit id="1921671fa378a21fecd5903582dca373a968309c" translate="yes" xml:space="preserve">
          <source>Regard &lt;code&gt;⟨file⟩&lt;/code&gt; as &quot;stable&quot;; i.e., exclude it from having dependencies on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d04efb9a6f71bcdf9b0e41c63b9b9158d592af" translate="yes" xml:space="preserve">
          <source>Regard &lt;code&gt;⟨file⟩&lt;/code&gt; as &amp;ldquo;stable&amp;rdquo;; i.e., exclude it from having dependencies on it.</source>
          <target state="translated">将&amp;ldquo; &lt;code&gt;⟨file⟩&lt;/code&gt; 视为&amp;ldquo;稳定&amp;rdquo;；即，从对它的依赖中排除它。</target>
        </trans-unit>
        <trans-unit id="0862e2ed7b6d956e6625b587fceb18c941739a9d" translate="yes" xml:space="preserve">
          <source>Regard modules imported from packages as unstable</source>
          <target state="translated">将从软件包中导入的模块视为不稳定的模块。</target>
        </trans-unit>
        <trans-unit id="019202863ab0d69f33936ecc2a2b973d9fe8bc76" translate="yes" xml:space="preserve">
          <source>Regard modules imported from packages as unstable, i.e., generate dependencies on any imported package modules (including &lt;code&gt;Prelude&lt;/code&gt;, and all other standard Haskell libraries). Dependencies are not traced recursively into packages; dependencies are only generated for home-package modules on external-package modules directly imported by the home package module. This option is normally only used by the various system libraries.</source>
          <target state="translated">将从软件包导入的模块视为不稳定，即，对任何导入的软件包模块（包括 &lt;code&gt;Prelude&lt;/code&gt; 和所有其他标准Haskell库）生成依赖关系。依赖关系不会递归地跟踪到包中；依赖关系仅在由主软件包模块直接导入的外部软件包模块上为主软件包模块生成。此选项通常仅由各种系统库使用。</target>
        </trans-unit>
        <trans-unit id="7c8723345072b355716dc59e64fea77c552c234c" translate="yes" xml:space="preserve">
          <source>Regardless of &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt;&lt;code&gt;FlexibleInstances&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt;, instance declarations must conform to some rules that ensure that instance resolution will terminate. The restrictions can be lifted with &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt;&lt;code&gt;UndecidableInstances&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;#undecidable-instances&quot;&gt;Undecidable instances&lt;/a&gt;).</source>
          <target state="translated">无论&lt;a href=&quot;#extension-FlexibleInstances&quot;&gt; &lt;code&gt;FlexibleInstances&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#extension-FlexibleContexts&quot;&gt; &lt;code&gt;FlexibleContexts&lt;/code&gt; 如何&lt;/a&gt;，实例声明都必须符合一些确保实例解析将终止的规则。可以使用&lt;a href=&quot;#extension-UndecidableInstances&quot;&gt; &lt;code&gt;UndecidableInstances&lt;/code&gt; &lt;/a&gt;解除限制（请参阅&lt;a href=&quot;#undecidable-instances&quot;&gt;Undecidable instances&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7189eefa1e3c6484fdace23f3d98f24bbfcd39e2" translate="yes" xml:space="preserve">
          <source>Register a timeout in the given number of microseconds. The returned &lt;code&gt;&lt;a href=&quot;ghc-event#t:TimeoutKey&quot;&gt;TimeoutKey&lt;/a&gt;&lt;/code&gt; can be used to later unregister or update the timeout. The timeout is automatically unregistered after the given time has passed.</source>
          <target state="translated">以给定的微秒数注册超时。返回的 &lt;code&gt;&lt;a href=&quot;ghc-event#t:TimeoutKey&quot;&gt;TimeoutKey&lt;/a&gt;&lt;/code&gt; 可用于以后注销或更新超时。给定时间过去后，超时将自动取消注册。</target>
        </trans-unit>
        <trans-unit id="ed9c07ccabe87a6a9007fc8cf055b8d53c52c17d" translate="yes" xml:space="preserve">
          <source>Registering interest in I/O events</source>
          <target state="translated">注册对I/O事件的兴趣</target>
        </trans-unit>
        <trans-unit id="54bddb98d2f657e2c79f06e4e172971579927de0" translate="yes" xml:space="preserve">
          <source>Registering interest in timeout events</source>
          <target state="translated">登记对超时事件的兴趣</target>
        </trans-unit>
        <trans-unit id="adf918739536fb0b0aeadbe1e82a7486651388cb" translate="yes" xml:space="preserve">
          <source>RegularFile</source>
          <target state="translated">RegularFile</target>
        </trans-unit>
        <trans-unit id="edc7ba7cf8b346f1f896a17a01f9d5133beec7fc" translate="yes" xml:space="preserve">
          <source>Reification always returns a pattern synonym's &lt;em&gt;fully&lt;/em&gt; specified type in abstract syntax.</source>
          <target state="translated">修正总是以抽象语法返回模式同义词的&lt;em&gt;完全&lt;/em&gt;指定类型。</target>
        </trans-unit>
        <trans-unit id="5bf8562f4d732fe1a6c21b59731f146166f9ff53" translate="yes" xml:space="preserve">
          <source>Reify</source>
          <target state="translated">Reify</target>
        </trans-unit>
        <trans-unit id="0f962ad51f159e8557fb498cb39e85f2ac566701" translate="yes" xml:space="preserve">
          <source>Related utilities</source>
          <target state="translated">相关公用事业</target>
        </trans-unit>
        <trans-unit id="73f01ad7eb3510ed60e70d9f2520b22efaee1381" translate="yes" xml:space="preserve">
          <source>Relative cursor movements</source>
          <target state="translated">光标的相对移动</target>
        </trans-unit>
        <trans-unit id="1c57e196778cc938a34ed9979a01ca63f8bc5b5a" translate="yes" xml:space="preserve">
          <source>RelativeSeek</source>
          <target state="translated">RelativeSeek</target>
        </trans-unit>
        <trans-unit id="922f646acf7186971e6f5ad3405009de06151459" translate="yes" xml:space="preserve">
          <source>Relax many of the Haskell 98 rules on type synonym definitions.</source>
          <target state="translated">放宽许多Haskell 98关于类型同义词定义的规则。</target>
        </trans-unit>
        <trans-unit id="c6448e9010ce738714d5f43f5ecfb4be301d62a4" translate="yes" xml:space="preserve">
          <source>Relax restrictions on the decidability of type synonym family instances.</source>
          <target state="translated">放宽对类型同义词族实例的可解性的限制。</target>
        </trans-unit>
        <trans-unit id="e90a12b3f26debfd7118805fe63817f39ff4e8fd" translate="yes" xml:space="preserve">
          <source>RelaxedLayout</source>
          <target state="translated">RelaxedLayout</target>
        </trans-unit>
        <trans-unit id="9844dfcb0240e7df480fd384606acd4ece12f354" translate="yes" xml:space="preserve">
          <source>RelaxedPolyRec</source>
          <target state="translated">RelaxedPolyRec</target>
        </trans-unit>
        <trans-unit id="c5033c11bde2f550a77d7d9e2a73f78a23e0b707" translate="yes" xml:space="preserve">
          <source>Release &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:HValueRef&quot;&gt;HValueRef&lt;/a&gt;&lt;/code&gt;s</source>
          <target state="translated">发布 &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:HValueRef&quot;&gt;HValueRef&lt;/a&gt;&lt;/code&gt; 小号</target>
        </trans-unit>
        <trans-unit id="0eab4b131f1b19fe164b700fad7f1ab96e1f803d" translate="yes" xml:space="preserve">
          <source>Release a lock taken with &lt;code&gt;&lt;a href=&quot;ghc-io-handle-lock#v:hLock&quot;&gt;hLock&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ghc-io-handle-lock#v:hTryLock&quot;&gt;hTryLock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">释放使用 &lt;code&gt;&lt;a href=&quot;ghc-io-handle-lock#v:hLock&quot;&gt;hLock&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;ghc-io-handle-lock#v:hTryLock&quot;&gt;hTryLock&lt;/a&gt;&lt;/code&gt; 获取的锁。</target>
        </trans-unit>
        <trans-unit id="3ebb203461a0aa4dd07920b5d21f54c9db54c7ae" translate="yes" xml:space="preserve">
          <source>Release an HValueRef that originated in this process</source>
          <target state="translated">释放一个源于此过程的HValueRef。</target>
        </trans-unit>
        <trans-unit id="a6d0a27c957a07066e9e8f08e838df96108bbbc5" translate="yes" xml:space="preserve">
          <source>Release the storage associated with the given &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:FunPtr&quot;&gt;FunPtr&lt;/a&gt;&lt;/code&gt;, which must have been obtained from a wrapper stub. This should be called whenever the return value from a foreign import wrapper function is no longer required; otherwise, the storage it uses will leak.</source>
          <target state="translated">释放与给定 &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:FunPtr&quot;&gt;FunPtr&lt;/a&gt;&lt;/code&gt; 相关的存储，该存储必须从包装程序存根获得。每当不再需要外部导入包装函数的返回值时，都应调用此方法；否则，它使用的存储将泄漏。</target>
        </trans-unit>
        <trans-unit id="8c43bb248aeb7b0967ec7b99ac7ca9c40c0839b9" translate="yes" xml:space="preserve">
          <source>Remote GHCi message types and serialization.</source>
          <target state="translated">远程GHCi信息类型和序列化。</target>
        </trans-unit>
        <trans-unit id="2d1f5938098d57afebae29c3469844d3f945ff39" translate="yes" xml:space="preserve">
          <source>Remote interface to GHC.Exts.Heap.getClosureData. This is used by the GHCi debugger to inspect values in the heap for :print and type reconstruction.</source>
          <target state="translated">GHC.Exts.Heap.getClosureData的远程接口。这个接口被GHCi调试器用来检查堆中的值,以便进行:打印和类型重构。</target>
        </trans-unit>
        <trans-unit id="0cd648c6ca3fe3114aa1f6f720f459d7276ee033" translate="yes" xml:space="preserve">
          <source>RemotePtr</source>
          <target state="translated">RemotePtr</target>
        </trans-unit>
        <trans-unit id="187a245e1a8b6a27415032217dc5a06a99cd68c0" translate="yes" xml:space="preserve">
          <source>RemoteRef</source>
          <target state="translated">RemoteRef</target>
        </trans-unit>
        <trans-unit id="85785f66358814b69df1c70621bcdd7e763d273b" translate="yes" xml:space="preserve">
          <source>Remove an existing &lt;em&gt;directory&lt;/em&gt; symbolic link.</source>
          <target state="translated">删除现有的&lt;em&gt;目录&lt;/em&gt;符号链接。</target>
        </trans-unit>
        <trans-unit id="0673999ce87506fb5cef09cfbc8dadd5f55cc367" translate="yes" xml:space="preserve">
          <source>Remove any trailing path separators</source>
          <target state="translated">删除所有尾部的路径分隔符</target>
        </trans-unit>
        <trans-unit id="8beb6c3c391ddccec77b63bbbde93caf11d17ff0" translate="yes" xml:space="preserve">
          <source>Remove last extension, and the &quot;.&quot; preceding it.</source>
          <target state="translated">删除最后一个扩展名,以及前面的&quot;.&quot;。</target>
        </trans-unit>
        <trans-unit id="05c187b401a36b809081bde68b4c2aea820fadae" translate="yes" xml:space="preserve">
          <source>Remove redundant trailing slashes and pick the right kind of slash.</source>
          <target state="translated">去掉多余的尾部斜线,选择合适的斜线。</target>
        </trans-unit>
        <trans-unit id="c9e36bf68473eb7f3968e4856066a37060f5834e" translate="yes" xml:space="preserve">
          <source>Remove the current extension and add another, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">删除当前扩展名并添加另一个等效于 &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; 的扩展名。</target>
        </trans-unit>
        <trans-unit id="eec592bd28fecce5e8f5d2be48f7668f7794a216" translate="yes" xml:space="preserve">
          <source>Remove the current extension and add another, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">删除当前扩展名并添加另一个等效于 &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; 的扩展名。</target>
        </trans-unit>
        <trans-unit id="17578b00b37aed0982773868dca74948f1bfdae5" translate="yes" xml:space="preserve">
          <source>Remove the global package database from the package database stack.</source>
          <target state="translated">从包数据库堆栈中删除全局包数据库。</target>
        </trans-unit>
        <trans-unit id="7bd9c8003f540a0748e2a3ac9a5b859dc7cdda77" translate="yes" xml:space="preserve">
          <source>Remove the global package db from the stack.</source>
          <target state="translated">从堆栈中删除全局包db。</target>
        </trans-unit>
        <trans-unit id="f10c6fc20b38689163ee373e60892416930fb37e" translate="yes" xml:space="preserve">
          <source>Remove the specified package from the database.</source>
          <target state="translated">从数据库中删除指定的软件包。</target>
        </trans-unit>
        <trans-unit id="11145f3391ca6d052a2bbe930ffcdde0a5e0e622" translate="yes" xml:space="preserve">
          <source>Remove the user&amp;rsquo;s package db from the stack.</source>
          <target state="translated">从堆栈中删除用户的软件包db。</target>
        </trans-unit>
        <trans-unit id="4cfc9b66e86496c9a43261651fd6bc11bc6aba2f" translate="yes" xml:space="preserve">
          <source>Remove the user's package db from the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a1d14db76bff13b9d83408f48419f4032867f1" translate="yes" xml:space="preserve">
          <source>Removes a file or directory at &lt;em&gt;path&lt;/em&gt; together with its contents and subdirectories. Symbolic links are removed without affecting their targets. If the path does not exist, nothing happens.</source>
          <target state="translated">删除&lt;em&gt;路径中&lt;/em&gt;的文件或目录及其内容和子目录。符号链接将被删除而不影响其目标。如果该路径不存在，则什么也不会发生。</target>
        </trans-unit>
        <trans-unit id="dddbede7e13f9ce87fd5bc843c1cc2df052efa66" translate="yes" xml:space="preserve">
          <source>Rename a file or directory. If the destination path already exists, it is replaced atomically. The destination path must not point to an existing directory. A conformant implementation need not support renaming files in all situations (e.g. renaming across different physical devices), but the constraints must be documented.</source>
          <target state="translated">重命名一个文件或目录。如果目标路径已经存在,则会被原子地替换。目标路径不能指向一个现有的目录。一个符合要求的实现不需要在所有情况下都支持重命名文件(例如,在不同的物理设备上重命名),但必须记录这些限制。</target>
        </trans-unit>
        <trans-unit id="c7349a34435850bc973a75584dea2319034c0124" translate="yes" xml:space="preserve">
          <source>Renamer stats</source>
          <target state="translated">重命名器统计</target>
        </trans-unit>
        <trans-unit id="9e1ec92d4c65cbeb56b4afb5c7eb5b28b06150b9" translate="yes" xml:space="preserve">
          <source>Renaming files</source>
          <target state="translated">重命名文件</target>
        </trans-unit>
        <trans-unit id="57bb091db8c41259255e747c0ecd1b604c7e516e" translate="yes" xml:space="preserve">
          <source>Render a document with annotations, by interpreting the start and end of the annotations, as well as the text details in the context of a monad.</source>
          <target state="translated">渲染一个带有注释的文档,通过解释注释的开始和结束,以及单体背景下的文本细节。</target>
        </trans-unit>
        <trans-unit id="a9a4799c8dd61934677f0523fd77b9ce5a5bae56" translate="yes" xml:space="preserve">
          <source>Render a piece of HTML without adding a DOCTYPE declaration or root element. Does not add any extra whitespace.</source>
          <target state="translated">在不添加DOCTYPE声明或根元素的情况下渲染一段HTML。不添加任何额外的空白。</target>
        </trans-unit>
        <trans-unit id="d0396f6604a2cd217fc5188ee1468a23a68c8152" translate="yes" xml:space="preserve">
          <source>Render a piece of indented HTML without adding a DOCTYPE declaration or a root element. The indentation is done inside elements. This can change the meaning of the HTML document, and is mostly useful for debugging the HTML output. The implementation is inefficient, and you are normally better off using &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">呈现一段缩进的HTML，而不添加DOCTYPE声明或根元素。缩进在元素内部完成。这可以更改HTML文档的含义，并且对于调试HTML输出最有用。实现效率低下，通常最好使用 &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a89ea59d1fabd252ac4ff35ea0e42758d3ed5fc6" translate="yes" xml:space="preserve">
          <source>Render a piece of indented HTML without adding a DOCTYPE declaration or a root element. The indentation is done inside elements. This can change the meaning of the HTML document, and is mostly useful for debugging the HTML output. The implementation is inefficient, and you are normally better off using &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">呈现一段缩进的HTML，而不添加DOCTYPE声明或根元素。缩进在元素内部完成。这可以更改HTML文档的含义，并且对于调试HTML输出最有用。实现效率低下，通常最好使用 &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d0f0aa368898e42e42051599ad438bce930756e" translate="yes" xml:space="preserve">
          <source>Render a piece of indented HTML without adding a DOCTYPE declaration or a root element. The indentation is done inside elements. This can change the meaning of the HTML document, and is mostly useful for debugging the HTML output. The implementation is inefficient, and you are normally better off using &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">呈现一段缩进的HTML，而不添加DOCTYPE声明或根元素。缩进在元素内部完成。这可以更改HTML文档的含义，并且对于调试HTML输出最有用。实现效率低下，通常最好使用 &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:showHtmlFragment&quot;&gt;showHtmlFragment&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:renderHtmlFragment&quot;&gt;renderHtmlFragment&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71fee5123224c152c3f87461295917f353b82c69" translate="yes" xml:space="preserve">
          <source>Render a piece of indented HTML without adding a DOCTYPE declaration or root element. Only adds whitespace where it does not change the meaning of the document.</source>
          <target state="translated">在不添加DOCTYPE声明或根元素的情况下渲染一段缩进的HTML。只在不改变文档含义的地方添加空白。</target>
        </trans-unit>
        <trans-unit id="989a09007121599919344bf188e1cc94bb96ae11" translate="yes" xml:space="preserve">
          <source>Render a stacktrace as a string</source>
          <target state="translated">将一个堆栈跟踪以字符串的形式呈现出来</target>
        </trans-unit>
        <trans-unit id="1c7773afe751d705bbb0bab378fcfc6c481f0947" translate="yes" xml:space="preserve">
          <source>Render an annotated &lt;code&gt;Doc&lt;/code&gt; to a String and list of annotations (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#t:Span&quot;&gt;Span&lt;/a&gt;&lt;/code&gt;) using the default &lt;code&gt;Style&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">使用默认的 &lt;code&gt;Style&lt;/code&gt; （请参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; ）将带注释的 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串和注释列表（请参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#t:Span&quot;&gt;Span&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9f470695f470e172217ac5b861bd07c99096b4a5" translate="yes" xml:space="preserve">
          <source>Render an annotated &lt;code&gt;Doc&lt;/code&gt; to a String and list of annotations (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Span&quot;&gt;Span&lt;/a&gt;&lt;/code&gt;) using the default &lt;code&gt;Style&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">使用默认的 &lt;code&gt;Style&lt;/code&gt; （请参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; ）将带注释的 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串和注释列表（请参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#t:Span&quot;&gt;Span&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="92ba9e1fab478804fa747870260b0ff064c15ae9" translate="yes" xml:space="preserve">
          <source>Render out a String, interpreting the annotations as part of the resulting document.</source>
          <target state="translated">渲染出一个字符串,将注释解释为生成文档的一部分。</target>
        </trans-unit>
        <trans-unit id="74c43db33234ecef01eb99606404a4b48f7d70ce" translate="yes" xml:space="preserve">
          <source>Render the &lt;code&gt;Doc&lt;/code&gt; to a String using the default &lt;code&gt;Style&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">使用默认的 &lt;code&gt;Style&lt;/code&gt; （参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; ）将 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串。</target>
        </trans-unit>
        <trans-unit id="3f8842d2196fa6bcd3a6003035321861d97ea702" translate="yes" xml:space="preserve">
          <source>Render the &lt;code&gt;Doc&lt;/code&gt; to a String using the default &lt;code&gt;Style&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">使用默认的 &lt;code&gt;Style&lt;/code&gt; （参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; ）将 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串。</target>
        </trans-unit>
        <trans-unit id="87d0d1bd7f492f89f6856659a698622e65a18512" translate="yes" xml:space="preserve">
          <source>Render the &lt;code&gt;Doc&lt;/code&gt; to a String using the default &lt;code&gt;Style&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">使用默认的 &lt;code&gt;Style&lt;/code&gt; （参见 &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; ）将 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串。</target>
        </trans-unit>
        <trans-unit id="12f0d532a812bfd8c1a9dcc5e2d9fb2fc2e469b9" translate="yes" xml:space="preserve">
          <source>Render the &lt;code&gt;Doc&lt;/code&gt; to a String using the given &lt;code&gt;Style&lt;/code&gt;.</source>
          <target state="translated">使用给定的 &lt;code&gt;Style&lt;/code&gt; 将 &lt;code&gt;Doc&lt;/code&gt; 渲染为字符串。</target>
        </trans-unit>
        <trans-unit id="e263a3336086d5999e51a2639cfc00cf3424c6ff" translate="yes" xml:space="preserve">
          <source>Render this exception value in a human-friendly manner.</source>
          <target state="translated">以人性化的方式渲染这个异常值。</target>
        </trans-unit>
        <trans-unit id="e066e80468f5234a1001137061731ae39a651ab5" translate="yes" xml:space="preserve">
          <source>Rendering</source>
          <target state="translated">Rendering</target>
        </trans-unit>
        <trans-unit id="34a6e257033eabcb340989811be4abac8f495cec" translate="yes" xml:space="preserve">
          <source>Rendering documents</source>
          <target state="translated">渲染文件</target>
        </trans-unit>
        <trans-unit id="c4352059e23f7c8b5fdeb527b42173ae6cff8abe" translate="yes" xml:space="preserve">
          <source>Rendering mode.</source>
          <target state="translated">渲染模式。</target>
        </trans-unit>
        <trans-unit id="edcebf7a78fe981d04d9e64e593c132261b8c07d" translate="yes" xml:space="preserve">
          <source>Rendering with a particular style</source>
          <target state="translated">用特定的风格进行渲染</target>
        </trans-unit>
        <trans-unit id="7db65b43576bf07e08468b53aec04cf679691cd8" translate="yes" xml:space="preserve">
          <source>Rep (Generic)</source>
          <target state="translated">代表(通用)</target>
        </trans-unit>
        <trans-unit id="25e90fd26c391e05ac5ac88ef33690eb193fa404" translate="yes" xml:space="preserve">
          <source>Rep1 (Generic1)</source>
          <target state="translated">Rep1(通用1)</target>
        </trans-unit>
        <trans-unit id="c55c5386c4748e58caec034acfad7a9a0f8d3a82" translate="yes" xml:space="preserve">
          <source>Repeat a value &lt;code&gt;n&lt;/code&gt; times.</source>
          <target state="translated">重复一个值 &lt;code&gt;n&lt;/code&gt; 次。</target>
        </trans-unit>
        <trans-unit id="13ca240f053ae4ac28b651b1633ebe58645ee9c6" translate="yes" xml:space="preserve">
          <source>Repeat an action indefinitely.</source>
          <target state="translated">无限期地重复一个动作。</target>
        </trans-unit>
        <trans-unit id="180241f79b869b03862e97b4f7229351a6acf267" translate="yes" xml:space="preserve">
          <source>Repeat the previous command.</source>
          <target state="translated">重复之前的命令。</target>
        </trans-unit>
        <trans-unit id="b4c2e50efbac27b5756172990043eab9f749caef" translate="yes" xml:space="preserve">
          <source>Repeated indices in the association list are handled as for &lt;code&gt;&lt;a href=&quot;data-array#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt;: Haskell 2010 specifies that the resulting array is undefined (i.e. bottom), but GHC's implementation uses the last association for each index.</source>
          <target state="translated">关联列表中重复的索引的处理方式与 &lt;code&gt;&lt;a href=&quot;data-array#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt; ：Haskell 2010指定结果数组未定义（即底部），但是GHC的实现对每个索引使用最后一个关联。</target>
        </trans-unit>
        <trans-unit id="061f8bc61cf8ff462c0933d83acdae1674118907" translate="yes" xml:space="preserve">
          <source>Repeated indices in the association list are handled as for &lt;code&gt;&lt;a href=&quot;ghc-arr#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt;: Haskell 2010 specifies that the resulting array is undefined (i.e. bottom), but GHC's implementation uses the last association for each index.</source>
          <target state="translated">关联列表中重复的索引的处理方式与 &lt;code&gt;&lt;a href=&quot;ghc-arr#v:array&quot;&gt;array&lt;/a&gt;&lt;/code&gt; ：Haskell 2010指定结果数组未定义（即底部），但是GHC的实现对每个索引使用最后一个关联。</target>
        </trans-unit>
        <trans-unit id="711ba373a79d31376784182b72065d953222072d" translate="yes" xml:space="preserve">
          <source>Repetition</source>
          <target state="translated">Repetition</target>
        </trans-unit>
        <trans-unit id="203954ef3852cad427fc7bba8f24e8bfd55318a5" translate="yes" xml:space="preserve">
          <source>Replace all extensions of a file with a new extension. Note that &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; both work for adding multiple extensions, so only required when you need to drop all extensions first.</source>
          <target state="translated">用新扩展名替换文件的所有扩展名。请注意， &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; 都可用于添加多个扩展名，因此仅在需要首先删除所有扩展名时才需要。</target>
        </trans-unit>
        <trans-unit id="72c284911c0f562af8d743e9793ca8e8ff29667d" translate="yes" xml:space="preserve">
          <source>Replace all extensions of a file with a new extension. Note that &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; both work for adding multiple extensions, so only required when you need to drop all extensions first.</source>
          <target state="translated">用新扩展名替换文件的所有扩展名。请注意， &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; 都可用于添加多个扩展名，因此仅在需要首先删除所有扩展名时才需要。</target>
        </trans-unit>
        <trans-unit id="8ae954cfcce8d05d3d28022faa1cefad196caa67" translate="yes" xml:space="preserve">
          <source>Replace all locations in the input with the same value. The default definition is &lt;code&gt;&lt;a href=&quot;control-monad-instances#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;, but this may be overridden with a more efficient version.</source>
          <target state="translated">用相同的值替换输入中的所有位置。默认定义为 &lt;code&gt;&lt;a href=&quot;control-monad-instances#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ，但是可以使用更有效的版本来覆盖。</target>
        </trans-unit>
        <trans-unit id="bc970150dc79b794321f0edff04417f225cb5aef" translate="yes" xml:space="preserve">
          <source>Replace all locations in the input with the same value. The default definition is &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;, but this may be overridden with a more efficient version.</source>
          <target state="translated">用相同的值替换输入中的所有位置。默认定义为 &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ，但是可以使用更有效的版本来覆盖。</target>
        </trans-unit>
        <trans-unit id="a81c2807ba345abe34a825bdb92d7f1c4f392afa" translate="yes" xml:space="preserve">
          <source>Replace all locations in the input with the same value. The default definition is &lt;code&gt;&lt;a href=&quot;ghc-base#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;ghc-base#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;, but this may be overridden with a more efficient version.</source>
          <target state="translated">用相同的值替换输入中的所有位置。默认定义为 &lt;code&gt;&lt;a href=&quot;ghc-base#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;ghc-base#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ，但是可以使用更有效的版本来覆盖。</target>
        </trans-unit>
        <trans-unit id="f677b5ab54ec7700f8aa112431fe1d686734e1e1" translate="yes" xml:space="preserve">
          <source>Replace all locations in the input with the same value. The default definition is &lt;code&gt;&lt;a href=&quot;prelude#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;prelude#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;, but this may be overridden with a more efficient version.</source>
          <target state="translated">用相同的值替换输入中的所有位置。默认定义为 &lt;code&gt;&lt;a href=&quot;prelude#v:fmap&quot;&gt;fmap&lt;/a&gt; . &lt;a href=&quot;prelude#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ，但是可以使用更有效的版本来覆盖。</target>
        </trans-unit>
        <trans-unit id="01390d4b3f68ac20f556d360b5e40d6cc51b0423" translate="yes" xml:space="preserve">
          <source>Replace all locations in the output with the same value. The default definition is &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;, but this may be overridden with a more efficient version.</source>
          <target state="translated">用相同的值替换输出中的所有位置。默认定义是 &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt; . &lt;a href=&quot;data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ，但是可以使用更有效的版本来覆盖。</target>
        </trans-unit>
        <trans-unit id="98d97ae2c4e41287d8c7c06782fc94f17ade6313" translate="yes" xml:space="preserve">
          <source>Replace an invalid input byte with the Unicode replacement character U+FFFD.</source>
          <target state="translated">用U+FFFD替换无效的输入字节。</target>
        </trans-unit>
        <trans-unit id="b279f97032f9ccdb089926b2954f43b47cf0bc96" translate="yes" xml:space="preserve">
          <source>Replace an invalid input with a valid output.</source>
          <target state="translated">用有效的输出替换无效的输入。</target>
        </trans-unit>
        <trans-unit id="710069cd7ce970d000411758cf92ef5db06e5b43" translate="yes" xml:space="preserve">
          <source>Replace any binding &lt;code&gt;!p = e&lt;/code&gt; with &lt;code&gt;v = case e of p -&amp;gt; (x1, ..., xn); (x1, ..., xn) = v&lt;/code&gt; and replace &lt;code&gt;body&lt;/code&gt; with &lt;code&gt;v seq body&lt;/code&gt;, where &lt;code&gt;v&lt;/code&gt; is fresh. This translation works fine if &lt;code&gt;p&lt;/code&gt; is already a variable &lt;code&gt;x&lt;/code&gt;, but can obviously be optimised by not introducing a fresh variable &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">将任何绑定 &lt;code&gt;!p = e&lt;/code&gt; 替换为 &lt;code&gt;v = case e of p -&amp;gt; (x1, ..., xn); (x1, ..., xn) = v&lt;/code&gt; 和替换 &lt;code&gt;body&lt;/code&gt; 与 &lt;code&gt;v seq body&lt;/code&gt; ，其中 &lt;code&gt;v&lt;/code&gt; 是新鲜的。如果 &lt;code&gt;p&lt;/code&gt; 已经是变量 &lt;code&gt;x&lt;/code&gt; ，则此转换效果很好，但显然可以通过不引入新变量 &lt;code&gt;v&lt;/code&gt; 来优化。</target>
        </trans-unit>
        <trans-unit id="ea93161b8e74f17f89a87eea1945732825c68a45" translate="yes" xml:space="preserve">
          <source>Replace any binding &lt;code&gt;p = e&lt;/code&gt;, where &lt;code&gt;p&lt;/code&gt; is not a variable, with &lt;code&gt;v = e; x1 = case v of p -&amp;gt; x1; ...; xn = case v of p -&amp;gt; xn&lt;/code&gt;, where &lt;code&gt;v&lt;/code&gt; is fresh and &lt;code&gt;x1&lt;/code&gt;.. &lt;code&gt;xn&lt;/code&gt; are the bound variables of &lt;code&gt;p&lt;/code&gt;. Again if &lt;code&gt;e&lt;/code&gt; is a variable, this can be optimised by not introducing a fresh variable.</source>
          <target state="translated">将任何绑定 &lt;code&gt;p = e&lt;/code&gt; 替换为 &lt;code&gt;v = e; x1 = case v of p -&amp;gt; x1; ...; xn = case v of p -&amp;gt; xn&lt;/code&gt; ，其中 &lt;code&gt;p&lt;/code&gt; 不是变量。x1 = p的情况v-&amp;gt; x1; ...; xn = p-&amp;gt; xn的情况v，其中 &lt;code&gt;v&lt;/code&gt; 是新鲜的， &lt;code&gt;x1&lt;/code&gt; .. &lt;code&gt;xn&lt;/code&gt; 是 &lt;code&gt;p&lt;/code&gt; 的绑定变量。同样，如果 &lt;code&gt;e&lt;/code&gt; 是变量，则可以通过不引入新变量来对其进行优化。</target>
        </trans-unit>
        <trans-unit id="81063ace05e94fc04efdafdeb00bab024fa5cbd6" translate="yes" xml:space="preserve">
          <source>Replace each element of a list with a constant &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">用常量 &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 替换列表中的每个元素：</target>
        </trans-unit>
        <trans-unit id="513681c11e07f73c6a50486d27fc8225cfd91990" translate="yes" xml:space="preserve">
          <source>Replace every element of a list with unit:</source>
          <target state="translated">将列表中的每个元素都替换为单位。</target>
        </trans-unit>
        <trans-unit id="2648d76cb08af5485bbcad7562d6a30eed9a95d8" translate="yes" xml:space="preserve">
          <source>Replace the contents of a &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; with a constant &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">用常量 &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 替换 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 的内容：</target>
        </trans-unit>
        <trans-unit id="f31cb308fcd0aaf7f1f3072a015acd75e99b34bf" translate="yes" xml:space="preserve">
          <source>Replace the contents of a &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; with unit:</source>
          <target state="translated">用单元替换 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Maybe&quot;&gt;Maybe&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 的内容：</target>
        </trans-unit>
        <trans-unit id="5977c89e8466a29307fddb6c6e225a0b69928af1" translate="yes" xml:space="preserve">
          <source>Replace the contents of an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; with a constant &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;, resulting in an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt;
&lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 的内容替换为常量 &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ，得到 &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="0b7036b629fc4f069c30e816ee286bff66f0a0fe" translate="yes" xml:space="preserve">
          <source>Replace the contents of an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; with unit, resulting in an &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; ()&lt;/code&gt;:</source>
          <target state="translated">将 &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; 的内容替换为unit，得到 &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt; &lt;a href=&quot;data-int#v:Int&quot;&gt;Int&lt;/a&gt; ()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c404cb7e17bfbc9363bb25af2f270338bbdb908f" translate="yes" xml:space="preserve">
          <source>Replace the second element of a pair with a constant &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">用常量 &lt;code&gt;&lt;a href=&quot;data-string#v:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; 替换对中的第二个元素：</target>
        </trans-unit>
        <trans-unit id="ad5fd43d79beb7227805310f949ed0b8e62c8219" translate="yes" xml:space="preserve">
          <source>Replace the second element of a pair with unit:</source>
          <target state="translated">将一对的第二个元素改为单位。</target>
        </trans-unit>
        <trans-unit id="73b7214222897a4da7310495b3173dc47e2ed0ae" translate="yes" xml:space="preserve">
          <source>Replace the state in the &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; monad. Note that the state is local to the Haskell module in which the Template Haskell expression is executed.</source>
          <target state="translated">替换 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; monad中的状态。请注意，状态是在其中执行模板Haskell表达式的Haskell模块本地的。</target>
        </trans-unit>
        <trans-unit id="e783a2110c1a2dd69be9228b632da888c51e6f89" translate="yes" xml:space="preserve">
          <source>Replace the state inside the monad.</source>
          <target state="translated">替换单体里面的状态。</target>
        </trans-unit>
        <trans-unit id="fabcda4a7ffafa1589944ce7fdd1741e8b4ce15f" translate="yes" xml:space="preserve">
          <source>Replace with the closest visual match upon an illegal sequence</source>
          <target state="translated">当非法序列出现时,用最接近的视觉匹配替换。</target>
        </trans-unit>
        <trans-unit id="78bc12a2d09cc8e540b1af5c661d077103eab0cf" translate="yes" xml:space="preserve">
          <source>Replicates a &lt;code&gt;withXXX&lt;/code&gt; combinator over a list of objects, yielding a list of marshalled objects</source>
          <target state="translated">在对象列表上复制一个 &lt;code&gt;withXXX&lt;/code&gt; 组合器，产生一个编组对象列表</target>
        </trans-unit>
        <trans-unit id="6c2bb735a46a8ff307fe2e638d581295b2a49e09" translate="yes" xml:space="preserve">
          <source>Reply</source>
          <target state="translated">Reply</target>
        </trans-unit>
        <trans-unit id="210be950e48b6b09718f614ef624140560013a67" translate="yes" xml:space="preserve">
          <source>Report a warning to the user, and carry on.</source>
          <target state="translated">向用户报告警告,并进行。</target>
        </trans-unit>
        <trans-unit id="e35e7e48596095fe28a97fb7c0701b1712a21966" translate="yes" xml:space="preserve">
          <source>Report all record wildcards where none of the variables bound implicitly are used. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1819d25d3da8dde34b0be9d666711b3615eec69" translate="yes" xml:space="preserve">
          <source>Report all record wildcards where the wild card match binds no patterns. For instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29cc263854e35bdc210f347658ec81f2657154e" translate="yes" xml:space="preserve">
          <source>Report all unused implicitly bound type variables which arise from patterns in type family and data family instances. For instance:</source>
          <target state="translated">报告所有未使用的隐式绑定类型变量,这些变量产生于类型族和数据族实例中的模式。例如:</target>
        </trans-unit>
        <trans-unit id="5ac656d868f74d0d322d7eb08c66336d780f95e3" translate="yes" xml:space="preserve">
          <source>Report all unused type variables which arise from explicit, user-written &lt;code&gt;forall&lt;/code&gt; statements. For instance:</source>
          <target state="translated">报告所有未使用的类型变量，这些变量来自显式的用户编写的 &lt;code&gt;forall&lt;/code&gt; 语句。例如：</target>
        </trans-unit>
        <trans-unit id="7e5640248d20d9738f29370ad53212fe64c17e0c" translate="yes" xml:space="preserve">
          <source>Report all unused variables which arise from term-level pattern matches, including patterns consisting of a single variable. For instance &lt;code&gt;f x y = []&lt;/code&gt; would report &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; as unused. The warning is suppressed if the variable name begins with an underscore, thus:</source>
          <target state="translated">报告由于术语级别模式匹配而产生的所有未使用的变量，包括由单个变量组成的模式。例如， &lt;code&gt;f x y = []&lt;/code&gt; 将报告 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 未使用。如果变量名称以下划线开头，则警告将被取消，因此：</target>
        </trans-unit>
        <trans-unit id="d2d850b8b5dd31316cfd82cb19c2b631422fed64" translate="yes" xml:space="preserve">
          <source>Report an error (True) or warning (False) ...but carry on; use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; to stop</source>
          <target state="translated">报告错误（True）或警告（False）...但继续进行；使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 停止</target>
        </trans-unit>
        <trans-unit id="a1c620c4068859caa4d346ede74c1d8d10061e19" translate="yes" xml:space="preserve">
          <source>Report an error (True) or warning (False), but carry on; use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; to stop.</source>
          <target state="translated">报告错误（真）或警告（假），但继续进行；使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 停止。</target>
        </trans-unit>
        <trans-unit id="27c2f2834c134bcd0f46f16a100ad0f41229f9a9" translate="yes" xml:space="preserve">
          <source>Report an error to the user, but allow the current splice's computation to carry on. To abort the computation, use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">向用户报告错误，但允许当前接头的计算进行。要中止计算，请使用 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62d5b0be5b3ad3e15cbbad98168f15169b9f9a48" translate="yes" xml:space="preserve">
          <source>Report an error.</source>
          <target state="translated">报告一个错误。</target>
        </trans-unit>
        <trans-unit id="fcce7c0789dcd81563ee3585394cd8a41c2e0685" translate="yes" xml:space="preserve">
          <source>Report any function definitions (and local bindings) which are unused. An alias for</source>
          <target state="translated">报告任何未使用的函数定义(和本地绑定)。的别称。</target>
        </trans-unit>
        <trans-unit id="c73f069d8746fd50c3b70f8192e9fd23df6fc4f6" translate="yes" xml:space="preserve">
          <source>Report any function definitions which are unused.</source>
          <target state="translated">报告任何未使用的函数定义。</target>
        </trans-unit>
        <trans-unit id="c68cbca196a7f8a1f32e076e847cdcae60eb1331" translate="yes" xml:space="preserve">
          <source>Report any local definitions which are unused. For example:</source>
          <target state="translated">报告任何未使用的本地定义。例如:</target>
        </trans-unit>
        <trans-unit id="56ea34f3aadd7ff1bfabeb1f2e13d83f09f25cc0" translate="yes" xml:space="preserve">
          <source>Report any modules that are explicitly imported but never used. However, the form &lt;code&gt;import M()&lt;/code&gt; is never reported as an unused import, because it is a useful idiom for importing instance declarations, which are anonymous in Haskell.</source>
          <target state="translated">报告任何显式导入但从未使用过的模块。但是， &lt;code&gt;import M()&lt;/code&gt; 的形式永远不会报告为未使用的导入，因为它对于导入实例声明非常有用，该实例声明在Haskell中是匿名的。</target>
        </trans-unit>
        <trans-unit id="186922e407e4cea2c9163d0d00b27598db5e305a" translate="yes" xml:space="preserve">
          <source>Report expressions occurring in &lt;code&gt;do&lt;/code&gt; and &lt;code&gt;mdo&lt;/code&gt; blocks that appear to lack a binding. For instance &lt;code&gt;do { return (popInt 10) ; return 10 }&lt;/code&gt; would report the first statement in the &lt;code&gt;do&lt;/code&gt; block as suspicious, as it has the type &lt;code&gt;StackM (StackM Int)&lt;/code&gt; (which consists of two nested applications of the same monad constructor), but which is not then &amp;ldquo;unpacked&amp;rdquo; by binding the result. The warning is suppressed by explicitly mentioning in the source code that your program is throwing something away:</source>
          <target state="translated">报告出现在 &lt;code&gt;do&lt;/code&gt; 和 &lt;code&gt;mdo&lt;/code&gt; 块中的表达式，这些表达式似乎缺乏绑定。例如 &lt;code&gt;do { return (popInt 10) ; return 10 }&lt;/code&gt; 将报告 &lt;code&gt;do&lt;/code&gt; 块中的第一条语句可疑，因为它的类型为 &lt;code&gt;StackM (StackM Int)&lt;/code&gt; （由同一monad构造函数的两个嵌套应用程序组成），但是通过绑定结果。通过在源代码中明确提及您的程序正在丢弃某些东西，可以消除该警告：</target>
        </trans-unit>
        <trans-unit id="038c812031da3596ee105d128edaed69c9791794" translate="yes" xml:space="preserve">
          <source>Report expressions occurring in &lt;code&gt;do&lt;/code&gt; and &lt;code&gt;mdo&lt;/code&gt; blocks that appear to silently throw information away. For instance &lt;code&gt;do { mapM popInt xs ; return 10 }&lt;/code&gt; would report the first statement in the &lt;code&gt;do&lt;/code&gt; block as suspicious, as it has the type &lt;code&gt;StackM [Int]&lt;/code&gt; and not &lt;code&gt;StackM ()&lt;/code&gt;, but that &lt;code&gt;[Int]&lt;/code&gt; value is not bound to anything. The warning is suppressed by explicitly mentioning in the source code that your program is throwing something away:</source>
          <target state="translated">在 &lt;code&gt;do&lt;/code&gt; 和 &lt;code&gt;mdo&lt;/code&gt; 块中出现的报表表达式似乎无声地丢弃了信息。例如 &lt;code&gt;do { mapM popInt xs ; return 10 }&lt;/code&gt; 将报告 &lt;code&gt;do&lt;/code&gt; 块中的第一条语句可疑，因为它的类型为 &lt;code&gt;StackM [Int]&lt;/code&gt; 而不是 &lt;code&gt;StackM ()&lt;/code&gt; ，但是 &lt;code&gt;[Int]&lt;/code&gt; 值未绑定任何内容。通过在源代码中明确提及您的程序正在丢弃某些东西，可以消除该警告：</target>
        </trans-unit>
        <trans-unit id="cd30304350d0689ec5bbe6a3f6497f3ec6334207" translate="yes" xml:space="preserve">
          <source>Report the heap size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70173459a195f442c355a3fc300b097436d9e070" translate="yes" xml:space="preserve">
          <source>Report the live heap size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80bdbb7c8a6935b5a45975b33da400dc2c16cc6" translate="yes" xml:space="preserve">
          <source>Report unqualified imports of core libraries which are expected to cause compatibility problems in future releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735a11bcb235cff53b8ba5b3f22520d05fd7bdbf" translate="yes" xml:space="preserve">
          <source>Report various information about the heap configuration. Typically produced during RTS initialization..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51caa4097d27e97021974ca37a3eb172d1faa25" translate="yes" xml:space="preserve">
          <source>Report warnings when &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;deferred type errors&lt;/a&gt; are enabled. This option is enabled by default. See &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">启用&lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;延迟的类型错误&lt;/a&gt;时报告警告。默认情况下启用此选项。请参阅&lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt; &lt;code&gt;-fdefer-type-errors&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="eb8d962b7ceb76b163fd6f75585fd61427a421ba" translate="yes" xml:space="preserve">
          <source>Report warnings when &lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;typed hole&lt;/a&gt; errors are &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;deferred until runtime&lt;/a&gt;. See &lt;a href=&quot;using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt;&lt;code&gt;-fdefer-typed-holes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当&lt;a href=&quot;glasgow_exts#typed-holes&quot;&gt;打孔&lt;/a&gt;错误&lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;推迟到运行时&lt;/a&gt;报告警告。请参阅&lt;a href=&quot;using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt; &lt;code&gt;-fdefer-typed-holes&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3876a176e0cb586bc4ba95c55f3d4c1969ddb9dc" translate="yes" xml:space="preserve">
          <source>Report warnings when variable out-of-scope errors are &lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;deferred until runtime&lt;/a&gt;. See &lt;a href=&quot;using-warnings#ghc-flag--fdefer-out-of-scope-variables&quot;&gt;&lt;code&gt;-fdefer-out-of-scope-variables&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将变量范围外的错误&lt;a href=&quot;glasgow_exts#defer-type-errors&quot;&gt;推迟到runtime时&lt;/a&gt;报告警告。请参见&lt;a href=&quot;using-warnings#ghc-flag--fdefer-out-of-scope-variables&quot;&gt; &lt;code&gt;-fdefer-out-of-scope-variables&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0148d6cc97deecd36edc0baa1b6a3f9dcb097f11" translate="yes" xml:space="preserve">
          <source>Reports all module-local uses of the thing at the given position in the module, e.g.:</source>
          <target state="translated">报告该模块中给定位置的所有模块本地使用的东西,例如。</target>
        </trans-unit>
        <trans-unit id="ed90fb14d4af2cae21171d0f93343d8c595bf3d1" translate="yes" xml:space="preserve">
          <source>Reports the inferred type at the given span/position in the module, e.g.:</source>
          <target state="translated">报告模块中给定跨度/位置上的推断类型,例如。</target>
        </trans-unit>
        <trans-unit id="cb4f47e477ef256ba7b45b511bda017048a23708" translate="yes" xml:space="preserve">
          <source>Repositioning handles</source>
          <target state="translated">重新定位手柄</target>
        </trans-unit>
        <trans-unit id="cfd421be6e964f2d973beeab3a903b4b8dbca988" translate="yes" xml:space="preserve">
          <source>Representable types are collected in the &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; class, which defines the associated type &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt; as well as conversion functions &lt;code&gt;&lt;a href=&quot;ghc-generics#v:from&quot;&gt;from&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-generics#v:to&quot;&gt;to&lt;/a&gt;&lt;/code&gt;. Typically, you will not define &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; instances by hand, but have the compiler derive them for you.</source>
          <target state="translated">可表示的类型收集在 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; 类中，该类定义了关联的类型 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt; 以及 &lt;code&gt;&lt;a href=&quot;ghc-generics#v:from&quot;&gt;from&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;ghc-generics#v:to&quot;&gt;to&lt;/a&gt;&lt;/code&gt; 转换函数。通常，您不会手动定义 &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; 实例，而是让编译器为您派生它们。</target>
        </trans-unit>
        <trans-unit id="19682e38b0c71dbda763927c57f8b65c290b0f2f" translate="yes" xml:space="preserve">
          <source>Representable types of kind &lt;code&gt;* -&amp;gt; *&lt;/code&gt; (or kind &lt;code&gt;k -&amp;gt; *&lt;/code&gt;, when &lt;code&gt;PolyKinds&lt;/code&gt; is enabled). This class is derivable in GHC with the &lt;code&gt;DeriveGeneric&lt;/code&gt; flag on.</source>
          <target state="translated">类型 &lt;code&gt;* -&amp;gt; *&lt;/code&gt; （或类型 &lt;code&gt;k -&amp;gt; *&lt;/code&gt; ，当启用 &lt;code&gt;PolyKinds&lt;/code&gt; 时）的可表示类型。此类在 &lt;code&gt;DeriveGeneric&lt;/code&gt; 中带有DeriveGeneric标志的情况下可派生。</target>
        </trans-unit>
        <trans-unit id="9ee2698bb964d52fc57600dbd9abaf6d51a0a4e0" translate="yes" xml:space="preserve">
          <source>Representable types of kind &lt;code&gt;*&lt;/code&gt;. This class is derivable in GHC with the &lt;code&gt;DeriveGeneric&lt;/code&gt; flag on.</source>
          <target state="translated">可代表的类型 &lt;code&gt;*&lt;/code&gt; 。此类在 &lt;code&gt;DeriveGeneric&lt;/code&gt; 中带有DeriveGeneric标志的情况下可派生。</target>
        </trans-unit>
        <trans-unit id="3046120cbf4b7cd62bc24b957ce87fe60e8d7792" translate="yes" xml:space="preserve">
          <source>Representation of &lt;code&gt;* -&amp;gt; *&lt;/code&gt; types</source>
          <target state="translated">代表性 &lt;code&gt;* -&amp;gt; *&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="c04043fc4434d1f9286ef0d8dcc9a50d45126bbe" translate="yes" xml:space="preserve">
          <source>Representation of &lt;code&gt;k -&amp;gt; *&lt;/code&gt; types</source>
          <target state="translated">表示 &lt;code&gt;k -&amp;gt; *&lt;/code&gt; 类型</target>
        </trans-unit>
        <trans-unit id="3344925672ee12b2453942aee5ea1db1e2ff176d" translate="yes" xml:space="preserve">
          <source>Representation of constructors. Note that equality on constructors with different types may not work -- i.e. the constructors for &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; may compare equal.</source>
          <target state="translated">构造函数的表示形式。请注意，具有不同类型的构造函数上的相等性可能无法工作-即 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 的构造函数可能比较相等。</target>
        </trans-unit>
        <trans-unit id="a47a0325484885141fbc604287a2df8331178b15" translate="yes" xml:space="preserve">
          <source>Representation of datatypes. A package of constructor representations with names of type and module.</source>
          <target state="translated">数据类型的表示方法。一个包含类型和模块名称的构造函数表示包。</target>
        </trans-unit>
        <trans-unit id="6a8a2b8cb82090e3d77dce2dbb2bfcf782570834" translate="yes" xml:space="preserve">
          <source>Representation of types with many constructors or many fields</source>
          <target state="translated">具有多个构造函数或多个字段的类型的表示方法</target>
        </trans-unit>
        <trans-unit id="35397673d9b11600f8956f67c44793a1eedc1924" translate="yes" xml:space="preserve">
          <source>Representation of unlifted types</source>
          <target state="translated">未解除的类型的表示</target>
        </trans-unit>
        <trans-unit id="264ee02a2c969393a215ad8bfc32e8b2b845f204" translate="yes" xml:space="preserve">
          <source>Representation polymorphism</source>
          <target state="translated">代表性多态性</target>
        </trans-unit>
        <trans-unit id="879c48418a21002d9297fbd9e3ffac9d2017770f" translate="yes" xml:space="preserve">
          <source>Representational equality. If &lt;code&gt;Coercion a b&lt;/code&gt; is inhabited by some terminating value, then the type &lt;code&gt;a&lt;/code&gt; has the same underlying representation as the type &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">代表性平等。如果 &lt;code&gt;Coercion a b&lt;/code&gt; 被某个终止值占用，则类型 &lt;code&gt;a&lt;/code&gt; 具有与类型 &lt;code&gt;b&lt;/code&gt; 相同的基础表示。</target>
        </trans-unit>
        <trans-unit id="c720f46bcd60ae9520c3086c1ecf644ef6144adc" translate="yes" xml:space="preserve">
          <source>RepresentationalR</source>
          <target state="translated">RepresentationalR</target>
        </trans-unit>
        <trans-unit id="f097ee1b17998d299a2f160cedc967fc9f78cbf6" translate="yes" xml:space="preserve">
          <source>Representations of C types</source>
          <target state="translated">C类的表示方法</target>
        </trans-unit>
        <trans-unit id="a79298e81ca3b532230a8583d8f8409c75a6d705" translate="yes" xml:space="preserve">
          <source>Representations of some basic types</source>
          <target state="translated">一些基本类型的代表</target>
        </trans-unit>
        <trans-unit id="67da1ed51acd40fcb2fcb744269f2c5d7d3d0098" translate="yes" xml:space="preserve">
          <source>Representing datatypes</source>
          <target state="translated">表示数据类型</target>
        </trans-unit>
        <trans-unit id="34758cefddc40aa1470cfbff99ae668d79c9b020" translate="yes" xml:space="preserve">
          <source>Represents a C-- basic block. Note that this is a slight departure from the intended meaning of this DIE type as it does not necessarily reflect lexical scope in the source program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa24476be6c73885eb7fbb4bf8517339a1cd7ef" translate="yes" xml:space="preserve">
          <source>Represents a C-- top-level basic block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf15330bda4d0352a73b8fedf9c47f7a854fb5e" translate="yes" xml:space="preserve">
          <source>Represents a C-\- basic block. Note that this is a slight departure from the intended meaning of this DIE type as it does not necessarily reflect lexical scope in the source program.</source>
          <target state="translated">代表一个C-\-基本块。请注意,这略微偏离了DIE类型的本意,因为它不一定反映源程序中的词汇范围。</target>
        </trans-unit>
        <trans-unit id="67e5c7afc820ce932f90778d78e604b5c2630d35" translate="yes" xml:space="preserve">
          <source>Represents a C-\- top-level basic block.</source>
          <target state="translated">代表C-顶级基本块。</target>
        </trans-unit>
        <trans-unit id="6dd9a4bf554abf7b310b93fad15543594f89afcc" translate="yes" xml:space="preserve">
          <source>Represents a compilation unit (e.g. a Haskell module).</source>
          <target state="translated">代表一个编译单元(如Haskell模块)。</target>
        </trans-unit>
        <trans-unit id="71b0bcf91aa6fb4f634cf7991b4493fb262523a4" translate="yes" xml:space="preserve">
          <source>Request a CallStack.</source>
          <target state="translated">申请一个CallStack。</target>
        </trans-unit>
        <trans-unit id="1a86db96bf5edca3b30436e4953013bfeb293ef4" translate="yes" xml:space="preserve">
          <source>RequireOrder</source>
          <target state="translated">RequireOrder</target>
        </trans-unit>
        <trans-unit id="5e3a8a744e7e46ab41222ebbc049e8887d9bf220" translate="yes" xml:space="preserve">
          <source>Reset the current package database stack. This option removes every previously specified package database (including those read from the &lt;a href=&quot;#envvar-GHC_PACKAGE_PATH&quot; id=&quot;index-4&quot;&gt;&lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt;&lt;/a&gt; environment variable) from the package database stack.</source>
          <target state="translated">重置当前的程序包数据库堆栈。此选项从软件包数据库堆栈中删除每个以前指定的软件包数据库（包括从&lt;a href=&quot;#envvar-GHC_PACKAGE_PATH&quot; id=&quot;index-4&quot;&gt; &lt;code&gt;GHC_PACKAGE_PATH&lt;/code&gt; &lt;/a&gt;环境变量读取的数据库）。</target>
        </trans-unit>
        <trans-unit id="9d9437ce1c149db92a35f069931633d0e7667617" translate="yes" xml:space="preserve">
          <source>Reset the current thread's &lt;code&gt;errno&lt;/code&gt; value to &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eOK&quot;&gt;eOK&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将当前线程的 &lt;code&gt;errno&lt;/code&gt; 值重置为 &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eOK&quot;&gt;eOK&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4cf5aab60ea4b429ce0f728614ce1a39b30514f8" translate="yes" xml:space="preserve">
          <source>Resets the precedence context to zero.</source>
          <target state="translated">将优先级上下文重置为零。</target>
        </trans-unit>
        <trans-unit id="3d530ddb394e59a93f8fd08475db15473c9be43e" translate="yes" xml:space="preserve">
          <source>Resize (unpinned) mutable byte array to new specified size (in bytes). The returned &lt;code&gt;MutableByteArray#&lt;/code&gt; is either the original &lt;code&gt;MutableByteArray#&lt;/code&gt; resized in-place or, if not possible, a newly allocated (unpinned) &lt;code&gt;MutableByteArray#&lt;/code&gt; (with the original content copied over).</source>
          <target state="translated">将可变字节数组（未固定）调整为新的指定大小（以字节为单位）。返回的 &lt;code&gt;MutableByteArray#&lt;/code&gt; 是 &lt;code&gt;MutableByteArray#&lt;/code&gt; 调整大小的原始MutableByteArray＃，或者如果不可能的话，是新分配（未固定）的 &lt;code&gt;MutableByteArray#&lt;/code&gt; （复制了原始内容）。</target>
        </trans-unit>
        <trans-unit id="af23022ae2fbc703adfc587f443d4886c8b9c829" translate="yes" xml:space="preserve">
          <source>Resize a memory area that was allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; to the given size. The returned pointer may refer to an entirely different memory area, but will be sufficiently aligned for any of the basic foreign types that fits into a memory block of the given size. The contents of the referenced memory area will be the same as of the original pointer up to the minimum of the original size and the given size.</source>
          <target state="translated">将使用 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; 分配的内存区域调整为给定大小。返回的指针可能指向完全不同的存储区域，但对于适合给定大小的存储块的任何基本外部类型，都将充分对齐。所引用的存储区域的内容将与原始指针的内容相同，直到原始大小和给定大小的最小值为止。</target>
        </trans-unit>
        <trans-unit id="0b2bb3f258d16c01bdf266d3f03d994c61e11ff5" translate="yes" xml:space="preserve">
          <source>Resize a memory area that was allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; to the size needed to store values of type &lt;code&gt;b&lt;/code&gt;. The returned pointer may refer to an entirely different memory area, but will be suitably aligned to hold values of type &lt;code&gt;b&lt;/code&gt;. The contents of the referenced memory area will be the same as of the original pointer up to the minimum of the original size and the size of values of type &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">将使用 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; 或 &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; 分配的内存区域调整为存储类型 &lt;code&gt;b&lt;/code&gt; 所需的大小。返回的指针可能指向完全不同的存储区域，但将进行适当对齐以容纳类型 &lt;code&gt;b&lt;/code&gt; 的值。所引用的存储区域的内容将与原始指针的内容相同，直到原始大小和类型 &lt;code&gt;b&lt;/code&gt; 的值的最小值为止。</target>
        </trans-unit>
        <trans-unit id="a005485cd10cadec5528720089b01d7c3f83bf1d" translate="yes" xml:space="preserve">
          <source>ResolvedBCO</source>
          <target state="translated">ResolvedBCO</target>
        </trans-unit>
        <trans-unit id="6e1de862f17f2c0d61dcfa8869842063045a9469" translate="yes" xml:space="preserve">
          <source>ResolvedBCOPtr</source>
          <target state="translated">ResolvedBCOPtr</target>
        </trans-unit>
        <trans-unit id="481ed4541019846722b9befe3b9bb925ee185d7b" translate="yes" xml:space="preserve">
          <source>Resolves to the MutableArray# inside the BreakArray</source>
          <target state="translated">解析到 BreakArray 内的 MutableArray#。</target>
        </trans-unit>
        <trans-unit id="021493f340d35ce0d744f7a3a9e53445394e86a6" translate="yes" xml:space="preserve">
          <source>Resource</source>
          <target state="translated">Resource</target>
        </trans-unit>
        <trans-unit id="ad94287ab4f543bf10c68378e7ba19242a3df67f" translate="yes" xml:space="preserve">
          <source>Resource Limits</source>
          <target state="translated">资源限制</target>
        </trans-unit>
        <trans-unit id="f26c6059d9651d00e556526c3868d40e27ae8a46" translate="yes" xml:space="preserve">
          <source>ResourceBusy</source>
          <target state="translated">ResourceBusy</target>
        </trans-unit>
        <trans-unit id="b020bc6431b3b7023d76f2e64d60f17277ec97b4" translate="yes" xml:space="preserve">
          <source>ResourceCPUTime</source>
          <target state="translated">ResourceCPUTime</target>
        </trans-unit>
        <trans-unit id="2dc3de2b05e8f70724173719ff240dda68f8caab" translate="yes" xml:space="preserve">
          <source>ResourceCoreFileSize</source>
          <target state="translated">ResourceCoreFileSize</target>
        </trans-unit>
        <trans-unit id="bcf85ca1883d8d70b35323b8ac1608d3228793f6" translate="yes" xml:space="preserve">
          <source>ResourceDataSize</source>
          <target state="translated">ResourceDataSize</target>
        </trans-unit>
        <trans-unit id="ba115e3b77b67bdb8168bff8f2572fe7a2e3bd8d" translate="yes" xml:space="preserve">
          <source>ResourceExhausted</source>
          <target state="translated">ResourceExhausted</target>
        </trans-unit>
        <trans-unit id="35fc7cdea7e77fa9f20ff9cf8167182034131cd7" translate="yes" xml:space="preserve">
          <source>ResourceFileSize</source>
          <target state="translated">ResourceFileSize</target>
        </trans-unit>
        <trans-unit id="d61e08164f1a81223237b903b736ba4407436943" translate="yes" xml:space="preserve">
          <source>ResourceLimit</source>
          <target state="translated">ResourceLimit</target>
        </trans-unit>
        <trans-unit id="32a2741a75201adad483efb7ecfc4c10371a9b6d" translate="yes" xml:space="preserve">
          <source>ResourceLimitInfinity</source>
          <target state="translated">ResourceLimitInfinity</target>
        </trans-unit>
        <trans-unit id="0d6dc59579d48df2cd89dd60631ce90b42cf2846" translate="yes" xml:space="preserve">
          <source>ResourceLimitUnknown</source>
          <target state="translated">ResourceLimitUnknown</target>
        </trans-unit>
        <trans-unit id="f11112cf2840ff9c720b327aaefa09f02d694542" translate="yes" xml:space="preserve">
          <source>ResourceLimits</source>
          <target state="translated">ResourceLimits</target>
        </trans-unit>
        <trans-unit id="d2af36c4a7640045e8251579752c2f729046eb04" translate="yes" xml:space="preserve">
          <source>ResourceOpenFiles</source>
          <target state="translated">ResourceOpenFiles</target>
        </trans-unit>
        <trans-unit id="147a596e2a9d58f70e713e6b3139672c9d488b7c" translate="yes" xml:space="preserve">
          <source>ResourceStackSize</source>
          <target state="translated">ResourceStackSize</target>
        </trans-unit>
        <trans-unit id="aa19422c07be3f3671269e1768d4706d3a3e2b2c" translate="yes" xml:space="preserve">
          <source>ResourceTotalMemory</source>
          <target state="translated">ResourceTotalMemory</target>
        </trans-unit>
        <trans-unit id="9c4dbd9b8ca47dc047650c64ccd632f15455d5c0" translate="yes" xml:space="preserve">
          <source>ResourceVanished</source>
          <target state="translated">ResourceVanished</target>
        </trans-unit>
        <trans-unit id="24f8e3947f79a1fb2d83a89f0b6ab726732d6422" translate="yes" xml:space="preserve">
          <source>Resources associated with the encoding may now be released. The &lt;code&gt;encode&lt;/code&gt; function may not be called again after calling &lt;code&gt;close&lt;/code&gt;.</source>
          <target state="translated">现在可以释放与编码关联的资源。该 &lt;code&gt;encode&lt;/code&gt; 功能可能不被调用后再次调用 &lt;code&gt;close&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7eb20dcf60dd0da5f37b1239d272f3287ea9bcc3" translate="yes" xml:space="preserve">
          <source>Rest of the format string.</source>
          <target state="translated">格式字符串的其余部分。</target>
        </trans-unit>
        <trans-unit id="879a3471887029471d2168fa737f849188fe74c6" translate="yes" xml:space="preserve">
          <source>RestartOutput</source>
          <target state="translated">RestartOutput</target>
        </trans-unit>
        <trans-unit id="94e38d2852d0374138e6492fc960350b1f4d7792" translate="yes" xml:space="preserve">
          <source>Restores foreground/background colors to their original settings.</source>
          <target state="translated">将前景/背景色恢复到原来的设置。</target>
        </trans-unit>
        <trans-unit id="38213008afe420fee37f728dc46cf0e5fd546894" translate="yes" xml:space="preserve">
          <source>Restreaming</source>
          <target state="translated">Restreaming</target>
        </trans-unit>
        <trans-unit id="3638fae628fb0f507ffb4a26800173a2467b3120" translate="yes" xml:space="preserve">
          <source>Restreaming state.</source>
          <target state="translated">复流状态。</target>
        </trans-unit>
        <trans-unit id="e2fc156aca734a5b9c9b389bcb970f6b6e0ce3b1" translate="yes" xml:space="preserve">
          <source>Restrict the .hsc directives to those supported by the &lt;code&gt;--cross-compile&lt;/code&gt; mode (see &lt;a href=&quot;#hsc2hs-cross&quot;&gt;Cross-compilation&lt;/a&gt;). This should be useful if your &lt;code&gt;.hsc&lt;/code&gt; files must be safely cross-compiled and you wish to keep non-cross-compilable constructs from creeping into them.</source>
          <target state="translated">将.hsc指令限制为--cross &lt;code&gt;--cross-compile&lt;/code&gt; 模式支持的指令（请参见&lt;a href=&quot;#hsc2hs-cross&quot;&gt;交叉编译&lt;/a&gt;）。如果必须安全地交叉编译 &lt;code&gt;.hsc&lt;/code&gt; 文件，并且希望防止不可交叉编译的构造爬入它们，这将很有用。</target>
        </trans-unit>
        <trans-unit id="aedd633c093fe43362bae96de582861ec838410a" translate="yes" xml:space="preserve">
          <source>Restrict the number of elements in a retainer set to ⟨size⟩ (default 8).</source>
          <target state="translated">限制保留集的元素数量为⟨size⟩(默认8)。</target>
        </trans-unit>
        <trans-unit id="7ba09a9a0fa12c5c7ed15a9028a5668c2066777d" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures produced by cost-centre stacks with one of the specified cost centres anywhere in the stack.</source>
          <target state="translated">将简介限制在成本中心堆栈产生的闭合上,并在堆栈的任何地方有一个指定的成本中心。</target>
        </trans-unit>
        <trans-unit id="988f43d05062af42f11912707b2255cf7e924c8d" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures produced by cost-centre stacks with one of the specified cost centres at the top.</source>
          <target state="translated">将简介限制为由成本中心堆栈产生的闭合,顶部为指定成本中心之一。</target>
        </trans-unit>
        <trans-unit id="8cc2a3cc5491baa09dd9e6d7305aa27e9729ee67" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures produced by the specified modules.</source>
          <target state="translated">将配置文件限制为由指定模块产生的闭包。</target>
        </trans-unit>
        <trans-unit id="8e5eb29c710134325c75e103e6c39e0d8cf4113d" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures with one of the specified biographies, where ⟨bio⟩ is one of &lt;code&gt;lag&lt;/code&gt;, &lt;code&gt;drag&lt;/code&gt;, &lt;code&gt;void&lt;/code&gt;, or &lt;code&gt;use&lt;/code&gt;.</source>
          <target state="translated">将轮廓限制为使用指定的传记之一进行封闭，其中&amp;ldquo; bio&amp;rdquo;是 &lt;code&gt;lag&lt;/code&gt; ， &lt;code&gt;drag&lt;/code&gt; ， &lt;code&gt;void&lt;/code&gt; 或 &lt;code&gt;use&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="77aa2da641bd4074fc631140f99b3429af2e4c61" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures with retainer sets containing cost-centre stacks with one of the specified cost centres at the top.</source>
          <target state="translated">将剖面限制为带有保留器的闭合装置,保留器中含有成本中心堆栈,顶部为规定的成本中心之一。</target>
        </trans-unit>
        <trans-unit id="8a4cf9779af43faa60dea8a6b135485084595f2c" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures with the specified description strings.</source>
          <target state="translated">将配置文件限制为带有指定描述字符串的闭包。</target>
        </trans-unit>
        <trans-unit id="f8ec1f3f879de514bd809577ca2942e389746a15" translate="yes" xml:space="preserve">
          <source>Restrict the profile to closures with the specified types.</source>
          <target state="translated">将配置文件限制为具有指定类型的闭包。</target>
        </trans-unit>
        <trans-unit id="91d9d512b80f1af15f20e59d89aecd2b45b56287" translate="yes" xml:space="preserve">
          <source>Restrictions on unlifted boxed arguments passed to foreign C calls. Cells marked as &amp;ldquo;Unsound&amp;rdquo; represent combinations that lead to undefined runtime behavior. GHC does not reject such unsound programs at compile time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d2b2f2e73d96c76f8c4e16a012c52b69296a83" translate="yes" xml:space="preserve">
          <source>Restricts the module to the safe language. All of the module&amp;rsquo;s direct imports must be trusted, but the module itself need not reside in a trusted package, because the compiler vouches for its trustworthiness. The &amp;ldquo;safe&amp;rdquo; keyword is allowed but meaningless in import statements, as regardless, every import is required to be safe.</source>
          <target state="translated">将模块限制为安全语言。模块的所有直接导入都必须是受信任的，但是模块本身不必驻留在受信任的程序包中，因为编译器保证其可信赖性。允许使用&amp;ldquo;安全&amp;rdquo;关键字，但在导入语句中没有意义，因为无论如何，每次导入都必须安全。</target>
        </trans-unit>
        <trans-unit id="c7f93cb4cbd018198d45aad9dd5a95fdaa60b376" translate="yes" xml:space="preserve">
          <source>Result and lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; written as its side-effect</source>
          <target state="translated">结果和懒惰的 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 被写为其副作用</target>
        </trans-unit>
        <trans-unit id="f126664f4124c32cc770797ecc3b6cb80fef630c" translate="yes" xml:space="preserve">
          <source>Result is meaningless if two &lt;code&gt;Addr#&lt;/code&gt;s are so far apart that their difference doesn't fit in an &lt;code&gt;Int#&lt;/code&gt;.</source>
          <target state="translated">如果两个 &lt;code&gt;Addr#&lt;/code&gt; 相距太远，以至于它们的差值不适用于 &lt;code&gt;Int#&lt;/code&gt; ，那么结果将毫无意义。</target>
        </trans-unit>
        <trans-unit id="4e33029c02405231480642f8c9bc28cfb0dc6afd" translate="yes" xml:space="preserve">
          <source>Result.</source>
          <target state="translated">Result.</target>
        </trans-unit>
        <trans-unit id="1ea7765ea17f75b1dace09820437939bcd61f222" translate="yes" xml:space="preserve">
          <source>Resulting lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">结果懒惰的 &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09514b660f7685e5cf80db6e1ba61aa96e531258" translate="yes" xml:space="preserve">
          <source>Resume evaluation of a statement after a breakpoint</source>
          <target state="translated">在断点后恢复对语句的评估。</target>
        </trans-unit>
        <trans-unit id="99cd022cdbb965b966c78945de76be3957290c13" translate="yes" xml:space="preserve">
          <source>ResumeContext</source>
          <target state="translated">ResumeContext</target>
        </trans-unit>
        <trans-unit id="d5901174d9264b57ddae050fb20336e360ef9545" translate="yes" xml:space="preserve">
          <source>Retain CAFs unconditionally in linked Haskell code. Note that this prevents any code from being unloaded. It should not be necessary unless you are GHCi or hs-plugins, which needs to be able call any function in the compiled code.</source>
          <target state="translated">在链接的 Haskell 代码中无条件地保留 CAF。注意,这可以防止任何代码被卸载。除非你是GHCi或hs-plugins,它需要能够调用编译代码中的任何函数,否则不应该是必要的。</target>
        </trans-unit>
        <trans-unit id="c22154d58d981f7367609ab1e57cfd763b0192df" translate="yes" xml:space="preserve">
          <source>Retain all intermediate temporary files.</source>
          <target state="translated">保留所有中间临时文件。</target>
        </trans-unit>
        <trans-unit id="27d1adc7706f62a9f9a5cda60fb9e7578096f7d7" translate="yes" xml:space="preserve">
          <source>Retain intermediate &lt;code&gt;.hc&lt;/code&gt; files.</source>
          <target state="translated">保留中间 &lt;code&gt;.hc&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="1c913a795a1f09102a325857b15b734b517d6fd9" translate="yes" xml:space="preserve">
          <source>Retain intermediate &lt;code&gt;.hi&lt;/code&gt; files (the default).</source>
          <target state="translated">保留中间的 &lt;code&gt;.hi&lt;/code&gt; 文件（默认设置）。</target>
        </trans-unit>
        <trans-unit id="94f8149a3370382a007aedc88c60d2a9c3a7ac93" translate="yes" xml:space="preserve">
          <source>Retain intermediate &lt;code&gt;.hscpp&lt;/code&gt; files.</source>
          <target state="translated">保留中间的 &lt;code&gt;.hscpp&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="a97f4a882fdd81370c7271183798db3e068d96e5" translate="yes" xml:space="preserve">
          <source>Retain intermediate &lt;code&gt;.o&lt;/code&gt; files (the default).</source>
          <target state="translated">保留中间 &lt;code&gt;.o&lt;/code&gt; 文件（默认值）。</target>
        </trans-unit>
        <trans-unit id="7677f34472654a783e346ec0365bf5cde487e01d" translate="yes" xml:space="preserve">
          <source>Retain intermediate &lt;code&gt;.s&lt;/code&gt; files.</source>
          <target state="translated">保留中间的 &lt;code&gt;.s&lt;/code&gt; 文件。</target>
        </trans-unit>
        <trans-unit id="6abfcf523bf9d66cec96d1a7ee8f7a4938402d9b" translate="yes" xml:space="preserve">
          <source>Retain intermediate LLVM &lt;code&gt;.ll&lt;/code&gt; files. Implies &lt;a href=&quot;phases#ghc-flag--fllvm&quot;&gt;&lt;code&gt;-fllvm&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">保留中间LLVM &lt;code&gt;.ll&lt;/code&gt; 文件。意味着&lt;a href=&quot;phases#ghc-flag--fllvm&quot;&gt; &lt;code&gt;-fllvm&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8bf8f391a4a50c2f5f64ab4e79fd10a787a92b03" translate="yes" xml:space="preserve">
          <source>RetainCAFs</source>
          <target state="translated">RetainCAFs</target>
        </trans-unit>
        <trans-unit id="8c7019f656594681f2d84dd41a1127bda39fb82f" translate="yes" xml:space="preserve">
          <source>Retainer profiling is designed to help answer questions like &amp;ldquo;why is this data being retained?&amp;rdquo;. We start by defining what we mean by a retainer:</source>
          <target state="translated">保持器配置文件旨在帮助回答诸如&amp;ldquo;为什么保留此数据？&amp;rdquo;之类的问题。我们首先定义保留者的含义：</target>
        </trans-unit>
        <trans-unit id="33953edf5744f519b329e5f8500334513029c025" translate="yes" xml:space="preserve">
          <source>Retainer profiling requires multiple passes over the live heap in order to discover the full retainer set for each object, which can be quite slow. So we set a limit on the maximum size of a retainer set, where all retainer sets larger than the maximum retainer set size are replaced by the special set &lt;code&gt;MANY&lt;/code&gt;. The maximum set size defaults to 8 and can be altered with the &lt;a href=&quot;#rts-flag--R%20%E2%9F%A8size%E2%9F%A9&quot;&gt;&lt;code&gt;-R ⟨size⟩&lt;/code&gt;&lt;/a&gt; RTS option:</source>
          <target state="translated">保持器分析需要在活动堆上进行多次传递，以便发现每个对象的完整保持器集，这可能会很慢。因此，我们对保留集的最大大小设置了限制，其中所有大于最大保留集大小的保留集都被特殊集 &lt;code&gt;MANY&lt;/code&gt; 代替。最大设置大小默认为8，可以使用&lt;a href=&quot;#rts-flag--R%20%E2%9F%A8size%E2%9F%A9&quot;&gt; &lt;code&gt;-R ⟨size⟩&lt;/code&gt; &lt;/a&gt;选项更改：</target>
        </trans-unit>
        <trans-unit id="67be3168cf0629e4eae05d5b7b9dbd03b3c41ac3" translate="yes" xml:space="preserve">
          <source>Retrieve a function of the current environment.</source>
          <target state="translated">检索当前环境的函数。</target>
        </trans-unit>
        <trans-unit id="6d9571fc9ee3f5278e0c11ef645e5f7b3e1788c9" translate="yes" xml:space="preserve">
          <source>Retrieve the address of any Haskell value. This is essentially an &lt;code&gt;unsafeCoerce#&lt;/code&gt;, but if implemented as such the core lint pass complains and fails to compile. As a primop, it is opaque to core/stg, and only appears in cmm (where the copy propagation pass will get rid of it). Note that &quot;a&quot; must be a value, not a thunk! It's too late for strictness analysis to enforce this, so you're on your own to guarantee this. Also note that &lt;code&gt;Addr#&lt;/code&gt; is not a GC pointer - up to you to guarantee that it does not become a dangling pointer immediately after you get it.</source>
          <target state="translated">检索任何Haskell值的地址。这本质上是一个 &lt;code&gt;unsafeCoerce#&lt;/code&gt; ，但是如果以这种方式实现，则核心lint pass会抱怨并且无法编译。作为primop，它对于core / stg是不透明的，并且仅以cmm出现（复制传播通道将删除cmm）。请注意，&amp;ldquo; a&amp;rdquo;必须是一个值，而不是一个笨拙的东西！严格性分析强制实施现在为时已晚，因此您必须自己保证。还要注意， &lt;code&gt;Addr#&lt;/code&gt; 不是GC指针-由您决定，确保它在获得后不会立即变成悬空指针。</target>
        </trans-unit>
        <trans-unit id="d67c922a88a65693be2b1528f839dbe2af671ef5" translate="yes" xml:space="preserve">
          <source>Retrieve the system event manager for the capability on which the calling thread is running.</source>
          <target state="translated">检索调用线程正在运行的能力的系统事件管理器。</target>
        </trans-unit>
        <trans-unit id="235badb39d6373c1cb58e6c1848af90cf3bee578" translate="yes" xml:space="preserve">
          <source>Retrieve the target path of either a file or directory symbolic link. The returned path may not be absolute, may not exist, and may not even be a valid path.</source>
          <target state="translated">检索一个文件或目录符号链接的目标路径。返回的路径可能不是绝对路径,可能不存在,甚至可能不是有效路径。</target>
        </trans-unit>
        <trans-unit id="e5b054dbd8a0e74b67f6dbc9d2335a04d6537353" translate="yes" xml:space="preserve">
          <source>Retrieves a function of the current environment.</source>
          <target state="translated">检索当前环境的函数。</target>
        </trans-unit>
        <trans-unit id="d17266b1630a9adf39cc3d99f791ee0584d71942" translate="yes" xml:space="preserve">
          <source>Retrieves the allocation counter for the current thread.</source>
          <target state="translated">检索当前线程的分配计数器。</target>
        </trans-unit>
        <trans-unit id="6e91946c8c050e29662b02a9062f6c9667679dfd" translate="yes" xml:space="preserve">
          <source>Retrieves the monad environment.</source>
          <target state="translated">检索单体环境。</target>
        </trans-unit>
        <trans-unit id="2c23c52fc6ba8b0150f98d916f65b08930d46770" translate="yes" xml:space="preserve">
          <source>Retry execution of the current memory transaction because it has seen values in &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s which mean that it should not continue (e.g. the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s represent a shared buffer that is now empty). The implementation may block the thread until one of the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s that it has read from has been updated. (GHC only)</source>
          <target state="translated">重试当前内存事务的执行，因为它已经在 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中看到了值，这意味着它不应该继续执行（例如， &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 代表现在为空的共享缓冲区）。该实现可以阻塞线程，直到已从中读取的 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 之一已更新。（仅限GHC）</target>
        </trans-unit>
        <trans-unit id="bd96c6cf565c03c2ca0661677b90019b856d671d" translate="yes" xml:space="preserve">
          <source>Retry execution of the current memory transaction because it has seen values in &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s which mean that it should not continue (e.g. the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s represent a shared buffer that is now empty). The implementation may block the thread until one of the &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s that it has read from has been updated. (GHC only)</source>
          <target state="translated">重试当前内存事务的执行，因为它已经在 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中看到了值，这意味着它不应该继续执行（例如， &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 代表现在为空的共享缓冲区）。该实现可以阻塞线程，直到已从中读取的 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 之一已更新。（仅限GHC）</target>
        </trans-unit>
        <trans-unit id="a41598457732e6a139ea7baf3e01dacbaa879066" translate="yes" xml:space="preserve">
          <source>Retry execution of the current memory transaction because it has seen values in &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s which mean that it should not continue (e.g. the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s represent a shared buffer that is now empty). The implementation may block the thread until one of the &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;s that it has read from has been updated. (GHC only)</source>
          <target state="translated">重试当前内存事务的执行，因为它已经在 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中看到了值，这意味着它不应该继续执行（例如， &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 代表现在为空的共享缓冲区）。该实现可以阻塞线程，直到已从中读取的 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 之一已更新。（仅限GHC）</target>
        </trans-unit>
        <trans-unit id="5f55dc7b78eff20eb547e4e65b19db690d4f2f91" translate="yes" xml:space="preserve">
          <source>Return 1 if &lt;code&gt;MVar#&lt;/code&gt; is empty; 0 otherwise.</source>
          <target state="translated">如果 &lt;code&gt;MVar#&lt;/code&gt; 为空，则返回1；否则返回1 。否则为0。</target>
        </trans-unit>
        <trans-unit id="239d43f62a2ac56e1dbb4fb2dddfc95302d9b332" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;1&lt;/code&gt; depending on whether argument is negative, zero, or positive, respectively</source>
          <target state="translated">返回 &lt;code&gt;-1&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; ，和 &lt;code&gt;1&lt;/code&gt; 这取决于参数是否为负，零，或正数，分别</target>
        </trans-unit>
        <trans-unit id="75ae59416d00ac6d23a619b93fee5990e88af0ba" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;n&lt;/code&gt;th bit of the argument is 1</source>
          <target state="translated">如果参数的第 &lt;code&gt;n&lt;/code&gt; 位为1，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53cf09a54a19ee477705620e40bcfb76df4f57a8" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the argument is a signed type. The actual value of the argument is ignored</source>
          <target state="translated">如果参数是带符号的类型，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; 。参数的实际值被忽略</target>
        </trans-unit>
        <trans-unit id="eac4dfb2694aef9d0b8f5e10b7ac3081dd00ae76" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the given value is a &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;-value, &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果给定值是 &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; -value，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ，否则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eca218c17eed305dc2ccdc0de31b5e04d9d790d4" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the given value is a &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;-value, &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">如果给定值是 &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 值，则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; ，否则返回 &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5d9487c74e478b83432c0f9ed756421488cb12f9" translate="yes" xml:space="preserve">
          <source>Return a lazy list representing the contents of the supplied &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;, much like &lt;code&gt;&lt;a href=&quot;system-io#v:hGetContents&quot;&gt;hGetContents&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回一个懒惰的列表，表示提供的 &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; 的内容，就像 &lt;code&gt;&lt;a href=&quot;system-io#v:hGetContents&quot;&gt;hGetContents&lt;/a&gt;&lt;/code&gt; 一样。</target>
        </trans-unit>
        <trans-unit id="dde79354e4f97fd4330824eb28771fc86a169834" translate="yes" xml:space="preserve">
          <source>Return a list of all the associations of a mutable array, in index order.</source>
          <target state="translated">按索引顺序返回一个可变数组的所有关联列表。</target>
        </trans-unit>
        <trans-unit id="5294447931aadc184da1bcc2bf0aa028072f7b77" translate="yes" xml:space="preserve">
          <source>Return a list of all the elements of a mutable array</source>
          <target state="translated">返回一个可变数组中所有元素的列表。</target>
        </trans-unit>
        <trans-unit id="50ee4676f7c6d6de5113fecfe4b4e6f32c7787ff" translate="yes" xml:space="preserve">
          <source>Return a printing function, which in terminal-style interactions is thread-safe and may be run concurrently with user input without affecting the prompt.</source>
          <target state="translated">返回一个打印函数,在终端式交互中,该函数是线程安全的,可以与用户输入同时运行,不影响提示。</target>
        </trans-unit>
        <trans-unit id="57437da4505312d826ea216562dd7d443309e6b7" translate="yes" xml:space="preserve">
          <source>Return a string describing the usage of a command, derived from the header (first argument) and the options described by the second argument.</source>
          <target state="translated">返回一个描述命令用法的字符串,该字符串由头(第一个参数)和第二个参数描述的选项导出。</target>
        </trans-unit>
        <trans-unit id="239bc1a1b2f9b5af6133bea92a7a0289c85350c8" translate="yes" xml:space="preserve">
          <source>Return a word where only the highest bit is set.</source>
          <target state="translated">返回一个只设置最高位的字。</target>
        </trans-unit>
        <trans-unit id="a34cf9a224b0d2339198c27219aca2835c18c572" translate="yes" xml:space="preserve">
          <source>Return monotonic time in nanoseconds, since some unspecified starting point</source>
          <target state="translated">从某个未指定的起始点开始,以纳秒为单位返回单调时间。</target>
        </trans-unit>
        <trans-unit id="bc8397067589a4106551930ce04ff005c5ca83dc" translate="yes" xml:space="preserve">
          <source>Return monotonic time in seconds, since some unspecified starting point</source>
          <target state="translated">从某个未指定的起始点开始,以秒为单位返回单调时间。</target>
        </trans-unit>
        <trans-unit id="e049737e569caa173356b218731d69e810155a45" translate="yes" xml:space="preserve">
          <source>Return non-zero if there is any possibility that the upper word of a signed integer multiply might contain useful information. Return zero only if you are completely sure that no overflow can occur. On a 32-bit platform, the recommended implementation is to do a 32 x 32 -&amp;gt; 64 signed multiply, and subtract result[63:32] from (result[31] &amp;gt;&amp;gt;signed 31). If this is zero, meaning that the upper word is merely a sign extension of the lower one, no overflow can occur.</source>
          <target state="translated">如果有符号整数乘法的高位字可能包含有用的信息，则返回非零。仅在完全确定不会发生溢出时才返回零。在32位平台上，推荐的实现方式是执行32 x 32-&amp;gt; 64有符号乘法，并从（result [31] &amp;gt;&amp;gt; signed 31）中减去result [63:32]。如果为零，则意味着高位字仅仅是低位字的符号扩展，因此不会发生溢出。</target>
        </trans-unit>
        <trans-unit id="089af53d4f503e35d265ce67c50d16af5751b41c" translate="yes" xml:space="preserve">
          <source>Return number of limbs contained in &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; 中包含的肢体数。</target>
        </trans-unit>
        <trans-unit id="85ec6ff49102368c01101d47968288128fbabe34" translate="yes" xml:space="preserve">
          <source>Return the Module at the place of splicing. Can be used as an input for &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyModule&quot;&gt;reifyModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">将模块返回到拼接位置。可用作 &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyModule&quot;&gt;reifyModule&lt;/a&gt;&lt;/code&gt; 的输入。</target>
        </trans-unit>
        <trans-unit id="e9feff01416814c7f674de08669bf9a6210d4ba5" translate="yes" xml:space="preserve">
          <source>Return the contents of a &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt;-value or a default value otherwise.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; 值的内容，否则返回默认值。</target>
        </trans-unit>
        <trans-unit id="6a4219a1ca698a5ce4bdecbe9f37c4fe76184a7b" translate="yes" xml:space="preserve">
          <source>Return the contents of a &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;-value or a default value otherwise.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; 值的内容，否则返回默认值。</target>
        </trans-unit>
        <trans-unit id="50a35e6d38815fc302d4c90367bb6daf75c38f29" translate="yes" xml:space="preserve">
          <source>Return the contents of the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently empty, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; will wait until it is full. After a &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 的内容。如果 &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前为空，则 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 将等待直到其满为止。在 &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 之后， &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 将留空。</target>
        </trans-unit>
        <trans-unit id="e26b74da17c33b2ba651eaaf96834eedc3261b44" translate="yes" xml:space="preserve">
          <source>Return the contents of the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently empty, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; will wait until it is full. After a &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d450260d7a459d097708b37ebc8db3a8f28013" translate="yes" xml:space="preserve">
          <source>Return the contents of the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently empty, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; will wait until it is full. After a &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 的内容。如果 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前为空，则 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 将等待直到其满为止。在 &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 之后， &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 将留空。</target>
        </trans-unit>
        <trans-unit id="d328824b3c6db4e18e37fb0076d3c2e8117db196" translate="yes" xml:space="preserve">
          <source>Return the contents of the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is currently empty, the transaction will &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt;. After a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:takeTMVar&quot;&gt;takeTMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 的内容。如果 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 当前为空，则事务将 &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; 。在 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:takeTMVar&quot;&gt;takeTMVar&lt;/a&gt;&lt;/code&gt; 之后， &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; 将留空。</target>
        </trans-unit>
        <trans-unit id="f5b4f1d61fdfa4d546a13cfaad9fb2a667775f27" translate="yes" xml:space="preserve">
          <source>Return the contents of the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently empty, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; will wait until it is full. After a &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 的内容。如果 &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 当前为空，则 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 将等待直到其满为止。在 &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; 之后， &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; 将留空。</target>
        </trans-unit>
        <trans-unit id="ea68eb97919fc9b0cfd5d29c51e40ceaef8943ba" translate="yes" xml:space="preserve">
          <source>Return the current &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回当前的 &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="319e57db0ec551d795190efab473311e211d6d1f" translate="yes" xml:space="preserve">
          <source>Return the current &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; for the specified &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is in binary mode.</source>
          <target state="translated">返回指定的 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 的当前 &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/GHC-IO-Encoding-Types.html#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; ，如果 &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 处于二进制模式，则返回 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a385606de0a0d97dcf5a301fa91b6acdb8993db6" translate="yes" xml:space="preserve">
          <source>Return the current &lt;code&gt;&lt;a href=&quot;system-io#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; for the specified &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is in binary mode.</source>
          <target state="translated">返回指定的 &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 的当前 &lt;code&gt;&lt;a href=&quot;system-io#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; ，如果 &lt;code&gt;&lt;a href=&quot;system-io#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; 处于二进制模式，则返回 &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="030b59327240344191337257cba1ced35f7e462b" translate="yes" xml:space="preserve">
          <source>Return the current state of the codec.</source>
          <target state="translated">返回编解码器的当前状态。</target>
        </trans-unit>
        <trans-unit id="ffdac4826cf5e6776bfa99acff9575e942f4dcf5" translate="yes" xml:space="preserve">
          <source>Return the current value of the allocation counter for the current thread.</source>
          <target state="translated">返回当前线程的分配计数器的当前值。</target>
        </trans-unit>
        <trans-unit id="614b003213b2a6029b214aae2c537019dd082e03" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。</target>
        </trans-unit>
        <trans-unit id="c9ef1cc8cbe1136acc0260f0302bf15831f79133" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;. This is equivalent to</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。这相当于</target>
        </trans-unit>
        <trans-unit id="1adfeb4463484d8a90b6a055148c1a24fb260b36" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。</target>
        </trans-unit>
        <trans-unit id="de07a8e373cde6be61c5b2aa67d876192a13923f" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;. This is equivalent to</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。这相当于</target>
        </trans-unit>
        <trans-unit id="2989d911f3e6d348eb0d3212d71e35f878d57174" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。</target>
        </trans-unit>
        <trans-unit id="b717a867ccdc10b3d490ff579c22b82c4b548f16" translate="yes" xml:space="preserve">
          <source>Return the current value stored in a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;. This is equivalent to</source>
          <target state="translated">返回存储在 &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; 中的当前值。这相当于</target>
        </trans-unit>
        <trans-unit id="7c3cf41214c8e4f2638aaeeaf85a590be1d8dfff" translate="yes" xml:space="preserve">
          <source>Return the length of a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回 &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="89e1ee73af0c66d132ceb25eff85b101d3885543" translate="yes" xml:space="preserve">
          <source>Return the number of bits in the type of the argument. The actual value of the argument is ignored. Moreover, &lt;code&gt;&lt;a href=&quot;data-bits#v:finiteBitSize&quot;&gt;finiteBitSize&lt;/a&gt;&lt;/code&gt; is total, in contrast to the deprecated &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; function it replaces.</source>
          <target state="translated">返回参数类型的位数。参数的实际值将被忽略。而且， &lt;code&gt;&lt;a href=&quot;data-bits#v:finiteBitSize&quot;&gt;finiteBitSize&lt;/a&gt;&lt;/code&gt; 取代的不推荐使用的 &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; 函数相比，finiteBitSize是总计。</target>
        </trans-unit>
        <trans-unit id="c3d31ee919be276fced9ac0c9ab3823d5574040e" translate="yes" xml:space="preserve">
          <source>Return the number of bits in the type of the argument. The actual value of the argument is ignored. Returns Nothing for types that do not have a fixed bitsize, like &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回参数类型的位数。参数的实际值将被忽略。对于没有固定位大小的类型，如 &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; ，不返回Nothing 。</target>
        </trans-unit>
        <trans-unit id="ad946e3684fd16c73b3c7e852c835abb79d62032" translate="yes" xml:space="preserve">
          <source>Return the number of bits in the type of the argument. The actual value of the argument is ignored. The function &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; is undefined for types that do not have a fixed bitsize, like &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">返回参数类型的位数。参数的实际值将被忽略。对于没有固定位大小的类型，例如 &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; ，未定义功能 &lt;code&gt;&lt;a href=&quot;data-bits#v:bitSize&quot;&gt;bitSize&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a62d9a774a1acb8192ffd48d2a06aba53e3f8629" translate="yes" xml:space="preserve">
          <source>Return the number of elements in an array, excluding the terminator</source>
          <target state="translated">返回一个数组中的元素数,不包括结束符。</target>
        </trans-unit>
        <trans-unit id="7207025791701e635ca0ea0addb569d6c91a1091" translate="yes" xml:space="preserve">
          <source>Return the number of elements in the array.</source>
          <target state="translated">返回数组中的元素数。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
