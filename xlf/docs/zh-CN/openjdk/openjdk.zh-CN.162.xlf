<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="240610244ce46db1d65c39b9ece6d3e1892f2aea" translate="yes" xml:space="preserve">
          <source>The effect of this method is identical to that of the &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt;&lt;code&gt;round(MathContext)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">此方法的效果与&lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt; &lt;code&gt;round(MathContext)&lt;/code&gt; &lt;/a&gt;方法的效果相同。</target>
        </trans-unit>
        <trans-unit id="b0a1f54a3aa4b4cc5dbf26335398ce36efb240bd" translate="yes" xml:space="preserve">
          <source>The effective host name that derives from the request-host does not domain-match the Domain attribute.</source>
          <target state="translated">从request-host派生出来的有效主机名与Domain属性不匹配。</target>
        </trans-unit>
        <trans-unit id="a83bd2291f19a6ddae8b3a53bf655b9ae7b63b0c" translate="yes" xml:space="preserve">
          <source>The element buffer.</source>
          <target state="translated">元素缓冲区。</target>
        </trans-unit>
        <trans-unit id="2519e1d22b1908a17bffc689d700f08503741193" translate="yes" xml:space="preserve">
          <source>The element corresponding to applet.</source>
          <target state="translated">小程序对应的元素。</target>
        </trans-unit>
        <trans-unit id="940f3dbf59e4aadfda2d7a53e64c991fd3ee38c4" translate="yes" xml:space="preserve">
          <source>The element corresponding to base.</source>
          <target state="translated">与基地对应的元素。</target>
        </trans-unit>
        <trans-unit id="b709042d483063102d4e4045b53d9f4996cde104" translate="yes" xml:space="preserve">
          <source>The element corresponding to body.</source>
          <target state="translated">体对应的元素。</target>
        </trans-unit>
        <trans-unit id="b15960b47f31ee13c1839cfd38531774816b4682" translate="yes" xml:space="preserve">
          <source>The element corresponding to head.</source>
          <target state="translated">与头部对应的元素。</target>
        </trans-unit>
        <trans-unit id="c6a54d7fc0d9962ab28abaa0eae3f7d7e96d8d54" translate="yes" xml:space="preserve">
          <source>The element corresponding to html.</source>
          <target state="translated">对应html的元素。</target>
        </trans-unit>
        <trans-unit id="8afe1c4608a367272c195f5d2f28493eb3d4432c" translate="yes" xml:space="preserve">
          <source>The element corresponding to isindex.</source>
          <target state="translated">与isindex对应的元素。</target>
        </trans-unit>
        <trans-unit id="6dc311d81d016049caa3f7b7865bb9de333389de" translate="yes" xml:space="preserve">
          <source>The element corresponding to meta.</source>
          <target state="translated">元对应的元素。</target>
        </trans-unit>
        <trans-unit id="2520fe9f23d6e682460e9baf1c4818d9c884c3f9" translate="yes" xml:space="preserve">
          <source>The element corresponding to p.</source>
          <target state="translated">与p相对应的要素。</target>
        </trans-unit>
        <trans-unit id="e7f755b9ba7bbee4fa24b0fcbfbdfcddd66840a1" translate="yes" xml:space="preserve">
          <source>The element corresponding to param.</source>
          <target state="translated">与param.对应的元素。</target>
        </trans-unit>
        <trans-unit id="a69b93a0e99a07d5e1e94fc07454698c770c8fc7" translate="yes" xml:space="preserve">
          <source>The element corresponding to pcdata.</source>
          <target state="translated">pcdata对应的元素。</target>
        </trans-unit>
        <trans-unit id="4a84ab7c6512ac4102a6eb548089a47fd917fb78" translate="yes" xml:space="preserve">
          <source>The element corresponding to title.</source>
          <target state="translated">与标题相对应的元素。</target>
        </trans-unit>
        <trans-unit id="7fee7e2ed9716e23ed3e74ff44c29f64137c1752" translate="yes" xml:space="preserve">
          <source>The element created to represent the gap is not resizable.</source>
          <target state="translated">为表示间隙而创建的元素是不可调整大小的。</target>
        </trans-unit>
        <trans-unit id="ef1287adab0e13a0ff06779eeb94f0a12182a000" translate="yes" xml:space="preserve">
          <source>The element index</source>
          <target state="translated">元素索引</target>
        </trans-unit>
        <trans-unit id="68ee2cf56c8340507a7ae57ff205cc890aa8b080" translate="yes" xml:space="preserve">
          <source>The element is removed from its parent element, as well as the text in the range identified by the element. If the element isn't associated with the document, &lt;code&gt;
 IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">该元素将从其父元素以及该元素标识的范围内的文本中删除。如果该元素未与文档关联，则抛出 &lt;code&gt; IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d402f75cd11159a238cf88939775d164da2aa9b" translate="yes" xml:space="preserve">
          <source>The element layout associated with this sequence layout.</source>
          <target state="translated">与该序列布局相关联的元素布局。</target>
        </trans-unit>
        <trans-unit id="c5eab0e005a826c44a4d2502eec8455a3005cdea" translate="yes" xml:space="preserve">
          <source>The element node passed to &lt;code&gt;startElement&lt;/code&gt; for filtering will include all of the Element's attributes, but none of the children nodes. The Element may not yet be in place in the document being constructed (it may not have a parent node.)</source>
          <target state="translated">传递给 &lt;code&gt;startElement&lt;/code&gt; 进行过滤的element节点将包括所有Element的属性，但不包含所有子节点。元素可能尚未在正在构造的文档中放置（它可能没有父节点。）</target>
        </trans-unit>
        <trans-unit id="be2eac2248b4f5488cdfc2fb01b914b10653fa1c" translate="yes" xml:space="preserve">
          <source>The element that contains the content for the document.</source>
          <target state="translated">包含文档内容的元素。</target>
        </trans-unit>
        <trans-unit id="a7071fa567889db65c6d05ef8f4b641682cab3d4" translate="yes" xml:space="preserve">
          <source>The element that contains the content for the document. In documents with &lt;code&gt;BODY&lt;/code&gt; contents, returns the &lt;code&gt;BODY&lt;/code&gt; element. In frameset documents, this returns the outermost &lt;code&gt;FRAMESET&lt;/code&gt; element.</source>
          <target state="translated">包含文档内容的元素。在具有 &lt;code&gt;BODY&lt;/code&gt; 内容的文档中，返回 &lt;code&gt;BODY&lt;/code&gt; 元素。在框架集文档中，这将返回最外面的 &lt;code&gt;FRAMESET&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="a0e29d3e5bbd6980e4d727c47aaf30d7e1cf71b6" translate="yes" xml:space="preserve">
          <source>The element type</source>
          <target state="translated">元素类型</target>
        </trans-unit>
        <trans-unit id="65862e6b5052b9e35e765d435b1b6a16eb9764f8" translate="yes" xml:space="preserve">
          <source>The element's advisory title.</source>
          <target state="translated">该要素的咨询标题;</target>
        </trans-unit>
        <trans-unit id="3135015c7d161ce8e2f565eef191fdb69abde9b6" translate="yes" xml:space="preserve">
          <source>The element's advisory title. See the title attribute definition in HTML 4.0.</source>
          <target state="translated">该元素的咨询标题。参见HTML 4.0中的标题属性定义。</target>
        </trans-unit>
        <trans-unit id="541d70e44338173216d9b9ce711eea8ba8a1bec9" translate="yes" xml:space="preserve">
          <source>The element's identifier.</source>
          <target state="translated">元素的标识符。</target>
        </trans-unit>
        <trans-unit id="3120eee40026def60678479368912719cf8743a9" translate="yes" xml:space="preserve">
          <source>The element's identifier. See the id attribute definition in HTML 4.0.</source>
          <target state="translated">元素的标识符。参见HTML 4.0中的id属性定义。</target>
        </trans-unit>
        <trans-unit id="8528845c5c4df26720cbcf625a610c0d09f4d337" translate="yes" xml:space="preserve">
          <source>The elements in the returned array are not sorted and are not in any particular order.</source>
          <target state="translated">返回数组中的元素没有排序,也没有任何特定的顺序。</target>
        </trans-unit>
        <trans-unit id="4747e5a9fa1beb70aa3841d35d6509a1676789ff" translate="yes" xml:space="preserve">
          <source>The elements of the returned iterator are the &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStores&lt;/code&gt;&lt;/a&gt; for this file system. The order of the elements is not defined and the file stores may change during the lifetime of the Java virtual machine. When an I/O error occurs, perhaps because a file store is not accessible, then it is not returned by the iterator.</source>
          <target state="translated">返回的迭代器的元素是此文件系统的&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStores&lt;/code&gt; &lt;/a&gt;。元素的顺序未定义，并且文件存储在Java虚拟机的生存期内可能会更改。当发生I / O错误时，也许是由于无法访问文件存储，则迭代器不会将其返回。</target>
        </trans-unit>
        <trans-unit id="f2a5c8fedf95db842d1e9b72c4be4ce32e900dce" translate="yes" xml:space="preserve">
          <source>The elements of the stream are &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; objects that are obtained as if by &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. Some file systems maintain special links to the directory itself and the directory's parent directory. Entries representing these links are not included.</source>
          <target state="translated">流的元素是&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;对象，这些对象似乎是通过针对 &lt;code&gt;dir&lt;/code&gt; &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt;目录项的名称而获得的。某些文件系统维护指向目录本身和目录的父目录的特殊链接。不包括代表这些链接的条目。</target>
        </trans-unit>
        <trans-unit id="a60448268f4f78f386f7f84f2c5f1a05d7a5a619" translate="yes" xml:space="preserve">
          <source>The elements of the stream are &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; objects that are obtained as if by &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. Some file systems maintain special links to the directory itself and the directory's parent directory. Entries representing these links are not included.</source>
          <target state="translated">流的元素是&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;对象，这些对象似乎是通过针对 &lt;code&gt;dir&lt;/code&gt; &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt;目录项的名称而获得的。一些文件系统维护指向目录本身和目录的父目录的特殊链接。不包括代表这些链接的条目。</target>
        </trans-unit>
        <trans-unit id="fbc2ae2f21b51f8bf47adefd8539ccb40f888682" translate="yes" xml:space="preserve">
          <source>The elements returned by the iterator are in no specific order. Some file systems maintain special links to the directory itself and the directory's parent directory. Entries representing these links are not returned by the iterator.</source>
          <target state="translated">迭代器返回的元素没有特定的顺序。有些文件系统维护着与目录本身和目录的父目录的特殊链接。代表这些链接的条目不会被迭代器返回。</target>
        </trans-unit>
        <trans-unit id="c5245362c3e765b467877703d73efa2747ce4f12" translate="yes" xml:space="preserve">
          <source>The eliding of side-effects may also be surprising. With the exception of terminal operations &lt;a href=&quot;stream#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stream#forEachOrdered(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEachOrdered&lt;/code&gt;&lt;/a&gt;, side-effects of behavioral parameters may not always be executed when the stream implementation can optimize away the execution of behavioral parameters without affecting the result of the computation. (For a specific example see the API note documented on the &lt;a href=&quot;stream#count()&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; operation.)</source>
          <target state="translated">消除副作用也可能令人惊讶。除了终端操作&lt;a href=&quot;stream#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;stream#forEachOrdered(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEachOrdered&lt;/code&gt; 之外&lt;/a&gt;，当流实现可以优化行为参数的执行而不影响计算结果时，行为参数的副作用可能不会始终执行。（有关特定示例，请参见&lt;a href=&quot;stream#count()&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;操作中记录的API注释。）</target>
        </trans-unit>
        <trans-unit id="f9ef353251d48288ffd3652f1f37c47124f1b9d2" translate="yes" xml:space="preserve">
          <source>The embedded code constructs &lt;code&gt;(?{&lt;/code&gt;</source>
          <target state="translated">嵌入式代码构造 &lt;code&gt;(?{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0c2d1ad066e6739f583f355da9a4f5e3e8c69ad" translate="yes" xml:space="preserve">
          <source>The embedded comment syntax &lt;code&gt;(?#comment)&lt;/code&gt;, and</source>
          <target state="translated">嵌入式注释语法 &lt;code&gt;(?#comment)&lt;/code&gt; 和</target>
        </trans-unit>
        <trans-unit id="2ac9f6f69ec96dbd7449b245c030db25a6bac57e" translate="yes" xml:space="preserve">
          <source>The embedded exception, or null if there is none.</source>
          <target state="translated">嵌入的异常,如果没有,则为空。</target>
        </trans-unit>
        <trans-unit id="6a88bf55348203ef6e9f6286a971b3e85a1f2f13" translate="yes" xml:space="preserve">
          <source>The emitted notification.</source>
          <target state="translated">发出的通知。</target>
        </trans-unit>
        <trans-unit id="cd73f61ba2f2a8d8e35835869b36bea5b5d6c871" translate="yes" xml:space="preserve">
          <source>The empty (default) prefix will be included in this enumeration; note that this behaviour differs from that of &lt;a href=&quot;#getPrefix(java.lang.String)&quot;&gt;&lt;code&gt;getPrefix(java.lang.String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getPrefixes()&quot;&gt;&lt;code&gt;getPrefixes()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">空（默认）前缀将包含在此枚举中；请注意，此行为不同于&lt;a href=&quot;#getPrefix(java.lang.String)&quot;&gt; &lt;code&gt;getPrefix(java.lang.String)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getPrefixes()&quot;&gt; &lt;code&gt;getPrefixes()&lt;/code&gt; 的行为&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6fac00ff3e5dd709823e6827990f282ac187b12b" translate="yes" xml:space="preserve">
          <source>The empty configuration</source>
          <target state="translated">空配置</target>
        </trans-unit>
        <trans-unit id="0d8c137901195921a3c750b93c7e832048c4f6c6" translate="yes" xml:space="preserve">
          <source>The empty layer</source>
          <target state="translated">空层</target>
        </trans-unit>
        <trans-unit id="86b78069639432e85ebb753167970567fe288386" translate="yes" xml:space="preserve">
          <source>The empty list (immutable).</source>
          <target state="translated">空列表(不可更改)。</target>
        </trans-unit>
        <trans-unit id="0cb0b0d6ef2409e36ed9fe34e19950b0163a49d3" translate="yes" xml:space="preserve">
          <source>The empty list (immutable). This list is serializable.</source>
          <target state="translated">空列表(不可变)。这个列表是可以序列化的。</target>
        </trans-unit>
        <trans-unit id="c62c60011920396412118a2dcae4cc60975b530e" translate="yes" xml:space="preserve">
          <source>The empty map (immutable).</source>
          <target state="translated">空图(不可变)。</target>
        </trans-unit>
        <trans-unit id="88137698e00d8f0652a82fe6508b16749429979f" translate="yes" xml:space="preserve">
          <source>The empty map (immutable). This map is serializable.</source>
          <target state="translated">空地图(不可变)。这个地图是可以序列化的。</target>
        </trans-unit>
        <trans-unit id="dd6618e9e18428a488fdb1a7a601d5c01961fd42" translate="yes" xml:space="preserve">
          <source>The empty set (immutable).</source>
          <target state="translated">空集(不可变)。</target>
        </trans-unit>
        <trans-unit id="180ebf25843521d97d4f2d04fea45f85b9208bbe" translate="yes" xml:space="preserve">
          <source>The empty set (immutable). This set is serializable.</source>
          <target state="translated">空集(不可变)。这个集合是可以序列化的。</target>
        </trans-unit>
        <trans-unit id="aab0ce820465533937604e4176265722b31887ea" translate="yes" xml:space="preserve">
          <source>The empty spliterator reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;. Calls to &lt;a href=&quot;spliterator#trySplit()&quot;&gt;&lt;code&gt;Spliterator.trySplit()&lt;/code&gt;&lt;/a&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">空的拆分器将报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;。调用&lt;a href=&quot;spliterator#trySplit()&quot;&gt; &lt;code&gt;Spliterator.trySplit()&lt;/code&gt; &lt;/a&gt;始终返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04710e8ea7ef328080b66f61a16fa7d06fca71ab" translate="yes" xml:space="preserve">
          <source>The empty spliterator reports &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;Spliterator.SIZED&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;. Calls to &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;Spliterator.trySplit()&lt;/code&gt;&lt;/a&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">空的拆分器报告&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;Spliterator.SIZED&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;。调用&lt;a href=&quot;spliterator#trySplit--&quot;&gt; &lt;code&gt;Spliterator.trySplit()&lt;/code&gt; &lt;/a&gt;始终返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d039a5d9f2e66523b58ada74e51fb8c6246d746" translate="yes" xml:space="preserve">
          <source>The enabled/disabled state of the functionality. Instead of having to separately disable the menu item and the toolbar button, the application can disable the function that implements this interface. All components which are registered as listeners for the state change then know to disable event generation for that item and to modify the display accordingly.</source>
          <target state="translated">功能的启用/禁用状态。应用程序不必分别禁用菜单项和工具栏按钮,而是可以禁用实现该接口的功能。所有被注册为状态变化的监听器的组件都知道要禁用该项的事件生成并相应地修改显示。</target>
        </trans-unit>
        <trans-unit id="1c432a9e10bc929fcac65f48c8ec49c62fe540ca" translate="yes" xml:space="preserve">
          <source>The encapsulated &lt;code&gt;Transferable&lt;/code&gt; object.</source>
          <target state="translated">封装的 &lt;code&gt;Transferable&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="6ec432977679b8c4ab400647f6119da604c9cebb" translate="yes" xml:space="preserve">
          <source>The encapsulated exception, or null if there is none.</source>
          <target state="translated">封装的异常,如果没有,则为空。</target>
        </trans-unit>
        <trans-unit id="a4258855a05f3c4988c5d23737a7b0335e728c12" translate="yes" xml:space="preserve">
          <source>The encapsulated object is unsealed (using the given Cipher, assuming that the Cipher is already properly initialized) and de-serialized, before it is returned.</source>
          <target state="translated">在返回之前,封装的对象会被解封(使用给定的Cipher,假设Cipher已经被正确初始化)并去序列化。</target>
        </trans-unit>
        <trans-unit id="4cab56e097451f176a982ee92d2d74b62d281b8b" translate="yes" xml:space="preserve">
          <source>The encapsulated object is unsealed and de-serialized, before it is returned.</source>
          <target state="translated">被封装的对象在返回之前会被解封和去序列化。</target>
        </trans-unit>
        <trans-unit id="c717ea61ef4986b72624cfc5093e3af1180fcd4d" translate="yes" xml:space="preserve">
          <source>The encoded representation is &lt;code&gt;null&lt;/code&gt; if and only if the MIME type &lt;code&gt;String&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">编码表示是 &lt;code&gt;null&lt;/code&gt; 当且仅当MIME类型 &lt;code&gt;String&lt;/code&gt; 是 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12867f82c9bd7777148afd28c5873c849dbc0d0d" translate="yes" xml:space="preserve">
          <source>The encoded representation is &lt;code&gt;null&lt;/code&gt; if and only if the specified &lt;code&gt;DataFlavor&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or its MIME type &lt;code&gt;String&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">编码表示是 &lt;code&gt;null&lt;/code&gt; 当且仅当该指定 &lt;code&gt;DataFlavor&lt;/code&gt; 是 &lt;code&gt;null&lt;/code&gt; 或它的MIME类型 &lt;code&gt;String&lt;/code&gt; 是 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="92c290d3d9692fd83e1c4ddfbceb045df9e846dc" translate="yes" xml:space="preserve">
          <source>The encoded representations for two non-&lt;code&gt;null&lt;/code&gt; MIME type &lt;code&gt;String&lt;/code&gt;s are equal if and only if these &lt;code&gt;String&lt;/code&gt;s are equal according to &lt;code&gt;String.equals(Object)&lt;/code&gt;</source>
          <target state="translated">当且仅当根据 &lt;code&gt;String.equals(Object)&lt;/code&gt; 这些 &lt;code&gt;String&lt;/code&gt; 相等时，两个非 &lt;code&gt;null&lt;/code&gt; MIME类型 &lt;code&gt;String&lt;/code&gt; 的编码表示形式才相等。</target>
        </trans-unit>
        <trans-unit id="dbd33f379a5eee5c81ca53b9290cd4a34ef73872" translate="yes" xml:space="preserve">
          <source>The encoded representations for two non-&lt;code&gt;null&lt;/code&gt;&lt;code&gt;DataFlavor&lt;/code&gt;s with non-&lt;code&gt;null&lt;/code&gt; MIME type &lt;code&gt;String&lt;/code&gt;s are equal if and only if the MIME type &lt;code&gt;String&lt;/code&gt;s of these &lt;code&gt;DataFlavor&lt;/code&gt;s are equal according to &lt;code&gt;String.equals(Object)&lt;/code&gt;</source>
          <target state="translated">用于编码表示两个非 &lt;code&gt;null&lt;/code&gt; &lt;code&gt;DataFlavor&lt;/code&gt; s的非 &lt;code&gt;null&lt;/code&gt; 的MIME类型 &lt;code&gt;String&lt;/code&gt; s为等于当且仅当MIME类型 &lt;code&gt;String&lt;/code&gt; 这些第 &lt;code&gt;DataFlavor&lt;/code&gt; 根据s为等于 &lt;code&gt;String.equals(Object)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="915d6895db9b6046e66af04d83ee0ef935f24da9" translate="yes" xml:space="preserve">
          <source>The encoding information used in this &lt;code&gt;@charset&lt;/code&gt; rule.</source>
          <target state="translated">此 &lt;code&gt;@charset&lt;/code&gt; 规则中使用的编码信息。</target>
        </trans-unit>
        <trans-unit id="199c2a38ff6aa6fabd32c8a3c9f3caf0eb39b53e" translate="yes" xml:space="preserve">
          <source>The encoding input P whose value equals byte[0].</source>
          <target state="translated">编码输入P,其值等于byte[0]。</target>
        </trans-unit>
        <trans-unit id="866e1ec28413dca3ae1e71d9b54008e333dbcfd0" translate="yes" xml:space="preserve">
          <source>The encoding must be a string acceptable for an XML encoding declaration (see section 4.3.3 of the XML 1.0 recommendation).</source>
          <target state="translated">编码必须是XML编码声明可以接受的字符串(参见XML 1.0建议的4.3.3节)。</target>
        </trans-unit>
        <trans-unit id="cfbc32ba92aba58363c14e07072f16236de40055" translate="yes" xml:space="preserve">
          <source>The encoding name. May be null, which indicates the default encoding should be used.</source>
          <target state="translated">编码名称。可为空,表示应使用默认编码。</target>
        </trans-unit>
        <trans-unit id="e05ebaa86b65502750822b548c59b7f59f18d9d5" translate="yes" xml:space="preserve">
          <source>The encoding scheme of this encoder instance is unaffected by this invocation. The returned encoder instance should be used for non-padding encoding operation.</source>
          <target state="translated">该编码器实例的编码方案不受此调用的影响。返回的编码器实例应该用于非填充编码操作。</target>
        </trans-unit>
        <trans-unit id="00a91fa3e606aaba9d4e25afa9d2cef72d5fc178" translate="yes" xml:space="preserve">
          <source>The encoding should be set before any &lt;code&gt;LogRecords&lt;/code&gt; are written to the &lt;code&gt;Handler&lt;/code&gt;.</source>
          <target state="translated">应该在将任何 &lt;code&gt;LogRecords&lt;/code&gt; 写入 &lt;code&gt;Handler&lt;/code&gt; 之前设置编码。</target>
        </trans-unit>
        <trans-unit id="5b190dbd3c0542516c30fbdf092dfc2c5e09f344" translate="yes" xml:space="preserve">
          <source>The encoding, or null if none was supplied.</source>
          <target state="translated">编码,如果没有提供编码,则为空。</target>
        </trans-unit>
        <trans-unit id="60091846e46c40257fd7a742d4619bbc19aa8175" translate="yes" xml:space="preserve">
          <source>The end argument must be greater than or equal to &lt;code&gt;start&lt;/code&gt;, and less than or equal to the length of s.</source>
          <target state="translated">end参数必须大于或等于 &lt;code&gt;start&lt;/code&gt; ，并且小于或等于s的长度。</target>
        </trans-unit>
        <trans-unit id="bf46fea03f0ce50879440b927adbb4563eb3af22" translate="yes" xml:space="preserve">
          <source>The end index of the text sequence.</source>
          <target state="translated">文本序列的结束索引。</target>
        </trans-unit>
        <trans-unit id="711a09ed66a073766bca3e7b6ef36bcbe9e2bcfa" translate="yes" xml:space="preserve">
          <source>The end of a line</source>
          <target state="translated">一条线的末端</target>
        </trans-unit>
        <trans-unit id="2b7cb3f2f726e71310a51789affbad5826f447fa" translate="yes" xml:space="preserve">
          <source>The end of the input</source>
          <target state="translated">输入的结束</target>
        </trans-unit>
        <trans-unit id="83ac7dbc36de6be08d58b4bbfe9e0a56933b8da8" translate="yes" xml:space="preserve">
          <source>The end of the input but for the final &lt;a href=&quot;#lt&quot;&gt;terminator&lt;/a&gt;, if any</source>
          <target state="translated">输入的末尾，但对于最终&lt;a href=&quot;#lt&quot;&gt;终止符&lt;/a&gt;（如果有）</target>
        </trans-unit>
        <trans-unit id="ef4414b7c806493fb5d10ea630e15048e7a0b572" translate="yes" xml:space="preserve">
          <source>The end of the previous match</source>
          <target state="translated">上一场比赛结束</target>
        </trans-unit>
        <trans-unit id="c47f244b8cfe5bd206e59f479bae4fee02f7dd8a" translate="yes" xml:space="preserve">
          <source>The end time must be set before starting the stream.</source>
          <target state="translated">在开始流之前必须设置结束时间。</target>
        </trans-unit>
        <trans-unit id="6c7e56efe7ee716d847eb7e48baf1454323b7b72" translate="yes" xml:space="preserve">
          <source>The end-of-line sequence of characters to be used in the XML being written out.</source>
          <target state="translated">写出的XML中要使用的行末字符序列。</target>
        </trans-unit>
        <trans-unit id="f5874801e6c5636cae932aeda15c85b797d5bab2" translate="yes" xml:space="preserve">
          <source>The end-of-line sequence of characters to be used in the XML being written out. Any string is supported, but XML treats only a certain set of characters sequence as end-of-line (See section 2.11, &quot;End-of-Line Handling&quot; in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;], if the serialized content is XML 1.0 or section 2.11, &quot;End-of-Line Handling&quot; in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml11-20040204/&quot;&gt;XML 1.1&lt;/a&gt;], if the serialized content is XML 1.1). Using other character sequences than the recommended ones can result in a document that is either not serializable or not well-formed).</source>
          <target state="translated">要写出的XML中要使用的字符的行尾序列。支持任何字符串，但是XML只将一组特定的字符序列视为行尾（如果序列化的内容是XML 1.0或2.11节，请参见[ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ]中的2.11节&amp;ldquo;行尾处理&amp;rdquo;）（如果序列化的内容是XML 1.1，请参见[ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml11-20040204/&quot;&gt;XML 1.1&lt;/a&gt; ]中的&amp;ldquo;行尾处理&amp;rdquo; ）。使用除推荐字符序列以外的其他字符序列可能会导致文档不可序列化或格式不正确。</target>
        </trans-unit>
        <trans-unit id="ff660017144ecccbcb99248c7346ec1435ba7f12" translate="yes" xml:space="preserve">
          <source>The end-of-line sequence of characters to be used in the XML being written out. Any string is supported, but XML treats only a certain set of characters sequence as end-of-line (See section 2.11, &quot;End-of-Line Handling&quot; in [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt;], if the serialized content is XML 1.0 or section 2.11, &quot;End-of-Line Handling&quot; in [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml11-20040204/&quot;&gt;XML 1.1&lt;/a&gt;], if the serialized content is XML 1.1). Using other character sequences than the recommended ones can result in a document that is either not serializable or not well-formed).</source>
          <target state="translated">要写出的XML中要使用的字符的行尾序列。支持任何字符串，但是XML只将一组特定的字符序列视为行尾（如果序列化的内容是XML 1.0或2.11节，请参见[ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204&quot;&gt;XML 1.0&lt;/a&gt; ]中的2.11节&amp;ldquo;行尾处理&amp;rdquo;）（如果序列化的内容是XML 1.1，请参见[ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml11-20040204/&quot;&gt;XML 1.1&lt;/a&gt; ]中的&amp;ldquo;行尾处理&amp;rdquo; ）。使用除推荐字符序列以外的其他字符序列可能会导致文档不可序列化或格式不正确。</target>
        </trans-unit>
        <trans-unit id="a8cee6a32786cc3670324944910a406a959bb6ac" translate="yes" xml:space="preserve">
          <source>The enforcement of argument correctness means that the retrieved set of recorded values obtained from a &lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; source instance may not be a legal set of arguments for this constructor due to arithmetic overflow of the source's recorded count of values. The consistent argument conditions are not sufficient to prevent the creation of an internally inconsistent instance. An example of such a state would be an instance with: &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2, and &lt;code&gt;sum&lt;/code&gt; = 0.</source>
          <target state="translated">参数正确性的强制意味着从 &lt;code&gt;DoubleSummaryStatistics&lt;/code&gt; 源实例获取的记录值的检索集由于源记录值的算术溢出而可能不是该构造函数的合法参数集。一致的参数条件不足以防止创建内部不一致的实例。这种状态的示例是一个实例，其实例为： &lt;code&gt;count&lt;/code&gt; = 2， &lt;code&gt;min&lt;/code&gt; = 1， &lt;code&gt;max&lt;/code&gt; = 2， &lt;code&gt;sum&lt;/code&gt; = 0。</target>
        </trans-unit>
        <trans-unit id="c606e16f292233b1e474bd07704d84ec483f395a" translate="yes" xml:space="preserve">
          <source>The enforcement of argument correctness means that the retrieved set of recorded values obtained from a &lt;code&gt;IntSummaryStatistics&lt;/code&gt; source instance may not be a legal set of arguments for this constructor due to arithmetic overflow of the source's recorded count of values. The consistent argument conditions are not sufficient to prevent the creation of an internally inconsistent instance. An example of such a state would be an instance with: &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2, and &lt;code&gt;sum&lt;/code&gt; = 0.</source>
          <target state="translated">参数正确性的强制意味着从 &lt;code&gt;IntSummaryStatistics&lt;/code&gt; 源实例获取的记录值的检索集可能不是该构造函数的合法参数集，原因是源记录值的算术溢出。一致的参数条件不足以防止创建内部不一致的实例。这种状态的示例是一个实例，其实例为： &lt;code&gt;count&lt;/code&gt; = 2， &lt;code&gt;min&lt;/code&gt; = 1， &lt;code&gt;max&lt;/code&gt; = 2， &lt;code&gt;sum&lt;/code&gt; = 0。</target>
        </trans-unit>
        <trans-unit id="2d39c09a2e8244ac39cb65479a835cbdcf160d57" translate="yes" xml:space="preserve">
          <source>The enforcement of argument correctness means that the retrieved set of recorded values obtained from a &lt;code&gt;LongSummaryStatistics&lt;/code&gt; source instance may not be a legal set of arguments for this constructor due to arithmetic overflow of the source's recorded count of values. The consistent argument conditions are not sufficient to prevent the creation of an internally inconsistent instance. An example of such a state would be an instance with: &lt;code&gt;count&lt;/code&gt; = 2, &lt;code&gt;min&lt;/code&gt; = 1, &lt;code&gt;max&lt;/code&gt; = 2, and &lt;code&gt;sum&lt;/code&gt; = 0.</source>
          <target state="translated">强制执行参数正确性意味着，由于源记录的值计数的算术溢出，从 &lt;code&gt;LongSummaryStatistics&lt;/code&gt; 源实例获取的记录值的检索集可能不是此构造函数的合法参数集。一致的参数条件不足以防止创建内部不一致的实例。这种状态的示例是一个实例，其实例为： &lt;code&gt;count&lt;/code&gt; = 2， &lt;code&gt;min&lt;/code&gt; = 1， &lt;code&gt;max&lt;/code&gt; = 2， &lt;code&gt;sum&lt;/code&gt; = 0。</target>
        </trans-unit>
        <trans-unit id="4fcef1061367fe496df98fb6e285795bde375b7d" translate="yes" xml:space="preserve">
          <source>The engine to handle scripts with this extension. Returns &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">用于处理具有此扩展名的脚本的引擎。如果找不到，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8026a80c8952092d49eb36b05845480d8dbedd6" translate="yes" xml:space="preserve">
          <source>The engine to handle scripts with this mime type. Returns &lt;code&gt;null&lt;/code&gt; if not found.</source>
          <target state="translated">用于处理具有这种mime类型的脚本的引擎。如果找不到，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b5d9018d772f1115a9de50a7ae9129bb12d2e335" translate="yes" xml:space="preserve">
          <source>The entire name is converted to lower case using &lt;code&gt;String.toLowerCase(Locale.US)&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;String.toLowerCase(Locale.US)&lt;/code&gt; 将整个名称转换为小写</target>
        </trans-unit>
        <trans-unit id="276a2e35ec48a4b15619c06e947a59549e48ad49" translate="yes" xml:space="preserve">
          <source>The entire name is converted to upper case using &lt;code&gt;String.toUpperCase(Locale.US)&lt;/code&gt;</source>
          <target state="translated">使用 &lt;code&gt;String.toUpperCase(Locale.US)&lt;/code&gt; 将整个名称转换为大写</target>
        </trans-unit>
        <trans-unit id="cf2cf0cb7e58f2504fba1a3138d73c6049b494a8" translate="yes" xml:space="preserve">
          <source>The entire state of the object is compared.</source>
          <target state="translated">对对象的整个状态进行比较。</target>
        </trans-unit>
        <trans-unit id="02495081407ad5f1e8ae7f9b69d8c32662b479c8" translate="yes" xml:space="preserve">
          <source>The entity's name</source>
          <target state="translated">该实体的名称</target>
        </trans-unit>
        <trans-unit id="99f640bd2d4699e8124e99b2dab4320d559a8e61" translate="yes" xml:space="preserve">
          <source>The entity's public identifier, or null if none was given</source>
          <target state="translated">该实体的公共标识符,如果没有提供,则为空。</target>
        </trans-unit>
        <trans-unit id="5fa432b053c3ddb33759dbc8f113eb9ecd1017aa" translate="yes" xml:space="preserve">
          <source>The entity's system identifier.</source>
          <target state="translated">该实体的系统标识符。</target>
        </trans-unit>
        <trans-unit id="e8b926cce7987109ea3dc5973aa6b643aeb89012" translate="yes" xml:space="preserve">
          <source>The entry point of the doclet.</source>
          <target state="translated">doclet的切入点。</target>
        </trans-unit>
        <trans-unit id="63ecfe7ac1c8b1b60ad4b928fb9036047abfcaa0" translate="yes" xml:space="preserve">
          <source>The entry point of the doclet. Further processing will commence as instructed by this method.</source>
          <target state="translated">doclet的切入点。按照该方法的指示开始进一步处理。</target>
        </trans-unit>
        <trans-unit id="47c0130f063f1660f8c0d872244fda8cbf918c22" translate="yes" xml:space="preserve">
          <source>The entry that was removed.</source>
          <target state="translated">被删除的条目。</target>
        </trans-unit>
        <trans-unit id="24ed1ad9a30ff55b0b4b2ee5dac0d716d19f6f9b" translate="yes" xml:space="preserve">
          <source>The entrySet returned from a &lt;code&gt;RenderingHints&lt;/code&gt; object is not modifiable.</source>
          <target state="translated">从 &lt;code&gt;RenderingHints&lt;/code&gt; 对象返回的entrySet是不可修改的。</target>
        </trans-unit>
        <trans-unit id="f47478516478638d15798cd13d73e1f50e6e86d6" translate="yes" xml:space="preserve">
          <source>The enum-based ranges are a super set of the bit mask-based ones.</source>
          <target state="translated">基于枚举的范围是基于位掩码的超集。</target>
        </trans-unit>
        <trans-unit id="18f0442bd8b0a54d4c0285c94f5620f08066be05" translate="yes" xml:space="preserve">
          <source>The enumeration class &lt;code&gt;java.nio.ByteOrder&lt;/code&gt; is used to specify the byte order. A value of &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; specifies so-called big-endian or network byte order, in which the high-order byte comes first. Motorola and Sparc processors store data in this format, while Intel processors store data in the reverse &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; order.</source>
          <target state="translated">枚举类 &lt;code&gt;java.nio.ByteOrder&lt;/code&gt; 用于指定字节顺序。 &lt;code&gt;ByteOrder.BIG_ENDIAN&lt;/code&gt; 的值指定所谓的big-endian或网络字节顺序，其中高位字节在前。摩托罗拉和Sparc处理器以这种格式存储数据，而英特尔处理器以 &lt;code&gt;ByteOrder.LITTLE_ENDIAN&lt;/code&gt; 反向顺序存储数据。</target>
        </trans-unit>
        <trans-unit id="93a83d4b2463802ed63b71007b3d2a201c1657a1" translate="yes" xml:space="preserve">
          <source>The enumeration singleton value stored at index</source>
          <target state="translated">枚举单子的值存储在索引--------。</target>
        </trans-unit>
        <trans-unit id="447fe37c6bb84b1b519d70e69f405d19fe3bb27a" translate="yes" xml:space="preserve">
          <source>The envelope input tray in the printer.</source>
          <target state="translated">打印机中的信封输入盘。</target>
        </trans-unit>
        <trans-unit id="2812b194ea7bc99714514b3dd40839ac66432f4a" translate="yes" xml:space="preserve">
          <source>The environment associated with this InitialContext.</source>
          <target state="translated">与此InitialContext相关联的环境。</target>
        </trans-unit>
        <trans-unit id="7320b1d90fa4d701e7a16f43a233c4390cf54ae6" translate="yes" xml:space="preserve">
          <source>The environment associated with this InitialContext. It is initialized to null and is updated by the constructor that accepts an environment or by the &lt;code&gt;init()&lt;/code&gt; method.</source>
          <target state="translated">与此InitialContext关联的环境。它被初始化为null，并由接受环境的构造函数或 &lt;code&gt;init()&lt;/code&gt; 方法进行更新。</target>
        </trans-unit>
        <trans-unit id="a209249a1bb001079ff30fe84944238386409855" translate="yes" xml:space="preserve">
          <source>The environment is inherited from the parent context as context methods proceed from one context to the next. Changes to the environment of one context do not directly affect those of other contexts.</source>
          <target state="translated">当上下文方法从一个上下文进行到下一个上下文时,环境从父上下文继承。对一个上下文环境的改变不会直接影响其他上下文的环境。</target>
        </trans-unit>
        <trans-unit id="2a7ae3b87859dfdfc8f90b77c7dc529516229077" translate="yes" xml:space="preserve">
          <source>The environment may be used to access utility classes for &lt;a href=&quot;../../../../java.compiler/javax/lang/model/util/elements&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../java.compiler/javax/lang/model/util/types&quot;&gt;&lt;code&gt;types&lt;/code&gt;&lt;/a&gt; if needed.</source>
          <target state="translated">如果需要，可以使用该环境访问&lt;a href=&quot;../../../../java.compiler/javax/lang/model/util/elements&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../../../java.compiler/javax/lang/model/util/types&quot;&gt; &lt;code&gt;types&lt;/code&gt; &lt;/a&gt;实用程序类。</target>
        </trans-unit>
        <trans-unit id="f9dee9225753fc6b669ebb73bdd54e1d209d99ca" translate="yes" xml:space="preserve">
          <source>The environment of the context being operated on.</source>
          <target state="translated">被操作的上下文环境。</target>
        </trans-unit>
        <trans-unit id="ef8a562764f2b68aa9e4e0b27ff74e8ea33e36dd" translate="yes" xml:space="preserve">
          <source>The environment parameter is owned by the caller. The implementation will not modify the object or keep a reference to it, although it may keep a reference to a clone or copy.</source>
          <target state="translated">环境参数由调用者拥有。实现不会修改对象或保留对它的引用,尽管它可能保留对克隆或拷贝的引用。</target>
        </trans-unit>
        <trans-unit id="73513013d840568497d96e281a5e7d4e7a8991b6" translate="yes" xml:space="preserve">
          <source>The environment variable that stores a keystore password. Alternatively, passwords may be supplied to the constructor method in a &lt;code&gt;Map&amp;lt;String, ProtectionParameter&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">存储密钥库密码的环境变量。或者，可以在 &lt;code&gt;Map&amp;lt;String, ProtectionParameter&amp;gt;&lt;/code&gt; 中将密码提供给构造方法。</target>
        </trans-unit>
        <trans-unit id="b61120168558233e16a6b0f8ec1f8c14f9f7256b" translate="yes" xml:space="preserve">
          <source>The eon of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;. The value returned is an integer multiple of 10^9.</source>
          <target state="translated">此 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 的版本。返回的值是10 ^ 9的整数倍。</target>
        </trans-unit>
        <trans-unit id="57999414d5724d1cf04f9e4820e57cd11a0935b4" translate="yes" xml:space="preserve">
          <source>The epoch second count is a simple incrementing count of seconds where second 0 is 1970-01-01T00:00:00Z. The nanosecond part is returned by &lt;a href=&quot;#getNano()&quot;&gt;&lt;code&gt;getNano()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">纪元秒计数是秒的简单递增计数，其中秒0是1970-01-01T00：00：00Z。纳秒部分由&lt;a href=&quot;#getNano()&quot;&gt; &lt;code&gt;getNano()&lt;/code&gt; &lt;/a&gt;返回。</target>
        </trans-unit>
        <trans-unit id="451d2b13281af07c21676b10d78a114a9213b989" translate="yes" xml:space="preserve">
          <source>The epoch second count is a simple incrementing count of seconds where second 0 is 1970-01-01T00:00:00Z. The nanosecond part of the day is returned by &lt;code&gt;getNanosOfSecond&lt;/code&gt;.</source>
          <target state="translated">纪元秒计数是秒的简单递增计数，其中秒0是1970-01-01T00：00：00Z。一天的纳秒部分由 &lt;code&gt;getNanosOfSecond&lt;/code&gt; 返回。</target>
        </trans-unit>
        <trans-unit id="7c57dffa7938448b87eeca6b945432ce30d9655f" translate="yes" xml:space="preserve">
          <source>The epoch year &lt;code&gt;LocalDate&lt;/code&gt;, '1970-01-01'.</source>
          <target state="translated">纪元 &lt;code&gt;LocalDate&lt;/code&gt; ，&amp;ldquo; 1970-01-01&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="13f61041587cde1d2ef70a5612d087fffea4f8a6" translate="yes" xml:space="preserve">
          <source>The epoch-day, based on the Java epoch of 1970-01-01 (ISO).</source>
          <target state="translated">纪元日,以1970-01-01(ISO)的Java纪元为基础。</target>
        </trans-unit>
        <trans-unit id="e49cb9c9ef141f068ac6e8b8f41d3d18c5453e3f" translate="yes" xml:space="preserve">
          <source>The equals comparison for the &lt;code&gt;DataFlavor&lt;/code&gt; class is implemented as follows: Two &lt;code&gt;DataFlavor&lt;/code&gt;s are considered equal if and only if their MIME primary type and subtype and representation class are equal. Additionally, if the primary type is &quot;text&quot;, the subtype denotes a text flavor which supports the charset parameter, and the representation class is not &lt;code&gt;java.io.Reader&lt;/code&gt;, &lt;code&gt;java.lang.String&lt;/code&gt;, &lt;code&gt;java.nio.CharBuffer&lt;/code&gt;, or &lt;code&gt;[C&lt;/code&gt;, the &lt;code&gt;charset&lt;/code&gt; parameter must also be equal. If a charset is not explicitly specified for one or both &lt;code&gt;DataFlavor&lt;/code&gt;s, the platform default encoding is assumed. See &lt;code&gt;selectBestTextFlavor&lt;/code&gt; for a list of text flavors which support the charset parameter.</source>
          <target state="translated">按以下方式实现 &lt;code&gt;DataFlavor&lt;/code&gt; 类的equals比较：只有且仅当它们的MIME主要类型，子类型和表示形式类相等时，才将两个 &lt;code&gt;DataFlavor&lt;/code&gt; 视为相等。此外，如果主要类型为&amp;ldquo;文本&amp;rdquo;，则子类型表示支持charset参数的文本形式，并且表示形式类不是 &lt;code&gt;java.io.Reader&lt;/code&gt; ， &lt;code&gt;java.lang.String&lt;/code&gt; ， &lt;code&gt;java.nio.CharBuffer&lt;/code&gt; 或 &lt;code&gt;[C&lt;/code&gt; ， &lt;code&gt;charset&lt;/code&gt; 参数也必须相等。如果未为一个或两个 &lt;code&gt;DataFlavor&lt;/code&gt; 明确指定字符集，则采用平台默认编码。参见 &lt;code&gt;selectBestTextFlavor&lt;/code&gt; 有关支持charset参数的文本样式的列表。</target>
        </trans-unit>
        <trans-unit id="c1b8293f4c97e7205ec67ebb7e83b218aa57ebae" translate="yes" xml:space="preserve">
          <source>The equals method for all Key objects will return the same result as the equality operator '=='.</source>
          <target state="translated">所有Key对象的equals方法将返回与平等操作符'=='相同的结果。</target>
        </trans-unit>
        <trans-unit id="f79c64d33ada160a9aa9a0dee87d4b4477a4a32f" translate="yes" xml:space="preserve">
          <source>The era AH has the value 1.</source>
          <target state="translated">年代AH的值为1。</target>
        </trans-unit>
        <trans-unit id="3e1c9900b94880fd7e7c021ee09ac2c00bf64a53" translate="yes" xml:space="preserve">
          <source>The era BCE has the value 0, while the era CE has the value 1.</source>
          <target state="translated">年代BCE的数值为0,而年代CE的数值为1。</target>
        </trans-unit>
        <trans-unit id="5051bf50e01fc2774c8eb947eb59b6962dbe9b88" translate="yes" xml:space="preserve">
          <source>The era BEFORE_BE has the value 0, while the era BE has the value 1.</source>
          <target state="translated">年代BEFORE_BE的值为0,而年代BE的值为1。</target>
        </trans-unit>
        <trans-unit id="f1e8420b21ccf344f49d55914b45558ed396505c" translate="yes" xml:space="preserve">
          <source>The era BEFORE_ROC has the value 0, while the era ROC has the value 1.</source>
          <target state="translated">年代BEFORE_ROC的值为0,而年代ROC的值为1。</target>
        </trans-unit>
        <trans-unit id="9f4534bad72f013551c9f764a1def4ccdab2de91" translate="yes" xml:space="preserve">
          <source>The era in use at 1970-01-01 must have the value 1. Later eras must have sequentially higher values. Earlier eras must have sequentially lower values. Each chronology must refer to an enum or similar singleton to provide the era values.</source>
          <target state="translated">1970-01-01时使用的年代必须为1。以后的年代必须有依次较高的数值。较早的年代必须有依次较低的值。每个年代表必须引用一个枚举或类似的单子来提供年代值。</target>
        </trans-unit>
        <trans-unit id="87541603348e098b6e3532cfb361646f1efe0412" translate="yes" xml:space="preserve">
          <source>The era in use at the epoch 1970-01-01 (ISO) has the value 1.</source>
          <target state="translated">1970-01-01(ISO)时代使用的时代值为1。</target>
        </trans-unit>
        <trans-unit id="09028bc65a868277e7b5ae99345ad33a969765b4" translate="yes" xml:space="preserve">
          <source>The era is, conceptually, the largest division of the time-line. Most calendar systems have a single epoch dividing the time-line into two eras. However, some have multiple eras, such as one for the reign of each leader. The exact meaning is determined by the &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">从概念上讲，该时代是时间线的最大划分。大多数日历系统只有一个时期，将时间线分为两个时代。但是，有些有多个时代，例如每个领导人的统治时期。确切的含义由 &lt;code&gt;Chronology&lt;/code&gt; 决定。</target>
        </trans-unit>
        <trans-unit id="ff2e26c4f18353f82283eccb549a2ce5f2603627" translate="yes" xml:space="preserve">
          <source>The era is, conceptually, the largest division of the time-line. Most calendar systems have a single epoch dividing the time-line into two eras. However, some have multiple eras, such as one for the reign of each leader. The exact meaning is determined by the chronology according to the following constraints.</source>
          <target state="translated">从概念上讲,时代是时间线的最大划分。大多数日历系统都有一个时代,将时间线分为两个时代。但是,有些有多个时代,如每个领导人在位时有一个时代。确切的含义是由年表根据以下限制条件决定的。</target>
        </trans-unit>
        <trans-unit id="745a52e844df97899a3ede65646ea36c0fd17371" translate="yes" xml:space="preserve">
          <source>The era.</source>
          <target state="translated">这个时代。</target>
        </trans-unit>
        <trans-unit id="2caffe614643d6e127ea5c039dc53ac14adaff9a" translate="yes" xml:space="preserve">
          <source>The erroneous pattern</source>
          <target state="translated">错误的模式</target>
        </trans-unit>
        <trans-unit id="db5d419bcb7da634fd0bf25f990053a80acf9868" translate="yes" xml:space="preserve">
          <source>The error code</source>
          <target state="translated">错误代码</target>
        </trans-unit>
        <trans-unit id="41b5b045786eb1032e2a6259c048d27d95a3aa1f" translate="yes" xml:space="preserve">
          <source>The error code with which to create the SystemException.</source>
          <target state="translated">用于创建SystemException的错误代码。</target>
        </trans-unit>
        <trans-unit id="c9f3f6b0ac21c18b5b5b46a7c3598f345b813e3c" translate="yes" xml:space="preserve">
          <source>The error handler can abort further validation immediately by throwing &lt;a href=&quot;../../../org/xml/sax/saxexception&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; from the handler. Or for example it can print an error to the screen and try to continue the validation by returning normally from the &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">错误处理程序可以通过从处理程序中抛出&lt;a href=&quot;../../../org/xml/sax/saxexception&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; &lt;/a&gt;来立即中止进一步的验证。或者，例如，它可以在屏幕上显示错误并尝试通过从&lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; 中&lt;/a&gt;正常返回来继续验证</target>
        </trans-unit>
        <trans-unit id="ca91a015f391a8274e6489f904246f21f852828f" translate="yes" xml:space="preserve">
          <source>The error handler can abort the parsing of a schema immediately by throwing &lt;a href=&quot;../../../org/xml/sax/saxexception&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; from the handler. Or for example it can print an error to the screen and try to continue the processing by returning normally from the &lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt;&lt;code&gt;ErrorHandler&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">错误处理程序可以通过从处理程序中抛出&lt;a href=&quot;../../../org/xml/sax/saxexception&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; &lt;/a&gt;来立即中止模式的解析。或者，例如，它可以将错误打印到屏幕上，并通过从&lt;a href=&quot;../../../org/xml/sax/errorhandler&quot;&gt; &lt;code&gt;ErrorHandler&lt;/code&gt; &lt;/a&gt;正常返回来尝试继续处理</target>
        </trans-unit>
        <trans-unit id="1e98ccc16f95f86f47c7a57ca3607f40e966ecd8" translate="yes" xml:space="preserve">
          <source>The error index</source>
          <target state="translated">错误指数</target>
        </trans-unit>
        <trans-unit id="4a0628012c2d77c4a62f2562528b964f8e826cdc" translate="yes" xml:space="preserve">
          <source>The error message.</source>
          <target state="translated">错误信息。</target>
        </trans-unit>
        <trans-unit id="155f296108df1212e1fa7c200cb6147e704d7079" translate="yes" xml:space="preserve">
          <source>The error method is called when a Handler failure occurs.</source>
          <target state="translated">当处理程序失败时,会调用错误方法。</target>
        </trans-unit>
        <trans-unit id="1d0bef9253965f89ce98be7e5b21759cac6eff03" translate="yes" xml:space="preserve">
          <source>The error or warning message.</source>
          <target state="translated">错误或警告信息。</target>
        </trans-unit>
        <trans-unit id="605148fa6105b2e119d77c76174af023cd61d1fc" translate="yes" xml:space="preserve">
          <source>The errorCode gives the reason why the send failed, and if set, will be a SCTP protocol error code as defined in RFC2960 section 3.3.10</source>
          <target state="translated">errorCode给出了发送失败的原因,如果设置,将是RFC2960第3.3.10节中定义的SCTP协议错误代码。</target>
        </trans-unit>
        <trans-unit id="0a410fae8eeeeb214fc59888859b3800e99fda5d" translate="yes" xml:space="preserve">
          <source>The escape character (&lt;code&gt;'\u001B'&lt;/code&gt;)</source>
          <target state="translated">转义符（ &lt;code&gt;'\u001B'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c91df01c97c30e37b80ecbd3ef0c79f56e113f6e" translate="yes" xml:space="preserve">
          <source>The evaluation of XPath expressions is provided by &lt;code&gt;XPathEvaluator&lt;/code&gt;.</source>
          <target state="translated">XPath表达式的评估由 &lt;code&gt;XPathEvaluator&lt;/code&gt; 提供。</target>
        </trans-unit>
        <trans-unit id="932c2ad004646828de304bdeb118b0bd35d00dae" translate="yes" xml:space="preserve">
          <source>The evaluation of XPath expressions is provided by &lt;code&gt;XPathEvaluator&lt;/code&gt;. In a DOM implementation which supports the XPath 3.0 feature, as described above, the &lt;code&gt;XPathEvaluator&lt;/code&gt; interface will be implemented on the same object which implements the &lt;code&gt;Document&lt;/code&gt; interface permitting it to be obtained by the usual binding-specific method such as casting or by using the DOM Level 3 getInterface method. In this case the implementation obtained from the Document supports the XPath DOM module and is compatible with the XPath 1.0 specification.</source>
          <target state="translated">XPath表达式的评估由 &lt;code&gt;XPathEvaluator&lt;/code&gt; 提供。如上所述，在支持XPath 3.0功能的DOM实现中， &lt;code&gt;XPathEvaluator&lt;/code&gt; 接口将在实现 &lt;code&gt;Document&lt;/code&gt; 接口的同一对象上实现，该接口允许通过常规的绑定特定方法（例如强制转换）或使用DOM获得该接口级别3的getInterface方法。在这种情况下，从文档获得的实现支持XPath DOM模块，并且与XPath 1.0规范兼容。</target>
        </trans-unit>
        <trans-unit id="61c4e5321be488393232ebfc2c998015598d95d3" translate="yes" xml:space="preserve">
          <source>The event</source>
          <target state="translated">本次活动</target>
        </trans-unit>
        <trans-unit id="36c181ff6056db9593338574ecdc945b6067d4de" translate="yes" xml:space="preserve">
          <source>The event id indicating an ancestor-Container was moved.</source>
          <target state="translated">表示祖先容器被移动的事件ID。</target>
        </trans-unit>
        <trans-unit id="e1443dfaf4b6b85db28fbdb25b53c165f541ec0a" translate="yes" xml:space="preserve">
          <source>The event id indicating an ancestor-Container was resized.</source>
          <target state="translated">表示祖先容器被调整大小的事件ID。</target>
        </trans-unit>
        <trans-unit id="70d35f470ffeef37b54f836e3cd9f0b651ae9aa7" translate="yes" xml:space="preserve">
          <source>The event id indicating that modification was made to the entire hierarchy tree.</source>
          <target state="translated">表示对整个层次树进行修改的事件id。</target>
        </trans-unit>
        <trans-unit id="562a97f9bd92f31f73ffbe57af477a5ba2406946" translate="yes" xml:space="preserve">
          <source>The event instance is created if necessary, and stored in &lt;code&gt;changeEvent&lt;/code&gt;.</source>
          <target state="translated">如果需要，将创建事件实例，并将其存储在 &lt;code&gt;changeEvent&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="0ef14c999b3719bfd7c8883c82c16c66341c96f6" translate="yes" xml:space="preserve">
          <source>The event is currently being evaluated at the target &lt;code&gt;EventTarget&lt;/code&gt;.</source>
          <target state="translated">当前正在目标 &lt;code&gt;EventTarget&lt;/code&gt; 处评估该事件。</target>
        </trans-unit>
        <trans-unit id="17d00264cedd71d7e857c367b4af9222389e91c0" translate="yes" xml:space="preserve">
          <source>The event is passed to every &lt;code&gt;WindowListener&lt;/code&gt; or &lt;code&gt;WindowAdapter&lt;/code&gt; object which registered to receive such events using the window's &lt;code&gt;addWindowListener&lt;/code&gt; method. (&lt;code&gt;WindowAdapter&lt;/code&gt; objects implement the &lt;code&gt;WindowListener&lt;/code&gt; interface.) Each such listener object gets this &lt;code&gt;WindowEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">该事件将传递给每个已注册的 &lt;code&gt;WindowListener&lt;/code&gt; 或 &lt;code&gt;WindowAdapter&lt;/code&gt; 对象，该对象使用窗口的 &lt;code&gt;addWindowListener&lt;/code&gt; 方法注册为接收此类事件。 （ &lt;code&gt;WindowAdapter&lt;/code&gt; 对象实现 &lt;code&gt;WindowListener&lt;/code&gt; 接口。）事件发生时，每个这样的侦听器对象都会获取此 &lt;code&gt;WindowEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1abd8f6fbae26f079345d6412b7aa0c070389945" translate="yes" xml:space="preserve">
          <source>The event listener list for the document.</source>
          <target state="translated">文档的事件列表。</target>
        </trans-unit>
        <trans-unit id="0091e8c476dc1c7031fbbb41fedd65ed1eb317c6" translate="yes" xml:space="preserve">
          <source>The event listener list.</source>
          <target state="translated">事件列表。</target>
        </trans-unit>
        <trans-unit id="b87c7de0d8e9fe74014722e9133592b331a94776" translate="yes" xml:space="preserve">
          <source>The event mask for selecting action events.</source>
          <target state="translated">用于选择动作事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="f8465af8a3d205902e607d80f71a24a06c6dcaec" translate="yes" xml:space="preserve">
          <source>The event mask for selecting adjustment events.</source>
          <target state="translated">用于选择调整事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="8d8cade455cf753680d2662860fe8dc4825d577b" translate="yes" xml:space="preserve">
          <source>The event mask for selecting component events.</source>
          <target state="translated">用于选择组件事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="7bc78b08314a4e10ffe2dc8666ee7cff2ef64b6d" translate="yes" xml:space="preserve">
          <source>The event mask for selecting container events.</source>
          <target state="translated">用于选择容器事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="08b3362dfd97442548ee4781e310da11d95dd09b" translate="yes" xml:space="preserve">
          <source>The event mask for selecting focus events.</source>
          <target state="translated">用于选择焦点事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="503c954ae1d7480fa1d1835de752e5eab2f048d5" translate="yes" xml:space="preserve">
          <source>The event mask for selecting hierarchy bounds events.</source>
          <target state="translated">用于选择层次界限事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="95b568d37697e91c43083791ab88b985fcd3f888" translate="yes" xml:space="preserve">
          <source>The event mask for selecting hierarchy events.</source>
          <target state="translated">用于选择分级事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="618b82a70beb576ee4875f5097359a278d101abb" translate="yes" xml:space="preserve">
          <source>The event mask for selecting input method events.</source>
          <target state="translated">用于选择输入法事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="d9a77162c6707a8a87f9742abf7019ec4f3de966" translate="yes" xml:space="preserve">
          <source>The event mask for selecting invocation events.</source>
          <target state="translated">用于选择调用事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="50a46c48f92a8902f2db7051788a964120df69b9" translate="yes" xml:space="preserve">
          <source>The event mask for selecting item events.</source>
          <target state="translated">用于选择项目事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="b158d22c61f92f3ea3859cf9b84da72a61f627e2" translate="yes" xml:space="preserve">
          <source>The event mask for selecting key events.</source>
          <target state="translated">用于选择关键事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="9b2204c56d8c920ea81c853ad161b33986873ce6" translate="yes" xml:space="preserve">
          <source>The event mask for selecting mouse events.</source>
          <target state="translated">用于选择鼠标事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="3daadebe7d86d27ac261849cebba44c3c58604a8" translate="yes" xml:space="preserve">
          <source>The event mask for selecting mouse motion events.</source>
          <target state="translated">用于选择鼠标运动事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="143e7aab788b29b1897b3f9301e4a1bd57c7b1a0" translate="yes" xml:space="preserve">
          <source>The event mask for selecting mouse wheel events.</source>
          <target state="translated">用于选择鼠标滚轮事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="7303f9dfdb43b99bc4a8b24183aafd56bedd921d" translate="yes" xml:space="preserve">
          <source>The event mask for selecting paint events.</source>
          <target state="translated">用于选择涂料事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="6393b80ca81908852dcb4fe7b0b6a84bc70bc0dc" translate="yes" xml:space="preserve">
          <source>The event mask for selecting text events.</source>
          <target state="translated">用于选择文本事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="e5374359f6883c4e32a6c33c303b2252932cffe6" translate="yes" xml:space="preserve">
          <source>The event mask for selecting window events.</source>
          <target state="translated">用于选择窗口事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="87aa3994fe1dbeca3fe3cef28257f680aaf7a10a" translate="yes" xml:space="preserve">
          <source>The event mask for selecting window focus events.</source>
          <target state="translated">用于选择窗口焦点事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="a89cabea541857d15e82c9a9b6d50b110bb619a7" translate="yes" xml:space="preserve">
          <source>The event mask for selecting window state events.</source>
          <target state="translated">用于选择窗口状态事件的事件掩码。</target>
        </trans-unit>
        <trans-unit id="0724b71d607877d8b379f2ccb49adf32cafd5611" translate="yes" xml:space="preserve">
          <source>The event masks defined in this class are needed by Component subclasses which are using Component.enableEvents() to select for event types not selected by registered listeners. If a listener is registered on a component, the appropriate event mask is already set internally by the component.</source>
          <target state="translated">该类中定义的事件掩码是Component子类所需要的,这些子类使用Component.enableEvents()来选择未被注册的监听器选择的事件类型。如果在组件上注册了一个监听器,组件内部已经设置了相应的事件掩码。</target>
        </trans-unit>
        <trans-unit id="d34d828cba8da1b4111d6f70690a234a819abfb3" translate="yes" xml:space="preserve">
          <source>The event property may be &quot;qualified&quot; with an arbitrary number of property prefixes delimited with the &quot;.&quot; character. The &quot;qualifying&quot; names that appear before the &quot;.&quot; characters are taken as the names of properties that should be applied, left-most first, to the event object.</source>
          <target state="translated">事件属性可以用任意数量的用&quot;.&quot;字符分隔的属性前缀来 &quot;限定&quot;。出现在&quot;.&quot;字符之前的 &quot;限定 &quot;名称被认为是应该应用于事件对象的属性名称,最左边的是。</target>
        </trans-unit>
        <trans-unit id="f559f796a4abfc896af3dfc6be310d8b091505bc" translate="yes" xml:space="preserve">
          <source>The event source: the &lt;code&gt;EventContext&lt;/code&gt; which fired this event.</source>
          <target state="translated">事件源： &lt;code&gt;EventContext&lt;/code&gt; 此事件的EventContext。</target>
        </trans-unit>
        <trans-unit id="b3c9fd95961b86943e1f2aa4dbff83d13cbf36e7" translate="yes" xml:space="preserve">
          <source>The event that the exception was created for.</source>
          <target state="translated">异常创建的事件。</target>
        </trans-unit>
        <trans-unit id="ee5e29fb93f9c21916d767a675ad47355b1d6a37" translate="yes" xml:space="preserve">
          <source>The event type indicating a changed insertion point in input method text.</source>
          <target state="translated">表示输入法文本中插入点发生变化的事件类型。</target>
        </trans-unit>
        <trans-unit id="b0f553322903980cd0149eaf7aaaa4e359a525f7" translate="yes" xml:space="preserve">
          <source>The event type indicating a changed insertion point in input method text. This event is generated by input methods while processing input if only the caret changed.</source>
          <target state="translated">表示输入法文本中插入点改变的事件类型。在处理输入时,如果只有插入点发生了变化,输入法就会产生该事件。</target>
        </trans-unit>
        <trans-unit id="ee63f479a327b468d252de6237f7cf6fd4de4477" translate="yes" xml:space="preserve">
          <source>The event type indicating changed input method text.</source>
          <target state="translated">表示更改输入法文本的事件类型。</target>
        </trans-unit>
        <trans-unit id="5ee78817480980dd147e27ae0d69b8619d8d9a89" translate="yes" xml:space="preserve">
          <source>The event type indicating changed input method text. This event is generated by input methods while processing input.</source>
          <target state="translated">表示输入法文本变更的事件类型。该事件由输入法在处理输入时产生。</target>
        </trans-unit>
        <trans-unit id="b7d703d953f82fc64328567ded4065357410b7d7" translate="yes" xml:space="preserve">
          <source>The event type.</source>
          <target state="translated">事件类型:</target>
        </trans-unit>
        <trans-unit id="3469a61b89e3ba596d3849895eab6680d98a5750" translate="yes" xml:space="preserve">
          <source>The event's id.</source>
          <target state="translated">事件的id。</target>
        </trans-unit>
        <trans-unit id="a8494d802d092d1ca50afc82a84da40bd6c4d3ac" translate="yes" xml:space="preserve">
          <source>The events in the lexical handler apply to the entire document, not just to the document element, and all lexical handler events must appear between the content handler's startDocument and endDocument events.</source>
          <target state="translated">词汇处理程序中的事件适用于整个文档,而不仅仅是文档元素,而且所有词汇处理程序事件必须出现在内容处理程序的startDocument和endDocument事件之间。</target>
        </trans-unit>
        <trans-unit id="8c1be1e79b4b77d5ca8b28fc3b594a4c65ed6faa" translate="yes" xml:space="preserve">
          <source>The events that are grouped in an EventSet are restricted in the following ways:</source>
          <target state="translated">在一个EventSet中分组的事件有以下限制。</target>
        </trans-unit>
        <trans-unit id="801bb999f2915842503297d7a55e5337855dcb13" translate="yes" xml:space="preserve">
          <source>The exact behavior is as follows. Parse the full set of fields and determine the effective chronology using the last chronology if it appears more than once. Then convert the base date to the effective chronology. Then extract the specified field from the chronology-specific base date and use it to determine the &lt;code&gt;baseValue&lt;/code&gt; used below.</source>
          <target state="translated">确切的行为如下。解析完整的字段集，并使用最后一个年代表（如果出现多次）确定有效年代表。然后将基准日期转换为有效年表。然后从按时间顺序排列的基准日期中提取指定的字段，并使用它来确定下面使用的 &lt;code&gt;baseValue&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="630cc010a102155b8411df8b412a09f2a3535533" translate="yes" xml:space="preserve">
          <source>The exact behavior of calling this function varies on a component-by-component and L&amp;amp;F-by-L&amp;amp;F basis.</source>
          <target state="translated">调用此函数的确切行为因组件和L＆F-L＆F的不同而异。</target>
        </trans-unit>
        <trans-unit id="c12e27171aa51bd9aa8f7f961c2ff8b5eca35700" translate="yes" xml:space="preserve">
          <source>The exact behavior of monitors is detailed in the &lt;a href=&quot;#spec&quot;&gt;JMX Specification&lt;/a&gt;. What follows is a summary.</source>
          <target state="translated">监视器的确切行为在&lt;a href=&quot;#spec&quot;&gt;JMX规范&lt;/a&gt;中进行了详细说明。以下是摘要。</target>
        </trans-unit>
        <trans-unit id="f5996b274c754ff765916b69a1116e38e763f760" translate="yes" xml:space="preserve">
          <source>The exact behavior of this method is vendor specific. In particular implementations may detect conditions that indicate dependence on other work such as an open transaction. It is recommended though not required that implementations throw a &lt;code&gt;SQLException&lt;/code&gt; if there is an active transaction and &lt;code&gt;endRequest&lt;/code&gt; is called.</source>
          <target state="translated">此方法的确切行为是特定于供应商的。在特定实施方式中，可以检测指示对诸如公开交易之类的其他工作的依赖性的条件。如果存在活动事务并 &lt;code&gt;endRequest&lt;/code&gt; ，建议（尽管并非必须）建议实现不引发 &lt;code&gt;SQLException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0adcbf7915efe7e852f0a0f70973b55eb8f3dfe0" translate="yes" xml:space="preserve">
          <source>The exact calling sequence is up to the layout functionality of the parent view (if the view has any children). The view may collect the preferences of the children prior to determining what it will give each child, or it might iteratively update the children one at a time.</source>
          <target state="translated">确切的调用顺序取决于父视图的布局功能(如果该视图有任何子视图)。视图可能会先收集子代的偏好,然后再决定给每个子代什么,也可能会迭代地每次更新一个子代。</target>
        </trans-unit>
        <trans-unit id="85903011b61cd586781b00fd60c60fc1c4171c96" translate="yes" xml:space="preserve">
          <source>The exact definition of hidden is platform or provider dependent. On UNIX for example a file is considered to be hidden if its name begins with a period character ('.'). On Windows a file is considered hidden if the DOS &lt;a href=&quot;attribute/dosfileattributes#isHidden()&quot;&gt;&lt;code&gt;hidden&lt;/code&gt;&lt;/a&gt; attribute is set.</source>
          <target state="translated">隐藏的确切定义取决于平台或提供程序。例如，在UNIX上，如果文件名以句点字符（'。'）开头，则认为该文件是隐藏的。在Windows上，如果设置了DOS &lt;a href=&quot;attribute/dosfileattributes#isHidden()&quot;&gt; &lt;code&gt;hidden&lt;/code&gt; &lt;/a&gt;属性，则该文件被视为隐藏文件。</target>
        </trans-unit>
        <trans-unit id="b44a7e8297a7f234948e4b10e76ca799709f23e4" translate="yes" xml:space="preserve">
          <source>The exact definitions of a byte stream and a character stream are binding dependent.</source>
          <target state="translated">字节流和字符流的确切定义取决于绑定。</target>
        </trans-unit>
        <trans-unit id="bd471b56699ef39010fba9b749ad14cd54415b7d" translate="yes" xml:space="preserve">
          <source>The exact details of the representation are unspecified and subject to change, but the following may be regarded as typical:</source>
          <target state="translated">表述的具体细节没有具体说明,可能会有变化,但以下内容可视为典型:</target>
        </trans-unit>
        <trans-unit id="d66df7228668613a58111f2895d7f4a5daf80cea" translate="yes" xml:space="preserve">
          <source>The exact form of a &lt;code&gt;file:&lt;/code&gt; URI is system-dependent, hence the transformation performed by this constructor is also system-dependent.</source>
          <target state="translated">&lt;code&gt;file:&lt;/code&gt; 的确切形式： URI与系统有关，因此此构造函数执行的转换也与系统有关。</target>
        </trans-unit>
        <trans-unit id="f662fbb86a38df169afc1048c172f82e4e4f193b" translate="yes" xml:space="preserve">
          <source>The exact form of the URI is file system provider dependent. In the case of the default provider, the URI scheme is &lt;code&gt;&quot;file&quot;&lt;/code&gt; and the given URI has a non-empty path component, and undefined query, and fragment components. The resulting &lt;code&gt;Path&lt;/code&gt; is associated with the default &lt;a href=&quot;../filesystems#getDefault()&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;&lt;code&gt;FileSystem&lt;/code&gt;.</source>
          <target state="translated">URI的确切形式取决于文件系统提供程序。在默认提供程序的情况下，URI方案为 &lt;code&gt;&quot;file&quot;&lt;/code&gt; ，并且给定的URI具有非空路径组件，未定义的查询和片段组件。结果 &lt;code&gt;Path&lt;/code&gt; 与默认的&lt;a href=&quot;../filesystems#getDefault()&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt; &lt;code&gt;FileSystem&lt;/code&gt; 相关联。</target>
        </trans-unit>
        <trans-unit id="dc981df5951ebbd2d225b7d4ed612eca36ff7515" translate="yes" xml:space="preserve">
          <source>The exact form of the URI is file system provider dependent. In the case of the default provider, the URI scheme is &lt;code&gt;&quot;file&quot;&lt;/code&gt; and the given URI has a non-empty path component, and undefined query, and fragment components. The resulting &lt;code&gt;Path&lt;/code&gt; is associated with the default &lt;a href=&quot;../filesystems#getDefault--&quot;&gt;&lt;code&gt;default&lt;/code&gt;&lt;/a&gt;&lt;code&gt;FileSystem&lt;/code&gt;.</source>
          <target state="translated">URI的确切形式取决于文件系统提供程序。在默认提供程序的情况下，URI方案是 &lt;code&gt;&quot;file&quot;&lt;/code&gt; ，并且给定的URI具有非空路径组件，未定义的查询和片段组件。结果 &lt;code&gt;Path&lt;/code&gt; 与默认的&lt;a href=&quot;../filesystems#getDefault--&quot;&gt; &lt;code&gt;default&lt;/code&gt; &lt;/a&gt; &lt;code&gt;FileSystem&lt;/code&gt; 相关联。</target>
        </trans-unit>
        <trans-unit id="9697a2a14d97c5e708bf64a93aac8e3b81e327df" translate="yes" xml:space="preserve">
          <source>The exact form of the URI is system-dependent. If it can be determined that the file denoted by this abstract pathname is a directory, then the resulting URI will end with a slash.</source>
          <target state="translated">URI的确切形式取决于系统。如果可以确定这个抽象路径名所表示的文件是一个目录,那么产生的URI将以斜线结束。</target>
        </trans-unit>
        <trans-unit id="9aa800104b8645f432b1c0777e913b6648da24d1" translate="yes" xml:space="preserve">
          <source>The exact meaning and format of the version is provider specific. The version must follow lexicographical order, thus the returned map will be order from the oldest known rules to the newest available rules. The default 'TZDB' group uses version numbering consisting of the year followed by a letter, such as '2009e' or '2012f'.</source>
          <target state="translated">版本的确切含义和格式取决于提供者。版本必须遵循词法顺序,因此返回的地图将按照从最古老的已知规则到最新的可用规则的顺序排列。默认的'TZDB'组使用由年份和字母组成的版本号,如'2009e'或'2012f'。</target>
        </trans-unit>
        <trans-unit id="202e6f1d0220247616c834f1fe78276d90a9f0ce" translate="yes" xml:space="preserve">
          <source>The exact naming patterns for Standard MBeans are detailed in the &lt;a href=&quot;#spec&quot;&gt;JMX Specification&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#spec&quot;&gt;JMX规范&lt;/a&gt;中详细介绍了标准MBean的确切命名模式。</target>
        </trans-unit>
        <trans-unit id="25d2a903e4f369778a39675882ed8ca3dfabde11" translate="yes" xml:space="preserve">
          <source>The exact operation of the &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; instance depends on the &lt;code&gt;Lock&lt;/code&gt; implementation and must be documented by that implementation.</source>
          <target state="translated">&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;实例的确切操作取决于 &lt;code&gt;Lock&lt;/code&gt; 实现，并且必须由该实现记录。</target>
        </trans-unit>
        <trans-unit id="ad308ddfc514de8e0c7d95c6e03d21d0eec88e24" translate="yes" xml:space="preserve">
          <source>The exact semantics of the returned &lt;a href=&quot;schema&quot;&gt;&lt;code&gt;Schema&lt;/code&gt;&lt;/a&gt; object depend on the schema language for which this &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; is created.</source>
          <target state="translated">返回的&lt;a href=&quot;schema&quot;&gt; &lt;code&gt;Schema&lt;/code&gt; &lt;/a&gt;对象的确切语义取决于为其创建此&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;的模式语言。</target>
        </trans-unit>
        <trans-unit id="5b0d4d6e7aa50a3ce0bc0196f6c80877208e0249" translate="yes" xml:space="preserve">
          <source>The exact semantics of this socket options are system dependent. In particular, it is system dependent whether the loopback applies to multicast datagrams sent from the socket or received by the socket. For &lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt;&lt;code&gt;IPv6&lt;/code&gt;&lt;/a&gt; sockets then it is system dependent whether the option also applies to multicast datagrams sent to IPv4 addresses.</source>
          <target state="translated">此套接字选项的确切语义取决于系统。特别地，环回是否适用于从套接字发送或由套接字接收的多播数据报，这取决于系统。对于&lt;a href=&quot;standardprotocolfamily#INET6&quot;&gt; &lt;code&gt;IPv6&lt;/code&gt; &lt;/a&gt;套接字，该选项是否还适用于发送到IPv4地址的多播数据报，取决于系统。</target>
        </trans-unit>
        <trans-unit id="dcf3b498256a8390df6c831306b8777539da56b0" translate="yes" xml:space="preserve">
          <source>The exact set of locations searched depends on the implementation of the Java runtime environment.</source>
          <target state="translated">搜索的具体位置集取决于Java运行时环境的实现。</target>
        </trans-unit>
        <trans-unit id="5c806ff52a09110c8d9bf29d349a44f6e490013e" translate="yes" xml:space="preserve">
          <source>The example above creates a simple HttpServer which uses the calling application thread to invoke the handle() method for incoming http requests directed to port 8000, and to the path /applications/myapp/.</source>
          <target state="translated">上面的例子创建了一个简单的HttpServer,它使用调用的应用程序线程调用handle()方法来处理指向8000端口和路径/applications/myapp/的http请求。</target>
        </trans-unit>
        <trans-unit id="ed24ee1b6649fd578f53eb49dfd544b8310ea439" translate="yes" xml:space="preserve">
          <source>The example above implements a simple range predicate. Note, that implementations should but are not required to provide &lt;code&gt;String&lt;/code&gt; and integer index based constructors to provide for JDBC RowSet Implementation applications that use both column identification conventions.</source>
          <target state="translated">上面的示例实现了一个简单的范围谓词。请注意，实现程序应该但不是必需提供基于 &lt;code&gt;String&lt;/code&gt; 和整数索引的构造函数，以提供使用两种列标识约定的JDBC RowSet实现应用程序。</target>
        </trans-unit>
        <trans-unit id="86d5f50a60c75d2a382d582e096f5124b4eb83d9" translate="yes" xml:space="preserve">
          <source>The example above shows only one form of address. An address for the RMI Connector can take several forms, as detailed in the documentation for the package &lt;code&gt;&lt;a href=&quot;../../../../java.management.rmi/javax/management/remote/rmi/package-summary&quot;&gt;&lt;code&gt;javax.management.remote.rmi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">上面的示例仅显示一种地址形式。RMI连接器的地址可以采用多种形式，如包 &lt;code&gt;&lt;a href=&quot;../../../../java.management.rmi/javax/management/remote/rmi/package-summary&quot;&gt;&lt;code&gt;javax.management.remote.rmi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 的文档中所述。</target>
        </trans-unit>
        <trans-unit id="a46638a46aa36be6870c59328abd975a302ed5d9" translate="yes" xml:space="preserve">
          <source>The example above shows only one form of address. An address for the RMI Connector can take several forms, as detailed in the documentation for the package &lt;code&gt;&lt;a href=&quot;rmi/package-summary&quot;&gt;&lt;code&gt;javax.management.remote.rmi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">上面的示例仅显示一种地址形式。RMI连接器的地址可以采用多种形式，如包 &lt;code&gt;&lt;a href=&quot;rmi/package-summary&quot;&gt;&lt;code&gt;javax.management.remote.rmi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 的文档中所述。</target>
        </trans-unit>
        <trans-unit id="6725c0acd0e06ab0756f998f95be7afe68e98f51" translate="yes" xml:space="preserve">
          <source>The example can be achieved by using the following categories:</source>
          <target state="translated">本例可以通过以下类别来实现。</target>
        </trans-unit>
        <trans-unit id="73fb8e3e2f0b010b1c0fb1ec4369809e065e53da" translate="yes" xml:space="preserve">
          <source>The example code presented below demonstrates the usage of the &lt;code&gt;GSSContext&lt;/code&gt; interface for the initiating peer. Different operations on the &lt;code&gt;GSSContext&lt;/code&gt; object are presented, including: object instantiation, setting of desired flags, context establishment, query of actual context flags, per-message operations on application data, and finally context deletion.</source>
          <target state="translated">下面提供的示例代码演示了 &lt;code&gt;GSSContext&lt;/code&gt; 接口用于发起对等方的用法。提出了对 &lt;code&gt;GSSContext&lt;/code&gt; 对象的不同操作，包括：对象实例化，所需标​​志的设置，上下文建立，实际上下文标志的查询，对应用程序数据的每个消息的操作以及最后的上下文删除。</target>
        </trans-unit>
        <trans-unit id="a07bc1a32762aa38814256dfd667aaaa6b754e9e" translate="yes" xml:space="preserve">
          <source>The exception (and its subclasses) requested with &lt;a href=&quot;eventrequestmanager#createExceptionRequest(com.sun.jdi.ReferenceType,boolean,boolean)&quot;&gt;&lt;code&gt;EventRequestManager.createExceptionRequest(com.sun.jdi.ReferenceType, boolean, boolean)&lt;/code&gt;&lt;/a&gt;, or null if, as by default, all exceptions are requested.</source>
          <target state="translated">使用&lt;a href=&quot;eventrequestmanager#createExceptionRequest(com.sun.jdi.ReferenceType,boolean,boolean)&quot;&gt; &lt;code&gt;EventRequestManager.createExceptionRequest(com.sun.jdi.ReferenceType, boolean, boolean)&lt;/code&gt; &lt;/a&gt;）请求的异常（及其子类），如果默认情况下请求所有异常，则为null。</target>
        </trans-unit>
        <trans-unit id="d8a972011740df1b54be01476c1a301cf0eb9b3c" translate="yes" xml:space="preserve">
          <source>The exception class handles errors that may happen while processing or using a catalog.</source>
          <target state="translated">异常类处理处理或使用目录时可能发生的错误。</target>
        </trans-unit>
        <trans-unit id="cf256aa92da408eb634bac9c48df3a1edf45330c" translate="yes" xml:space="preserve">
          <source>The exception handler for this stream. Will return the default exception listener if this has not explicitly been set.</source>
          <target state="translated">这个流的异常处理程序。如果没有明确设置,将返回默认的异常监听器。</target>
        </trans-unit>
        <trans-unit id="2aa040dbff462a04d3abbb5593e1fb08753604d8" translate="yes" xml:space="preserve">
          <source>The exception handler for this stream; Will return the default exception listener if this has not explicitly been set.</source>
          <target state="translated">该流的异常处理程序;如果没有明确设置,将返回默认的异常监听器。</target>
        </trans-unit>
        <trans-unit id="3725f62226b7f5164a5c53cb1c5db24d41640d24" translate="yes" xml:space="preserve">
          <source>The exception that was thrown.</source>
          <target state="translated">抛出的异常。</target>
        </trans-unit>
        <trans-unit id="4f5c2015856d130d3a003b24c3086bc7f659cbf4" translate="yes" xml:space="preserve">
          <source>The exception thrown when an agent cannot be loaded into the target Java virtual machine.</source>
          <target state="translated">当无法将代理加载到目标Java虚拟机中时引发的异常。</target>
        </trans-unit>
        <trans-unit id="3caa56518c9b9f7e9abaaa9e8e781579d3371af4" translate="yes" xml:space="preserve">
          <source>The exception thrown when an agent fails to initialize in the target Java virtual machine.</source>
          <target state="translated">当代理未能在目标Java虚拟机中初始化时引发的异常。</target>
        </trans-unit>
        <trans-unit id="1b74aaa2703470e90f28d9b9ca620765332c9fec" translate="yes" xml:space="preserve">
          <source>The executable is represented as when viewed as a method (or constructor or initializer) of some reference type. If that reference type is parameterized, then its actual type arguments are substituted into any types returned by the methods of this interface.</source>
          <target state="translated">可执行文件被表示为某个引用类型的方法(或构造函数或初始化器)。如果该参考类型被参数化了,那么它的实际类型参数就会被替换成这个接口的方法所返回的任何类型。</target>
        </trans-unit>
        <trans-unit id="eb539585405c8e823f90d2f746e91e61574086c1" translate="yes" xml:space="preserve">
          <source>The executable pathname may contain only the name of the executable without the full path information. It is undecideable whether white space separates different arguments or is part of a single argument.</source>
          <target state="translated">可执行文件的路径名可以只包含可执行文件的名称,而不包含完整的路径信息。不能确定空白是否分隔不同的参数,也不能确定是否是一个参数的一部分。</target>
        </trans-unit>
        <trans-unit id="f27b0cda8d8e73fd383b388aa8d859be3858d613" translate="yes" xml:space="preserve">
          <source>The execution of the cleaning action is performed by a thread associated with the cleaner. All exceptions thrown by the cleaning action are ignored. The cleaner and other cleaning actions are not affected by exceptions in a cleaning action. The thread runs until all registered cleaning actions have completed and the cleaner itself is reclaimed by the garbage collector.</source>
          <target state="translated">清理动作的执行是由一个与清理器相关联的线程来完成的。清理动作抛出的所有异常都会被忽略。清理器和其他清理动作不受清理动作中的异常影响。该线程一直运行到所有注册的清洁动作完成,并且清洁器本身被垃圾收集器回收为止。</target>
        </trans-unit>
        <trans-unit id="d29a50e79da812a685fcf8e4148c18068c2c4497" translate="yes" xml:space="preserve">
          <source>The execution status of tasks may be queried at several levels of detail: &lt;a href=&quot;forkjointask#isDone--&quot;&gt;&lt;code&gt;isDone()&lt;/code&gt;&lt;/a&gt; is true if a task completed in any way (including the case where a task was cancelled without executing); &lt;a href=&quot;forkjointask#isCompletedNormally--&quot;&gt;&lt;code&gt;isCompletedNormally()&lt;/code&gt;&lt;/a&gt; is true if a task completed without cancellation or encountering an exception; &lt;a href=&quot;forkjointask#isCancelled--&quot;&gt;&lt;code&gt;isCancelled()&lt;/code&gt;&lt;/a&gt; is true if the task was cancelled (in which case &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; returns a &lt;a href=&quot;cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;); and &lt;a href=&quot;forkjointask#isCompletedAbnormally--&quot;&gt;&lt;code&gt;isCompletedAbnormally()&lt;/code&gt;&lt;/a&gt; is true if a task was either cancelled or encountered an exception, in which case &lt;a href=&quot;forkjointask#getException--&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; will return either the encountered exception or &lt;a href=&quot;cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以从多个详细级别查询任务的执行状态：如果任务以任何方式完成（包括取消任务而未执行的情况&lt;a href=&quot;forkjointask#isDone--&quot;&gt; &lt;code&gt;isDone()&lt;/code&gt; &lt;/a&gt;则isDone（）为true；否则，为false。如果未完成任务而没有取消或遇到异常，则&lt;a href=&quot;forkjointask#isCompletedNormally--&quot;&gt; &lt;code&gt;isCompletedNormally()&lt;/code&gt; &lt;/a&gt;为true；如果任务被取消，则&lt;a href=&quot;forkjointask#isCancelled--&quot;&gt; &lt;code&gt;isCancelled()&lt;/code&gt; &lt;/a&gt;为true（在这种情况下，&lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;返回&lt;a href=&quot;cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; &lt;/a&gt;）；和&lt;a href=&quot;forkjointask#isCompletedAbnormally--&quot;&gt; &lt;code&gt;isCompletedAbnormally()&lt;/code&gt; &lt;/a&gt;如果任务已取消或遇到异常，在这种情况下是真的&lt;a href=&quot;forkjointask#getException--&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;将返回在遇到异常或&lt;a href=&quot;cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ca944f0e12c04260f851c499a103b46e2f78c38" translate="yes" xml:space="preserve">
          <source>The execution status of tasks may be queried at several levels of detail: &lt;a href=&quot;future#isDone()&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt; is true if a task completed in any way (including the case where a task was cancelled without executing); &lt;a href=&quot;#isCompletedNormally()&quot;&gt;&lt;code&gt;isCompletedNormally()&lt;/code&gt;&lt;/a&gt; is true if a task completed without cancellation or encountering an exception; &lt;a href=&quot;future#isCancelled()&quot;&gt;&lt;code&gt;Future.isCancelled()&lt;/code&gt;&lt;/a&gt; is true if the task was cancelled (in which case &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; returns a &lt;a href=&quot;cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;); and &lt;a href=&quot;#isCompletedAbnormally()&quot;&gt;&lt;code&gt;isCompletedAbnormally()&lt;/code&gt;&lt;/a&gt; is true if a task was either cancelled or encountered an exception, in which case &lt;a href=&quot;#getException()&quot;&gt;&lt;code&gt;getException()&lt;/code&gt;&lt;/a&gt; will return either the encountered exception or &lt;a href=&quot;cancellationexception&quot;&gt;&lt;code&gt;CancellationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以从多个详细级别查询任务的执行状态：如果任务以任何方式完成（包括取消任务而未执行的情况&lt;a href=&quot;future#isDone()&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt;则Future.isDone（）为true；否则，返回false。如果任务没有取消就完成或遇到异常，则&lt;a href=&quot;#isCompletedNormally()&quot;&gt; &lt;code&gt;isCompletedNormally()&lt;/code&gt; &lt;/a&gt;为true；否则，为false。如果任务被取消，则&lt;a href=&quot;future#isCancelled()&quot;&gt; &lt;code&gt;Future.isCancelled()&lt;/code&gt; &lt;/a&gt;为true（在这种情况下，&lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;返回&lt;a href=&quot;cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; &lt;/a&gt;）；和&lt;a href=&quot;#isCompletedAbnormally()&quot;&gt; &lt;code&gt;isCompletedAbnormally()&lt;/code&gt; &lt;/a&gt;如果任务已取消或遇到异常，在这种情况下是真的&lt;a href=&quot;#getException()&quot;&gt; &lt;code&gt;getException()&lt;/code&gt; &lt;/a&gt;将返回在遇到异常或&lt;a href=&quot;cancellationexception&quot;&gt; &lt;code&gt;CancellationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61ee783ae0a4dbc146b63cabe4edc1f1f21887c6" translate="yes" xml:space="preserve">
          <source>The executor is intended to be used exclusively by the resulting asynchronous channel group. Termination of the group results in the orderly &lt;a href=&quot;../../util/concurrent/executorservice#shutdown()&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; of the executor service. Shutting down the executor service by other means results in unspecified behavior.</source>
          <target state="translated">执行程序旨在由结果异步通道组专用。组的终止导致执行程序服务的有序&lt;a href=&quot;../../util/concurrent/executorservice#shutdown()&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;。通过其他方式关闭执行程序服务会导致未指定的行为。</target>
        </trans-unit>
        <trans-unit id="f4d9dd131f37a7f42a4bcff42d9a1446d224c987" translate="yes" xml:space="preserve">
          <source>The executor is intended to be used exclusively by the resulting asynchronous channel group. Termination of the group results in the orderly &lt;a href=&quot;../../util/concurrent/executorservice#shutdown--&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; of the executor service. Shutting down the executor service by other means results in unspecified behavior.</source>
          <target state="translated">执行程序旨在由结果异步通道组专用。组的终止导致有序&lt;a href=&quot;../../util/concurrent/executorservice#shutdown--&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;执行程序服务。通过其他方式关闭执行程序服务会导致未指定的行为。</target>
        </trans-unit>
        <trans-unit id="0915fb17fd9a3deff60262d6dbbc9333b72ef7a6" translate="yes" xml:space="preserve">
          <source>The executor terminates, also resulting in task cancellation.</source>
          <target state="translated">执行者终止,也会导致任务取消。</target>
        </trans-unit>
        <trans-unit id="73d17b75ffdd10e82284de19837faa1af9e8f3a5" translate="yes" xml:space="preserve">
          <source>The existing exception will be embedded in the new one, and its message will become the default message for the SAXException.</source>
          <target state="translated">现有的异常将被嵌入到新的异常中,其消息将成为SAXException的默认消息。</target>
        </trans-unit>
        <trans-unit id="6ab63fc8bf60cc8bbffa4c2deb5037bbfee50797" translate="yes" xml:space="preserve">
          <source>The existing exception will be embedded in the new one, but the new exception will have its own message.</source>
          <target state="translated">现有的异常将被嵌入到新的异常中,但新的异常将有自己的消息。</target>
        </trans-unit>
        <trans-unit id="637065bc8425d8a004b128e7401327923a1d4e4a" translate="yes" xml:space="preserve">
          <source>The exit application default window close operation.</source>
          <target state="translated">退出应用程序默认窗口关闭操作。</target>
        </trans-unit>
        <trans-unit id="dedf5604849e0a8d9f2e022a91d3d232a9319d36" translate="yes" xml:space="preserve">
          <source>The exit application default window close operation. Attempting to set this on Windows that support this, such as &lt;code&gt;JFrame&lt;/code&gt;, may throw a &lt;code&gt;SecurityException&lt;/code&gt; based on the &lt;code&gt;SecurityManager&lt;/code&gt;. It is recommended you only use this in an application.</source>
          <target state="translated">退出应用程序默认窗口关闭操作。尝试设置在Windows操作系统上支持此，如 &lt;code&gt;JFrame&lt;/code&gt; 中，可以抛出 &lt;code&gt;SecurityException&lt;/code&gt; 基础上， &lt;code&gt;SecurityManager&lt;/code&gt; 。建议您仅在应用程序中使用它。</target>
        </trans-unit>
        <trans-unit id="6b915efb7873bd4164652f10dbaeaabeafe4c12a" translate="yes" xml:space="preserve">
          <source>The expanded icon.</source>
          <target state="translated">扩大的图标。</target>
        </trans-unit>
        <trans-unit id="a2eb29e8b9fad3392d8398feee094f4bb641bc31" translate="yes" xml:space="preserve">
          <source>The expectation is that an instance of the &lt;code&gt;DOMImplementationLS&lt;/code&gt; interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;DOMImplementation&lt;/code&gt; interface or, if the &lt;code&gt;Document&lt;/code&gt; supports the feature &lt;code&gt;&quot;Core&quot;&lt;/code&gt; version &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; defined in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt;] , by using the method &lt;code&gt;DOMImplementation.getFeature&lt;/code&gt; with parameter values &lt;code&gt;&quot;LS&quot;&lt;/code&gt; (or &lt;code&gt;&quot;LS-Async&quot;&lt;/code&gt;) and &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; (respectively).</source>
          <target state="translated">期望的是，的一个实例 &lt;code&gt;DOMImplementationLS&lt;/code&gt; 接口可以通过使用结合特异性铸造上的一个实例的方法获得 &lt;code&gt;DOMImplementation&lt;/code&gt; 接口，或者如果 &lt;code&gt;Document&lt;/code&gt; 支持特征 &lt;code&gt;&quot;Core&quot;&lt;/code&gt; 版本 &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; 定义在[ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM级别3核心&lt;/a&gt;] ，方法是使用 &lt;code&gt;DOMImplementation.getFeature&lt;/code&gt; 方法，分别使用参数值 &lt;code&gt;&quot;LS&quot;&lt;/code&gt; （或 &lt;code&gt;&quot;LS-Async&quot;&lt;/code&gt; ）和 &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b95150a7f4614bb2e61318b82bec3d2bd902d6cd" translate="yes" xml:space="preserve">
          <source>The expectation is that an instance of the &lt;code&gt;DOMImplementationLS&lt;/code&gt; interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;DOMImplementation&lt;/code&gt; interface or, if the &lt;code&gt;Document&lt;/code&gt; supports the feature &lt;code&gt;&quot;Core&quot;&lt;/code&gt; version &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; defined in [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt;] , by using the method &lt;code&gt;DOMImplementation.getFeature&lt;/code&gt; with parameter values &lt;code&gt;&quot;LS&quot;&lt;/code&gt; (or &lt;code&gt;&quot;LS-Async&quot;&lt;/code&gt;) and &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; (respectively).</source>
          <target state="translated">期望的是，的一个实例 &lt;code&gt;DOMImplementationLS&lt;/code&gt; 接口可以通过使用结合特异性铸造上的一个实例的方法获得 &lt;code&gt;DOMImplementation&lt;/code&gt; 接口，或者如果 &lt;code&gt;Document&lt;/code&gt; 支持特征 &lt;code&gt;&quot;Core&quot;&lt;/code&gt; 版本 &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; 定义在[ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM级别3核心&lt;/a&gt;] ，方法是使用 &lt;code&gt;DOMImplementation.getFeature&lt;/code&gt; 方法，分别使用参数值 &lt;code&gt;&quot;LS&quot;&lt;/code&gt; （或 &lt;code&gt;&quot;LS-Async&quot;&lt;/code&gt; ）和 &lt;code&gt;&quot;3.0&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="113d39c71bb5eb793a0b83db2058fe276921d9eb" translate="yes" xml:space="preserve">
          <source>The expectation is that an instance of the &lt;code&gt;DocumentCSS&lt;/code&gt; interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;Document&lt;/code&gt; interface.</source>
          <target state="translated">期望的是，的一个实例 &lt;code&gt;DocumentCSS&lt;/code&gt; 接口可以通过使用结合特异性铸造上的一个实例的方法获得 &lt;code&gt;Document&lt;/code&gt; 的界面。</target>
        </trans-unit>
        <trans-unit id="a95fbb190d5638fb3b30583cc67f264f46846fca" translate="yes" xml:space="preserve">
          <source>The expectation is that an instance of the &lt;code&gt;ViewCSS&lt;/code&gt; interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;AbstractView&lt;/code&gt; interface.</source>
          <target state="translated">期望可以通过在 &lt;code&gt;AbstractView&lt;/code&gt; 接口的实例上使用特定于绑定的转换方法来获得 &lt;code&gt;ViewCSS&lt;/code&gt; 接口的实例。</target>
        </trans-unit>
        <trans-unit id="2da0bfb56bb5ec3dd2ac18e35db3bfea4f467380" translate="yes" xml:space="preserve">
          <source>The expiration affects only the bundle loading process by the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory method. That is, if the factory method finds a resource bundle in the cache that has expired, the factory method calls the &lt;a href=&quot;#needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)&quot;&gt;&lt;code&gt;needsReload&lt;/code&gt;&lt;/a&gt; method to determine whether the resource bundle needs to be reloaded. If &lt;code&gt;needsReload&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, the cached resource bundle instance is removed from the cache. Otherwise, the instance stays in the cache, updated with the new TTL value returned by this method.</source>
          <target state="translated">到期仅影响 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 工厂方法的捆绑包加载过程。也就是说，如果factory方法在缓存中找到已过期的资源束，则factory方法将调用&lt;a href=&quot;#needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)&quot;&gt; &lt;code&gt;needsReload&lt;/code&gt; &lt;/a&gt;方法来确定是否需要重新加载该资源束。如果 &lt;code&gt;needsReload&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; ，则从缓存中删除缓存的资源包实例。否则，实例将保留在缓存中，并使用此方法返回的新TTL值进行更新。</target>
        </trans-unit>
        <trans-unit id="d9d8f0bcf70d559439cda5ca1964e2a9c53e1f14" translate="yes" xml:space="preserve">
          <source>The expiration affects only the bundle loading process by the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory method. That is, if the factory method finds a resource bundle in the cache that has expired, the factory method calls the &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt;&lt;code&gt;needsReload&lt;/code&gt;&lt;/a&gt; method to determine whether the resource bundle needs to be reloaded. If &lt;code&gt;needsReload&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, the cached resource bundle instance is removed from the cache. Otherwise, the instance stays in the cache, updated with the new TTL value returned by this method.</source>
          <target state="translated">到期仅影响 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 工厂方法的捆绑包加载过程。也就是说，如果factory方法在缓存中找到已过期的资源包，则factory方法将调用&lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt; &lt;code&gt;needsReload&lt;/code&gt; &lt;/a&gt;方法来确定是否需要重新加载该资源包。如果 &lt;code&gt;needsReload&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; ，则从缓存中删除缓存的资源包实例。否则，实例将保留在缓存中，并使用此方法返回的新TTL值进行更新。</target>
        </trans-unit>
        <trans-unit id="683879150a40c61e38bdd0eaf4e437759304d62b" translate="yes" xml:space="preserve">
          <source>The explicit purpose of this variation on the &lt;code&gt;createFont(int, File)&lt;/code&gt; method is to support font sources which represent a TrueType/OpenType font collection and be able to return all individual fonts in that collection. Consequently this method will throw &lt;code&gt;FontFormatException&lt;/code&gt; if the data source does not contain at least one TrueType/OpenType font. The same exception will also be thrown if any of the fonts in the collection does not contain the required font tables.</source>
          <target state="translated">在 &lt;code&gt;createFont(int, File)&lt;/code&gt; 方法上进行此更改的明确目的是支持表示TrueType / OpenType字体集合的字体源，并能够返回该集合中的所有单个字体。因此，如果数据源不包含至少一种TrueType / OpenType字体，则此方法将引发 &lt;code&gt;FontFormatException&lt;/code&gt; 。如果集合中的任何字体不包含必需的字体表，也将引发相同的异常。</target>
        </trans-unit>
        <trans-unit id="2f7fb41a871d246f4fdde7907583f21de6ee40fc" translate="yes" xml:space="preserve">
          <source>The explicit purpose of this variation on the &lt;code&gt;createFont(int, InputStream)&lt;/code&gt; method is to support font sources which represent a TrueType/OpenType font collection and be able to return all individual fonts in that collection. Consequently this method will throw &lt;code&gt;FontFormatException&lt;/code&gt; if the data source does not contain at least one TrueType/OpenType font. The same exception will also be thrown if any of the fonts in the collection does not contain the required font tables.</source>
          <target state="translated">在 &lt;code&gt;createFont(int, InputStream)&lt;/code&gt; 方法上进行此更改的明确目的是支持表示TrueType / OpenType字体集合的字体源，并能够返回该集合中的所有单个字体。因此，如果数据源不包含至少一种TrueType / OpenType字体，则此方法将引发 &lt;code&gt;FontFormatException&lt;/code&gt; 。如果集合中的任何字体不包含必需的字体表，也将引发相同的异常。</target>
        </trans-unit>
        <trans-unit id="2dc14daed0248ca40fd5504121c75a52196ab986" translate="yes" xml:space="preserve">
          <source>The explicit state of a matcher includes the start and end indices of the most recent successful match. It also includes the start and end indices of the input subsequence captured by each &lt;a href=&quot;pattern#cg&quot;&gt;capturing group&lt;/a&gt; in the pattern as well as a total count of such subsequences. As a convenience, methods are also provided for returning these captured subsequences in string form.</source>
          <target state="translated">匹配器的显式状态包括最近成功匹配的开始和结束索引。它还包括模式中每个&lt;a href=&quot;pattern#cg&quot;&gt;捕获组&lt;/a&gt;捕获的输入子序列的开始索引和结束索引，以及此类子序列的总数。为了方便起见，还提供了用于以字符串形式返回这些捕获的子序列的方法。</target>
        </trans-unit>
        <trans-unit id="e7b30369bd27defe750e02c533a376297b7fac15" translate="yes" xml:space="preserve">
          <source>The explicit state of a matcher is initially undefined; attempting to query any part of it before a successful match will cause an &lt;a href=&quot;../../lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; to be thrown. The explicit state of a matcher is recomputed by every match operation.</source>
          <target state="translated">匹配器的显式状态最初是不确定的。在成功匹配之前尝试查询它的任何部分都将引发&lt;a href=&quot;../../lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;。匹配器的显式状态由每个匹配操作重新计算。</target>
        </trans-unit>
        <trans-unit id="a3c7c1344d3645ede9619e20180ea6a536e509b1" translate="yes" xml:space="preserve">
          <source>The exponent consists of the character &lt;code&gt;'e'&lt;/code&gt; (&lt;code&gt;'\u0065'&lt;/code&gt;) or &lt;code&gt;'E'&lt;/code&gt; (&lt;code&gt;'\u0045'&lt;/code&gt;) followed by one or more decimal digits. The value of the exponent must lie between -&lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;../lang/integer#MIN_VALUE&quot;&gt;&lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;&lt;/a&gt;+1) and &lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;, inclusive.</source>
          <target state="translated">指数由字符 &lt;code&gt;'e'&lt;/code&gt; （ &lt;code&gt;'\u0065'&lt;/code&gt; ）或 &lt;code&gt;'E'&lt;/code&gt; （ &lt;code&gt;'\u0045'&lt;/code&gt; ）后面跟一个或多个十进制数字组成。指数的值必须介于&lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;../lang/integer#MIN_VALUE&quot;&gt; &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; &lt;/a&gt; +1）和&lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 之间&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="22cb2e2834e039174e52d5280adb7e843a000950" translate="yes" xml:space="preserve">
          <source>The export was implicitly declared in the source of the module declaration.</source>
          <target state="translated">在模块声明的源头中隐式声明了出口。</target>
        </trans-unit>
        <trans-unit id="bdb505c12ab3c537f37654a8d6eb008f47b8391c" translate="yes" xml:space="preserve">
          <source>The export was not explicitly or implicitly declared in the source of the module declaration.</source>
          <target state="translated">在模块声明的源头中没有明确或隐含地声明出口。</target>
        </trans-unit>
        <trans-unit id="ba1bbb5344514fa0674e6756fb7c32a4079b14c0" translate="yes" xml:space="preserve">
          <source>The exported constant &lt;a href=&quot;#DPI&quot;&gt;&lt;code&gt;DPI&lt;/code&gt;&lt;/a&gt; is actually the conversion factor by which to multiply a value in dpi to get the value in dphi. Likewise, the exported constant &lt;a href=&quot;#DPCM&quot;&gt;&lt;code&gt;DPCM&lt;/code&gt;&lt;/a&gt; is the conversion factor by which to multiply a value in dpcm to get the value in dphi. A client can specify a resolution value in units other than dpi or dpcm by supplying its own conversion factor. However, since the internal units of dphi was chosen with supporting only the external units of dpi and dpcm in mind, there is no guarantee that the conversion factor for the client's units will be an exact integer. If the conversion factor isn't an exact integer, resolution values in the client's units won't be stored precisely.</source>
          <target state="translated">导出的常数&lt;a href=&quot;#DPI&quot;&gt; &lt;code&gt;DPI&lt;/code&gt; &lt;/a&gt;实际上是转换因子，通过该因子可以乘以dpi中的值以获得dphi中的值。同样，导出的常数&lt;a href=&quot;#DPCM&quot;&gt; &lt;code&gt;DPCM&lt;/code&gt; &lt;/a&gt;是将dpcm中的值乘以dphi中的值所得到的转换因子。客户可以通过提供自己的转换因子以dpi或dpcm以外的单位指定分辨率值。但是，由于选择dphi的内部单位时只考虑了dpi和dpcm的外部单位，因此不能保证客户单位的转换因子将是一个精确的整数。如果转换因子不是精确的整数，则将不会精确存储以客户单位为单位的分辨率值。</target>
        </trans-unit>
        <trans-unit id="d9e0ab1b5a3db4ff1da6ce513058b99030c385ab" translate="yes" xml:space="preserve">
          <source>The exported constant &lt;a href=&quot;#INCH&quot;&gt;&lt;code&gt;INCH&lt;/code&gt;&lt;/a&gt; is actually the conversion factor by which to multiply a value in inches to get the value in &amp;micro;m. Likewise, the exported constant &lt;a href=&quot;#MM&quot;&gt;&lt;code&gt;MM&lt;/code&gt;&lt;/a&gt; is the conversion factor by which to multiply a value in mm to get the value in &amp;micro;m. A client can specify a resolution value in units other than inches or mm by supplying its own conversion factor. However, since the internal units of &amp;micro;m was chosen with supporting only the external units of inch and mm in mind, there is no guarantee that the conversion factor for the client's units will be an exact integer. If the conversion factor isn't an exact integer, resolution values in the client's units won't be stored precisely.</source>
          <target state="translated">导出的常数&lt;a href=&quot;#INCH&quot;&gt; &lt;code&gt;INCH&lt;/code&gt; &lt;/a&gt;实际上是转换因子，通过该转换因子可以将以英寸为单位的值乘以以&amp;micro;m为单位的值。同样，导出的常数&lt;a href=&quot;#MM&quot;&gt; &lt;code&gt;MM&lt;/code&gt; &lt;/a&gt;是转换因子，通过该转换因子可以将以mm为单位的值乘以以&amp;micro;m为单位的值。客户可以通过提供自己的转换因子来指定分辨率值，而不是以英寸或毫米为单位。但是，由于选择的内部单位为&amp;micro;m，因此仅考虑了英寸和毫米的外部单位，因此不能保证客户单位的转换系数将是一个精确的整数。如果转换因子不是精确的整数，则将不会精确存储以客户单位为单位的分辨率值。</target>
        </trans-unit>
        <trans-unit id="f0533f2a29f52d331ec56f16f61c10c53b5897f4" translate="yes" xml:space="preserve">
          <source>The exported constant &lt;a href=&quot;resolutionsyntax#DPI&quot;&gt;&lt;code&gt;DPI&lt;/code&gt;&lt;/a&gt; is actually the conversion factor by which to multiply a value in dpi to get the value in dphi. Likewise, the exported constant &lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt;&lt;code&gt;DPCM&lt;/code&gt;&lt;/a&gt; is the conversion factor by which to multiply a value in dpcm to get the value in dphi. A client can specify a resolution value in units other than dpi or dpcm by supplying its own conversion factor. However, since the internal units of dphi was chosen with supporting only the external units of dpi and dpcm in mind, there is no guarantee that the conversion factor for the client's units will be an exact integer. If the conversion factor isn't an exact integer, resolution values in the client's units won't be stored precisely.</source>
          <target state="translated">导出的常数&lt;a href=&quot;resolutionsyntax#DPI&quot;&gt; &lt;code&gt;DPI&lt;/code&gt; &lt;/a&gt;实际上是转换因子，通过该因子可以将dpi中的值乘以dphi中的值。同样，导出的常数&lt;a href=&quot;resolutionsyntax#DPCM&quot;&gt; &lt;code&gt;DPCM&lt;/code&gt; &lt;/a&gt;是将dpcm中的值乘以dphi中的值所得到的转换因子。客户可以通过提供自己的转换因子以dpi或dpcm以外的单位指定分辨率值。但是，由于选择dphi的内部单位时只考虑了dpi和dpcm的外部单位，因此不能保证客户单位的转换因子将是一个精确的整数。如果转换因子不是精确的整数，则不会以客户单位精确地存储分辨率值。</target>
        </trans-unit>
        <trans-unit id="6ffeca453b85f8c0c2115aaee678b47fadf06c73" translate="yes" xml:space="preserve">
          <source>The exported constant &lt;a href=&quot;size2dsyntax#INCH&quot;&gt;&lt;code&gt;INCH&lt;/code&gt;&lt;/a&gt; is actually the conversion factor by which to multiply a value in inches to get the value in &amp;micro;m. Likewise, the exported constant &lt;a href=&quot;size2dsyntax#MM&quot;&gt;&lt;code&gt;MM&lt;/code&gt;&lt;/a&gt; is the conversion factor by which to multiply a value in mm to get the value in &amp;micro;m. A client can specify a resolution value in units other than inches or mm by supplying its own conversion factor. However, since the internal units of &amp;micro;m was chosen with supporting only the external units of inch and mm in mind, there is no guarantee that the conversion factor for the client's units will be an exact integer. If the conversion factor isn't an exact integer, resolution values in the client's units won't be stored precisely.</source>
          <target state="translated">导出的常数&lt;a href=&quot;size2dsyntax#INCH&quot;&gt; &lt;code&gt;INCH&lt;/code&gt; &lt;/a&gt;实际上是转换因子，通过该转换因子可以将以英寸为单位的值乘以以&amp;micro;m为单位的值。同样，导出的常数&lt;a href=&quot;size2dsyntax#MM&quot;&gt; &lt;code&gt;MM&lt;/code&gt; &lt;/a&gt;是转换系数，通过该转换系数可以将以mm为单位的值乘以以&amp;micro;m为单位的值。客户可以通过提供自己的转换系数以英寸或毫米以外的单位指定分辨率值。但是，由于选择&amp;micro;m的内部单位时仅考虑了英寸和mm的外部单位，因此不能保证客户单位的转换系数将是一个精确的整数。如果转换因子不是精确的整数，则不会以客户单位精确地存储分辨率值。</target>
        </trans-unit>
        <trans-unit id="bd5f3309ccc2057ce1e6f32e3aa2d5bd529b30d6" translate="yes" xml:space="preserve">
          <source>The exported name is useful when used in large access control lists where the overhead of creating a &lt;code&gt;GSSName&lt;/code&gt; object on each name and invoking the equals method on each name from the ACL may be prohibitive.</source>
          <target state="translated">当在大型访问控制列表中使用导出的名称时，导出的名称非常有用，在这种情况下，在每个名称上创建 &lt;code&gt;GSSName&lt;/code&gt; 对象以及从ACL调用每个名称上的equals方法的开销可能会令人望而却步。</target>
        </trans-unit>
        <trans-unit id="bc59d340ea1d8edf392f9599ad9de2d1cd0c7ff0" translate="yes" xml:space="preserve">
          <source>The expression &lt;code&gt;/foo/bar&lt;/code&gt; is an example of a location path. While XPath location paths resemble Unix-style file system paths, an important distinction is that XPath expressions return &lt;em&gt;all&lt;/em&gt; nodes that match the expression. Thus, all three &lt;code&gt;&amp;lt;bar&amp;gt;&lt;/code&gt; elements in the following document would be selected by the &lt;code&gt;/foo/bar&lt;/code&gt; expression:</source>
          <target state="translated">表达式 &lt;code&gt;/foo/bar&lt;/code&gt; 是位置路径的示例。尽管XPath位置路径类似于Unix样式的文件系统路径，但是一个重要的区别是XPath表达式返回与该表达式匹配的&lt;em&gt;所有&lt;/em&gt;节点。因此，以下文档中的所有三个 &lt;code&gt;&amp;lt;bar&amp;gt;&lt;/code&gt; 元素将由 &lt;code&gt;/foo/bar&lt;/code&gt; 表达式选择：</target>
        </trans-unit>
        <trans-unit id="9983f8becda32e3c76ff137c9b312e802e0349f6" translate="yes" xml:space="preserve">
          <source>The expression is currently either a simple named reference to a variable (&lt;a href=&quot;snippet.subkind#VAR_VALUE_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.VAR_VALUE_SUBKIND&lt;/code&gt;&lt;/a&gt;) or an assignment (both of which have natural referencing names) -- see &lt;a href=&quot;snippet.subkind&quot;&gt;&lt;code&gt;Snippet.SubKind&lt;/code&gt;&lt;/a&gt; to differentiate. All other expression forms (operators, method calls, ...) generate a scratch variable and so are instead of the VAR Kind.</source>
          <target state="translated">该表达式当前是对变量的简单命名引用（&lt;a href=&quot;snippet.subkind#VAR_VALUE_SUBKIND&quot;&gt; &lt;code&gt;Snippet.SubKind.VAR_VALUE_SUBKIND&lt;/code&gt; &lt;/a&gt;）或赋值（二者均具有自然的引用名称）-请参阅&lt;a href=&quot;snippet.subkind&quot;&gt; &lt;code&gt;Snippet.SubKind&lt;/code&gt; &lt;/a&gt;进行区分。所有其他表达式形式（运算符，方法调用等）都会生成临时变量，因此会代替VAR Kind。</target>
        </trans-unit>
        <trans-unit id="354a30d629ef1248aee3a6abac0f26fa957a6318" translate="yes" xml:space="preserve">
          <source>The extended GSSContext interface for supporting additional functionalities not defined by &lt;code&gt;org.ietf.jgss.GSSContext&lt;/code&gt;, such as querying context-specific attributes.</source>
          <target state="translated">扩展的GSSContext接口，用于支持 &lt;code&gt;org.ietf.jgss.GSSContext&lt;/code&gt; 未定义的其他功能，例如查询特定于上下文的属性。</target>
        </trans-unit>
        <trans-unit id="92f2e0e53cb6455d4da2e76e3e0fd81fe5c51084" translate="yes" xml:space="preserve">
          <source>The extended GSSCredential interface for supporting additional functionalities not defined by &lt;code&gt;org.ietf.jgss.GSSCredential&lt;/code&gt;.</source>
          <target state="translated">扩展的GSSCredential接口，用于支持 &lt;code&gt;org.ietf.jgss.GSSCredential&lt;/code&gt; 未定义的其他功能。</target>
        </trans-unit>
        <trans-unit id="f797bd4b5d3803bccb2bf4443971ca848ad473e5" translate="yes" xml:space="preserve">
          <source>The extension which (by convention) is normally used for this kind of file object.</source>
          <target state="translated">(按惯例)通常用于此类文件对象的扩展名。</target>
        </trans-unit>
        <trans-unit id="c526e4b628135ef20bb3ec78aeb7857b7e29b6f2" translate="yes" xml:space="preserve">
          <source>The extension which (by convention) is normally used for this kind of file object. If no convention exists, the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) is used.</source>
          <target state="translated">扩展名（按照惯例）通常用于这种文件对象。如果不存在约定，则使用空字符串（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b7077b0dc29af6cf86699b7e028c9503e4db51e1" translate="yes" xml:space="preserve">
          <source>The extension, or null if this locale defines no extension for the specified key.</source>
          <target state="translated">扩展名,如果这个locale没有为指定的键定义扩展名,则为空。</target>
        </trans-unit>
        <trans-unit id="5a1dab9e41a5beec5f05c63e6ecb9a3afbdcbb0e" translate="yes" xml:space="preserve">
          <source>The extensions defined for X.509 v3 &lt;a href=&quot;x509certificate&quot;&gt;&lt;code&gt;Certificates&lt;/code&gt;&lt;/a&gt; and v2 &lt;a href=&quot;x509crl&quot;&gt;&lt;code&gt;CRLs&lt;/code&gt;&lt;/a&gt; (Certificate Revocation Lists) provide methods for associating additional attributes with users or public keys, for managing the certification hierarchy, and for managing CRL distribution. The X.509 extensions format also allows communities to define private extensions to carry information unique to those communities.</source>
          <target state="translated">为X.509 v3 &lt;a href=&quot;x509certificate&quot;&gt; &lt;code&gt;Certificates&lt;/code&gt; &lt;/a&gt;和v2 &lt;a href=&quot;x509crl&quot;&gt; &lt;code&gt;CRLs&lt;/code&gt; &lt;/a&gt;（证书吊销列表）定义的扩展提供了用于将其他属性与用户或公共密钥相关联，用于管理证书层次结构以及用于管理CRL分发的方法。X.509扩展格式还允许社区定义专用扩展，以承载那些社区专有的信息。</target>
        </trans-unit>
        <trans-unit id="ef70034c532ebffee8e66aca3f214a22c5e40a15" translate="yes" xml:space="preserve">
          <source>The facility that a disconnected &lt;code&gt;RowSet&lt;/code&gt; object calls on to populate itself with rows of data.</source>
          <target state="translated">断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象调用的功能是用数据行填充自身。</target>
        </trans-unit>
        <trans-unit id="72202a3ad0c147eaa41c7897c87ffc243071ccbc" translate="yes" xml:space="preserve">
          <source>The facility that a disconnected &lt;code&gt;RowSet&lt;/code&gt; object calls on to populate itself with rows of data. A reader (an object implementing the &lt;code&gt;RowSetReader&lt;/code&gt; interface) may be registered with a &lt;code&gt;RowSet&lt;/code&gt; object that supports the reader/writer paradigm. When the &lt;code&gt;RowSet&lt;/code&gt; object's &lt;code&gt;execute&lt;/code&gt; method is called, it in turn calls the reader's &lt;code&gt;readData&lt;/code&gt; method.</source>
          <target state="translated">断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象调用的功能是用数据行填充自身。可以向支持读取器/写入器范例的 &lt;code&gt;RowSet&lt;/code&gt; 对象注册读取器（实现 &lt;code&gt;RowSetReader&lt;/code&gt; 接口的对象）。当调用 &lt;code&gt;RowSet&lt;/code&gt; 对象的 &lt;code&gt;execute&lt;/code&gt; 方法时，它又调用读取器的 &lt;code&gt;readData&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="0664d9fe950364ce2964d5f524212ff501587b8c" translate="yes" xml:space="preserve">
          <source>The fact that a client connection object is in this internal list does not prevent it from being garbage collected.</source>
          <target state="translated">客户端连接对象在这个内部列表中,并不妨碍它被垃圾回收。</target>
        </trans-unit>
        <trans-unit id="21ce72be6b52dbd64592f3385a8d86f3fe793972" translate="yes" xml:space="preserve">
          <source>The factory is used by the service provider to return controls that it reads from the LDAP protocol as specialized control classes. Without this mechanism, the provider would be returning controls that only contained data in BER encoded format.</source>
          <target state="translated">服务提供者使用工厂来返回它从LDAP协议中读取的控件,作为专门的控件类。如果没有这种机制,提供者将返回只包含BER编码格式数据的控件。</target>
        </trans-unit>
        <trans-unit id="35b84653a32f1a9f17fa155fd0e0418d7e8f354a" translate="yes" xml:space="preserve">
          <source>The factory methods limit access to ProcessHandles using the SecurityManager checking the &lt;a href=&quot;runtimepermission&quot;&gt;&lt;code&gt;RuntimePermission(&quot;manageProcess&quot;)&lt;/code&gt;&lt;/a&gt;. The ability to control processes is also restricted by the native system, ProcessHandle provides no more access to, or control over, the native process than would be allowed by a native application.</source>
          <target state="translated">工厂方法使用SecurityManager检查&lt;a href=&quot;runtimepermission&quot;&gt; &lt;code&gt;RuntimePermission(&quot;manageProcess&quot;)&lt;/code&gt; &lt;/a&gt;来限制对ProcessHandles的访问。控制进程的能力也受到本机系统的限制，ProcessHandle提供的对本机进程的访问或控制权不超过本机应用程序所允许的。</target>
        </trans-unit>
        <trans-unit id="e6c42fd94f3fbd0037101f65af16abb9630b8269" translate="yes" xml:space="preserve">
          <source>The factory methods on a &lt;code&gt;Lookup&lt;/code&gt; object correspond to all major use cases for methods, constructors, and fields. Each method handle created by a factory method is the functional equivalent of a particular &lt;em&gt;bytecode behavior&lt;/em&gt;. (Bytecode behaviors are described in section 5.4.3.5 of the Java Virtual Machine Specification.) Here is a summary of the correspondence between these factory methods and the behavior of the resulting method handles:</source>
          <target state="translated">&lt;code&gt;Lookup&lt;/code&gt; 对象上的工厂方法与方法，构造函数和字段的所有主要用例相对应。由工厂方法创建的每个方法句柄在功能上等同于特定&lt;em&gt;字节码行为&lt;/em&gt;。 （字节码行为在Java虚拟机规范的5.4.3.5节中进行了描述。）以下是这些工厂方法与所得方法句柄的行为之间的对应关系的摘要：</target>
        </trans-unit>
        <trans-unit id="b5a2c92a2eca28e67f326ce843048d8b7bd41378" translate="yes" xml:space="preserve">
          <source>The factory methods on a &lt;code&gt;Lookup&lt;/code&gt; object correspond to all major use cases for methods, constructors, and fields. Each method handle created by a factory method is the functional equivalent of a particular &lt;em&gt;bytecode behavior&lt;/em&gt;. (Bytecode behaviors are described in section 5.4.3.5 of the Java Virtual Machine Specification.) Here is a summary of the correspondence between these factory methods and the behavior the resulting method handles:</source>
          <target state="translated">&lt;code&gt;Lookup&lt;/code&gt; 对象上的工厂方法与方法，构造函数和字段的所有主要用例相对应。由工厂方法创建的每个方法句柄在功能上等同于特定&lt;em&gt;字节码行为&lt;/em&gt;。（字节码行为在Java虚拟机规范的5.4.3.5节中进行了描述。）以下是这些工厂方法与所得方法处理的行为之间的对应关系的摘要：</target>
        </trans-unit>
        <trans-unit id="3ad62b009c6a96813accb45070b9d93a7dd077f7" translate="yes" xml:space="preserve">
          <source>The factory methods on a &lt;code&gt;Lookup&lt;/code&gt; object correspond to all major use cases for methods, constructors, and fields. Each method handle created by a factory method is the functional equivalent of a particular &lt;em&gt;bytecode behavior&lt;/em&gt;. (Bytecode behaviors are described in section &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3.5&quot;&gt;5.4.3.5&lt;/a&gt; of the Java Virtual Machine Specification.) Here is a summary of the correspondence between these factory methods and the behavior of the resulting method handles:</source>
          <target state="translated">&lt;code&gt;Lookup&lt;/code&gt; 对象上的工厂方法与方法，构造函数和字段的所有主要用例相对应。由工厂方法创建的每个方法句柄在功能上等同于特定&lt;em&gt;字节码行为&lt;/em&gt;。（字节码行为在Java虚拟机规范的&lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3.5&quot;&gt;5.4.3.5&lt;/a&gt;节中进行了描述。）以下是这些工厂方法与所得方法句柄的行为之间的对应关系的摘要：</target>
        </trans-unit>
        <trans-unit id="3669df2b0d8feae5a747749ca77262d7e06c86a2" translate="yes" xml:space="preserve">
          <source>The family name of a font is font specific. Two fonts such as Helvetica Italic and Helvetica Bold have the same family name,</source>
          <target state="translated">字体的族名是针对字体而言的。两种字体如Helvetica Italic和Helvetica Bold具有相同的家族名称。</target>
        </trans-unit>
        <trans-unit id="af8935690a4466165d81f669e4a0337a589c7982" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; to expose a feature value but to be unable to change the current value.</source>
          <target state="translated">功能名称是任何完全限定的URI。&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;可能公开一个功能值，但无法更改当前值。</target>
        </trans-unit>
        <trans-unit id="e25f173633d1d3213d95f0ba8615c555662068fc" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; to recognize a feature name but temporarily be unable to return its value.</source>
          <target state="translated">功能名称是任何完全限定的URI。这是可能的一个&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; 可以&lt;/a&gt;识别功能名称，但暂时不能返回其值。</target>
        </trans-unit>
        <trans-unit id="0048d169a23d75a602733bc3c158bb3bb6facf07" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">功能名称是任何完全限定的URI。&lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt;有可能公开特征值，但无法更改当前值。某些功能值可能仅在特定上下文中（例如，验证之前，验证期间或验证之后）是不可变的或可变的。</target>
        </trans-unit>
        <trans-unit id="d91d67590ac33f4ffa2c013b9f240cf25685b1c4" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validator&quot;&gt;&lt;code&gt;Validator&lt;/code&gt;&lt;/a&gt; to recognize a feature name but temporarily be unable to return its value. Some feature values may be available only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">功能名称是任何完全限定的URI。&lt;a href=&quot;validator&quot;&gt; &lt;code&gt;Validator&lt;/code&gt; &lt;/a&gt;有可能识别功能名称，但暂时无法返回其值。某些功能值可能仅在特定上下文中可用，例如验证之前，验证期间或验证之后。</target>
        </trans-unit>
        <trans-unit id="949080a2f1cca3e0a76865e4f76dc667c938f1af" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for a &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt; to recognize a feature name but temporarily be unable to return its value. Some feature values may be available only in specific contexts, such as before, during, or after a validation.</source>
          <target state="translated">功能名称是任何完全限定的URI。这是可能的&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; 所&lt;/a&gt;识别功能名称，但暂时不能返回其值。某些功能值可能仅在特定上下文中可用，例如验证之前，验证期间或验证之后。</target>
        </trans-unit>
        <trans-unit id="bfc5e4c752e9cf392e8c989784b55f720c750e9b" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for an XMLReader to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a parse.</source>
          <target state="translated">特征名是任何完全限定的URI。XMLReader有可能暴露一个特征值,但无法改变当前的值。有些特征值可能是不可变的,或者只有在特定的情况下才可以变,比如在解析前、解析中或解析后。</target>
        </trans-unit>
        <trans-unit id="1ef42c41248d6e2857b1d6c2a1ffc761e5328ccf" translate="yes" xml:space="preserve">
          <source>The feature name is any fully-qualified URI. It is possible for an XMLReader to recognize a feature name but temporarily be unable to return its value. Some feature values may be available only in specific contexts, such as before, during, or after a parse. Also, some feature values may not be programmatically accessible. (In the case of an adapter for SAX1 &lt;a href=&quot;parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt;, there is no implementation-independent way to expose whether the underlying parser is performing validation, expanding external entities, and so forth.)</source>
          <target state="translated">功能名称是任何完全限定的URI。XMLReader可以识别功能名称，但暂时无法返回其值。某些功能值可能仅在特定的上下文中可用，例如在解析之前，期间或之后。同样，某些功能值可能无法通过编程方式访问。（在使用SAX1 &lt;a href=&quot;parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt;适配器的情况下，没有独立于实现的方式来公开基础解析器是否正在执行验证，扩展外部实体等。）</target>
        </trans-unit>
        <trans-unit id="b91218e70f871a17a2f6362660e1e868c721d3f4" translate="yes" xml:space="preserve">
          <source>The ffi ligature is not a distinct semantic character, and strictly speaking it shouldn't be in Unicode at all, but it was included for compatibility with existing character sets that already provided it. The Unicode standard identifies such characters by giving them &quot;compatibility&quot; decompositions into the corresponding semantic characters. When sorting and searching, you will often want to use these mappings.</source>
          <target state="translated">ffi连接符并不是一个独特的语义字符,严格来说,它根本就不应该出现在Unicode中,但它被包含在Unicode中是为了与已经提供了它的现有字符集兼容。Unicode标准通过给这些字符 &quot;兼容性 &quot;分解成相应的语义字符来识别这些字符。在进行排序和搜索时,你会经常想使用这些映射。</target>
        </trans-unit>
        <trans-unit id="fc1056366c58e729dc6afba4a88b156e84cb7c50" translate="yes" xml:space="preserve">
          <source>The field has a range that matches &lt;a href=&quot;../localdate#MAX&quot;&gt;&lt;code&gt;LocalDate.MAX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../localdate#MIN&quot;&gt;&lt;code&gt;LocalDate.MIN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该字段的范围与&lt;a href=&quot;../localdate#MAX&quot;&gt; &lt;code&gt;LocalDate.MAX&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../localdate#MIN&quot;&gt; &lt;code&gt;LocalDate.MIN&lt;/code&gt; &lt;/a&gt;匹配。</target>
        </trans-unit>
        <trans-unit id="712e6cc0a25fd23aff0938900316cf865ad97a3d" translate="yes" xml:space="preserve">
          <source>The field is set to the possibly unwrapped and widened new value.</source>
          <target state="translated">该字段被设置为可能是未包装和扩大的新值。</target>
        </trans-unit>
        <trans-unit id="ec741d1bc5da33c15fd4cf9fae30220bb200e38a" translate="yes" xml:space="preserve">
          <source>The field that represents the day-of-quarter.</source>
          <target state="translated">代表季度日的字段。</target>
        </trans-unit>
        <trans-unit id="8b7d9fb854224c991ea3360c6b4c23f03fd566dd" translate="yes" xml:space="preserve">
          <source>The field that represents the quarter-of-year.</source>
          <target state="translated">代表年度季度的领域。</target>
        </trans-unit>
        <trans-unit id="795dbdb11ae198b5c6c80f4f325863a9203509aa" translate="yes" xml:space="preserve">
          <source>The field that represents the week-based-year.</source>
          <target state="translated">表示以周为单位的年份的字段。</target>
        </trans-unit>
        <trans-unit id="b9b5cb4820b010459b1459912d80e5cb74d3e0ec" translate="yes" xml:space="preserve">
          <source>The field that represents the week-of-week-based-year.</source>
          <target state="translated">表示以周为单位的年份的字段。</target>
        </trans-unit>
        <trans-unit id="834baa107830e85ae99531915176dbb04eccdac0" translate="yes" xml:space="preserve">
          <source>The field to be reflected is determined by the algorithm that follows. Let C be the class or interface represented by this &lt;code&gt;Class&lt;/code&gt; object:</source>
          <target state="translated">要反射的场由以下算法确定。令C为该 &lt;code&gt;Class&lt;/code&gt; 对象表示的类或接口：</target>
        </trans-unit>
        <trans-unit id="11a83d8eda116d371253332d6166c5c806d645ad" translate="yes" xml:space="preserve">
          <source>The field to be reflected is determined by the algorithm that follows. Let C be the class or interface represented by this object:</source>
          <target state="translated">要反映的字段由下面的算法决定。让C成为这个对象所代表的类或接口。</target>
        </trans-unit>
        <trans-unit id="3065ed970efb34e44cb7669dd9013a7609717b99" translate="yes" xml:space="preserve">
          <source>The field value will be validated before it is set. If it is not valid, then an exception will be thrown. If the arrays are empty, then no change will take effect.</source>
          <target state="translated">字段值在设置之前会被验证。如果它无效,那么将抛出一个异常。如果数组为空,则不会产生任何变化。</target>
        </trans-unit>
        <trans-unit id="f4511f22417eeea0c45d403aa99ec6c4e5f493b0" translate="yes" xml:space="preserve">
          <source>The field value will be validated before it is set. If it is not valid, then an exception will be thrown. The meaning of validity is dependent on the descriptor implementation.</source>
          <target state="translated">字段值在设置之前会被验证。如果它不有效,那么将抛出一个异常。有效性的含义取决于描述符的实现。</target>
        </trans-unit>
        <trans-unit id="f4f3c25408da24ec64080897e774ca4ee83c6a8b" translate="yes" xml:space="preserve">
          <source>The field works using double dispatch. Client code calls methods on a date-time like &lt;code&gt;LocalDateTime&lt;/code&gt; which check if the field is a &lt;code&gt;ChronoField&lt;/code&gt;. If it is, then the date-time must handle it. Otherwise, the method call is re-dispatched to the matching method in this interface.</source>
          <target state="translated">该字段使用双重调度。客户端代码在日期时间上调用诸如 &lt;code&gt;LocalDateTime&lt;/code&gt; 之类的方法，该方法检查该字段是否为 &lt;code&gt;ChronoField&lt;/code&gt; 。如果是，则日期时间必须处理它。否则，方法调用将重新分配到此接口中的匹配方法。</target>
        </trans-unit>
        <trans-unit id="e4839ebe0ad3becd201658aabfeaad5b34a64e2c" translate="yes" xml:space="preserve">
          <source>The fields and methods of class &lt;code&gt;Character&lt;/code&gt; are defined in terms of character information from the Unicode Standard, specifically the</source>
          <target state="translated">&lt;code&gt;Character&lt;/code&gt; 类的字段和方法是根据Unicode标准中的字符信息定义的，特别是</target>
        </trans-unit>
        <trans-unit id="d2445e43410c56b93c9fa902256806bdd8ac4225" translate="yes" xml:space="preserve">
          <source>The fields are defined as follows:</source>
          <target state="translated">这些领域的定义如下:</target>
        </trans-unit>
        <trans-unit id="3950e6b64e221a1449f2c57aec2e0333531ef343" translate="yes" xml:space="preserve">
          <source>The fields are implemented relative to &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. The fields are supported, and can be queried and set if &lt;code&gt;EPOCH_DAY&lt;/code&gt; is available. The fields work with all chronologies.</source>
          <target state="translated">相对于&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt;实现这些字段。这些字段受支持，如果 &lt;code&gt;EPOCH_DAY&lt;/code&gt; 可用，则可以查询和设置这些字段。该字段适用于所有年代。</target>
        </trans-unit>
        <trans-unit id="416b3833cc7cce95a21e499f3289802c5a8cb7d0" translate="yes" xml:space="preserve">
          <source>The fields declared in this class may evolve over time, in line with the results of the &lt;a href=&quot;#values()&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; method. However, there is not necessarily a 1:1 correspondence between the fields and the singleton instances., The Japanese government may announce a new era and define its start date but not its official name. In this scenario, the singleton instance that represents the new era may return a name that is not stable until the official name is defined. Developers should exercise caution when relying on the name returned by any singleton instance that does not correspond to a public static final field.</source>
          <target state="translated">与&lt;a href=&quot;#values()&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt;方法的结果一致，此类中声明的字段可能会随着时间的推移而变化。但是，字段与单例实例之间不一定存在1：1的对应关系。日本政府可能会宣布一个新时代并定义其开始日期，而不是正式名称。在这种情况下，表示新纪元的单例实例可能会返回一个不稳定的名称，直到定义了正式名称为止。当依赖于任何与公共static final字段不对应的单例实例返回的名称时，开发人员应谨慎行事。</target>
        </trans-unit>
        <trans-unit id="199b733d0ffa6832d77eb936ddcc1d5a1518b3c2" translate="yes" xml:space="preserve">
          <source>The fields in the descriptor are defined, but not limited to, the following. Note that when the Type in this table is Number, a String that is the decimal representation of a Long can also be used.</source>
          <target state="translated">描述符中的字段定义如下,但不限于此。请注意,当本表中的类型为Number时,也可以使用作为Long的十进制表示的String。</target>
        </trans-unit>
        <trans-unit id="7aaadf5bb6f708c9bde8a8c259cf01d22980be49" translate="yes" xml:space="preserve">
          <source>The fields look-and-feel implementation manages the values of the minimum, maximum, and extent properties on the &lt;code&gt;BoundedRangeModel&lt;/code&gt;.</source>
          <target state="translated">字段外观实现管理 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 上的minimum，maximum和extent属性的值。</target>
        </trans-unit>
        <trans-unit id="099b596e3512e7c46df50b765ec430971ea0930b" translate="yes" xml:space="preserve">
          <source>The fifth and later elements of a version number are free for use by platform implementors, to identify implementor-specific patch releases.</source>
          <target state="translated">版本号的第五个及以后的元素是免费供平台实现者使用的,用于识别实现者特定的补丁版本。</target>
        </trans-unit>
        <trans-unit id="77a383d343c59d3896d5803d4ffc93f25fe7eded" translate="yes" xml:space="preserve">
          <source>The file MyResources_fr_CH.properties is never used because it is hidden by the MyResources_fr_CH.class. Likewise, MyResources.properties is also hidden by MyResources.class.</source>
          <target state="translated">MyResources_fr_CH.properties这个文件从来没有被使用过,因为它被MyResources_fr_CH.class隐藏了。同样,MyResources.properties也被MyResources.class隐藏。</target>
        </trans-unit>
        <trans-unit id="460768a160dbe254fd47bae9a1c6fbf466aa407e" translate="yes" xml:space="preserve">
          <source>The file and its description are available from the Unicode Consortium at:</source>
          <target state="translated">该文件及其说明可从Unicode联盟获得,网址:。</target>
        </trans-unit>
        <trans-unit id="f251bc6a4d2b0bde005fe4027e04e7ba955f80f7" translate="yes" xml:space="preserve">
          <source>The file attributes are retrieved from the file system as a &lt;em&gt;bulk operation&lt;/em&gt; by invoking the &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method. This class also defines the &lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method to update the file's time attributes.</source>
          <target state="translated">通过调用&lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;方法从文件系统中检索文件属性作为&lt;em&gt;批量操作&lt;/em&gt;。此类还定义了&lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; &lt;/a&gt;方法以更新文件的时间属性。</target>
        </trans-unit>
        <trans-unit id="d38047699bda15b24d821107e47230d44ea40f06" translate="yes" xml:space="preserve">
          <source>The file attributes are retrieved from the file system as a &lt;em&gt;bulk operation&lt;/em&gt; by invoking the &lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method. This class also defines the &lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method to update the file's time attributes.</source>
          <target state="translated">通过调用&lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;方法从文件系统中检索文件属性作为&lt;em&gt;批量操作&lt;/em&gt;。此类还定义&lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; &lt;/a&gt;方法以更新文件的时间属性。</target>
        </trans-unit>
        <trans-unit id="3d0ad957ceac44bd60f317f1b1648150ac44473f" translate="yes" xml:space="preserve">
          <source>The file channel, or &lt;code&gt;null&lt;/code&gt; if the file lock was not acquired by a file channel.</source>
          <target state="translated">文件通道；如果文件通道未获取文件锁，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="500deb1ea9502c9ecef51d1cffe190f21f116b2f" translate="yes" xml:space="preserve">
          <source>The file contents must not change between the time this object is constructed and the time of the last call to a read method.</source>
          <target state="translated">在这个对象被构造的时间和最后一次调用读取方法的时间之间,文件内容不能改变。</target>
        </trans-unit>
        <trans-unit id="3117d2550b74f219a5e4412223eb2945551e2f2b" translate="yes" xml:space="preserve">
          <source>The file contents should not be modified during the execution of the terminal stream operation. Otherwise, the result of the terminal stream operation is undefined.</source>
          <target state="translated">在执行终端流操作的过程中,不能修改文件的内容,否则,终端流操作的结果是未定义的。否则,终端流操作的结果将无法定义。</target>
        </trans-unit>
        <trans-unit id="6987d175ec15b9fcb76b79ad3971d92541e405c9" translate="yes" xml:space="preserve">
          <source>The file creation methods take a variable number of arguments to allow the &lt;em&gt;originating elements&lt;/em&gt; to be provided as hints to the tool infrastructure to better manage dependencies. The originating elements are the types or packages (representing &lt;code&gt;
 package-info&lt;/code&gt; files) or modules (representing &lt;code&gt;
 module-info&lt;/code&gt; files) which caused an annotation processor to attempt to create a new file. For example, if an annotation processor tries to create a source file, &lt;code&gt;
 GeneratedFromUserSource&lt;/code&gt;, in response to processing</source>
          <target state="translated">文件创建方法采用可变数量的参数，以允许将&lt;em&gt;原始元素&lt;/em&gt;作为提示提供给工具基础结构，以更好地管理依赖关系。原始元素是导致注释处理器尝试创建新文件的类型或程序包（代表 &lt;code&gt; package-info&lt;/code&gt; 文件）或模块（代表 &lt;code&gt; module-info&lt;/code&gt; 文件）。例如，如果注释处理器响应于处理尝试创建源文件 &lt;code&gt; GeneratedFromUserSource&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="6abc4cd51296b6f0da0c0a949b11937dfb0ddb48" translate="yes" xml:space="preserve">
          <source>The file creation methods take a variable number of arguments to allow the &lt;em&gt;originating elements&lt;/em&gt; to be provided as hints to the tool infrastructure to better manage dependencies. The originating elements are the types or packages (representing &lt;code&gt;package-info&lt;/code&gt; files) which caused an annotation processor to attempt to create a new file. For example, if an annotation processor tries to create a source file, &lt;code&gt;GeneratedFromUserSource&lt;/code&gt;, in response to processing</source>
          <target state="translated">文件创建方法采用可变数量的参数，以允许将&lt;em&gt;原始元素&lt;/em&gt;作为提示提供给工具基础结构，以更好地管理依赖关系。原始元素是导致注释处理器尝试创建新文件的类型或程序包（代表 &lt;code&gt;package-info&lt;/code&gt; 文件）。例如，如果注释处理器响应于处理尝试创建源文件 &lt;code&gt;GeneratedFromUserSource&lt;/code&gt; ，</target>
        </trans-unit>
        <trans-unit id="67561e9ae30efb52fd2ccb565fc1f4c64205ef9b" translate="yes" xml:space="preserve">
          <source>The file denoted by the returned abstract pathname did not exist before this method was invoked, and</source>
          <target state="translated">返回的抽象路径名所表示的文件在本方法被调用之前并不存在,而且</target>
        </trans-unit>
        <trans-unit id="9aa2ea757056f97f63f34c1ea5a82cce074962fc" translate="yes" xml:space="preserve">
          <source>The file descriptor object for this socket.</source>
          <target state="translated">该套接字的文件描述符对象。</target>
        </trans-unit>
        <trans-unit id="7314353b4cf774f72ba9ddad96690ede6bed41df" translate="yes" xml:space="preserve">
          <source>The file descriptor object.</source>
          <target state="translated">文件描述符对象。</target>
        </trans-unit>
        <trans-unit id="f09dc1410e94ff66898b33b377f334bb2824ec23" translate="yes" xml:space="preserve">
          <source>The file key returned by this method can only be guaranteed to be unique if the file system and files remain static. Whether a file system re-uses identifiers after a file is deleted is implementation dependent and therefore unspecified.</source>
          <target state="translated">只有在文件系统和文件保持静态的情况下,这个方法返回的文件密钥才能保证是唯一的。在文件被删除后,文件系统是否会重新使用标识符是取决于实施的,因此没有说明。</target>
        </trans-unit>
        <trans-unit id="f25f321f8eb0a82b7ff487834df19c31087676d0" translate="yes" xml:space="preserve">
          <source>The file manager returned by calling &lt;a href=&quot;documentationtool#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;&lt;code&gt;getStandardFileManager&lt;/code&gt;&lt;/a&gt; on this tool supports paths provided by any &lt;a href=&quot;../../../java.base/java/nio/file/filesystem&quot;&gt;filesystem&lt;/a&gt;.</source>
          <target state="translated">通过在此工具上调用&lt;a href=&quot;documentationtool#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt; &lt;code&gt;getStandardFileManager&lt;/code&gt; &lt;/a&gt;返回的文件管理器支持任何&lt;a href=&quot;../../../java.base/java/nio/file/filesystem&quot;&gt;文件系统&lt;/a&gt;提供的路径。</target>
        </trans-unit>
        <trans-unit id="7799300b539af42175bcd2d293282140270baea9" translate="yes" xml:space="preserve">
          <source>The file manager returned by calling &lt;a href=&quot;javacompiler#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;&lt;code&gt;getStandardFileManager&lt;/code&gt;&lt;/a&gt; on this compiler supports paths provided by any &lt;a href=&quot;../../../java.base/java/nio/file/filesystem&quot;&gt;filesystem&lt;/a&gt;.</source>
          <target state="translated">通过在此编译器上调用&lt;a href=&quot;javacompiler#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt; &lt;code&gt;getStandardFileManager&lt;/code&gt; &lt;/a&gt;返回的文件管理器支持任何&lt;a href=&quot;../../../java.base/java/nio/file/filesystem&quot;&gt;文件系统&lt;/a&gt;提供的路径。</target>
        </trans-unit>
        <trans-unit id="b7425c0f40a18828eac5ac2c682f75622122775e" translate="yes" xml:space="preserve">
          <source>The file manager which all methods are delegated to.</source>
          <target state="translated">所有方法都委托给的文件管理器。</target>
        </trans-unit>
        <trans-unit id="c8db30cdd7f6bac3afaba29ab13bca0e83da6504" translate="yes" xml:space="preserve">
          <source>The file name of the script or some other string describing the script source. May return some implementation-defined string such as</source>
          <target state="translated">脚本的文件名或其他描述脚本源的字符串。可以返回一些实现定义的字符串,如</target>
        </trans-unit>
        <trans-unit id="1bb2b9f1de9de831304e060cac7b16327f82123a" translate="yes" xml:space="preserve">
          <source>The file object which all methods are delegated to.</source>
          <target state="translated">所有方法委托给的文件对象。</target>
        </trans-unit>
        <trans-unit id="3877731ad7b42f0a5b1e4c1ebc66cdccdffe4475" translate="yes" xml:space="preserve">
          <source>The file owner and group owner attributes are not persisted, meaning they are not stored in the zip file. The &quot;&lt;code&gt;defaultOwner&lt;/code&gt;&quot; and &quot;&lt;code&gt;defaultGroup&lt;/code&gt;&quot; provider properties (listed below) can be used to configure the default values for these attributes. If these properties are not set then the file owner defaults to the owner of the zip file, and the group owner defaults to the zip file's group owner (or the file owner on platforms that don't support a group owner).</source>
          <target state="translated">文件所有者和组所有者属性不会保留，这意味着它们不会存储在zip文件中。&amp;ldquo; &lt;code&gt;defaultOwner&lt;/code&gt; &amp;rdquo;和&amp;ldquo; &lt;code&gt;defaultGroup&lt;/code&gt; &amp;rdquo;提供程序属性（下面列出）可用于配置这些属性的默认值。如果未设置这些属性，则文件所有者默认为zip文件的所有者，而组所有者默认为zip文件的组所有者（或在不支持组所有者的平台上为文件所有者）。</target>
        </trans-unit>
        <trans-unit id="3a806133f7b79e0318d4ff99608188522a38bce2" translate="yes" xml:space="preserve">
          <source>The file should contain a list of fully-qualified class names, one per line, of classes implementing the &lt;code&gt;java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; interface. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;\u0023&lt;/code&gt;); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">该文件应包含实现 &lt;code&gt;java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; 接口的类的标准类名列表，每行一个。每个名称周围的空格和制表符以及空白行将被忽略。注释字符为 &lt;code&gt;'#'&lt;/code&gt; （ &lt;code&gt;\u0023&lt;/code&gt; ）;在每一行中，第一个注释字符之后的所有字符都将被忽略。该文件必须使用UTF-8编码。</target>
        </trans-unit>
        <trans-unit id="0825f60097e94d1e85c49fd153a3b65272d6b95a" translate="yes" xml:space="preserve">
          <source>The file system</source>
          <target state="translated">文件系统</target>
        </trans-unit>
        <trans-unit id="892992d41ee2a7e3dd444630c84d3445a2903083" translate="yes" xml:space="preserve">
          <source>The filter is configured during the initialization of the &lt;code&gt;ObjectInputFilter.Config&lt;/code&gt; class. For example, by calling &lt;a href=&quot;#getSerialFilter()&quot;&gt;&lt;code&gt;Config.getSerialFilter&lt;/code&gt;&lt;/a&gt;. If the Java virtual machine is started with the system property &lt;code&gt;&lt;span id=&quot;jdk.serialFilter&quot;&gt;jdk.serialFilter&lt;/span&gt;&lt;/code&gt;, its value is used to configure the filter. If the system property is not defined, and the &lt;a href=&quot;../security/security&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;jdk.serialFilter&lt;/code&gt; is defined then it is used to configure the filter. Otherwise, the filter is not configured during initialization and can be set with &lt;a href=&quot;#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;Config.setSerialFilter&lt;/code&gt;&lt;/a&gt;. Setting the &lt;code&gt;jdk.serialFilter&lt;/code&gt; with &lt;a href=&quot;../lang/system#setProperty(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;System.setProperty&lt;/code&gt;&lt;/a&gt;&lt;em&gt;does not set the filter&lt;/em&gt;. The syntax for each property is the same as for the &lt;a href=&quot;#createFilter(java.lang.String)&quot;&gt;&lt;code&gt;createFilter&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">在 &lt;code&gt;ObjectInputFilter.Config&lt;/code&gt; 类的初始化期间配置过滤器。例如，通过调用&lt;a href=&quot;#getSerialFilter()&quot;&gt; &lt;code&gt;Config.getSerialFilter&lt;/code&gt; &lt;/a&gt;。如果Java虚拟机以系统属性 &lt;code&gt;&lt;span id=&quot;jdk.serialFilter&quot;&gt;jdk.serialFilter&lt;/span&gt;&lt;/code&gt; 启动，则其值将用于配置过滤器。如果未定义系统属性，并且定义了&lt;a href=&quot;../security/security&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;性属性 &lt;code&gt;jdk.serialFilter&lt;/code&gt; ，则将其用于配置过滤器。否则，将在初始化期间未配置过滤器，并且可以使用&lt;a href=&quot;#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;Config.setSerialFilter&lt;/code&gt; &lt;/a&gt;进行设置。使用&lt;a href=&quot;../lang/system#setProperty(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;System.setProperty&lt;/code&gt; &lt;/a&gt;设置 &lt;code&gt;jdk.serialFilter&lt;/code&gt; &lt;em&gt;不会设置过滤器&lt;/em&gt;&lt;em&gt;&lt;/em&gt;。每个属性的语法与&lt;a href=&quot;#createFilter(java.lang.String)&quot;&gt; &lt;code&gt;createFilter&lt;/code&gt; &lt;/a&gt;方法的语法相同。</target>
        </trans-unit>
        <trans-unit id="9a90e8cfc4e09b5ed06ec962ead13f62606cf4ed" translate="yes" xml:space="preserve">
          <source>The filter is configured during the initialization of the &lt;code&gt;ObjectInputFilter.Config&lt;/code&gt; class. For example, by calling &lt;a href=&quot;#getSerialFilter()&quot;&gt;&lt;code&gt;Config.getSerialFilter&lt;/code&gt;&lt;/a&gt;. If the system property &lt;code&gt;jdk.serialFilter&lt;/code&gt; is defined, it is used to configure the filter. If the system property is not defined, and the &lt;a href=&quot;../security/security&quot;&gt;&lt;code&gt;Security&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;jdk.serialFilter&lt;/code&gt; is defined then it is used to configure the filter. Otherwise, the filter is not configured during initialization. The syntax for each property is the same as for the &lt;a href=&quot;#createFilter(java.lang.String)&quot;&gt;&lt;code&gt;createFilter&lt;/code&gt;&lt;/a&gt; method. If a filter is not configured, it can be set with &lt;a href=&quot;#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;Config.setSerialFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在 &lt;code&gt;ObjectInputFilter.Config&lt;/code&gt; 类的初始化期间配置过滤器。例如，通过调用&lt;a href=&quot;#getSerialFilter()&quot;&gt; &lt;code&gt;Config.getSerialFilter&lt;/code&gt; &lt;/a&gt;。如果定义了系统属性 &lt;code&gt;jdk.serialFilter&lt;/code&gt; ，则将其用于配置过滤器。如果未定义系统属性，并且定义了&lt;a href=&quot;../security/security&quot;&gt; &lt;code&gt;Security&lt;/code&gt; &lt;/a&gt;性属性 &lt;code&gt;jdk.serialFilter&lt;/code&gt; ，则将其用于配置过滤器。否则，在初始化期间未配置过滤器。每个属性的语法与&lt;a href=&quot;#createFilter(java.lang.String)&quot;&gt; &lt;code&gt;createFilter&lt;/code&gt; &lt;/a&gt;方法的语法相同。如果未配置过滤器，则可以使用&lt;a href=&quot;#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;Config.setSerialFilter&lt;/code&gt; &lt;/a&gt;进行设置。</target>
        </trans-unit>
        <trans-unit id="ff4b58737685fb954d5e6efd0b5fae17d564182d" translate="yes" xml:space="preserve">
          <source>The filter is invoked after the operations requested by the &lt;code&gt;DOMConfiguration&lt;/code&gt; parameters have been applied. For example, CDATA sections won't be passed to the filter if &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-cdata-sections&quot;&gt;cdata-sections&lt;/a&gt;&quot; is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">在应用 &lt;code&gt;DOMConfiguration&lt;/code&gt; 参数请求的操作之后，将调用过滤器。例如，如果将&amp;ldquo; &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-cdata-sections&quot;&gt;cdata-sections&lt;/a&gt; &amp;rdquo;设置为 &lt;code&gt;false&lt;/code&gt; ，则不会将CDATA节传递到过滤器。</target>
        </trans-unit>
        <trans-unit id="aee74c092bc8041c2e7b9c7b125cf7d0d399124b" translate="yes" xml:space="preserve">
          <source>The filter is invoked after the operations requested by the &lt;code&gt;DOMConfiguration&lt;/code&gt; parameters have been applied. For example, if &quot;&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-validate&quot;&gt;validate&lt;/a&gt;&quot; is set to &lt;code&gt;true&lt;/code&gt;, the validation is done before invoking the filter.</source>
          <target state="translated">在应用 &lt;code&gt;DOMConfiguration&lt;/code&gt; 参数请求的操作之后，将调用过滤器。例如，如果将&amp;ldquo; &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#parameter-validate&quot;&gt;validate&lt;/a&gt; &amp;rdquo;设置为 &lt;code&gt;true&lt;/code&gt; ，则在调用过滤器之前完成验证。</target>
        </trans-unit>
        <trans-unit id="906ee1389ef5cd14a7ec03e188e600e544d2552c" translate="yes" xml:space="preserve">
          <source>The filter pattern must be in same format as used in &lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter.config#createFilter(java.lang.String)&quot;&gt;&lt;code&gt;ObjectInputFilter.Config.createFilter(java.lang.String)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">筛选器模式必须与&lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter.config#createFilter(java.lang.String)&quot;&gt; &lt;code&gt;ObjectInputFilter.Config.createFilter(java.lang.String)&lt;/code&gt; 中&lt;/a&gt;使用的格式相同。</target>
        </trans-unit>
        <trans-unit id="1ed7ce7533f8762abf456d783918b102ff8a2c23" translate="yes" xml:space="preserve">
          <source>The filter used to screen nodes.</source>
          <target state="translated">用于筛选节点的过滤器。</target>
        </trans-unit>
        <trans-unit id="ce369c494176a07dc8044cc958be4b24a28b2631" translate="yes" xml:space="preserve">
          <source>The filter will be called for any class found in the serialized stream sent to server by client, including all JMX defined classes (such as &lt;a href=&quot;../../../../../java.management/javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt;), all method parameters, and, if present in the stream, all classes transitively referred by the serial form of any deserialized object. The pattern must be in same format as used in &lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter.config#createFilter(java.lang.String)&quot;&gt;&lt;code&gt;ObjectInputFilter.Config.createFilter(java.lang.String)&lt;/code&gt;&lt;/a&gt;. It may define a white list of permitted classes, a black list of rejected classes, a maximum depth for the deserialized objects, etc.</source>
          <target state="translated">客户端将向客户端发送到服务器的序列化流中找到的任何类调用过滤器，包括所有JMX定义的类（例如&lt;a href=&quot;../../../../../java.management/javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;），所有方法参数，以及流中存在的所有类（由序列形式可传递地引用）任何反序列化的对象。该模式必须与&lt;a href=&quot;../../../../../java.base/java/io/objectinputfilter.config#createFilter(java.lang.String)&quot;&gt; &lt;code&gt;ObjectInputFilter.Config.createFilter(java.lang.String)&lt;/code&gt; 中&lt;/a&gt;使用的格式相同。它可以定义允许类的白名单，拒绝类的黑名单，反序列化对象的最大深度等。</target>
        </trans-unit>
        <trans-unit id="283ebc0cee047a651cef3bfafef961690ec56e62" translate="yes" xml:space="preserve">
          <source>The filter, when not &lt;code&gt;null&lt;/code&gt;, is invoked during &lt;a href=&quot;#readObject()&quot;&gt;&lt;code&gt;readObject&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#readUnshared()&quot;&gt;&lt;code&gt;readUnshared&lt;/code&gt;&lt;/a&gt; for each object (regular or class) in the stream. Strings are treated as primitives and do not invoke the filter. The filter is called for:</source>
          <target state="translated">过滤器（如果不为 &lt;code&gt;null&lt;/code&gt; ）在&lt;a href=&quot;#readObject()&quot;&gt; &lt;code&gt;readObject&lt;/code&gt; &lt;/a&gt;期间被调用，并且&lt;a href=&quot;#readUnshared()&quot;&gt; &lt;code&gt;readUnshared&lt;/code&gt; &lt;/a&gt;中的每个对象（常规或类）进行readUnshared调用。字符串被视为原语，并且不调用过滤器。该过滤器被要求：</target>
        </trans-unit>
        <trans-unit id="9da1890ea92c18a80409737edd5b3b2d29e7817f" translate="yes" xml:space="preserve">
          <source>The filtered &lt;code&gt;BufferedImage&lt;/code&gt;.</source>
          <target state="translated">过滤后的 &lt;code&gt;BufferedImage&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="65f3a38e57b9dd6fdfb5778ac5db35b1bc7064a3" translate="yes" xml:space="preserve">
          <source>The filtered &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">过滤后的 &lt;code&gt;Raster&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82f5231af999cd534e151548b4f1675b3dfd6445" translate="yes" xml:space="preserve">
          <source>The filtering method will behave as follows:</source>
          <target state="translated">过滤方法将表现如下。</target>
        </trans-unit>
        <trans-unit id="d896ef01136035a55ade69aaf7e02f44f8e7c594" translate="yes" xml:space="preserve">
          <source>The filtering operation returns all matching language tags. It is defined in RFC 4647 as follows: &quot;In filtering, each language range represents the least specific language tag (that is, the language tag with fewest number of subtags) that is an acceptable match. All of the language tags in the matching set of tags will have an equal or greater number of subtags than the language range. Every non-wildcard subtag in the language range will appear in every one of the matching language tags.&quot;</source>
          <target state="translated">过滤操作返回所有匹配的语言标签。RFC 4647对其定义如下。&quot;在过滤过程中,每个语言范围代表可接受的最小的特定语言标记(即子标记数量最少的语言标记)。匹配标签集中的所有语言标签的子标签数都将等于或大于语言范围。语言范围中的每一个非通配符子标签都将出现在每一个匹配的语言标签中。&quot;</target>
        </trans-unit>
        <trans-unit id="58673811cc709742eb06b89d83fea33b405113c2" translate="yes" xml:space="preserve">
          <source>The final mechanism is to attempt to instantiate the &lt;code&gt;Class&lt;/code&gt; specified by &lt;a href=&quot;#DATATYPEFACTORY_IMPLEMENTATION_CLASS&quot;&gt;&lt;code&gt;DATATYPEFACTORY_IMPLEMENTATION_CLASS&lt;/code&gt;&lt;/a&gt;. Any Exception thrown during the instantiation process is wrapped as a &lt;a href=&quot;datatypeconfigurationexception&quot;&gt;&lt;code&gt;DatatypeConfigurationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最终的机制是尝试实例化&lt;a href=&quot;#DATATYPEFACTORY_IMPLEMENTATION_CLASS&quot;&gt; &lt;code&gt;DATATYPEFACTORY_IMPLEMENTATION_CLASS&lt;/code&gt; &lt;/a&gt;指定的 &lt;code&gt;Class&lt;/code&gt; 。在实例化过程中抛出的所有Exception都包装为&lt;a href=&quot;datatypeconfigurationexception&quot;&gt; &lt;code&gt;DatatypeConfigurationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a257823443c7ca437aee24668254699a62d64cf7" translate="yes" xml:space="preserve">
          <source>The final memory location accessed by a memory access var handle can be computed as follows:</source>
          <target state="translated">一个内存访问变量句柄所访问的最终内存位置可以计算如下。</target>
        </trans-unit>
        <trans-unit id="d3162e7feec30f14f4aa6ef15c92c46449634803" translate="yes" xml:space="preserve">
          <source>The final results of decoding will be the same whether or not intermediate updates are performed. Thus if only the final image is desired it may be preferable not to register any &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s. In general, progressive updating is most effective when fetching images over a network connection that is very slow compared to local CPU processing; over a fast connection, progressive updates may actually slow down the presentation of the image.</source>
          <target state="translated">无论是否执行中间更新，解码的最终结果都将相同。因此，如果只需要最终图像，则最好不要注册任何 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 。通常，与通过本地CPU处理相比，通过网络连接获取图像时，渐进式更新最有效。通过快速连接，渐进式更新实际上可能会减慢图像的显示速度。</target>
        </trans-unit>
        <trans-unit id="1d110cf80264e279c1436d299ebda35ec112c3fd" translate="yes" xml:space="preserve">
          <source>The final value from either the positive or negative case is then rounded to the destination precision.</source>
          <target state="translated">然后将正或负的最终值四舍五入到目标精度。</target>
        </trans-unit>
        <trans-unit id="85e44e3203522806af8cd170951c01b954d7f6b9" translate="yes" xml:space="preserve">
          <source>The finalization mechanism is inherently problematic.</source>
          <target state="translated">终结机制本身就存在问题。</target>
        </trans-unit>
        <trans-unit id="43ad00bd49bb737cdb4c6319c59540923fdbcb9f" translate="yes" xml:space="preserve">
          <source>The finalization mechanism is inherently problematic. Finalization can lead to performance issues, deadlocks, and hangs. Errors in finalizers can lead to resource leaks; there is no way to cancel finalization if it is no longer necessary; and no ordering is specified among calls to &lt;code&gt;finalize&lt;/code&gt; methods of different objects. Furthermore, there are no guarantees regarding the timing of finalization. The &lt;code&gt;finalize&lt;/code&gt; method might be called on a finalizable object only after an indefinite delay, if at all. Classes whose instances hold non-heap resources should provide a method to enable explicit release of those resources, and they should also implement &lt;a href=&quot;autocloseable&quot;&gt;&lt;code&gt;AutoCloseable&lt;/code&gt;&lt;/a&gt; if appropriate. The &lt;a href=&quot;ref/cleaner&quot;&gt;&lt;code&gt;Cleaner&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ref/phantomreference&quot;&gt;&lt;code&gt;PhantomReference&lt;/code&gt;&lt;/a&gt; provide more flexible and efficient ways to release resources when an object becomes unreachable.</source>
          <target state="translated">最终确定机制本质上是有问题的。最终确定可能导致性能问题，死锁和挂起。终结器中的错误可能导致资源泄漏；如果不再需要取消终结，则无法取消；并且在用于 &lt;code&gt;finalize&lt;/code&gt; 不同对象的方法的调用之间未指定任何顺序。此外，无法保证最终确定的时间。在 &lt;code&gt;finalize&lt;/code&gt; 方法可能一个终结对象只无限期延迟之后，被称为如果在所有。其实例拥有非堆资源的类应提供一种方法，以使这些资源能够显式释放，并且在适当的情况下，它们还应实现&lt;a href=&quot;autocloseable&quot;&gt; &lt;code&gt;AutoCloseable&lt;/code&gt; &lt;/a&gt;。 The &lt;a href=&quot;ref/cleaner&quot;&gt; &lt;code&gt;Cleaner&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;ref/phantomreference&quot;&gt; &lt;code&gt;PhantomReference&lt;/code&gt; &lt;/a&gt; 提供了一种更灵活，更有效的方法来在对象变得不可访问时释放资源。</target>
        </trans-unit>
        <trans-unit id="96b7c65ae72d541b50bbc707f4905bb257fc7bac" translate="yes" xml:space="preserve">
          <source>The findComponentAt method is different from getComponentAt in that getComponentAt only searches the Container's immediate children; if the containing component is a Container, findComponentAt will search that child to find a nested component.</source>
          <target state="translated">findComponentAt方法与getComponentAt不同,getComponentAt只搜索Container的直接子代;如果包含的组件是一个Container,findComponentAt将搜索该子代以找到一个嵌套组件。</target>
        </trans-unit>
        <trans-unit id="f304bceeb53570b9b6ea4460744619719b33e8a1" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;colormodel#getNumColorComponents()&quot;&gt;&lt;code&gt;getNumColorComponents&lt;/code&gt;&lt;/a&gt; indices refer to color samples.</source>
          <target state="translated">第一个&lt;a href=&quot;colormodel#getNumColorComponents()&quot;&gt; &lt;code&gt;getNumColorComponents&lt;/code&gt; &lt;/a&gt;索引引用颜色样本。</target>
        </trans-unit>
        <trans-unit id="225e537eb7919c395c9c76cb321d5092e5dfa93e" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;RowSet&lt;/code&gt; object added to this &lt;code&gt;JoinRowSet&lt;/code&gt; object forms the basis for the &lt;code&gt;JOIN&lt;/code&gt; relationship.</source>
          <target state="translated">添加到此 &lt;code&gt;JoinRowSet&lt;/code&gt; 对象的第一个 &lt;code&gt;RowSet&lt;/code&gt; 对象构成 &lt;code&gt;JOIN&lt;/code&gt; 关系的基础。</target>
        </trans-unit>
        <trans-unit id="dceb51577509ae3dfa0af99f1bc1e752a22466e6" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;SysexMessage&lt;/code&gt; object containing data for a particular system exclusive message should have the status value 0xF0. If this message contains all the system exclusive data for the message, it should end with the status byte 0xF7 (EOX). Otherwise, additional system exclusive data should be sent in one or more &lt;code&gt;SysexMessages&lt;/code&gt; with a status value of 0xF7. The &lt;code&gt;SysexMessage&lt;/code&gt; containing the last of the data for the system exclusive message should end with the value 0xF7 (EOX) to mark the end of the system exclusive message.</source>
          <target state="translated">包含特定系统专用消息数据的第一个 &lt;code&gt;SysexMessage&lt;/code&gt; 对象应具有状态值0xF0。如果此消息包含该消息的所有系统独占数据，则应以状态字节0xF7（EOX）结尾。否则，应在一个或多个状态值为0xF7的 &lt;code&gt;SysexMessages&lt;/code&gt; 中发送其他系统专用数据。包含系统独占消息的最后数据的 &lt;code&gt;SysexMessage&lt;/code&gt; 应该以值0xF7（EOX）结尾，以标记系统独占消息的结尾。</target>
        </trans-unit>
        <trans-unit id="d2e2f7cac12c5ca488060725f68a6ecc25a456b2" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, and any input bytes that may have been buffered during a previous &lt;code&gt;update&lt;/code&gt; operation, are processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in a new buffer.</source>
          <target state="translated">处理 &lt;code&gt;input&lt;/code&gt; 缓冲区中的第一个 &lt;code&gt;inputLen&lt;/code&gt; 字节（从 &lt;code&gt;inputOffset&lt;/code&gt; (含）开始），以及在上一次 &lt;code&gt;update&lt;/code&gt; 操作期间可能已缓冲的所有输入字节，并应用填充（如果请求）。如果使用的是AEAD模式（例如GCM / CCM），则在加密的情况下会附加验证标签，而在解密的情况下会验证身份标签。结果存储在新缓冲区中。</target>
        </trans-unit>
        <trans-unit id="450b35c105bb3a8a209c60a29d62db449ae9ed42" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, and any input bytes that may have been buffered during a previous &lt;code&gt;update&lt;/code&gt; operation, are processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in the &lt;code&gt;output&lt;/code&gt; buffer, starting at &lt;code&gt;outputOffset&lt;/code&gt; inclusive.</source>
          <target state="translated">处理 &lt;code&gt;input&lt;/code&gt; 缓冲区中的第一个 &lt;code&gt;inputLen&lt;/code&gt; 字节（从 &lt;code&gt;inputOffset&lt;/code&gt; (含）开始），以及在上一次 &lt;code&gt;update&lt;/code&gt; 操作期间可能已缓冲的所有输入字节，并应用填充（如果请求）。如果使用的是AEAD模式（例如GCM / CCM），则在加密的情况下会附加验证标签，而在解密的情况下会验证身份标签。结果存储在 &lt;code&gt;output&lt;/code&gt; 缓冲区中，从 &lt;code&gt;outputOffset&lt;/code&gt; (含）开始。</target>
        </trans-unit>
        <trans-unit id="a8bbd7df6363c689dcf63bfdd1fdab1320c3d681" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, and any input bytes that may have been buffered during a previous &lt;code&gt;update&lt;/code&gt; operation, are processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in the &lt;code&gt;output&lt;/code&gt; buffer.</source>
          <target state="translated">处理 &lt;code&gt;input&lt;/code&gt; 缓冲区中的第一个 &lt;code&gt;inputLen&lt;/code&gt; 字节（从 &lt;code&gt;inputOffset&lt;/code&gt; (含）开始），以及在上一次 &lt;code&gt;update&lt;/code&gt; 操作期间可能已缓冲的所有输入字节，并应用填充（如果请求）。如果使用的是AEAD模式（例如GCM / CCM），则在加密的情况下会附加验证标签，而在解密的情况下会验证身份标签。结果存储在 &lt;code&gt;output&lt;/code&gt; 缓冲区中。</target>
        </trans-unit>
        <trans-unit id="28af7ec760e52fc6a243e293787fc7c9a7265ce5" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, are processed, and the result is stored in a new buffer.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 缓冲区中的第一个 &lt;code&gt;inputLen&lt;/code&gt; 字节（从 &lt;code&gt;inputOffset&lt;/code&gt; (含）开始）将被处理，并将结果存储在新缓冲区中。</target>
        </trans-unit>
        <trans-unit id="dee5e44e4c07e3f64df924e1f093b2408bc750bf" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, are processed, and the result is stored in the &lt;code&gt;output&lt;/code&gt; buffer, starting at &lt;code&gt;outputOffset&lt;/code&gt; inclusive.</source>
          <target state="translated">第一 &lt;code&gt;inputLen&lt;/code&gt; 字节在 &lt;code&gt;input&lt;/code&gt; 缓冲区中，从 &lt;code&gt;inputOffset&lt;/code&gt; 以下，被处理，并且结果被存储在 &lt;code&gt;output&lt;/code&gt; 缓冲区中，从 &lt;code&gt;outputOffset&lt;/code&gt; 以下。</target>
        </trans-unit>
        <trans-unit id="642f9a22f339ca697888f292e90a89ff6619eb68" translate="yes" xml:space="preserve">
          <source>The first &lt;code&gt;inputLen&lt;/code&gt; bytes in the &lt;code&gt;input&lt;/code&gt; buffer, starting at &lt;code&gt;inputOffset&lt;/code&gt; inclusive, are processed, and the result is stored in the &lt;code&gt;output&lt;/code&gt; buffer.</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; 缓冲区中的第一个 &lt;code&gt;inputLen&lt;/code&gt; 字节（从 &lt;code&gt;inputOffset&lt;/code&gt; (含）开始）将被处理，并将结果存储在 &lt;code&gt;output&lt;/code&gt; 缓冲区中。</target>
        </trans-unit>
        <trans-unit id="823a750eb068b083af9a3eec820704505156eba9" translate="yes" xml:space="preserve">
          <source>The first ClassLoader in a &lt;code&gt;ClassLoaderRepository&lt;/code&gt; is always the MBean Server's own ClassLoader.</source>
          <target state="translated">ClassLoaderRepository中的第一个 &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 始终是MBean服务器自己的ClassLoader。</target>
        </trans-unit>
        <trans-unit id="4afcd821de0aeb2abc8a3499b614746092f5e523" translate="yes" xml:space="preserve">
          <source>The first DOM implementation that support the desired features, or &lt;code&gt;null&lt;/code&gt; if this source has none.</source>
          <target state="translated">支持所需功能的第一个DOM实现；如果此源不提供，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0aee605bf67dfc0c50ce0346dbcf9350e8a06cf8" translate="yes" xml:space="preserve">
          <source>The first argument is &lt;code&gt;null&lt;/code&gt; or is a string of length zero.</source>
          <target state="translated">第一个参数为 &lt;code&gt;null&lt;/code&gt; 或长度为零的字符串。</target>
        </trans-unit>
        <trans-unit id="ae629cadb34db7e527f2a80bc1163c69c5a2e3f8" translate="yes" xml:space="preserve">
          <source>The first argument is treated as the name of a system property to be obtained. The string value of this property is then interpreted as an integer which is then converted to a &lt;code&gt;Color&lt;/code&gt; object.</source>
          <target state="translated">第一个参数被视为要获取的系统属性的名称。然后，将此属性的字符串值解释为整数，然后将其转换为 &lt;code&gt;Color&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="86224aafef149436e8f761076011cbbcfd14ad03" translate="yes" xml:space="preserve">
          <source>The first argument is treated as the name of a system property. System properties are accessible through the &lt;a href=&quot;system#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt;&lt;/a&gt; method. The string value of this property is then interpreted as a &lt;code&gt;
 long&lt;/code&gt; value using the grammar supported by &lt;a href=&quot;#decode(java.lang.String)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; and a &lt;code&gt;Long&lt;/code&gt; object representing this value is returned.</source>
          <target state="translated">第一个参数被视为系统属性的名称。系统属性可通过&lt;a href=&quot;system#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt; &lt;/a&gt;方法访问。然后，使用&lt;a href=&quot;#decode(java.lang.String)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;支持的语法将此属性的字符串值解释为 &lt;code&gt; long&lt;/code&gt; 值，并返回表示该值的 &lt;code&gt;Long&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="6d2885db10350eaece5dd6fc42094a4b81bf28f0" translate="yes" xml:space="preserve">
          <source>The first argument is treated as the name of a system property. System properties are accessible through the &lt;a href=&quot;system#getProperty(java.lang.String)&quot;&gt;&lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt;&lt;/a&gt; method. The string value of this property is then interpreted as an integer value using the grammar supported by &lt;a href=&quot;#decode(java.lang.String)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; and an &lt;code&gt;Integer&lt;/code&gt; object representing this value is returned.</source>
          <target state="translated">第一个参数被视为系统属性的名称。系统属性可通过&lt;a href=&quot;system#getProperty(java.lang.String)&quot;&gt; &lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt; &lt;/a&gt;方法访问。然后，使用&lt;a href=&quot;#decode(java.lang.String)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;支持的语法将此属性的字符串值解释为整数值，并返回表示该值的 &lt;code&gt;Integer&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="2d03bc23e5360de30337060058588182a9ceb237" translate="yes" xml:space="preserve">
          <source>The first argument is treated as the name of a system property. System properties are accessible through the &lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt;&lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt;&lt;/a&gt; method. The string value of this property is then interpreted as a &lt;code&gt;long&lt;/code&gt; value using the grammar supported by &lt;a href=&quot;long#decode-java.lang.String-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; and a &lt;code&gt;Long&lt;/code&gt; object representing this value is returned.</source>
          <target state="translated">第一个参数被视为系统属性的名称。系统属性可通过&lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt; &lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt; &lt;/a&gt;方法访问。然后，使用&lt;a href=&quot;long#decode-java.lang.String-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;支持的语法将此属性的字符串值解释为 &lt;code&gt;long&lt;/code&gt; 值，并返回表示该值的 &lt;code&gt;Long&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="1ca7bb292bb179eff369391d94b8d8d3d6c76e98" translate="yes" xml:space="preserve">
          <source>The first argument is treated as the name of a system property. System properties are accessible through the &lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt;&lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt;&lt;/a&gt; method. The string value of this property is then interpreted as an integer value using the grammar supported by &lt;a href=&quot;integer#decode-java.lang.String-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; and an &lt;code&gt;Integer&lt;/code&gt; object representing this value is returned.</source>
          <target state="translated">第一个参数被视为系统属性的名称。系统属性可通过&lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt; &lt;code&gt;System.getProperty(java.lang.String)&lt;/code&gt; &lt;/a&gt;方法访问。然后，使用&lt;a href=&quot;integer#decode-java.lang.String-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt;支持的语法将此属性的字符串值解释为整数值，并返回表示该值的 &lt;code&gt;Integer&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="b2ae25b2e2ebc2286380592b87b73e4532b3206e" translate="yes" xml:space="preserve">
          <source>The first argument passed to the accumulator function, both arguments passed to the combiner function, and the argument passed to the finisher function must be the result of a previous invocation of the result supplier, accumulator, or combiner functions.</source>
          <target state="translated">传递给累加器函数的第一个参数、传递给组合器函数的两个参数以及传递给终结者函数的参数必须是之前调用结果提供者、累加器或组合器函数的结果。</target>
        </trans-unit>
        <trans-unit id="b8fb133ed9ac9f35d1632cf6521f669da4fe312e" translate="yes" xml:space="preserve">
          <source>The first argument will be of type &lt;code&gt;refc&lt;/code&gt; if the lookup class has full privileges to access the member. Otherwise the member must be &lt;code&gt;protected&lt;/code&gt; and the first argument will be restricted in type to the lookup class.</source>
          <target state="translated">如果查找类具有访问该成员的全部特权，则第一个参数的类型 &lt;code&gt;refc&lt;/code&gt; 。否则，必须 &lt;code&gt;protected&lt;/code&gt; 成员，并且将第一个参数的类型限制为查找类。</target>
        </trans-unit>
        <trans-unit id="3fdce5da33999948b7b9edbf1747b81239005798" translate="yes" xml:space="preserve">
          <source>The first boundary after the specified offset or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if the last text boundary is passed in as the offset.</source>
          <target state="translated">指定的偏移量之后的第一个边界；如果最后一个文本边界作为偏移量传入，则 &lt;code&gt;BreakIterator.DONE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f43ed7dbcb89ab6b52e6cd9fb7b818ebc4af52e" translate="yes" xml:space="preserve">
          <source>The first byte data array.</source>
          <target state="translated">第一个字节数据阵列。</target>
        </trans-unit>
        <trans-unit id="60f933636fde5ae8ebd2c0b809d58ad8770e0632" translate="yes" xml:space="preserve">
          <source>The first byte read is stored into element &lt;code&gt;b[0]&lt;/code&gt;, the next one into &lt;code&gt;b[1]&lt;/code&gt;, and so on. The number of bytes read is, at most, equal to the length of &lt;code&gt;b&lt;/code&gt;. Let</source>
          <target state="translated">读取的第一个字节存储在元素 &lt;code&gt;b[0]&lt;/code&gt; ，下一个字节存储在 &lt;code&gt;b[1]&lt;/code&gt; ，依此类推。读取的字节数最多等于 &lt;code&gt;b&lt;/code&gt; 的长度。让</target>
        </trans-unit>
        <trans-unit id="d03b0acc59bce24602d657d7614371387c0d8fd1" translate="yes" xml:space="preserve">
          <source>The first byte read is stored into element &lt;code&gt;b[0]&lt;/code&gt;, the next one into &lt;code&gt;b[1]&lt;/code&gt;, and so on. The number of bytes read is, at most, equal to the length of &lt;code&gt;b&lt;/code&gt;. Let &lt;code&gt;k&lt;/code&gt; be the number of bytes actually read; these bytes will be stored in elements &lt;code&gt;b[0]&lt;/code&gt; through &lt;code&gt;b[k-1]&lt;/code&gt;, leaving elements &lt;code&gt;b[k]&lt;/code&gt; through &lt;code&gt;b[b.length-1]&lt;/code&gt; unaffected.</source>
          <target state="translated">读取的第一个字节存储在元素 &lt;code&gt;b[0]&lt;/code&gt; ，下一个字节存储在 &lt;code&gt;b[1]&lt;/code&gt; ，依此类推。读取的字节数最多等于 &lt;code&gt;b&lt;/code&gt; 的长度。令 &lt;code&gt;k&lt;/code&gt; 为实际读取的字节数；这些字节将存储在元素 &lt;code&gt;b[0]&lt;/code&gt; 至 &lt;code&gt;b[k-1]&lt;/code&gt; ，而元素 &lt;code&gt;b[k]&lt;/code&gt; 至 &lt;code&gt;b[b.length-1]&lt;/code&gt; 不受影响。</target>
        </trans-unit>
        <trans-unit id="e123521dff5a7003e4f6481bb02965e6f695e618" translate="yes" xml:space="preserve">
          <source>The first byte read is stored into element &lt;code&gt;b[off]&lt;/code&gt;, the next one in to &lt;code&gt;b[off+1]&lt;/code&gt;, and so on. The number of bytes read is, at most, equal to &lt;code&gt;len&lt;/code&gt;. Let</source>
          <target state="translated">读取的第一个字节存储在元素 &lt;code&gt;b[off]&lt;/code&gt; ，下一个字节存储在 &lt;code&gt;b[off+1]&lt;/code&gt; ，依此类推。读取的字节数最多等于 &lt;code&gt;len&lt;/code&gt; 。让</target>
        </trans-unit>
        <trans-unit id="a8f1de6428cb4228c88c1554b26b34675848c6a6" translate="yes" xml:space="preserve">
          <source>The first byte read is stored into element &lt;code&gt;b[off]&lt;/code&gt;, the next one into &lt;code&gt;b[off+1]&lt;/code&gt;, and so on. The number of bytes read is, at most, equal to &lt;code&gt;len&lt;/code&gt;. Let</source>
          <target state="translated">读取的第一个字节存储在元素 &lt;code&gt;b[off]&lt;/code&gt; ，下一个字节存储在 &lt;code&gt;b[off+1]&lt;/code&gt; ，依此类推。读取的字节数最多等于 &lt;code&gt;len&lt;/code&gt; 。让</target>
        </trans-unit>
        <trans-unit id="db2c520ad4319c6e2902420d8cd1385f52ff1286" translate="yes" xml:space="preserve">
          <source>The first call to the &lt;a href=&quot;#getKeyStore()&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will create a KeyStore of type &lt;code&gt;type&lt;/code&gt; and call its &lt;a href=&quot;keystore#load(java.io.InputStream,char%5B%5D)&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method. The &lt;code&gt;inputStream&lt;/code&gt; argument is constructed from &lt;code&gt;file&lt;/code&gt;. If &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;PasswordProtection&lt;/code&gt;, the password is obtained by calling the &lt;code&gt;getPassword&lt;/code&gt; method. Otherwise, if &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;CallbackHandlerProtection&lt;/code&gt;, the password is obtained by invoking the CallbackHandler.</source>
          <target state="translated">对返回的构建器上的&lt;a href=&quot;#getKeyStore()&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt;方法的第一次调用将创建一个type &lt;code&gt;type&lt;/code&gt; 的KeyStore并调用其&lt;a href=&quot;keystore#load(java.io.InputStream,char%5B%5D)&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;方法。该 &lt;code&gt;inputStream&lt;/code&gt; 参数从构建 &lt;code&gt;file&lt;/code&gt; 。如果 &lt;code&gt;protection&lt;/code&gt; 是 &lt;code&gt;PasswordProtection&lt;/code&gt; ，则通过调用 &lt;code&gt;getPassword&lt;/code&gt; 方法获得密码。否则，如果 &lt;code&gt;protection&lt;/code&gt; 是 &lt;code&gt;CallbackHandlerProtection&lt;/code&gt; ，则通过调用CallbackHandler获得密码。</target>
        </trans-unit>
        <trans-unit id="83cb61e754162d1ecf4d214461dc4fea766c8488" translate="yes" xml:space="preserve">
          <source>The first call to the &lt;a href=&quot;#getKeyStore()&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will create a KeyStore using &lt;code&gt;file&lt;/code&gt; to detect the keystore type and then call its &lt;a href=&quot;keystore#load(java.io.InputStream,char%5B%5D)&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method. It uses the same algorithm to determine the keystore type as described in &lt;a href=&quot;keystore#getInstance(java.io.File,java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;KeyStore.getInstance(File, LoadStoreParameter)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;inputStream&lt;/code&gt; argument is constructed from &lt;code&gt;file&lt;/code&gt;. If &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;PasswordProtection&lt;/code&gt;, the password is obtained by calling the &lt;code&gt;getPassword&lt;/code&gt; method. Otherwise, if &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;CallbackHandlerProtection&lt;/code&gt;, the password is obtained by invoking the CallbackHandler.</source>
          <target state="translated">在返回的构建器上第一次调用&lt;a href=&quot;#getKeyStore()&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt;方法将使用 &lt;code&gt;file&lt;/code&gt; 创建一个KeyStore来检测密钥库类型，然后调用其&lt;a href=&quot;keystore#load(java.io.InputStream,char%5B%5D)&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;方法。它使用与&lt;a href=&quot;keystore#getInstance(java.io.File,java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;KeyStore.getInstance(File, LoadStoreParameter)&lt;/code&gt; &lt;/a&gt;描述的算法相同的算法来确定密钥库类型。该 &lt;code&gt;inputStream&lt;/code&gt; 参数从构建 &lt;code&gt;file&lt;/code&gt; 。如果 &lt;code&gt;protection&lt;/code&gt; 是 &lt;code&gt;PasswordProtection&lt;/code&gt; ，则通过调用 &lt;code&gt;getPassword&lt;/code&gt; 方法获得密码。否则，如果 &lt;code&gt;protection&lt;/code&gt; 是 &lt;code&gt;CallbackHandlerProtection&lt;/code&gt; ，则通过调用CallbackHandler获得密码。</target>
        </trans-unit>
        <trans-unit id="c1d045c55ceefb91cc2dece8b6706b626a6357c6" translate="yes" xml:space="preserve">
          <source>The first call to the &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will create a KeyStore of type &lt;code&gt;type&lt;/code&gt; and call its &lt;a href=&quot;keystore#load-java.io.InputStream-char:A-&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method. The &lt;code&gt;inputStream&lt;/code&gt; argument is constructed from &lt;code&gt;file&lt;/code&gt;. If &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;PasswordProtection&lt;/code&gt;, the password is obtained by calling the &lt;code&gt;getPassword&lt;/code&gt; method. Otherwise, if &lt;code&gt;protection&lt;/code&gt; is a &lt;code&gt;CallbackHandlerProtection&lt;/code&gt;, the password is obtained by invoking the CallbackHandler.</source>
          <target state="translated">在返回的构建器上第一次调用&lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt;方法将创建一个type &lt;code&gt;type&lt;/code&gt; 的KeyStore 并调用其&lt;a href=&quot;keystore#load-java.io.InputStream-char:A-&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt;方法。该 &lt;code&gt;inputStream&lt;/code&gt; 参数从构建 &lt;code&gt;file&lt;/code&gt; 。如果 &lt;code&gt;protection&lt;/code&gt; 是 &lt;code&gt;PasswordProtection&lt;/code&gt; ，则通过调用 &lt;code&gt;getPassword&lt;/code&gt; 方法获得密码。否则，如果 &lt;code&gt;protection&lt;/code&gt; 是 &lt;code&gt;CallbackHandlerProtection&lt;/code&gt; ，则通过调用CallbackHandler获得密码。</target>
        </trans-unit>
        <trans-unit id="a263b78c091df4149c36c4396f2815c0fce9f331" translate="yes" xml:space="preserve">
          <source>The first character is an alphabetic character from a through z, or from A through Z</source>
          <target state="translated">第一个字符是一个从a到z的字母字符,或从A到Z的字母字符。</target>
        </trans-unit>
        <trans-unit id="2f9b613c261320a940fcb9e06c67d081c2e33e53" translate="yes" xml:space="preserve">
          <source>The first character of the resulting string will be the character at this buffer's position, while the last character will be the character at index &lt;code&gt;limit()&lt;/code&gt; - 1. Invoking this method does not change the buffer's position.</source>
          <target state="translated">结果字符串的第一个字符将是此缓冲区位置处的字符，而最后一个字符将是index &lt;code&gt;limit()&lt;/code&gt; -1 处的字符。调用此方法不会更改缓冲区的位置。</target>
        </trans-unit>
        <trans-unit id="dbf37e7b81a7fb879c8f2e225eb28bf22a25c9af" translate="yes" xml:space="preserve">
          <source>The first character to be copied is at index &lt;code&gt;srcBegin&lt;/code&gt;; the last character to be copied is at index &lt;code&gt;srcEnd-1&lt;/code&gt; (thus the total number of characters to be copied is &lt;code&gt;srcEnd-srcBegin&lt;/code&gt;). The characters are copied into the subarray of &lt;code&gt;dst&lt;/code&gt; starting at index &lt;code&gt;dstBegin&lt;/code&gt; and ending at index:</source>
          <target state="translated">要复制的第一个字符在索引 &lt;code&gt;srcBegin&lt;/code&gt; 处；最后要复制的字符在索引 &lt;code&gt;srcEnd-1&lt;/code&gt; 处（因此，要复制的字符总数为 &lt;code&gt;srcEnd-srcBegin&lt;/code&gt; ）。字符被复制到 &lt;code&gt;dst&lt;/code&gt; 的子 &lt;code&gt;dstBegin&lt;/code&gt; ，该子数组从索引dstBegin开始并在索引处结束：</target>
        </trans-unit>
        <trans-unit id="e7722b11f3aef8f14caa14ee77828b008194775f" translate="yes" xml:space="preserve">
          <source>The first character to be copied is at index &lt;code&gt;srcBegin&lt;/code&gt;; the last character to be copied is at index &lt;code&gt;srcEnd-1&lt;/code&gt;. The total number of characters to be copied is &lt;code&gt;srcEnd-srcBegin&lt;/code&gt;. The characters, converted to bytes, are copied into the subarray of &lt;code&gt;
 dst&lt;/code&gt; starting at index &lt;code&gt;dstBegin&lt;/code&gt; and ending at index:</source>
          <target state="translated">要复制的第一个字符在索引 &lt;code&gt;srcBegin&lt;/code&gt; 处；最后要复制的字符在索引 &lt;code&gt;srcEnd-1&lt;/code&gt; 处。要复制的字符总数为 &lt;code&gt;srcEnd-srcBegin&lt;/code&gt; 。转换为字节的字符将被复制到 &lt;code&gt; dst&lt;/code&gt; 的子 &lt;code&gt;dstBegin&lt;/code&gt; ，该子数组从索引dstBegin开始并在索引处结束：</target>
        </trans-unit>
        <trans-unit id="de566e0e6c84a80db615c5af628dc587bf7facb7" translate="yes" xml:space="preserve">
          <source>The first character to be copied is at index &lt;code&gt;srcBegin&lt;/code&gt;; the last character to be copied is at index &lt;code&gt;srcEnd-1&lt;/code&gt;. The total number of characters to be copied is &lt;code&gt;srcEnd-srcBegin&lt;/code&gt;. The characters, converted to bytes, are copied into the subarray of &lt;code&gt;dst&lt;/code&gt; starting at index &lt;code&gt;dstBegin&lt;/code&gt; and ending at index:</source>
          <target state="translated">要复制的第一个字符在索引 &lt;code&gt;srcBegin&lt;/code&gt; 处；最后要复制的字符在索引 &lt;code&gt;srcEnd-1&lt;/code&gt; 处。要复制的字符总数为 &lt;code&gt;srcEnd-srcBegin&lt;/code&gt; 。转换为字节的字符将复制到 &lt;code&gt;dst&lt;/code&gt; 的子 &lt;code&gt;dstBegin&lt;/code&gt; ，该子数组从索引dstBegin开始并在索引处结束：</target>
        </trans-unit>
        <trans-unit id="eaabb9f00e50f3bf7294302ed9e39cca04a5618c" translate="yes" xml:space="preserve">
          <source>The first child of this node.</source>
          <target state="translated">这个节点的第一个子节点。</target>
        </trans-unit>
        <trans-unit id="82f23c5a5a075e723f10662e38703476e5a7bf48" translate="yes" xml:space="preserve">
          <source>The first child of this node. If there is no such node, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">该节点的第一个孩子。如果没有这样的节点，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ecf2e38c35f8de71bd3d5a9b4b40324da1f7036a" translate="yes" xml:space="preserve">
          <source>The first class defined in a package determines the exact set of certificates that all subsequent classes defined in that package must contain. The set of certificates for a class is obtained from the &lt;a href=&quot;../security/codesource&quot;&gt;&lt;code&gt;&lt;code&gt;CodeSource&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; within the &lt;code&gt;ProtectionDomain&lt;/code&gt; of the class. Any classes added to that package must contain the same set of certificates or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown. Note that if &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this check is not performed. You should always pass in the &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt; of the class you are defining as well as the bytes. This ensures that the class you are defining is indeed the class you think it is.</source>
          <target state="translated">程序包中定义的第一个类确定该程序包中定义的所有后续类必须包含的确切证书集。从该类的 &lt;code&gt;ProtectionDomain&lt;/code&gt; 中的&lt;a href=&quot;../security/codesource&quot;&gt; &lt;code&gt;&lt;code&gt;CodeSource&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;获取该类的证书集。添加到该程序包的任何类都必须包含相同的证书集，否则将引发 &lt;code&gt;SecurityException&lt;/code&gt; 。请注意，如果 &lt;code&gt;name&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则不执行此检查。您应该始终传入要定义的类的&lt;a href=&quot;#name&quot;&gt;二进制名称&lt;/a&gt;以及字节。这样可以确保您正在定义的类确实是您认为的类。</target>
        </trans-unit>
        <trans-unit id="367a67e292ca391b3458ed7684121677f1963997" translate="yes" xml:space="preserve">
          <source>The first class defined in a package determines the exact set of certificates that all subsequent classes defined in that package must contain. The set of certificates for a class is obtained from the &lt;a href=&quot;../security/codesource&quot;&gt;&lt;code&gt;CodeSource&lt;/code&gt;&lt;/a&gt; within the &lt;code&gt;ProtectionDomain&lt;/code&gt; of the class. Any classes added to that package must contain the same set of certificates or a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown. Note that if &lt;code&gt;name&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this check is not performed. You should always pass in the &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; of the class you are defining as well as the bytes. This ensures that the class you are defining is indeed the class you think it is.</source>
          <target state="translated">程序包中定义的第一个类确定该程序包中定义的所有后续类必须包含的确切证书集。从该类的 &lt;code&gt;ProtectionDomain&lt;/code&gt; 内的&lt;a href=&quot;../security/codesource&quot;&gt; &lt;code&gt;CodeSource&lt;/code&gt; &lt;/a&gt;获取该类的证书集。添加到该程序包的任何类都必须包含相同的证书集，否则将引发 &lt;code&gt;SecurityException&lt;/code&gt; 。请注意，如果 &lt;code&gt;name&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则不执行此检查。您应该始终传入要定义的类的&lt;a href=&quot;#binary-name&quot;&gt;二进制名称&lt;/a&gt;以及字节。这样可以确保您正在定义的类确实是您认为的类。</target>
        </trans-unit>
        <trans-unit id="77ea805d80991cc84a0466fc40f83f5ced7c59b5" translate="yes" xml:space="preserve">
          <source>The first column</source>
          <target state="translated">第一栏</target>
        </trans-unit>
        <trans-unit id="3a2e1acc3dd6e2be13a7cf2a6463f7153aae9448" translate="yes" xml:space="preserve">
          <source>The first column in a line is position 1.</source>
          <target state="translated">一行的第一列是位置1。</target>
        </trans-unit>
        <trans-unit id="8cb4363b69689efa2e879cbfc2f2088fbcfa0e7b" translate="yes" xml:space="preserve">
          <source>The first conversion is better than the second one.</source>
          <target state="translated">第一个转换比第二个好。</target>
        </trans-unit>
        <trans-unit id="955b718107c9a85fdf32d9b7ba615294c28a2d9c" translate="yes" xml:space="preserve">
          <source>The first day-of-week defines the ISO &lt;code&gt;DayOfWeek&lt;/code&gt; that is day 1 of the week. The minimal number of days in the first week defines how many days must be present in a month or year, starting from the first day-of-week, before the week is counted as the first week. A value of 1 will count the first day of the month or year as part of the first week, whereas a value of 7 will require the whole seven days to be in the new month or year.</source>
          <target state="translated">一周的第一天定义了一周的第一天的ISO &lt;code&gt;DayOfWeek&lt;/code&gt; 。第一周的最少天数定义了从一周中的第一天开始，一个月或一年中必须存在多少天，然后才将该周计为第一周。值1将把月份或年份的第一天作为第一周的一部分，而值7则要求整整7天都在新的月份或年份。</target>
        </trans-unit>
        <trans-unit id="ede957077563e4ac1530acfa41dc3ea489ec60df" translate="yes" xml:space="preserve">
          <source>The first day-of-week varies by culture. For example, the US uses Sunday, while France and the ISO-8601 standard use Monday. This method returns the first day using the standard &lt;code&gt;DayOfWeek&lt;/code&gt; enum.</source>
          <target state="translated">一周的第一天因文化而异。例如，美国使用星期天，而法国和ISO-8601标准使用星期一。此方法使用标准的 &lt;code&gt;DayOfWeek&lt;/code&gt; 枚举返回第一天。</target>
        </trans-unit>
        <trans-unit id="a1da0a3f174bbc2d15f94c1f2cc8178e672bfa46" translate="yes" xml:space="preserve">
          <source>The first day-of-week. For example, the ISO-8601 standard considers Monday to be the first day-of-week.</source>
          <target state="translated">一周中的第一天。例如,ISO-8601标准认为星期一是一周的第一天。</target>
        </trans-unit>
        <trans-unit id="82e2b795a8a8cbc96640a5d47b1525ee3c2a5661" translate="yes" xml:space="preserve">
          <source>The first element (position &lt;code&gt;0&lt;/code&gt;) in the &lt;code&gt;DoubleStream&lt;/code&gt; will be the provided &lt;code&gt;seed&lt;/code&gt;. For &lt;code&gt;n &amp;gt; 0&lt;/code&gt;, the element at position &lt;code&gt;n&lt;/code&gt;, will be the result of applying the function &lt;code&gt;f&lt;/code&gt; to the element at position &lt;code&gt;n - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DoubleStream&lt;/code&gt; 中的第一个元素（位置 &lt;code&gt;0&lt;/code&gt; ）将是提供的 &lt;code&gt;seed&lt;/code&gt; 。对于 &lt;code&gt;n &amp;gt; 0&lt;/code&gt; ，位于位置 &lt;code&gt;n&lt;/code&gt; 的元素将是对位于位置 &lt;code&gt;n - 1&lt;/code&gt; 的元素应用函数 &lt;code&gt;f&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="bded7ce8d5601d17d37c716de18a736a7543797d" translate="yes" xml:space="preserve">
          <source>The first element (position &lt;code&gt;0&lt;/code&gt;) in the &lt;code&gt;IntStream&lt;/code&gt; will be the provided &lt;code&gt;seed&lt;/code&gt;. For &lt;code&gt;n &amp;gt; 0&lt;/code&gt;, the element at position &lt;code&gt;n&lt;/code&gt;, will be the result of applying the function &lt;code&gt;f&lt;/code&gt; to the element at position &lt;code&gt;n - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IntStream&lt;/code&gt; 中的第一个元素（位置 &lt;code&gt;0&lt;/code&gt; ）将是提供的 &lt;code&gt;seed&lt;/code&gt; 。对于 &lt;code&gt;n &amp;gt; 0&lt;/code&gt; ，位于位置 &lt;code&gt;n&lt;/code&gt; 的元素将是对位于位置 &lt;code&gt;n - 1&lt;/code&gt; 的元素应用函数 &lt;code&gt;f&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="a194dadcec7148ad3f47ec6fd680590400a3449e" translate="yes" xml:space="preserve">
          <source>The first element (position &lt;code&gt;0&lt;/code&gt;) in the &lt;code&gt;LongStream&lt;/code&gt; will be the provided &lt;code&gt;seed&lt;/code&gt;. For &lt;code&gt;n &amp;gt; 0&lt;/code&gt;, the element at position &lt;code&gt;n&lt;/code&gt;, will be the result of applying the function &lt;code&gt;f&lt;/code&gt; to the element at position &lt;code&gt;n - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LongStream&lt;/code&gt; 中的第一个元素（位置 &lt;code&gt;0&lt;/code&gt; ）将是提供的 &lt;code&gt;seed&lt;/code&gt; 。对于 &lt;code&gt;n &amp;gt; 0&lt;/code&gt; ，位于位置 &lt;code&gt;n&lt;/code&gt; 的元素将是对位于位置 &lt;code&gt;n - 1&lt;/code&gt; 的元素应用函数 &lt;code&gt;f&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="a165f1a0b54273ae7adbf840b0c7faa2330e5ac4" translate="yes" xml:space="preserve">
          <source>The first element (position &lt;code&gt;0&lt;/code&gt;) in the &lt;code&gt;Stream&lt;/code&gt; will be the provided &lt;code&gt;seed&lt;/code&gt;. For &lt;code&gt;n &amp;gt; 0&lt;/code&gt;, the element at position &lt;code&gt;n&lt;/code&gt;, will be the result of applying the function &lt;code&gt;f&lt;/code&gt; to the element at position &lt;code&gt;n - 1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Stream&lt;/code&gt; 中的第一个元素（位置 &lt;code&gt;0&lt;/code&gt; ）将是提供的 &lt;code&gt;seed&lt;/code&gt; 。对于 &lt;code&gt;n &amp;gt; 0&lt;/code&gt; ，位于位置 &lt;code&gt;n&lt;/code&gt; 的元素将是对位于位置 &lt;code&gt;n - 1&lt;/code&gt; 的元素应用函数 &lt;code&gt;f&lt;/code&gt; 的结果。</target>
        </trans-unit>
        <trans-unit id="a5aab3f29aca09be0c5627c5a993c1167fb0b36b" translate="yes" xml:space="preserve">
          <source>The first element of the iterator should be the most &quot;natural&quot; type for decoding the image with as little loss as possible. For example, for a JPEG image the first entry should be an RGB image, even though the image data is stored internally in a YCbCr color space.</source>
          <target state="translated">迭代器的第一个元素应该是最 &quot;自然 &quot;的类型,以尽可能少的损失来解码图像。例如,对于JPEG图像,第一个条目应该是RGB图像,即使图像数据在内部存储在YCbCr颜色空间。</target>
        </trans-unit>
        <trans-unit id="780baa695b0265440aa1ef37be800e344c7c7242" translate="yes" xml:space="preserve">
          <source>The first element returned by the iterator represents the name element that is closest to the root in the directory hierarchy, the second element is the next closest, and so on. The last element returned is the name of the file or directory denoted by this path. The &lt;a href=&quot;#getRoot()&quot;&gt;&lt;code&gt;root&lt;/code&gt;&lt;/a&gt; component, if present, is not returned by the iterator.</source>
          <target state="translated">迭代器返回的第一个元素表示与目录层次结构中的根最接近的name元素，第二个元素与下一个最接近，以此类推。返回的最后一个元素是此路径表示的文件或目录的名称。的&lt;a href=&quot;#getRoot()&quot;&gt; &lt;code&gt;root&lt;/code&gt; &lt;/a&gt;组件，如果存在的话，不被迭代器返回。</target>
        </trans-unit>
        <trans-unit id="a4f67dca9f7c2569783dcc958d9c49f4cfb6a3bb" translate="yes" xml:space="preserve">
          <source>The first element returned by the iterator represents the name element that is closest to the root in the directory hierarchy, the second element is the next closest, and so on. The last element returned is the name of the file or directory denoted by this path. The &lt;a href=&quot;path#getRoot--&quot;&gt;&lt;code&gt;root&lt;/code&gt;&lt;/a&gt; component, if present, is not returned by the iterator.</source>
          <target state="translated">迭代器返回的第一个元素表示与目录层次结构中的根最接近的name元素，第二个元素与下一个最接近，依此类推。返回的最后一个元素是此路径表示的文件或目录的名称。的&lt;a href=&quot;path#getRoot--&quot;&gt; &lt;code&gt;root&lt;/code&gt; &lt;/a&gt;组件，如果存在的话，不被迭代器返回。</target>
        </trans-unit>
        <trans-unit id="d373f684ec8e70f9e47427a2755704ec23ef7c5f" translate="yes" xml:space="preserve">
          <source>The first example shows a stack trace element consisting of three elements, each separated by &lt;code&gt;&quot;/&quot;&lt;/code&gt; followed with the source file name and the line number of the source line containing the execution point. The first element &quot;&lt;code&gt;com.foo.loader&lt;/code&gt;&quot; is the name of the class loader. The second element &quot;&lt;code&gt;foo@9.0&lt;/code&gt;&quot; is the module name and version. The third element is the method containing the execution point; &quot;&lt;code&gt;com.foo.Main&quot;&lt;/code&gt;&quot; is the fully-qualified class name and &quot;&lt;code&gt;run&lt;/code&gt;&quot; is the name of the method. &quot;&lt;code&gt;Main.java&lt;/code&gt;&quot; is the source file name and &quot;&lt;code&gt;101&lt;/code&gt;&quot; is the line number.</source>
          <target state="translated">第一个示例显示了一个由三个元素组成的堆栈跟踪元素，每个元素都由 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 分隔，后跟源文件名和包含执行点的源行的行号。第一个元素&amp;ldquo; &lt;code&gt;com.foo.loader&lt;/code&gt; &amp;rdquo;是类加载器的名称。第二个元素&amp;ldquo; &lt;code&gt;foo@9.0&lt;/code&gt; &amp;rdquo;是模块名称和版本。第三个元素是包含执行点的方法。 &amp;ldquo; &lt;code&gt;com.foo.Main&quot;&lt;/code&gt; 是标准的类名，&amp;ldquo; &lt;code&gt;run&lt;/code&gt; &amp;rdquo;是方法的名称。&amp;ldquo; &lt;code&gt;Main.java&lt;/code&gt; &amp;rdquo;是源文件名，&amp;ldquo; &lt;code&gt;101&lt;/code&gt; &amp;rdquo;是行号。</target>
        </trans-unit>
        <trans-unit id="c9df982ded0059a42a5326715d9b35822b9222f7" translate="yes" xml:space="preserve">
          <source>The first example shows a stack trace element consisting of three elements, each separated by &lt;code&gt;&quot;/&quot;&lt;/code&gt;, followed by the source file name and the line number of the source line containing the execution point. The first element &quot;&lt;code&gt;com.foo.loader&lt;/code&gt;&quot; is the name of the class loader. The second element &quot;&lt;code&gt;foo@9.0&lt;/code&gt;&quot; is the module name and version. The third element is the method containing the execution point; &quot;&lt;code&gt;com.foo.Main&quot;&lt;/code&gt;&quot; is the fully-qualified class name and &quot;&lt;code&gt;run&lt;/code&gt;&quot; is the name of the method. &quot;&lt;code&gt;Main.java&lt;/code&gt;&quot; is the source file name and &quot;&lt;code&gt;101&lt;/code&gt;&quot; is the line number.</source>
          <target state="translated">第一个示例显示了一个包含三个元素的堆栈跟踪元素，每个元素由 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 分隔，后跟源文件名和包含执行点的源行的行号。第一个元素&amp;ldquo; &lt;code&gt;com.foo.loader&lt;/code&gt; &amp;rdquo;是类加载器的名称。第二个元素&amp;ldquo; &lt;code&gt;foo@9.0&lt;/code&gt; &amp;rdquo;是模块名称和版本。第三个元素是包含执行点的方法。 &amp;ldquo; &lt;code&gt;com.foo.Main&quot;&lt;/code&gt; 是标准的类名，&amp;ldquo; &lt;code&gt;run&lt;/code&gt; &amp;rdquo;是方法的名称。&amp;ldquo; &lt;code&gt;Main.java&lt;/code&gt; &amp;rdquo;是源文件名，&amp;ldquo; &lt;code&gt;101&lt;/code&gt; &amp;rdquo;是行号。</target>
        </trans-unit>
        <trans-unit id="d6413ccd6f5782f5342b586620e6f4a0abde22ef" translate="yes" xml:space="preserve">
          <source>The first example specifies the methods: POST, GET and DELETE, but no request headers. The second example specifies one request method and two headers. The third example specifies two request methods, and two headers.</source>
          <target state="translated">第一个例子指定了方法。POST、GET和DELETE,但没有请求头。第二个例子指定了一个请求方法和两个头。第三个例子指定了两个请求方法和两个头。</target>
        </trans-unit>
        <trans-unit id="232fe5799d43af6e10cb304776efde1739a6180e" translate="yes" xml:space="preserve">
          <source>The first example uses the static method &lt;code&gt;MessageFormat.format&lt;/code&gt;, which internally creates a &lt;code&gt;MessageFormat&lt;/code&gt; for one-time use:</source>
          <target state="translated">第一个示例使用静态方法 &lt;code&gt;MessageFormat.format&lt;/code&gt; ，该方法在内部创建一个 &lt;code&gt;MessageFormat&lt;/code&gt; 供一次性使用：</target>
        </trans-unit>
        <trans-unit id="fe870d496f992cfccff0251dbbae3331dfec9862" translate="yes" xml:space="preserve">
          <source>The first five fields have non-negative (&amp;gt;=0) integers or null (which represents that the field is not set), and the seconds field has a non-negative decimal or null. A negative sign indicates a negative duration.</source>
          <target state="translated">前五个字段具有非负（&amp;gt; = 0）整数或null（表示未设置该字段），而秒字段具有非负十进制或null。负号表示负持续时间。</target>
        </trans-unit>
        <trans-unit id="6b46b643ffc068ef7965d6231b3153ce167aa87e" translate="yes" xml:space="preserve">
          <source>The first integer data array.</source>
          <target state="translated">第一个整数数据阵列。</target>
        </trans-unit>
        <trans-unit id="9f9027453c27f495317af2745753a0e023e2b7cf" translate="yes" xml:space="preserve">
          <source>The first invocation of any of the methods defined by this class causes the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; to be loaded. The default provider, identified by the URI scheme &quot;file&quot;, creates the &lt;a href=&quot;filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. If the process of loading or initializing the default provider fails then an unspecified error is thrown.</source>
          <target state="translated">此类定义的任何方法的第一次调用都会导致加载默认&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;。由URI方案&amp;ldquo;文件&amp;rdquo;标识的默认提供程序创建了&lt;a href=&quot;filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;，该文件系统提供对Java虚拟机可访问的文件系统的访问。如果加载或初始化默认提供程序的过程失败，则会引发未指定的错误。</target>
        </trans-unit>
        <trans-unit id="6b707d2f98066d10d4d06e91896be54d4b5b28f2" translate="yes" xml:space="preserve">
          <source>The first invocation of any of the methods defined by this class locates the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; object. Where the system property &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is not defined then the default provider is a system-default provider that is invoked to create the default file system.</source>
          <target state="translated">此类定义的任何方法的第一次调用都会找到默认&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;对象。在未定义系统属性 &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; 的情况下，默认提供程序是为创建默认文件系统而调用的系统默认提供程序。</target>
        </trans-unit>
        <trans-unit id="9eb8bef38b28e15b1a42751b14de53ed5402bed9" translate="yes" xml:space="preserve">
          <source>The first invocation of the &lt;a href=&quot;spi/filesystemprovider#installedProviders&quot;&gt;&lt;code&gt;installedProviders&lt;/code&gt;&lt;/a&gt; method, by way of invoking any of the &lt;code&gt;newFileSystem&lt;/code&gt; methods defined by this class, locates and loads all installed file system providers. Installed providers are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class. Installed providers are loaded using the system class loader. If the system class loader cannot be found then the extension class loader is used; if there is no extension class loader then the bootstrap class loader is used. Providers are typically installed by placing them in a JAR file on the application class path or in the extension directory, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileSystemProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, and the file lists one or more fully-qualified names of concrete subclass of &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;FileSystemProvider&lt;/code&gt;&lt;/a&gt; that have a zero argument constructor. The ordering that installed providers are located is implementation specific. If a provider is instantiated and its &lt;a href=&quot;spi/filesystemprovider#getScheme--&quot;&gt;&lt;code&gt;getScheme&lt;/code&gt;&lt;/a&gt; returns the same URI scheme of a provider that was previously instantiated then the most recently instantiated duplicate is discarded. URI schemes are compared without regard to case. During construction a provider may safely access files associated with the default provider but care needs to be taken to avoid circular loading of other installed providers. If circular loading of installed providers is detected then an unspecified error is thrown.</source>
          <target state="translated">通过调用由此类定义的任何 &lt;code&gt;newFileSystem&lt;/code&gt; 方法，对&lt;a href=&quot;spi/filesystemprovider#installedProviders&quot;&gt; &lt;code&gt;installedProviders&lt;/code&gt; &lt;/a&gt;方法的第一次调用将找到并加载所有已安装的文件系统提供程序。使用&lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;类定义的服务提供者加载工具来加载已安装的提供程序。使用系统类加载器加载已安装的提供程序。如果找不到系统类加载器，则使用扩展类加载器；否则，使用扩展类加载器。如果没有扩展类加载器，则使用引导类加载器。通常通过将提供程序放置在应用程序类路径或扩展目录中的JAR文件中来安装提供程序，该JAR文件包含名为 &lt;code&gt;java.nio.file.spi.FileSystemProvider&lt;/code&gt; 的提供程序配置文件。在资源目录 &lt;code&gt;META-INF/services&lt;/code&gt; 中，该文件列出了&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;FileSystemProvider&lt;/code&gt; &lt;/a&gt;的具体子类的一个或多个全限定名，这些子类的参数构造函数为零。已安装的提供程序所在的顺序是特定于实现的。如果实例化了提供程序，并且其&lt;a href=&quot;spi/filesystemprovider#getScheme--&quot;&gt; &lt;code&gt;getScheme&lt;/code&gt; &lt;/a&gt;返回了与先前实例化的提供程序相同的URI方案，则将丢弃最近实例化的副本。比较URI方案时不考虑大小写。在构建过程中，提供者可以安全地访问与默认提供者关联的文件，但是需要注意避免循环加载其他已安装的提供者。如果检测到已安装提供程序的循环加载，则会引发未指定的错误。</target>
        </trans-unit>
        <trans-unit id="8c101353a36400f0f63bb3ab9abfa6a9016bbaca" translate="yes" xml:space="preserve">
          <source>The first invocation of the &lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt;&lt;code&gt;installedProviders&lt;/code&gt;&lt;/a&gt; method, by way of invoking any of the &lt;code&gt;
 newFileSystem&lt;/code&gt; methods defined by this class, locates and loads all installed file system providers. Installed providers are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class. Installed providers are loaded using the system class loader. If the system class loader cannot be found then the platform class loader is used. Providers are typically installed by placing them in a JAR file on the application class path, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileSystemProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, and the file lists one or more fully-qualified names of concrete subclass of &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;FileSystemProvider&lt;/code&gt;&lt;/a&gt; that have a zero argument constructor. The ordering that installed providers are located is implementation specific. If a provider is instantiated and its &lt;a href=&quot;spi/filesystemprovider#getScheme()&quot;&gt;&lt;code&gt;getScheme&lt;/code&gt;&lt;/a&gt; returns the same URI scheme of a provider that was previously instantiated then the most recently instantiated duplicate is discarded. URI schemes are compared without regard to case. During construction a provider may safely access files associated with the default provider but care needs to be taken to avoid circular loading of other installed providers. If circular loading of installed providers is detected then an unspecified error is thrown.</source>
          <target state="translated">通过调用由此类定义的任何 &lt;code&gt; newFileSystem&lt;/code&gt; 方法，对&lt;a href=&quot;spi/filesystemprovider#installedProviders()&quot;&gt; &lt;code&gt;installedProviders&lt;/code&gt; &lt;/a&gt;方法的第一次调用将找到并加载所有已安装的文件系统提供程序。使用&lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;类定义的服务提供者加载工具来加载已安装的提供程序。使用系统类加载器加载已安装的提供程序。如果找不到系统类加载器，则使用平台类加载器。通常通过将提供程序放置在应用程序类路径上的JAR文件中来安装提供程序，该JAR文件在资源目录 &lt;code&gt;META-INF/services&lt;/code&gt; 中包含名为 &lt;code&gt;java.nio.file.spi.FileSystemProvider&lt;/code&gt; 的提供程序配置文件。，并且该文件列出了具有零参数构造函数的&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;FileSystemProvider&lt;/code&gt; &lt;/a&gt;具体子类的一个或多个全限定名称。已安装的提供程序所在的顺序是特定于实现的。如果实例化提供程序，并且其&lt;a href=&quot;spi/filesystemprovider#getScheme()&quot;&gt; &lt;code&gt;getScheme&lt;/code&gt; &lt;/a&gt;返回与先前实例化的提供程序相同的URI方案，则将丢弃最近实例化的副本。比较URI方案时不考虑大小写。在构建过程中，提供程序可以安全地访问与默认提供程序关联的文件，但是需要注意避免循环加载其他已安装的提供程序。如果检测到已安装提供程序的循环加载，则会引发未指定的错误。</target>
        </trans-unit>
        <trans-unit id="50b4cfa2ac06af0620f808ca10930df4c3cf1775" translate="yes" xml:space="preserve">
          <source>The first invocation of this method causes the default provider to be initialized (if not already initialized) and loads any other installed providers as described by the &lt;a href=&quot;../filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">第一次调用此方法将导致默认提供程序被初始化（如果尚未初始化），并按&lt;a href=&quot;../filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; &lt;/a&gt;类的描述加载任何其他已安装的提供程序。</target>
        </trans-unit>
        <trans-unit id="04ddabf3609314c77fc9442c207329a5bac474e5" translate="yes" xml:space="preserve">
          <source>The first invocation of this method creates the channel that is returned. Subsequent invocations of this method return the same channel.</source>
          <target state="translated">这个方法的第一次调用会创建返回的通道。随后对该方法的调用将返回相同的通道。</target>
        </trans-unit>
        <trans-unit id="41806187d179ed163c43e135856d8b855c241487" translate="yes" xml:space="preserve">
          <source>The first invocation of this method locates the default provider object as follows:</source>
          <target state="translated">该方法的第一次调用会定位默认的提供者对象,具体如下。</target>
        </trans-unit>
        <trans-unit id="58220b7cc0880c65c446fb69fdba5d879036d3cd" translate="yes" xml:space="preserve">
          <source>The first invocation of this method works as if invoking it were equivalent to evaluating the expression:</source>
          <target state="translated">第一次调用这个方法的工作原理,就好像调用它相当于评估表达式一样。</target>
        </trans-unit>
        <trans-unit id="7ca058cd84f4d90ef57f22561005b44549ee1824" translate="yes" xml:space="preserve">
          <source>The first is a start signal that prevents any worker from proceeding until the driver is ready for them to proceed;</source>
          <target state="translated">第一个是启动信号,在司机准备好让他们继续前进之前,任何工人都不能继续前进。</target>
        </trans-unit>
        <trans-unit id="89010690973d5a466a568016925bd8250e0db1e5" translate="yes" xml:space="preserve">
          <source>The first item in the array must be the name of the service provider for the &quot;preferred&quot; reader, as it will be used to instantiate the &lt;code&gt;ImageReader&lt;/code&gt; returned by &lt;code&gt;ImageIO.getImageReader(ImageWriter)&lt;/code&gt;.</source>
          <target state="translated">数组中的第一项必须是&amp;ldquo;首选&amp;rdquo;阅读器的服务提供者的名称，因为它将用于实例化 &lt;code&gt;ImageIO.getImageReader(ImageWriter)&lt;/code&gt; 返回的 &lt;code&gt;ImageReader&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9b96b213b3a7afec438c64603d9c66e3022ffe8e" translate="yes" xml:space="preserve">
          <source>The first item in the array must be the name of the service provider for the &quot;preferred&quot; writer, as it will be used to instantiate the &lt;code&gt;ImageWriter&lt;/code&gt; returned by &lt;code&gt;ImageIO.getImageWriter(ImageReader)&lt;/code&gt;.</source>
          <target state="translated">所述阵列中的第一项必须是&amp;ldquo;优选的&amp;rdquo;写入器的服务提供者的名称，因为它会被用于实例化 &lt;code&gt;ImageWriter&lt;/code&gt; 通过返回 &lt;code&gt;ImageIO.getImageWriter(ImageReader)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82745ec93db99b445485eed887cfade634be0e88" translate="yes" xml:space="preserve">
          <source>The first line is line 1.</source>
          <target state="translated">第一行是第一行。</target>
        </trans-unit>
        <trans-unit id="d712c8c96e658d28ae5bf8727956e1bad67dd834" translate="yes" xml:space="preserve">
          <source>The first name in an abstract pathname may be a directory name or, in the case of Microsoft Windows UNC pathnames, a hostname. Each subsequent name in an abstract pathname denotes a directory; the last name may denote either a directory or a file. The &lt;em&gt;empty&lt;/em&gt; abstract pathname has no prefix and an empty name sequence.</source>
          <target state="translated">抽象路径名中的名字可以是目录名，如果是Microsoft Windows UNC路径名，则可以是主机名。抽象路径名中的每个后续名称都表示一个目录。姓氏可以表示目录或文件。该&lt;em&gt;空的&lt;/em&gt;抽象路径名没有前缀和空名称序列。</target>
        </trans-unit>
        <trans-unit id="9bc303af8db48e36c4c66c6bdedc67a512bd52cf" translate="yes" xml:space="preserve">
          <source>The first number in the range of IDs used for internal frame events.</source>
          <target state="translated">用于内部帧事件的ID范围内的第一个数字。</target>
        </trans-unit>
        <trans-unit id="37141897704a9f57efd5588b0c01740b744d6fb2" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for action events.</source>
          <target state="translated">用于动作事件的id范围内的第一个数字。</target>
        </trans-unit>
        <trans-unit id="5b311455257b5f8396bcd1a51a9d0c1bd4251848" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for component events.</source>
          <target state="translated">用于组件事件的id范围内的第一个数字。</target>
        </trans-unit>
        <trans-unit id="ea2dec83a5590e133d8a736a424395f9110cfee6" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for container events.</source>
          <target state="translated">用于容器事件的id范围内的第一个数字。</target>
        </trans-unit>
        <trans-unit id="b9b26b88c313013146d03dc163d14340b6c78c9d" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for focus events.</source>
          <target state="translated">用于焦点事件的id范围内的第一个数字。</target>
        </trans-unit>
        <trans-unit id="fd2879600cbc09ebe50ee9cc9af9b6ba0a6705e3" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for item events.</source>
          <target state="translated">用于项目事件的id范围内的第一个数字。</target>
        </trans-unit>
        <trans-unit id="152d070f7807fc1757fefb801204288c7ee66f3d" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for key events.</source>
          <target state="translated">用于关键事件的id范围内的第一个数字。</target>
        </trans-unit>
        <trans-unit id="8dd930b4621934d75ddab8e7be255982b72242de" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for mouse events.</source>
          <target state="translated">鼠标事件ID范围内的第一个数字。</target>
        </trans-unit>
        <trans-unit id="884054f92755178e2c0ecb00a6d504f92ce507c8" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for text events.</source>
          <target state="translated">用于文本事件的id范围内的第一个数字。</target>
        </trans-unit>
        <trans-unit id="29bb2f4b5ef4ebb2ea108d313ba1df485fdc86b4" translate="yes" xml:space="preserve">
          <source>The first number in the range of ids used for window events.</source>
          <target state="translated">用于窗口事件的id范围内的第一个数字。</target>
        </trans-unit>
        <trans-unit id="eb460a3d41545816fab893228040f63048f7d7fb" translate="yes" xml:space="preserve">
          <source>The first occurrence of the property from the constructor's environment parameter and (for appropriate properties) the applet parameters and system properties.</source>
          <target state="translated">从构造函数的环境参数和(对于适当的属性)小程序参数和系统属性中首次出现的属性。</target>
        </trans-unit>
        <trans-unit id="8f6308e6ea90bd6d645d7b067d249f24b93a9343" translate="yes" xml:space="preserve">
          <source>The first occurrence of the property from the constructor's environment parameter and system properties.</source>
          <target state="translated">从构造函数的环境参数和系统属性中首次出现的属性。</target>
        </trans-unit>
        <trans-unit id="ff7a6ea7d00a42f276b2164fd60502c29eb70ffa" translate="yes" xml:space="preserve">
          <source>The first of two UUIDs is greater than the second if the most significant field in which the UUIDs differ is greater for the first UUID.</source>
          <target state="translated">如果两个UUID之间差异最大的字段大于第一个UUID,则两个UUID中的第一个大于第二个。</target>
        </trans-unit>
        <trans-unit id="32cab14236cd798cfadf3e1be64fb360b8030f9a" translate="yes" xml:space="preserve">
          <source>The first row</source>
          <target state="translated">第一行</target>
        </trans-unit>
        <trans-unit id="2d8ffc9fbdb5b42ccb7e6113a4bea28052899dce" translate="yes" xml:space="preserve">
          <source>The first row that has changed.</source>
          <target state="translated">变化的第一行。</target>
        </trans-unit>
        <trans-unit id="349d7a74a12185a372204feb651bef45ef76c7d7" translate="yes" xml:space="preserve">
          <source>The first service provider found that supports the specified schema language is returned.</source>
          <target state="translated">找到的第一个支持指定模式语言的服务提供者将被返回。</target>
        </trans-unit>
        <trans-unit id="6f39de29791b960b0050651d1adaf3db95249f62" translate="yes" xml:space="preserve">
          <source>The first service provider or empty &lt;code&gt;Optional&lt;/code&gt; if no service providers are located</source>
          <target state="translated">第一个服务提供者；如果未找到服务提供者，则为空 &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b88e35bd663e8d6a276c15cdae081f89486351b" translate="yes" xml:space="preserve">
          <source>The first short data array.</source>
          <target state="translated">第一个短数据阵列。</target>
        </trans-unit>
        <trans-unit id="5e23cf40c525068cb2aa6e67ac2fbcec503f3f80" translate="yes" xml:space="preserve">
          <source>The first subscript is the row index and the second is the column index. This operation uses none of the currently defined rendering hints; the &lt;code&gt;RenderingHints&lt;/code&gt; argument can be null.</source>
          <target state="translated">第一个下标是行索引，第二个是列索引。此操作不使用任何当前定义的渲染提示。在 &lt;code&gt;RenderingHints&lt;/code&gt; 的变量可以为空。</target>
        </trans-unit>
        <trans-unit id="396d36f59149714c5c3764da6a2772b77784a9b2" translate="yes" xml:space="preserve">
          <source>The first three indices refer to color samples; index 0 corresponds to red, index 1 to green, and index 2 to blue.</source>
          <target state="translated">前三个指数指的是颜色样本,指数0对应红色,指数1对应绿色,指数2对应蓝色。</target>
        </trans-unit>
        <trans-unit id="f47ae950941163171dfda88d6714786ffab47ac4" translate="yes" xml:space="preserve">
          <source>The first time a &lt;code&gt;invokevirtual&lt;/code&gt; instruction is executed it is linked, by symbolically resolving the names in the instruction and verifying that the method call is statically legal. This is true of calls to &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt;. In this case, the symbolic type descriptor emitted by the compiler is checked for correct syntax and names it contains are resolved. Thus, an &lt;code&gt;invokevirtual&lt;/code&gt; instruction which invokes a method handle will always link, as long as the symbolic type descriptor is syntactically well-formed and the types exist.</source>
          <target state="translated">第一次执行 &lt;code&gt;invokevirtual&lt;/code&gt; 指令时，它会通过符号化解析指令中的名称并验证方法调用在静态上是合法的而链接起来。对于 &lt;code&gt;invokeExact&lt;/code&gt; 和 &lt;code&gt;invoke&lt;/code&gt; 的调用都是如此。在这种情况下，将检查编译器发出的符号类型描述符的语法是否正确，并解析其中包含的名称。因此，只要符号类型描述符的语法格式正确且类型存在，则调用方法句柄的 &lt;code&gt;invokevirtual&lt;/code&gt; 指令将始终链接。</target>
        </trans-unit>
        <trans-unit id="985e51731d29ab2953416b90ddb0f5a15a287400" translate="yes" xml:space="preserve">
          <source>The first time an &lt;code&gt;invokevirtual&lt;/code&gt; instruction is executed it is linked by symbolically resolving the names in the instruction and verifying that the method call is statically legal. This also holds for calls to &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt;. In this case, the symbolic type descriptor emitted by the compiler is checked for correct syntax, and names it contains are resolved. Thus, an &lt;code&gt;invokevirtual&lt;/code&gt; instruction which invokes a method handle will always link, as long as the symbolic type descriptor is syntactically well-formed and the types exist.</source>
          <target state="translated">第一次执行 &lt;code&gt;invokevirtual&lt;/code&gt; 指令时，将通过符号化解析指令中的名称并验证方法调用在静态上是合法的来进行链接。这也适用于 &lt;code&gt;invokeExact&lt;/code&gt; 和 &lt;code&gt;invoke&lt;/code&gt; 的调用。在这种情况下，将检查编译器发出的符号类型描述符的语法是否正确，并解析其中包含的名称。因此，只要符号类型描述符的语法格式正确且类型存在，则调用方法句柄的 &lt;code&gt;invokevirtual&lt;/code&gt; 指令将始终链接。</target>
        </trans-unit>
        <trans-unit id="4efbaef427b41c4cddb7b71dd9ca3b801b917cbc" translate="yes" xml:space="preserve">
          <source>The first time an &lt;code&gt;invokevirtual&lt;/code&gt; instruction is executed it is linked by symbolically resolving the names in the instruction and verifying that the method call is statically legal. This also holds for calls to access mode methods. In this case, the symbolic type descriptor emitted by the compiler is checked for correct syntax, and names it contains are resolved. Thus, an &lt;code&gt;invokevirtual&lt;/code&gt; instruction which invokes an access mode method will always link, as long as the symbolic type descriptor is syntactically well-formed and the types exist.</source>
          <target state="translated">第一次执行 &lt;code&gt;invokevirtual&lt;/code&gt; 指令时，将通过符号化解析指令中的名称并验证方法调用在静态上是合法的来进行链接。这也适用于对访问模式方法的调用。在这种情况下，将检查编译器发出的符号类型描述符的语法是否正确，并解析其中包含的名称。因此，只要符号类型描述符的语法格式正确且类型存在，则调用访问模式方法的 &lt;code&gt;invokevirtual&lt;/code&gt; 指令将始终链接。</target>
        </trans-unit>
        <trans-unit id="7984f8d9f334e66a61a472a9952f92a917e7ab62" translate="yes" xml:space="preserve">
          <source>The first time this method is called, the security property &quot;ssl.ServerSocketFactory.provider&quot; is examined. If it is non-null, a class by that name is loaded and instantiated. If that is successful and the object is an instance of SSLServerSocketFactory, it is made the default SSL server socket factory.</source>
          <target state="translated">第一次调用该方法时,会检查安全属性 &quot;ssl.ServerSocketFactory.provider&quot;。如果该属性为非空,则加载并实例化该名称的类。如果成功,并且该对象是SSLServerSocketFactory的实例,那么它就会成为默认的SSL服务器套接字工厂。</target>
        </trans-unit>
        <trans-unit id="e23a8d2403200f42d35c95dbaa01e126e21da9de" translate="yes" xml:space="preserve">
          <source>The first time this method is called, the security property &quot;ssl.SocketFactory.provider&quot; is examined. If it is non-null, a class by that name is loaded and instantiated. If that is successful and the object is an instance of SSLSocketFactory, it is made the default SSL socket factory.</source>
          <target state="translated">第一次调用这个方法时,会检查安全属性 &quot;ssl.SocketFactory.provider&quot;。如果该属性为非空,则加载并实例化该名称的类。如果该方法成功,并且该对象是SSLSocketFactory的实例,那么它将成为默认的SSL socket工厂。</target>
        </trans-unit>
        <trans-unit id="8a962c97e6518122f548b76af705929079edf476" translate="yes" xml:space="preserve">
          <source>The first two bytes are read, starting from the current file pointer, as if by &lt;code&gt;readUnsignedShort&lt;/code&gt;. This value gives the number of following bytes that are in the encoded string, not the length of the resulting string. The following bytes are then interpreted as bytes encoding characters in the modified UTF-8 format and are converted into characters.</source>
          <target state="translated">从当前文件指针开始读取前两个字节，就像通过 &lt;code&gt;readUnsignedShort&lt;/code&gt; 一样。此值给出编码字符串中的后续字节数，而不是结果字符串的长度。随后，以下字节被解释为以修改后的UTF-8格式编码字符的字节，并被转换为字符。</target>
        </trans-unit>
        <trans-unit id="93f09dc332a6d87cbc7f2700d1dcb772db50c731" translate="yes" xml:space="preserve">
          <source>The first two items are simple menu items, labeled &lt;code&gt;&quot;Basic&quot;&lt;/code&gt; and &lt;code&gt;&quot;Simple&quot;&lt;/code&gt;. Following these two items is a separator, which is itself a menu item, created with the label &lt;code&gt;&quot;-&quot;&lt;/code&gt;. Next is an instance of &lt;code&gt;CheckboxMenuItem&lt;/code&gt; labeled &lt;code&gt;&quot;Check&quot;&lt;/code&gt;. The final menu item is a submenu labeled &lt;code&gt;&quot;More&amp;nbsp;Examples&quot;&lt;/code&gt;, and this submenu is an instance of &lt;code&gt;Menu&lt;/code&gt;.</source>
          <target state="translated">前两个项目是简单菜单项，分别标记为 &lt;code&gt;&quot;Basic&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;Simple&quot;&lt;/code&gt; 。在这两个项目之后是一个分隔符，它本身是一个菜单项，使用标签 &lt;code&gt;&quot;-&quot;&lt;/code&gt; 创建。接下来是 &lt;code&gt;CheckboxMenuItem&lt;/code&gt; 的实例，标记为 &lt;code&gt;&quot;Check&quot;&lt;/code&gt; 。最终菜单项是一个标记为 &lt;code&gt;&quot;More&amp;nbsp;Examples&quot;&lt;/code&gt; 子菜单，该子菜单是 &lt;code&gt;Menu&lt;/code&gt; 的一个实例。</target>
        </trans-unit>
        <trans-unit id="0d15c31a1476ba8c9f7c7d8d27e82b5d640f1a77" translate="yes" xml:space="preserve">
          <source>The first unsigned-short data array.</source>
          <target state="translated">第一个无符号短数据阵列。</target>
        </trans-unit>
        <trans-unit id="c213cb05e58269d0e6559b0fac1fb591d498dc45" translate="yes" xml:space="preserve">
          <source>The first view shows the button as it appears normally. The second view shows the button when it has input focus. Its outline is darkened to let the user know that it is an active object. The third view shows the button when the user clicks the mouse over the button, and thus requests that an action be performed.</source>
          <target state="translated">第一个视图显示按钮正常出现的样子。第二个视图显示的是输入焦点时的按钮。它的轮廓变暗,让用户知道它是一个活动对象。第三种视图显示的是当用户在按钮上点击鼠标,从而请求执行操作时的按钮。</target>
        </trans-unit>
        <trans-unit id="fbae85dad2c6f7a5278ce4329244cf84e25dc187" translate="yes" xml:space="preserve">
          <source>The first week of a week-based-year is the first Monday-based week of the standard ISO year that has at least 4 days in the new year.</source>
          <target state="translated">以周为单位的年的第一周是指以周一为单位的标准ISO年的第一周,在新的一年中至少有4天。</target>
        </trans-unit>
        <trans-unit id="6840846e65ec7f260d3170cb487c39754d2913de" translate="yes" xml:space="preserve">
          <source>The fist argument of the permission required to execute this diagnostic command or null if no permission is required</source>
          <target state="translated">执行该诊断命令所需权限的第一个参数,如果不需要权限则为空。</target>
        </trans-unit>
        <trans-unit id="0316cde32b5bdfb9b4fd9633c6be6b42a876e337" translate="yes" xml:space="preserve">
          <source>The fixed content-length when using fixed-length streaming mode.</source>
          <target state="translated">使用固定长度流媒体模式时的固定内容长度。</target>
        </trans-unit>
        <trans-unit id="4cf30efc47ef55fd6ea1c557d0031cbff7deeca7" translate="yes" xml:space="preserve">
          <source>The fixed content-length when using fixed-length streaming mode. A value of &lt;code&gt;-1&lt;/code&gt; means fixed-length streaming mode is disabled for output.</source>
          <target state="translated">使用固定长度流模式时的固定内容长度。值 &lt;code&gt;-1&lt;/code&gt; 表示禁用固定长度的流模式输出。</target>
        </trans-unit>
        <trans-unit id="18122c06563b7f982531824d6ea7e1e9e3c9b49b" translate="yes" xml:space="preserve">
          <source>The flag</source>
          <target state="translated">旗帜</target>
        </trans-unit>
        <trans-unit id="9ce4a81d34da195f11b58288ebb14bbff3d3462c" translate="yes" xml:space="preserve">
          <source>The flag for recalculating the minimum preferred size.</source>
          <target state="translated">用于重新计算最小首选尺寸的标志。</target>
        </trans-unit>
        <trans-unit id="3bdde16f19a07f9b8dc2c1020a660b4e0748e32a" translate="yes" xml:space="preserve">
          <source>The flag implies UNICODE_CASE, that is, it enables Unicode-aware case folding.</source>
          <target state="translated">该标志意味着UNICODE_CASE,也就是说,它启用了Unicode-aware case folding。</target>
        </trans-unit>
        <trans-unit id="8475b1dcbef3b5a8dfaaa365038143cbaecb1e14" translate="yes" xml:space="preserve">
          <source>The flags</source>
          <target state="translated">旗帜</target>
        </trans-unit>
        <trans-unit id="acf1c6f398fdcbcb2dd9d5e16e98bf9f77cfd517" translate="yes" xml:space="preserve">
          <source>The flags CASE_INSENSITIVE and UNICODE_CASE retain their impact on matching when used in conjunction with this flag. The other flags become superfluous.</source>
          <target state="translated">标志CASE_INSENSITIVE和UNICODE_CASE与该标志一起使用时,保留其对匹配的影响。其他标志就显得多余了。</target>
        </trans-unit>
        <trans-unit id="07c51b56a837ef2b8a02eed0aace501dd2b7868a" translate="yes" xml:space="preserve">
          <source>The flags field contains an illegal flag (something other than FINAL, SYNTHETIC, or MANDATED)</source>
          <target state="translated">标志字段包含一个非法标志(除FINAL、SYNTHETIC或MANDATED以外的其他标志)。</target>
        </trans-unit>
        <trans-unit id="f7b6efae110c00fda7a7b4252851296766762bd5" translate="yes" xml:space="preserve">
          <source>The flags which tell if a specified calendar field for the calendar is set.</source>
          <target state="translated">告知是否设置了日历的指定日历字段的标志。</target>
        </trans-unit>
        <trans-unit id="6d843126f25e81dcab6945d31541378846e0fe18" translate="yes" xml:space="preserve">
          <source>The flags which tell if a specified calendar field for the calendar is set. A new object has no fields set. After the first call to a method which generates the fields, they all remain set after that. This is an array of &lt;code&gt;FIELD_COUNT&lt;/code&gt; booleans, with index values &lt;code&gt;ERA&lt;/code&gt; through &lt;code&gt;DST_OFFSET&lt;/code&gt;.</source>
          <target state="translated">指示是否设置了日历的指定日历字段的标志。没有设置新对象。首次调用生成字段的方法后，它们都将保持设置状态。这是一个 &lt;code&gt;FIELD_COUNT&lt;/code&gt; 布尔数组，其索引值为 &lt;code&gt;ERA&lt;/code&gt; 到 &lt;code&gt;DST_OFFSET&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0adaae78bcbe2a1b61d64399723374aac50d29d" translate="yes" xml:space="preserve">
          <source>The float at the buffer's current position</source>
          <target state="translated">缓冲区当前位置的浮点数。</target>
        </trans-unit>
        <trans-unit id="5f5dd8efc09209346141f04c0616a37cc7043005" translate="yes" xml:space="preserve">
          <source>The float at the given index</source>
          <target state="translated">给定指数的浮点数</target>
        </trans-unit>
        <trans-unit id="df503d78651dfa6cbdc66ce61ad5b430069142aa" translate="yes" xml:space="preserve">
          <source>The float value at the buffer's current position</source>
          <target state="translated">缓冲区当前位置的浮点数。</target>
        </trans-unit>
        <trans-unit id="9d0d1c8af02f3824120d9d83ef3d660c0196db65" translate="yes" xml:space="preserve">
          <source>The float value at the given index</source>
          <target state="translated">给定指数的浮点数</target>
        </trans-unit>
        <trans-unit id="a61f9f8de1e090952e6ef736612095d26f83c261" translate="yes" xml:space="preserve">
          <source>The float value in the specified unit.</source>
          <target state="translated">指定单位的浮点数。</target>
        </trans-unit>
        <trans-unit id="cf38f97e89711d18ff8d18b3b447db9c2e704c37" translate="yes" xml:space="preserve">
          <source>The floating-point number adjacent to &lt;code&gt;start&lt;/code&gt; in the direction of &lt;code&gt;direction&lt;/code&gt;.</source>
          <target state="translated">邻近浮点数到 &lt;code&gt;start&lt;/code&gt; 在方向 &lt;code&gt;direction&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6c9bf2083aa59da93c11b568d897301a010de3b" translate="yes" xml:space="preserve">
          <source>The floats between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the float at index</source>
          <target state="translated">缓冲区当前位置和极限位置之间的浮点数,如果有的话,会被复制到缓冲区的开始。也就是说,位于index</target>
        </trans-unit>
        <trans-unit id="e0d99827c8ce6a7f1ce1c355b0240827dea1dca3" translate="yes" xml:space="preserve">
          <source>The floor modulus is &lt;code&gt;x - (floorDiv(x, y) * y)&lt;/code&gt;, has the same sign as the divisor &lt;code&gt;y&lt;/code&gt;, and is in the range of &lt;code&gt;-abs(y) &amp;lt; r &amp;lt; +abs(y)&lt;/code&gt;.</source>
          <target state="translated">底模为 &lt;code&gt;x - (floorDiv(x, y) * y)&lt;/code&gt; ，具有与除数 &lt;code&gt;y&lt;/code&gt; 相同的符号，并且在 &lt;code&gt;-abs(y) &amp;lt; r &amp;lt; +abs(y)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="280e33602d3b6fb786402cff680f04e20b71bb69" translate="yes" xml:space="preserve">
          <source>The flow of data containing the response body is immutable. Specifically, it is a flow of unmodifiable lists of read-only ByteBuffers.</source>
          <target state="translated">包含响应体的数据流是不可改变的。具体来说,它是一个不可修改的只读ByteBuffers列表流。</target>
        </trans-unit>
        <trans-unit id="bc909ee2dbad402f4622da99457457697a983db4" translate="yes" xml:space="preserve">
          <source>The focus behavior of this method can be implemented uniformly across platforms, and thus developers are strongly encouraged to use this method over &lt;code&gt;requestFocus(FocusEvent.Cause)&lt;/code&gt; when possible. Code which relies on &lt;code&gt;requestFocus(FocusEvent.Cause)&lt;/code&gt; may exhibit different focus behavior on different platforms.</source>
          <target state="translated">此方法的焦点行为可以在各个平台上统一实现，因此，强烈建议开发人员在可能的情况下在 &lt;code&gt;requestFocus(FocusEvent.Cause)&lt;/code&gt; 上使用此方法。依赖 &lt;code&gt;requestFocus(FocusEvent.Cause)&lt;/code&gt; 的代码可能在不同平台上表现出不同的焦点行为。</target>
        </trans-unit>
        <trans-unit id="fe48a0cbbce340eaf18bd00bd02e43fdb1ec2645" translate="yes" xml:space="preserve">
          <source>The focus behavior of this method can be implemented uniformly across platforms, and thus developers are strongly encouraged to use this method over &lt;code&gt;requestFocus&lt;/code&gt; when possible. Code which relies on &lt;code&gt;requestFocus&lt;/code&gt; may exhibit different focus behavior on different platforms.</source>
          <target state="translated">此方法的焦点行为可以在各个平台上统一实现，因此，强烈建议开发人员在可能的情况下在 &lt;code&gt;requestFocus&lt;/code&gt; 上使用此方法。依赖 &lt;code&gt;requestFocus&lt;/code&gt; 的代码可能在不同平台上表现出不同的焦点行为。</target>
        </trans-unit>
        <trans-unit id="ed1e3f15a9fbddf35cf3b3d88086c04d0af8792d" translate="yes" xml:space="preserve">
          <source>The focus owner component will receive a permanent FOCUS_LOST event. After this operation completes, the native windowing system will discard all user-generated KeyEvents until the user selects a new Component to receive focus, or a Component is given focus explicitly via a call to &lt;code&gt;requestFocus()&lt;/code&gt;. This operation does not change the focused or active Windows.</source>
          <target state="translated">焦点所有者组件将收到一个永久的FOCUS_LOST事件。在此操作完成之后，本机窗口系统将丢弃所有用户生成的KeyEvent，直到用户选择一个新的Component来接收焦点，或者通过调用 &lt;code&gt;requestFocus()&lt;/code&gt; 显式地为Component赋予了焦点。此操作不会更改焦点或活动的Windows。</target>
        </trans-unit>
        <trans-unit id="d82ebe64b2c66aa82c60f6744718ef051e35870d" translate="yes" xml:space="preserve">
          <source>The focus request effect may also depend on the provided cause value. If this request is succeed the &lt;code&gt;FocusEvent&lt;/code&gt; generated in the result will receive the cause value specified as the argument of method. If this request is denied because this Component's top-level Window cannot become the focused Window, the request will be remembered and will be granted when the Window is later focused by the user.</source>
          <target state="translated">焦点请求的效果还可能取决于提供的原因值。如果此请求成功，则在结果中生成的 &lt;code&gt;FocusEvent&lt;/code&gt; 将接收指定为方法参数的原因值。如果由于该组件的顶级Window不能成为焦点窗口而拒绝了该请求，则该请求将被记住并在以后由用户聚焦Window时被批准。</target>
        </trans-unit>
        <trans-unit id="5dea7f848e14ad78950943d5697e0debbf25f958" translate="yes" xml:space="preserve">
          <source>The focus request effect may also depend on the provided cause value. If this request is succeed the &lt;code&gt;FocusEvent&lt;/code&gt; generated in the result will receive the cause value specified as the argument of the method.</source>
          <target state="translated">焦点请求的效果还可能取决于提供的原因值。如果此请求成功，则在结果中生成的 &lt;code&gt;FocusEvent&lt;/code&gt; 将接收指定为方法参数的原因值。</target>
        </trans-unit>
        <trans-unit id="8daf20c9b447db91c0278200268412cb2757a1c2" translate="yes" xml:space="preserve">
          <source>The focus request effect may also depend on the provided cause value. If this request is succeed the {FocusEvent} generated in the result will receive the cause value specified as the argument of the method.</source>
          <target state="translated">聚焦请求效果也可能取决于提供的原因值。如果这个请求成功,结果中生成的{FocusEvent}将收到作为方法参数指定的原因值。</target>
        </trans-unit>
        <trans-unit id="52e727459f97e367a24e63ce5e26868c1cacfac2" translate="yes" xml:space="preserve">
          <source>The focusability of a peer is implementation-dependent. Sun recommends that all implementations for a particular native platform construct peers with the same focusability. The recommendations for Windows and Unix are that Canvases, Labels, Panels, Scrollbars, ScrollPanes, Windows, and lightweight Components have non-focusable peers, and all other Components have focusable peers. These recommendations are used in the Sun AWT implementations. Note that the focusability of a Component's peer is different from, and does not impact, the focusability of the Component itself.</source>
          <target state="translated">对等体的可关注性是依赖于实现的。Sun建议所有针对特定本地平台的实现都构建具有相同可聚焦性的对等体。对Windows和Unix的建议是Canvases、Labels、Panels、Scrollbars、ScrollPanes、Windows和轻量级组件具有不可聚焦的对等体,而所有其他组件具有可聚焦的对等体。这些建议在Sun AWT的实现中被使用。请注意,一个Component的对等体的可聚焦性与Component本身的可聚焦性不同,也不影响它的可聚焦性。</target>
        </trans-unit>
        <trans-unit id="c1c6d627ead12229c807ce22675b0c1519b3cc76" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;xml&lt;/a&gt; accomplishes the same thing:</source>
          <target state="translated">以下&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;xml&lt;/a&gt;完成相同的操作：</target>
        </trans-unit>
        <trans-unit id="ebb150d5516ba40c7da18d05a5ad5efc9186389f" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;xml&lt;/a&gt; accomplishes the same thing:</source>
          <target state="translated">以下&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;xml&lt;/a&gt;完成相同的操作：</target>
        </trans-unit>
        <trans-unit id="a4881b74aec50637258a768368531331b69b2cb6" translate="yes" xml:space="preserve">
          <source>The following &lt;a id=&quot;dFlags&quot;&gt;flags&lt;/a&gt; apply to general conversions:</source>
          <target state="translated">以下&lt;a id=&quot;dFlags&quot;&gt;标志&lt;/a&gt;适用于常规转换：</target>
        </trans-unit>
        <trans-unit id="4c91ab1fe4100c95d32d44f78a5b7e9f4ad435ab" translate="yes" xml:space="preserve">
          <source>The following &lt;a id=&quot;example&quot;&gt;example&lt;/a&gt; shows how this may be done:</source>
          <target state="translated">以下&lt;a id=&quot;example&quot;&gt;示例&lt;/a&gt;显示了如何完成此操作：</target>
        </trans-unit>
        <trans-unit id="2d2e8bee1741cb35e48bf15acf57384e8c8d6ebd" translate="yes" xml:space="preserve">
          <source>The following &lt;a id=&quot;intFlags&quot;&gt;flags&lt;/a&gt; apply to numeric integral conversions:</source>
          <target state="translated">以下&lt;a id=&quot;intFlags&quot;&gt;标志&lt;/a&gt;适用于数字积分转换：</target>
        </trans-unit>
        <trans-unit id="12aac71ba5c65f1b9823244ddc37b779b34b0675" translate="yes" xml:space="preserve">
          <source>The following &lt;a id=&quot;sample&quot;&gt;example&lt;/a&gt; shows a member of a resource bundle family with the base name &quot;MyResources&quot;. The text defines the bundle &quot;MyResources_de&quot;, the German member of the bundle family. This member is based on &lt;code&gt;PropertyResourceBundle&lt;/code&gt;, and the text therefore is the content of the file &quot;MyResources_de.properties&quot; (a related &lt;a href=&quot;listresourcebundle#sample&quot;&gt;example&lt;/a&gt; shows how you can add bundles to this family that are implemented as subclasses of &lt;code&gt;ListResourceBundle&lt;/code&gt;). The keys in this example are of the form &quot;s1&quot; etc. The actual keys are entirely up to your choice, so long as they are the same as the keys you use in your program to retrieve the objects from the bundle. Keys are case-sensitive.</source>
          <target state="translated">以下&lt;a id=&quot;sample&quot;&gt;示例&lt;/a&gt;显示了基本名称为&amp;ldquo; MyResources&amp;rdquo;的资源包家族的成员。文本定义了捆绑软件家族的德语成员&amp;ldquo; MyResources_de&amp;rdquo;捆绑软件。该成员基于 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; ，因此文本是文件&amp;ldquo; MyResources_de.properties&amp;rdquo;的内容（一个相关&lt;a href=&quot;listresourcebundle#sample&quot;&gt;示例&lt;/a&gt;显示了如何将捆绑软件添加到该系列中，这些捆绑软件被实现为 &lt;code&gt;ListResourceBundle&lt;/code&gt; 的子类）。本示例中的键的形式为&amp;ldquo; s1&amp;rdquo;等。实际键完全由您选择，只要它们与您在程序中用于从包中检索对象的键相同即可。键区分大小写。</target>
        </trans-unit>
        <trans-unit id="a1d70d7905db1922022a89a8a3ea9dc6885b1ebe" translate="yes" xml:space="preserve">
          <source>The following &lt;a id=&quot;sample&quot;&gt;example&lt;/a&gt; shows two members of a resource bundle family with the base name &quot;MyResources&quot;. &quot;MyResources&quot; is the default member of the bundle family, and &quot;MyResources_fr&quot; is the French member. These members are based on &lt;code&gt;ListResourceBundle&lt;/code&gt; (a related &lt;a href=&quot;propertyresourcebundle#sample&quot;&gt;example&lt;/a&gt; shows how you can add a bundle to this family that's based on a properties file). The keys in this example are of the form &quot;s1&quot; etc. The actual keys are entirely up to your choice, so long as they are the same as the keys you use in your program to retrieve the objects from the bundle. Keys are case-sensitive.</source>
          <target state="translated">以下&lt;a id=&quot;sample&quot;&gt;示例&lt;/a&gt;显示了基本名称为&amp;ldquo; MyResources&amp;rdquo;的资源包家族的两个成员。 &amp;ldquo; MyResources&amp;rdquo;是捆绑软件家族的默认成员，&amp;ldquo; MyResources_fr&amp;rdquo;是法语成员。这些成员基于 &lt;code&gt;ListResourceBundle&lt;/code&gt; （相关&lt;a href=&quot;propertyresourcebundle#sample&quot;&gt;示例&lt;/a&gt;显示了如何向基于属性文件的该族添加捆绑包）。本示例中的键的形式为&amp;ldquo; s1&amp;rdquo;等。实际键完全由您选择，只要它们与您在程序中用于从包中检索对象的键相同即可。键区分大小写。</target>
        </trans-unit>
        <trans-unit id="34b31fc78f10c0c8e222a5a96f8da8b395480561" translate="yes" xml:space="preserve">
          <source>The following &lt;a name=&quot;dFlags&quot;&gt;flags&lt;/a&gt; apply to general conversions:</source>
          <target state="translated">以下&lt;a name=&quot;dFlags&quot;&gt;标志&lt;/a&gt;适用于常规转换：</target>
        </trans-unit>
        <trans-unit id="718105550381be452dea567eb4cb4d403db03a9d" translate="yes" xml:space="preserve">
          <source>The following &lt;a name=&quot;intFlags&quot;&gt;flags&lt;/a&gt; apply to numeric integral conversions:</source>
          <target state="translated">以下&lt;a name=&quot;intFlags&quot;&gt;标志&lt;/a&gt;适用于数字整数转换：</target>
        </trans-unit>
        <trans-unit id="6c97a3fa3251171b01f24900b04fa28963a31f2e" translate="yes" xml:space="preserve">
          <source>The following &lt;a name=&quot;sample&quot;&gt;example&lt;/a&gt; shows a member of a resource bundle family with the base name &quot;MyResources&quot;. The text defines the bundle &quot;MyResources_de&quot;, the German member of the bundle family. This member is based on &lt;code&gt;PropertyResourceBundle&lt;/code&gt;, and the text therefore is the content of the file &quot;MyResources_de.properties&quot; (a related &lt;a href=&quot;listresourcebundle#sample&quot;&gt;example&lt;/a&gt; shows how you can add bundles to this family that are implemented as subclasses of &lt;code&gt;ListResourceBundle&lt;/code&gt;). The keys in this example are of the form &quot;s1&quot; etc. The actual keys are entirely up to your choice, so long as they are the same as the keys you use in your program to retrieve the objects from the bundle. Keys are case-sensitive.</source>
          <target state="translated">以下&lt;a name=&quot;sample&quot;&gt;示例&lt;/a&gt;显示了基本名称为&amp;ldquo; MyResources&amp;rdquo;的资源包家族的成员。文本定义了捆绑软件家族的德语成员&amp;ldquo; MyResources_de&amp;rdquo;捆绑软件。该成员基于 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; ，因此文本是文件&amp;ldquo; MyResources_de.properties&amp;rdquo;的内容（一个相关&lt;a href=&quot;listresourcebundle#sample&quot;&gt;示例&lt;/a&gt;显示了如何向该家族添加捆绑软件，这些捆绑软件实现为 &lt;code&gt;ListResourceBundle&lt;/code&gt; 的子类）。本示例中的键的形式为&amp;ldquo; s1&amp;rdquo;等。实际键完全取决于您的选择，只要它们与您在程序中用于从包中检索对象的键相同即可。键区分大小写。</target>
        </trans-unit>
        <trans-unit id="ab872f1920dd3b6207973c5efd102398d0548897" translate="yes" xml:space="preserve">
          <source>The following &lt;a name=&quot;sample&quot;&gt;example&lt;/a&gt; shows two members of a resource bundle family with the base name &quot;MyResources&quot;. &quot;MyResources&quot; is the default member of the bundle family, and &quot;MyResources_fr&quot; is the French member. These members are based on &lt;code&gt;ListResourceBundle&lt;/code&gt; (a related &lt;a href=&quot;propertyresourcebundle#sample&quot;&gt;example&lt;/a&gt; shows how you can add a bundle to this family that's based on a properties file). The keys in this example are of the form &quot;s1&quot; etc. The actual keys are entirely up to your choice, so long as they are the same as the keys you use in your program to retrieve the objects from the bundle. Keys are case-sensitive.</source>
          <target state="translated">以下&lt;a name=&quot;sample&quot;&gt;示例&lt;/a&gt;显示了基本名称为&amp;ldquo; MyResources&amp;rdquo;的资源包家族的两个成员。 &amp;ldquo; MyResources&amp;rdquo;是捆绑软件家族的默认成员，&amp;ldquo; MyResources_fr&amp;rdquo;是法语成员。这些成员基于 &lt;code&gt;ListResourceBundle&lt;/code&gt; （相关&lt;a href=&quot;propertyresourcebundle#sample&quot;&gt;示例&lt;/a&gt;显示了如何向基于属性文件的该族添加捆绑包）。在此示例中，键的形式为&amp;ldquo; s1&amp;rdquo;等。实际键完全取决于您的选择，只要它们与您在程序中用于从包中检索对象的键相同即可。键区分大小写。</target>
        </trans-unit>
        <trans-unit id="4d7bc9d38cfb742a7ccf3ed1fac435611b40a277" translate="yes" xml:space="preserve">
          <source>The following &lt;b&gt;Predefined Character classes&lt;/b&gt; and &lt;b&gt;POSIX character classes&lt;/b&gt; are in conformance with the recommendation of</source>
          <target state="translated">以下&lt;b&gt;预定义字符类&lt;/b&gt;和&lt;b&gt;POSIX字符类&lt;/b&gt;符合以下建议：</target>
        </trans-unit>
        <trans-unit id="3bdbb766d31b298fea0830eadf61cfd0cf5d8817" translate="yes" xml:space="preserve">
          <source>The following &lt;b&gt;conversions&lt;/b&gt; are performed:</source>
          <target state="translated">执行以下&lt;b&gt;转换&lt;/b&gt;：</target>
        </trans-unit>
        <trans-unit id="44d784bdfbe5ffed1bb41380bc3830e293c48f1e" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;Finishings&lt;/code&gt; values are more specific; they indicate a corner or an edge as if the document were a portrait document:</source>
          <target state="translated">以下 &lt;code&gt;Finishings&lt;/code&gt; 值更具体；它们指示拐角或边缘，就像文档是纵向文档一样：</target>
        </trans-unit>
        <trans-unit id="c12b850130d44e2cdaecf419de9717707a564dd0" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;JTree&lt;/code&gt; methods use &quot;visible&quot; to mean &quot;displayed&quot;:</source>
          <target state="translated">以下 &lt;code&gt;JTree&lt;/code&gt; 方法使用&amp;ldquo;可见&amp;rdquo;表示&amp;ldquo;显示&amp;rdquo;：</target>
        </trans-unit>
        <trans-unit id="dae9623d0c0d956fdb794a25b86835fd7a72be31" translate="yes" xml:space="preserve">
          <source>The following Finishings values are more specific; they indicate a corner or an edge as if the document were a portrait document:</source>
          <target state="translated">以下 Finishings 值更具体;它们表示文件的一个角或一个边缘,就像文件是一个纵向文件一样。</target>
        </trans-unit>
        <trans-unit id="9cdbc4fef23bc1ae88072bf001afc496ccf5effd" translate="yes" xml:space="preserve">
          <source>The following JNDI environment properties may be used when creating the initial context.</source>
          <target state="translated">创建初始上下文时,可以使用以下JNDI环境属性。</target>
        </trans-unit>
        <trans-unit id="7d489fbed0473aef722ac8b09e75be9176cc9c80" translate="yes" xml:space="preserve">
          <source>The following MIME types do not support, or are treated as though they do not support, the charset parameter:</source>
          <target state="translated">以下MIME类型不支持或被视为不支持charset参数。</target>
        </trans-unit>
        <trans-unit id="998e8b1f1fff339ae9d53d38b65e9d8fd529ed6a" translate="yes" xml:space="preserve">
          <source>The following MIME types support, or are treated as though they support, the charset parameter:</source>
          <target state="translated">以下MIME类型支持或被视为支持charset参数。</target>
        </trans-unit>
        <trans-unit id="df4565a08976159f98d000170c1e13b94b809704" translate="yes" xml:space="preserve">
          <source>The following Unicode characters are ignorable in a Java identifier or a Unicode identifier:</source>
          <target state="translated">以下Unicode字符在Java标识符或Unicode标识符中是不可忽略的。</target>
        </trans-unit>
        <trans-unit id="4ca21e25a67399fdd5f6d00d42c8747788aa0b41" translate="yes" xml:space="preserve">
          <source>The following XML standards apply:</source>
          <target state="translated">适用以下XML标准:</target>
        </trans-unit>
        <trans-unit id="e1ee2b7fc161b561363a09eb8a74b719ec01fd3b" translate="yes" xml:space="preserve">
          <source>The following are calendar-specific fields and their values to be supported.</source>
          <target state="translated">以下是要支持的日历特定字段及其值。</target>
        </trans-unit>
        <trans-unit id="f0b92be08cad28f715f6320945131c35c8b3277f" translate="yes" xml:space="preserve">
          <source>The following are errors:</source>
          <target state="translated">以下是错误的是:</target>
        </trans-unit>
        <trans-unit id="27f242fe17aebfc38c4d46f59d88bb9f72485164" translate="yes" xml:space="preserve">
          <source>The following are examples of lowercase characters:</source>
          <target state="translated">以下是小写字母的例子。</target>
        </trans-unit>
        <trans-unit id="05d1989cc2fb19eeffe91f625bf1710856eae32f" translate="yes" xml:space="preserve">
          <source>The following are examples of parameters for constructing time zone objects.</source>
          <target state="translated">以下是构建时区对象的参数示例。</target>
        </trans-unit>
        <trans-unit id="c270078ad6b151e92fcc3a3f5df550c25921664d" translate="yes" xml:space="preserve">
          <source>The following are examples of uppercase characters:</source>
          <target state="translated">以下是大写字母的例子。</target>
        </trans-unit>
        <trans-unit id="7f902e7ce71e7969f8b0bc66620cd5a7f55944f6" translate="yes" xml:space="preserve">
          <source>The following are examples of using the predefined body handlers to convert a flow of response body data into common high-level Java objects:</source>
          <target state="translated">以下是使用预定义body处理程序将响应体数据流转换为普通高级Java对象的示例。</target>
        </trans-unit>
        <trans-unit id="f5ee0e0b8a290697ed79df522190652147f3e31a" translate="yes" xml:space="preserve">
          <source>The following are examples of using the predefined body publishers to convert common high-level Java objects into a flow of data suitable for sending as a request body:</source>
          <target state="translated">以下是使用预定义的body发布器将常见的高级Java对象转换为适合作为请求体发送的数据流的示例。</target>
        </trans-unit>
        <trans-unit id="bd3e8596127bc1cb56466afb3fa9267998bd21de" translate="yes" xml:space="preserve">
          <source>The following are examples of using the predefined body subscribers to convert a flow of response body data into common high-level Java objects:</source>
          <target state="translated">下面是使用预定义的主体订阅者将响应主体数据流转换为常见的高级Java对象的例子。</target>
        </trans-unit>
        <trans-unit id="60a5c21ec25e055a782b032c59385ba40939fb9a" translate="yes" xml:space="preserve">
          <source>The following are examples of using the predefined collectors to perform common mutable reduction tasks:</source>
          <target state="translated">以下是使用预定义收集器来执行常见的可突变还原任务的例子。</target>
        </trans-unit>
        <trans-unit id="b97bba4fff0b3918e7f07a18b65329ce403bc4f5" translate="yes" xml:space="preserve">
          <source>The following are modeled, but currently not rendered.</source>
          <target state="translated">以下是模型,但目前没有呈现。</target>
        </trans-unit>
        <trans-unit id="9869b3b737829b0afd57282f629afb3659f3487b" translate="yes" xml:space="preserve">
          <source>The following are sample usages. Sample code assumes that the &lt;code&gt;Calendar&lt;/code&gt; constants are statically imported.</source>
          <target state="translated">以下是示例用法。示例代码假定 &lt;code&gt;Calendar&lt;/code&gt; 常量是静态导入的。</target>
        </trans-unit>
        <trans-unit id="71d987106f2fadf17c35148925f24373778218fc" translate="yes" xml:space="preserve">
          <source>The following are standard client info properties. Drivers are not required to support these properties however if the driver supports a client info property that can be described by one of the standard properties, the standard property name should be used.</source>
          <target state="translated">以下是标准的客户端信息属性。驱动程序不需要支持这些属性,但是,如果驱动程序支持的客户端信息属性可以由标准属性之一来描述,则应使用标准属性名称。</target>
        </trans-unit>
        <trans-unit id="62d730b0f64c93754a84e32c9c2254f5b445ccc9" translate="yes" xml:space="preserve">
          <source>The following builds a panel consisting of two labels in one column, followed by two textfields in the next column:</source>
          <target state="translated">下面建立一个面板,由一列中的两个标签和下一列中的两个文本字段组成。</target>
        </trans-unit>
        <trans-unit id="d04cf50de153033d5654b8c69914c1515d75abe8" translate="yes" xml:space="preserve">
          <source>The following cases may result in an AttributeNotFoundException:</source>
          <target state="translated">以下情况可能导致AttributeNotFoundException。</target>
        </trans-unit>
        <trans-unit id="e5acfaa953e3076c682c3b2882e4f2bd0aa0de39" translate="yes" xml:space="preserve">
          <source>The following class and property files are provided:</source>
          <target state="translated">提供以下类和属性文件。</target>
        </trans-unit>
        <trans-unit id="90fef22caa25d68a95a94801857aaaf77c6b34fa" translate="yes" xml:space="preserve">
          <source>The following classes and interfaces make up the &lt;code&gt;javax.sql.rowset.spi&lt;/code&gt; package:</source>
          <target state="translated">以下类和接口组成 &lt;code&gt;javax.sql.rowset.spi&lt;/code&gt; 包：</target>
        </trans-unit>
        <trans-unit id="81dad332c4884662d7929a6f97cdab033d2eefd0" translate="yes" xml:space="preserve">
          <source>The following code can be used to dump a delay queue into a newly allocated array of &lt;code&gt;Delayed&lt;/code&gt;:</source>
          <target state="translated">以下代码可用于将延迟队列转储到新分配的 &lt;code&gt;Delayed&lt;/code&gt; 数组中：</target>
        </trans-unit>
        <trans-unit id="227d1820cd21095e7e036ac8daa93ccb8e9a7890" translate="yes" xml:space="preserve">
          <source>The following code demonstrates typical usage of &lt;code&gt;LinearGradientPaint&lt;/code&gt;:</source>
          <target state="translated">以下代码演示 &lt;code&gt;LinearGradientPaint&lt;/code&gt; 的典型用法：</target>
        </trans-unit>
        <trans-unit id="e2633b08939a6cb725fe62e6be55fea8c45c8e11" translate="yes" xml:space="preserve">
          <source>The following code demonstrates typical usage of &lt;code&gt;RadialGradientPaint&lt;/code&gt;, where the center and focus points are the same:</source>
          <target state="translated">以下代码演示 &lt;code&gt;RadialGradientPaint&lt;/code&gt; 的典型用法，其中中心点和焦点相同：</target>
        </trans-unit>
        <trans-unit id="54180ef3871ceb997221df27b4e4a11af5d8f1aa" translate="yes" xml:space="preserve">
          <source>The following code example creates a set of check boxes in a grid layout:</source>
          <target state="translated">下面的代码示例在网格布局中创建了一组复选框。</target>
        </trans-unit>
        <trans-unit id="0abb0b51490ecf3f6bcdc7c433981853ae7afe8c" translate="yes" xml:space="preserve">
          <source>The following code example produces a new check box group, with three check boxes:</source>
          <target state="translated">下面的代码示例产生一个新的复选框组,有三个复选框。</target>
        </trans-unit>
        <trans-unit id="26b12edd9c74f32a315f18d6e0245a8d205f462f" translate="yes" xml:space="preserve">
          <source>The following code example produces a pop-up menu:</source>
          <target state="translated">下面的代码示例产生一个弹出式菜单。</target>
        </trans-unit>
        <trans-unit id="26190c69388e00e900b9c89c33b9000b686392c1" translate="yes" xml:space="preserve">
          <source>The following code example shows how to construct an Rdn using the constructor that takes type and value as arguments:</source>
          <target state="translated">下面的代码示例展示了如何使用构造函数来构造一个Rdn,该构造函数将类型和值作为参数。</target>
        </trans-unit>
        <trans-unit id="b4dde6fd46d9d98ad6bdb352548d11eda0d76882" translate="yes" xml:space="preserve">
          <source>The following code fragment adds an additional &lt;code&gt;CachedRowSet&lt;/code&gt; object. In this case, the match column (&lt;code&gt;EMP_ID&lt;/code&gt;) is set when the &lt;code&gt;CachedRowSet&lt;/code&gt; object is added to the &lt;code&gt;JoinRowSet&lt;/code&gt; object.</source>
          <target state="translated">以下代码片段添加了一个附加的 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象。在这种情况下，将 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象添加到 &lt;code&gt;JoinRowSet&lt;/code&gt; 对象时，将设置匹配列（ &lt;code&gt;EMP_ID&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="8df174f921047ae28580b54b0cdcc047748ea1ed" translate="yes" xml:space="preserve">
          <source>The following code fragment adds two &lt;code&gt;CachedRowSet&lt;/code&gt; objects to a &lt;code&gt;JoinRowSet&lt;/code&gt; object. Note that in this example, no SQL &lt;code&gt;JOIN&lt;/code&gt; type is set, so the default &lt;code&gt;JOIN&lt;/code&gt; type, which is</source>
          <target state="translated">下面的代码片段将两个 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象添加到 &lt;code&gt;JoinRowSet&lt;/code&gt; 对象中。请注意，在此示例中，未设置SQL &lt;code&gt;JOIN&lt;/code&gt; 类型，因此默认的 &lt;code&gt;JOIN&lt;/code&gt; 类型为</target>
        </trans-unit>
        <trans-unit id="6773b465b3d404ad261c509a280ba3f40b8e5320" translate="yes" xml:space="preserve">
          <source>The following code fragment assumes a continuation from the previous code fragment, meaning that the cursor for the tenth &lt;code&gt;CachedRowSet&lt;/code&gt; object is on the last row. The code moves the cursor to after the last row so that the first call to the method &lt;code&gt;previous&lt;/code&gt; will put the cursor back on the last row. After going through all of the rows in the last page (the &lt;code&gt;CachedRowSet&lt;/code&gt; object</source>
          <target state="translated">下面的代码片段假定与前一个代码片段一起延续，这意味着第十个 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象的光标位于最后一行。该代码的最后一行之后的光标移动到，这样的方法在第一次调用 &lt;code&gt;previous&lt;/code&gt; 就会把最后一行光标移回。浏览完最后一页中的所有行之后（ &lt;code&gt;CachedRowSet&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="eba32858f7519f61ceb0b5a48950849803b2f189" translate="yes" xml:space="preserve">
          <source>The following code fragment changes the second column value in the row just inserted. Note that this code applies when new rows are inserted right after the current row, which is why the method &lt;code&gt;next&lt;/code&gt; moves the cursor to the correct row. Calling the method &lt;code&gt;acceptChanges&lt;/code&gt; writes the change to the data source.</source>
          <target state="translated">以下代码片段更改了刚插入的行中的第二列值。请注意，当在当前行之后立即插入新行时，将应用此代码，这就是为什么该方法 &lt;code&gt;next&lt;/code&gt; 将光标移动到正确的行的原因。调用方法 &lt;code&gt;acceptChanges&lt;/code&gt; 将更改写入数据源。</target>
        </trans-unit>
        <trans-unit id="1d5968a08703e94a4a5aee0f8466d3006c4a1e9e" translate="yes" xml:space="preserve">
          <source>The following code fragment demonstrates a trivial compression and decompression of a string using &lt;code&gt;Deflater&lt;/code&gt; and &lt;code&gt;Inflater&lt;/code&gt;.</source>
          <target state="translated">以下代码片段演示了使用 &lt;code&gt;Deflater&lt;/code&gt; 和 &lt;code&gt;Inflater&lt;/code&gt; 进行字符串的简单压缩和解压缩。</target>
        </trans-unit>
        <trans-unit id="96094c650cc9a333311a4f9bc2c173955b909112" translate="yes" xml:space="preserve">
          <source>The following code fragment demonstrates how a disconnected &lt;code&gt;RowSet&lt;/code&gt; object</source>
          <target state="translated">下面的代码片段演示了断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象的方式</target>
        </trans-unit>
        <trans-unit id="42405a142dbf11f8cdb3fb4c05bfa6fda4339531" translate="yes" xml:space="preserve">
          <source>The following code fragment demonstrates setting the two parameters in the query from the previous example.</source>
          <target state="translated">下面的代码片段演示了如何设置前面例子中查询中的两个参数。</target>
        </trans-unit>
        <trans-unit id="8b3e91b81a281144249ef6addd147d0853975575" translate="yes" xml:space="preserve">
          <source>The following code fragment illustrates how the &lt;code&gt;CachedRowSet&lt;/code&gt; object &lt;code&gt;crs&lt;/code&gt; might have its command property set. Note that if a tool is used to set properties, this is the code that the tool would use.</source>
          <target state="translated">以下代码片段说明了如何设置 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象 &lt;code&gt;crs&lt;/code&gt; 的命令属性。请注意，如果使用工具来设置属性，则这是该工具将使用的代码。</target>
        </trans-unit>
        <trans-unit id="0c5ed96b41606026b4ffa723b73e4581205b95f9" translate="yes" xml:space="preserve">
          <source>The following code fragment illustrates how the &lt;code&gt;CachedRowSet&lt;/code&gt;&amp;trade; object &lt;code&gt;crs&lt;/code&gt; might have its command property set. Note that if a tool is used to set properties, this is the code that the tool would use.</source>
          <target state="translated">以下代码片段说明了如何设置 &lt;code&gt;CachedRowSet&lt;/code&gt; &amp;trade;对象 &lt;code&gt;crs&lt;/code&gt; 的命令属性。请注意，如果使用工具来设置属性，则这是该工具将使用的代码。</target>
        </trans-unit>
        <trans-unit id="7a5a5f06f72114240302fe24ea2111f8e178428b" translate="yes" xml:space="preserve">
          <source>The following code illustrates extracting the bits for pixel &lt;code&gt;x,&amp;nbsp;y&lt;/code&gt; from &lt;code&gt;DataBuffer data&lt;/code&gt; and storing the pixel data in data elements of type &lt;code&gt;dataType&lt;/code&gt;:</source>
          <target state="translated">以下代码说明了从 &lt;code&gt;DataBuffer data&lt;/code&gt; 提取像素 &lt;code&gt;x,&amp;nbsp;y&lt;/code&gt; 的位并将像素数据存储在 &lt;code&gt;dataType&lt;/code&gt; 类型的数据元素中：</target>
        </trans-unit>
        <trans-unit id="3730434f3e75feda52293db7b56b2003199dc119" translate="yes" xml:space="preserve">
          <source>The following code illustrates extracting the bits of the sample representing band &lt;code&gt;b&lt;/code&gt; for pixel &lt;code&gt;x,y&lt;/code&gt; from DataBuffer &lt;code&gt;data&lt;/code&gt;:</source>
          <target state="translated">以下代码说明了如何从DataBuffer &lt;code&gt;data&lt;/code&gt; 提取代表像素 &lt;code&gt;x,y&lt;/code&gt; 的带 &lt;code&gt;b&lt;/code&gt; 的样本的位：</target>
        </trans-unit>
        <trans-unit id="b6eed7502c028b2834e03ee8b5d0c55922f8bb13" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for a rectangular region of pixels from DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by SampleModel &lt;code&gt;sm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose storage layout is described by SampleModel &lt;code&gt;sm2&lt;/code&gt;. The transfer will generally be more efficient than using getPixels/setPixels.</source>
          <target state="translated">以下代码说明了将像素矩形区域的数据从DataBuffer &lt;code&gt;db1&lt;/code&gt; （其存储布局由SampleModel &lt;code&gt;sm1&lt;/code&gt; 描述）传输到DataBuffer &lt;code&gt;db2&lt;/code&gt; （其存储布局由SampleModel &lt;code&gt;sm2&lt;/code&gt; 描述）。传输通常比使用getPixels / setPixels更有效。</target>
        </trans-unit>
        <trans-unit id="cda7de20ca2983fc3786e70123c92da540700ceb" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for one pixel from &lt;code&gt;DataBuffer db1&lt;/code&gt;, whose storage layout is described by &lt;code&gt;ComponentSampleModel csm1&lt;/code&gt;, to &lt;code&gt;DataBuffer db2&lt;/code&gt;, whose storage layout is described by &lt;code&gt;ComponentSampleModel csm2&lt;/code&gt;. The transfer is usually more efficient than using &lt;code&gt;getPixel&lt;/code&gt; and &lt;code&gt;setPixel&lt;/code&gt;.</source>
          <target state="translated">以下代码说明了将一个像素的数据从 &lt;code&gt;DataBuffer db1&lt;/code&gt; （其存储布局由 &lt;code&gt;ComponentSampleModel csm1&lt;/code&gt; 描述）传输到 &lt;code&gt;DataBuffer db2&lt;/code&gt; （其存储布局由 &lt;code&gt;ComponentSampleModel csm2&lt;/code&gt; 描述）。传输通常比使用 &lt;code&gt;getPixel&lt;/code&gt; 和 &lt;code&gt;setPixel&lt;/code&gt; 更有效。</target>
        </trans-unit>
        <trans-unit id="d0e78dca23788effecb923a2485f4949cc8762dd" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for one pixel from &lt;code&gt;DataBuffer db1&lt;/code&gt;, whose storage layout is described by &lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt;&lt;code&gt;mppsm1&lt;/code&gt;, to &lt;code&gt;DataBuffer db2&lt;/code&gt;, whose storage layout is described by &lt;code&gt;MultiPixelPackedSampleModel mppsm2&lt;/code&gt;. The transfer is generally more efficient than using &lt;code&gt;getPixel&lt;/code&gt; or &lt;code&gt;setPixel&lt;/code&gt;.</source>
          <target state="translated">以下代码说明了将一个像素的数据从 &lt;code&gt;DataBuffer db1&lt;/code&gt; （其存储布局由 &lt;code&gt;MultiPixelPackedSampleModel&lt;/code&gt; &lt;code&gt;mppsm1&lt;/code&gt; 描述）传输到 &lt;code&gt;DataBuffer db2&lt;/code&gt; （其存储布局由 &lt;code&gt;MultiPixelPackedSampleModel mppsm2&lt;/code&gt; 描述）。传输通常比使用 &lt;code&gt;getPixel&lt;/code&gt; 或 &lt;code&gt;setPixel&lt;/code&gt; 更有效。</target>
        </trans-unit>
        <trans-unit id="f7c9581a48bebdc273b3472a6803be3c51068a1c" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for one pixel from DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by BandedSampleModel &lt;code&gt;bsm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose storage layout is described by BandedSampleModel &lt;code&gt;bsm2&lt;/code&gt;. The transfer will generally be more efficient than using getPixel/setPixel.</source>
          <target state="translated">以下代码说明了将一个像素的数据从DataBuffer &lt;code&gt;db1&lt;/code&gt; （其存储布局由 &lt;code&gt;bsm1&lt;/code&gt; 描述）传输到DataBuffer &lt;code&gt;db2&lt;/code&gt; （其存储布局由 &lt;code&gt;bsm2&lt;/code&gt; 描述）。传输通常比使用getPixel / setPixel更有效。</target>
        </trans-unit>
        <trans-unit id="786fa58553bbb22bd44b32bbedcc35d26731553a" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for one pixel from DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by SampleModel &lt;code&gt;sm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose storage layout is described by SampleModel &lt;code&gt;sm2&lt;/code&gt;. The transfer will generally be more efficient than using getPixel/setPixel.</source>
          <target state="translated">以下代码说明了将一个像素的数据从DataBuffer &lt;code&gt;db1&lt;/code&gt; （其存储布局由SampleModel &lt;code&gt;sm1&lt;/code&gt; 描述）传输到DataBuffer &lt;code&gt;db2&lt;/code&gt; （其存储布局由SampleModel &lt;code&gt;sm2&lt;/code&gt; 描述）。传输通常比使用getPixel / setPixel更有效。</target>
        </trans-unit>
        <trans-unit id="b6b234ff7b7d5ab1a3fd3a8d7587dd8ea82bea1d" translate="yes" xml:space="preserve">
          <source>The following code illustrates transferring data for one pixel from DataBuffer &lt;code&gt;db1&lt;/code&gt;, whose storage layout is described by SinglePixelPackedSampleModel &lt;code&gt;sppsm1&lt;/code&gt;, to DataBuffer &lt;code&gt;db2&lt;/code&gt;, whose storage layout is described by SinglePixelPackedSampleModel &lt;code&gt;sppsm2&lt;/code&gt;. The transfer will generally be more efficient than using getPixel/setPixel.</source>
          <target state="translated">以下代码说明了将一个像素的数据从DataBuffer &lt;code&gt;db1&lt;/code&gt; （其存储布局由SinglePixelPackedSampleModel &lt;code&gt;sppsm1&lt;/code&gt; 描述）传输到DataBuffer &lt;code&gt;db2&lt;/code&gt; （其存储布局由SinglePixelPackedSampleModel &lt;code&gt;sppsm2&lt;/code&gt; 描述）。传输通常比使用getPixel / setPixel更有效。</target>
        </trans-unit>
        <trans-unit id="72e0bde62e0509950a2948eb0be98aef7dd9a610" translate="yes" xml:space="preserve">
          <source>The following code lets &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; look up only properties-based resources.</source>
          <target state="translated">以下代码使 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 仅查找基于属性的资源。</target>
        </trans-unit>
        <trans-unit id="1f1b78e1c0e997e909e37d743d046d8f92f4a541" translate="yes" xml:space="preserve">
          <source>The following code obtains a service loader for the &lt;code&gt;CodecFactory&lt;/code&gt; service, then uses its iterator (created automatically by the enhanced-for loop) to yield instances of the service providers that are located:</source>
          <target state="translated">以下代码获取 &lt;code&gt;CodecFactory&lt;/code&gt; 服务的服务加载器，然后使用其迭代器（由Enhanced-for循环自动创建）来生成所位于的服务提供者的实例：</target>
        </trans-unit>
        <trans-unit id="163794ef580a81f8d8edef9ba10c1ba07de234f2" translate="yes" xml:space="preserve">
          <source>The following code pops up a file chooser for the user's home directory that sees only .jpg and .gif images:</source>
          <target state="translated">下面的代码会弹出用户主目录的文件选择器,只看到.jpg和.gif图片。</target>
        </trans-unit>
        <trans-unit id="471278ae41758f2c54b16869909329024c1ee488" translate="yes" xml:space="preserve">
          <source>The following code prints a message every time an MBean is registered or unregistered in the MBean Server &lt;code&gt;mbeanServer&lt;/code&gt;:</source>
          <target state="translated">每次在MBean服务器 &lt;code&gt;mbeanServer&lt;/code&gt; 中注册或注销MBean时，以下代码都会显示一条消息：</target>
        </trans-unit>
        <trans-unit id="1a6a91a281ec6e889efce394abfb1affdb89dbd0" translate="yes" xml:space="preserve">
          <source>The following code produces a &lt;code&gt;Calendar&lt;/code&gt; with date 2012-12-31 (Gregorian) because Monday is the first day of a week with the &lt;a href=&quot;gregoriancalendar#iso8601_compatible_setting&quot;&gt; ISO 8601 compatible week parameters&lt;/a&gt;.</source>
          <target state="translated">以下代码生成的 &lt;code&gt;Calendar&lt;/code&gt; 的日期为2012-12-31（格雷戈里），因为星期一是具有&lt;a href=&quot;gregoriancalendar#iso8601_compatible_setting&quot;&gt;ISO 8601兼容星期参数&lt;/a&gt;的一周的第一天。</target>
        </trans-unit>
        <trans-unit id="ab87950614c84f4772b1d7cc623a175f6ebb12a9" translate="yes" xml:space="preserve">
          <source>The following code produces a Japanese &lt;code&gt;Calendar&lt;/code&gt; with date 1989-01-08 (Gregorian), assuming that the default &lt;a href=&quot;calendar#ERA&quot;&gt;&lt;code&gt;ERA&lt;/code&gt;&lt;/a&gt; is &lt;em&gt;Heisei&lt;/em&gt; that started on that day.</source>
          <target state="translated">假设默认&lt;a href=&quot;calendar#ERA&quot;&gt; &lt;code&gt;ERA&lt;/code&gt; &lt;/a&gt;是从当天开始的&lt;em&gt;平成&lt;/em&gt;，以下代码将生成日期为1989-01-08（格里高利历）的日语 &lt;code&gt;Calendar&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1fcb95ad0021945bf1fe0b77677f62f2eddf938b" translate="yes" xml:space="preserve">
          <source>The following code sample demonstrates a typical use of the Java Print Service API: locating printers that can print five double-sided copies of a Postscript document on size A4 paper, creating a print job from one of the returned print services, and calling print.</source>
          <target state="translated">下面的代码示例演示了Java打印服务API的典型使用方法:定位可以在A4纸上打印五份双面Postscript文档的打印机,从返回的打印服务中创建一个打印作业,然后调用打印。</target>
        </trans-unit>
        <trans-unit id="61a3e32e5712ad50c78bb9995574b8ec96afd4b2" translate="yes" xml:space="preserve">
          <source>The following code sample shows how &lt;code&gt;ReferralException&lt;/code&gt; can be used.</source>
          <target state="translated">下面的代码示例演示如何使用 &lt;code&gt;ReferralException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="295dfd5f08ff24826ebdec76538be9d8a00cde7a" translate="yes" xml:space="preserve">
          <source>The following code sample shows how the class may be used:</source>
          <target state="translated">下面的代码示例显示了如何使用该类。</target>
        </trans-unit>
        <trans-unit id="3aafaec893d934c6419ff83a93f47322a1d7a950" translate="yes" xml:space="preserve">
          <source>The following code sets the location of a &lt;code&gt;Window&lt;/code&gt; at (10, 10) relative to the origin of the physical screen of the corresponding &lt;code&gt;GraphicsConfiguration&lt;/code&gt;. If the bounds of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; is not taken into account, the &lt;code&gt;Window&lt;/code&gt; location would be set at (10, 10) relative to the virtual-coordinate system and would appear on the primary physical screen, which might be different from the physical screen of the specified &lt;code&gt;GraphicsConfiguration&lt;/code&gt;.</source>
          <target state="translated">以下代码将 &lt;code&gt;Window&lt;/code&gt; 的位置设置为相对于相应 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 的物理屏幕原点的（10，10）。如果不考虑 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 的范围，则 &lt;code&gt;Window&lt;/code&gt; 位置将相对于虚拟坐标系设置为（10，10），并出现在主物理屏幕上，该屏幕可能与虚拟坐标系的物理屏幕不同。指定的 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67f6a1717d96bf1b300af99b3d22f11d89ab908e" translate="yes" xml:space="preserve">
          <source>The following code sets the location of the &lt;code&gt;Frame&lt;/code&gt; at (10, 10) relative to the origin of the physical screen of the corresponding &lt;code&gt;GraphicsConfiguration&lt;/code&gt;. If the bounds of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; is not taken into account, the &lt;code&gt;Frame&lt;/code&gt; location would be set at (10, 10) relative to the virtual-coordinate system and would appear on the primary physical screen, which might be different from the physical screen of the specified &lt;code&gt;GraphicsConfiguration&lt;/code&gt;.</source>
          <target state="translated">以下代码将 &lt;code&gt;Frame&lt;/code&gt; 的位置设置为相对于相应 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 的物理屏幕原点的（10，10）。如果不考虑 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 的范围，则将 &lt;code&gt;Frame&lt;/code&gt; 位置设置为相对于虚拟坐标系的（10，10），并将出现在主物理屏幕上，该主屏幕可能与虚拟坐标系的物理屏幕不同。指定的 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="471600d6625c941bb8af63162f7ac0aea7a33185" translate="yes" xml:space="preserve">
          <source>The following code shows how to configure a &lt;code&gt;JFormattedTextField&lt;/code&gt; with two &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt;s, one for display and one for editing.</source>
          <target state="translated">以下代码显示了如何使用两个 &lt;code&gt;JFormattedTextField.AbstractFormatter&lt;/code&gt; 配置一个 &lt;code&gt;JFormattedTextField&lt;/code&gt; ，一个用于显示，另一个用于编辑。</target>
        </trans-unit>
        <trans-unit id="0d05af0e96fe721120fbd83211a0e8aa28f5fa0a" translate="yes" xml:space="preserve">
          <source>The following code snippet demonstrates how to access and customize the system tray:</source>
          <target state="translated">以下代码片段演示了如何访问和自定义系统托盘。</target>
        </trans-unit>
        <trans-unit id="c2684c37b3b077871a2d4e193478dca11f29cf45" translate="yes" xml:space="preserve">
          <source>The following code would then create a thread and start it running:</source>
          <target state="translated">下面的代码将创建一个线程并启动它运行。</target>
        </trans-unit>
        <trans-unit id="946ced931944ab0fcf761b372c7c62806047c2f5" translate="yes" xml:space="preserve">
          <source>The following conditions must be met for these fields:</source>
          <target state="translated">这些领域必须满足以下条件:</target>
        </trans-unit>
        <trans-unit id="133aba4f59186bfc1d62f5dbf7c33022c51da793" translate="yes" xml:space="preserve">
          <source>The following conditions must be met in order to set the opacity value less than &lt;code&gt;1.0f&lt;/code&gt;:</source>
          <target state="translated">为了将不透明度值设置为小于 &lt;code&gt;1.0f&lt;/code&gt; ,必须满足以下条件：</target>
        </trans-unit>
        <trans-unit id="cefd2e7b0b62523071be05b86d1d0c18a2b02c1b" translate="yes" xml:space="preserve">
          <source>The following conditions must be met to set a non-null shape:</source>
          <target state="translated">设置非空形状必须满足以下条件。</target>
        </trans-unit>
        <trans-unit id="f38ba93abbce590c90018a23bf3e81cef79cf784" translate="yes" xml:space="preserve">
          <source>The following conversion characters are used for formatting common date/time compositions.</source>
          <target state="translated">以下转换字符用于格式化常见的日期/时间组合。</target>
        </trans-unit>
        <trans-unit id="d5c66b6555275a8ae7b8cd84818ca1b598e5538c" translate="yes" xml:space="preserve">
          <source>The following conversion characters are used for formatting dates:</source>
          <target state="translated">以下是用于格式化日期的转换字符。</target>
        </trans-unit>
        <trans-unit id="d8bd8675f37c0b0472b0f1f740378fad3a66a09e" translate="yes" xml:space="preserve">
          <source>The following conversion characters are used for formatting times:</source>
          <target state="translated">下列转换字符用于格式化时间。</target>
        </trans-unit>
        <trans-unit id="31da467b8ae22861cce42f28720a8a402495a4aa" translate="yes" xml:space="preserve">
          <source>The following conversions may be applied &lt;a href=&quot;../math/bigdecimal&quot;&gt;&lt;code&gt;BigDecimal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下转换可以应用&lt;a href=&quot;../math/bigdecimal&quot;&gt; &lt;code&gt;BigDecimal&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="106372fe58a46e0b53a99e94653db8a635804bea" translate="yes" xml:space="preserve">
          <source>The following conversions may be applied to &lt;a href=&quot;../math/biginteger&quot;&gt;&lt;code&gt;BigInteger&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下转换可以应用于&lt;a href=&quot;../math/biginteger&quot;&gt; &lt;code&gt;BigInteger&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="425f9f130ceaded63e8cd23ffbe952eb42b803cd" translate="yes" xml:space="preserve">
          <source>The following conversions may be applied to &lt;code&gt;byte&lt;/code&gt;, &lt;a href=&quot;../lang/byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;a href=&quot;../lang/short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;int&lt;/code&gt; and &lt;a href=&quot;../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;a href=&quot;../lang/long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下转换可应用于 &lt;code&gt;byte&lt;/code&gt; ，&lt;a href=&quot;../lang/byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;short&lt;/code&gt; ，&lt;a href=&quot;../lang/short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;int&lt;/code&gt; 和&lt;a href=&quot;../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;long&lt;/code&gt; 和&lt;a href=&quot;../lang/long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="628b61b529939ce21c13396cc22e331c7a3b9d5c" translate="yes" xml:space="preserve">
          <source>The following conversions may be applied to &lt;code&gt;float&lt;/code&gt;, &lt;a href=&quot;../lang/float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;a href=&quot;../lang/double&quot;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下转换可应用于 &lt;code&gt;float&lt;/code&gt; ，&lt;a href=&quot;../lang/float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt;， &lt;code&gt;double&lt;/code&gt; 和&lt;a href=&quot;../lang/double&quot;&gt; &lt;code&gt;Double&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bdf545ba7fe2ae6fd85883f41cc47873b6d1c669" translate="yes" xml:space="preserve">
          <source>The following date and time conversion character suffixes are defined for the &lt;code&gt;'t'&lt;/code&gt; and &lt;code&gt;'T'&lt;/code&gt; conversions. The types are similar to but not completely identical to those defined by GNU &lt;code&gt;date&lt;/code&gt; and POSIX &lt;code&gt;strftime(3c)&lt;/code&gt;. Additional conversion types are provided to access Java-specific functionality (e.g. &lt;code&gt;'L'&lt;/code&gt; for milliseconds within the second).</source>
          <target state="translated">为 &lt;code&gt;'t'&lt;/code&gt; 和 &lt;code&gt;'T'&lt;/code&gt; 转换定义了以下日期和时间转换字符后缀。这些类型与GNU &lt;code&gt;date&lt;/code&gt; 和POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; 定义的类型相似但不完全相同。提供了附加的转换类型以访问特定于Java的功能（例如，秒之内以毫秒为单位的 &lt;code&gt;'L'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="cc0bdf19d79e85fd3faa8257d73b9cf092721d6e" translate="yes" xml:space="preserve">
          <source>The following date and time conversion suffix characters are defined for the &lt;code&gt;'t'&lt;/code&gt; and &lt;code&gt;'T'&lt;/code&gt; conversions. The types are similar to but not completely identical to those defined by GNU &lt;code&gt;date&lt;/code&gt; and POSIX &lt;code&gt;strftime(3c)&lt;/code&gt;. Additional conversion types are provided to access Java-specific functionality (e.g. &lt;code&gt;'L'&lt;/code&gt; for milliseconds within the second).</source>
          <target state="translated">为 &lt;code&gt;'t'&lt;/code&gt; 和 &lt;code&gt;'T'&lt;/code&gt; 转换定义了以下日期和时间转换后缀字符。这些类型与GNU &lt;code&gt;date&lt;/code&gt; 和POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; 定义的类型相似但不完全相同。提供了附加的转换类型以访问特定于Java的功能（例如，秒内 &lt;code&gt;'L'&lt;/code&gt; 为毫秒）。</target>
        </trans-unit>
        <trans-unit id="ddfdaa63d1eff39c00a8f64d80b4ee6217147ac0" translate="yes" xml:space="preserve">
          <source>The following definitions of general legacy methods perform identically to previously specified behavior under default attribute settings:</source>
          <target state="translated">在默认属性设置下,以下定义的一般遗留方法与之前指定的行为执行相同。</target>
        </trans-unit>
        <trans-unit id="753e4d88ac6c063d466dfdedc7d9b3c76f212b07" translate="yes" xml:space="preserve">
          <source>The following describes the CSS properties that are supported by the rendering engine:</source>
          <target state="translated">下面描述了渲染引擎支持的CSS属性。</target>
        </trans-unit>
        <trans-unit id="e348781b0edec6d7cb8acbbd00233fee763ecae7" translate="yes" xml:space="preserve">
          <source>The following diagram shows a sequential group along both the horizontal and vertical axis.</source>
          <target state="translated">下图为沿水平轴和垂直轴的顺序组。</target>
        </trans-unit>
        <trans-unit id="016bbd37d2f2317d0f1f262f34705a0fa46f084d" translate="yes" xml:space="preserve">
          <source>The following diagram shows a sequential group along the horizontal axis. The sequential group contains three components. A parallel group was used along the vertical axis.</source>
          <target state="translated">下图显示了一个沿水平轴的顺序组。顺序组包含三个组件。沿着垂直轴使用了一个平行组。</target>
        </trans-unit>
        <trans-unit id="facdf31fd77524b6999c2bc143d39ffa10155252" translate="yes" xml:space="preserve">
          <source>The following diagram shows the same three components, but with the parallel group along the horizontal axis and the sequential group along the vertical axis.</source>
          <target state="translated">下图是同样的三个组件,但平行组沿横轴,顺序组沿纵轴。</target>
        </trans-unit>
        <trans-unit id="33dd939ab9a8811a3f514f61fa7645ae76748a7a" translate="yes" xml:space="preserve">
          <source>The following documentation applies to all LoginContext constructors:</source>
          <target state="translated">以下文档适用于所有LoginContext构造函数。</target>
        </trans-unit>
        <trans-unit id="320a95b6b1eff732752676660004dbf33979b776" translate="yes" xml:space="preserve">
          <source>The following effects are apparent, for each individual call site &lt;code&gt;S&lt;/code&gt;:</source>
          <target state="translated">对于每个单独的呼叫站点 &lt;code&gt;S&lt;/code&gt; ，以下效果是显而易见的：</target>
        </trans-unit>
        <trans-unit id="4097483bbe9bfaaaab44e7f0041fc1d669d2113b" translate="yes" xml:space="preserve">
          <source>The following element or null if &lt;code&gt;value&lt;/code&gt; is the last element of the sequence.</source>
          <target state="translated">后一个元素；如果 &lt;code&gt;value&lt;/code&gt; 是序列的最后一个元素，则为null 。</target>
        </trans-unit>
        <trans-unit id="ab040e8d0f9661f3d2c2a54f122890a1dd93d9a4" translate="yes" xml:space="preserve">
          <source>The following example adds &lt;code&gt;myComponent&lt;/code&gt; to &lt;code&gt;group&lt;/code&gt; using a combination of the forms. The minimum size is forced to be the same as the preferred size, the preferred size is determined by using &lt;code&gt;myComponent.getPreferredSize&lt;/code&gt; and the maximum is determined by invoking &lt;code&gt;getMaximumSize&lt;/code&gt; on the component.</source>
          <target state="translated">以下示例使用表单的组合将 &lt;code&gt;myComponent&lt;/code&gt; 添加到 &lt;code&gt;group&lt;/code&gt; 。最小大小被强制与首选大小相同，首选大小是通过使用 &lt;code&gt;myComponent.getPreferredSize&lt;/code&gt; 确定的，而最大大小是通过在组件上调用 &lt;code&gt;getMaximumSize&lt;/code&gt; 来确定的。</target>
        </trans-unit>
        <trans-unit id="8ee75bf951bc5e2f6330df56847c305f0c40eea8" translate="yes" xml:space="preserve">
          <source>The following example code demonstrates how this method might be used:</source>
          <target state="translated">下面的示例代码演示了如何使用该方法。</target>
        </trans-unit>
        <trans-unit id="3776e6ebce8a39acc2fb88b527e6d72ee54876b6" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;FileNameExtensionFilter&lt;/code&gt; that will show &lt;code&gt;jpg&lt;/code&gt; files:</source>
          <target state="translated">下面的示例创建一个 &lt;code&gt;FileNameExtensionFilter&lt;/code&gt; ，它将显示 &lt;code&gt;jpg&lt;/code&gt; 文件：</target>
        </trans-unit>
        <trans-unit id="463ef87e1f64592c662b8763e7359844386e8e8c" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;MessageFormat&lt;/code&gt; instance that can be used repeatedly:</source>
          <target state="translated">下面的示例创建一个可以重复使用的 &lt;code&gt;MessageFormat&lt;/code&gt; 实例：</target>
        </trans-unit>
        <trans-unit id="b0c695c3a8bf8d2d01fc9c9a9685aa97f739854c" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;RowFilter&lt;/code&gt; that will include any entries containing the string &quot;foo&quot; and the string &quot;bar&quot;:</source>
          <target state="translated">以下示例创建一个 &lt;code&gt;RowFilter&lt;/code&gt; ，其中将包含包含字符串&amp;ldquo; foo&amp;rdquo;和字符串&amp;ldquo; bar&amp;rdquo;的所有条目：</target>
        </trans-unit>
        <trans-unit id="83848b052ff0bafddbb96e14d34dc616809817a6" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;RowFilter&lt;/code&gt; that will include any entries containing the string &quot;foo&quot; or the string &quot;bar&quot;:</source>
          <target state="translated">下面的示例创建一个 &lt;code&gt;RowFilter&lt;/code&gt; ，其中将包含任何包含字符串&amp;ldquo; foo&amp;rdquo;或字符串&amp;ldquo; bar&amp;rdquo;的条目：</target>
        </trans-unit>
        <trans-unit id="f7f34f67da205eb9845401b2a8218e982d5ab668" translate="yes" xml:space="preserve">
          <source>The following example creates a custom &lt;code&gt;SynthStyleFactory&lt;/code&gt; that returns a different style based on the &lt;code&gt;Region&lt;/code&gt;:</source>
          <target state="translated">以下示例创建一个自定义 &lt;code&gt;SynthStyleFactory&lt;/code&gt; ，该自定义SynthStyleFactory根据 &lt;code&gt;Region&lt;/code&gt; 返回一个不同的样式：</target>
        </trans-unit>
        <trans-unit id="f6383d6c78f857110ba281899d9b5575be3617be" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how VirtualMachine may be used:</source>
          <target state="translated">下面的例子演示了如何使用VirtualMachine。</target>
        </trans-unit>
        <trans-unit id="4c0362218022022478f648938bce1a3580a3ed64" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to change the order of non-spacing accents,</source>
          <target state="translated">下面的例子演示了如何改变非间隔重音的顺序。</target>
        </trans-unit>
        <trans-unit id="0d866bed2269ab73118465effd5d20d22d3435e0" translate="yes" xml:space="preserve">
          <source>The following example has two text fields, with the first one expecting the string &quot;pass&quot; to be entered by the user. If either that string is entered in the first text field or the second text field contains &quot;accept&quot; string, then the user can advance focus to the second text field by clicking in it or by pressing TAB. However, if another string is entered in the first text field and the second text field does not contain &quot;accept&quot;, then the user will be unable to transfer focus to the second text field.</source>
          <target state="translated">下面的例子有两个文本字段,第一个文本字段希望用户输入字符串 &quot;pass&quot;。如果在第一个文本字段中输入了该字符串,或者第二个文本字段中包含了 &quot;接受 &quot;字符串,那么用户可以通过点击该字段或按TAB键将焦点推进到第二个文本字段。但是,如果在第一个文本字段中输入了另一个字符串,而第二个文本字段不包含 &quot;接受&quot;,那么用户将无法将焦点转移到第二个文本字段。</target>
        </trans-unit>
        <trans-unit id="9bd423eb5b23c81d6945b1de137e1611d9efebc4" translate="yes" xml:space="preserve">
          <source>The following example illustrates a simple use case of secondary loops:</source>
          <target state="translated">下面的例子说明了二次循环的一个简单用例。</target>
        </trans-unit>
        <trans-unit id="9544db90443cafd3f6fc0065fcfeac4c28840a8a" translate="yes" xml:space="preserve">
          <source>The following example illustrates an aggregate operation using &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;doublestream&quot;&gt;&lt;code&gt;DoubleStream&lt;/code&gt;&lt;/a&gt;, computing the sum of the weights of the red widgets:</source>
          <target state="translated">以下示例说明了使用&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;doublestream&quot;&gt; &lt;code&gt;DoubleStream&lt;/code&gt; &lt;/a&gt;的聚合操作，该操作计算红色小部件的权重之和：</target>
        </trans-unit>
        <trans-unit id="fb0fc38b0edfba8464de0f6ce5acb42f0c3826b7" translate="yes" xml:space="preserve">
          <source>The following example illustrates an aggregate operation using &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;, computing the sum of the weights of the red widgets:</source>
          <target state="translated">以下示例说明了使用&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; &lt;/a&gt;的聚合操作，该操作计算红色小部件的权重之和：</target>
        </trans-unit>
        <trans-unit id="56de90bb181885f2389c4de7a52719567afaa7dc" translate="yes" xml:space="preserve">
          <source>The following example illustrates an aggregate operation using &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;longstream&quot;&gt;&lt;code&gt;LongStream&lt;/code&gt;&lt;/a&gt;, computing the sum of the weights of the red widgets:</source>
          <target state="translated">以下示例说明了使用&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;longstream&quot;&gt; &lt;code&gt;LongStream&lt;/code&gt; &lt;/a&gt;的聚合操作，该操作计算红色小部件的权重之和：</target>
        </trans-unit>
        <trans-unit id="d307e70e669cb72cdcb168be4cbe00d64608c629" translate="yes" xml:space="preserve">
          <source>The following example illustrates creating a &lt;code&gt;KeyBinding&lt;/code&gt; array from six alternating &lt;code&gt;key-action&lt;/code&gt; pairs:</source>
          <target state="translated">以下示例说明了从六个交替的 &lt;code&gt;key-action&lt;/code&gt; 对创建一个 &lt;code&gt;KeyBinding&lt;/code&gt; 数组：</target>
        </trans-unit>
        <trans-unit id="8ddec311e730687f1c9ec6444d2caa4fa990646a" translate="yes" xml:space="preserve">
          <source>The following example illustrates how the &lt;code&gt;String.split&lt;/code&gt; method can be used to break up a string into its basic tokens:</source>
          <target state="translated">下面的示例说明如何使用 &lt;code&gt;String.split&lt;/code&gt; 方法将字符串分解成其基本标记：</target>
        </trans-unit>
        <trans-unit id="8d50265afb04b1a4dc77b0bf535a5a8d4b1cadb8" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use this class:</source>
          <target state="translated">下面的例子说明了如何使用这个类。</target>
        </trans-unit>
        <trans-unit id="d35723ba3d5e3e8c3a356af7783b1f3266635763" translate="yes" xml:space="preserve">
          <source>The following example illustrates setting the current look and feel from an instance of &lt;code&gt;LookAndFeelInfo&lt;/code&gt;:</source>
          <target state="translated">以下示例说明了从 &lt;code&gt;LookAndFeelInfo&lt;/code&gt; 实例设置当前外观的感觉：</target>
        </trans-unit>
        <trans-unit id="f9da5969c1496c88c7306406befa7c66be969059" translate="yes" xml:space="preserve">
          <source>The following example illustrates setting the look and feel based on class name:</source>
          <target state="translated">下面的例子说明了根据类名设置外观和感觉。</target>
        </trans-unit>
        <trans-unit id="3748733e6de1f4871baf1bb05d5ddce1922aa9c4" translate="yes" xml:space="preserve">
          <source>The following example illustrates some refinements and idioms that may lead to better performance: RecursiveActions need not be fully recursive, so long as they maintain the basic divide-and-conquer approach. Here is a class that sums the squares of each element of a double array, by subdividing out only the right-hand-sides of repeated divisions by two, and keeping track of them with a chain of &lt;code&gt;next&lt;/code&gt; references. It uses a dynamic threshold based on method &lt;code&gt;getSurplusQueuedTaskCount&lt;/code&gt;, but counterbalances potential excess partitioning by directly performing leaf actions on unstolen tasks rather than further subdividing.</source>
          <target state="translated">下面的示例说明了一些改进和惯用语，它们可能会导致更好的性能：RecursiveActions不需要完全递归，只要它们保持基本的分而治之方法即可。这是一个类，通过仅将重复除法的右侧除以2，并用一系列下 &lt;code&gt;next&lt;/code&gt; 引用跟踪它们，对双精度数组每个元素的平方求和。它使用基于方法 &lt;code&gt;getSurplusQueuedTaskCount&lt;/code&gt; 的动态阈值，但通过直接对未窃取的任务执行叶操作而不是进一步细分来抵消潜在的多余分区。</target>
        </trans-unit>
        <trans-unit id="d87d1db380d07faa1d30e5a04bd96b4b3ae7dc5a" translate="yes" xml:space="preserve">
          <source>The following example illustrates the simplest use case. Some processing is done in the background and when done you update a Swing component.</source>
          <target state="translated">下面的例子说明了最简单的用例。一些处理是在后台完成的,当完成后你更新一个Swing组件。</target>
        </trans-unit>
        <trans-unit id="68ddb2ddfcdc8913f37db43e57241769ef4e65d9" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;a href=&quot;shardingkeybuilder&quot;&gt;&lt;code&gt;ShardingKeyBuilder&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;ShardingKey&lt;/code&gt;:</source>
          <target state="translated">以下示例说明了使用&lt;a href=&quot;shardingkeybuilder&quot;&gt; &lt;code&gt;ShardingKeyBuilder&lt;/code&gt; &lt;/a&gt;创建 &lt;code&gt;ShardingKey&lt;/code&gt; 的方法：</target>
        </trans-unit>
        <trans-unit id="b8b348252a81c67a1d2fe27f014aadc97dbcc209" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;a href=&quot;shardingkeybuilder&quot;&gt;&lt;code&gt;ShardingKeyBuilder&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;superShardingKey&lt;/code&gt; for an eastern region with a &lt;code&gt;ShardingKey&lt;/code&gt; specified for the Pittsburgh branch office:</source>
          <target state="translated">以下示例说明了如何使用&lt;a href=&quot;shardingkeybuilder&quot;&gt; &lt;code&gt;ShardingKeyBuilder&lt;/code&gt; &lt;/a&gt;为东部地区创建 &lt;code&gt;superShardingKey&lt;/code&gt; ，并为匹兹堡分公司指定了 &lt;code&gt;ShardingKey&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3e101469e89fbdd4347ecf7874ab5d383fecef17" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;code&gt;ConnectionBuilder&lt;/code&gt; to create a &lt;a href=&quot;connection&quot;&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下示例说明了如何使用 &lt;code&gt;ConnectionBuilder&lt;/code&gt; 创建一个&lt;a href=&quot;connection&quot;&gt; &lt;code&gt;Connection&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="d8e4b5070895b163f1a284ef67fa6006475d5ada" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;code&gt;PooledConnectionBuilder&lt;/code&gt; to create a &lt;a href=&quot;xaconnection&quot;&gt;&lt;code&gt;XAConnection&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下示例说明如何使用 &lt;code&gt;PooledConnectionBuilder&lt;/code&gt; 创建&lt;a href=&quot;xaconnection&quot;&gt; &lt;code&gt;XAConnection&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="fa993e0cdf5cf1219a364219e068fb941b4bbae6" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;code&gt;ShardingKeyBuilder&lt;/code&gt; to create a &lt;a href=&quot;shardingkey&quot;&gt;&lt;code&gt;ShardingKey&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下示例说明了使用 &lt;code&gt;ShardingKeyBuilder&lt;/code&gt; 创建&lt;a href=&quot;shardingkey&quot;&gt; &lt;code&gt;ShardingKey&lt;/code&gt; 的方法&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="c6b5aab123e96ace2d06a9a85c7ff2192ebd6c23" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of &lt;code&gt;XAConnectionBuilder&lt;/code&gt; to create a &lt;a href=&quot;xaconnection&quot;&gt;&lt;code&gt;XAConnection&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下示例说明了如何使用 &lt;code&gt;XAConnectionBuilder&lt;/code&gt; 创建&lt;a href=&quot;xaconnection&quot;&gt; &lt;code&gt;XAConnection&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f8f82bf402adadf527ca538f2a684dbed664a6ab" translate="yes" xml:space="preserve">
          <source>The following example loads the first available service provider. If no service providers are located then it uses a default implementation.</source>
          <target state="translated">以下示例加载了第一个可用的服务提供者。如果没有找到服务提供者,则使用默认实现。</target>
        </trans-unit>
        <trans-unit id="a6e6290101eb5dc8885bc7d24ad7895acf725371" translate="yes" xml:space="preserve">
          <source>The following example parses a PKCS#7-formatted certificate reply stored in a file and extracts all the certificates from it:</source>
          <target state="translated">下面的例子解析了存储在文件中的PKCS#7格式的证书回复,并从中提取所有证书。</target>
        </trans-unit>
        <trans-unit id="42afd5399a20f35ce8bb844ce91049a2cf9b546d" translate="yes" xml:space="preserve">
          <source>The following example prints the CPU usage for ten seconds. When the current thread leaves the try-with-resources block the stream is stopped/closed.</source>
          <target state="translated">下面的例子打印了十秒钟的CPU使用情况。当当前线程离开try-with-resources块时,流将被停止/关闭。</target>
        </trans-unit>
        <trans-unit id="b6581c0e64b1be525be912d116aeb461af451685" translate="yes" xml:space="preserve">
          <source>The following example reads a file with Base64 encoded certificates, which are each bounded at the beginning by -----BEGIN CERTIFICATE-----, and bounded at the end by -----END CERTIFICATE-----. We convert the &lt;code&gt;FileInputStream&lt;/code&gt; (which does not support &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt;) to a &lt;code&gt;BufferedInputStream&lt;/code&gt; (which supports those methods), so that each call to &lt;code&gt;generateCertificate&lt;/code&gt; consumes only one certificate, and the read position of the input stream is positioned to the next certificate in the file:</source>
          <target state="translated">下面的示例读取带有Base64编码证书的文件，每个证书的开头是----- BEGIN CERTIFICATE -----，最后是----- END CERTIFICATE ----- 。我们将 &lt;code&gt;FileInputStream&lt;/code&gt; （不支持 &lt;code&gt;mark&lt;/code&gt; 和 &lt;code&gt;reset&lt;/code&gt; ）转换为 &lt;code&gt;BufferedInputStream&lt;/code&gt; （支持这些方法），以便对 &lt;code&gt;generateCertificate&lt;/code&gt; 的每次调用仅消耗一个证书，并且输入流的读取位置位于文件中的下一个证书上。文件：</target>
        </trans-unit>
        <trans-unit id="7aa7e3d5107355bcf8ccc7f5c63970b36c0aed94" translate="yes" xml:space="preserve">
          <source>The following example records 20 seconds using the &quot;default&quot; configuration and then changes settings to the &quot;profile&quot; configuration.</source>
          <target state="translated">以下示例使用 &quot;默认 &quot;配置记录20秒,然后将设置改为 &quot;配置文件 &quot;配置。</target>
        </trans-unit>
        <trans-unit id="f4c63e2e5d2c5bad8b48d446236f32973f675b19" translate="yes" xml:space="preserve">
          <source>The following example shows a Model MBean being used to make the &lt;code&gt;get&lt;/code&gt; method of a &lt;code&gt;HashMap&lt;/code&gt; available for management through an MBean server. No other methods are available through the MBean server. There is nothing special about &lt;code&gt;HashMap&lt;/code&gt; here. Public methods from any public class can be exposed for management in the same way.</source>
          <target state="translated">以下示例显示了模型MBean，该模型MBean用于使 &lt;code&gt;HashMap&lt;/code&gt; 的 &lt;code&gt;get&lt;/code&gt; 方法可用于通过MBean服务器进行管理。通过MBean服务器没有其他可用的方法。这里的 &lt;code&gt;HashMap&lt;/code&gt; 没有什么特别的。任何公共类的公共方法都可以以相同的方式公开进行管理。</target>
        </trans-unit>
        <trans-unit id="bc0415620b4f09b1c46986757c91750d257417fa" translate="yes" xml:space="preserve">
          <source>The following example shows a custom &lt;code&gt;SynthStyle&lt;/code&gt; that returns a red Color for the &lt;code&gt;DISABLED&lt;/code&gt; state, otherwise a black color.</source>
          <target state="translated">以下示例显示了一个自定义 &lt;code&gt;SynthStyle&lt;/code&gt; ，该状态返回 &lt;code&gt;DISABLED&lt;/code&gt; 状态的红色，否则返回黑色。</target>
        </trans-unit>
        <trans-unit id="2045ca0da6d52947c05422124a31ebb897aab76e" translate="yes" xml:space="preserve">
          <source>The following example shows a naive implementation of a setting control for regular expressions:</source>
          <target state="translated">下面的例子展示了一个正则表达式的设置控制的幼稚实现。</target>
        </trans-unit>
        <trans-unit id="688ab75c2f0c0164529e7ba6b2a3e4039b8453b3" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;AnnotationElement&lt;/code&gt; can be used to dynamically define events.</source>
          <target state="translated">以下示例显示了如何使用 &lt;code&gt;AnnotationElement&lt;/code&gt; 动态定义事件。</target>
        </trans-unit>
        <trans-unit id="fea50f0b6178150f168fc19ed1cb369f75bd8701" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;CollationKey&lt;/code&gt;s might be used to sort a list of &lt;code&gt;String&lt;/code&gt;s.</source>
          <target state="translated">以下示例显示了如何使用 &lt;code&gt;CollationKey&lt;/code&gt; 排序 &lt;code&gt;String&lt;/code&gt; 的列表。</target>
        </trans-unit>
        <trans-unit id="47324d06a9e76033640d8ae637d680657229799f" translate="yes" xml:space="preserve">
          <source>The following example shows how an &lt;code&gt;EventStream&lt;/code&gt; can be used to listen to events on a JVM running Flight Recorder</source>
          <target state="translated">以下示例显示如何使用 &lt;code&gt;EventStream&lt;/code&gt; 侦听运行Flight Recorder的JVM上的事件</target>
        </trans-unit>
        <trans-unit id="62c36d7643403fcadd19aa8ee575a427776f0293" translate="yes" xml:space="preserve">
          <source>The following example shows how an event can be filtered by assigning the &lt;code&gt;&quot;uriFilter&quot;&lt;/code&gt; setting with the specified regular expressions.</source>
          <target state="translated">以下示例显示了如何通过为 &lt;code&gt;&quot;uriFilter&quot;&lt;/code&gt; 设置分配指定的正则表达式来过滤事件。</target>
        </trans-unit>
        <trans-unit id="629d25120c22382f08909d4fccb6ff6ca6d4cff1" translate="yes" xml:space="preserve">
          <source>The following example shows how configure, start, stop and dump recording data to disk.</source>
          <target state="translated">下面的例子展示了如何配置、启动、停止和向磁盘转储记录数据。</target>
        </trans-unit>
        <trans-unit id="e5391d49a27cb95b0bed6b486c15049f3f08cfa5" translate="yes" xml:space="preserve">
          <source>The following example shows how create a recording that uses a predefined configuration.</source>
          <target state="translated">下面的例子显示了如何创建一个使用预定义配置的录音。</target>
        </trans-unit>
        <trans-unit id="0b5b4b31110835704a36d695fc5e40afb56e285c" translate="yes" xml:space="preserve">
          <source>The following example shows how read and print all events in a recording file.</source>
          <target state="translated">下面的例子显示了如何读取和打印记录文件中的所有事件。</target>
        </trans-unit>
        <trans-unit id="c8603f4755c28323507a67b2fd208e400e7d76ef" translate="yes" xml:space="preserve">
          <source>The following example shows how to annotate a method in an event class.</source>
          <target state="translated">下面的例子显示了如何在事件类中注释一个方法。</target>
        </trans-unit>
        <trans-unit id="ce6e79fdf9431b4c01ca7a6d0321f3ae696e0bd6" translate="yes" xml:space="preserve">
          <source>The following example shows how to compare two strings using the &lt;code&gt;Collator&lt;/code&gt; for the default locale.</source>
          <target state="translated">下面的示例演示如何使用 &lt;code&gt;Collator&lt;/code&gt; （默认语言环境）比较两个字符串。</target>
        </trans-unit>
        <trans-unit id="0cf0ae4f898e0fe5e7d002475f1e1d524ed4b2c7" translate="yes" xml:space="preserve">
          <source>The following example shows how to correctly use this method in the &lt;code&gt;LayerUI&lt;/code&gt; implementations:</source>
          <target state="translated">下面的示例演示如何在 &lt;code&gt;LayerUI&lt;/code&gt; 实现中正确使用此方法：</target>
        </trans-unit>
        <trans-unit id="c187db380cfc2f123c5979ca0ebed27c25c70c1d" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a &lt;code&gt;Locale&lt;/code&gt; object with the &lt;code&gt;Builder&lt;/code&gt;.</source>
          <target state="translated">下面的示例演示如何使用 &lt;code&gt;Builder&lt;/code&gt; 创建一个 &lt;code&gt;Locale&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="bcae6e3d77741791ff101396b2bc79ecd647bf55" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a recording stream that uses a predefined configuration.</source>
          <target state="translated">下面的示例显示了如何创建使用预定义配置的录音流。</target>
        </trans-unit>
        <trans-unit id="d9582f12296d6e71d6d9fcc0ab6519e41254d5e2" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a snapshot and write a subset of the data to a file.</source>
          <target state="translated">下面的例子显示了如何创建快照并将数据的一个子集写入文件。</target>
        </trans-unit>
        <trans-unit id="2b8c1f2ad8067de40417ecb0a025683df3e99f73" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an event that uses the regular expression filter defined above.</source>
          <target state="translated">下面的示例显示了如何创建一个使用上面定义的正则表达式过滤器的事件。</target>
        </trans-unit>
        <trans-unit id="7e3abc914a0e524b6946d29560eb958e4ebc40c3" translate="yes" xml:space="preserve">
          <source>The following example shows how to implement a dynamic &lt;code&gt;Event&lt;/code&gt; class.</source>
          <target state="translated">下面的示例演示如何实现动态 &lt;code&gt;Event&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="264cc94c34cb46b9a6b5465f3002ea64463b0371" translate="yes" xml:space="preserve">
          <source>The following example shows how to implement an &lt;code&gt;Event&lt;/code&gt; class.</source>
          <target state="translated">下面的示例演示如何实现 &lt;code&gt;Event&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="8aa068cd12dc75a5039a7fcddcf1effd6aa6096a" translate="yes" xml:space="preserve">
          <source>The following example shows how to merge settings.</source>
          <target state="translated">下面的例子显示了如何合并设置。</target>
        </trans-unit>
        <trans-unit id="29cd2b761e842823dde3ccb08cbcef68de4e0202" translate="yes" xml:space="preserve">
          <source>The following example shows how to record events using the default configuration and print the Garbage Collection, CPU Load and JVM Information event to standard out.</source>
          <target state="translated">下面的例子显示了如何使用默认配置记录事件,并将垃圾收集、CPU负载和JVM信息事件打印成标准输出。</target>
        </trans-unit>
        <trans-unit id="6c7e8b1c50e7c5d55bc6c1cf1dd809105325fc4f" translate="yes" xml:space="preserve">
          <source>The following example shows how to set event settings for a recording.</source>
          <target state="translated">以下示例显示了如何为录音设置事件设置。</target>
        </trans-unit>
        <trans-unit id="03471ff73f4b154adcb0055c65e24b672be88999" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;EventSettings&lt;/code&gt; class.</source>
          <target state="translated">下面的示例演示如何使用 &lt;code&gt;EventSettings&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="150e09ca9847d84414dbe1fa53852bf6280551da" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the public constructor &lt;a href=&quot;#%3Cinit%3E(T,java.lang.Class,javax.management.NotificationEmitter)&quot;&gt;&lt;code&gt;StandardEmitterMBean(implementation, mbeanInterface, emitter)&lt;/code&gt;&lt;/a&gt; to create an MBean emitting notifications with any implementation class name</source>
          <target state="translated">下面的示例演示如何使用公共构造函数&lt;a href=&quot;#%3Cinit%3E(T,java.lang.Class,javax.management.NotificationEmitter)&quot;&gt; &lt;code&gt;StandardEmitterMBean(implementation, mbeanInterface, emitter)&lt;/code&gt; &lt;/a&gt;创建一个MBean，该MBean发出具有任何实现类名称的通知</target>
        </trans-unit>
        <trans-unit id="34a66fd3c2e9d5a20b80170ff37d4fcae56dbf7b" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the public constructor &lt;a href=&quot;standardemittermbean#StandardEmitterMBean-T-java.lang.Class-javax.management.NotificationEmitter-&quot;&gt;&lt;code&gt;StandardEmitterMBean(implementation, mbeanInterface, emitter)&lt;/code&gt;&lt;/a&gt; to create an MBean emitting notifications with any implementation class name</source>
          <target state="translated">下面的示例演示如何使用公共构造函数&lt;a href=&quot;standardemittermbean#StandardEmitterMBean-T-java.lang.Class-javax.management.NotificationEmitter-&quot;&gt; &lt;code&gt;StandardEmitterMBean(implementation, mbeanInterface, emitter)&lt;/code&gt; &lt;/a&gt;创建一个MBean，该MBean发出具有任何实现类名称的通知</target>
        </trans-unit>
        <trans-unit id="0332a21704227b2fe01c6ea2919706eb14858df4" translate="yes" xml:space="preserve">
          <source>The following example uses a &lt;code&gt;Class&lt;/code&gt; object to print the class name of an object:</source>
          <target state="translated">下面的示例使用 &lt;code&gt;Class&lt;/code&gt; 对象来打印对象的类名称：</target>
        </trans-unit>
        <trans-unit id="105fab9a92f7744114e1e113e7a7e36eff93a442" translate="yes" xml:space="preserve">
          <source>The following example uses one of the &lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt;predefined body handlers&lt;/a&gt; that always process the response body in the same way ( streams the response body to a file ).</source>
          <target state="translated">以下示例使用&lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt;预定义的主体处理程序&lt;/a&gt;之一，该主体处理程序始终以相同的方式处理响应主体（将响应主体流式传输到文件）。</target>
        </trans-unit>
        <trans-unit id="74feb2533320ada267d3e34c037f75c2166c6bfc" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;a href=&quot;#resolve(java.lang.module.ModuleFinder,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt;&lt;code&gt;resolve&lt;/code&gt;&lt;/a&gt; method to resolve a module named &lt;em&gt;myapp&lt;/em&gt; with the configuration for the boot layer as the parent configuration. It prints the name of each resolved module and the names of the modules that each module reads.</source>
          <target state="translated">以下示例使用&lt;a href=&quot;#resolve(java.lang.module.ModuleFinder,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt; &lt;code&gt;resolve&lt;/code&gt; &lt;/a&gt;方法来解析名为&lt;em&gt;myapp&lt;/em&gt;的模块，并将引导层的配置作为父配置。它打印每个已解析模块的名称以及每个模块读取的模块的名称。</target>
        </trans-unit>
        <trans-unit id="13094b1afd628aca804009d6503e45d3606912cb" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate possible values for the &lt;code&gt;
 attributes&lt;/code&gt; parameter:</source>
          <target state="translated">以下示例演示了 &lt;code&gt; attributes&lt;/code&gt; 参数的可能值：</target>
        </trans-unit>
        <trans-unit id="70e1b9830a3df588a8b8a729994679251f34346f" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate possible values for the &lt;code&gt;attributes&lt;/code&gt; parameter:</source>
          <target state="translated">以下示例演示了 &lt;code&gt;attributes&lt;/code&gt; 参数的可能值：</target>
        </trans-unit>
        <trans-unit id="9288a923ae0848eff92cd52b3c4755b3510286a3" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate usage. The first example creates a stream of &lt;code&gt;CodecFactory&lt;/code&gt; objects, the second example is the same except that it sorts the providers by provider class name (and so locate all providers).</source>
          <target state="translated">以下示例演示用法。第一个示例创建 &lt;code&gt;CodecFactory&lt;/code&gt; 对象流，第二个示例相同，除了它按提供程序类名称对提供程序排序（并找到所有提供程序）。</target>
        </trans-unit>
        <trans-unit id="97ea0c19b95e394c32268e376ed83f7f985b11a8" translate="yes" xml:space="preserve">
          <source>The following examples illustrate using these methods. Each example assumes the HTML document is initialized in the following way:</source>
          <target state="translated">下面的例子说明了如何使用这些方法。每个例子都假设HTML文档是以下列方式初始化的。</target>
        </trans-unit>
        <trans-unit id="6cf471a50873b59781f1a5d22c6455b5de64fb64" translate="yes" xml:space="preserve">
          <source>The following examples show how date and time patterns are interpreted in the U.S. locale. The given date and time are 2001-07-04 12:08:56 local time in the U.S. Pacific Time time zone.</source>
          <target state="translated">下面的例子显示了在美国当地如何解释日期和时间模式。给定的日期和时间是美国太平洋时区当地时间2001-07-04 12:08:56。</target>
        </trans-unit>
        <trans-unit id="9514a949b32595fe680081e76c54845b30a0aec5" translate="yes" xml:space="preserve">
          <source>The following examples shows how the category is used to determine how events are visualized in a tree:</source>
          <target state="translated">下面的例子显示了如何使用类别来确定事件在树中的可视化方式。</target>
        </trans-unit>
        <trans-unit id="b0632e6225effa0dd63e846e4520249121991123" translate="yes" xml:space="preserve">
          <source>The following factors are used in the description of the blending equation in the Porter and Duff paper:</source>
          <target state="translated">波特和达夫论文中对混合方程的描述中使用了以下因素:</target>
        </trans-unit>
        <trans-unit id="b060c7c49d5c47fafe67983831ac5a2196238ddc" translate="yes" xml:space="preserve">
          <source>The following factors will be used to discuss our extensions to the blending equation in the Porter and Duff paper:</source>
          <target state="translated">以下因素将用于讨论我们在波特和达夫论文中对混合方程的扩展。</target>
        </trans-unit>
        <trans-unit id="3e4ce72fcea17db538dc08375b9af49bdf3a0d34" translate="yes" xml:space="preserve">
          <source>The following figure shows a baseline layout and includes a component that spans rows:</source>
          <target state="translated">下图显示的是一个基线布局,包括一个跨行的组件。</target>
        </trans-unit>
        <trans-unit id="c9b480102aa80b7116ba081776d8fc9c47c998d2" translate="yes" xml:space="preserve">
          <source>The following figure shows the relationship between size and position data for a multi-column component.</source>
          <target state="translated">下图显示了多列组件的尺寸和位置数据之间的关系。</target>
        </trans-unit>
        <trans-unit id="906ef8373352bf4e852cc52a802ab4cdf9b65eb5" translate="yes" xml:space="preserve">
          <source>The following figures show ten components (all buttons) managed by a grid bag layout. Figure 2 shows the layout for a horizontal, left-to-right container and Figure 3 shows the layout for a horizontal, right-to-left container.</source>
          <target state="translated">下图显示了由网格袋布局管理的十个组件(所有按钮)。图2显示的是水平的、从左到右的容器的布局,图3显示的是水平的、从右到左的容器的布局。</target>
        </trans-unit>
        <trans-unit id="d27a5fac9684ab445570c45c6aa8783eca1e2a54" translate="yes" xml:space="preserve">
          <source>The following form:</source>
          <target state="translated">以下形式:</target>
        </trans-unit>
        <trans-unit id="25a756a58cb2655e8ad539845d1c9b0926cdf9aa" translate="yes" xml:space="preserve">
          <source>The following formulas are always true for a &lt;code&gt;Constraints&lt;/code&gt; object (here WEST and &lt;code&gt;x&lt;/code&gt; are synonyms, as are and NORTH and &lt;code&gt;y&lt;/code&gt;):</source>
          <target state="translated">以下公式对于 &lt;code&gt;Constraints&lt;/code&gt; 对象总是正确的（此处WEST和 &lt;code&gt;x&lt;/code&gt; 是同义词，而NORTH和 &lt;code&gt;y&lt;/code&gt; 则是）：</target>
        </trans-unit>
        <trans-unit id="279fcc4d026d6759301de3593759ad5dea9bdb03" translate="yes" xml:space="preserve">
          <source>The following general conversions may be applied to any argument type:</source>
          <target state="translated">下列一般转换可适用于任何参数类型。</target>
        </trans-unit>
        <trans-unit id="346aa8af59d095a0cf819e2a13e769a2c2aa85e6" translate="yes" xml:space="preserve">
          <source>The following illustrates loading an &lt;code&gt;InputMap&lt;/code&gt; with two &lt;code&gt;key-action&lt;/code&gt; pairs:</source>
          <target state="translated">下图说明了如何使用两个 &lt;code&gt;key-action&lt;/code&gt; 对加载一个 &lt;code&gt;InputMap&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="174393cc0bd44b845cea1cc9ee5a2f036c3003ea" translate="yes" xml:space="preserve">
          <source>The following image shows the appearance of a text area:</source>
          <target state="translated">下图为文字区域的外观。</target>
        </trans-unit>
        <trans-unit id="1dd40017212822f21694ba3d70bff633a44c4e65" translate="yes" xml:space="preserve">
          <source>The following image shows the relationships between the classes that use root panes.</source>
          <target state="translated">下图显示了使用根窗格的类之间的关系。</target>
        </trans-unit>
        <trans-unit id="75a6aefb999d419cd1a82d97d1a727b01ec7b7ec" translate="yes" xml:space="preserve">
          <source>The following interfaces are not MXBean interfaces:</source>
          <target state="translated">以下接口不是MXBean接口。</target>
        </trans-unit>
        <trans-unit id="ed265a42fc53230e870ef0ae1b0b98d73373ccaa" translate="yes" xml:space="preserve">
          <source>The following interfaces, in the &lt;code&gt;javax.sql&lt;/code&gt; package, are also part of the SPI:</source>
          <target state="translated">&lt;code&gt;javax.sql&lt;/code&gt; 包中的以下接口也是SPI的一部分：</target>
        </trans-unit>
        <trans-unit id="5b0b30e55e796a5ec6b2164196050ba8bf078c28" translate="yes" xml:space="preserve">
          <source>The following invariant holds for the mark, position, limit, and capacity values:</source>
          <target state="translated">以下不变性适用于标记、位置、极限和容量值。</target>
        </trans-unit>
        <trans-unit id="edfb837a44de40c003fa4a1712d49041093f4267" translate="yes" xml:space="preserve">
          <source>The following is a list of conditions under which this exception can be thrown:</source>
          <target state="translated">以下是可以抛出该异常的条件列表。</target>
        </trans-unit>
        <trans-unit id="0b5a6fd8e7a44cb844d1b9a7ee45ff3a2f634441" translate="yes" xml:space="preserve">
          <source>The following is a list of configuration options supported for &lt;code&gt;Krb5LoginModule&lt;/code&gt;:</source>
          <target state="translated">以下是 &lt;code&gt;Krb5LoginModule&lt;/code&gt; 支持的配置选项的列表：</target>
        </trans-unit>
        <trans-unit id="3c66588b87527f1a5baf11483bf18ea1e5e20a3b" translate="yes" xml:space="preserve">
          <source>The following is a very simple example of a &lt;code&gt;ResourceBundle&lt;/code&gt; subclass, &lt;code&gt;MyResources&lt;/code&gt;, that manages two resources (for a larger number of resources you would probably use a &lt;code&gt;Map&lt;/code&gt;). Notice that you don't need to supply a value if a &quot;parent-level&quot; &lt;code&gt;ResourceBundle&lt;/code&gt; handles the same key with the same value (as for the okKey below).</source>
          <target state="translated">以下是 &lt;code&gt;ResourceBundle&lt;/code&gt; 子类 &lt;code&gt;MyResources&lt;/code&gt; 的一个非常简单的示例，该子类管理两个资源（对于大量资源，您可能会使用 &lt;code&gt;Map&lt;/code&gt; ）。请注意，如果&amp;ldquo;父级&amp;rdquo; &lt;code&gt;ResourceBundle&lt;/code&gt; 处理具有相同值的相同键（如下面的okKey），则不需要提供值。</target>
        </trans-unit>
        <trans-unit id="a35019878874a7fd8dd74b1784ae216cc20be6ae" translate="yes" xml:space="preserve">
          <source>The following is an example doclet that displays information of a class and its members, supporting an option.</source>
          <target state="translated">下面是一个显示类及其成员信息的doclet示例,支持一个选项。</target>
        </trans-unit>
        <trans-unit id="22998b14b84e5464217ecc64a23f424a4e89dae6" translate="yes" xml:space="preserve">
          <source>The following is an example of a GET request that prints the response body as a String:</source>
          <target state="translated">下面是一个GET请求的例子,它将响应体打印成一个字符串。</target>
        </trans-unit>
        <trans-unit id="9853868399354f386c11be29586d4baa4163b9e2" translate="yes" xml:space="preserve">
          <source>The following is an example of a simple XPath expression:</source>
          <target state="translated">下面是一个简单的XPath表达式的例子。</target>
        </trans-unit>
        <trans-unit id="bdaadb43c4aeb6da55f35a1a37d30ab08c2123d1" translate="yes" xml:space="preserve">
          <source>The following is an example of how to use a key factory in order to instantiate a DSA public key from its encoding. Assume Alice has received a digital signature from Bob. Bob also sent her his public key (in encoded format) to verify his signature. Alice then performs the following actions:</source>
          <target state="translated">下面是一个如何使用密钥工厂的例子,以便从其编码中实例化一个DSA公钥。假设Alice已经收到了Bob的数字签名。Bob还向她发送了他的公钥(编码格式)来验证他的签名。然后Alice执行以下操作。</target>
        </trans-unit>
        <trans-unit id="948ce4f3bc2eb80eaf11902cafb5d347833f9db3" translate="yes" xml:space="preserve">
          <source>The following is an example of loading XML-based bundles using &lt;a href=&quot;properties#loadFromXML(java.io.InputStream)&quot;&gt;&lt;code&gt;Properties.loadFromXML&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下是使用&lt;a href=&quot;properties#loadFromXML(java.io.InputStream)&quot;&gt; &lt;code&gt;Properties.loadFromXML&lt;/code&gt; &lt;/a&gt;加载基于XML的捆绑包的示例。</target>
        </trans-unit>
        <trans-unit id="804b14ddfbb725fdd0c6db2c193593fa8a180d72" translate="yes" xml:space="preserve">
          <source>The following is an example of loading XML-based bundles using &lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt;&lt;code&gt;Properties.loadFromXML&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">以下是使用&lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt; &lt;code&gt;Properties.loadFromXML&lt;/code&gt; &lt;/a&gt;加载基于XML的捆绑包的示例。</target>
        </trans-unit>
        <trans-unit id="67b3505277b8510442adfa39552de8621cf4bfdb" translate="yes" xml:space="preserve">
          <source>The following is an example of retrieving a response as a String:</source>
          <target state="translated">下面是一个以字符串形式检索响应的例子。</target>
        </trans-unit>
        <trans-unit id="b19e1ceab964624bd7adda3910cb263b99752918" translate="yes" xml:space="preserve">
          <source>The following is an example of the bundle loading process with the default &lt;code&gt;ResourceBundle.Control&lt;/code&gt; implementation.</source>
          <target state="translated">以下是使用默认 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 实现的捆绑包加载过程的示例。</target>
        </trans-unit>
        <trans-unit id="bea54c2ee0652c739fb146ce39cebf51995f73cb" translate="yes" xml:space="preserve">
          <source>The following is one example of the use of the tokenizer. The code:</source>
          <target state="translated">下面是使用tokenizer的一个例子。代码:</target>
        </trans-unit>
        <trans-unit id="52b9ec700425589fbdc086ec3a939db1893539c5" translate="yes" xml:space="preserve">
          <source>The following kinds of information can be obtained from a &lt;code&gt;SyncResolver&lt;/code&gt; object:</source>
          <target state="translated">可以从 &lt;code&gt;SyncResolver&lt;/code&gt; 对象获得以下类型的信息：</target>
        </trans-unit>
        <trans-unit id="ea9d9bada0a8ef0aed953f6ecd23f2e2098da85d" translate="yes" xml:space="preserve">
          <source>The following line of code creates the &lt;code&gt;CachedRowSet&lt;/code&gt; object</source>
          <target state="translated">下面的代码行创建 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="f37574f5f93fb3008e9bc387bd52bb13322878b9" translate="yes" xml:space="preserve">
          <source>The following line of code resets the &lt;code&gt;SyncProvider&lt;/code&gt; object for</source>
          <target state="translated">以下代码行将 &lt;code&gt;SyncProvider&lt;/code&gt; 对象重置为</target>
        </trans-unit>
        <trans-unit id="f79cfbf4566791f20e92a99e823ec9bfc7ed889e" translate="yes" xml:space="preserve">
          <source>The following line of code uses the default constructor for &lt;code&gt;CachedRowSet&lt;/code&gt; supplied in the reference implementation (RI) to create a default &lt;code&gt;CachedRowSet&lt;/code&gt; object.</source>
          <target state="translated">下面的代码行使用参考实现（RI）中提供的 &lt;code&gt;CachedRowSet&lt;/code&gt; 的默认构造函数来创建默认的 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="b0c56cda4a595a6aaa8230eda97af6594295a798" translate="yes" xml:space="preserve">
          <source>The following line of code uses the fully qualified name to register this implementation with the &lt;code&gt;SyncFactory&lt;/code&gt; static instance.</source>
          <target state="translated">下面的代码行使用完全限定的名称在 &lt;code&gt;SyncFactory&lt;/code&gt; 静态实例中注册此实现。</target>
        </trans-unit>
        <trans-unit id="a8babc37cfd9a2c16e54d44c9b07cc4e8aec3a0d" translate="yes" xml:space="preserve">
          <source>The following list describes the accepted selection modes:</source>
          <target state="translated">下面列出了可接受的选择模式。</target>
        </trans-unit>
        <trans-unit id="b7e3606d490054cb4d21babd105a9cf2ebf6b80f" translate="yes" xml:space="preserve">
          <source>The following list of parameters defined in the DOM:</source>
          <target state="translated">以下是DOM中定义的参数列表。</target>
        </trans-unit>
        <trans-unit id="17ab3ffda462facda1394413471c75399824926c" translate="yes" xml:space="preserve">
          <source>The following low-level information summarizes relevant parts of the Java Virtual Machine specification. For full details, please see the current version of that specification.</source>
          <target state="translated">以下低级信息总结了Java虚拟机规范的相关部分。有关完整的细节,请参见该规范的当前版本。</target>
        </trans-unit>
        <trans-unit id="c2c0d7dfb61bac087e83f84901457fcbf7f4359a" translate="yes" xml:space="preserve">
          <source>The following low-level information summarizes relevant parts of the Java Virtual Machine specification. For full details, please see the current version of that specification. Each occurrence of an &lt;code&gt;invokedynamic&lt;/code&gt; instruction is called a &lt;em&gt;dynamic call site&lt;/em&gt;.</source>
          <target state="translated">以下低级信息总结了Java虚拟机规范的相关部分。有关完整的详细信息，请参阅该规范的当前版本。每次出现 &lt;code&gt;invokedynamic&lt;/code&gt; 指令都称为&lt;em&gt;动态调用站点&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bc850c367b3d55d030ac5fba689706da95bcf62c" translate="yes" xml:space="preserve">
          <source>The following manifest attributes are defined for an agent JAR file:</source>
          <target state="translated">以下是为代理JAR文件定义的清单属性。</target>
        </trans-unit>
        <trans-unit id="b1a314b46d00422122cdcb27ebe2ea8043e6f6b1" translate="yes" xml:space="preserve">
          <source>The following method shuts down an &lt;code&gt;ExecutorService&lt;/code&gt; in two phases, first by calling &lt;code&gt;shutdown&lt;/code&gt; to reject incoming tasks, and then calling &lt;code&gt;shutdownNow&lt;/code&gt;, if necessary, to cancel any lingering tasks:</source>
          <target state="translated">以下方法分两个阶段关闭 &lt;code&gt;ExecutorService&lt;/code&gt; :首先通过调用 &lt;code&gt;shutdown&lt;/code&gt; 拒绝传入的任务，然后在必要时调用 &lt;code&gt;shutdownNow&lt;/code&gt; 来取消所有未完成的任务：</target>
        </trans-unit>
        <trans-unit id="a328e9adb76cbb68764d8f97da4a65fd0868eb7c" translate="yes" xml:space="preserve">
          <source>The following method types are handled as special cases:</source>
          <target state="translated">以下方法类型作为特殊情况处理。</target>
        </trans-unit>
        <trans-unit id="e9a1bbd9e3c20e8c58669c2f26139ca6f2e0fec7" translate="yes" xml:space="preserve">
          <source>The following methods are related to mutation of the document content:</source>
          <target state="translated">以下方法与文档内容的突变有关。</target>
        </trans-unit>
        <trans-unit id="32c5f835db7f701a964e6eeb354a81d6919fa866" translate="yes" xml:space="preserve">
          <source>The following methods are used to access the header fields and the contents after the connection is made to the remote object:</source>
          <target state="translated">以下方法用于在连接到远程对象后访问头字段和内容。</target>
        </trans-unit>
        <trans-unit id="5d718c0190660979044332a467b14434f2c40769" translate="yes" xml:space="preserve">
          <source>The following methods give access to the character data that makes up the content.</source>
          <target state="translated">以下方法可以访问构成内容的字符数据。</target>
        </trans-unit>
        <trans-unit id="033ba12390d0946290eb6e67df6857757d06f3c1" translate="yes" xml:space="preserve">
          <source>The following methods give access to the document structure.</source>
          <target state="translated">以下方法可以访问文件结构。</target>
        </trans-unit>
        <trans-unit id="50a1bbb1b771696673bad8905b2f708ce5822988" translate="yes" xml:space="preserve">
          <source>The following notes apply to the &quot;DRBG&quot; implementation in the SUN provider of the JDK reference implementation.</source>
          <target state="translated">下面的说明适用于JDK参考实现的SUN提供者中的 &quot;DRBG &quot;实现。</target>
        </trans-unit>
        <trans-unit id="bab784498a1090741bc7bcbb128bd96d44390724" translate="yes" xml:space="preserve">
          <source>The following operations are defined for this class:</source>
          <target state="translated">该类定义了以下操作。</target>
        </trans-unit>
        <trans-unit id="30a4db2338b89e038c1cc452b10ce7642236ba11" translate="yes" xml:space="preserve">
          <source>The following option is mandatory and must be specified in this module's login &lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">以下选项是必需的，必须在该模块的登录&lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; &lt;/a&gt;指定：</target>
        </trans-unit>
        <trans-unit id="c98f5bf240579a5e055310b3d44156bec892f4f9" translate="yes" xml:space="preserve">
          <source>The following options can be used to specify the elements to be documented:</source>
          <target state="translated">以下选项可用于指定要记录的要素:</target>
        </trans-unit>
        <trans-unit id="4aee0a6de1b9f655ca7af28697158bc4a87c8e48" translate="yes" xml:space="preserve">
          <source>The following paragraphs describe the namespace and prefix repair algorithm:</source>
          <target state="translated">以下段落将介绍命名空间和前缀修复算法。</target>
        </trans-unit>
        <trans-unit id="d58a87561186b3df4cf28fc117db16e1fb370f26" translate="yes" xml:space="preserve">
          <source>The following pattern letters are defined (all other characters from &lt;code&gt;'A'&lt;/code&gt; to &lt;code&gt;'Z'&lt;/code&gt; and from &lt;code&gt;'a'&lt;/code&gt; to &lt;code&gt;'z'&lt;/code&gt; are reserved):</source>
          <target state="translated">定义了以下模式字母（保留从 &lt;code&gt;'A'&lt;/code&gt; 到 &lt;code&gt;'Z'&lt;/code&gt; 以及从 &lt;code&gt;'a'&lt;/code&gt; 到 &lt;code&gt;'z'&lt;/code&gt; 所有其他字符）：</target>
        </trans-unit>
        <trans-unit id="0581e85badd78769c153a1b23a991b8102df6ee3" translate="yes" xml:space="preserve">
          <source>The following permissions have been superseded by newer permissions or are associated with classes that have been deprecated: &lt;a href=&quot;identity&quot;&gt;&lt;code&gt;Identity&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;identityscope&quot;&gt;&lt;code&gt;IdentityScope&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;signer&quot;&gt;&lt;code&gt;Signer&lt;/code&gt;&lt;/a&gt;. Use of them is discouraged. See the applicable classes for more information.</source>
          <target state="translated">以下权限已被较新的权限所取代，或者与已弃用的类相关联：&lt;a href=&quot;identity&quot;&gt; &lt;code&gt;Identity&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;identityscope&quot;&gt; &lt;code&gt;IdentityScope&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;signer&quot;&gt; &lt;code&gt;Signer&lt;/code&gt; &lt;/a&gt;。不鼓励使用它们。有关更多信息，请参见适用的类。</target>
        </trans-unit>
        <trans-unit id="0ce1ce1082433f08b5898ba357a42b396c18a94b" translate="yes" xml:space="preserve">
          <source>The following picture depicts a menu which contains an instance of &lt;code&gt;CheckBoxMenuItem&lt;/code&gt;:</source>
          <target state="translated">下图描绘了一个包含 &lt;code&gt;CheckBoxMenuItem&lt;/code&gt; 实例的菜单：</target>
        </trans-unit>
        <trans-unit id="0b19fc8974415be4515bd98831bb56ee0af08745" translate="yes" xml:space="preserve">
          <source>The following properties can be set by an application using the &lt;a href=&quot;../xmlcryptocontext#setProperty(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;setProperty&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">可以由应用程序使用&lt;a href=&quot;../xmlcryptocontext#setProperty(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;setProperty&lt;/code&gt; &lt;/a&gt;方法设置以下属性。</target>
        </trans-unit>
        <trans-unit id="f9f9efa67d2f67a9c06dba17961a71fba1930dcf" translate="yes" xml:space="preserve">
          <source>The following properties can be set using the &lt;a href=&quot;../xmlcryptocontext#setProperty(java.lang.String,java.lang.Object)&quot;&gt;&lt;code&gt;setProperty&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">可以使用&lt;a href=&quot;../xmlcryptocontext#setProperty(java.lang.String,java.lang.Object)&quot;&gt; &lt;code&gt;setProperty&lt;/code&gt; &lt;/a&gt;方法设置以下属性。</target>
        </trans-unit>
        <trans-unit id="8372277a7920b07e43bb0a2b05852021ccc2682f" translate="yes" xml:space="preserve">
          <source>The following properties have been deprecated in favor of the corresponding ones for the &lt;code&gt;BODY&lt;/code&gt; element: alinkColor background bgColor fgColor linkColor vlinkColor In DOM Level 2, the method &lt;code&gt;getElementById&lt;/code&gt; is inherited from the &lt;code&gt;Document&lt;/code&gt; interface where it was moved.</source>
          <target state="translated">不推荐使用以下属性，而推荐使用 &lt;code&gt;BODY&lt;/code&gt; 元素的相应属性：alinkColor背景bgColor fgColor linkColor vlinkColor在DOM级别2中，方法 &lt;code&gt;getElementById&lt;/code&gt; 从其移动位置的 &lt;code&gt;Document&lt;/code&gt; 接口继承。</target>
        </trans-unit>
        <trans-unit id="c56cd66602459179aafcf7141a3eed89fa1cb5b3" translate="yes" xml:space="preserve">
          <source>The following properties may be specified when creating a Zip file system:</source>
          <target state="translated">创建Zip文件系统时,可指定以下属性。</target>
        </trans-unit>
        <trans-unit id="095e3e7355fa19f5ee58289d9796e3e988d310d1" translate="yes" xml:space="preserve">
          <source>The following represents an example &lt;code&gt;Configuration&lt;/code&gt; entry based on the syntax above:</source>
          <target state="translated">以下是基于上述语法的示例 &lt;code&gt;Configuration&lt;/code&gt; 条目：</target>
        </trans-unit>
        <trans-unit id="37ceef4725c7a0cd363a2cacc2e6b899d6b4fb89" translate="yes" xml:space="preserve">
          <source>The following requirements MUST be abided by when implementing a DOM-based &lt;code&gt;XMLSignatureFactory&lt;/code&gt;, &lt;code&gt;KeyInfoFactory&lt;/code&gt; or &lt;code&gt;
 TransformService&lt;/code&gt; in order to minimize interoperability problems:</source>
          <target state="translated">在实现基于DOM的 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; ， &lt;code&gt;KeyInfoFactory&lt;/code&gt; 或 &lt;code&gt; TransformService&lt;/code&gt; 时，必须遵守以下要求，以最大程度地减少互操作性问题：</target>
        </trans-unit>
        <trans-unit id="b548a437c93d820df4dce7f8288d69def9ab4607" translate="yes" xml:space="preserve">
          <source>The following resolver would provide the application with a special character stream for the entity with the system identifier &quot;http://www.myhost.com/today&quot;:</source>
          <target state="translated">以下解析器将为应用程序提供一个特殊的字符流,供具有系统标识符 &quot;http://www.myhost.com/today &quot;的实体使用。</target>
        </trans-unit>
        <trans-unit id="f897dc897276fa2272fca1b98488f908fe0ba63e" translate="yes" xml:space="preserve">
          <source>The following rule is used to create the control:</source>
          <target state="translated">以下规则用于创建控件。</target>
        </trans-unit>
        <trans-unit id="7e08456c6517fc0c2e3ee51167af4648cf8de1dd" translate="yes" xml:space="preserve">
          <source>The following rules are applied in the conversion:</source>
          <target state="translated">在转换过程中适用以下规则:</target>
        </trans-unit>
        <trans-unit id="08205e616ea1bce1e08b0bc0e1129d0240a8555c" translate="yes" xml:space="preserve">
          <source>The following rules are used to interpret glob patterns:</source>
          <target state="translated">以下规则用于解释 glob 模式。</target>
        </trans-unit>
        <trans-unit id="928b2cc192bd54d187e07b35ee1aebe277bfa0d3" translate="yes" xml:space="preserve">
          <source>The following rules hold for the argument handles:</source>
          <target state="translated">以下规则适用于参数句柄。</target>
        </trans-unit>
        <trans-unit id="d8c3936624028ddf5fc126c8eada1c05272c495e" translate="yes" xml:space="preserve">
          <source>The following rules hold for these argument handles:</source>
          <target state="translated">以下规则适用于这些参数句柄。</target>
        </trans-unit>
        <trans-unit id="ad4c5b4cd8bd37cf908e5ed29500d2cf8fce0b0b" translate="yes" xml:space="preserve">
          <source>The following sections demonstrates how a &lt;code&gt;WebRowSet&lt;/code&gt; implementation should use the XML Schema to describe update, insert, and delete operations and to describe the state of a &lt;code&gt;WebRowSet&lt;/code&gt; object in XML.</source>
          <target state="translated">以下各节演示 &lt;code&gt;WebRowSet&lt;/code&gt; 实现应如何使用XML Schema来描述更新，插入和删除操作以及以XML描述 &lt;code&gt;WebRowSet&lt;/code&gt; 对象的状态。</target>
        </trans-unit>
        <trans-unit id="e662f5cafdbd5ecb60e1c6f67533b72f8424da4a" translate="yes" xml:space="preserve">
          <source>The following sections give further details of these rules.</source>
          <target state="translated">以下各节将进一步详细介绍这些规则。</target>
        </trans-unit>
        <trans-unit id="3dc3552c73c17ca1b9c5aa43bfd7d5dfaf26a9bf" translate="yes" xml:space="preserve">
          <source>The following shows two of the &lt;code&gt;name-color&lt;/code&gt; pairs:</source>
          <target state="translated">下面显示了两个 &lt;code&gt;name-color&lt;/code&gt; 对：</target>
        </trans-unit>
        <trans-unit id="1d29f60bac8cc9a33818a808a558b8ff33982da4" translate="yes" xml:space="preserve">
          <source>The following standard button masks are also accepted:</source>
          <target state="translated">也可接受以下标准按钮面具。</target>
        </trans-unit>
        <trans-unit id="e981f6a80c2f4b200d1c20e0f2e1b9057f274cc5" translate="yes" xml:space="preserve">
          <source>The following standard type names have been defined:</source>
          <target state="translated">已定义了以下标准类型名称:</target>
        </trans-unit>
        <trans-unit id="059245ffb9cf67aa21ae5627f1571722543f9fdb" translate="yes" xml:space="preserve">
          <source>The following statement:</source>
          <target state="translated">以下声明:</target>
        </trans-unit>
        <trans-unit id="dc17f56a6c7df0d6dab18fd32c3d2b022583dfb1" translate="yes" xml:space="preserve">
          <source>The following steps are used to determine the set of glyphs required to render the indicated &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">以下步骤用于确定呈现指示的 &lt;code&gt;String&lt;/code&gt; 所需的一组字形：</target>
        </trans-unit>
        <trans-unit id="0d1054dd27a2b54725c034e56e595342eef2e37d" translate="yes" xml:space="preserve">
          <source>The following string attributes are equal: &lt;code&gt;nodeName&lt;/code&gt;, &lt;code&gt;localName&lt;/code&gt;, &lt;code&gt;namespaceURI&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;nodeValue&lt;/code&gt; . This is: they are both &lt;code&gt;null&lt;/code&gt;, or they have the same length and are character for character identical.</source>
          <target state="translated">以下字符串属性相等： &lt;code&gt;nodeName&lt;/code&gt; ， &lt;code&gt;localName&lt;/code&gt; ， &lt;code&gt;namespaceURI&lt;/code&gt; ， &lt;code&gt;prefix&lt;/code&gt; ， &lt;code&gt;nodeValue&lt;/code&gt; 。这是：它们都是 &lt;code&gt;null&lt;/code&gt; ，或者它们具有相同的长度，并且每个字符都相同。</target>
        </trans-unit>
        <trans-unit id="4860201a1768a9dc24bcaa52fb5ec801c2e06f8c" translate="yes" xml:space="preserve">
          <source>The following string attributes are equal: &lt;code&gt;publicId&lt;/code&gt;, &lt;code&gt;systemId&lt;/code&gt;, &lt;code&gt;internalSubset&lt;/code&gt;.</source>
          <target state="translated">以下字符串属性相等： &lt;code&gt;publicId&lt;/code&gt; ， &lt;code&gt;systemId&lt;/code&gt; ， &lt;code&gt;internalSubset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="616bdaa8268db9337c435490cc6ea5d71fc28b55" translate="yes" xml:space="preserve">
          <source>The following syntax is supported for configuration data:</source>
          <target state="translated">配置数据支持以下语法。</target>
        </trans-unit>
        <trans-unit id="ecd14701074ee88ad3cd6b898bb2965df70eb0b9" translate="yes" xml:space="preserve">
          <source>The following table describes the properties used by &lt;code&gt;Swing&lt;/code&gt; components that support &lt;code&gt;Actions&lt;/code&gt;. In the table, &lt;em&gt;button&lt;/em&gt; refers to any &lt;code&gt;AbstractButton&lt;/code&gt; subclass, which includes not only &lt;code&gt;JButton&lt;/code&gt; but also classes such as &lt;code&gt;JMenuItem&lt;/code&gt;. Unless otherwise stated, a &lt;code&gt;null&lt;/code&gt; property value in an &lt;code&gt;Action&lt;/code&gt; (or a &lt;code&gt;Action&lt;/code&gt; that is &lt;code&gt;null&lt;/code&gt;) results in the button's corresponding property being set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">下表描述了支持 &lt;code&gt;Actions&lt;/code&gt; 的 &lt;code&gt;Swing&lt;/code&gt; 组件使用的属性。在表中，&lt;em&gt;button&lt;/em&gt;指的是任何 &lt;code&gt;AbstractButton&lt;/code&gt; 子类，不仅包括 &lt;code&gt;JButton&lt;/code&gt; ,而且还包括 &lt;code&gt;JMenuItem&lt;/code&gt; 之类的类。除非另有说明，否则 &lt;code&gt;Action&lt;/code&gt; （或 &lt;code&gt;Action&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ）中的 &lt;code&gt;null&lt;/code&gt; 属性值会导致按钮的相应属性设置为 &lt;code&gt;null&lt;/code&gt; 。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2515e4e89d813c49f09f4f13c10f030d89493ebc" translate="yes" xml:space="preserve">
          <source>The following table describes which methods are valid in what state. If a method is called in an invalid state the method will throw a java.lang.IllegalStateException.</source>
          <target state="translated">下表描述了哪些方法在什么状态下是有效的。如果一个方法在无效状态下被调用,该方法将抛出一个java.lang.IllegalStateException。</target>
        </trans-unit>
        <trans-unit id="a1310e13e33e71344af51ef4d534e48124a4b7ea" translate="yes" xml:space="preserve">
          <source>The following table gives a guide to the mapping from old types to their replacements. In some cases, there is no direct equivalent.</source>
          <target state="translated">下表提供了从旧类型到其替代类型的映射指南。在某些情况下,没有直接的等价物。</target>
        </trans-unit>
        <trans-unit id="03f8e9c0a8d9f72f0813be38c030c257d4885703" translate="yes" xml:space="preserve">
          <source>The following table gives some examples of the relations between the attribute value in the original document (parsed attribute), the value as exposed in the DOM, and the serialization of the value:</source>
          <target state="translated">下表给出了一些原始文档中的属性值(解析后的属性)、DOM中暴露的值以及值的序列化之间的关系示例。</target>
        </trans-unit>
        <trans-unit id="8f6c72bcfb202d2d7dedc0558ca2b904fe019842" translate="yes" xml:space="preserve">
          <source>The following table illustrates the features that the &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class provides.</source>
          <target state="translated">下表说明了 &lt;code&gt;BaseRowSet&lt;/code&gt; 抽象类提供的功能。</target>
        </trans-unit>
        <trans-unit id="7151bc690e351dd9a1f336d910b7933181defb79" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible &lt;code&gt;AWTPermission&lt;/code&gt; target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了所有可能的 &lt;code&gt;AWTPermission&lt;/code&gt; 目标名称，并为每个名称提供了权限允许的描述以及对授予代码权限的风险的讨论。</target>
        </trans-unit>
        <trans-unit id="edc4758a2f7a1b8c0bd50af3aaf086d8b3a4a2e0" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible &lt;code&gt;SQLPermission&lt;/code&gt; target names. The table gives a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了所有可能的 &lt;code&gt;SQLPermission&lt;/code&gt; 目标名称。该表描述了许可所允许的内容，并讨论了授予代码许可的风险。</target>
        </trans-unit>
        <trans-unit id="ef5787f391778d570faa8f529dd2d4b7ec4d7af7" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible NetPermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了所有可能的NetPermission目标名,并为每个目标名提供了权限允许的描述和授予代码该权限的风险讨论。</target>
        </trans-unit>
        <trans-unit id="17260818ccc38c24f91ff1a15d0d3826faa41c0e" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible RuntimePermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了所有可能的RuntimePermission目标名,并为每个目标名提供了权限允许的描述和授予代码该权限的风险讨论。</target>
        </trans-unit>
        <trans-unit id="7ff5627793347ef7ce9be716f4b73a272dd3f460" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible SSLPermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了所有可能的SSLPermission目标名,并为每个目标名提供了权限允许的描述和授予代码该权限的风险讨论。</target>
        </trans-unit>
        <trans-unit id="3f4e15c4be2288a1f5a4c41bc7168d70d61fef07" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible SecurityPermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了所有可能的SecurityPermission目标名,并为每个目标名提供了权限允许的描述和授予代码该权限的风险讨论。</target>
        </trans-unit>
        <trans-unit id="9c80eaace1109e654052b6da7dfbb1e233a7e068" translate="yes" xml:space="preserve">
          <source>The following table lists all the possible SerializablePermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了所有可能的SerializablePermission目标名,并为每个目标名提供了权限允许的描述和授予代码该权限的风险讨论。</target>
        </trans-unit>
        <trans-unit id="f54160ed60b7126e0f30578518989c027ea5ce1b" translate="yes" xml:space="preserve">
          <source>The following table lists some common properties that should be used in implementations:</source>
          <target state="translated">下表列出了一些在实现中应该使用的常见属性。</target>
        </trans-unit>
        <trans-unit id="660a03ca8d2ac49279e69071cdeceb003e271b59" translate="yes" xml:space="preserve">
          <source>The following table lists some common properties which service providers should use, if applicable:</source>
          <target state="translated">下表列出了服务提供商应酌情使用的一些常见属性。</target>
        </trans-unit>
        <trans-unit id="179bd60df88f32c14ede99ee9b73f1703dc32793" translate="yes" xml:space="preserve">
          <source>The following table lists the possible &lt;code&gt;AudioPermission&lt;/code&gt; target names. For each name, the table provides a description of exactly what that permission allows, as well as a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了可能的 &lt;code&gt;AudioPermission&lt;/code&gt; 目标名称。对于每个名称，该表提供了该权限允许的确切描述，并讨论了授予代码权限的风险。</target>
        </trans-unit>
        <trans-unit id="15aefb289888c8cfd85bc93026363772d88eaf66" translate="yes" xml:space="preserve">
          <source>The following table lists the standard &lt;code&gt;RuntimePermission&lt;/code&gt; target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了标准的 &lt;code&gt;RuntimePermission&lt;/code&gt; 目标名称，并为每个名称提供了权限允许的描述以及对授予代码权限的风险的讨论。</target>
        </trans-unit>
        <trans-unit id="2b3fd6bd4cbc5933b1b8c133bd8c749890f2bdf2" translate="yes" xml:space="preserve">
          <source>The following table lists the standard &lt;code&gt;SecurityPermission&lt;/code&gt; target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了标准的 &lt;code&gt;SecurityPermission&lt;/code&gt; 目标名称，并为每个名称提供了许可所允许的内容的描述以及对授予许可代码的风险的讨论。</target>
        </trans-unit>
        <trans-unit id="038977495624e64859de9d0346555f965fab9bf9" translate="yes" xml:space="preserve">
          <source>The following table lists the standard &lt;code&gt;SerializablePermission&lt;/code&gt; target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了标准的 &lt;code&gt;SerializablePermission&lt;/code&gt; 目标名称，并为每个名称提供了权限允许的描述以及对授予代码权限的风险的讨论。</target>
        </trans-unit>
        <trans-unit id="5f6419110b0992b709e7b426cfe6e047d341e1eb" translate="yes" xml:space="preserve">
          <source>The following table lists the standard NetPermission target names, and for each provides a description of what the permission allows and a discussion of the risks of granting code the permission.</source>
          <target state="translated">下表列出了标准的NetPermission目标名,并为每个目标名提供了权限允许的描述和授予代码该权限的风险讨论。</target>
        </trans-unit>
        <trans-unit id="c596c0991d22917115d21c4df40bbc0100da38f5" translate="yes" xml:space="preserve">
          <source>The following table provides a summary description of what the permission allows, and discusses the risks of granting code the permission.</source>
          <target state="translated">下表简要描述了该权限允许的内容,并讨论了授予代码该权限的风险。</target>
        </trans-unit>
        <trans-unit id="0123d6346bef0a0a078072ae237647da76bc771d" translate="yes" xml:space="preserve">
          <source>The following table provides a summary of what the permission allows, and the risks of granting code the permission.</source>
          <target state="translated">下表提供了该权限允许的内容,以及授予代码该权限的风险摘要。</target>
        </trans-unit>
        <trans-unit id="9999335da83646da96e144319d66729289535a5b" translate="yes" xml:space="preserve">
          <source>The following table shows the example document and the results of various methods described above.</source>
          <target state="translated">下表显示了示例文档和上述各种方法的结果。</target>
        </trans-unit>
        <trans-unit id="3fb03bbeb28d7133cf7e0d5afb2838bb29bb561e" translate="yes" xml:space="preserve">
          <source>The following table shows the options names to use with &lt;a href=&quot;#setRecordingOptions(long,java.util.Map)&quot;&gt;&lt;code&gt;setRecordingOptions(long, Map)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getRecordingOptions(long)&quot;&gt;&lt;code&gt;getRecordingOptions(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">下表显示了与&lt;a href=&quot;#setRecordingOptions(long,java.util.Map)&quot;&gt; &lt;code&gt;setRecordingOptions(long, Map)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getRecordingOptions(long)&quot;&gt; &lt;code&gt;getRecordingOptions(long)&lt;/code&gt; &lt;/a&gt;一起使用的选项名称。</target>
        </trans-unit>
        <trans-unit id="ff6f5314e2e2f057c3085713c18f500a69f59408" translate="yes" xml:space="preserve">
          <source>The following table shows the required attributes that the specified &lt;code&gt;CompositeData&lt;/code&gt; must contain.</source>
          <target state="translated">下表显示了指定 &lt;code&gt;CompositeData&lt;/code&gt; 必须包含的必需属性。</target>
        </trans-unit>
        <trans-unit id="a300318a4bbec53addd65106cc96eb86122b2ebf" translate="yes" xml:space="preserve">
          <source>The following table shows what components get built by this view.</source>
          <target state="translated">下表显示了该视图会构建哪些组件。</target>
        </trans-unit>
        <trans-unit id="f2fb49e04ae635cd7cfef1d54fffded805a24728" translate="yes" xml:space="preserve">
          <source>The following table shows what parameter values an implementation might use for a representative set of reverberation settings.</source>
          <target state="translated">下表显示了一个实施例可能对一组有代表性的混响设置使用的参数值。</target>
        </trans-unit>
        <trans-unit id="ba7efe8c61b0da53598a46929132d482972b0d1f" translate="yes" xml:space="preserve">
          <source>The following table summarizes the supported conversions. Conversions denoted by an upper-case character (i.e. &lt;code&gt;'B'&lt;/code&gt;, &lt;code&gt;'H'&lt;/code&gt;, &lt;code&gt;'S'&lt;/code&gt;, &lt;code&gt;'C'&lt;/code&gt;, &lt;code&gt;'X'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt;, &lt;code&gt;'G'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;, and &lt;code&gt;'T'&lt;/code&gt;) are the same as those for the corresponding lower-case conversion characters except that the result is converted to upper case according to the rules of the prevailing &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt;. If there is no explicit locale specified, either at the construction of the instance or as a parameter to its method invocation, then the &lt;a href=&quot;locale.category#FORMAT&quot;&gt;&lt;code&gt;default locale&lt;/code&gt;&lt;/a&gt; is used.</source>
          <target state="translated">下表总结了支持的转换。以大写字母表示的转换（即 &lt;code&gt;'B'&lt;/code&gt; ， &lt;code&gt;'H'&lt;/code&gt; ， &lt;code&gt;'S'&lt;/code&gt; ， &lt;code&gt;'C'&lt;/code&gt; ， &lt;code&gt;'X'&lt;/code&gt; ， &lt;code&gt;'E'&lt;/code&gt; ， &lt;code&gt;'G'&lt;/code&gt; ， &lt;code&gt;'A'&lt;/code&gt; 和 &lt;code&gt;'T'&lt;/code&gt; ）是相同的与相应的小写转换字符的字符相同，只是根据流行的&lt;a href=&quot;locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt;的规则将结果转换为大写字母。如果在实例构造时或作为其方法调用的参数都未指定显式语言环境，则使用&lt;a href=&quot;locale.category#FORMAT&quot;&gt; &lt;code&gt;default locale&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36442fed0b3c21cba2fc0264c571657e0341e0c1" translate="yes" xml:space="preserve">
          <source>The following table summarizes the supported conversions. Conversions denoted by an upper-case character (i.e. &lt;code&gt;'B'&lt;/code&gt;, &lt;code&gt;'H'&lt;/code&gt;, &lt;code&gt;'S'&lt;/code&gt;, &lt;code&gt;'C'&lt;/code&gt;, &lt;code&gt;'X'&lt;/code&gt;, &lt;code&gt;'E'&lt;/code&gt;, &lt;code&gt;'G'&lt;/code&gt;, &lt;code&gt;'A'&lt;/code&gt;, and &lt;code&gt;'T'&lt;/code&gt;) are the same as those for the corresponding lower-case conversion characters except that the result is converted to upper case according to the rules of the prevailing &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt;. The result is equivalent to the following invocation of &lt;a href=&quot;../lang/string#toUpperCase--&quot;&gt;&lt;code&gt;String.toUpperCase()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">下表总结了支持的转换。以大写字母（即 &lt;code&gt;'B'&lt;/code&gt; ， &lt;code&gt;'H'&lt;/code&gt; ， &lt;code&gt;'S'&lt;/code&gt; ， &lt;code&gt;'C'&lt;/code&gt; ， &lt;code&gt;'X'&lt;/code&gt; ， &lt;code&gt;'E'&lt;/code&gt; ， &lt;code&gt;'G'&lt;/code&gt; ， &lt;code&gt;'A'&lt;/code&gt; 和 &lt;code&gt;'T'&lt;/code&gt; ）表示的转换是相同的与相应的小写转换字符的字符相同，只是根据现行&lt;a href=&quot;locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt;的规则将结果转换为大写字母。结果等同于以下对&lt;a href=&quot;../lang/string#toUpperCase--&quot;&gt; &lt;code&gt;String.toUpperCase()&lt;/code&gt; 的&lt;/a&gt;调用</target>
        </trans-unit>
        <trans-unit id="65e243be51f564c984aa8e7b3c0b24bf9c633580" translate="yes" xml:space="preserve">
          <source>The following table summarizes the supported flags.</source>
          <target state="translated">下表总结了支持的标志。</target>
        </trans-unit>
        <trans-unit id="ccb7111863ddef3a44afb63ff5af119b506708e5" translate="yes" xml:space="preserve">
          <source>The following table summarizes the type mapping rules.</source>
          <target state="translated">下表总结了类型映射规则。</target>
        </trans-unit>
        <trans-unit id="0d25ca64aad3e8abeb211fb627bd0b1b622bac8e" translate="yes" xml:space="preserve">
          <source>The following tables illustrate which subinterfaces of Type are used to mirror types in the target VM --</source>
          <target state="translated">下表说明了Type的哪些子接口用于在目标VM中镜像类型----。</target>
        </trans-unit>
        <trans-unit id="5a232febccd4b2f1e4420f797f08dc0ebda4431b" translate="yes" xml:space="preserve">
          <source>The following tables illustrate which subinterfaces of Value are used to mirror values in the target VM --</source>
          <target state="translated">下表说明了Value的哪些子接口用于在目标VM中镜像值--。</target>
        </trans-unit>
        <trans-unit id="6eb3829191aadf52b3efa4b3303459432ed38cd5" translate="yes" xml:space="preserve">
          <source>The following target name has been deprecated in favor of &lt;code&gt;createLoginContext.{name}&lt;/code&gt;.</source>
          <target state="translated">不推荐使用以下目标名称，而推荐使用 &lt;code&gt;createLoginContext.{name}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff3a76ac8c797d1b540cfe5e374bfb9ac59b4699" translate="yes" xml:space="preserve">
          <source>The following two rules provide predictable rendering behavior whether aliasing or antialiasing is being used.</source>
          <target state="translated">以下两条规则提供了可预测的渲染行为,无论使用的是别名还是抗锯齿。</target>
        </trans-unit>
        <trans-unit id="c734167c81ee7d5e27dd0815c6c9a86a53980591" translate="yes" xml:space="preserve">
          <source>The following types are supported:</source>
          <target state="translated">支持以下类型:</target>
        </trans-unit>
        <trans-unit id="c1da9cc4ffc1de3101c943837c22bc1fd9afac2e" translate="yes" xml:space="preserve">
          <source>The following update policies are allowed:</source>
          <target state="translated">允许以下更新政策:</target>
        </trans-unit>
        <trans-unit id="2c3b7dc38ed8f8df0932176f3dbdae53509c7c3b" translate="yes" xml:space="preserve">
          <source>The following values are valid for &lt;code&gt;fill&lt;/code&gt;:</source>
          <target state="translated">以下值对 &lt;code&gt;fill&lt;/code&gt; 有效：</target>
        </trans-unit>
        <trans-unit id="afdac2a010fa57a2dfe61a41c9681bcbd6e19c74" translate="yes" xml:space="preserve">
          <source>The following visualization shows overlapping events belonging to a single thread. By assigning the events to different categories they can be visually separated and stacked vertically.</source>
          <target state="translated">下面的可视化显示了属于单个线程的重叠事件。通过将事件分配到不同的类别,它们可以被可视化地分开并垂直堆叠。</target>
        </trans-unit>
        <trans-unit id="767c290d473216ed800a2d2c5b604bde8a49d85d" translate="yes" xml:space="preserve">
          <source>The following will accumulate strings into a List:</source>
          <target state="translated">下面将把字符串累积到一个List中。</target>
        </trans-unit>
        <trans-unit id="05b2a57dc3dff480b15b59294cea7041689febef" translate="yes" xml:space="preserve">
          <source>The following will accumulate strings into an ArrayList:</source>
          <target state="translated">下面将把字符串累积到一个ArrayList中。</target>
        </trans-unit>
        <trans-unit id="ff3f1c7285fc03704a549b7ebe12c02f8a4efaf9" translate="yes" xml:space="preserve">
          <source>The following will classify &lt;code&gt;Person&lt;/code&gt; objects by city:</source>
          <target state="translated">下面将按城市对 &lt;code&gt;Person&lt;/code&gt; 对象进行分类：</target>
        </trans-unit>
        <trans-unit id="659f4685dccfaaf333b539f6e067f1ae741d4c90" translate="yes" xml:space="preserve">
          <source>The following will classify &lt;code&gt;Person&lt;/code&gt; objects by state and city, cascading two &lt;code&gt;Collector&lt;/code&gt;s together:</source>
          <target state="translated">下面将按州和市对 &lt;code&gt;Person&lt;/code&gt; 对象进行分类，将两个 &lt;code&gt;Collector&lt;/code&gt; 层叠在一起：</target>
        </trans-unit>
        <trans-unit id="6241dc4fdeacf1d1841f3cd3b25a57ea3305649e" translate="yes" xml:space="preserve">
          <source>The following will take a stream of strings and concatenates them into a single string:</source>
          <target state="translated">下面将取一个字符串流并将其连接成一个字符串。</target>
        </trans-unit>
        <trans-unit id="cb96cbae2ec8c9d5aa930342501810327a163404" translate="yes" xml:space="preserve">
          <source>The font conflicts with a non-created &lt;code&gt;Font&lt;/code&gt; already in this &lt;code&gt;GraphicsEnvironment&lt;/code&gt;. For example if the name is that of a system font, or a logical font as described in the documentation of the &lt;a href=&quot;font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt; class. It is implementation dependent whether a font may also conflict if it has the same family name as a system font.</source>
          <target state="translated">字体冲突与非创建 &lt;code&gt;Font&lt;/code&gt; 已经在此 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 中。例如，如果名称是系统字体的名称，或者是&lt;a href=&quot;font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt;类文档中描述的逻辑字体的名称。如果字体与系统字体具有相同的家族名称，则字体是否也会发生冲突也取决于实现。</target>
        </trans-unit>
        <trans-unit id="cbf8a7d1f416da0dab5030de4c91ce5cd0084bbd" translate="yes" xml:space="preserve">
          <source>The font for rendering the title.</source>
          <target state="translated">用于渲染标题的字体。</target>
        </trans-unit>
        <trans-unit id="c26d39ae1f8070236b4aac3bbf67a4c109e59cc4" translate="yes" xml:space="preserve">
          <source>The font is not a</source>
          <target state="translated">字体不是</target>
        </trans-unit>
        <trans-unit id="da8c97a5025dea48a0af564004e56ecc1ee5d375" translate="yes" xml:space="preserve">
          <source>The font name can be a font face name or a font family name. It is used together with the style to find an appropriate font face. When a font family name is specified, the style argument is used to select the most appropriate face from the family. When a font face name is specified, the face's style and the style argument are merged to locate the best matching font from the same family. For example if face name &quot;Arial Bold&quot; is specified with style &lt;code&gt;Font.ITALIC&lt;/code&gt;, the font system looks for a face in the &quot;Arial&quot; family that is bold and italic, and may associate the font instance with the physical font face &quot;Arial Bold Italic&quot;. The style argument is merged with the specified face's style, not added or subtracted. This means, specifying a bold face and a bold style does not double-embolden the font, and specifying a bold face and a plain style does not lighten the font.</source>
          <target state="translated">字体名称可以是字体名称或字体系列名称。它与样式一起使用以找到合适的字体。指定字体系列名称后，将使用style参数从系列中选择最合适的外观。指定字体的外观名称后，该外观的样式和style参数将合并以找到同一系列中最匹配的字体。例如，如果使用样式 &lt;code&gt;Font.ITALIC&lt;/code&gt; 指定了面部名称&amp;ldquo; Arial Bold&amp;rdquo;，字体系统会在&amp;ldquo; Arial&amp;rdquo;族中查找粗体和斜体的面孔，并将字体实例与物理字体&amp;ldquo; Arial Bold Italic&amp;rdquo;相关联。style参数将与指定的面孔样式合并，而不添加或减少。这意味着，指定粗体和粗体样式不会使字体双重浮雕，指定粗体和粗体样式不会使字体变亮。</target>
        </trans-unit>
        <trans-unit id="57a9fb3a7b0e93bd09e1f89825278e77ea79f8f0" translate="yes" xml:space="preserve">
          <source>The font size decrease to next value action identifier</source>
          <target state="translated">字体大小减小到下一个值的动作标识符。</target>
        </trans-unit>
        <trans-unit id="4e63b256f18c29f2463d23edd430f8ad24e1a7c8" translate="yes" xml:space="preserve">
          <source>The font size increase to next value action identifier</source>
          <target state="translated">字体大小增加到下一个值的动作标识符。</target>
        </trans-unit>
        <trans-unit id="6f2dc215d93752d9fe3fbbfa542e99ec51035bf4" translate="yes" xml:space="preserve">
          <source>The foreground color of selected cells.</source>
          <target state="translated">所选单元格的前景色。</target>
        </trans-unit>
        <trans-unit id="f490a248b8701376898bff36a2d349e6094b6458" translate="yes" xml:space="preserve">
          <source>The foreground painter associated for the given state, or null if none could be found.</source>
          <target state="translated">与给定状态相关联的前景画家,如果找不到,则为空。</target>
        </trans-unit>
        <trans-unit id="bbfa942ce1023e5baebf9a307baa7bd02eece99d" translate="yes" xml:space="preserve">
          <source>The form of the domain name is specified by RFC 2965. A domain name begins with a dot (&lt;code&gt;.foo.com&lt;/code&gt;) and means that the cookie is visible to servers in a specified Domain Name System (DNS) zone (for example, &lt;code&gt;www.foo.com&lt;/code&gt;, but not &lt;code&gt;a.b.foo.com&lt;/code&gt;). By default, cookies are only returned to the server that sent them.</source>
          <target state="translated">域名的形式由RFC 2965指定。域名以点号（ &lt;code&gt;.foo.com&lt;/code&gt; ）开头，表示该cookie对指定域名系统（DNS）区域（例如 &lt;code&gt;www.foo.com&lt;/code&gt; ，但不是 &lt;code&gt;a.b.foo.com&lt;/code&gt; ）。默认情况下，cookie仅返回到发送它们的服务器。</target>
        </trans-unit>
        <trans-unit id="186d34b99f6c159fe7b20960d58eebbd64ab2b53" translate="yes" xml:space="preserve">
          <source>The form-feed character (&lt;code&gt;'\u000C'&lt;/code&gt;)</source>
          <target state="translated">换页字符（ &lt;code&gt;'\u000C'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="914e9cea1783412ce51085616ae7c2f4e6dbabf1" translate="yes" xml:space="preserve">
          <source>The formal grammar for connection ids that follow this convention is as follows (using the grammar notation from section 2.4 of &lt;em&gt;The Java Language Specification&lt;/em&gt;):</source>
          <target state="translated">遵循此约定的连接id的形式语法如下（使用&lt;em&gt;Java语言规范&lt;/em&gt;2.4节中的语法符号）：</target>
        </trans-unit>
        <trans-unit id="ac10df27c6523117883e512c48a3dc443ff47107" translate="yes" xml:space="preserve">
          <source>The formal grammar for connection ids that follow this convention is as follows (using the grammar notation from section 2.4 of &lt;em&gt;The Java&amp;trade; Language Specification&lt;/em&gt;):</source>
          <target state="translated">遵循此约定的连接ID的形式语法如下（使用&lt;em&gt;Java&amp;trade;语言规范&lt;/em&gt; 2.4节中的语法符号）：</target>
        </trans-unit>
        <trans-unit id="2cf1258d334e355d142bef03535337a03ed0c616" translate="yes" xml:space="preserve">
          <source>The format and interpretation of &lt;code&gt;filter&lt;/code&gt; follows RFC 2254 with the following interpretations for &lt;code&gt;attr&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; mentioned in the RFC.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 的格式和解释遵循RFC 2254 ，对RFC中提到的 &lt;code&gt;attr&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 具有以下解释。</target>
        </trans-unit>
        <trans-unit id="5b744b244f5335a7221e3aa66efc0d53650d86fb" translate="yes" xml:space="preserve">
          <source>The format consists of the &lt;code&gt;LocalDateTime&lt;/code&gt; followed by the &lt;code&gt;ZoneOffset&lt;/code&gt;. If the &lt;code&gt;ZoneId&lt;/code&gt; is not the same as the offset, then the ID is output. The output is compatible with ISO-8601 if the offset and ID are the same.</source>
          <target state="translated">格式由 &lt;code&gt;LocalDateTime&lt;/code&gt; 后面跟着 &lt;code&gt;ZoneOffset&lt;/code&gt; 组成。如果 &lt;code&gt;ZoneId&lt;/code&gt; 与偏移量不同，则输出ID。如果偏移量和ID相同，则输出与ISO-8601兼容。</target>
        </trans-unit>
        <trans-unit id="e348646ae1fcbac451ad03744c692f77282975a4" translate="yes" xml:space="preserve">
          <source>The format consists of:</source>
          <target state="translated">该格式包括:</target>
        </trans-unit>
        <trans-unit id="df1f5d73ce8daa80b355a835165a962246b8c645" translate="yes" xml:space="preserve">
          <source>The format in which the user's information must be stored in the directory service is specified in RFC 2307. Specifically, this &lt;code&gt;LoginModule&lt;/code&gt; will search for the user's entry in the directory service using the user's</source>
          <target state="translated">RFC 2307中指定了用户信息必须存储在目录服务中的格式。具体地说，此 &lt;code&gt;LoginModule&lt;/code&gt; 将使用用户的目录信息在目录服务中搜索用户的条目。</target>
        </trans-unit>
        <trans-unit id="9c6440eac25ca25ad1f5532fd5250acc6573ef48" translate="yes" xml:space="preserve">
          <source>The format is locale independent and digits must be taken from the Basic Latin block of the Unicode standard. No daylight saving time transition schedule can be specified with a custom time zone ID. If the specified string doesn't match the syntax, &lt;code&gt;&quot;GMT&quot;&lt;/code&gt; is used.</source>
          <target state="translated">格式与语言环境无关，并且数字必须取自Unicode标准的基本拉丁语块。不能使用自定义时区ID指定夏令时转换时间表。如果指定的字符串与语法不匹配，则使用 &lt;code&gt;&quot;GMT&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d4a86dbcac0624f8f00a3128c0cec66b617732f1" translate="yes" xml:space="preserve">
          <source>The format is not defined, but an implementation must ensure that the string returned by this method can be used to build an equivalent descriptor when instantiated using the constructor &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;&lt;code&gt;DescriptorSupport(String inStr)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该格式未定义，但是实现必须确保在使用构造函数&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt; &lt;code&gt;DescriptorSupport(String inStr)&lt;/code&gt; &lt;/a&gt;实例化此方法返回的字符串时，可以将其用于构建等效的描述符。</target>
        </trans-unit>
        <trans-unit id="2abc0d69d332bd14c8108e7ef901fd679e5a23cb" translate="yes" xml:space="preserve">
          <source>The format is not defined, but an implementation must ensure that the string returned by this method can be used to build an equivalent descriptor when instantiated using the constructor &lt;a href=&quot;descriptorsupport#DescriptorSupport-java.lang.String-&quot;&gt;&lt;code&gt;DescriptorSupport(String inStr)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">格式没有定义，但是实现必须确保在使用构造函数&lt;a href=&quot;descriptorsupport#DescriptorSupport-java.lang.String-&quot;&gt; &lt;code&gt;DescriptorSupport(String inStr)&lt;/code&gt; &lt;/a&gt;实例化此方法返回的字符串时，可以将其用于构建等效的描述符。</target>
        </trans-unit>
        <trans-unit id="c239b759e0bd91e3deaa124baf341e96eadd502f" translate="yes" xml:space="preserve">
          <source>The format of a provider-configuration file violates the &lt;a href=&quot;serviceloader#format&quot;&gt;specification&lt;/a&gt;;</source>
          <target state="translated">提供者配置文件的格式违反&lt;a href=&quot;serviceloader#format&quot;&gt;规范&lt;/a&gt;；</target>
        </trans-unit>
        <trans-unit id="10a6300c9d0f42d3b1164cab5831a27b66704f50" translate="yes" xml:space="preserve">
          <source>The format of the IPv6reference should follow that specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732: Format for Literal IPv6 Addresses in URLs&lt;/i&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;http://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;IPv6&lt;/i&gt;&lt;/a&gt;引用的格式应遵循&lt;i&gt;RFC 2732&lt;/i&gt;中指定的&lt;i&gt;格式&lt;/i&gt;：&lt;i&gt;URL中的文字IPv6地址的格式&lt;/i&gt;：</target>
        </trans-unit>
        <trans-unit id="f35f3b15a9b15efbc2092cdaa43d0ecfc847a333" translate="yes" xml:space="preserve">
          <source>The format of the IPv6reference should follow that specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;RFC 2732: Format for Literal IPv6 Addresses in URLs&lt;/i&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://www.ietf.org/rfc/rfc2732.txt&quot;&gt;&lt;i&gt;IPv6&lt;/i&gt;&lt;/a&gt;引用的格式应遵循&lt;i&gt;RFC 2732&lt;/i&gt;中指定的&lt;i&gt;格式&lt;/i&gt;：&lt;i&gt;URL中的文字IPv6地址的格式&lt;/i&gt;：</target>
        </trans-unit>
        <trans-unit id="6b8138c2c9da0ec8d6e19cf5312cb8b37838a661" translate="yes" xml:space="preserve">
          <source>The format of the XML string is not defined, but an implementation must ensure that the string returned by &lt;a href=&quot;#toXMLString()&quot;&gt;&lt;code&gt;toXMLString()&lt;/code&gt;&lt;/a&gt; on an existing descriptor can be used to instantiate an equivalent descriptor using this constructor.</source>
          <target state="translated">XML字符串的格式未定义，但是实现必须确保使用此构造函数，可以使用现有描述符上的&lt;a href=&quot;#toXMLString()&quot;&gt; &lt;code&gt;toXMLString()&lt;/code&gt; &lt;/a&gt;返回的字符串来实例化等效的描述符。</target>
        </trans-unit>
        <trans-unit id="e1864d871bbfba4b54130ce6fa9ccd149fe6fcc6" translate="yes" xml:space="preserve">
          <source>The format of the XML string is not defined, but an implementation must ensure that the string returned by &lt;a href=&quot;descriptorsupport#toXMLString--&quot;&gt;&lt;code&gt;toXMLString()&lt;/code&gt;&lt;/a&gt; on an existing descriptor can be used to instantiate an equivalent descriptor using this constructor.</source>
          <target state="translated">未定义XML字符串的格式，但是实现必须确保可以使用此构造函数将现有描述符上的&lt;a href=&quot;descriptorsupport#toXMLString--&quot;&gt; &lt;code&gt;toXMLString()&lt;/code&gt; &lt;/a&gt;返回的字符串用于实例化等效描述符。</target>
        </trans-unit>
        <trans-unit id="d99535add274a0feacad81889acf4221b07d0c89" translate="yes" xml:space="preserve">
          <source>The format of the audio data contained in the stream.</source>
          <target state="translated">流中包含的音频数据的格式。</target>
        </trans-unit>
        <trans-unit id="ee979ff775433a4c037cb40853991fa64734e45a" translate="yes" xml:space="preserve">
          <source>The format of the input token that this method reads is defined in the specification for the underlying mechanism that will be used. This method will attempt to read one of these tokens per invocation. If the mechanism token contains a definitive start and end this method may block on the &lt;code&gt;InputStream&lt;/code&gt; if only part of the token is available. If the start and end of the token are not definitive then the method will attempt to treat all available bytes as part of the token.</source>
          <target state="translated">在将要使用的基础机制的规范中定义了此方法读取的输入令牌的格式。此方法将尝试在每次调用时读取这些令牌之一。如果机制令牌包含确定的开始和结束，则如果仅令牌的一部分可用，则此方法可能会在 &lt;code&gt;InputStream&lt;/code&gt; 上阻塞。如果令牌的开头和结尾不是确定的，则该方法将尝试将所有可用字节视为令牌的一部分。</target>
        </trans-unit>
        <trans-unit id="05fc3b303a60aef7cfaee1c74286f09fc7d392d0" translate="yes" xml:space="preserve">
          <source>The format of the metadata contained in the XML &lt;code&gt;Document&lt;/code&gt; is identified by a string which appears as the root node of the tree of &lt;code&gt;IIOMetadataNode&lt;/code&gt; objects. This string contains a version number, e.g. &quot;javax_imageio_jpeg_image_1.0&quot;. Readers and writers may support multiple versions of the same basic format and the Image I/O API has methods that allow specifying which version to use by passing the string to the method/constructor used to obtain an &lt;code&gt;IIOMetadata&lt;/code&gt; object. In some cases, a more recent version may not be strictly compatible with a program written expecting an older version (for an example, see the Native Metadata Format section of the JPEG Metadata Usage Notes below).</source>
          <target state="translated">XML &lt;code&gt;Document&lt;/code&gt; 包含的元数据的格式由字符串标识，该字符串显示为 &lt;code&gt;IIOMetadataNode&lt;/code&gt; 对象树的根节点。该字符串包含版本号，例如&amp;ldquo; javax_imageio_jpeg_image_1.0&amp;rdquo;。读取器和写入器可能支持相同基本格式的多个版本，并且Image I / O API具有允许通过将字符串传递给用于获取 &lt;code&gt;IIOMetadata&lt;/code&gt; 对象的方法/构造函数来指定要使用哪个版本的方法。在某些情况下，较新的版本可能与期望使用较旧版本的程序并不严格兼容（例如，请参阅下面的JPEG元数据使用说明的&amp;ldquo;本机元数据格式&amp;rdquo;部分）。</target>
        </trans-unit>
        <trans-unit id="cbdbd7a56c0b79b1e7da582d74bf2a348a161879" translate="yes" xml:space="preserve">
          <source>The format of the offset is controlled by a pattern which must be one of the following:</source>
          <target state="translated">偏移量的格式由一个模式控制,该模式必须是以下之一。</target>
        </trans-unit>
        <trans-unit id="26a1428e370ad8643239064b045e2c25874755d3" translate="yes" xml:space="preserve">
          <source>The format of the provider configuration file is one fully-qualified class name per line. Space and tab characters surrounding each class name, as well as blank lines are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;0x23&lt;/code&gt;), and on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">提供程序配置文件的格式是每行一个完全合格的类名。每个类名称周围的空格和制表符以及空白行都将被忽略。注释字符为 &lt;code&gt;'#'&lt;/code&gt; （ &lt;code&gt;0x23&lt;/code&gt; ），并且在每一行中，第一个注释字符之后的所有字符都将被忽略。该文件必须使用UTF-8编码。</target>
        </trans-unit>
        <trans-unit id="a8deb155671191df84cbd52b08680ae0e03cb5a8" translate="yes" xml:space="preserve">
          <source>The format of the provider-configuration file violates the &lt;a href=&quot;serviceloader#format&quot;&gt;format&lt;/a&gt; specified above;</source>
          <target state="translated">提供者配置文件的&lt;a href=&quot;serviceloader#format&quot;&gt;格式&lt;/a&gt;违反了上面指定的格式；</target>
        </trans-unit>
        <trans-unit id="66255b715513f5e734bbd855aa0ecb644eb59ba8" translate="yes" xml:space="preserve">
          <source>The format of the read data is not specified, but if an implementation supports &lt;a href=&quot;#readExternal(java.io.ObjectInput)&quot;&gt;&lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt;&lt;/a&gt; it must also support &lt;a href=&quot;#writeExternal(java.io.ObjectOutput)&quot;&gt;&lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt;&lt;/a&gt; in such a way that what is written by the latter can be read by the former.</source>
          <target state="translated">未指定读取数据的格式，但是如果实现支持&lt;a href=&quot;#readExternal(java.io.ObjectInput)&quot;&gt; &lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt; ,&lt;/a&gt;则它还必须支持&lt;a href=&quot;#writeExternal(java.io.ObjectOutput)&quot;&gt; &lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt; &lt;/a&gt;，以便可以读取后者写入的内容前者。</target>
        </trans-unit>
        <trans-unit id="ef2c2b152a17451e766c6d0d785dd6c0c42c5238" translate="yes" xml:space="preserve">
          <source>The format of the read data is not specified, but if an implementation supports &lt;a href=&quot;mlet#readExternal-java.io.ObjectInput-&quot;&gt;&lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt;&lt;/a&gt; it must also support &lt;a href=&quot;mlet#writeExternal-java.io.ObjectOutput-&quot;&gt;&lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt;&lt;/a&gt; in such a way that what is written by the latter can be read by the former.</source>
          <target state="translated">未指定读取数据的格式，但是如果实现支持&lt;a href=&quot;mlet#readExternal-java.io.ObjectInput-&quot;&gt; &lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt; ,&lt;/a&gt;则它还必须支持&lt;a href=&quot;mlet#writeExternal-java.io.ObjectOutput-&quot;&gt; &lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt; &lt;/a&gt;，以便可以读取后者写入的内容前者。</target>
        </trans-unit>
        <trans-unit id="fbf991f65c863ce81f15c443fc068ade469b4433" translate="yes" xml:space="preserve">
          <source>The format of the returned string will be &lt;code&gt;PTnHnMnS&lt;/code&gt;, where n is the relevant hours, minutes or seconds part of the duration. Any fractional seconds are placed after a decimal point i the seconds section. If a section has a zero value, it is omitted. The hours, minutes and seconds will all have the same sign.</source>
          <target state="translated">返回的字符串格式为 &lt;code&gt;PTnHnMnS&lt;/code&gt; ，其中n是持续时间的相关小时，分钟或秒部分。任何小数秒都放置在秒部分的小数点后。如果节的值为零，则将其省略。小时，分钟和秒将具有相同的符号。</target>
        </trans-unit>
        <trans-unit id="53238208233a747f471c96749291f5b88e5e4a9d" translate="yes" xml:space="preserve">
          <source>The format of the returned string will be &lt;code&gt;PTnHnMnS&lt;/code&gt;, where n is the relevant hours, minutes or seconds part of the duration. Any fractional seconds are placed after a decimal point in the seconds section. If a section has a zero value, it is omitted. The hours, minutes and seconds will all have the same sign.</source>
          <target state="translated">返回的字符串格式为 &lt;code&gt;PTnHnMnS&lt;/code&gt; ，其中n是持续时间的相关小时，分钟或秒部分。任何小数秒都放在秒部分的小数点后。如果节的值为零，则将其省略。小时，分钟和秒将具有相同的符号。</target>
        </trans-unit>
        <trans-unit id="f504d28c270f13a15deb747709fbbc28c2a06377" translate="yes" xml:space="preserve">
          <source>The format of the string does not correspond to a valid ObjectName.</source>
          <target state="translated">该字符串的格式与有效的ObjectName不一致。</target>
        </trans-unit>
        <trans-unit id="a82e57a0f3938590eefb7ff1f02d1b6bdc7782e1" translate="yes" xml:space="preserve">
          <source>The format of the written data is not specified, but if an implementation supports &lt;a href=&quot;#writeExternal(java.io.ObjectOutput)&quot;&gt;&lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt;&lt;/a&gt; it must also support &lt;a href=&quot;#readExternal(java.io.ObjectInput)&quot;&gt;&lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt;&lt;/a&gt; in such a way that what is written by the former can be read by the latter.</source>
          <target state="translated">未指定写入数据的格式，但是如果实现支持&lt;a href=&quot;#writeExternal(java.io.ObjectOutput)&quot;&gt; &lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt; ,&lt;/a&gt;则它还必须支持&lt;a href=&quot;#readExternal(java.io.ObjectInput)&quot;&gt; &lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt; &lt;/a&gt;，以便可以读取前者所写的内容后者。</target>
        </trans-unit>
        <trans-unit id="67213f01e1e8583efbac8e7258bbba0c3fc20def" translate="yes" xml:space="preserve">
          <source>The format of the written data is not specified, but if an implementation supports &lt;a href=&quot;mlet#writeExternal-java.io.ObjectOutput-&quot;&gt;&lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt;&lt;/a&gt; it must also support &lt;a href=&quot;mlet#readExternal-java.io.ObjectInput-&quot;&gt;&lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt;&lt;/a&gt; in such a way that what is written by the former can be read by the latter.</source>
          <target state="translated">没有指定写入数据的格式，但是如果实现支持&lt;a href=&quot;mlet#writeExternal-java.io.ObjectOutput-&quot;&gt; &lt;code&gt;writeExternal(java.io.ObjectOutput)&lt;/code&gt; ,&lt;/a&gt;则它还必须支持&lt;a href=&quot;mlet#readExternal-java.io.ObjectInput-&quot;&gt; &lt;code&gt;readExternal(java.io.ObjectInput)&lt;/code&gt; &lt;/a&gt;，以便可以读取前者的内容后者。</target>
        </trans-unit>
        <trans-unit id="3fed849d22cdbcaabd25d1ad3dce1b48dd41d8c8" translate="yes" xml:space="preserve">
          <source>The format of this string depends on the implementation, but the following examples may be regarded as typical:</source>
          <target state="translated">这个字符串的格式取决于实现,但下面的例子可以被认为是典型的。</target>
        </trans-unit>
        <trans-unit id="f6020ce09c1e4d4ec666557878868f95d5d65fb6" translate="yes" xml:space="preserve">
          <source>The format of this string is described in the section &lt;a href=&quot;mxbean#type-names&quot;&gt;Type Names&lt;/a&gt; of the MXBean specification.</source>
          <target state="translated">MXBean规范的&amp;ldquo; &lt;a href=&quot;mxbean#type-names&quot;&gt;类型名称&lt;/a&gt; &amp;rdquo;部分中描述了此字符串的格式。</target>
        </trans-unit>
        <trans-unit id="e5d3b3bc4192e2a3475a44b9d2b7b65fd6277144" translate="yes" xml:space="preserve">
          <source>The format should include the entire state of the object.</source>
          <target state="translated">格式应包括对象的整个状态。</target>
        </trans-unit>
        <trans-unit id="c7596810905a51fecd6f83bdfab4d5540921936d" translate="yes" xml:space="preserve">
          <source>The format specifier which does not have a width</source>
          <target state="translated">没有宽度的格式指定器。</target>
        </trans-unit>
        <trans-unit id="043084d451c25a99dbe68ad95096051b578a0bcb" translate="yes" xml:space="preserve">
          <source>The format specifiers for general, character, and numeric types have the following syntax:</source>
          <target state="translated">一般类型、字符类型和数字类型的格式指定器具有以下语法。</target>
        </trans-unit>
        <trans-unit id="445503196824627d242ab13a02f403b7cf0ba95e" translate="yes" xml:space="preserve">
          <source>The format specifiers for types which are used to represents dates and times have the following syntax:</source>
          <target state="translated">用于表示日期和时间的类型的格式指定符有以下语法。</target>
        </trans-unit>
        <trans-unit id="1f5372c3a3d6ab4effeaec652a6cca082ace5f1a" translate="yes" xml:space="preserve">
          <source>The format specifiers which do not correspond to arguments have the following syntax:</source>
          <target state="translated">与参数不对应的格式指定符的语法如下。</target>
        </trans-unit>
        <trans-unit id="578480d24c9aa71ffd93d6698d6025b396d96e7b" translate="yes" xml:space="preserve">
          <source>The format used is the same as &lt;a href=&quot;format/datetimeformatter#ISO_INSTANT&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用的格式与&lt;a href=&quot;format/datetimeformatter#ISO_INSTANT&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="d30c57ca5e389c0408c9e4853695750e44db69b9" translate="yes" xml:space="preserve">
          <source>The format used will be the shortest that outputs the full value of the time where the omitted parts are implied to be zero.</source>
          <target state="translated">使用的格式将是最短的,输出时间的全值,其中省略的部分隐含为零。</target>
        </trans-unit>
        <trans-unit id="b5668256a561602f226996b461ed4d6a78b7620c" translate="yes" xml:space="preserve">
          <source>The format will be '{min}/{largestMin} - {smallestMax}/{max}', where the largestMin or smallestMax sections may be omitted, together with associated slash, if they are the same as the min or max.</source>
          <target state="translated">格式为'{min}/{largestMin}-{smallestMax}/{max}',其中最大最小值或最小最大值部分可以省略,如果它们与最小值或最大值相同,还可以省略相关的斜线。</target>
        </trans-unit>
        <trans-unit id="ee64ee2387db8b2113be88947867bd3203a8bb2e" translate="yes" xml:space="preserve">
          <source>The formats returned by the &lt;a href=&quot;#getFormats(java.lang.String)&quot;&gt;&lt;code&gt;getFormats&lt;/code&gt;&lt;/a&gt; method and candidate locales returned by the &lt;a href=&quot;#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;getCandidateLocales&lt;/code&gt;&lt;/a&gt; method must be consistent in all &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; invocations for the same base bundle. Otherwise, the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; methods may return unintended bundles. For example, if only &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; is returned by the &lt;code&gt;getFormats&lt;/code&gt; method for the first call to &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; and only &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; for the second call, then the second call will return the class-based one that has been cached during the first call.</source>
          <target state="translated">由&lt;a href=&quot;#getFormats(java.lang.String)&quot;&gt; &lt;code&gt;getFormats&lt;/code&gt; &lt;/a&gt;方法返回的格式和由&lt;a href=&quot;#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;getCandidateLocales&lt;/code&gt; &lt;/a&gt;方法返回的候选语言环境在同一基本捆绑包的所有 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 调用中必须一致。否则， &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 方法可能会返回意外的包。例如，如果对于第一次对 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 的调用， &lt;code&gt;getFormats&lt;/code&gt; 方法仅返回 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; ，而对于第二个调用，仅返回 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; ，则第二个调用将返回已经基于类的在第一次通话时缓存。</target>
        </trans-unit>
        <trans-unit id="509d4cab08978635bbfa5b631cb5bb8efac09dae" translate="yes" xml:space="preserve">
          <source>The formats returned by the &lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt;&lt;code&gt;getFormats&lt;/code&gt;&lt;/a&gt; method and candidate locales returned by the &lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;getCandidateLocales&lt;/code&gt;&lt;/a&gt; method must be consistent in all &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; invocations for the same base bundle. Otherwise, the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; methods may return unintended bundles. For example, if only &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; is returned by the &lt;code&gt;getFormats&lt;/code&gt; method for the first call to &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; and only &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; for the second call, then the second call will return the class-based one that has been cached during the first call.</source>
          <target state="translated">由&lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt; &lt;code&gt;getFormats&lt;/code&gt; &lt;/a&gt;方法返回的格式和由&lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;getCandidateLocales&lt;/code&gt; &lt;/a&gt;方法返回的候选语言环境在同一基本捆绑包的所有 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 调用中必须一致。否则， &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 方法可能会返回意外的包。例如，如果对于第一次对 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 的调用， &lt;code&gt;getFormats&lt;/code&gt; 方法仅返回 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; ，而对于第二个调用，仅返回 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; ，则第二个调用将返回已经基于类的在第一次通话时缓存。</target>
        </trans-unit>
        <trans-unit id="fa01f15b0b2302f3a77b309cda420bc04d7418d1" translate="yes" xml:space="preserve">
          <source>The formatted number string</source>
          <target state="translated">格式化的数字字符串</target>
        </trans-unit>
        <trans-unit id="182105ef6901365d5695117e4cfb7d169f95dc6a" translate="yes" xml:space="preserve">
          <source>The formatter will format if data is available for all the fields contained within it. The formatter will parse if the string matches, otherwise no error is returned.</source>
          <target state="translated">如果其中包含的所有字段都有数据,格式化器将进行格式化。如果字符串匹配,格式化器将进行解析,否则不会返回错误。</target>
        </trans-unit>
        <trans-unit id="21ba2b3731f4ac7077ca7f9e6d199abe8b38bd4c" translate="yes" xml:space="preserve">
          <source>The formatter will use the &lt;a href=&quot;../../util/locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. This can be changed using &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the returned formatter. Alternatively use the &lt;a href=&quot;#ofPattern(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;ofPattern(String, Locale)&lt;/code&gt;&lt;/a&gt; variant of this method.</source>
          <target state="translated">格式化程序将使用&lt;a href=&quot;../../util/locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt;。可以使用返回的格式化程序上的&lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;进行更改。或者使用此方法的&lt;a href=&quot;#ofPattern(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;ofPattern(String, Locale)&lt;/code&gt; &lt;/a&gt;变体。</target>
        </trans-unit>
        <trans-unit id="1f3d2dba38dbe5eb07f6491258e9927edabf3d82" translate="yes" xml:space="preserve">
          <source>The formatter will use the &lt;a href=&quot;../../util/locale#getDefault-java.util.Locale.Category-&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. This can be changed using &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the returned formatter Alternatively use the &lt;a href=&quot;datetimeformatter#ofPattern-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;ofPattern(String, Locale)&lt;/code&gt;&lt;/a&gt; variant of this method.</source>
          <target state="translated">格式化程序将使用&lt;a href=&quot;../../util/locale#getDefault-java.util.Locale.Category-&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt;。可以使用返回的格式化程序上的&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;更改此方法。或者使用此方法的&lt;a href=&quot;datetimeformatter#ofPattern-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;ofPattern(String, Locale)&lt;/code&gt; &lt;/a&gt;变体。</target>
        </trans-unit>
        <trans-unit id="93c19202124a2a46e12cd466b8761ae5ee653773" translate="yes" xml:space="preserve">
          <source>The formatter will use the specified locale. This can be changed using &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the returned formatter.</source>
          <target state="translated">格式化程序将使用指定的语言环境。可以使用返回的格式化程序上的&lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;进行更改。</target>
        </trans-unit>
        <trans-unit id="10900480441d4fb200d2493b9b165c75a96be514" translate="yes" xml:space="preserve">
          <source>The formatter will use the specified locale. This can be changed using &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the returned formatter</source>
          <target state="translated">格式化程序将使用指定的语言环境。可以使用返回的格式化程序上的&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;更改此设置</target>
        </trans-unit>
        <trans-unit id="b8a6884838b5d2380f0211a6d7b078af03a56063" translate="yes" xml:space="preserve">
          <source>The formatting can be customized by specifying the &lt;a href=&quot;../formatter#syntax&quot;&gt;format string&lt;/a&gt; in the &lt;a href=&quot;#formatting&quot;&gt; &lt;code&gt;java.util.logging.SimpleFormatter.format&lt;/code&gt;&lt;/a&gt; property. The given &lt;code&gt;LogRecord&lt;/code&gt; will be formatted as if by calling:</source>
          <target state="translated">可以通过在&lt;a href=&quot;#formatting&quot;&gt; &lt;code&gt;java.util.logging.SimpleFormatter.format&lt;/code&gt; &lt;/a&gt;属性中指定&lt;a href=&quot;../formatter#syntax&quot;&gt;格式字符串&lt;/a&gt;来定制格式。给定的 &lt;code&gt;LogRecord&lt;/code&gt; 将被格式化，就像通过调用：</target>
        </trans-unit>
        <trans-unit id="5785ba11198931aef6232862a86717d88b96a053" translate="yes" xml:space="preserve">
          <source>The formatting can be customized by specifying the format string in the &lt;a href=&quot;#formatting&quot;&gt; &lt;code&gt;java.util.logging.SimpleFormatter.format&lt;/code&gt;&lt;/a&gt; property. The given &lt;code&gt;LogRecord&lt;/code&gt; will be formatted as if by calling:</source>
          <target state="translated">可以通过在&lt;a href=&quot;#formatting&quot;&gt; &lt;code&gt;java.util.logging.SimpleFormatter.format&lt;/code&gt; &lt;/a&gt;属性中指定格式字符串来定制格式。给定的 &lt;code&gt;LogRecord&lt;/code&gt; 将被格式化，就像通过调用以下命令一样：</target>
        </trans-unit>
        <trans-unit id="ad810658b54468ba29faa08fbcb8a912699a741b" translate="yes" xml:space="preserve">
          <source>The formatting engine allows the positive and negative signs of numbers to be controlled using this enum. See &lt;a href=&quot;datetimeformatterbuilder&quot;&gt;&lt;code&gt;DateTimeFormatterBuilder&lt;/code&gt;&lt;/a&gt; for usage.</source>
          <target state="translated">格式化引擎允许使用此枚举来控制数字的正负号。有关用法，请参见&lt;a href=&quot;datetimeformatterbuilder&quot;&gt; &lt;code&gt;DateTimeFormatterBuilder&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f994484334957b5e0ec6abc999ce7977df9d0433" translate="yes" xml:space="preserve">
          <source>The formatting of the magnitude</source>
          <target state="translated">幅度的格式化</target>
        </trans-unit>
        <trans-unit id="bac9328bbe8404cc24578cda59316d244c5919ca" translate="yes" xml:space="preserve">
          <source>The former is used whenever a connection needs to be established or re-established with an LDAP server. The latter is used when all other LDAP operations are sent to the LDAP server. The reason why a distinction between these two types of request controls is necessary is because JNDI is a high-level API that does not deal directly with connections. It is the job of service providers to do any necessary connection management. Consequently, a single connection may be shared by multiple context instances, and a service provider is free to use its own algorithms to conserve connection and network usage. Thus, when a method is invoked on the context instance, the service provider might need to do some connection management in addition to performing the corresponding LDAP operations. For connection management, it uses the &lt;em&gt;connection request controls&lt;/em&gt;, while for the normal LDAP operations, it uses the &lt;em&gt;context request controls&lt;/em&gt;.</source>
          <target state="translated">每当需要与LDAP服务器建立连接或重新建立连接时，都使用前者。当所有其他LDAP操作都发送到LDAP服务器时，将使用后者。之所以需要区分这两种类型的请求控件，是因为JNDI是一个高级API，它不直接处理连接。服务提供商的工作是进行任何必要的连接管理。因此，单个连接可以由多个上下文实例共享，并且服务提供者可以自由使用其自己的算法来节省连接和网络使用量。因此，当在上下文实例上调用方法时，服务提供者可能除了执行相应的LDAP操作之外还需要进行一些连接管理。对于连接管理，它使用&lt;em&gt;连接请求控件&lt;/em&gt;，而对于正常的LDAP操作，它使用&lt;em&gt;上下文请求控件&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="394504329301f4cfe8e8f730248f4496ace33bdd" translate="yes" xml:space="preserve">
          <source>The four BoundedRangeModel values are defined as Java Beans properties however Swing ChangeEvents are used to notify clients of changes rather than PropertyChangeEvents. This was done to keep the overhead of monitoring a BoundedRangeModel low. Changes are often reported at MouseDragged rates.</source>
          <target state="translated">四个BoundedRangeModel值被定义为Java Beans属性,但是Swing ChangeEvents被用来通知客户端的变化,而不是PropertyChangeEvents。这样做的目的是为了保持监控BoundedRangeModel的低开销。变更通常以MouseDragged的速度报告。</target>
        </trans-unit>
        <trans-unit id="85e8fff89a57c7eb926b86779c8d6fafa4505803" translate="yes" xml:space="preserve">
          <source>The fourth technique, &lt;a href=&quot;#exportObject(java.rmi.Remote)&quot;&gt;&lt;code&gt;exportObject(Remote)&lt;/code&gt;&lt;/a&gt;, always uses statically generated stubs and is deprecated.</source>
          <target state="translated">第四种技术&lt;a href=&quot;#exportObject(java.rmi.Remote)&quot;&gt; &lt;code&gt;exportObject(Remote)&lt;/code&gt; &lt;/a&gt;始终使用静态生成的存根并已弃用。</target>
        </trans-unit>
        <trans-unit id="f21520d7d456f5c00184b6c77d28a66fae2bd2ae" translate="yes" xml:space="preserve">
          <source>The fraction consists of a decimal point followed by zero or more decimal digits. The string must contain at least one digit in either the integer or the fraction. The number formed by the sign, the integer and the fraction is referred to as the</source>
          <target state="translated">分数由一个小数点和零或多个小数点组成。字符串必须在整数或分数中至少包含一位数字。由符号、整数和分数组成的数字被称为 &quot;小数点&quot;。</target>
        </trans-unit>
        <trans-unit id="6f49809e86cf974fe275860950ae0472de435862" translate="yes" xml:space="preserve">
          <source>The fractional value of the field will be output including the preceding decimal point. The preceding value is not output. For example, the second-of-minute value of 15 would be output as &lt;code&gt;.25&lt;/code&gt;.</source>
          <target state="translated">将输出该字段的分数值，包括前一个小数点。先前的值不输出。例如，分钟的第二个值15将输出为 &lt;code&gt;.25&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d0d3ed6299aa9c75b61db9ef56cc15810b1d204f" translate="yes" xml:space="preserve">
          <source>The fragment component of a URI, if defined, only contains legal URI characters.</source>
          <target state="translated">URI的片段分量,如果定义的话,只包含合法的URI字符。</target>
        </trans-unit>
        <trans-unit id="a4dca7bd1432980e330331fbc13a419c4bdfb5a1" translate="yes" xml:space="preserve">
          <source>The frame can &quot;iconified&quot; (shrunk down and displayed as an icon-image).</source>
          <target state="translated">框架可以 &quot;图标化&quot;(缩小后以图标图像的形式显示)。</target>
        </trans-unit>
        <trans-unit id="4b765e5ef70b77ceddc0138a53384918bbdda588" translate="yes" xml:space="preserve">
          <source>The frame can be closed.</source>
          <target state="translated">框架可以关闭。</target>
        </trans-unit>
        <trans-unit id="9a192ebb27bf51fb37c5b51a24ba55cdefbc3f8f" translate="yes" xml:space="preserve">
          <source>The frame can be expanded to the size of the desktop pane.</source>
          <target state="translated">框架可以扩展到桌面窗格的大小。</target>
        </trans-unit>
        <trans-unit id="125ddc5cb41fd80918b88c71e89e63b542704c22" translate="yes" xml:space="preserve">
          <source>The frame has been closed.</source>
          <target state="translated">框架已经关闭。</target>
        </trans-unit>
        <trans-unit id="6ba9312663f24328e7445d8cd559f9c8b41c3232" translate="yes" xml:space="preserve">
          <source>The frame has been expanded to its maximum size.</source>
          <target state="translated">框架已经扩大到最大尺寸。</target>
        </trans-unit>
        <trans-unit id="85f287b5b2d06f3a5ef24134ab32b5e0000463ca" translate="yes" xml:space="preserve">
          <source>The frame has been iconified.</source>
          <target state="translated">框架已被图标化。</target>
        </trans-unit>
        <trans-unit id="f8d9ae468a4f1456110a2e7e66aa197390c9a9ff" translate="yes" xml:space="preserve">
          <source>The frame is currently selected.</source>
          <target state="translated">当前选择的是框架。</target>
        </trans-unit>
        <trans-unit id="d11533cf2691a798df6e7bed182e7d636190a609" translate="yes" xml:space="preserve">
          <source>The frame name (object of the &lt;code&gt;target&lt;/code&gt; attribute).</source>
          <target state="translated">框架名称（ &lt;code&gt;target&lt;/code&gt; 属性的对象）。</target>
        </trans-unit>
        <trans-unit id="41a6a4dcdc29767e79ca4afea93e08f8fbb37949" translate="yes" xml:space="preserve">
          <source>The frame name (object of the &lt;code&gt;target&lt;/code&gt; attribute). See the name attribute definition in HTML 4.0.</source>
          <target state="translated">框架名称（ &lt;code&gt;target&lt;/code&gt; 属性的对象）。请参阅HTML 4.0中的名称属性定义。</target>
        </trans-unit>
        <trans-unit id="c7f4264dce9f2570469b4b2805c4cd518e8c6b78" translate="yes" xml:space="preserve">
          <source>The frame's size can be changed.</source>
          <target state="translated">框架的大小可以改变。</target>
        </trans-unit>
        <trans-unit id="b045361cfaffd0cd8b7868eeb08d022948c4e3dd" translate="yes" xml:space="preserve">
          <source>The full detail message</source>
          <target state="translated">完整的细节信息</target>
        </trans-unit>
        <trans-unit id="6670ee785c7e540607d8084d9e96ec52d9cdb17d" translate="yes" xml:space="preserve">
          <source>The full help message for this diagnostic command (same output as the one produced by the 'help' command)</source>
          <target state="translated">该诊断命令的完整帮助信息(与'help'命令的输出相同)。</target>
        </trans-unit>
        <trans-unit id="6e6af340438b798b4af65334c20b15a8a6ab7f82" translate="yes" xml:space="preserve">
          <source>The full name of this binding.</source>
          <target state="translated">这个装订的全称。</target>
        </trans-unit>
        <trans-unit id="98e139129d3d144948d18b386c2a063173376f20" translate="yes" xml:space="preserve">
          <source>The full sequence of all iteration variable types, in clause order, will be notated as &lt;code&gt;(V...)&lt;/code&gt;. The values themselves will be &lt;code&gt;(v...)&lt;/code&gt;. When we speak of &quot;parameter lists&quot;, we will usually be referring to types, but in some contexts (describing execution) the lists will be of actual values.</source>
          <target state="translated">所有迭代变量类型的完整序列（按子句顺序）将标记为 &lt;code&gt;(V...)&lt;/code&gt; 。值本身将是 &lt;code&gt;(v...)&lt;/code&gt; 。当我们说&amp;ldquo;参数列表&amp;rdquo;时，通常是指类型，但是在某些情况下（描述执行），列表将是实际值。</target>
        </trans-unit>
        <trans-unit id="e2e8ad3cad9cd9a7c5ceff9a5d59565630dc6be2" translate="yes" xml:space="preserve">
          <source>The full set of mixer info objects that represent the mixers supported by this &lt;code&gt;MixerProvider&lt;/code&gt; may be obtained through the &lt;code&gt;getMixerInfo&lt;/code&gt; method.</source>
          <target state="translated">可以通过 &lt;code&gt;getMixerInfo&lt;/code&gt; 方法获得代表此 &lt;code&gt;MixerProvider&lt;/code&gt; 支持的混音器的混音器信息对象的完整集合。</target>
        </trans-unit>
        <trans-unit id="045b6c4a34c997a5ff03677d71a427fd8c213949" translate="yes" xml:space="preserve">
          <source>The full set of the mixer info objects that represent the mixers supported by this &lt;code&gt;MixerProvider&lt;/code&gt; may be obtained through the &lt;code&gt;getMixerInfo&lt;/code&gt; method. Use the &lt;code&gt;isMixerSupported&lt;/code&gt; method to test whether this &lt;code&gt;MixerProvider&lt;/code&gt; supports a particular mixer.</source>
          <target state="translated">可以通过 &lt;code&gt;getMixerInfo&lt;/code&gt; 方法获得代表此 &lt;code&gt;MixerProvider&lt;/code&gt; 支持的混音器的混音器信息对象的完整集合。使用 &lt;code&gt;isMixerSupported&lt;/code&gt; 方法测试此 &lt;code&gt;MixerProvider&lt;/code&gt; 是否支持特定的混合器。</target>
        </trans-unit>
        <trans-unit id="d7e276cca42226e1d7f83b0ce05c1d7eb79b5abb" translate="yes" xml:space="preserve">
          <source>The full type signature of the method, including return type.</source>
          <target state="translated">方法的完整类型签名,包括返回类型。</target>
        </trans-unit>
        <trans-unit id="ad817d15b58554f4b61df06c705ec9574cb8b3e5" translate="yes" xml:space="preserve">
          <source>The fully qualified class name of the module's main class</source>
          <target state="translated">模块主类的全称类名。</target>
        </trans-unit>
        <trans-unit id="48ad991d9dc4396060b69a71c3db1cc7e1ece97f" translate="yes" xml:space="preserve">
          <source>The fully qualified class name of the service type</source>
          <target state="translated">服务类型的全称类名</target>
        </trans-unit>
        <trans-unit id="75e634abd512af1008080e4c7a639343ae697365" translate="yes" xml:space="preserve">
          <source>The fully qualified directory name where the MBean should be persisted (if appropriate).</source>
          <target state="translated">MBean应持久化的完全限定目录名称(如果合适的话)。</target>
        </trans-unit>
        <trans-unit id="de074ad56ac8abd4797277639691ef7de662d175" translate="yes" xml:space="preserve">
          <source>The fully qualified name of a named package that is not a subpackage of a named package is its simple name. The fully qualified name of a named package that is a subpackage of another named package consists of the fully qualified name of the containing package, followed by &quot;&lt;code&gt;.&lt;/code&gt;&quot;, followed by the simple (member) name of the subpackage.</source>
          <target state="translated">不是命名包的子包的命名包的全限定名称是其简单名称。作为另一个已命名程序包的子程序包的已命名程序包的标准名称，由包含程序包的标准名称组成，后跟&amp;ldquo; &lt;code&gt;.&lt;/code&gt; &amp;rdquo;，然后是子程序包的简单（成员）名称。</target>
        </trans-unit>
        <trans-unit id="f08d6d7401fc9ae382da885fdc61f3b1d5cf0c2d" translate="yes" xml:space="preserve">
          <source>The fully-qualified name of this package as defined in section 6.5.3 of</source>
          <target state="translated">该包件的完全限定名称,如《公约》第6.5.3节所定义。</target>
        </trans-unit>
        <trans-unit id="322b80361dc210bb26cb16137caf000fff8d9ec3" translate="yes" xml:space="preserve">
          <source>The function &lt;code&gt;MethodHandles.lookup&lt;/code&gt; is caller sensitive so that there can be a secure foundation for lookups. Nearly all other methods in the JSR 292 API rely on lookup objects to check access requests.</source>
          <target state="translated">&lt;code&gt;MethodHandles.lookup&lt;/code&gt; 函数对调用者敏感，因此可以为查找提供安全的基础。JSR 292 API中几乎所有其他方法都依赖于查找对象来检查访问请求。</target>
        </trans-unit>
        <trans-unit id="e1b22103686230dfe40dc275e38134fd2ece6c00" translate="yes" xml:space="preserve">
          <source>The function or &lt;code&gt;null&lt;/code&gt; if no function named &lt;code&gt;functionName&lt;/code&gt; with &lt;code&gt;arity&lt;/code&gt; arguments exists.</source>
          <target state="translated">该函数；如果不存在带有 &lt;code&gt;arity&lt;/code&gt; 参数的名为 &lt;code&gt;functionName&lt;/code&gt; 的函数，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2e8bd4442f494c93af0ed558dac52300d861f27" translate="yes" xml:space="preserve">
          <source>The function's first argument allows the current &lt;code&gt;SSLEngine&lt;/code&gt; to be inspected, including the handshake session and configuration settings.</source>
          <target state="translated">该函数的第一个参数允许检查当前的 &lt;code&gt;SSLEngine&lt;/code&gt; ，包括握手会话和配置设置。</target>
        </trans-unit>
        <trans-unit id="7086d9d8c6a0eb4040856e463d1b8e6e73d6091a" translate="yes" xml:space="preserve">
          <source>The function's first argument allows the current &lt;code&gt;SSLSocket&lt;/code&gt; to be inspected, including the handshake session and configuration settings.</source>
          <target state="translated">该函数的第一个参数允许检查当前的 &lt;code&gt;SSLSocket&lt;/code&gt; ，包括握手会话和配置设置。</target>
        </trans-unit>
        <trans-unit id="21a650b8a755f38564eadb7914f668f808be338c" translate="yes" xml:space="preserve">
          <source>The function's result is an application protocol name, or null to indicate that none of the advertised names are acceptable. If the return value is an empty &lt;code&gt;String&lt;/code&gt; then application protocol indications will not be used. If the return value is null (no value chosen) or is a value that was not advertised by the peer, the underlying protocol will determine what action to take. (For example, ALPN will send a &quot;no_application_protocol&quot; alert and terminate the connection.)</source>
          <target state="translated">该函数的结果是一个应用程序协议名称，或者为null，表示所有公布的名称都不可接受。如果返回值为空 &lt;code&gt;String&lt;/code&gt; 则将不使用应用程序协议指示。如果返回值为null（未选择任何值）或对等方未发布的值，则基础协议将确定要采取的操作。（例如，ALPN将发送&amp;ldquo; no_application_protocol&amp;rdquo;警报并终止连接。）</target>
        </trans-unit>
        <trans-unit id="049e9803ce4c318a041efa39ffa0357125f7cb2e" translate="yes" xml:space="preserve">
          <source>The function's second argument lists the application protocol names advertised by the TLS peer.</source>
          <target state="translated">该函数的第二个参数列出了TLS对等体所宣传的应用协议名称。</target>
        </trans-unit>
        <trans-unit id="7b75d2f564388e2749324f7684de8741790d40b7" translate="yes" xml:space="preserve">
          <source>The functional interfaces in this package follow an extensible naming convention, as follows:</source>
          <target state="translated">本包中的功能接口遵循一个可扩展的命名惯例,如下所示。</target>
        </trans-unit>
        <trans-unit id="7f14c8b36482cb555ef9a0ced1041ea27c6b22e5" translate="yes" xml:space="preserve">
          <source>The functionality has been migrated into &lt;code&gt;ItemHandler&lt;/code&gt;.</source>
          <target state="translated">该功能已迁移到 &lt;code&gt;ItemHandler&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="ce5bd4822dc4a170ef833d344202fd62505c6b26" translate="yes" xml:space="preserve">
          <source>The functionality of this interface is duplicated by the &lt;a href=&quot;iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; interface. In addition, &lt;code&gt;Iterator&lt;/code&gt; adds an optional remove operation, and has shorter method names. New implementations should consider using &lt;code&gt;Iterator&lt;/code&gt; in preference to &lt;code&gt;Enumeration&lt;/code&gt;. It is possible to adapt an &lt;code&gt;Enumeration&lt;/code&gt; to an &lt;code&gt;Iterator&lt;/code&gt; by using the &lt;a href=&quot;#asIterator()&quot;&gt;&lt;code&gt;asIterator()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该接口的功能由&lt;a href=&quot;iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt;接口重复。此外， &lt;code&gt;Iterator&lt;/code&gt; 添加了可选的remove操作，并且具有较短的方法名称。新的实现应该考虑优先使用 &lt;code&gt;Iterator&lt;/code&gt; 而不是 &lt;code&gt;Enumeration&lt;/code&gt; 。可以使用&lt;a href=&quot;#asIterator()&quot;&gt; &lt;code&gt;asIterator()&lt;/code&gt; &lt;/a&gt;方法将 &lt;code&gt;Enumeration&lt;/code&gt; 改编为 &lt;code&gt;Iterator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd1adb1c6cdaf34899213972486b61cb86d4b763" translate="yes" xml:space="preserve">
          <source>The fundamental notion of the JMX API is the &lt;em&gt;MBean&lt;/em&gt;. An MBean is a named &lt;em&gt;managed object&lt;/em&gt; representing a resource. It has a &lt;em id=&quot;mgIface&quot;&gt;management interface&lt;/em&gt; which must be &lt;em&gt;public&lt;/em&gt; and consist of:</source>
          <target state="translated">JMX API的基本概念是&lt;em&gt;MBean&lt;/em&gt;。MBean是表示资源的命名&lt;em&gt;托管对象&lt;/em&gt;。它具有一个&lt;em id=&quot;mgIface&quot;&gt;管理接口&lt;/em&gt;，该&lt;em id=&quot;mgIface&quot;&gt;接口&lt;/em&gt;必须是&lt;em&gt;公共的，&lt;/em&gt;并且包括：</target>
        </trans-unit>
        <trans-unit id="affa9a95efd7c99562b168220dc0b3a62ddadab8" translate="yes" xml:space="preserve">
          <source>The fuser temperature is above normal.</source>
          <target state="translated">熔断器温度高于正常值。</target>
        </trans-unit>
        <trans-unit id="b432c989f957660cc61cab309227c58b52d723b4" translate="yes" xml:space="preserve">
          <source>The fuser temperature is below normal.</source>
          <target state="translated">熔断器温度低于正常值。</target>
        </trans-unit>
        <trans-unit id="ba25e2a915ceb047c917b9ea9787ccdd3cac6068" translate="yes" xml:space="preserve">
          <source>The gap between the text and the icon.</source>
          <target state="translated">文字和图标之间的间隙。</target>
        </trans-unit>
        <trans-unit id="d165af52d9801f2b9c6ca7bc842ffcb4a3efd77c" translate="yes" xml:space="preserve">
          <source>The general contract for the &lt;code&gt;Object.equals&lt;/code&gt; method states that equals must be symmetric (in other words, &lt;code&gt;a.equals(b)&lt;/code&gt; if and only if &lt;code&gt;b.equals(a)&lt;/code&gt;). The contracts for &lt;code&gt;List.equals&lt;/code&gt; and &lt;code&gt;Set.equals&lt;/code&gt; state that lists are only equal to other lists, and sets to other sets. Thus, a custom &lt;code&gt;equals&lt;/code&gt; method for a collection class that implements neither the &lt;code&gt;List&lt;/code&gt; nor &lt;code&gt;Set&lt;/code&gt; interface must return &lt;code&gt;false&lt;/code&gt; when this collection is compared to any list or set. (By the same logic, it is not possible to write a class that correctly implements both the &lt;code&gt;Set&lt;/code&gt; and &lt;code&gt;List&lt;/code&gt; interfaces.)</source>
          <target state="translated">&lt;code&gt;Object.equals&lt;/code&gt; 方法的一般协定规定，equals必须是对称的（换句话说，当且仅当 &lt;code&gt;b.equals(a)&lt;/code&gt; 时， &lt;code&gt;a.equals(b)&lt;/code&gt; ））。 &lt;code&gt;List.equals&lt;/code&gt; 和 &lt;code&gt;Set.equals&lt;/code&gt; 的合同规定，列表仅等于其他列表，并设置为其他集合。因此，当将此集合与任何列表或集合进行比较时，既不实现 &lt;code&gt;List&lt;/code&gt; 也不实现 &lt;code&gt;Set&lt;/code&gt; 接口的集合类的自定义 &lt;code&gt;equals&lt;/code&gt; 方法必须返回 &lt;code&gt;false&lt;/code&gt; 。 （通过相同的逻辑，不可能编写正确实现 &lt;code&gt;Set&lt;/code&gt; 和 &lt;code&gt;List&lt;/code&gt; 接口的类。）</target>
        </trans-unit>
        <trans-unit id="4e6457a04a192222364a3fdd43c4856716671752" translate="yes" xml:space="preserve">
          <source>The general contract is that if you need to change the size of the &lt;code&gt;Component&lt;/code&gt;, or location of the &lt;code&gt;Popup&lt;/code&gt;, you should obtain a new &lt;code&gt;Popup&lt;/code&gt;.</source>
          <target state="translated">一般的约定是，如果您需要更改 &lt;code&gt;Component&lt;/code&gt; 的大小或 &lt;code&gt;Popup&lt;/code&gt; 的位置，则应该获取一个新的 &lt;code&gt;Popup&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="98b1c621b589519528c36a122daf84c30e4edddf" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;finalize&lt;/code&gt; is that it is invoked if and when the Java virtual machine has determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, except as a result of an action taken by the finalization of some other object or class which is ready to be finalized. The &lt;code&gt;finalize&lt;/code&gt; method may take any action, including making this object available again to other threads; the usual purpose of &lt;code&gt;finalize&lt;/code&gt;, however, is to perform cleanup actions before the object is irrevocably discarded. For example, the finalize method for an object that represents an input/output connection might perform explicit I/O transactions to break the connection before the object is permanently discarded.</source>
          <target state="translated">&lt;code&gt;finalize&lt;/code&gt; 的一般约定是，当Java虚拟机确定不再有任何手段可以使尚未死亡的任何线程访问该对象时（除非由于采取了某种措施）而调用它。通过终结一些准备完成的对象或类。的 &lt;code&gt;finalize&lt;/code&gt; 方法可以采取任何行动，包括再制作该对象提供给其他线程;但是， &lt;code&gt;finalize&lt;/code&gt; 的通常目的是在清除对象之前将其清除。例如，代表输入/输出连接的对象的finalize方法可能会执行显式I / O事务，以在永久丢弃该对象之前中断连接。</target>
        </trans-unit>
        <trans-unit id="a5cdfce9e4b05d212da94fe95d771caea20d5dc9" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;finalize&lt;/code&gt; is that it is invoked if and when the Java&amp;trade; virtual machine has determined that there is no longer any means by which this object can be accessed by any thread that has not yet died, except as a result of an action taken by the finalization of some other object or class which is ready to be finalized. The &lt;code&gt;finalize&lt;/code&gt; method may take any action, including making this object available again to other threads; the usual purpose of &lt;code&gt;finalize&lt;/code&gt;, however, is to perform cleanup actions before the object is irrevocably discarded. For example, the finalize method for an object that represents an input/output connection might perform explicit I/O transactions to break the connection before the object is permanently discarded.</source>
          <target state="translated">&lt;code&gt;finalize&lt;/code&gt; 的一般约定是，当Java&amp;trade;虚拟机确定不再有任何手段可以使尚未死亡的任何线程可以访问该对象时（除非是由于操作而导致），调用finalize。由完成的其他一些对象或类的完成确定。的 &lt;code&gt;finalize&lt;/code&gt; 方法可以采取任何行动，包括再制作该对象提供给其他线程; 但是， &lt;code&gt;finalize&lt;/code&gt; 的通常目的是在清除对象之前将其清除。例如，代表输入/输出连接的对象的finalize方法可能会执行显式I / O事务，以在永久丢弃该对象之前中断连接。</target>
        </trans-unit>
        <trans-unit id="edb9c7d88cc1ce8aa97ce8fb3d5a87c01fd408d1" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;hashCode&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;hashCode&lt;/code&gt; 的一般约定为：</target>
        </trans-unit>
        <trans-unit id="0d0761a5d4d4cfe1bb133ae32ec4751724e2ff9b" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;mark&lt;/code&gt; is that, if the method &lt;code&gt;markSupported&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, the stream somehow remembers all the bytes read after the call to &lt;code&gt;mark&lt;/code&gt; and stands ready to supply those same bytes again if and whenever the method &lt;code&gt;reset&lt;/code&gt; is called. However, the stream is not required to remember any data at all if more than &lt;code&gt;readlimit&lt;/code&gt; bytes are read from the stream before &lt;code&gt;reset&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;mark&lt;/code&gt; 的一般约定是，如果方法 &lt;code&gt;markSupported&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; ，则流将以某种方式记住在调用 &lt;code&gt;mark&lt;/code&gt; 之后读取的所有字节，并且随时准备在每次调用方法 &lt;code&gt;reset&lt;/code&gt; 时再次提供相同的字节。但是，如果在调用 &lt;code&gt;reset&lt;/code&gt; 之前从流中读取了超过 &lt;code&gt;readlimit&lt;/code&gt; 个字节的数据，则该流根本不需要记住任何数据。</target>
        </trans-unit>
        <trans-unit id="78814a25bae5a1e5785d20a4fef6c1ed9141d5cb" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;next&lt;/code&gt; is that it returns an &lt;code&gt;int&lt;/code&gt; value and if the argument &lt;code&gt;bits&lt;/code&gt; is between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;32&lt;/code&gt; (inclusive), then that many low-order bits of the returned value will be (approximately) independently chosen bit values, each of which is (approximately) equally likely to be &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;. The method &lt;code&gt;next&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; by atomically updating the seed to</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 的一般约定是，它返回一个 &lt;code&gt;int&lt;/code&gt; 值，并且如果参数 &lt;code&gt;bits&lt;/code&gt; 在 &lt;code&gt;1&lt;/code&gt; 到 &lt;code&gt;32&lt;/code&gt; （含）之间，则返回值的许多低位将（大约）是独立选择的位值，每个位值（近似）相等地为 &lt;code&gt;0&lt;/code&gt; 或 &lt;code&gt;1&lt;/code&gt; 。 &lt;code&gt;next&lt;/code&gt; 的方法由 &lt;code&gt;Random&lt;/code&gt; 类通过将种子自动更新为</target>
        </trans-unit>
        <trans-unit id="3a2499a7d19b1785e56ca1842106c833aeadeaff" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;nextDouble&lt;/code&gt; is that one &lt;code&gt;double&lt;/code&gt; value, chosen (approximately) uniformly from the range &lt;code&gt;0.0d&lt;/code&gt; (inclusive) to &lt;code&gt;1.0d&lt;/code&gt; (exclusive), is pseudorandomly generated and returned.</source>
          <target state="translated">&lt;code&gt;nextDouble&lt;/code&gt; 的一般约定是，伪随机生成并返回一个从 &lt;code&gt;0.0d&lt;/code&gt; （含）到 &lt;code&gt;1.0d&lt;/code&gt; （不含）范围内（大约）均匀选择的一个 &lt;code&gt;double&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="33e5522f2cf381304bb4acc1f444b2ec6731ffff" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;nextFloat&lt;/code&gt; is that one &lt;code&gt;float&lt;/code&gt; value, chosen (approximately) uniformly from the range &lt;code&gt;0.0f&lt;/code&gt; (inclusive) to &lt;code&gt;1.0f&lt;/code&gt; (exclusive), is pseudorandomly generated and returned. All 2&lt;sup&gt;24&lt;/sup&gt; possible &lt;code&gt;float&lt;/code&gt; values of the form</source>
          <target state="translated">&lt;code&gt;nextFloat&lt;/code&gt; 的一般约定是伪随机生成并返回一个从 &lt;code&gt;0.0f&lt;/code&gt; （含）到 &lt;code&gt;1.0f&lt;/code&gt; （不含）范围内（均匀）选择的一个 &lt;code&gt;float&lt;/code&gt; 值。表格的所有2 &lt;sup&gt;24个&lt;/sup&gt;可能的 &lt;code&gt;float&lt;/code&gt; 值&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="a6108c9c3bb11e8358e1337d11fb7dd99c819fca" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;nextGaussian&lt;/code&gt; is that one &lt;code&gt;double&lt;/code&gt; value, chosen from (approximately) the usual normal distribution with mean &lt;code&gt;0.0&lt;/code&gt; and standard deviation &lt;code&gt;1.0&lt;/code&gt;, is pseudorandomly generated and returned.</source>
          <target state="translated">的常规协定 &lt;code&gt;nextGaussian&lt;/code&gt; 是一个 &lt;code&gt;double&lt;/code&gt; 值，从（大约）所选择的通常的正态分布，平均 &lt;code&gt;0.0&lt;/code&gt; 和标准偏差 &lt;code&gt;1.0&lt;/code&gt; ，伪随机地生成并返回。</target>
        </trans-unit>
        <trans-unit id="a39c42a97f8cc2bfa84444b9a77fa5e02fd465b3" translate="yes" xml:space="preserve">
          <source>The general contract of &lt;code&gt;reset&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;reset&lt;/code&gt; 的总合同为：</target>
        </trans-unit>
        <trans-unit id="b12c78c2fa8a5ae02abd10ed060377fad12b602d" translate="yes" xml:space="preserve">
          <source>The general contract of the method &lt;code&gt;run&lt;/code&gt; is that it may take any action whatsoever.</source>
          <target state="translated">方法 &lt;code&gt;run&lt;/code&gt; 的一般约定是，它可以采取任何措施。</target>
        </trans-unit>
        <trans-unit id="7b26618e1345d461e2aa57cbd21c3a074e197e40" translate="yes" xml:space="preserve">
          <source>The general format for specifying the</source>
          <target state="translated">指定的一般格式为</target>
        </trans-unit>
        <trans-unit id="85f63b8785c0e8ae0fb39a8cfe0e34a1ad8bb8fa" translate="yes" xml:space="preserve">
          <source>The generated name must be unique within active snippets.</source>
          <target state="translated">生成的名称必须在活动的snippets中是唯一的。</target>
        </trans-unit>
        <trans-unit id="e1c6603490c157d63530476a255326eaf6caa43f" translate="yes" xml:space="preserve">
          <source>The generated transport-specific address at which VM is listening for debugger connection.</source>
          <target state="translated">虚拟机监听调试器连接时生成的特定传输地址。</target>
        </trans-unit>
        <trans-unit id="836684afab62f49f45418668a259cd352042272e" translate="yes" xml:space="preserve">
          <source>The generator function takes an integer, which is the size of the desired array, and produces an array of the desired size. This can be concisely expressed with an array constructor reference:</source>
          <target state="translated">生成函数接收一个整数,也就是所需数组的大小,然后生成一个所需大小的数组。可以用一个数组构造函数引用来简洁地表达。</target>
        </trans-unit>
        <trans-unit id="ecfb13a04db6d698e4ce462e806bf72683c82f1e" translate="yes" xml:space="preserve">
          <source>The generator will be used for newly created Snippet instances. The identifying name (id) is accessed with &lt;a href=&quot;snippet#id()&quot;&gt;&lt;code&gt;Snippet.id()&lt;/code&gt;&lt;/a&gt; and can be seen in the &lt;code&gt;StackTraceElement.getFileName()&lt;/code&gt; for a &lt;a href=&quot;evalexception&quot;&gt;&lt;code&gt;EvalException&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;unresolvedreferenceexception&quot;&gt;&lt;code&gt;UnresolvedReferenceException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该生成器将用于新创建的Snippet实例。所述识别名称（ID）与访问&lt;a href=&quot;snippet#id()&quot;&gt; &lt;code&gt;Snippet.id()&lt;/code&gt; &lt;/a&gt;，并且可以在可见 &lt;code&gt;StackTraceElement.getFileName()&lt;/code&gt; 为一个&lt;a href=&quot;evalexception&quot;&gt; &lt;code&gt;EvalException&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;unresolvedreferenceexception&quot;&gt; &lt;code&gt;UnresolvedReferenceException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ebf0400e8d32a0c35c9ec1bb12805f77c31bed28" translate="yes" xml:space="preserve">
          <source>The generator will be used for newly created VarSnippet instances. The name of a variable is queried with &lt;a href=&quot;persistentsnippet#name()&quot;&gt;&lt;code&gt;PersistentSnippet.name()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该生成器将用于新创建的VarSnippet实例。使用&lt;a href=&quot;persistentsnippet#name()&quot;&gt; &lt;code&gt;PersistentSnippet.name()&lt;/code&gt; &lt;/a&gt;查询变量的名称。</target>
        </trans-unit>
        <trans-unit id="22988a82c700434c5bff9a5cb2087e4845138282" translate="yes" xml:space="preserve">
          <source>The generic &lt;code&gt;Exception&lt;/code&gt; class for the Scripting APIs.</source>
          <target state="translated">脚本API 的通用 &lt;code&gt;Exception&lt;/code&gt; 类。</target>
        </trans-unit>
        <trans-unit id="50eca365888aa60e1583460ae7dbd0f1387e5760" translate="yes" xml:space="preserve">
          <source>The generic &lt;code&gt;Exception&lt;/code&gt; class for the Scripting APIs. Checked exception types thrown by underlying scripting implementations must be wrapped in instances of &lt;code&gt;ScriptException&lt;/code&gt;. The class has members to store line and column numbers and filenames if this information is available.</source>
          <target state="translated">脚本API 的通用 &lt;code&gt;Exception&lt;/code&gt; 类。基础脚本实现抛出的已检查异常类型必须包装在 &lt;code&gt;ScriptException&lt;/code&gt; 实例中。如果有此信息，则该类具有存储行号，列号和文件名的成员。</target>
        </trans-unit>
        <trans-unit id="34d751203fcfaae4c2dcf23fd2c630ff3255ac97" translate="yes" xml:space="preserve">
          <source>The generics mechanism in the language provides compile-time (static) type checking, but it is possible to defeat this mechanism with unchecked casts. Usually this is not a problem, as the compiler issues warnings on all such unchecked operations. There are, however, times when static type checking alone is not sufficient. For example, suppose a collection is passed to a third-party library and it is imperative that the library code not corrupt the collection by inserting an element of the wrong type.</source>
          <target state="translated">语言中的generics机制提供了编译时(静态)类型检查,但是可以通过未检查的投胎来破坏这个机制。通常这不是一个问题,因为编译器会对所有这种未检查的操作发出警告。然而,有些时候,仅靠静态类型检查是不够的。例如,假设一个集合被传递给一个第三方库,而库代码必须保证不会因为插入一个错误类型的元素而破坏这个集合。</target>
        </trans-unit>
        <trans-unit id="9658cbf453cc4becc4cbe8333437594fe45f326f" translate="yes" xml:space="preserve">
          <source>The geometry of the path describing the outline of the &lt;code&gt;Area&lt;/code&gt; resembles the path from which it was constructed only in that it describes the same enclosed 2-dimensional area, but may use entirely different types and ordering of the path segments to do so.</source>
          <target state="translated">描述&amp;ldquo; &lt;code&gt;Area&lt;/code&gt; &amp;rdquo;轮廓的路径的几何形状与构造该区域的路径的相似之处仅在于，它描述了相同的封闭二维区域，但可以使用完全不同的类型和路径段的顺序来实现。</target>
        </trans-unit>
        <trans-unit id="f01b6abf45568cc54379123db1fec2168778ddd6" translate="yes" xml:space="preserve">
          <source>The gesture itself moves a logical cursor across the GUI hierarchy, intersecting the geometry of GUI Component(s), possibly resulting in the logical &quot;Drag&quot; cursor entering, crossing, and subsequently leaving &lt;code&gt;Component&lt;/code&gt;(s) and associated &lt;code&gt;DropTarget&lt;/code&gt;(s).</source>
          <target state="translated">手势本身会在GUI层次结构中移动逻辑光标，从而与GUI组件的几何形状相交，从而可能导致逻辑&amp;ldquo;拖动&amp;rdquo;光标进入，交叉并随后离开 &lt;code&gt;Component&lt;/code&gt; 和关联的 &lt;code&gt;DropTarget&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b84c57928a61b40849f4e1f7b954f80ed5345f78" translate="yes" xml:space="preserve">
          <source>The gesture of clicking on a button with the mouse is associated with one instance of &lt;code&gt;ActionEvent&lt;/code&gt;, which is sent out when the mouse is both pressed and released over the button. If an application is interested in knowing when the button has been pressed but not released, as a separate gesture, it can specialize &lt;code&gt;processMouseEvent&lt;/code&gt;, or it can register itself as a listener for mouse events by calling &lt;code&gt;addMouseListener&lt;/code&gt;. Both of these methods are defined by &lt;code&gt;Component&lt;/code&gt;, the abstract superclass of all components.</source>
          <target state="translated">用鼠标单击按钮的手势与 &lt;code&gt;ActionEvent&lt;/code&gt; 的一个实例相关联，该实例在按下鼠标并在按钮上释放时释放。如果应用程序希望以单独的手势来了解何时按下按钮但没有松开按钮，则它可以专门处理 &lt;code&gt;processMouseEvent&lt;/code&gt; ，或者可以通过调用 &lt;code&gt;addMouseListener&lt;/code&gt; 将其自身注册为鼠标事件的侦听器。这两个方法都由 &lt;code&gt;Component&lt;/code&gt; 定义，Component是所有组件的抽象超类。</target>
        </trans-unit>
        <trans-unit id="bd897795698de01db8d036abb2bef2cd803f0353" translate="yes" xml:space="preserve">
          <source>The getEncoding method will return the character encoding for this byte stream, or null if unknown.</source>
          <target state="translated">getEncoding方法将返回这个字节流的字符编码,如果未知则返回null。</target>
        </trans-unit>
        <trans-unit id="7b219cbe102fff1dda6092b063119870bd86478d" translate="yes" xml:space="preserve">
          <source>The getEncoding method will return the character encoding of the object pointed to, or null if unknown.</source>
          <target state="translated">getEncoding方法将返回指向对象的字符编码,如果未知则返回null。</target>
        </trans-unit>
        <trans-unit id="a5cbbe75fcc96cb9452f9a6c7c0c548318b820d6" translate="yes" xml:space="preserve">
          <source>The getKeyChar method always returns a valid Unicode character or CHAR_UNDEFINED. Character input is reported by KEY_TYPED events: KEY_PRESSED and KEY_RELEASED events are not necessarily associated with character input. Therefore, the result of the getKeyChar method is guaranteed to be meaningful only for KEY_TYPED events.</source>
          <target state="translated">getKeyChar方法总是返回一个有效的Unicode字符或CHAR_UNDEFINED。字符输入是由KEY_TYPED事件报告的,KEY_PRESSED和KEY_RELEASED事件不一定与字符输入有关。KEY_PRESSED和KEY_RELEASED事件不一定与字符输入有关。因此,保证getKeyChar方法的结果只对KEY_TYPED事件有意义。</target>
        </trans-unit>
        <trans-unit id="17607035e1067bccfbdc24ec6f6fef5ac0edd8c8" translate="yes" xml:space="preserve">
          <source>The getter methods all require the key as an argument and return the object if found. If the object is not found, the getter method throws a &lt;code&gt;MissingResourceException&lt;/code&gt;.</source>
          <target state="translated">getter方法都需要键作为参数，如果找到，则返回对象。如果未找到对象，则getter方法将引发 &lt;code&gt;MissingResourceException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f32be84888915ac3aac8f3a538a2b7e9bb3c96a3" translate="yes" xml:space="preserve">
          <source>The getter methods may &lt;a href=&quot;messager#printMessage(javax.tools.Diagnostic.Kind,java.lang.CharSequence)&quot;&gt;issue warnings&lt;/a&gt; about noteworthy conditions using the facilities available after the processor has been &lt;a href=&quot;#isInitialized()&quot;&gt;initialized&lt;/a&gt;.</source>
          <target state="translated">处理器&lt;a href=&quot;#isInitialized()&quot;&gt;初始化&lt;/a&gt;后，getter方法可能会使用可用的工具&lt;a href=&quot;messager#printMessage(javax.tools.Diagnostic.Kind,java.lang.CharSequence)&quot;&gt;发出&lt;/a&gt;有关值得注意情况的警告。</target>
        </trans-unit>
        <trans-unit id="f1838c464e5ae39d5db0e960e217af9f7c2dcff4" translate="yes" xml:space="preserve">
          <source>The getter methods may &lt;a href=&quot;messager#printMessage-javax.tools.Diagnostic.Kind-java.lang.CharSequence-&quot;&gt;issue warnings&lt;/a&gt; about noteworthy conditions using the facilities available after the processor has been &lt;a href=&quot;abstractprocessor#isInitialized--&quot;&gt;initialized&lt;/a&gt;.</source>
          <target state="translated">处理器&lt;a href=&quot;abstractprocessor#isInitialized--&quot;&gt;初始化&lt;/a&gt;后，getter方法可能会使用可用的工具&lt;a href=&quot;messager#printMessage-javax.tools.Diagnostic.Kind-java.lang.CharSequence-&quot;&gt;发出&lt;/a&gt;有关值得注意条件的警告。</target>
        </trans-unit>
        <trans-unit id="c8bbd09e2f9282fab1c5b17105f5168116e9943f" translate="yes" xml:space="preserve">
          <source>The getter names.</source>
          <target state="translated">得到者的名字。</target>
        </trans-unit>
        <trans-unit id="28b39e17a1484aedf1c82694acf5dc8fcf9dab78" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;contentLength&lt;/code&gt; is a positive number, that represents the exact amount of bytes the &lt;code&gt;publisher&lt;/code&gt; must publish.</source>
          <target state="translated">给定的 &lt;code&gt;contentLength&lt;/code&gt; 是一个正数，表示 &lt;code&gt;publisher&lt;/code&gt; 必须发布的确切字节数。</target>
        </trans-unit>
        <trans-unit id="e73a3a7a5d43775c4405ff5d0d8213179aa8eabb" translate="yes" xml:space="preserve">
          <source>The given &lt;code&gt;finisher&lt;/code&gt; function is applied after the given subscriber's &lt;code&gt;onComplete&lt;/code&gt; has been invoked. The &lt;code&gt;finisher&lt;/code&gt; function is invoked with the given subscriber, and returns a value that is set as the response's body.</source>
          <target state="translated">在调用给定订阅者的 &lt;code&gt;onComplete&lt;/code&gt; 之后，将应用给定的 &lt;code&gt;finisher&lt;/code&gt; 功能。该 &lt;code&gt;finisher&lt;/code&gt; 函数被调用与给定订户，并返回被设置为响应者身体的值。</target>
        </trans-unit>
        <trans-unit id="ee07db4a9afb88d70f978c9557d54a36e2844c3a" translate="yes" xml:space="preserve">
          <source>The given Graphics object will have the default font, color, etc of the parent container. The PropertyEditor may change graphics attributes such as font and color and doesn't need to restore the old values.</source>
          <target state="translated">给定的图形对象将拥有父容器的默认字体、颜色等。PropertyEditor可以改变图形属性,如字体和颜色,不需要恢复旧值。</target>
        </trans-unit>
        <trans-unit id="80e16f59801b09178472236065c0402723fad16a" translate="yes" xml:space="preserve">
          <source>The given Java object will be converted to the given targetSqlType before being sent to the database. If the object has a custom mapping (is of a class implementing the interface &lt;code&gt;SQLData&lt;/code&gt;), the JDBC driver should call the method &lt;code&gt;SQLData.writeSQL&lt;/code&gt; to write it to the SQL data stream. If, on the other hand, the object is of a class implementing &lt;code&gt;Ref&lt;/code&gt;, &lt;code&gt;Blob&lt;/code&gt;, &lt;code&gt;Clob&lt;/code&gt;, &lt;code&gt;NClob&lt;/code&gt;, &lt;code&gt;Struct&lt;/code&gt;, &lt;code&gt;java.net.URL&lt;/code&gt;, or &lt;code&gt;Array&lt;/code&gt;, the driver should pass it to the database as a value of the corresponding SQL type.</source>
          <target state="translated">给定的Java对象在发送到数据库之前将转换为给定的targetSqlType。如果对象具有自定义映射（属于实现接口 &lt;code&gt;SQLData&lt;/code&gt; 的类），则JDBC驱动程序应调用方法 &lt;code&gt;SQLData.writeSQL&lt;/code&gt; 将其写入SQL数据流。另一方面，如果对象是实现 &lt;code&gt;Ref&lt;/code&gt; ， &lt;code&gt;Blob&lt;/code&gt; ， &lt;code&gt;Clob&lt;/code&gt; ， &lt;code&gt;NClob&lt;/code&gt; ， &lt;code&gt;Struct&lt;/code&gt; ， &lt;code&gt;java.net.URL&lt;/code&gt; 或 &lt;code&gt;Array&lt;/code&gt; 的类，则驱动程序应将其作为相应SQL类型的值传递给数据库。</target>
        </trans-unit>
        <trans-unit id="b933b1be3a77c2cbdbf7badcb4530cf76f073f97" translate="yes" xml:space="preserve">
          <source>The given Java object will be converted to the targetSqlType before being sent to the database.</source>
          <target state="translated">给定的Java对象将在被发送到数据库之前被转换为targetSqlType。</target>
        </trans-unit>
        <trans-unit id="9d55dc02ae96e2b20706439dd2fe4ab5382f341e" translate="yes" xml:space="preserve">
          <source>The given address must not be the &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. The channel must be first bound using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; before invoking this method, otherwise &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; is thrown. If this method is invoked on a channel that does not have &lt;code&gt;address&lt;/code&gt; as one of its bound addresses or that has only one local address bound to it, then this method throws &lt;a href=&quot;illegalunbindexception&quot;&gt;&lt;code&gt;IllegalUnbindException&lt;/code&gt;&lt;/a&gt;. The initial address that the channel's socket is bound to using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; may be removed from the bound addresses for the channel's socket.</source>
          <target state="translated">给定的地址不能是&lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt;地址。在调用此方法之前，必须首先使用&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; 绑定&lt;/a&gt;通道，否则将引发&lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt;。如果在没有 &lt;code&gt;address&lt;/code&gt; 作为其绑定地址之一或仅绑定了一个本地地址的通道上调用此方法，则此方法将抛出&lt;a href=&quot;illegalunbindexception&quot;&gt; &lt;code&gt;IllegalUnbindException&lt;/code&gt; &lt;/a&gt;。可以将通道套接字使用&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;绑定到的初始地址从通道套接字的绑定地址中删除。</target>
        </trans-unit>
        <trans-unit id="beb626eaaa271322af407d7a7070c4e21eba7a43" translate="yes" xml:space="preserve">
          <source>The given address must not be the &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. The channel must be first bound using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; before invoking this method, otherwise &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; is thrown. If this method is invoked on a channel that does not have &lt;code&gt;address&lt;/code&gt; as one of its bound addresses, or that has only one local address bound to it, then this method throws &lt;a href=&quot;illegalunbindexception&quot;&gt;&lt;code&gt;IllegalUnbindException&lt;/code&gt;&lt;/a&gt;. The initial address that the channel's socket is bound to using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; may be removed from the bound addresses for the channel's socket.</source>
          <target state="translated">给定的地址不能是&lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt;地址。在调用此方法之前，必须首先使用&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; 绑定&lt;/a&gt;通道，否则将引发&lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt;。如果在没有 &lt;code&gt;address&lt;/code&gt; 作为其绑定地址之一的通道上调用此方法，或者在仅绑定了一个本地地址的通道上调用此方法，则此方法将抛出&lt;a href=&quot;illegalunbindexception&quot;&gt; &lt;code&gt;IllegalUnbindException&lt;/code&gt; &lt;/a&gt;。可以将通道套接字使用&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;绑定到的初始地址从通道套接字的绑定地址中删除。</target>
        </trans-unit>
        <trans-unit id="904ee745613b675f7a67c3fb5b8dd1c0c0662e2b" translate="yes" xml:space="preserve">
          <source>The given address must not be the &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. The channel must be first bound using &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; before invoking this method, otherwise &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; is thrown. The &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method takes a &lt;code&gt;SocketAddress&lt;/code&gt; as its argument which typically contains a port number as well as an address. Addresses subquently bound using this method are simply addresses as the SCTP port number remains the same for the lifetime of the channel.</source>
          <target state="translated">给定的地址不能是&lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt;地址。在调用此方法之前，必须首先使用&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; 绑定&lt;/a&gt;通道，否则将引发&lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt;。的&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;方法接受 &lt;code&gt;SocketAddress&lt;/code&gt; 作为其参数，其通常包含一个端口号以及一个地址。随后使用此方法绑定的地址就是简单的地址，因为SCTP端口号在通道的生存期内保持不变。</target>
        </trans-unit>
        <trans-unit id="802076c1d8b97f55257439f06e7588cd75dc231b" translate="yes" xml:space="preserve">
          <source>The given address must not be the &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. The channel must be first bound using &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; before invoking this method, otherwise &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">给定的地址不能是&lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt;地址。在调用此方法之前，必须首先使用&lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; 绑定&lt;/a&gt;通道，否则将引发&lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="618546e827dde7c4969d970e3871c3771695793e" translate="yes" xml:space="preserve">
          <source>The given address must not be the &lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt;&lt;code&gt;wildcard&lt;/code&gt;&lt;/a&gt; address. The channel must be first bound using &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; before invoking this method, otherwise &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; is thrown. The &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method takes a &lt;code&gt;SocketAddress&lt;/code&gt; as its argument which typically contains a port number as well as an address. Addresses subquently bound using this method are simply addresses as the SCTP port number remains the same for the lifetime of the channel.</source>
          <target state="translated">给定的地址不能是&lt;a href=&quot;../../../../../java.base/java/net/inetaddress#isAnyLocalAddress()&quot;&gt; &lt;code&gt;wildcard&lt;/code&gt; &lt;/a&gt;地址。在调用此方法之前，必须首先使用&lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; 绑定&lt;/a&gt;通道，否则将引发&lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt;。的&lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;方法接受 &lt;code&gt;SocketAddress&lt;/code&gt; 作为其参数，其通常包含一个端口号以及一个地址。随后使用此方法绑定的地址就是简单的地址，因为SCTP端口号在通道的生存期内保持不变。</target>
        </trans-unit>
        <trans-unit id="3e1ab895eb09cd51e4ae1b72466a1c4334ab8b83" translate="yes" xml:space="preserve">
          <source>The given array controls the reordering. Call &lt;code&gt;#I&lt;/code&gt; the number of incoming coordinates (the value &lt;code&gt;newCoordinates.size()&lt;/code&gt;, and call &lt;code&gt;#O&lt;/code&gt; the number of outgoing coordinates (the number of coordinates associated with the target var handle). Then the length of the reordering array must be &lt;code&gt;#O&lt;/code&gt;, and each element must be a non-negative number less than &lt;code&gt;#I&lt;/code&gt;. For every &lt;code&gt;N&lt;/code&gt; less than &lt;code&gt;#O&lt;/code&gt;, the &lt;code&gt;N&lt;/code&gt;-th outgoing coordinate will be taken from the &lt;code&gt;I&lt;/code&gt;-th incoming coordinate, where &lt;code&gt;I&lt;/code&gt; is &lt;code&gt;reorder[N]&lt;/code&gt;.</source>
          <target state="translated">给定的数组控制重新排序。调用 &lt;code&gt;#I&lt;/code&gt; 传入的坐标数（值为 &lt;code&gt;newCoordinates.size()&lt;/code&gt; ，并调用 &lt;code&gt;#O&lt;/code&gt; 调用传出坐标数（与目标var句柄关联的坐标数）。然后，重新排序数组的长度必须为 &lt;code&gt;#O&lt;/code&gt; ，并且每个元素必须是一个非负的数小于 &lt;code&gt;#I&lt;/code&gt; 。对于每一个 &lt;code&gt;N&lt;/code&gt; 小于 &lt;code&gt;#O&lt;/code&gt; ，所述 &lt;code&gt;N&lt;/code&gt; 个传出坐标将从采取 &lt;code&gt;I&lt;/code&gt; 第传入坐标，其中 &lt;code&gt;I&lt;/code&gt; 是 &lt;code&gt;reorder[N]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="183415761a8e6024f617fa5cc5c9cfc1f85baa21" translate="yes" xml:space="preserve">
          <source>The given array controls the reordering. Call &lt;code&gt;#I&lt;/code&gt; the number of incoming parameters (the value &lt;code&gt;newType.parameterCount()&lt;/code&gt;, and call &lt;code&gt;#O&lt;/code&gt; the number of outgoing parameters (the value &lt;code&gt;target.type().parameterCount()&lt;/code&gt;). Then the length of the reordering array must be &lt;code&gt;#O&lt;/code&gt;, and each element must be a non-negative number less than &lt;code&gt;#I&lt;/code&gt;. For every &lt;code&gt;N&lt;/code&gt; less than &lt;code&gt;#O&lt;/code&gt;, the &lt;code&gt;N&lt;/code&gt;-th outgoing argument will be taken from the &lt;code&gt;I&lt;/code&gt;-th incoming argument, where &lt;code&gt;I&lt;/code&gt; is &lt;code&gt;reorder[N]&lt;/code&gt;.</source>
          <target state="translated">给定的数组控制重新排序。调用 &lt;code&gt;#I&lt;/code&gt; 传入参数的数量（值为 &lt;code&gt;newType.parameterCount()&lt;/code&gt; ，并调用 &lt;code&gt;#O&lt;/code&gt; 传入参数的数量（值 &lt;code&gt;target.type().parameterCount()&lt;/code&gt; ），然后重新排序数组的长度必须为 &lt;code&gt;#O&lt;/code&gt; ，并且每个元素必须是一个非负的数小于 &lt;code&gt;#I&lt;/code&gt; 。对于每一个 &lt;code&gt;N&lt;/code&gt; 小于 &lt;code&gt;#O&lt;/code&gt; ，所述 &lt;code&gt;N&lt;/code&gt; 个传出参数将从采取 &lt;code&gt;I&lt;/code&gt; 第传入参数，其中， &lt;code&gt;I&lt;/code&gt; 是 &lt;code&gt;reorder[N]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fbb1845b2ea26cc16acea594e41d7dfdb60518bd" translate="yes" xml:space="preserve">
          <source>The given buffer's position will be advanced as deflate operations are performed, up to the buffer's limit. The input buffer may be modified (refilled) between deflate operations; doing so is equivalent to creating a new buffer and setting it with this method.</source>
          <target state="translated">当执行放气操作时,给定缓冲区的位置将被提前,直到缓冲区的极限。在放气操作之间,输入缓冲区可以被修改(重新填充);这样做相当于创建一个新的缓冲区,然后用本方法进行设置。</target>
        </trans-unit>
        <trans-unit id="f9a3f14ff7292335d29497383195cfdc28cdc10e" translate="yes" xml:space="preserve">
          <source>The given buffer's position will be advanced as inflate operations are performed, up to the buffer's limit. The input buffer may be modified (refilled) between inflate operations; doing so is equivalent to creating a new buffer and setting it with this method.</source>
          <target state="translated">当执行膨胀操作时,给定缓冲区的位置将被提前,直到缓冲区的极限。在两次膨胀操作之间,输入缓冲区可以被修改(重新填充);这样做相当于创建一个新的缓冲区,并通过本方法进行设置。</target>
        </trans-unit>
        <trans-unit id="e9bfe10768ac8ebf123eacbeb22fa9fcfb73e5ff" translate="yes" xml:space="preserve">
          <source>The given date is first converted into a &lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt;&lt;code&gt;GregorianCalendar&lt;/code&gt;&lt;/a&gt;, then the duration is added exactly like the &lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt;&lt;code&gt;addTo(Calendar)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">给定的日期首先转换为&lt;a href=&quot;../../../../java.base/java/util/gregoriancalendar&quot;&gt; &lt;code&gt;GregorianCalendar&lt;/code&gt; &lt;/a&gt;，然后完全像&lt;a href=&quot;#addTo(java.util.Calendar)&quot;&gt; &lt;code&gt;addTo(Calendar)&lt;/code&gt; &lt;/a&gt;方法一样添加持续时间。</target>
        </trans-unit>
        <trans-unit id="a2669fa211063f5b919eea48e61d97097faa78f5" translate="yes" xml:space="preserve">
          <source>The given file descriptor is a socket or resource that can be multiplexed by a &lt;a href=&quot;../../../java.base/java/nio/channels/selector&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt; for read and write readiness. Great care is required to coordinate direct use of the file descriptor with the use of the selectable channel. In particular, changing the blocking mode or closing the file descriptor without careful coordination will result in unspecified and unsafe side effects. The given &lt;a href=&quot;channels.selectablechannelcloser&quot;&gt;&lt;code&gt;SelectableChannelCloser&lt;/code&gt;&lt;/a&gt; is invoked to close the file descriptor and to coordinate the closing when the channel is registered with a &lt;code&gt;Selector&lt;/code&gt;.</source>
          <target state="translated">给定的文件描述符是一个套接字或资源，可以由&lt;a href=&quot;../../../java.base/java/nio/channels/selector&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt;多路复用以实现读写准备。需要非常小心地协调文件描述符的直接使用与可选通道的使用。特别是，在没有仔细协调的情况下更改阻止模式或关闭文件描述符将导致不确定的副作用。在使用 &lt;code&gt;Selector&lt;/code&gt; 注册通道时，将调用给定的&lt;a href=&quot;channels.selectablechannelcloser&quot;&gt; &lt;code&gt;SelectableChannelCloser&lt;/code&gt; &lt;/a&gt;来关闭文件描述符并协调关闭。</target>
        </trans-unit>
        <trans-unit id="703c48b1d2340b04df1d9cc4e78601063cf33268" translate="yes" xml:space="preserve">
          <source>The given group of events are all delivered as method calls on a single event listener interface, and an event listener object can be registered via a call on a registration method supplied by the event source.</source>
          <target state="translated">给定的一组事件都是以方法调用的方式在一个事件监听器接口上传递的,一个事件监听器对象可以通过调用事件源提供的注册方法进行注册。</target>
        </trans-unit>
        <trans-unit id="ffdfa6782f35f4a8c141a6192add2493234091aa" translate="yes" xml:space="preserve">
          <source>The given object is serialized, and its serialized contents are encrypted using the given Cipher, which must be fully initialized.</source>
          <target state="translated">给定的对象被序列化,其序列化的内容使用给定的Cipher进行加密,必须完全初始化。</target>
        </trans-unit>
        <trans-unit id="de74a14f86936f74a5695e46c440b16e67204567" translate="yes" xml:space="preserve">
          <source>The given path</source>
          <target state="translated">给定路径</target>
        </trans-unit>
        <trans-unit id="b968d9519c241838e51d4b5e19a88c965c3b01c5" translate="yes" xml:space="preserve">
          <source>The glass pane that overlays the menu bar and content pane, so it can intercept mouse movements and such.</source>
          <target state="translated">覆盖在菜单栏和内容窗格上的玻璃窗格,所以它可以拦截鼠标移动等。</target>
        </trans-unit>
        <trans-unit id="412d8e28acf0ec16e743068cdcad9991d5b8f647" translate="yes" xml:space="preserve">
          <source>The glassPane is always the first child of the rootPane and the rootPanes layout manager ensures that it's always as big as the rootPane.</source>
          <target state="translated">glassPane总是rootPane的第一个孩子,rootPanes布局管理器确保它总是和rootPane一样大。</target>
        </trans-unit>
        <trans-unit id="4f04c45ec6f21be9a6ef279ec08ebbf197fbfb99" translate="yes" xml:space="preserve">
          <source>The glassPane is always the first child of the rootPane and the rootPanes layout manager ensures that it's always as big as the rootPane. By default it's transparent and not visible. It can be used to temporarily grab all keyboard and mouse input by adding listeners and then making it visible. by default it's not visible.</source>
          <target state="translated">glassPane总是rootPane的第一个孩子,rootPanes布局管理器确保它总是和rootPane一样大。默认情况下,它是透明的,不可见的。它可以通过添加监听器来临时抓取所有的键盘和鼠标输入,然后使其可见,默认情况下它是不可见的。</target>
        </trans-unit>
        <trans-unit id="3e10fe916d4ec191f5b418cccb11905a2a6833b2" translate="yes" xml:space="preserve">
          <source>The glassPane may not be null.</source>
          <target state="translated">glassPane不可以为空。</target>
        </trans-unit>
        <trans-unit id="2d8a013ff12d3a4688960660289fa06921be7c57" translate="yes" xml:space="preserve">
          <source>The global LogManager object can be retrieved using LogManager.getLogManager(). The LogManager object is created during class initialization and cannot subsequently be changed.</source>
          <target state="translated">全局的LogManager对象可以使用LogManager.getLogManager()来检索。LogManager对象是在类初始化过程中创建的,随后无法更改。</target>
        </trans-unit>
        <trans-unit id="48c726674f74cb2aff8847caf7527cd3e0074a2a" translate="yes" xml:space="preserve">
          <source>The global logging properties may include:</source>
          <target state="translated">全局记录属性可包括:</target>
        </trans-unit>
        <trans-unit id="e07a1d0c0f4cd0a58eb556541bb0061d79fff226" translate="yes" xml:space="preserve">
          <source>The globalScope field.</source>
          <target state="translated">GlobalScope领域。</target>
        </trans-unit>
        <trans-unit id="614b07111296fa1da1685c16997f9ec374711d10" translate="yes" xml:space="preserve">
          <source>The globbing pattern is specified by the &lt;a href=&quot;filesystem#getPathMatcher(java.lang.String)&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getPathMatcher(java.lang.String)&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt;模式由getPathMatcher方法指定。</target>
        </trans-unit>
        <trans-unit id="11f1f51aa9771116b126b51dc32fcfd9d04831e3" translate="yes" xml:space="preserve">
          <source>The globbing pattern is specified by the &lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt;模式由getPathMatcher方法指定。</target>
        </trans-unit>
        <trans-unit id="8937687f2af88776c3e820a3f8d7c35d4bb55dfc" translate="yes" xml:space="preserve">
          <source>The granularity period value.</source>
          <target state="translated">粒度期值。</target>
        </trans-unit>
        <trans-unit id="88e6210bb5ce3e1e84b64575d362a93f604005d7" translate="yes" xml:space="preserve">
          <source>The granularity period.</source>
          <target state="translated">颗粒度期。</target>
        </trans-unit>
        <trans-unit id="3e7ff380b27ec8c38c90275d8ecac31281874ca9" translate="yes" xml:space="preserve">
          <source>The graphics pen hangs down and to the right from the path it traverses. This has the following implications:</source>
          <target state="translated">图形笔从它穿越的路径上垂下并向右移动。这有以下影响:</target>
        </trans-unit>
        <trans-unit id="723895853cbff24dde1cc72d06cadbb85beecc13" translate="yes" xml:space="preserve">
          <source>The green color component for the specified pixel, as an int.</source>
          <target state="translated">指定像素的绿色分量,为一个int。</target>
        </trans-unit>
        <trans-unit id="7c23969a8a14098cef3bce5066ad65abcb50383e" translate="yes" xml:space="preserve">
          <source>The grid bag layout manager calculates the weight of a column to be the maximum &lt;code&gt;weightx&lt;/code&gt; of all the components in a column. If the resulting layout is smaller horizontally than the area it needs to fill, the extra space is distributed to each column in proportion to its weight. A column that has a weight of zero receives no extra space.</source>
          <target state="translated">网格袋布局管理器将一列的重量计算为一列中所有组件的最大 &lt;code&gt;weightx&lt;/code&gt; 。如果生成的布局在水平方向上小于需要填充的区域，则多余的空间将按其重量成比例地分配给每列。权重为零的列不会收到多余的空间。</target>
        </trans-unit>
        <trans-unit id="8f43b14e04b0e22ba8891acef9690c7eec87a07a" translate="yes" xml:space="preserve">
          <source>The grid bag layout manager calculates the weight of a row to be the maximum &lt;code&gt;weighty&lt;/code&gt; of all the components in a row. If the resulting layout is smaller vertically than the area it needs to fill, the extra space is distributed to each row in proportion to its weight. A row that has a weight of zero receives no extra space.</source>
          <target state="translated">网格包布局管理器计算出行的权重是最大的 &lt;code&gt;weighty&lt;/code&gt; 行中的所有组件。如果生成的布局在垂直方向上小于其需要填充的区域，则多余的空间将按其重量成比例地分配给每一行。权重为零的行不会收到多余的空间。</target>
        </trans-unit>
        <trans-unit id="62963bc885a16c1c6378b24168b5de920f7d93ae" translate="yes" xml:space="preserve">
          <source>The grid layout manager determines the size of individual components by dividing the free space in the container into equal-sized portions according to the number of rows and columns in the layout. The container's free space equals the container's size minus any insets and any specified horizontal or vertical gap. All components in a grid layout are given the same size.</source>
          <target state="translated">网格布局管理器通过根据布局中的行和列的数量将容器中的自由空间划分为同等大小的部分来确定单个组件的大小。容器的自由空间等于容器的大小减去任何插页和任何指定的水平或垂直间隙。网格布局中的所有组件都被赋予相同的大小。</target>
        </trans-unit>
        <trans-unit id="a05f1c35a99276ca35fd8caa96c11ab7eac6e202" translate="yes" xml:space="preserve">
          <source>The group class specified by the &lt;code&gt;ActivationGroupDesc&lt;/code&gt; must be a concrete subclass of &lt;code&gt;ActivationGroup&lt;/code&gt; and have a public constructor that takes two arguments: the &lt;code&gt;ActivationGroupID&lt;/code&gt; for the group and the &lt;code&gt;MarshalledObject&lt;/code&gt; containing the group's initialization data (obtained from the &lt;code&gt;ActivationGroupDesc&lt;/code&gt;.</source>
          <target state="translated">由指定的组类 &lt;code&gt;ActivationGroupDesc&lt;/code&gt; 必须的具体子类 &lt;code&gt;ActivationGroup&lt;/code&gt; 并具有公共构造两个参数： &lt;code&gt;ActivationGroupID&lt;/code&gt; 方法为组和 &lt;code&gt;MarshalledObject&lt;/code&gt; 中含有组的初始化数据（从所获得 &lt;code&gt;ActivationGroupDesc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b8d143fbb62153c3ebf6cbe3c8f7181648a688c3" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(int,java.util.concurrent.ThreadFactory)&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(int,ThreadFactory)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围内默认&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(int,java.util.concurrent.ThreadFactory)&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(int,ThreadFactory)&lt;/code&gt; &lt;/a&gt;方法来创建该组。</target>
        </trans-unit>
        <trans-unit id="3ef4aa9627a0f046f2c95daeb5ba3437a2bd14bf" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int)&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object with an &lt;code&gt;
 initialSize&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">通过调用 &lt;code&gt; initialSize&lt;/code&gt; 为 &lt;code&gt;0&lt;/code&gt; 的系统范围的默认&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int)&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt; &lt;/a&gt;方法来创建该组。</target>
        </trans-unit>
        <trans-unit id="9469ed0e693a80454bdf5043689f5531bc9a80f6" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int)&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup(java.util.concurrent.ExecutorService,int)&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt; &lt;/a&gt;方法来创建该组。</target>
        </trans-unit>
        <trans-unit id="3420277017038a0f3a7a8735146a1a372f94b576" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-int-java.util.concurrent.ThreadFactory-&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(int,ThreadFactory)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-int-java.util.concurrent.ThreadFactory-&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(int,ThreadFactory)&lt;/code&gt; &lt;/a&gt;方法来创建该组。</target>
        </trans-unit>
        <trans-unit id="cb720d2e33987d2cf50e3dfc5d3cb6091f00a40a" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-java.util.concurrent.ExecutorService-int-&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object with an &lt;code&gt;initialSize&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">通过调用 &lt;code&gt;initialSize&lt;/code&gt; 为 &lt;code&gt;0&lt;/code&gt; 的系统范围默认&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-java.util.concurrent.ExecutorService-int-&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt; &lt;/a&gt;方法来创建组。</target>
        </trans-unit>
        <trans-unit id="667fea1471914e720a235f53da83ac53eff12116" translate="yes" xml:space="preserve">
          <source>The group is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-java.util.concurrent.ExecutorService-int-&quot;&gt;&lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousChannelGroup-java.util.concurrent.ExecutorService-int-&quot;&gt; &lt;code&gt;openAsynchronousChannelGroup(ExecutorService,int)&lt;/code&gt; &lt;/a&gt;方法来创建该组。</target>
        </trans-unit>
        <trans-unit id="6e2250b894087a5132f38c73310c0171daccc227" translate="yes" xml:space="preserve">
          <source>The group's &lt;code&gt;activeObject&lt;/code&gt; method is called when an object is exported (either by &lt;code&gt;Activatable&lt;/code&gt; object construction or an explicit call to &lt;code&gt;Activatable.exportObject&lt;/code&gt;.</source>
          <target state="translated">导出对象时（通过 &lt;code&gt;Activatable&lt;/code&gt; 对象构造或对 &lt;code&gt;Activatable.exportObject&lt;/code&gt; 的显式调用），将调用组的 &lt;code&gt;activeObject&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="d6c08c796fba887f0b99267de419a44fc4004d94" translate="yes" xml:space="preserve">
          <source>The group's &lt;code&gt;activeObject&lt;/code&gt; method is called when an object is exported (either by &lt;code&gt;Activatable&lt;/code&gt; object construction or an explicit call to &lt;code&gt;Activatable.exportObject&lt;/code&gt;. The group must inform its &lt;code&gt;ActivationMonitor&lt;/code&gt; that the object is active (via the monitor's &lt;code&gt;activeObject&lt;/code&gt; method) if the group hasn't already done so.</source>
          <target state="translated">该集团 &lt;code&gt;activeObject&lt;/code&gt; 当一个对象被导出时（通过方法调用 &lt;code&gt;Activatable&lt;/code&gt; 对象的构造或者通过显式调用 &lt;code&gt;Activatable.exportObject&lt;/code&gt; 该组必须通知其 &lt;code&gt;ActivationMonitor&lt;/code&gt; 对象是活动的（通过监视器的 &lt;code&gt;activeObject&lt;/code&gt; 如果该组还没有方法）已经这样做了。</target>
        </trans-unit>
        <trans-unit id="d73a5b7197d40972e24fd4eed83fd8cd74b216ed" translate="yes" xml:space="preserve">
          <source>The group's &lt;code&gt;inactiveObject&lt;/code&gt; method is called indirectly via a call to the &lt;code&gt;Activatable.inactive&lt;/code&gt; method.</source>
          <target state="translated">通过调用 &lt;code&gt;Activatable.inactive&lt;/code&gt; 方法间接调用该组的 &lt;code&gt;inactiveObject&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="6c2f105092e0c22983019ddce538cb9fe51ed770" translate="yes" xml:space="preserve">
          <source>The group's &lt;code&gt;inactiveObject&lt;/code&gt; method is called indirectly via a call to the &lt;code&gt;Activatable.inactive&lt;/code&gt; method. A remote object implementation must call &lt;code&gt;Activatable&lt;/code&gt;'s &lt;code&gt;inactive&lt;/code&gt; method when that object deactivates (the object deems that it is no longer active). If the object does not call &lt;code&gt;Activatable.inactive&lt;/code&gt; when it deactivates, the object will never be garbage collected since the group keeps strong references to the objects it creates.</source>
          <target state="translated">通过调用 &lt;code&gt;Activatable.inactive&lt;/code&gt; 方法间接调用该组的 &lt;code&gt;inactiveObject&lt;/code&gt; 方法。远程对象实现 &lt;code&gt;inactive&lt;/code&gt; ，该对象必须调用 &lt;code&gt;Activatable&lt;/code&gt; 的inactive方法（该对象认为该对象不再处于活动状态）。如果该对象在停用时未调用 &lt;code&gt;Activatable.inactive&lt;/code&gt; ，则该对象将永远不会被垃圾回收，因为该组会保留对其创建的对象的强引用。</target>
        </trans-unit>
        <trans-unit id="124ca13d7a74c7c5f766edfca03e78ec4af2f050" translate="yes" xml:space="preserve">
          <source>The group's &lt;code&gt;inactiveObject&lt;/code&gt; method unexports the remote object from the RMI runtime so that the object can no longer receive incoming RMI calls. An object will only be unexported if the object has no pending or executing calls. The subclass of &lt;code&gt;ActivationGroup&lt;/code&gt; must override this method and unexport the object.</source>
          <target state="translated">该组的 &lt;code&gt;inactiveObject&lt;/code&gt; 方法从RMI运行时取消导出远程对象，以便该对象不再能够接收传入的RMI调用。仅当对象没有挂起或正在执行的调用时，该对象才会被取消导出。 &lt;code&gt;ActivationGroup&lt;/code&gt; 的子类必须重写此方法并取消导出对象。</target>
        </trans-unit>
        <trans-unit id="57f544dce5daf7bc7ce9da00546c7d127d8ac783" translate="yes" xml:space="preserve">
          <source>The group's class must be a concrete subclass of &lt;code&gt;ActivationGroup&lt;/code&gt;. A subclass of &lt;code&gt;ActivationGroup&lt;/code&gt; is created/recreated via the &lt;code&gt;ActivationGroup.createGroup&lt;/code&gt; static method that invokes a special constructor that takes two arguments:</source>
          <target state="translated">该组的类必须是 &lt;code&gt;ActivationGroup&lt;/code&gt; 的具体子类。 &lt;code&gt;ActivationGroup&lt;/code&gt; 的子类是通过 &lt;code&gt;ActivationGroup.createGroup&lt;/code&gt; 静态方法创建/重新创建的，该方法调用一个带有两个参数的特殊构造函数：</target>
        </trans-unit>
        <trans-unit id="ac647a1b50a49dce6768605287c17212490f6461" translate="yes" xml:space="preserve">
          <source>The grouping separator is commonly used for thousands, but in some countries it separates ten-thousands. The grouping size is a constant number of digits between the grouping characters, such as 3 for 100,000,000 or 4 for 1,0000,0000. If you supply a pattern with multiple grouping characters, the interval between the last one and the end of the integer is the one that is used. So &lt;code&gt;&quot;#,##,###,####&quot;&lt;/code&gt; == &lt;code&gt;&quot;######,####&quot;&lt;/code&gt; == &lt;code&gt;&quot;##,####,####&quot;&lt;/code&gt;.</source>
          <target state="translated">分组分隔符通常用于数千个分隔符，但在某些国家/地区，它会分隔一万个。分组大小是分组字符之间的固定位数，例如100,000,000为3或1,0000,0000为4。如果提供的模式包含多个分组字符，则最后一个字符与整数结尾之间的间隔就是所使用的间隔。所以 &lt;code&gt;&quot;#,##,###,####&quot;&lt;/code&gt; == &lt;code&gt;&quot;######,####&quot;&lt;/code&gt; == &lt;code&gt;&quot;##,####,####&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e203381ec812362ab8d65d07cf7bfbb629c7170" translate="yes" xml:space="preserve">
          <source>The hand cursor type.</source>
          <target state="translated">手游标型。</target>
        </trans-unit>
        <trans-unit id="2e399af2306df289e2ac126c697d6fbbe53bf6db" translate="yes" xml:space="preserve">
          <source>The handler can be used to display signing progress. The first argument of the handler can be &quot;adding&quot;, &quot;signing&quot;, or &quot;updating&quot;, and the second argument is the name of the &lt;a href=&quot;../../../../java.base/java/util/jar/jarentry&quot;&gt;&lt;code&gt;JarEntry&lt;/code&gt;&lt;/a&gt; being processed.</source>
          <target state="translated">该处理程序可用于显示签名进度。处理程序的第一个参数可以是&amp;ldquo;添加&amp;rdquo;，&amp;ldquo;签名&amp;rdquo;或&amp;ldquo;更新&amp;rdquo;，第二个参数是要处理的&lt;a href=&quot;../../../../java.base/java/util/jar/jarentry&quot;&gt; &lt;code&gt;JarEntry&lt;/code&gt; &lt;/a&gt;的名称。</target>
        </trans-unit>
        <trans-unit id="89402ca5ad0597f8dbdad36841cfa4d2b81a828f" translate="yes" xml:space="preserve">
          <source>The handler result</source>
          <target state="translated">处理结果</target>
        </trans-unit>
        <trans-unit id="9e390f031711c2f4bfa840a906c0f567e1f9980d" translate="yes" xml:space="preserve">
          <source>The handler to fire &lt;code&gt;PropertyChange&lt;/code&gt; when children are added or removed</source>
          <target state="translated">添加或删除子级时触发 &lt;code&gt;PropertyChange&lt;/code&gt; 的处理程序</target>
        </trans-unit>
        <trans-unit id="6ceafe9eefbcc97f4f7bb8454227163eadbde95e" translate="yes" xml:space="preserve">
          <source>The handlers need to be registered differently than core SAX2 handlers.</source>
          <target state="translated">处理程序的注册方式需要与核心SAX2处理程序不同。</target>
        </trans-unit>
        <trans-unit id="1c2a58b3d6792b3317ea94e3204b0c17ef5386eb" translate="yes" xml:space="preserve">
          <source>The hardware's minimum margins is not just a property of the printer, but may be a function of the media size, orientation, media type, and any specified finishings. &lt;code&gt;PrintService&lt;/code&gt; provides the method to query the supported values of an attribute in a suitable context : See &lt;a href=&quot;../../printservice#getSupportedAttributeValues(java.lang.Class,javax.print.DocFlavor,javax.print.attribute.AttributeSet)&quot;&gt;&lt;code&gt;PrintService.getSupportedAttributeValues()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">硬件的最小边距不仅是打印机的属性，而且还可能是介质尺寸，方向，介质类型和任何指定饰面的函数。 &lt;code&gt;PrintService&lt;/code&gt; 提供了在合适的上下文中查询属性的支持值的方法：请参见&lt;a href=&quot;../../printservice#getSupportedAttributeValues(java.lang.Class,javax.print.DocFlavor,javax.print.attribute.AttributeSet)&quot;&gt; &lt;code&gt;PrintService.getSupportedAttributeValues()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3f7c4e20300c4bd0cb6b80a481daa7faae00611" translate="yes" xml:space="preserve">
          <source>The hardware's minimum margins is not just a property of the printer, but may be a function of the media size, orientation, media type, and any specified finishings. &lt;code&gt;PrintService&lt;/code&gt; provides the method to query the supported values of an attribute in a suitable context : See &lt;a href=&quot;../../printservice#getSupportedAttributeValues-java.lang.Class-javax.print.DocFlavor-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;PrintService.getSupportedAttributeValues()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">硬件的最小边距不仅是打印机的属性，而且还可能是介质尺寸，方向，介质类型和任何指定饰面的函数。 &lt;code&gt;PrintService&lt;/code&gt; 提供了在合适的上下文中查询属性的支持值的方法：请参阅&lt;a href=&quot;../../printservice#getSupportedAttributeValues-java.lang.Class-javax.print.DocFlavor-javax.print.attribute.AttributeSet-&quot;&gt; &lt;code&gt;PrintService.getSupportedAttributeValues()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3593586b61594b848850102afa86c46baa3924d" translate="yes" xml:space="preserve">
          <source>The hash code for all Key objects will be the same as the system identity code of the object as defined by the System.identityHashCode() method.</source>
          <target state="translated">所有Key对象的哈希码将与System.identityHashCode()方法定义的对象的系统身份码相同。</target>
        </trans-unit>
        <trans-unit id="b9538c39f3494d1f790686c158fa3908b95b519b" translate="yes" xml:space="preserve">
          <source>The hash code is based upon all the URL components relevant for URL comparison. As such, this operation is a blocking operation.</source>
          <target state="translated">哈希码是基于与URL比较相关的所有URL组件。因此,这个操作是一个阻塞操作。</target>
        </trans-unit>
        <trans-unit id="a5c2024fe4050877867d89922aa9b09bc82dfb20" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the HTTP request's URI, method, and header components, and satisfies the general contract of the &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于HTTP请求的URI，方法和标头组件，并满足&lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="e3f3e47f47400fca462141e06519982515ce787c" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the HTTP headers &lt;a href=&quot;#map()&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt;, and satisfies the general contract of the &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于HTTP标头&lt;a href=&quot;#map()&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;的组件，并且满足&lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="c81905bd6ef34df1f977640dbc61ad6cbd9b17f8" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the module descriptor, and satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于模块描述符的组件，并且满足&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="9c7a51541cedfde643d056814ad4ce3abbbb0eaa" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the path, and satisfies the general contract of the &lt;a href=&quot;../../lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于路径的组成部分，并满足&lt;a href=&quot;../../lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="c70cace9970285dcf9cdf6965c3562c7040cae45" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the path, and satisfies the general contract of the &lt;a href=&quot;../../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于路径的组成部分，并满足&lt;a href=&quot;../../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="c4ec5d189ec2537f7c907fffdd7ad0083085f874" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the resolved module and satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于已解析模块的组件，并且满足&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="fa2977c7551c3b7d38be1c6d1be86b0cbd62c47e" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the components of the version and satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于版本的组件，并且满足&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="61140f4c5245ba4be6ecd12e21b340b8892094f7" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the modifiers, the package name, and for a qualified &lt;code&gt;Opens&lt;/code&gt;, the set of modules names to which the package is opened. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于修饰符，程序包名称，对于合格的 &lt;code&gt;Opens&lt;/code&gt; ，程序包将以其打开的模块名称集。它满足&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="5e44998c3ec183e48a635b08c7350554dddf8c6e" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the modifiers, the package name, and for a qualified export, the set of modules names to which the package is exported. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于修饰符，程序包名称，对于合格的导出，将程序包导出到的模块名称集。它满足&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="6349242e9ab13a1bb0fff5815b5cb8074fa442f7" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the modifiers, the package name, and for a qualified opens, the set of modules names to which the package is opened. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于修饰符，程序包名称，对于合格的打开，将打开程序包的模块名称集。它满足&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="ca41094bb8dc7dca77e1e03bc7515b00e704557c" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the module name, modifiers, and the module version if recorded at compile time. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果在编译时记录，则哈希码基于模块名称，修饰符和模块版本。它满足&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="9852bb81d4ee7252a48ab651f1d8b4ad3b8ad54c" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the service type and the set of providers. It satisfies the general contract of the &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于服务类型和提供者集。它满足&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="77caf5a9c1f81f08c3bdcb2c937a75e2a0ca688a" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the value represented, and satisfies the general contract of the &lt;a href=&quot;../../../lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于所表示的值，并且满足&lt;a href=&quot;../../../lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="c527b264eac325d09725ecb4874d7a3ee1aba8e2" translate="yes" xml:space="preserve">
          <source>The hash code is based upon the value represented, and satisfies the general contract of the &lt;a href=&quot;../../../lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">哈希码基于所表示的值，并且满足&lt;a href=&quot;../../../lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;方法的常规协定。</target>
        </trans-unit>
        <trans-unit id="3b1c8cc2dac12696b4358157a1e4151ba43bfe5e" translate="yes" xml:space="preserve">
          <source>The hash code is calculated using both the Namespace URI and the local part of the &lt;code&gt;QName&lt;/code&gt;. The prefix is &lt;strong&gt;&lt;em&gt;NOT&lt;/em&gt;&lt;/strong&gt; used to calculate the hash code.</source>
          <target state="translated">使用名称空间URI和 &lt;code&gt;QName&lt;/code&gt; 的本地部分来计算哈希码。前缀&lt;strong&gt;&lt;em&gt;不&lt;/em&gt;&lt;/strong&gt;用于计算哈希码。</target>
        </trans-unit>
        <trans-unit id="6aaf165addd90a50c9183a3d2875d6a72cb1ef7a" translate="yes" xml:space="preserve">
          <source>The hash code is calculated via: &lt;code&gt;getName(X500Principal.CANONICAL).hashCode()&lt;/code&gt;</source>
          <target state="translated">哈希码是通过以下 &lt;code&gt;getName(X500Principal.CANONICAL).hashCode()&lt;/code&gt; 计算的：getName（X500Principal.CANONICAL）.hashCode（）</target>
        </trans-unit>
        <trans-unit id="0ba358f7e4c5629a504cdd4a1c1f292ba74a0a9d" translate="yes" xml:space="preserve">
          <source>The hash code is computed by adding the hash code of the attribute's id and that of all of its values except for values that are arrays. For an array, the hash code of each element of the array is summed. If a subclass overrides &lt;code&gt;hashCode()&lt;/code&gt;, it should override &lt;code&gt;equals()&lt;/code&gt; as well so that two attributes that are equal have the same hash code.</source>
          <target state="translated">哈希码是通过将属性ID的哈希码及其所有值（除数组值以外）的哈希码相加而计算得出的。对于数组，将数组每个元素的哈希码相加。如果子类重写 &lt;code&gt;hashCode()&lt;/code&gt; ，那么它也应该重写 &lt;code&gt;equals()&lt;/code&gt; ，以便两个相等的属性具有相同的哈希码。</target>
        </trans-unit>
        <trans-unit id="280b797559d043d8daa32c7b2b5ee41ca3702e4d" translate="yes" xml:space="preserve">
          <source>The hash code is computed by adding the hash code of the attributes of this object. If this BasicAttributes ignores case of its attribute IDs, one is added to the hash code. If a subclass overrides &lt;code&gt;hashCode()&lt;/code&gt;, it should override &lt;code&gt;equals()&lt;/code&gt; as well so that two &lt;code&gt;Attributes&lt;/code&gt; instances that are equal have the same hash code.</source>
          <target state="translated">通过添加该对象属性的哈希码来计算哈希码。如果此BasicAttributes忽略其属性ID的大小写，则将其添加到哈希码中。如果子类重写 &lt;code&gt;hashCode()&lt;/code&gt; ，那么它也应该重写 &lt;code&gt;equals()&lt;/code&gt; ，以便两个相等的 &lt;code&gt;Attributes&lt;/code&gt; 实例具有相同的哈希码。</target>
        </trans-unit>
        <trans-unit id="bbaead227f6f55e6d05891b8aa6b6409429186cb" translate="yes" xml:space="preserve">
          <source>The hash code is defined to be the result of the following calculation:</source>
          <target state="translated">哈希码被定义为以下计算的结果。</target>
        </trans-unit>
        <trans-unit id="bbd08498997ed584941a561e6db8ab3f78bf82c2" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;CompositeData&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its</source>
          <target state="translated">一个的哈希码 &lt;code&gt;CompositeData&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：其</target>
        </trans-unit>
        <trans-unit id="d55d18b3e39ef2ab73da42191dee5a25b8360e6e" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;CompositeDataSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its</source>
          <target state="translated">一个的哈希码 &lt;code&gt;CompositeDataSupport&lt;/code&gt; 实例是在使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：其</target>
        </trans-unit>
        <trans-unit id="36175eae8ecdd8a6b3c7d59f2ed00a2a5791d061" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;CompositeType&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: name, items names, items types). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个的哈希码 &lt;code&gt;CompositeType&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：名称，项目名称，项目类型）。这确保了 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 隐含了针对任意两个 &lt;code&gt;CompositeType&lt;/code&gt; 实例 &lt;code&gt;t1&lt;/code&gt; 和 &lt;code&gt;t2&lt;/code&gt; 的 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; ，这是方法&lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;的常规协定所要求的。</target>
        </trans-unit>
        <trans-unit id="23d71a4647e5d7c762e18b1c5f72a5feccc76928" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;CompositeType&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: name, items names, items types). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;CompositeType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个的哈希码 &lt;code&gt;CompositeType&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：名称，项目名称，项目类型）。这确保了 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 隐含了针对任意两个 &lt;code&gt;CompositeType&lt;/code&gt; 实例 &lt;code&gt;t1&lt;/code&gt; 和 &lt;code&gt;t2&lt;/code&gt; 的 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; ，这是方法&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;的常规协定所要求的。</target>
        </trans-unit>
        <trans-unit id="d318826cde719be40f380791a8f546b82ed80cd5" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;TabularData&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its</source>
          <target state="translated">一个的哈希码 &lt;code&gt;TabularData&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：其</target>
        </trans-unit>
        <trans-unit id="7be5b5cc6924ee6b06115e4c236b4aa63d3a3653" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;TabularDataSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its</source>
          <target state="translated">一个的哈希码 &lt;code&gt;TabularDataSupport&lt;/code&gt; 实例是在使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：其</target>
        </trans-unit>
        <trans-unit id="94f2e24e0d4aa6700c323efa861df2a2f7da5988" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;TabularType&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: name, row type, index names). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;TabularType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个的哈希码 &lt;code&gt;TabularType&lt;/code&gt; 实例是在使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：姓名，行类型，索引名）。这确保了 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 隐含了对于任意两个 &lt;code&gt;TabularType&lt;/code&gt; 实例 &lt;code&gt;t1&lt;/code&gt; 和 &lt;code&gt;t2&lt;/code&gt; 实例 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; ，这是方法&lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;的常规协定所要求的。</target>
        </trans-unit>
        <trans-unit id="247a077ccfc174f8e6662782ad271b4b18c19d87" translate="yes" xml:space="preserve">
          <source>The hash code of a &lt;code&gt;TabularType&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: name, row type, index names). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;TabularType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个的哈希码 &lt;code&gt;TabularType&lt;/code&gt; 实例是在使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：姓名，行类型，索引名）。这可以确保 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 暗示针对任何两个 &lt;code&gt;TabularType&lt;/code&gt; 实例 &lt;code&gt;t1&lt;/code&gt; 和 &lt;code&gt;t2&lt;/code&gt; 的 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; ，这是方法&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;的常规协定所要求的。</target>
        </trans-unit>
        <trans-unit id="870f42492879e018456513ed48f2e9081dd2adc9" translate="yes" xml:space="preserve">
          <source>The hash code of a byte buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">字节缓冲区的哈希码仅取决于其剩余元素；也就是说，在从 &lt;code&gt;position()&lt;/code&gt; 到并包括 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; 的元素上。</target>
        </trans-unit>
        <trans-unit id="ae060928fbf5519b2c2adaf53bf19772feaa56c3" translate="yes" xml:space="preserve">
          <source>The hash code of a char buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">char缓冲区的哈希码仅取决于其剩余元素；也就是说，在从 &lt;code&gt;position()&lt;/code&gt; 到并包括 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; 的元素上。</target>
        </trans-unit>
        <trans-unit id="e856bea9bb9b618831e36d6cb05e907153d7b262" translate="yes" xml:space="preserve">
          <source>The hash code of a double buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">双缓冲区的哈希码仅取决于其其余元素。也就是说，在从 &lt;code&gt;position()&lt;/code&gt; 到并包括 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; 的元素上。</target>
        </trans-unit>
        <trans-unit id="77547da71388901473497d1b6c4f94fc525f313f" translate="yes" xml:space="preserve">
          <source>The hash code of a float buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">浮点缓冲区的哈希码仅取决于其其余元素。也就是说，在从 &lt;code&gt;position()&lt;/code&gt; 到并包括 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; 的元素上。</target>
        </trans-unit>
        <trans-unit id="7daacfd0664bde6221147f25fc4590d2f02384b5" translate="yes" xml:space="preserve">
          <source>The hash code of a int buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">int缓冲区的哈希码仅取决于其剩余元素；也就是说，在从 &lt;code&gt;position()&lt;/code&gt; 到并包括 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; 的元素上。</target>
        </trans-unit>
        <trans-unit id="448d49d6ad775b6519c9d1b6671194f14b98ec77" translate="yes" xml:space="preserve">
          <source>The hash code of a long buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">长缓冲区的哈希码仅取决于其其余元素。也就是说，在从 &lt;code&gt;position()&lt;/code&gt; 到并包括 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; 的元素上。</target>
        </trans-unit>
        <trans-unit id="210cdb9a0ce5d545d18adc0fc1f6167261b16830" translate="yes" xml:space="preserve">
          <source>The hash code of a member-value depends on its type:</source>
          <target state="translated">成员值的哈希码取决于其类型。</target>
        </trans-unit>
        <trans-unit id="eeb946081a225b8dea385c7f788fc1184326ddf3" translate="yes" xml:space="preserve">
          <source>The hash code of a primitive value</source>
          <target state="translated">一个基元值的哈希码</target>
        </trans-unit>
        <trans-unit id="2134ae5696f587a6755931aaf788a2d6221bf325" translate="yes" xml:space="preserve">
          <source>The hash code of a primitive value &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; is equal to &lt;code&gt;&lt;i&gt;WrapperType&lt;/i&gt;.valueOf(&lt;i&gt;v&lt;/i&gt;).hashCode()&lt;/code&gt;, where &lt;code&gt;&lt;i&gt;WrapperType&lt;/i&gt;&lt;/code&gt; is the wrapper type corresponding to the primitive type of &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; (&lt;a href=&quot;../byte&quot;&gt;&lt;code&gt;Byte&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../double&quot;&gt;&lt;code&gt;Double&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../float&quot;&gt;&lt;code&gt;Float&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../long&quot;&gt;&lt;code&gt;Long&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../short&quot;&gt;&lt;code&gt;Short&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">基本值 &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; 的哈希码等于 &lt;code&gt;&lt;i&gt;WrapperType&lt;/i&gt;.valueOf(&lt;i&gt;v&lt;/i&gt;).hashCode()&lt;/code&gt; ，其中 &lt;code&gt;&lt;i&gt;WrapperType&lt;/i&gt;&lt;/code&gt; 是与 &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; 的原始类型相对应的包装器类型（&lt;a href=&quot;../byte&quot;&gt; &lt;code&gt;Byte&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../double&quot;&gt; &lt;code&gt;Double&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../float&quot;&gt; &lt;code&gt;Float&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../long&quot;&gt; &lt;code&gt;Long&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../short&quot;&gt; &lt;code&gt;Short&lt;/code&gt; &lt;/a&gt;，或&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="1d02a73fa0f7e8ac01c968c0c089bcfd10620f9c" translate="yes" xml:space="preserve">
          <source>The hash code of a short buffer depends only upon its remaining elements; that is, upon the elements from &lt;code&gt;position()&lt;/code&gt; up to, and including, the element at &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">短缓冲区的哈希码仅取决于其剩余元素。也就是说，在从 &lt;code&gt;position()&lt;/code&gt; 到并包括 &lt;code&gt;limit()&lt;/code&gt; - &lt;code&gt;1&lt;/code&gt; 的元素上。</target>
        </trans-unit>
        <trans-unit id="c977d5991df99f6e1be819ca9756a418a375c909" translate="yes" xml:space="preserve">
          <source>The hash code of a string, enum, class, or annotation member-value</source>
          <target state="translated">字符串、枚举、类或注解成员值的哈希码。</target>
        </trans-unit>
        <trans-unit id="d7d14243bc9c88dd73661c2370e4d91f3c2d8aef" translate="yes" xml:space="preserve">
          <source>The hash code of a string, enum, class, or annotation member-value I</source>
          <target state="translated">字符串、枚举、类或注解成员值的哈希码 I</target>
        </trans-unit>
        <trans-unit id="c5b69f411272182de725ee87c28429b094dc5c1c" translate="yes" xml:space="preserve">
          <source>The hash code of a string, enum, class, or annotation member-value I &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; is computed as by calling &lt;code&gt;&lt;i&gt;v&lt;/i&gt;.hashCode()&lt;/code&gt;. (In the case of annotation member values, this is a recursive definition.)</source>
          <target state="translated">字符串，枚举，类或注释成员值I &lt;code&gt;&lt;i&gt;v&lt;/i&gt;&lt;/code&gt; 的哈希码是通过调用 &lt;code&gt;&lt;i&gt;v&lt;/i&gt;.hashCode()&lt;/code&gt; 来计算的。 （对于注释成员值，这是一个递归定义。）</target>
        </trans-unit>
        <trans-unit id="01d1fa6e57ef84b5eecfaa822a60e3bc34f1f826" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;ArrayType&lt;/code&gt; instance is the sum of the hash codes of all the elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (i.e. dimension, elements' open type and primitive array flag). The hashcode for a primitive value is the hashcode of the corresponding boxed object (e.g. the hashcode for &lt;code&gt;true&lt;/code&gt; is &lt;code&gt;Boolean.TRUE.hashCode()&lt;/code&gt;). This ensures that &lt;code&gt; t1.equals(t2) &lt;/code&gt; implies that &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; for any two &lt;code&gt;ArrayType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个的哈希码 &lt;code&gt;ArrayType&lt;/code&gt; 实例是在所使用的信息的所有元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即尺寸，元件的开放型和原始阵列标志）。基本值的哈希码是相应装箱对象的哈希码（例如， &lt;code&gt;true&lt;/code&gt; 的哈希码是 &lt;code&gt;Boolean.TRUE.hashCode()&lt;/code&gt; ）。这可以确保 &lt;code&gt; t1.equals(t2) &lt;/code&gt; 隐含了对任何两个 &lt;code&gt;ArrayType&lt;/code&gt; 实例 &lt;code&gt;t1&lt;/code&gt; 和 &lt;code&gt;t2&lt;/code&gt; 而言 &lt;code&gt; t1.hashCode()==t2.hashCode() &lt;/code&gt; ，这是方法&lt;a href=&quot;../../../java/lang/object#hashCode--&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;的常规协定所要求的。</target>
        </trans-unit>
        <trans-unit id="1a2573b1b7a6841ea4b97efa1dcc1c78c9b4a766" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;ArrayType&lt;/code&gt; instance is the sum of the hash codes of all the elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (i.e. dimension, elements' open type and primitive array flag). The hashcode for a primitive value is the hashcode of the corresponding boxed object (e.g. the hashcode for &lt;code&gt;true&lt;/code&gt; is &lt;code&gt;Boolean.TRUE.hashCode()&lt;/code&gt;). This ensures that &lt;code&gt;t1.equals(t2)&lt;/code&gt; implies that &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; for any two &lt;code&gt;ArrayType&lt;/code&gt; instances &lt;code&gt;t1&lt;/code&gt; and &lt;code&gt;t2&lt;/code&gt;, as required by the general contract of the method &lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个的哈希码 &lt;code&gt;ArrayType&lt;/code&gt; 实例是在所使用的信息的所有元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即尺寸，元件的开放型和原始阵列标志）。基本值的哈希码是相应装箱对象的哈希码（例如， &lt;code&gt;true&lt;/code&gt; 的哈希码是 &lt;code&gt;Boolean.TRUE.hashCode()&lt;/code&gt; ）。这确保 &lt;code&gt;t1.equals(t2)&lt;/code&gt; 隐含了对任何两个 &lt;code&gt;ArrayType&lt;/code&gt; 实例 &lt;code&gt;t1&lt;/code&gt; 和 &lt;code&gt;t2&lt;/code&gt; 而言 &lt;code&gt;t1.hashCode()==t2.hashCode()&lt;/code&gt; ，这是方法&lt;a href=&quot;../../../../java.base/java/lang/object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;的常规协定所要求的。</target>
        </trans-unit>
        <trans-unit id="89859869abc1e87bea0cedbd234cccfbd6292353" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, its</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; 实例是在使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：它的名称，其</target>
        </trans-unit>
        <trans-unit id="d4009fccc58869916c6960aab5f22a0c9ff7dbc5" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, its</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanAttributeInfoSupport&lt;/code&gt; 实例是在使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：它的名称，其</target>
        </trans-unit>
        <trans-unit id="2f397ac542d0038cb102144a0cc57e017b2c4f8d" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name and signature, where the signature hashCode is calculated by a call to &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：其名称和签名，其中签名的hashCode由于呼叫计算 &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b4bf3fc4a7e5d7aa9cdb23fbe6d4aaab5631efe8" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name and signature, where the signature hashCode is calculated by a call to &lt;code&gt;
 java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：其名称和签名，其中签名的hashCode由于呼叫计算 &lt;code&gt; java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="04266c1edbee1d94b1f76015779f40d46219c679" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name and signature, where the signature hashCode is calculated by a call to &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanConstructorInfoSupport&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：其名称和签名，其中签名的hashCode由于呼叫计算 &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="2a41b2af637d21816176cf096c670471a0f1f21d" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanInfo&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its class name, and its infos on attributes, constructors, operations and notifications, where the hashCode of each of these arrays is calculated by a call to &lt;code&gt;new java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()&lt;/code&gt;).</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanInfo&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：它的类名，并其上的属性，构造，操作和通知的相关信息，这些阵列的其中哈希码通过调用 &lt;code&gt;new java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()&lt;/code&gt; ）来计算。</target>
        </trans-unit>
        <trans-unit id="7134d10e582e012e058ace133bc0a5e89599df5c" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its class name, and its infos on attributes, constructors, operations and notifications, where the hashCode of each of these arrays is calculated by a call to &lt;code&gt;new
 java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()&lt;/code&gt;).</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanInfoSupport&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：它的类名，并其上的属性，构造，操作和通知的相关信息，这些阵列的其中哈希码通过调用 &lt;code&gt;new java.util.HashSet(java.util.Arrays.asList(this.getSignature)).hashCode()&lt;/code&gt; ）来计算。</target>
        </trans-unit>
        <trans-unit id="f54d7fb241c970213208d826f32b3107dda26d22" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, return open type, impact and signature, where the signature hashCode is calculated by a call to &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即其名称，返回开放式，冲击和签名，其中签名的hashCode由一个呼叫计算 &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e8aeea1393fe0c4be8026ba476bcdaa2aeddf8bc" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, return open type, impact and signature, where the signature hashCode is calculated by a call to &lt;code&gt;
 java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即其名称，返回开放式，冲击和签名，其中签名的hashCode由一个呼叫计算 &lt;code&gt; java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bbcfc09c215717c345d74980a70a4ff3a832c4e1" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, return open type, impact and signature, where the signature hashCode is calculated by a call to &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt;).</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanOperationInfoSupport&lt;/code&gt; 实例中使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即其名称，返回开放式，冲击和签名，其中签名的hashCode由一个呼叫计算 &lt;code&gt;java.util.Arrays.asList(this.getSignature).hashCode()&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="00e028f4abde36a33f7e7c1ecf97c6a5135da15d" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, its</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; 实例是在使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：它的名称，其</target>
        </trans-unit>
        <trans-unit id="31d61d2f8f6cfb064e5c7aa593ca2ca50815ceaf" translate="yes" xml:space="preserve">
          <source>The hash code of an &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; instance is the sum of the hash codes of all elements of information used in &lt;code&gt;equals&lt;/code&gt; comparisons (ie: its name, its</source>
          <target state="translated">一个的哈希码 &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; 实例是在使用的所有信息元素的哈希码的总和 &lt;code&gt;equals&lt;/code&gt; 比较（即：它的名称，其</target>
        </trans-unit>
        <trans-unit id="ad19edf14f30cef209a8184f7035e14288cbeb22" translate="yes" xml:space="preserve">
          <source>The hash code of an annotation is the sum of the hash codes of its members (including those with default values), as defined below: The hash code of an annotation member is (127 times the hash code of the member-name as computed by &lt;a href=&quot;../string#hashCode()&quot;&gt;&lt;code&gt;String.hashCode()&lt;/code&gt;&lt;/a&gt;) XOR the hash code of the member-value, as defined below:</source>
          <target state="translated">注释的哈希码是其成员的哈希码之和（包括具有默认值的哈希码的总和），如下所示：注释成员的哈希码为（成员名称的哈希码的127倍，由&lt;a href=&quot;../string#hashCode()&quot;&gt; &lt;code&gt;String.hashCode()&lt;/code&gt; &lt;/a&gt;）对成员值的哈希码进行XOR，如下所示：</target>
        </trans-unit>
        <trans-unit id="ec70ed87a298662c34b1f376ba077c2bc1d629fc" translate="yes" xml:space="preserve">
          <source>The hash code of an annotation is the sum of the hash codes of its members (including those with default values), as defined below: The hash code of an annotation member is (127 times the hash code of the member-name as computed by &lt;a href=&quot;../string#hashCode--&quot;&gt;&lt;code&gt;String.hashCode()&lt;/code&gt;&lt;/a&gt;) XOR the hash code of the member-value, as defined below:</source>
          <target state="translated">注释的哈希码是其成员（包括具有默认值的哈希值）的哈希码的总和，如下所示：注释成员的哈希码为（成员名哈希码的127倍，计算方法为&lt;a href=&quot;../string#hashCode--&quot;&gt; &lt;code&gt;String.hashCode()&lt;/code&gt; &lt;/a&gt;）将成员值的哈希码异或，如下所示：</target>
        </trans-unit>
        <trans-unit id="5d1b19e581d24e7a8bf88b5ada0f6a0c846f91cf" translate="yes" xml:space="preserve">
          <source>The hash code of an array member-value is computed by calling the appropriate overloading of &lt;a href=&quot;../../util/arrays#hashCode(long%5B%5D)&quot;&gt;&lt;code&gt;Arrays.hashCode&lt;/code&gt;&lt;/a&gt; on the value. (There is one overloading for each primitive type, and one for object reference types.)</source>
          <target state="translated">数组成员值的哈希码是通过在值上调用&lt;a href=&quot;../../util/arrays#hashCode(long%5B%5D)&quot;&gt; &lt;code&gt;Arrays.hashCode&lt;/code&gt; &lt;/a&gt;的适当重载来计算的。（每种基本类型都有一个重载，而对象引用类型有一个重载。）</target>
        </trans-unit>
        <trans-unit id="c3b05c5d540ac9609ca285969339a76621c23f02" translate="yes" xml:space="preserve">
          <source>The hash code of an array member-value is computed by calling the appropriate overloading of &lt;a href=&quot;../../util/arrays#hashCode-long:A-&quot;&gt;&lt;code&gt;Arrays.hashCode&lt;/code&gt;&lt;/a&gt; on the value. (There is one overloading for each primitive type, and one for object reference types.)</source>
          <target state="translated">数组成员值的哈希码是通过在值上调用&lt;a href=&quot;../../util/arrays#hashCode-long:A-&quot;&gt; &lt;code&gt;Arrays.hashCode&lt;/code&gt; &lt;/a&gt;的适当重载来计算的。（每种基本类型都有一个重载，而对象引用类型有一个重载。）</target>
        </trans-unit>
        <trans-unit id="2bb2f0111cd6022a0599aca13287860989104c38" translate="yes" xml:space="preserve">
          <source>The hash code of this address as an int.</source>
          <target state="translated">这个地址的哈希码为一个int。</target>
        </trans-unit>
        <trans-unit id="fbc46fa08eff76ca50a494a67a9f9afc3402dc72" translate="yes" xml:space="preserve">
          <source>The hash code should be based on the entire state of the object.</source>
          <target state="translated">哈希码应该基于对象的整个状态。</target>
        </trans-unit>
        <trans-unit id="712b5a084994256ad3e9968d5206089d7ea3c72c" translate="yes" xml:space="preserve">
          <source>The hash code value for this attribute set.</source>
          <target state="translated">此属性集的哈希码值。</target>
        </trans-unit>
        <trans-unit id="2b53bb94c3bfc0bbacc248ee138e0c2f7cbbffc9" translate="yes" xml:space="preserve">
          <source>The hash code value is generated using the case-insensitive hostname of this &lt;code&gt;SNIHostName&lt;/code&gt;.</source>
          <target state="translated">使用此 &lt;code&gt;SNIHostName&lt;/code&gt; 的不区分大小写的主机名生成哈希码值。</target>
        </trans-unit>
        <trans-unit id="a94e0117685d82860b0a3c8054cc73b78793fa96" translate="yes" xml:space="preserve">
          <source>The hash code value is generated using the name type and encoded value of this server name.</source>
          <target state="translated">哈希码值是使用该服务器名称的名称类型和编码值生成的。</target>
        </trans-unit>
        <trans-unit id="fe1d6dcf3d32aad84ace2f1668e42a0886801dee" translate="yes" xml:space="preserve">
          <source>The hash table contains an &lt;code&gt;Object&lt;/code&gt; and the corresponding &lt;code&gt;Entity&lt;/code&gt;</source>
          <target state="translated">哈希表包含一个 &lt;code&gt;Object&lt;/code&gt; 和相应的 &lt;code&gt;Entity&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="166894a160be7236b786b6cf2d897b19a4b7983f" translate="yes" xml:space="preserve">
          <source>The hash table contains the name of element and the corresponding element.</source>
          <target state="translated">哈希表包含元素名称和对应的元素。</target>
        </trans-unit>
        <trans-unit id="12b7c2e3fed5fedeca7c74cea07b3c8d928b404d" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module &lt;code&gt;Opens&lt;/code&gt;</source>
          <target state="translated">此模块的哈希码值 &lt;code&gt;Opens&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f8a72ebb55ba31635c6a6269f563a04148937211" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module dependence</source>
          <target state="translated">该模块依赖性的哈希码值。</target>
        </trans-unit>
        <trans-unit id="9be86fd4f6165883b7425611b19516dbc44cbe65" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module descriptor</source>
          <target state="translated">该模块描述符的哈希码值。</target>
        </trans-unit>
        <trans-unit id="3d0dbd6446926905dd1d23ee3f16bcb4e8b56ce1" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module export</source>
          <target state="translated">该模块导出的哈希码值。</target>
        </trans-unit>
        <trans-unit id="96747c64ef53441dfca3c12471f7b8a813d46cc2" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module opens</source>
          <target state="translated">该模块的哈希码值打开了</target>
        </trans-unit>
        <trans-unit id="ea2081f6b1a6483c60f5f1f1e8389a02f0db9e3b" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module provides</source>
          <target state="translated">该模块的哈希码值为</target>
        </trans-unit>
        <trans-unit id="c7a85005de87c9f937b25ebe7816c515a9c9abcf" translate="yes" xml:space="preserve">
          <source>The hash-code value for this module version</source>
          <target state="translated">该模块版本的哈希码值。</target>
        </trans-unit>
        <trans-unit id="6c6ae7273d0a50cc50b49ac4c6415f03b7a65666" translate="yes" xml:space="preserve">
          <source>The hash-code value for this resolved module</source>
          <target state="translated">该解析模块的哈希码值。</target>
        </trans-unit>
        <trans-unit id="5a3e1afff0d50668c46802f1477ed35d0f91a154" translate="yes" xml:space="preserve">
          <source>The hashcode of this version</source>
          <target state="translated">这个版本的哈希码</target>
        </trans-unit>
        <trans-unit id="6fb0842996fa13780c2faaae081f966b5b45ef57" translate="yes" xml:space="preserve">
          <source>The header for a column of data.</source>
          <target state="translated">一列数据的标题。</target>
        </trans-unit>
        <trans-unit id="70368afbc14eda860a6d9acb86b4b982e4a9c963" translate="yes" xml:space="preserve">
          <source>The header for a row of data.</source>
          <target state="translated">一行数据的标题。</target>
        </trans-unit>
        <trans-unit id="2f40840f8df0b9b982dd48f033917e60387a6978" translate="yes" xml:space="preserve">
          <source>The header value of the column.</source>
          <target state="translated">列的页眉值。</target>
        </trans-unit>
        <trans-unit id="536d7623d1b3e33ffe89509fa39178919882bcb0" translate="yes" xml:space="preserve">
          <source>The heap may be of a fixed size or may be expanded and shrunk. The memory for the heap does not need to be contiguous.</source>
          <target state="translated">堆的大小可以是固定的,也可以是扩展和收缩的。堆的内存不需要是连续的。</target>
        </trans-unit>
        <trans-unit id="fe99f73535e48cc29eb310f157bfbe2aace7c59b" translate="yes" xml:space="preserve">
          <source>The heaviest predefined weight.</source>
          <target state="translated">最重的预定重量。</target>
        </trans-unit>
        <trans-unit id="f81b9ca5d1cfd1e67c799ae3c17e744c07d9afc0" translate="yes" xml:space="preserve">
          <source>The hedge &quot;approximately&quot; is used in the foregoing description because default source of randomness is only approximately an unbiased source of independently chosen bits. If it were a perfect source of randomly chosen bits, then the algorithm would choose permutations with perfect uniformity.</source>
          <target state="translated">在前面的描述中使用了对冲 &quot;大约&quot;,因为默认的随机性来源只是大约一个无偏的独立选择比特的来源。如果它是一个完美的随机性选择比特的来源,那么算法将以完美的均匀性来选择排列组合。</target>
        </trans-unit>
        <trans-unit id="67a3fd782abccfd0623f5ed131c4181f7176648a" translate="yes" xml:space="preserve">
          <source>The hedge &quot;approximately&quot; is used in the foregoing description only because the &lt;code&gt;next&lt;/code&gt; method is only approximately an unbiased source of independently chosen bits. If it were a perfect source of randomly chosen bits, then the algorithm shown would choose &lt;code&gt;double&lt;/code&gt; values from the stated range with perfect uniformity.</source>
          <target state="translated">在前面的描述中仅使用&amp;ldquo;近似&amp;rdquo;树篱，因为 &lt;code&gt;next&lt;/code&gt; 一种方法仅近似是独立选择的位的无偏源。如果它是随机选择的比特的理想来源，那么所示算法将以理想的一致性从指定范围内选择 &lt;code&gt;double&lt;/code&gt; 精度值。</target>
        </trans-unit>
        <trans-unit id="58816a4e8f485de5ac4b356dc59cc5616b00d6ae" translate="yes" xml:space="preserve">
          <source>The hedge &quot;approximately&quot; is used in the foregoing description only because the next method is only approximately an unbiased source of independently chosen bits. If it were a perfect source of randomly chosen bits, then the algorithm shown would choose &lt;code&gt;float&lt;/code&gt; values from the stated range with perfect uniformity.</source>
          <target state="translated">在前述描述中仅使用&amp;ldquo;近似&amp;rdquo;树篱，因为下一种方法仅近似是独立选择的位的无偏源。如果它是随机选择的位的理想来源，那么所示算法将以理想的一致性从指定范围内选择 &lt;code&gt;float&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="502b6b76db7ef6889c24c49044d80cfde1ed3dae" translate="yes" xml:space="preserve">
          <source>The hedge &quot;approximately&quot; is used in the foregoing description only because the next method is only approximately an unbiased source of independently chosen bits. If it were a perfect source of randomly chosen bits, then the algorithm shown would choose &lt;code&gt;int&lt;/code&gt; values from the stated range with perfect uniformity.</source>
          <target state="translated">在前述描述中仅使用&amp;ldquo;近似&amp;rdquo;树篱，因为下一种方法仅近似是独立选择的位的无偏源。如果它是随机选择的位的理想来源，那么所示算法将以理想的一致性从指定范围内选择 &lt;code&gt;int&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="805f1481305a0a003c0c02fe760455a1ed3fd1f1" translate="yes" xml:space="preserve">
          <source>The height dimension; negative values can be used.</source>
          <target state="translated">高度尺寸,可使用负值。</target>
        </trans-unit>
        <trans-unit id="03634a10e1205e95d36ba4cdc0cfae3b5e8d11b6" translate="yes" xml:space="preserve">
          <source>The height in pixels of each row in the table.</source>
          <target state="translated">表格中每行的高度,以像素为单位。</target>
        </trans-unit>
        <trans-unit id="646d9ab9d69ac011a77c7d3bb4bcfd24e2ac4511" translate="yes" xml:space="preserve">
          <source>The height in pixels of the margin between the cells in each row.</source>
          <target state="translated">每行单元格之间的边距高度,以像素为单位。</target>
        </trans-unit>
        <trans-unit id="83ed1a6113277228a18b9d691ce3c2bc45f56c15" translate="yes" xml:space="preserve">
          <source>The height of cell.</source>
          <target state="translated">细胞的高度。</target>
        </trans-unit>
        <trans-unit id="da00b26100024c30455a77a2df48917625c3b007" translate="yes" xml:space="preserve">
          <source>The height of each tile if tiling has been set, or 0 otherwise.</source>
          <target state="translated">如果设置了平铺,则每块瓷砖的高度,否则为0。</target>
        </trans-unit>
        <trans-unit id="f23417dbb721134e36b8caed73cad75ac4c3a829" translate="yes" xml:space="preserve">
          <source>The height of each tile if tiling has been set, or 0 otherwise. The initial value is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">如果已设置平铺，则每个瓦片的高度；否则，设置为0。初始值为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="510b0a31f4dcce94a238dea65e7e006e3dd7e168" translate="yes" xml:space="preserve">
          <source>The height of the &lt;code&gt;Rectangle&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Rectangle&lt;/code&gt; 的高度。</target>
        </trans-unit>
        <trans-unit id="3ef36e84a417d2fafbdf72cfa93d46b2a8b81517" translate="yes" xml:space="preserve">
          <source>The height of the arc that rounds off the corners.</source>
          <target state="translated">圆角的弧线高度。</target>
        </trans-unit>
        <trans-unit id="d6a525b79763bd2b875b6764281475654bac67db" translate="yes" xml:space="preserve">
          <source>The height of the palette title.</source>
          <target state="translated">调色板标题的高度。</target>
        </trans-unit>
        <trans-unit id="7a63ab000024777ce854d706337a587e757dfa56" translate="yes" xml:space="preserve">
          <source>The height of the rule.</source>
          <target state="translated">规则的高度。</target>
        </trans-unit>
        <trans-unit id="ccbe36e78690f6c9084308de29beb86a3224e213" translate="yes" xml:space="preserve">
          <source>The height of the rule. See the size attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">规则的高度。参见HTML 4.0中的size属性定义。这个属性在HTML 4.0中已被废弃。</target>
        </trans-unit>
        <trans-unit id="004e0f9b346cda939ac1004aca1e0896a17362cb" translate="yes" xml:space="preserve">
          <source>The height of the source image.</source>
          <target state="translated">源图像的高度。</target>
        </trans-unit>
        <trans-unit id="008df043b6acd32175c21c4e6511d767355b18ad" translate="yes" xml:space="preserve">
          <source>The height of this &lt;code&gt;Rectangle2D&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;Rectangle2D&lt;/code&gt; 的高度。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
