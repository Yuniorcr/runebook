<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="d309edf78bb778186fb9cb4f6f6c1c3beee8b3fa" translate="yes" xml:space="preserve">
          <source>The height of this &lt;code&gt;RoundRectangle2D&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;RoundRectangle2D&lt;/code&gt; 的高度。</target>
        </trans-unit>
        <trans-unit id="f3ef74edb4754696c85f7e72673e45ddd4c19614" translate="yes" xml:space="preserve">
          <source>The height of this Raster.</source>
          <target state="translated">该Raster的高度。</target>
        </trans-unit>
        <trans-unit id="edd2ebd147d4048eb2abcbda44a2f200cc96b903" translate="yes" xml:space="preserve">
          <source>The hide-window default window close operation</source>
          <target state="translated">隐藏窗口默认关闭窗口的操作。</target>
        </trans-unit>
        <trans-unit id="5737454dda055bd8bb162cd9eb4846920e7b432e" translate="yes" xml:space="preserve">
          <source>The high threshold value.</source>
          <target state="translated">高门槛值。</target>
        </trans-unit>
        <trans-unit id="15326738362d08a71045fe2aaa50b89b8bdc9feb" translate="yes" xml:space="preserve">
          <source>The higher-level code that calls getCustomEditor may either embed the Component in some larger property sheet, or it may put it in its own individual dialog, or ...</source>
          <target state="translated">调用getCustomEditor的上层代码可以将该组件嵌入到某个较大的属性表中,也可以将其放在自己的单独对话框中,或者...。</target>
        </trans-unit>
        <trans-unit id="960d5fb054f1e3fe7c0a799520ce868908c47938" translate="yes" xml:space="preserve">
          <source>The highest justification priority.</source>
          <target state="translated">最优先的理由。</target>
        </trans-unit>
        <trans-unit id="9b75574b2286c0f20e97f602454a50fa333e3d7f" translate="yes" xml:space="preserve">
          <source>The highlights (if any) are painted.</source>
          <target state="translated">高光部分(如有)是画出来的。</target>
        </trans-unit>
        <trans-unit id="31982dd70867d5c4e880c2e13841ee34ddf0228e" translate="yes" xml:space="preserve">
          <source>The historical name of this encoding, or &lt;code&gt;null&lt;/code&gt; if the stream has been closed</source>
          <target state="translated">此编码的历史名称，如果流已关闭，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54f0c950a5ffae3623bf86533115f2ac87fb076a" translate="yes" xml:space="preserve">
          <source>The historical name of this encoding, or possibly &lt;code&gt;null&lt;/code&gt; if the stream has been closed</source>
          <target state="translated">此编码的历史名称，如果流已关闭，则可能为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4119b3c56ec8cdf2cd86fad835660f7db959c4e5" translate="yes" xml:space="preserve">
          <source>The hold count information is typically only used for testing and debugging purposes. For example, if a certain section of code should not be entered with the lock already held then we can assert that fact:</source>
          <target state="translated">持有数信息通常只用于测试和调试的目的。例如,如果某段代码不应该在已经被锁住的情况下输入,那么我们可以断言这个事实。</target>
        </trans-unit>
        <trans-unit id="feb71ca01e20f35ec2e60135062bb088ddef248f" translate="yes" xml:space="preserve">
          <source>The hook is said to bind the call site to a target method handle, and a typical action would be &lt;code&gt;someTarget.bindTo(this)&lt;/code&gt;. However, the hook is free to take any action whatever, including ignoring the call site and returning a constant target.</source>
          <target state="translated">据说该钩子将调用站点绑定到目标方法句柄，典型的动作是 &lt;code&gt;someTarget.bindTo(this)&lt;/code&gt; 。但是，该钩子可以随意采取任何措施，包括忽略调用站点并返回恒定的目标。</target>
        </trans-unit>
        <trans-unit id="bb3e245037ba7cfe8449f5732d485dda63526de4" translate="yes" xml:space="preserve">
          <source>The horizontal alignment of &lt;code&gt;JTextField&lt;/code&gt; can be set to be left justified, leading justified, centered, right justified or trailing justified. Right/trailing justification is useful if the required size of the field text is smaller than the size allocated to it. This is determined by the &lt;code&gt;setHorizontalAlignment&lt;/code&gt; and &lt;code&gt;getHorizontalAlignment&lt;/code&gt; methods. The default is to be leading justified.</source>
          <target state="translated">&lt;code&gt;JTextField&lt;/code&gt; 的水平对齐方式可以设置为左对齐，前对齐，居中，右对齐或尾随对齐。如果字段文本的所需大小小于为其分配的大小，则右对齐/尾随对齐很有用。这由 &lt;code&gt;setHorizontalAlignment&lt;/code&gt; 和 &lt;code&gt;getHorizontalAlignment&lt;/code&gt; 方法确定。默认设置为前导对齐。</target>
        </trans-unit>
        <trans-unit id="d451faf770164fc6cddda0afa6e5c80cbf0a8e5a" translate="yes" xml:space="preserve">
          <source>The horizontal axis consists of a sequential group containing two parallel groups. The first parallel group contains the labels, and the second parallel group contains the text fields.</source>
          <target state="translated">水平轴由一个包含两个平行组的顺序组组成。第一个平行组包含标签,第二个平行组包含文本字段。</target>
        </trans-unit>
        <trans-unit id="113ff9348c7a1f504d7da5d3492b39b54a0bb923" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate at which the event occurred relative to the DOM implementation's client area.</source>
          <target state="translated">事件发生时相对于DOM实现的客户端区域的水平坐标。</target>
        </trans-unit>
        <trans-unit id="6e9b66c91d2663a72807b0247f903e14bb71380d" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate at which the event occurred relative to the origin of the screen coordinate system.</source>
          <target state="translated">事件发生时相对于屏幕坐标系原点的横坐标。</target>
        </trans-unit>
        <trans-unit id="8154d08b076cdc7ad41f96fe6859cc9b2e54ac2c" translate="yes" xml:space="preserve">
          <source>The horizontal element of legs between nodes starts at the right of the left-hand side of the child node by default.</source>
          <target state="translated">节点之间的腿的水平元素默认从子节点左侧的右边开始。</target>
        </trans-unit>
        <trans-unit id="ea33749c268bb127682d2031c5bceb8a153985c1" translate="yes" xml:space="preserve">
          <source>The horizontal element of legs between nodes starts at the right of the left-hand side of the child node by default. This method makes the leg end before that.</source>
          <target state="translated">节点之间的腿的水平元素默认从子节点左侧的右边开始。本方法使腿在这之前结束。</target>
        </trans-unit>
        <trans-unit id="a78eb699ee386d149fce0ecce892268c6bd08062" translate="yes" xml:space="preserve">
          <source>The host component of a URI cannot contain escaped octets, hence this method does not perform any decoding.</source>
          <target state="translated">URI的主机分量不能包含转义八位数,因此本方法不执行任何解码。</target>
        </trans-unit>
        <trans-unit id="34bc17988021d57400932c60a1e04c33487914e0" translate="yes" xml:space="preserve">
          <source>The host component of a URI, if defined, will have one of the following forms:</source>
          <target state="translated">如果定义了URI的主机组件,它将具有以下形式之一。</target>
        </trans-unit>
        <trans-unit id="bab1b3cf2cb0aea0d2eaa0c153c81181ea3acbd4" translate="yes" xml:space="preserve">
          <source>The host component of this URI, or &lt;code&gt;null&lt;/code&gt; if the host is undefined</source>
          <target state="translated">这个URI，或的主机组件 &lt;code&gt;null&lt;/code&gt; 如果主机是未定义</target>
        </trans-unit>
        <trans-unit id="9d7d4425f6a4629ec73708d5020ba7356b6e15fb" translate="yes" xml:space="preserve">
          <source>The host is expressed as a DNS name, as a numerical IP address, or as &quot;localhost&quot; (for the local machine). The wildcard &quot;*&quot; may be included once in a DNS name host specification. If it is included, it must be in the leftmost position, as in &quot;*.example.com&quot;.</source>
          <target state="translated">主机以DNS名称、数字IP地址或 &quot;localhost&quot;(代表本地机器)表示。通配符 &quot;*&quot;可以在一个DNS名主机规范中包含一次。如果包含通配符,必须在最左边的位置,如 &quot;*.example.com&quot;。</target>
        </trans-unit>
        <trans-unit id="eb770726793d61fc3715477603a657f226342af0" translate="yes" xml:space="preserve">
          <source>The host is expressed as a DNS name, as a numerical IP address, or as &quot;localhost&quot; (for the local machine). The wildcard &quot;*&quot; may be included once in a DNS name host specification. If it is included, it must be in the leftmost position, as in &quot;*.sun.com&quot;.</source>
          <target state="translated">主机以DNS名称、数字IP地址或 &quot;localhost&quot;(代表本地机器)表示。通配符 &quot;*&quot;可在 DNS 名称主机规范中包含一次。如果包含通配符,则必须在最左边的位置,如 &quot;*.sun.com&quot;。</target>
        </trans-unit>
        <trans-unit id="7e252805e8eb7c5662da677e362f2cd533b3c21d" translate="yes" xml:space="preserve">
          <source>The host name can either be a machine name, such as &quot;&lt;code&gt;java.sun.com&lt;/code&gt;&quot;, or a textual representation of its IP address.</source>
          <target state="translated">主机名可以是计算机名，例如&amp;ldquo; &lt;code&gt;java.sun.com&lt;/code&gt; &amp;rdquo;，也可以是其IP地址的文本表示。</target>
        </trans-unit>
        <trans-unit id="fe1afa1c850d1e44153fc7f23be8c095a3d2063c" translate="yes" xml:space="preserve">
          <source>The host name can either be a machine name, such as &quot;&lt;code&gt;java.sun.com&lt;/code&gt;&quot;, or a textual representation of its IP address. If a literal IP address is supplied, only the validity of the address format is checked.</source>
          <target state="translated">主机名可以是计算机名，例如&amp;ldquo; &lt;code&gt;java.sun.com&lt;/code&gt; &amp;rdquo;，也可以是其IP地址的文本表示。如果提供了原义IP地址，则仅检查地址格式的有效性。</target>
        </trans-unit>
        <trans-unit id="321d8c0c6af230f36c5fd0d26e504fb69f51da0f" translate="yes" xml:space="preserve">
          <source>The host name can either be a machine name, such as &quot;&lt;code&gt;www.example.com&lt;/code&gt;&quot;, or a textual representation of its IP address.</source>
          <target state="translated">主机名可以是计算机名，例如&amp;ldquo; &lt;code&gt;www.example.com&lt;/code&gt; &amp;rdquo;，也可以是其IP地址的文本表示。</target>
        </trans-unit>
        <trans-unit id="ee4b30519873a291995fdada227ae56320a42460" translate="yes" xml:space="preserve">
          <source>The host name can either be a machine name, such as &quot;&lt;code&gt;www.example.com&lt;/code&gt;&quot;, or a textual representation of its IP address. If a literal IP address is supplied, only the validity of the address format is checked.</source>
          <target state="translated">主机名可以是计算机名，例如&amp;ldquo; &lt;code&gt;www.example.com&lt;/code&gt; &amp;rdquo;，也可以是其IP地址的文本表示。如果提供了原义IP地址，则仅检查地址格式的有效性。</target>
        </trans-unit>
        <trans-unit id="7453f74d08a304c820da7c292de80356ba304cac" translate="yes" xml:space="preserve">
          <source>The host part of the Service URL.</source>
          <target state="translated">服务URL的主机部分。</target>
        </trans-unit>
        <trans-unit id="8a6d6b969a44478105ab1226785be062f3948eb1" translate="yes" xml:space="preserve">
          <source>The host part of the Service URL. If the Service URL was constructed with the constructor that takes a URL string parameter, the result is the substring specifying the host in that URL. If the Service URL was constructed with a constructor that takes a separate host parameter, the result is the string that was specified. If that string was null, the result is &lt;code&gt;InetAddress.getLocalHost().getHostName()&lt;/code&gt; if local host name can be resolved to an IP. Else numeric IP address of an active network interface will be used.</source>
          <target state="translated">服务URL的主机部分。如果服务URL是使用带有URL字符串参数的构造函数构造的，则结果是指定该URL中的主机的子字符串。如果服务URL是使用带有单独主机参数的构造函数构造的，则结果是指定的字符串。如果该字符串为null，并且可以将本地主机名解析为IP ，则结果为 &lt;code&gt;InetAddress.getLocalHost().getHostName()&lt;/code&gt; 。将使用活动网络接口的其他数字IP地址。</target>
        </trans-unit>
        <trans-unit id="a3428c73a7d464a7c6ecc80b4fae8fd1231500c2" translate="yes" xml:space="preserve">
          <source>The host part of the Service URL. If the Service URL was constructed with the constructor that takes a URL string parameter, the result is the substring specifying the host in that URL. If the Service URL was constructed with a constructor that takes a separate host parameter, the result is the string that was specified. If that string was null, the result is &lt;code&gt;InetAddress.getLocalHost().getHostName()&lt;/code&gt;.</source>
          <target state="translated">服务URL的主机部分。如果服务URL是使用带有URL字符串参数的构造函数构造的，则结果是指定该URL中的主机的子字符串。如果服务URL是使用带有单独的主机参数的构造函数构造的，则结果是指定的字符串。如果该字符串为null，则结果为 &lt;code&gt;InetAddress.getLocalHost().getHostName()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6f10298a308df49412c25a25857bf7b3ebae4b5" translate="yes" xml:space="preserve">
          <source>The hour of day of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;, from 0 to 23.</source>
          <target state="translated">此 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 的一天中的小时，从0到23。</target>
        </trans-unit>
        <trans-unit id="1dcee8edf5db3c10041f3cbfdb216b1982c4cffa" translate="yes" xml:space="preserve">
          <source>The hour-of-am-pm.</source>
          <target state="translated">凌晨时分。</target>
        </trans-unit>
        <trans-unit id="b720f6beb2fbf1d5c52c3391ad82145cb332f215" translate="yes" xml:space="preserve">
          <source>The hour-of-day.</source>
          <target state="translated">一天的时间。</target>
        </trans-unit>
        <trans-unit id="8d6745522470848c71447e96662401b92d690fee" translate="yes" xml:space="preserve">
          <source>The html spec does not specify how spaces are to be coalesced very well. Specifically, the following scenarios are not discussed (note that a space should be used here, but I am using &amp;amp;nbsp to force the space to be displayed):</source>
          <target state="translated">html规范没有指定如何很好地合并空格。具体来说，不会讨论以下情况（请注意，此处应使用空格，但是我正在使用＆nbsp强制显示该空格）：</target>
        </trans-unit>
        <trans-unit id="01edc38d3117a9fe881c313fc58cca68efb8a8e6" translate="yes" xml:space="preserve">
          <source>The http response code.</source>
          <target state="translated">http响应代码。</target>
        </trans-unit>
        <trans-unit id="efbfcb29bb8aad23ba95b3d84c34e4e8deb5d165" translate="yes" xml:space="preserve">
          <source>The human-readable description of the feature.</source>
          <target state="translated">人可读的特征描述。</target>
        </trans-unit>
        <trans-unit id="cb25decfe5ed2dfff9dc329951405e04436a4e8f" translate="yes" xml:space="preserve">
          <source>The human-readable description of the feature. It is recommended that subclasses call &lt;a href=&quot;#getDescription()&quot;&gt;&lt;code&gt;getDescription()&lt;/code&gt;&lt;/a&gt; rather than reading this field, and that they not change it.</source>
          <target state="translated">该功能的人类可读描述。建议子类调用&lt;a href=&quot;#getDescription()&quot;&gt; &lt;code&gt;getDescription()&lt;/code&gt; &lt;/a&gt;而不是读取此字段，并且不要更改它。</target>
        </trans-unit>
        <trans-unit id="b1398050303d32bd6bb6a984fba0512e95f44388" translate="yes" xml:space="preserve">
          <source>The human-readable description of the feature. It is recommended that subclasses call &lt;a href=&quot;mbeanfeatureinfo#getDescription--&quot;&gt;&lt;code&gt;getDescription()&lt;/code&gt;&lt;/a&gt; rather than reading this field, and that they not change it.</source>
          <target state="translated">功能的人类可读描述。建议子类调用&lt;a href=&quot;mbeanfeatureinfo#getDescription--&quot;&gt; &lt;code&gt;getDescription()&lt;/code&gt; &lt;/a&gt;而不是读取此字段，并且不要更改它。</target>
        </trans-unit>
        <trans-unit id="067c8f1c5a2df4367c4fb697f0db77afbe16cfb8" translate="yes" xml:space="preserve">
          <source>The hyperbolic cosine of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的双曲余弦值。</target>
        </trans-unit>
        <trans-unit id="ac815b6ce55116fb0ad007c349798f1c55dd700a" translate="yes" xml:space="preserve">
          <source>The hyperbolic sine of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的双曲正弦值。</target>
        </trans-unit>
        <trans-unit id="f1dc45b4f7299ddca231f496c19774a95fb60160" translate="yes" xml:space="preserve">
          <source>The hyperbolic tangent of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 的双曲正切。</target>
        </trans-unit>
        <trans-unit id="c47d8ef13a7a97ac1e829267770ee71c2e09e4d9" translate="yes" xml:space="preserve">
          <source>The icon cache</source>
          <target state="translated">图标缓存</target>
        </trans-unit>
        <trans-unit id="3b164b99370dc1298ebcb383ecc869e03738287a" translate="yes" xml:space="preserve">
          <source>The icon shown in the top-left corner of this internal frame.</source>
          <target state="translated">该内部框架左上角显示的图标。</target>
        </trans-unit>
        <trans-unit id="dea612915f2790cdf004fe380112ed112e6b74c8" translate="yes" xml:space="preserve">
          <source>The icon that is displayed when this internal frame is iconified.</source>
          <target state="translated">该内部框架被图标化时显示的图标。</target>
        </trans-unit>
        <trans-unit id="2982313ccbd2852c4e889f2aa881faf139812265" translate="yes" xml:space="preserve">
          <source>The icon that represents this file in the &lt;code&gt;JFileChooser&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFileChooser&lt;/code&gt; 中代表此文件的图标。</target>
        </trans-unit>
        <trans-unit id="a959e29b115d33fd4c2adc0d849fb5ffe96d73a1" translate="yes" xml:space="preserve">
          <source>The icon to be used for tiling the border.</source>
          <target state="translated">用于镶边的图标。</target>
        </trans-unit>
        <trans-unit id="92c75c6e8f04988ee2d3ff9d4a41138b855c728a" translate="yes" xml:space="preserve">
          <source>The icon's size should be 16&amp;times;16 pixels.</source>
          <target state="translated">图标的大小应为16&amp;times;16像素。</target>
        </trans-unit>
        <trans-unit id="4a644dadf53aac7a46e5cb201730a658fdda2b46" translate="yes" xml:space="preserve">
          <source>The icon.</source>
          <target state="translated">这个图标。</target>
        </trans-unit>
        <trans-unit id="39e35629c516ce597389cd6f5ffe71bbd24e90ee" translate="yes" xml:space="preserve">
          <source>The iconify button.</source>
          <target state="translated">图标化按钮。</target>
        </trans-unit>
        <trans-unit id="ff5cc3f9428241a3ab19fb18eaf8f2cb199e0a78" translate="yes" xml:space="preserve">
          <source>The iconify icon.</source>
          <target state="translated">的图标化图标。</target>
        </trans-unit>
        <trans-unit id="5ceebf4829e52c6881341df19a363dee2748a39d" translate="yes" xml:space="preserve">
          <source>The id of the authorized user. &lt;code&gt;null&lt;/code&gt; means the authorization failed.</source>
          <target state="translated">授权用户的ID。 &lt;code&gt;null&lt;/code&gt; 表示授权失败。</target>
        </trans-unit>
        <trans-unit id="190daa117302150eaa044ad50f789c954c118362" translate="yes" xml:space="preserve">
          <source>The id of this attribute. It cannot be null.</source>
          <target state="translated">此属性的id。不能为空。</target>
        </trans-unit>
        <trans-unit id="f46b1dbaf75a94928c4b935b4ce22004db10a7c2" translate="yes" xml:space="preserve">
          <source>The identifier component of this descriptor.</source>
          <target state="translated">本描述符的标识符成分。</target>
        </trans-unit>
        <trans-unit id="94bb0ffe35167c0644337c9a1cb414dc41add78f" translate="yes" xml:space="preserve">
          <source>The identifier for a registered activation group serves several purposes:</source>
          <target state="translated">已注册的激活组的标识符有几个用途。</target>
        </trans-unit>
        <trans-unit id="2aebdd3a076ec94a6f6447bf5af334d3f691af59" translate="yes" xml:space="preserve">
          <source>The identifier for a registered activation group serves several purposes: identifies the group uniquely within the activation system, and contains a reference to the group's activation system so that the group can contact its activation system when necessary.</source>
          <target state="translated">已注册的激活组的标识符有几个目的:在激活系统中唯一地标识该组,并包含对该组激活系统的引用,以便该组在必要时可以联系其激活系统。</target>
        </trans-unit>
        <trans-unit id="daba0b23189a9e6380ffb117c81b7b9d322721c8" translate="yes" xml:space="preserve">
          <source>The identifier for the Backward focus traversal keys.</source>
          <target state="translated">后向聚焦遍历键的标识符。</target>
        </trans-unit>
        <trans-unit id="c710666b83fa17426a3e8d39e8ab1757aa0bee61" translate="yes" xml:space="preserve">
          <source>The identifier for the Down Cycle focus traversal keys.</source>
          <target state="translated">Down Cycle焦点遍历键的标识符。</target>
        </trans-unit>
        <trans-unit id="1594e87372197359f6d29f4e5950f77a7b591e90" translate="yes" xml:space="preserve">
          <source>The identifier for the Forward focus traversal keys.</source>
          <target state="translated">Forward焦点遍历键的标识符。</target>
        </trans-unit>
        <trans-unit id="4e72102fbc365551e48e4511cc4337e698d13e09" translate="yes" xml:space="preserve">
          <source>The identifier for the Up Cycle focus traversal keys.</source>
          <target state="translated">上周期焦点遍历键的标识符。</target>
        </trans-unit>
        <trans-unit id="c8ce9e404a42ce040777de910ab116bb426d6835" translate="yes" xml:space="preserve">
          <source>The identifier for this Java virtual machine.</source>
          <target state="translated">该Java虚拟机的标识符。</target>
        </trans-unit>
        <trans-unit id="686ecb3ef54ea2e35c719a341562d692aa41ff08" translate="yes" xml:space="preserve">
          <source>The identifier is the fully qualified name of the event class, if not set using the &lt;a href=&quot;name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt; annotation.</source>
          <target state="translated">标识符是事件类的标准名称，如果未使用&lt;a href=&quot;name&quot;&gt; &lt;code&gt;Name&lt;/code&gt; &lt;/a&gt;注释设置的话。</target>
        </trans-unit>
        <trans-unit id="af4834bd960aa2b9216df25c846ec21872b9bcac" translate="yes" xml:space="preserve">
          <source>The identifier of the new created timer notification.</source>
          <target state="translated">新创建的定时器通知的标识符。</target>
        </trans-unit>
        <trans-unit id="9f826dacde229ce2d8640f93c05a284337137571" translate="yes" xml:space="preserve">
          <source>The identifier.</source>
          <target state="translated">识别器;</target>
        </trans-unit>
        <trans-unit id="d1ce93c6e5ab18ed05408db6926a49f7e9fe9a87" translate="yes" xml:space="preserve">
          <source>The identifying name of the import.</source>
          <target state="translated">进口的识别名称;</target>
        </trans-unit>
        <trans-unit id="7247b34fe7c056e8e70b0a2bf833b64e7ad00fb5" translate="yes" xml:space="preserve">
          <source>The identifying name of the import. For on-demand imports (&lt;a href=&quot;snippet.subkind#TYPE_IMPORT_ON_DEMAND_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.TYPE_IMPORT_ON_DEMAND_SUBKIND&lt;/code&gt;&lt;/a&gt; or (&lt;a href=&quot;snippet.subkind#STATIC_IMPORT_ON_DEMAND_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.STATIC_IMPORT_ON_DEMAND_SUBKIND&lt;/code&gt;&lt;/a&gt;) that is the full specifier including any qualifiers and the asterisks. For single imports (&lt;a href=&quot;snippet.subkind#SINGLE_TYPE_IMPORT_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.SINGLE_TYPE_IMPORT_SUBKIND&lt;/code&gt;&lt;/a&gt; or (&lt;a href=&quot;snippet.subkind#SINGLE_STATIC_IMPORT_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.SINGLE_STATIC_IMPORT_SUBKIND&lt;/code&gt;&lt;/a&gt;), it is the imported name. That is, the unqualified name.</source>
          <target state="translated">导入的标识名称。对于按需进口（&lt;a href=&quot;snippet.subkind#TYPE_IMPORT_ON_DEMAND_SUBKIND&quot;&gt; &lt;code&gt;Snippet.SubKind.TYPE_IMPORT_ON_DEMAND_SUBKIND&lt;/code&gt; &lt;/a&gt;或（&lt;a href=&quot;snippet.subkind#STATIC_IMPORT_ON_DEMAND_SUBKIND&quot;&gt; &lt;code&gt;Snippet.SubKind.STATIC_IMPORT_ON_DEMAND_SUBKIND&lt;/code&gt; &lt;/a&gt;），这是完全符包括任何预选赛和星号。对于单进口（&lt;a href=&quot;snippet.subkind#SINGLE_TYPE_IMPORT_SUBKIND&quot;&gt; &lt;code&gt;Snippet.SubKind.SINGLE_TYPE_IMPORT_SUBKIND&lt;/code&gt; &lt;/a&gt;或（&lt;a href=&quot;snippet.subkind#SINGLE_STATIC_IMPORT_SUBKIND&quot;&gt; &lt;code&gt;Snippet.SubKind.SINGLE_STATIC_IMPORT_SUBKIND&lt;/code&gt; &lt;/a&gt;），它是导入的名称，即非限定名称。</target>
        </trans-unit>
        <trans-unit id="5f01919588f40a4b942e738f32090ead7b0d1160" translate="yes" xml:space="preserve">
          <source>The identity constraint says that for any partially accumulated result, combining it with an empty result container must produce an equivalent result. That is, for a partially accumulated result &lt;code&gt;a&lt;/code&gt; that is the result of any series of accumulator and combiner invocations, &lt;code&gt;a&lt;/code&gt; must be equivalent to &lt;code&gt;combiner.apply(a, supplier.get())&lt;/code&gt;.</source>
          <target state="translated">身份约束表示，对于任何部分累加的结果，将其与空结果容器组合必须产生等效的结果。也就是说，对于部分累加的结果 &lt;code&gt;a&lt;/code&gt; ，它是任何一系列累加器和合并器调用的结果， &lt;code&gt;a&lt;/code&gt; 必须等效于 &lt;code&gt;combiner.apply(a, supplier.get())&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83d98d6fb589e5da25e66f09be93daaabac69244" translate="yes" xml:space="preserve">
          <source>The identity of a function object produced by deserializing the serialized form is unpredictable, and therefore identity-sensitive operations (such as reference equality, object locking, and &lt;code&gt;System.identityHashCode()&lt;/code&gt; may produce different results in different implementations, or even upon different deserializations in the same implementation.</source>
          <target state="translated">通过反序列化序列化形式产生的功能对象的身份是不可预测的，因此，身份敏感的操作（例如引用相等，对象锁定和 &lt;code&gt;System.identityHashCode()&lt;/code&gt; )可能在不同的实现中甚至在不同的反序列化中产生不同的结果。相同的实现。</target>
        </trans-unit>
        <trans-unit id="a98ad4c844ccaeef716227f0929dd675df827093" translate="yes" xml:space="preserve">
          <source>The identity of a remote client of the JMX Remote API.</source>
          <target state="translated">JMX远程API的远程客户端的身份。</target>
        </trans-unit>
        <trans-unit id="19fe17d5c256a0124b906229dac6f2ed7989ca1a" translate="yes" xml:space="preserve">
          <source>The identity of an element involves implicit state not directly accessible from the element's methods, including state about the presence of unrelated types. Element objects created by different implementations of these interfaces should</source>
          <target state="translated">元素的身份涉及到不能从元素的方法中直接访问的隐含状态,包括关于不相关类型存在的状态。由这些接口的不同实现所创建的元素对象应该是</target>
        </trans-unit>
        <trans-unit id="c084425fd634ec561ebf2e67c297bae72cc52903" translate="yes" xml:space="preserve">
          <source>The identity of the value does not matter, only the actual value. For example, &lt;code&gt;TextAttribute.WEIGHT_BOLD&lt;/code&gt; and &lt;code&gt;Float.valueOf(2.0f)&lt;/code&gt; indicate the same &lt;code&gt;WEIGHT&lt;/code&gt;.</source>
          <target state="translated">值的身份无关紧要，只取决于实际值。例如， &lt;code&gt;TextAttribute.WEIGHT_BOLD&lt;/code&gt; 和 &lt;code&gt;Float.valueOf(2.0f)&lt;/code&gt; 表示相同的 &lt;code&gt;WEIGHT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50a057a048396611cc27a43faa15d99cedba2e6f" translate="yes" xml:space="preserve">
          <source>The illegal Unicode code point</source>
          <target state="translated">非法Unicode码点</target>
        </trans-unit>
        <trans-unit id="f118b75c2086f0962577e58b3b46529624d030c6" translate="yes" xml:space="preserve">
          <source>The illegal charset name</source>
          <target state="translated">非法字符集名称</target>
        </trans-unit>
        <trans-unit id="213794262dbeac8bb81e8cb800deb620866f8fde" translate="yes" xml:space="preserve">
          <source>The image contain a single static image.</source>
          <target state="translated">该图像包含单个静态图像。</target>
        </trans-unit>
        <trans-unit id="4e094f4a0323dac0ba9d9262bdc8616f1eab3127" translate="yes" xml:space="preserve">
          <source>The image contain a single static image. The pixels will be defined in calls to the setPixels methods and then the imageComplete method will be called with the STATICIMAGEDONE flag after which no more image data will be delivered. An example of an image type which would not meet these criteria would be the output of a video feed, or the representation of a 3D rendering being manipulated by the user. The end of each frame in those types of images will be indicated by calling imageComplete with the SINGLEFRAMEDONE flag.</source>
          <target state="translated">图像包含一个单一的静态图像。像素将在调用setPixels方法时被定义,然后imageComplete方法将被调用STATICIMAGEDONE标志,之后将不再传送图像数据。一个不符合这些标准的图像类型的例子是视频馈送的输出,或者用户正在操作的3D渲染的表示。在这些类型的图像中,每一帧的结束将通过调用带有SINGLEFRAMEDONE标志的imageComplete来表示。</target>
        </trans-unit>
        <trans-unit id="650107fc502ca4b1e9a1b9ac9eb0045aaaf8cb53" translate="yes" xml:space="preserve">
          <source>The image contents may be supplied later using the &lt;code&gt;replacePixels&lt;/code&gt; method. The insertion is not complete until a call to &lt;code&gt;endInsertEmpty&lt;/code&gt; occurs. Calls to &lt;code&gt;prepareReplacePixels&lt;/code&gt;, &lt;code&gt;replacePixels&lt;/code&gt;, and &lt;code&gt;endReplacePixels&lt;/code&gt; may occur between calls to &lt;code&gt;prepareInsertEmpty&lt;/code&gt; and &lt;code&gt;endInsertEmpty&lt;/code&gt;. However, calls to &lt;code&gt;prepareInsertEmpty&lt;/code&gt; cannot be nested, and calls to &lt;code&gt;prepareWriteEmpty&lt;/code&gt; and &lt;code&gt;prepareInsertEmpty&lt;/code&gt; may not be interspersed.</source>
          <target state="translated">稍后可以使用 &lt;code&gt;replacePixels&lt;/code&gt; 方法提供图像内容。直到对 &lt;code&gt;endInsertEmpty&lt;/code&gt; 的调用才完成插入。对 &lt;code&gt;prepareInsertEmpty&lt;/code&gt; 和 &lt;code&gt;endInsertEmpty&lt;/code&gt; 的调用之间可能发生对 &lt;code&gt;prepareReplacePixels&lt;/code&gt; ， &lt;code&gt;replacePixels&lt;/code&gt; 和 &lt;code&gt;endReplacePixels&lt;/code&gt; 的调用。但是，对 &lt;code&gt;prepareInsertEmpty&lt;/code&gt; 的调用不能嵌套，对 &lt;code&gt;prepareWriteEmpty&lt;/code&gt; 和 &lt;code&gt;prepareInsertEmpty&lt;/code&gt; 的调用也不能插入。</target>
        </trans-unit>
        <trans-unit id="82167449f7a5a3fc43bd8123d78d62ad91b97c2a" translate="yes" xml:space="preserve">
          <source>The image creation process was deliberately aborted.</source>
          <target state="translated">故意中止了图像创建过程。</target>
        </trans-unit>
        <trans-unit id="0b03f1837d3a60fb7040339f17e7b24479ff74be" translate="yes" xml:space="preserve">
          <source>The image data is downloaded asynchronously in another thread, and an appropriately scaled screen representation of the image is generated.</source>
          <target state="translated">图像数据在另一个线程中异步下载,并生成适当比例的图像屏幕表示。</target>
        </trans-unit>
        <trans-unit id="1d33b4e926de1659092487a8d33def5c221eb13e" translate="yes" xml:space="preserve">
          <source>The image data may take the form of either a &lt;code&gt;RenderedImage&lt;/code&gt;, or a &lt;code&gt;Raster&lt;/code&gt;. Reader methods that return an &lt;code&gt;IIOImage&lt;/code&gt; will always return a &lt;code&gt;BufferedImage&lt;/code&gt; using the &lt;code&gt;RenderedImage&lt;/code&gt; reference. Writer methods that accept an &lt;code&gt;IIOImage&lt;/code&gt; will always accept a &lt;code&gt;RenderedImage&lt;/code&gt;, and may optionally accept a &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">图像数据可以采用 &lt;code&gt;RenderedImage&lt;/code&gt; 或 &lt;code&gt;Raster&lt;/code&gt; 的形式。返回 &lt;code&gt;IIOImage&lt;/code&gt; 的 Reader方法将始终使用 &lt;code&gt;RenderedImage&lt;/code&gt; 引用返回 &lt;code&gt;BufferedImage&lt;/code&gt; 。接受 &lt;code&gt;IIOImage&lt;/code&gt; 的 Writer方法将始终接受 &lt;code&gt;RenderedImage&lt;/code&gt; ，并且可以选择接受 &lt;code&gt;Raster&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9634015de44fa10469d261b81d7bd8321a94836" translate="yes" xml:space="preserve">
          <source>The image is complete and there are no more pixels or frames to be delivered.</source>
          <target state="translated">图像已经完成,没有更多的像素或帧需要交付。</target>
        </trans-unit>
        <trans-unit id="ffbcc0db34f9156b59f14025e1a392763c0be17b" translate="yes" xml:space="preserve">
          <source>The image is drawn inside the specified rectangle of this graphics context's coordinate space, and is scaled if necessary. Transparent pixels are drawn in the specified background color. This operation is equivalent to filling a rectangle of the width and height of the specified image with the given color and then drawing the image on top of it, but possibly more efficient.</source>
          <target state="translated">图像被绘制在此图形上下文坐标空间的指定矩形内,并在必要时进行缩放。透明像素以指定的背景色绘制。这个操作相当于用给定的颜色填充指定图像的宽度和高度的矩形,然后在上面绘制图像,但效率可能更高。</target>
        </trans-unit>
        <trans-unit id="31a613492c855530e0498145a239fd12f412a1fa" translate="yes" xml:space="preserve">
          <source>The image is drawn inside the specified rectangle of this graphics context's coordinate space, and is scaled if necessary. Transparent pixels do not affect whatever pixels are already there.</source>
          <target state="translated">图像被绘制在此图形上下文坐标空间的指定矩形内,并在必要时进行缩放。透明像素不会影响已经存在的任何像素。</target>
        </trans-unit>
        <trans-unit id="cbf52c5d0d3f8fc66a94d98b15dd5920f92b3d76" translate="yes" xml:space="preserve">
          <source>The image may contain transparent areas, and thus the reported bounds may be larger than the visible splash screen image on the screen.</source>
          <target state="translated">图像可能包含透明区域,因此报告的边界可能大于屏幕上可见的飞溅屏幕图像。</target>
        </trans-unit>
        <trans-unit id="2b29540773a3e6ba434d2b097fffa0c79873a7a0" translate="yes" xml:space="preserve">
          <source>The image may contain transparent areas, and thus the reported size may be larger than the visible splash screen image on the screen.</source>
          <target state="translated">图像可能包含透明区域,因此报告的尺寸可能大于屏幕上可见的闪屏图像。</target>
        </trans-unit>
        <trans-unit id="bcee0bb2e49666ba14873e56d922ec392d842b66" translate="yes" xml:space="preserve">
          <source>The image returned will be formatted according to the first &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; returned from &lt;code&gt;getImageTypes&lt;/code&gt;.</source>
          <target state="translated">返回的图像将根据从 &lt;code&gt;getImageTypes&lt;/code&gt; 返回的第一个 &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; 进行格式化。</target>
        </trans-unit>
        <trans-unit id="1bf117f3a022e647194270c3833ce7a8f6d654f4" translate="yes" xml:space="preserve">
          <source>The imageComplete method is called when the ImageProducer is finished delivering all of the pixels that the source image contains, or when a single frame of a multi-frame animation has been completed, or when an error in loading or producing the image has occurred.</source>
          <target state="translated">当ImageProducer完成交付源图像所包含的所有像素时,或者当多帧动画的单帧完成时,或者当加载或制作图像时发生错误时,都会调用imageComplete方法。</target>
        </trans-unit>
        <trans-unit id="fe307a07bd67c06b79d1756e6794cbc38cca603b" translate="yes" xml:space="preserve">
          <source>The imageComplete method is called when the ImageProducer is finished delivering all of the pixels that the source image contains, or when a single frame of a multi-frame animation has been completed, or when an error in loading or producing the image has occurred. The ImageConsumer should remove itself from the list of consumers registered with the ImageProducer at this time, unless it is interested in successive frames.</source>
          <target state="translated">当ImageProducer完成交付源图像所包含的所有像素时,或者当多帧动画的单帧已经完成时,或者当加载或制作图像时发生错误时,就会调用imageComplete方法。此时ImageConsumer应该从ImageProducer注册的消费者列表中删除自己,除非它对连续的帧感兴趣。</target>
        </trans-unit>
        <trans-unit id="dc3738c35dfe132a23ab59ac962e72a1fc1c4392" translate="yes" xml:space="preserve">
          <source>The imageComplete method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">imageComplete方法是ImageConsumer API的一部分,该类必须实现该方法来检索像素。</target>
        </trans-unit>
        <trans-unit id="92ba74861aa993d420846e0ec04af01afba0f5ee" translate="yes" xml:space="preserve">
          <source>The immediate children of the container are printed with an indentation of &lt;code&gt;indent+1&lt;/code&gt;. The children of those children are printed at &lt;code&gt;indent+2&lt;/code&gt; and so on.</source>
          <target state="translated">容器的直接子项带有缩进 &lt;code&gt;indent+1&lt;/code&gt; 。这些孩子的孩子将以 &lt;code&gt;indent+2&lt;/code&gt; 进行打印，依此类推。</target>
        </trans-unit>
        <trans-unit id="a8c4a80175dda61de0d20199a8a735a2ef57e13d" translate="yes" xml:space="preserve">
          <source>The impact of the diagnostic command, this value is the same as the one printed in the 'impact' section of the help message of the diagnostic command, and it is different from the getImpact() of the MBeanOperationInfo</source>
          <target state="translated">诊断命令的影响,这个值与诊断命令的帮助信息中的'影响'部分打印的值相同,它与MBeanOperationInfo的getImpact()有所不同</target>
        </trans-unit>
        <trans-unit id="7b5154802a9e7d900d0991f4a290316f47536854" translate="yes" xml:space="preserve">
          <source>The implementation MUST support &lt;code&gt;DOMStructure&lt;/code&gt;s as the mechanism for the application to specify extensible content (any elements or mixed content).</source>
          <target state="translated">实现必须支持 &lt;code&gt;DOMStructure&lt;/code&gt; 作为应用程序指定可扩展内容（任何元素或混合内容）的机制。</target>
        </trans-unit>
        <trans-unit id="33c42e040f3646db66a28b2d1f494d78e84172c2" translate="yes" xml:space="preserve">
          <source>The implementation chooses a buffer size, which is measured in bytes but which encompasses an integral number of sample frames. The buffer size that the system has chosen may be queried by subsequently calling &lt;a href=&quot;dataline#getBufferSize()&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该实现选择一个缓冲区大小，该缓冲区大小以字节为单位，但包含整数个样本帧。系统选择的缓冲区大小可以通过随后调用&lt;a href=&quot;dataline#getBufferSize()&quot;&gt; &lt;code&gt;DataLine.getBufferSize()&lt;/code&gt; &lt;/a&gt;来查询。</target>
        </trans-unit>
        <trans-unit id="e197f5a9ad36c59e97de5e88bba346ebf104c3a2" translate="yes" xml:space="preserve">
          <source>The implementation chooses a buffer size, which is measured in bytes but which encompasses an integral number of sample frames. The buffer size that the system has chosen may be queried by subsequently calling &lt;a href=&quot;dataline#getBufferSize()&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该实现选择一个缓冲区大小，该缓冲区大小以字节为单位，但包含整数个样本帧。系统选择的缓冲区大小可以通过随后调用&lt;a href=&quot;dataline#getBufferSize()&quot;&gt; &lt;code&gt;DataLine.getBufferSize()&lt;/code&gt; &lt;/a&gt;来查询。</target>
        </trans-unit>
        <trans-unit id="f6325bd4afd820329b33a81aad4acb98f22f1739" translate="yes" xml:space="preserve">
          <source>The implementation chooses a buffer size, which is measured in bytes but which encompasses an integral number of sample frames. The buffer size that the system has chosen may be queried by subsequently calling &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">该实现选择一个缓冲区大小，该缓冲区大小以字节为单位，但包含整数个样本帧。系统选择的缓冲区大小可以通过随后调用 &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 来查询。</target>
        </trans-unit>
        <trans-unit id="5d8ee360abb575ae83e0aad557bc14c7679e4103" translate="yes" xml:space="preserve">
          <source>The implementation chooses a buffer size, which is measured in bytes but which encompasses an integral number of sample frames. The buffer size that the system has chosen may be queried by subsequently calling &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">该实现选择一个缓冲区大小，该缓冲区大小以字节为单位，但包含整数个样本帧。系统选择的缓冲区大小可以通过随后调用 &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 来查询。</target>
        </trans-unit>
        <trans-unit id="09ccd30cdba3e587d31b9f21539df9dbcdfde8d9" translate="yes" xml:space="preserve">
          <source>The implementation conforms to &lt;a href=&quot;http://www.ietf.org/rfc/rfc2965.txt&quot;&gt;RFC 2965&lt;/a&gt;, section 3.3.</source>
          <target state="translated">该实现符合&lt;a href=&quot;http://www.ietf.org/rfc/rfc2965.txt&quot;&gt;RFC 2965&lt;/a&gt;第3.3节。</target>
        </trans-unit>
        <trans-unit id="f28c86dd75718b663c40681fbf77456325447397" translate="yes" xml:space="preserve">
          <source>The implementation conforms to &lt;a href=&quot;https://www.ietf.org/rfc/rfc2965.txt&quot;&gt;RFC 2965&lt;/a&gt;, section 3.3.</source>
          <target state="translated">该实现符合&lt;a href=&quot;https://www.ietf.org/rfc/rfc2965.txt&quot;&gt;RFC 2965&lt;/a&gt;第3.3节。</target>
        </trans-unit>
        <trans-unit id="14e2c00678648d5a3c84fa75329fd77db6950875" translate="yes" xml:space="preserve">
          <source>The implementation creates a &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt; spliterator from the set's &lt;code&gt;Iterator&lt;/code&gt;. The spliterator inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the set's iterator. The created &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">实现从集合的 &lt;code&gt;Iterator&lt;/code&gt; 创建一个&lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;后期绑定&lt;/a&gt;&lt;/em&gt;分离器。分隔器继承了集合的迭代器&lt;em&gt;的快速失败&lt;/em&gt;属性。创建的 &lt;code&gt;Spliterator&lt;/code&gt; 还会报告&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5223f3996aa8fb012e6b7bd1bc47d31df8164864" translate="yes" xml:space="preserve">
          <source>The implementation ensures that the synthesizer is brought to a consistent state when jumping to the loop start point by sending appropriate controllers, pitch bend, and program change events.</source>
          <target state="translated">该实现通过发送相应的控制器、音高弯曲和程序变化事件,确保合成器在跳转到循环起始点时进入一致状态。</target>
        </trans-unit>
        <trans-unit id="aa213c32e8080f7d4be6c40003d301082c11e27e" translate="yes" xml:space="preserve">
          <source>The implementation first checks to see if an expression with this value has already been written.</source>
          <target state="translated">执行时首先检查是否已经写了一个带有这个值的表达式。</target>
        </trans-unit>
        <trans-unit id="81e190cedf9e21a5a2481992af348a4d3f5f90b0" translate="yes" xml:space="preserve">
          <source>The implementation first checks to see if an expression with this value has already been written. If not, the expression is cloned, using the same procedure as &lt;code&gt;writeStatement&lt;/code&gt;, and the value of this expression is reconciled with the value of the cloned expression by calling &lt;code&gt;writeObject&lt;/code&gt;.</source>
          <target state="translated">该实现首先检查是否已写入具有该值的表达式。如果不是，则使用与 &lt;code&gt;writeStatement&lt;/code&gt; 相同的过程克隆表达式，并通过调用 &lt;code&gt;writeObject&lt;/code&gt; 将该表达式的值与克隆表达式的值进行协调。</target>
        </trans-unit>
        <trans-unit id="bc0e80d3ab7d372a4a0c07c1b90ed127df13f7fa" translate="yes" xml:space="preserve">
          <source>The implementation in this class just returns &lt;a href=&quot;#DEFAULT_VALUE&quot;&gt;&lt;code&gt;DEFAULT_VALUE&lt;/code&gt;&lt;/a&gt;; subclasses will commonly override this method.</source>
          <target state="translated">此类中的实现只返回&lt;a href=&quot;#DEFAULT_VALUE&quot;&gt; &lt;code&gt;DEFAULT_VALUE&lt;/code&gt; &lt;/a&gt; ; 子类通常会覆盖此方法。</target>
        </trans-unit>
        <trans-unit id="8d9004fc45aa79bbeb3638cc4e2594da5ab2ce28" translate="yes" xml:space="preserve">
          <source>The implementation in this class throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt; and performs no other action.</source>
          <target state="translated">此类中的实现将引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; ,并且不执行其他任何操作。</target>
        </trans-unit>
        <trans-unit id="3e4117171efd1e562e9775eafdf56901e4eb9408" translate="yes" xml:space="preserve">
          <source>The implementation in this class throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">此类中的实现抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb31750f24b5622b73c269c716ddbdb794191239" translate="yes" xml:space="preserve">
          <source>The implementation in this class throws an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; for the indicated conditions; overriding methods may choose to do otherwise.</source>
          <target state="translated">此类中的实现针对指示的条件引发 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; ；否则，将抛出异常。替代方法可以选择其他方式。</target>
        </trans-unit>
        <trans-unit id="e41c6d1c80d2a90b6d969a9d8d80248e7a24b028" translate="yes" xml:space="preserve">
          <source>The implementation in this class throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">此类中的实现抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2d2e0430763706ada574ef1a18c66c5e6280d189" translate="yes" xml:space="preserve">
          <source>The implementation is responsible of associating the appropriate media type with the serialized data.</source>
          <target state="translated">实现负责将适当的媒体类型与序列化数据关联起来。</target>
        </trans-unit>
        <trans-unit id="082ae6d11432c0c07be7bb9e88e34002e4494502" translate="yes" xml:space="preserve">
          <source>The implementation may constrain the set of processes by which the interprocess token may be imported, either as a function of local security policy, or as a result of implementation decisions. For example, some implementations may constrain contexts to be passed only between processes that run under the same account, or which are part of the same process group.</source>
          <target state="translated">作为本地安全策略的功能,或作为实施决策的结果,实施可限制导入进程间令牌的进程集。例如,一些实施方案可能限制上下文只能在同一账户下运行的进程之间或属于同一进程组的进程之间传递。</target>
        </trans-unit>
        <trans-unit id="9cb9f909f198fcf0061370bf797f93bff7fa7ff4" translate="yes" xml:space="preserve">
          <source>The implementation method is described with a method handle. In theory, any method handle could be used. Currently supported are direct method handles representing invocation of virtual, interface, constructor and static methods.</source>
          <target state="translated">实现方法是用方法句柄来描述的。理论上,可以使用任何方法句柄。目前支持的是直接方法句柄,代表虚拟方法、接口方法、构造方法和静态方法的调用。</target>
        </trans-unit>
        <trans-unit id="e0f9a4ef58c41d6065832b1b74a1b3fa3eaa4f52" translate="yes" xml:space="preserve">
          <source>The implementation must take the input object and add to it. The implementation defines the logic of the addition and is responsible for documenting that logic. It may use any method on &lt;code&gt;Temporal&lt;/code&gt; to query the temporal object and perform the addition. The returned object must have the same observable type as the input object</source>
          <target state="translated">实现必须接受输入对象并将其添加到其中。该实现定义了添加逻辑，并负责记录该逻辑。它可以使用 &lt;code&gt;Temporal&lt;/code&gt; 上的任何方法来查询时间对象并执行加法。返回的对象必须具有与输入对象相同的可观察类型</target>
        </trans-unit>
        <trans-unit id="3e56e06001459e0c1e6e272244337fd5cebdd144" translate="yes" xml:space="preserve">
          <source>The implementation must take the input object and adjust it. The implementation defines the logic of the adjustment and is responsible for documenting that logic. It may use any method on &lt;code&gt;Temporal&lt;/code&gt; to query the temporal object and perform the adjustment. The returned object must have the same observable type as the input object</source>
          <target state="translated">实现必须采用输入对象并对其进行调整。该实现定义了调整的逻辑，并负责记录该逻辑。它可以使用 &lt;code&gt;Temporal&lt;/code&gt; 上的任何方法来查询时间对象并执行调整。返回的对象必须具有与输入对象相同的可观察类型</target>
        </trans-unit>
        <trans-unit id="2da52b48d84c4b30715e4af7716531223f872291" translate="yes" xml:space="preserve">
          <source>The implementation must take the input object and query it. The implementation defines the logic of the query and is responsible for documenting that logic. It may use any method on &lt;code&gt;TemporalAccessor&lt;/code&gt; to determine the result. The input object must not be altered.</source>
          <target state="translated">实现必须接受输入对象并对其进行查询。该实现定义查询的逻辑，并负责记录该逻辑。它可以使用 &lt;code&gt;TemporalAccessor&lt;/code&gt; 上的任何方法来确定结果。输入对象不得更改。</target>
        </trans-unit>
        <trans-unit id="2dacb5e6e4d33c85aaf3a8b2840566262196b216" translate="yes" xml:space="preserve">
          <source>The implementation must take the input object and subtract from it. The implementation defines the logic of the subtraction and is responsible for documenting that logic. It may use any method on &lt;code&gt;Temporal&lt;/code&gt; to query the temporal object and perform the subtraction. The returned object must have the same observable type as the input object</source>
          <target state="translated">实现必须接受输入对象并从中减去。该实现定义了减法逻辑，并负责记录该逻辑。它可以使用 &lt;code&gt;Temporal&lt;/code&gt; 上的任何方法来查询时间对象并执行减法。返回的对象必须具有与输入对象相同的可观察类型</target>
        </trans-unit>
        <trans-unit id="6d3f978b3deb38b54e9338fc087195544cf28b4b" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;a href=&quot;../spi/executioncontrol&quot;&gt;&lt;code&gt;ExecutionControl&lt;/code&gt;&lt;/a&gt; that the JShell-core uses by default.</source>
          <target state="translated">JShell核心默认使用的&lt;a href=&quot;../spi/executioncontrol&quot;&gt; &lt;code&gt;ExecutionControl&lt;/code&gt; &lt;/a&gt;的实现。</target>
        </trans-unit>
        <trans-unit id="68747f9e95ca7177fd286eeeb632eb3b041015ac" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;a href=&quot;../spi/executioncontrol&quot;&gt;&lt;code&gt;ExecutionControl&lt;/code&gt;&lt;/a&gt; that the JShell-core uses by default. Launches a remote process -- the &quot;remote agent&quot;. Interfaces to the remote agent over a socket and via JDI. Designed to work with &lt;a href=&quot;remoteexecutioncontrol&quot;&gt;&lt;code&gt;RemoteExecutionControl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JShell核心默认使用的&lt;a href=&quot;../spi/executioncontrol&quot;&gt; &lt;code&gt;ExecutionControl&lt;/code&gt; &lt;/a&gt;的实现。启动一个远程进程-&amp;ldquo;远程代理&amp;rdquo;。通过套接字并通过JDI与远程代理接口。设计用于&lt;a href=&quot;remoteexecutioncontrol&quot;&gt; &lt;code&gt;RemoteExecutionControl&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14c4605c1fc41a74a7285633c2cb13fc37606aa9" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;code&gt;ComboPopup&lt;/code&gt; that is used to show the popup.</source>
          <target state="translated">用于显示弹出窗口的 &lt;code&gt;ComboPopup&lt;/code&gt; 的实现。</target>
        </trans-unit>
        <trans-unit id="71ce8f2e81c8d3437a0a5ec06854dc19be3b1bfa" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;code&gt;replaceEditor&lt;/code&gt; should be coordinated with the &lt;code&gt;createEditor&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;replaceEditor&lt;/code&gt; 的实现应与 &lt;code&gt;createEditor&lt;/code&gt; 方法协调。</target>
        </trans-unit>
        <trans-unit id="bd649c4c9a306542067e2337ea94241b40146d2f" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;code&gt;setSeed&lt;/code&gt; by class &lt;code&gt;Random&lt;/code&gt; happens to use only 48 bits of the given seed. In general, however, an overriding method may use all 64 bits of the &lt;code&gt;long&lt;/code&gt; argument as a seed value.</source>
          <target state="translated">类 &lt;code&gt;Random&lt;/code&gt; 的 &lt;code&gt;setSeed&lt;/code&gt; 的实现恰好只使用给定种子的48位。但是，通常，覆盖方法可以将 &lt;code&gt;long&lt;/code&gt; 参数的所有64位用作种子值。</target>
        </trans-unit>
        <trans-unit id="35791792ef6356de1f2cbc30dca9984d8aef3776" translate="yes" xml:space="preserve">
          <source>The implementation of a &lt;code&gt;ListResourceBundle&lt;/code&gt; subclass must be thread-safe if it's simultaneously used by multiple threads. The default implementations of the methods in this class are thread-safe.</source>
          <target state="translated">如果多个线程同时使用 &lt;code&gt;ListResourceBundle&lt;/code&gt; 子类，则该实现必须是线程安全的。此类中方法的默认实现是线程安全的。</target>
        </trans-unit>
        <trans-unit id="dbd88d54003995fa128d1a669f95113fbbc46b8d" translate="yes" xml:space="preserve">
          <source>The implementation of a &lt;code&gt;PropertyResourceBundle&lt;/code&gt; subclass must be thread-safe if it's simultaneously used by multiple threads. The default implementations of the non-abstract methods in this class are thread-safe.</source>
          <target state="translated">如果 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 子类的多个线程同时使用，则该子类的实现必须是线程安全的。此类中非抽象方法的默认实现是线程安全的。</target>
        </trans-unit>
        <trans-unit id="8f2a4a09568db481af411da9df2b6666a394506d" translate="yes" xml:space="preserve">
          <source>The implementation of a &lt;code&gt;ResourceBundle&lt;/code&gt; subclass must be thread-safe if it's simultaneously used by multiple threads. The default implementations of the non-abstract methods in this class, and the methods in the direct known concrete subclasses &lt;code&gt;ListResourceBundle&lt;/code&gt; and &lt;code&gt;PropertyResourceBundle&lt;/code&gt; are thread-safe.</source>
          <target state="translated">如果多个线程同时使用 &lt;code&gt;ResourceBundle&lt;/code&gt; 子类的实现，则该实现必须是线程安全的。此类中非抽象方法的默认实现以及直接已知的具体子类 &lt;code&gt;ListResourceBundle&lt;/code&gt; 和 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 中的方法是线程安全的。</target>
        </trans-unit>
        <trans-unit id="218d96d7349cb8c6c787276d3ab79190cbbdb85f" translate="yes" xml:space="preserve">
          <source>The implementation of a look and feel may choose to ignore this property.</source>
          <target state="translated">外观的实现可以选择忽略这个属性。</target>
        </trans-unit>
        <trans-unit id="c837f88953461d8bc6a51ac1bbb4fcd58eec5398" translate="yes" xml:space="preserve">
          <source>The implementation of class &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; does not guarantee that equivalent data flavors will have the same serialized representation. &lt;code&gt;DocFlavor&lt;/code&gt; does, and can be used in services which need this.</source>
          <target state="translated">类 &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; 的实现不保证等效的数据类型将具有相同的序列化表示形式。 &lt;code&gt;DocFlavor&lt;/code&gt; 可以，并且可以在需要此服务的服务中使用。</target>
        </trans-unit>
        <trans-unit id="967f67768043a0e5a6e3ce4151e32a33e8442d96" translate="yes" xml:space="preserve">
          <source>The implementation of class &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; does not guarantee that equivalent data flavors will have the same serialized representation. DocFlavor does, and can be used in services which need this.</source>
          <target state="translated">类 &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; 的实现不保证等效的数据类型将具有相同的序列化表示形式。DocFlavor可以，并且可以在需要此服务的服务中使用。</target>
        </trans-unit>
        <trans-unit id="5aa595b341b716ddfe95468de8d46da61dd15f01" translate="yes" xml:space="preserve">
          <source>The implementation of class &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; includes a human presentable name as part of the serialized representation. This is not appropriate as part of a service matching constraint.</source>
          <target state="translated">类 &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; 的实现包含人类可表示的名称，作为序列化表示的一部分。这不适合作为服务匹配约束的一部分。</target>
        </trans-unit>
        <trans-unit id="6d605e7356769fdd893c4e8460accfdb98a6d781" translate="yes" xml:space="preserve">
          <source>The implementation of selectors, selectable channels, and selection keys can be replaced by &quot;plugging in&quot; an alternative definition or instance of the &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; class defined in the &lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.channels.spi&lt;/code&gt;&lt;/a&gt; package. It is not expected that many developers will actually make use of this facility; it is provided primarily so that sophisticated users can take advantage of operating-system-specific I/O-multiplexing mechanisms when very high performance is required.</source>
          <target state="translated">选择器，可选通道和选择键的实现可以通过&amp;ldquo;插入&amp;rdquo; &lt;a href=&quot;spi/package-summary&quot;&gt; &lt;code&gt;java.nio.channels.spi&lt;/code&gt; &lt;/a&gt;包中定义的&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;类的替代定义或实例来替换。预计不会有许多开发人员实际使用此功能。它主要是为了使高级用户在需要非常高的性能时可以利用特定于操作系统的I / O多路复用机制。</target>
        </trans-unit>
        <trans-unit id="f3f640b6933929080a0a003b9d5726689efac7dc" translate="yes" xml:space="preserve">
          <source>The implementation of selectors, selectable channels, and selection keys can be replaced by &quot;plugging in&quot; an alternative definition or instance of the &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; class defined in the &lt;code&gt;&lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.channels.spi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package. It is not expected that many developers will actually make use of this facility; it is provided primarily so that sophisticated users can take advantage of operating-system-specific I/O-multiplexing mechanisms when very high performance is required.</source>
          <target state="translated">选择器，可选通道和选择键的实现可以通过&amp;ldquo;插入&amp;rdquo; &lt;code&gt;&lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.channels.spi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 包中定义的&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;类的替代定义或实例来替换。预计不会有许多开发人员实际使用此功能。它主要是为了使高级用户在需要非常高的性能时可以利用特定于操作系统的I / O多路复用机制。</target>
        </trans-unit>
        <trans-unit id="a187657438deb477b8dd98f82159ddc1bb249b2a" translate="yes" xml:space="preserve">
          <source>The implementation of the &lt;code&gt;RowSet&lt;/code&gt; method &lt;code&gt;execute&lt;/code&gt; in the &lt;code&gt;JdbcRowSet&lt;/code&gt; reference implementation differs from that in the &lt;code&gt;CachedRowSet&lt;/code&gt; reference implementation to account for the different requirements of connected and disconnected &lt;code&gt;RowSet&lt;/code&gt; objects.</source>
          <target state="translated">在 &lt;code&gt;JdbcRowSet&lt;/code&gt; 参考实现中 &lt;code&gt;execute&lt;/code&gt; 的 &lt;code&gt;RowSet&lt;/code&gt; 方法的实现与在 &lt;code&gt;CachedRowSet&lt;/code&gt; 参考实现中执行的实现不同，以说明已连接和未连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象的不同要求。</target>
        </trans-unit>
        <trans-unit id="822ffb50765d2b429b6b3dd79cd26cf2aa79f154" translate="yes" xml:space="preserve">
          <source>The implementation of the &lt;code&gt;RowSet&lt;/code&gt; method &lt;code&gt;execute&lt;/code&gt; in the &lt;code&gt;JdbcRowSet&lt;/code&gt; reference implementation differs from that in the &lt;code&gt;CachedRowSet&lt;/code&gt;&amp;trade; reference implementation to account for the different requirements of connected and disconnected &lt;code&gt;RowSet&lt;/code&gt; objects.</source>
          <target state="translated">所述的实施 &lt;code&gt;RowSet&lt;/code&gt; 方法 &lt;code&gt;execute&lt;/code&gt; 在 &lt;code&gt;JdbcRowSet&lt;/code&gt; 的不同于在参考实现不同 &lt;code&gt;CachedRowSet&lt;/code&gt; &amp;trade;参考实现帐户连接和断开的不同要求 &lt;code&gt;RowSet&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="e5140dd892d98896590e3f8471080d842fc25e4f" translate="yes" xml:space="preserve">
          <source>The implementation of the following static methods</source>
          <target state="translated">以下静态方法的实现</target>
        </trans-unit>
        <trans-unit id="c6f39c9939ea586098262803c585de45d3f336cc" translate="yes" xml:space="preserve">
          <source>The implementation of the hook should return as soon as possible, to avoid blocking other Flight Recorder operations. The hook should emit one or more events of the specified type. When a hook is added, the interval at which the call is invoked is configurable using the &lt;code&gt;&quot;period&quot;&lt;/code&gt; setting.</source>
          <target state="translated">挂钩的实现应尽快返回，以避免阻塞其他Flight Recorder操作。挂钩应发出一个或多个指定类型的事件。添加挂钩后，可以使用 &lt;code&gt;&quot;period&quot;&lt;/code&gt; 设置来配置调用调用的时间间隔。</target>
        </trans-unit>
        <trans-unit id="5f19423ec0a494ae6494fd85f2b386a09303d0d4" translate="yes" xml:space="preserve">
          <source>The implementation of the method &lt;code&gt;SQLData.writeSQ&lt;/code&gt; calls the appropriate &lt;code&gt;SQLOutputImpl.writeXXX&lt;/code&gt; method(s) for writing each of the object's attributes in order. The attributes must be read from an &lt;code&gt;SQLInput&lt;/code&gt; input stream and written to an &lt;code&gt;SQLOutputImpl&lt;/code&gt; output stream in the same order in which they were listed in the SQL definition of the user-defined type.</source>
          <target state="translated">方法 &lt;code&gt;SQLData.writeSQ&lt;/code&gt; 的实现调用适当的 &lt;code&gt;SQLOutputImpl.writeXXX&lt;/code&gt; 方法，以按顺序写入每个对象的属性。必须从 &lt;code&gt;SQLInput&lt;/code&gt; 输入流中读取属性，并以用户定义类型的SQL定义中列出属性的顺序将其 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 输出流。</target>
        </trans-unit>
        <trans-unit id="f99b05ce7229c6e9c00c10671fd5556b39199a24" translate="yes" xml:space="preserve">
          <source>The implementation of the string concatenation operator is left to the discretion of a Java compiler, as long as the compiler ultimately conforms to</source>
          <target state="translated">字符串连接运算符的实现由Java编译器自行决定,只要编译器最终符合了</target>
        </trans-unit>
        <trans-unit id="a16aac757eee134d7254450b49a909f24adac216" translate="yes" xml:space="preserve">
          <source>The implementation of this &lt;code&gt;CachedRowSet&lt;/code&gt; object may obtain the the name internally from the &lt;code&gt;RowSetMetaDataImpl&lt;/code&gt; object.</source>
          <target state="translated">此 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象的实现可以从 &lt;code&gt;RowSetMetaDataImpl&lt;/code&gt; 对象内部获取名称。</target>
        </trans-unit>
        <trans-unit id="d1783d029ef344e41e430f17d5f10e6b3b15270a" translate="yes" xml:space="preserve">
          <source>The implementation of this Standard MBean (or MXBean).</source>
          <target state="translated">该标准MBean(或MXBean)的实现。</target>
        </trans-unit>
        <trans-unit id="8b58175546ebfe14f92898d0cbf17e52506a300e" translate="yes" xml:space="preserve">
          <source>The implementation of this method attempts to retrieve the user's Unix &lt;code&gt;Subject&lt;/code&gt; information by making a native Unix system call.</source>
          <target state="translated">此方法的实现尝试通过进行本地Unix系统调用来检索用户的Unix &lt;code&gt;Subject&lt;/code&gt; 信息。</target>
        </trans-unit>
        <trans-unit id="382a6dd38dda6c0a39223f62855989d45f555777" translate="yes" xml:space="preserve">
          <source>The implementation of this method authenticates a &lt;code&gt;Subject&lt;/code&gt;. For example, it may prompt for &lt;code&gt;Subject&lt;/code&gt; information such as a username and password and then attempt to verify the password. This method saves the result of the authentication attempt as private state within the LoginModule.</source>
          <target state="translated">此方法的实现对 &lt;code&gt;Subject&lt;/code&gt; 进行身份验证。例如，它可能会提示您输入 &lt;code&gt;Subject&lt;/code&gt; 信息（例如用户名和密码），然后尝试验证密码。此方法将身份验证尝试的结果保存为LoginModule中的私有状态。</target>
        </trans-unit>
        <trans-unit id="5411c087059bdfeffe2870127039654f07163654" translate="yes" xml:space="preserve">
          <source>The implementation of this method can be expressed as follows:</source>
          <target state="translated">本方法的实现可以表示为:。</target>
        </trans-unit>
        <trans-unit id="f858f34f76a8d32fba15b3e497ed1df2fe0bb20c" translate="yes" xml:space="preserve">
          <source>The implementation of this method may transform the supplied class file and return a new replacement class file.</source>
          <target state="translated">该方法的实现可以对提供的类文件进行转换,并返回一个新的替换类文件。</target>
        </trans-unit>
        <trans-unit id="189b4e42c525714ae069e5c16d67456217dfb5f7" translate="yes" xml:space="preserve">
          <source>The implementation of this method provided by the &lt;code&gt;Applet&lt;/code&gt; class does nothing.</source>
          <target state="translated">&lt;code&gt;Applet&lt;/code&gt; 类提供的此方法的实现不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="66d802063d5f107af40abcadc656ad92ba6e873a" translate="yes" xml:space="preserve">
          <source>The implementation of this method provided by the &lt;code&gt;Applet&lt;/code&gt; class returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Applet&lt;/code&gt; 类提供的此方法的实现返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a86e1e80207e9e386e4c654763035a03b4d2e4e7" translate="yes" xml:space="preserve">
          <source>The implementation of this method returns the process id as: &lt;a href=&quot;#toHandle()&quot;&gt;&lt;code&gt;toHandle().pid()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此方法的实现将流程ID返回为：&lt;a href=&quot;#toHandle()&quot;&gt; &lt;code&gt;toHandle().pid()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da217fb99c45be9261de17bf2e7721b7070d4e0c" translate="yes" xml:space="preserve">
          <source>The implementation of this method should return as soon as possible to avoid blocking normal operation of Flight Recorder.</source>
          <target state="translated">该方法的实现应尽快返回,以免阻断飞行记录仪的正常运行。</target>
        </trans-unit>
        <trans-unit id="5621f16ce87e09eca19aa3e0b40c7ee6b5d44b52" translate="yes" xml:space="preserve">
          <source>The implementation of this method will produce a second expression to represent the same expression in an environment that will exist when the stream is read. This is achieved simply by calling &lt;code&gt;writeObject&lt;/code&gt; on the target and all the arguments and building a new expression with the results.</source>
          <target state="translated">此方法的实现将生成第二个表达式，以表示在读取流时将存在的环境中的同一表达式。只需在目标和所有参数上调用 &lt;code&gt;writeObject&lt;/code&gt; 并使用结果构建一个新表达式即可实现。</target>
        </trans-unit>
        <trans-unit id="32201864694d5e4caa1ee710ebef56302cb24601" translate="yes" xml:space="preserve">
          <source>The implementation resolution mechanisms are &lt;a href=&quot;#DatatypeFactory.newInstance&quot;&gt;defined&lt;/a&gt; in this &lt;code&gt;Class&lt;/code&gt;'s documentation.</source>
          <target state="translated">实施解决机制&lt;a href=&quot;#DatatypeFactory.newInstance&quot;&gt;定义&lt;/a&gt;这 &lt;code&gt;Class&lt;/code&gt; 的文档。</target>
        </trans-unit>
        <trans-unit id="0f6c0c74d6ce56b3b7dcf48a3803936cda181fb0" translate="yes" xml:space="preserve">
          <source>The implementation should not do anything with the result of any of the result supplier, accumulator, or combiner functions other than to pass them again to the accumulator, combiner, or finisher functions, or return them to the caller of the reduction operation.</source>
          <target state="translated">除了将它们再次传递给累加器、组合器或终结器函数,或者将它们返回给还原操作的调用者之外,实现不应对任何结果提供者、累加器或组合器函数的结果做任何处理。</target>
        </trans-unit>
        <trans-unit id="c606b027d78d1c8b28b809bad80a66b9a67bf360" translate="yes" xml:space="preserve">
          <source>The implementation stabilizes the stack by anchoring a frame specific to the stack walking and ensures that the stack walking is performed above the anchored frame. When the stream object is closed or being reused, &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该实现方式通过锚定特定于堆垛行走的框架来稳定堆垛，并确保在锚固框架上方执行堆垛行走。当流对象关闭或被重用时，将抛出 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="764bc44f931b2a056f6de3d2e74007be7dab4252" translate="yes" xml:space="preserve">
          <source>The implementation takes equal advantage of ascending and descending order in its input array, and can take advantage of ascending and descending order in different parts of the same input array. It is well-suited to merging two or more sorted arrays: simply concatenate the arrays and sort the resulting array.</source>
          <target state="translated">该实现在其输入数组中平等地利用升序和降序,并且可以在同一输入数组的不同部分利用升序和降序。它非常适合合并两个或多个排序数组:简单地将数组连接起来,然后对产生的数组进行排序。</target>
        </trans-unit>
        <trans-unit id="20e810f071954672f66c3ff4da645466cee6a581" translate="yes" xml:space="preserve">
          <source>The implementation takes equal advantage of ascending and descending order in its input array, and can take advantage of ascending and descending order in different parts of the the same input array. It is well-suited to merging two or more sorted arrays: simply concatenate the arrays and sort the resulting array.</source>
          <target state="translated">该实现在其输入数组中平等地利用升序和降序,并且可以在同一输入数组的不同部分利用升序和降序。它非常适合合并两个或多个排序数组:简单地将数组连接起来,然后对产生的数组进行排序。</target>
        </trans-unit>
        <trans-unit id="d19f87950e204f701655c7eb90a32dffeb95482a" translate="yes" xml:space="preserve">
          <source>The implementation that observes events from the file system is intended to map directly on to the native file event notification facility where available, or to use a primitive mechanism, such as polling, when a native facility is not available. Consequently, many of the details on how events are detected, their timeliness, and whether their ordering is preserved are highly implementation specific. For example, when a file in a watched directory is modified then it may result in a single &lt;a href=&quot;standardwatcheventkinds#ENTRY_MODIFY&quot;&gt;&lt;code&gt;ENTRY_MODIFY&lt;/code&gt;&lt;/a&gt; event in some implementations but several events in other implementations. Short-lived files (meaning files that are deleted very quickly after they are created) may not be detected by primitive implementations that periodically poll the file system to detect changes.</source>
          <target state="translated">观察来自文件系统事件的实现旨在将其直接映射到可用的本机文件事件通知工具，或者在本机工具不可用时使用原始机制（例如轮询）。因此，有关如何检测事件，其及时性以及是否保留其顺序的许多细节都是高度特定于实现的。例如，当修改监视目录中的文件时，在某些实现中可能会导致单个&lt;a href=&quot;standardwatcheventkinds#ENTRY_MODIFY&quot;&gt; &lt;code&gt;ENTRY_MODIFY&lt;/code&gt; &lt;/a&gt;事件，而在其他实现中则导致多个事件。短期文件（意味着在创建文件后很快删除的文件）可能无法被原始的实现检测到，该实现会定期轮询文件系统以检测更改。</target>
        </trans-unit>
        <trans-unit id="c2d66d33c9220cc88ec7f77711dd3f7ca2bf80a6" translate="yes" xml:space="preserve">
          <source>The implementation title, version, and vendor strings identify an implementation and are made available conveniently to enable accurate reporting of the packages involved when a problem occurs. The contents all three implementation strings are vendor specific. The implementation version strings have no specified syntax and should only be compared for equality with desired version identifiers.</source>
          <target state="translated">实现的标题、版本和供应商字符串标识了一个实现,并在出现问题时,方便地提供给用户,以便准确地报告所涉及的软件包。这三个实现字符串的内容都是针对厂商的。实现版本字符串没有指定的语法,只能与所需的版本标识符进行比较,以确定是否相同。</target>
        </trans-unit>
        <trans-unit id="f348190d718bffe13008c0ecdf1745c28e601e6d" translate="yes" xml:space="preserve">
          <source>The implementation typically achieves this goal by producing a series of &quot;what happened&quot; statements involving the &lt;code&gt;oldInstance&lt;/code&gt; and its publicly available state. These statements are sent to the output stream using its &lt;code&gt;writeExpression&lt;/code&gt; method which returns an expression involving elements in a cloned environment simulating the state of an input stream during reading. Each statement returned will have had all instances the old environment replaced with objects which exist in the new one. In particular, references to the target of these statements, which start out as references to &lt;code&gt;oldInstance&lt;/code&gt; are returned as references to the &lt;code&gt;newInstance&lt;/code&gt; instead. Executing these statements effects an incremental alignment of the state of the two objects as a series of modifications to the objects in the new environment. By the time the initialize method returns it should be impossible to tell the two instances apart by using their public APIs. Most importantly, the sequence of steps that were used to make these objects appear equivalent will have been recorded by the output stream and will form the actual output when the stream is flushed.</source>
          <target state="translated">该实现通常通过产生一系列涉及 &lt;code&gt;oldInstance&lt;/code&gt; 及其公共可用状态的&amp;ldquo;发生了什么&amp;rdquo;语句来实现此目标。这些语句使用其 &lt;code&gt;writeExpression&lt;/code&gt; 方法发送到输出流，该方法返回一个表达式，该表达式涉及克隆环境中的元素，这些元素在读取过程中模拟输入流的状态。返回的每条语句都将旧环境中的所有实例替换为新环境中存在的对象。特别是，对这些语句目标的引用始于对 &lt;code&gt;oldInstance&lt;/code&gt; 的引用，作为对 &lt;code&gt;newInstance&lt;/code&gt; 的引用返回代替。执行这些语句将对两个对象的状态进行增量对齐，作为对新环境中对象的一系列修改。到初始化方法返回时，应该不可能通过使用它们的公共API来区分两个实例。最重要的是，用于使这些对象看起来相等的步骤顺序将由输出流记录，并在刷新流时形成实际输出。</target>
        </trans-unit>
        <trans-unit id="0071233711fe7922557f3cc5e77ff86d3c7489b1" translate="yes" xml:space="preserve">
          <source>The implementation was adapted from Tim Peters's list sort for Python (&lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/listsort.txt&quot;&gt; TimSort&lt;/a&gt;). It uses techniques from Peter McIlroy's &quot;Optimistic Sorting and Information Theoretic Complexity&quot;, in Proceedings of the Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474, January 1993.</source>
          <target state="translated">该实现改编自Tim Peters针对Python的列表排序（&lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/listsort.txt&quot;&gt;TimSort&lt;/a&gt;）。它使用了Peter McIlroy的&amp;ldquo;乐观排序和信息理论的复杂性&amp;rdquo;技术，该技术在1993年1月举行的第四届ACM-SIAM离散算法年会上发表，第467-474页。</target>
        </trans-unit>
        <trans-unit id="9ff0f3b8413e36a5361b1e71459d786f534916de" translate="yes" xml:space="preserve">
          <source>The implementation was adapted from Tim Peters's list sort for Python (&lt;a href=&quot;https://svn.python.org/projects/python/trunk/Objects/listsort.txt&quot;&gt; TimSort&lt;/a&gt;). It uses techniques from Peter McIlroy's &quot;Optimistic Sorting and Information Theoretic Complexity&quot;, in Proceedings of the Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474, January 1993.</source>
          <target state="translated">该实现改编自Tim Peters针对Python的列表排序（&lt;a href=&quot;https://svn.python.org/projects/python/trunk/Objects/listsort.txt&quot;&gt;TimSort&lt;/a&gt;）。它使用了Peter McIlroy的&amp;ldquo;乐观排序和信息理论的复杂性&amp;rdquo;技术，该技术在1993年1月举行的第四届ACM-SIAM离散算法年会上发表，第467-474页。</target>
        </trans-unit>
        <trans-unit id="13c96c1ad096f5a00f55072e0f2d6780edfeb958" translate="yes" xml:space="preserve">
          <source>The implementer must ensure that the returned node has not been removed. If a like-named child of this node was previously removed, the implementer must return a newly constructed &lt;code&gt;AbstractPreferences&lt;/code&gt; node; once removed, an &lt;code&gt;AbstractPreferences&lt;/code&gt; node cannot be &quot;resuscitated.&quot;</source>
          <target state="translated">实现者必须确保未删除返回的节点。如果先前删除了该节点的同名子节点，则实现者必须返回一个新构造的 &lt;code&gt;AbstractPreferences&lt;/code&gt; 节点；一旦删除，则不能&amp;ldquo;恢复&amp;rdquo; &lt;code&gt;AbstractPreferences&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="9ef8dcbf55f1377ba0f6614596e7efbe0b86999c" translate="yes" xml:space="preserve">
          <source>The implementor must also ensure that the relation is transitive: &lt;code&gt;((compare(x, y)&amp;gt;0) &amp;amp;&amp;amp; (compare(y, z)&amp;gt;0))&lt;/code&gt; implies &lt;code&gt;compare(x, z)&amp;gt;0&lt;/code&gt;.</source>
          <target state="translated">实现者还必须确保该关系是可传递的： &lt;code&gt;((compare(x, y)&amp;gt;0) &amp;amp;&amp;amp; (compare(y, z)&amp;gt;0))&lt;/code&gt; 意味着 &lt;code&gt;compare(x, z)&amp;gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83a6f5823b0e633634dd36ef598776a62c2b361f" translate="yes" xml:space="preserve">
          <source>The implementor must also ensure that the relation is transitive: &lt;code&gt;(x.compareTo(y) &amp;gt; 0 &amp;amp;&amp;amp; y.compareTo(z) &amp;gt; 0)&lt;/code&gt; implies &lt;code&gt;x.compareTo(z) &amp;gt; 0&lt;/code&gt;.</source>
          <target state="translated">实现者还必须确保该关系是可传递的： &lt;code&gt;(x.compareTo(y) &amp;gt; 0 &amp;amp;&amp;amp; y.compareTo(z) &amp;gt; 0)&lt;/code&gt; 意味着 &lt;code&gt;x.compareTo(z) &amp;gt; 0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93c35843f73a7cf775788fe7aa6a58715a248347" translate="yes" xml:space="preserve">
          <source>The implementor must also ensure that the relation is transitive: &lt;code&gt;(x.compareTo(y)&amp;gt;0 &amp;amp;&amp;amp; y.compareTo(z)&amp;gt;0)&lt;/code&gt; implies &lt;code&gt;x.compareTo(z)&amp;gt;0&lt;/code&gt;.</source>
          <target state="translated">实现者还必须确保该关系是可传递的： &lt;code&gt;(x.compareTo(y)&amp;gt;0 &amp;amp;&amp;amp; y.compareTo(z)&amp;gt;0)&lt;/code&gt; 意味着 &lt;code&gt;x.compareTo(z)&amp;gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="984e8a841ada6b193bdac6bd769182c3ed6633a1" translate="yes" xml:space="preserve">
          <source>The implementor must ensure &lt;code&gt;sgn(x.compareTo(y)) == -sgn(y.compareTo(x))&lt;/code&gt; for all &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. (This implies that &lt;code&gt;x.compareTo(y)&lt;/code&gt; must throw an exception iff &lt;code&gt;y.compareTo(x)&lt;/code&gt; throws an exception.)</source>
          <target state="translated">实现者必须确保所有 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的 &lt;code&gt;sgn(x.compareTo(y)) == -sgn(y.compareTo(x))&lt;/code&gt; 。（这意味着 &lt;code&gt;x.compareTo(y)&lt;/code&gt; 必须抛出异常，而 &lt;code&gt;y.compareTo(x)&lt;/code&gt; 则抛出异常。）</target>
        </trans-unit>
        <trans-unit id="6f253988de023323ef8d0ef1dfa1dcf6d324129a" translate="yes" xml:space="preserve">
          <source>The implementor must ensure that &lt;code&gt;sgn(compare(x, y)) ==
 -sgn(compare(y, x))&lt;/code&gt; for all &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. (This implies that &lt;code&gt;compare(x, y)&lt;/code&gt; must throw an exception if and only if &lt;code&gt;compare(y, x)&lt;/code&gt; throws an exception.)</source>
          <target state="translated">实现者必须确保所有 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的 &lt;code&gt;sgn(compare(x, y)) == -sgn(compare(y, x))&lt;/code&gt; 。（这意味着，当且仅当 &lt;code&gt;compare(y, x)&lt;/code&gt; 引发异常时， &lt;code&gt;compare(x, y)&lt;/code&gt; 必须引发异常。）</target>
        </trans-unit>
        <trans-unit id="ec10f19371a9d11721ea1000bbcc8b30c58e2b96" translate="yes" xml:space="preserve">
          <source>The implicit declaration of the canonical constructor has the same accessibility as the record class and initializes the component fields from the corresponding constructor arguments. The implicit declaration of the accessor methods returns the value of the corresponding component field. The implicit declaration of the &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;object#toString()&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt; methods are derived from all of the component fields.</source>
          <target state="translated">规范构造函数的隐式声明具有与记录类相同的可访问性，并从相应的构造函数参数中初始化组件字段。访问器方法的隐式声明返回相应组件字段的值。&lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;object#toString()&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt;方法的隐式声明是从所有组件字段派生的。</target>
        </trans-unit>
        <trans-unit id="8f99500f7af7d801bfa9660bcd7539b508039288" translate="yes" xml:space="preserve">
          <source>The implicit size may not be a fixed value, especially for a DTLS protocols implementation.</source>
          <target state="translated">隐含的大小可能不是一个固定的值,特别是对于DTLS协议的实现。</target>
        </trans-unit>
        <trans-unit id="c5bd518953d05705af43274895fb8112f343bc54" translate="yes" xml:space="preserve">
          <source>The implicit state of a matcher includes the input character sequence as well as the</source>
          <target state="translated">匹配器的隐式状态包括输入的字符序列和</target>
        </trans-unit>
        <trans-unit id="648ee0f64ff7b406b146abf2b44239a2bc419dd2" translate="yes" xml:space="preserve">
          <source>The implicitly provided implementation returns &lt;code&gt;true&lt;/code&gt; if and only if the argument is an instance of the same record type as this record, and each component of this record is equal to the corresponding component of the argument; otherwise, &lt;code&gt;
 false&lt;/code&gt; is returned. Equality of a component &lt;code&gt;c&lt;/code&gt; is determined as follows:</source>
          <target state="translated">当且仅当参数是与该记录具有相同记录类型的实例，并且该记录的每个组成部分都等于参数的相应组成部分时，隐式提供的实现才返回 &lt;code&gt;true&lt;/code&gt; 。否则，返回 &lt;code&gt; false&lt;/code&gt; 。组件 &lt;code&gt;c&lt;/code&gt; 的相等性确定如下：</target>
        </trans-unit>
        <trans-unit id="5c5f4aa231f9db27c59a00fb4983dccd1895e289" translate="yes" xml:space="preserve">
          <source>The implicitly provided implementation returns a hash code value derived by combining appropriate hashes from each component. The precise algorithm used in the implicitly provided implementation is unspecified and is subject to change within the above limits. The resulting integer need not remain consistent from one execution of an application to another execution of the same application, even if the hashes of the component values were to remain consistent in this way. Also, a component of primitive type may contribute its bits to the hash code differently than the &lt;code&gt;hashCode&lt;/code&gt; of its primitive wrapper class.</source>
          <target state="translated">隐式提供的实现返回哈希码值，该哈希码值是通过组合来自每个组件的适当哈希值而得出的。没有明确规定在隐式提供的实现中使用的精确算法，并且可能会在上述限制内进行更改。即使组件值的哈希值以此方式保持一致，从应用程序的一次执行到同一应用程序的另一次执行所得的整数也不必保持一致。同样，原始类型的组件与其原始包装类的 &lt;code&gt;hashCode&lt;/code&gt; 可能不同地将其比特贡献给哈希代码。</target>
        </trans-unit>
        <trans-unit id="f3043eae8661a4aa42d0518d014141c9f1b3b135" translate="yes" xml:space="preserve">
          <source>The implicitly provided implementation returns a string which contains the name of the record class, the names of components of the record, and string representations of component values, so as to fulfill the contract of this method. The precise format produced by this implicitly provided implementation is subject to change, so the present syntax should not be parsed by applications to recover record component values.</source>
          <target state="translated">隐式提供的实现返回一个字符串,这个字符串包含记录类的名称、记录的组件名称以及组件值的字符串表示,从而实现本方法的契约。这个隐式提供的实现所产生的精确格式是可以改变的,所以应用程序不应该解析本语法来恢复记录组件值。</target>
        </trans-unit>
        <trans-unit id="7aa873e376794141b49cb1ea8a0bd75fbba299ec" translate="yes" xml:space="preserve">
          <source>The importance of this to parallel evaluation can be seen if we expand this to four terms:</source>
          <target state="translated">如果我们将其扩展为四个术语,就可以看出这对平行评价的重要性。</target>
        </trans-unit>
        <trans-unit id="47f872f2e181d170c9f064e4e0e278d2b43b7e7a" translate="yes" xml:space="preserve">
          <source>The important point to note is the first argument to the &lt;code&gt;
 add&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; methods is the field maintaining the listeners. In addition you must assign the result of the &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; methods to the field maintaining the listeners.</source>
          <target state="translated">需要注意的重要一点是 &lt;code&gt; add&lt;/code&gt; 和 &lt;code&gt;remove&lt;/code&gt; 方法的第一个参数是维护侦听器的字段。另外，您必须将 &lt;code&gt;add&lt;/code&gt; 和 &lt;code&gt;remove&lt;/code&gt; 方法的结果分配给维护侦听器的字段。</target>
        </trans-unit>
        <trans-unit id="c1e10b89a974f0ebd3253725c84055ab09cbc083" translate="yes" xml:space="preserve">
          <source>The imported node copies its &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; values from those of the source node.Note that the &lt;code&gt;deep&lt;/code&gt; parameter has no effect on this type of nodes since they cannot have any children.</source>
          <target state="translated">导入的节点从源节点复制其 &lt;code&gt;target&lt;/code&gt; 和 &lt;code&gt;data&lt;/code&gt; 值。请注意， &lt;code&gt;deep&lt;/code&gt; 参数对该类型的节点无效，因为它们不能有任何子节点。</target>
        </trans-unit>
        <trans-unit id="21c35430c664768194fbb13c6a879d3843e0bfe7" translate="yes" xml:space="preserve">
          <source>The imported node that belongs to this &lt;code&gt;Document&lt;/code&gt;.</source>
          <target state="translated">属于此 &lt;code&gt;Document&lt;/code&gt; 的导入节点。</target>
        </trans-unit>
        <trans-unit id="14b8f3fc9feb417d0cc733925e38d2fcdc82d0b5" translate="yes" xml:space="preserve">
          <source>The in-memory representation of an elements may contain a reference to an &lt;code&gt;Object&lt;/code&gt;. There is no provision for representing such objects textually.</source>
          <target state="translated">元素的内存中表示可以包含对 &lt;code&gt;Object&lt;/code&gt; 的引用。没有规定以文字形式表示此类对象。</target>
        </trans-unit>
        <trans-unit id="d11ff3668969981f7d9c4c8296a5b6396f07bac9" translate="yes" xml:space="preserve">
          <source>The inapplicable conversion</source>
          <target state="translated">不适用的转换</target>
        </trans-unit>
        <trans-unit id="bb2a6499474ea9eac81ba3d143a5276ee4c995c9" translate="yes" xml:space="preserve">
          <source>The inbound network buffer may be modified as a result of this call: therefore if the network data packet is required for some secondary purpose, the data should be duplicated before calling this method. Note: the network data will not be useful to a second SSLEngine, as each SSLEngine contains unique random state which influences the SSL/TLS messages.</source>
          <target state="translated">入站网络缓冲区可能会因为这个调用而被修改:因此,如果网络数据包需要用于一些次要的目的,那么在调用这个方法之前应该复制数据。注意:网络数据对第二个SSLEngine没有用处,因为每个SSLEngine都包含独特的随机状态,会影响SSL/TLS消息。</target>
        </trans-unit>
        <trans-unit id="8d699eb8aa8de1405731c919b0b4de83e04c8bf2" translate="yes" xml:space="preserve">
          <source>The inbound network buffer may be modified as a result of this call: therefore if the network data packet is required for some secondary purpose, the data should be duplicated before calling this method. Note: the network data will not be useful to a second SSLEngine, as each SSLEngine contains unique random state which influences the SSL/TLS/DTLS messages.</source>
          <target state="translated">入站网络缓冲区可能会因为这个调用而被修改:因此,如果网络数据包需要用于一些次要的目的,那么在调用这个方法之前应该复制数据。注意:网络数据对第二个SSLEngine没有用处,因为每个SSLEngine包含独特的随机状态,会影响SSL/TLS/DTLS消息。</target>
        </trans-unit>
        <trans-unit id="aa3b2a5b0cce44110ed80362543628b78d7b8ccd" translate="yes" xml:space="preserve">
          <source>The inclusive lower bound of the rollback codes.</source>
          <target state="translated">回滚码的包容下限。</target>
        </trans-unit>
        <trans-unit id="35fe39a3e8daa9f8d821a93e30e78b4396b3accd" translate="yes" xml:space="preserve">
          <source>The inclusive upper bound of the rollback error code.</source>
          <target state="translated">回滚错误代码的包容上限。</target>
        </trans-unit>
        <trans-unit id="4591152df21bb221a96ff5b50e6d3a7a7e4f08c1" translate="yes" xml:space="preserve">
          <source>The increase button.</source>
          <target state="translated">增加按钮。</target>
        </trans-unit>
        <trans-unit id="d09f0816d06c72350347621095fd55b4391384a1" translate="yes" xml:space="preserve">
          <source>The index argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than the length of this sequence.</source>
          <target state="translated">index参数必须大于或等于 &lt;code&gt;0&lt;/code&gt; ，并且小于此序列的长度。</target>
        </trans-unit>
        <trans-unit id="80b450539685211ccc1833f27483d2868aa7a50c" translate="yes" xml:space="preserve">
          <source>The index array passed into the &lt;code&gt;setMatchColumn&lt;/code&gt; methods indicates how many match columns are being set (the length of the array) in addition to which columns will be used for the match. For example:</source>
          <target state="translated">传递给 &lt;code&gt;setMatchColumn&lt;/code&gt; 方法的索引数组指示除了要使用哪些列进行匹配之外，还要设置多少个匹配列（数组的长度）。例如：</target>
        </trans-unit>
        <trans-unit id="c501f93a2ca90f9ea5482a86ad03134df8cccb7a" translate="yes" xml:space="preserve">
          <source>The index is included in this exception's detail message. The exact presentation format of the detail message is unspecified.</source>
          <target state="translated">该索引包含在该异常的详细消息中。详细信息的具体表现格式没有说明。</target>
        </trans-unit>
        <trans-unit id="d110c0303b7504a3d86b1ba9fbbb90cb3182eff3" translate="yes" xml:space="preserve">
          <source>The index must be a value greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than or equal to the current size of the vector. (If the index is equal to the current size of the vector, the new element is appended to the Vector.)</source>
          <target state="translated">索引必须是一个大于或等于 &lt;code&gt;0&lt;/code&gt; 且小于或等于向量的当前大小的值。（如果索引等于向量的当前大小，则将新元素附加到向量。）</target>
        </trans-unit>
        <trans-unit id="c8b94ccd821ae168771b3c0bce8f50e0fa10c633" translate="yes" xml:space="preserve">
          <source>The index must be a value greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than the current size of the vector.</source>
          <target state="translated">索引必须是一个大于或等于 &lt;code&gt;0&lt;/code&gt; 且小于向量当前大小的值。</target>
        </trans-unit>
        <trans-unit id="62e63686068957c51275db449165d29003ac47e5" translate="yes" xml:space="preserve">
          <source>The index of the attribute, or -1 if it does not appear in the list.</source>
          <target state="translated">属性的索引,如果没有出现在列表中,则为-1。</target>
        </trans-unit>
        <trans-unit id="634cf8881bffb28436cbadcdf2fa68fc2f5e5ccf" translate="yes" xml:space="preserve">
          <source>The index of the button.</source>
          <target state="translated">按钮的索引。</target>
        </trans-unit>
        <trans-unit id="ab04bf90af1fca72f6bd4fa0c209a856d9a63eeb" translate="yes" xml:space="preserve">
          <source>The index of the column being dragged.</source>
          <target state="translated">被拖动的列的索引。</target>
        </trans-unit>
        <trans-unit id="739fedab35265517ea308014b27461b4ea4d32be" translate="yes" xml:space="preserve">
          <source>The index of the column being dragged. &lt;code&gt;null&lt;/code&gt; if not dragging.</source>
          <target state="translated">被拖动的列的索引。如果不拖动，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f34aed7c60a9e28a443a907e7eecff6c58ebb518" translate="yes" xml:space="preserve">
          <source>The index of the column being resized.</source>
          <target state="translated">被调整大小的列的索引。</target>
        </trans-unit>
        <trans-unit id="5709d32206c70e14fc102c4325947a272b7eef73" translate="yes" xml:space="preserve">
          <source>The index of the column being resized. &lt;code&gt;null&lt;/code&gt; if not resizing.</source>
          <target state="translated">调整大小的列的索引。如果不调整大小，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c713de2c6cd1e10a2ee8eca913f67cfa7787102" translate="yes" xml:space="preserve">
          <source>The index of the column from where it was moved or removed</source>
          <target state="translated">列的索引,从它被移动或删除的地方。</target>
        </trans-unit>
        <trans-unit id="5476d5cd262fc98778e43b57c1769e4271ac097c" translate="yes" xml:space="preserve">
          <source>The index of the column in the model which is to be displayed by this &lt;code&gt;TableColumn&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;TableColumn&lt;/code&gt; 将显示的模型中列的索引。</target>
        </trans-unit>
        <trans-unit id="b1970e00b3ec369750567ac9ff0ca623c4d79a78" translate="yes" xml:space="preserve">
          <source>The index of the column in the model which is to be displayed by this &lt;code&gt;TableColumn&lt;/code&gt;. As columns are moved around in the view &lt;code&gt;modelIndex&lt;/code&gt; remains constant.</source>
          <target state="translated">此 &lt;code&gt;TableColumn&lt;/code&gt; 将显示的模型中列的索引。当列在视图中移动时， &lt;code&gt;modelIndex&lt;/code&gt; 保持不变。</target>
        </trans-unit>
        <trans-unit id="97237181c67180c3a85ff731ca9e29203dc4fe35" translate="yes" xml:space="preserve">
          <source>The index of the column to where it was moved or added</source>
          <target state="translated">列的移动或添加位置的索引。</target>
        </trans-unit>
        <trans-unit id="b43760d2baa9ed65d859133ddb3fcdf80bb96958" translate="yes" xml:space="preserve">
          <source>The index of the end of this buffer.</source>
          <target state="translated">缓冲区末端的索引。</target>
        </trans-unit>
        <trans-unit id="f695822c13213a26a764fdd97f97ec145aace4f7" translate="yes" xml:space="preserve">
          <source>The index of the end of this buffer. There is not valid data at or beyond this index.</source>
          <target state="translated">缓冲区末端的索引。在此索引处或之外没有有效数据。</target>
        </trans-unit>
        <trans-unit id="1590c17a9cdabf74852b9b628b34f6bb6547ef85" translate="yes" xml:space="preserve">
          <source>The index of the first character captured by the group, or &lt;code&gt;-1&lt;/code&gt; if the match was successful but the group itself did not match anything</source>
          <target state="translated">组捕获的第一个字符的索引；如果匹配成功，但组本身不匹配任何内容，则返回 &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14690427864e8e9fb011be08cf98fb6bec38525d" translate="yes" xml:space="preserve">
          <source>The index of the first character matched</source>
          <target state="translated">匹配的第一个字符的索引</target>
        </trans-unit>
        <trans-unit id="037f2614e75c97fb1b5d71d0d0cea4aaad2f9e8e" translate="yes" xml:space="preserve">
          <source>The index of the focused component.</source>
          <target state="translated">重点组件的指数。</target>
        </trans-unit>
        <trans-unit id="2b1a675cd8d72171fb8d26b97ee0f084893697b2" translate="yes" xml:space="preserve">
          <source>The index of the next character to read from the input stream buffer.</source>
          <target state="translated">从输入流缓冲区读取的下一个字符的索引。</target>
        </trans-unit>
        <trans-unit id="6236644c7f73481257e874584222314b9bf01500" translate="yes" xml:space="preserve">
          <source>The index of the next character to read from the input stream buffer. This value should always be nonnegative and not larger than the value of &lt;code&gt;count&lt;/code&gt;. The next byte to be read from the input stream buffer will be &lt;code&gt;buf[pos]&lt;/code&gt;.</source>
          <target state="translated">要从输入流缓冲区读取的下一个字符的索引。此值应始终为非负值，并且不得大于 &lt;code&gt;count&lt;/code&gt; 的值。要从输入流缓冲区读取的下一个字节将是 &lt;code&gt;buf[pos]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5efc56a51a0de538997e4f3583c8deb79cf74c6d" translate="yes" xml:space="preserve">
          <source>The index of the position in the circular buffer at which the next byte of data will be read by this piped input stream.</source>
          <target state="translated">在循环缓冲区中,下一个数据字节将被这个管道输入流读取的位置的索引。</target>
        </trans-unit>
        <trans-unit id="d5d543d602524132f86d32c3de4d6c1230cc0041" translate="yes" xml:space="preserve">
          <source>The index of the position in the circular buffer at which the next byte of data will be stored when received from the connected piped output stream.</source>
          <target state="translated">当从连接的管道输出流接收到下一个数据字节时,循环缓冲区中的位置索引。</target>
        </trans-unit>
        <trans-unit id="7730a24d44411399e802148bed0e48e3d5ce6bbf" translate="yes" xml:space="preserve">
          <source>The index of the position in the circular buffer at which the next byte of data will be stored when received from the connected piped output stream. &lt;code&gt;in&amp;lt;0&lt;/code&gt; implies the buffer is empty, &lt;code&gt;in==out&lt;/code&gt; implies the buffer is full</source>
          <target state="translated">从连接的管道输出流接收到的下一个数据字节将存储在循环缓冲区中的位置的索引。 &lt;code&gt;in&amp;lt;0&lt;/code&gt; 表示缓冲区为空， &lt;code&gt;in==out&lt;/code&gt; 表示缓冲区已满</target>
        </trans-unit>
        <trans-unit id="c03f1a67d6303d66266947fada9aa37131e41fa3" translate="yes" xml:space="preserve">
          <source>The index of this &lt;code&gt;OPTION&lt;/code&gt; in its parent &lt;code&gt;SELECT&lt;/code&gt; , starting from 0.</source>
          <target state="translated">此 &lt;code&gt;OPTION&lt;/code&gt; 在其父级 &lt;code&gt;SELECT&lt;/code&gt; 中的索引，从0开始。</target>
        </trans-unit>
        <trans-unit id="2226b46f59787a9b0e3b60f1c764fb9de8294a00" translate="yes" xml:space="preserve">
          <source>The index of this cell in the row, starting from 0.</source>
          <target state="translated">该行中该单元格的索引,从0开始。</target>
        </trans-unit>
        <trans-unit id="0fd44a29d4fd280e01b66005ce677791610ec93a" translate="yes" xml:space="preserve">
          <source>The index of this cell in the row, starting from 0. This index is in document tree order and not display order.</source>
          <target state="translated">该单元格在行中的索引,从0开始,这个索引是按照文档树的顺序,而不是显示顺序。</target>
        </trans-unit>
        <trans-unit id="3fff2a5e1d285b214f04c67a81d7e059da262614" translate="yes" xml:space="preserve">
          <source>The index of this row, relative to the current section ( &lt;code&gt;THEAD&lt;/code&gt; , &lt;code&gt;TFOOT&lt;/code&gt; , or &lt;code&gt;TBODY&lt;/code&gt; ), starting from 0.</source>
          <target state="translated">相对于当前节（ &lt;code&gt;THEAD&lt;/code&gt; ， &lt;code&gt;TFOOT&lt;/code&gt; 或 &lt;code&gt;TBODY&lt;/code&gt; ）的此行的索引，从0开始。</target>
        </trans-unit>
        <trans-unit id="e822cfa1652391e22e71c07a07522ba182006f9d" translate="yes" xml:space="preserve">
          <source>The index of this row, relative to the entire table, starting from 0.</source>
          <target state="translated">这一行的索引,相对于整个表格,从0开始。</target>
        </trans-unit>
        <trans-unit id="9f94f0315cfad6977369420f7d9189f57dbfa2ca" translate="yes" xml:space="preserve">
          <source>The index of this row, relative to the entire table, starting from 0. This is in document tree order and not display order. The &lt;code&gt;rowIndex&lt;/code&gt; does not take into account sections ( &lt;code&gt;THEAD&lt;/code&gt; , &lt;code&gt;TFOOT&lt;/code&gt; , or &lt;code&gt;TBODY&lt;/code&gt; ) within the table.</source>
          <target state="translated">该行相对于整个表的索引，从0开始。这是按照文档树的顺序而不是显示的顺序。所述 &lt;code&gt;rowIndex&lt;/code&gt; 不考虑段（ &lt;code&gt;THEAD&lt;/code&gt; ， &lt;code&gt;TFOOT&lt;/code&gt; ，或 &lt;code&gt;TBODY&lt;/code&gt; 表内）。</target>
        </trans-unit>
        <trans-unit id="5dab56f9b14368b91d79e93d282b496b521bfa4f" translate="yes" xml:space="preserve">
          <source>The index one greater than the index of the last valid byte in the buffer.</source>
          <target state="translated">比缓冲区内最后一个有效字节的索引大1的索引。</target>
        </trans-unit>
        <trans-unit id="35f63ccce04acce64e5535be8e7c215541fbc335" translate="yes" xml:space="preserve">
          <source>The index one greater than the index of the last valid byte in the buffer. This value is always in the range &lt;code&gt;0&lt;/code&gt; through &lt;code&gt;buf.length&lt;/code&gt;; elements &lt;code&gt;buf[0]&lt;/code&gt; through &lt;code&gt;buf[count-1]
 &lt;/code&gt;contain buffered input data obtained from the underlying input stream.</source>
          <target state="translated">索引大于缓冲区中最后一个有效字节的索引。该值始终在 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;buf.length&lt;/code&gt; 的范围内；元素 &lt;code&gt;buf[0]&lt;/code&gt; 到 &lt;code&gt;buf[count-1] &lt;/code&gt; 包含从基础输入流获得的缓冲输入数据。</target>
        </trans-unit>
        <trans-unit id="1d986b4bba5b7f2c725fe87ab2ecbfa0c88a3dc3" translate="yes" xml:space="preserve">
          <source>The index one greater than the index of the last valid byte in the buffer. This value is always in the range &lt;code&gt;0&lt;/code&gt; through &lt;code&gt;buf.length&lt;/code&gt;; elements &lt;code&gt;buf[0]&lt;/code&gt; through &lt;code&gt;buf[count-1]&lt;/code&gt; contain buffered input data obtained from the underlying input stream.</source>
          <target state="translated">索引大于缓冲区中最后一个有效字节的索引。该值始终在 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;buf.length&lt;/code&gt; 的范围内；元素 &lt;code&gt;buf[0]&lt;/code&gt; 到 &lt;code&gt;buf[count-1]&lt;/code&gt; 包含从基础输入流中获取的缓冲输入数据。</target>
        </trans-unit>
        <trans-unit id="7603e35433e10f4f8d37bf47974c33eb262bf2cf" translate="yes" xml:space="preserve">
          <source>The index one greater than the last valid character in the input stream buffer.</source>
          <target state="translated">大于输入流缓冲区中最后一个有效字符的索引。</target>
        </trans-unit>
        <trans-unit id="7532d289f9d5f9dcf22dd308f11ba59cb53013a2" translate="yes" xml:space="preserve">
          <source>The index one greater than the last valid character in the input stream buffer. This value should always be nonnegative and not larger than the length of &lt;code&gt;buf&lt;/code&gt;. It is one greater than the position of the last byte within &lt;code&gt;buf&lt;/code&gt; that can ever be read from the input stream buffer.</source>
          <target state="translated">索引大于输入流缓冲区中的最后一个有效字符的索引。该值应始终为非负且不大于 &lt;code&gt;buf&lt;/code&gt; 的长度。它比可以从输入流缓冲区读取的 &lt;code&gt;buf&lt;/code&gt; 中最后一个字节的位置大一个。</target>
        </trans-unit>
        <trans-unit id="c9b5de3fe1d20ea7f6963929d78c83ff1a95b6b4" translate="yes" xml:space="preserve">
          <source>The index specifying the property element that was changed.</source>
          <target state="translated">指定被更改的属性元素的索引。</target>
        </trans-unit>
        <trans-unit id="c808feb859a3fe39a90463f672194143ca8902dc" translate="yes" xml:space="preserve">
          <source>The index within the media block's rule collection of the newly inserted rule.</source>
          <target state="translated">新插入的规则在媒体块的规则集合中的索引。</target>
        </trans-unit>
        <trans-unit id="6acb97d362b1a82f1ac55d96b963a2347f93e74d" translate="yes" xml:space="preserve">
          <source>The index within the style sheet's rule collection of the newly inserted rule.</source>
          <target state="translated">新插入的规则在样式表的规则集合中的索引。</target>
        </trans-unit>
        <trans-unit id="08089d9ad69bfd725ff2770a856862de638e3f18" translate="yes" xml:space="preserve">
          <source>The indexed byte's memory address modulo the unit size</source>
          <target state="translated">索引字节的内存地址与单位大小成正比。</target>
        </trans-unit>
        <trans-unit id="4b24ac1a949792295085eae5d4bcbdde7887c31d" translate="yes" xml:space="preserve">
          <source>The indexed byte's memory address modulus the unit size</source>
          <target state="translated">索引字节的内存地址模数的单位大小。</target>
        </trans-unit>
        <trans-unit id="d3784a6dc8c24e3b9cfd559138d87a6ec297e1ea" translate="yes" xml:space="preserve">
          <source>The indexing of RDNs in the list follows the numbering of RDNs described in the class description.</source>
          <target state="translated">列表中RDN的索引遵循类描述中描述的RDN的编号。</target>
        </trans-unit>
        <trans-unit id="faa5405bce53fb18abb915b5abeb8c78b7d17c39" translate="yes" xml:space="preserve">
          <source>The individual positive and negative permission sets are also determined. The positive permission set contains the permissions specified in the positive ACL entry (if any) for the principal. Similarly, the negative permission set contains the permissions specified in the negative ACL entry (if any) for the principal. The individual positive (or negative) permission set is considered to be null if there is not a positive (negative) ACL entry for the principal in this ACL.</source>
          <target state="translated">各个积极和消极的权限集也被确定。正面的权限集包含在正面的ACL条目(如果有的话)中为委托人指定的权限。同样,负权限集包含了负ACL条目中为委托人指定的权限(如果有的话)。如果该ACL中没有针对委托人的正面(或负面)ACL条目,则单个正面(或负面)权限集被认为是空的。</target>
        </trans-unit>
        <trans-unit id="2f79e825e8f4aa1f775a10a39ea722f4a68689bd" translate="yes" xml:space="preserve">
          <source>The information about a garbage collection</source>
          <target state="translated">关于垃圾收集的信息</target>
        </trans-unit>
        <trans-unit id="ef3f30727d6bb6becf057ae182437cf5ed0c6feb" translate="yes" xml:space="preserve">
          <source>The information about a memory notification.</source>
          <target state="translated">记忆通知的信息。</target>
        </trans-unit>
        <trans-unit id="f3c2ce74a453d840c3d3cb85683165a975a38bfc" translate="yes" xml:space="preserve">
          <source>The information from this event is not necessary for normal Namespace processing: the SAX XML reader will automatically replace prefixes for element and attribute names when the &lt;code&gt;http://xml.org/sax/features/namespaces&lt;/code&gt; feature is &lt;var&gt;true&lt;/var&gt; (the default).</source>
          <target state="translated">来自此事件的信息对于正常的名称空间处理不是必需的：当 &lt;code&gt;http://xml.org/sax/features/namespaces&lt;/code&gt; 功能为 &lt;var&gt;true&lt;/var&gt; （默认值）时，SAX XML阅读器将自动替换元素和属性名称的前缀。</target>
        </trans-unit>
        <trans-unit id="ca5670133dfad682241f9a7899b676fcf937d136" translate="yes" xml:space="preserve">
          <source>The information is returned as a set of pairs; the first element of a pair contains an (inclusive) minimum width and height, and the second element contains an (inclusive) maximum width and height. Together, each pair defines a valid range of sizes. To specify a fixed size, the same width and height will appear for both elements. A return value of &lt;code&gt;null&lt;/code&gt; indicates that the size is arbitrary or unknown.</source>
          <target state="translated">信息以成对的形式返回；一对中的第一个元素包含（包括）最小宽度和高度，第二个元素包含（包含）最大宽度和高度。每对一起定义了有效的大小范围。要指定固定大小，两个元素的宽度和高度将相同。返回值为 &lt;code&gt;null&lt;/code&gt; 表示大小是任意的或未知的。</target>
        </trans-unit>
        <trans-unit id="a415dbd9864205bad4fef6fbdbf7a0c48d16cbbf" translate="yes" xml:space="preserve">
          <source>The information is returned as a set of pairs; the first element of a pair contains an (inclusive) minimum width and height, and the second element contains an (inclusive) maximum width and height. Together, each pair defines a valid range of sizes. To specify a fixed size, use the same width and height for both elements. To specify an arbitrary range, a value of &lt;code&gt;null&lt;/code&gt; is used in place of an actual array of &lt;code&gt;Dimension&lt;/code&gt;s.</source>
          <target state="translated">信息以成对的形式返回；一对中的第一个元素包含（包括）最小宽度和高度，第二个元素包含（包含）最大宽度和高度。每对一起定义了有效的大小范围。要指定固定大小，请对两个元素使用相同的宽度和高度。为了指定任意范围，使用 &lt;code&gt;null&lt;/code&gt; 值代替 &lt;code&gt;Dimension&lt;/code&gt; 的实际数组。</target>
        </trans-unit>
        <trans-unit id="3103eb0cb29acd4b776d2c741f795f0cb2bfd745" translate="yes" xml:space="preserve">
          <source>The information stored in a &lt;code&gt;ProtectionParameter&lt;/code&gt; object protects the contents of a keystore. For example, protection parameters may be used to check the integrity of keystore data, or to protect the confidentiality of sensitive keystore data (such as a &lt;code&gt;PrivateKey&lt;/code&gt;).</source>
          <target state="translated">存储在 &lt;code&gt;ProtectionParameter&lt;/code&gt; 对象中的信息可保护密钥库的内容。例如，保护参数可用于检查密钥库数据的完整性，或保护敏感密钥库数据（例如 &lt;code&gt;PrivateKey&lt;/code&gt; ）的机密性。</target>
        </trans-unit>
        <trans-unit id="0f232b85978434189e4a717f030e028407dbe5c9" translate="yes" xml:space="preserve">
          <source>The information that can be retrieved from an object class definition is directory-dependent.</source>
          <target state="translated">可以从对象类定义中检索到的信息是依赖于目录的。</target>
        </trans-unit>
        <trans-unit id="d4844822fb540c78ff0305e65b984a34e04d1176" translate="yes" xml:space="preserve">
          <source>The information that you can retrieve from a syntax definition is directory-dependent.</source>
          <target state="translated">从语法定义中可以检索到的信息是依赖于目录的。</target>
        </trans-unit>
        <trans-unit id="d754234c829daf3f7bdab4a40e2f1300ae4ef5c9" translate="yes" xml:space="preserve">
          <source>The inherited channel, if any, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">继承的通道（如果有），否则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7705348178942231d79bd3fd49fff2d6d64056a0" translate="yes" xml:space="preserve">
          <source>The inherited methods &lt;code&gt;getMessage&lt;/code&gt;, &lt;code&gt;getSQLState&lt;/code&gt;, and &lt;code&gt;getErrorCode&lt;/code&gt; retrieve information contained in a &lt;code&gt;RowSetWarning&lt;/code&gt; object.</source>
          <target state="translated">继承的方法 &lt;code&gt;getMessage&lt;/code&gt; ， &lt;code&gt;getSQLState&lt;/code&gt; 和 &lt;code&gt;getErrorCode&lt;/code&gt; 检索 &lt;code&gt;RowSetWarning&lt;/code&gt; 对象中包含的信息。</target>
        </trans-unit>
        <trans-unit id="582d443042d4213cc0a62c853c554f1e08daabbf" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes read from the file so far. Reading bytes from this stream will increment the channel's position. Changing the channel's position, either explicitly or by reading, will change this stream's file position.</source>
          <target state="translated">返回的通道的初始&lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;将等于到目前为止从文件中读取的字节数。从该流中读取字节将增加通道的位置。显式或通过读取更改通道的位置将更改此流的文件位置。</target>
        </trans-unit>
        <trans-unit id="5fc61bc42b89728b893cc2036ea85014ba2a2590" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes written to the file so far unless this stream is in append mode, in which case it will be equal to the size of the file. Writing bytes to this stream will increment the channel's position accordingly. Changing the channel's position, either explicitly or by writing, will change this stream's file position.</source>
          <target state="translated">除非此流处于附加模式，否则返回的通道的初始&lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;将等于到目前为止已写入文件的字节数，在这种情况下，它将等于文件的大小。向该流写入字节将相应地增加通道的位置。显式或通过写入更改通道的位置将更改此流的文件位置。</target>
        </trans-unit>
        <trans-unit id="23fdec03cbe08d9ee1145b99b267e04326a46f01" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes read from the file so far. Reading bytes from this stream will increment the channel's position. Changing the channel's position, either explicitly or by reading, will change this stream's file position.</source>
          <target state="translated">返回的通道的初始&lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;将等于到目前为止从文件读取的字节数。从该流中读取字节将增加通道的位置。显式或通过读取更改通道的位置将更改此流的文件位置。</target>
        </trans-unit>
        <trans-unit id="e56adadcca778289c07ac038c40805d5ee9569a3" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes written to the file so far unless this stream is in append mode, in which case it will be equal to the size of the file. Writing bytes to this stream will increment the channel's position accordingly. Changing the channel's position, either explicitly or by writing, will change this stream's file position.</source>
          <target state="translated">除非此流处于附加模式，否则返回的通道的初始&lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;将等于到目前为止已写入文件的字节数，在这种情况下，它将等于文件的大小。向该流写入字节将相应地增加通道的位置。显式或通过写入更改通道的位置将更改此流的文件位置。</target>
        </trans-unit>
        <trans-unit id="17264991b607e7774754f4f15104f38cccd2023e" translate="yes" xml:space="preserve">
          <source>The initial address that the channel's socket is bound to using &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; may be removed from the bound addresses for the channel's socket.</source>
          <target state="translated">可以将通道套接字使用&lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;绑定到的初始地址从通道套接字的绑定地址中删除。</target>
        </trans-unit>
        <trans-unit id="54104849828faeb71a83684ba5a379183a42a8a1" translate="yes" xml:space="preserve">
          <source>The initial capacity controls a tradeoff between wasted space and the need for &lt;code&gt;rehash&lt;/code&gt; operations, which are time-consuming. No &lt;code&gt;rehash&lt;/code&gt; operations will</source>
          <target state="translated">初始容量控制了浪费空间和重新 &lt;code&gt;rehash&lt;/code&gt; 操作的需求之间的权衡，这非常耗时。没有重新 &lt;code&gt;rehash&lt;/code&gt; 操作</target>
        </trans-unit>
        <trans-unit id="d566609c979c8e49cfb0dc2950fb7324f878fe5f" translate="yes" xml:space="preserve">
          <source>The initial capacity of a &lt;code&gt;Properties&lt;/code&gt; object created with this constructor is unspecified.</source>
          <target state="translated">未指定使用此构造函数创建的 &lt;code&gt;Properties&lt;/code&gt; 对象的初始容量。</target>
        </trans-unit>
        <trans-unit id="db054b9bc58cff191805517256422fe118db7cfb" translate="yes" xml:space="preserve">
          <source>The initial class file bytes represent the bytes passed to &lt;a href=&quot;../../../../java.base/java/lang/classloader#defineClass(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;ClassLoader.defineClass&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;&lt;code&gt;redefineClasses&lt;/code&gt;&lt;/a&gt; (before any transformations were applied), however they might not exactly match them. The constant pool might not have the same layout or contents. The constant pool may have more or fewer entries. Constant pool entries may be in a different order; however, constant pool indices in the bytecodes of methods will correspond. Some attributes may not be present. Where order is not meaningful, for example the order of methods, order might not be preserved.</source>
          <target state="translated">初始类文件字节表示传递给&lt;a href=&quot;../../../../java.base/java/lang/classloader#defineClass(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;ClassLoader.defineClass&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt; &lt;code&gt;redefineClasses&lt;/code&gt; &lt;/a&gt;的字节（在应用任何转换之前），但是它们可能不完全匹配。常量池可能没有相同的布局或内容。常量池可能具有更多或更少的条目。常量池条目的顺序可能不同。但是，方法的字节码中的常量池索引将对应。某些属性可能不存在。如果顺序没有意义，例如方法的顺序，则可能不会保留顺序。</target>
        </trans-unit>
        <trans-unit id="73036cdb82068da260ec582e655554dd532915b6" translate="yes" xml:space="preserve">
          <source>The initial class file bytes represent the bytes passed to &lt;a href=&quot;../classloader#defineClass-byte:A-int-int-&quot;&gt;&lt;code&gt;ClassLoader.defineClass&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;&lt;code&gt;redefineClasses&lt;/code&gt;&lt;/a&gt; (before any transformations were applied), however they might not exactly match them. The constant pool might not have the same layout or contents. The constant pool may have more or fewer entries. Constant pool entries may be in a different order; however, constant pool indices in the bytecodes of methods will correspond. Some attributes may not be present. Where order is not meaningful, for example the order of methods, order might not be preserved.</source>
          <target state="translated">初始类文件字节表示传递给&lt;a href=&quot;../classloader#defineClass-byte:A-int-int-&quot;&gt; &lt;code&gt;ClassLoader.defineClass&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt; &lt;code&gt;redefineClasses&lt;/code&gt; &lt;/a&gt;的字节（在应用任何转换之前），但是它们可能不完全匹配。常量池可能没有相同的布局或内容。常量池可能具有更多或更少的条目。常量池条目的顺序可能不同。但是，方法字节码中的常量池索引将对应。某些属性可能不存在。如果顺序没有意义，例如方法的顺序，则可能不会保留顺序。</target>
        </trans-unit>
        <trans-unit id="ad81007d5811bb624623fea0ed5de856f5ea5fbc" translate="yes" xml:space="preserve">
          <source>The initial context implementation is determined at runtime. The default policy uses the environment property &quot;&lt;a href=&quot;context#INITIAL_CONTEXT_FACTORY&quot;&gt;&lt;code&gt;java.naming.factory.initial&lt;/code&gt;&lt;/a&gt;&quot;, which contains the class name of the initial context factory. An exception to this policy is made when resolving URL strings, as described below.</source>
          <target state="translated">初始上下文实现是在运行时确定的。默认策略使用环境属性&amp;ldquo; &lt;a href=&quot;context#INITIAL_CONTEXT_FACTORY&quot;&gt; &lt;code&gt;java.naming.factory.initial&lt;/code&gt; &lt;/a&gt; &amp;rdquo;，其中包含初始上下文工厂的类名。如下所述，解析URL字符串时将对此策略进行例外处理。</target>
        </trans-unit>
        <trans-unit id="b83fd820055d3d386f3fa568c59529845227e73a" translate="yes" xml:space="preserve">
          <source>The initial inherited setting may be overridden by calling &lt;a href=&quot;sslsocket#setNeedClientAuth(boolean)&quot;&gt;&lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsocket#setWantClientAuth(boolean)&quot;&gt;&lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以通过调用&lt;a href=&quot;sslsocket#setNeedClientAuth(boolean)&quot;&gt; &lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;sslsocket#setWantClientAuth(boolean)&quot;&gt; &lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;来覆盖初始的继承设置。</target>
        </trans-unit>
        <trans-unit id="5968bd4b24be43322be2226d7e4b483ae0f3d038" translate="yes" xml:space="preserve">
          <source>The initial inherited setting may be overridden by calling &lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以通过调用&lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt; &lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt; &lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt;来覆盖初始的继承设置。</target>
        </trans-unit>
        <trans-unit id="b1897ad9016c1b8f5933ba77ebd479010f4eaa18" translate="yes" xml:space="preserve">
          <source>The initial interpretation of the user's gesture, and the subsequent starting of the drag operation are the responsibility of the implementing &lt;code&gt;Component&lt;/code&gt;, which is usually implemented by a &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">用户手势的初始解释以及随后的拖动操作开始是实现 &lt;code&gt;Component&lt;/code&gt; 的责任，通常由 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="52f36d4af5ef3717e82f46af43c8962803c23e03" translate="yes" xml:space="preserve">
          <source>The initial size of this container is set to 100x100, but can be reset using setSize().</source>
          <target state="translated">这个容器的初始大小设置为100x100,但可以使用setSize()重置。</target>
        </trans-unit>
        <trans-unit id="a611d393e040fa6908cfe45ae4f8bccb6cdd990b" translate="yes" xml:space="preserve">
          <source>The initial state of the Range returned from this method is such that both of its boundary-points are positioned at the beginning of the corresponding Document, before any content. The Range returned can only be used to select content associated with this Document, or with DocumentFragments and Attrs for which this Document is the &lt;code&gt;ownerDocument&lt;/code&gt;.</source>
          <target state="translated">从此方法返回的Range的初始状态是，其两个边界点都位于相应Document的开头，在任何内容之前。返回的Range仅可用于选择与此Document或与此Document为其所有者 &lt;code&gt;ownerDocument&lt;/code&gt; 的DocumentFragments和Attrs关联的内容。</target>
        </trans-unit>
        <trans-unit id="d827b64415ef0a5d45d6dc2e526c43b3bca8568b" translate="yes" xml:space="preserve">
          <source>The initial state when a &lt;code&gt;Recording&lt;/code&gt; is created.</source>
          <target state="translated">创建 &lt;code&gt;Recording&lt;/code&gt; 时的初始状态。</target>
        </trans-unit>
        <trans-unit id="9935552c412b3a39d923f441da111d0d265b51da" translate="yes" xml:space="preserve">
          <source>The initial threshold value.</source>
          <target state="translated">初始阈值。</target>
        </trans-unit>
        <trans-unit id="e4712f648942f6879aa403441218fb6b8e9518fe" translate="yes" xml:space="preserve">
          <source>The initial threshold.</source>
          <target state="translated">初始门槛;</target>
        </trans-unit>
        <trans-unit id="bdc9501532a47a6e31c18417935f798102b78798" translate="yes" xml:space="preserve">
          <source>The initial value of this field is -4.</source>
          <target state="translated">该字段的初始值为-4。</target>
        </trans-unit>
        <trans-unit id="f2f1d7dcaca30d81c998107fa35d0caadf3769db" translate="yes" xml:space="preserve">
          <source>The initial value of this field is 0.0.</source>
          <target state="translated">该字段的初始值为0.0。</target>
        </trans-unit>
        <trans-unit id="b2c6b58f2a898e929dd294246d0e9d9b915b3041" translate="yes" xml:space="preserve">
          <source>The initial value of this field is null.</source>
          <target state="translated">该字段的初始值为空。</target>
        </trans-unit>
        <trans-unit id="480fad772f115d1b94ae7ccdff16d0e302222891" translate="yes" xml:space="preserve">
          <source>The initial value of this socket option is &lt;code&gt;FALSE&lt;/code&gt;. The socket option may be enabled or disabled at any time.</source>
          <target state="translated">此套接字选项的初始值为 &lt;code&gt;FALSE&lt;/code&gt; 。可以随时启用或禁用套接字选项。</target>
        </trans-unit>
        <trans-unit id="d64b75cc22cc7a22a6b3905f1b539199bfb6427f" translate="yes" xml:space="preserve">
          <source>The initial value of this socket option is &lt;code&gt;FALSE&lt;/code&gt;. The socket option may be enabled or disabled at any time. Some operating systems may require that the Java virtual machine be started with implementation specific privileges to enable this option or send broadcast datagrams.</source>
          <target state="translated">此套接字选项的初始值为 &lt;code&gt;FALSE&lt;/code&gt; 。可以随时启用或禁用套接字选项。某些操作系统可能要求以实现特定特权来启动Java虚拟机，以启用此选项或发送广播数据报。</target>
        </trans-unit>
        <trans-unit id="b53baf5e2a73c2a6e3ac07e7437cbec9e913530a" translate="yes" xml:space="preserve">
          <source>The initial value of this socket option is a negative value, meaning that the option is disabled. The option may be enabled, or the linger interval changed, at any time. The maximum value of the linger interval is system dependent. Setting the linger interval to a value that is greater than its maximum value causes the linger interval to be set to its maximum value.</source>
          <target state="translated">该套接字选项的初始值为负值,意味着该选项被禁用。该选项可以在任何时候被启用,或者改变滞留时间间隔。linger间隔的最大值取决于系统。将滞留时间间隔设置为大于最大值的值,会导致滞留时间间隔被设置为最大值。</target>
        </trans-unit>
        <trans-unit id="145aa0f5c504a6b90dfb4929918b3107cf434d35" translate="yes" xml:space="preserve">
          <source>The initial/default size of the socket receive buffer and the range of allowable values is system dependent although a negative size is not allowed. An attempt to set the socket receive buffer to larger than its maximum size causes it to be set to its maximum size.</source>
          <target state="translated">套接字接收缓冲区的初始/默认大小和允许值的范围取决于系统,但不允许出现负值。如果试图将套接字接收缓冲区设置为大于其最大尺寸,则会导致其被设置为最大尺寸。</target>
        </trans-unit>
        <trans-unit id="51f73748332022abeb0586fd7f96ab66f0792fc2" translate="yes" xml:space="preserve">
          <source>The initial/default size of the socket send buffer and the range of allowable values is system dependent although a negative size is not allowed. An attempt to set the socket send buffer to larger than its maximum size causes it to be set to its maximum size.</source>
          <target state="translated">套接字发送缓冲区的初始/默认大小和允许值的范围取决于系统,但不允许出现负值。如果试图将套接字发送缓冲区设置为大于其最大尺寸,则会导致其被设置为最大尺寸。</target>
        </trans-unit>
        <trans-unit id="ed6a796b3846abce78654b51752b778ce337d346" translate="yes" xml:space="preserve">
          <source>The initial/default value of the TOS field in the ToS octet is implementation specific but will typically be &lt;code&gt;0&lt;/code&gt;. For datagram-oriented sockets the option may be configured at any time after the socket has been bound. The new value of the octet is used when sending subsequent datagrams. It is system dependent whether this option can be queried or changed prior to binding the socket.</source>
          <target state="translated">ToS八位位组中TOS字段的初始/默认值是特定于实现的，但通常为 &lt;code&gt;0&lt;/code&gt; 。对于面向数据报的套接字，可以在绑定套接字之后的任何时间配置该选项。发送后续数据报时，将使用八位位组的新值。绑定套接字之前是否可以查询或更改此选项取决于系统。</target>
        </trans-unit>
        <trans-unit id="e93c89bc9134002e795c3937793d09a863552a6d" translate="yes" xml:space="preserve">
          <source>The initial/default value of the time-to-live setting is typically &lt;code&gt;1&lt;/code&gt;. An implementation allows this socket option to be set after the socket is bound. Whether the socket option can be queried or changed prior to binding the socket is system dependent.</source>
          <target state="translated">生存时间设置的初始/默认值通常为 &lt;code&gt;1&lt;/code&gt; 。一个实现允许在绑定套接字后设置此套接字选项。绑定套接字之前是否可以查询或更改套接字选项取决于系统。</target>
        </trans-unit>
        <trans-unit id="8f14681da9e2cf817ea3cfed63d4502d38744917" translate="yes" xml:space="preserve">
          <source>The initial/default value of this socket option is &lt;code&gt;TRUE&lt;/code&gt;. An implementation allows this socket option to be set after the socket is bound. Whether the socket option can be queried or changed prior to binding the socket is system dependent.</source>
          <target state="translated">此套接字选项的初始/默认值为 &lt;code&gt;TRUE&lt;/code&gt; 。一个实现允许在绑定套接字后设置此套接字选项。绑定套接字之前是否可以查询或更改套接字选项取决于系统。</target>
        </trans-unit>
        <trans-unit id="7a10bc1d584244ec597309a501f8537f0906aac2" translate="yes" xml:space="preserve">
          <source>The initial/default value of this socket option may be &lt;code&gt;null&lt;/code&gt; to indicate that outgoing interface will be selected by the operating system, typically based on the network routing tables. An implementation allows this socket option to be set after the socket is bound. Whether the socket option can be queried or changed prior to binding the socket is system dependent.</source>
          <target state="translated">此套接字选项的初始/默认值可以为 &lt;code&gt;null&lt;/code&gt; ,以指示操作系统将通常基于网络路由表选择传出接口。一个实现允许在绑定套接字后设置此套接字选项。绑定套接字之前是否可以查询或更改套接字选项取决于系统。</target>
        </trans-unit>
        <trans-unit id="b9fedeff43c59d7b5dbcc75d3c74145f2e5a51f4" translate="yes" xml:space="preserve">
          <source>The input (via the &lt;code&gt;classfileBuffer&lt;/code&gt; parameter) to the first transformer is:</source>
          <target state="translated">第一个转换器的输入（通过 &lt;code&gt;classfileBuffer&lt;/code&gt; 参数）是：</target>
        </trans-unit>
        <trans-unit id="0353ae3109c30633907963c70d9936359968faf7" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-10 (five days earlier).</source>
          <target state="translated">参数(MONDAY)的输入2011-01-15(星期六)将返回2011-01-10(提前五天)。</target>
        </trans-unit>
        <trans-unit id="97cf88e493d8b44880901ab10ce09e76612bd97e" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-17 (two days later).</source>
          <target state="translated">参数(MONDAY)的输入2011-01-15(星期六)将返回2011-01-17(两天后)。</target>
        </trans-unit>
        <trans-unit id="9bef351d0d747e19c535a278617e57a2452563ef" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (seven days earlier).</source>
          <target state="translated">参数(SATURDAY)的输入2011-01-15(星期六)将返回2011-01-08(提前七天)。</target>
        </trans-unit>
        <trans-unit id="459e681c26aecf2f2ec743dc66e3693663f75fd5" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-15 (same as input).</source>
          <target state="translated">参数(SATURDAY)的输入2011-01-15(一个星期六)将返回2011-01-15(与输入相同)。</target>
        </trans-unit>
        <trans-unit id="fd71f4910bd3fe09f4a43f337e9282decd32cea5" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (seven days later).</source>
          <target state="translated">参数(SATURDAY)的输入2011-01-15(星期六)将返回2011-01-22(七天后)。</target>
        </trans-unit>
        <trans-unit id="0efcc6067b189acef66d69c2de50d8589fa25cbf" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-12 (three days earlier).</source>
          <target state="translated">参数(WEDNESDAY)的输入2011-01-15(星期六)将返回2011-01-12(提前三天)。</target>
        </trans-unit>
        <trans-unit id="7b80d3ce9751afa5ad36e2eb87a5ace0f63cba29" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-19 (four days later).</source>
          <target state="translated">参数(WEDNESDAY)的输入2011-01-15(星期六)将返回2011-01-19(四天后)。</target>
        </trans-unit>
        <trans-unit id="7f73626e5956acb720a1570a8f4536e229179c28" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-01-01.</source>
          <target state="translated">输入2011-01-15将返回2011-01-01。</target>
        </trans-unit>
        <trans-unit id="0124e9614f4487f35850bcf026ed566a4761b1d3" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-01-31.</source>
          <target state="translated">2011-01-15的输入将返回2011-01-31。</target>
        </trans-unit>
        <trans-unit id="7ab919d34d3b479bb430190e4c37a22ea00323df" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-02-01.</source>
          <target state="translated">2011-01-15的输入将返回2011-02-01。</target>
        </trans-unit>
        <trans-unit id="40c59e3915752f42edd5a88ff72e759568a6189a" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-12-31.</source>
          <target state="translated">2011-01-15的输入将返回2011-12-31。</target>
        </trans-unit>
        <trans-unit id="727c7b425fd65ecf52b229b890c5788c0dc30227" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2012-01-01.</source>
          <target state="translated">2011-01-15的输入将返回2012-01-01。</target>
        </trans-unit>
        <trans-unit id="c09e595a2bedd7bb1101024bc041b5b29e2d95e2" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-01-01.</source>
          <target state="translated">2011-02-15的输入将返回2011-01-01。</target>
        </trans-unit>
        <trans-unit id="5cc26e63ef17d6b476896380461bf4720673e59e" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-02-01.</source>
          <target state="translated">2011-02-15的输入将返回2011-02-01。</target>
        </trans-unit>
        <trans-unit id="7bab49004e8b5e91474ec75a110529a798471e37" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-02-28.</source>
          <target state="translated">2011-02-15的输入将返回2011-02-28。</target>
        </trans-unit>
        <trans-unit id="6af6d6025b1ce4e1ae4e9a586de3fc7c32e1e4fe" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-03-01.</source>
          <target state="translated">2011-02-15的输入将返回2011-03-01。</target>
        </trans-unit>
        <trans-unit id="6b043e7ffb342331a742f793366c7737a0d6e3fd" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-12-31.</source>
          <target state="translated">2011-02-15的输入将返回2011-12-31。</target>
        </trans-unit>
        <trans-unit id="c894c15b25c9be063955c487b0570699b1d5eab8" translate="yes" xml:space="preserve">
          <source>The input 2011-04-15 will return 2011-04-30.</source>
          <target state="translated">2011-04-15的输入将返回2011-04-30。</target>
        </trans-unit>
        <trans-unit id="674c825d6c5d4d93b9ccdbda2b8b7895d7891b2a" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (-1,TUESDAY) will return 2011-12-27 (last in month).</source>
          <target state="translated">2011-12-15输入(-1,TUESDAY)将返回2011-12-27(月内最后一次)。</target>
        </trans-unit>
        <trans-unit id="f45c3e12c42281a12669c273ca00a557f31deb4e" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (-4,TUESDAY) will return 2011-12-06 (3 weeks before last in month).</source>
          <target state="translated">2011-12-15(-4,TUESDAY)的输入将返回2011-12-06(上个月的前三周)。</target>
        </trans-unit>
        <trans-unit id="e511359656fd86726c2553e964175b3339937510" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (-5,TUESDAY) will return 2011-11-29 (4 weeks before last in month).</source>
          <target state="translated">2011-12-15的(-5,TUESDAY)输入将在2011-11-29(上个月最后一个月的4周前)返回。</target>
        </trans-unit>
        <trans-unit id="61f6b1886bb948c2d22a9f26dbaf718741f9d55f" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (0,TUESDAY) will return 2011-11-29 (last in previous month).</source>
          <target state="translated">2011-12-15为(0,TUESDAY)的输入将返回2011-11-29(上月最后一次)。</target>
        </trans-unit>
        <trans-unit id="f7aa0d892978892f55b314a5cb46650cec948a67" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (1,TUESDAY) will return 2011-12-06.</source>
          <target state="translated">(1,TUESDAY)的输入2011-12-15将返回2011-12-06。</target>
        </trans-unit>
        <trans-unit id="08504b039b2c14ec9e3edb95f9f492e2689a26fe" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (2,TUESDAY) will return 2011-12-13.</source>
          <target state="translated">(2,TUESDAY)的输入2011-12-15将返回2011-12-13。</target>
        </trans-unit>
        <trans-unit id="434481f6384a2e789c2579a256e032c2a65c242a" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (3,TUESDAY) will return 2011-12-20.</source>
          <target state="translated">(3,TUESDAY)2011-12-15的输入将返回2011-12-20。</target>
        </trans-unit>
        <trans-unit id="a82ae127fda436ed10390e170c5197b4b398e8a1" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (4,TUESDAY) will return 2011-12-27.</source>
          <target state="translated">2011-12-15为(4,TUESDAY)的输入将返回2011-12-27。</target>
        </trans-unit>
        <trans-unit id="5a711831c25339a45671c5ac67f113204cb02e01" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (5,TUESDAY) will return 2012-01-03.</source>
          <target state="translated">2011-12-15为(5,TUESDAY)的输入将返回2012-01-03。</target>
        </trans-unit>
        <trans-unit id="8c6eb26c15efb0ec8afeabaaa608820b693f2649" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (FRIDAY) will return 2011-12-02.</source>
          <target state="translated">(FRIDAY)的输入2011-12-15将返回2011-12-02。</target>
        </trans-unit>
        <trans-unit id="567a413ddb1e838b7fa5d14dcbe912be2ae1fa62" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (FRIDAY) will return 2011-12-30.</source>
          <target state="translated">(FRIDAY)的2011-12-15输入将返回2011-12-30。</target>
        </trans-unit>
        <trans-unit id="1e72c437ba8ad9a6ff2bc3eeff73507f67a633af" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (MONDAY) will return 2011-12-05.</source>
          <target state="translated">2011-12-15为(星期一)的输入将返回2011-12-05。</target>
        </trans-unit>
        <trans-unit id="d64c410b23535de8786153e85ed7090c36fe6d3d" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (MONDAY) will return 2011-12-26.</source>
          <target state="translated">2011-12-15为(星期一)的输入将返回2011-12-26。</target>
        </trans-unit>
        <trans-unit id="b914beb04279584398f5931bb837c143e20f3c7b" translate="yes" xml:space="preserve">
          <source>The input 2012-02-15 will return 2012-02-29 (leap year).</source>
          <target state="translated">输入2012-02-15将返回2012-02-29(闰年)。</target>
        </trans-unit>
        <trans-unit id="edb13fdec6e5487029f19ef469d2d4b7243b4fe9" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt;, for example, yields the following results with these expressions:</source>
          <target state="translated">例如，使用这些表达式，输入 &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt; 产生以下结果：</target>
        </trans-unit>
        <trans-unit id="e76816c962ee6c820f09b31b57f2a819c6ee424e" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt;, for example, yields the following results with these parameters:</source>
          <target state="translated">例如，使用这些参数的输入 &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt; 产生以下结果：</target>
        </trans-unit>
        <trans-unit id="7fe0fa4d1613c22f20c32d6adf058d34e0d76640" translate="yes" xml:space="preserve">
          <source>The input byte sequence is provided in a byte buffer or a series of such buffers. The output character sequence is written to a character buffer or a series of such buffers. A decoder should always be used by making the following sequence of method invocations, hereinafter referred to as a</source>
          <target state="translated">输入的字节序列提供在一个字节缓冲器或一系列这样的缓冲器中。输出的字符序列写入一个字符缓冲器或一系列这样的缓冲器中。解码器在使用时,应始终进行下列方法调用序列,以下简称为</target>
        </trans-unit>
        <trans-unit id="19ef1842ed4e5eb52651c1849cddba210d1892ca" translate="yes" xml:space="preserve">
          <source>The input character sequence is provided in a character buffer or a series of such buffers. The output byte sequence is written to a byte buffer or a series of such buffers. An encoder should always be used by making the following sequence of method invocations, hereinafter referred to as an</source>
          <target state="translated">输入的字符序列提供在一个字符缓冲器或一系列这样的缓冲器中。输出的字节序列被写入一个字节缓冲器或一系列这样的缓冲器中。编码器在使用时,应始终通过进行下列方法调用序列,以下简称为</target>
        </trans-unit>
        <trans-unit id="fa13778322adabdaeaa9ed2fecf32bdec71db0c6" translate="yes" xml:space="preserve">
          <source>The input is a complete source snippet (declaration or statement) as is.</source>
          <target state="translated">输入的是一个完整的源片段(声明或语句),保持原样。</target>
        </trans-unit>
        <trans-unit id="f3b7f4f251101855e542e61fc24db9f102f470ce" translate="yes" xml:space="preserve">
          <source>The input method framework will usually defer loading of input method classes until they are absolutely needed. It loads only the &lt;code&gt;InputMethodDescriptor&lt;/code&gt; implementations during AWT initialization. It loads an &lt;code&gt;InputMethod&lt;/code&gt; implementation when the input method has been selected.</source>
          <target state="translated">输入法框架通常会推迟加载输入法类，直到绝对需要它们为止。它在AWT初始化期间仅加载 &lt;code&gt;InputMethodDescriptor&lt;/code&gt; 实现。选择输入法后，它将加载 &lt;code&gt;InputMethod&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="079602637d7f1a668b5a22c9dc43256cd86d280e" translate="yes" xml:space="preserve">
          <source>The input method may provide a list of attributes that it is interested in. In that case, information about other attributes that the implementor may have need not be made accessible through the iterator. If the list is null, all available attribute information should be made accessible.</source>
          <target state="translated">输入方法可以提供一个它感兴趣的属性列表。在这种情况下,关于实现者可能拥有的其他属性的信息不需要通过迭代器进行访问。如果列表为空,则应使所有可用的属性信息都能被访问。</target>
        </trans-unit>
        <trans-unit id="a088aaf0b2bc0291cc106b647d4deda76401815e" translate="yes" xml:space="preserve">
          <source>The input method must also provide at least two classes: one class implementing the &lt;code&gt;java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; interface, one class implementing the &lt;code&gt;java.awt.im.spi.InputMethod&lt;/code&gt; interface. The input method should separate the implementations for these interfaces, so that loading of the class implementing &lt;code&gt;InputMethod&lt;/code&gt; can be deferred until actually needed.</source>
          <target state="translated">输入法还必须至少提供两个类：一个实现 &lt;code&gt;java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; 接口的类，一个实现 &lt;code&gt;java.awt.im.spi.InputMethod&lt;/code&gt; 接口的类。输入法应将这些接口的实现分开，以便可以将实现 &lt;code&gt;InputMethod&lt;/code&gt; 的类的加载推迟到实际需要时进行。</target>
        </trans-unit>
        <trans-unit id="5173f5df733d6fe86f606f9d7f97c46fd4e851ba" translate="yes" xml:space="preserve">
          <source>The input method underline affects both the visual bounds and the outline of the text.</source>
          <target state="translated">输入法下划线既影响视觉界限,也影响文字的轮廓。</target>
        </trans-unit>
        <trans-unit id="83653305fe618a807c36ae9ff751ddeb894361e2" translate="yes" xml:space="preserve">
          <source>The input object must not be altered. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable temporal objects.</source>
          <target state="translated">输入对象不能被改变。相反,必须返回一个调整后的原始副本。这为不可变和可变的时态对象提供了等同的安全行为。</target>
        </trans-unit>
        <trans-unit id="5690fa337aa0337299da10cf4d08093aec330c3b" translate="yes" xml:space="preserve">
          <source>The input set will be empty if the processor supports &lt;code&gt;
 &quot;*&quot;&lt;/code&gt; and the root elements have no annotations. A &lt;code&gt;
 Processor&lt;/code&gt; must gracefully handle an empty set of annotations.</source>
          <target state="translated">如果处理器支持 &lt;code&gt; &quot;*&quot;&lt;/code&gt; 并且根元素没有注释，则输入集为空。一个 &lt;code&gt; Processor&lt;/code&gt; 必须妥善处理空注释集。</target>
        </trans-unit>
        <trans-unit id="5c910580a21e4b944c3ab323f7cd8f43016d192b" translate="yes" xml:space="preserve">
          <source>The input set will be empty if the processor supports &lt;code&gt;&quot;*&quot;&lt;/code&gt; and the root elements have no annotations. A &lt;code&gt;Processor&lt;/code&gt; must gracefully handle an empty set of annotations.</source>
          <target state="translated">如果处理器支持 &lt;code&gt;&quot;*&quot;&lt;/code&gt; 且根元素没有注释，则输入集为空。一个 &lt;code&gt;Processor&lt;/code&gt; 必须妥善处理空注释集。</target>
        </trans-unit>
        <trans-unit id="6bcbdf5e1188922a044da67c40a6d67d6e9f2afe" translate="yes" xml:space="preserve">
          <source>The input should be exactly one complete snippet of source code, that is, one expression, statement, variable declaration, method declaration, class declaration, or import. To break arbitrary input into individual complete snippets, use &lt;a href=&quot;#analyzeCompletion(java.lang.String)&quot;&gt;&lt;code&gt;analyzeCompletion(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">输入应恰好是源代码的完整片段，即一个表达式，语句，变量声明，方法声明，类声明或导入。要将任意输入分解为单独的完整代码段，请使用&lt;a href=&quot;#analyzeCompletion(java.lang.String)&quot;&gt; &lt;code&gt;analyzeCompletion(String)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41c78859d7b19d25e6131946c1a27219b5b577d8" translate="yes" xml:space="preserve">
          <source>The input should be exactly one complete snippet of source code, that is, one expression, statement, variable declaration, method declaration, class declaration, or import. To break arbitrary input into individual complete snippets, use &lt;a href=&quot;sourcecodeanalysis#analyzeCompletion(java.lang.String)&quot;&gt;&lt;code&gt;SourceCodeAnalysis.analyzeCompletion(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">输入应恰好是源代码的完整片段，即一个表达式，语句，变量声明，方法声明，类声明或导入。要将任意输入分成单独的完整代码段，请使用&lt;a href=&quot;sourcecodeanalysis#analyzeCompletion(java.lang.String)&quot;&gt; &lt;code&gt;SourceCodeAnalysis.analyzeCompletion(String)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f47befcb4ecd8767475f3f12fb5018863e6b534b" translate="yes" xml:space="preserve">
          <source>The input source that is being parsed.</source>
          <target state="translated">正在解析的输入源。</target>
        </trans-unit>
        <trans-unit id="da84d3d644e8622d72a13b523764f8b0f609c2da" translate="yes" xml:space="preserve">
          <source>The input source that was parsed.</source>
          <target state="translated">被解析的输入源。</target>
        </trans-unit>
        <trans-unit id="ed552da2306d43fec33a5ddad4dd6d2b2ba78449" translate="yes" xml:space="preserve">
          <source>The input stream to be filtered.</source>
          <target state="translated">要过滤的输入流。</target>
        </trans-unit>
        <trans-unit id="309bc11db643dd7e62cb11f361090715463174e8" translate="yes" xml:space="preserve">
          <source>The input string</source>
          <target state="translated">输入的字符串</target>
        </trans-unit>
        <trans-unit id="72cf1f9cc3cabe9c8646b2af8556b597a7195bbf" translate="yes" xml:space="preserve">
          <source>The input temporal object may be in a calendar system other than ISO. Implementations may choose to document compatibility with other calendar systems, or reject non-ISO temporal objects by &lt;a href=&quot;temporalqueries#chronology()&quot;&gt;&lt;code&gt;querying the chronology&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">输入的时间对象可以在ISO以外的日历系统中。实现可以选择记录与其他日历系统的兼容性，或者通过&lt;a href=&quot;temporalqueries#chronology()&quot;&gt; &lt;code&gt;querying the chronology&lt;/code&gt; &lt;/a&gt;拒绝非ISO时间对象。</target>
        </trans-unit>
        <trans-unit id="6ff27ced2c6ba8898b27209a9d944d8366a139de" translate="yes" xml:space="preserve">
          <source>The input temporal object may be in a calendar system other than ISO. Implementations may choose to document compatibility with other calendar systems, or reject non-ISO temporal objects by &lt;a href=&quot;temporalqueries#chronology--&quot;&gt;&lt;code&gt;querying the chronology&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">输入的时间对象可以在ISO以外的日历系统中。实现可以选择记录与其他日历系统的兼容性，或者通过&lt;a href=&quot;temporalqueries#chronology--&quot;&gt; &lt;code&gt;querying the chronology&lt;/code&gt; &lt;/a&gt;拒绝非ISO时间对象。</target>
        </trans-unit>
        <trans-unit id="0d3b87a06c1e41fe7f41be8cab3347c69577c90b" translate="yes" xml:space="preserve">
          <source>The inputLocale parameter specifies the locale for which text is input. This parameter can only take values obtained from this descriptor's &lt;a href=&quot;#getAvailableLocales()&quot;&gt;&lt;code&gt;getAvailableLocales()&lt;/code&gt;&lt;/a&gt; method or null. If it is null, an input locale independent icon for the input method should be returned.</source>
          <target state="translated">inputLocale参数指定要为其输入文本的语言环境。此参数只能采用从此描述符的&lt;a href=&quot;#getAvailableLocales()&quot;&gt; &lt;code&gt;getAvailableLocales()&lt;/code&gt; &lt;/a&gt;方法获得的值，或者为null。如果为null，则应返回输入法的与输入语言环境无关的图标。</target>
        </trans-unit>
        <trans-unit id="9f14980372b0683f49775bc052e867c452e6b24b" translate="yes" xml:space="preserve">
          <source>The inputLocale parameter specifies the locale for which text is input. This parameter can only take values obtained from this descriptor's &lt;a href=&quot;#getAvailableLocales()&quot;&gt;&lt;code&gt;getAvailableLocales()&lt;/code&gt;&lt;/a&gt; method or null. If it is null, an input locale independent name for the input method should be returned.</source>
          <target state="translated">inputLocale参数指定要为其输入文本的语言环境。此参数只能采用从此描述符的&lt;a href=&quot;#getAvailableLocales()&quot;&gt; &lt;code&gt;getAvailableLocales()&lt;/code&gt; &lt;/a&gt;方法获得的值，或者为null。如果为null，则应返回输入法的与输入法无关的名称。</target>
        </trans-unit>
        <trans-unit id="dd1c46fb8b8168a7a6f2a17a66f2bba45c0571bc" translate="yes" xml:space="preserve">
          <source>The inputs to the generator are the &lt;a href=&quot;snippet&quot;&gt;&lt;code&gt;Snippet&lt;/code&gt;&lt;/a&gt; and an integer. The integer will be the same for two Snippets which would overwrite one-another, but otherwise is unique.</source>
          <target state="translated">生成器的输入是&lt;a href=&quot;snippet&quot;&gt; &lt;code&gt;Snippet&lt;/code&gt; &lt;/a&gt;和一个整数。对于两个片段，该整数将是相同的，这两个片段将相互覆盖，但在其他方面则是唯一的。</target>
        </trans-unit>
        <trans-unit id="7f998451d8fd17341ecd575326c6da13b972f8ed" translate="yes" xml:space="preserve">
          <source>The inset from the bottom.</source>
          <target state="translated">从底部的插图。</target>
        </trans-unit>
        <trans-unit id="9909785dde9a7db7fd7c3489dd2432327b22beec" translate="yes" xml:space="preserve">
          <source>The inset from the bottom. This value is subtracted from the Bottom of the rectangle to yield a new location for the Bottom.</source>
          <target state="translated">从底部的插页。这个值从矩形的底部减去,得出底部的新位置。</target>
        </trans-unit>
        <trans-unit id="32e4e7cb57c5d657c8d6be8a8f58d05f136fb644" translate="yes" xml:space="preserve">
          <source>The inset from the left.</source>
          <target state="translated">左边的插图。</target>
        </trans-unit>
        <trans-unit id="0f85206032d1b7aa0b2590ae416e84603f1fc292" translate="yes" xml:space="preserve">
          <source>The inset from the left. This value is added to the Left of the rectangle to yield a new location for the Left edge.</source>
          <target state="translated">从左边开始的插页。这个值加到矩形的左边,产生一个新的左边缘位置。</target>
        </trans-unit>
        <trans-unit id="7859a9787008d3cb83b312b3ea03987faffb05aa" translate="yes" xml:space="preserve">
          <source>The inset from the right.</source>
          <target state="translated">从右边的插图。</target>
        </trans-unit>
        <trans-unit id="0e55dddcf716d1da17a0a953811329895b77b94e" translate="yes" xml:space="preserve">
          <source>The inset from the right. This value is subtracted from the Right of the rectangle to yield a new location for the Right edge.</source>
          <target state="translated">从右边的插页。从矩形的右方减去这个值,得出右边的新位置。</target>
        </trans-unit>
        <trans-unit id="d9e6390956b222702f7a3eea0e86763329609332" translate="yes" xml:space="preserve">
          <source>The inset from the top.</source>
          <target state="translated">从顶部的嵌。</target>
        </trans-unit>
        <trans-unit id="bf4a416b8b50d352edd91dedc2b33e26d77474e8" translate="yes" xml:space="preserve">
          <source>The inset from the top. This value is added to the Top of the rectangle to yield a new location for the Top.</source>
          <target state="translated">从顶部插入。这个值加到矩形的顶部,得出顶部的新位置。</target>
        </trans-unit>
        <trans-unit id="64ef7cd78ee4c7e0380dc6ff644d86db08178e33" translate="yes" xml:space="preserve">
          <source>The inside border.</source>
          <target state="translated">里面的边框。</target>
        </trans-unit>
        <trans-unit id="ef7c230813f47d25b0bb9baa60684daea97ed112" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;BasicMenuUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BasicMenuUI&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="e5d19fc65665c81f51ad0c8c47210f34978e2df8" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;CellRendererPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CellRendererPane&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="a52eb9cffd20ae8dd0e39567d5fd93d88148a0cb" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;ChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChangeListener&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="3050c0761589cc65cf86335a10b4986c6206bc7d" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;ContainerListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ContainerListener&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="56c1414724a0b82f497677275354efc130e02c3a" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;DesktopManager&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DesktopManager&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="1e9fae94d45e8e4c1b92e6d6319a2c6d0c94cc04" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;DragWindow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DragWindow&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="cf536239e4b8346cfaba6859216ca03b0dc1e86e" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JComboBox&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JComboBox&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="0fb20ee9382ffa5c7051c45dbb95c0fccbf4a0fa" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JDesktopPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JDesktopPane&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="66631710f5ec11954113eb3676261af25fbe85ea" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JInternalFrame.JDesktopIcon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JInternalFrame.JDesktopIcon&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="632f9ed5ba73647235467c63c327de9c7dfcdcc5" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JInternalFrame&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JInternalFrame&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="925208244c886af22aa2744d9cea0c94ab4d4520" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="3820f4bf48f239b19c20df25c6dfcfb56db5f0df" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JMenu&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMenu&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="22ed66de0a214c398cb7a10b2be2a1a582406b4f" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JMenuBar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMenuBar&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="68ff9d8a589625bd315d364d0d46335e30b62439" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JMenuItem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMenuItem&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="128af600e93df1fc6536b9f1672b869203ad6eb0" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JPopupMenu&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JPopupMenu&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="39af606ddae8316475830f58f1877123645a5a19" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JProgressBar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JProgressBar&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="d34b9f548afd02c3b3aab40cc6a6e44ce3295366" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JScrollPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JScrollPane&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="87e476f44e15ea2285a7a64212d88e82bfdd4f4e" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="8b9a1788b3012e2ee0d16580297c0ce75cbb0dd8" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JToolBar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="98187218bd6ed5ebf2b7978e468ab5c8b05fdf61" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MenuDragMouseListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MenuDragMouseListener&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="1c8b46ae7fc0922badf38279de19f9f75094825c" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MenuKeyListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MenuKeyListener&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="09723b4ba5956acbe634c05a94fb690ba777a9ba" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MenuListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MenuListener&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="f91076b8018a79d203766eeb0e337e972dd0f8b0" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MouseInputListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="7855b98dd4924fcb4aadfc2ec3c8cffae69c25dd" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;PropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="c2065d04201b39ee3ed93de71763ab49c1b1af62" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;CloseAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CloseAction&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="0d6496ac7d2b3b02531ba8df65f784842bed2bdf" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;ContainerListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ContainerListener&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="71b9e7712f29139f3cbcbee6022020c12f1fa790" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;FocusListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FocusListener&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="1998a0b5bebf33080eadbb59dd265bba1edad948" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;MaximizeAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MaximizeAction&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="fc806021c5042b88e87f9a39cf39e9e2b8330e4f" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;MouseInputListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="bf849ffc273c5021ec7716ebb1d8baf2ae892747" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;MoveAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MoveAction&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="429fdf6f0082da24eac66244a4fa25a00d93e856" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;PropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="9ac464fa807965926d89ef63588888c660fef346" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;RestoreAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RestoreAction&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="8234d2ce7fa0706e646aef5921d46b70c6d0bd74" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;SizeAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SizeAction&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="e70073e947cfc18cfed7dd7045c9c01141369bb5" translate="yes" xml:space="preserve">
          <source>The instance of an &lt;code&gt;IconifyAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IconifyAction&lt;/code&gt; 的实例。</target>
        </trans-unit>
        <trans-unit id="821545cbe636d66216bdce755849750bfe359d8c" translate="yes" xml:space="preserve">
          <source>The instance of the &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; class is returned for the &lt;code&gt;Bean&lt;/code&gt; class.</source>
          <target state="translated">为 &lt;code&gt;Bean&lt;/code&gt; 类返回 &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; 类的实例。</target>
        </trans-unit>
        <trans-unit id="fe35d64909d53ad3510a2a12bb002668399923b1" translate="yes" xml:space="preserve">
          <source>The instance registered in the platform &lt;code&gt;MBeanServer&lt;/code&gt; is also a &lt;a href=&quot;../../lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在平台 &lt;code&gt;MBeanServer&lt;/code&gt; 中注册的实例也是&lt;a href=&quot;../../lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8034f1687833a6f8c4d1326d8592f90018f9b440" translate="yes" xml:space="preserve">
          <source>The instance registered in the platform &lt;code&gt;MBeanServer&lt;/code&gt; with this &lt;code&gt;ObjectName&lt;/code&gt; implements all attributes defined by &lt;a href=&quot;../../util/logging/loggingmxbean&quot;&gt;&lt;code&gt;LoggingMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用此 &lt;code&gt;ObjectName&lt;/code&gt; 在平台 &lt;code&gt;MBeanServer&lt;/code&gt; 中注册的实例实现了&lt;a href=&quot;../../util/logging/loggingmxbean&quot;&gt; &lt;code&gt;LoggingMXBean&lt;/code&gt; &lt;/a&gt;定义的所有属性。</target>
        </trans-unit>
        <trans-unit id="7c0bba197e066898250665f6de73aa5e08d026f9" translate="yes" xml:space="preserve">
          <source>The instance specific getRequestProperty method should be used after an appropriate instance of URLConnection is obtained.</source>
          <target state="translated">在获得一个适当的URLConnection实例后,应该使用特定实例的getRequestProperty方法。</target>
        </trans-unit>
        <trans-unit id="3338c212374dff0d244e2a29925e58c59d21bf00" translate="yes" xml:space="preserve">
          <source>The instance specific setRequestProperty method should be used after an appropriate instance of URLConnection is obtained.</source>
          <target state="translated">在获得一个适当的URLConnection实例后,应该使用特定实例的setRequestProperty方法。</target>
        </trans-unit>
        <trans-unit id="33d1db5d66bf10179cbc91eb8c39b48825229a3d" translate="yes" xml:space="preserve">
          <source>The instance specific setRequestProperty method should be used after an appropriate instance of URLConnection is obtained. Invoking this method will have no effect.</source>
          <target state="translated">具体实例的setRequestProperty方法应该在获得一个适当的URLConnection实例后使用。调用该方法不会有任何效果。</target>
        </trans-unit>
        <trans-unit id="d1fbeab41e2aa5267a94fe378603af36274b8722" translate="yes" xml:space="preserve">
          <source>The instant epoch-seconds.</source>
          <target state="translated">瞬间的纪元-秒。</target>
        </trans-unit>
        <trans-unit id="7901aafd15bf23c3b39d73b5e02e372acef541aa" translate="yes" xml:space="preserve">
          <source>The instant is obtained using &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and optionally (@code NANO_OF_SECOND). The value of &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; may be outside the maximum range of &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;和（可选）（@ code NANO_OF_SECOND）获得即时信息。 &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; 的值可能在 &lt;code&gt;LocalDateTime&lt;/code&gt; 的最大范围之外。</target>
        </trans-unit>
        <trans-unit id="f9bae62297e2eb85f85adcb5c23f1964c77f72c5" translate="yes" xml:space="preserve">
          <source>The instant is obtained using &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and optionally &lt;code&gt;NANO_OF_SECOND&lt;/code&gt;. The value of &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; may be outside the maximum range of &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">使用&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;和可选的 &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; 获得该时刻。 &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; 的值可能在 &lt;code&gt;LocalDateTime&lt;/code&gt; 的最大范围之外。</target>
        </trans-unit>
        <trans-unit id="30129dac0e1c5b07ebec910099af96e81c4f9dd8" translate="yes" xml:space="preserve">
          <source>The instantiateChild method is a convenience hook in BeanContext to simplify the task of instantiating a Bean, nested, into a &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="translated">InstantiateChild方法是BeanContext中的便捷钩子，用于简化将嵌套的Bean实例化为 &lt;code&gt;BeanContext&lt;/code&gt; 的任务。</target>
        </trans-unit>
        <trans-unit id="f77c078c5f9aeaf66bf15d02253d245e615ac88d" translate="yes" xml:space="preserve">
          <source>The instrument must be part of a soundbank that this &lt;code&gt;Synthesizer&lt;/code&gt; supports. (To make sure, you can use the &lt;code&gt;getSoundbank&lt;/code&gt; method of &lt;code&gt;Instrument&lt;/code&gt; and the &lt;code&gt;isSoundbankSupported&lt;/code&gt; method of &lt;code&gt;Synthesizer&lt;/code&gt;.)</source>
          <target state="translated">乐器必须是此 &lt;code&gt;Synthesizer&lt;/code&gt; 支持的音库的一部分。（要确保，你可以使用 &lt;code&gt;getSoundbank&lt;/code&gt; 的方法 &lt;code&gt;Instrument&lt;/code&gt; 和 &lt;code&gt;isSoundbankSupported&lt;/code&gt; 的方法 &lt;code&gt;Synthesizer&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="9a37a2eb226e14bcfb598f5019503fb1c263149a" translate="yes" xml:space="preserve">
          <source>The int at the buffer's current position</source>
          <target state="translated">缓冲区当前位置的Int。</target>
        </trans-unit>
        <trans-unit id="f399009c35348dad1f9b984754bb8ad44cf2f1fa" translate="yes" xml:space="preserve">
          <source>The int at the given index</source>
          <target state="translated">给定索引处的int</target>
        </trans-unit>
        <trans-unit id="cd5bd83985b7ab506a14fd7d1fe1f37e7e280658" translate="yes" xml:space="preserve">
          <source>The int value at the buffer's current position</source>
          <target state="translated">缓冲区当前位置的int值。</target>
        </trans-unit>
        <trans-unit id="1ad78d2b15738eeaffcdd43ad90d8ea023e56b29" translate="yes" xml:space="preserve">
          <source>The int value at the given index</source>
          <target state="translated">给定索引处的int值</target>
        </trans-unit>
        <trans-unit id="5853f3fa53f15931c8c19c152516c6b810652678" translate="yes" xml:space="preserve">
          <source>The integer part of &lt;code&gt;this / divisor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this / divisor&lt;/code&gt; 的整数部分。</target>
        </trans-unit>
        <trans-unit id="af9b8b0307980238eed12ed1ddf6de7930d96166" translate="yes" xml:space="preserve">
          <source>The integer that is returned by &lt;code&gt;HSBtoRGB&lt;/code&gt; encodes the value of a color in bits 0-23 of an integer value that is the same format used by the method &lt;a href=&quot;#getRGB()&quot;&gt;&lt;code&gt;getRGB&lt;/code&gt;&lt;/a&gt;. This integer can be supplied as an argument to the &lt;code&gt;Color&lt;/code&gt; constructor that takes a single integer argument.</source>
          <target state="translated">&lt;code&gt;HSBtoRGB&lt;/code&gt; 返回的整数在整数值的0-23位中编码颜色的值，该整数值与方法&lt;a href=&quot;#getRGB()&quot;&gt; &lt;code&gt;getRGB&lt;/code&gt; &lt;/a&gt;使用的格式相同。可以将此整数作为参数提供给采用单个整数参数的 &lt;code&gt;Color&lt;/code&gt; 构造函数。</target>
        </trans-unit>
        <trans-unit id="d189b186ec362039be16f80734b20b4c4f3b7d9a" translate="yes" xml:space="preserve">
          <source>The intended destination media for style information.</source>
          <target state="translated">风格信息的预定目标媒体。</target>
        </trans-unit>
        <trans-unit id="5db6a12c6a37e8daecdca1e7fe4e78e3b179ac95" translate="yes" xml:space="preserve">
          <source>The intended destination media for style information. The media is often specified in the &lt;code&gt;ownerNode&lt;/code&gt;. If no media has been specified, the &lt;code&gt;MediaList&lt;/code&gt; will be empty. See the media attribute definition for the &lt;code&gt;LINK&lt;/code&gt; element in HTML 4.0, and the media pseudo-attribute for the XML style sheet processing instruction . Modifying the media list may cause a change to the attribute &lt;code&gt;disabled&lt;/code&gt;.</source>
          <target state="translated">样式信息的预期目标媒体。媒体通常在 &lt;code&gt;ownerNode&lt;/code&gt; 中指定。如果未指定任何媒体，则 &lt;code&gt;MediaList&lt;/code&gt; 将为空。请参见HTML 4.0中 &lt;code&gt;LINK&lt;/code&gt; 元素的媒体属性定义，以及XML样式表处理指令的媒体伪属性。修改媒体列表可能会导致 &lt;code&gt;disabled&lt;/code&gt; 属性的更改。</target>
        </trans-unit>
        <trans-unit id="7b3962a31770a8a1a3dd88816d3e71b6159a620d" translate="yes" xml:space="preserve">
          <source>The intention is to allow developers to turn on voluminous logging, but to limit the messages that are sent to certain &lt;code&gt;Handlers&lt;/code&gt;.</source>
          <target state="translated">目的是允许开发人员打开大量日志记录，但限制发送给某些 &lt;code&gt;Handlers&lt;/code&gt; 的消息。</target>
        </trans-unit>
        <trans-unit id="7ae57ebccdbb22db556eaf3cff8f99142d9c282e" translate="yes" xml:space="preserve">
          <source>The interactions of &lt;code&gt;getTarget&lt;/code&gt; with memory are the same as of a read from a &lt;code&gt;volatile&lt;/code&gt; field.</source>
          <target state="translated">&lt;code&gt;getTarget&lt;/code&gt; 与内存的交互与从 &lt;code&gt;volatile&lt;/code&gt; 字段读取的交互相同。</target>
        </trans-unit>
        <trans-unit id="e26c912cdad75eed02864256ebb606789bb54554" translate="yes" xml:space="preserve">
          <source>The interactions of &lt;code&gt;getTarget&lt;/code&gt; with memory are the same as of a read from an ordinary variable, such as an array element or a non-volatile, non-final field.</source>
          <target state="translated">&lt;code&gt;getTarget&lt;/code&gt; 与内存的交互与从普通变量（例如数组元素或非易失性非最终字段）的读取操作相同。</target>
        </trans-unit>
        <trans-unit id="dbd4770385ec4ef685776fb36c773c630df22d7a" translate="yes" xml:space="preserve">
          <source>The interactions with memory are the same as of a write to a volatile field. In particular, any threads is guaranteed to see the updated target the next time it calls &lt;code&gt;getTarget&lt;/code&gt;.</source>
          <target state="translated">与内存的交互与对易失性字段的写入相同。特别是，保证所有线程在下次调用 &lt;code&gt;getTarget&lt;/code&gt; 时都能看到更新的目标。</target>
        </trans-unit>
        <trans-unit id="d52462e55d1986519fb9c0c7702ec405729f552d" translate="yes" xml:space="preserve">
          <source>The interactions with memory are the same as of a write to an ordinary variable, such as an array element or a non-volatile, non-final field.</source>
          <target state="translated">与内存的交互作用与对普通变量的写入相同,如数组元素或非易失性、非最终字段。</target>
        </trans-unit>
        <trans-unit id="4a497b9e4bd64268147027cd4c3bdfe5dd24e18c" translate="yes" xml:space="preserve">
          <source>The interface &lt;code&gt;SyncResolver&lt;/code&gt; provides a way for an application to decide manually what to do when a conflict occurs. When the &lt;code&gt;CachedRowSet&lt;/code&gt; method &lt;code&gt;acceptChanges&lt;/code&gt; finishes and has detected one or more conflicts, it throws a &lt;code&gt;SyncProviderException&lt;/code&gt; object. An application can catch the exception and have it retrieve a &lt;code&gt;SyncResolver&lt;/code&gt; object by calling the method &lt;code&gt;SyncProviderException.getSyncResolver()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SyncResolver&lt;/code&gt; 接口为应用程序提供了一种方法，可以在发生冲突时手动决定如何处理。当 &lt;code&gt;CachedRowSet&lt;/code&gt; 方法 &lt;code&gt;acceptChanges&lt;/code&gt; 完成并检测到一个或多个冲突时，它将引发 &lt;code&gt;SyncProviderException&lt;/code&gt; 对象。应用程序可以捕获异常，并可以通过调用方法 &lt;code&gt;SyncProviderException.getSyncResolver()&lt;/code&gt; 来检索 &lt;code&gt;SyncResolver&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="b273bc96bd0f1dbfa83a413ec1f9f6d41c2e5dca" translate="yes" xml:space="preserve">
          <source>The interface definitions provided in this package form the basis for all compliant JDBC &lt;code&gt;RowSet&lt;/code&gt; implementations. Vendors and more advanced developers who intend to provide their own compliant &lt;code&gt;RowSet&lt;/code&gt; implementations should pay particular attention to the assertions detailed in specification interfaces.</source>
          <target state="translated">此软件包中提供的接口定义构成了所有兼容的JDBC &lt;code&gt;RowSet&lt;/code&gt; 实现的基础。打算提供自己的兼容 &lt;code&gt;RowSet&lt;/code&gt; 实现的供应商和更高级的开发人员应特别注意规范接口中详细说明的断言。</target>
        </trans-unit>
        <trans-unit id="ffce5f400e966e604662faf7eb9edb69314ee268" translate="yes" xml:space="preserve">
          <source>The interface for a custom taglet supported by doclets such as the &lt;a href=&quot;standarddoclet&quot;&gt;&lt;code&gt;standard doclet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">诸如&lt;a href=&quot;standarddoclet&quot;&gt; &lt;code&gt;standard doclet&lt;/code&gt; &lt;/a&gt;支持的自定义taglet的接口。</target>
        </trans-unit>
        <trans-unit id="90ebdbfaee190288abc75b90b51d8860676ec115" translate="yes" xml:space="preserve">
          <source>The interface for a custom taglet supported by doclets such as the &lt;a href=&quot;standarddoclet&quot;&gt;&lt;code&gt;standard doclet&lt;/code&gt;&lt;/a&gt;. Custom taglets are used to handle custom tags in documentation comments; custom tags can be instantiated individually as either</source>
          <target state="translated">诸如&lt;a href=&quot;standarddoclet&quot;&gt; &lt;code&gt;standard doclet&lt;/code&gt; &lt;/a&gt;支持的自定义taglet的接口。自定义标签用于处理文档注释中的自定义标签。自定义标签可以分别实例化为</target>
        </trans-unit>
        <trans-unit id="44db249a7592112af83543802bee3fa2791eef24" translate="yes" xml:space="preserve">
          <source>The interface for a javac plug-in.</source>
          <target state="translated">javac插件的接口。</target>
        </trans-unit>
        <trans-unit id="014408c9d911a7844a8b809c1365a12d70d22469" translate="yes" xml:space="preserve">
          <source>The interface for an annotation processor.</source>
          <target state="translated">注释处理器的接口。</target>
        </trans-unit>
        <trans-unit id="815a2f3fe499d670029a246fc413829947cb8ed8" translate="yes" xml:space="preserve">
          <source>The interface for objects expressing interest in image data through the ImageProducer interfaces.</source>
          <target state="translated">通过ImageProducer接口表达对图像数据兴趣的对象的接口。</target>
        </trans-unit>
        <trans-unit id="dc32d90db8ccb9d0fceccac880b29396b38f320c" translate="yes" xml:space="preserve">
          <source>The interface for objects expressing interest in image data through the ImageProducer interfaces. When a consumer is added to an image producer, the producer delivers all of the data about the image using the method calls defined in this interface.</source>
          <target state="translated">通过ImageProducer接口表达对图像数据兴趣的对象的接口。当一个消费者被添加到一个图像生产者中时,生产者使用这个接口中定义的方法调用来提供所有关于图像的数据。</target>
        </trans-unit>
        <trans-unit id="7139ca9620764f1257da5481b1366059bfffba57" translate="yes" xml:space="preserve">
          <source>The interface for objects which can produce the image data for Images.</source>
          <target state="translated">可以为Images生成图像数据的对象接口。</target>
        </trans-unit>
        <trans-unit id="ebd39d25c8a62a39f40fbacb23ec03b0a983d6b6" translate="yes" xml:space="preserve">
          <source>The interface for objects which can produce the image data for Images. Each image contains an ImageProducer which is used to reconstruct the image whenever it is needed, for example, when a new size of the Image is scaled, or when the width or height of the Image is being requested.</source>
          <target state="translated">对象的接口,这些对象可以为Image生成图像数据。每个图像都包含一个ImageProducer,它用于在需要的时候重建图像,例如,当一个新的图像尺寸被缩放,或者当要求图像的宽度或高度时。</target>
        </trans-unit>
        <trans-unit id="fd46510baa1da6efd67e1d8d8ef941c14bc2bd97" translate="yes" xml:space="preserve">
          <source>The interface for objects which contain a set of items for which zero or more can be selected.</source>
          <target state="translated">对象的接口,这些对象包含一组可以选择零或多个项目。</target>
        </trans-unit>
        <trans-unit id="2d2e39260adc4b1e7a790d5c2b75fbeea89985e5" translate="yes" xml:space="preserve">
          <source>The interface for objects which have an adjustable numeric value contained within a bounded range of values.</source>
          <target state="translated">对象的接口,这些对象有一个可调节的数值,包含在一个限定的数值范围内。</target>
        </trans-unit>
        <trans-unit id="99054625c1486a351cef471e9cb044893a75dcb2" translate="yes" xml:space="preserve">
          <source>The interface is designed to support one of two input user interfaces:</source>
          <target state="translated">该接口被设计为支持两种输入用户界面中的一种。</target>
        </trans-unit>
        <trans-unit id="b4d2d968b034bed958f5e02e5377b1b7679e8e20" translate="yes" xml:space="preserve">
          <source>The interface must be public. No additional access checks are performed.</source>
          <target state="translated">该接口必须是公共的。不进行额外的访问检查。</target>
        </trans-unit>
        <trans-unit id="88b5e4b417f3ffb65f834c2fb994905cba4b3348" translate="yes" xml:space="preserve">
          <source>The interface that a &lt;code&gt;RowSet&lt;/code&gt; object implements in order to present itself to a &lt;code&gt;RowSetReader&lt;/code&gt; or &lt;code&gt;RowSetWriter&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 对象实现的接口，以便将自身呈现给 &lt;code&gt;RowSetReader&lt;/code&gt; 或 &lt;code&gt;RowSetWriter&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="237b5c22ea8f7adabe44539264010dfc2fb6837a" translate="yes" xml:space="preserve">
          <source>The interface that a &lt;code&gt;RowSet&lt;/code&gt; object implements in order to present itself to a &lt;code&gt;RowSetReader&lt;/code&gt; or &lt;code&gt;RowSetWriter&lt;/code&gt; object. The &lt;code&gt;RowSetInternal&lt;/code&gt; interface contains methods that let the reader or writer access and modify the internal state of the rowset.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 对象实现的接口，以便将自身呈现给 &lt;code&gt;RowSetReader&lt;/code&gt; 或 &lt;code&gt;RowSetWriter&lt;/code&gt; 对象。该 &lt;code&gt;RowSetInternal&lt;/code&gt; 接口包含让读者或作者访问和修改行集的内部状态的方法。</target>
        </trans-unit>
        <trans-unit id="7d7f0195a4e627d3e08cc4d2f7cdc44dd3952022" translate="yes" xml:space="preserve">
          <source>The interface that adds support to the JDBC API for the JavaBeans component model.</source>
          <target state="translated">为JavaBeans组件模型添加支持JDBC API的接口。</target>
        </trans-unit>
        <trans-unit id="84520ffa5f5af5dec870ca1fa654282bf45951b0" translate="yes" xml:space="preserve">
          <source>The interface that adds support to the JDBC API for the JavaBeans component model. A rowset, which can be used as a JavaBeans component in a visual Bean development environment, can be created and configured at design time and executed at run time.</source>
          <target state="translated">为JavaBeans组件模型添加支持JDBC API的接口。可以在设计时创建和配置行集,并在运行时执行,行集可以作为可视化Bean开发环境中的JavaBeans组件使用。</target>
        </trans-unit>
        <trans-unit id="2b33bf1c3e5e47208ecb26c4656693ec0a731bfe" translate="yes" xml:space="preserve">
          <source>The interface that adds support to the JDBC API for the JavaBeans&amp;trade; component model.</source>
          <target state="translated">该接口添加了对JavaBeans&amp;trade;组件模型的JDBC API的支持。</target>
        </trans-unit>
        <trans-unit id="76a2844bf74f0625edaf8520bc6024340f01adf0" translate="yes" xml:space="preserve">
          <source>The interface that adds support to the JDBC API for the JavaBeans&amp;trade; component model. A rowset, which can be used as a JavaBeans component in a visual Bean development environment, can be created and configured at design time and executed at run time.</source>
          <target state="translated">该接口添加了对JavaBeans&amp;trade;组件模型的JDBC API的支持。行集可以在可视Bean开发环境中用作JavaBeans组件，可以在设计时创建和配置行集，并在运行时执行。</target>
        </trans-unit>
        <trans-unit id="a0c8ea60334ce45697e942c34efac5bacbbb6cd8" translate="yes" xml:space="preserve">
          <source>The interface that all standard implementations of &lt;code&gt;CachedRowSet&lt;/code&gt; must implement.</source>
          <target state="translated">所有 &lt;code&gt;CachedRowSet&lt;/code&gt; 的标准实现都必须实现的接口。</target>
        </trans-unit>
        <trans-unit id="2a366a603678d4be4c1e51b5bf1cd25eef0ba2f7" translate="yes" xml:space="preserve">
          <source>The interface that defines a &lt;code&gt;KeySelectionManager&lt;/code&gt;.</source>
          <target state="translated">定义 &lt;code&gt;KeySelectionManager&lt;/code&gt; 的接口。</target>
        </trans-unit>
        <trans-unit id="92a994fc926b48e60bc432f1b12dd7a0cf8833ec" translate="yes" xml:space="preserve">
          <source>The interface that defines a &lt;code&gt;KeySelectionManager&lt;/code&gt;. To qualify as a &lt;code&gt;KeySelectionManager&lt;/code&gt;, the class needs to implement the method that identifies the list index given a character and the combo box data model.</source>
          <target state="translated">定义 &lt;code&gt;KeySelectionManager&lt;/code&gt; 的接口。为了有资格作为 &lt;code&gt;KeySelectionManager&lt;/code&gt; ，该类需要实现在给定字符和组合框数据模型的情况下标识列表索引的方法。</target>
        </trans-unit>
        <trans-unit id="156522656c8ba136a0bd17f52208d4429357e173" translate="yes" xml:space="preserve">
          <source>The interface that every driver class must implement.</source>
          <target state="translated">每个驱动类必须实现的接口。</target>
        </trans-unit>
        <trans-unit id="b83e5587b5e3268f7bd3121d72946c5268c5087e" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public key.</source>
          <target state="translated">DSA公钥的接口。</target>
        </trans-unit>
        <trans-unit id="9ed25013cc4c4ff6dfb08741855f976f636b0905" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public key. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</source>
          <target state="translated">DSA公钥的接口。NIST的FIPS-186中定义了DSA(数字签名算法)。</target>
        </trans-unit>
        <trans-unit id="463dbbe10e7a119d6739cd125d3ac314683f9e4d" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public or private key.</source>
          <target state="translated">DSA公钥或私钥的接口。</target>
        </trans-unit>
        <trans-unit id="044208746fb44cc724fe5c2f514ca19e29568745" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public or private key. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</source>
          <target state="translated">DSA公钥或私钥的接口。NIST的FIPS-186中定义了DSA(数字签名算法)。</target>
        </trans-unit>
        <trans-unit id="adefbd72188ceac085b3c4a9f4be42b94848b3ce" translate="yes" xml:space="preserve">
          <source>The interface to a Diffie-Hellman key.</source>
          <target state="translated">Diffie-Hellman 密钥的接口。</target>
        </trans-unit>
        <trans-unit id="0e7434107d0fa07c24f0a582e03af6e48009d021" translate="yes" xml:space="preserve">
          <source>The interface to a Diffie-Hellman private key.</source>
          <target state="translated">Diffie-Hellman私钥的接口。</target>
        </trans-unit>
        <trans-unit id="4acf01c0df81cddc20d7dfb79ad62615a15e5c84" translate="yes" xml:space="preserve">
          <source>The interface to a Diffie-Hellman public key.</source>
          <target state="translated">Diffie-Hellman公钥的接口。</target>
        </trans-unit>
        <trans-unit id="bb7785adea75ae08367d3fad0898e7f74e3a25df" translate="yes" xml:space="preserve">
          <source>The interface to a PBE key.</source>
          <target state="translated">PBE 密钥的接口。</target>
        </trans-unit>
        <trans-unit id="a842dd810f1156e09e9ab91f8793e0b003e7a971" translate="yes" xml:space="preserve">
          <source>The interface to a public or private key in &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard, such as those for RSA, or RSASSA-PSS algorithms.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS＃1 v2.2&lt;/a&gt;标准中的公钥或私钥的接口，例如RSA或RSASSA-PSS算法的公钥或私钥。</target>
        </trans-unit>
        <trans-unit id="91e4056f5dd925551a0070946d45540c821673da" translate="yes" xml:space="preserve">
          <source>The interface to an RSA multi-prime private key, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard, using the</source>
          <target state="translated">使用&lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS＃1 v2.2&lt;/a&gt;标准定义的RSA多主专用密钥的接口。</target>
        </trans-unit>
        <trans-unit id="5c1db7ae0638b04f0ceada2e49d2df2966d53fb8" translate="yes" xml:space="preserve">
          <source>The interface to an RSA multi-prime private key, as defined in the PKCS#1 v2.1, using the</source>
          <target state="translated">PKCS#1 v2.1中定义的RSA多主键私钥的接口,使用的是</target>
        </trans-unit>
        <trans-unit id="a93dc36b23643b7698e78209d821a3579ed3fa7c" translate="yes" xml:space="preserve">
          <source>The interface to an RSA private key, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard, using the</source>
          <target state="translated">使用&lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS＃1 v2.2&lt;/a&gt;标准定义的RSA私钥的接口。</target>
        </trans-unit>
        <trans-unit id="962644ae619db56ffc6c6dad22fd41157b2fd2a0" translate="yes" xml:space="preserve">
          <source>The interface to an RSA private key, as defined in the PKCS#1 standard, using the</source>
          <target state="translated">RSA私钥的接口,如PKCS#1标准所定义,使用的是</target>
        </trans-unit>
        <trans-unit id="9af190896ba0f3ec911fd1ca9076fd92e2426bcb" translate="yes" xml:space="preserve">
          <source>The interface to an RSA private key.</source>
          <target state="translated">RSA私钥的接口。</target>
        </trans-unit>
        <trans-unit id="40ba9f0717c9368de370e6c22458f351ecd83c45" translate="yes" xml:space="preserve">
          <source>The interface to an RSA public key.</source>
          <target state="translated">RSA公钥的接口。</target>
        </trans-unit>
        <trans-unit id="21ca22444f4daa0fa309978083c83a357a706d1a" translate="yes" xml:space="preserve">
          <source>The interface to an RSA public or private key.</source>
          <target state="translated">RSA公钥或私钥的接口。</target>
        </trans-unit>
        <trans-unit id="7eddc4f13981b28b7fc90f393624b67b1c6494e1" translate="yes" xml:space="preserve">
          <source>The interface to an elliptic curve (EC) key.</source>
          <target state="translated">椭圆曲线(EC)键的接口。</target>
        </trans-unit>
        <trans-unit id="e0aecd668220d63ab8af6b0ed5fd7985ec0495d5" translate="yes" xml:space="preserve">
          <source>The interface to an elliptic curve (EC) private key.</source>
          <target state="translated">椭圆曲线(EC)私钥的接口。</target>
        </trans-unit>
        <trans-unit id="b4cca451c5f37a2fb4b20bef00c3b41668f48298" translate="yes" xml:space="preserve">
          <source>The interface to an elliptic curve (EC) public key.</source>
          <target state="translated">椭圆曲线(EC)公钥的接口。</target>
        </trans-unit>
        <trans-unit id="9db75f5b48a5bcf9d2e52e47def4c368d334ede1" translate="yes" xml:space="preserve">
          <source>The interface used for the custom mapping of an SQL user-defined type (UDT) to a class in the Java programming language.</source>
          <target state="translated">用于将SQL用户定义类型(UDT)自定义映射到Java编程语言中的一个类的接口。</target>
        </trans-unit>
        <trans-unit id="f8a229341f31a1748b35e7f9ad3be26ae2fca2a9" translate="yes" xml:space="preserve">
          <source>The interface used for the custom mapping of an SQL user-defined type (UDT) to a class in the Java programming language. The class object for a class implementing the &lt;code&gt;SQLData&lt;/code&gt; interface will be entered in the appropriate &lt;code&gt;Connection&lt;/code&gt; object's type map along with the SQL name of the UDT for which it is a custom mapping.</source>
          <target state="translated">用于将SQL用户定义类型（UDT）自定义映射到Java编程语言中的类的接口。实现 &lt;code&gt;SQLData&lt;/code&gt; 接口的类的类对象将与相应的UDT的SQL名称（作为自定义映射）一起输入到适当的 &lt;code&gt;Connection&lt;/code&gt; 对象的类型映射中。</target>
        </trans-unit>
        <trans-unit id="0dfc68c91d6204b1bb749c632244d68f09a4cfe9" translate="yes" xml:space="preserve">
          <source>The interface used to execute SQL stored procedures.</source>
          <target state="translated">用于执行SQL存储过程的接口。</target>
        </trans-unit>
        <trans-unit id="41e253d110bb4cc12058ca9717d76c2818ce3388" translate="yes" xml:space="preserve">
          <source>The interface used to execute SQL stored procedures. The JDBC API provides a stored procedure SQL escape syntax that allows stored procedures to be called in a standard way for all RDBMSs. This escape syntax has one form that includes a result parameter and one that does not. If used, the result parameter must be registered as an OUT parameter. The other parameters can be used for input, output or both. Parameters are referred to sequentially, by number, with the first parameter being 1.</source>
          <target state="translated">用于执行SQL存储过程的接口。JDBC API提供了一个存储过程SQL转义语法,它允许以标准的方式调用所有RDBMS的存储过程。这种转义语法有一种包含结果参数的形式和一种不包含结果参数的形式。如果使用,结果参数必须注册为OUT参数。其他参数可以用于输入、输出,也可以同时用于输入和输出。参数按编号顺序引用,第一个参数为1。</target>
        </trans-unit>
        <trans-unit id="5a31b6987c2c79396d491dc908293fbe58b41db8" translate="yes" xml:space="preserve">
          <source>The interface which defines the methods required for the implementation of the popup portion of a combo box.</source>
          <target state="translated">该接口定义了实现组合框的弹出部分所需的方法。</target>
        </trans-unit>
        <trans-unit id="4fa870ba5a0a544cc68fd31508316e7b610bd371" translate="yes" xml:space="preserve">
          <source>The interface whose implementing classes are used to connect Script Engines with objects, such as scoped Bindings, in hosting applications.</source>
          <target state="translated">该接口的实现类用于连接脚本引擎和对象,如托管应用程序中的作用域Bindings。</target>
        </trans-unit>
        <trans-unit id="ad68169d81438deea93e7cdddc0d3f1cc9aa0897" translate="yes" xml:space="preserve">
          <source>The interface whose implementing classes are used to connect Script Engines with objects, such as scoped Bindings, in hosting applications. Each scope is a set of named attributes whose values can be set and retrieved using the &lt;code&gt;ScriptContext&lt;/code&gt; methods. ScriptContexts also expose Readers and Writers that can be used by the ScriptEngines for input and output.</source>
          <target state="translated">该接口的实现类用于在宿主应用程序中将脚本引擎与对象（例如作用域绑定）连接。每个作用域都是一组命名属性，可以使用 &lt;code&gt;ScriptContext&lt;/code&gt; 方法设置和检索其值。ScriptContext还公开了可以由ScriptEngine用于输入和输出的Reader和Writer。</target>
        </trans-unit>
        <trans-unit id="335bcfeb28a2280febc28797333307ddf650e172" translate="yes" xml:space="preserve">
          <source>The interfaces and classes in this package came from Document Object Model (DOM) Level 3 XPath Specification, Working Draft 20 August 2002. Refer to &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-XPath/&quot;&gt; Document Object Model (DOM) Level 3 XPath Specification, Version 1.0, W3C Working Group Note 26 February 2004&lt;/a&gt; except that the values of &lt;a href=&quot;xpathexception#INVALID_EXPRESSION_ERR&quot;&gt;&lt;code&gt;XPathException.INVALID_EXPRESSION_ERR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;xpathexception#TYPE_ERR&quot;&gt;&lt;code&gt;XPathException.TYPE_ERR&lt;/code&gt;&lt;/a&gt; are 1 and 2 respectively (instead of 51 and 52).</source>
          <target state="translated">此软件包中的接口和类来自文档对象模型（DOM）3级XPath规范，工作草案2002年8月20日。请参阅&lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-XPath/&quot;&gt;文档对象模型（DOM）3级XPath规范，版本1.0，W3C工作组说明2004年2月26日，&lt;/a&gt;但&lt;a href=&quot;xpathexception#INVALID_EXPRESSION_ERR&quot;&gt; &lt;code&gt;XPathException.INVALID_EXPRESSION_ERR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;xpathexception#TYPE_ERR&quot;&gt; &lt;code&gt;XPathException.TYPE_ERR&lt;/code&gt; &lt;/a&gt;的值分别为1和2（而不是51和52）。</target>
        </trans-unit>
        <trans-unit id="b586a8bc8674bef4ff71be9874a1bca665e48ea2" translate="yes" xml:space="preserve">
          <source>The interfaces in this package are annotated with &lt;a href=&quot;../../lang/functionalinterface&quot;&gt;&lt;code&gt;FunctionalInterface&lt;/code&gt;&lt;/a&gt;. This annotation is not a requirement for the compiler to recognize an interface as a functional interface, but merely an aid to capture design intent and enlist the help of the compiler in identifying accidental violations of design intent.</source>
          <target state="translated">该软件包中的接口以&lt;a href=&quot;../../lang/functionalinterface&quot;&gt; &lt;code&gt;FunctionalInterface&lt;/code&gt; &lt;/a&gt;进行注释。此批注不是编译器将接口识别为功能接口的要求，而仅仅是捕获设计意图并帮助编译器识别偶然违反设计意图的帮助。</target>
        </trans-unit>
        <trans-unit id="f8e80ea45bc954fd03a7e9d97b2ac2fddee32d9c" translate="yes" xml:space="preserve">
          <source>The interfaces in this package are general purpose functional interfaces used by the JDK, and are available to be used by user code as well. While they do not identify a complete set of function shapes to which lambda expressions might be adapted, they provide enough to cover common requirements. Other functional interfaces provided for specific purposes, such as &lt;a href=&quot;../../io/filefilter&quot;&gt;&lt;code&gt;FileFilter&lt;/code&gt;&lt;/a&gt;, are defined in the packages where they are used.</source>
          <target state="translated">此软件包中的接口是JDK使用的通用功能接口，并且也可供用户代码使用。尽管它们不能确定可以适应lambda表达式的功能集的完整集合，但它们提供的功能足以满足常见要求。在使用它们的包中定义了为特定目的提供的其他功能接口，例如&lt;a href=&quot;../../io/filefilter&quot;&gt; &lt;code&gt;FileFilter&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="afbaffc2c6398945440a2e49ce26cd85be3ec891" translate="yes" xml:space="preserve">
          <source>The interfaces of an &lt;code&gt;AttributeSet&lt;/code&gt; resemble those of the Java Collections API's &lt;code&gt;java.util.Map&lt;/code&gt; interface, but is more restrictive in the types it will accept, and combines keys and values into an &lt;code&gt;Attribute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AttributeSet&lt;/code&gt; 的接口类似于Java Collections API的 &lt;code&gt;java.util.Map&lt;/code&gt; 接口，但是在可接受的类型上有更多限制，并将键和值组合到 &lt;code&gt;Attribute&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="4f0aedf60340a18f664d801740438927103a34c5" translate="yes" xml:space="preserve">
          <source>The interfaces of an AttributeSet resemble those of the Java Collections API's java.util.Map interface, but is more restrictive in the types it will accept, and combines keys and values into an Attribute.</source>
          <target state="translated">AttributeSet的接口类似于Java Collections API的java.util.Map接口,但在接受的类型上限制性更强,并将键和值结合成一个Attribute。</target>
        </trans-unit>
        <trans-unit id="986cf04dad930a7f864970ec2d2807d31aa71120" translate="yes" xml:space="preserve">
          <source>The interfaces that the CatalogResolver extend specified checked exceptions, including:</source>
          <target state="translated">CatalogResolver扩展的接口指定了检查异常,包括:。</target>
        </trans-unit>
        <trans-unit id="8f8b3b9b5f4ed01d13daed32997afb725777101d" translate="yes" xml:space="preserve">
          <source>The interfaces will be resolved similar to classes loaded via the &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadClass(String,String)&lt;/code&gt;&lt;/a&gt; method using the given &lt;code&gt;codebase&lt;/code&gt;.</source>
          <target state="translated">接口的解析类似于使用给定 &lt;code&gt;codebase&lt;/code&gt; 通过&lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadClass(String,String)&lt;/code&gt; &lt;/a&gt;方法加载的类。</target>
        </trans-unit>
        <trans-unit id="d06b1a6249e8d629b4af020df493456736e07626" translate="yes" xml:space="preserve">
          <source>The interiors of the individual stored sub-paths are all non-empty and non-overlapping. Paths are decomposed during construction into separate component non-overlapping parts, empty pieces of the path are discarded, and then these non-empty and non-overlapping properties are maintained through all subsequent CAG operations. Outlines of different component sub-paths may touch each other, as long as they do not cross so that their enclosed areas overlap.</source>
          <target state="translated">各个存储子路径的内部都是非空的、非重叠的。路径在构造过程中被分解为独立的组件非重叠部分,路径的空块被丢弃,然后在所有后续的CAG操作中保持这些非空和非重叠的特性。不同组件子路径的轮廓可以相互接触,只要不交叉,使其封闭区域重叠即可。</target>
        </trans-unit>
        <trans-unit id="f01d7ff8717035e216dfcc98680087099b0aef79" translate="yes" xml:space="preserve">
          <source>The internal buffer array where the data is stored.</source>
          <target state="translated">存储数据的内部缓冲区阵列。</target>
        </trans-unit>
        <trans-unit id="4c88b3d99811fc3ce8911d52260d63fb6bd23bc5" translate="yes" xml:space="preserve">
          <source>The internal buffer array where the data is stored. When necessary, it may be replaced by another array of a different size.</source>
          <target state="translated">存储数据的内部缓冲阵列。必要时,可由另一个不同大小的数组代替。</target>
        </trans-unit>
        <trans-unit id="e467d22d50f08036b2d07e61bd60b6c01391383c" translate="yes" xml:space="preserve">
          <source>The internal buffer where data is stored.</source>
          <target state="translated">存储数据的内部缓冲区。</target>
        </trans-unit>
        <trans-unit id="4b83e6877fa5cf0fe0c11f806ceb26931ce826b9" translate="yes" xml:space="preserve">
          <source>The internal details of converting an &lt;code&gt;IIOMetadata&lt;/code&gt; object into a writer-specific format will vary according to the context of the operation. Typically, an &lt;code&gt;ImageWriter&lt;/code&gt; will inspect the incoming object to see if it implements additional interfaces with which the writer is familiar. This might be the case, for example, if the object was obtained by means of a read operation on a reader plug-in written by the same vendor as the writer. In this case, the writer may access the incoming object by means of its plug-in specific interfaces. In this case, the re-encoding may be close to lossless if the image file format is kept constant. If the format is changing, the writer may still attempt to preserve as much information as possible.</source>
          <target state="translated">将 &lt;code&gt;IIOMetadata&lt;/code&gt; 对象转换为特定于写入程序的格式的内部细节将根据操作的上下文而有所不同。通常， &lt;code&gt;ImageWriter&lt;/code&gt; 将检查传入的对象，以查看它是否实现了编写者熟悉的其他接口。例如，如果对象是通过对与写入器相同的供应商编写的读取器插件的读取操作获得的，则可能是这种情况。在这种情况下，编写者可以通过其插件特定的接口访问传入的对象。在这种情况下，如果图像文件格式保持不变，则重新编码可能接近无损。如果格式正在更改，编写者可能仍会尝试保留尽可能多的信息。</target>
        </trans-unit>
        <trans-unit id="026c3bb1a08b7e0301eba9e3961c4a88004f9391" translate="yes" xml:space="preserve">
          <source>The internal field corresponding to the type name of this &lt;code&gt;ArrayType&lt;/code&gt; instance is also set to the class name of the array instances it describes. In other words, the methods &lt;code&gt;getClassName&lt;/code&gt; and &lt;code&gt;getTypeName&lt;/code&gt; return the same string value. The internal field corresponding to the description of this &lt;code&gt;ArrayType&lt;/code&gt; instance is set to a string value which follows the following template:</source>
          <target state="translated">与此 &lt;code&gt;ArrayType&lt;/code&gt; 实例的类型名称相对应的内部字段也设置为它描述的阵列实例的类名称。换句话说，方法 &lt;code&gt;getClassName&lt;/code&gt; 和 &lt;code&gt;getTypeName&lt;/code&gt; 返回相同的字符串值。与此 &lt;code&gt;ArrayType&lt;/code&gt; 实例的描述相对应的内部字段设置为一个字符串值，该字符串值遵循以下模板：</target>
        </trans-unit>
        <trans-unit id="97873cfa8b14ac5ef85a6a7f8b7047b379afa867" translate="yes" xml:space="preserve">
          <source>The internal implementation can approximate some of the equations and it can also eliminate some steps to avoid unnecessary operations. For example, consider a discrete integer image with non-premultiplied alpha values that uses 8 bits per component for storage. The stored values for a nearly transparent darkened red might be:</source>
          <target state="translated">内部实现可以近似一些方程,它还可以省去一些步骤以避免不必要的操作。例如,考虑一个具有非预乘α值的离散整数图像,每个分量使用8位进行存储。一个近乎透明的暗红色的存储值可能是。</target>
        </trans-unit>
        <trans-unit id="0552ecd2a51650fc6dff9db26c8cd0f352bcf862" translate="yes" xml:space="preserve">
          <source>The internal subset as a string, or &lt;code&gt;null&lt;/code&gt; if there is none.</source>
          <target state="translated">内部子集为字符串，如果没有，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fc176506ed531eac8b6831ba5710d3abdbe4d9e" translate="yes" xml:space="preserve">
          <source>The internal subset as a string, or &lt;code&gt;null&lt;/code&gt; if there is none. This is does not contain the delimiting square brackets.</source>
          <target state="translated">内部子集为字符串，如果没有，则为 &lt;code&gt;null&lt;/code&gt; 。这不包含定界方括号。</target>
        </trans-unit>
        <trans-unit id="bc341f1196d05a1444add689183382b41f0973e8" translate="yes" xml:space="preserve">
          <source>The interpretation of &lt;code&gt;filterExpr&lt;/code&gt; is based on RFC 2254. It may additionally contain variables of the form &lt;code&gt;{i}&lt;/code&gt; -- where &lt;code&gt;i&lt;/code&gt; is an integer -- that refer to objects in the &lt;code&gt;filterArgs&lt;/code&gt; array. The interpretation of &lt;code&gt;filterExpr&lt;/code&gt; is otherwise identical to that of the &lt;code&gt;filter&lt;/code&gt; parameter of the method &lt;code&gt;search(Name, String, SearchControls)&lt;/code&gt;.</source>
          <target state="translated">的解释 &lt;code&gt;filterExpr&lt;/code&gt; 基于RFC 2254它可额外含有的形式的变量 &lt;code&gt;{i}&lt;/code&gt; - ，其中 &lt;code&gt;i&lt;/code&gt; 是整数-引用对象中 &lt;code&gt;filterArgs&lt;/code&gt; 阵列。在其他方面， &lt;code&gt;filterExpr&lt;/code&gt; 的解释与方法 &lt;code&gt;search(Name, String, SearchControls)&lt;/code&gt; 的 &lt;code&gt;filter&lt;/code&gt; 参数的解释相同。</target>
        </trans-unit>
        <trans-unit id="b4f366dca572308a4867f800357c6e5fcddc0581" translate="yes" xml:space="preserve">
          <source>The interpretation of the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; arguments depends on the value of the &lt;code&gt;infoflags&lt;/code&gt; argument.</source>
          <target state="translated">的解释 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;y&lt;/code&gt; ， &lt;code&gt;width&lt;/code&gt; ，和 &lt;code&gt;height&lt;/code&gt; 的参数依赖于值 &lt;code&gt;infoflags&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="1c3ddf5060a453d2b330d621230c3bacbb138c19" translate="yes" xml:space="preserve">
          <source>The interpretation of the arguments will be specific to each tool.</source>
          <target state="translated">对论点的解释将根据每个工具的具体情况而定。</target>
        </trans-unit>
        <trans-unit id="5001084159cfa4f6e3056151d0d16dcc6d196054" translate="yes" xml:space="preserve">
          <source>The interprocess token may contain security-sensitive information (for example cryptographic keys). While mechanisms are encouraged to either avoid placing such sensitive information within interprocess tokens, or to encrypt the token before returning it to the application, in a typical GSS-API implementation this may not be possible. Thus the application must take care to protect the interprocess token, and ensure that any process to which the token is transferred is trustworthy.</source>
          <target state="translated">进程间令牌可能包含安全敏感信息(例如加密密钥)。虽然我们鼓励机制避免将此类敏感信息放在进程间令牌中,或者在将令牌返回给应用程序之前对其进行加密,但在典型的 GSS-API 实施中,这可能是不可能的。因此,应用程序必须注意保护进程间令牌,并确保传输令牌的任何进程都是可信的。</target>
        </trans-unit>
        <trans-unit id="b773d8fe124e09e0a4e5802401f905ddbdf56461" translate="yes" xml:space="preserve">
          <source>The intersect filter operation.</source>
          <target state="translated">交叉过滤操作。</target>
        </trans-unit>
        <trans-unit id="b17b0be7e9649edb0287ead5101582dc5811a7d1" translate="yes" xml:space="preserve">
          <source>The ints between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the int at index</source>
          <target state="translated">缓冲区当前位置和极限位置之间的int,如果有的话,会被复制到缓冲区的开头。也就是说,索引处的int</target>
        </trans-unit>
        <trans-unit id="ff83170f74252dff1b7b1bd744031e44a438cc62" translate="yes" xml:space="preserve">
          <source>The inverse transform is done by converting the PCS Y components to device Gray via the inverse of the grayTRC.</source>
          <target state="translated">逆向变换是通过灰TRC的逆向将PCS Y分量转换为器件Gray。</target>
        </trans-unit>
        <trans-unit id="25fdeb0ee9ae180e4b8bb71954a75456e0340f80" translate="yes" xml:space="preserve">
          <source>The inverse transform is performed by converting PCS XYZ components to linear RGB components through the inverse of the above 3x3 matrix, and then converting linear RGB to device RGB through inverses of the TRCs.</source>
          <target state="translated">通过上述3x3矩阵的反演,将PCS XYZ分量转换为线性RGB分量,再通过TRC的反演将线性RGB转换为设备RGB,进行反演变换。</target>
        </trans-unit>
        <trans-unit id="f319001c4eea02470448a8107b38966f0461733e" translate="yes" xml:space="preserve">
          <source>The invocation &lt;code&gt;new Random(seed)&lt;/code&gt; is equivalent to:</source>
          <target state="translated">调用 &lt;code&gt;new Random(seed)&lt;/code&gt; 等效于：</target>
        </trans-unit>
        <trans-unit id="06514fe669538cd61fc4305976402430821d73fb" translate="yes" xml:space="preserve">
          <source>The invocation is defined by the interface &lt;a href=&quot;doclet&quot;&gt;&lt;code&gt;Doclet&lt;/code&gt;&lt;/a&gt; -- the &lt;a href=&quot;doclet#run(jdk.javadoc.doclet.DocletEnvironment)&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; interface method, defines the entry point.</source>
          <target state="translated">调用由接口&lt;a href=&quot;doclet&quot;&gt; &lt;code&gt;Doclet&lt;/code&gt; &lt;/a&gt;定义-&lt;a href=&quot;doclet#run(jdk.javadoc.doclet.DocletEnvironment)&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt;接口方法定义入口点。</target>
        </trans-unit>
        <trans-unit id="bd2eb8cb841fce5d4fbf7dc58ba68afe24b793f2" translate="yes" xml:space="preserve">
          <source>The invocation of this method, and the subsequent use of the resulting map, may cause time-consuming disk or network I/O operations to occur. This method is provided for applications that need to enumerate all of the available charsets, for example to allow user charset selection. This method is not used by the &lt;a href=&quot;#forName(java.lang.String)&quot;&gt;&lt;code&gt;forName&lt;/code&gt;&lt;/a&gt; method, which instead employs an efficient incremental lookup algorithm.</source>
          <target state="translated">调用此方法以及随后使用结果映射可能会导致耗时的磁盘或网络I / O操作发生。此方法为需要枚举所有可用字符集的应用程序提供，例如允许用户选择字符集。&lt;a href=&quot;#forName(java.lang.String)&quot;&gt; &lt;code&gt;forName&lt;/code&gt; &lt;/a&gt;方法不使用此方法，而是使用有效的增量查找算法。</target>
        </trans-unit>
        <trans-unit id="babf9d5bd6a8a8c2f47c1a276ea3aea89de709e2" translate="yes" xml:space="preserve">
          <source>The invocation of this method, and the subsequent use of the resulting map, may cause time-consuming disk or network I/O operations to occur. This method is provided for applications that need to enumerate all of the available charsets, for example to allow user charset selection. This method is not used by the &lt;a href=&quot;charset#forName-java.lang.String-&quot;&gt;&lt;code&gt;forName&lt;/code&gt;&lt;/a&gt; method, which instead employs an efficient incremental lookup algorithm.</source>
          <target state="translated">调用此方法以及随后使用结果映射可能会导致耗时的磁盘或网络I / O操作发生。此方法为需要枚举所有可用字符集的应用程序提供，例如允许用户选择字符集。&lt;a href=&quot;charset#forName-java.lang.String-&quot;&gt; &lt;code&gt;forName&lt;/code&gt; &lt;/a&gt;方法不使用此方法，而是使用有效的增量查找算法。</target>
        </trans-unit>
        <trans-unit id="9ccc3699c6e206dd25e4bae1756a647ed741cea5" translate="yes" xml:space="preserve">
          <source>The invoker will invoke its target like a call to &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; with the indicated &lt;code&gt;type&lt;/code&gt;. That is, if the target is exactly of the given &lt;code&gt;type&lt;/code&gt;, it will behave like &lt;code&gt;invokeExact&lt;/code&gt;; otherwise it behave as if &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; is used to convert the target to the required &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">调用程序将像调用&lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;那样调用其目标，以指定的 &lt;code&gt;type&lt;/code&gt; 进行调用。也就是说，如果目标是完全给出的 &lt;code&gt;type&lt;/code&gt; ，它会像 &lt;code&gt;invokeExact&lt;/code&gt; ; 否则，其行为就像使用&lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt;将目标转换为所需的 &lt;code&gt;type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cd061a90ad70184b57e438747c712b7578eb71c" translate="yes" xml:space="preserve">
          <source>The invoker will invoke its target like a call to &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; with the indicated &lt;code&gt;type&lt;/code&gt;. That is, if the target is exactly of the given &lt;code&gt;type&lt;/code&gt;, it will behave like &lt;code&gt;invokeExact&lt;/code&gt;; otherwise it behave as if &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; is used to convert the target to the required &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">调用程序将像调用&lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;那样调用其目标，以指定 &lt;code&gt;type&lt;/code&gt; 进行调用。也就是说，如果目标是完全给出的 &lt;code&gt;type&lt;/code&gt; ，它会像 &lt;code&gt;invokeExact&lt;/code&gt; ; 否则，其行为就像使用&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt;将目标转换为所需的 &lt;code&gt;type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="310452cd1f3861f99c2e30719b2a1c80c625887f" translate="yes" xml:space="preserve">
          <source>The issuer name field contains an X.500 distinguished name (DN). The ASN.1 definition for this is:</source>
          <target state="translated">签发人名称字段包含一个X.500区分名称(DN)。ASN.1对此的定义是:</target>
        </trans-unit>
        <trans-unit id="dda5b60c2df1313dd9695d0c63df28209bd62ad6" translate="yes" xml:space="preserve">
          <source>The italic action identifier</source>
          <target state="translated">斜体行动标识符</target>
        </trans-unit>
        <trans-unit id="7e99b790f51395efa49f0c878be9c43ea3745e55" translate="yes" xml:space="preserve">
          <source>The italicized style constant.</source>
          <target state="translated">楷体常数。</target>
        </trans-unit>
        <trans-unit id="39dfde18151d8c4014de09150f8c0606f546fc6b" translate="yes" xml:space="preserve">
          <source>The italicized style constant. This can be combined with the other style constants (except PLAIN) for mixed styles.</source>
          <target state="translated">斜体风格常量。可以与其他样式常量(除PLAIN外)结合使用,实现混合样式。</target>
        </trans-unit>
        <trans-unit id="08dca3a128f626f521194ee9b931ee93ae31fa59" translate="yes" xml:space="preserve">
          <source>The item labeled &lt;code&gt;Check&lt;/code&gt; shows a check box menu item in its &quot;off&quot; state.</source>
          <target state="translated">标有&amp;ldquo; &lt;code&gt;Check&lt;/code&gt; &amp;rdquo;的项目显示了处于&amp;ldquo;关闭&amp;rdquo;状态的复选框菜单项。</target>
        </trans-unit>
        <trans-unit id="e3a4374a69a545d2d36dd55d746577d2917d79cb" translate="yes" xml:space="preserve">
          <source>The items in</source>
          <target state="translated">中的项目</target>
        </trans-unit>
        <trans-unit id="8dcb14bc60ef5885dc021116d39b6eca424c65f4" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;CSSRuleList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;CSSRuleList&lt;/code&gt; 中的项目可通过从0开始的整数索引进行访问。</target>
        </trans-unit>
        <trans-unit id="12b90b70e812db945fca73c7ee81205442fcf32a" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;CSSValueList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;CSSValueList&lt;/code&gt; 中的项目可通过从0开始的整数索引进行访问。</target>
        </trans-unit>
        <trans-unit id="86079e6d3cc5c04a67ea4080658884c779335a2b" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;MediaList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">可通过从0开始的整数索引访问 &lt;code&gt;MediaList&lt;/code&gt; 中的项目。</target>
        </trans-unit>
        <trans-unit id="25c9a779205bbb0e74f97df838d6ff1b0dfbe82b" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;NodeList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">可通过从0开始的整数索引访问 &lt;code&gt;NodeList&lt;/code&gt; 中的项目。</target>
        </trans-unit>
        <trans-unit id="c729ea32aee5aa65333a8623671e0fb7f98f922b" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;StyleSheetList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">可通过从0开始的整数索引访问 &lt;code&gt;StyleSheetList&lt;/code&gt; 中的项目。</target>
        </trans-unit>
        <trans-unit id="323876616a739af5f320dccf8f27051507bab619" translate="yes" xml:space="preserve">
          <source>The iteration happens in a depth-first manner. In terms of how boundary conditions are handled:</source>
          <target state="translated">迭代是以深度优先的方式进行的。在如何处理边界条件方面。</target>
        </trans-unit>
        <trans-unit id="cec95eb21126bfbb8afd0c3fcad98843912b0a70" translate="yes" xml:space="preserve">
          <source>The iteration order of mappings is unspecified and is subject to change.</source>
          <target state="translated">映射的迭代顺序是不指定的,可能会有变化。</target>
        </trans-unit>
        <trans-unit id="cf35164f15764afcdbaeb7e897602674b8179f69" translate="yes" xml:space="preserve">
          <source>The iteration order of set elements is unspecified and is subject to change.</source>
          <target state="translated">集合元素的迭代顺序是不指定的,可能会发生变化。</target>
        </trans-unit>
        <trans-unit id="fbaae247dadd838110dca38086cdf6f357ef7497" translate="yes" xml:space="preserve">
          <source>The iteration variable type for each clause is determined using the clause's init and step return types.</source>
          <target state="translated">每个子句的迭代变量类型由子句的init和步骤返回类型决定。</target>
        </trans-unit>
        <trans-unit id="2ea26b501627b7284031eb61bb08869e5f38e2a0" translate="yes" xml:space="preserve">
          <source>The iterator for this class is not multi-threaded safe, which means that the &lt;code&gt;Path2D&lt;/code&gt; class does not guarantee that modifications to the geometry of this &lt;code&gt;Path2D&lt;/code&gt; object do not affect any iterations of that geometry that are already in process.</source>
          <target state="translated">此类的迭代器不是多线程安全的，这意味着 &lt;code&gt;Path2D&lt;/code&gt; 类不能保证对该 &lt;code&gt;Path2D&lt;/code&gt; 对象的几何形状的修改不会影响该几何形状已经进行的任何迭代。</target>
        </trans-unit>
        <trans-unit id="39f105bda0911b5e12c6548ef142e6d88a4f28d0" translate="yes" xml:space="preserve">
          <source>The iterator for this class is not multi-threaded safe, which means that this &lt;code&gt;Path2D&lt;/code&gt; class does not guarantee that modifications to the geometry of this &lt;code&gt;Path2D&lt;/code&gt; object do not affect any iterations of that geometry that are already in process.</source>
          <target state="translated">该类的迭代器不是多线程安全的，这意味着该 &lt;code&gt;Path2D&lt;/code&gt; 类不能保证对该 &lt;code&gt;Path2D&lt;/code&gt; 对象的几何形状的修改不会影响已经在进行中的该几何形状的任何迭代。</target>
        </trans-unit>
        <trans-unit id="43677bd6fb1d8e6b8fec88d0eb15823021a7a4bf" translate="yes" xml:space="preserve">
          <source>The iterator is</source>
          <target state="translated">迭代器是</target>
        </trans-unit>
        <trans-unit id="e77191fb3f83d580a46bbe09ef0f96ce777ac7e9" translate="yes" xml:space="preserve">
          <source>The iterator itself will be determined by the evaluation of the &lt;code&gt;iterator&lt;/code&gt; handle. Each value it produces will be stored in a loop iteration variable of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">迭代器本身将由对 &lt;code&gt;iterator&lt;/code&gt; 句柄的评估来确定。它产生的每个值将存储在类型 &lt;code&gt;T&lt;/code&gt; 的循环迭代变量中。</target>
        </trans-unit>
        <trans-unit id="cdb1b0cfd2b96c4cab16724e40575d357666e05a" translate="yes" xml:space="preserve">
          <source>The iterator must contain only implementations of the &lt;a href=&quot;namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">迭代器必须仅包含&lt;a href=&quot;namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt;接口的实现。</target>
        </trans-unit>
        <trans-unit id="132e01992eabb7e0055de05d1e4e968149107d8f" translate="yes" xml:space="preserve">
          <source>The iterator must contain only implementations of the javax.xml.stream.Namespace interface.</source>
          <target state="translated">迭代器必须只包含javax.xml.stream.Namespace接口的实现。</target>
        </trans-unit>
        <trans-unit id="4b6b8926c9cd791c0458723db88ac0a2c8e56241" translate="yes" xml:space="preserve">
          <source>The iterator must specify a single paragraph of text because an entire paragraph is required for the bidirectional algorithm.</source>
          <target state="translated">迭代器必须指定一段文字,因为双向算法需要整段文字。</target>
        </trans-unit>
        <trans-unit id="89828064d0a9b123146c05ca87946b21b3543b5c" translate="yes" xml:space="preserve">
          <source>The iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method traverses the elements in their</source>
          <target state="translated">由 &lt;code&gt;iterator&lt;/code&gt; 方法返回的迭代器遍历其元素中的元素</target>
        </trans-unit>
        <trans-unit id="10f88f7effdb04bd9feaa9e20b80972277925243" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method does not support removal. Invoking its &lt;a href=&quot;iterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; method will cause an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">此方法返回的迭代器不支持删除。调用其&lt;a href=&quot;iterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;方法将导致引发&lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f9acc692e383944ec985155a5700e56e7ee30437" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method does not support removal. Invoking its &lt;a href=&quot;iterator#remove--&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; method will cause an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">此方法返回的迭代器不支持删除。调用其&lt;a href=&quot;iterator#remove--&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;方法将导致引发&lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="98e2680cc8dc738c981f8a34b95901f4a62969ea" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method first yields all of the elements of the provider cache, in instantiation order. It then lazily loads and instantiates any remaining providers, adding each one to the cache in turn.</source>
          <target state="translated">这个方法返回的迭代器首先按照实例化的顺序产生提供者缓存中的所有元素。然后,它懒惰地加载并实例化剩余的提供者,依次将每个提供者添加到缓存中。</target>
        </trans-unit>
        <trans-unit id="8c539fc62d88aef2c2e54557784510917732570d" translate="yes" xml:space="preserve">
          <source>The iterator returned from a call to &lt;a href=&quot;enumeration#asIterator()&quot;&gt;&lt;code&gt;Enumeration.asIterator()&lt;/code&gt;&lt;/a&gt; does not support removal of elements from the specified collection. This is necessary to avoid unintentionally increasing the capabilities of the returned enumeration.</source>
          <target state="translated">从对&lt;a href=&quot;enumeration#asIterator()&quot;&gt; &lt;code&gt;Enumeration.asIterator()&lt;/code&gt; &lt;/a&gt;的调用返回的迭代器不支持从指定集合中移除元素。这是避免无意增加返回的枚举功能的必要条件。</target>
        </trans-unit>
        <trans-unit id="7596d0c3e99ad866c46e5d332b27bd327a16802e" translate="yes" xml:space="preserve">
          <source>The iterators returned by all of this class's &quot;collection view methods&quot; are</source>
          <target state="translated">这个类的所有 &quot;集合视图方法 &quot;返回的迭代器是</target>
        </trans-unit>
        <trans-unit id="34c7dfd11c16c2eb6589c6b0cbc4a3695a380b36" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are</source>
          <target state="translated">由此类的所有&amp;ldquo;集合视图方法&amp;rdquo;返回的集合的 &lt;code&gt;iterator&lt;/code&gt; 方法返回的迭代器为</target>
        </trans-unit>
        <trans-unit id="29c7796237b6ac9e744a01ef9154f15dbb163658" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are &lt;em&gt;fail-fast&lt;/em&gt;: if the Hashtable is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The Enumerations returned by Hashtable's &lt;a href=&quot;#keys()&quot;&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#elements()&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; methods are &lt;em&gt;not&lt;/em&gt; fail-fast; if the Hashtable is structurally modified at any time after the enumeration is created then the results of enumerating are undefined.</source>
          <target state="translated">所有此类的所有&amp;ldquo;集合视图方法&amp;rdquo;所返回的集合的 &lt;code&gt;iterator&lt;/code&gt; 方法所返回的迭代器都是&lt;em&gt;快速失败的&lt;/em&gt;：如果在创建迭代器后的任何时间都对Hashtable进行了结构修改，则除了通过迭代器自己的 &lt;code&gt;remove&lt;/code&gt; 之外，都可以通过其他方式进行修改方法，迭代器将抛出&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;。因此，面对并发修改，迭代器会快速干净地失败，而不会在未来的不确定时间内冒任意，不确定的行为的风险。 Hashtable的&lt;a href=&quot;#keys()&quot;&gt; &lt;code&gt;keys&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#elements()&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt;方法返回的Enumerations&lt;em&gt;不是&lt;/em&gt;快速失败 如果在创建枚举后的任何时间对Hashtable进行结构修改，则枚举的结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="ec72967e40c5a796ec5761ebb8f998c720cf475e" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are &lt;em&gt;fail-fast&lt;/em&gt;: if the Hashtable is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The Enumerations returned by Hashtable's keys and elements methods are &lt;em&gt;not&lt;/em&gt; fail-fast.</source>
          <target state="translated">所有此类的所有&amp;ldquo;集合视图方法&amp;rdquo;所返回的集合的 &lt;code&gt;iterator&lt;/code&gt; 方法所返回的迭代器都是&lt;em&gt;快速失败的&lt;/em&gt;：如果在创建迭代器后的任何时间都对Hashtable进行了结构修改，则可以通过迭代器自己的 &lt;code&gt;remove&lt;/code&gt; 进行任何方式修改方法，迭代器将抛出&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;。因此，面对并发修改，迭代器将快速而干净地失败，而不是冒着在未来不确定的时间冒任意，不确定的行为的风险。 Hashtable的keys和elements方法返回的Enumerations &lt;em&gt;不是&lt;/em&gt;快速失败的。</target>
        </trans-unit>
        <trans-unit id="f8e4d6a942fbd556ea4a1ce02973c09959dfe624" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are &lt;em&gt;fail-fast&lt;/em&gt;: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">所有此类的所有&amp;ldquo;集合视图方法&amp;rdquo;所返回的集合的 &lt;code&gt;iterator&lt;/code&gt; 方法所返回的迭代器都是&lt;em&gt;快速失败的&lt;/em&gt;：如果在创建迭代器之后的任何时间对结构进行结构修改，则除了通过迭代器自己的 &lt;code&gt;remove&lt;/code&gt; 之外，都可以通过其他方式进行修改方法，迭代器将抛出&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;。因此，面对并发修改，迭代器将快速而干净地失败，而不是冒着在未来不确定的时间冒任意，不确定的行为的风险。</target>
        </trans-unit>
        <trans-unit id="cccc07ae6435dcf4ba8a8450330120f750cedaed" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's collection view methods are &lt;em&gt;fail-fast&lt;/em&gt;: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">所有此类的所有collection视图方法返回的collection 的 &lt;code&gt;iterator&lt;/code&gt; 方法返回的迭代器都是&lt;em&gt;快速失败的&lt;/em&gt;：如果在创建迭代器后的任何时间对结构进行结构修改，则可以通过迭代器自己的 &lt;code&gt;remove&lt;/code&gt; 方法进行任何修改，迭代器将抛出&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;。因此，面对并发修改，迭代器会快速干净地失败，而不会在未来的不确定时间冒着任意，不确定的行为的风险。</target>
        </trans-unit>
        <trans-unit id="c6afa57c2f19c822e3e46741e459736d8f927b2f" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of this class's &quot;collection views&quot; (that is, &lt;code&gt;entrySet()&lt;/code&gt;, &lt;code&gt;keySet()&lt;/code&gt;, and &lt;code&gt;values()&lt;/code&gt;) may not fail-fast (unlike the Hashtable implementation). These iterators are guaranteed to traverse elements as they existed upon construction exactly once, and may (but are not guaranteed to) reflect any modifications subsequent to construction.</source>
          <target state="translated">此类的&amp;ldquo;集合视图&amp;rdquo;的 &lt;code&gt;iterator&lt;/code&gt; 方法（即 &lt;code&gt;entrySet()&lt;/code&gt; ， &lt;code&gt;keySet()&lt;/code&gt; 和 &lt;code&gt;values()&lt;/code&gt; ）返回的迭代器可能不会快速失败（与Hashtable实现不同）。保证这些迭代器遍历在构造时存在的元素一次，并且可以（但不保证）反映构造后的任何修改。</target>
        </trans-unit>
        <trans-unit id="2da37306b969710494d91cdeb111735b4bbcce4b" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#listIterator(int)&quot;&gt;&lt;code&gt;listIterator&lt;/code&gt;&lt;/a&gt; methods are &lt;em&gt;fail-fast&lt;/em&gt;: if the list is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;a href=&quot;listiterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;listiterator#add(E)&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt; methods, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">此类的&lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#listIterator(int)&quot;&gt; &lt;code&gt;listIterator&lt;/code&gt; &lt;/a&gt;方法返回的迭代器是&lt;em&gt;快速失败的&lt;/em&gt;：如果在创建迭代器之后的任何时间以任何方式对列表进行结构修改，除非通过迭代器自己的&lt;a href=&quot;listiterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;listiterator#add(E)&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt;方法，否则迭代器将抛出&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;。因此，面对并发修改，迭代器会快速干净地失败，而不会在未来的不确定时间内冒任意，不确定的行为的风险。</target>
        </trans-unit>
        <trans-unit id="82961df45650161b22b12c350ab2fc92ce76e188" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#listIterator(int)&quot;&gt;&lt;code&gt;listIterator&lt;/code&gt;&lt;/a&gt; methods are &lt;em&gt;fail-fast&lt;/em&gt;: if the vector is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;a href=&quot;listiterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;listiterator#add(E)&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt; methods, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The &lt;a href=&quot;enumeration&quot;&gt;&lt;code&gt;Enumerations&lt;/code&gt;&lt;/a&gt; returned by the &lt;a href=&quot;#elements()&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; method are &lt;em&gt;not&lt;/em&gt; fail-fast; if the Vector is structurally modified at any time after the enumeration is created then the results of enumerating are undefined.</source>
          <target state="translated">此类的&lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#listIterator(int)&quot;&gt; &lt;code&gt;listIterator&lt;/code&gt; &lt;/a&gt;方法返回的迭代器是&lt;em&gt;快速失败的&lt;/em&gt;：如果在创建迭代器后的任何时间以任何方式对向量进行结构修改，除非通过迭代器自己的&lt;a href=&quot;listiterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;listiterator#add(E)&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt;方法，否则迭代器将抛出&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;。因此，面对并发修改，迭代器会快速干净地失败，而不会在未来的不确定时间内冒任意，不确定的行为的风险。由&lt;a href=&quot;#elements()&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt;方法返回的&lt;a href=&quot;enumeration&quot;&gt; &lt;code&gt;Enumerations&lt;/code&gt; &lt;/a&gt;&lt;em&gt;不是&lt;/em&gt;&lt;em&gt;&lt;/em&gt;快速失败 如果在创建枚举后的任何时间对Vector进行结构修改，则枚举的结果是不确定的。</target>
        </trans-unit>
        <trans-unit id="274376d37e7301e7cea9ebed5591dc1ce0b96e4e" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; method are &lt;em&gt;fail-fast&lt;/em&gt;: If the deque is modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will generally throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">此类的&lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt;方法返回的迭代器是&lt;em&gt;快速失败的&lt;/em&gt;：如果在创建迭代器后的任何时间修改了双端队列，则除了通过迭代器自己的 &lt;code&gt;remove&lt;/code&gt; 方法之外，该迭代器通常会抛出&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;。因此，面对并发修改，迭代器会快速干净地失败，而不会在未来的不确定时间内冒任意，不确定的行为的风险。</target>
        </trans-unit>
        <trans-unit id="8c30ea8ce4044e97226c1fcafa002e966fc4f237" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;listIterator&lt;/code&gt; methods are</source>
          <target state="translated">此类的 &lt;code&gt;iterator&lt;/code&gt; 和 &lt;code&gt;listIterator&lt;/code&gt; 方法返回的迭代器为</target>
        </trans-unit>
        <trans-unit id="9b599f5e9e9a7e23378ba3619eaae05e0afe1eb2" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;code&gt;iterator&lt;/code&gt; method are</source>
          <target state="translated">此类的 &lt;code&gt;iterator&lt;/code&gt; 方法返回的迭代器为</target>
        </trans-unit>
        <trans-unit id="2e2ec0ba428f721ed670c5e29b21fdd61f4f2917" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;code&gt;iterator&lt;/code&gt; method are &lt;em&gt;fail-fast&lt;/em&gt;: if the set is modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">此类的 &lt;code&gt;iterator&lt;/code&gt; 方法返回的迭代器是&lt;em&gt;快速失败的&lt;/em&gt;：如果在创建迭代器后的任何时间以任何方式修改集合（除非通过迭代器自己的 &lt;code&gt;remove&lt;/code&gt; 方法），则迭代器将抛出&lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;。因此，面对并发修改，迭代器将快速而干净地失败，而不是冒着在未来不确定的时间冒任意，不确定的行为的风险。</target>
        </trans-unit>
        <trans-unit id="283d7498c0d3b7b909b279a49824d5148b7ab7bf" translate="yes" xml:space="preserve">
          <source>The java.awt.Robot object allows code to generate native-level mouse and keyboard events as well as read the screen. It could allow malicious code to control the system, run other programs, read the display, and deny mouse and keyboard access to the user.</source>
          <target state="translated">java.awt.Robot对象允许代码生成本机级别的鼠标和键盘事件,以及读取屏幕。它可以让恶意代码控制系统,运行其他程序,读取显示屏,拒绝用户的鼠标和键盘访问。</target>
        </trans-unit>
        <trans-unit id="7057c3b7f819f2cd324cffa3c20a81381e435781" translate="yes" xml:space="preserve">
          <source>The java.lang.management API is thread-safe.</source>
          <target state="translated">java.lang.management API是线程安全的。</target>
        </trans-unit>
        <trans-unit id="e7c83bed6a4c21ec225e1e00cad4e5dd333ca4f4" translate="yes" xml:space="preserve">
          <source>The java.net package can be roughly divided in two sections:</source>
          <target state="translated">java.net包大致可以分为两部分。</target>
        </trans-unit>
        <trans-unit id="e7c2bad11a3cf57b9ee11fb20fc537e2355f9273" translate="yes" xml:space="preserve">
          <source>The java.nio.file package defines classes to access files and file systems. The API to access file and file system attributes is defined in the &lt;a href=&quot;attribute/package-summary&quot;&gt;&lt;code&gt;java.nio.file.attribute&lt;/code&gt;&lt;/a&gt; package. The &lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.file.spi&lt;/code&gt;&lt;/a&gt; package is used by service provider implementors wishing to extend the platform default provider, or to construct other provider implementations.</source>
          <target state="translated">java.nio.file包定义了用于访问文件和文件系统的类。用于访问文件和文件系统属性的API在&lt;a href=&quot;attribute/package-summary&quot;&gt; &lt;code&gt;java.nio.file.attribute&lt;/code&gt; &lt;/a&gt;包中定义。所述&lt;a href=&quot;spi/package-summary&quot;&gt; &lt;code&gt;java.nio.file.spi&lt;/code&gt; &lt;/a&gt;包由希望扩展该平台默认提供程序，或构建其他提供者实现服务提供商实现者使用。</target>
        </trans-unit>
        <trans-unit id="a63bd7fc516a14802ec93497b3d1badada24a9f6" translate="yes" xml:space="preserve">
          <source>The javac plug-in mechanism allows a user to specify one or more plug-ins on the javac command line, to be started soon after the compilation has begun. Plug-ins are identified by a user-friendly name. Each plug-in that is started will be passed an array of strings, which may be used to provide the plug-in with values for any desired options or other arguments.</source>
          <target state="translated">javac插件机制允许用户在javac命令行中指定一个或多个插件,在编译开始后不久就启动。插件由一个用户友好的名称来标识。每个被启动的插件都会被传递一个字符串数组,这些字符串可以用来为插件提供任何所需的选项或其他参数的值。</target>
        </trans-unit>
        <trans-unit id="483a7643805d6b96505b26053cb80d495ba54051" translate="yes" xml:space="preserve">
          <source>The javadoc of the given element.</source>
          <target state="translated">指定元素的javadoc。</target>
        </trans-unit>
        <trans-unit id="99d0b7979f480d0de703c57bc073a94c2aeed640" translate="yes" xml:space="preserve">
          <source>The javax.print.attribute package includes &lt;a href=&quot;hashattributeset&quot;&gt;HashAttributeSet&lt;/a&gt; as a concrete implementation of the attribute set interface. &lt;code&gt;HashAttributeSet&lt;/code&gt; provides an attribute set based on a hash map. You can use this implementation or provide your own implementation of interface &lt;code&gt;AttributeSet&lt;/code&gt;.</source>
          <target state="translated">javax.print.attribute包包括&lt;a href=&quot;hashattributeset&quot;&gt;HashAttributeSet&lt;/a&gt;作为属性集接口的具体实现。 &lt;code&gt;HashAttributeSet&lt;/code&gt; 提供基于哈希图的属性集。您可以使用此实现或提供自己的 &lt;code&gt;AttributeSet&lt;/code&gt; 接口实现。</target>
        </trans-unit>
        <trans-unit id="1678718fb51e8a372345b9b0dfb2993996ca9d85" translate="yes" xml:space="preserve">
          <source>The jaxp.properties file is read only once by the JAXP implementation and its values are then cached for future use. If the file does not exist when the first attempt is made to read from it, no further attempts are made to check for its existence. It is not possible to change the value of any property in jaxp.properties after it has been read for the first time.</source>
          <target state="translated">jaxp.properties 文件只被 JAXP 实现读取一次,然后它的值会被缓存起来供将来使用。如果第一次尝试从文件中读取时,文件不存在,则不会再尝试检查它的存在。在第一次读取 jaxp.properties 中的任何属性后,不可能更改其值。</target>
        </trans-unit>
        <trans-unit id="6c521e858ecd4ab6e95f87508838395e8e62c1d9" translate="yes" xml:space="preserve">
          <source>The job completed successfully.</source>
          <target state="translated">工作顺利完成。</target>
        </trans-unit>
        <trans-unit id="0b636fb4d8f71bf41576b4222e32f43072da2d49" translate="yes" xml:space="preserve">
          <source>The job completed successfully. This value should be supported.</source>
          <target state="translated">工作成功完成。应支持此值。</target>
        </trans-unit>
        <trans-unit id="8155a352638c0e35699f4e18930a5f89bca7e15c" translate="yes" xml:space="preserve">
          <source>The job completed with errors (and possibly warnings too).</source>
          <target state="translated">工作完成后出现错误(也可能是警告)。</target>
        </trans-unit>
        <trans-unit id="0fd4acc47470905777d0757b6122b704c219c78d" translate="yes" xml:space="preserve">
          <source>The job completed with errors (and possibly warnings too). This value should be supported if the implementation detects errors.</source>
          <target state="translated">作业完成时出现错误(也可能是警告)。如果执行中检测到错误,应该支持这个值。</target>
        </trans-unit>
        <trans-unit id="3a3c2a022a57f1b5ea9853cd04a785a252013a06" translate="yes" xml:space="preserve">
          <source>The job completed with warnings.</source>
          <target state="translated">工作完成后,提出警告。</target>
        </trans-unit>
        <trans-unit id="8272d85dfb27f8fd7635d41c55d941a998fa4421" translate="yes" xml:space="preserve">
          <source>The job completed with warnings. This value should be supported if the implementation detects warnings.</source>
          <target state="translated">工作完成后有警告。如果执行中检测到警告,则应支持此值。</target>
        </trans-unit>
        <trans-unit id="ac82b7846af137164072bad73d3b370dc566c461" translate="yes" xml:space="preserve">
          <source>The job has been aborted by the system (usually while the job was in the &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; state), the printer has completed aborting the job, and all job status attributes have reached their final values for the job.</source>
          <target state="translated">作业已被系统中止（通常在作业处于 &lt;code&gt;PROCESSING&lt;/code&gt; 或 &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; 状态时），打印机已完成中止该作业，并且所有作业状态属性均已达到该作业的最终值。</target>
        </trans-unit>
        <trans-unit id="3fa0a38dd507499cc814820dacf2ad92d0a08deb" translate="yes" xml:space="preserve">
          <source>The job has been aborted by the system (usually while the job was in the &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; state), the printer has completed aborting the job, and all job status attributes have reached their final values for the job. While the printer is aborting the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; and &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; values. When the job moves to the &lt;code&gt;ABORTED&lt;/code&gt; state, the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; value, if present, must be removed, but the &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; value, if present, must remain.</source>
          <target state="translated">作业已被系统中止（通常在作业处于 &lt;code&gt;PROCESSING&lt;/code&gt; 或 &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; 状态时），打印机已完成中止该作业，并且所有作业状态属性均已达到该作业的最终值。打印机中止作业时，该作业将保持其当前状态，但是该作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性应包含 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 和 &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; 值。当作业进入 &lt;code&gt;ABORTED&lt;/code&gt; 状态时，必须删除 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 值（如果存在），但是必须保留 &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; 值（如果存在）。</target>
        </trans-unit>
        <trans-unit id="1318a856b10c21c5a8306845084662ae891af882" translate="yes" xml:space="preserve">
          <source>The job has been aborted by the system (usually while the job was in the PROCESSING or PROCESSING_STOPPED state), the printer has completed aborting the job, and all job status attributes have reached their final values for the job. While the printer is aborting the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the PROCESSING_TO_STOP_POINT and ABORTED_BY_SYSTEM values. When the job moves to the ABORTED state, the PROCESSING_TO_STOP_POINT value, if present, must be removed, but the ABORTED_BY_SYSTEM value, if present, must remain.</source>
          <target state="translated">作业已被系统中止（通常是在作业处于PROCESSING或PROCESSING_STOPPED状态时），打印机已完成中止该作业，并且所有作业状态属性均已达到该作业的最终值。在打印机中止作业时，该作业将保持其当前状态，但是该作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性应包含PROCESSING_TO_STOP_POINT和ABORTED_BY_SYSTEM值。当作业进入ABORTED状态时，必须删除PROCESSING_TO_STOP_POINT值（如果存在），但是必须保留ABORTED_BY_SYSTEM值（如果存在）。</target>
        </trans-unit>
        <trans-unit id="8826a5e766a81a6295f135841ab968154d7bfc03" translate="yes" xml:space="preserve">
          <source>The job has been canceled by some human agency, the printer has completed canceling the job, and all job status attributes have reached their final values for the job.</source>
          <target state="translated">该作业已被某些人为机构取消,打印机已完成取消该作业,且该作业的所有作业状态属性已达到最终值。</target>
        </trans-unit>
        <trans-unit id="30faefcc51f8781c70e62a210124c825ec9c7178" translate="yes" xml:space="preserve">
          <source>The job has been canceled by some human agency, the printer has completed canceling the job, and all job status attributes have reached their final values for the job. While the printer is canceling the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; value and one of the &lt;code&gt;CANCELED_BY_USER&lt;/code&gt;, &lt;code&gt;CANCELED_BY_OPERATOR&lt;/code&gt;, or &lt;code&gt;CANCELED_AT_DEVICE&lt;/code&gt; values. When the job moves to the &lt;code&gt;CANCELED&lt;/code&gt; state, the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; value, if present, must be removed, but the CANCELED_BY_</source>
          <target state="translated">该作业已被某些人工机构取消，打印机已完成取消作业，并且所有作业状态属性均已达到其作业的最终值。打印机取消作业时，作业将保持其当前状态，但作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性应包含 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 值和 &lt;code&gt;CANCELED_BY_USER&lt;/code&gt; ， &lt;code&gt;CANCELED_BY_OPERATOR&lt;/code&gt; 或 &lt;code&gt;CANCELED_AT_DEVICE&lt;/code&gt; 值之一。当作业移到 &lt;code&gt;CANCELED&lt;/code&gt; 状态时，必须删除 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 值（如果存在），但是CANCELED_BY_</target>
        </trans-unit>
        <trans-unit id="4332eeb1d3703dff2185e0b2a548dc30deab2693" translate="yes" xml:space="preserve">
          <source>The job has been canceled by some human agency, the printer has completed canceling the job, and all job status attributes have reached their final values for the job. While the printer is canceling the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the PROCESSING_TO_STOP_POINT value and one of the CANCELED_BY_USER, CANCELED_BY_OPERATOR, or CANCELED_AT_DEVICE values. When the job moves to the CANCELED state, the PROCESSING_TO_STOP_POINT value, if present, must be removed, but the CANCELED_BY_</source>
          <target state="translated">该作业已被某些人工机构取消，打印机已完成取消作业，并且所有作业状态属性均已达到其作业的最终值。在打印机取消作业时，作业将保持其当前状态，但是作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性应包含PROCESSING_TO_STOP_POINT值以及CANCELED_BY_USER，CANCELED_BY_OPERATOR或CANCELED_AT_DEVICE值之一。当作业移到CANCELED状态时，必须删除PROCESSING_TO_STOP_POINT值（如果存在），但是CANCELED_BY_</target>
        </trans-unit>
        <trans-unit id="ce2a00888b20866cd4ea217f4a48f5d8196ce648" translate="yes" xml:space="preserve">
          <source>The job has been forwarded to a device or print system that is unable to send back status.</source>
          <target state="translated">该作业已被转发到无法发送回状态的设备或打印系统。</target>
        </trans-unit>
        <trans-unit id="513bf67deaad4fb47c4e06f335d75d6db09fb79a" translate="yes" xml:space="preserve">
          <source>The job has been forwarded to a device or print system that is unable to send back status. The printer sets the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; attribute to &lt;code&gt;COMPLETED&lt;/code&gt; and adds the &lt;code&gt;QUEUED_IN_DEVICE&lt;/code&gt; reason to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute to indicate that the printer has no additional information about the job and never will have any better information.</source>
          <target state="translated">作业已转发到无法发送回状态的设备或打印系统。打印机将作业的&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;属性设置为 &lt;code&gt;COMPLETED&lt;/code&gt; ，并将 &lt;code&gt;QUEUED_IN_DEVICE&lt;/code&gt; 原因添加到作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性中，以指示打印机没有有关该作业的其他信息，也永远不会有任何更好的信息。</target>
        </trans-unit>
        <trans-unit id="a653104c3b056ccc18c59053c73e2cb5305a3165" translate="yes" xml:space="preserve">
          <source>The job has been forwarded to a device or print system that is unable to send back status. The printer sets the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; attribute to COMPLETED and adds the QUEUED_IN_DEVICE reason to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute to indicate that the printer has no additional information about the job and never will have any better information.</source>
          <target state="translated">作业已转发到无法发送回状态的设备或打印系统。打印机将作业的&lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt;属性设置为COMPLETED，并将QUEUED_IN_DEVICE原因添加到作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性中，以指示打印机没有有关该作业的其他信息，也永远不会有任何更好的信息。</target>
        </trans-unit>
        <trans-unit id="33f7a56a3010a619ba3c9f828da9dd6b5acbab28" translate="yes" xml:space="preserve">
          <source>The job has completed successfully or with warnings or errors after processing, all of the job media sheets have been successfully stacked in the appropriate output bin(s), and all job status attributes have reached their final values for the job.</source>
          <target state="translated">作业已成功完成,或在处理后出现警告或错误,所有作业介质表已成功堆叠在适当的输出仓中,并且所有作业状态属性已达到作业的最终值。</target>
        </trans-unit>
        <trans-unit id="7e0a7f6df9f0ca0950e5594598134f9b5ed8a210" translate="yes" xml:space="preserve">
          <source>The job has completed successfully or with warnings or errors after processing, all of the job media sheets have been successfully stacked in the appropriate output bin(s), and all job status attributes have reached their final values for the job. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain one of these values: &lt;code&gt;COMPLETED_SUCCESSFULLY&lt;/code&gt;, &lt;code&gt;COMPLETED_WITH_WARNINGS&lt;/code&gt;, or &lt;code&gt;COMPLETED_WITH_ERRORS&lt;/code&gt;.</source>
          <target state="translated">作业已成功完成，或在处理后出现警告或错误，所有作业介质页均已成功堆叠在适当的出纸槽中，并且所有作业状态属性均已达到该作业的最终值。作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性应包含以下值之一： &lt;code&gt;COMPLETED_SUCCESSFULLY&lt;/code&gt; ， &lt;code&gt;COMPLETED_WITH_WARNINGS&lt;/code&gt; 或 &lt;code&gt;COMPLETED_WITH_ERRORS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="266c985b90e5a872533d16a586b8f9e841a46189" translate="yes" xml:space="preserve">
          <source>The job has completed successfully or with warnings or errors after processing, all of the job media sheets have been successfully stacked in the appropriate output bin(s), and all job status attributes have reached their final values for the job. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain one of these values: COMPLETED_SUCCESSFULLY, COMPLETED_WITH_WARNINGS, or COMPLETED_WITH_ERRORS.</source>
          <target state="translated">作业已成功完成，或在处理后出现警告或错误，所有作业介质页均已成功堆叠在适当的出纸槽中，并且所有作业状态属性均已达到该作业的最终值。作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性应包含以下值之一：COMPLETED_SUCCESSFULLY，COMPLETED_WITH_WARNINGS或COMPLETED_WITH_ERRORS。</target>
        </trans-unit>
        <trans-unit id="6c2e880de00e68d2f8400fd2197b6700463297eb" translate="yes" xml:space="preserve">
          <source>The job has stopped while processing for any number of reasons and will return to the &lt;code&gt;PROCESSING&lt;/code&gt; state as soon as the reasons are no longer present.</source>
          <target state="translated">由于多种原因，作业在处理过程中已停止，并且一旦不再存在原因，作业将返回到&amp;ldquo;正在 &lt;code&gt;PROCESSING&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="8d9059818004d12f90da07d03f90fef85b39741b" translate="yes" xml:space="preserve">
          <source>The job has stopped while processing for any number of reasons and will return to the PROCESSING state as soon as the reasons are no longer present.</source>
          <target state="translated">作业在处理过程中因任何原因而停止,一旦原因不再存在,将立即返回PROCESSING状态。</target>
        </trans-unit>
        <trans-unit id="675475d1527f18e49351cb37e1cfcf5fde5e8631" translate="yes" xml:space="preserve">
          <source>The job is a candidate to start processing, but is not yet processing.</source>
          <target state="translated">该工作是一个候选人开始处理,但还没有处理。</target>
        </trans-unit>
        <trans-unit id="bb62af76ec98818871166d0863a023e576d42b3b" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PENDING_HELD&lt;/code&gt;, &lt;code&gt;PENDING&lt;/code&gt;, or &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer has completed enough processing of the document to be able to start marking and the job is waiting for the marker.</source>
          <target state="translated">作业处于 &lt;code&gt;PENDING_HELD&lt;/code&gt; ， &lt;code&gt;PENDING&lt;/code&gt; 或 &lt;code&gt;PROCESSING&lt;/code&gt; 状态，但是更具体地说，打印机已经完成了对文档的足够处理以能够开始标记，并且作业正在等待标记。</target>
        </trans-unit>
        <trans-unit id="33c9dfb835982ae57e76b90a418374af74a82b16" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PENDING_HELD&lt;/code&gt;, &lt;code&gt;PENDING&lt;/code&gt;, or &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer has completed enough processing of the document to be able to start marking and the job is waiting for the marker. Systems that require human intervention to release jobs put the job into the &lt;code&gt;PENDING_HELD&lt;/code&gt; job state. Systems that automatically select a job to use the marker put the job into the &lt;code&gt;PENDING&lt;/code&gt; job state or keep the job in the &lt;code&gt;PROCESSING&lt;/code&gt; job state while waiting for the marker, depending on implementation. All implementations put the job into (or back into) the &lt;code&gt;PROCESSING&lt;/code&gt; state when marking does begin.</source>
          <target state="translated">作业处于 &lt;code&gt;PENDING_HELD&lt;/code&gt; ， &lt;code&gt;PENDING&lt;/code&gt; 或 &lt;code&gt;PROCESSING&lt;/code&gt; 状态，但是更具体地说，打印机已经完成了对文档的足够处理以能够开始标记，并且作业正在等待标记。需要人工干预才能释放作业的系统会将作业置于 &lt;code&gt;PENDING_HELD&lt;/code&gt; 作业状态。根据实现的不同，在等待标记的同时，自动选择作业以使用标记的系统会将作业置于 &lt;code&gt;PENDING&lt;/code&gt; 作业状态或将作业保持为 &lt;code&gt;PROCESSING&lt;/code&gt; 作业状态。当标记确实开始时，所有实现都将作业置于（或返回）&amp;ldquo; &lt;code&gt;PROCESSING&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="61c006330a7170bc7b7bc855d3dbbdd28d9639bf" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer has queued the document data.</source>
          <target state="translated">作业处于&amp;ldquo;正在 &lt;code&gt;PROCESSING&lt;/code&gt; 状态，但更具体地说，打印机已将文档数据排队。</target>
        </trans-unit>
        <trans-unit id="22a79027329f135f999662a310e8f2acaf5c42d9" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer ia interpreting the document data.</source>
          <target state="translated">作业处于&amp;ldquo;正在 &lt;code&gt;PROCESSING&lt;/code&gt; 状态，但更具体地说，打印机解释了文档数据。</target>
        </trans-unit>
        <trans-unit id="5abeac9ba8d8defe01ad50de60caa73052a69a7d" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer is interpreting document data and producing another electronic representation.</source>
          <target state="translated">作业处于&amp;ldquo;正在 &lt;code&gt;PROCESSING&lt;/code&gt; 状态，但是更具体地说，打印机正在解释文档数据并生成另一个电子表示形式。</target>
        </trans-unit>
        <trans-unit id="94fbbfda8878e9c8767ac15a0f96595971bbe119" translate="yes" xml:space="preserve">
          <source>The job is in the PENDING_HELD, PENDING, or PROCESSING state, but more specifically, the printer has completed enough processing of the document to be able to start marking and the job is waiting for the marker. Systems that require human intervention to release jobs put the job into the PENDING_HELD job state. Systems that automatically select a job to use the marker put the job into the PENDING job state or keep the job in the PROCESSING job state while waiting for the marker, depending on implementation. All implementations put the job into (or back into) the PROCESSING state when marking does begin.</source>
          <target state="translated">作业处于PENDING_HELD、PENDING或PROCESSING状态,但更具体地说,打印机已经完成了对文档的足够处理,可以开始打标,作业正在等待打标。需要人工干预才能释放作业的系统会将作业置于PENDING_HELD作业状态。自动选择要使用标记的作业的系统将作业置于 PENDING 作业状态,或在等待标记时将作业保持在 PROCESSING 作业状态,这取决于实现情况。当标记开始时,所有的实现都会将作业进入(或回到)PROCESSING状态。</target>
        </trans-unit>
        <trans-unit id="440add9f3c70b123e291ba209d9d13c202aebf8a" translate="yes" xml:space="preserve">
          <source>The job is in the PROCESSING state, but more specifically, the printer has queued the document data.</source>
          <target state="translated">该作业处于PROCESSING状态,但更具体地说,打印机已将文档数据排成队列。</target>
        </trans-unit>
        <trans-unit id="6550860dc3bbe7f26a73280ffe7ded2c79054235" translate="yes" xml:space="preserve">
          <source>The job is in the PROCESSING state, but more specifically, the printer ia interpreting the document data.</source>
          <target state="translated">该作业处于PROCESSING状态,但更具体地说,打印机正在解释文档数据。</target>
        </trans-unit>
        <trans-unit id="50339846786a673ce932982a8475461929680e1d" translate="yes" xml:space="preserve">
          <source>The job is in the PROCESSING state, but more specifically, the printer is interpreting document data and producing another electronic representation.</source>
          <target state="translated">该作业处于PROCESSING(处理)状态,但更具体地说,打印机正在解释文档数据并生成另一个电子表示。</target>
        </trans-unit>
        <trans-unit id="6a7ceaa57ea80e7bb8771c4a3056dcbe66797d94" translate="yes" xml:space="preserve">
          <source>The job is not a candidate for processing for any number of reasons but will return to the &lt;code&gt;PENDING&lt;/code&gt; state as soon as the reasons are no longer present.</source>
          <target state="translated">出于多种原因，该作业都不适合进行处理，但是一旦原因不再存在，该作业将返回&amp;ldquo; &lt;code&gt;PENDING&lt;/code&gt; 状态。</target>
        </trans-unit>
        <trans-unit id="075f3a0a6331f37be1d4ffb1de347f1fc0d64ba7" translate="yes" xml:space="preserve">
          <source>The job is not a candidate for processing for any number of reasons but will return to the &lt;code&gt;PENDING&lt;/code&gt; state as soon as the reasons are no longer present. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute must indicate why the job is no longer a candidate for processing.</source>
          <target state="translated">出于多种原因，该作业都不适合进行处理，但是一旦原因不再存在，该作业将返回&amp;ldquo; &lt;code&gt;PENDING&lt;/code&gt; 状态。作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性必须指出为什么该作业不再是要处理的候选对象。</target>
        </trans-unit>
        <trans-unit id="7c883467e1f58bb632ab1fe6de3c39731be7c1e7" translate="yes" xml:space="preserve">
          <source>The job is not a candidate for processing for any number of reasons but will return to the PENDING state as soon as the reasons are no longer present. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute must indicate why the job is no longer a candidate for processing.</source>
          <target state="translated">出于多种原因，该作业都不适合进行处理，但是一旦不再存在原因，该作业将返回&amp;ldquo;挂起&amp;rdquo;状态。作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性必须指出为什么该作业不再是要处理的候选对象。</target>
        </trans-unit>
        <trans-unit id="bebfca1ea3866b4e064346584b98ffdd7a9baba5" translate="yes" xml:space="preserve">
          <source>The job is not necessarily printed yet, but the data has been transferred successfully from the client to the print service.</source>
          <target state="translated">该作业不一定会被打印出来,但数据已从客户端成功传输到打印服务。</target>
        </trans-unit>
        <trans-unit id="c50316af496d257de7881101a659e9cde7e0ec16" translate="yes" xml:space="preserve">
          <source>The job is not necessarily printed yet, but the data has been transferred successfully from the client to the print service. The client may free data resources.</source>
          <target state="translated">作业还不一定会被打印出来,但数据已经从客户端成功传输到打印服务。客户端可以释放数据资源。</target>
        </trans-unit>
        <trans-unit id="2334f9c2afdad5f4d62f294b3a81fb71d3fae696" translate="yes" xml:space="preserve">
          <source>The job is processing.</source>
          <target state="translated">工作正在处理中。</target>
        </trans-unit>
        <trans-unit id="209216b743606ba4c7f7175fec73f11c99e87d88" translate="yes" xml:space="preserve">
          <source>The job is processing. One or more of the following activities is occurring:</source>
          <target state="translated">工作正在处理中。正在进行下列一项或多项活动:</target>
        </trans-unit>
        <trans-unit id="a6a0dd57e931629de301fcb48e865636ac06175c" translate="yes" xml:space="preserve">
          <source>The job is using, or is attempting to use, one or more hardware devices that are interpreting a PDL, making marks on a medium, and/or performing finishing, such as stapling, etc.</source>
          <target state="translated">该工作正在使用或试图使用一个或多个硬件设备,这些设备正在解释PDL,在介质上做标记,和/或进行整理,如订书机等。</target>
        </trans-unit>
        <trans-unit id="cbbe4328ec52eb0099830e578ba82c98df184ae4" translate="yes" xml:space="preserve">
          <source>The job is using, or is attempting to use, one or more purely software processes that are analyzing, creating, or interpreting a PDL, etc.</source>
          <target state="translated">该工作正在使用或试图使用一个或多个纯软件过程,这些过程正在分析、创建或解释PDL等。</target>
        </trans-unit>
        <trans-unit id="4f96406038b892668822c1209d18a7df1c7acab9" translate="yes" xml:space="preserve">
          <source>The job must be printed exactly as specified. or else rejected.</source>
          <target state="translated">该作业必须完全按照指定的方式打印,否则将被拒绝。</target>
        </trans-unit>
        <trans-unit id="c07c4ad8a99d51d5f9f9cf302dd2f36cdfc5a2e9" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the component's &lt;code&gt;TextUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over a selection and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">尊重此属性并识别用户的拖动手势的工作在于外观实现，尤其是组件的 &lt;code&gt;TextUI&lt;/code&gt; 。启用自动拖动处理后，每当用户在所选内容上按下鼠标按钮然后将鼠标移动几个像素时，大多数外观（包括子类 &lt;code&gt;BasicLookAndFeel&lt;/code&gt; 的外观）都会开始拖放操作。因此，将此属性设置为 &lt;code&gt;true&lt;/code&gt; 可以对选择的行为产生微妙的影响。</target>
        </trans-unit>
        <trans-unit id="8263ec18c1bd0146e5254ea9fdfbabf1798d17c2" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the list's &lt;code&gt;ListUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over an item and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">尊重此属性并识别用户的拖动手势的工作在于外观实现，尤其是列表的 &lt;code&gt;ListUI&lt;/code&gt; 。启用自动拖动处理后，每当用户在某个项目上按下鼠标按钮然后将鼠标移动几个像素时，大多数外观（包括子类 &lt;code&gt;BasicLookAndFeel&lt;/code&gt; 的外观）都会开始拖放操作。因此，将此属性设置为 &lt;code&gt;true&lt;/code&gt; 可以对选择的行为产生微妙的影响。</target>
        </trans-unit>
        <trans-unit id="278ebdd7ed175d50dd30671af7a8707ab6ae0042" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the table's &lt;code&gt;TableUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over an item (in single selection mode) or a selection (in other selection modes) and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">尊重此属性并识别用户的拖动手势的工作在于外观实现方式，尤其是表的 &lt;code&gt;TableUI&lt;/code&gt; 。启用自动拖动处理后，每当用户在某个项目（在单个选择模式下）或一个选择（在其他选择模式下）上按下鼠标按钮时，大多数外观（包括子类 &lt;code&gt;BasicLookAndFeel&lt;/code&gt; 的外观）都会开始拖放操作，并且然后将鼠标移动几个像素。因此，将此属性设置为 &lt;code&gt;true&lt;/code&gt; 可以对选择的行为产生微妙的影响。</target>
        </trans-unit>
        <trans-unit id="ef1391de24846ba8b9cad0ce6268ef0f51927a87" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the tree's &lt;code&gt;TreeUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over an item and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">尊重此属性并识别用户的拖动手势的工作在于外观实现，尤其是树的 &lt;code&gt;TreeUI&lt;/code&gt; 。启用自动拖动处理后，每当用户在某个项目上按下鼠标按钮然后将鼠标移动几个像素时，大多数外观（包括子类 &lt;code&gt;BasicLookAndFeel&lt;/code&gt; 的外观）都会开始拖放操作。因此，将此属性设置为 &lt;code&gt;true&lt;/code&gt; 可以对选择的行为产生微妙的影响。</target>
        </trans-unit>
        <trans-unit id="cb8c62716a47758e70f54b73e39fca959c16d48b" translate="yes" xml:space="preserve">
          <source>The job state is unknown.</source>
          <target state="translated">工作状态不明。</target>
        </trans-unit>
        <trans-unit id="a228d2f87c5f4fb3cabf7a84903a5003c90b6606" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the document data's document format (doc flavor) is not among those supported by the printer.</source>
          <target state="translated">由于文档数据的文档格式(doc flavor)不在打印机支持的格式之列,系统中止了该作业。</target>
        </trans-unit>
        <trans-unit id="3af2aeb06b03ea668e154919c750fa9342e5cced" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the document data's document format (doc flavor) is not among those supported by the printer. If the client specifies a doc flavor with a MIME type of &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, the printer may abort the job if the printer cannot determine the document data's actual format through auto-sensing (even if the printer supports the document format if specified explicitly). This value must be supported, since a doc flavor is required to be specified for each doc.</source>
          <target state="translated">该作业被系统中止，因为文档数据的文档格式（doc格式）不在打印机支持的格式范围之内。如果客户端指定MIME类型为 &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; 的doc风格，则打印机可能无法中止作业，前提是打印机无法通过自动感应确定文档数据的实际格式（即使打印机支持以下格式）：明确指定）。必须支持该值，因为需要为每个文档指定一个文档风格。</target>
        </trans-unit>
        <trans-unit id="abb2c035cbb322ddd0719e07d0d1f19562c87a2f" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer determined while attempting to decompress the document's data that the compression is actually not among those supported by the printer.</source>
          <target state="translated">打印机在尝试解压文档数据时,确定压缩方式不在打印机支持的范围内,因此系统中止了这项工作。</target>
        </trans-unit>
        <trans-unit id="64678937e2569caf310fb1b6b932bfb85891b875" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer determined while attempting to decompress the document's data that the compression is actually not among those supported by the printer. This value must be supported, since &lt;a href=&quot;compression&quot;&gt;&lt;code&gt;Compression&lt;/code&gt;&lt;/a&gt; is a required doc description attribute.</source>
          <target state="translated">该作业被系统中止，因为打印机在尝试对文档数据进行解压缩时确定该压缩实际上不在打印机支持的压缩范围之内。由于&lt;a href=&quot;compression&quot;&gt; &lt;code&gt;Compression&lt;/code&gt; &lt;/a&gt;是必需的文档描述属性，因此必须支持该值。</target>
        </trans-unit>
        <trans-unit id="3a3ac7544a00673c7f8c53016bf8bc4243efaf78" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while decompressing it.</source>
          <target state="translated">由于打印机在解压文档数据时遇到错误,系统中止了这项作业。</target>
        </trans-unit>
        <trans-unit id="8663e6a801b7bcbc697ec1ce30f2121d2d569f0d" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while decompressing it. If the printer posts this reason, the document data has already passed any tests that would have led to the &lt;code&gt;UNSUPPORTED_COMPRESSION&lt;/code&gt; job state reason.</source>
          <target state="translated">该作业被系统中止，因为打印机在解压缩文档时遇到文档数据错误。如果打印机发布此原因，则文档数据已经通过了所有可能导致 &lt;code&gt;UNSUPPORTED_COMPRESSION&lt;/code&gt; 作业状态原因的测试。</target>
        </trans-unit>
        <trans-unit id="c9651e27388cf9a31a3794779e922572b6356320" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while decompressing it. If the printer posts this reason, the document data has already passed any tests that would have led to the UNSUPPORTED_COMPRESSION job state reason.</source>
          <target state="translated">该作业被系统中止,因为打印机在解压文档数据时遇到了错误。如果打印机发布了这个原因,则说明文档数据已经通过了任何可能导致UNSUPPORTED_COMPRESSION作业状态原因的测试。</target>
        </trans-unit>
        <trans-unit id="a5891e464aabaf6d903e99070ab1cfd2da3a228a" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while processing it.</source>
          <target state="translated">由于打印机在处理文档数据时遇到错误,系统中止了这项作业。</target>
        </trans-unit>
        <trans-unit id="398a3dd1a51ddcc4bdb2d5a16e080071a7759c72" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while processing it. If the printer posts this reason, the document data has already passed any tests that would have led to the &lt;code&gt;UNSUPPORTED_DOCUMENT_FORMAT&lt;/code&gt; job state reason.</source>
          <target state="translated">该作业被系统中止，因为打印机在处理文档数据时遇到错误。如果打印机发布此原因，则文档数据已经通过了所有可能导致 &lt;code&gt;UNSUPPORTED_DOCUMENT_FORMAT&lt;/code&gt; 作业状态原因的测试。</target>
        </trans-unit>
        <trans-unit id="4a1074380020f59f8ea4577a52c011d7142eb05b" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while processing it. If the printer posts this reason, the document data has already passed any tests that would have led to the UNSUPPORTED_DOCUMENT_FORMAT job state reason.</source>
          <target state="translated">该作业被系统中止,因为打印机在处理文档数据时遇到了错误。如果打印机发布了这个原因,则说明文档数据已经通过了任何可能导致UNSUPPORTED_DOCUMENT_FORMAT作业状态原因的测试。</target>
        </trans-unit>
        <trans-unit id="bfe1ef1e2b2babdc8e61cb1c8d9f3c8fd20627e3" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system.</source>
          <target state="translated">该工作被系统中止。</target>
        </trans-unit>
        <trans-unit id="80021461b49438812dfae96acc98b5c17eca0040" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system. Either the job (1) is in the process of being aborted, (2) has been aborted by the system and placed in the &lt;code&gt;ABORTED&lt;/code&gt; state, or (3) has been aborted by the system and placed in the &lt;code&gt;PENDING_HELD&lt;/code&gt; state, so that a user or operator can manually try the job again. This value should be supported.</source>
          <target state="translated">该作业已被系统中止。作业（1）正在被中止，（2）已被系统中止并处于 &lt;code&gt;ABORTED&lt;/code&gt; 状态，或者（3）已被系统中止并处于 &lt;code&gt;PENDING_HELD&lt;/code&gt; 状态，因此a用户或操作员可以手动再次尝试该作业。应该支持该值。</target>
        </trans-unit>
        <trans-unit id="0c81f6d0b7d6876f860772ffa689ed85b796bc1f" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system. Either the job (1) is in the process of being aborted, (2) has been aborted by the system and placed in the ABORTED state, or (3) has been aborted by the system and placed in the PENDING_HELD state, so that a user or operator can manually try the job again. This value should be supported.</source>
          <target state="translated">该作业被系统中止。要么作业 (1)正在被中止,(2)已被系统中止并置于 ABORTED 状态,要么 (3)已被系统中止并置于 PENDING_HELD 状态,以便用户或操作员可以手动再次尝试作业。应支持此值。</target>
        </trans-unit>
        <trans-unit id="75d03c55e5439d8b95948d37e4f4c9b4680f7e7f" translate="yes" xml:space="preserve">
          <source>The job was canceled by an unidentified local user, i.e., a user at a console at the device.</source>
          <target state="translated">该作业被一个身份不明的本地用户,即设备上的一个控制台的用户取消了。</target>
        </trans-unit>
        <trans-unit id="8bf7d9b5fa01bc8bff3bfee2e8a72f12d197056b" translate="yes" xml:space="preserve">
          <source>The job was canceled by an unidentified local user, i.e., a user at a console at the device. This value should be supported if the implementation supports canceling jobs at the console.</source>
          <target state="translated">该作业被一个未识别的本地用户,即设备上的控制台的用户取消。如果实现支持在控制台取消作业,则应支持该值。</target>
        </trans-unit>
        <trans-unit id="3cc153a43dcc333ffda8997278b8d3b1822d0927" translate="yes" xml:space="preserve">
          <source>The job was canceled by the &lt;a href=&quot;../printservice&quot;&gt;&lt;code&gt;PrintService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该作业已被&lt;a href=&quot;../printservice&quot;&gt; &lt;code&gt;PrintService&lt;/code&gt; &lt;/a&gt;取消。</target>
        </trans-unit>
        <trans-unit id="6feb69c5c44972d5c437c2b6edf6e054d3d4c3b5" translate="yes" xml:space="preserve">
          <source>The job was canceled by the operator, i.e., by a user who has been authenticated as having operator privileges (whether local or remote).</source>
          <target state="translated">该作业被操作员取消,即被认证为具有操作员权限的用户(无论是本地还是远程)取消。</target>
        </trans-unit>
        <trans-unit id="eede175a41da055cf9fbe7c9bea273be2babd32b" translate="yes" xml:space="preserve">
          <source>The job was canceled by the operator, i.e., by a user who has been authenticated as having operator privileges (whether local or remote). If the security policy is to allow anyone to cancel anyone's job, then this value may be used when the job is canceled by someone other than the owner of the job. For such a security policy, in effect, everyone is an operator as far as canceling jobs is concerned. This value should be supported if the implementation permits canceling by someone other than the owner of the job.</source>
          <target state="translated">该作业由操作员取消,即由经过身份验证具有操作员权限(无论是本地还是远程)的用户取消。如果安全策略是允许任何人取消任何人的作业,那么当作业被作业所有者以外的人取消时,可以使用这个值。对于这样的安全策略,实际上,就取消作业而言,每个人都是操作员。如果实现允许工作所有者以外的人取消工作,那么应该支持这个值。</target>
        </trans-unit>
        <trans-unit id="32c5c26e90c8714bae45cb570ce509f49f621fd3" translate="yes" xml:space="preserve">
          <source>The job was canceled by the owner of the job, i.e., by a user whose authenticated identity is the same as the value of the originating user that created the Print Job, or by some other authorized end-user, such as a member of the job owner's security group.</source>
          <target state="translated">该作业被作业所有者取消,即被认证身份与创建打印作业的原始用户值相同的用户取消,或被其他授权的终端用户取消,如作业所有者的安全组成员。</target>
        </trans-unit>
        <trans-unit id="e77770a6bf43cb0d83acec3fbfc99bccb18adceb" translate="yes" xml:space="preserve">
          <source>The job was canceled by the owner of the job, i.e., by a user whose authenticated identity is the same as the value of the originating user that created the Print Job, or by some other authorized end-user, such as a member of the job owner's security group. This value should be supported.</source>
          <target state="translated">该作业被作业所有者取消,即被认证身份与创建打印作业的原始用户值相同的用户取消,或被其他授权的终端用户取消,如作业所有者的安全组成员。应支持该值。</target>
        </trans-unit>
        <trans-unit id="92c041c56ddbd824f348c9978061838a2c76180a" translate="yes" xml:space="preserve">
          <source>The job was not completely submitted for some unforeseen reason.</source>
          <target state="translated">由于一些不可预见的原因,工作没有完全提交。</target>
        </trans-unit>
        <trans-unit id="a608d3651752def364a16735ed653b3688b7fab7" translate="yes" xml:space="preserve">
          <source>The job was not completely submitted for some unforeseen reason. Possibilities include (1) the printer has crashed before the job was fully submitted by the client, (2) the printer or the document transfer method has crashed in some non-recoverable way before the document data was entirely transferred to the printer, (3) the client crashed before the job was fully submitted.</source>
          <target state="translated">由于某些不可预见的原因,作业没有完全提交。可能的原因包括:(1)在客户完全提交作业之前,打印机崩溃了;(2)在文件数据完全传输到打印机之前,打印机或文件传输方式以某种不可恢复的方式崩溃了;(3)客户在完全提交作业之前崩溃了。</target>
        </trans-unit>
        <trans-unit id="7da33eec734a2ad4a396547252a8edff4bbad6a3" translate="yes" xml:space="preserve">
          <source>The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute may indicate why the job has stopped processing. For example, if the output device is stopped, the &lt;code&gt;PRINTER_STOPPED&lt;/code&gt; value may be included in the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性可以指示作业为何停止处理。例如，如果输出设备已停止，则 &lt;code&gt;PRINTER_STOPPED&lt;/code&gt; 值可能包含在作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性中。</target>
        </trans-unit>
        <trans-unit id="e3b5dbd8418dde3945a7a407762a21b4f98ee6fc" translate="yes" xml:space="preserve">
          <source>The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute may indicate why the job has stopped processing. For example, if the output device is stopped, the PRINTER_STOPPED value may be included in the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性可以指示作业为何停止处理。例如，如果输出设备已停止，则PRINTER_STOPPED值可能会包含在作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性中。</target>
        </trans-unit>
        <trans-unit id="fc3386dfd5b10cc369651ee2e31cf078b7359b41" translate="yes" xml:space="preserve">
          <source>The justification for the title.</source>
          <target state="translated">题的理由。</target>
        </trans-unit>
        <trans-unit id="e273c4e24e3008768287b9553b857266ad9f1734" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;String&lt;/code&gt; should be a locale independent key for the role. It is not intended to be used as the actual &lt;code&gt;String&lt;/code&gt; to display to the user. To get the localized string, use &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt;&lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">键 &lt;code&gt;String&lt;/code&gt; 应该是角色的与语言环境无关的键。它不打算用作显示给用户的实际 &lt;code&gt;String&lt;/code&gt; 。要获取本地化的字符串，请使用&lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt; &lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9272016a913da868c969604ed679ec13ea1bb51" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;String&lt;/code&gt; should be a locale independent key for the state. It is not intended to be used as the actual &lt;code&gt;String&lt;/code&gt; to display to the user. To get the localized string, use &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt;&lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">键 &lt;code&gt;String&lt;/code&gt; 应该是该状态的与语言环境无关的键。它不打算用作显示给用户的实际 &lt;code&gt;String&lt;/code&gt; 。要获取本地化的字符串，请使用&lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt; &lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="afeba22c76bd0a4c4accca690f5b24b6151023b3" translate="yes" xml:space="preserve">
          <source>The key abstraction introduced in this package is &lt;em&gt;stream&lt;/em&gt;. The classes &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;longstream&quot;&gt;&lt;code&gt;LongStream&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;doublestream&quot;&gt;&lt;code&gt;DoubleStream&lt;/code&gt;&lt;/a&gt; are streams over objects and the primitive &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; types. Streams differ from collections in several ways:</source>
          <target state="translated">此软件包中引入的关键抽象是&lt;em&gt;stream&lt;/em&gt;。类&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;longstream&quot;&gt; &lt;code&gt;LongStream&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;doublestream&quot;&gt; &lt;code&gt;DoubleStream&lt;/code&gt; &lt;/a&gt;是对象以及原始 &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;long&lt;/code&gt; 和 &lt;code&gt;double&lt;/code&gt; 类型的流。流在几个方面与集合不同：</target>
        </trans-unit>
        <trans-unit id="22b9782e1cd06bc027ae7110195d34f30d3f52c6" translate="yes" xml:space="preserve">
          <source>The key abstraction introduced in this package is &lt;em&gt;stream&lt;/em&gt;. The classes &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;longstream&quot;&gt;&lt;code&gt;LongStream&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;doublestream&quot;&gt;&lt;code&gt;DoubleStream&lt;/code&gt;&lt;/a&gt; are streams over objects and the primitive &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt; types. Streams differ from collections in several ways:</source>
          <target state="translated">此软件包中引入的关键抽象是&lt;em&gt;stream&lt;/em&gt;。类&lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;longstream&quot;&gt; &lt;code&gt;LongStream&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;doublestream&quot;&gt; &lt;code&gt;DoubleStream&lt;/code&gt; &lt;/a&gt;是对象以及原始 &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;long&lt;/code&gt; 和 &lt;code&gt;double&lt;/code&gt; 类型的流。流在几个方面与集合有所不同：</target>
        </trans-unit>
        <trans-unit id="20aca74de811ac39ad51b80e6cab2c0c1e6c49a1" translate="yes" xml:space="preserve">
          <source>The key abstractions introduced by this package are &lt;a href=&quot;memorysegment&quot;&gt;&lt;code&gt;MemorySegment&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;memoryaddress&quot;&gt;&lt;code&gt;MemoryAddress&lt;/code&gt;&lt;/a&gt;. The first models a contiguous memory region, which can reside either inside or outside the Java heap; the latter models an address - which can sometimes be expressed as an offset into a given segment. A memory address represents the main access coordinate of a memory access var handle, which can be obtained using the combinator methods defined in the &lt;a href=&quot;memoryhandles&quot;&gt;&lt;code&gt;MemoryHandles&lt;/code&gt;&lt;/a&gt; class. Finally, the &lt;a href=&quot;memorylayout&quot;&gt;&lt;code&gt;MemoryLayout&lt;/code&gt;&lt;/a&gt; class hierarchy enables description of &lt;em&gt;memory layouts&lt;/em&gt; and basic operations such as computing the size in bytes of a given layout, obtain its alignment requirements, and so on. Memory layouts also provide an alternate, more abstract way, to produce memory access var handles, e.g. using &lt;a href=&quot;memorylayout#layout-paths&quot;&gt;&lt;em&gt;layout paths&lt;/em&gt;&lt;/a&gt;. For example, to allocate an off-heap memory region big enough to hold 10 values of the primitive type &lt;code&gt;int&lt;/code&gt;, and fill it with values ranging from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt;, we can use the following code:</source>
          <target state="translated">此包引入的关键抽象是&lt;a href=&quot;memorysegment&quot;&gt; &lt;code&gt;MemorySegment&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;memoryaddress&quot;&gt; &lt;code&gt;MemoryAddress&lt;/code&gt; &lt;/a&gt;。第一个对连续的内存区域进行建模，该内存区域可以驻留在Java堆的内部或外部；后者为地址建模-有时可以表示为给定段的偏移量。内存地址表示内存访问var句柄的主要访问坐标，可以使用&lt;a href=&quot;memoryhandles&quot;&gt; &lt;code&gt;MemoryHandles&lt;/code&gt; &lt;/a&gt;类中定义的组合器方法获得该地址。最后，&lt;a href=&quot;memorylayout&quot;&gt; &lt;code&gt;MemoryLayout&lt;/code&gt; &lt;/a&gt;类层次结构启用了&lt;em&gt;内存布局的&lt;/em&gt;描述&lt;em&gt;&lt;/em&gt;基本操作，例如计算给定布局的大小（以字节为单位），获取其对齐要求等。内存布局还提供了另一种更抽象的方式来生成内存访问var句柄，例如，使用&lt;a href=&quot;memorylayout#layout-paths&quot;&gt;&lt;em&gt;布局路径&lt;/em&gt;&lt;/a&gt;。例如，要分配一个足以容纳10个基本类型 &lt;code&gt;int&lt;/code&gt; 的值的堆外内存区域，并用 &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;9&lt;/code&gt; 的值填充它，我们可以使用以下代码：</target>
        </trans-unit>
        <trans-unit id="9a84e5030e8e2a0fb9cc31fad2393fb5bb07bb25" translate="yes" xml:space="preserve">
          <source>The key assumptions are that the class has a nullary constructor and that its state is accurately represented by matching pairs of &quot;setter&quot; and &quot;getter&quot; methods in the order they are returned by the Introspector. In addition to providing code-free persistence for JavaBeans, the &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; provides a convenient means to effect persistent storage for classes that have a constructor that, while not nullary, simply requires some property values as arguments.</source>
          <target state="translated">关键的假设是该类具有null构造函数，并且其状态由Introspector返回的&amp;ldquo; setter&amp;rdquo;和&amp;ldquo; getter&amp;rdquo;方法对的匹配来准确表示。除了为JavaBeans提供无代码的持久性之外， &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 还提供了一种方便的方法来实现具有构造函数的类的持久存储，该构造函数虽然不是空值，但仅需要一些属性值作为参数。</target>
        </trans-unit>
        <trans-unit id="db226997511f7e7996e39cc88dbdf0bd036ad847" translate="yes" xml:space="preserve">
          <source>The key code of the key that was pressed in a keyboard event.</source>
          <target state="translated">键盘事件中被按下的键的键号。</target>
        </trans-unit>
        <trans-unit id="c3114daa0611f12be89e4183584fe33d0fae4b2f" translate="yes" xml:space="preserve">
          <source>The key code of the key that was pressed in a keyboard event. This has been replaced by KeyEvent.getKeyCode()</source>
          <target state="translated">键盘事件中被按下的键的键值。已被KeyEvent.getKeyCode()取代。</target>
        </trans-unit>
        <trans-unit id="7b01a7825dcb6f5ba043067697b1d8be70e427a1" translate="yes" xml:space="preserve">
          <source>The key contains all of the characters in the line starting with the first non-white space character and up to, but not including, the first unescaped &lt;code&gt;'='&lt;/code&gt;, &lt;code&gt;':'&lt;/code&gt;, or white space character other than a line terminator. All of these key termination characters may be included in the key by escaping them with a preceding backslash character; for example,</source>
          <target state="translated">键包含该行中的所有字符，从第一个非空白字符开始，直到但不包括第一个非转义的 &lt;code&gt;'='&lt;/code&gt; ， &lt;code&gt;':'&lt;/code&gt; 或除行终止符之外的空白字符。所有这些密钥终止字符都可以通过用前面的反斜杠字符转义来包括在密钥中；例如，</target>
        </trans-unit>
        <trans-unit id="10925f9bd3a7bf79574e77d146d7ce5cafee6d2d" translate="yes" xml:space="preserve">
          <source>The key elements of this package include:</source>
          <target state="translated">这套方案的主要内容包括:</target>
        </trans-unit>
        <trans-unit id="c6cae5d488028cb19cb419452c7a2edb32b1f590" translate="yes" xml:space="preserve">
          <source>The key event is passed to every &lt;code&gt;KeyListener&lt;/code&gt; or &lt;code&gt;KeyAdapter&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addKeyListener&lt;/code&gt; method. (&lt;code&gt;KeyAdapter&lt;/code&gt; objects implement the &lt;code&gt;KeyListener&lt;/code&gt; interface.)</source>
          <target state="translated">关键事件将传递给每个注册的 &lt;code&gt;KeyListener&lt;/code&gt; 或 &lt;code&gt;KeyAdapter&lt;/code&gt; 对象，这些对象已使用组件的 &lt;code&gt;addKeyListener&lt;/code&gt; 方法注册为接收此类事件。（ &lt;code&gt;KeyAdapter&lt;/code&gt; 对象实现 &lt;code&gt;KeyListener&lt;/code&gt; 接口。）</target>
        </trans-unit>
        <trans-unit id="c9a2b7616c25d87b7cce2eb0034e5fe8882713d0" translate="yes" xml:space="preserve">
          <source>The key for Unicode locale extension ('u').</source>
          <target state="translated">Unicode区域扩展键('u')。</target>
        </trans-unit>
        <trans-unit id="b66a163c85811c1f14b1e7a47ff99a8c4c87773a" translate="yes" xml:space="preserve">
          <source>The key for the principal will be retrieved from the keytab. If the key is not available in the keytab the user will be prompted for the principal's password. The Subject will be populated with the principal's key either from the keytab or derived from the password entered.</source>
          <target state="translated">主事人的密钥将从keytab中获取。如果keytab中没有密钥,则会提示用户输入校长的密码。Subject将用主事人的钥匙填充,钥匙可以从keytab中获取,也可以从输入的密码中获取。</target>
        </trans-unit>
        <trans-unit id="8428fe01972833a14a72389b516a924f19614bf1" translate="yes" xml:space="preserve">
          <source>The key for the private use extension ('x').</source>
          <target state="translated">私用分机('x')的钥匙。</target>
        </trans-unit>
        <trans-unit id="39adb11f6504601433950670cbefd81cef9c88e0" translate="yes" xml:space="preserve">
          <source>The key is &lt;code&gt;&quot;fruits&quot;&lt;/code&gt; and the associated element is:</source>
          <target state="translated">关键是 &lt;code&gt;&quot;fruits&quot;&lt;/code&gt; ，相关元素是：</target>
        </trans-unit>
        <trans-unit id="a0149c1aab52142013341ca2aee2dbd36da314ee" translate="yes" xml:space="preserve">
          <source>The key material of a &lt;code&gt;KerberosKey&lt;/code&gt; is defined as the value of the &lt;code&gt;keyValue&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;KerberosKey&lt;/code&gt; 的密钥材料定义为上述 &lt;code&gt;keyValue&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="e092b2c83cdba16c729e10c599650354f61f11ae" translate="yes" xml:space="preserve">
          <source>The key material of an &lt;code&gt;EncryptionKey&lt;/code&gt; is defined as the value of the &lt;code&gt;keyValue&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;EncryptionKey&lt;/code&gt; 的密钥材料定义为上述 &lt;code&gt;keyValue&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="8129dd58b1558046a43f513a6782825b85e25fcc" translate="yes" xml:space="preserve">
          <source>The key of a character is an integer composed of primary order(short), secondary order(byte), and tertiary order(byte). Java strictly defines the size and signedness of its primitive data types. Therefore, the static functions &lt;code&gt;primaryOrder&lt;/code&gt;, &lt;code&gt;secondaryOrder&lt;/code&gt;, and &lt;code&gt;tertiaryOrder&lt;/code&gt; return &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, and &lt;code&gt;short&lt;/code&gt; respectively to ensure the correctness of the key value.</source>
          <target state="translated">字符的键是由主顺序（短），次级顺序（字节）和三级顺序（字节）组成的整数。Java严格定义了其原始数据类型的大小和符号。因此，静态函数 &lt;code&gt;primaryOrder&lt;/code&gt; ， &lt;code&gt;secondaryOrder&lt;/code&gt; 和 &lt;code&gt;tertiaryOrder&lt;/code&gt; 分别返回 &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;short&lt;/code&gt; 和 &lt;code&gt;short&lt;/code&gt; ,以确保键值的正确性。</target>
        </trans-unit>
        <trans-unit id="9f985888e1c35d4435d90834a189099e0d2cd718" translate="yes" xml:space="preserve">
          <source>The key of the preference that was changed.</source>
          <target state="translated">被改变的喜好的关键。</target>
        </trans-unit>
        <trans-unit id="6e8fcf42cfa361807a43d2b30af7d9cda84c3efe" translate="yes" xml:space="preserve">
          <source>The key operations supported by this class are those of</source>
          <target state="translated">该类支持的主要操作有</target>
        </trans-unit>
        <trans-unit id="3387fc9f2a2285c3b881b40c90c411fdd5064150" translate="yes" xml:space="preserve">
          <source>The key property list string. This string is independent of whether the ObjectName is a pattern.</source>
          <target state="translated">关键属性列表字符串。该字符串与ObjectName是否为模式无关。</target>
        </trans-unit>
        <trans-unit id="591c5debdb55c54ccf4211c0d46262a7acb20492" translate="yes" xml:space="preserve">
          <source>The key returned when this channel was last registered with the given selector, or &lt;code&gt;null&lt;/code&gt; if this channel is not currently registered with that selector</source>
          <target state="translated">该通道最后一次在给定选择器中注册时返回的键；如果此通道当前未在该选择器中注册，则返回 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0df978032106f5a48ada8ce642e290c157b95524" translate="yes" xml:space="preserve">
          <source>The key set is &lt;a href=&quot;#ksc&quot;&gt;not thread-safe&lt;/a&gt;.</source>
          <target state="translated">密钥集&lt;a href=&quot;#ksc&quot;&gt;不是线程安全的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="57ef8dd9009d16c64f42c6500fb027397a1c181c" translate="yes" xml:space="preserve">
          <source>The key set is not directly modifiable. A key is removed only after it has been cancelled and its channel has been deregistered. Any attempt to modify the key set will cause an &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">密钥集不可直接修改。仅在取消键并取消注册其通道后，才能将其删除。任何尝试修改密钥集的尝试都将引发&lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0555fd1ced7983df0b16ac9310410ee14e835da7" translate="yes" xml:space="preserve">
          <source>The key store provider. If not specified, uses the standard search order to find the provider.</source>
          <target state="translated">关键存储提供者。如果没有指定,则使用标准搜索顺序来查找提供者。</target>
        </trans-unit>
        <trans-unit id="7ede62eee0acc00784b0b84443a9e91e3fc638f8" translate="yes" xml:space="preserve">
          <source>The key store type. If not specified, defaults to the result of calling &lt;code&gt;KeyStore.getDefaultType()&lt;/code&gt;. If the type is &quot;PKCS11&quot;, then keyStoreURL must be &quot;NONE&quot; and privateKeyPasswordURL must not be specified.</source>
          <target state="translated">密钥库类型。如果未指定，则默认为调用 &lt;code&gt;KeyStore.getDefaultType()&lt;/code&gt; 的结果。如果类型为&amp;ldquo; PKCS11&amp;rdquo;，则keyStoreURL必须为&amp;ldquo; NONE&amp;rdquo;，并且不能指定privateKeyPasswordURL。</target>
        </trans-unit>
        <trans-unit id="1d9c9d8289128682425a313c74602226e7f84949" translate="yes" xml:space="preserve">
          <source>The key that generates &lt;code&gt;VK_Q&lt;/code&gt; when using a U.S. keyboard layout also generates a unique code for Russian or Hebrew layout. There is no a &lt;code&gt;VK_&lt;/code&gt; constant for these and many other codes in various layouts. These codes may be obtained by using &lt;code&gt;getExtendedKeyCode&lt;/code&gt; and are used whenever a &lt;code&gt;VK_&lt;/code&gt; constant is used.</source>
          <target state="translated">使用美式键盘布局时生成 &lt;code&gt;VK_Q&lt;/code&gt; 的键还会为俄语或希伯来语布局生成唯一的代码。在各种布局中，这些代码和许多其他代码没有 &lt;code&gt;VK_&lt;/code&gt; 常量。这些代码可以通过使用 &lt;code&gt;getExtendedKeyCode&lt;/code&gt; 获得，并在使用 &lt;code&gt;VK_&lt;/code&gt; 常量时使用。</target>
        </trans-unit>
        <trans-unit id="fff43c55d2687265a85c98dde4c42fdce9575cdc" translate="yes" xml:space="preserve">
          <source>The key used for storing a &lt;code&gt;Boolean&lt;/code&gt; that corresponds to the selected state.</source>
          <target state="translated">用于存储与所选状态相对应的 &lt;code&gt;Boolean&lt;/code&gt; 的键。</target>
        </trans-unit>
        <trans-unit id="a06203cc6b56a5b789124f777f4f1e6b8e3decc0" translate="yes" xml:space="preserve">
          <source>The key used for storing a &lt;code&gt;Boolean&lt;/code&gt; that corresponds to the selected state. This is typically used only for components that have a meaningful selection state. For example, &lt;code&gt;JRadioButton&lt;/code&gt; and &lt;code&gt;JCheckBox&lt;/code&gt; make use of this but instances of &lt;code&gt;JMenu&lt;/code&gt; don't.</source>
          <target state="translated">用于存储与所选状态相对应的 &lt;code&gt;Boolean&lt;/code&gt; 的键。这通常仅用于具有有意义选择状态的组件。例如， &lt;code&gt;JRadioButton&lt;/code&gt; 和 &lt;code&gt;JCheckBox&lt;/code&gt; 都使用了此功能，但 &lt;code&gt;JMenu&lt;/code&gt; 的实例却没有使用。</target>
        </trans-unit>
        <trans-unit id="cc755a5d588ff3e99ca6ecb6db0feb0b99b106aa" translate="yes" xml:space="preserve">
          <source>The key used for storing a &lt;code&gt;KeyStroke&lt;/code&gt; to be used as the accelerator for the action.</source>
          <target state="translated">用于存储要用作动作加速器的 &lt;code&gt;KeyStroke&lt;/code&gt; 的键。</target>
        </trans-unit>
        <trans-unit id="3af69e2ee60894317f962df10e77486cf1003639" translate="yes" xml:space="preserve">
          <source>The key used for storing a longer &lt;code&gt;String&lt;/code&gt; description for the action, could be used for context-sensitive help.</source>
          <target state="translated">用于存储操作的较长 &lt;code&gt;String&lt;/code&gt; 描述的键可用于上下文相关帮助。</target>
        </trans-unit>
        <trans-unit id="4313350c8220b00b8ca46701c3fbe79249521eb8" translate="yes" xml:space="preserve">
          <source>The key used for storing a short &lt;code&gt;String&lt;/code&gt; description for the action, used for tooltip text.</source>
          <target state="translated">用于存储操作的简短 &lt;code&gt;String&lt;/code&gt; 描述的键，用于工具提示文本。</target>
        </trans-unit>
        <trans-unit id="cbc06bf453db346ac5d98109ef1a74424f0b1e39" translate="yes" xml:space="preserve">
          <source>The key used for storing a small &lt;code&gt;Icon&lt;/code&gt;, such as &lt;code&gt;ImageIcon&lt;/code&gt;.</source>
          <target state="translated">用于存储小 &lt;code&gt;Icon&lt;/code&gt; （例如 &lt;code&gt;ImageIcon&lt;/code&gt; )的密钥。</target>
        </trans-unit>
        <trans-unit id="ca28f88c8b6822311e066df2073ccfca128ffab5" translate="yes" xml:space="preserve">
          <source>The key used for storing a small &lt;code&gt;Icon&lt;/code&gt;, such as &lt;code&gt;ImageIcon&lt;/code&gt;. This is typically used with menus such as &lt;code&gt;JMenuItem&lt;/code&gt;.</source>
          <target state="translated">用于存储小 &lt;code&gt;Icon&lt;/code&gt; （例如 &lt;code&gt;ImageIcon&lt;/code&gt; )的密钥。通常与菜单（例如 &lt;code&gt;JMenuItem&lt;/code&gt; )一起使用。</target>
        </trans-unit>
        <trans-unit id="510c4e314bfc357f8a142c0f12ecfbdf60ef4c6d" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Icon&lt;/code&gt;.</source>
          <target state="translated">用于存储 &lt;code&gt;Icon&lt;/code&gt; 的键。</target>
        </trans-unit>
        <trans-unit id="3f85af6019774c273c52b21a75abdba33f13cbed" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Icon&lt;/code&gt;. This is typically used by buttons, such as &lt;code&gt;JButton&lt;/code&gt; and &lt;code&gt;JToggleButton&lt;/code&gt;.</source>
          <target state="translated">用于存储 &lt;code&gt;Icon&lt;/code&gt; 的键。通常由按钮使用，例如 &lt;code&gt;JButton&lt;/code&gt; 和 &lt;code&gt;JToggleButton&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7441f7374e1db2e35bd44136a9d25bea7f4b6545" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to one of the &lt;code&gt;KeyEvent&lt;/code&gt; key codes.</source>
          <target state="translated">用于存储与 &lt;code&gt;KeyEvent&lt;/code&gt; 键代码之一相对应的 &lt;code&gt;Integer&lt;/code&gt; 的键。</target>
        </trans-unit>
        <trans-unit id="e5d4c03a7904fd08c844709cf3b00e41a2b633a6" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to one of the &lt;code&gt;KeyEvent&lt;/code&gt; key codes. The value is commonly used to specify a mnemonic. For example: &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.VK_A)&lt;/code&gt; sets the mnemonic of &lt;code&gt;myAction&lt;/code&gt; to 'a', while &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.getExtendedKeyCodeForChar('&amp;Ntilde;'))&lt;/code&gt; sets the mnemonic of &lt;code&gt;myAction&lt;/code&gt; to Cyrillic letter &quot;Ef&quot;.</source>
          <target state="translated">用于存储与 &lt;code&gt;KeyEvent&lt;/code&gt; 键代码之一相对应的 &lt;code&gt;Integer&lt;/code&gt; 的键。该值通常用于指定助记符。例如： &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.VK_A)&lt;/code&gt; 将 &lt;code&gt;myAction&lt;/code&gt; 的助记符设置为'a'，而 &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.getExtendedKeyCodeForChar('&amp;Ntilde;'))&lt;/code&gt; 将 &lt;code&gt;myAction&lt;/code&gt; 的助记符设置为西里尔字母&amp;ldquo; Ef&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="13893d6d133909575ce011e4a4bd5413e29f806c" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to the index in the text (identified by the &lt;code&gt;NAME&lt;/code&gt; property) that the decoration for a mnemonic should be rendered at.</source>
          <target state="translated">用于存储一个 &lt;code&gt;Integer&lt;/code&gt; 的键，该键对应于应在其上呈现助记符修饰的文本中的索引（由 &lt;code&gt;NAME&lt;/code&gt; 属性标识）。</target>
        </trans-unit>
        <trans-unit id="d459d2f52abef201da41ccf4dded26819715dc4e" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to the index in the text (identified by the &lt;code&gt;NAME&lt;/code&gt; property) that the decoration for a mnemonic should be rendered at. If the value of this property is greater than or equal to the length of the text, it will treated as -1.</source>
          <target state="translated">用于存储一个 &lt;code&gt;Integer&lt;/code&gt; 的键，该键对应于应在其上呈现助记符修饰的文本中的索引（由 &lt;code&gt;NAME&lt;/code&gt; 属性标识）。如果此属性的值大于或等于文本的长度，则将其视为-1。</target>
        </trans-unit>
        <trans-unit id="8ee1794b44d425373319d35e314eb0fe551d5e36" translate="yes" xml:space="preserve">
          <source>The key used for storing the &lt;code&gt;String&lt;/code&gt; name for the action, used for a menu or button.</source>
          <target state="translated">用于存储操作的 &lt;code&gt;String&lt;/code&gt; 名称的键，用于菜单或按钮。</target>
        </trans-unit>
        <trans-unit id="980838ebdbc8d0916ba657f4bc82b0737f06ce5b" translate="yes" xml:space="preserve">
          <source>The key used to determine the command &lt;code&gt;String&lt;/code&gt; for the &lt;code&gt;ActionEvent&lt;/code&gt; that will be created when an &lt;code&gt;Action&lt;/code&gt; is going to be notified as the result of residing in a &lt;code&gt;Keymap&lt;/code&gt; associated with a &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">密钥用来确定命令 &lt;code&gt;String&lt;/code&gt; 的 &lt;code&gt;ActionEvent&lt;/code&gt; 将当被创建 &lt;code&gt;Action&lt;/code&gt; 将要被通知作为驻留在的结果 &lt;code&gt;Keymap&lt;/code&gt; 与一个相关联 &lt;code&gt;JComponent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07021616652b4190834cc6f5cd3d6a99828ab34d" translate="yes" xml:space="preserve">
          <source>The key.</source>
          <target state="translated">关键。</target>
        </trans-unit>
        <trans-unit id="7d7d2eafd0bd1f2e703614a07a3808fcba5c87ea" translate="yes" xml:space="preserve">
          <source>The keys in Map are case-insensitive.</source>
          <target state="translated">地图中的键是不区分大小写的。</target>
        </trans-unit>
        <trans-unit id="9fcfd0ac958dc909e6b60a2e46db0de0826aceb0" translate="yes" xml:space="preserve">
          <source>The keys involved in establishing a shared secret are created by one of the key generators (&lt;code&gt;KeyPairGenerator&lt;/code&gt; or &lt;code&gt;KeyGenerator&lt;/code&gt;), a &lt;code&gt;KeyFactory&lt;/code&gt;, or as a result from an intermediate phase of the key agreement protocol (&lt;a href=&quot;#engineDoPhase(java.security.Key,boolean)&quot;&gt;&lt;code&gt;engineDoPhase&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">建立共享机密所涉及的密钥是由密钥生成器之一（ &lt;code&gt;KeyPairGenerator&lt;/code&gt; 或 &lt;code&gt;KeyGenerator&lt;/code&gt; ）， &lt;code&gt;KeyFactory&lt;/code&gt; 或密钥协议协议的中间阶段（&lt;a href=&quot;#engineDoPhase(java.security.Key,boolean)&quot;&gt; &lt;code&gt;engineDoPhase&lt;/code&gt; &lt;/a&gt;）创建的。</target>
        </trans-unit>
        <trans-unit id="8f370fcfd44322aa2b8d1091b0a099098abd9ad6" translate="yes" xml:space="preserve">
          <source>The keys involved in establishing a shared secret are created by one of the key generators (&lt;code&gt;KeyPairGenerator&lt;/code&gt; or &lt;code&gt;KeyGenerator&lt;/code&gt;), a &lt;code&gt;KeyFactory&lt;/code&gt;, or as a result from an intermediate phase of the key agreement protocol (&lt;a href=&quot;keyagreementspi#engineDoPhase-java.security.Key-boolean-&quot;&gt;&lt;code&gt;engineDoPhase&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">建立共享机密所涉及的密钥由密钥生成器之一（ &lt;code&gt;KeyPairGenerator&lt;/code&gt; 或 &lt;code&gt;KeyGenerator&lt;/code&gt; ）， &lt;code&gt;KeyFactory&lt;/code&gt; 或密钥协议协议的中间阶段（&lt;a href=&quot;keyagreementspi#engineDoPhase-java.security.Key-boolean-&quot;&gt; &lt;code&gt;engineDoPhase&lt;/code&gt; &lt;/a&gt;）创建。</target>
        </trans-unit>
        <trans-unit id="723f16f5244db1190e45ab85ded24007968e816f" translate="yes" xml:space="preserve">
          <source>The keys involved in establishing a shared secret are created by one of the key generators (&lt;code&gt;KeyPairGenerator&lt;/code&gt; or &lt;code&gt;KeyGenerator&lt;/code&gt;), a &lt;code&gt;KeyFactory&lt;/code&gt;, or as a result from an intermediate phase of the key agreement protocol.</source>
          <target state="translated">建立共享机密所涉及的密钥是由密钥生成器之一（ &lt;code&gt;KeyPairGenerator&lt;/code&gt; 或 &lt;code&gt;KeyGenerator&lt;/code&gt; ）， &lt;code&gt;KeyFactory&lt;/code&gt; 或密钥协议协议的中间阶段生成的。</target>
        </trans-unit>
        <trans-unit id="5fe9470c6519546a44549a43906b2494c99a3b8b" translate="yes" xml:space="preserve">
          <source>The keys used to control the hints are all special values that subclass the associated &lt;a href=&quot;renderinghints.key&quot;&gt;&lt;code&gt;RenderingHints.Key&lt;/code&gt;&lt;/a&gt; class. Many common hints are expressed below as static constants in this class, but the list is not meant to be exhaustive. Other hints may be created by other packages by defining new objects which subclass the &lt;code&gt;Key&lt;/code&gt; class and defining the associated values.</source>
          <target state="translated">用于控制提示的键都是将关联的&lt;a href=&quot;renderinghints.key&quot;&gt; &lt;code&gt;RenderingHints.Key&lt;/code&gt; &lt;/a&gt;类子类化的所有特殊值。下面在此类中将许多常见的提示表示为静态常量，但是该列表并不意味着详尽无遗。通过定义子类 &lt;code&gt;Key&lt;/code&gt; 类的新对象并定义关联的值，其他包可以创建其他提示。</target>
        </trans-unit>
        <trans-unit id="93449d8bc735c86f66b7af66ec3fc6632ea6e0e9" translate="yes" xml:space="preserve">
          <source>The keystore location.</source>
          <target state="translated">钥匙店的位置。</target>
        </trans-unit>
        <trans-unit id="71b0abd8de97d396da90382775d49f0501bc9b82" translate="yes" xml:space="preserve">
          <source>The keystore type.</source>
          <target state="translated">钥匙店类型。</target>
        </trans-unit>
        <trans-unit id="842a8022c0b70f37cfdb00d1ecc419e098528a20" translate="yes" xml:space="preserve">
          <source>The keytab file format is described at &lt;a href=&quot;http://www.ioplex.com/utilities/keytab.txt&quot;&gt; http://www.ioplex.com/utilities/keytab.txt&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;http://www.ioplex.com/utilities/keytab.txt&quot;&gt;http://www.ioplex.com/utilities/keytab.txt&lt;/a&gt;上描述了keytab文件格式。</target>
        </trans-unit>
        <trans-unit id="6953cdbddb10689e6af5f44202dafc94da88e43d" translate="yes" xml:space="preserve">
          <source>The keytab file format is described at &lt;a href=&quot;https://www.ioplex.com/utilities/keytab.txt&quot;&gt; http://www.ioplex.com/utilities/keytab.txt&lt;/a&gt;.</source>
          <target state="translated">在&lt;a href=&quot;https://www.ioplex.com/utilities/keytab.txt&quot;&gt;http://www.ioplex.com/utilities/keytab.txt&lt;/a&gt;上描述了keytab文件格式。</target>
        </trans-unit>
        <trans-unit id="935cbb5c5e7ca73c0e61d1fed5057a9e10848ab7" translate="yes" xml:space="preserve">
          <source>The keywords are mapped to a BCP 47 extension value using the extension key 'u' (&lt;a href=&quot;#UNICODE_LOCALE_EXTENSION&quot;&gt;&lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt;&lt;/a&gt;). The above example, &quot;nu-thai&quot;, becomes the extension &quot;u-nu-thai&quot;.</source>
          <target state="translated">使用扩展键'u'（&lt;a href=&quot;#UNICODE_LOCALE_EXTENSION&quot;&gt; &lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt; &lt;/a&gt;）将关键字映射到BCP 47扩展值。上面的示例&amp;ldquo; nu-thai&amp;rdquo;成为扩展名&amp;ldquo; u-nu-thai&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e06cb2d0e49b96e83b7706a492fb99378d956821" translate="yes" xml:space="preserve">
          <source>The keywords are mapped to a BCP 47 extension value using the extension key 'u' (&lt;a href=&quot;locale#UNICODE_LOCALE_EXTENSION&quot;&gt;&lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt;&lt;/a&gt;). The above example, &quot;nu-thai&quot;, becomes the extension &quot;u-nu-thai&quot;.code</source>
          <target state="translated">使用扩展键'u'（&lt;a href=&quot;locale#UNICODE_LOCALE_EXTENSION&quot;&gt; &lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt; &lt;/a&gt;）将关键字映射到BCP 47扩展值。上面的示例&amp;ldquo; nu-thai&amp;rdquo;成为扩展名&amp;ldquo; u-nu-thai&amp;rdquo; .code</target>
        </trans-unit>
        <trans-unit id="375da35f31e68ae714e256dbe151bcc22de45f00" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;declaredtype&quot;&gt;declared type&lt;/a&gt; is &lt;a href=&quot;typekind#DECLARED&quot;&gt;&lt;code&gt;DECLARED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">那种一的&lt;a href=&quot;declaredtype&quot;&gt;声明的类型&lt;/a&gt;是&lt;a href=&quot;typekind#DECLARED&quot;&gt; &lt;code&gt;DECLARED&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c948d3b3342e1192114d359180cef867021ab3b8" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;moduleelement&quot;&gt;module&lt;/a&gt; is &lt;a href=&quot;elementkind#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;moduleelement&quot;&gt;模块&lt;/a&gt;的类型是&lt;a href=&quot;elementkind#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="46088e042db73dff6822bf04d277e868be98d37f" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;moduleelement.providesdirective&quot;&gt;provides directive&lt;/a&gt; is &lt;a href=&quot;moduleelement.directivekind#PROVIDES&quot;&gt;&lt;code&gt;PROVIDES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该类型的&lt;a href=&quot;moduleelement.providesdirective&quot;&gt;提供指导&lt;/a&gt;为&lt;a href=&quot;moduleelement.directivekind#PROVIDES&quot;&gt; &lt;code&gt;PROVIDES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="661f1ada115489e444bf29ee31713d3227744fa7" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;moduleelement.requiresdirective&quot;&gt;requires directive&lt;/a&gt; is &lt;a href=&quot;moduleelement.directivekind#REQUIRES&quot;&gt;&lt;code&gt;REQUIRES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该类型的&lt;a href=&quot;moduleelement.requiresdirective&quot;&gt;要求指令&lt;/a&gt;是&lt;a href=&quot;moduleelement.directivekind#REQUIRES&quot;&gt; &lt;code&gt;REQUIRES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="342ce735e0660fbac0d526df32343c6484bb5e08" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;moduleelement.usesdirective&quot;&gt;uses directive&lt;/a&gt; is &lt;a href=&quot;moduleelement.directivekind#USES&quot;&gt;&lt;code&gt;USES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">那种一的&lt;a href=&quot;moduleelement.usesdirective&quot;&gt;用途指令&lt;/a&gt;是&lt;a href=&quot;moduleelement.directivekind#USES&quot;&gt; &lt;code&gt;USES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="db1353ef29c0931432bf00ae5edc58b9fffe8bc2" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;notype&quot;&gt;pseudo-type&lt;/a&gt; is one of &lt;a href=&quot;typekind#VOID&quot;&gt;&lt;code&gt;VOID&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;typekind#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;typekind#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;typekind#NONE&quot;&gt;&lt;code&gt;NONE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">样的一个的&lt;a href=&quot;notype&quot;&gt;伪类型&lt;/a&gt;是一个&lt;a href=&quot;typekind#VOID&quot;&gt; &lt;code&gt;VOID&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;typekind#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;typekind#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt;，或&lt;a href=&quot;typekind#NONE&quot;&gt; &lt;code&gt;NONE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa974555ae5c724ba0e26864a3b0f53616a19f0e" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;nulltype&quot;&gt;null type&lt;/a&gt; is &lt;a href=&quot;typekind#NULL&quot;&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">那种一的&lt;a href=&quot;nulltype&quot;&gt;空类型&lt;/a&gt;为&lt;a href=&quot;typekind#NULL&quot;&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="861710719ca8446c0159fe0e5f6fc1e3c52bc47a" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;packageelement&quot;&gt;package&lt;/a&gt; is &lt;a href=&quot;elementkind#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;packageelement&quot;&gt;包装&lt;/a&gt;的种类是&lt;a href=&quot;elementkind#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ccbc727524cd8939b454cc1d6740cf503ded5193" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;primitivetype&quot;&gt;primitive type&lt;/a&gt; is one of the kinds for which &lt;a href=&quot;typekind#isPrimitive()&quot;&gt;&lt;code&gt;TypeKind.isPrimitive()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">样的一个的&lt;a href=&quot;primitivetype&quot;&gt;基本类型&lt;/a&gt;是的量，种一个&lt;a href=&quot;typekind#isPrimitive()&quot;&gt; &lt;code&gt;TypeKind.isPrimitive()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ff941c362740cf1b79dabe9ac85098f96b8f1b6" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;recordcomponentelement&quot;&gt;record component&lt;/a&gt; is &lt;a href=&quot;elementkind#RECORD_COMPONENT&quot;&gt;&lt;code&gt;RECORD_COMPONENT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">那种一的&lt;a href=&quot;recordcomponentelement&quot;&gt;记录组件&lt;/a&gt;是&lt;a href=&quot;elementkind#RECORD_COMPONENT&quot;&gt; &lt;code&gt;RECORD_COMPONENT&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c077b2a6aad9449a7861ef7dd06bc2640648fa14" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;typeelement&quot;&gt;type element&lt;/a&gt; is one of &lt;a href=&quot;elementkind#ANNOTATION_TYPE&quot;&gt;&lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#CLASS&quot;&gt;&lt;code&gt;CLASS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#ENUM&quot;&gt;&lt;code&gt;ENUM&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#INTERFACE&quot;&gt;&lt;code&gt;INTERFACE&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;elementkind#RECORD&quot;&gt;&lt;code&gt;RECORD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typeelement&quot;&gt;类型元素&lt;/a&gt;的类型是&lt;a href=&quot;elementkind#ANNOTATION_TYPE&quot;&gt; &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;elementkind#CLASS&quot;&gt; &lt;code&gt;CLASS&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;elementkind#ENUM&quot;&gt; &lt;code&gt;ENUM&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;elementkind#INTERFACE&quot;&gt; &lt;code&gt;INTERFACE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;elementkind#RECORD&quot;&gt; &lt;code&gt;RECORD&lt;/code&gt; 之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="043348a2919f2aa5dcb140a4027a2b2d133ff987" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;typeparameterelement&quot;&gt;type parameter&lt;/a&gt; is &lt;a href=&quot;elementkind#TYPE_PARAMETER&quot;&gt;&lt;code&gt;TYPE_PARAMETER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typeparameterelement&quot;&gt;类型参数&lt;/a&gt;的类型为&lt;a href=&quot;elementkind#TYPE_PARAMETER&quot;&gt; &lt;code&gt;TYPE_PARAMETER&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4e9f7190eda4edcc1a42ef655d42d597ef927397" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;typevariable&quot;&gt;type variable&lt;/a&gt; is &lt;a href=&quot;typekind#TYPEVAR&quot;&gt;&lt;code&gt;TYPEVAR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typevariable&quot;&gt;类型变量&lt;/a&gt;的类型为&lt;a href=&quot;typekind#TYPEVAR&quot;&gt; &lt;code&gt;TYPEVAR&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6ae26bcf1d58aaf6ac53eb4365e0102a8c9ff70" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;uniontype&quot;&gt;union type&lt;/a&gt; is &lt;a href=&quot;typekind#UNION&quot;&gt;&lt;code&gt;UNION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">那种一的&lt;a href=&quot;uniontype&quot;&gt;联合类型&lt;/a&gt;是&lt;a href=&quot;typekind#UNION&quot;&gt; &lt;code&gt;UNION&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27b973c61298fff10d4953e88923bca47f6adfb8" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;variableelement&quot;&gt;variable&lt;/a&gt; is one of &lt;a href=&quot;elementkind#ENUM_CONSTANT&quot;&gt;&lt;code&gt;ENUM_CONSTANT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#EXCEPTION_PARAMETER&quot;&gt;&lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#FIELD&quot;&gt;&lt;code&gt;FIELD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#LOCAL_VARIABLE&quot;&gt;&lt;code&gt;LOCAL_VARIABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#PARAMETER&quot;&gt;&lt;code&gt;PARAMETER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#RESOURCE_VARIABLE&quot;&gt;&lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;elementkind#BINDING_VARIABLE&quot;&gt;&lt;code&gt;BINDING_VARIABLE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;variableelement&quot;&gt;变量&lt;/a&gt;的类型是&lt;a href=&quot;elementkind#ENUM_CONSTANT&quot;&gt; &lt;code&gt;ENUM_CONSTANT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;elementkind#EXCEPTION_PARAMETER&quot;&gt; &lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;elementkind#FIELD&quot;&gt; &lt;code&gt;FIELD&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;elementkind#LOCAL_VARIABLE&quot;&gt; &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;elementkind#PARAMETER&quot;&gt; &lt;code&gt;PARAMETER&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;elementkind#RESOURCE_VARIABLE&quot;&gt; &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;elementkind#BINDING_VARIABLE&quot;&gt; &lt;code&gt;BINDING_VARIABLE&lt;/code&gt; 之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c3b63f81b04e4d5830705b1aa27020f3180edf9" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;wildcardtype&quot;&gt;wildcard type&lt;/a&gt; is &lt;a href=&quot;typekind#WILDCARD&quot;&gt;&lt;code&gt;WILDCARD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">那种一的&lt;a href=&quot;wildcardtype&quot;&gt;通配符类型&lt;/a&gt;是&lt;a href=&quot;typekind#WILDCARD&quot;&gt; &lt;code&gt;WILDCARD&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3abc78cec7443be172a73f11d0ea46ef51b57125" translate="yes" xml:space="preserve">
          <source>The kind of a type mirror.</source>
          <target state="translated">型镜的那种。</target>
        </trans-unit>
        <trans-unit id="4a506a0d79c5e161f4d1b30d8f212c6a5dce9d50" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;arraytype&quot;&gt;array type&lt;/a&gt; is &lt;a href=&quot;typekind#ARRAY&quot;&gt;&lt;code&gt;ARRAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">那种一个的&lt;a href=&quot;arraytype&quot;&gt;阵列型&lt;/a&gt;是&lt;a href=&quot;typekind#ARRAY&quot;&gt; &lt;code&gt;ARRAY&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6a1634d159dc67cd2a8ebc7926091bd87fbd3bf2" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;errortype&quot;&gt;error type&lt;/a&gt; is &lt;a href=&quot;typekind#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">那种一的&lt;a href=&quot;errortype&quot;&gt;错误类型&lt;/a&gt;是&lt;a href=&quot;typekind#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5670966a563817c9ba34d395219252d367c594f8" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;executableelement&quot;&gt;executable&lt;/a&gt; is one of &lt;a href=&quot;elementkind#CONSTRUCTOR&quot;&gt;&lt;code&gt;CONSTRUCTOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#INSTANCE_INIT&quot;&gt;&lt;code&gt;INSTANCE_INIT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#METHOD&quot;&gt;&lt;code&gt;METHOD&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;elementkind#STATIC_INIT&quot;&gt;&lt;code&gt;STATIC_INIT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;executableelement&quot;&gt;可执行文件&lt;/a&gt;的类型是&lt;a href=&quot;elementkind#CONSTRUCTOR&quot;&gt; &lt;code&gt;CONSTRUCTOR&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;elementkind#INSTANCE_INIT&quot;&gt; &lt;code&gt;INSTANCE_INIT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;elementkind#METHOD&quot;&gt; &lt;code&gt;METHOD&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;elementkind#STATIC_INIT&quot;&gt; &lt;code&gt;STATIC_INIT&lt;/code&gt; 之一&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f2fa2601b17d2271b1860560383affe4c801e5a6" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;executabletype&quot;&gt;executable type&lt;/a&gt; is &lt;a href=&quot;typekind#EXECUTABLE&quot;&gt;&lt;code&gt;EXECUTABLE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">那种一的&lt;a href=&quot;executabletype&quot;&gt;可执行文件类型&lt;/a&gt;为&lt;a href=&quot;typekind#EXECUTABLE&quot;&gt; &lt;code&gt;EXECUTABLE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fa41dd0817c33c95f01eaced29c8603d0197d9d8" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;intersectiontype&quot;&gt;intersection type&lt;/a&gt; is &lt;a href=&quot;typekind#INTERSECTION&quot;&gt;&lt;code&gt;INTERSECTION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">那种一个的&lt;a href=&quot;intersectiontype&quot;&gt;交叉点型&lt;/a&gt;是&lt;a href=&quot;typekind#INTERSECTION&quot;&gt; &lt;code&gt;INTERSECTION&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="366b95d924ff6501d52b605623a321dad99e28c5" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;moduleelement.exportsdirective&quot;&gt;exports directive&lt;/a&gt; is &lt;a href=&quot;moduleelement.directivekind#EXPORTS&quot;&gt;&lt;code&gt;EXPORTS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">那种一的&lt;a href=&quot;moduleelement.exportsdirective&quot;&gt;出口指令&lt;/a&gt;是&lt;a href=&quot;moduleelement.directivekind#EXPORTS&quot;&gt; &lt;code&gt;EXPORTS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="55f9d38772b783b6901c43fb708f0728b62dc03d" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;moduleelement.opensdirective&quot;&gt;opens directive&lt;/a&gt; is &lt;a href=&quot;moduleelement.directivekind#OPENS&quot;&gt;&lt;code&gt;OPENS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该类型的&lt;a href=&quot;moduleelement.opensdirective&quot;&gt;打开指令&lt;/a&gt;是&lt;a href=&quot;moduleelement.directivekind#OPENS&quot;&gt; &lt;code&gt;OPENS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="149c5b00c88e251d2c8a1a22ada686ab5b08b553" translate="yes" xml:space="preserve">
          <source>The kind of an attribute value.</source>
          <target state="translated">属性值的种类。</target>
        </trans-unit>
        <trans-unit id="8828dfe29f1a7b20a060ba70739da4de66cee953" translate="yes" xml:space="preserve">
          <source>The kind of an option.</source>
          <target state="translated">的一种选择。</target>
        </trans-unit>
        <trans-unit id="b55a64a58b1a8a3a0a94999b0d9d71bcdaa8ce43" translate="yes" xml:space="preserve">
          <source>The kind of location in which a tag may be used.</source>
          <target state="translated">标签可以使用的位置种类。</target>
        </trans-unit>
        <trans-unit id="90121a0d321cbdac9d35ced0fd1856a834f7533e" translate="yes" xml:space="preserve">
          <source>The kind of the module.</source>
          <target state="translated">模块的种类。</target>
        </trans-unit>
        <trans-unit id="e71bcb16dc077322da2b88fd1337ba338c4914a1" translate="yes" xml:space="preserve">
          <source>The kind of this file object.</source>
          <target state="translated">这个文件对象的种类。</target>
        </trans-unit>
        <trans-unit id="b72b3d0d1ce95271f47b359eb4749826724d0d57" translate="yes" xml:space="preserve">
          <source>The label of an event class can be set with &lt;a href=&quot;label&quot;&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以使用&lt;a href=&quot;label&quot;&gt; &lt;code&gt;Label&lt;/code&gt; &lt;/a&gt;设置事件类的标签。</target>
        </trans-unit>
        <trans-unit id="141dd3c5cb7eba596a30aeaf19bfe3fe567f98aa" translate="yes" xml:space="preserve">
          <source>The label should not be used as an identifier, see &lt;a href=&quot;name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该标签不应用作标识符，请参见&lt;a href=&quot;name&quot;&gt; &lt;code&gt;Name&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="24838371a11c2732eaa99a0fcc229f55490881e5" translate="yes" xml:space="preserve">
          <source>The label text displayed on the approve button when a directory is selected and the current selection mode is FILES_ONLY.</source>
          <target state="translated">选择目录且当前选择模式为FILES_ONLY时,批准按钮上显示的标签文字。</target>
        </trans-unit>
        <trans-unit id="060ad24a2e020eedaf95c63bf56985e351899937" translate="yes" xml:space="preserve">
          <source>The language code &quot;und&quot; is mapped to language &quot;&quot;.</source>
          <target state="translated">语言代码 &quot;und &quot;被映射到语言&quot;&quot;。</target>
        </trans-unit>
        <trans-unit id="eed90a84dfe6824cdfb069525f0a0cdbf5c234ed" translate="yes" xml:space="preserve">
          <source>The language code, or the empty string if none is defined.</source>
          <target state="translated">语言代码,如果没有定义,则为空字符串。</target>
        </trans-unit>
        <trans-unit id="098e8da937e9d6a746c9e6894744ca7720a21e02" translate="yes" xml:space="preserve">
          <source>The language codes &quot;he&quot;, &quot;yi&quot;, and &quot;id&quot; are mapped to &quot;iw&quot;, &quot;ji&quot;, and &quot;in&quot; respectively. (This is the same canonicalization that's done in Locale's constructors.)</source>
          <target state="translated">语言代码 &quot;he&quot;、&quot;yi &quot;和 &quot;id &quot;分别被映射为 &quot;iw&quot;、&quot;ji &quot;和 &quot;in&quot;。(这与Locale的构造函数所做的规范化是一样的。)</target>
        </trans-unit>
        <trans-unit id="ab199358c4c30717fef9325e862f54f258b020c1" translate="yes" xml:space="preserve">
          <source>The large capacity input tray in the printer.</source>
          <target state="translated">打印机中的大容量输入盘。</target>
        </trans-unit>
        <trans-unit id="4065b23b870a90c8d978a1b147aeaad63f54d921" translate="yes" xml:space="preserve">
          <source>The largest acceptable size for the thumb.</source>
          <target state="translated">拇指可以接受的最大尺寸。</target>
        </trans-unit>
        <trans-unit id="a4047539503997b6709f1736adf335f568d1db43" translate="yes" xml:space="preserve">
          <source>The largest reasonable width/height of the component or component group, in pixels.</source>
          <target state="translated">组件或组件组的最大合理宽度/高度,单位为像素。</target>
        </trans-unit>
        <trans-unit id="87a66203f240a0446e3e56749de0de7014433cb7" translate="yes" xml:space="preserve">
          <source>The largest valid &lt;code&gt;CHILD_POLICY_*&lt;/code&gt; constant, to be used for range checks.</source>
          <target state="translated">最大的有效 &lt;code&gt;CHILD_POLICY_*&lt;/code&gt; 常数，用于范围检查。</target>
        </trans-unit>
        <trans-unit id="042615e8f7e4ca7fe481b68f5839de05b2ef7dac" translate="yes" xml:space="preserve">
          <source>The last &lt;code&gt;viewPosition&lt;/code&gt; that we've painted, so we know how much of the backing store image is valid.</source>
          <target state="translated">我们绘制的最后一个 &lt;code&gt;viewPosition&lt;/code&gt; ，因此我们知道多少后备商店图像有效。</target>
        </trans-unit>
        <trans-unit id="63c95d7f54d8b200cb320258b2605a3a1ecdb740" translate="yes" xml:space="preserve">
          <source>The last access time is from the extended timestamp fields of entry's &lt;code&gt;optional extra data&lt;/code&gt; when read from a ZIP file or ZIP file formatted stream.</source>
          <target state="translated">从ZIP文件或ZIP文件格式的流中读取时，最后访问时间来自条目的 &lt;code&gt;optional extra data&lt;/code&gt; 的扩展时间戳字段。</target>
        </trans-unit>
        <trans-unit id="018404389cff4be23d8a44b9b108e339eccb815f" translate="yes" xml:space="preserve">
          <source>The last access time of the entry, null if not specified</source>
          <target state="translated">条目最后的访问时间,如果没有指定则为空。</target>
        </trans-unit>
        <trans-unit id="fe1aba57c57c1ac2f063c8c6fe24c263634b58f4" translate="yes" xml:space="preserve">
          <source>The last boundary before the specified offset or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if the first text boundary is passed in as the offset.</source>
          <target state="translated">指定的偏移量之前的最后一个边界；如果第一个文本边界作为偏移量传入，则 &lt;code&gt;BreakIterator.DONE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b438429a36288d32e766c2b54edee92101e89ca1" translate="yes" xml:space="preserve">
          <source>The last child of this node.</source>
          <target state="translated">这个节点的最后一个子节点。</target>
        </trans-unit>
        <trans-unit id="d90655fc682934476ffa5413f1cd86a86ea41209" translate="yes" xml:space="preserve">
          <source>The last child of this node. If there is no such node, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">该节点的最后一个子级。如果没有这样的节点，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b05f3ad1e679d3642ea5ebb7a2df031a3faf24c6" translate="yes" xml:space="preserve">
          <source>The last column</source>
          <target state="translated">最后一栏</target>
        </trans-unit>
        <trans-unit id="39d734b7eda93fa8a5f0567cb50de31f210e478a" translate="yes" xml:space="preserve">
          <source>The last edit added to this &lt;code&gt;CompoundEdit&lt;/code&gt; is given a chance to &lt;code&gt;addEdit(anEdit)&lt;/code&gt;. If it refuses (returns false), &lt;code&gt;anEdit&lt;/code&gt; is given a chance to &lt;code&gt;replaceEdit&lt;/code&gt; the last edit. If &lt;code&gt;anEdit&lt;/code&gt; returns false here, it is added to &lt;code&gt;edits&lt;/code&gt;.</source>
          <target state="translated">加入到这一最后编辑 &lt;code&gt;CompoundEdit&lt;/code&gt; 中是有机会 &lt;code&gt;addEdit(anEdit)&lt;/code&gt; 。如果它拒绝（返回false），则 &lt;code&gt;anEdit&lt;/code&gt; 将有机会 &lt;code&gt;replaceEdit&lt;/code&gt; 最后一次编辑的Edit。如果 &lt;code&gt;anEdit&lt;/code&gt; 在此处返回false，则将其添加到 &lt;code&gt;edits&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="3786764214c419fc8c5e1b4f929d864bbcb97cc1" translate="yes" xml:space="preserve">
          <source>The last example assumes that the extra arguments are of type &lt;code&gt;CONSTANT_String&lt;/code&gt; and &lt;code&gt;CONSTANT_Integer&lt;/code&gt;, respectively. The second-to-last example assumes that all extra arguments are of type &lt;code&gt;CONSTANT_String&lt;/code&gt;. The other examples work with all types of extra arguments.</source>
          <target state="translated">最后一个示例假定额外的参数分别为 &lt;code&gt;CONSTANT_String&lt;/code&gt; 和 &lt;code&gt;CONSTANT_Integer&lt;/code&gt; 类型。倒数第二个示例假定所有其他参数均为 &lt;code&gt;CONSTANT_String&lt;/code&gt; 类型。其他示例适用于所有类型的额外参数。</target>
        </trans-unit>
        <trans-unit id="4f1d594e084594230e4357bd7bf2b39b4cde74ca" translate="yes" xml:space="preserve">
          <source>The last example assumes that the extra arguments are of type &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;Integer&lt;/code&gt; (or &lt;code&gt;int&lt;/code&gt;), respectively. The second-to-last example assumes that all extra arguments are of type &lt;code&gt;String&lt;/code&gt;. The other examples work with all types of extra arguments. Note that all the examples except the second and third also work with dynamically-computed constants if the return type is changed to be compatible with the constant's declared type (such as &lt;code&gt;Object&lt;/code&gt;, which is always compatible).</source>
          <target state="translated">最后一个示例假定额外的参数分别为 &lt;code&gt;String&lt;/code&gt; 和 &lt;code&gt;Integer&lt;/code&gt; （或 &lt;code&gt;int&lt;/code&gt; ）类型。倒数第二个示例假定所有其他参数均为 &lt;code&gt;String&lt;/code&gt; 类型。其他示例适用于所有类型的额外参数。请注意，如果将返回类型更改为与常量的声明类型兼容（例如 &lt;code&gt;Object&lt;/code&gt; ，则始终是兼容的），则除了第二个和第三个示例以外的所有示例还可以使用动态计算的常量。</target>
        </trans-unit>
        <trans-unit id="b90ed7ca70d3a841924037be711880b436dc3571" translate="yes" xml:space="preserve">
          <source>The last exception thrown by the Appendable or &lt;code&gt;null&lt;/code&gt; if no such exception exists.</source>
          <target state="translated">由Appendable抛出的最后一个异常；如果不存在此类异常，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04079ef138add28eebb8f572cbade8dbe2eced17" translate="yes" xml:space="preserve">
          <source>The last line will print &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt;.</source>
          <target state="translated">最后一行将打印 &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16c00d55a4101ed7505b7fc71de8beab93af645d" translate="yes" xml:space="preserve">
          <source>The last line will print &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt;. The &lt;a href=&quot;#unescapeValue(java.lang.String)&quot;&gt;&lt;code&gt;unescapeValue()&lt;/code&gt;&lt;/a&gt; method can be used to unescape the escaped comma resulting in the original value &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt;. The &lt;a href=&quot;#escapeValue(java.lang.Object)&quot;&gt;&lt;code&gt;escapeValue()&lt;/code&gt;&lt;/a&gt; method adds the escape back preceding the comma.</source>
          <target state="translated">最后一行将打印 &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt; 。所述&lt;a href=&quot;#unescapeValue(java.lang.String)&quot;&gt; &lt;code&gt;unescapeValue()&lt;/code&gt; &lt;/a&gt;方法可用于取消转义导致原始值转义逗号 &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt; 。所述&lt;a href=&quot;#escapeValue(java.lang.Object)&quot;&gt; &lt;code&gt;escapeValue()&lt;/code&gt; &lt;/a&gt;方法增加所述逗号之前的逃逸回来。</target>
        </trans-unit>
        <trans-unit id="c36ea3c145fcf0621af5506876da5c006b8fc7c5" translate="yes" xml:space="preserve">
          <source>The last line will print &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt;. The &lt;a href=&quot;rdn#unescapeValue-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;unescapeValue()&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method can be used to unescape the escaped comma resulting in the original value &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt;. The &lt;a href=&quot;rdn#escapeValue-java.lang.Object-&quot;&gt;&lt;code&gt;&lt;code&gt;escapeValue()&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method adds the escape back preceding the comma.</source>
          <target state="translated">最后一行将打印 &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt; 。所述&lt;a href=&quot;rdn#unescapeValue-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;unescapeValue()&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法可用于取消转义导致原始值转义逗号 &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt; 。所述&lt;a href=&quot;rdn#escapeValue-java.lang.Object-&quot;&gt; &lt;code&gt;&lt;code&gt;escapeValue()&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法增加所述逗号之前的逃逸回来。</target>
        </trans-unit>
        <trans-unit id="6704a2570d140aa6d4d1a0195309b7cded09294b" translate="yes" xml:space="preserve">
          <source>The last low order bit is always ignored as this corresponds to the MBZ (must be zero) bit.</source>
          <target state="translated">最后一个低阶位总是被忽略,因为这对应于MBZ(必须为零)位。</target>
        </trans-unit>
        <trans-unit id="9c42346f1311bb8f9376444bec038d823340d058" translate="yes" xml:space="preserve">
          <source>The last method called on the reader.</source>
          <target state="translated">读取器上调用的最后一个方法。</target>
        </trans-unit>
        <trans-unit id="181209f3bb70c71f89a85a76af54339a74a94fbb" translate="yes" xml:space="preserve">
          <source>The last method called on the reader. It allows any pending changes to be flushed into the document. Since this is currently loading synchronously, the entire set of changes are pushed in at this point.</source>
          <target state="translated">在阅读器上调用的最后一个方法。它允许将任何待定的更改刷新到文档中。由于目前正在同步加载,所以此时会将全部的更改推送进来。</target>
        </trans-unit>
        <trans-unit id="d12b5f31c0f846b9270a88fcc19d75c11add62d8" translate="yes" xml:space="preserve">
          <source>The last modification time of the entry in local date-time</source>
          <target state="translated">条目最后一次修改的时间,以本地日期-时间为单位。</target>
        </trans-unit>
        <trans-unit id="136ced763d4f0395ea838a91b0392e85ac9d09ec" translate="yes" xml:space="preserve">
          <source>The last modification time of the entry in milliseconds since the epoch, or -1 if not specified</source>
          <target state="translated">条目最后一次修改时间,以毫秒为单位,如果没有指定,则为-1。</target>
        </trans-unit>
        <trans-unit id="d8097498df46abde4481e8c5cf7533f5f787ec54" translate="yes" xml:space="preserve">
          <source>The last modification time of the entry, null if not specified</source>
          <target state="translated">条目的最后一次修改时间,如果没有指定则为空。</target>
        </trans-unit>
        <trans-unit id="4ae9fa4acb1e8204c952823554c5745571d95e66" translate="yes" xml:space="preserve">
          <source>The last number in the range of IDs used for internal frame events.</source>
          <target state="translated">用于内部帧事件的ID范围内的最后一个数字。</target>
        </trans-unit>
        <trans-unit id="8c94343c4851dd263ca740ac6649adf12af19d18" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for action events.</source>
          <target state="translated">用于动作事件的id范围内的最后一个数字。</target>
        </trans-unit>
        <trans-unit id="f6ed12e9a6b12a22c4a1f6a2641b77dc40668de8" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for component events.</source>
          <target state="translated">用于组件事件的id范围内的最后一个数字。</target>
        </trans-unit>
        <trans-unit id="6ae55d137704a05f9f1458a052a01ca71de805c5" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for container events.</source>
          <target state="translated">用于容器事件的id范围内的最后一个数字。</target>
        </trans-unit>
        <trans-unit id="3843eb877a32e9dba757037c54330c63c77e3ec2" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for focus events.</source>
          <target state="translated">用于焦点事件的id范围内的最后一个数字。</target>
        </trans-unit>
        <trans-unit id="95989ce6173eee87283f755eeb7916d793d3a551" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for item events.</source>
          <target state="translated">用于项目事件的id范围内的最后一个数字。</target>
        </trans-unit>
        <trans-unit id="cac645452d55f9b450d35d48e35c759312f739dc" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for key events.</source>
          <target state="translated">用于关键事件的id范围内的最后一个数字。</target>
        </trans-unit>
        <trans-unit id="9e356e925e05441038ce8f86048dd79a37e896ba" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for mouse events.</source>
          <target state="translated">鼠标事件ID范围内的最后一个数字。</target>
        </trans-unit>
        <trans-unit id="a8fe649447f3efb24aa206f3bfb7116d646a397d" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for text events.</source>
          <target state="translated">用于文本事件的id范围内的最后一个数字。</target>
        </trans-unit>
        <trans-unit id="8919efb69d38c4583f7e96922e023f30250ca01a" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for window events.</source>
          <target state="translated">用于窗口事件的id范围内的最后一个数字。</target>
        </trans-unit>
        <trans-unit id="8f4d29e940c417fddff123f783468855cfe4eab2" translate="yes" xml:space="preserve">
          <source>The last row</source>
          <target state="translated">最后一行</target>
        </trans-unit>
        <trans-unit id="07a7eab075194af4ad162905352b91efdbcf875e" translate="yes" xml:space="preserve">
          <source>The last row that has changed.</source>
          <target state="translated">最后一行,已经改变了。</target>
        </trans-unit>
        <trans-unit id="b6bceffcf31fdaadf2098b38a902b0d82ea3fde8" translate="yes" xml:space="preserve">
          <source>The last seen allocation (for repainting when changes are flushed upward).</source>
          <target state="translated">最后一次看到的分配(用于向上冲刷变化时的重绘)。</target>
        </trans-unit>
        <trans-unit id="eaa1d51eb137e5542fe1128506eda2fbb9582580" translate="yes" xml:space="preserve">
          <source>The last significant edit is &lt;b&gt;A&lt;/b&gt;, so that invoking &lt;code&gt;undo&lt;/code&gt; again invokes &lt;code&gt;undo&lt;/code&gt; on</source>
          <target state="translated">最后显著编辑是&lt;b&gt;一个&lt;/b&gt;，所以调用 &lt;code&gt;undo&lt;/code&gt; 再所调用 &lt;code&gt;undo&lt;/code&gt; 上</target>
        </trans-unit>
        <trans-unit id="8b0079f1492d37c87c9a6e2434f8a080dfc40767" translate="yes" xml:space="preserve">
          <source>The last stop in writing out content.</source>
          <target state="translated">写出内容的最后一站。</target>
        </trans-unit>
        <trans-unit id="bf947b882b123cacd97631120521a2da8a1d042a" translate="yes" xml:space="preserve">
          <source>The last stop in writing out content. All the write methods eventually make it to this method, which invokes &lt;code&gt;write&lt;/code&gt; on the Writer.</source>
          <target state="translated">写出内容的最后一站。所有的write方法最终都使其成为该方法，该方法在Writer上调用 &lt;code&gt;write&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3181bd7eca0b7159c1c88cf63d3760586057c6df" translate="yes" xml:space="preserve">
          <source>The last thread arrives; or</source>
          <target state="translated">最后一条线程到达;或</target>
        </trans-unit>
        <trans-unit id="24921a8e3a7f2cbc396820ff95cee47630697935" translate="yes" xml:space="preserve">
          <source>The last value returned by an operation may be cached in the operation's descriptor which is in the ModelMBeanOperationInfo's descriptor. The valid value will be in the 'value' field if there is one. If the 'currencyTimeLimit' field in the descriptor is:</source>
          <target state="translated">操作返回的最后一个值可能会被缓存在操作的描述符中,这个描述符在ModelMBeanOperationInfo的描述符中。有效值将在'value'字段中,如果有的话。如果描述符中的'currencyTimeLimit'字段是。</target>
        </trans-unit>
        <trans-unit id="65d00f7b5812b299404a119144f3c9040ae7f32b" translate="yes" xml:space="preserve">
          <source>The latter is typically used when you want a more complex user interaction that requires custom components on the tab. For example, you could provide a custom component that animates or one that has widgets for closing the tab.</source>
          <target state="translated">后者通常用于当你想要一个更复杂的用户交互,需要在标签页上使用自定义组件。例如,你可以提供一个会产生动画的自定义组件,或者一个具有用于关闭标签的小部件的组件。</target>
        </trans-unit>
        <trans-unit id="425594d3660745a66391869dc19be9ecfcfbfa9f" translate="yes" xml:space="preserve">
          <source>The latter sequence of calls is inferred to be able to throw the additional exception types &lt;a href=&quot;reflect/invocationtargetexception&quot;&gt;&lt;code&gt;InvocationTargetException&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;nosuchmethodexception&quot;&gt;&lt;code&gt;NoSuchMethodException&lt;/code&gt;&lt;/a&gt;. Both of these exception types are subclasses of &lt;a href=&quot;reflectiveoperationexception&quot;&gt;&lt;code&gt;ReflectiveOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">推断后面的调用顺序可以引发其他异常类型&lt;a href=&quot;reflect/invocationtargetexception&quot;&gt; &lt;code&gt;InvocationTargetException&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;nosuchmethodexception&quot;&gt; &lt;code&gt;NoSuchMethodException&lt;/code&gt; &lt;/a&gt;。这两种异常类型都是&lt;a href=&quot;reflectiveoperationexception&quot;&gt; &lt;code&gt;ReflectiveOperationException&lt;/code&gt; 的&lt;/a&gt;子类。</target>
        </trans-unit>
        <trans-unit id="c777bc44eac4ac0d9bdb1525116876d69d411dcc" translate="yes" xml:space="preserve">
          <source>The launch= value</source>
          <target state="translated">发射=值</target>
        </trans-unit>
        <trans-unit id="525093ff647ddbbdbc48ca2cdc3100fde45b2b7a" translate="yes" xml:space="preserve">
          <source>The layer attribute can also be set on a Component by calling</source>
          <target state="translated">层属性也可以通过调用</target>
        </trans-unit>
        <trans-unit id="e670c82bc63797a1c361d38b43da5fb16f5d0be9" translate="yes" xml:space="preserve">
          <source>The layer used for modal dialogs. They will appear on top of any toolbars, palettes, or standard components in the container.</source>
          <target state="translated">用于模态对话框的层。它们将出现在容器中的任何工具栏、调色板或标准组件的顶部。</target>
        </trans-unit>
        <trans-unit id="061909bc6c6b3e145805a5f7a76712768e861d0c" translate="yes" xml:space="preserve">
          <source>The layered pane that manages the menu bar and content pane.</source>
          <target state="translated">管理菜单栏和内容窗格的分层窗格。</target>
        </trans-unit>
        <trans-unit id="3e6e7dcb9d0607b26b2e9b733f6cd19b14cc410c" translate="yes" xml:space="preserve">
          <source>The layeredPane may not be null.</source>
          <target state="translated">layeredPane不可以为空。</target>
        </trans-unit>
        <trans-unit id="4eeeff1cbbabee35cb669977c67cd53625a7f370" translate="yes" xml:space="preserve">
          <source>The layout before floating.</source>
          <target state="translated">浮动前的布局。</target>
        </trans-unit>
        <trans-unit id="1b212702428106a780f398f622b94efb2a72b7ca" translate="yes" xml:space="preserve">
          <source>The layout manager used by &lt;code&gt;JScrollPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JScrollPane&lt;/code&gt; 使用的布局管理器。</target>
        </trans-unit>
        <trans-unit id="ab281cd69ca0da4ac757a9384d1d4174c09420b4" translate="yes" xml:space="preserve">
          <source>The layout manager used by &lt;code&gt;JScrollPane&lt;/code&gt;. &lt;code&gt;JScrollPaneLayout&lt;/code&gt; is responsible for nine components: a viewport, two scrollbars, a row header, a column header, and four &quot;corner&quot; components.</source>
          <target state="translated">&lt;code&gt;JScrollPane&lt;/code&gt; 使用的布局管理器。 &lt;code&gt;JScrollPaneLayout&lt;/code&gt; 负责九个组件：一个视口，两个滚动条，一个行标题，一个列标题和四个&amp;ldquo;角&amp;rdquo;组件。</target>
        </trans-unit>
        <trans-unit id="63aeb45ca03701efe224b5a47a306b484bafc9b8" translate="yes" xml:space="preserve">
          <source>The layout must be valid prior to attempting to make the translation. The translation is not valid, and must not be attempted while changes are being broadcasted from the model via a &lt;code&gt;DocumentEvent&lt;/code&gt;.</source>
          <target state="translated">在尝试进行翻译之前，版式必须有效。转换无效，并且在通过 &lt;code&gt;DocumentEvent&lt;/code&gt; 从模型广播更改时，不得尝试进行转换。</target>
        </trans-unit>
        <trans-unit id="0c946e02cf7bb113bde4f4cf3943bb511e4009b7" translate="yes" xml:space="preserve">
          <source>The layout of a variant 2 (Leach-Salz) UUID is as follows: The most significant long consists of the following unsigned fields:</source>
          <target state="translated">变体2(Leach-Salz)UUID的布局如下。最重要的 &quot;长 &quot;由下列无符号字段组成:</target>
        </trans-unit>
        <trans-unit id="1ef51f3136fcb1fac789f5890c185fdf389223f5" translate="yes" xml:space="preserve">
          <source>The lead TreePath is the last path that was added (or set). The lead row is then the row that corresponds to the TreePath as determined from the RowMapper.</source>
          <target state="translated">前导TreePath是最后添加(或设置)的路径。前导行是与RowMapper确定的TreePath相对应的行。</target>
        </trans-unit>
        <trans-unit id="f1682937acc10a90e095bee4b77c7dde9712bf4d" translate="yes" xml:space="preserve">
          <source>The lead path is set to the last element in &lt;code&gt;paths&lt;/code&gt;.</source>
          <target state="translated">将前导路径设置为在最后一个元素 &lt;code&gt;paths&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d20a4f2226831a6decc443b64178bf6260a3eab0" translate="yes" xml:space="preserve">
          <source>The lead path is set to the last unique path.</source>
          <target state="translated">引导路径设置为最后的唯一路径。</target>
        </trans-unit>
        <trans-unit id="3834488d7096f73cdf61b2e3a27c485e7092a6ae" translate="yes" xml:space="preserve">
          <source>The leading &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt; characters on the last line are also counted even if &lt;a href=&quot;#isBlank()&quot;&gt;blank&lt;/a&gt;.</source>
          <target state="translated">即使&lt;a href=&quot;#isBlank()&quot;&gt;空白，&lt;/a&gt;也将计算最后一行的前导&lt;a href=&quot;character#isWhitespace(int)&quot;&gt;空白&lt;/a&gt;字符。</target>
        </trans-unit>
        <trans-unit id="d9dddc27cf2fa85a276add3f7964382de560568e" translate="yes" xml:space="preserve">
          <source>The leading edge is based on the axis and &lt;code&gt;
 ComponentOrientation&lt;/code&gt;. For the vertical axis the top edge is always the leading edge, and the bottom edge is always the trailing edge. When the &lt;code&gt;ComponentOrientation&lt;/code&gt; is &lt;code&gt;
 LEFT_TO_RIGHT&lt;/code&gt;, the leading edge is the left edge and the trailing edge the right edge. A &lt;code&gt;ComponentOrientation&lt;/code&gt; of &lt;code&gt;RIGHT_TO_LEFT&lt;/code&gt; flips the left and right edges. Child elements are aligned based on the specified alignment the element was added with. If you do not specify an alignment, the alignment specified for the &lt;code&gt;ParallelGroup&lt;/code&gt; is used.</source>
          <target state="translated">前缘基于轴和 &lt;code&gt; ComponentOrientation&lt;/code&gt; 。对于垂直轴，顶部边缘始终是前边缘，而底部边缘始终是后边缘。当 &lt;code&gt;ComponentOrientation&lt;/code&gt; 为 &lt;code&gt; LEFT_TO_RIGHT&lt;/code&gt; 时，前边缘为左边缘，后边缘为右边缘。一 &lt;code&gt;ComponentOrientation&lt;/code&gt; 的 &lt;code&gt;RIGHT_TO_LEFT&lt;/code&gt; 翻转左右边缘。根据添加元素的指定对齐方式对齐子元素。如果未指定路线，则使用为 &lt;code&gt;ParallelGroup&lt;/code&gt; 指定的路线。</target>
        </trans-unit>
        <trans-unit id="17cff58578c91a8d50007c245887e9d13f0ca29a" translate="yes" xml:space="preserve">
          <source>The leading is computed from the leading, descent, and baseline of all glyphvectors in the &lt;code&gt;TextLayout&lt;/code&gt;. The algorithm is roughly as follows:</source>
          <target state="translated">根据 &lt;code&gt;TextLayout&lt;/code&gt; 中所有字形向量的前导，下降和基线来计算前导。该算法大致如下：</target>
        </trans-unit>
        <trans-unit id="7af9b55c9143f8cca06d1210ae464e4b24586bea" translate="yes" xml:space="preserve">
          <source>The leading plus/minus sign, and negative values for other units are not part of the ISO-8601 standard.</source>
          <target state="translated">前导正负号,其他单位的负值不属于ISO-8601标准。</target>
        </trans-unit>
        <trans-unit id="b8afe06a23c97844adb78033caa70b9b0d3bbee8" translate="yes" xml:space="preserve">
          <source>The leading plus/minus sign, and negative values for other units are not part of the ISO-8601 standard. In addition, ISO-8601 does not permit mixing between the &lt;code&gt;PnYnMnD&lt;/code&gt; and &lt;code&gt;PnW&lt;/code&gt; formats. Any week-based input is multiplied by 7 and treated as a number of days.</source>
          <target state="translated">正负号和其他单位的负值不属于ISO-8601标准的一部分。另外，ISO-8601不允许在 &lt;code&gt;PnYnMnD&lt;/code&gt; 和 &lt;code&gt;PnW&lt;/code&gt; 格式之间混合。任何基于星期的输入都将乘以7，并视为天数。</target>
        </trans-unit>
        <trans-unit id="63cecf4a8fa95d4d0270f57a3e75af217a6a1a81" translate="yes" xml:space="preserve">
          <source>The least significant 64 bits of this UUID's 128 bit value</source>
          <target state="translated">这个UUID的128位值中最不重要的64位。</target>
        </trans-unit>
        <trans-unit id="a83da07b2f48d8970311283f85c7e3bac23d44ea" translate="yes" xml:space="preserve">
          <source>The least significant long consists of the following unsigned fields:</source>
          <target state="translated">最不重要的长由以下无符号字段组成:</target>
        </trans-unit>
        <trans-unit id="a2f3185970f510e8441751a15794c894d3ec5120" translate="yes" xml:space="preserve">
          <source>The left inset of the border.</source>
          <target state="translated">边框的左侧镶边。</target>
        </trans-unit>
        <trans-unit id="2b87abbdcc21cbd8f730b01cb369d0a0fb5d7daa" translate="yes" xml:space="preserve">
          <source>The left or top component.</source>
          <target state="translated">左边或上面的组件。</target>
        </trans-unit>
        <trans-unit id="ba1e2b2bee4af48713fe9094a6295309b86010e3" translate="yes" xml:space="preserve">
          <source>The legal values for &lt;code&gt;calendarField&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;calendarField&lt;/code&gt; 的合法值为：</target>
        </trans-unit>
        <trans-unit id="90796de19f379c872e10f161378da6519c486d81" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;identifier&lt;/code&gt; is less than 1 or greater than 128 characters</source>
          <target state="translated">&lt;code&gt;identifier&lt;/code&gt; 的长度小于1或大于128个字符</target>
        </trans-unit>
        <trans-unit id="41a95b6715d8d8c27a219e7e506b9f0ffacf1046" translate="yes" xml:space="preserve">
          <source>The length of a tick.</source>
          <target state="translated">虱子的长度。</target>
        </trans-unit>
        <trans-unit id="87c3957c33024c262a7af561fbc4382beb1c10cd" translate="yes" xml:space="preserve">
          <source>The length of each month is 29 or 30 days. Ordinary years have 354 days; leap years have 355 days.</source>
          <target state="translated">每个月的长度为29天或30天。普通年为354天;闰年为355天。</target>
        </trans-unit>
        <trans-unit id="ddbb38752fc76e23de090a340e192731d09329a6" translate="yes" xml:space="preserve">
          <source>The length of the MIDI file in bytes.</source>
          <target state="translated">MIDI文件的长度,以字节为单位。</target>
        </trans-unit>
        <trans-unit id="d2435fa816d6768395fd2a4aa385ef8e24c5ddee" translate="yes" xml:space="preserve">
          <source>The length of the array is the number of methods on the execution stack. The element at index &lt;code&gt;0&lt;/code&gt; is the class of the currently executing method, the element at index &lt;code&gt;1&lt;/code&gt; is the class of that method's caller, and so on.</source>
          <target state="translated">数组的长度是执行堆栈上方法的数量。索引 &lt;code&gt;0&lt;/code&gt; 处的元素是当前正在执行的方法的类，索引 &lt;code&gt;1&lt;/code&gt; 处的元素是该方法的调用者的类，依此类推。</target>
        </trans-unit>
        <trans-unit id="db0cba7fd12ec33074630b97168f59fc41388714" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling &lt;a href=&quot;#getNano()&quot;&gt;&lt;code&gt;getNano()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getSeconds()&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">持续时间的长度使用两个字段（秒和纳秒）存储。纳秒部分是从0到999,999,999的值，它是对长度的调整，以秒为单位。总持续时间通过调用&lt;a href=&quot;#getNano()&quot;&gt; &lt;code&gt;getNano()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getSeconds()&quot;&gt; &lt;code&gt;getSeconds()&lt;/code&gt; &lt;/a&gt;来定义。</target>
        </trans-unit>
        <trans-unit id="5b7612856469de2aec5e2bc66e25332200f0c8ce" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;#getNano()&quot;&gt;&lt;code&gt;getNano()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">持续时间的长度使用两个字段（秒和纳秒）存储。纳秒部分是从0到999,999,999的值，它是对长度的调整，以秒为单位。总持续时间通过调用此方法和&lt;a href=&quot;#getNano()&quot;&gt; &lt;code&gt;getNano()&lt;/code&gt; &lt;/a&gt;来定义。</target>
        </trans-unit>
        <trans-unit id="52f1926df908fd6c91c3cdc7317b153da5f04881" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;#getSeconds()&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">持续时间的长度使用两个字段（秒和纳秒）存储。纳秒部分是从0到999,999,999的值，它是对长度的调整，以秒为单位。总持续时间通过调用此方法和&lt;a href=&quot;#getSeconds()&quot;&gt; &lt;code&gt;getSeconds()&lt;/code&gt; &lt;/a&gt;来定义。</target>
        </trans-unit>
        <trans-unit id="b857f2f3bd91b155a9e3b739281c3f76ebd897e1" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;duration#getNano--&quot;&gt;&lt;code&gt;getNano()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">持续时间的长度使用两个字段（秒和纳秒）存储。纳秒部分是从0到999,999,999的值，它是对长度的调整，以秒为单位。总持续时间通过调用此方法和&lt;a href=&quot;duration#getNano--&quot;&gt; &lt;code&gt;getNano()&lt;/code&gt; &lt;/a&gt;来定义。</target>
        </trans-unit>
        <trans-unit id="799f33b236c13bbcd8f6b24c22ed60055e48b108" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;duration#getSeconds--&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">持续时间的长度使用两个字段（秒和纳秒）存储。纳秒部分是从0到999,999,999的值，它是对长度的调整，以秒为单位。总持续时间通过调用此方法和&lt;a href=&quot;duration#getSeconds--&quot;&gt; &lt;code&gt;getSeconds()&lt;/code&gt; &lt;/a&gt;来定义。</target>
        </trans-unit>
        <trans-unit id="297f7fc3454a1ac9b72ec75e82b737d1c3e02d73" translate="yes" xml:space="preserve">
          <source>The length of the erroneous input, a positive integer</source>
          <target state="translated">错误输入的长度,为正整数。</target>
        </trans-unit>
        <trans-unit id="2a624dce814ded4fc8a788876213688d849daba7" translate="yes" xml:space="preserve">
          <source>The length of the returned array equals the number of bytes read from the stream. If &lt;code&gt;len&lt;/code&gt; is zero, then no bytes are read and an empty byte array is returned. Otherwise, up to &lt;code&gt;len&lt;/code&gt; bytes are read from the stream. Fewer than &lt;code&gt;len&lt;/code&gt; bytes may be read if end of stream is encountered.</source>
          <target state="translated">返回数组的长度等于从流中读取的字节数。如果 &lt;code&gt;len&lt;/code&gt; 为零，则不读取任何字节，并返回一个空字节数组。否则，从流中读取最多 &lt;code&gt;len&lt;/code&gt; 个字节。如果遇到流末尾，则可能读取的字节数少于 &lt;code&gt;len&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eccf785a92405032ba8c968732208000460f0139" translate="yes" xml:space="preserve">
          <source>The length of the simple name in the original code for which the qualified names where gathered.</source>
          <target state="translated">在原始代码中,收集限定名称的简单名称的长度。</target>
        </trans-unit>
        <trans-unit id="919271a96dbead07bffe665f55582cbbbb8ef438" translate="yes" xml:space="preserve">
          <source>The length of the solar day is the standard way that humans measure time. This has traditionally been subdivided into 24 hours of 60 minutes of 60 seconds, forming a 86400 second day.</source>
          <target state="translated">太阳日的长度是人类衡量时间的标准方法。传统上将其细分为24小时60分60秒,形成86400秒的一天。</target>
        </trans-unit>
        <trans-unit id="33b014d560da82e0f5d8f763343933b2684c530a" translate="yes" xml:space="preserve">
          <source>The length of this character buffer</source>
          <target state="translated">该字符缓冲区的长度</target>
        </trans-unit>
        <trans-unit id="a1267c7d6b40b8c0d034f6025fd6b9fc8ca3a757" translate="yes" xml:space="preserve">
          <source>The length, in bytes, of the file denoted by this abstract pathname, or &lt;code&gt;0L&lt;/code&gt; if the file does not exist. Some operating systems may return &lt;code&gt;0L&lt;/code&gt; for pathnames denoting system-dependent entities such as devices or pipes.</source>
          <target state="translated">此抽象路径名表示的文件的长度（以字节为单位）；如果文件不存在，则为 &lt;code&gt;0L&lt;/code&gt; 。某些操作系统可能返回 &lt;code&gt;0L&lt;/code&gt; 作为表示与系统有关的实体（例如设备或管道）的路径名。</target>
        </trans-unit>
        <trans-unit id="581d35e78b7ce49a00c13c4b7ee295fe5f34e3bd" translate="yes" xml:space="preserve">
          <source>The lengths of the 12 months of the year separated by whitespace. A numeric year property must be present for every year without any gaps. The month lengths must be between 29-32 inclusive.</source>
          <target state="translated">一年中12个月的长度,用空格隔开。每一年必须有一个数字年属性,不能有任何空白。月长必须在29-32之间(含)。</target>
        </trans-unit>
        <trans-unit id="5b66e74de97e7f14be88c15b844d4047ab288d4b" translate="yes" xml:space="preserve">
          <source>The letter 'T'. Parsing is case insensitive.</source>
          <target state="translated">字母 &quot;T&quot;。解析是不分大小写的。</target>
        </trans-unit>
        <trans-unit id="fc227fcf89d7cc814e4981de81e0c19a58943c38" translate="yes" xml:space="preserve">
          <source>The letter 'W'. Parsing is case insensitive.</source>
          <target state="translated">字母 &quot;W&quot;。解析是不分大小写的。</target>
        </trans-unit>
        <trans-unit id="d77c8cf193187a7a8a4df4378c110186f76ee90c" translate="yes" xml:space="preserve">
          <source>The letters A-Z in their uppercase (&lt;code&gt;'\u0041'&lt;/code&gt; through &lt;code&gt;'\u005A'&lt;/code&gt;), lowercase (&lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007A'&lt;/code&gt;), and full width variant (&lt;code&gt;'\uFF21'&lt;/code&gt; through &lt;code&gt;'\uFF3A'&lt;/code&gt; and &lt;code&gt;'\uFF41'&lt;/code&gt; through &lt;code&gt;'\uFF5A'&lt;/code&gt;) forms have numeric values from 10 through 35. This is independent of the Unicode specification, which does not assign numeric values to these &lt;code&gt;char&lt;/code&gt; values.</source>
          <target state="translated">字母AZ以大写字母（ &lt;code&gt;'\u0041'&lt;/code&gt; 到 &lt;code&gt;'\u005A'&lt;/code&gt; ），小写字母（ &lt;code&gt;'\u0061'&lt;/code&gt; 到 &lt;code&gt;'\u007A'&lt;/code&gt; ）和全角变体（ &lt;code&gt;'\uFF21'&lt;/code&gt; 到 &lt;code&gt;'\uFF3A'&lt;/code&gt; 和 &lt;code&gt;'\uFF41'&lt;/code&gt; （通过 &lt;code&gt;'\uFF5A'&lt;/code&gt; ）形式的数字值从10到35。这独立于Unicode规范，Unicode规范不将数字值分配给这些 &lt;code&gt;char&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="099a2135b8e7e4f9044f572d83bbcd49c70dfd02" translate="yes" xml:space="preserve">
          <source>The levels in descending order are:</source>
          <target state="translated">级别由高到低依次为:</target>
        </trans-unit>
        <trans-unit id="0e8ba1b886b6e805ca0a71d56eee50e6a8bc10b6" translate="yes" xml:space="preserve">
          <source>The lexicographical ordering of &lt;code&gt;CharSequence&lt;/code&gt; is defined as follows. Consider a &lt;code&gt;CharSequence&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CharSequence&lt;/code&gt; 的字典顺序定义如下。考虑一个 &lt;code&gt;CharSequence&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78712e45be2b841ae964401fcce550e1a00f462a" translate="yes" xml:space="preserve">
          <source>The life-cycle of the returned buffer will be tied to that of this segment. That means that if the this segment is closed (see &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;, accessing the returned buffer will throw an &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返回缓冲区的生命周期将与此段的生命周期联系在一起。这意味着，如果关闭此段（请参见&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;，则访问返回的缓冲区将抛出&lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; )&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c5e9331cf323774666c68e79793b3d8477a4183" translate="yes" xml:space="preserve">
          <source>The lifetime of a StackFrame is very limited. It is available only for suspended threads and becomes invalid once its thread is resumed.</source>
          <target state="translated">StackFrame的寿命是非常有限的。它只对暂停的线程有效,一旦线程恢复,它就会失效。</target>
        </trans-unit>
        <trans-unit id="aaba787bd83219a9dcbfeeac67a7f10d3959fe01" translate="yes" xml:space="preserve">
          <source>The lightest predefined weight.</source>
          <target state="translated">最轻的预定重量。</target>
        </trans-unit>
        <trans-unit id="adb3d673f7476255c74ac6d7d9fa9326dae1d524" translate="yes" xml:space="preserve">
          <source>The limit of persistent storage allocated for spooling has been reached.</source>
          <target state="translated">已达到为线轴分配的持久性存储的极限。</target>
        </trans-unit>
        <trans-unit id="e4ba24e69512c484f4d6ceb119bca02cab802a8d" translate="yes" xml:space="preserve">
          <source>The limit of persistent storage allocated for spooling has been reached. The printer is temporarily unable to accept more jobs. The printer will remove this reason when it is able to accept more jobs. This value should be used by a non-spooling printer that only accepts one or a small number jobs at a time or a spooling printer that has filled the spool space.</source>
          <target state="translated">已达到为线轴分配的持久性存储的极限。打印机暂时无法接受更多作业。当打印机能够接受更多作业时,将删除此原因。该值适用于每次只接受一个或少量作业的非线轴打印机,或已占满线轴空间的线轴打印机。</target>
        </trans-unit>
        <trans-unit id="38ae39f9f342a1c60cd5cbb9ab2d4d849160241e" translate="yes" xml:space="preserve">
          <source>The limit of this buffer</source>
          <target state="translated">该缓冲区的极限</target>
        </trans-unit>
        <trans-unit id="ab9c6e922a12a9462c9be31812943f21ad4a8106" translate="yes" xml:space="preserve">
          <source>The limit to trim a line join that has a JOIN_MITER decoration. A line join is trimmed when the ratio of miter length to stroke width is greater than the miterlimit value. The miter length is the diagonal length of the miter, which is the distance between the inside corner and the outside corner of the intersection. The smaller the angle formed by two line segments, the longer the miter length and the sharper the angle of intersection. The default miterlimit value of 10.0f causes all angles less than 11 degrees to be trimmed. Trimming miters converts the decoration of the line join to bevel.</source>
          <target state="translated">修剪具有JOIN_MITER装饰的直线连接的极限。当斜角长度与行程宽度的比值大于miterlimit值时,线条连接将被修剪。斜线长度是指斜线的对角线长度,也就是交点内角和外角之间的距离。两条线段形成的角度越小,斜角长度越长,交角越锐利。默认的斜角限制值为10.0f,导致所有小于11度的角度都会被修剪。修剪斜角将线段连接的装饰转换为斜角。</target>
        </trans-unit>
        <trans-unit id="74d9cdefdf1f884bc0a559db2675d6e2b7088424" translate="yes" xml:space="preserve">
          <source>The line number as an integer, or -1 if none is available.</source>
          <target state="translated">行号为整数,如果没有行号,则为-1。</target>
        </trans-unit>
        <trans-unit id="77c032fbbd794d07ea48f8c91991c009a7b8b837" translate="yes" xml:space="preserve">
          <source>The line number begins at &lt;code&gt;0&lt;/code&gt;, and is incremented by &lt;code&gt;1&lt;/code&gt; when a &lt;code&gt;read&lt;/code&gt; returns a newline character.</source>
          <target state="translated">行号从 &lt;code&gt;0&lt;/code&gt; 开始，并在 &lt;code&gt;read&lt;/code&gt; 返回换行符时增加 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="92305e3b358afecfa44f83d1bcf7ae6dd7cb851f" translate="yes" xml:space="preserve">
          <source>The line number of the end of the text where the exception occurred.</source>
          <target state="translated">发生异常的文本末尾的行号。</target>
        </trans-unit>
        <trans-unit id="2355611f420db2d07fc016726af4faa7b71fe1ea" translate="yes" xml:space="preserve">
          <source>The line number of this Location.</source>
          <target state="translated">这个位置的行号。</target>
        </trans-unit>
        <trans-unit id="f6f66624b436609504e5460cf106b1c4d4148e86" translate="yes" xml:space="preserve">
          <source>The line number of this Location. The line number is relative to the source specified by &lt;a href=&quot;#sourceName(java.lang.String)&quot;&gt;&lt;code&gt;sourceName(stratum)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">此位置的行号。行号相对于&lt;a href=&quot;#sourceName(java.lang.String)&quot;&gt; &lt;code&gt;sourceName(stratum)&lt;/code&gt; &lt;/a&gt;指定的源。</target>
        </trans-unit>
        <trans-unit id="cddc84c180049c473d968f703982ac6a38c01347" translate="yes" xml:space="preserve">
          <source>The line number this locator is pointing to, or &lt;code&gt;-1&lt;/code&gt; if there is no column number available.</source>
          <target state="translated">该定位器指向的行号；如果没有可用的列号，则为 &lt;code&gt;-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="166a8e4f12900a4c636e64b35cecf089e2b6e881" translate="yes" xml:space="preserve">
          <source>The line number, or -1 if none is available.</source>
          <target state="translated">行号,如果没有行号,则为-1。</target>
        </trans-unit>
        <trans-unit id="6d055d92518c915ab1ac205ce84b4eb5bcc880a5" translate="yes" xml:space="preserve">
          <source>The line number. Returns -1 if a line number is unavailable.</source>
          <target state="translated">行号。如果行号不可用,返回-1。</target>
        </trans-unit>
        <trans-unit id="427d04746239c7210cdccd3ee110daac2acf52b0" translate="yes" xml:space="preserve">
          <source>The line views do all of their rendering through the &lt;code&gt;drawLine&lt;/code&gt; method which in turn does all of its rendering through the &lt;code&gt;drawSelectedText&lt;/code&gt; and &lt;code&gt;drawUnselectedText&lt;/code&gt; methods. This enables subclasses to easily specialize the rendering without concern for the layout aspects.</source>
          <target state="translated">线视图通过 &lt;code&gt;drawLine&lt;/code&gt; 方法进行所有渲染，而该方法又通过 &lt;code&gt;drawSelectedText&lt;/code&gt; 和 &lt;code&gt;drawUnselectedText&lt;/code&gt; 方法进行所有渲染。这使子类可以轻松地使渲染专业化，而无需考虑布局方面。</target>
        </trans-unit>
        <trans-unit id="b409c56200d65a52d0a4e38f68805b5ad4c0f519" translate="yes" xml:space="preserve">
          <source>The lines of a file can be obtained from &lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt;&lt;code&gt;BufferedReader.lines()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">可以从&lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt; &lt;code&gt;BufferedReader.lines()&lt;/code&gt; &lt;/a&gt;获得文件的行；</target>
        </trans-unit>
        <trans-unit id="d0fbc9f6cfd3d04e440801fa393ad994718e72cd" translate="yes" xml:space="preserve">
          <source>The lines of a file can be obtained from &lt;a href=&quot;../../io/bufferedreader#lines--&quot;&gt;&lt;code&gt;BufferedReader.lines()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">可以从&lt;a href=&quot;../../io/bufferedreader#lines--&quot;&gt; &lt;code&gt;BufferedReader.lines()&lt;/code&gt; &lt;/a&gt;获得文件的行；</target>
        </trans-unit>
        <trans-unit id="672e97082f5f1db510822c0106b8069f9a2cf6d6" translate="yes" xml:space="preserve">
          <source>The linker for &lt;a href=&quot;relinkablecallsite&quot;&gt;&lt;code&gt;RelinkableCallSite&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;relinkablecallsite&quot;&gt; &lt;code&gt;RelinkableCallSite&lt;/code&gt; &lt;/a&gt;对象的链接器。</target>
        </trans-unit>
        <trans-unit id="d36a93bdec55013e4d0a8d4d42b1912a077316ed" translate="yes" xml:space="preserve">
          <source>The linker for &lt;a href=&quot;relinkablecallsite&quot;&gt;&lt;code&gt;RelinkableCallSite&lt;/code&gt;&lt;/a&gt; objects. A dynamic linker is a main objects when using Dynalink, it coordinates linking of call sites with linkers of available language runtimes that are represented by &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; objects (you only need to deal with these if you are yourself implementing a language runtime with its own object model and/or type conversions). To use Dynalink, you have to create one or more dynamic linkers using a &lt;a href=&quot;dynamiclinkerfactory&quot;&gt;&lt;code&gt;DynamicLinkerFactory&lt;/code&gt;&lt;/a&gt;. Subsequently, you need to invoke its &lt;a href=&quot;#link(T)&quot;&gt;&lt;code&gt;link(RelinkableCallSite)&lt;/code&gt;&lt;/a&gt; method from &lt;code&gt;invokedynamic&lt;/code&gt; bootstrap methods to let it manage all the call sites they create. Usual usage would be to create at least one class per language runtime to contain one linker instance as:</source>
          <target state="translated">&lt;a href=&quot;relinkablecallsite&quot;&gt; &lt;code&gt;RelinkableCallSite&lt;/code&gt; &lt;/a&gt;对象的链接器。动态链接器是使用Dynalink的主要对象，它协调呼叫站点与可用语言运行时的链接器的链接，这些链接由&lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; &lt;/a&gt;对象表示（如果您自己使用自己的对象模型实现语言运行时，则只需要处理这些链接）和/或类型转换）。要使用Dynalink，您必须使用&lt;a href=&quot;dynamiclinkerfactory&quot;&gt; &lt;code&gt;DynamicLinkerFactory&lt;/code&gt; &lt;/a&gt;创建一个或多个动态链接器。随后，您需要从 &lt;code&gt;invokedynamic&lt;/code&gt; 调用其&lt;a href=&quot;#link(T)&quot;&gt; &lt;code&gt;link(RelinkableCallSite)&lt;/code&gt; &lt;/a&gt;方法引导方法，以使其管理它们创建的所有呼叫站点。通常的用法是每个语言运行时至少创建一个类，以包含一个链接器实例，如下所示：</target>
        </trans-unit>
        <trans-unit id="1da4ff24559b092bdd6dbfa74dfe3af5beeb0606" translate="yes" xml:space="preserve">
          <source>The list containing all the enabled attribute names.</source>
          <target state="translated">包含所有启用的属性名称的列表。</target>
        </trans-unit>
        <trans-unit id="f6baad02fe3b9954bd6badb60ae27c47fc3bb918" translate="yes" xml:space="preserve">
          <source>The list containing all the enabled notification types.</source>
          <target state="translated">包含所有已启用的通知类型的列表。</target>
        </trans-unit>
        <trans-unit id="f3ea619d9f715deb3d2e3f1b2741f191c4bbc56c" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;Certificate&lt;/code&gt;s is an ordered &lt;code&gt;List&lt;/code&gt; of zero or more &lt;code&gt;Certificate&lt;/code&gt;s. This &lt;code&gt;List&lt;/code&gt; and all of the &lt;code&gt;Certificate&lt;/code&gt;s contained in it must be immutable.</source>
          <target state="translated">名单 &lt;code&gt;Certificate&lt;/code&gt; s是一个有序 &lt;code&gt;List&lt;/code&gt; 的零个或多个 &lt;code&gt;Certificate&lt;/code&gt; 秒。此 &lt;code&gt;List&lt;/code&gt; 及其中包含的所有 &lt;code&gt;Certificate&lt;/code&gt; 必须是不可变的。</target>
        </trans-unit>
        <trans-unit id="b916d31edb7a209420a16f9027d0923d3faa5654" translate="yes" xml:space="preserve">
          <source>The list of ChangeListeners for this model.</source>
          <target state="translated">此模型的 ChangeListeners 列表。</target>
        </trans-unit>
        <trans-unit id="10bfa47e8164a90866857998be35737173041df7" translate="yes" xml:space="preserve">
          <source>The list of ChangeListeners for this model. Subclasses may store their own listeners here.</source>
          <target state="translated">这个模型的 ChangeListeners 列表。子类可以在这里存储自己的监听器。</target>
        </trans-unit>
        <trans-unit id="cd0934730ffafda86be98b2e11c9a6431cd700ca" translate="yes" xml:space="preserve">
          <source>The list of IDs for currently-open connections to this connector server.</source>
          <target state="translated">当前打开的连接到该连接器服务器的ID列表。</target>
        </trans-unit>
        <trans-unit id="f13e9c64749b8ed1f5479b46d29755512554be72" translate="yes" xml:space="preserve">
          <source>The list of ListenerType - Listener pairs</source>
          <target state="translated">ListenerType-Listener对的列表。</target>
        </trans-unit>
        <trans-unit id="cbf332d9549df163b0b7e42036484336ca82fb86" translate="yes" xml:space="preserve">
          <source>The list of Management Interfaces and their single instances</source>
          <target state="translated">管理接口的列表和它们的单个实例。</target>
        </trans-unit>
        <trans-unit id="2d0575a4700f528c27b5830a39fd80993029bb31" translate="yes" xml:space="preserve">
          <source>The list of all CSS rules contained within the style sheet.</source>
          <target state="translated">样式表中包含的所有CSS规则的列表。</target>
        </trans-unit>
        <trans-unit id="79e835b88080323444fbf262a36b6d26f664132a" translate="yes" xml:space="preserve">
          <source>The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules.</source>
          <target state="translated">样式表中包含的所有CSS规则的列表。包括规则集和at-rules。</target>
        </trans-unit>
        <trans-unit id="aa533ed7806370d614ec3db1940b0acd3b42190d" translate="yes" xml:space="preserve">
          <source>The list of areas defined for the image map.</source>
          <target state="translated">为图像地图定义的区域列表。</target>
        </trans-unit>
        <trans-unit id="d3edf1b8ae53c360c1c5b20e97917aa355190641" translate="yes" xml:space="preserve">
          <source>The list of attributes retrieved.</source>
          <target state="translated">检索到的属性列表。</target>
        </trans-unit>
        <trans-unit id="a733a32deedbd729aa7b488bf3de06d8d71e5e72" translate="yes" xml:space="preserve">
          <source>The list of attributes that were set, with their new values.</source>
          <target state="translated">被设置的属性列表,以及它们的新值。</target>
        </trans-unit>
        <trans-unit id="14a4e1e5cb8c7574ab3f323e3ba345046ec22d99" translate="yes" xml:space="preserve">
          <source>The list of buttons participating in this group.</source>
          <target state="translated">参与该组的按钮列表。</target>
        </trans-unit>
        <trans-unit id="0fdae3bd72419d0a97c00be302983175d31ccb88" translate="yes" xml:space="preserve">
          <source>The list of children affected by this event notification.</source>
          <target state="translated">受此事件通知影响的儿童名单。</target>
        </trans-unit>
        <trans-unit id="26ed6ff2dccafe178897a47f12d26e2b3c797bad" translate="yes" xml:space="preserve">
          <source>The list of events (in order) that the &lt;code&gt;DragGestureRecognizer&lt;/code&gt; &quot;recognized&quot; as a &quot;gesture&quot; that triggers a drag.</source>
          <target state="translated">&lt;code&gt;DragGestureRecognizer&lt;/code&gt; &amp;ldquo;识别&amp;rdquo;为触发拖动的&amp;ldquo;手势&amp;rdquo;的事件列表（按顺序）。</target>
        </trans-unit>
        <trans-unit id="4880783278f1d1416ebf9b109da75b67eedaa0de" translate="yes" xml:space="preserve">
          <source>The list of events from updating declarations dependent on the dropped snippet.</source>
          <target state="translated">依赖于丢弃的片段,更新声明的事件列表。</target>
        </trans-unit>
        <trans-unit id="7ae61477db1267667809d3a08c8f514fa6a79474" translate="yes" xml:space="preserve">
          <source>The list of extensions.</source>
          <target state="translated">分机清单;</target>
        </trans-unit>
        <trans-unit id="b394ccf2a7aed6442f07818a8341401fd3df6290" translate="yes" xml:space="preserve">
          <source>The list of listener type, listener pairs</source>
          <target state="translated">列表中的听众类型、听众对。</target>
        </trans-unit>
        <trans-unit id="1df53ae501acdd85420414bca713b21207b00184" translate="yes" xml:space="preserve">
          <source>The list of listeners.</source>
          <target state="translated">听众名单。</target>
        </trans-unit>
        <trans-unit id="6ebc6df8965040b3ce7dc92bd4596d6121981619" translate="yes" xml:space="preserve">
          <source>The list of mime types.</source>
          <target state="translated">哑剧类型列表。</target>
        </trans-unit>
        <trans-unit id="4437772a3d8b697777cf41a340957151122fb04d" translate="yes" xml:space="preserve">
          <source>The list of the parameters supported by this &lt;code&gt;DOMConfiguration&lt;/code&gt; object and for which at least one value can be set by the application.</source>
          <target state="translated">此 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象支持的参数列表，应用程序可以为其设置至少一个值。</target>
        </trans-unit>
        <trans-unit id="cc54843827b6539c88c4d61550825bb01e64ccec" translate="yes" xml:space="preserve">
          <source>The list of the parameters supported by this &lt;code&gt;DOMConfiguration&lt;/code&gt; object and for which at least one value can be set by the application. Note that this list can also contain parameter names defined outside this specification.</source>
          <target state="translated">此 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象支持的参数列表，应用程序可以为其设置至少一个值。请注意，此列表还可以包含在本规范之外定义的参数名称。</target>
        </trans-unit>
        <trans-unit id="2a7748aeeee58a5b52705cd02ff41d8df27062b6" translate="yes" xml:space="preserve">
          <source>The list of the retrieved attributes.</source>
          <target state="translated">检索到的属性列表。</target>
        </trans-unit>
        <trans-unit id="411c02d68ec92711ab8406bcc5a78e9ff249944a" translate="yes" xml:space="preserve">
          <source>The list of this layer's parents</source>
          <target state="translated">该层的父代列表</target>
        </trans-unit>
        <trans-unit id="aba858810c5aa18739c636e7b18c7408ef0a29c0" translate="yes" xml:space="preserve">
          <source>The list of units completely and uniquely represents the state of the object without omissions, overlaps or duplication. The units are in order from longest duration to shortest.</source>
          <target state="translated">单位列表完整、唯一地表示对象的状态,没有遗漏、重叠和重复。单位的顺序是由最长的持续时间到最短的持续时间。</target>
        </trans-unit>
        <trans-unit id="ffb6e93d63259c6469ce39fab1b0f30d3de6ba63" translate="yes" xml:space="preserve">
          <source>The list of virtual machine descriptors which describe the Java virtual machines known to this provider (may be empty).</source>
          <target state="translated">描述该提供者已知的 Java 虚拟机的虚拟机描述符列表(可能为空)。</target>
        </trans-unit>
        <trans-unit id="5a6af1f76163a23480bdc449d660e60da27dc96d" translate="yes" xml:space="preserve">
          <source>The list of virtual machine descriptors.</source>
          <target state="translated">虚拟机描述符的列表。</target>
        </trans-unit>
        <trans-unit id="f0a31b4438d214ff5ab44fbf1e6df091597039c9" translate="yes" xml:space="preserve">
          <source>The list will be empty for fixed offset rules and for any time-zone where there has only ever been a single offset. The list will also be empty if the transition rules are unknown.</source>
          <target state="translated">对于固定的偏移规则和任何只有一个偏移的时区,该列表将为空。如果过渡规则未知,该列表也将是空的。</target>
        </trans-unit>
        <trans-unit id="df0c9468b72bfab4969f222df61b6ab502e1a758" translate="yes" xml:space="preserve">
          <source>The list will be empty for fixed offset rules and for any time-zone where there is no daylight saving time. The list will also be empty if the transition rules are unknown.</source>
          <target state="translated">对于固定的偏移规则和任何没有夏令时的时区,该列表将是空的。如果过渡规则未知,该列表也将是空的。</target>
        </trans-unit>
        <trans-unit id="e3f7de82bdbb25e5787b3964abd332a8bf295b2b" translate="yes" xml:space="preserve">
          <source>The list will not contain attributes that were declared #IMPLIED but not specified in the start tag. It will also not contain attributes used as Namespace declarations (xmlns*) unless the &lt;code&gt;http://xml.org/sax/features/namespace-prefixes&lt;/code&gt; feature is set to &lt;var&gt;true&lt;/var&gt; (it is &lt;var&gt;false&lt;/var&gt; by default). Because SAX2 conforms to the original &quot;Namespaces in XML&quot; recommendation, it normally does not give namespace declaration attributes a namespace URI.</source>
          <target state="translated">该列表将不包含声明为#IMPLIED但未在开始标记中指定的属性。除非将 &lt;code&gt;http://xml.org/sax/features/namespace-prefixes&lt;/code&gt; 功能设置为 &lt;var&gt;true&lt;/var&gt; （默认情况下为 &lt;var&gt;false&lt;/var&gt; ），否则它也将不包含用作名称空间声明（xmlns *）的属性。因为SAX2符合原始的&amp;ldquo; XML中的名称空间&amp;rdquo;建议，所以它通常不为名称空间声明属性提供名称空间URI。</target>
        </trans-unit>
        <trans-unit id="27844bc6af8434ed5116d0992a6ff6c763ad2302" translate="yes" xml:space="preserve">
          <source>The list-iterator is</source>
          <target state="translated">列表迭代器是</target>
        </trans-unit>
        <trans-unit id="7f92bf7d6987c47057b3f2bdbf85f39eb676f3f9" translate="yes" xml:space="preserve">
          <source>The listener &lt;code&gt;myListener&lt;/code&gt; will only receive notifications the type of which equals/starts with &quot;my_example.my_type&quot;.</source>
          <target state="translated">侦听器 &lt;code&gt;myListener&lt;/code&gt; 将仅接收类型等于/以&amp;ldquo; my_example.my_type&amp;rdquo;开头的通知。</target>
        </trans-unit>
        <trans-unit id="6084d864c4b6f5b4544fc69b60315b434163b6f4" translate="yes" xml:space="preserve">
          <source>The listener ID.</source>
          <target state="translated">监听者ID。</target>
        </trans-unit>
        <trans-unit id="57bc8a7e5c23ed6b6f740ba7b53d85cb121e7436" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &quot;interesting&quot; mouse events (press, release, click, enter, and exit) on a component.</source>
          <target state="translated">用于接收组件上 &quot;有趣的 &quot;鼠标事件(按下、释放、点击、进入和退出)的监听器接口。</target>
        </trans-unit>
        <trans-unit id="94b650252b7748b4f18f00d71d5724ea14d5b3c3" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &quot;interesting&quot; mouse events (press, release, click, enter, and exit) on a component. (To track mouse moves and mouse drags, use the &lt;code&gt;MouseMotionListener&lt;/code&gt;.)</source>
          <target state="translated">侦听器界面，用于接收组件上的&amp;ldquo;有趣&amp;rdquo;鼠标事件（按下，释放，单击，进入和退出）。（要跟踪鼠标移动和鼠标拖动，请使用 &lt;code&gt;MouseMotionListener&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="3ca4adf4d22463d5be377865984608d8896c3b85" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; objects.</source>
          <target state="translated">用于接收 &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; 对象的侦听器接口。</target>
        </trans-unit>
        <trans-unit id="9831fa0c76b61ac6b48f7edcb579a53278a9108b" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; objects. A class that is interested in processing a &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; implements this interface.</source>
          <target state="translated">用于接收 &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; 对象的侦听器接口。对处理 &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; 感兴趣的类将实现此接口。</target>
        </trans-unit>
        <trans-unit id="609d94d290b2f275c653b99c1f7e5a6a92448bc7" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; objects.</source>
          <target state="translated">用于接收 &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; 对象的侦听器接口。</target>
        </trans-unit>
        <trans-unit id="5b8110e74303433769bb43009b8ee46a1e6e9536" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; objects. A class that is interested in processing a &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; implements this interface.</source>
          <target state="translated">用于接收 &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; 对象的侦听器接口。对处理 &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; 感兴趣的类将实现此接口。</target>
        </trans-unit>
        <trans-unit id="8967b4cafac2c1346bdb5684d29888b2a7006c87" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;WindowEvents&lt;/code&gt;, including &lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; and &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; events.</source>
          <target state="translated">用于接收 &lt;code&gt;WindowEvents&lt;/code&gt; 的侦听器接口，包括 &lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; 和 &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="9e3bf64f53823d12d7070cf10bb2a3c32849bb05" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;WindowEvents&lt;/code&gt;, including &lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; and &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; events. The class that is interested in processing a &lt;code&gt;WindowEvent&lt;/code&gt; either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;WindowAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a &lt;code&gt;Window&lt;/code&gt; using the &lt;code&gt;Window&lt;/code&gt;'s &lt;code&gt;addWindowFocusListener&lt;/code&gt; method. When the &lt;code&gt;Window&lt;/code&gt;'s status changes by virtue of it being opened, closed, activated, deactivated, iconified, or deiconified, or by focus being transferred into or out of the &lt;code&gt;Window&lt;/code&gt;, the relevant method in the listener object is invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">用于接收 &lt;code&gt;WindowEvents&lt;/code&gt; 的侦听器接口，包括 &lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; 和 &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; 事件。对处理 &lt;code&gt;WindowEvent&lt;/code&gt; 感兴趣的类要么实现此接口（及其包含的所有方法），要么扩展抽象的 &lt;code&gt;WindowAdapter&lt;/code&gt; 类（仅覆盖感兴趣的方法）。从该类所创建的侦听器对象，然后，注册 &lt;code&gt;Window&lt;/code&gt; 使用 &lt;code&gt;Window&lt;/code&gt; 的 &lt;code&gt;addWindowFocusListener&lt;/code&gt; 方法。当 &lt;code&gt;Window&lt;/code&gt; 的状态通过以下方式更改：打开，关闭，激活，停用，图标化或去图标化，或者将焦点转移到 &lt;code&gt;Window&lt;/code&gt; 中或从Window中移出，调用侦听器对象中的相关方法，并将 &lt;code&gt;WindowEvent&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="2210a94d07b13e1708014a554d960f43d802860d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving action events.</source>
          <target state="translated">接收动作事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="44aaad1f22857e7f37adbeee3971e333bf1478af" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving action events. The class that is interested in processing an action event implements this interface, and the object created with that class is registered with a component, using the component's &lt;code&gt;addActionListener&lt;/code&gt; method. When the action event occurs, that object's &lt;code&gt;actionPerformed&lt;/code&gt; method is invoked.</source>
          <target state="translated">用于接收动作事件的侦听器接口。对处理动作事件感兴趣的类将实现此接口，并使用组件的 &lt;code&gt;addActionListener&lt;/code&gt; 方法向该组件注册使用该类创建的对象。发生动作事件时，将调用该对象的 &lt;code&gt;actionPerformed&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="00481095f54f04b1438b3c70335567d77c787b53" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving adjustment events.</source>
          <target state="translated">用于接收调整事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="f74efcc9f924ef4ddbb75d04ff313c461ac67b46" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving ancestor moved and resized events.</source>
          <target state="translated">用于接收祖先移动和调整大小事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="9c9fb6c6d5cb612e709c6561fb33185e1282a46a" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving ancestor moved and resized events. The class that is interested in processing these events either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; class (overriding only the method of interest). The listener object created from that class is then registered with a Component using the Component's &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt; method. When the hierarchy to which the Component belongs changes by the resizing or movement of an ancestor, the relevant method in the listener object is invoked, and the &lt;code&gt;HierarchyEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">侦听器界面，用于接收祖先移动和调整大小的事件。对处理这些事件感兴趣的类要么实现此接口（及其包含的所有方法），要么扩展抽象的 &lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; 类（仅覆盖感兴趣的方法）。然后，使用Component的 &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt; 方法向该Component注册从该类创建的侦听器对象。当组件的所属层次结构由于祖先的大小调整或移动而发生变化时，将调用侦听器对象中的相关方法，并将 &lt;code&gt;HierarchyEvent&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="90cdd407940bda984d8e64426a26ab551a4da521" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving component events.</source>
          <target state="translated">用于接收组件事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="7aa95cc25a9eedaeeb276f09b2fb164966ec1ede" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving component events. The class that is interested in processing a component event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;ComponentAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a component using the component's &lt;code&gt;addComponentListener&lt;/code&gt; method. When the component's size, location, or visibility changes, the relevant method in the listener object is invoked, and the &lt;code&gt;ComponentEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">用于接收组件事件的侦听器接口。对处理组件事件感兴趣的类要么实现此接口（及其包含的所有方法），要么扩展抽象的 &lt;code&gt;ComponentAdapter&lt;/code&gt; 类（仅覆盖感兴趣的方法）。然后使用该组件的 &lt;code&gt;addComponentListener&lt;/code&gt; 方法向该组件注册从该类创建的侦听器对象。当组件的大小，位置或可见性更改时，将调用侦听器对象中的相关方法，并将 &lt;code&gt;ComponentEvent&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="890552b57b756139822609b780bfb4956f13f4ac" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving container events.</source>
          <target state="translated">用于接收容器事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="2fc56b922809d90a27cf9eff61571095b10ff438" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving container events. The class that is interested in processing a container event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;ContainerAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a component using the component's &lt;code&gt;addContainerListener&lt;/code&gt; method. When the container's contents change because a component has been added or removed, the relevant method in the listener object is invoked, and the &lt;code&gt;ContainerEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">用于接收容器事件的侦听器接口。对处理容器事件感兴趣的类要么实现此接口（及其包含的所有方法），要么扩展抽象的 &lt;code&gt;ContainerAdapter&lt;/code&gt; 类（仅覆盖感兴趣的方法）。然后使用该组件的 &lt;code&gt;addContainerListener&lt;/code&gt; 方法向该组件注册从该类创建的侦听器对象。当由于添加或删除了组件而导致容器的内容更改时，将调用侦听器对象中的相关方法，并将 &lt;code&gt;ContainerEvent&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="efe5a9e3d412b2aa50b0183fe05ad9b2eb0dbbb8" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving drag gesture events.</source>
          <target state="translated">用于接收拖动手势事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="15fa10c4878c98ecdeff5867b8880a49492e9107" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving drag gesture events. This interface is intended for a drag gesture recognition implementation. See a specification for &lt;code&gt;DragGestureRecognizer&lt;/code&gt; for details on how to register the listener interface. Upon recognition of a drag gesture the &lt;code&gt;
 DragGestureRecognizer&lt;/code&gt; calls this interface's &lt;a href=&quot;#dragGestureRecognized(java.awt.dnd.DragGestureEvent)&quot;&gt;&lt;code&gt;dragGestureRecognized()&lt;/code&gt;&lt;/a&gt; method and passes a &lt;code&gt;DragGestureEvent&lt;/code&gt;.</source>
          <target state="translated">侦听器界面，用于接收拖动手势事件。该接口旨在用于拖动手势识别实现。有关如何注册侦听器接口的详细信息，请参见 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 的规范。识别到拖动手势后， &lt;code&gt; DragGestureRecognizer&lt;/code&gt; 会调用此接口的&lt;a href=&quot;#dragGestureRecognized(java.awt.dnd.DragGestureEvent)&quot;&gt; &lt;code&gt;dragGestureRecognized()&lt;/code&gt; &lt;/a&gt;方法并传递一个 &lt;code&gt;DragGestureEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c2ba980f1ffa6a1e693c2e81186f0140ecae865" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving hierarchy changed events.</source>
          <target state="translated">用于接收层次结构变化事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="00dfcc9fbbc4af9b6f644dad4856515c715735a0" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving hierarchy changed events. The class that is interested in processing a hierarchy changed event should implement this interface. The listener object created from that class is then registered with a Component using the Component's &lt;code&gt;addHierarchyListener&lt;/code&gt; method. When the hierarchy to which the Component belongs changes, the &lt;code&gt;hierarchyChanged&lt;/code&gt; method in the listener object is invoked, and the &lt;code&gt;HierarchyEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">用于接收层次结构更改的事件的侦听器接口。对处理层次结构更改事件感兴趣的类应实现此接口。然后使用Component的 &lt;code&gt;addHierarchyListener&lt;/code&gt; 方法向该Component注册从该类创建的侦听器对象。当Component所属的 &lt;code&gt;hierarchyChanged&lt;/code&gt; 发生更改时，将调用侦听器对象中的hierarchyChanged方法，并将 &lt;code&gt;HierarchyEvent&lt;/code&gt; 传递给该方法。</target>
        </trans-unit>
        <trans-unit id="58ada86b28047533e641ed98b6599c7db695cc11" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving input method events.</source>
          <target state="translated">用于接收输入法事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="7a08e2d02f7f85fe29f73c9f21011bec490a42b8" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving input method events. A text editing component has to install an input method event listener in order to work with input methods.</source>
          <target state="translated">用于接收输入法事件的监听器接口。一个文本编辑组件必须安装一个输入法事件监听器,才能使用输入法。</target>
        </trans-unit>
        <trans-unit id="aa0126d87b3a2ff4702bb38d66b6fe4bea766e5d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving internal frame events.</source>
          <target state="translated">用于接收内部帧事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="150ad64d77ea0b03512efe80e030779edab3376d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving internal frame events. This class is functionally equivalent to the WindowListener class in the AWT.</source>
          <target state="translated">用于接收内部帧事件的监听器接口。该类在功能上等同于AWT中的WindowListener类。</target>
        </trans-unit>
        <trans-unit id="516d18657e74f4887fa5c4e579c454ee66d1e071" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving item events.</source>
          <target state="translated">接收项目事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="109e7da1b01afba7911db87e11f9cbf0f86c20ba" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving item events. The class that is interested in processing an item event implements this interface. The object created with that class is then registered with a component using the component's &lt;code&gt;addItemListener&lt;/code&gt; method. When an item-selection event occurs, the listener object's &lt;code&gt;itemStateChanged&lt;/code&gt; method is invoked.</source>
          <target state="translated">用于接收项目事件的侦听器界面。对处理项目事件感兴趣的类将实现此接口。然后，使用该类创建的对象使用组件的 &lt;code&gt;addItemListener&lt;/code&gt; 方法向该组件注册。发生项目选择事件时，将调用侦听器对象的 &lt;code&gt;itemStateChanged&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="718d4e2886454c0fd765c4d41fb491716a8ae738" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard events (keystrokes).</source>
          <target state="translated">用于接收键盘事件(击键)的监听器接口。</target>
        </trans-unit>
        <trans-unit id="08c5d49fb62e2c9e7c054a96269a5256f34bd4de" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard events (keystrokes). The class that is interested in processing a keyboard event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;KeyAdapter&lt;/code&gt; class (overriding only the methods of interest).</source>
          <target state="translated">用于接收键盘事件（击键）的侦听器界面。对处理键盘事件感兴趣的类要么实现此接口（及其包含的所有方法），要么扩展抽象的 &lt;code&gt;KeyAdapter&lt;/code&gt; 类（仅覆盖感兴趣的方法）。</target>
        </trans-unit>
        <trans-unit id="e90ebf8a4e829b636c445b793a834c1f0dd5a9e2" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard focus events on a component.</source>
          <target state="translated">用于接收组件上的键盘焦点事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="b4d1ab461fe520253ef0a4700f74c9639e383e0c" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard focus events on a component. The class that is interested in processing a focus event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;FocusAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a component using the component's &lt;code&gt;addFocusListener&lt;/code&gt; method. When the component gains or loses the keyboard focus, the relevant method in the listener object is invoked, and the &lt;code&gt;FocusEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">侦听器界面，用于接收组件上的键盘焦点事件。对处理焦点事件感兴趣的类要么实现此接口（及其包含的所有方法），要么扩展抽象的 &lt;code&gt;FocusAdapter&lt;/code&gt; 类（仅覆盖感兴趣的方法）。然后使用该组件的 &lt;code&gt;addFocusListener&lt;/code&gt; 方法向该组件注册从该类创建的侦听器对象。当组件获得或失去键盘焦点时，将调用侦听器对象中的相关方法，并将 &lt;code&gt;FocusEvent&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="42d8d00c4b844423914d02e6030ad08ee6922952" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse motion events on a component.</source>
          <target state="translated">用于接收组件上的鼠标运动事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="f2008feb0b751d961f85da91749d357984c1699d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse motion events on a component. (For clicks and other mouse events, use the &lt;code&gt;MouseListener&lt;/code&gt;.)</source>
          <target state="translated">侦听器界面，用于接收组件上的鼠标移动事件。（对于单击和其他鼠标事件，请使用 &lt;code&gt;MouseListener&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="0cb541b4370e67f6c2ae53e37637e7778682d265" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse wheel events on a component.</source>
          <target state="translated">用于接收组件上鼠标滚轮事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="967e419e81c0bedffb9b7df254e23a6edfef07f9" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse wheel events on a component. (For clicks and other mouse events, use the &lt;code&gt;MouseListener&lt;/code&gt;. For mouse movement and drags, use the &lt;code&gt;MouseMotionListener&lt;/code&gt;.)</source>
          <target state="translated">侦听器界面，用于接收组件上的鼠标滚轮事件。（对于单击和其他鼠标事件，请使用 &lt;code&gt;MouseListener&lt;/code&gt; 。对于鼠标移动和拖动，请使用 &lt;code&gt;MouseMotionListener&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="3f5665da8b9abc72812af1cbb517327271212111" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving notification of events dispatched to objects that are instances of Component or MenuComponent or their subclasses.</source>
          <target state="translated">监听器接口,用于接收发送到Component或MenuComponent或其子类实例的对象的事件通知。</target>
        </trans-unit>
        <trans-unit id="7534bf9eee28537cd9998b81c39c60b881f11322" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving notification of events dispatched to objects that are instances of Component or MenuComponent or their subclasses. Unlike the other EventListeners in this package, AWTEventListeners passively observe events being dispatched in the AWT, system-wide. Most applications should never use this class; applications which might use AWTEventListeners include event recorders for automated testing, and facilities such as the Java Accessibility package.</source>
          <target state="translated">监听器接口,用于接收发送到Component或MenuComponent或其子类实例的对象的事件通知。与本包中的其他EventListeners不同,AWTEventListeners被动地观察AWT中全系统范围内的事件调度。大多数应用程序不应该使用这个类;可能使用AWTEventListeners的应用程序包括用于自动测试的事件记录器,以及Java Accessibility包等设施。</target>
        </trans-unit>
        <trans-unit id="4323395a69ffa98d3d07fcdd4649a11a22402953" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving text events.</source>
          <target state="translated">接收文本事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="938b53fbd4386e3cae1e98bf9f82640c36945784" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving text events. The class that is interested in processing a text event implements this interface. The object created with that class is then registered with a component using the component's &lt;code&gt;addTextListener&lt;/code&gt; method. When the component's text changes, the listener object's &lt;code&gt;textValueChanged&lt;/code&gt; method is invoked.</source>
          <target state="translated">用于接收文本事件的侦听器接口。对处理文本事件感兴趣的类将实现此接口。然后，使用该类创建的对象使用组件的 &lt;code&gt;addTextListener&lt;/code&gt; 方法向该组件注册。当组件的文本更改时，将调用侦听器对象的 &lt;code&gt;textValueChanged&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="930458e2872f62959a7709377c9a5b8539f81548" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving window events.</source>
          <target state="translated">用于接收窗口事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="046ae6aeb700a9000b9edffea84c976746d2574f" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving window events. The class that is interested in processing a window event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;WindowAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a Window using the window's &lt;code&gt;addWindowListener&lt;/code&gt; method. When the window's status changes by virtue of being opened, closed, activated or deactivated, iconified or deiconified, the relevant method in the listener object is invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">用于接收窗口事件的侦听器接口。对处理窗口事件感兴趣的类要么实现此接口（及其包含的所有方法），要么扩展抽象的 &lt;code&gt;WindowAdapter&lt;/code&gt; 类（仅覆盖感兴趣的方法）。然后，使用窗口的 &lt;code&gt;addWindowListener&lt;/code&gt; 方法向该窗口注册从该类创建的侦听器对象。当窗口的状态由于打开，关闭，激活或停用，图标化或去图标化而改变时，将调用侦听器对象中的相关方法，并将 &lt;code&gt;WindowEvent&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="94bd6d305775c68579de461457e8be81bf487d24" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving window state events.</source>
          <target state="translated">用于接收窗口状态事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="2b6d52f6670826cb36f572318c0f36261aa54308" translate="yes" xml:space="preserve">
          <source>The listener interface used by a &lt;a href=&quot;transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; to notify callers of error messages that occur during a transformation process.</source>
          <target state="translated">&lt;a href=&quot;transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt;使用的侦听器接口将在转换过程中发生的错误消息通知调用方。</target>
        </trans-unit>
        <trans-unit id="71f9f61fe4e8ba779f8322dcfde7484914223ec6" translate="yes" xml:space="preserve">
          <source>The listener interface used by a &lt;a href=&quot;transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; to notify callers of error messages that occur during a transformation process. An ErrorListener receives three levels of messages: warnings, errors and fatal errors as classified by their severity. Each of them is handled as described in their respective method.</source>
          <target state="translated">&lt;a href=&quot;transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt;使用的侦听器接口将在转换过程中发生的错误消息通知调用方。ErrorListener接收三个级别的消息：警告，错误和致命错误，按严重性分类。它们中的每一个都按照各自方法中的描述进行处理。</target>
        </trans-unit>
        <trans-unit id="c3a43493fbe188522b28ce60b8adf822abfbed0a" translate="yes" xml:space="preserve">
          <source>The listener is invoked with privileges that are restricted by the calling context of this method. The order in which the listeners are invoked is unspecified.</source>
          <target state="translated">监听器的调用权限受本方法的调用上下文限制。监听器被调用的顺序没有规定。</target>
        </trans-unit>
        <trans-unit id="9400f2b1615e7d08e936f201c493bf222d8d5d3f" translate="yes" xml:space="preserve">
          <source>The listener list.</source>
          <target state="translated">名单上的人。</target>
        </trans-unit>
        <trans-unit id="e4590d176c2f3cdb63c4fefc574df69b196589b3" translate="yes" xml:space="preserve">
          <source>The listener method is executed in the same thread as this method. See the &lt;a href=&quot;package-summary#THREADING&quot;&gt;package description&lt;/a&gt; for more information on threading issues.</source>
          <target state="translated">侦听器方法在与此方法相同的线程中执行。有关线程问题的更多信息，请参见&lt;a href=&quot;package-summary#THREADING&quot;&gt;软件包描述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ed10f8995a36338e91e111a510c1f3b0baf668c" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addKeyListener&lt;/code&gt; method. A keyboard event is generated when a key is pressed, released, or typed. The relevant method in the listener object is then invoked, and the &lt;code&gt;KeyEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">然后使用该组件的 &lt;code&gt;addKeyListener&lt;/code&gt; 方法向该组件注册从该类创建的侦听器对象。按下，释放或键入按键时会生成键盘事件。然后调用侦听器对象中的相关方法，并将 &lt;code&gt;KeyEvent&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="21060f18757cd559d669528f219a8bca2d12923f" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addMouseListener&lt;/code&gt; method. A mouse event is generated when the mouse is pressed, released clicked (pressed and released). A mouse event is also generated when the mouse cursor enters or leaves a component. When a mouse event occurs, the relevant method in the listener object is invoked, and the &lt;code&gt;MouseEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">然后使用该组件的 &lt;code&gt;addMouseListener&lt;/code&gt; 方法向该组件注册从该类创建的侦听器对象。当按下，释放，单击（按下并释放）鼠标时，将生成一个鼠标事件。当鼠标光标进入或离开组件时，也会生成鼠标事件。发生鼠标事件时，将调用侦听器对象中的相关方法，并将 &lt;code&gt;MouseEvent&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="29f8512d75f316740d807a9f3ce730476b012525" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addMouseMotionListener&lt;/code&gt; method. A mouse motion event is generated when the mouse is moved or dragged. (Many such events will be generated). When a mouse motion event occurs, the relevant method in the listener object is invoked, and the &lt;code&gt;MouseEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">然后，使用该组件的 &lt;code&gt;addMouseMotionListener&lt;/code&gt; 方法向该组件注册从该类创建的侦听器对象。移动或拖动鼠标时，将生成鼠标移动事件。（将生成许多此类事件）。发生鼠标移动事件时，将调用侦听器对象中的相关方法，并将 &lt;code&gt;MouseEvent&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="7bde3a9f8c2f35edc65df4054ae9cced53dc0f55" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addMouseWheelListener&lt;/code&gt; method. A mouse wheel event is generated when the mouse wheel is rotated. When a mouse wheel event occurs, that object's &lt;code&gt;mouseWheelMoved&lt;/code&gt; method is invoked.</source>
          <target state="translated">然后使用该组件的 &lt;code&gt;addMouseWheelListener&lt;/code&gt; 方法向该组件注册从该类创建的侦听器对象。旋转鼠标滚轮时会生成一个鼠标滚轮事件。发生鼠标滚轮事件时，将调用该对象的 &lt;code&gt;mouseWheelMoved&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="8462433b24f6ee1894e3c488f73375914de70411" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a window using the &lt;code&gt;Window&lt;/code&gt;'s &lt;code&gt;addWindowStateListener&lt;/code&gt; method. When the window's state changes by virtue of being iconified, maximized etc., the &lt;code&gt;windowStateChanged&lt;/code&gt; method in the listener object is invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">然后使用 &lt;code&gt;Window&lt;/code&gt; 的 &lt;code&gt;addWindowStateListener&lt;/code&gt; 方法向该窗口注册从该类创建的侦听器对象。当通过图标化，最大化等方式改变窗口的状态时，将调用侦听器对象中的 &lt;code&gt;windowStateChanged&lt;/code&gt; 方法，并将 &lt;code&gt;WindowEvent&lt;/code&gt; 传递给它。</target>
        </trans-unit>
        <trans-unit id="62e7843c514bbb78ca4f4720402ec2ddbbae0aa7" translate="yes" xml:space="preserve">
          <source>The listener object that receives notifications is the one that is registered with the given name at the time this method is called. Even if it is subsequently unregistered, it will continue to receive notifications.</source>
          <target state="translated">接收通知的监听器对象是在调用本方法时以给定名称注册的对象。即使它后来被取消注册,它也会继续接收通知。</target>
        </trans-unit>
        <trans-unit id="f9a383f1ca2012ed7089a225fb67552330b9a6d7" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a lists selection value changes.</source>
          <target state="translated">当列表选择值发生变化时通知的监听器。</target>
        </trans-unit>
        <trans-unit id="3c03fc456754958e1ca2af69310e7c90cc61d1de" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node.</source>
          <target state="translated">当一棵树扩展或折叠一个节点时,通知该监听器。</target>
        </trans-unit>
        <trans-unit id="e9dee44b0182c8c0b0a0c8f9892dc7638ded761c" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node. For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">当树扩展或折叠节点时通知的侦听器。有关更多文档和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;如何编写树扩展侦听器&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f236b0e97ac50feb674a6fba5807fe37364f440e" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node. For further documentation and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">当树扩展或折叠节点时通知的侦听器。有关更多文档和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;如何编写树扩展侦听器&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d762ba2d794493894963a774297af06660359b59" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node. For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">当树扩展或折叠节点时通知的侦听器。有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;如何编写树状扩展侦听器&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="295a3b26f9456d1b6eafc7f4fda4973bb06ad61f" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node. For further information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">当树扩展或折叠节点时通知的侦听器。有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;如何编写树状扩展侦听器&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="721b231dea75a2b4cc1ad5ba9849ccb3290dc873" translate="yes" xml:space="preserve">
          <source>The listener that's notified when the selection in a TreeSelectionModel changes.</source>
          <target state="translated">当TreeSelectionModel中的选择发生变化时通知的监听器。</target>
        </trans-unit>
        <trans-unit id="439ef69a7ffa5c27f6bf33edf46a994c872d72ee" translate="yes" xml:space="preserve">
          <source>The listener that's notified when the selection in a TreeSelectionModel changes. For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeselectionlistener.html&quot;&gt;How to Write a Tree Selection Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">当TreeSelectionModel中的选择更改时通知的侦听器。有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeselectionlistener.html&quot;&gt;如何编写树选择侦听器&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a0c4f0dd342df75a9916450805530d1d447ca7a" translate="yes" xml:space="preserve">
          <source>The listener that's notified when the selection in a TreeSelectionModel changes. For more information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeselectionlistener.html&quot;&gt;How to Write a Tree Selection Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">当TreeSelectionModel中的选择更改时通知的侦听器。有关更多信息和示例，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeselectionlistener.html&quot;&gt;如何编写树选择侦听器&lt;/a&gt;&amp;rdquo;一节&lt;em&gt;。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="32532a060b2fbfa14ccb1f188acdf277c1e917e2" translate="yes" xml:space="preserve">
          <source>The listener will be notified whenever an event occurs on this &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">每当此 &lt;code&gt;RowSet&lt;/code&gt; 对象上发生事件时，将通知侦听器。</target>
        </trans-unit>
        <trans-unit id="5a499cf5fe19789e705f2938d0b79e35a4290dd2" translate="yes" xml:space="preserve">
          <source>The listeners waiting for model changes.</source>
          <target state="translated">等待模型变化的听众。</target>
        </trans-unit>
        <trans-unit id="93d4ae77866ed79f0452590354a6b35148aba02e" translate="yes" xml:space="preserve">
          <source>The lists and their &lt;a href=&quot;#subList(int,int)&quot;&gt;&lt;code&gt;subList&lt;/code&gt;&lt;/a&gt; views implement the &lt;a href=&quot;randomaccess&quot;&gt;&lt;code&gt;RandomAccess&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">列表及其&lt;a href=&quot;#subList(int,int)&quot;&gt; &lt;code&gt;subList&lt;/code&gt; &lt;/a&gt;列表视图实现&lt;a href=&quot;randomaccess&quot;&gt; &lt;code&gt;RandomAccess&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="58ed8ea8bc03ea144ba1b908e1725a3240f27929" translate="yes" xml:space="preserve">
          <source>The local date time and first combined to form a local date-time. The local date-time is then resolved to a single instant on the time-line. This is achieved by finding a valid offset from UTC/Greenwich for the local date-time as defined by the &lt;a href=&quot;zone/zonerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; of the zone ID.</source>
          <target state="translated">本地日期时间和第一个时间合并形成一个本地日期时间。然后将本地日期时间解析为时间轴上的单个时刻。这是通过根据区域ID &lt;a href=&quot;zone/zonerules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt;定义的本地日期时间找到UTC /格林威治标准有效偏移量来实现的。</target>
        </trans-unit>
        <trans-unit id="cd77d03e50afe46d82e00a8893f50de031896408" translate="yes" xml:space="preserve">
          <source>The local date-time is expressed in terms of the UTC offset.</source>
          <target state="translated">当地的日期时间以UTC偏移量表示。</target>
        </trans-unit>
        <trans-unit id="062cd543edcf93d28b39a205798c522e0df4cbd0" translate="yes" xml:space="preserve">
          <source>The local date-time is expressed in terms of the standard offset.</source>
          <target state="translated">当地的日期时间用标准偏移量来表示。</target>
        </trans-unit>
        <trans-unit id="43473430726ae9afe2869644c4fa1a6cc3eb2c73" translate="yes" xml:space="preserve">
          <source>The local date-time is expressed in terms of the wall offset.</source>
          <target state="translated">当地的日期时间用墙面偏移量来表示。</target>
        </trans-unit>
        <trans-unit id="9ba325c8ca4eea5edc4128597b124ea80adfafce" translate="yes" xml:space="preserve">
          <source>The local date-time is resolved to a single instant on the time-line. This is achieved by finding a valid offset from UTC/Greenwich for the local date-time as defined by the &lt;a href=&quot;../zone/zonerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; of the zone ID.</source>
          <target state="translated">本地日期时间在时间​​轴上解析为单个时刻。这是通过根据区域ID &lt;a href=&quot;../zone/zonerules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt;定义的本地日期时间找到UTC /格林威治标准有效偏移量来实现的。</target>
        </trans-unit>
        <trans-unit id="dc0d2dd18ffa81c5846139cec04f27fc21a2f918" translate="yes" xml:space="preserve">
          <source>The local date-time is resolved to a single instant on the time-line. This is achieved by finding a valid offset from UTC/Greenwich for the local date-time as defined by the &lt;a href=&quot;zone/zonerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; of the zone ID.</source>
          <target state="translated">本地日期时间在时间​​轴上解析为单个时刻。这是通过根据区域ID &lt;a href=&quot;zone/zonerules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt;定义的本地日期时间找到UTC /格林威治标准有效偏移量来实现的。</target>
        </trans-unit>
        <trans-unit id="f23710a2bfeea2609ac083326e1c68eeaf7a3131" translate="yes" xml:space="preserve">
          <source>The local hostname to connect to.</source>
          <target state="translated">要连接的本地主机名。</target>
        </trans-unit>
        <trans-unit id="67bc6f31d72edc1ff822de3fec3708bde5aa89ea" translate="yes" xml:space="preserve">
          <source>The local name (without prefix).</source>
          <target state="translated">本地名称(不含前缀)。</target>
        </trans-unit>
        <trans-unit id="8e75eca195c8a616553ea521a5e740acb05a3b17" translate="yes" xml:space="preserve">
          <source>The local name, or the empty string if Namespace processing is not being performed, or null if the index is out of range.</source>
          <target state="translated">本地名称,如果没有进行命名空间处理,则为空字符串,如果索引超出范围,则为空。</target>
        </trans-unit>
        <trans-unit id="f6ea3d24c46a396fa3d936ab0cdc9e719b6a5045" translate="yes" xml:space="preserve">
          <source>The local part is not validated as a &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">正如&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;XML的&amp;ldquo;名称空间&amp;rdquo;中&lt;/a&gt;指定的那样，未将本地部分验证为&lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7bf68d3d6ad4f23042f950cf994e4815f792acb7" translate="yes" xml:space="preserve">
          <source>The local part is not validated as a &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">正如&lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;XML的&amp;ldquo;名称空间&amp;rdquo;中&lt;/a&gt;指定的那样，未将本地部分验证为&lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="28603a3e523d1a11d2a1ceeb9552533b74d8f296" translate="yes" xml:space="preserve">
          <source>The local port must be between 0 and 65535 inclusive. A port number of &lt;code&gt;zero&lt;/code&gt; will let the system pick up an ephemeral port in a &lt;code&gt;bind&lt;/code&gt; operation.</source>
          <target state="translated">本地端口必须介于0到65535（含）之间。端口号 &lt;code&gt;zero&lt;/code&gt; 将使系统在 &lt;code&gt;bind&lt;/code&gt; 操作中选择一个临时端口。</target>
        </trans-unit>
        <trans-unit id="01c1227cbd2c58d3edc580370fa60fb57d2529eb" translate="yes" xml:space="preserve">
          <source>The local port number to which this socket is connected.</source>
          <target state="translated">该插座所连接的本地端口号。</target>
        </trans-unit>
        <trans-unit id="d5c20c55cb87df99a369c70cbea570fb23af8461" translate="yes" xml:space="preserve">
          <source>The local port number.</source>
          <target state="translated">本地端口号。</target>
        </trans-unit>
        <trans-unit id="164d4cf144a6005f646e68ccb7201e68e4df1175" translate="yes" xml:space="preserve">
          <source>The local time can be converted to an instant using the standard offset, the wall offset or UTC.</source>
          <target state="translated">当地时间可以使用标准偏移、墙面偏移或UTC转换为即时时间。</target>
        </trans-unit>
        <trans-unit id="930043567de1d9c36d9065d240bbac838f2c72a8" translate="yes" xml:space="preserve">
          <source>The locale 'en_US' will always be present.</source>
          <target state="translated">本地化'en_US'将始终存在。</target>
        </trans-unit>
        <trans-unit id="69fa2a5dc2599c2aef839ef3d763ad4fe4202dc1" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault()&quot;&gt;&lt;code&gt;Locale.getDefault()&lt;/code&gt;&lt;/a&gt;, regardless of any previous invocations of other formatting methods on this object.</source>
          <target state="translated">始终使用的语言环境是&lt;a href=&quot;../util/locale#getDefault()&quot;&gt; &lt;code&gt;Locale.getDefault()&lt;/code&gt; &lt;/a&gt;返回的语言环境，而不管此对象上其他格式化方法的任何先前调用。</target>
        </trans-unit>
        <trans-unit id="a3e873afe8c7896eaad724e6fd9f0691de5d7994" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; category specified, regardless of any previous invocations of other formatting methods on this object.</source>
          <target state="translated">始终使用的语言环境是&lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt; &lt;/a&gt;返回的，指定了&lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; &lt;/a&gt;类别的语言环境，而与该对象上其他格式设置方法的任何先前调用无关。</target>
        </trans-unit>
        <trans-unit id="dc211fe28f69063a85ba24c9840522a2af09d7b2" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; category specified.</source>
          <target state="translated">始终使用的语言环境是&lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt; &lt;/a&gt;返回的，指定了&lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; &lt;/a&gt;类别的语言环境。</target>
        </trans-unit>
        <trans-unit id="6b35dc1cb6dc43f6b2f67f74ddcd4a6124b64160" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault--&quot;&gt;&lt;code&gt;Locale.getDefault()&lt;/code&gt;&lt;/a&gt;, regardless of any previous invocations of other formatting methods on this object.</source>
          <target state="translated">始终使用的语言环境是&lt;a href=&quot;../util/locale#getDefault--&quot;&gt; &lt;code&gt;Locale.getDefault()&lt;/code&gt; &lt;/a&gt;返回的语言环境，而不管此对象上其他格式化方法的任何先前调用。</target>
        </trans-unit>
        <trans-unit id="e47fa25a26b7655787b36c2d11262ab526454c0c" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault--&quot;&gt;&lt;code&gt;Locale.getDefault()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">始终使用的语言环境是&lt;a href=&quot;../util/locale#getDefault--&quot;&gt; &lt;code&gt;Locale.getDefault()&lt;/code&gt; &lt;/a&gt;返回的语言环境。</target>
        </trans-unit>
        <trans-unit id="3d7e04fa09d3af3067039bd45965a73087608eb3" translate="yes" xml:space="preserve">
          <source>The locale independent name of the state.</source>
          <target state="translated">国家的独立地域名称。</target>
        </trans-unit>
        <trans-unit id="73e7d6163fd1d2f45cd9898119ab92faa657b7c8" translate="yes" xml:space="preserve">
          <source>The locale independent name of the state. This is a programmatic name that is not intended to be read by humans.</source>
          <target state="translated">国家的独立于本地环境的名称。这是一个程序化的名称,不打算被人类读取。</target>
        </trans-unit>
        <trans-unit id="f1e6d2a7a476bbe469e93757125a537c9589e962" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault()&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">区域设置由格式化程序确定。此方法直接返回的格式化程序将使用&lt;a href=&quot;../../util/locale#getDefault()&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt;。可以在此方法的结果上使用&lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;来控制语言环境。</target>
        </trans-unit>
        <trans-unit id="782cd591ae328adc75282e93e04de6da0a8ed6cd" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">区域设置由格式化程序确定。此方法直接返回的格式化程序将使用&lt;a href=&quot;../../util/locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt;。可以在此方法的结果上使用&lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;来控制语言环境。</target>
        </trans-unit>
        <trans-unit id="366a0be68a17c43905b7bd782f1e30699df8f11a" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault--&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">语言环境由格式化程序确定。此方法直接返回的格式化程序将使用&lt;a href=&quot;../../util/locale#getDefault--&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt;。可以使用&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;对此方法的结果进行控制。</target>
        </trans-unit>
        <trans-unit id="65991f7ad7454909e91fa953adc69eb74b95bfbb" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault-java.util.Locale.Category-&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">语言环境由格式化程序确定。此方法直接返回的格式化程序将使用&lt;a href=&quot;../../util/locale#getDefault-java.util.Locale.Category-&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt;。可以使用&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt;对此方法的结果进行控制。</target>
        </trans-unit>
        <trans-unit id="bc20fbb44a9773c78c103dd5fcdf6058fe0d0f4b" translate="yes" xml:space="preserve">
          <source>The locale is stored as passed in, without further processing. If the locale has &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt; Unicode extensions&lt;/a&gt;, they may be used later in text processing. To set the chronology, time-zone and decimal style from unicode extensions, see &lt;a href=&quot;#localizedBy(java.util.Locale)&quot;&gt;&lt;code&gt;localizedBy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">语言环境按传入方式存储，无需进一步处理。如果语言环境具有&lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;Unicode扩展名&lt;/a&gt;，则可以稍后在文本处理中使用它们。要从Unicode扩展名设置年代，时区和十进制样式，请参见&lt;a href=&quot;#localizedBy(java.util.Locale)&quot;&gt; &lt;code&gt;localizedBy()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d27a035926e24202e324c8dbaceea94c517d56fb" translate="yes" xml:space="preserve">
          <source>The locale that best represents the language tag.</source>
          <target state="translated">最能代表语言标签的语言环境。</target>
        </trans-unit>
        <trans-unit id="0399622d8514a7a2a23bbbb6e5f585ab4dd83b37" translate="yes" xml:space="preserve">
          <source>The locale used is the &lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt;default locale&lt;/a&gt; for &lt;a href=&quot;locale.category#FORMAT&quot;&gt;formatting&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">使用的语言环境是用于&lt;a href=&quot;locale.category#FORMAT&quot;&gt;格式化&lt;/a&gt;Java虚拟机实例的&lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt;默认语言环境&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ad8955176109149292d2490f96896813a8b15f84" translate="yes" xml:space="preserve">
          <source>The locale used is the &lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt;default locale&lt;/a&gt; for &lt;a href=&quot;locale.category#FORMAT&quot;&gt;formatting&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">所使用的语言环境是用于&lt;a href=&quot;locale.category#FORMAT&quot;&gt;格式化&lt;/a&gt; Java虚拟机实例的&lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt;默认语言环境&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e6a785aadaa78a38e75567a0f703ed28d6b3f7e0" translate="yes" xml:space="preserve">
          <source>The locale-independent names of the parameters. May return a null array if the parameter names aren't known.</source>
          <target state="translated">参数的独立于本地的名称,如果不知道参数名称,可以返回一个空数组。如果不知道参数名称,可能返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="e5bd420f4c65808d7d95a170751fbed05770db22" translate="yes" xml:space="preserve">
          <source>The localized description of this throwable.</source>
          <target state="translated">这个可抛的局部描述。</target>
        </trans-unit>
        <trans-unit id="f6a467b908d5d92876f19e97efb8504a392a6111" translate="yes" xml:space="preserve">
          <source>The localized display name for the property/method/event. This defaults to the same as its programmatic name from getName.</source>
          <target state="translated">属性/方法/事件的本地化显示名称。默认值与getName中的程序名称相同。</target>
        </trans-unit>
        <trans-unit id="41938becbbbdbf5e0fb9f5e208b9fb0515a70942" translate="yes" xml:space="preserve">
          <source>The localized formats are defined in terms of the following parameters, which for a particular locale are taken from that locale's &lt;a href=&quot;../text/decimalformat&quot;&gt;&lt;code&gt;DecimalFormat&lt;/code&gt;&lt;/a&gt; object, &lt;code&gt;df&lt;/code&gt;, and its and &lt;a href=&quot;../text/decimalformatsymbols&quot;&gt;&lt;code&gt;DecimalFormatSymbols&lt;/code&gt;&lt;/a&gt; object, &lt;code&gt;dfs&lt;/code&gt;.</source>
          <target state="translated">本地化的格式是根据以下参数定义的，对于特定的语言环境，这些参数是从该语言环境的&lt;a href=&quot;../text/decimalformat&quot;&gt; &lt;code&gt;DecimalFormat&lt;/code&gt; &lt;/a&gt;对象 &lt;code&gt;df&lt;/code&gt; 以及其and &lt;a href=&quot;../text/decimalformatsymbols&quot;&gt; &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; &lt;/a&gt;对象 &lt;code&gt;dfs&lt;/code&gt; 中获取的。</target>
        </trans-unit>
        <trans-unit id="0cf9e4f2c1f022d7c96c2bda99e0a922ee3b6ae4" translate="yes" xml:space="preserve">
          <source>The location is represented as a 0-thickness caret, that is, it has 0 width if the text is drawn horizontally, and 0 height if the text is drawn vertically. Other text orientations need to be mapped to horizontal or vertical orientation. The rectangle uses absolute screen coordinates.</source>
          <target state="translated">该位置用0厚度的卡点表示,也就是说,如果水平绘制文字,它的宽度为0,如果垂直绘制文字,它的高度为0。其他文字方向需要映射到水平或垂直方向。矩形使用绝对屏幕坐标。</target>
        </trans-unit>
        <trans-unit id="724bef0fd2ea9af49e65ae3c0f10e235a11eb4f9" translate="yes" xml:space="preserve">
          <source>The location of the document or &lt;code&gt;null&lt;/code&gt; if undefined or if the &lt;code&gt;Document&lt;/code&gt; was created using &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt;.</source>
          <target state="translated">文档的位置；如果未定义，或者如果 &lt;code&gt;Document&lt;/code&gt; 是使用 &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt; 创建的，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4c7fbd8183c454de5363e0e106d5247fd0e66513" translate="yes" xml:space="preserve">
          <source>The location of the document or &lt;code&gt;null&lt;/code&gt; if undefined or if the &lt;code&gt;Document&lt;/code&gt; was created using &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt;. No lexical checking is performed when setting this attribute; this could result in a &lt;code&gt;null&lt;/code&gt; value returned when using &lt;code&gt;Node.baseURI&lt;/code&gt; .</source>
          <target state="translated">文档的位置；如果未定义，或者如果 &lt;code&gt;Document&lt;/code&gt; 是使用 &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt; 创建的，则为 &lt;code&gt;null&lt;/code&gt; 。设置此属性时，不执行任何词法检查；使用 &lt;code&gt;Node.baseURI&lt;/code&gt; 时，这可能导致返回 &lt;code&gt;null&lt;/code&gt; 值。</target>
        </trans-unit>
        <trans-unit id="e62a857411e0950715cc33c61e291929b293cbd3" translate="yes" xml:space="preserve">
          <source>The location of the error.</source>
          <target state="translated">错误的位置。</target>
        </trans-unit>
        <trans-unit id="43ca4ec04cf16a4dddcecc08b9428340938a4429" translate="yes" xml:space="preserve">
          <source>The location of the last offset calculation that is valid.</source>
          <target state="translated">最后一次偏移计算有效的位置。</target>
        </trans-unit>
        <trans-unit id="16fcde1074fbb51aa34a7605e3bb5a9d694593b1" translate="yes" xml:space="preserve">
          <source>The location of the style sheet to be imported.</source>
          <target state="translated">要导入的样式表的位置。</target>
        </trans-unit>
        <trans-unit id="bd53f70d92650dcac56665537eaed5e360915bb1" translate="yes" xml:space="preserve">
          <source>The location of the style sheet to be imported. The attribute will not contain the &lt;code&gt;&quot;url(...)&quot;&lt;/code&gt; specifier around the URI.</source>
          <target state="translated">要导入的样式表的位置。该属性将不包含URI周围的 &lt;code&gt;&quot;url(...)&quot;&lt;/code&gt; 说明符。</target>
        </trans-unit>
        <trans-unit id="c5c074507fcf47cdfff3a6cb060d1c4bb23a59b6" translate="yes" xml:space="preserve">
          <source>The location or an empty &lt;code&gt;Optional&lt;/code&gt; if not known</source>
          <target state="translated">位置，如果未知则为空 &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bc5f7897b9b13130f88e8ac225afff134b290bc" translate="yes" xml:space="preserve">
          <source>The location string</source>
          <target state="translated">位置字符串</target>
        </trans-unit>
        <trans-unit id="d43499cca4d0c0e95f567286ba7e24dead4afe12" translate="yes" xml:space="preserve">
          <source>The locator allows the application to determine the end position of any document-related event, even if the parser is not reporting an error. Typically, the application will use this information for reporting its own errors (such as character content that does not match an application's business rules). The information returned by the locator is probably not sufficient for use with a search engine.</source>
          <target state="translated">定位器允许应用程序确定任何文档相关事件的结束位置,即使解析器没有报告错误。通常情况下,应用程序将使用此信息来报告自己的错误(例如不符合应用程序业务规则的字符内容)。定位器返回的信息可能不足以用于搜索引擎。</target>
        </trans-unit>
        <trans-unit id="6f1ed4b2d7d8226fd944d0cbe6eea2ec95a9f2b3" translate="yes" xml:space="preserve">
          <source>The lock associated with this &lt;code&gt;Condition&lt;/code&gt; is atomically released and the current thread becomes disabled for thread scheduling purposes and lies dormant until &lt;em&gt;one&lt;/em&gt; of four things happens:</source>
          <target state="translated">与此相关的锁定 &lt;code&gt;Condition&lt;/code&gt; 是原子方式释放，并且当前线程用于线程调度目的，禁用和处于休眠状态，直到&lt;em&gt;一个&lt;/em&gt;的四件事情发生：</target>
        </trans-unit>
        <trans-unit id="61d711789cff8fa58268433d15e08dadb98f0892" translate="yes" xml:space="preserve">
          <source>The lock associated with this condition is atomically released and the current thread becomes disabled for thread scheduling purposes and lies dormant until &lt;em&gt;one&lt;/em&gt; of five things happens:</source>
          <target state="translated">与此条件相关的锁以原子方式释放，并且当前线程用于线程调度目的，禁用和处于休眠状态，直到&lt;em&gt;一个&lt;/em&gt;的五件事情发生：</target>
        </trans-unit>
        <trans-unit id="65da01b12ed06c1129194ab04ecdfefe3305ba72" translate="yes" xml:space="preserve">
          <source>The lock associated with this condition is atomically released and the current thread becomes disabled for thread scheduling purposes and lies dormant until &lt;em&gt;one&lt;/em&gt; of three things happens:</source>
          <target state="translated">与此条件相关的锁以原子方式释放，并且当前线程用于线程调度目的，禁用和处于休眠状态，直到&lt;em&gt;一个&lt;/em&gt;三件事情发生：</target>
        </trans-unit>
        <trans-unit id="a3f9b6f8110f68ff501a635d948cf5536975a242" translate="yes" xml:space="preserve">
          <source>The lock is acquired by the current thread; or</source>
          <target state="translated">锁定由当前线程获得;或</target>
        </trans-unit>
        <trans-unit id="bbc7e7e6345309fe74fecb274268a17d149329cf" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;#readLock()&quot;&gt;&lt;code&gt;readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法&lt;a href=&quot;#readLock()&quot;&gt; &lt;code&gt;readLock()&lt;/code&gt; &lt;/a&gt;返回的锁。</target>
        </trans-unit>
        <trans-unit id="82a202c86804101245aa87611d0e365e06ad2c1f" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;#writeLock()&quot;&gt;&lt;code&gt;writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法&lt;a href=&quot;#writeLock()&quot;&gt; &lt;code&gt;writeLock()&lt;/code&gt; &lt;/a&gt;返回的锁。</target>
        </trans-unit>
        <trans-unit id="23315cf702ddd4b0be90689a9788330de51e0d4d" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;readwritelock#readLock()&quot;&gt;&lt;code&gt;ReadWriteLock.readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法&lt;a href=&quot;readwritelock#readLock()&quot;&gt; &lt;code&gt;ReadWriteLock.readLock()&lt;/code&gt; &lt;/a&gt;返回的锁。</target>
        </trans-unit>
        <trans-unit id="56c7affd56a555e9fcf7d1093f497b2b16d518a4" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;readwritelock#writeLock()&quot;&gt;&lt;code&gt;ReadWriteLock.writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法&lt;a href=&quot;readwritelock#writeLock()&quot;&gt; &lt;code&gt;ReadWriteLock.writeLock()&lt;/code&gt; &lt;/a&gt;返回的锁。</target>
        </trans-unit>
        <trans-unit id="0072d09fd66f1487f8e8bb5641f7beb40597488c" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#readLock()&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法&lt;a href=&quot;reentrantreadwritelock#readLock()&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.readLock()&lt;/code&gt; &lt;/a&gt;返回的锁。</target>
        </trans-unit>
        <trans-unit id="936446f11735d6f00e64d3dc5894e2b30dc3b6a3" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法&lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.readLock()&lt;/code&gt; &lt;/a&gt;返回的锁。</target>
        </trans-unit>
        <trans-unit id="a63fbd323480ae7eac9b087b684a954032e23d63" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt;&lt;code&gt;readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法&lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt; &lt;code&gt;readLock()&lt;/code&gt; &lt;/a&gt;返回的锁。</target>
        </trans-unit>
        <trans-unit id="21893c0407686ad33ab1139bb10fbcd160c1129d" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#writeLock()&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法&lt;a href=&quot;reentrantreadwritelock#writeLock()&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.writeLock()&lt;/code&gt; &lt;/a&gt;返回的锁。</target>
        </trans-unit>
        <trans-unit id="39b8fdb8be94320a454a1547f61b7660e9a57cf7" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法&lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.writeLock()&lt;/code&gt; &lt;/a&gt;返回的锁。</target>
        </trans-unit>
        <trans-unit id="905e63fe2eb05904cf02aa94f5b5e717a84245ed" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt;&lt;code&gt;writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法&lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt; &lt;code&gt;writeLock()&lt;/code&gt; &lt;/a&gt;返回的锁。</target>
        </trans-unit>
        <trans-unit id="47ca08ec8ab201e5079422dee8f4a34be221eb71" translate="yes" xml:space="preserve">
          <source>The locks held on a particular file by a single Java virtual machine do not overlap. The &lt;a href=&quot;#overlaps(long,long)&quot;&gt;&lt;code&gt;overlaps&lt;/code&gt;&lt;/a&gt; method may be used to test whether a candidate lock range overlaps an existing lock.</source>
          <target state="translated">单个Java虚拟机保留在特定文件上的锁不重叠。的&lt;a href=&quot;#overlaps(long,long)&quot;&gt; &lt;code&gt;overlaps&lt;/code&gt; &lt;/a&gt;方法可以用于测试候选锁定范围是否重叠的现有锁。</target>
        </trans-unit>
        <trans-unit id="45d3fceafada8cb1318b2a1c9ef2a9a359190c9a" translate="yes" xml:space="preserve">
          <source>The locks held on a particular file by a single Java virtual machine do not overlap. The &lt;a href=&quot;filelock#overlaps-long-long-&quot;&gt;&lt;code&gt;overlaps&lt;/code&gt;&lt;/a&gt; method may be used to test whether a candidate lock range overlaps an existing lock.</source>
          <target state="translated">单个Java虚拟机保留在特定文件上的锁不重叠。的&lt;a href=&quot;filelock#overlaps-long-long-&quot;&gt; &lt;code&gt;overlaps&lt;/code&gt; &lt;/a&gt;方法可以用于测试候选锁定范围是否重叠的现有锁。</target>
        </trans-unit>
        <trans-unit id="8b536145c701b36ffc6ce15241826909032276e3" translate="yes" xml:space="preserve">
          <source>The log level can be configured based on the properties from the logging configuration file, as described in the description of the LogManager class. However it may also be dynamically changed by calls on the Logger.setLevel method. If a logger's level is changed the change may also affect child loggers, since any child logger that has &lt;code&gt;null&lt;/code&gt; as its level will inherit its effective level from its parent.</source>
          <target state="translated">可以根据日志配置文件中的属性来配置日志级别，如LogManager类的描述中所述。但是，也可以通过调用Logger.setLevel方法来动态更改它。如果更改了记录器的级别，则该更改也可能会影响子记录器，因为任何级别为 &lt;code&gt;null&lt;/code&gt; 子记录器都将从其父级继承其有效级别。</target>
        </trans-unit>
        <trans-unit id="07735f84aee92e88e5622726dcab14478e640923" translate="yes" xml:space="preserve">
          <source>The log writer is a character output stream to which all logging and tracing messages for this data source will be printed. This includes messages printed by the methods of this object, messages printed by methods of other objects manufactured by this object, and so on. Messages printed to a data source specific log writer are not printed to the log writer associated with the &lt;code&gt;java.sql.DriverManager&lt;/code&gt; class. When a &lt;code&gt;DataSource&lt;/code&gt; object is created, the log writer is initially null; in other words, the default is for logging to be disabled.</source>
          <target state="translated">日志编写器是一个字符输出流，此数据源的所有日志记录和跟踪消息都将打印到该字符输出流。这包括通过此对象的方法打印的消息，通过此对象制造的其他对象的方法打印的消息，等等。打印到特定于数据源的日志编写器的消息不会打印到与 &lt;code&gt;java.sql.DriverManager&lt;/code&gt; 类关联的日志编写器。当一个 &lt;code&gt;DataSource&lt;/code&gt; 创建对象时，日志writer最初为null;换句话说，默认是禁用日志记录。</target>
        </trans-unit>
        <trans-unit id="5cccadbef627b3bf817508c7a75663e7f418adec" translate="yes" xml:space="preserve">
          <source>The log writer is a character output stream to which all logging and tracing messages for this data source will be printed. This includes messages printed by the methods of this object, messages printed by methods of other objects manufactured by this object, and so on. Messages printed to a data source- specific log writer are not printed to the log writer associated with the &lt;code&gt;java.sql.DriverManager&lt;/code&gt; class. When a &lt;code&gt;DataSource&lt;/code&gt; object is created the log writer is initially null; in other words, the default is for logging to be disabled.</source>
          <target state="translated">日志编写器是一个字符输出流，此数据源的所有日志记录和跟踪消息都将打印到该字符输出流。这包括通过此对象的方法打印的消息，通过此对象制造的其他对象的方法打印的消息，等等。打印到特定于数据源的日志编写器的消息不会打印到与 &lt;code&gt;java.sql.DriverManager&lt;/code&gt; 类关联的日志编写器。当一个 &lt;code&gt;DataSource&lt;/code&gt; 创建对象的日志writer最初为null; 换句话说，默认是禁用日志记录。</target>
        </trans-unit>
        <trans-unit id="5efe6a79a4cc53f2502e279de30e6e5f2feda9d7" translate="yes" xml:space="preserve">
          <source>The logger will be initially configured with a null Level and with useParentHandlers set to true.</source>
          <target state="translated">记录仪将以空级别进行初始配置,并将 useParentHandlers 设置为 true。</target>
        </trans-unit>
        <trans-unit id="136797d5f389dccc8697d89b60c4d8a0eba2f6fd" translate="yes" xml:space="preserve">
          <source>The logging methods are grouped in five main categories:</source>
          <target state="translated">测井方法主要分为五类。</target>
        </trans-unit>
        <trans-unit id="641b7e7a10638613ca35f5abccd985aaf6071af7" translate="yes" xml:space="preserve">
          <source>The logging request was made initially to a &lt;code&gt;Logger&lt;/code&gt; object, which initialized the &lt;code&gt;LogRecord&lt;/code&gt; and forwarded it here.</source>
          <target state="translated">最初向 &lt;code&gt;Logger&lt;/code&gt; 对象发出日志记录请求，该对象初始化 &lt;code&gt;LogRecord&lt;/code&gt; 并将其转发到此处。</target>
        </trans-unit>
        <trans-unit id="1d108ce9ead2995d5648f2a343727b8efa189c0c" translate="yes" xml:space="preserve">
          <source>The logical &lt;code&gt;Connection&lt;/code&gt; is closed by calling &lt;code&gt;Connection.close&lt;/code&gt; prior to returning the &lt;code&gt;PooledConnection&lt;/code&gt; to the cache.</source>
          <target state="translated">在将 &lt;code&gt;PooledConnection&lt;/code&gt; 返回到缓存之前，可以通过调用 &lt;code&gt;Connection.close&lt;/code&gt; 来关闭逻辑 &lt;code&gt;Connection&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6dad57151ed4626619c50b76ba68fff7c40b5807" translate="yes" xml:space="preserve">
          <source>The logical bounds of the text will be filled using this &lt;code&gt;Paint&lt;/code&gt;, and then the text will be rendered on top of it (but see &lt;a href=&quot;#SWAP_COLORS&quot;&gt;&lt;code&gt;SWAP_COLORS&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">文本的逻辑边界将使用此 &lt;code&gt;Paint&lt;/code&gt; 填充，然后将文本呈现在其顶部（但请参阅&lt;a href=&quot;#SWAP_COLORS&quot;&gt; &lt;code&gt;SWAP_COLORS&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="136e6cda260b4679498d4d36f7be0ae33707be48" translate="yes" xml:space="preserve">
          <source>The logical name of this &lt;code&gt;Font&lt;/code&gt;, as passed to the constructor.</source>
          <target state="translated">传递给构造函数的此 &lt;code&gt;Font&lt;/code&gt; 的逻辑名称。</target>
        </trans-unit>
        <trans-unit id="4d8db4df86dcda2ace25e40dbb938ffa56000bcb" translate="yes" xml:space="preserve">
          <source>The logical selection ranges are 0-3, 4-6 (ABC, ef) because the visually contiguous text is logically discontiguous. Also note that since the rightmost position on the layout (to the right of 'A') is selected, the selection is extended to the right of the bounds.</source>
          <target state="translated">逻辑选择范围是0-3、4-6(ABC、ef),因为视觉毗连的文字在逻辑上是不毗连的。另外要注意的是,由于选择了布局上最右边的位置(A的右边),所以选择范围扩展到边界的右边。</target>
        </trans-unit>
        <trans-unit id="c39967c867e0bcc330b56743772ed038a1947efc" translate="yes" xml:space="preserve">
          <source>The logical style choice action identifier The logical style is passed in as an argument</source>
          <target state="translated">逻辑风格选择动作标识符 逻辑风格作为参数传递进来。</target>
        </trans-unit>
        <trans-unit id="f3195ba410c910cb1453bdf6d15fa282cb473f14" translate="yes" xml:space="preserve">
          <source>The long at the buffer's current position</source>
          <target state="translated">缓冲区当前位置的多头。</target>
        </trans-unit>
        <trans-unit id="9b857784a51cb5186a4c310af8fad668265cd2f5" translate="yes" xml:space="preserve">
          <source>The long at the given index</source>
          <target state="translated">在给定指数上的多头</target>
        </trans-unit>
        <trans-unit id="d925d78726502c1517a0719c5c67fa836bb30baf" translate="yes" xml:space="preserve">
          <source>The long buffer is not modified by this method, and no reference to the buffer is retained by the bit set.</source>
          <target state="translated">长缓冲区不会被这种方法修改,也不会通过设置位保留对缓冲区的引用。</target>
        </trans-unit>
        <trans-unit id="b26bffcfbc958bd15ecb825f2a9fae2f40f6a817" translate="yes" xml:space="preserve">
          <source>The long value at the buffer's current position</source>
          <target state="translated">缓冲区当前位置的长值。</target>
        </trans-unit>
        <trans-unit id="c79239282ea84b694c2ff3f7994ebbc2e5632bef" translate="yes" xml:space="preserve">
          <source>The long value at the given index</source>
          <target state="translated">给定指数的长值</target>
        </trans-unit>
        <trans-unit id="dfaf557e40de816032daab1d1e5fa1bca6c17fee" translate="yes" xml:space="preserve">
          <source>The longest parameter list (which is necessarily unique) is called the &quot;external parameter list&quot; (&lt;code&gt;(A...)&lt;/code&gt;).</source>
          <target state="translated">最长的参数列表（必须是唯一的）称为&amp;ldquo;外部参数列表&amp;rdquo;（ &lt;code&gt;(A...)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1d72b29a13e96aa2ab5bec4f4960d9bf05dd4ca7" translate="yes" xml:space="preserve">
          <source>The longs between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the long at index</source>
          <target state="translated">缓冲区当前位置和极限位置之间的长线,如果有的话,会被复制到缓冲区的开头。也就是说,位于索引</target>
        </trans-unit>
        <trans-unit id="8f97430d73cc9eb412585724172865d7a0204ec4" translate="yes" xml:space="preserve">
          <source>The look and feel can be specified in two distinct ways: by specifying the fully qualified name of the class for the look and feel, or by creating an instance of &lt;code&gt;LookAndFeel&lt;/code&gt; and passing it to &lt;code&gt;setLookAndFeel&lt;/code&gt;. The following example illustrates setting the look and feel to the system look and feel:</source>
          <target state="translated">可以通过两种不同的方式来指定外观：通过为外观指定类的完全限定名称，或者通过创建 &lt;code&gt;LookAndFeel&lt;/code&gt; 的实例并将其传递给 &lt;code&gt;setLookAndFeel&lt;/code&gt; 。以下示例说明了将外观设置为系统外观的方法：</target>
        </trans-unit>
        <trans-unit id="a463f1c161b0d4fb031b15ef8115b10141fc9f2d" translate="yes" xml:space="preserve">
          <source>The look and feel delegate for this component.</source>
          <target state="translated">该组件的外观和感觉委托。</target>
        </trans-unit>
        <trans-unit id="db4d630ff9e9a96eaf54953466e703b389363e92" translate="yes" xml:space="preserve">
          <source>The lookup context here is determined by the &lt;a href=&quot;#lookupClass()&quot;&gt;lookup class&lt;/a&gt; and the &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt;.</source>
          <target state="translated">这里的查找上下文由&lt;a href=&quot;#lookupClass()&quot;&gt;查找类&lt;/a&gt;和&lt;a href=&quot;#lookupModes()&quot;&gt;查找模式确定&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40975c4dee3ca2e0f78259cd0ab4e0ceb950d836" translate="yes" xml:space="preserve">
          <source>The lookup context here is determined by the &lt;a href=&quot;#lookupClass()&quot;&gt;lookup class&lt;/a&gt;, its class loader, and the &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt;.</source>
          <target state="translated">这里的查找上下文由&lt;a href=&quot;#lookupClass()&quot;&gt;查找类&lt;/a&gt;，其类加载器和&lt;a href=&quot;#lookupModes()&quot;&gt;查找模式确定&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="724d90431dc6c40dfa771623abe64fe926c9582a" translate="yes" xml:space="preserve">
          <source>The lookup context here is determined by the &lt;a href=&quot;#lookupClass()&quot;&gt;lookup class&lt;/a&gt;, its class loader, and the &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt;. In particular, the method first attempts to load the requested class, and then determines whether the class is accessible to this lookup object.</source>
          <target state="translated">这里的查找上下文由&lt;a href=&quot;#lookupClass()&quot;&gt;查找类&lt;/a&gt;，其类加载器和&lt;a href=&quot;#lookupModes()&quot;&gt;查找模式确定&lt;/a&gt;。特别是，该方法首先尝试加载请求的类，然后确定该查找对象是否可以访问该类。</target>
        </trans-unit>
        <trans-unit id="115845b78e3d345e654654b29fbc9a49e13cfd06" translate="yes" xml:space="preserve">
          <source>The lookup descriptor string has the same format as for the lookup methods on &lt;a href=&quot;../invoke/methodhandles.lookup&quot;&gt;&lt;code&gt;MethodHandles.Lookup&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;kind&lt;/code&gt; is &lt;code&gt;CONSTRUCTOR&lt;/code&gt;, the name is ignored and the return type of the lookup type must be &lt;code&gt;void&lt;/code&gt;. If &lt;code&gt;kind&lt;/code&gt; corresponds to a virtual method invocation, the lookup type includes the method parameters but not the receiver type.</source>
          <target state="translated">查找描述符字符串的格式与&lt;a href=&quot;../invoke/methodhandles.lookup&quot;&gt; &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; &lt;/a&gt;上的查找方法的格式相同。如果 &lt;code&gt;kind&lt;/code&gt; 为 &lt;code&gt;CONSTRUCTOR&lt;/code&gt; ，则名称将被忽略，并且查找类型的返回类型必须为 &lt;code&gt;void&lt;/code&gt; 。如果 &lt;code&gt;kind&lt;/code&gt; 对应于虚拟方法调用，则查找类型包括方法参数，但不包括接收者类型。</target>
        </trans-unit>
        <trans-unit id="b272f649079873d2e863da4a821d90ce67298a81" translate="yes" xml:space="preserve">
          <source>The lookup descriptor string has the same format as for the various variants of &lt;code&gt;CONSTANT_MethodHandle_info&lt;/code&gt; and for the lookup methods on &lt;a href=&quot;../invoke/methodhandles.lookup&quot;&gt;&lt;code&gt;MethodHandles.Lookup&lt;/code&gt;&lt;/a&gt;. For a method or constructor invocation, it is interpreted as a method type descriptor; for field access, it is interpreted as a field descriptor. If &lt;code&gt;kind&lt;/code&gt; is &lt;code&gt;CONSTRUCTOR&lt;/code&gt;, the &lt;code&gt;name&lt;/code&gt; parameter is ignored and the return type of the lookup descriptor must be &lt;code&gt;void&lt;/code&gt;. If &lt;code&gt;kind&lt;/code&gt; corresponds to a virtual method invocation, the lookup type includes the method parameters but not the receiver type.</source>
          <target state="translated">查找描述符字符串的格式与 &lt;code&gt;CONSTANT_MethodHandle_info&lt;/code&gt; 的各种变体以及&lt;a href=&quot;../invoke/methodhandles.lookup&quot;&gt; &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; &lt;/a&gt;上的查找方法的格式相同。对于方法或构造函数调用，它被解释为方法类型描述符；对于字段访问，它被解释为字段描述符。如果 &lt;code&gt;kind&lt;/code&gt; 为 &lt;code&gt;CONSTRUCTOR&lt;/code&gt; ，则将忽略 &lt;code&gt;name&lt;/code&gt; 参数，并且查找描述符的返回类型必须为 &lt;code&gt;void&lt;/code&gt; 。如果 &lt;code&gt;kind&lt;/code&gt; 对应于虚拟方法调用，则查找类型包括方法参数，但不包括接收者类型。</target>
        </trans-unit>
        <trans-unit id="5c72e04246b336a2af96b0479870fef89b228464" translate="yes" xml:space="preserve">
          <source>The lookup has the &lt;a href=&quot;methodhandles.lookup#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt; lookup mode.</source>
          <target state="translated">查找具有&lt;a href=&quot;methodhandles.lookup#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt;查找模式。</target>
        </trans-unit>
        <trans-unit id="1dafcee2bd49424918b839236e0943f9a18e833f" translate="yes" xml:space="preserve">
          <source>The lookup operation returns the best matching language tags. It is defined in RFC 4647 as follows: &quot;By contrast with filtering, each language range represents the most specific tag that is an acceptable match. The first matching tag found, according to the user's priority, is considered the closest match and is the item returned.&quot;</source>
          <target state="translated">查找操作返回最佳匹配的语言标记。RFC 4647对它的定义如下。&quot;与过滤相反,每个语言范围代表了可接受匹配的最具体的标签。根据用户的优先级,找到的第一个匹配标签被认为是最接近的匹配,是返回的项目。&quot;</target>
        </trans-unit>
        <trans-unit id="582ea1d78ac5e0bbdf20061d342770ab78ddb355" translate="yes" xml:space="preserve">
          <source>The loop counter &lt;code&gt;i&lt;/code&gt; is a loop iteration variable of type &lt;code&gt;int&lt;/code&gt;. The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; handles determine the start (inclusive) and end (exclusive) values of the loop counter. The loop counter will be initialized to the &lt;code&gt;int&lt;/code&gt; value returned from the evaluation of the &lt;code&gt;start&lt;/code&gt; handle and run to the value returned from &lt;code&gt;end&lt;/code&gt; (exclusively) with a step width of 1.</source>
          <target state="translated">循环计数器 &lt;code&gt;i&lt;/code&gt; 是 &lt;code&gt;int&lt;/code&gt; 类型的循环迭代变量。在 &lt;code&gt;start&lt;/code&gt; 和 &lt;code&gt;end&lt;/code&gt; 手柄确定循环计数器的开始（含）和结束（独家）值。循环计数器将被初始化为从 &lt;code&gt;start&lt;/code&gt; 句柄的评估返回的 &lt;code&gt;int&lt;/code&gt; 值，并以步长为1的方式运行到从 &lt;code&gt;end&lt;/code&gt; （排他地）返回的值。</target>
        </trans-unit>
        <trans-unit id="5820f1110b4ac8206be50aedb9a96eb1dee59652" translate="yes" xml:space="preserve">
          <source>The loop handle's parameter types are the types &lt;code&gt;(A...)&lt;/code&gt;, from the external parameter list.</source>
          <target state="translated">循环句柄的参数类型是外部参数列表中的 &lt;code&gt;(A...)&lt;/code&gt; 类型。</target>
        </trans-unit>
        <trans-unit id="05c190dd921348eef4cc73ac43f724bbb06cf616" translate="yes" xml:space="preserve">
          <source>The loop handle's result type is the result type &lt;code&gt;V&lt;/code&gt; of the body.</source>
          <target state="translated">循环句柄的结果类型是主体的结果类型 &lt;code&gt;V&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b15aba7014ff4a3b81f3cf9a325dec861715d64" translate="yes" xml:space="preserve">
          <source>The low threshold value.</source>
          <target state="translated">低门槛值。</target>
        </trans-unit>
        <trans-unit id="e1027b0c41f8a52e9615bc3f18f897cf025a055b" translate="yes" xml:space="preserve">
          <source>The low-level description of the method</source>
          <target state="translated">该方法的低级描述</target>
        </trans-unit>
        <trans-unit id="ffff1c68c1a0ba5294760be0d89a2dde4ba6c681" translate="yes" xml:space="preserve">
          <source>The lower bound for the value.</source>
          <target state="translated">值的下限。</target>
        </trans-unit>
        <trans-unit id="e619709126d9f839cc6e96eab8827b8daf2ca29f" translate="yes" xml:space="preserve">
          <source>The lower grades of synchronization are known as</source>
          <target state="translated">低等级的同步化被称为</target>
        </trans-unit>
        <trans-unit id="89c09aa4a3982e510232a448559f376283539736" translate="yes" xml:space="preserve">
          <source>The lowercase letters &lt;code&gt;'a'&lt;/code&gt; through &lt;code&gt;'z'&lt;/code&gt; (&lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007a'&lt;/code&gt;),</source>
          <target state="translated">小写字母 &lt;code&gt;'a'&lt;/code&gt; 到 &lt;code&gt;'z'&lt;/code&gt; （ &lt;code&gt;'\u0061'&lt;/code&gt; 到 &lt;code&gt;'\u007a'&lt;/code&gt; ），</target>
        </trans-unit>
        <trans-unit id="e7adbe88d306194f65bd3e489d21fb2637f8310d" translate="yes" xml:space="preserve">
          <source>The lowest justification priority.</source>
          <target state="translated">最低的理由优先级。</target>
        </trans-unit>
        <trans-unit id="7f05176865317c7a2037690568a4839fcef6385c" translate="yes" xml:space="preserve">
          <source>The lowest level of synchronization is simply writing any changes made to the &lt;code&gt;RowSet&lt;/code&gt; object to its underlying data source. The writer does nothing to check for conflicts. If there is a conflict and the data source values are overwritten, the changes other parties have made by to the data source are lost.</source>
          <target state="translated">最低级别的同步只是将对 &lt;code&gt;RowSet&lt;/code&gt; 对象所做的任何更改写入其基础数据源。作者不检查任何冲突。如果存在冲突并且数据源值被覆盖，则其他方对数据源所做的更改将丢失。</target>
        </trans-unit>
        <trans-unit id="c289c722dc9ced058183a4c8dddca407e0a3bc2d" translate="yes" xml:space="preserve">
          <source>The lowest scope. Returns -1 if no attribute with the given name is defined in any scope.</source>
          <target state="translated">最低的作用域。如果在任何作用域中没有定义给定名称的属性,则返回-1。</target>
        </trans-unit>
        <trans-unit id="4ad9007613dd197a0fbc0803b4bc74f8f25064fb" translate="yes" xml:space="preserve">
          <source>The lub of the exception parameter</source>
          <target state="translated">异常参数的润滑</target>
        </trans-unit>
        <trans-unit id="bd3e31a106389ea2a7d2a231b5298c5fd7241a88" translate="yes" xml:space="preserve">
          <source>The m-let service extends the &lt;code&gt;java.net.URLClassLoader&lt;/code&gt; and can be used to load remote classes and jar files in the VM of the agent.</source>
          <target state="translated">m-let服务扩展了 &lt;code&gt;java.net.URLClassLoader&lt;/code&gt; ，可用于在代理的VM中加载远程类和jar文件。</target>
        </trans-unit>
        <trans-unit id="76e9f4ba76cdff11494ca93f5ded5f00aaee995c" translate="yes" xml:space="preserve">
          <source>The magic caret position is set to null when the caret position changes. A timer is used to determine the new location (after the caret change). When the timer fires, if the magic caret position is still null it is reset to the current caret position. Any actions that change the caret position and want the magic caret position to remain the same, must remember the magic caret position, change the cursor, and then set the magic caret position to its original value. This has the benefit that only actions that want the magic caret position to persist (such as open/down) need to know about it.</source>
          <target state="translated">魔法卡口位置改变时,魔法卡口位置被设置为空。定时器用于确定新的位置(在标线改变后)。当定时器启动时,如果魔力坐标位置仍然为空,则会被重置为当前坐标位置。任何改变偏移位置的操作,如果想让魔法偏移位置保持不变,必须记住魔法偏移位置,改变光标,然后将魔法偏移位置设置为原始值。这样做的好处是,只有那些想让魔术符位置保持不变的操作(比如打开/关闭)才需要知道它。</target>
        </trans-unit>
        <trans-unit id="9f854df23c307bcb9e34b9849451f1d804656d22" translate="yes" xml:space="preserve">
          <source>The magnitude is formatted as the integer part of</source>
          <target state="translated">的整数部分格式化。</target>
        </trans-unit>
        <trans-unit id="de144eeaeb048750a7b6ca494a4484b91c3ca8c0" translate="yes" xml:space="preserve">
          <source>The main API for dates, times, instants, and durations.</source>
          <target state="translated">日期、时间、瞬间和持续时间的主要API。</target>
        </trans-unit>
        <trans-unit id="87ad397b72e4e2670cb9fd154ad2b5c78ebccb49" translate="yes" xml:space="preserve">
          <source>The main API is based around the calendar system defined in ISO-8601. However, there are other calendar systems, and this package provides basic support for them. The alternate calendars are provided in the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.time.chrono&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">主要API基于ISO-8601中定义的日历系统。但是，还有其他日历系统，此程序包为它们提供了基本支持。备用日历在&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.time.chrono&lt;/code&gt; &lt;/a&gt;包中提供。</target>
        </trans-unit>
        <trans-unit id="8c8f745cb8e21c4eb3d06ea2d2c82dc8a5899e5a" translate="yes" xml:space="preserve">
          <source>The main areas of functionality of &lt;code&gt;javax.script&lt;/code&gt; package include</source>
          <target state="translated">&lt;code&gt;javax.script&lt;/code&gt; 软件包的主要功能范围包括</target>
        </trans-unit>
        <trans-unit id="fa38b9d3cc817e051120893ceae532dec4aa8c9a" translate="yes" xml:space="preserve">
          <source>The main class for creating a dialog window.</source>
          <target state="translated">创建对话窗口的主类。</target>
        </trans-unit>
        <trans-unit id="6c1502deae96e4a60d2e7e71a3c7ca6c943736aa" translate="yes" xml:space="preserve">
          <source>The main class for creating a dialog window. You can use this class to create a custom dialog, or invoke the many class methods in &lt;a href=&quot;joptionpane&quot;&gt;&lt;code&gt;JOptionPane&lt;/code&gt;&lt;/a&gt; to create a variety of standard dialogs. For information about creating dialogs, see &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs&lt;/a&gt;.</source>
          <target state="translated">创建对话框窗口的主要类。您可以使用此类创建自定义对话框，或者调用&lt;a href=&quot;joptionpane&quot;&gt; &lt;code&gt;JOptionPane&lt;/code&gt; 中&lt;/a&gt;的许多类方法来创建各种标准对话框。有关创建对话框的信息，请参见&lt;em&gt;Java教程&lt;/em&gt;部分&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;如何制作对话框&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="97bb8e37bd5c9c59f40ebeba9d77505224afb692" translate="yes" xml:space="preserve">
          <source>The main class for creating a dialog window. You can use this class to create a custom dialog, or invoke the many class methods in &lt;a href=&quot;joptionpane&quot;&gt;&lt;code&gt;JOptionPane&lt;/code&gt;&lt;/a&gt; to create a variety of standard dialogs. For information about creating dialogs, see &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs&lt;/a&gt;.</source>
          <target state="translated">创建对话框窗口的主要类。您可以使用此类创建自定义对话框，或者调用&lt;a href=&quot;joptionpane&quot;&gt; &lt;code&gt;JOptionPane&lt;/code&gt; 中&lt;/a&gt;的许多类方法来创建各种标准对话框。有关创建对话框的信息，请参见&lt;em&gt;Java教程&lt;/em&gt;部分&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;如何制作对话框&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fabda07c3b6a162bd5e5f2d89cab43fa50597f1e" translate="yes" xml:space="preserve">
          <source>The main class name of the initial module</source>
          <target state="translated">初始模块的主类名</target>
        </trans-unit>
        <trans-unit id="1c8b07dc81c5cae446072ef321854dc8c9b754b2" translate="yes" xml:space="preserve">
          <source>The main computation performed by this task.</source>
          <target state="translated">这个任务所进行的主要计算。</target>
        </trans-unit>
        <trans-unit id="b5a067152faa9b4aadd51479a1dd861ea68df4fd" translate="yes" xml:space="preserve">
          <source>The main date and time API is built on the ISO calendar system. The chronology operates behind the scenes to represent the general concept of a calendar system.</source>
          <target state="translated">主要的日期和时间API是建立在ISO日历系统上的。年表在幕后操作,代表了日历系统的一般概念。</target>
        </trans-unit>
        <trans-unit id="b853030ffb2c3edc982b0284b46a35af47f22884" translate="yes" xml:space="preserve">
          <source>The main date and time API is built on the ISO calendar system. The chronology operates behind the scenes to represent the general concept of a calendar system. For example, the Japanese, Minguo, Thai Buddhist and others.</source>
          <target state="translated">主要的日期和时间API是建立在ISO日历系统上的。年表在幕后运作,代表了历法系统的一般概念。比如日本的、民国的、泰国佛教的等等。</target>
        </trans-unit>
        <trans-unit id="9e477ae5e9b40e17482fe2bfa8054488de70b68c" translate="yes" xml:space="preserve">
          <source>The main date-time classes provide two methods - one for formatting, &lt;code&gt;format(DateTimeFormatter formatter)&lt;/code&gt;, and one for parsing, &lt;code&gt;parse(CharSequence text, DateTimeFormatter formatter)&lt;/code&gt;.</source>
          <target state="translated">主要的日期时间类提供两种方法-一种用于格式化 &lt;code&gt;format(DateTimeFormatter formatter)&lt;/code&gt; ，另一种用于解析 &lt;code&gt;parse(CharSequence text, DateTimeFormatter formatter)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bb46ba1feb50e25623a3a5d3b3522e2efd2bea39" translate="yes" xml:space="preserve">
          <source>The main input tray in the printer.</source>
          <target state="translated">打印机的主输入托盘。</target>
        </trans-unit>
        <trans-unit id="cc02b164970a6d4a21efa3fd53651baa0221e88b" translate="yes" xml:space="preserve">
          <source>The main package of the Java Image I/O API.</source>
          <target state="translated">Java图像I/O API的主要包。</target>
        </trans-unit>
        <trans-unit id="1d37f37048cf33621cee29dc0a50808607688cb5" translate="yes" xml:space="preserve">
          <source>The main purpose of this class is to provide the information needed by a developer to determine the suitability of a transfer or to import the data contained within. But it also doubles as a controller for customizing properties during drag and drop, such as whether or not to show the drop location, and which drop action to use.</source>
          <target state="translated">该类的主要目的是提供开发人员所需的信息,以确定传输的合适性或导入其中的数据。但它也是一个控制器,用于在拖放过程中自定义属性,例如是否显示拖放位置,以及使用哪个拖放动作。</target>
        </trans-unit>
        <trans-unit id="de83861a0d99308ff61bd5e2a4e93009db4a5f14" translate="yes" xml:space="preserve">
          <source>The major version of the profile.</source>
          <target state="translated">资料的主要版本。</target>
        </trans-unit>
        <trans-unit id="6e6d641c4b17fb0dacb9c8e5fb7c375230a35ab5" translate="yes" xml:space="preserve">
          <source>The majority of methods for setting placeholder parameters take two parameters, with the first parameter indicating which placeholder parameter is to be set, and the second parameter giving the value to be set. Methods such as &lt;code&gt;setInt&lt;/code&gt;, &lt;code&gt;setString&lt;/code&gt;, &lt;code&gt;setBoolean&lt;/code&gt;, and &lt;code&gt;setLong&lt;/code&gt; fall into this category. After these methods have been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an array with the values that have been set. Each element in the array is an &lt;code&gt;Object&lt;/code&gt; instance representing the values that have been set. The order of these values in the array is determined by the &lt;code&gt;int&lt;/code&gt; (the first parameter) passed to the setter method. The values in the array are the values (the second parameter) passed to the setter method. In other words, the first element in the array is the value to be set for the first placeholder parameter in the &lt;code&gt;RowSet&lt;/code&gt; object's command. The second element is the value to be set for the second placeholder parameter, and so on.</source>
          <target state="translated">设置占位符参数的大多数方法都有两个参数，第一个参数指示要设置哪个占位符参数，第二个参数给出要设置的值。法如 &lt;code&gt;setInt&lt;/code&gt; ， &lt;code&gt;setString&lt;/code&gt; ， &lt;code&gt;setBoolean&lt;/code&gt; 和 &lt;code&gt;setLong&lt;/code&gt; 属于这一类。调用这些方法后，对方法 &lt;code&gt;getParams&lt;/code&gt; 的调用将返回一个具有已设置值的数组。数组中的每个元素都是一个 &lt;code&gt;Object&lt;/code&gt; 实例，表示已设置的值。这些值在数组中的顺序由 &lt;code&gt;int&lt;/code&gt; 确定（第一个参数）传递给setter方法。数组中的值是传递给setter方法的值（第二个参数）。换句话说，数组中的第一个元素是在 &lt;code&gt;RowSet&lt;/code&gt; 对象的命令中为第一个占位符参数设置的值。第二个元素是要为第二个占位符参数设置的值，依此类推。</target>
        </trans-unit>
        <trans-unit id="7c2589d24fa9c9214645e03d72358e3dc3ded803" translate="yes" xml:space="preserve">
          <source>The malicious window might make itself look and behave like a real full desktop, so that information entered by the unsuspecting user is captured and subsequently misused</source>
          <target state="translated">恶意窗口可能会使自己看起来和行为像一个真正的完整桌面,这样不知情的用户输入的信息就会被捕获,随后被滥用。</target>
        </trans-unit>
        <trans-unit id="0e36b3ef42e46df654a51669dc5826745c3c9e82" translate="yes" xml:space="preserve">
          <source>The management interface for a buffer pool, for example a pool of &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer#allocateDirect(int)&quot;&gt;&lt;code&gt;direct&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/nio/mappedbytebuffer&quot;&gt;&lt;code&gt;mapped&lt;/code&gt;&lt;/a&gt; buffers.</source>
          <target state="translated">缓冲池（例如&lt;a href=&quot;../../../../java.base/java/nio/bytebuffer#allocateDirect(int)&quot;&gt; &lt;code&gt;direct&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../../../java.base/java/nio/mappedbytebuffer&quot;&gt; &lt;code&gt;mapped&lt;/code&gt; &lt;/a&gt;缓冲区的池）的管理接口。</target>
        </trans-unit>
        <trans-unit id="41ec39971544e0ec4cf01b3d1f692a5a209747ec" translate="yes" xml:space="preserve">
          <source>The management interface for a buffer pool, for example a pool of &lt;a href=&quot;../../nio/bytebuffer#allocateDirect-int-&quot;&gt;&lt;code&gt;direct&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../nio/mappedbytebuffer&quot;&gt;&lt;code&gt;mapped&lt;/code&gt;&lt;/a&gt; buffers.</source>
          <target state="translated">缓冲池（例如&lt;a href=&quot;../../nio/bytebuffer#allocateDirect-int-&quot;&gt; &lt;code&gt;direct&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../nio/mappedbytebuffer&quot;&gt; &lt;code&gt;mapped&lt;/code&gt; &lt;/a&gt;缓冲区的池）的管理接口。</target>
        </trans-unit>
        <trans-unit id="479285103caa46331ea7728d61e5be1ac361ef47" translate="yes" xml:space="preserve">
          <source>The management interface for a memory manager.</source>
          <target state="translated">内存管理器的管理界面。</target>
        </trans-unit>
        <trans-unit id="fcf3a8512fdd807d7e4faed1fbe89790494ceb21" translate="yes" xml:space="preserve">
          <source>The management interface for a memory manager. A memory manager manages one or more memory pools of the Java virtual machine.</source>
          <target state="translated">内存管理器的管理界面。内存管理器管理Java虚拟机的一个或多个内存池。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
