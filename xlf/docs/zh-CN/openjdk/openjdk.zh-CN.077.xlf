<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="33b67f1448d9e46c92a5dd8ca3e0c7d32d1730ae" translate="yes" xml:space="preserve">
          <source>When overriding this method it is recommended that an implementation ensures that any delegation is consistent with the &lt;a href=&quot;classloader#getResource-java.lang.String-&quot;&gt;&lt;code&gt;getResource(String)&lt;/code&gt;&lt;/a&gt; method. This should ensure that the first element returned by the Enumeration's &lt;code&gt;nextElement&lt;/code&gt; method is the same resource that the &lt;code&gt;getResource(String)&lt;/code&gt; method would return.</source>
          <target state="translated">重写此方法时，建议实现确保任何委托与&lt;a href=&quot;classloader#getResource-java.lang.String-&quot;&gt; &lt;code&gt;getResource(String)&lt;/code&gt; &lt;/a&gt;方法一致。这应该确保Enumeration的 &lt;code&gt;nextElement&lt;/code&gt; 方法返回的第一个元素与 &lt;code&gt;getResource(String)&lt;/code&gt; 方法将返回的资源相同。</target>
        </trans-unit>
        <trans-unit id="059fdccbaa1b79359a5fe3e6137c458d9b8b9713" translate="yes" xml:space="preserve">
          <source>When overriding this method it is recommended that an implementation ensures that any delegation is consistent with the &lt;a href=&quot;classloader#getResources-java.lang.String-&quot;&gt;&lt;code&gt;getResources(String)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">重写此方法时，建议实现确保任何委托与&lt;a href=&quot;classloader#getResources-java.lang.String-&quot;&gt; &lt;code&gt;getResources(String)&lt;/code&gt; &lt;/a&gt;方法一致。</target>
        </trans-unit>
        <trans-unit id="88186acbb81a8c14eb592e644ed27a9e055dc197" translate="yes" xml:space="preserve">
          <source>When parsing in strict mode, the number of parsed digits must be between the minimum and maximum width. When parsing in lenient mode, the minimum width is considered to be zero and the maximum is nine.</source>
          <target state="translated">在严格模式下解析时,解析的数字必须在最小和最大宽度之间。在宽松模式下解析时,最小宽度为0,最大宽度为9。</target>
        </trans-unit>
        <trans-unit id="d50f0289d83049487a7e415ef71230bcec841f7c" translate="yes" xml:space="preserve">
          <source>When parsing in strict mode, the number of parsed digits must match the fractional digits. When parsing in lenient mode, any number of fractional digits from zero to nine are accepted.</source>
          <target state="translated">当在严格模式下进行解析时,解析的数字必须与小数位数一致。当在宽松模式下进行解析时,可以接受从0到9的任何数量的小数位。</target>
        </trans-unit>
        <trans-unit id="398b9ccde24d723bc63ead376818c485f7b9a32f" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated from 0 to 1 in strict and smart mode. In lenient mode the value is not validated. It is combined with &lt;code&gt;HOUR_OF_AMPM&lt;/code&gt; to form &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; by multiplying the {AMPM_OF_DAY} value by 12.</source>
          <target state="translated">解析此字段时，其行为等同于以下内容：在严格和智能模式下，该值从0到1进行验证。在宽大模式下，该值未被验证。通过将{AMPM_OF_DAY}值乘以12，将其与 &lt;code&gt;HOUR_OF_AMPM&lt;/code&gt; 组合形成 &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fc167eb2f61a597fa4fcdf11893ccfde6bdc0602" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated from 0 to 11 in strict and smart mode. In lenient mode the value is not validated. It is combined with &lt;code&gt;AMPM_OF_DAY&lt;/code&gt; to form &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; by multiplying the {AMPM_OF_DAY} value by 12.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：在严格和智能模式下，该值从0到11进行验证。在宽大模式下，该值未被验证。通过将{AMPM_OF_DAY}值乘以12，将其与 &lt;code&gt;AMPM_OF_DAY&lt;/code&gt; 组合以形成 &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="957785487bc5a171742676f4c57e468f23bbf945" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated from 1 to 12 in strict mode and from 0 to 12 in smart mode. In lenient mode the value is not validated. The field is converted to an &lt;code&gt;HOUR_OF_AMPM&lt;/code&gt; with the same value, unless the value is 12, in which case it is converted to 0.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：在严格模式下，该值从1到12进行验证；在智能模式下，该值从0到12进行验证。在宽大模式下，该值未被验证。该字段将转换为具有相同值的 &lt;code&gt;HOUR_OF_AMPM&lt;/code&gt; ，除非该值为12，在这种情况下，它将转换为0。</target>
        </trans-unit>
        <trans-unit id="392153078b1342cc9b804c5665b0c975ca3bc7c5" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated from 1 to 24 in strict mode and from 0 to 24 in smart mode. In lenient mode the value is not validated. The field is converted to an &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; with the same value, unless the value is 24, in which case it is converted to 0.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：在严格模式下，该值从1到24验证；在智能模式下，该值从0到24验证。在宽大模式下，该值未被验证。该字段将转换为具有相同值的 &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; ，除非该值为24，在这种情况下，它将转换为0。</target>
        </trans-unit>
        <trans-unit id="99eb9e50057d1c711aa0384492b14a1cc96c9df7" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated in strict and smart mode but not in lenient mode.</source>
          <target state="translated">当解析这个字段时,它的行为等同于以下。该值在严格和智能模式下有效,但在宽松模式下无效。</target>
        </trans-unit>
        <trans-unit id="2ddaf4c446a794e052910439758bc7ef035eeef6" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated in strict and smart mode but not in lenient mode. The field is combined with &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt;, &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; and &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; to produce a &lt;code&gt;LocalTime&lt;/code&gt;. In lenient mode, any excess days are added to the parsed date, or made available via &lt;a href=&quot;../format/datetimeformatter#parsedExcessDays--&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedExcessDays()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：该值在严格和智能模式下经过验证，但在宽松模式下未经验证。该字段与组合 &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; ， &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; 和 &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; 以产生 &lt;code&gt;LocalTime&lt;/code&gt; 。在宽大模式下，任何多余的天数都将添加到解析日期中，或通过&lt;a href=&quot;../format/datetimeformatter#parsedExcessDays--&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedExcessDays()&lt;/code&gt; &lt;/a&gt;使其可用。</target>
        </trans-unit>
        <trans-unit id="3ae9bc249b42914740d59028697394c29456af8c" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated in strict and smart mode but not in lenient mode. The field is resolved in combination with &lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; to produce &lt;code&gt;NANO_OF_SECOND&lt;/code&gt;.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：该值在严格和智能模式下经过验证，但在宽松模式下未经验证。结合 &lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; 解析该字段以产生 &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a924c762f617440d33adf98834b01ed6f029b945" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated in strict and smart mode but not in lenient mode. The field is resolved in combination with &lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; and &lt;code&gt;MICRO_OF_SECOND&lt;/code&gt;.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：该值在严格和智能模式下经过验证，但在宽松模式下未经验证。结合 &lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; 和 &lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; 解析该字段。</target>
        </trans-unit>
        <trans-unit id="a8dbf53e5aefb77318b4486598a6313d9b941472" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated in strict and smart mode but not in lenient mode. The field is resolved in combination with &lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; to produce &lt;code&gt;NANO_OF_SECOND&lt;/code&gt;.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：该值在严格和智能模式下经过验证，但在宽松模式下未经验证。结合 &lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; 解析该字段以产生 &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c800d57db7922ab39c14b13ae86f803dc109a26b" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated in strict and smart mode but not in lenient mode. The value is split to form &lt;code&gt;MICRO_OF_SECOND&lt;/code&gt;, &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;, &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; and &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; fields.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：该值在严格和智能模式下经过验证，但在宽松模式下未经验证。该值被拆分为 &lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; ， &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; ， &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; 和 &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="c294e00d68fa9137c919614e2026adac17298586" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated in strict and smart mode but not in lenient mode. The value is split to form &lt;code&gt;MILLI_OF_SECOND&lt;/code&gt;, &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;, &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; and &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; fields.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：该值在严格和智能模式下经过验证，但在宽松模式下未经验证。将该值拆分为以下形式： &lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; ， &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; ， &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; 和 &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="f645cbf7fae3ea37f1aeb723d42fd638100f86e8" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated in strict and smart mode but not in lenient mode. The value is split to form &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; and &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; fields.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：该值在严格和智能模式下经过验证，但在宽松模式下未经验证。将该值拆分为 &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; 和 &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="1be57e4bffee0d932e9b78c3b2c86a25070821da" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated in strict and smart mode but not in lenient mode. The value is split to form &lt;code&gt;NANO_OF_SECOND&lt;/code&gt;, &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;, &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; and &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; fields.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：该值在严格和智能模式下经过验证，但在宽松模式下未经验证。该值被拆分成 &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; ， &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; ， &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; 和 &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="375544438a835cc62e84a73073301cc45d0d9edd" translate="yes" xml:space="preserve">
          <source>When parsing this field it behaves equivalent to the following: The value is validated in strict and smart mode but not in lenient mode. The value is split to form &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt;, &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; and &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; fields.</source>
          <target state="translated">解析此字段时，其行为等效于以下内容：该值在严格和智能模式下经过验证，但在宽松模式下未经验证。该值被拆分为 &lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; ， &lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; 和 &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="f28daa7170bb1fcc870df5a101d2c5b9ccdbc619" translate="yes" xml:space="preserve">
          <source>When parsing, there are two distinct cases to consider. If a chronology has been parsed directly from the text, perhaps because &lt;a href=&quot;datetimeformatterbuilder#appendChronologyId--&quot;&gt;&lt;code&gt;DateTimeFormatterBuilder.appendChronologyId()&lt;/code&gt;&lt;/a&gt; was used, then this override chronology has no effect. If no zone has been parsed, then this override chronology will be used to interpret the &lt;code&gt;ChronoField&lt;/code&gt; values into a date according to the date resolving rules of the chronology.</source>
          <target state="translated">解析时，要考虑两种不同的情况。如果直接从文本中分析了年代，则可能是因为使用了&lt;a href=&quot;datetimeformatterbuilder#appendChronologyId--&quot;&gt; &lt;code&gt;DateTimeFormatterBuilder.appendChronologyId()&lt;/code&gt; &lt;/a&gt;，所以该替代年代没有任何作用。如果未解析任何区域，则将使用该替代年代，以根据年代的日期解析规则将 &lt;code&gt;ChronoField&lt;/code&gt; 值解释为一个日期。</target>
        </trans-unit>
        <trans-unit id="a965e09e870a4e87e4a218aed3653bd2efbce188" translate="yes" xml:space="preserve">
          <source>When parsing, there are two distinct cases to consider. If a zone has been parsed directly from the text, perhaps because &lt;a href=&quot;datetimeformatterbuilder#appendZoneId--&quot;&gt;&lt;code&gt;DateTimeFormatterBuilder.appendZoneId()&lt;/code&gt;&lt;/a&gt; was used, then this override zone has no effect. If no zone has been parsed, then this override zone will be included in the result of the parse where it can be used to build instants and date-times.</source>
          <target state="translated">解析时，要考虑两种不同的情况。如果直接从文本中解析了区域，则可能是因为使用了&lt;a href=&quot;datetimeformatterbuilder#appendZoneId--&quot;&gt; &lt;code&gt;DateTimeFormatterBuilder.appendZoneId()&lt;/code&gt; &lt;/a&gt;，所以此覆盖区域无效。如果没有解析任何区域，则此覆盖区域将包含在解析结果中，可在该结果中用于构建瞬间和日期时间。</target>
        </trans-unit>
        <trans-unit id="6cf15c2cadbf1d2f9101df44d9400a393f3cd777" translate="yes" xml:space="preserve">
          <source>When passing information to a Java subprocess, &lt;a href=&quot;#EnvironmentVSSystemProperties&quot;&gt;system properties&lt;/a&gt; are generally preferred over environment variables.</source>
          <target state="translated">将信息传递给Java子流程时，通常优先于环境变量使用&lt;a href=&quot;#EnvironmentVSSystemProperties&quot;&gt;系统属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="678a637edd80c217c54e61b9e25c8439ebfa7bf7" translate="yes" xml:space="preserve">
          <source>When passing information to a Java subprocess, &lt;a href=&quot;system#EnvironmentVSSystemProperties&quot;&gt;system properties&lt;/a&gt; are generally preferred over environment variables.</source>
          <target state="translated">将信息传递给Java子流程时，通常优先于环境变量使用&lt;a href=&quot;system#EnvironmentVSSystemProperties&quot;&gt;系统属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1d9df05f42f191fd30f4013d3bc48c1dc951d2b7" translate="yes" xml:space="preserve">
          <source>When processing logging output, if a Handler encounters problems then rather than throwing an Exception back to the issuer of the logging call (who is unlikely to be interested) the Handler should call its associated ErrorManager.</source>
          <target state="translated">在处理日志输出时,如果处理程序遇到问题,那么处理程序应该调用其关联的ErrorManager,而不是将一个Exception丢回给日志调用的发出者(后者不太可能感兴趣)。</target>
        </trans-unit>
        <trans-unit id="3e179726ee6a6f7644de1db6d67bff96f348bf5e" translate="yes" xml:space="preserve">
          <source>When providing implementations for the new methods in the subclass, use this newly defined method to get the initial context.</source>
          <target state="translated">当为子类中的新方法提供实现时,使用这个新定义的方法来获取初始上下文。</target>
        </trans-unit>
        <trans-unit id="ff2175fd5a0c9824ca3682906ca8e8c785a2e2f5" translate="yes" xml:space="preserve">
          <source>When reading an image, its per-stream and per-image metadata is made available as an &lt;code&gt;IIOMetadata&lt;/code&gt; object. The internals of this object are specific to the plug-in that created it. Its contents may be accessed in the form of an XML &lt;code&gt;Document&lt;/code&gt;, which is implemented as a tree of &lt;code&gt;IIOMetadataNode&lt;/code&gt; objects.</source>
          <target state="translated">读取图像时，其每个流和每个图像元数据可作为 &lt;code&gt;IIOMetadata&lt;/code&gt; 对象使用。该对象的内部特定于创建它的插件。它的内容可以以XML &lt;code&gt;Document&lt;/code&gt; 的形式访问，该文档被实现为 &lt;code&gt;IIOMetadataNode&lt;/code&gt; 对象的树。</target>
        </trans-unit>
        <trans-unit id="c064a445936071cf19ecbcb598a24cd0f5fcf1e9" translate="yes" xml:space="preserve">
          <source>When reading from a standard &lt;code&gt;InputStream&lt;/code&gt;, it may be necessary to save previously read information in a cache since the underlying stream does not allow data to be re-read. Similarly, when writing to a standard &lt;code&gt;OutputStream&lt;/code&gt;, a cache may be used to allow a previously written value to be changed before flushing it to the final destination.</source>
          <target state="translated">从标准 &lt;code&gt;InputStream&lt;/code&gt; 进行读取时，可能有必要将先前读取的信息保存在缓存中，因为基础流不允许重新读取数据。类似地，当写入标准 &lt;code&gt;OutputStream&lt;/code&gt; 时，可以使用缓存来允许在将先前写入的值刷新到最终目的地之前对其进行更改。</target>
        </trans-unit>
        <trans-unit id="1d63913965696a9f9c40e306e81ce84323b71ddc" translate="yes" xml:space="preserve">
          <source>When reading, if the layout of the destination has been set using this method, each call to an &lt;code&gt;ImageReader&lt;/code&gt;&lt;code&gt;read&lt;/code&gt; method will return a new &lt;code&gt;BufferedImage&lt;/code&gt; using the format specified by the supplied type specifier. As a side effect, any destination &lt;code&gt;BufferedImage&lt;/code&gt; set by &lt;code&gt;ImageReadParam.setDestination(BufferedImage)&lt;/code&gt; will no longer be set as the destination. In other words, this method may be thought of as calling &lt;code&gt;setDestination((BufferedImage)null)&lt;/code&gt;.</source>
          <target state="translated">读取时，如果已使用此方法设置了目标的布局，则对 &lt;code&gt;ImageReader&lt;/code&gt; &lt;code&gt;read&lt;/code&gt; 方法的每次调用都将使用提供的类型说明符指定的格式返回一个新的 &lt;code&gt;BufferedImage&lt;/code&gt; 。副作用是，不再将 &lt;code&gt;ImageReadParam.setDestination(BufferedImage)&lt;/code&gt; 设置的任何目标 &lt;code&gt;BufferedImage&lt;/code&gt; 设置为目标。换句话说，可以将此方法视为调用 &lt;code&gt;setDestination((BufferedImage)null)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5b68a7995942b34e6fb81c415ca17f384da8a72" translate="yes" xml:space="preserve">
          <source>When reading, the region to be written within the destination &lt;code&gt;BufferedImage&lt;/code&gt; will start at this offset and have a width and height determined by the source region of interest, the subsampling parameters, and the destination bounds.</source>
          <target state="translated">读取时，要在目标 &lt;code&gt;BufferedImage&lt;/code&gt; 中写入的区域将从该偏移量开始，并且其宽度和高度由感兴趣的源区域，子采样参数和目标边界确定。</target>
        </trans-unit>
        <trans-unit id="47eff58ddedc0bc2eb7327683e454ec2dfb1f6d0" translate="yes" xml:space="preserve">
          <source>When resolving time fields, the map will be altered and null returned. When resolving date fields, the date is normally returned from the method, with the map altered to remove the resolved fields. However, it would also be acceptable for the date fields to be resolved into other &lt;code&gt;ChronoField&lt;/code&gt; instances that can produce a date, such as &lt;code&gt;EPOCH_DAY&lt;/code&gt;.</source>
          <target state="translated">解决时间字段时，地图将被更改并返回null。解决日期字段时，通常从方法返回日期，并更改映射以删除解决的字段。然而，它也将是可接受的日期字段被解析成其他 &lt;code&gt;ChronoField&lt;/code&gt; 实例，可以产生一个日期，如 &lt;code&gt;EPOCH_DAY&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76363a09529976afbe0f0801c413175b6a84dc98" translate="yes" xml:space="preserve">
          <source>When sending timer notifications, the timer updates the notification sequence number irrespective of the notification type.</source>
          <target state="translated">发送定时器通知时,无论通知类型如何,定时器都会更新通知序列号。</target>
        </trans-unit>
        <trans-unit id="016bd53a30e369ac9500dd916cae37c51e43c195" translate="yes" xml:space="preserve">
          <source>When setting or getting the &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; or &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; fields, &lt;code&gt;Calendar&lt;/code&gt; must determine the first week of the month or year as a reference point. The first week of a month or year is defined as the earliest seven day period beginning on &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; and containing at least &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; days of that month or year. Weeks numbered ..., -1, 0 precede the first week; weeks numbered 2, 3,... follow it. Note that the normalized numbering returned by &lt;code&gt;get()&lt;/code&gt; may be different. For example, a specific &lt;code&gt;Calendar&lt;/code&gt; subclass may designate the week before week 1 of a year as week &lt;code&gt;&lt;i&gt;n&lt;/i&gt;&lt;/code&gt; of the previous year.</source>
          <target state="translated">在设置或获取 &lt;code&gt;WEEK_OF_MONTH&lt;/code&gt; 或 &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; 字段时， &lt;code&gt;Calendar&lt;/code&gt; 必须确定月份或年份的第一周作为参考点。每月或每年的第一 &lt;code&gt;getFirstDayOfWeek()&lt;/code&gt; 为最早的7天时段，从getFirstDayOfWeek（）开始，并且至少包含该月或一年中的 &lt;code&gt;getMinimalDaysInFirstWeek()&lt;/code&gt; 天。在第一周之前编号为...，-1、0的周；编号为2、3，...的星期。请注意，由 &lt;code&gt;get()&lt;/code&gt; 返回的规范化编号可能有所不同。例如，特定的 &lt;code&gt;Calendar&lt;/code&gt; 子类可以将一年的第1周之前的一周指定为上一年的 &lt;code&gt;&lt;i&gt;n&lt;/i&gt;&lt;/code&gt; 周。</target>
        </trans-unit>
        <trans-unit id="6a17a22214c7c2e160d3cfa1f6db1fc4e32a144d" translate="yes" xml:space="preserve">
          <source>When setting this field, the value is allowed to be partially lenient, taking any value from 1 to 92. If the quarter has less than 92 days, then day 92, and potentially day 91, is in the following quarter.</source>
          <target state="translated">设置该字段时,允许取值部分宽松,取1到92的任意值。如果季度的天数少于92天,那么第92天,也可能是第91天,就在下一个季度。</target>
        </trans-unit>
        <trans-unit id="669b10bb52f2a514a970d8c5edffcfcd75525b6b" translate="yes" xml:space="preserve">
          <source>When setting up a print job, a client specifies two things: &lt;b&gt;print data&lt;/b&gt; and &lt;b&gt;processing instructions.&lt;/b&gt; The print data is the actual content to be printed. The processing instructions tell the printer how to print the print data, such as: what media to use, how many copies to print, and whether to print on one or both sides of a sheet. The client specifies these processing instructions with the attribute definitions of the Java Print Service API.</source>
          <target state="translated">设置打印作业时，客户端会指定两件事：&lt;b&gt;打印数据&lt;/b&gt;和&lt;b&gt;处理指令。&lt;/b&gt;打印数据是要打印的实际内容。处理说明告诉打印机如何打印打印数据，例如：使用哪种介质，要打印多少份以及是否在纸的一面或两面打印。客户端使用Java Print Service API的属性定义指定这些处理指令。</target>
        </trans-unit>
        <trans-unit id="992deb8ce4de81a3a8e6eef7b845fb57e8e29bfe" translate="yes" xml:space="preserve">
          <source>When specified at the doc level, an attribute applies just to that one doc. When specified at the Print Request level, an attribute applies to the whole job, including all the docs in the job. However, an attribute specified at the doc level overrides an attribute in the same category specified at the Print Request level.</source>
          <target state="translated">当在文档级别指定时,属性仅适用于该文档。当在打印请求级别指定时,属性适用于整个作业,包括作业中的所有文档。但是,在文档级别指定的属性会覆盖在打印请求级别指定的同一类别的属性。</target>
        </trans-unit>
        <trans-unit id="812c36aefe75f1f01b1e22e1de7ca89fc2466e0d" translate="yes" xml:space="preserve">
          <source>When submitting a print job to a printer, the client provides the attributes describing the characteristics of the print data, such as the document name, and how the print data should be printed, such as double-sided, five copies. If a print job consists of multiple pieces of print data, different pieces might have different processing instructions, such as 8 x 11 inch media for the first document, and 11 x 17 inch media for another document.</source>
          <target state="translated">当向打印机提交打印作业时,客户端提供描述打印数据特性的属性,如文档名称,以及打印数据的打印方式,如双面、五份。如果一个打印任务由多份打印数据组成,不同的打印数据可能有不同的处理说明,例如第一份文件用8×11英寸的介质,另一份文件用11×17英寸的介质。</target>
        </trans-unit>
        <trans-unit id="03ec6c25b6d376081732b85e415911f8c6ec0d3e" translate="yes" xml:space="preserve">
          <source>When such a new visit method is added, the default implementation in this class will be to call the &lt;a href=&quot;abstractannotationvaluevisitor6#visitUnknown-javax.lang.model.element.AnnotationValue-P-&quot;&gt;&lt;code&gt;visitUnknown&lt;/code&gt;&lt;/a&gt; method. A new abstract annotation value visitor class will also be introduced to correspond to the new language level; this visitor will have different default behavior for the visit method in question. When the new visitor is introduced, all or portions of this visitor may be deprecated.</source>
          <target state="translated">当添加了这样一个新的visit方法时，此类中的默认实现将是调用&lt;a href=&quot;abstractannotationvaluevisitor6#visitUnknown-javax.lang.model.element.AnnotationValue-P-&quot;&gt; &lt;code&gt;visitUnknown&lt;/code&gt; &lt;/a&gt;方法。还将引入一个新的抽象注释值访问者类，以对应于新的语言级别。对于有问题的访问方法，此访问者将具有不同的默认行为。引入新访客后，可能会不赞成使用此访客的全部或部分。</target>
        </trans-unit>
        <trans-unit id="05ff925b46ec11d08257cdc7e971c5f6bf2e8675" translate="yes" xml:space="preserve">
          <source>When such a new visit method is added, the default implementation in this class will be to call the &lt;a href=&quot;abstractannotationvaluevisitor6#visitUnknown-javax.lang.model.element.AnnotationValue-P-&quot;&gt;&lt;code&gt;visitUnknown&lt;/code&gt;&lt;/a&gt; method. A new simple annotation value visitor class will also be introduced to correspond to the new language level; this visitor will have different default behavior for the visit method in question. When the new visitor is introduced, all or portions of this visitor may be deprecated.</source>
          <target state="translated">当添加了这样一个新的visit方法时，此类中的默认实现将是调用&lt;a href=&quot;abstractannotationvaluevisitor6#visitUnknown-javax.lang.model.element.AnnotationValue-P-&quot;&gt; &lt;code&gt;visitUnknown&lt;/code&gt; &lt;/a&gt;方法。还将引入一个新的简单注释值访问者类，以对应于新的语言级别。对于有问题的访问方法，此访问者将具有不同的默认行为。引入新访客后，可能会不赞成使用此访客的全部或部分。</target>
        </trans-unit>
        <trans-unit id="044c236c1377724dc963f7b253a1633adebf4edd" translate="yes" xml:space="preserve">
          <source>When such a new visit method is added, the default implementation in this class will be to call the &lt;a href=&quot;abstractelementvisitor6#visitUnknown-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;visitUnknown&lt;/code&gt;&lt;/a&gt; method. A new abstract element kind visitor class will also be introduced to correspond to the new language level; this visitor will have different default behavior for the visit method in question. When the new visitor is introduced, all or portions of this visitor may be deprecated.</source>
          <target state="translated">当添加了这样一个新的visit方法时，此类中的默认实现将是调用&lt;a href=&quot;abstractelementvisitor6#visitUnknown-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;visitUnknown&lt;/code&gt; &lt;/a&gt;方法。还将引入一个新的抽象元素类型的访问者类，以对应于新的语言级别；对于有问题的访问方法，此访问者将具有不同的默认行为。当引入新访客时，可能会不赞成使用此访客的全部或部分。</target>
        </trans-unit>
        <trans-unit id="710e79e570a5917821dfd7344c3f17284d9a4964" translate="yes" xml:space="preserve">
          <source>When such a new visit method is added, the default implementation in this class will be to call the &lt;a href=&quot;abstractelementvisitor6#visitUnknown-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;visitUnknown&lt;/code&gt;&lt;/a&gt; method. A new abstract element visitor class will also be introduced to correspond to the new language level; this visitor will have different default behavior for the visit method in question. When the new visitor is introduced, all or portions of this visitor may be deprecated.</source>
          <target state="translated">当添加了这样一个新的visit方法时，此类中的默认实现将是调用&lt;a href=&quot;abstractelementvisitor6#visitUnknown-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;visitUnknown&lt;/code&gt; &lt;/a&gt;方法。还将引入一个新的抽象元素访问者类，以对应于新的语言级别。对于有问题的访问方法，此访问者将具有不同的默认行为。当引入新访客时，可能会不赞成使用此访客的全部或部分。</target>
        </trans-unit>
        <trans-unit id="bf2a73437432866576d26e93ec38ac98756a0ab7" translate="yes" xml:space="preserve">
          <source>When such a new visit method is added, the default implementation in this class will be to call the &lt;a href=&quot;abstractelementvisitor6#visitUnknown-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;visitUnknown&lt;/code&gt;&lt;/a&gt; method. A new element scanner visitor class will also be introduced to correspond to the new language level; this visitor will have different default behavior for the visit method in question. When the new visitor is introduced, all or portions of this visitor may be deprecated.</source>
          <target state="translated">当添加了这样一个新的visit方法时，此类中的默认实现将是调用&lt;a href=&quot;abstractelementvisitor6#visitUnknown-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;visitUnknown&lt;/code&gt; &lt;/a&gt;方法。还将引入一个新的元素扫描器访客类，以对应于新的语言级别；对于有问题的访问方法，此访问者将具有不同的默认行为。当引入新访客时，可能会不赞成使用此访客的全部或部分。</target>
        </trans-unit>
        <trans-unit id="d632be78f99f513b8aa8e1b7f5cb5683a59ff22f" translate="yes" xml:space="preserve">
          <source>When such a new visit method is added, the default implementation in this class will be to call the &lt;a href=&quot;abstractelementvisitor6#visitUnknown-javax.lang.model.element.Element-P-&quot;&gt;&lt;code&gt;visitUnknown&lt;/code&gt;&lt;/a&gt; method. A new simple element visitor class will also be introduced to correspond to the new language level; this visitor will have different default behavior for the visit method in question. When the new visitor is introduced, all or portions of this visitor may be deprecated.</source>
          <target state="translated">当添加了这样一个新的visit方法时，此类中的默认实现将是调用&lt;a href=&quot;abstractelementvisitor6#visitUnknown-javax.lang.model.element.Element-P-&quot;&gt; &lt;code&gt;visitUnknown&lt;/code&gt; &lt;/a&gt;方法。还将引入一个新的简单元素访问者类，以适应新的语言水平；对于有问题的访问方法，此访问者将具有不同的默认行为。当引入新访客时，可能会不赞成使用此访客的全部或部分。</target>
        </trans-unit>
        <trans-unit id="31a71bf88455082c4bc48a8526d303b8ca6d7ee4" translate="yes" xml:space="preserve">
          <source>When such a new visit method is added, the default implementation in this class will be to call the &lt;a href=&quot;abstracttypevisitor6#visitUnknown-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;visitUnknown&lt;/code&gt;&lt;/a&gt; method. A new abstract type visitor class will also be introduced to correspond to the new language level; this visitor will have different default behavior for the visit method in question. When the new visitor is introduced, all or portions of this visitor may be deprecated.</source>
          <target state="translated">当添加了这样一个新的visit方法时，此类中的默认实现将是调用&lt;a href=&quot;abstracttypevisitor6#visitUnknown-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;visitUnknown&lt;/code&gt; &lt;/a&gt;方法。还将引入一个新的抽象类型的访问者类，以对应于新的语言级别。对于有问题的访问方法，此访问者将具有不同的默认行为。当引入新访客时，可能会不赞成使用此访客的全部或部分。</target>
        </trans-unit>
        <trans-unit id="b0bd9887b4dede673a8a857fd6f562d2e6651e7c" translate="yes" xml:space="preserve">
          <source>When such a new visit method is added, the default implementation in this class will be to call the &lt;a href=&quot;abstracttypevisitor6#visitUnknown-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;visitUnknown&lt;/code&gt;&lt;/a&gt; method. A new simple type visitor class will also be introduced to correspond to the new language level; this visitor will have different default behavior for the visit method in question. When the new visitor is introduced, all or portions of this visitor may be deprecated.</source>
          <target state="translated">当添加了这样一个新的visit方法时，此类中的默认实现将是调用&lt;a href=&quot;abstracttypevisitor6#visitUnknown-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;visitUnknown&lt;/code&gt; &lt;/a&gt;方法。还将引入一个新的简单类型的访问者类，以对应于新的语言级别；对于有问题的访问方法，此访问者将具有不同的默认行为。当引入新访客时，可能会不赞成使用此访客的全部或部分。</target>
        </trans-unit>
        <trans-unit id="c5e7913304df13157eca5adf23774332e392edc0" translate="yes" xml:space="preserve">
          <source>When such a new visit method is added, the default implementation in this class will be to call the &lt;a href=&quot;abstracttypevisitor6#visitUnknown-javax.lang.model.type.TypeMirror-P-&quot;&gt;&lt;code&gt;visitUnknown&lt;/code&gt;&lt;/a&gt; method. A new type kind visitor class will also be introduced to correspond to the new language level; this visitor will have different default behavior for the visit method in question. When the new visitor is introduced, all or portions of this visitor may be deprecated.</source>
          <target state="translated">当添加了这样一个新的visit方法时，此类中的默认实现将是调用&lt;a href=&quot;abstracttypevisitor6#visitUnknown-javax.lang.model.type.TypeMirror-P-&quot;&gt; &lt;code&gt;visitUnknown&lt;/code&gt; &lt;/a&gt;方法。还将引入一种新型的访客类，以适应新的语言水平；对于有问题的访问方法，此访问者将具有不同的默认行为。引入新访客后，可能会不赞成使用此访客的全部或部分。</target>
        </trans-unit>
        <trans-unit id="21130ee63b47bcee22d5206a3b440986ec034278" translate="yes" xml:space="preserve">
          <source>When symbolic links are supported, then whether the resulting path, when resolved against this path, yields a path that can be used to locate the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file as &lt;code&gt;other&lt;/code&gt; is implementation dependent. For example, if this path is &lt;code&gt;&quot;/a/b&quot;&lt;/code&gt; and the given path is &lt;code&gt;&quot;/a/x&quot;&lt;/code&gt; then the resulting relative path may be &lt;code&gt;&quot;../x&quot;&lt;/code&gt;. If &lt;code&gt;&quot;b&quot;&lt;/code&gt; is a symbolic link then is implementation dependent if &lt;code&gt;&quot;a/b/../x&quot;&lt;/code&gt; would locate the same file as &lt;code&gt;&quot;/a/x&quot;&lt;/code&gt;.</source>
          <target state="translated">如果支持符号链接，则针对该路径解析时，生成的路径是否生成可用于查找&lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt; &lt;code&gt;other&lt;/code&gt; 文件相同的文件的路径，具体取决于实现。例如，如果此路径为 &lt;code&gt;&quot;/a/b&quot;&lt;/code&gt; 并且给定路径为 &lt;code&gt;&quot;/a/x&quot;&lt;/code&gt; 则所得的相对路径可以为 &lt;code&gt;&quot;../x&quot;&lt;/code&gt; 。如果 &lt;code&gt;&quot;b&quot;&lt;/code&gt; 是符号链接，则如果 &lt;code&gt;&quot;a/b/../x&quot;&lt;/code&gt; 将定位与 &lt;code&gt;&quot;/a/x&quot;&lt;/code&gt; 相同的文件，则依赖于实现。</target>
        </trans-unit>
        <trans-unit id="9201aa7cc9fa88f4813925552674c147d8b25ef5" translate="yes" xml:space="preserve">
          <source>When testing the user-information, path, query, fragment, authority, or scheme-specific parts of two URIs for equality, the raw forms rather than the encoded forms of these components are compared and the hexadecimal digits of escaped octets are compared without regard to case.</source>
          <target state="translated">当测试两个URI的用户信息、路径、查询、片段、权限或特定方案部分是否相同时,比较的是这些组件的原始形式而不是编码形式,并且比较转义八位数的十六进制数字,而不考虑大小写。</target>
        </trans-unit>
        <trans-unit id="ee7ac132993577ecd59468c3647a9e567b53ac77" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;add&lt;/code&gt; method is called to add a Permission, the Permission is stored in the appropriate PermissionCollection. If no such collection exists yet, the Permission object's class is determined and the &lt;code&gt;newPermissionCollection&lt;/code&gt; method is called on that class to create the PermissionCollection and add it to the Permissions object. If &lt;code&gt;newPermissionCollection&lt;/code&gt; returns null, then a default PermissionCollection that uses a hashtable will be created and used. Each hashtable entry stores a Permission object as both the key and the value.</source>
          <target state="translated">当 &lt;code&gt;add&lt;/code&gt; 方法被调用来添加权限，权限被存储在适当的PermissionCollection。如果尚不存在这样的集合，则确定Permission对象的类，并在 &lt;code&gt;newPermissionCollection&lt;/code&gt; 上调用newPermissionCollection方法以创建PermissionCollection并将其添加到Permissions对象。如果 &lt;code&gt;newPermissionCollection&lt;/code&gt; 返回null，则将创建并使用使用哈希表的默认PermissionCollection。每个哈希表条目都将一个Permission对象存储为键和值。</target>
        </trans-unit>
        <trans-unit id="d4ff583386f934e25bcb252a53631116c45f985a" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;invokevirtual&lt;/code&gt; is executed after linking, the receiving method handle's type is first checked by the JVM to ensure that it matches the symbolic type descriptor. If the type match fails, it means that the method which the caller is invoking is not present on the individual method handle being invoked.</source>
          <target state="translated">当 &lt;code&gt;invokevirtual&lt;/code&gt; 是连接后执行时，该接收方法手柄的类型首先被JVM检查，以确保它的符号类型描述符相匹配。如果类型匹配失败，则表示正在调用的单个方法句柄上不存在调用方正在调用的方法。</target>
        </trans-unit>
        <trans-unit id="834601037ab0662f3396b5a79222cc36559945fd" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;keyIdentifier&lt;/code&gt; field of &lt;code&gt;AuthorityKeyIdentifier&lt;/code&gt; is populated, the value is usually taken from the &lt;code&gt;SubjectKeyIdentifier&lt;/code&gt; extension in the issuer's certificate. Note, however, that the result of &lt;code&gt;X509Certificate.getExtensionValue(&amp;lt;SubjectKeyIdentifier Object
 Identifier&amp;gt;)&lt;/code&gt; on the issuer's certificate may NOT be used directly as the input to &lt;code&gt;setAuthorityKeyIdentifier&lt;/code&gt;. This is because the SubjectKeyIdentifier contains only a KeyIdentifier OCTET STRING, and not a SEQUENCE of KeyIdentifier, GeneralNames, and CertificateSerialNumber. In order to use the extension value of the issuer certificate's &lt;code&gt;SubjectKeyIdentifier&lt;/code&gt; extension, it will be necessary to extract the value of the embedded &lt;code&gt;KeyIdentifier&lt;/code&gt; OCTET STRING, then DER encode this OCTET STRING inside a SEQUENCE. For more details on SubjectKeyIdentifier, see &lt;a href=&quot;x509certselector#setSubjectKeyIdentifier-byte:A-&quot;&gt;&lt;code&gt;setSubjectKeyIdentifier(byte[] subjectKeyID)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">当填充 &lt;code&gt;AuthorityKeyIdentifier&lt;/code&gt; 的 &lt;code&gt;keyIdentifier&lt;/code&gt; 字段时，该值通常取自颁发者证书中的 &lt;code&gt;SubjectKeyIdentifier&lt;/code&gt; 扩展名。但是请注意，颁发者证书上的 &lt;code&gt;X509Certificate.getExtensionValue(&amp;lt;SubjectKeyIdentifier Object Identifier&amp;gt;)&lt;/code&gt; 的结果不得直接用作 &lt;code&gt;setAuthorityKeyIdentifier&lt;/code&gt; 的输入。这是因为SubjectKeyIdentifier仅包含KeyIdentifier OCTET STRING，而不包含KeyIdentifier，GeneralNames和CertificateSerialNumber的SEQUENCE。为了使用颁发者证书的 &lt;code&gt;SubjectKeyIdentifier&lt;/code&gt; 扩展名的扩展值，有必要提取嵌入的值。 &lt;code&gt;KeyIdentifier&lt;/code&gt; OCTET STRING，然后DER在SEQUENCE中对该OCTET STRING进行编码。有关SubjectKeyIdentifier的更多详细信息，请参见&lt;a href=&quot;x509certselector#setSubjectKeyIdentifier-byte:A-&quot;&gt; &lt;code&gt;setSubjectKeyIdentifier(byte[] subjectKeyID)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a8d5a455eaa9bae77e2400ec125089de5958ee67" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;nextToken&lt;/code&gt; method encounters a string constant, the &lt;code&gt;ttype&lt;/code&gt; field is set to the string delimiter and the &lt;code&gt;sval&lt;/code&gt; field is set to the body of the string.</source>
          <target state="translated">当 &lt;code&gt;nextToken&lt;/code&gt; 方法遇到字符串常量时， &lt;code&gt;ttype&lt;/code&gt; 字段将设置为字符串定界符，而 &lt;code&gt;sval&lt;/code&gt; 字段将设置为字符串的主体。</target>
        </trans-unit>
        <trans-unit id="fad260ae6f20782961df5b3d238d1f3fbcb7ca36" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;registerApplicationClasspathSpis&lt;/code&gt; method is called, service provider instances declared in the meta-information section of JAR files on the application class path are loaded. To declare a service provider, a &lt;code&gt;services&lt;/code&gt; subdirectory is placed within the &lt;code&gt;META-INF&lt;/code&gt; directory that is present in every JAR file. This directory contains a file for each service provider interface that has one or more implementation classes present in the JAR file. For example, if the JAR file contained a class named &lt;code&gt;com.mycompany.imageio.MyFormatReaderSpi&lt;/code&gt; which implements the &lt;code&gt;ImageReaderSpi&lt;/code&gt; interface, the JAR file would contain a file named:</source>
          <target state="translated">当 &lt;code&gt;registerApplicationClasspathSpis&lt;/code&gt; 方法被调用，在应用程序类路径上的JAR文件的元信息部分声明的服务提供商实例被加载。为了声明服务提供者， &lt;code&gt;services&lt;/code&gt; 子目录位于每个JAR文件中存在的 &lt;code&gt;META-INF&lt;/code&gt; 目录中。该目录包含每个服务提供者接口的文件，该文件在JAR文件中具有一个或多个实现类。例如，如果JAR文件包含一个名为 &lt;code&gt;com.mycompany.imageio.MyFormatReaderSpi&lt;/code&gt; 的类，该类实现了 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 接口，则JAR文件将包含一个名为：</target>
        </trans-unit>
        <trans-unit id="515adaec2191bebc2d2c17a699cb4b4c2d2e4592" translate="yes" xml:space="preserve">
          <source>When the BasicAttributes class needs to create an Attribute, it uses BasicAttribute. There is no other dependency on BasicAttribute.</source>
          <target state="translated">当BasicAttributes类需要创建一个Attribute时,它使用BasicAttribute。BasicAttribute没有其他依赖性。</target>
        </trans-unit>
        <trans-unit id="e2b0cfb7cdca209b8227f0135c9ead5e644da49f" translate="yes" xml:space="preserve">
          <source>When the JNDI class library needs to determine the value of a property, it does so by merging the values from the following two sources, in order:</source>
          <target state="translated">当JNDI类库需要确定一个属性的值时,它通过按顺序合并以下两个来源的值来实现。</target>
        </trans-unit>
        <trans-unit id="8ff307d52b74a9d5a00fe0eeed0ad2b6f63f945d" translate="yes" xml:space="preserve">
          <source>When the JVM materializes a &lt;code&gt;MethodType&lt;/code&gt; from a descriptor string, all classes named in the descriptor must be accessible, and will be loaded. (But the classes need not be initialized, as is the case with a &lt;code&gt;CONSTANT_Class&lt;/code&gt;.) This loading may occur at any time before the &lt;code&gt;MethodType&lt;/code&gt; object is first derived.</source>
          <target state="translated">当JVM 从描述符字符串中实现 &lt;code&gt;MethodType&lt;/code&gt; 时，该描述符中命名的所有类都必须可访问并将被加载。 （但是不需要像 &lt;code&gt;CONSTANT_Class&lt;/code&gt; 那样初始化类。）这种加载可能在首次派生 &lt;code&gt;MethodType&lt;/code&gt; 对象之前的任何时间发生。</target>
        </trans-unit>
        <trans-unit id="242f542a50d3a5d71e04513db113467fef250729" translate="yes" xml:space="preserve">
          <source>When the JVM processes bytecode containing signature polymorphic calls, it will successfully link any such call, regardless of its symbolic type descriptor. (In order to retain type safety, the JVM will guard such calls with suitable dynamic type checks, as described elsewhere.)</source>
          <target state="translated">当JVM处理包含签名多态调用的字节码时,无论其符号类型描述符是什么,它都会成功链接任何这样的调用。为了保持类型安全,JVM将用适当的动态类型检查来保护这类调用,如其他地方所述)。</target>
        </trans-unit>
        <trans-unit id="2193c7a9c7d458a9821bb858408d7793d0ae7d86" translate="yes" xml:space="preserve">
          <source>When the Java Virtual Machine first starts, it determines if the system property &lt;code&gt;java.compiler&lt;/code&gt; exists. (System properties are accessible through &lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt;&lt;code&gt;System.getProperty(String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;system#getProperty-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;System.getProperty(String, String)&lt;/code&gt;&lt;/a&gt;. If so, it is assumed to be the name of a library (with a platform-dependent exact location and type); &lt;a href=&quot;system#loadLibrary-java.lang.String-&quot;&gt;&lt;code&gt;System.loadLibrary(java.lang.String)&lt;/code&gt;&lt;/a&gt; is called to load that library. If this loading succeeds, the function named &lt;code&gt;java_lang_Compiler_start()&lt;/code&gt; in that library is called.</source>
          <target state="translated">Java虚拟机首次启动时，它将确定系统属性 &lt;code&gt;java.compiler&lt;/code&gt; 是否存在。（系统属性可通过&lt;a href=&quot;system#getProperty-java.lang.String-&quot;&gt; &lt;code&gt;System.getProperty(String)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;system#getProperty-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;System.getProperty(String, String)&lt;/code&gt; &lt;/a&gt;。如果是，则假定它是库的名称（具有与平台有关的确切位置和类型）；&lt;a href=&quot;system#loadLibrary-java.lang.String-&quot;&gt; &lt;code&gt;System.loadLibrary(java.lang.String)&lt;/code&gt; &lt;/a&gt;被调用以加载该库，如果加载成功，则该库中名为 &lt;code&gt;java_lang_Compiler_start()&lt;/code&gt; 的函数被调用。</target>
        </trans-unit>
        <trans-unit id="ddddab91c8fcafe94a4c994027d61bf864bf4c44" translate="yes" xml:space="preserve">
          <source>When the Java virtual machine has no stack trace information about a thread or &lt;code&gt;maxDepth == 0&lt;/code&gt;, the stack trace in the &lt;code&gt;ThreadInfo&lt;/code&gt; object will be an empty array of &lt;code&gt;StackTraceElement&lt;/code&gt;.</source>
          <target state="translated">当Java虚拟机没有有关线程的堆栈跟踪信息或 &lt;code&gt;maxDepth == 0&lt;/code&gt; ， &lt;code&gt;ThreadInfo&lt;/code&gt; 对象中的堆栈跟踪将为 &lt;code&gt;StackTraceElement&lt;/code&gt; 的空数组。</target>
        </trans-unit>
        <trans-unit id="38db82049f33225d933e0b41a46907899f2d6c86" translate="yes" xml:space="preserve">
          <source>When the LoginContext uses the installed Configuration (instead of a caller-specified Configuration, see above), then this LoginContext must wrap any caller-specified or default CallbackHandler implementation in a new CallbackHandler implementation whose &lt;code&gt;handle&lt;/code&gt; method implementation invokes the specified CallbackHandler's &lt;code&gt;handle&lt;/code&gt; method in a &lt;code&gt;java.security.AccessController.doPrivileged&lt;/code&gt; call constrained by the caller's current &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="translated">当LoginContext使用已安装的Configuration（而不是调用方指定的Configuration，请参见上文）时，则此LoginContext必须将任何调用方指定的或默认的CallbackHandler实现包装在新的CallbackHandler实现中，该实现的 &lt;code&gt;handle&lt;/code&gt; 方法实现会在一个新的CallbackHandler中调用指定的CallbackHandler的 &lt;code&gt;handle&lt;/code&gt; 方法。受调用者当前 &lt;code&gt;AccessControlContext&lt;/code&gt; 约束的 &lt;code&gt;java.security.AccessController.doPrivileged&lt;/code&gt; 调用。</target>
        </trans-unit>
        <trans-unit id="59ad08ab5cdf3a4c4f05c736af38894997dad527" translate="yes" xml:space="preserve">
          <source>When the OOBINLINE option is set, any TCP urgent data received on the socket will be received through the socket input stream. When the option is disabled (which is the default) urgent data is silently discarded.</source>
          <target state="translated">当设置OOBINLINE选项时,套接字上收到的任何TCP紧急数据将通过套接字输入流接收。当该选项被禁用时(默认情况下),紧急数据将被默默丢弃。</target>
        </trans-unit>
        <trans-unit id="dabf2aef104d7b63f254f09d8ef274526085868a" translate="yes" xml:space="preserve">
          <source>When the Open Type is &lt;code&gt;CompositeType&lt;/code&gt;, the corresponding mapped Java type (&lt;em&gt;opendata(J)&lt;/em&gt;) is &lt;a href=&quot;openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt;. The mapping from an instance of &lt;em&gt;J&lt;/em&gt; to a &lt;code&gt;CompositeData&lt;/code&gt; corresponding to the &lt;code&gt;CompositeType&lt;/code&gt; just described is done as follows. First, if &lt;em&gt;J&lt;/em&gt; implements the interface &lt;a href=&quot;openmbean/compositedataview&quot;&gt;&lt;code&gt;CompositeDataView&lt;/code&gt;&lt;/a&gt;, then that interface's &lt;a href=&quot;openmbean/compositedataview#toCompositeData-javax.management.openmbean.CompositeType-&quot;&gt;&lt;code&gt;toCompositeData&lt;/code&gt;&lt;/a&gt; method is called to do the conversion. Otherwise, the &lt;code&gt;CompositeData&lt;/code&gt; is constructed by calling the getter for each item and converting it to the corresponding Open Data type. Thus, a getter such as</source>
          <target state="translated">当Open Type为 &lt;code&gt;CompositeType&lt;/code&gt; 时，对应的映射Java类型（&lt;em&gt;opendata（J）&lt;/em&gt;）为&lt;a href=&quot;openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; &lt;/a&gt;。从&lt;em&gt;J&lt;/em&gt;的实例到对应于刚才描述的 &lt;code&gt;CompositeType&lt;/code&gt; 的 &lt;code&gt;CompositeData&lt;/code&gt; 的映射如下进行。首先，如果&lt;em&gt;J&lt;/em&gt;实现接口&lt;a href=&quot;openmbean/compositedataview&quot;&gt; &lt;code&gt;CompositeDataView&lt;/code&gt; &lt;/a&gt;，那么将调用该接口的&lt;a href=&quot;openmbean/compositedataview#toCompositeData-javax.management.openmbean.CompositeType-&quot;&gt; &lt;code&gt;toCompositeData&lt;/code&gt; &lt;/a&gt;方法进行转换。否则，通过为每个项目调用getter并将其转换为相应的Open Data类型来构造 &lt;code&gt;CompositeData&lt;/code&gt; 。因此，诸如&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5cc6a806fe924f827c1be349c2dda336ff41691d" translate="yes" xml:space="preserve">
          <source>When the access permissions are set at file creation time then the actual value of the permissions may differ that the value of the attribute object. The reasons for this are implementation specific. On UNIX systems, for example, a process has a &lt;em&gt;umask&lt;/em&gt; that impacts the permission bits of newly created files. Where an implementation supports the setting of the access permissions, and the underlying file system supports access permissions, then it is required that the value of the actual access permissions will be equal or less than the value of the attribute provided to the &lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createFile&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;createDirectory&lt;/code&gt;&lt;/a&gt; methods. In other words, the file may be more secure than requested.</source>
          <target state="translated">当在文件创建时设置访问权限时，权限的实际值可能与属性对象的值不同。这样做的原因是特定于实现的。例如，在UNIX系统上，进程的&lt;em&gt;umask&lt;/em&gt;影响新创建文件的权限位。如果实现支持访问权限的设置，而基础文件系统支持访问权限，则要求实际访问权限的值等于或小于提供给&lt;a href=&quot;../files#createFile-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createFile&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../files#createDirectory-java.nio.file.Path-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;createDirectory&lt;/code&gt; &lt;/a&gt;方法的属性的值。换句话说，文件可能比请求的文件更安全。</target>
        </trans-unit>
        <trans-unit id="3dd6047101821af20c03ece3438348c43a2a0666" translate="yes" xml:space="preserve">
          <source>When the client is running a later version than the server, certain newer features may not be available, as detailed in the next sections. The client can determine the server's version by examining the &lt;a href=&quot;mbeanserverdelegatembean#getSpecificationVersion--&quot;&gt;&lt;code&gt;SpecificationVersion&lt;/code&gt;&lt;/a&gt; attribute of the &lt;code&gt;MBeanServerDelegate&lt;/code&gt;.</source>
          <target state="translated">当客户端运行的服务器版本高于服务器时，某些较新的功能可能不可用，如以下各节所述。客户端可以通过检查 &lt;code&gt;MBeanServerDelegate&lt;/code&gt; 的&lt;a href=&quot;mbeanserverdelegatembean#getSpecificationVersion--&quot;&gt; &lt;code&gt;SpecificationVersion&lt;/code&gt; &lt;/a&gt;属性来确定服务器的版本。</target>
        </trans-unit>
        <trans-unit id="5b2259ec0cf9dd1eabb68562ba1068a405b4ffb3" translate="yes" xml:space="preserve">
          <source>When the condition &lt;a href=&quot;condition#await--&quot;&gt;waiting&lt;/a&gt; methods are called the lock is released and, before they return, the lock is reacquired and the lock hold count restored to what it was when the method was called.</source>
          <target state="translated">当调用条件&lt;a href=&quot;condition#await--&quot;&gt;等待&lt;/a&gt;方法时，将释放该锁，并在它们返回之前，重新获取该锁，并将锁保持计数恢复到调用该方法时的状态。</target>
        </trans-unit>
        <trans-unit id="79dff109a2169a02dd1a4794f9a2ae88690f5d47" translate="yes" xml:space="preserve">
          <source>When the condition &lt;a href=&quot;condition#await--&quot;&gt;waiting&lt;/a&gt; methods are called the write lock is released and, before they return, the write lock is reacquired and the lock hold count restored to what it was when the method was called.</source>
          <target state="translated">当条件&lt;a href=&quot;condition#await--&quot;&gt;等待&lt;/a&gt;方法被调用时，写锁定被释放，并且在它们返回之前，将重新获取写锁定，并将锁保持计数恢复到调用该方法时的状态。</target>
        </trans-unit>
        <trans-unit id="4cd824f5c7e1568ccbcd115d44b4eb96a3accf69" translate="yes" xml:space="preserve">
          <source>When the environment property &quot;java.naming.factory.initial&quot; is non-null, the InitialContext constructor will attempt to create the initial context specified therein. At that time, the initial context factory involved might throw an exception if a problem is encountered. However, it is provider implementation-dependent when it verifies and indicates to the users of the initial context any environment property- or connection- related problems. It can do so lazily--delaying until an operation is performed on the context, or eagerly, at the time the context is constructed.</source>
          <target state="translated">当环境属性 &quot;java.naming.factory.initial &quot;为非空时,InitialContext构造函数将尝试创建其中指定的初始上下文。此时,如果遇到问题,涉及的初始上下文工厂可能会抛出一个异常。然而,当它验证并向初始上下文的用户指示任何环境属性或连接相关的问题时,它是依赖于提供者实现的。它可以懒惰地这样做--推迟到对上下文进行操作,也可以急切地在上下文被构造时这样做。</target>
        </trans-unit>
        <trans-unit id="09c83d44797e06cf825594da62f38b3618a765cb" translate="yes" xml:space="preserve">
          <source>When the file system uses an ACL model that differs from the NFSv4 defined ACL model, then this method returns an ACL that is the translation of the ACL to the NFSv4 ACL model.</source>
          <target state="translated">当文件系统使用的ACL模型与NFSv4定义的ACL模型不同时,那么这个方法返回的ACL就是该ACL向NFSv4 ACL模型的翻译。</target>
        </trans-unit>
        <trans-unit id="34c8ca9cd568392c4eb67ef03c9038a10b794d59" translate="yes" xml:space="preserve">
          <source>When the initial context is constructed, its environment is initialized with properties defined in the environment parameter passed to the constructor, and in any &lt;a href=&quot;context#RESOURCEFILES&quot; id=&quot;ENVIRONMENT&quot;&gt;application resource files&lt;/a&gt;. In addition, a small number of standard JNDI properties may be specified as system properties or as applet parameters (through the use of &lt;a href=&quot;context#APPLET&quot;&gt;&lt;code&gt;Context.APPLET&lt;/code&gt;&lt;/a&gt;). These special properties are listed in the field detail sections of the &lt;a href=&quot;context#field_detail&quot;&gt;&lt;code&gt;Context&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;ldap/ldapcontext#field_detail&quot;&gt;&lt;code&gt;LdapContext&lt;/code&gt;&lt;/a&gt; interface documentation.</source>
          <target state="translated">构造初始上下文时，将使用在传递给构造函数的环境参数以及所有&lt;a href=&quot;context#RESOURCEFILES&quot; id=&quot;ENVIRONMENT&quot;&gt;应用程序资源文件中&lt;/a&gt;定义的属性来初始化其环境。另外，可以将少量标准JNDI属性指定为系统属性或applet参数（通过使用&lt;a href=&quot;context#APPLET&quot;&gt; &lt;code&gt;Context.APPLET&lt;/code&gt; &lt;/a&gt;）。这些特殊属性在&lt;a href=&quot;context#field_detail&quot;&gt; &lt;code&gt;Context&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;ldap/ldapcontext#field_detail&quot;&gt; &lt;code&gt;LdapContext&lt;/code&gt; &lt;/a&gt;接口文档的字段详细信息部分中列出。</target>
        </trans-unit>
        <trans-unit id="3af901ecd46db6d3c503ad63c889dcb1df5223cb" translate="yes" xml:space="preserve">
          <source>When the intern method is invoked, if the pool already contains a string equal to this &lt;code&gt;String&lt;/code&gt; object as determined by the &lt;a href=&quot;string#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt; method, then the string from the pool is returned. Otherwise, this &lt;code&gt;String&lt;/code&gt; object is added to the pool and a reference to this &lt;code&gt;String&lt;/code&gt; object is returned.</source>
          <target state="translated">调用intern方法时，如果池已经包含&lt;a href=&quot;string#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt;方法确定的此 &lt;code&gt;String&lt;/code&gt; 对象的字符串，则返回池中的字符串。否则，将此 &lt;code&gt;String&lt;/code&gt; 对象添加到池中，并返回对此 &lt;code&gt;String&lt;/code&gt; 对象的引用。</target>
        </trans-unit>
        <trans-unit id="1a58835a2387f608fd8e7fa6effa626edf3d2325" translate="yes" xml:space="preserve">
          <source>When the job is in the PROCESSING state, the entire job state includes the detailed status represented in the printer's &lt;a href=&quot;printerstate&quot;&gt;&lt;code&gt;PrinterState&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;printerstatereasons&quot;&gt;&lt;code&gt;PrinterStateReasons&lt;/code&gt;&lt;/a&gt; attributes.</source>
          <target state="translated">当作业处于&amp;ldquo;正在处理&amp;rdquo;状态时，整个作业状态包括打印机的&lt;a href=&quot;printerstate&quot;&gt; &lt;code&gt;PrinterState&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;printerstatereasons&quot;&gt; &lt;code&gt;PrinterStateReasons&lt;/code&gt; &lt;/a&gt;属性中表示的详细状态。</target>
        </trans-unit>
        <trans-unit id="bb6061dea9059e4de3096353b5e5aab377ef19b3" translate="yes" xml:space="preserve">
          <source>When the keepalive option is set for a TCP socket and no data has been exchanged across the socket in either direction for 2 hours (NOTE: the actual value is implementation dependent), TCP automatically sends a keepalive probe to the peer. This probe is a TCP segment to which the peer must respond. One of three responses is expected: 1. The peer responds with the expected ACK. The application is not notified (since everything is OK). TCP will send another probe following another 2 hours of inactivity. 2. The peer responds with an RST, which tells the local TCP that the peer host has crashed and rebooted. The socket is closed. 3. There is no response from the peer. The socket is closed. The purpose of this option is to detect if the peer host crashes. Valid only for TCP socket: SocketImpl</source>
          <target state="translated">当为一个TCP套接字设置了keepalive选项,并且在2小时内没有在套接字的任何一个方向上交换数据时(注意:实际值取决于实现),TCP会自动向对等体发送一个keepalive探针。这个探针是对等体必须响应的TCP段。三种响应中的一种是预期的:1.对等体用预期的ACK响应。应用程序没有得到通知(因为一切正常)。TCP将在另一个2小时的不活动之后发送另一个探针。2.对等体用RST响应,它告诉本地TCP,对等体主机已经崩溃并重新启动。套接字被关闭。3.对等体没有响应。该套接字被关闭。这个选项的目的是检测对等主机是否崩溃。仅对TCP套接字有效。SocketImpl</target>
        </trans-unit>
        <trans-unit id="866732f7e1f1ba8888b09a311866448987c8a922" translate="yes" xml:space="preserve">
          <source>When the languageTag argument contains an extlang subtag, the first such subtag is used as the language, and the primary language subtag and other extlang subtags are ignored:</source>
          <target state="translated">当languageTag参数包含一个extlang子标签时,第一个这样的子标签被用作语言,而主语言子标签和其他extlang子标签被忽略。</target>
        </trans-unit>
        <trans-unit id="ed36ba14c7223ab42eda132f49f243999c7fe2b2" translate="yes" xml:space="preserve">
          <source>When the listener is notified of an event, the listener may in invoked in a thread other than the one in which &lt;code&gt;addNamingListener()&lt;/code&gt; is executed. Care must be taken when multiple threads are accessing the same &lt;code&gt;EventContext&lt;/code&gt; concurrently. See the &lt;a href=&quot;package-summary#THREADING&quot;&gt;package description&lt;/a&gt; for more information on threading issues.</source>
          <target state="translated">当侦听器收到事件通知时，侦听器可以在不同于执行 &lt;code&gt;addNamingListener()&lt;/code&gt; 的线程中调用。当多个线程同时访问同一 &lt;code&gt;EventContext&lt;/code&gt; 时，必须小心。有关线程问题的更多信息，请参见&lt;a href=&quot;package-summary#THREADING&quot;&gt;软件包描述&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0d9cde70e42ddbed9e83b6ac5078af513cb772df" translate="yes" xml:space="preserve">
          <source>When the locale has neither script nor extensions, the result is the same as in Java 6 and prior.</source>
          <target state="translated">当locale既没有脚本也没有扩展时,其结果与Java 6及以前的版本相同。</target>
        </trans-unit>
        <trans-unit id="f8a5f29e1d264a025ea5669456267893f0f08fec" translate="yes" xml:space="preserve">
          <source>When the parse fails, use ParsePosition.getErrorIndex() to find out where in the string the parsing failed. The returned error index is the starting offset of the sub-patterns that the string is comparing with. For example, if the parsing string &quot;AAA {0} BBB&quot; is comparing against the pattern &quot;AAD {0} BBB&quot;, the error index is 0. When an error occurs, the call to this method will return null. If the source is null, return an empty array.</source>
          <target state="translated">当解析失败时,使用ParsePosition.getErrorIndex()找出字符串中哪里解析失败。返回的错误索引是字符串所比较的子模式的起始偏移量。例如,如果解析字符串 &quot;AAA {0}BBBB &quot;与模式 &quot;AAD {0}BBBB &quot;进行比较,则错误索引为0。 当发生错误时,对该方法的调用将返回null。如果源为空,则返回一个空数组。</target>
        </trans-unit>
        <trans-unit id="72cc5d6ed97f5b594ccc044348c9065ad0416c01" translate="yes" xml:space="preserve">
          <source>When the parser encounters a word token that has the format of a double precision floating-point number, it treats the token as a number rather than a word, by setting the &lt;code&gt;ttype&lt;/code&gt; field to the value &lt;code&gt;TT_NUMBER&lt;/code&gt; and putting the numeric value of the token into the &lt;code&gt;nval&lt;/code&gt; field.</source>
          <target state="translated">当解析器遇到具有双精度浮点数格式的单词标记时，它将 &lt;code&gt;ttype&lt;/code&gt; 字段设置为值 &lt;code&gt;TT_NUMBER&lt;/code&gt; 并将该标记的数值放入该 &lt;code&gt;nval&lt;/code&gt; 场。</target>
        </trans-unit>
        <trans-unit id="78bae3a9fd2477af6b829cef33248071afc46dc2" translate="yes" xml:space="preserve">
          <source>When the peer was not able to identify itself (for example; no certificate, the particular cipher suite being used does not support authentication, or no peer authentication was established during SSL handshaking) this exception is thrown.</source>
          <target state="translated">当对等体无法识别自己的身份时(例如:没有证书,所使用的特定密码套件不支持身份验证,或者在SSL握手期间没有建立对等体身份验证),就会抛出这个异常。</target>
        </trans-unit>
        <trans-unit id="e0488e20002eb573a021336f9689d0df5866d2de" translate="yes" xml:space="preserve">
          <source>When the precision setting is not 0, the rules of &lt;code&gt;BigDecimal&lt;/code&gt; arithmetic are broadly compatible with selected modes of operation of the arithmetic defined in ANSI X3.274-1996 and ANSI X3.274-1996/AM 1-2000 (section 7.4). Unlike those standards, &lt;code&gt;BigDecimal&lt;/code&gt; includes many rounding modes, which were mandatory for division in &lt;code&gt;BigDecimal&lt;/code&gt; releases prior to 5. Any conflicts between these ANSI standards and the &lt;code&gt;BigDecimal&lt;/code&gt; specification are resolved in favor of &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">当精度设置不为0时， &lt;code&gt;BigDecimal&lt;/code&gt; 算术规则与ANSI X3.274-1996和ANSI X3.274-1996 / AM 1-2000（第7.4节）中定义的算术的选定操作模式广泛兼容。与上述标准不同， &lt;code&gt;BigDecimal&lt;/code&gt; 的包括多种舍入模式，这是强制性的除法中 &lt;code&gt;BigDecimal&lt;/code&gt; 释放之前5.这些ANSI标准和之间的任何冲突 &lt;code&gt;BigDecimal&lt;/code&gt; 规格有利于得到解决 &lt;code&gt;BigDecimal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5843d706baf770064c5e4bf338f1a63714ad7a1d" translate="yes" xml:space="preserve">
          <source>When the representation class is a URL, the print service itself accesses and downloads the document directly from its URL address, without involving the client. The service may be some form of network print service which is executing in a different environment. This means you should not use a URL print data flavor to print a document at a restricted URL that the client can see but the printer cannot see. This also means you should not use a URL print data flavor to print a document stored in a local file that is not available at a URL accessible independently of the client. For example, a file that is not served up by an HTTP server or FTP server. To print such documents, let the client open an input stream on the URL or file and use an input stream data flavor.</source>
          <target state="translated">当表示类是URL时,打印服务本身直接从其URL地址访问和下载文档,而不涉及客户端。该服务可能是某种形式的网络打印服务,它在不同的环境中执行。这意味着您不应该使用 URL 打印数据功能在客户端可以看到但打印机无法看到的受限 URL 上打印文档。这也意味着您不应该使用 URL 打印数据风味来打印存储在本地文件中的文档,而该文档在客户端独立访问的 URL 中不可用。例如,不是由HTTP服务器或FTP服务器提供的文件。要打印这类文档,请让客户端在URL或文件上打开一个输入流,并使用输入流数据风味。</target>
        </trans-unit>
        <trans-unit id="c97f96f2fd46091c0f2026852faa74a91e5bd86f" translate="yes" xml:space="preserve">
          <source>When the socket is created the &lt;a href=&quot;datagramsocket#setReuseAddress-boolean-&quot;&gt;&lt;code&gt;DatagramSocket.setReuseAddress(boolean)&lt;/code&gt;&lt;/a&gt; method is called to enable the SO_REUSEADDR socket option.</source>
          <target state="translated">创建套接字后，将调用&lt;a href=&quot;datagramsocket#setReuseAddress-boolean-&quot;&gt; &lt;code&gt;DatagramSocket.setReuseAddress(boolean)&lt;/code&gt; &lt;/a&gt;方法以启用SO_REUSEADDR套接字选项。</target>
        </trans-unit>
        <trans-unit id="5705af97d2330caf062737553687cb90dd63be9e" translate="yes" xml:space="preserve">
          <source>When the specified date-time arrives, the printer must remove the &lt;a href=&quot;jobstatereason&quot;&gt;&lt;code&gt;JobStateReason&lt;/code&gt;&lt;/a&gt; value of JOB_HOLD_UNTIL_SPECIFIED from the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute, if present. If there are no other job state reasons that keep the job in the PENDING_HELD state, the printer must consider the job as a candidate for processing by moving the job to the PENDING state.</source>
          <target state="translated">当指定的日期时间到来时，打印机必须从作业的&lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt;属性（如果存在）中删除JOB_HOLD_UNTIL_SPECIFIED 的&lt;a href=&quot;jobstatereason&quot;&gt; &lt;code&gt;JobStateReason&lt;/code&gt; &lt;/a&gt;值。如果没有其他作业状态原因使作业保持在PENDING_HELD状态，则打印机必须通过将作业移至PENDING状态将作业视为要处理的候选对象。</target>
        </trans-unit>
        <trans-unit id="88645d98095c743d1978459bbe537d54c96def54" translate="yes" xml:space="preserve">
          <source>When the specified provider is removed, all providers located at a position greater than where the specified provider was are shifted down one position (towards the head of the list of installed providers).</source>
          <target state="translated">当指定的供应商被删除时,位于比指定供应商位置更高的位置的所有供应商都会下移一个位置(朝向已安装供应商列表的头部)。</target>
        </trans-unit>
        <trans-unit id="a42df38aa359f6593f2ef17a8352c58477850724" translate="yes" xml:space="preserve">
          <source>When the syntax is &quot;&lt;code&gt;glob&lt;/code&gt;&quot; then the &lt;code&gt;String&lt;/code&gt; representation of the path is matched using a limited pattern language that resembles regular expressions but with a simpler syntax. For example:</source>
          <target state="translated">当语法为&amp;ldquo; &lt;code&gt;glob&lt;/code&gt; &amp;rdquo;时，将使用类似于正则表达式但语法更简单的有限模式语言来匹配路径的 &lt;code&gt;String&lt;/code&gt; 表示形式。例如：</target>
        </trans-unit>
        <trans-unit id="a34d7bcd42ea49862772510bb9b109c7b63aa486" translate="yes" xml:space="preserve">
          <source>When the syntax is &quot;&lt;code&gt;regex&lt;/code&gt;&quot; then the pattern component is a regular expression as defined by the &lt;a href=&quot;../../util/regex/pattern&quot;&gt;&lt;code&gt;Pattern&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">当语法为&amp;ldquo; &lt;code&gt;regex&lt;/code&gt; &amp;rdquo;时，模式组件是由&lt;a href=&quot;../../util/regex/pattern&quot;&gt; &lt;code&gt;Pattern&lt;/code&gt; &lt;/a&gt;类定义的正则表达式。</target>
        </trans-unit>
        <trans-unit id="d7d520f5e0468b072c681c7152b26b75810e8caf" translate="yes" xml:space="preserve">
          <source>When the target of the &lt;code&gt;CallSite&lt;/code&gt; returned from this method is invoked, the resulting function objects are instances of a class which implements the interface named by the return type of &lt;code&gt;invokedType&lt;/code&gt;, declares a method with the name given by &lt;code&gt;invokedName&lt;/code&gt; and the signature given by &lt;code&gt;samMethodType&lt;/code&gt;. It may also override additional methods from &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">调用从此方法返回的 &lt;code&gt;CallSite&lt;/code&gt; 的目标时，生成的函数对象是一个类的实例，该类实现以 &lt;code&gt;invokedType&lt;/code&gt; 的返回类型命名的接口，声明一个方法，其名称由 &lt;code&gt;invokedName&lt;/code&gt; 给出，并且签名由 &lt;code&gt;samMethodType&lt;/code&gt; 给出。它还可能会覆盖 &lt;code&gt;Object&lt;/code&gt; 中的其他方法。</target>
        </trans-unit>
        <trans-unit id="935f09a1ca1fda156388d4a2ee040efb3dfa7c02" translate="yes" xml:space="preserve">
          <source>When the target of the &lt;code&gt;CallSite&lt;/code&gt; returned from this method is invoked, the resulting function objects are instances of a class with the following properties:</source>
          <target state="translated">调用从此方法返回的 &lt;code&gt;CallSite&lt;/code&gt; 的目标时，生成的函数对象是具有以下属性的类的实例：</target>
        </trans-unit>
        <trans-unit id="3845d46c4ef86f663a835d134902a3051dd1ea04" translate="yes" xml:space="preserve">
          <source>When the virtual machine's built-in class loader, known as the &quot;bootstrap class loader&quot;, unsuccessfully searches for a class, the entries in the &lt;a href=&quot;../../util/jar/jarfile&quot;&gt;&lt;code&gt;JAR file&lt;/code&gt;&lt;/a&gt; will be searched as well.</source>
          <target state="translated">当虚拟机的内置类加载器（称为&amp;ldquo;引导类加载器&amp;rdquo;）无法成功搜索类时，还将搜索&lt;a href=&quot;../../util/jar/jarfile&quot;&gt; &lt;code&gt;JAR file&lt;/code&gt; &lt;/a&gt;的条目。</target>
        </trans-unit>
        <trans-unit id="78301597bc29e04c67c4b5e8569630b44e2a80b1" translate="yes" xml:space="preserve">
          <source>When there are no more tokens, the last value found in the child-cache or returned by &lt;code&gt;childSpi&lt;/code&gt; is returned by this method. If during the traversal, two &lt;code&gt;&quot;/&quot;&lt;/code&gt; tokens occur consecutively, or the final token is &lt;code&gt;&quot;/&quot;&lt;/code&gt; (rather than a name), an appropriate &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">如果没有更多的令牌，则此方法将返回在子缓存中找到或由 &lt;code&gt;childSpi&lt;/code&gt; 返回的最后一个值。如果在遍历期间连续出现两个 &lt;code&gt;&quot;/&quot;&lt;/code&gt; 标记，或者最终标记为 &lt;code&gt;&quot;/&quot;&lt;/code&gt; （而不是名称），则会引发适当的 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd91b0658c6cf431015b14f6a00de46f9c97ac60" translate="yes" xml:space="preserve">
          <source>When there is a positive-width match at the beginning of the input sequence then an empty leading substring is included at the beginning of the resulting array. A zero-width match at the beginning however never produces such empty leading substring.</source>
          <target state="translated">当输入序列的开头有一个正宽度的匹配,那么一个空的前导子串就会包含在结果数组的开头。然而,在开头的零宽度匹配永远不会产生这样的空前导子串。</target>
        </trans-unit>
        <trans-unit id="ab6bcee9543d79d3bbe811e0f20b9a8c6356f175" translate="yes" xml:space="preserve">
          <source>When there is a positive-width match at the beginning of the input sequence then an empty leading substring is included at the beginning of the stream. A zero-width match at the beginning however never produces such empty leading substring.</source>
          <target state="translated">当输入序列的开头有一个正宽度的匹配,那么一个空的前导子串就会被包含在数据流的开头。然而,在开头的零宽度匹配绝不会产生这样的空前导子串。</target>
        </trans-unit>
        <trans-unit id="735c807118b30a042caeeea37d2a0653aefeb1e0" translate="yes" xml:space="preserve">
          <source>When there is a positive-width match at the beginning of this string then an empty leading substring is included at the beginning of the resulting array. A zero-width match at the beginning however never produces such empty leading substring.</source>
          <target state="translated">当这个字符串的开头有一个正宽度的匹配,那么一个空的前导子串就会包含在结果数组的开头。然而,在开头的零宽度匹配永远不会产生这样一个空的前导子串。</target>
        </trans-unit>
        <trans-unit id="cbcf2b7b42302b4ba4fae27e923d6a973f224d28" translate="yes" xml:space="preserve">
          <source>When this fails, the resolution will be retried with the specified prefix deleted from the implementation name, yielding the correct resolution:</source>
          <target state="translated">如果失败了,将从实现名称中删除指定的前缀,重新进行解析,得到正确的解析结果。</target>
        </trans-unit>
        <trans-unit id="ff9da4b4449f564bcf08ecf5f687a2592cebde98" translate="yes" xml:space="preserve">
          <source>When this fails, the resolution will be retried with the specified prefix prepended to the method name, yielding the correct resolution:</source>
          <target state="translated">如果失败了,将用指定的方法名前缀重新进行解析,得到正确的解析结果。</target>
        </trans-unit>
        <trans-unit id="eaab9ca0b04a7049f2a9f2eca0230f3f4e33a263" translate="yes" xml:space="preserve">
          <source>When this field is used for setting a value, it should behave in the same way as setting &lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; with the value multiplied by 1,000,000.</source>
          <target state="translated">当此字段用于设置值时，其行为应与设置值乘以1,000,000的&lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="db9acfde62bdc912d95eb549ddc180babc48a672" translate="yes" xml:space="preserve">
          <source>When this field is used for setting a value, it should behave in the same way as setting &lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; with the value multiplied by 1,000.</source>
          <target state="translated">当此字段用于设置值时，其行为应与设置&lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;（值乘以1000）相同。</target>
        </trans-unit>
        <trans-unit id="b434d16d4beadd3f769e9c367e4be1fa9657e587" translate="yes" xml:space="preserve">
          <source>When this field is used for setting a value, it should behave in the same way as setting &lt;a href=&quot;chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; with the value multiplied by 1,000,000.</source>
          <target state="translated">当此字段用于设置值时，其行为应与设置值乘以1,000,000的&lt;a href=&quot;chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="4dce2d6953f5a46462f20dc8f01aaa03fa0ee37c" translate="yes" xml:space="preserve">
          <source>When this field is used for setting a value, it should behave in the same way as setting &lt;a href=&quot;chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; with the value multiplied by 1,000.</source>
          <target state="translated">当此字段用于设置值时，其行为应与将值乘以1000 设置&lt;a href=&quot;chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="7f48a54b9eb38bdd2ccfe0a591106ec4e77d4089" translate="yes" xml:space="preserve">
          <source>When this field is used for setting a value, it should set as much precision as the object stores, using integer division to remove excess precision. For example, if the &lt;code&gt;TemporalAccessor&lt;/code&gt; stores time to millisecond precision, then the nano-of-second must be divided by 1,000,000 before replacing the milli-of-second.</source>
          <target state="translated">使用此字段设置值时，应设置与对象存储的精度相同的精度，并使用整数除法删除多余的精度。例如，如果 &lt;code&gt;TemporalAccessor&lt;/code&gt; 以毫秒为单位存储时间，则在替换毫秒之前必须将1纳秒除以1,000,000。</target>
        </trans-unit>
        <trans-unit id="7586fee8208377dc85e8eeb7ce578740e81e481a" translate="yes" xml:space="preserve">
          <source>When this flag is specified then case-insensitive matching, when enabled by the &lt;a href=&quot;pattern#CASE_INSENSITIVE&quot;&gt;&lt;code&gt;CASE_INSENSITIVE&lt;/code&gt;&lt;/a&gt; flag, is done in a manner consistent with the Unicode Standard. By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched.</source>
          <target state="translated">如果指定了此标志，则由&lt;a href=&quot;pattern#CASE_INSENSITIVE&quot;&gt; &lt;code&gt;CASE_INSENSITIVE&lt;/code&gt; &lt;/a&gt;标志启用时，不区分大小写的匹配将以与Unicode标准一致的方式进行。默认情况下，不区分大小写的匹配假定只匹配US-ASCII字符集中的字符。</target>
        </trans-unit>
        <trans-unit id="14b51aaf8931fe8814ff8bce6f0f7714b23eea9c" translate="yes" xml:space="preserve">
          <source>When this flag is specified then the (US-ASCII only)</source>
          <target state="translated">如果指定了这个标志,那么(仅适用于US-ASCII)。</target>
        </trans-unit>
        <trans-unit id="a5a64aeef21bfe24b3dc25f14183010379e48ae2" translate="yes" xml:space="preserve">
          <source>When this flag is specified then the input string that specifies the pattern is treated as a sequence of literal characters. Metacharacters or escape sequences in the input sequence will be given no special meaning.</source>
          <target state="translated">当指定了这个标志时,指定模式的输入字符串将被视为一个文字字符序列。输入序列中的元字符或转义序列不会被赋予特殊意义。</target>
        </trans-unit>
        <trans-unit id="21f1033522929794d630209592d380a1564d3a0e" translate="yes" xml:space="preserve">
          <source>When this flag is specified then two characters will be considered to match if, and only if, their full canonical decompositions match. The expression &lt;code&gt;&quot;a\u030A&quot;&lt;/code&gt;, for example, will match the string &lt;code&gt;&quot;\u00E5&quot;&lt;/code&gt; when this flag is specified. By default, matching does not take canonical equivalence into account.</source>
          <target state="translated">指定此标志后，只有且仅当其完整规范分解匹配时，两个字符才会被视为匹配。例如，在指定此标志时，表达式 &lt;code&gt;&quot;a\u030A&quot;&lt;/code&gt; 将匹配字符串 &lt;code&gt;&quot;\u00E5&quot;&lt;/code&gt; 。默认情况下，匹配不考虑规范对等。</target>
        </trans-unit>
        <trans-unit id="c46ec6437cd48feaac1a48bb7981ed49d818cc15" translate="yes" xml:space="preserve">
          <source>When this method is first called, it creates a single new pseudorandom-number generator, exactly as if by the expression</source>
          <target state="translated">当这个方法第一次被调用时,它创建了一个新的伪随机数生成器,就像通过表达式一样。</target>
        </trans-unit>
        <trans-unit id="52757c7befe8d92c9dd6861f446c19ec7ae3c908" translate="yes" xml:space="preserve">
          <source>When this method is observed via the Core Reflection API, it will appear as a single native method, taking an object array and returning an object. If this native method is invoked directly via &lt;a href=&quot;../reflect/method#invoke-java.lang.Object-java.lang.Object...-&quot;&gt;&lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt;&lt;/a&gt;, via JNI, or indirectly via &lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt;&lt;code&gt;Lookup.unreflect&lt;/code&gt;&lt;/a&gt;, it will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">当通过Core Reflection API观察到此方法时，它将显示为单个本机方法，它采用一个对象数组并返回一个对象。如果直接通过&lt;a href=&quot;../reflect/method#invoke-java.lang.Object-java.lang.Object...-&quot;&gt; &lt;code&gt;java.lang.reflect.Method.invoke&lt;/code&gt; &lt;/a&gt;，通过JNI或通过&lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt; &lt;code&gt;Lookup.unreflect&lt;/code&gt; &lt;/a&gt;间接调用此本机方法，它将抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ee3ff5f0b0cb85ef35aeb00902b551ab3ba4149" translate="yes" xml:space="preserve">
          <source>When this method returns true, then it is possible that more input would have changed the result of the last search.</source>
          <target state="translated">当这个方法返回true时,那么有可能更多的输入会改变上次搜索的结果。</target>
        </trans-unit>
        <trans-unit id="c3d23117d12579aaf94e4afd1d23df8d2a8c9c22" translate="yes" xml:space="preserve">
          <source>When this option is present then the implementation makes a &lt;em&gt;best effort&lt;/em&gt; attempt to delete the file when closed by the &lt;a href=&quot;../channels/channel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. If the &lt;code&gt;close&lt;/code&gt; method is not invoked then a &lt;em&gt;best effort&lt;/em&gt; attempt is made to delete the file when the Java virtual machine terminates.</source>
          <target state="translated">如果存在此选项，则当使用&lt;a href=&quot;../channels/channel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法关闭时，实现会&lt;em&gt;尽最大努力&lt;/em&gt;尝试删除文件。如果未调用 &lt;code&gt;close&lt;/code&gt; 方法，则在Java虚拟机终止时会&lt;em&gt;尽最大努力&lt;/em&gt;删除该文件。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b452042a8719f181a9d60ae51034b9bcd166e197" translate="yes" xml:space="preserve">
          <source>When this option is present then the implementation makes a &lt;em&gt;best effort&lt;/em&gt; attempt to delete the file when closed by the the &lt;a href=&quot;asynchronouschannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. If the &lt;code&gt;close&lt;/code&gt; method is not invoked then a &lt;em&gt;best effort&lt;/em&gt; attempt is made to delete the file when the Java virtual machine terminates.</source>
          <target state="translated">如果存在此选项，则当使用&lt;a href=&quot;asynchronouschannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法关闭该实现时，实现会&lt;em&gt;尽最大努力&lt;/em&gt;删除该文件。如果未调用 &lt;code&gt;close&lt;/code&gt; 方法，则在Java虚拟机终止时会&lt;em&gt;尽最大努力&lt;/em&gt;删除该文件。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0f88517540cae38f29035447f8bcd48cdb8f163b" translate="yes" xml:space="preserve">
          <source>When this option is present then the implementation makes a &lt;em&gt;best effort&lt;/em&gt; attempt to delete the file when closed by the the &lt;a href=&quot;spi/abstractinterruptiblechannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. If the &lt;code&gt;close&lt;/code&gt; method is not invoked then a &lt;em&gt;best effort&lt;/em&gt; attempt is made to delete the file when the Java virtual machine terminates.</source>
          <target state="translated">如果存在此选项，则当使用&lt;a href=&quot;spi/abstractinterruptiblechannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法关闭该实现时，实现会&lt;em&gt;尽最大努力&lt;/em&gt;删除该文件。如果未调用 &lt;code&gt;close&lt;/code&gt; 方法，则在Java虚拟机终止时会&lt;em&gt;尽最大努力&lt;/em&gt;删除该文件。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aaf41e965e28c5483c92f84aed2e73228dbc1a97" translate="yes" xml:space="preserve">
          <source>When this stage is complete, the given action is invoked with the result (or &lt;code&gt;null&lt;/code&gt; if none) and the exception (or &lt;code&gt;null&lt;/code&gt; if none) of this stage as arguments. The returned stage is completed when the action returns. If the supplied action itself encounters an exception, then the returned stage exceptionally completes with this exception unless this stage also completed exceptionally.</source>
          <target state="translated">当这一阶段完成后，给定的动作被调用，有结果（或 &lt;code&gt;null&lt;/code&gt; ，如果没有）和异常（或 &lt;code&gt;null&lt;/code&gt; ，如果没有）这个阶段作为参数。动作返回时，返回的阶段完成。如果所提供的操作本身遇到异常，那么除非此阶段也异常完成，否则返回阶段将异常终止。</target>
        </trans-unit>
        <trans-unit id="3f6f82cd6d0f4507ceec2cd68bde83c6bb558834" translate="yes" xml:space="preserve">
          <source>When this stage is complete, the given function is invoked with the result (or &lt;code&gt;null&lt;/code&gt; if none) and the exception (or &lt;code&gt;null&lt;/code&gt; if none) of this stage as arguments, and the function's result is used to complete the returned stage.</source>
          <target state="translated">当这一阶段完成后，给定函数被调用，有结果（或 &lt;code&gt;null&lt;/code&gt; ，如果没有）和异常（或 &lt;code&gt;null&lt;/code&gt; ，如果没有）这个阶段作为参数，函数的结果来完成恢复阶段。</target>
        </trans-unit>
        <trans-unit id="48eb95265e7d021d7c0bcfe7d5877c9bf2e00f35" translate="yes" xml:space="preserve">
          <source>When to implement</source>
          <target state="translated">何时实施</target>
        </trans-unit>
        <trans-unit id="b19e6fec33654d65225b5a683c7ddc3223d7ead2" translate="yes" xml:space="preserve">
          <source>When to use this interface</source>
          <target state="translated">何时使用此接口</target>
        </trans-unit>
        <trans-unit id="2987413b1ccabfe41476e5c2416ebf03f5549889" translate="yes" xml:space="preserve">
          <source>When traversing a graph, an object may be encountered that does not support the Serializable interface. In this case the NotSerializableException will be thrown and will identify the class of the non-serializable object.</source>
          <target state="translated">当遍历一个图时,可能会遇到一个不支持Serializable接口的对象。在这种情况下,NotSerializableException将被抛出,并将识别不可序列化对象的类。</target>
        </trans-unit>
        <trans-unit id="72491fa06ce4e80db58d269ec31cc9c29821a7b3" translate="yes" xml:space="preserve">
          <source>When two composite names are compared, the case of the characters is significant.</source>
          <target state="translated">当两个复合名进行比较时,字符的大小写是重要的。</target>
        </trans-unit>
        <trans-unit id="d39ea45a6268a67c061975b6eb4abdceccee5c88" translate="yes" xml:space="preserve">
          <source>When two or more interfaces of a proxy class contain a method with the same name and parameter signature, the order of the proxy class's interfaces becomes significant. When such a</source>
          <target state="translated">当一个代理类的两个或两个以上的接口包含一个具有相同名称和参数签名的方法时,代理类的接口的顺序就变得很重要。当这样的</target>
        </trans-unit>
        <trans-unit id="e2cbb5b6ffa96f013fd73efb6c2acd02f012d948" translate="yes" xml:space="preserve">
          <source>When two or more threads attempt to &lt;a href=&quot;completablefuture#complete-T-&quot;&gt;&lt;code&gt;complete&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;completablefuture#completeExceptionally-java.lang.Throwable-&quot;&gt;&lt;code&gt;completeExceptionally&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;completablefuture#cancel-boolean-&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; a CompletableFuture, only one of them succeeds.</source>
          <target state="translated">当两个或多个线程尝试&lt;a href=&quot;completablefuture#complete-T-&quot;&gt; &lt;code&gt;complete&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;completablefuture#completeExceptionally-java.lang.Throwable-&quot;&gt; &lt;code&gt;completeExceptionally&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;completablefuture#cancel-boolean-&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; CompletableFuture时，只有其中一个成功。</target>
        </trans-unit>
        <trans-unit id="7e3a4f8ce8f2ce779cc7d5b71b65b0b477e564ce" translate="yes" xml:space="preserve">
          <source>When used in conjunction with the &lt;a href=&quot;formatter&quot;&gt;&lt;code&gt;Formatter&lt;/code&gt;&lt;/a&gt;, the above class produces the following output for various format strings. &lt;code&gt;Formatter fmt = new Formatter();
   StockName sn = new StockName(&quot;HUGE&quot;, &quot;Huge Fruit, Inc.&quot;,
                                &quot;Fruit Titanesque, Inc.&quot;);
   fmt.format(&quot;%s&quot;, sn);                   //   -&amp;gt; &quot;Huge Fruit, Inc.&quot;
   fmt.format(&quot;%s&quot;, sn.toString());        //   -&amp;gt; &quot;HUGE - Huge Fruit, Inc.&quot;
   fmt.format(&quot;%#s&quot;, sn);                  //   -&amp;gt; &quot;HUGE&quot;
   fmt.format(&quot;%-10.8s&quot;, sn);              //   -&amp;gt; &quot;HUGE      &quot;
   fmt.format(&quot;%.12s&quot;, sn);                //   -&amp;gt; &quot;Huge Fruit,*&quot;
   fmt.format(Locale.FRANCE, &quot;%25s&quot;, sn);  //   -&amp;gt; &quot;   Fruit Titanesque, Inc.&quot;
 &lt;/code&gt;</source>
          <target state="translated">与&lt;a href=&quot;formatter&quot;&gt; &lt;code&gt;Formatter&lt;/code&gt; &lt;/a&gt;结合使用时，上述类为各种格式字符串产生以下输出。 &lt;code&gt;Formatter fmt = new Formatter(); StockName sn = new StockName(&quot;HUGE&quot;, &quot;Huge Fruit, Inc.&quot;, &quot;Fruit Titanesque, Inc.&quot;); fmt.format(&quot;%s&quot;, sn); // -&amp;gt; &quot;Huge Fruit, Inc.&quot; fmt.format(&quot;%s&quot;, sn.toString()); // -&amp;gt; &quot;HUGE - Huge Fruit, Inc.&quot; fmt.format(&quot;%#s&quot;, sn); // -&amp;gt; &quot;HUGE&quot; fmt.format(&quot;%-10.8s&quot;, sn); // -&amp;gt; &quot;HUGE &quot; fmt.format(&quot;%.12s&quot;, sn); // -&amp;gt; &quot;Huge Fruit,*&quot; fmt.format(Locale.FRANCE, &quot;%25s&quot;, sn); // -&amp;gt; &quot; Fruit Titanesque, Inc.&quot; &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ece0b7fb1ed791cbe7da72a2d53b96e1e02fbd42" translate="yes" xml:space="preserve">
          <source>When used in the context of annotation processing, an accurate model of the element being represented must be returned. As this is a language model, the source code provides the fiducial (reference) representation of the construct in question rather than a representation in an executable output like a class file. Executable output may serve as the basis for creating a modeling element. However, the process of translating source code to executable output may not permit recovering some aspects of the source code representation. For example, annotations with &lt;a href=&quot;../../../../java/lang/annotation/retentionpolicy#SOURCE&quot;&gt;source&lt;/a&gt;&lt;a href=&quot;../../../../java/lang/annotation/retention&quot;&gt;retention&lt;/a&gt; cannot be recovered from class files and class files might not be able to provide source position information. Names of parameters may not be recoverable from class files. The &lt;a href=&quot;modifier&quot;&gt;modifiers&lt;/a&gt; on an element may differ in some cases including:</source>
          <target state="translated">在注释处理的上下文中使用时，必须返回所表示元素的精确模型。由于这是语言模型，因此源代码提供了所讨论结构的基准（参考）表示形式，而不是可执行输出（如类文件）中的表示形式。可执行输出可以用作创建建模元素的基础。但是，将源代码转换为可执行输出的过程可能不允许恢复源代码表示的某些方面。例如，带有&lt;a href=&quot;../../../../java/lang/annotation/retentionpolicy#SOURCE&quot;&gt;源&lt;/a&gt;&lt;a href=&quot;../../../../java/lang/annotation/retention&quot;&gt;保留的&lt;/a&gt;注释不能从类文件中恢复，并且类文件可能无法提供源位置信息。参数名称可能无法从类文件中恢复。该&lt;a href=&quot;modifier&quot;&gt;修饰符&lt;/a&gt; 在某些情况下，元素上的可能有所不同，包括：</target>
        </trans-unit>
        <trans-unit id="6ecb08ff72bf2beff0f22f91d00d7f8a358093b0" translate="yes" xml:space="preserve">
          <source>When used with other calendar systems it must correspond to an integral number of days and is normally an integral number of years.</source>
          <target state="translated">当与其他历法一起使用时,它必须对应一个整数天,通常是一个整数年。</target>
        </trans-unit>
        <trans-unit id="f21fcfe8b96da09eeaeaa464fe8fd54f0f415d2c" translate="yes" xml:space="preserve">
          <source>When used with other calendar systems it must correspond to an integral number of days or months roughly equal to a year defined by the passage of the Earth around the Sun.</source>
          <target state="translated">当与其他历法一起使用时,它必须对应于一个完整的日数或月数,大致等于地球绕太阳运行的一年。</target>
        </trans-unit>
        <trans-unit id="a27413589719b5a8253a0b8d9af0f9739bd28a5f" translate="yes" xml:space="preserve">
          <source>When used with other calendar systems it must correspond to an integral number of days.</source>
          <target state="translated">当与其他日历系统一起使用时,它必须对应于一个完整的天数。</target>
        </trans-unit>
        <trans-unit id="9efada4e2737579f4bfde83c300d21f0a7943686" translate="yes" xml:space="preserve">
          <source>When used with other calendar systems it must correspond to the day defined by the rising and setting of the Sun on Earth. It is not required that days begin at midnight - when converting between calendar systems, the date should be equivalent at midday.</source>
          <target state="translated">当与其他历法一起使用时,它必须对应于地球上太阳升起和落下所定义的一天。日子不需要从午夜开始 ----当在不同历法之间转换时,日期应与正午相当。</target>
        </trans-unit>
        <trans-unit id="62385eeb0c56551d6fa61230b23e3cea9e372c16" translate="yes" xml:space="preserve">
          <source>When used with other calendar systems there are no restrictions on the unit.</source>
          <target state="translated">当与其他日历系统一起使用时,对设备没有任何限制。</target>
        </trans-unit>
        <trans-unit id="9e6a51ecf8fcb17dbda43fef7e1c274e8aff30af" translate="yes" xml:space="preserve">
          <source>When used, this method changes the parsing to be lenient from this point onwards. The change will remain in force until the end of the formatter that is eventually constructed or until &lt;code&gt;parseStrict&lt;/code&gt; is called.</source>
          <target state="translated">从那时起，使用此方法时，将解析更改为宽松。更改将一直生效，直到最终构造的格式化程序结束或调用 &lt;code&gt;parseStrict&lt;/code&gt; 为止。</target>
        </trans-unit>
        <trans-unit id="5af032fc78d26434042d41d26faa4d468835b7bf" translate="yes" xml:space="preserve">
          <source>When used, this method changes the parsing to be strict from this point onwards. As strict is the default, this is normally only needed after calling &lt;a href=&quot;datetimeformatterbuilder#parseLenient--&quot;&gt;&lt;code&gt;parseLenient()&lt;/code&gt;&lt;/a&gt;. The change will remain in force until the end of the formatter that is eventually constructed or until &lt;code&gt;parseLenient&lt;/code&gt; is called.</source>
          <target state="translated">从那时起，使用此方法时，将解析更改为严格。默认情况下严格，通常仅在调用&lt;a href=&quot;datetimeformatterbuilder#parseLenient--&quot;&gt; &lt;code&gt;parseLenient()&lt;/code&gt; &lt;/a&gt;之后才需要这样做。更改将一直有效，直到最终构造的格式化程序结束或调用 &lt;code&gt;parseLenient&lt;/code&gt; 为止。</target>
        </trans-unit>
        <trans-unit id="31ca175d1f09c132ed4a2c9c0157e1e350eb6ede" translate="yes" xml:space="preserve">
          <source>When using the IIOP transport, the client and server can specify what ORB to use with the attribute &lt;code&gt;java.naming.corba.orb&lt;/code&gt;. Connection to the ORB happens at &lt;a href=&quot;rmiconnectorserver#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; time for the connector server, and at &lt;a href=&quot;rmiconnector#connect-java.util.Map-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; time for the connector client. If the &lt;code&gt;java.naming.corba.orb&lt;/code&gt; attribute is contained in the environment Map, then its value (an &lt;a href=&quot;/openjdk~8_web/org/omg/corba/orb&quot;&gt;&lt;code&gt;ORB&lt;/code&gt;&lt;/a&gt;), is used to connect the IIOP Stubs. Otherwise, a new org.omg.CORBA.ORB is created by calling &lt;a href=&quot;/openjdk~8_web/org/omg/corba/orb&quot;&gt;&lt;code&gt;org.omg.CORBA.ORB.init((String[])null,(Properties)null)&lt;/code&gt;&lt;/a&gt;. A later RMI connector client or server in the same JVM can reuse this ORB, or it can create another one in the same way.</source>
          <target state="translated">使用IIOP传输时，客户端和服务器可以使用属性 &lt;code&gt;java.naming.corba.orb&lt;/code&gt; 指定要使用的ORB 。连接器服务器的&lt;a href=&quot;rmiconnectorserver#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;时间和&lt;a href=&quot;rmiconnector#connect-java.util.Map-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;器客户端的连接时间都发生与ORB 的连接。如果环境Map中包含 &lt;code&gt;java.naming.corba.orb&lt;/code&gt; 属性，则使用其值（&lt;a href=&quot;/openjdk~8_web/org/omg/corba/orb&quot;&gt; &lt;code&gt;ORB&lt;/code&gt; &lt;/a&gt;）来连接IIOP Stub。否则，通过调用&lt;a href=&quot;/openjdk~8_web/org/omg/corba/orb&quot;&gt; &lt;code&gt;org.omg.CORBA.ORB.init((String[])null,(Properties)null)&lt;/code&gt; &lt;/a&gt;来创建新的org.omg.CORBA.ORB 。同一JVM中的更高版本的RMI连接器客户端或服务器可以重用此ORB，也可以以相同的方式创建另一个ORB。</target>
        </trans-unit>
        <trans-unit id="1094d843de7943a57b50e6ec3d12297784b464f6" translate="yes" xml:space="preserve">
          <source>When using the beanName as a serialized object name we convert the given beanName to a resource pathname and add a trailing &quot;.ser&quot; suffix. We then try to load a serialized object from that resource.</source>
          <target state="translated">当使用beanName作为序列化对象名称时,我们将给定的beanName转换为资源路径名,并在后面添加&quot;.ser &quot;后缀。然后我们尝试从该资源中加载一个序列化对象。</target>
        </trans-unit>
        <trans-unit id="9b289c10690d3b720cf943c114f2a703d731c855" translate="yes" xml:space="preserve">
          <source>When using the default JRMP transport, RMI socket factories can be specified using the attributes &lt;code&gt;jmx.remote.rmi.client.socket.factory&lt;/code&gt; and &lt;code&gt;jmx.remote.rmi.server.socket.factory&lt;/code&gt; in the &lt;code&gt;environment&lt;/code&gt; given to the &lt;code&gt;RMIConnectorServer&lt;/code&gt; constructor. The values of these attributes must be of type &lt;a href=&quot;/openjdk~8_web/java/rmi/server/rmiclientsocketfactory&quot;&gt;&lt;code&gt;RMIClientSocketFactory&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;/openjdk~8_web/java/rmi/server/rmiserversocketfactory&quot;&gt;&lt;code&gt;RMIServerSocketFactory&lt;/code&gt;&lt;/a&gt;, respectively. These factories are used when creating the RMI objects associated with the connector.</source>
          <target state="translated">使用默认的JRMP传输时，可以在给 &lt;code&gt;RMIConnectorServer&lt;/code&gt; 构造函数的 &lt;code&gt;environment&lt;/code&gt; 使用属性 &lt;code&gt;jmx.remote.rmi.client.socket.factory&lt;/code&gt; 和 &lt;code&gt;jmx.remote.rmi.server.socket.factory&lt;/code&gt; 指定RMI套接字工厂。这些属性的值必须分别为&lt;a href=&quot;/openjdk~8_web/java/rmi/server/rmiclientsocketfactory&quot;&gt; &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;/openjdk~8_web/java/rmi/server/rmiserversocketfactory&quot;&gt; &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; &lt;/a&gt;类型。创建与连接器关联的RMI对象时，将使用这些工厂。</target>
        </trans-unit>
        <trans-unit id="e87d4e305eeee8d02bfe9d7476f259cac952cdb2" translate="yes" xml:space="preserve">
          <source>When viewed as a character sequence, the length of a character buffer is simply the number of characters between the position (inclusive) and the limit (exclusive); that is, it is equivalent to &lt;code&gt;remaining()&lt;/code&gt;.</source>
          <target state="translated">当作为字符序列查看时，字符缓冲区的长度就是位置（含）和限制（不含）之间的字符数。也就是说，它等同于 &lt;code&gt;remaining()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b74b06615a3effa44bf4fa9888e60a5a1492ac50" translate="yes" xml:space="preserve">
          <source>When viewed as a member of a third type &lt;code&gt;C&lt;/code&gt;, however, the method in &lt;code&gt;A&lt;/code&gt; does override the one in &lt;code&gt;B&lt;/code&gt;:</source>
          <target state="translated">但是，当被视为第三种类型 &lt;code&gt;C&lt;/code&gt; 的成员时， &lt;code&gt;A&lt;/code&gt; 中的方法确实会覆盖 &lt;code&gt;B&lt;/code&gt; 中的方法：</target>
        </trans-unit>
        <trans-unit id="70641d46fc36740d8882e1912ac1db22e717a0cd" translate="yes" xml:space="preserve">
          <source>When waiting upon a &lt;code&gt;Condition&lt;/code&gt;, a &quot;&lt;em&gt;spurious wakeup&lt;/em&gt;&quot; is permitted to occur, in general, as a concession to the underlying platform semantics. This has little practical impact on most application programs as a &lt;code&gt;Condition&lt;/code&gt; should always be waited upon in a loop, testing the state predicate that is being waited for. An implementation is free to remove the possibility of spurious wakeups but it is recommended that applications programmers always assume that they can occur and so always wait in a loop.</source>
          <target state="translated">当等待 &lt;code&gt;Condition&lt;/code&gt; 时，通常会允许&amp;ldquo; &lt;em&gt;虚假唤醒&lt;/em&gt; &amp;rdquo;，作为对底层平台语义的让步。这对大多数应用程序几乎没有实际影响，因为应该始终在循环中等待一个 &lt;code&gt;Condition&lt;/code&gt; ，测试正在等待的状态谓词。一个实现是免费的，可以消除虚假唤醒的可能性，但是建议应用程序程序员始终假定它们会发生，因此总是在循环中等待。</target>
        </trans-unit>
        <trans-unit id="50097f566388737a84366cf10ac13d1ccd775d2d" translate="yes" xml:space="preserve">
          <source>When writing an image, its metadata may be set by defining or modifying an &lt;code&gt;IIOMetadata&lt;/code&gt; object. Such an object may be obtained from an &lt;code&gt;ImageWriter&lt;/code&gt; or &lt;code&gt;ImageTranscoder&lt;/code&gt; (from the &lt;code&gt;javax.imageio&lt;/code&gt; package). Once such an object has been obtained, its contents may be set of modified via a &lt;code&gt;Document&lt;/code&gt; consisting of &lt;code&gt;IIOMetadataNode&lt;/code&gt;s. The document format may optionally be described using an &lt;code&gt;IIOMetadataFormat&lt;/code&gt; object.</source>
          <target state="translated">写入图像时，可以通过定义或修改 &lt;code&gt;IIOMetadata&lt;/code&gt; 对象来设置其元数据。可以从 &lt;code&gt;ImageWriter&lt;/code&gt; 或 &lt;code&gt;ImageTranscoder&lt;/code&gt; （从 &lt;code&gt;javax.imageio&lt;/code&gt; 包）获得此类对象。一旦获得了这样的对象，就可以通过由 &lt;code&gt;IIOMetadataNode&lt;/code&gt; 组成的 &lt;code&gt;Document&lt;/code&gt; 修改其内容集。可以选择使用 &lt;code&gt;IIOMetadataFormat&lt;/code&gt; 对象描述文档格式。</target>
        </trans-unit>
        <trans-unit id="eea2b78361ef1f62a351050fb4d8e084b0419681" translate="yes" xml:space="preserve">
          <source>When writing, the destination type maybe used to determine the color type of the image. The &lt;code&gt;SampleModel&lt;/code&gt; information will be ignored, and may be &lt;code&gt;null&lt;/code&gt;. For example, a 4-banded image could represent either CMYK or RGBA data. If a destination type is set, its &lt;code&gt;ColorModel&lt;/code&gt; will override any &lt;code&gt;ColorModel&lt;/code&gt; on the image itself. This is crucial when &lt;code&gt;setSourceBands&lt;/code&gt; is used since the image's &lt;code&gt;ColorModel&lt;/code&gt; will refer to the entire image rather than to the subset of bands being written.</source>
          <target state="translated">写入时，目标类型可用于确定图像的颜色类型。该 &lt;code&gt;SampleModel&lt;/code&gt; 中的信息将被忽略，并且可以是 &lt;code&gt;null&lt;/code&gt; 。例如，一个4带图像可以表示CMYK或RGBA数据。如果设置了目标类型，则其 &lt;code&gt;ColorModel&lt;/code&gt; 将覆盖图像本身上的任何 &lt;code&gt;ColorModel&lt;/code&gt; 。当使用 &lt;code&gt;setSourceBands&lt;/code&gt; 时，这是至关重要的，因为图像的 &lt;code&gt;ColorModel&lt;/code&gt; 将引用整个图像，而不是所写带的子集。</target>
        </trans-unit>
        <trans-unit id="9a6b169cf5cbb999580ca1588fd37eab8e71b189" translate="yes" xml:space="preserve">
          <source>When you create an initial context (&lt;code&gt;InitialLdapContext&lt;/code&gt;), you can specify a list of request controls. These controls will be used as the request controls for any implicit LDAP &quot;bind&quot; operation performed by the context or contexts derived from the context. These are called &lt;em&gt;connection request controls&lt;/em&gt;. Use &lt;code&gt;getConnectControls()&lt;/code&gt; to get a context's connection request controls.</source>
          <target state="translated">创建初始上下文（ &lt;code&gt;InitialLdapContext&lt;/code&gt; ）时，可以指定请求控件列表。这些控件将用作由上下文或从上下文派生的上下文执行的任何隐式LDAP&amp;ldquo;绑定&amp;rdquo;操作的请求控件。这些称为&lt;em&gt;连接请求控件&lt;/em&gt;。使用 &lt;code&gt;getConnectControls()&lt;/code&gt; 获取上下文的连接请求控件。</target>
        </trans-unit>
        <trans-unit id="f5d6850ccbdf18f11fe78451acaa45891ec324a4" translate="yes" xml:space="preserve">
          <source>When your program needs a locale-specific object, it loads the &lt;code&gt;ResourceBundle&lt;/code&gt; class using the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;getBundle&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">当您的程序需要特定于语言环境的对象时，它将使用&lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;getBundle&lt;/code&gt; &lt;/a&gt;方法加载 &lt;code&gt;ResourceBundle&lt;/code&gt; 类：</target>
        </trans-unit>
        <trans-unit id="294687126fefbc03d977b1180723b4fd8063c95a" translate="yes" xml:space="preserve">
          <source>Whenever a permission is added to a heterogeneous PermissionCollection such as Permissions, and the PermissionCollection doesn't yet contain a PermissionCollection of the specified permission's type, the PermissionCollection should call the &lt;code&gt;newPermissionCollection&lt;/code&gt; method on the permission's class to see if it requires a special PermissionCollection. If &lt;code&gt;newPermissionCollection&lt;/code&gt; returns null, the PermissionCollection is free to store the permission in any type of PermissionCollection it desires (one using a Hashtable, one using a Vector, etc.). For example, the Permissions object uses a default PermissionCollection implementation that stores the permission objects in a Hashtable.</source>
          <target state="translated">每当将权限添加到异构的PermissionCollection（例如Permissions），并且PermissionCollection尚未包含指定权限类型的PermissionCollection时，PermissionCollection都应在该权限的类上调用 &lt;code&gt;newPermissionCollection&lt;/code&gt; 方法，以查看它是否需要特殊的PermissionCollection。如果 &lt;code&gt;newPermissionCollection&lt;/code&gt; 返回null，则PermissionCollection可以自由将权限存储在所需的任何类型的PermissionCollection中（一种使用Hashtable，一种使用Vector，等等）。例如，Permissions对象使用默认的PermissionCollection实现，该实现将权限对象存储在Hashtable中。</target>
        </trans-unit>
        <trans-unit id="657dbd1f56168fcdb6c057d84ffab8877f436bb8" translate="yes" xml:space="preserve">
          <source>Whenever an operation occurs involving a source sequence (such as appending or inserting from a source sequence), this class synchronizes only on the string buffer performing the operation, not on the source. Note that while &lt;code&gt;StringBuffer&lt;/code&gt; is designed to be safe to use concurrently from multiple threads, if the constructor or the &lt;code&gt;append&lt;/code&gt; or &lt;code&gt;insert&lt;/code&gt; operation is passed a source sequence that is shared across threads, the calling code must ensure that the operation has a consistent and unchanging view of the source sequence for the duration of the operation. This could be satisfied by the caller holding a lock during the operation's call, by using an immutable source sequence, or by not sharing the source sequence across threads.</source>
          <target state="translated">每当发生涉及源序列的操作（例如，从源序列追加或插入）时，此类仅在执行操作的字符串缓冲区上同步，而不在源上同步。请注意，虽然 &lt;code&gt;StringBuffer&lt;/code&gt; 被设计为可以安全地从多个线程中并发使用，但如果传递了构造函数或 &lt;code&gt;append&lt;/code&gt; 或 &lt;code&gt;insert&lt;/code&gt; 操作的源序列在线程之间共享，则调用代码必须确保该操作具有一致且不变的视图操作期间源序列的长度。这可以通过调用方在操作调用期间保持锁定，使用不可变的源序列或不跨线程共享源序列来满足。</target>
        </trans-unit>
        <trans-unit id="431790292384e64efc177cdca9b3ed328240fae3" translate="yes" xml:space="preserve">
          <source>Whenever it is invoked on the same Permission object more than once during an execution of a Java application, the &lt;code&gt;hashCode&lt;/code&gt; method must consistently return the same integer. This integer need not remain consistent from one execution of an application to another execution of the same application.</source>
          <target state="translated">在Java应用程序执行期间，只要在同一个Permission对象上多次调用它， &lt;code&gt;hashCode&lt;/code&gt; 方法就必须一致地返回相同的整数。从一个应用程序的执行到同一应用程序的另一执行，此整数不必保持一致。</target>
        </trans-unit>
        <trans-unit id="588f7fe1bed2c7e664ebaf61ee198d0177166e9e" translate="yes" xml:space="preserve">
          <source>Whenever it is invoked on the same object more than once during an execution of a Java application, the &lt;code&gt;hashCode&lt;/code&gt; method must consistently return the same integer, provided no information used in &lt;code&gt;equals&lt;/code&gt; comparisons on the object is modified. This integer need not remain consistent from one execution of an application to another execution of the same application.</source>
          <target state="translated">在Java应用程序执行期间，只要在同一对象上多次调用它， &lt;code&gt;hashCode&lt;/code&gt; 方法就必须一致地返回相同的整数，前提是不修改该对象的 &lt;code&gt;equals&lt;/code&gt; 比较中使用的信息。从一个应用程序的执行到同一应用程序的另一执行，此整数不必保持一致。</target>
        </trans-unit>
        <trans-unit id="e5ded5fcd7a735ce98c847740a18c44d83d66cc2" translate="yes" xml:space="preserve">
          <source>Whenever it succeeds, it calls the previously instantiated resource bundle's &lt;a href=&quot;resourcebundle#setParent-java.util.ResourceBundle-&quot;&gt;&lt;code&gt;setParent&lt;/code&gt;&lt;/a&gt; method with the new resource bundle. This continues until the list of names is exhausted or the current bundle already has a non-null parent.</source>
          <target state="translated">只要成功，它将使用新的资源束调用先前实例化的资源束的&lt;a href=&quot;resourcebundle#setParent-java.util.ResourceBundle-&quot;&gt; &lt;code&gt;setParent&lt;/code&gt; &lt;/a&gt;方法。这一直持续到名称列表用尽或当前捆绑包已经具有非空的父级为止。</target>
        </trans-unit>
        <trans-unit id="f6905fb07fa47d960a6cc1c5c35a7ad900455a52" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;foo&lt;/code&gt; becomes a wrapper for the actual native method with the appended prefix &quot;wrapped_&quot;. Note that &quot;wrapped_&quot; would be a poor choice of prefix since it might conceivably form the name of an existing method thus something like &quot;$$$MyAgentWrapped$$$_&quot; would be better but would make these examples less readable.</source>
          <target state="translated">凡 &lt;code&gt;foo&lt;/code&gt; 成为与附加前缀&amp;ldquo;wrapped_&amp;rdquo;实际的本地方法的包装。请注意，&amp;ldquo; wrapped_&amp;rdquo;将是前缀的较差选择，因为它可能会形成现有方法的名称，因此&amp;ldquo; $$$ MyAgentWrapped $$$ _&amp;rdquo;之类的名称会更好，但会使这些示例的可读性降低。</target>
        </trans-unit>
        <trans-unit id="9fff88ed5ff71cb64ca036661748f73a8e3a0800" translate="yes" xml:space="preserve">
          <source>Where a file is registered with a watch service by means of a symbolic link then it is implementation specific if the watch continues to depend on the existence of the symbolic link after it is registered.</source>
          <target state="translated">当一个文件通过符号链接向手表服务注册时,那么如果手表在注册后继续依赖于符号链接的存在,则是特定的实现。</target>
        </trans-unit>
        <trans-unit id="b4eef4e93d3c18e96b9b78253a20017e48bb542d" translate="yes" xml:space="preserve">
          <source>Where a membership key is not source-specific and the underlying operation system supports source filtering, then the &lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="translated">如果成员资格密钥不是特定于源的，并且底层操作系统支持源过滤，则可以使用&lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt;方法来阻止或取消阻止来自特定源地址的多播数据报。</target>
        </trans-unit>
        <trans-unit id="8898ed0b51f593284e7f77a4f867cd2fc2e666cb" translate="yes" xml:space="preserve">
          <source>Where an I/O operation completes immediately, and the initiating thread is one of the pooled threads in the group then the completion handler may be invoked directly by the initiating thread. To avoid stack overflow, an implementation may impose a limit as to the number of activations on the thread stack. Some I/O operations may prohibit invoking the completion handler directly by the initiating thread (see &lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">如果I / O操作立即完成，并且发起线程是该组中的池线程之一，则可以由发起线程直接调用完成处理程序。为了避免堆栈溢出，实现可以对线程堆栈上的激活次数施加限制。某些I / O操作可能禁止通过发起线程直接调用完成处理程序（请参见&lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f2bcdaf392a0bc8b6a2ade4e800476f90476c33e" translate="yes" xml:space="preserve">
          <source>Where an implementation does not support any notion of group then this method always throws &lt;a href=&quot;userprincipalnotfoundexception&quot;&gt;&lt;code&gt;UserPrincipalNotFoundException&lt;/code&gt;&lt;/a&gt;. Where the namespace for user accounts and groups is the same, then this method is identical to invoking &lt;a href=&quot;userprincipallookupservice#lookupPrincipalByName-java.lang.String-&quot;&gt;&lt;code&gt;lookupPrincipalByName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果实现不支持任何组概念，则此方法总是抛出&lt;a href=&quot;userprincipalnotfoundexception&quot;&gt; &lt;code&gt;UserPrincipalNotFoundException&lt;/code&gt; &lt;/a&gt;。如果用户帐户和组的名称空间相同，则此方法与调用&lt;a href=&quot;userprincipallookupservice#lookupPrincipalByName-java.lang.String-&quot;&gt; &lt;code&gt;lookupPrincipalByName&lt;/code&gt; &lt;/a&gt;相同。</target>
        </trans-unit>
        <trans-unit id="c9f90c3240707b3d864205080111e67313bf0eee" translate="yes" xml:space="preserve">
          <source>Where an implementation supports an ACL model that differs from the NFSv4 defined ACL model then setting the initial ACL when creating the file must translate the ACL to the model supported by the file system. Methods that create a file should reject (by throwing &lt;a href=&quot;../../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;) any attempt to create a file that would be less secure as a result of the translation.</source>
          <target state="translated">如果实现支持与NFSv4定义的ACL模型不同的ACL模型，则在创建文件时设置初始ACL必须将ACL转换为文件系统支持的模型。创建文件的方法应拒绝（通过抛出&lt;a href=&quot;../../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;）任何尝试创建文件的尝试，而这些尝试由于翻译的结果而不太安全。</target>
        </trans-unit>
        <trans-unit id="3907849eb829645989d02022a9256583b35ccf13" translate="yes" xml:space="preserve">
          <source>Where desired, &lt;a href=&quot;processbuilder#redirect-input&quot;&gt; subprocess I/O can also be redirected&lt;/a&gt; using methods of the &lt;a href=&quot;processbuilder&quot;&gt;&lt;code&gt;ProcessBuilder&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">如果需要，&lt;a href=&quot;processbuilder#redirect-input&quot;&gt;还可以&lt;/a&gt;使用&lt;a href=&quot;processbuilder&quot;&gt; &lt;code&gt;ProcessBuilder&lt;/code&gt; &lt;/a&gt;类的方法来重定向子流程I / O。</target>
        </trans-unit>
        <trans-unit id="0fbeca4a7ecd10802c77529dde8b082e44d0dd19" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the attribute value. The attribute value is returned as a byte array (byte[]). The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to write the value of a user-defined attribute from a buffer (as if by invoking the &lt;a href=&quot;userdefinedfileattributeview#write-java.lang.String-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method), or byte array (byte[]).</source>
          <target state="translated">需要动态访问文件属性的地方，可以使用&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法读取属性值。属性值以字节数组（byte []）的形式返回。所述&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用于（仿佛通过调用写一个用户定义的属性的从缓冲器的值&lt;a href=&quot;userdefinedfileattributeview#write-java.lang.String-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;法），或字节数组（byte []）。</target>
        </trans-unit>
        <trans-unit id="ebb78ae3ef6ed103a9eb1696cdee777cab788dee" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the attributes supported by this attribute view are as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fileownerattributeview&quot;&gt;&lt;code&gt;FileOwnerAttributeView&lt;/code&gt;&lt;/a&gt;, and in addition, the following attributes are supported:</source>
          <target state="translated">在需要动态访问文件属性的情况下，此属性视图支持的属性由&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;fileownerattributeview&quot;&gt; &lt;code&gt;FileOwnerAttributeView&lt;/code&gt; &lt;/a&gt;定义，此外，还支持以下属性：</target>
        </trans-unit>
        <trans-unit id="277ea500a19bef26e680e53fb1654aac09fa83bc" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the attributes supported by this attribute view are as defined by &lt;code&gt;BasicFileAttributeView&lt;/code&gt;, and in addition, the following attributes are supported:</source>
          <target state="translated">在需要动态访问文件属性的情况下，此属性视图支持的属性由 &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 定义，此外，还支持以下属性：</target>
        </trans-unit>
        <trans-unit id="cf674cc8cdf6492af75c97ec90cc9a040aea0c29" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the attributes supported by this attribute view are as follows:</source>
          <target state="translated">在需要动态访问文件属性的地方,该属性视图支持的属性如下。</target>
        </trans-unit>
        <trans-unit id="8d820fbab2fe6e4127e50646c4e71b92a8792a22" translate="yes" xml:space="preserve">
          <source>Where dynamic access to file attributes is required, the attributes supported by this attribute view have the following names and types:</source>
          <target state="translated">在需要动态访问文件属性的地方,该属性视图支持的属性名称和类型如下。</target>
        </trans-unit>
        <trans-unit id="43d91b56e88fa1a42f8c6d2adc7c084514e56e79" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that &lt;code&gt;0L&lt;/code&gt; is returned, or where several attributes of the same file are required at the same time, then the &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="translated">如果需要将I / O异常与返回 &lt;code&gt;0L&lt;/code&gt; 的情况区分开，或者同时需要同一文件的多个属性，则可以使用&lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;Files.readAttributes&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="005cb3d94ffb0d26668ec1404f37b73b1ba29dc4" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a directory then the file attributes can be read with the &lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method and the file type tested with the &lt;a href=&quot;attribute/basicfileattributes#isDirectory--&quot;&gt;&lt;code&gt;BasicFileAttributes.isDirectory()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果需要将I / O异常与文件不是目录的情况区分开，则可以使用&lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;方法读取文件属性，并使用&lt;a href=&quot;attribute/basicfileattributes#isDirectory--&quot;&gt; &lt;code&gt;BasicFileAttributes.isDirectory()&lt;/code&gt; &lt;/a&gt;方法测试文件类型。</target>
        </trans-unit>
        <trans-unit id="2bbbcba21c28c4d8c2c4924803def9e4ddb35ba8" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a directory, or where several attributes of the same file are required at the same time, then the &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="translated">如果需要将I / O异常与文件不是目录的情况区分开，或者同时需要同一文件的多个属性，则可以使用&lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;Files.readAttributes&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="298b25c773a1934ae542e41dcabec7d24973199b" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a normal file, or where several attributes of the same file are required at the same time, then the &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="translated">如果需要将I / O异常与文件不是普通文件的情况区分开，或者同时需要同一文件的多个属性，则可以使用&lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;Files.readAttributes&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="02f695b12ef8bb76e6aea55a25eeab17ff1669ac" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a regular file then the file attributes can be read with the &lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method and the file type tested with the &lt;a href=&quot;attribute/basicfileattributes#isRegularFile--&quot;&gt;&lt;code&gt;BasicFileAttributes.isRegularFile()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果需要将I / O异常与文件不是常规文件区分开来，则可以使用&lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;方法读取文件属性，并使用&lt;a href=&quot;attribute/basicfileattributes#isRegularFile--&quot;&gt; &lt;code&gt;BasicFileAttributes.isRegularFile()&lt;/code&gt; &lt;/a&gt;方法测试文件类型。</target>
        </trans-unit>
        <trans-unit id="3b99909cf143f334a41da20c3faff5347727a01c" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case that the file is not a symbolic link then the file attributes can be read with the &lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method and the file type tested with the &lt;a href=&quot;attribute/basicfileattributes#isSymbolicLink--&quot;&gt;&lt;code&gt;BasicFileAttributes.isSymbolicLink()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">如果需要将I / O异常与文件不是符号链接的情况区分开，则可以使用&lt;a href=&quot;files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;方法读取文件属性，并使用&lt;a href=&quot;attribute/basicfileattributes#isSymbolicLink--&quot;&gt; &lt;code&gt;BasicFileAttributes.isSymbolicLink()&lt;/code&gt; &lt;/a&gt;方法测试文件类型。</target>
        </trans-unit>
        <trans-unit id="acaa3530ad31cc461c41f4ed0c962b27b0124c2a" translate="yes" xml:space="preserve">
          <source>Where it is required to distinguish an I/O exception from the case where &lt;code&gt;0L&lt;/code&gt; is returned, or where several attributes of the same file are required at the same time, or where the time of last access or the creation time are required, then the &lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;Files.readAttributes&lt;/code&gt;&lt;/a&gt; method may be used.</source>
          <target state="translated">如果需要将I / O异常与返回 &lt;code&gt;0L&lt;/code&gt; 的情况区分开，或者同时需要同一文件的多个属性，或者需要最后访问时间或创建时间，则需要可以使用&lt;a href=&quot;../nio/file/files#readAttributes-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;Files.readAttributes&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="15c805f474acebca2530400cb8d6a021d50edd5e" translate="yes" xml:space="preserve">
          <source>Where possible, a newly constructed &lt;code&gt;DatagramSocket&lt;/code&gt; has the &lt;a href=&quot;socketoptions#SO_BROADCAST&quot;&gt;&lt;code&gt;SO_BROADCAST&lt;/code&gt;&lt;/a&gt; socket option enabled so as to allow the transmission of broadcast datagrams. In order to receive broadcast packets a DatagramSocket should be bound to the wildcard address. In some implementations, broadcast packets may also be received when a DatagramSocket is bound to a more specific address.</source>
          <target state="translated">在可能的情况下，新构造的 &lt;code&gt;DatagramSocket&lt;/code&gt; 启用了&lt;a href=&quot;socketoptions#SO_BROADCAST&quot;&gt; &lt;code&gt;SO_BROADCAST&lt;/code&gt; &lt;/a&gt;套接字选项，以便允许传输广播数据报。为了接收广播数据包，应将DatagramSocket绑定到通配符地址。在一些实施方式中，当DatagramSocket绑定到更特定的地址时，也可以接收广播分组。</target>
        </trans-unit>
        <trans-unit id="ae2251eb2bdde2077099e46a23fa2296253a4452" translate="yes" xml:space="preserve">
          <source>Where possible, applications should use &lt;code&gt;LocalDate&lt;/code&gt;, &lt;code&gt;LocalTime&lt;/code&gt; and &lt;code&gt;LocalDateTime&lt;/code&gt; to better model the domain. For example, a birthday should be stored in a code &lt;code&gt;LocalDate&lt;/code&gt;. Bear in mind that any use of a &lt;a href=&quot;zoneid&quot;&gt;time-zone&lt;/a&gt;, such as 'Europe/Paris', adds considerable complexity to a calculation. Many applications can be written only using &lt;code&gt;LocalDate&lt;/code&gt;, &lt;code&gt;LocalTime&lt;/code&gt; and &lt;code&gt;Instant&lt;/code&gt;, with the time-zone added at the user interface (UI) layer.</source>
          <target state="translated">在可能的情况下，应用程序应使用 &lt;code&gt;LocalDate&lt;/code&gt; ， &lt;code&gt;LocalTime&lt;/code&gt; 和 &lt;code&gt;LocalDateTime&lt;/code&gt; 更好地为域建模。例如，生日应该存储在代码 &lt;code&gt;LocalDate&lt;/code&gt; 中。请记住，任何&lt;a href=&quot;zoneid&quot;&gt;时区的使用&lt;/a&gt;（例如&amp;ldquo;欧洲/巴黎&amp;rdquo;）都会增加计算的复杂性。只能使用 &lt;code&gt;LocalDate&lt;/code&gt; ， &lt;code&gt;LocalTime&lt;/code&gt; 和 &lt;code&gt;Instant&lt;/code&gt; 编写许多应用程序，并在用户界面（UI）层添加时区。</target>
        </trans-unit>
        <trans-unit id="87e0bb7fc901d05afac4326d164f35bed3f81996" translate="yes" xml:space="preserve">
          <source>Where symbolic links are supported, but the underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; does not support symbolic links, then this may fail with an &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;. Additionally, some operating systems may require that the Java virtual machine be started with implementation specific privileges to create symbolic links, in which case this method may throw &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">如果支持符号链接，但基础&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;不支持符号链接，则可能会失败，并出现&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;。此外，某些操作系统可能要求Java虚拟机以实现特定的特权启动以创建符号链接，在这种情况下，此方法可能会抛出 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aff3ccdb832b941a77362ca0a3153b1ed7d1a9da" translate="yes" xml:space="preserve">
          <source>Where syntactically malformed entries are encountered, the entry is ignored and the remainder of entries in file are processed. For instances where duplicate country code entries exist, the behavior of the Currency information for that &lt;code&gt;Currency&lt;/code&gt; is undefined and the remainder of entries in file are processed.</source>
          <target state="translated">如果遇到语法错误的条目，则将忽略该条目，并处理文件中的其余条目。对于那些重复的国家代码项存在的情况下，对于该货币信息的行为 &lt;code&gt;Currency&lt;/code&gt; 是未定义的条目在文件中的其余部分进行处理。</target>
        </trans-unit>
        <trans-unit id="c0bfb8c567532e837621aeea501dc3f1ddcd12e2" translate="yes" xml:space="preserve">
          <source>Where the &lt;a href=&quot;../../util/concurrent/future#cancel-boolean-&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method is invoked with the &lt;code&gt;mayInterruptIfRunning&lt;/code&gt; parameter set to &lt;code&gt;true&lt;/code&gt; then the I/O operation may be interrupted by closing the channel. In that case all threads waiting on the result of the I/O operation throw &lt;code&gt;CancellationException&lt;/code&gt; and any other I/O operations outstanding on the channel complete with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果在 &lt;code&gt;mayInterruptIfRunning&lt;/code&gt; 参数设置为 &lt;code&gt;true&lt;/code&gt; 的情况下调用&lt;a href=&quot;../../util/concurrent/future#cancel-boolean-&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;方法，则可以通过关闭通道来中断I / O操作。在那种情况下，所有等待I / O操作结果的线程都将引发 &lt;code&gt;CancellationException&lt;/code&gt; 和通道上所有其他未完成的I / O操作，并带有&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="c6c5daf70ef6f15c107a25281f6a04621e811b36" translate="yes" xml:space="preserve">
          <source>Where the &lt;code&gt;cancel&lt;/code&gt; method is invoked to cancel read or write operations then it is recommended that all buffers used in the I/O operations be discarded or care taken to ensure that the buffers are not accessed while the channel remains open.</source>
          <target state="translated">在调用 &lt;code&gt;cancel&lt;/code&gt; 方法取消读取或写入操作的情况下，建议丢弃I / O操作中使用的所有缓冲区，或者注意确保在通道保持打开状态时不访问这些缓冲区。</target>
        </trans-unit>
        <trans-unit id="9d8305902030508a453b89974c5e0784154948cf" translate="yes" xml:space="preserve">
          <source>Where the &lt;code&gt;modified_package_name&lt;/code&gt; is the package name of this object with &lt;code&gt;'/'&lt;/code&gt; substituted for &lt;code&gt;'.'&lt;/code&gt; (&lt;code&gt;'\u002e'&lt;/code&gt;).</source>
          <target state="translated">其中 &lt;code&gt;modified_package_name&lt;/code&gt; 是此对象的软件包名称，用 &lt;code&gt;'/'&lt;/code&gt; 代替 &lt;code&gt;'.'&lt;/code&gt; （ &lt;code&gt;'\u002e'&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="5776a8c2e2eb012135f9b2f791b325011a696da1" translate="yes" xml:space="preserve">
          <source>Where the channel is &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bound&lt;/code&gt;&lt;/a&gt; to an Internet Protocol socket address then the return value from this method is of type &lt;a href=&quot;../../net/inetsocketaddress&quot;&gt;&lt;code&gt;InetSocketAddress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果通道&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bound&lt;/code&gt; &lt;/a&gt;到Internet协议套接字地址，则此方法的返回值是&lt;a href=&quot;../../net/inetsocketaddress&quot;&gt; &lt;code&gt;InetSocketAddress&lt;/code&gt; &lt;/a&gt;类型。</target>
        </trans-unit>
        <trans-unit id="2b5a252c98def07c02e37f2ec2055c98d16f0a55" translate="yes" xml:space="preserve">
          <source>Where the channel is bound and connected to an Internet Protocol socket address then the return value from this method is of type &lt;a href=&quot;../../net/inetsocketaddress&quot;&gt;&lt;code&gt;InetSocketAddress&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在绑定通道并将其连接到Internet协议套接字地址的位置，此方法的返回值是&lt;a href=&quot;../../net/inetsocketaddress&quot;&gt; &lt;code&gt;InetSocketAddress&lt;/code&gt; &lt;/a&gt;类型。</target>
        </trans-unit>
        <trans-unit id="ddadcdbdf7fecb97856976200f59b9dff77b97ca" translate="yes" xml:space="preserve">
          <source>Where the directory is opened successfully, then the entries in the directory, and their &lt;em&gt;descendants&lt;/em&gt; are visited. When all entries have been visited, or an I/O error occurs during iteration of the directory, then the directory is closed and the visitor's &lt;a href=&quot;filevisitor#postVisitDirectory-T-java.io.IOException-&quot;&gt;&lt;code&gt;postVisitDirectory&lt;/code&gt;&lt;/a&gt; method is invoked. The file tree walk then continues, by default, at the next &lt;em&gt;sibling&lt;/em&gt; of the directory.</source>
          <target state="translated">成功打开目录的位置，然后访问目录中的条目及其&lt;em&gt;后代&lt;/em&gt;。当所有条目都已被访问或目录的迭代过程中发生I / O错误时，将关闭目录并调用访问者的&lt;a href=&quot;filevisitor#postVisitDirectory-T-java.io.IOException-&quot;&gt; &lt;code&gt;postVisitDirectory&lt;/code&gt; &lt;/a&gt;方法。然后，默认情况下，在目录的下一个&lt;em&gt;同级&lt;/em&gt;目录中继续文件树遍历。</target>
        </trans-unit>
        <trans-unit id="f20fbb77d5a28e0705439af43dcf961b9abb6e04" translate="yes" xml:space="preserve">
          <source>Where the file is a directory, and the directory could not be opened, then the &lt;code&gt;visitFileFailed&lt;/code&gt; method is invoked with the I/O exception, after which, the file tree walk continues, by default, at the next &lt;em&gt;sibling&lt;/em&gt; of the directory.</source>
          <target state="translated">如果文件是目录，并且无法打开目录，则将使用I / O异常调用 &lt;code&gt;visitFileFailed&lt;/code&gt; 方法，此后，默认情况下，在目录的下一个&lt;em&gt;同级&lt;/em&gt;目录下继续进行文件树遍历。</target>
        </trans-unit>
        <trans-unit id="813178800981aaf7228102a5aacbe600959c9826" translate="yes" xml:space="preserve">
          <source>Where the file system supports Access Control Lists, and it uses an ACL model that differs from the NFSv4 defined ACL model, then this method must translate the ACL to the model supported by the file system. This method should reject (by throwing &lt;a href=&quot;../../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;) any attempt to write an ACL that would appear to make the file more secure than would be the case if the ACL were updated. Where an implementation does not support a mapping of &lt;a href=&quot;aclentrytype#AUDIT&quot;&gt;&lt;code&gt;AclEntryType.AUDIT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;aclentrytype#ALARM&quot;&gt;&lt;code&gt;AclEntryType.ALARM&lt;/code&gt;&lt;/a&gt; entries, then this method ignores these entries when writing the ACL.</source>
          <target state="translated">如果文件系统支持访问控制列表，并且使用的ACL模型与NFSv4定义的ACL模型不同，则此方法必须将ACL转换为文件系统支持的模型。此方法应拒绝（通过抛出&lt;a href=&quot;../../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;）任何试图写ACL的尝试，该尝试似乎使文件比更新ACL的情况更安全。如果实现不支持&lt;a href=&quot;aclentrytype#AUDIT&quot;&gt; &lt;code&gt;AclEntryType.AUDIT&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;aclentrytype#ALARM&quot;&gt; &lt;code&gt;AclEntryType.ALARM&lt;/code&gt; &lt;/a&gt;条目的映射，则此方法在编写ACL时将忽略这些条目。</target>
        </trans-unit>
        <trans-unit id="8251e33247a11466c53d88af669cedf9a7c9b244" translate="yes" xml:space="preserve">
          <source>Where the filter terminates due to an uncaught error or runtime exception then it is propagated to the &lt;a href=&quot;../../util/iterator#hasNext--&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../util/iterator#next--&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; method. Where an &lt;code&gt;IOException&lt;/code&gt; is thrown, it results in the &lt;code&gt;hasNext&lt;/code&gt; or &lt;code&gt;next&lt;/code&gt; method throwing a &lt;a href=&quot;directoryiteratorexception&quot;&gt;&lt;code&gt;DirectoryIteratorException&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;IOException&lt;/code&gt; as the cause.</source>
          <target state="translated">如果过滤器由于未捕获的错误或运行时异常而终止，则将其传播到&lt;a href=&quot;../../util/iterator#hasNext--&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../util/iterator#next--&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt;方法。引发 &lt;code&gt;IOException&lt;/code&gt; 的地方，它会导致 &lt;code&gt;hasNext&lt;/code&gt; 或 &lt;code&gt;next&lt;/code&gt; 方法引发以 &lt;code&gt;IOException&lt;/code&gt; 为原因的&lt;a href=&quot;directoryiteratorexception&quot;&gt; &lt;code&gt;DirectoryIteratorException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="312f35b21c5541d25fef137d0c9ff3c37934f56a" translate="yes" xml:space="preserve">
          <source>Where there is insufficient space to store the attribute, or the attribute name or value exceed an implementation specific maximum size then an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">如果没有足够的空间来存储属性，或者属性名称或值超过实现特定的最大大小，则将引发 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3596c9771db04fbff45896ebd877c1d02f0912e" translate="yes" xml:space="preserve">
          <source>Where this method returns &lt;code&gt;true&lt;/code&gt;, then the associated thread pool has also &lt;a href=&quot;../../util/concurrent/executorservice#isTerminated--&quot;&gt;&lt;code&gt;terminated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">如果此方法返回 &lt;code&gt;true&lt;/code&gt; ，则关联的线程池也已&lt;a href=&quot;../../util/concurrent/executorservice#isTerminated--&quot;&gt; &lt;code&gt;terminated&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7b6a9723c6d2f9343f85c6d8af60801d7b7682ec" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;code&gt;PrintService&lt;/code&gt; connected to a physical printer can be reused, a &lt;code&gt;StreamPrintService&lt;/code&gt; connected to a stream cannot. The underlying &lt;code&gt;StreamPrintService&lt;/code&gt; may be disposed by the print system with the &lt;a href=&quot;streamprintservice#dispose--&quot;&gt;&lt;code&gt;dispose&lt;/code&gt;&lt;/a&gt; method before returning from the &lt;a href=&quot;docprintjob#print-javax.print.Doc-javax.print.attribute.PrintRequestAttributeSet-&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;DocPrintJob&lt;/code&gt; so that the print system knows this printer is no longer usable. This is equivalent to a physical printer going offline - permanently. Applications may supply a null print stream to create a queryable service. It is not valid to create a PrintJob for such a stream. Implementations which allocate resources on construction should examine the stream and may wish to only allocate resources if the stream is non-null.</source>
          <target state="translated">连接到物理打印机的 &lt;code&gt;PrintService&lt;/code&gt; 可以重复使用，而连接到流的 &lt;code&gt;StreamPrintService&lt;/code&gt; 不能重复使用。在从 &lt;code&gt;DocPrintJob&lt;/code&gt; 的&lt;a href=&quot;docprintjob#print-javax.print.Doc-javax.print.attribute.PrintRequestAttributeSet-&quot;&gt; &lt;code&gt;print&lt;/code&gt; &lt;/a&gt;方法返回之前，底层的 &lt;code&gt;StreamPrintService&lt;/code&gt; 可以由打印系统使用&lt;a href=&quot;streamprintservice#dispose--&quot;&gt; &lt;code&gt;dispose&lt;/code&gt; &lt;/a&gt;方法进行处理，以使打印系统知道该打印机不再可用。这等效于物理打印机永久脱机。应用程序可以提供空打印流以创建可查询的服务。为此流创建PrintJob是无效的。在构造上分配资源的实现应检查流，并且可能希望仅在流为非null时分配资源。</target>
        </trans-unit>
        <trans-unit id="68dfcf4573839943af330771499a40761c894968" translate="yes" xml:space="preserve">
          <source>Whereas these are not (reason in parentheses):</source>
          <target state="translated">而这些都不是(原因在括号里)。</target>
        </trans-unit>
        <trans-unit id="0787c7934fdfd663c379d9463c168a4a31331bbd" translate="yes" xml:space="preserve">
          <source>Whether C++-style comments are to be recognized and skipped.</source>
          <target state="translated">是否要识别和跳过C++风格的注释。</target>
        </trans-unit>
        <trans-unit id="e0848da24388d28c1afb73d61f7a7588fee7e498" translate="yes" xml:space="preserve">
          <source>Whether C-style comments are to be recognized and skipped.</source>
          <target state="translated">是否要识别和跳过C式注释。</target>
        </trans-unit>
        <trans-unit id="51a1385dc9a39d4da44928c4400ff21a87209713" translate="yes" xml:space="preserve">
          <source>Whether a byte buffer is direct or non-direct may be determined by invoking its &lt;a href=&quot;bytebuffer#isDirect--&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method. This method is provided so that explicit buffer management can be done in performance-critical code.</source>
          <target state="translated">字节缓冲区是直接还是非直接缓冲区可以通过调用其&lt;a href=&quot;bytebuffer#isDirect--&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt;方法来确定。提供此方法是为了可以在性能关键代码中完成显式缓冲区管理。</target>
        </trans-unit>
        <trans-unit id="059d74aa74a1f70698c412f2b1b1fb68c363877d" translate="yes" xml:space="preserve">
          <source>Whether a lock is exclusive or shared may be determined by invoking its &lt;a href=&quot;filelock#isShared--&quot;&gt;&lt;code&gt;isShared&lt;/code&gt;&lt;/a&gt; method. Some platforms do not support shared locks, in which case a request for a shared lock is automatically converted into a request for an exclusive lock.</source>
          <target state="translated">锁是排他锁还是共享锁可以通过调用其&lt;a href=&quot;filelock#isShared--&quot;&gt; &lt;code&gt;isShared&lt;/code&gt; &lt;/a&gt;方法确定。某些平台不支持共享锁，在这种情况下，对共享锁的请求会自动转换为对独占锁的请求。</target>
        </trans-unit>
        <trans-unit id="ca6533c544c3a0529e57beea5f901c658d036545" translate="yes" xml:space="preserve">
          <source>Whether a particular component is or is not defined in an instance depends upon the type of the URI being represented. An absolute URI has a scheme component. An opaque URI has a scheme, a scheme-specific part, and possibly a fragment, but has no other components. A hierarchical URI always has a path (though it may be empty) and a scheme-specific-part (which at least contains the path), and may have any of the other components. If the authority component is present and is server-based then the host component will be defined and the user-information and port components may be defined.</source>
          <target state="translated">在一个实例中是否定义了一个特定的组件,取决于所代表的URI的类型。一个绝对的URI有一个方案组件。一个不透明的URI有一个方案,一个方案特定的部分,可能还有一个片段,但没有其他组件。一个分层的URI总是有一个路径(尽管它可能是空的)和一个方案特定的部分(至少包含路径),并且可能有任何其他的组件。如果权限组件存在并且是基于服务器的,那么主机组件将被定义,用户信息和端口组件也可以被定义。</target>
        </trans-unit>
        <trans-unit id="d404f71e4894750c15b6981c1f6ed118e11a813d" translate="yes" xml:space="preserve">
          <source>Whether a virtual machine has a console is dependent upon the underlying platform and also upon the manner in which the virtual machine is invoked. If the virtual machine is started from an interactive command line without redirecting the standard input and output streams then its console will exist and will typically be connected to the keyboard and display from which the virtual machine was launched. If the virtual machine is started automatically, for example by a background job scheduler, then it will typically not have a console.</source>
          <target state="translated">一个虚拟机是否有控制台取决于底层平台,也取决于虚拟机被调用的方式。如果虚拟机是通过交互式命令行启动的,而没有重定向标准输入和输出流,那么它的控制台就会存在,并且通常会连接到启动虚拟机的键盘和显示器。如果虚拟机是自动启动的,例如由后台作业调度程序启动,那么它通常不会有控制台。</target>
        </trans-unit>
        <trans-unit id="7b2f8d65d541d32da6ac4db35fde558abe5bba9b" translate="yes" xml:space="preserve">
          <source>Whether aliases are case sensitive is implementation dependent. In order to avoid problems, it is recommended not to use aliases in a KeyStore that only differ in case.</source>
          <target state="translated">别名是否区分大小写取决于实现。为了避免问题,建议不要在KeyStore中使用只区分大小写的别名。</target>
        </trans-unit>
        <trans-unit id="e459ddcf8add7fb4f45be0659b059f816d4f3a8a" translate="yes" xml:space="preserve">
          <source>Whether keystores are persistent, and the mechanisms used by the keystore if it is persistent, are not specified here. This allows use of a variety of techniques for protecting sensitive (e.g., private or secret) keys. Smart cards or other integrated cryptographic engines (SafeKeyper) are one option, and simpler mechanisms such as files may also be used (in a variety of formats).</source>
          <target state="translated">钥匙存储是否是持久性的,以及如果是持久性的,钥匙存储所使用的机制,在此不作规定。这就允许使用各种技术来保护敏感(如私人或秘密)密钥。智能卡或其他集成加密引擎(SafeKeyper)是一种选择,也可以使用更简单的机制,如文件(以各种格式)。</target>
        </trans-unit>
        <trans-unit id="839575dd0da2dbc62283eccad2a293850044e605" translate="yes" xml:space="preserve">
          <source>Whether line terminators are to be returned as tokens or treated as white space that merely separates tokens.</source>
          <target state="translated">行终止符是作为标记返回,还是作为仅仅分隔标记的白色空间处理。</target>
        </trans-unit>
        <trans-unit id="64009d2c9b3c4d0e007e474d4b10457e969ea24e" translate="yes" xml:space="preserve">
          <source>Whether new values can be written to the attribute.</source>
          <target state="translated">是否可以向属性写入新的值。</target>
        </trans-unit>
        <trans-unit id="ed0c61cf2fb7a55d68d476b3cbe4799a77c242a1" translate="yes" xml:space="preserve">
          <source>Whether or not a channel is registered with one or more selectors may be determined by invoking the &lt;a href=&quot;selectablechannel#isRegistered--&quot;&gt;&lt;code&gt;isRegistered&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">可以通过调用&lt;a href=&quot;selectablechannel#isRegistered--&quot;&gt; &lt;code&gt;isRegistered&lt;/code&gt; &lt;/a&gt;方法来确定是否向一个或多个选择器注册了通道。</target>
        </trans-unit>
        <trans-unit id="0d4e0c74b1ca2cffb49ee764de91039c786dd2b9" translate="yes" xml:space="preserve">
          <source>Whether or not a file is available or may be created depends upon the underlying platform. Some platforms, in particular, allow a file to be opened for writing by only one &lt;code&gt;FileWriter&lt;/code&gt; (or other file-writing object) at a time. In such situations the constructors in this class will fail if the file involved is already open.</source>
          <target state="translated">文件是否可用或是否可以创建取决于底层平台。特别是某些平台，一次只允许一个 &lt;code&gt;FileWriter&lt;/code&gt; （或其他文件写入对象）打开一个文件进行写入。在这种情况下，如果所涉及的文件已经打开，则此类中的构造函数将失败。</target>
        </trans-unit>
        <trans-unit id="ea35fdbb197a6d4bef3ff403fa57d76ec3b52a58" translate="yes" xml:space="preserve">
          <source>Whether or not a lock actually prevents another program from accessing the content of the locked region is system-dependent and therefore unspecified. The native file-locking facilities of some systems are merely</source>
          <target state="translated">锁定是否真的能阻止另一个程序访问被锁定的区域的内容,是取决于系统的,因此没有说明。一些系统的原生文件锁定设施仅仅是</target>
        </trans-unit>
        <trans-unit id="5484541c29643b9a5f36af7eafe3c332aef64933" translate="yes" xml:space="preserve">
          <source>Whether or not a read-write lock will improve performance over the use of a mutual exclusion lock depends on the frequency that the data is read compared to being modified, the duration of the read and write operations, and the contention for the data - that is, the number of threads that will try to read or write the data at the same time. For example, a collection that is initially populated with data and thereafter infrequently modified, while being frequently searched (such as a directory of some kind) is an ideal candidate for the use of a read-write lock. However, if updates become frequent then the data spends most of its time being exclusively locked and there is little, if any increase in concurrency. Further, if the read operations are too short the overhead of the read-write lock implementation (which is inherently more complex than a mutual exclusion lock) can dominate the execution cost, particularly as many read-write lock implementations still serialize all threads through a small section of code. Ultimately, only profiling and measurement will establish whether the use of a read-write lock is suitable for your application.</source>
          <target state="translated">读写锁是否会比使用互斥锁提高性能,取决于数据被读取与被修改的频率,读写操作的持续时间,以及对数据的争夺--即同时尝试读取或写入数据的线程数量。例如,一个最初被数据填充,此后不经常被修改,同时又经常被搜索的集合(如某种目录)是使用读写锁的理想候选者。然而,如果更新变得频繁,那么数据的大部分时间都被专门锁定,并发性几乎没有增加,甚至没有增加。此外,如果读操作时间太短,读写锁实现的开销(本质上比互斥锁更复杂)会支配执行成本,特别是许多读写锁实现仍然通过一小段代码将所有线程序列化。最终,只有通过剖析和测量才能确定使用读写锁是否适合你的应用。</target>
        </trans-unit>
        <trans-unit id="ab8f019130320385026e5dab14b4180991ab8cbe" translate="yes" xml:space="preserve">
          <source>Whether or not a selection operation blocks to wait for one or more channels to become ready, and if so for how long, is the only essential difference between the three selection methods.</source>
          <target state="translated">一个选择操作是否阻止等待一个或多个通道准备就绪,如果是,等待多长时间,是三种选择方法唯一的本质区别。</target>
        </trans-unit>
        <trans-unit id="41ee46a746e75b2c44835c6bb604f840669e2531" translate="yes" xml:space="preserve">
          <source>Whether or not a thread writing bytes to a pipe will block until another thread reads those bytes, or some previously-written bytes, from the pipe is system-dependent and therefore unspecified. Many pipe implementations will buffer up to a certain number of bytes between the sink and source channels, but such buffering should not be assumed.</source>
          <target state="translated">向管道写入字节的线程是否会阻塞,直到另一个线程从管道中读取这些字节或一些先前写入的字节,这是系统依赖性的,因此没有说明。许多管道实现会在汇流通道和源通道之间缓冲到一定数量的字节,但不应该假定这种缓冲。</target>
        </trans-unit>
        <trans-unit id="882147ddaf8db0c13715bcfc2446b83df5e1174d" translate="yes" xml:space="preserve">
          <source>Whether or not the root component of this path starts with the root component of the given path is file system specific. If this path does not have a root component and the given path has a root component then this path does not start with the given path.</source>
          <target state="translated">这个路径的根组件是否从给定路径的根组件开始,是根据文件系统而定的,如果这个路径没有根组件,而给定路径有根组件,那么这个路径就不会从给定路径开始。如果这个路径没有根目录,而给定的路径有根目录,那么这个路径就不从给定的路径开始。</target>
        </trans-unit>
        <trans-unit id="8d8dadabe9f784b22272f65c7af34baa4ecf3fe7" translate="yes" xml:space="preserve">
          <source>Whether or not this is equal to the argument.</source>
          <target state="translated">是否等于论证。</target>
        </trans-unit>
        <trans-unit id="8370dbb2c98105665a87fe7a4451e4d08277efed" translate="yes" xml:space="preserve">
          <source>Whether or not two path are equal depends on the file system implementation. In some cases the paths are compared without regard to case, and others are case sensitive. This method does not access the file system and the file is not required to exist. Where required, the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;isSameFile&lt;/code&gt;&lt;/a&gt; method may be used to check if two paths locate the same file.</source>
          <target state="translated">两个路径是否相等取决于文件系统的实现。在某些情况下，比较路径时不考虑大小写，其他情况下则区分大小写。此方法不访问文件系统，并且不需要文件存在。在需要的地方，可以使用&lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;isSameFile&lt;/code&gt; &lt;/a&gt;方法检查两个路径是否位于同一文件中。</target>
        </trans-unit>
        <trans-unit id="8284d3a1a8d812ad6669b46283821c095c0da402" translate="yes" xml:space="preserve">
          <source>Whether the characters of identifiers are converted to lowercase.</source>
          <target state="translated">是否将标识符的字符转换为小写。</target>
        </trans-unit>
        <trans-unit id="72bdf44965cf1882a7b82e577ba831bb4aa3aad8" translate="yes" xml:space="preserve">
          <source>Whether the effect of sheet collation is achieved by placing copies of a document in multiple output bins or in the same output bin with implementation defined document separation is implementation dependent. Also whether it is achieved by making multiple passes over the job or by using an output sorter is implementation dependent.</source>
          <target state="translated">单张整理的效果是通过将文档的副本放在多个输出仓中,还是放在同一个输出仓中,并采用执行定义的文档分隔来实现,这取决于执行情况。另外,是通过在作业上进行多次传递还是使用输出分拣机来实现,也取决于实施情况。</target>
        </trans-unit>
        <trans-unit id="b500b42f712219c24a8bd54914f1fa1b4e445284" translate="yes" xml:space="preserve">
          <source>Whether the value of the attribute can be read.</source>
          <target state="translated">是否可以读取该属性的值。</target>
        </trans-unit>
        <trans-unit id="1c42976582ea88cec97c24e4c0d10841777ac466" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;Deque&lt;/code&gt; implementations are not strictly required to prohibit the insertion of null elements, they are strongly encouraged to do so. Users of any &lt;code&gt;Deque&lt;/code&gt; implementations that do allow null elements are strongly encouraged</source>
          <target state="translated">尽管严格不要求 &lt;code&gt;Deque&lt;/code&gt; 实现禁止插入null元素，但是强烈建议这样做。强烈建议使用任何允许空元素的 &lt;code&gt;Deque&lt;/code&gt; 实现的用户</target>
        </trans-unit>
        <trans-unit id="c116ddf414b394a7666553a5a6b566a1451776ab" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;doublestream#generate-java.util.function.DoubleSupplier-&quot;&gt;&lt;code&gt;generate(DoubleSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;doublestream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">虽然 &lt;code&gt;limit()&lt;/code&gt; 通常在顺序流管道上是便宜的操作，但在有序并行管道上可能会非常昂贵，尤其是对于 &lt;code&gt;maxSize&lt;/code&gt; 大的情况，因为 &lt;code&gt;limit(n)&lt;/code&gt; 不仅要返回任何&lt;em&gt;n个&lt;/em&gt;元素，而且要返回&lt;em&gt;前n &lt;/em&gt;&lt;em&gt;个&lt;/em&gt;元素遇到顺序中的元素。使用无序流源（例如&lt;a href=&quot;doublestream#generate-java.util.function.DoubleSupplier-&quot;&gt; &lt;code&gt;generate(DoubleSupplier)&lt;/code&gt; &lt;/a&gt;）或使用&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt;删除排序约束可能会导致 &lt;code&gt;limit()&lt;/code&gt; 的大幅加速如果情况允许，请在并行管道中使用。如果需要与遇到顺序保持一致，并且在并行管道中使用 &lt;code&gt;limit()&lt;/code&gt; 遇到性能低下或内存使用率不足的情况，则切换为使用&lt;a href=&quot;doublestream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt;顺序执行可能会提高性能。</target>
        </trans-unit>
        <trans-unit id="07ed1f5d7e24e0c78296347da906a9d60feefd38" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;intstream#generate-java.util.function.IntSupplier-&quot;&gt;&lt;code&gt;generate(IntSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;intstream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">虽然 &lt;code&gt;limit()&lt;/code&gt; 通常在顺序流管道上是便宜的操作，但在有序并行管道上可能会非常昂贵，尤其是对于 &lt;code&gt;maxSize&lt;/code&gt; 大的情况，因为 &lt;code&gt;limit(n)&lt;/code&gt; 不仅要返回任何&lt;em&gt;n个&lt;/em&gt;元素，而且要返回&lt;em&gt;前n &lt;/em&gt;&lt;em&gt;个&lt;/em&gt;元素遇到顺序中的元素。使用无序流源（例如&lt;a href=&quot;intstream#generate-java.util.function.IntSupplier-&quot;&gt; &lt;code&gt;generate(IntSupplier)&lt;/code&gt; &lt;/a&gt;）或使用&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt;删除排序约束可能会导致 &lt;code&gt;limit()&lt;/code&gt; 的大幅加速如果情况允许，请在并行管道中使用。如果需要与遇到顺序保持一致，并且在并行管道中使用 &lt;code&gt;limit()&lt;/code&gt; 遇到性能低下或内存使用率不足的情况，则切换为使用&lt;a href=&quot;intstream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt;顺序执行可能会提高性能。</target>
        </trans-unit>
        <trans-unit id="50f1dd72f901eaef160af7e84d23600d1ebf7971" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;longstream#generate-java.util.function.LongSupplier-&quot;&gt;&lt;code&gt;generate(LongSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;longstream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">虽然 &lt;code&gt;limit()&lt;/code&gt; 通常在顺序流管道上是便宜的操作，但在有序并行管道上可能会非常昂贵，尤其是对于 &lt;code&gt;maxSize&lt;/code&gt; 大的情况，因为 &lt;code&gt;limit(n)&lt;/code&gt; 不仅要返回任何&lt;em&gt;n个&lt;/em&gt;元素，而且要返回&lt;em&gt;前n &lt;/em&gt;&lt;em&gt;个&lt;/em&gt;元素遇到顺序中的元素。使用无序流源（例如&lt;a href=&quot;longstream#generate-java.util.function.LongSupplier-&quot;&gt; &lt;code&gt;generate(LongSupplier)&lt;/code&gt; &lt;/a&gt;）或使用&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt;删除排序约束可能会导致 &lt;code&gt;limit()&lt;/code&gt; 的大幅加速如果情况允许，请在并行管道中使用。如果需要与遇到顺序保持一致，并且在并行管道中使用 &lt;code&gt;limit()&lt;/code&gt; 遇到性能低下或内存使用率不足的情况，则切换为使用&lt;a href=&quot;longstream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt;顺序执行可能会提高性能。</target>
        </trans-unit>
        <trans-unit id="e7b022b1174615a655ebcf28b81dbf48a9f1556b" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;limit()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;maxSize&lt;/code&gt;, since &lt;code&gt;limit(n)&lt;/code&gt; is constrained to return not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;stream#generate-java.util.function.Supplier-&quot;&gt;&lt;code&gt;generate(Supplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;limit()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential--&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">虽然 &lt;code&gt;limit()&lt;/code&gt; 通常在顺序流管道上是便宜的操作，但在有序并行管道上可能会非常昂贵，尤其是对于 &lt;code&gt;maxSize&lt;/code&gt; 大的情况，因为 &lt;code&gt;limit(n)&lt;/code&gt; 不仅要返回任何&lt;em&gt;n个&lt;/em&gt;元素，而且要返回&lt;em&gt;前n &lt;/em&gt;&lt;em&gt;个&lt;/em&gt;元素遇到顺序中的元素。使用无序流源（例如&lt;a href=&quot;stream#generate-java.util.function.Supplier-&quot;&gt; &lt;code&gt;generate(Supplier)&lt;/code&gt; &lt;/a&gt;）或使用&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt;删除排序约束可能会导致 &lt;code&gt;limit()&lt;/code&gt; 的明显加速。如果情况允许，请在并行管道中使用。如果需要与遇到顺序保持一致，并且在并行管道中使用 &lt;code&gt;limit()&lt;/code&gt; 遇到性能低下或内存使用率不足的情况，则切换为使用&lt;a href=&quot;basestream#sequential--&quot;&gt; &lt;code&gt;BaseStream.sequential()&lt;/code&gt; &lt;/a&gt;顺序执行可能会提高性能。</target>
        </trans-unit>
        <trans-unit id="74d731aa21902009fd224b6c3c7d21287ffacde8" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;doublestream#generate-java.util.function.DoubleSupplier-&quot;&gt;&lt;code&gt;generate(DoubleSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;doublestream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">尽管 &lt;code&gt;skip()&lt;/code&gt; 在顺序流管道上通常是便宜的操作，但在有序并行管道上可能是非常昂贵的，尤其是对于 &lt;code&gt;n&lt;/code&gt; 较大的值，因为 &lt;code&gt;skip(n)&lt;/code&gt; 不仅被限制为不仅可以跳过任何&lt;em&gt;n个&lt;/em&gt;元素，而且还可以跳过&lt;em&gt;前n &lt;/em&gt;&lt;em&gt;个&lt;/em&gt;元素遇到顺序中的元素。如果情况的语义允许，则使用无序流源（例如&lt;a href=&quot;doublestream#generate-java.util.function.DoubleSupplier-&quot;&gt; &lt;code&gt;generate(DoubleSupplier)&lt;/code&gt; &lt;/a&gt;）或使用&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt;删除排序约束可能会导致并行管道中 &lt;code&gt;skip()&lt;/code&gt; 的显着加速。如果需要与遇到顺序保持一致，并且您遇到了性能较差或内存利用率不足的情况， &lt;code&gt;skip()&lt;/code&gt; 在并行管道中使用skip（）时，切换到使用&lt;a href=&quot;doublestream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt;顺序执行可以提高性能。</target>
        </trans-unit>
        <trans-unit id="8b6aed4201bbc532174a6b1ac759cb47bf878a52" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;intstream#generate-java.util.function.IntSupplier-&quot;&gt;&lt;code&gt;generate(IntSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;intstream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">尽管 &lt;code&gt;skip()&lt;/code&gt; 在顺序流管道上通常是便宜的操作，但在有序并行管道上可能是非常昂贵的，尤其是对于 &lt;code&gt;n&lt;/code&gt; 较大的值，因为 &lt;code&gt;skip(n)&lt;/code&gt; 不仅被限制为不仅可以跳过任何&lt;em&gt;n个&lt;/em&gt;元素，而且还可以跳过&lt;em&gt;前n &lt;/em&gt;&lt;em&gt;个&lt;/em&gt;元素遇到顺序中的元素。如果情况的语义允许，则使用无序流源（例如&lt;a href=&quot;intstream#generate-java.util.function.IntSupplier-&quot;&gt; &lt;code&gt;generate(IntSupplier)&lt;/code&gt; &lt;/a&gt;）或使用&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt;删除排序约束可能会导致并行管道中 &lt;code&gt;skip()&lt;/code&gt; 的显着加速。如果需要与遇到顺序保持一致，并且您遇到了性能较差或内存利用率不足的情况， &lt;code&gt;skip()&lt;/code&gt; 在并行管道中使用skip（）时，切换到使用&lt;a href=&quot;intstream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt;顺序执行可以提高性能。</target>
        </trans-unit>
        <trans-unit id="08e49b292a5f6675c12e6e8084622cb9a1123c41" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;longstream#generate-java.util.function.LongSupplier-&quot;&gt;&lt;code&gt;generate(LongSupplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;longstream#sequential--&quot;&gt;&lt;code&gt;sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">尽管 &lt;code&gt;skip()&lt;/code&gt; 在顺序流管道上通常是便宜的操作，但在有序并行管道上可能是非常昂贵的，尤其是对于 &lt;code&gt;n&lt;/code&gt; 较大的值，因为 &lt;code&gt;skip(n)&lt;/code&gt; 不仅被限制为不仅可以跳过任何&lt;em&gt;n个&lt;/em&gt;元素，而且还可以跳过&lt;em&gt;前n &lt;/em&gt;&lt;em&gt;个&lt;/em&gt;元素遇到顺序中的元素。如果您的情况允许，使用无序流源（例如&lt;a href=&quot;longstream#generate-java.util.function.LongSupplier-&quot;&gt; &lt;code&gt;generate(LongSupplier)&lt;/code&gt; &lt;/a&gt;）或使用&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt;删除排序约束可能会导致并行管道中 &lt;code&gt;skip()&lt;/code&gt; 的大量加速。如果需要与遇到顺序保持一致，并且您遇到了性能较差或内存利用率不足的情况， &lt;code&gt;skip()&lt;/code&gt; 在并行管道中使用skip（）时，切换到使用&lt;a href=&quot;longstream#sequential--&quot;&gt; &lt;code&gt;sequential()&lt;/code&gt; &lt;/a&gt;顺序执行可以提高性能。</target>
        </trans-unit>
        <trans-unit id="e1b922a638d8b7b0bf464d0b07da3f9937acce8a" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;skip()&lt;/code&gt; is generally a cheap operation on sequential stream pipelines, it can be quite expensive on ordered parallel pipelines, especially for large values of &lt;code&gt;n&lt;/code&gt;, since &lt;code&gt;skip(n)&lt;/code&gt; is constrained to skip not just any &lt;em&gt;n&lt;/em&gt; elements, but the &lt;em&gt;first n&lt;/em&gt; elements in the encounter order. Using an unordered stream source (such as &lt;a href=&quot;stream#generate-java.util.function.Supplier-&quot;&gt;&lt;code&gt;generate(Supplier)&lt;/code&gt;&lt;/a&gt;) or removing the ordering constraint with &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; may result in significant speedups of &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, if the semantics of your situation permit. If consistency with encounter order is required, and you are experiencing poor performance or memory utilization with &lt;code&gt;skip()&lt;/code&gt; in parallel pipelines, switching to sequential execution with &lt;a href=&quot;basestream#sequential--&quot;&gt;&lt;code&gt;BaseStream.sequential()&lt;/code&gt;&lt;/a&gt; may improve performance.</source>
          <target state="translated">尽管 &lt;code&gt;skip()&lt;/code&gt; 在顺序流管道上通常是便宜的操作，但在有序并行管道上可能是非常昂贵的，尤其是对于 &lt;code&gt;n&lt;/code&gt; 较大的值，因为 &lt;code&gt;skip(n)&lt;/code&gt; 不仅被限制为不仅可以跳过任何&lt;em&gt;n个&lt;/em&gt;元素，而且还可以跳过&lt;em&gt;前n &lt;/em&gt;&lt;em&gt;个&lt;/em&gt;元素遇到顺序中的元素。如果情况的语义允许，则使用无序流源（例如&lt;a href=&quot;stream#generate-java.util.function.Supplier-&quot;&gt; &lt;code&gt;generate(Supplier)&lt;/code&gt; &lt;/a&gt;）或使用&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt;删除排序约束可能会导致并行管道中 &lt;code&gt;skip()&lt;/code&gt; 的显着加速。如果需要与遇到顺序保持一致，并且您遇到了性能较差或内存利用率不足的情况， &lt;code&gt;skip()&lt;/code&gt; 在并行管道中使用skip（），切换为使用&lt;a href=&quot;basestream#sequential--&quot;&gt; &lt;code&gt;BaseStream.sequential()&lt;/code&gt; &lt;/a&gt;顺序执行可以提高性能。</target>
        </trans-unit>
        <trans-unit id="d1c1d5877bbdead7eaf0421be72e2ef20db6441f" translate="yes" xml:space="preserve">
          <source>While a &lt;code id=&quot;ELEM_VS_TYPE&quot;&gt;TypeElement&lt;/code&gt; represents a class or interface</source>
          <target state="translated">虽然 &lt;code id=&quot;ELEM_VS_TYPE&quot;&gt;TypeElement&lt;/code&gt; 表示类或接口</target>
        </trans-unit>
        <trans-unit id="30e4f165db1002fe6fbf12ff195d30f7e4cff77b" translate="yes" xml:space="preserve">
          <source>While a &lt;code&gt;Chronology&lt;/code&gt; object typically uses &lt;code&gt;ChronoField&lt;/code&gt; and is based on an era, year-of-era, month-of-year, day-of-month model of a date, this is not required. A &lt;code&gt;Chronology&lt;/code&gt; instance may represent a totally different kind of calendar system, such as the Mayan.</source>
          <target state="translated">虽然&amp;ldquo; &lt;code&gt;Chronology&lt;/code&gt; 对象通常使用&amp;ldquo; &lt;code&gt;ChronoField&lt;/code&gt; &amp;rdquo;，并且基于日期的时代，年代，年份，月份和日期模型，但这不是必需的。甲 &lt;code&gt;Chronology&lt;/code&gt; 实例可以代表一种完全不同的日历系统，诸如玛雅。</target>
        </trans-unit>
        <trans-unit id="9784eeccfaf1f4a4f0da131846253a9ef6b0027f" translate="yes" xml:space="preserve">
          <source>While a &lt;code&gt;TypeElement&lt;/code&gt; represents a class or interface</source>
          <target state="translated">虽然 &lt;code&gt;TypeElement&lt;/code&gt; 表示类或接口</target>
        </trans-unit>
        <trans-unit id="3b017d1c42ec1554655bf855dc44af27a7a96ca5" translate="yes" xml:space="preserve">
          <source>While applications write to the &lt;code&gt;LoginContext&lt;/code&gt; API, authentication technology providers implement the &lt;code&gt;LoginModule&lt;/code&gt; interface. A &lt;code&gt;Configuration&lt;/code&gt; specifies the LoginModule(s) to be used with a particular login application. Therefore different LoginModules can be plugged in under the application without requiring any modifications to the application itself.</source>
          <target state="translated">当应用程序写入 &lt;code&gt;LoginContext&lt;/code&gt; API时，身份验证技术提供程序将实现 &lt;code&gt;LoginModule&lt;/code&gt; 接口。甲 &lt;code&gt;Configuration&lt;/code&gt; 指定与特定登录应用程序一起使用的LoginModule（一个或多个）。因此，可以在应用程序下插入不同的LoginModule，而无需对应用程序本身进行任何修改。</target>
        </trans-unit>
        <trans-unit id="2406ab2abac29e951c9626f9ef877429a290fa9c" translate="yes" xml:space="preserve">
          <source>While building the MBeanInfo, this method calls the customization hooks that make it possible for subclasses to supply their custom descriptions, parameter names, etc...</source>
          <target state="translated">在构建MBeanInfo的同时,该方法调用自定义钩子,使子类可以提供它们的自定义描述、参数名等。</target>
        </trans-unit>
        <trans-unit id="73b5f4ac2141a2818394c1e963ca8d4434b78746" translate="yes" xml:space="preserve">
          <source>While callers may invoke &lt;code&gt;login&lt;/code&gt; directly, the provider may also invoke &lt;code&gt;login&lt;/code&gt; on behalf of callers if it determines that a login must be performed prior to certain operations.</source>
          <target state="translated">尽管呼叫者可以直接调用 &lt;code&gt;login&lt;/code&gt; ，但是如果提供者确定必须在某些操作之前执行登录，则提供者也可以代表呼叫者调用 &lt;code&gt;login&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6354a2a3180a9378c7eb02538eb193186e5effba" translate="yes" xml:space="preserve">
          <source>While iterating through the &lt;code&gt;Set&lt;/code&gt;, a &lt;code&gt;SecurityException&lt;/code&gt; is thrown if the caller does not have permission to access a particular Credential. The &lt;code&gt;Iterator&lt;/code&gt; is nevertheless advanced to next element in the &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;Set&lt;/code&gt; 上进行迭代时，如果调用者没有访问特定证书的权限，则抛出 &lt;code&gt;SecurityException&lt;/code&gt; 。尽管如此， &lt;code&gt;Iterator&lt;/code&gt; 仍前进到 &lt;code&gt;Set&lt;/code&gt; 中的下一个元素。</target>
        </trans-unit>
        <trans-unit id="c239e1b59a3047897d29f5e117079370e9edd962" translate="yes" xml:space="preserve">
          <source>While tables for abbreviated streams are often obtained by first reading another abbreviated stream containing only the tables, in some applications the tables are fixed ahead of time. This class allows the tables to be specified directly from client code. If no tables are specified either in the stream or in a &lt;code&gt;JPEGImageReadParam&lt;/code&gt;, then the stream is presumed to use the &quot;standard&quot; visually lossless tables. See &lt;a href=&quot;jpegqtable&quot;&gt;&lt;code&gt;JPEGQTable&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;jpeghuffmantable&quot;&gt;&lt;code&gt;JPEGHuffmanTable&lt;/code&gt;&lt;/a&gt; for more information on the default tables.</source>
          <target state="translated">虽然通常首先通过读取仅包含表的另一个缩写流来获得缩写流的表，但是在某些应用程序中，表是提前固定的。此类允许直接从客户端代码指定表。如果在流或 &lt;code&gt;JPEGImageReadParam&lt;/code&gt; 中未指定任何表，则假定该流使用&amp;ldquo;标准&amp;rdquo;视觉无损表。有关默认表的更多信息，请参见&lt;a href=&quot;jpegqtable&quot;&gt; &lt;code&gt;JPEGQTable&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;jpeghuffmantable&quot;&gt; &lt;code&gt;JPEGHuffmanTable&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1b216501bc1079107fcb46b023f11ebfbbaf13fc" translate="yes" xml:space="preserve">
          <source>While tables for abbreviated streams are often specified by first writing an abbreviated stream containing only the tables, in some applications the tables are fixed ahead of time. This class allows the tables to be specified directly from client code.</source>
          <target state="translated">虽然缩略流的表格通常是通过先写一个只包含表格的缩略流来指定的,但在某些应用中,表格是提前固定的。这个类允许从客户端代码中直接指定表格。</target>
        </trans-unit>
        <trans-unit id="f55e7baa234a92f09d11651aeeb34c78f17b723e" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;Collection&lt;/code&gt; interface adds no stipulations to the general contract for the &lt;code&gt;Object.equals&lt;/code&gt;, programmers who implement the &lt;code&gt;Collection&lt;/code&gt; interface &quot;directly&quot; (in other words, create a class that is a &lt;code&gt;Collection&lt;/code&gt; but is not a &lt;code&gt;Set&lt;/code&gt; or a &lt;code&gt;List&lt;/code&gt;) must exercise care if they choose to override the &lt;code&gt;Object.equals&lt;/code&gt;. It is not necessary to do so, and the simplest course of action is to rely on &lt;code&gt;Object&lt;/code&gt;'s implementation, but the implementor may wish to implement a &quot;value comparison&quot; in place of the default &quot;reference comparison.&quot; (The &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Set&lt;/code&gt; interfaces mandate such value comparisons.)</source>
          <target state="translated">尽管 &lt;code&gt;Collection&lt;/code&gt; 接口没有为 &lt;code&gt;Object.equals&lt;/code&gt; 的常规合同增加任何规定，但是&amp;ldquo;直接&amp;rdquo; 实现 &lt;code&gt;Collection&lt;/code&gt; 接口（换句话说，创建一个不是 &lt;code&gt;Collection&lt;/code&gt; 而不是 &lt;code&gt;Set&lt;/code&gt; 或 &lt;code&gt;List&lt;/code&gt; 的类）的程序员必须小心如果他们选择覆盖 &lt;code&gt;Object.equals&lt;/code&gt; 。不必这样做，最简单的方法是依靠 &lt;code&gt;Object&lt;/code&gt; 的实现，但是实现者可能希望实现&amp;ldquo;值比较&amp;rdquo;来代替默认的&amp;ldquo;引用比较&amp;rdquo;。 （ &lt;code&gt;List&lt;/code&gt; 和 &lt;code&gt;Set&lt;/code&gt; 接口要求进行这种值比较。）</target>
        </trans-unit>
        <trans-unit id="4efe8fc428299599c701c1333f6be7122c0cee74" translate="yes" xml:space="preserve">
          <source>While the hook is being called, the new &lt;code&gt;ConstantCallSite&lt;/code&gt; object is in a partially constructed state. In this state, a call to &lt;code&gt;getTarget&lt;/code&gt;, or any other attempt to use the target, will result in an &lt;code&gt;IllegalStateException&lt;/code&gt;. It is legal at all times to obtain the call site's type using the &lt;code&gt;type&lt;/code&gt; method.</source>
          <target state="translated">在调用该挂钩时，新的 &lt;code&gt;ConstantCallSite&lt;/code&gt; 对象处于部分构造的状态。在这种状态下，对 &lt;code&gt;getTarget&lt;/code&gt; 的调用或任何其他使用该目标的尝试将导致 &lt;code&gt;IllegalStateException&lt;/code&gt; 。在任何时候使用 &lt;code&gt;type&lt;/code&gt; 方法获取呼叫站点的类型都是合法的。</target>
        </trans-unit>
        <trans-unit id="e64de2c787d87b6255db69fb316860954d89cac4" translate="yes" xml:space="preserve">
          <source>While the scoping mechanism for &lt;code&gt;synchronized&lt;/code&gt; methods and statements makes it much easier to program with monitor locks, and helps avoid many common programming errors involving locks, there are occasions where you need to work with locks in a more flexible way. For example, some algorithms for traversing concurrently accessed data structures require the use of &quot;hand-over-hand&quot; or &quot;chain locking&quot;: you acquire the lock of node A, then node B, then release A and acquire C, then release B and acquire D and so on. Implementations of the &lt;code&gt;Lock&lt;/code&gt; interface enable the use of such techniques by allowing a lock to be acquired and released in different scopes, and allowing multiple locks to be acquired and released in any order.</source>
          <target state="translated">尽管用于 &lt;code&gt;synchronized&lt;/code&gt; 方法和语句的作用域机制使使用监视器锁的编程变得更加容易，并且有助于避免许多常见的涉及锁的编程错误，但在某些情况下，您需要以更灵活的方式使用锁。例如，某些用于遍历并发访问的数据结构的算法需要使用&amp;ldquo;移交&amp;rdquo;或&amp;ldquo;链锁&amp;rdquo;：您获取节点A的锁，然后获取节点B的锁，然后释放A并获取C，然后释放B并获得D等。所述的实施方式中 &lt;code&gt;Lock&lt;/code&gt; 接口通过允许获得并在不同的范围释放的锁，并允许获得并以任何顺序释放多个锁使得能够使用这样的技术。</target>
        </trans-unit>
        <trans-unit id="6ebba50ef7f7692c7039eeb694af9a571417cf59" translate="yes" xml:space="preserve">
          <source>While this class inherits from &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;, a few of the inherited tuning methods are not useful for it. In particular, because it acts as a fixed-sized pool using &lt;code&gt;corePoolSize&lt;/code&gt; threads and an unbounded queue, adjustments to &lt;code&gt;maximumPoolSize&lt;/code&gt; have no useful effect. Additionally, it is almost never a good idea to set &lt;code&gt;corePoolSize&lt;/code&gt; to zero or use &lt;code&gt;allowCoreThreadTimeOut&lt;/code&gt; because this may leave the pool without threads to handle tasks once they become eligible to run.</source>
          <target state="translated">尽管此类从&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;继承，但是一些继承的调整方法对此没有用。特别是，由于它使用 &lt;code&gt;corePoolSize&lt;/code&gt; 线程和无限制队列充当固定大小的池，因此对 &lt;code&gt;maximumPoolSize&lt;/code&gt; 的调整没有任何作用。此外，将 &lt;code&gt;corePoolSize&lt;/code&gt; 设置为零或使用 &lt;code&gt;allowCoreThreadTimeOut&lt;/code&gt; 几乎不是一个好主意，因为一旦有资格运行任务，这可能会使池中没有线程来处理任务。</target>
        </trans-unit>
        <trans-unit id="1c294c7b4d4f86f3493751e198f59f458ef4183c" translate="yes" xml:space="preserve">
          <source>While this interface method is declared to throw &lt;code&gt;Exception&lt;/code&gt;, implementers are &lt;em&gt;strongly&lt;/em&gt; encouraged to declare concrete implementations of the &lt;code&gt;close&lt;/code&gt; method to throw more specific exceptions, or to throw no exception at all if the close operation cannot fail.</source>
          <target state="translated">尽管声明此接口方法抛出 &lt;code&gt;Exception&lt;/code&gt; ，但&lt;em&gt;强烈&lt;/em&gt;建议实现者声明 &lt;code&gt;close&lt;/code&gt; 方法的具体实现以抛出更具体的异常，或者如果close操作不会失败，则根本不抛出任何异常。</target>
        </trans-unit>
        <trans-unit id="a8962e33fe4ae692b6f0669c0b0060997d23406a" translate="yes" xml:space="preserve">
          <source>While this may seem a more roundabout way to perform an aggregation compared to simply mutating a running total in a loop, reduction operations parallelize more gracefully, without needing additional synchronization and with greatly reduced risk of data races.</source>
          <target state="translated">虽然与简单地在循环中突变一个运行的总量相比,这似乎是一种更迂回的执行聚合的方式,但还原操作的并行化更加优雅,不需要额外的同步,而且大大降低了数据竞赛的风险。</target>
        </trans-unit>
        <trans-unit id="c581298e75ef5bf15df9b06bf2c664ea73c5c346" translate="yes" xml:space="preserve">
          <source>While writing an object via writeUnshared does not in itself guarantee a unique reference to the object when it is deserialized, it allows a single object to be defined multiple times in a stream, so that multiple calls to readUnshared by the receiver will not conflict. Note that the rules described above only apply to the base-level object written with writeUnshared, and not to any transitively referenced sub-objects in the object graph to be serialized.</source>
          <target state="translated">虽然通过writeUnshared写入对象本身并不能保证在反序列化时对该对象的唯一引用,但它允许一个对象在一个流中被多次定义,这样接收器对readUnshared的多次调用就不会发生冲突。需要注意的是,上述规则只适用于用writeUnshared写入的基级对象,而不适用于对象图中任何要序列化的中转引用的子对象。</target>
        </trans-unit>
        <trans-unit id="5da2d68669a03b947051233558b6ce56e6780f0a" translate="yes" xml:space="preserve">
          <source>White_Space</source>
          <target state="translated">White_Space</target>
        </trans-unit>
        <trans-unit id="325016380fb9842b99430cbb0b7cb06becabcdfe" translate="yes" xml:space="preserve">
          <source>Whitespace is allowed on either side of ',', ';', '=', and '+'. Such whitespace is accepted but not generated by this code, and is ignored when comparing names.</source>
          <target state="translated">',',';','=',和'+'两边都允许使用空格。这种空白是被接受的,但不是由这段代码产生的,在比较名字时被忽略。</target>
        </trans-unit>
        <trans-unit id="3ef5e18e6403c342fcf6ad4db4c278abb2cb9d38" translate="yes" xml:space="preserve">
          <source>Whitespace is not significant in the above regular expressions.</source>
          <target state="translated">在上述正则表达式中,空格并不重要。</target>
        </trans-unit>
        <trans-unit id="6d620fb7a85a0616f4a4e6e9dda029e04472a323" translate="yes" xml:space="preserve">
          <source>Wide Area Information Server (WAIS) protocol.</source>
          <target state="translated">广域信息服务器(WAIS)协议。</target>
        </trans-unit>
        <trans-unit id="a58ddf50c5ea5c03802da919dd5953bbf82ebd74" translate="yes" xml:space="preserve">
          <source>Width</source>
          <target state="translated">Width</target>
        </trans-unit>
        <trans-unit id="d5208bbe059aa1046c3f08361ea1e178ca24d291" translate="yes" xml:space="preserve">
          <source>WildcardType</source>
          <target state="translated">WildcardType</target>
        </trans-unit>
        <trans-unit id="66c44a9ca081e2d89075ec9d49d2689c74584a8a" translate="yes" xml:space="preserve">
          <source>WildcardType represents a wildcard type expression, such as &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;? extends Number&lt;/code&gt;, or &lt;code&gt;? super Integer&lt;/code&gt;.</source>
          <target state="translated">WildcardType表示通配符类型表达式，例如 &lt;code&gt;?&lt;/code&gt; ， &lt;code&gt;? extends Number&lt;/code&gt; 还是 &lt;code&gt;? super Integer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce867c4c796e6dbe1d3e38766feb789822009ee1" translate="yes" xml:space="preserve">
          <source>WildcardType.getExtendsBound()</source>
          <target state="translated">WildcardType.getExtendsBound()</target>
        </trans-unit>
        <trans-unit id="330bde92db69c2198109194787e6c21b7478f2c0" translate="yes" xml:space="preserve">
          <source>WildcardType.getLowerBounds()</source>
          <target state="translated">WildcardType.getLowerBounds()</target>
        </trans-unit>
        <trans-unit id="f81da7284909bf43711682454467244f68db18a0" translate="yes" xml:space="preserve">
          <source>WildcardType.getSuperBound()</source>
          <target state="translated">WildcardType.getSuperBound()</target>
        </trans-unit>
        <trans-unit id="97172c5abf520854245e039ae23bd4e64bc5422f" translate="yes" xml:space="preserve">
          <source>WildcardType.getUpperBounds()</source>
          <target state="translated">WildcardType.getUpperBounds()</target>
        </trans-unit>
        <trans-unit id="d33509e2ec308e6546857b8da6aba57cee35ab90" translate="yes" xml:space="preserve">
          <source>Will be called to see whether or not this cookie should be accepted.</source>
          <target state="translated">将被调用,以确定是否应该接受这个cookie。</target>
        </trans-unit>
        <trans-unit id="37fa7a262702fe582d3a1dccfa6ad0f9944b59d4" translate="yes" xml:space="preserve">
          <source>Will check the role according to its corresponding role definition provided in relation's relation type</source>
          <target state="translated">将根据关系类型中提供的相应角色定义检查角色。</target>
        </trans-unit>
        <trans-unit id="6ccf06bf2935ecc384eb6df2769fb29a28f7bd2b" translate="yes" xml:space="preserve">
          <source>Will not always find a match (or the correct match) if some part of the parse is ambiguous. For example, if the pattern &quot;{1},{2}&quot; is used with the string arguments {&quot;a,b&quot;, &quot;c&quot;}, it will format as &quot;a,b,c&quot;. When the result is parsed, it will return {&quot;a&quot;, &quot;b,c&quot;}.</source>
          <target state="translated">如果解析的某些部分含糊不清,将不一定能找到匹配(或正确的匹配)。例如,如果模式&quot;{1},{2}&quot;与字符串参数{&quot;a,b&quot;,&quot;c&quot;}一起使用,它将格式化为 &quot;a,b,c&quot;。当解析结果时,它将返回{&quot;a&quot;,&quot;b,c&quot;}。</target>
        </trans-unit>
        <trans-unit id="d669a272be58163914a204bccea56c09fa69e531" translate="yes" xml:space="preserve">
          <source>Will send a notification (RelationNotification with type RELATION_BASIC_UPDATE or RELATION_MBEAN_UPDATE, depending if the relation is a MBean or not).</source>
          <target state="translated">将发送一个通知(RelationNotification,类型为Relation_BASIC_UPDATE或Relation_MBEAN_UPDATE,取决于关系是否是MBean)。</target>
        </trans-unit>
        <trans-unit id="c456f440fcf296338c58bf917ef98c5c5d7bac84" translate="yes" xml:space="preserve">
          <source>Will send one notification (RelationNotification with type RELATION_BASIC_UPDATE or RELATION_MBEAN_UPDATE, depending if the relation is a MBean or not) per updated role.</source>
          <target state="translated">将为每个更新的角色发送一个通知(类型为Relation_BASIC_UPDATE或Relation_MBEAN_UPDATE的RelationNotification,取决于关系是否是MBean)。</target>
        </trans-unit>
        <trans-unit id="593ac35fa2bd24a666d120e3789447fbf9c25e2a" translate="yes" xml:space="preserve">
          <source>WindowsNT/x86/4.0/lib/stat.dll</source>
          <target state="translated">WindowsNT/x86/4.0/lib/stat.dll</target>
        </trans-unit>
        <trans-unit id="702bb02b91946be2e7d1e7c71af340e7112b4fc2" translate="yes" xml:space="preserve">
          <source>With SEPARATE_DOCUMENTS_UNCOLLATED_COPIES and SEPARATE_DOCUMENTS_COLLATED_COPIES, documents &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are stapled separately.</source>
          <target state="translated">对于SEPARATE_DOCUMENTS_UNCOLLATED_COPIES和SEPARATE_DOCUMENTS_COLLATED_COPIES，文档 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 分别装订。</target>
        </trans-unit>
        <trans-unit id="c6940d372bef23c372a894b2611764845d087573" translate="yes" xml:space="preserve">
          <source>With SINGLE_DOCUMENT, documents &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are stapled together as a single document with no regard to new sheets.</source>
          <target state="translated">使用SINGLE_DOCUMENT，文档 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 装订在一起成为单个文档，而与新图纸无关。</target>
        </trans-unit>
        <trans-unit id="6aea5edd4595a1343229324f4788e3637ab7593b" translate="yes" xml:space="preserve">
          <source>With SINGLE_DOCUMENT_NEW_SHEET, documents &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are stapled together as a single document, but document &lt;code&gt;b&lt;/code&gt; starts on a new sheet.</source>
          <target state="translated">使用SINGLE_DOCUMENT_NEW_SHEET，文档 &lt;code&gt;a&lt;/code&gt; 和 &lt;code&gt;b&lt;/code&gt; 装订在一起成为一个文档，但是文档 &lt;code&gt;b&lt;/code&gt; 从新的纸张开始。</target>
        </trans-unit>
        <trans-unit id="7a7f0a9b6a27b5ea272b2faa2111b50312da5684" translate="yes" xml:space="preserve">
          <source>With Version 0 cookies, values should not contain white space, brackets, parentheses, equals signs, commas, double quotes, slashes, question marks, at signs, colons, and semicolons. Empty values may not behave the same way on all browsers.</source>
          <target state="translated">对于版本0的cookie,值不应包含空格、括号、小括号、等号、逗号、双引号、斜杠、问号、顿号、冒号和分号。空值在所有浏览器上的表现可能并不相同。</target>
        </trans-unit>
        <trans-unit id="bf66f17ae2780078f9fea48695737926c268f057" translate="yes" xml:space="preserve">
          <source>With a PermissionCollection, you can:</source>
          <target state="translated">通过一个PermissionCollection,你可以。</target>
        </trans-unit>
        <trans-unit id="7921a6a2bd87af6e70cb7478096f1f706c0eed48" translate="yes" xml:space="preserve">
          <source>With attribute type synonyms, a directory can assign multiple names to the same attribute. For example, &quot;cn&quot; and &quot;commonName&quot; might both refer to the same attribute. Asking for &quot;cn&quot; might return the &quot;commonName&quot; attribute.</source>
          <target state="translated">有了属性类型同义词,一个目录可以为同一个属性分配多个名称。例如,&quot;cn &quot;和 &quot;commonName &quot;可能都是指同一个属性。询问 &quot;cn &quot;可能会返回 &quot;commonName &quot;属性。</target>
        </trans-unit>
        <trans-unit id="0aee19fea36c937253e601d256a319bb86142c5d" translate="yes" xml:space="preserve">
          <source>With some complex reduction operations, for example a &lt;code&gt;collect()&lt;/code&gt; that produces a &lt;code&gt;Map&lt;/code&gt;, such as:</source>
          <target state="translated">通过一些复杂的归约操作，例如产生 &lt;code&gt;Map&lt;/code&gt; 的 &lt;code&gt;collect()&lt;/code&gt; ，例如：</target>
        </trans-unit>
        <trans-unit id="5e5f811ed587d929e889b7d29ba9d4370ee0e985" translate="yes" xml:space="preserve">
          <source>With the above code, the health status is collected unnecessarily even when the log level FINER is disabled. With the Supplier-accepting version as below, the status will only be collected when the log level FINER is enabled.</source>
          <target state="translated">如果使用上述代码,即使禁用日志级别FINER,也会不必要地收集健康状态。在以下的供应商接受版本中,只有在启用日志级别FINER时才会收集状态。</target>
        </trans-unit>
        <trans-unit id="e8ff6037d8867d2b3d47892d80515cedec13ebae" translate="yes" xml:space="preserve">
          <source>With this increased flexibility comes additional responsibility. The absence of block-structured locking removes the automatic release of locks that occurs with &lt;code&gt;synchronized&lt;/code&gt; methods and statements. In most cases, the following idiom should be used:</source>
          <target state="translated">灵活性的提高带来了额外的责任。缺少块结构锁定将消除 &lt;code&gt;synchronized&lt;/code&gt; 方法和语句发生的自动锁定释放。在大多数情况下，应使用以下惯用法：</target>
        </trans-unit>
        <trans-unit id="d3c389bbd15c03f9dd881098991d518ed6f3894d" translate="yes" xml:space="preserve">
          <source>Within a</source>
          <target state="translated">在一个</target>
        </trans-unit>
        <trans-unit id="0d2a1649d264fff3b41ff1e86e92590c9426695c" translate="yes" xml:space="preserve">
          <source>Within a bracket expression the &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; and &lt;code&gt;\&lt;/code&gt; characters match themselves. The (&lt;code&gt;-&lt;/code&gt;) character matches itself if it is the first character within the brackets, or the first character after the &lt;code&gt;!&lt;/code&gt; if negating.</source>
          <target state="translated">在括号表达式中的 &lt;code&gt;*&lt;/code&gt; ， &lt;code&gt;?&lt;/code&gt; 和 &lt;code&gt;\&lt;/code&gt; 字符匹配。如果（ &lt;code&gt;-&lt;/code&gt; ）字符是括号内的第一个字符，或者是 &lt;code&gt;!&lt;/code&gt; 之后的第一个字符，则该字符与之匹配。如果否定。</target>
        </trans-unit>
        <trans-unit id="83d916c5bbfc33ee16ea209e9686d45596a9c2ac" translate="yes" xml:space="preserve">
          <source>Within each &lt;code&gt;ClassLoader&lt;/code&gt; instance all classes from the same java package have the same Package object. The static methods allow a package to be found by name or the set of all packages known to the current class loader to be found.</source>
          <target state="translated">在每个 &lt;code&gt;ClassLoader&lt;/code&gt; 实例中，同一java包中的所有类都具有相同的Package对象。静态方法允许按名称查找软件包，或者查找当前类加载器已知的所有软件包的集合。</target>
        </trans-unit>
        <trans-unit id="e65be46b0d82a65208f681b65c6b6af3ea153929" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;activate&lt;/code&gt; method, a controller obtains initial values by querying the &lt;code&gt;IIOMetadata&lt;/code&gt; object's settings, either using the XML DOM tree or a plug-in specific interface, modifies values by whatever means, then modifies the &lt;code&gt;IIOMetadata&lt;/code&gt; object's settings, using either the &lt;code&gt;setFromTree&lt;/code&gt; or &lt;code&gt;mergeTree&lt;/code&gt; methods, or a plug-in specific interface. In general, applications may expect that when the &lt;code&gt;activate&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;IIOMetadata&lt;/code&gt; object is ready for use in a write operation.</source>
          <target state="translated">在 &lt;code&gt;activate&lt;/code&gt; 方法中，控制器通过使用XML DOM树或特定于插件的接口查询 &lt;code&gt;IIOMetadata&lt;/code&gt; 对象的设置来获取初始值，通过任何方式修改值，然后使用 &lt;code&gt;setFromTree&lt;/code&gt; 或 &lt;code&gt;mergeTree&lt;/code&gt; 修改 &lt;code&gt;IIOMetadata&lt;/code&gt; 对象的设置方法或特定于插件的接口。通常，应用程序可能期望，当 &lt;code&gt;activate&lt;/code&gt; 方法返回 &lt;code&gt;true&lt;/code&gt; 时， &lt;code&gt;IIOMetadata&lt;/code&gt; 对象已准备好用于写操作。</target>
        </trans-unit>
        <trans-unit id="83029e44e09a5ba0623249885430579f4267be4f" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;activate&lt;/code&gt; method, a controller obtains initial values by querying the &lt;code&gt;IIOParam&lt;/code&gt; object's &lt;code&gt;get&lt;/code&gt; methods, modifies values by whatever means, then invokes the &lt;code&gt;IIOParam&lt;/code&gt; object's &lt;code&gt;set&lt;/code&gt; methods to modify the appropriate settings. Normally, these &lt;code&gt;set&lt;/code&gt; methods will be invoked all at once at a final commit in order that a cancel operation not disturb existing values. In general, applications may expect that when the &lt;code&gt;activate&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;IIOParam&lt;/code&gt; object is ready for use in a read or write operation.</source>
          <target state="translated">在 &lt;code&gt;activate&lt;/code&gt; 方法内，控制器通过查询 &lt;code&gt;IIOParam&lt;/code&gt; 对象的 &lt;code&gt;get&lt;/code&gt; 方法来获取初始值，通过任何方式修改值，然后调用 &lt;code&gt;IIOParam&lt;/code&gt; 对象的 &lt;code&gt;set&lt;/code&gt; 方法来修改适当的设置。通常，这些 &lt;code&gt;set&lt;/code&gt; 方法将在最终提交时立即全部调用，以使取消操作不会干扰现有值。通常，应用程序可能期望，当 &lt;code&gt;activate&lt;/code&gt; 方法返回 &lt;code&gt;true&lt;/code&gt; 时， &lt;code&gt;IIOParam&lt;/code&gt; 对象已准备就绪，可以在读取或写入操作中使用。</target>
        </trans-unit>
        <trans-unit id="1759a0ebe8a5e5c04ff2fdb42ee3e41043aa418f" translate="yes" xml:space="preserve">
          <source>Without anchoring bounds, the boundaries of this matcher's region will not match anchors such as ^ and $.</source>
          <target state="translated">如果没有锚定边界,这个匹配器区域的边界将无法匹配^和$等锚。</target>
        </trans-unit>
        <trans-unit id="6fd52a68c735f034b00232a476c8c2e710db36a9" translate="yes" xml:space="preserve">
          <source>Word boundary analysis is used by search and replace functions, as well as within text editing applications that allow the user to select words with a double click. Word selection provides correct interpretation of punctuation marks within and following words. Characters that are not part of a word, such as symbols or punctuation marks, have word-breaks on both sides.</source>
          <target state="translated">字词边界分析用于搜索和替换功能,以及在文本编辑应用程序中,允许用户双击选择单词。选词提供对词内和词后标点符号的正确解释。不属于单词的字符,如符号或标点符号,在两边都有单词断句。</target>
        </trans-unit>
        <trans-unit id="642d596b44e19ab47c9e267aa3cf4a6030e0380b" translate="yes" xml:space="preserve">
          <source>Wrap a key.</source>
          <target state="translated">缠住一把钥匙。</target>
        </trans-unit>
        <trans-unit id="0c3ecd9442f9e1b1059ee6690619be457c11839a" translate="yes" xml:space="preserve">
          <source>Wrapped value (&lt;code&gt;Integer.valueOf(5)&lt;/code&gt;, &lt;code&gt;Boolean.FALSE&lt;/code&gt;, etc)</source>
          <target state="translated">包装值（ &lt;code&gt;Integer.valueOf(5)&lt;/code&gt; ， &lt;code&gt;Boolean.FALSE&lt;/code&gt; 等）</target>
        </trans-unit>
        <trans-unit id="92704fc2036355b575a4c4fbf65bd7b09813a44e" translate="yes" xml:space="preserve">
          <source>Wrapping the attribute value into an Annotation object guarantees that adjacent text runs don't get merged even if the attribute values are equal, and indicates to text containers that the attribute should be discarded if the underlying text is modified.</source>
          <target state="translated">将属性值封装到Annotation对象中,保证即使属性值相等,相邻的文本运行也不会被合并,并向文本容器表明,如果底层文本被修改,该属性应该被丢弃。</target>
        </trans-unit>
        <trans-unit id="cca5fcd7b5b7c14fbea5ee4fc3296a93d35e1da8" translate="yes" xml:space="preserve">
          <source>Wraps a byte array into a buffer.</source>
          <target state="translated">将一个字节数组打包成一个缓冲区。</target>
        </trans-unit>
        <trans-unit id="64cfb840ede8be7ea7901c7dfd0a6e52d56476fa" translate="yes" xml:space="preserve">
          <source>Wraps a byte array to be sent to the client. This method can be called only after the authentication exchange has completed (i.e., when &lt;code&gt;isComplete()&lt;/code&gt; returns true) and only if the authentication exchange has negotiated integrity and/or privacy as the quality of protection; otherwise, a &lt;code&gt;SaslException&lt;/code&gt; is thrown.</source>
          <target state="translated">包装要发送给客户端的字节数组。仅当身份验证交换完成后（即 &lt;code&gt;isComplete()&lt;/code&gt; 返回true时），并且仅当身份验证交换已协商完整性和/或隐私作为保护质量时，才可以调用此方法；否则，抛出 &lt;code&gt;SaslException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c58ede29ff7ee729e1131d3a1d2647f530332ea4" translate="yes" xml:space="preserve">
          <source>Wraps a byte array to be sent to the server. This method can be called only after the authentication exchange has completed (i.e., when &lt;code&gt;isComplete()&lt;/code&gt; returns true) and only if the authentication exchange has negotiated integrity and/or privacy as the quality of protection; otherwise, an &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown.</source>
          <target state="translated">包装要发送到服务器的字节数组。仅当身份验证交换完成后（即 &lt;code&gt;isComplete()&lt;/code&gt; 返回true时），并且仅当身份验证交换已协商完整性和/或隐私作为保护质量时，才可以调用此方法；否则，将 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67b1374ef549a7e954a05b9ec7009fb8bc41734f" translate="yes" xml:space="preserve">
          <source>Wraps a char array into a buffer.</source>
          <target state="translated">将一个char数组打包成一个缓冲区。</target>
        </trans-unit>
        <trans-unit id="f7b95771a9ecdaf8c4f0c45b0a3050463bc0fb11" translate="yes" xml:space="preserve">
          <source>Wraps a character sequence into a buffer.</source>
          <target state="translated">将一个字符序列包入缓冲区。</target>
        </trans-unit>
        <trans-unit id="9cf8f103948e6b6d2a2e2dcbd8e83ddda5dcdf8e" translate="yes" xml:space="preserve">
          <source>Wraps a double array into a buffer.</source>
          <target state="translated">将一个双数组打包成一个缓冲区。</target>
        </trans-unit>
        <trans-unit id="7c38a95681b8bf75718f777dc7681e478936ebe7" translate="yes" xml:space="preserve">
          <source>Wraps a float array into a buffer.</source>
          <target state="translated">将一个浮动数组打包成一个缓冲区。</target>
        </trans-unit>
        <trans-unit id="e875d8d4d7f1a26ef5338640a04b767dbb14b0fd" translate="yes" xml:space="preserve">
          <source>Wraps a long array into a buffer.</source>
          <target state="translated">将一个长的数组打包成一个缓冲区。</target>
        </trans-unit>
        <trans-unit id="7a45b9eefe39a4cdc4f096f2050c4639eeae92e4" translate="yes" xml:space="preserve">
          <source>Wraps a short array into a buffer.</source>
          <target state="translated">将一个短数组打包成一个缓冲区。</target>
        </trans-unit>
        <trans-unit id="526e84458ea6e6f011221fcab33932da84f5ba1d" translate="yes" xml:space="preserve">
          <source>Wraps an &lt;a href=&quot;../../../java/lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; if the MBeanInfo passed in parameter is null.</source>
          <target state="translated">如果传入的MBeanInfo参数为null，则包装&lt;a href=&quot;../../../java/lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b976fffcdb3184f30e314babf43e006ea0f5ad5" translate="yes" xml:space="preserve">
          <source>Wraps an &lt;a href=&quot;../../../java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt; if the ModelMBean is currently registered in the MBeanServer.</source>
          <target state="translated">如果ModelMBean当前在MBeanServer中注册，则包装一个&lt;a href=&quot;../../../java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0edf81e480b4a49c11c2dbafe5b84b7869d1aa13" translate="yes" xml:space="preserve">
          <source>Wraps an &lt;a href=&quot;ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; with an unchecked exception.</source>
          <target state="translated">用未检查的异常包装&lt;a href=&quot;ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6afb0fee856f2866c314288124d5fc7949a1696a" translate="yes" xml:space="preserve">
          <source>Wraps an int array into a buffer.</source>
          <target state="translated">将一个int数组打包成一个缓冲区。</target>
        </trans-unit>
        <trans-unit id="f46c77a2dce440c1be651d2cef94b153c69cfdb1" translate="yes" xml:space="preserve">
          <source>Wraps an output stream for encoding byte data using the &lt;a href=&quot;base64&quot;&gt;&lt;code&gt;Base64&lt;/code&gt;&lt;/a&gt; encoding scheme.</source>
          <target state="translated">包装输出流以使用&lt;a href=&quot;base64&quot;&gt; &lt;code&gt;Base64&lt;/code&gt; &lt;/a&gt;编码方案对字节数据进行编码。</target>
        </trans-unit>
        <trans-unit id="12b5eee30743d96f3a2465542a9df99878df7b23" translate="yes" xml:space="preserve">
          <source>Wraps exceptions thrown by the preRegister(), preDeregister() methods of the &lt;code&gt;MBeanRegistration&lt;/code&gt; interface.</source>
          <target state="translated">包装由 &lt;code&gt;MBeanRegistration&lt;/code&gt; 接口的preRegister（）和preDeregister（）方法引发的异常。</target>
        </trans-unit>
        <trans-unit id="8a2449189a10e5f2a06487a9d1438073749161da" translate="yes" xml:space="preserve">
          <source>Wraps the result of &lt;a href=&quot;simplejavafileobject#getCharContent-boolean-&quot;&gt;getCharContent(boolean)&lt;/a&gt; in a Reader. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">将&lt;a href=&quot;simplejavafileobject#getCharContent-boolean-&quot;&gt;getCharContent（boolean）&lt;/a&gt;的结果包装在Reader中。只要遵守&lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt;的约定，子类就可以更改此行为。</target>
        </trans-unit>
        <trans-unit id="18643b36bb23e1c01a06054ba0da36eec75ea0b6" translate="yes" xml:space="preserve">
          <source>Wraps the result of openOutputStream in a Writer. Subclasses can change this behavior as long as the contract of &lt;a href=&quot;fileobject&quot;&gt;&lt;code&gt;FileObject&lt;/code&gt;&lt;/a&gt; is obeyed.</source>
          <target state="translated">将openOutputStream的结果包装在Writer中。只要遵守&lt;a href=&quot;fileobject&quot;&gt; &lt;code&gt;FileObject&lt;/code&gt; &lt;/a&gt;的约定，子类就可以更改此行为。</target>
        </trans-unit>
        <trans-unit id="b8f27a22b91fffa5fca45a36aaea975d25f5a8b2" translate="yes" xml:space="preserve">
          <source>WritableByteChannel</source>
          <target state="translated">WritableByteChannel</target>
        </trans-unit>
        <trans-unit id="232d2eb15dd5a8e6d5b8d3468d075c115e7d592c" translate="yes" xml:space="preserve">
          <source>WritableByteChannel.write()</source>
          <target state="translated">WritableByteChannel.write()</target>
        </trans-unit>
        <trans-unit id="98c22110dc7ee6d680da89d0b08efd62d28b6ef7" translate="yes" xml:space="preserve">
          <source>Write a portion of a string to the buffer.</source>
          <target state="translated">将字符串的一部分写入缓冲区。</target>
        </trans-unit>
        <trans-unit id="4652631a628afd8a3f8a588fd0dbd737d2146884" translate="yes" xml:space="preserve">
          <source>Write a portion of a string.</source>
          <target state="translated">写一个字符串的一部分。</target>
        </trans-unit>
        <trans-unit id="354cde68fb6c2f936b7c59bf670319ba0dcf0ab7" translate="yes" xml:space="preserve">
          <source>Write a portion of an array of characters.</source>
          <target state="translated">写出一个数组中的部分字符。</target>
        </trans-unit>
        <trans-unit id="330fefb058de9e90d4a9120ede2b9e5d7c7923ca" translate="yes" xml:space="preserve">
          <source>Write a single character.</source>
          <target state="translated">写一个单字。</target>
        </trans-unit>
        <trans-unit id="f6e749d40ff493a236a023d30fb9fbee8148a6ef" translate="yes" xml:space="preserve">
          <source>Write a string.</source>
          <target state="translated">写一个字符串。</target>
        </trans-unit>
        <trans-unit id="20a06ba0fb5f245b45c41b384d2689f6921e992d" translate="yes" xml:space="preserve">
          <source>Write an XML representation of the specified object to the output.</source>
          <target state="translated">将指定对象的XML表示写到输出中。</target>
        </trans-unit>
        <trans-unit id="edf1d95422469a4ca47028cba75c57280225b87b" translate="yes" xml:space="preserve">
          <source>Write an object to the underlying storage or stream. The class that implements this interface defines how the object is written.</source>
          <target state="translated">将对象写入底层存储或流。实现该接口的类定义了对象的写入方式。</target>
        </trans-unit>
        <trans-unit id="5f04a37c7592d94e8a688b1e22ea47eb19aaa578" translate="yes" xml:space="preserve">
          <source>Write lines of text to a file. Characters are encoded into bytes using the &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt;&lt;code&gt;UTF-8&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将多行文字写入文件。使用&lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt; &lt;code&gt;UTF-8&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; &lt;/a&gt;编码为字节。</target>
        </trans-unit>
        <trans-unit id="422a884c7d36bcb6e46158dea6218bc82e12cb81" translate="yes" xml:space="preserve">
          <source>Write lines of text to a file. Each line is a char sequence and is written to the file in sequence with each line terminated by the platform's line separator, as defined by the system property &lt;code&gt;line.separator&lt;/code&gt;. Characters are encoded into bytes using the specified charset.</source>
          <target state="translated">将多行文字写入文件。每行都是一个char序列，并按顺序写入文件，每行由平台的行分隔符终止，如系统属性 &lt;code&gt;line.separator&lt;/code&gt; 所定义。使用指定的字符集将字符编码为字节。</target>
        </trans-unit>
        <trans-unit id="deab5959d8a2b2e287acf5a1e8d177d50eebcbfc" translate="yes" xml:space="preserve">
          <source>Write permission, group.</source>
          <target state="translated">写权限,嵽。</target>
        </trans-unit>
        <trans-unit id="ded98708196db3375d703bc829781b7516b5d82b" translate="yes" xml:space="preserve">
          <source>Write permission, others.</source>
          <target state="translated">写权限,其他。</target>
        </trans-unit>
        <trans-unit id="b5122274cf00f9236d161b83cf0b1959eac868b3" translate="yes" xml:space="preserve">
          <source>Write permission, owner.</source>
          <target state="translated">写允许,业主。</target>
        </trans-unit>
        <trans-unit id="9895c1ecb033c87ffe0c615c065d32dfcc621b1a" translate="yes" xml:space="preserve">
          <source>Write the buffered fields to the stream.</source>
          <target state="translated">将缓冲字段写到流中。</target>
        </trans-unit>
        <trans-unit id="f155bd1e4a1fbf0d9f77f04b5cf3659190cb7a16" translate="yes" xml:space="preserve">
          <source>Write the data and fields to the specified ObjectOutput stream, which must be the same stream that produced this &lt;code&gt;PutField&lt;/code&gt; object.</source>
          <target state="translated">将数据和字段写入指定的ObjectOutput流，该流必须与产生此 &lt;code&gt;PutField&lt;/code&gt; 对象的流相同。</target>
        </trans-unit>
        <trans-unit id="ab3c2de8de514c7b931148e12444f33c0c77a32e" translate="yes" xml:space="preserve">
          <source>Write the non-static and non-transient fields of the current class to this stream. This may only be called from the writeObject method of the class being serialized. It will throw the NotActiveException if it is called otherwise.</source>
          <target state="translated">将当前类的非静态和非瞬态字段写入这个流。这只能从被序列化的类的writeObject方法中调用,否则将抛出NotActiveException。如果不这样做,它将抛出NotActiveException。</target>
        </trans-unit>
        <trans-unit id="c8f5b81bb83d33a942ae2cbeb1415c3a0749b149" translate="yes" xml:space="preserve">
          <source>Write the specified class descriptor to the ObjectOutputStream. Class descriptors are used to identify the classes of objects written to the stream. Subclasses of ObjectOutputStream may override this method to customize the way in which class descriptors are written to the serialization stream. The corresponding method in ObjectInputStream, &lt;code&gt;readClassDescriptor&lt;/code&gt;, should then be overridden to reconstitute the class descriptor from its custom stream representation. By default, this method writes class descriptors according to the format defined in the Object Serialization specification.</source>
          <target state="translated">将指定的类描述符写入ObjectOutputStream。类描述符用于标识写入流的对象的类。ObjectOutputStream的子类可以重写此方法，以自定义将类描述符写入序列化流的方式。然后，应重写ObjectInputStream中的相应方法 &lt;code&gt;readClassDescriptor&lt;/code&gt; ，以从其自定义流表示形式重新构造类描述符。默认情况下，此方法根据对象序列化规范中定义的格式编写类描述符。</target>
        </trans-unit>
        <trans-unit id="677457df7e5bc80c0b6feefc69e3beb6b15a7123" translate="yes" xml:space="preserve">
          <source>Write the specified object to the ObjectOutputStream. The class of the object, the signature of the class, and the values of the non-transient and non-static fields of the class and all of its supertypes are written. Default serialization for a class can be overridden using the writeObject and the readObject methods. Objects referenced by this object are written transitively so that a complete equivalent graph of objects can be reconstructed by an ObjectInputStream.</source>
          <target state="translated">将指定的对象写入ObjectOutputStream。对象的类、类的签名、类的非瞬态和非静态字段的值以及它的所有超类型都被写入。类的默认序列化可以使用writeObject和readObject方法重写。该对象所引用的对象被中转地写入,这样就可以通过ObjectInputStream重建一个完整的对象等价图。</target>
        </trans-unit>
        <trans-unit id="625c55deeb63764ede0c1729277f79d569d6d1fa" translate="yes" xml:space="preserve">
          <source>Write the specified object to the output stream. The serialized form will denote a series of expressions, the combined effect of which will create an equivalent object when the input stream is read. By default, the object is assumed to be a &lt;em&gt;JavaBean&lt;/em&gt; with a nullary constructor, whose state is defined by the matching pairs of &quot;setter&quot; and &quot;getter&quot; methods returned by the Introspector.</source>
          <target state="translated">将指定的对象写入输出流。序列化的形式将表示一系列表达式，当读取输入流时，其组合效果将创建一个等效的对象。默认情况下，该对象假定为具有null 构造函数的&lt;em&gt;JavaBean&lt;/em&gt;，其状态由Introspector返回的匹配对&amp;ldquo; setter&amp;rdquo;和&amp;ldquo; getter&amp;rdquo;方法定义。</target>
        </trans-unit>
        <trans-unit id="936da01feb2f096577e8365b734cb08599ce6a37" translate="yes" xml:space="preserve">
          <source>WriteAbortedException</source>
          <target state="translated">WriteAbortedException</target>
        </trans-unit>
        <trans-unit id="6248c802937f8babd7f472dab3a9ccaa3cd8ca1e" translate="yes" xml:space="preserve">
          <source>WriteAbortedException.getCause()</source>
          <target state="translated">WriteAbortedException.getCause()</target>
        </trans-unit>
        <trans-unit id="d927b7d3922dccb6d4373916a1a508a5f9825f5b" translate="yes" xml:space="preserve">
          <source>WriteAbortedException.getMessage()</source>
          <target state="translated">WriteAbortedException.getMessage()</target>
        </trans-unit>
        <trans-unit id="9ee45a046a695fc62952355259c464d3782298a5" translate="yes" xml:space="preserve">
          <source>WriteLock</source>
          <target state="translated">WriteLock</target>
        </trans-unit>
        <trans-unit id="7c5510f1ed33e3b93fd55caec8daa43bd1ce2d2f" translate="yes" xml:space="preserve">
          <source>WritePendingException</source>
          <target state="translated">WritePendingException</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="3a612b47fe0eec805b37e580fcd5618c583e4cf4" translate="yes" xml:space="preserve">
          <source>Writer.append()</source>
          <target state="translated">Writer.append()</target>
        </trans-unit>
        <trans-unit id="b91c0ca8400fde6125b0c11f2497f37000c08a06" translate="yes" xml:space="preserve">
          <source>Writer.close()</source>
          <target state="translated">Writer.close()</target>
        </trans-unit>
        <trans-unit id="e0c57d77abf55ac12872750811814a29d64dcbfe" translate="yes" xml:space="preserve">
          <source>Writer.flush()</source>
          <target state="translated">Writer.flush()</target>
        </trans-unit>
        <trans-unit id="6b58bc364a56f8d61ed239ce03e81a9366cf0f8e" translate="yes" xml:space="preserve">
          <source>Writer.write()</source>
          <target state="translated">Writer.write()</target>
        </trans-unit>
        <trans-unit id="b2be28b744c30e1c5c5fb3a3d946aee604890aab" translate="yes" xml:space="preserve">
          <source>Writers should call &lt;code&gt;clearAbortRequest&lt;/code&gt; at the beginning of each write operation, and poll the value of &lt;code&gt;abortRequested&lt;/code&gt; regularly during the write.</source>
          <target state="translated">编写者应在每次写操作开始时调用 &lt;code&gt;clearAbortRequest&lt;/code&gt; ,并在写操作期间定期轮询 &lt;code&gt;abortRequested&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="aecde5df091918dfeffcca27e002a97115f41c8d" translate="yes" xml:space="preserve">
          <source>Writers that do not make use of stream metadata (</source>
          <target state="translated">不使用流元数据的编写者(</target>
        </trans-unit>
        <trans-unit id="2005d7caf2832e9b66c2ea6efe4c5aa8727e0190" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this file output stream.</source>
          <target state="translated">将指定字节数组中的 &lt;code&gt;b.length&lt;/code&gt; 个字节写入此文件输出流。</target>
        </trans-unit>
        <trans-unit id="475a7013d71b2530ccf213898f664fa5353bdd4f" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this file, starting at the current file pointer.</source>
          <target state="translated">从当前文件指针开始，将 &lt;code&gt;b.length&lt;/code&gt; 个字节从指定的字节数组写入此文件。</target>
        </trans-unit>
        <trans-unit id="94ad317d7b0ac67a67357470a8dfe034c14d2f1b" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this output stream.</source>
          <target state="translated">将指定字节数组中的 &lt;code&gt;b.length&lt;/code&gt; 个字节写入此输出流。</target>
        </trans-unit>
        <trans-unit id="e624a17a648a4933d0e79844ab18e51cf30d0121" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes from the specified byte array to this output stream. The general contract for &lt;code&gt;write(b)&lt;/code&gt; is that it should have exactly the same effect as the call &lt;code&gt;write(b, 0, b.length)&lt;/code&gt;.</source>
          <target state="translated">将指定字节数组中的 &lt;code&gt;b.length&lt;/code&gt; 个字节写入此输出流。 &lt;code&gt;write(b)&lt;/code&gt; 的一般约定是，它应具有与调用 &lt;code&gt;write(b, 0, b.length)&lt;/code&gt; 完全相同的效果。</target>
        </trans-unit>
        <trans-unit id="5534222ccd82110cbb41a1dc6f9a045112f429c8" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;b.length&lt;/code&gt; bytes to this output stream.</source>
          <target state="translated">将 &lt;code&gt;b.length&lt;/code&gt; 个字节写入此输出流。</target>
        </trans-unit>
        <trans-unit id="9f0e3c34e35200d337717f421eb2f8500aba265d" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from array &lt;code&gt;b&lt;/code&gt;, in order, to the output stream. If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If &lt;code&gt;off&lt;/code&gt; is negative, or &lt;code&gt;len&lt;/code&gt; is negative, or &lt;code&gt;off+len&lt;/code&gt; is greater than the length of the array &lt;code&gt;b&lt;/code&gt;, then an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; is thrown. If &lt;code&gt;len&lt;/code&gt; is zero, then no bytes are written. Otherwise, the byte &lt;code&gt;b[off]&lt;/code&gt; is written first, then &lt;code&gt;b[off+1]&lt;/code&gt;, and so on; the last byte written is &lt;code&gt;b[off+len-1]&lt;/code&gt;.</source>
          <target state="translated">将数组 &lt;code&gt;b&lt;/code&gt; 中的 &lt;code&gt;len&lt;/code&gt; 个字节依次写入输出流。如果 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 。如果 &lt;code&gt;off&lt;/code&gt; 为负，或者 &lt;code&gt;len&lt;/code&gt; 为负，或者 &lt;code&gt;off+len&lt;/code&gt; 大于数组 &lt;code&gt;b&lt;/code&gt; 的长度，则抛出 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; 。如果 &lt;code&gt;len&lt;/code&gt; 为零，则不写入任何字节。否则，首先写入字节 &lt;code&gt;b[off]&lt;/code&gt; ，然后写入 &lt;code&gt;b[off+1]&lt;/code&gt; ，依此类推；最后写入的字节是 &lt;code&gt;b[off+len-1]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7493c7432d9d918d61b6c3585fce1581bbd60fd" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified &lt;code&gt;byte&lt;/code&gt; array starting at offset &lt;code&gt;off&lt;/code&gt; to this output stream.</source>
          <target state="translated">写入 &lt;code&gt;len&lt;/code&gt; 个从指定的字节 &lt;code&gt;byte&lt;/code&gt; 数组以抵消 &lt;code&gt;off&lt;/code&gt; 该输出流。</target>
        </trans-unit>
        <trans-unit id="b90204d909dc82fb7e5d3bbd0045ef72ec9d3faa" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to the underlying output stream. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;len&lt;/code&gt;.</source>
          <target state="translated">写入 &lt;code&gt;len&lt;/code&gt; 个从指定的字节数组起始于偏移 &lt;code&gt;off&lt;/code&gt; 基础输出流。如果未引发异常，则 &lt;code&gt;written&lt;/code&gt; 的计数器将增加 &lt;code&gt;len&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59c2ffa0a4decb3975339af3e1141064e1cf801f" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this buffered output stream.</source>
          <target state="translated">写入 &lt;code&gt;len&lt;/code&gt; 个从指定的字节数组字节开始偏移量为 &lt;code&gt;off&lt;/code&gt; 此缓冲的输出流。</target>
        </trans-unit>
        <trans-unit id="df6022a3c457bef633289c3b1eea0afc7d2501d2" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this byte array output stream.</source>
          <target state="translated">从指定的字节数组开始将 &lt;code&gt;len&lt;/code&gt; 个字节从offset &lt;code&gt;off&lt;/code&gt; 写入此字节数组输出流。</target>
        </trans-unit>
        <trans-unit id="f47416c1bae43204d3ed0a20b6c785b1c8477de5" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this file output stream.</source>
          <target state="translated">写入 &lt;code&gt;len&lt;/code&gt; 个从指定的字节数组起始于偏移 &lt;code&gt;off&lt;/code&gt; 此文件输出流。</target>
        </trans-unit>
        <trans-unit id="7c910c38a8bd891a83fe0ebe30f88a0297205886" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this file.</source>
          <target state="translated">从指定的字节数组开始将 &lt;code&gt;len&lt;/code&gt; 个字节从offset &lt;code&gt;off&lt;/code&gt; 写入此文件。</target>
        </trans-unit>
        <trans-unit id="38c566418d538790a5eeae487d789010f4523286" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this output stream.</source>
          <target state="translated">写入 &lt;code&gt;len&lt;/code&gt; 个从指定的字节数组起始于偏移 &lt;code&gt;off&lt;/code&gt; 此输出流。</target>
        </trans-unit>
        <trans-unit id="4f851862b3139a3a60a822bd0fb6f38f95f98ef1" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this output stream. The general contract for &lt;code&gt;write(b, off, len)&lt;/code&gt; is that some of the bytes in the array &lt;code&gt;b&lt;/code&gt; are written to the output stream in order; element &lt;code&gt;b[off]&lt;/code&gt; is the first byte written and &lt;code&gt;b[off+len-1]&lt;/code&gt; is the last byte written by this operation.</source>
          <target state="translated">写入 &lt;code&gt;len&lt;/code&gt; 个从指定的字节数组起始于偏移 &lt;code&gt;off&lt;/code&gt; 此输出流。 &lt;code&gt;write(b, off, len)&lt;/code&gt; 的一般约定是数组 &lt;code&gt;b&lt;/code&gt; 中的某些字节按顺序写入输出流；元素 &lt;code&gt;b[off]&lt;/code&gt; 是此操作写入的第一个字节， &lt;code&gt;b[off+len-1]&lt;/code&gt; 是此操作写入的最后一个字节。</target>
        </trans-unit>
        <trans-unit id="131be3d9bd6c996bc02177007f5a10d152efcafd" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream. This method blocks until all the bytes are written to the output stream.</source>
          <target state="translated">写入 &lt;code&gt;len&lt;/code&gt; 个从指定的字节数组起始于偏移 &lt;code&gt;off&lt;/code&gt; 此传送输出流。该方法将阻塞，直到将所有字节写入输出流为止。</target>
        </trans-unit>
        <trans-unit id="1cf544354bc9caf492bbe86ef1abd2a2a4934186" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; bytes from the specified byte array starting at offset &lt;code&gt;off&lt;/code&gt; to this stream. If automatic flushing is enabled then the &lt;code&gt;flush&lt;/code&gt; method will be invoked.</source>
          <target state="translated">从指定的字节数组开始将 &lt;code&gt;len&lt;/code&gt; 个字节从offset &lt;code&gt;off&lt;/code&gt; 开始写入此流。如果启用了自动刷新，则将调用 &lt;code&gt;flush&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="f574fcc90500ee21973d3a8593ee72900cccc153" translate="yes" xml:space="preserve">
          <source>Writes &lt;code&gt;len&lt;/code&gt; characters from the specified character array starting at offset &lt;code&gt;off&lt;/code&gt; to this piped output stream. This method blocks until all the characters are written to the output stream. If a thread was reading data characters from the connected piped input stream, but the thread is no longer alive, then an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">将指定字符数组中的 &lt;code&gt;len&lt;/code&gt; 个字符从offset &lt;code&gt;off&lt;/code&gt; 开始写入此管道输出流。在所有字符都写入输出流之前，此方法将阻塞。如果线程正在从连接的管道输入流中读取数据字符，但是该线程不再活动，则将引发 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="851de5604a486c60e5125c7a29a7e550895176b8" translate="yes" xml:space="preserve">
          <source>Writes A Portion of an array of characters.</source>
          <target state="translated">写入一个字符数组的一部分。</target>
        </trans-unit>
        <trans-unit id="a283b0703eab7e9782450eee6c79c7aaaa9c7957" translate="yes" xml:space="preserve">
          <source>Writes a 16 bit char.</source>
          <target state="translated">写一个16位的字符。</target>
        </trans-unit>
        <trans-unit id="ca54d5eb5995c8bab76c02647925ee1f9521c712" translate="yes" xml:space="preserve">
          <source>Writes a 16 bit short.</source>
          <target state="translated">写一个16位的短。</target>
        </trans-unit>
        <trans-unit id="057353e65922065a994b45703b910bf34047ab73" translate="yes" xml:space="preserve">
          <source>Writes a 32 bit float.</source>
          <target state="translated">写一个32位的浮点数。</target>
        </trans-unit>
        <trans-unit id="c587a1942eeaf8dca64d6b527fb861b258ae3eb4" translate="yes" xml:space="preserve">
          <source>Writes a 32 bit int.</source>
          <target state="translated">写一个32位的int。</target>
        </trans-unit>
        <trans-unit id="6071f86794e94e93ef2903e2a285a17fb6ff2270" translate="yes" xml:space="preserve">
          <source>Writes a 64 bit double.</source>
          <target state="translated">写一个64位的双。</target>
        </trans-unit>
        <trans-unit id="ff1fe9b0868e3a400b0850e8cb5d3afef880236e" translate="yes" xml:space="preserve">
          <source>Writes a 64 bit long.</source>
          <target state="translated">写一个64位的长。</target>
        </trans-unit>
        <trans-unit id="6349876fc09182b7513e2eb1fd4bd3e55d4b98d6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; to the file as a one-byte value. The value &lt;code&gt;true&lt;/code&gt; is written out as the value &lt;code&gt;(byte)1&lt;/code&gt;; the value &lt;code&gt;false&lt;/code&gt; is written out as the value &lt;code&gt;(byte)0&lt;/code&gt;. The write starts at the current position of the file pointer.</source>
          <target state="translated">将 &lt;code&gt;boolean&lt;/code&gt; 作为一个字节的值写入文件。值 &lt;code&gt;true&lt;/code&gt; 被写为值 &lt;code&gt;(byte)1&lt;/code&gt; ；值 &lt;code&gt;false&lt;/code&gt; 被写为值 &lt;code&gt;(byte)0&lt;/code&gt; 。写入从文件指针的当前位置开始。</target>
        </trans-unit>
        <trans-unit id="0cf2d9ed9e1c02ddbe3d89c723dcba2e53e42da9" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; to the underlying output stream as a 1-byte value. The value &lt;code&gt;true&lt;/code&gt; is written out as the value &lt;code&gt;(byte)1&lt;/code&gt;; the value &lt;code&gt;false&lt;/code&gt; is written out as the value &lt;code&gt;(byte)0&lt;/code&gt;. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;boolean&lt;/code&gt; 作为1字节的值写入基础输出流。值 &lt;code&gt;true&lt;/code&gt; 被写为值 &lt;code&gt;(byte)1&lt;/code&gt; ；值 &lt;code&gt;false&lt;/code&gt; 被写为值 &lt;code&gt;(byte)0&lt;/code&gt; 。如果未引发异常，则 &lt;code&gt;written&lt;/code&gt; 的计数器将增加 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95726257c14b22438de24b52e49b6a02de7eab08" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; value to the stream. If &lt;code&gt;v&lt;/code&gt; is true, the value &lt;code&gt;(byte)1&lt;/code&gt; is written; if &lt;code&gt;v&lt;/code&gt; is false, the value &lt;code&gt;(byte)0&lt;/code&gt; is written.</source>
          <target state="translated">将 &lt;code&gt;boolean&lt;/code&gt; 值写入流。如果 &lt;code&gt;v&lt;/code&gt; 为true，则写入值 &lt;code&gt;(byte)1&lt;/code&gt; ；否则为0。如果 &lt;code&gt;v&lt;/code&gt; 为假，则写入值 &lt;code&gt;(byte)0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab4b1822b1f04ea72708cfe5295251a6c88b3464" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;boolean&lt;/code&gt; value to this output stream. If the argument &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, the value &lt;code&gt;(byte)1&lt;/code&gt; is written; if &lt;code&gt;v&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the value &lt;code&gt;(byte)0&lt;/code&gt; is written. The byte written by this method may be read by the &lt;code&gt;readBoolean&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;boolean&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;boolean&lt;/code&gt; 值写入此输出流。如果参数 &lt;code&gt;v&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt; ，则写入值 &lt;code&gt;(byte)1&lt;/code&gt; ；如果 &lt;code&gt;v&lt;/code&gt; 为 &lt;code&gt;false&lt;/code&gt; ，则写入值 &lt;code&gt;(byte)0&lt;/code&gt; 。可以通过 &lt;code&gt;DataInput&lt;/code&gt; 接口的 &lt;code&gt;readBoolean&lt;/code&gt; 方法读取此方法写入的字节，该方法将返回一个等于 &lt;code&gt;v&lt;/code&gt; 的 &lt;code&gt;boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f2a444c3352131269a2014fd441028ab3058f1b7" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;byte&lt;/code&gt; to the file as a one-byte value. The write starts at the current position of the file pointer.</source>
          <target state="translated">将一个 &lt;code&gt;byte&lt;/code&gt; 作为一个字节的值写入文件。写入从文件指针的当前位置开始。</target>
        </trans-unit>
        <trans-unit id="09a398562bfe5665a5c3cb088f44ff93b0c13218" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; to the file as a two-byte value, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">将 &lt;code&gt;char&lt;/code&gt; 作为两个字节的值写入文件，高字节在前。写入从文件指针的当前位置开始。</target>
        </trans-unit>
        <trans-unit id="b0f1c2dfbde644fbb6c4c155f32906af8e2ee5c6" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; to the underlying output stream as a 2-byte value, high byte first. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;char&lt;/code&gt; 作为2字节的值写入基础输出流，高字节在前。如果未引发异常，则 &lt;code&gt;written&lt;/code&gt; 的计数器将增加 &lt;code&gt;2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e93587e1f09c65fb748c39e365179e015b1c4a2e" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;char&lt;/code&gt; value, which is comprised of two bytes, to the output stream. The byte values to be written, in the order shown, are:</source>
          <target state="translated">将由两个字节组成的 &lt;code&gt;char&lt;/code&gt; 值写入输出流。按照所示顺序，要写入的字节值是：</target>
        </trans-unit>
        <trans-unit id="f9cf095e7c43223f0750c5a4985360abd3124032" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of eight bytes, to the output stream. It does this as if it first converts this &lt;code&gt;double&lt;/code&gt; value to a &lt;code&gt;long&lt;/code&gt; in exactly the manner of the &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; method and then writes the &lt;code&gt;long&lt;/code&gt; value in exactly the manner of the &lt;code&gt;writeLong&lt;/code&gt; method. The bytes written by this method may be read by the &lt;code&gt;readDouble&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;double&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">将由八个字节组成的 &lt;code&gt;double&lt;/code&gt; 精度值写入输出流。这样做的方式就好像首先按照 &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; 方法的确切方式将这个 &lt;code&gt;double&lt;/code&gt; 值转换为 &lt;code&gt;long&lt;/code&gt; ，然后完全按照 &lt;code&gt;writeLong&lt;/code&gt; 方法的方式写入了 &lt;code&gt;long&lt;/code&gt; 值一样。可以通过 &lt;code&gt;DataInput&lt;/code&gt; 接口的 &lt;code&gt;readDouble&lt;/code&gt; 方法读取此方法写入的字节，然后该方法将返回一个等于 &lt;code&gt;v&lt;/code&gt; 的 &lt;code&gt;double&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74c74f862659641ca760a0b4f5dbfe586ef1a16a" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;double&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;double&lt;/code&gt; value to an &lt;code&gt;long&lt;/code&gt; in exactly the manner of the &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; method and then writes the long value in exactly the manner of the &lt;code&gt;writeLong&lt;/code&gt; method.</source>
          <target state="translated">将由四个字节组成的 &lt;code&gt;double&lt;/code&gt; 值写入输出流。这样做就像是先按照 &lt;code&gt;Double.doubleToLongBits&lt;/code&gt; 方法的完全方式将这个 &lt;code&gt;double&lt;/code&gt; 值转换为 &lt;code&gt;long&lt;/code&gt; ，然后以 &lt;code&gt;writeLong&lt;/code&gt; 方法的完全方式写入long值一样。</target>
        </trans-unit>
        <trans-unit id="de7505d5b28cd6dc24eb7936640d871233ddd0a4" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;float&lt;/code&gt; value to an &lt;code&gt;int&lt;/code&gt; in exactly the manner of the &lt;code&gt;Float.floatToIntBits&lt;/code&gt; method and then writes the &lt;code&gt;int&lt;/code&gt; value in exactly the manner of the &lt;code&gt;writeInt&lt;/code&gt; method. The bytes written by this method may be read by the &lt;code&gt;readFloat&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;float&lt;/code&gt; equal to &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">将由四个字节组成的 &lt;code&gt;float&lt;/code&gt; 值写入输出流。这样做的方式就像是先按照 &lt;code&gt;Float.floatToIntBits&lt;/code&gt; 方法的确切方式将此 &lt;code&gt;float&lt;/code&gt; 值转换为 &lt;code&gt;int&lt;/code&gt; ，然后按照 &lt;code&gt;writeInt&lt;/code&gt; 方法的方式完全写入 &lt;code&gt;int&lt;/code&gt; 值。可以通过 &lt;code&gt;DataInput&lt;/code&gt; 接口的 &lt;code&gt;readFloat&lt;/code&gt; 方法读取此方法写入的字节，该方法将返回一个等于 &lt;code&gt;v&lt;/code&gt; 的 &lt;code&gt;float&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a5bc045873743c0ed400214abeb97588134df17b" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;float&lt;/code&gt; value, which is comprised of four bytes, to the output stream. It does this as if it first converts this &lt;code&gt;float&lt;/code&gt; value to an &lt;code&gt;int&lt;/code&gt; in exactly the manner of the &lt;code&gt;Float.floatToIntBits&lt;/code&gt; method and then writes the int value in exactly the manner of the &lt;code&gt;writeInt&lt;/code&gt; method.</source>
          <target state="translated">将由四个字节组成的 &lt;code&gt;float&lt;/code&gt; 值写入输出流。这样做的方式就像是先按照 &lt;code&gt;Float.floatToIntBits&lt;/code&gt; 方法的完全方式将此 &lt;code&gt;float&lt;/code&gt; 值转换为 &lt;code&gt;int&lt;/code&gt; ，然后按照 &lt;code&gt;writeInt&lt;/code&gt; 方法的方式完全写入int值。</target>
        </trans-unit>
        <trans-unit id="55c528963d4d2b5dc906130b6855614969aa9489" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; to the file as eight bytes, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">将一个 &lt;code&gt;long&lt;/code&gt; 写入八个字节，高字节在前。写入从文件指针的当前位置开始。</target>
        </trans-unit>
        <trans-unit id="bc6accb6c7c3e908a144c301fc776e1a0598feb1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; to the underlying output stream as eight bytes, high byte first. In no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;8&lt;/code&gt;.</source>
          <target state="translated">将一个 &lt;code&gt;long&lt;/code&gt; 数据以八个字节的形式写入基础输出流，高字节在前。不会抛出异常，所 &lt;code&gt;written&lt;/code&gt; 的计数器将增加 &lt;code&gt;8&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90977f382f90c1a5eef7e30f250984dbbf685fc0" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;long&lt;/code&gt; value, which is comprised of eight bytes, to the output stream. The byte values to be written, in the order shown, are:</source>
          <target state="translated">将由八个字节组成的 &lt;code&gt;long&lt;/code&gt; 值写入输出流。按照所示顺序，要写入的字节值是：</target>
        </trans-unit>
        <trans-unit id="08c5c0b7c3097cdebd2722567ae9d781529b69f1" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; to the file as two bytes, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">将一个 &lt;code&gt;short&lt;/code&gt; 作为两个字节写入文件，高字节在前。写入从文件指针的当前位置开始。</target>
        </trans-unit>
        <trans-unit id="02db58dd011e754f2707096b88fe2f8be9f657ed" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;short&lt;/code&gt; to the underlying output stream as two bytes, high byte first. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;short&lt;/code&gt; 作为两个字节写入基础输出流，高字节在前。如果未引发异常，则 &lt;code&gt;written&lt;/code&gt; 的计数器将增加 &lt;code&gt;2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b458ebbec899f10fb20f20b8b4375124ea3e7e52" translate="yes" xml:space="preserve">
          <source>Writes a String as a sequence of bytes.</source>
          <target state="translated">将一个字符串写成一个字节序列。</target>
        </trans-unit>
        <trans-unit id="afc7866c1825e9380b11088c400178f95a95cdbc" translate="yes" xml:space="preserve">
          <source>Writes a String as a sequence of chars.</source>
          <target state="translated">将一个字符串写成一个字符串序列。</target>
        </trans-unit>
        <trans-unit id="c2392262bb2e4275d7538e0294036fdf89687e24" translate="yes" xml:space="preserve">
          <source>Writes a boolean.</source>
          <target state="translated">写一个布尔值。</target>
        </trans-unit>
        <trans-unit id="c0da5fee9a3c6b16bf35955f5f5c35dce130ca60" translate="yes" xml:space="preserve">
          <source>Writes a byte to the compressed output stream. This method will block until the byte can be written.</source>
          <target state="translated">向压缩输出流写入一个字节。本方法将被阻塞,直到可以写入字节。</target>
        </trans-unit>
        <trans-unit id="9cf89ed21330c27e5aa3cc0f34d382c423419609" translate="yes" xml:space="preserve">
          <source>Writes a byte to the uncompressed output stream.</source>
          <target state="translated">向未压缩的输出流写入一个字节。</target>
        </trans-unit>
        <trans-unit id="311374422e4c207200ae10ac5f074fff7eabacab" translate="yes" xml:space="preserve">
          <source>Writes a byte. This method will block until the byte is actually written.</source>
          <target state="translated">写一个字节。本方法会阻塞,直到字节被实际写入。</target>
        </trans-unit>
        <trans-unit id="4f8553b815db13b6c88e3d97f9c0023965b0af9c" translate="yes" xml:space="preserve">
          <source>Writes a byte. Will block until the byte is actually written.</source>
          <target state="translated">写一个字节。在实际写入字节之前会被阻止。</target>
        </trans-unit>
        <trans-unit id="5447f774a2ec3a7588ab7fffc585fd0847e17bfa" translate="yes" xml:space="preserve">
          <source>Writes a character to the buffer.</source>
          <target state="translated">将一个字符写入缓冲区。</target>
        </trans-unit>
        <trans-unit id="e7ba7473a4f82684254953fa98bca6d77362c61b" translate="yes" xml:space="preserve">
          <source>Writes a datagram to this channel.</source>
          <target state="translated">向该通道写入数据报。</target>
        </trans-unit>
        <trans-unit id="5efe0d1f19523d7334f9c488613efaa72bee6fd2" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this console's output stream using the specified format string and arguments.</source>
          <target state="translated">使用指定的格式字符串和参数将一个格式化的字符串写入这个控制台的输出流。</target>
        </trans-unit>
        <trans-unit id="0a45e7a61a42a1faa620f3d8e59e1e8f0e6e5cc2" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this object's destination using the specified format string and arguments. The locale used is the one defined during the construction of this formatter.</source>
          <target state="translated">使用指定的格式字符串和参数将格式化的字符串写入此对象的目的地。所使用的locale是在构建此formatter时定义的locale。</target>
        </trans-unit>
        <trans-unit id="b64a4a6ece44814969f921375d7b1535d8bf355a" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this object's destination using the specified locale, format string, and arguments.</source>
          <target state="translated">使用指定的locale、format string和参数将一个格式化的字符串写入此对象的目的地。</target>
        </trans-unit>
        <trans-unit id="ff42503cbe9f3786576fcf934db44ca1703f1239" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this output stream using the specified format string and arguments.</source>
          <target state="translated">使用指定的格式字符串和参数将一个格式化的字符串写入这个输出流。</target>
        </trans-unit>
        <trans-unit id="df82bdd3d3608dc3ca77522fb3a2ccea02508a72" translate="yes" xml:space="preserve">
          <source>Writes a formatted string to this writer using the specified format string and arguments. If automatic flushing is enabled, calls to this method will flush the output buffer.</source>
          <target state="translated">使用指定的格式字符串和参数将一个格式化的字符串写入该写入器。如果启用了自动刷新功能,对该方法的调用将刷新输出缓冲区。</target>
        </trans-unit>
        <trans-unit id="e2cc625afc6e32e0218832c9bab473756248e92a" translate="yes" xml:space="preserve">
          <source>Writes a line separator. The line separator string is defined by the system property &lt;code&gt;line.separator&lt;/code&gt;, and is not necessarily a single newline ('\n') character.</source>
          <target state="translated">写一个行分隔符。行分隔符字符串由系统属性 &lt;code&gt;line.separator&lt;/code&gt; 定义，不一定是单个换行符（'\ n'）。</target>
        </trans-unit>
        <trans-unit id="e06d1baf2766748f705a9ec924d45f761ff2e183" translate="yes" xml:space="preserve">
          <source>Writes a portion of a String.</source>
          <target state="translated">写入一个字符串的一部分。</target>
        </trans-unit>
        <trans-unit id="f72fbef395487327da1536d1995e28bc5cf9fb4c" translate="yes" xml:space="preserve">
          <source>Writes a portion of a string.</source>
          <target state="translated">写入字符串的一部分。</target>
        </trans-unit>
        <trans-unit id="56b0793b26c4a0f3cdcde22d46d24b35623bc380" translate="yes" xml:space="preserve">
          <source>Writes a portion of an array of characters.</source>
          <target state="translated">写出一个数组中的部分字符。</target>
        </trans-unit>
        <trans-unit id="7238cdbf395d0c16e058e39542beedf0196e6462" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bits, given by the &lt;code&gt;numBits&lt;/code&gt; least significant bits of the &lt;code&gt;bits&lt;/code&gt; argument in left-to-right order, to the stream at the current bit offset within the current byte position. The upper &lt;code&gt;64 -
 numBits&lt;/code&gt; bits of the argument are ignored. The bit offset is advanced by &lt;code&gt;numBits&lt;/code&gt; and reduced modulo 8. Note that a bit offset of 0 always indicates the most-significant bit of the byte, and bytes of bits are written out in sequence as they are encountered. Thus bit writes are always effectively in network byte order. The actual stream byte order setting is ignored.</source>
          <target state="translated">将由 &lt;code&gt;bits&lt;/code&gt; 参数的 &lt;code&gt;numBits&lt;/code&gt; 最低有效位按从左到右的顺序给定的一系列位写入当前字节位置内当前位偏移量的流。参数的高 &lt;code&gt;64 - numBits&lt;/code&gt; 位-numBits位将被忽略。位偏移量增加 &lt;code&gt;numBits&lt;/code&gt; 并减少模8。请注意，位偏移量0始终表示字节的最高有效位，并且在遇到位字节时，它们按顺序写出。因此，位写入总是有效地按网络字节顺序进行。实际的流字节顺序设置将被忽略。</target>
        </trans-unit>
        <trans-unit id="190c55636cfdf74b2ffb6a71ed2f57d50aeccf84" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the stream at the current position. If &lt;code&gt;b.length&lt;/code&gt; is 0, nothing is written. The byte &lt;code&gt;b[0]&lt;/code&gt; is written first, then the byte &lt;code&gt;b[1]&lt;/code&gt;, and so on.</source>
          <target state="translated">将字节序列写入流中的当前位置。如果 &lt;code&gt;b.length&lt;/code&gt; 为0，则不写入任何内容。首先写入字节 &lt;code&gt;b[0]&lt;/code&gt; ，然后写入字节 &lt;code&gt;b[1]&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="2235f3a78e2b1cb2ccd3a4168c479386e4f14d39" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The byte &lt;code&gt;b[off]&lt;/code&gt; is written first, then the byte &lt;code&gt;b[off + 1]&lt;/code&gt;, and so on.</source>
          <target state="translated">将字节序列写入流中的当前位置。如果 &lt;code&gt;len&lt;/code&gt; 为0，则不写入任何内容。首先写入字节 &lt;code&gt;b[off]&lt;/code&gt; ，然后写入字节 &lt;code&gt;b[off + 1]&lt;/code&gt; ，依此类推。</target>
        </trans-unit>
        <trans-unit id="998e981037032866593747f4cad33ac3eb0066f8" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from a subsequence of the given buffers.</source>
          <target state="translated">从给定的缓冲区的子序列中写入一个字节序列到这个通道。</target>
        </trans-unit>
        <trans-unit id="df42d642ba05e494d2cc831543ce9f23be20461b" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from a subsequence of the given buffers. This operation, sometimes called a &lt;em&gt;gathering write&lt;/em&gt;, is often useful when implementing network protocols that group data into segments consisting of one or more fixed-length headers followed by a variable-length body. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the write operation completes (or fails). The result passed to the completion handler is the number of bytes written.</source>
          <target state="translated">从给定缓冲区的子序列向该通道写入字节序列。在实施将数据分组为由一个或多个固定长度报头和一个可变长度主体组成的段的网络协议时，此操作有时称为&lt;em&gt;收集写入&lt;/em&gt;，通常很有用。该 &lt;code&gt;handler&lt;/code&gt; 参数是完成处理程序，在写操作完成（或失败）时调用。传递给完成处理程序的结果是写入的字节数。</target>
        </trans-unit>
        <trans-unit id="02441dac40077efefece8a0e55188a3959f39c79" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from the given buffer, starting at the given file position.</source>
          <target state="translated">从给定的缓冲区开始,从给定的文件位置开始,向这个通道写入一串字节。</target>
        </trans-unit>
        <trans-unit id="4b2b6d5918fe10f4267a0ae46ec7f71362fad27f" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from the given buffer.</source>
          <target state="translated">从给定的缓冲区向这个通道写入一串字节。</target>
        </trans-unit>
        <trans-unit id="41853481b79dd7251b056000a101757ebc59a7f7" translate="yes" xml:space="preserve">
          <source>Writes a sequence of bytes to this channel from the given buffers.</source>
          <target state="translated">从给定的缓冲区向这个通道写入一串字节。</target>
        </trans-unit>
        <trans-unit id="25372ececa06540883487ffc569630583f3356c4" translate="yes" xml:space="preserve">
          <source>Writes a sequence of chars to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The char &lt;code&gt;c[off]&lt;/code&gt; is written first, then the char &lt;code&gt;c[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">将char序列写入当前位置的流中。如果 &lt;code&gt;len&lt;/code&gt; 为0，则不写入任何内容。首先写入char &lt;code&gt;c[off]&lt;/code&gt; ，然后写入char &lt;code&gt;c[off + 1]&lt;/code&gt; ，依此类推。流的字节顺序用于确定写入各个字节的顺序。</target>
        </trans-unit>
        <trans-unit id="b8d73713479b20f3c0e88b9a7d06d7681fdd8c40" translate="yes" xml:space="preserve">
          <source>Writes a sequence of doubles to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The double &lt;code&gt;d[off]&lt;/code&gt; is written first, then the double &lt;code&gt;d[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">将双打序列写入当前位置的流中。如果 &lt;code&gt;len&lt;/code&gt; 为0，则不写入任何内容。首先写入double &lt;code&gt;d[off]&lt;/code&gt; ，然后写入double &lt;code&gt;d[off + 1]&lt;/code&gt; ，依此类推。流的字节顺序用于确定写入各个字节的顺序。</target>
        </trans-unit>
        <trans-unit id="ee5692e375b6806782e1c51563426dd418bee68f" translate="yes" xml:space="preserve">
          <source>Writes a sequence of floats to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The float &lt;code&gt;f[off]&lt;/code&gt; is written first, then the float &lt;code&gt;f[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">将浮点序列写入当前位置的流中。如果 &lt;code&gt;len&lt;/code&gt; 为0，则不写入任何内容。首先写浮点数 &lt;code&gt;f[off]&lt;/code&gt; ，然后写浮点数 &lt;code&gt;f[off + 1]&lt;/code&gt; ，依此类推。流的字节顺序用于确定写入各个字节的顺序。</target>
        </trans-unit>
        <trans-unit id="2e22e143b7aa537e10aa473bc7180b02b29a9e27" translate="yes" xml:space="preserve">
          <source>Writes a sequence of ints to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The int &lt;code&gt;i[off]&lt;/code&gt; is written first, then the int &lt;code&gt;i[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">将int序列写入当前位置的流中。如果 &lt;code&gt;len&lt;/code&gt; 为0，则不写入任何内容。首先写入int &lt;code&gt;i[off]&lt;/code&gt; ，然后再写入int &lt;code&gt;i[off + 1]&lt;/code&gt; ，依此类推。流的字节顺序用于确定写入各个字节的顺序。</target>
        </trans-unit>
        <trans-unit id="8f619dc03c935ddbc5713f176006c9051deaeab8" translate="yes" xml:space="preserve">
          <source>Writes a sequence of longs to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The long &lt;code&gt;l[off]&lt;/code&gt; is written first, then the long &lt;code&gt;l[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">将long序列写入当前位置的流中。如果 &lt;code&gt;len&lt;/code&gt; 为0，则不写入任何内容。先写入长 &lt;code&gt;l[off]&lt;/code&gt; ，然后再写入长 &lt;code&gt;l[off + 1]&lt;/code&gt; ，依此类推。流的字节顺序用于确定写入各个字节的顺序。</target>
        </trans-unit>
        <trans-unit id="b21ca2f4d5f95b31acfd2f5bbc0ce005cc3a5fb6" translate="yes" xml:space="preserve">
          <source>Writes a sequence of shorts to the stream at the current position. If &lt;code&gt;len&lt;/code&gt; is 0, nothing is written. The short &lt;code&gt;s[off]&lt;/code&gt; is written first, then the short &lt;code&gt;s[off + 1]&lt;/code&gt;, and so on. The byte order of the stream is used to determine the order in which the individual bytes are written.</source>
          <target state="translated">将短裤序列写入当前位置的流中。如果 &lt;code&gt;len&lt;/code&gt; 为0，则不写入任何内容。首先写入short &lt;code&gt;s[off]&lt;/code&gt; ，然后写入short &lt;code&gt;s[off + 1]&lt;/code&gt; ，依此类推。流的字节顺序用于确定写入各个字节的顺序。</target>
        </trans-unit>
        <trans-unit id="7b943c58e32fcea952a5a176b2b64b74481ec8ac" translate="yes" xml:space="preserve">
          <source>Writes a single bit, given by the least significant bit of the argument, to the stream at the current bit offset within the current byte position. The upper 31 bits of the argument are ignored. The given bit replaces the previous bit at that position. The bit offset is advanced by one and reduced modulo 8.</source>
          <target state="translated">在当前字节位置的当前位偏移量处,将参数中的最小有效位写入流。参数的上31位被忽略。给定的位将取代该位置的前一个位。位偏移量前进1,并以8为模数减少。</target>
        </trans-unit>
        <trans-unit id="4d25d450c91f1b954e5d3226b5eb0d63eb9f3de1" translate="yes" xml:space="preserve">
          <source>Writes a single byte to the stream at the current position. The 24 high-order bits of &lt;code&gt;b&lt;/code&gt; are ignored.</source>
          <target state="translated">将单个字节写入流中的当前位置。 &lt;code&gt;b&lt;/code&gt; 的24个高阶位被忽略。</target>
        </trans-unit>
        <trans-unit id="664dba2ff2df999d8a27b0049a85c61d9db7e29f" translate="yes" xml:space="preserve">
          <source>Writes a single character.</source>
          <target state="translated">写的是一个字。</target>
        </trans-unit>
        <trans-unit id="f933296edffab5638d15f828802522dc84897cf3" translate="yes" xml:space="preserve">
          <source>Writes a single character. The character to be written is contained in the 16 low-order bits of the given integer value; the 16 high-order bits are ignored.</source>
          <target state="translated">写入一个字符。要写的字符包含在给定整数值的16个低阶位中;16个高阶位被忽略。</target>
        </trans-unit>
        <trans-unit id="df213335179c5ed8ca6afe71e0677d7424da6195" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a MIDI file of the file type indicated to the external file provided.</source>
          <target state="translated">将代表文件类型的MIDI文件的字节流写入所提供的外部文件。</target>
        </trans-unit>
        <trans-unit id="e8a5f176816806a6fbca88570a3f6372ece24192" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a MIDI file of the file type indicated to the output stream provided.</source>
          <target state="translated">将代表文件类型的MIDI文件的字节流写入提供的输出流中。</target>
        </trans-unit>
        <trans-unit id="d0e751b02c4917e9384d9893ee2785bf31c7eb4d" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a file of the MIDI file type indicated to the external file provided.</source>
          <target state="translated">将代表MIDI文件类型的字节流写入所提供的外部文件。</target>
        </trans-unit>
        <trans-unit id="68b7db83aee7a60d72e213514b372c08156d7b87" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing a file of the MIDI file type indicated to the output stream provided.</source>
          <target state="translated">将代表MIDI文件类型的字节流写入所提供的输出流中。</target>
        </trans-unit>
        <trans-unit id="9036acda052c4911938040861a1e300f1ef2410e" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the file format indicated to the external file provided.</source>
          <target state="translated">将代表文件格式的音频文件的字节流写入所提供的外部文件。</target>
        </trans-unit>
        <trans-unit id="b61ebe87fae82a3f3e78f56158a3a4c202901a7e" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the file type indicated to the output stream provided. Some file types require that the length be written into the file header, and cannot be written from start to finish unless the length is known in advance. An attempt to write such a file type will fail with an IOException if the length in the audio file format is &lt;a href=&quot;../audiosystem#NOT_SPECIFIED&quot;&gt;&lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">将表示音频文件的字节流写入提供的输出流，该音频文件具有指示的文件类型。某些文件类型要求将长度写到文件头中，除非事先知道长度，否则不能从头到尾写。如果音频文件格式的长度为&lt;a href=&quot;../audiosystem#NOT_SPECIFIED&quot;&gt; &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; &lt;/a&gt;，则尝试写入此类文件的尝试将失败，并出现IOException 。</target>
        </trans-unit>
        <trans-unit id="c8f0adc20f1af94af22a8e4d67c6778209fd2469" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the specified file type to the external file provided.</source>
          <target state="translated">将代表指定文件类型的音频文件的字节流写入提供的外部文件。</target>
        </trans-unit>
        <trans-unit id="457626ec7057ea1509e697c0d5f9754010afd06b" translate="yes" xml:space="preserve">
          <source>Writes a stream of bytes representing an audio file of the specified file type to the output stream provided. Some file types require that the length be written into the file header; such files cannot be written from start to finish unless the length is known in advance. An attempt to write a file of such a type will fail with an IOException if the length in the audio file type is &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt;.</source>
          <target state="translated">将表示指定文件类型的音频文件的字节流写入提供的输出流。某些文件类型要求将长度写到文件头中。除非事先知道长度，否则无法从头到尾写入此类文件。如果音频文件类型的长度为 &lt;code&gt;AudioSystem.NOT_SPECIFIED&lt;/code&gt; ，则尝试写入此类文件将失败，并出现IOException 。</target>
        </trans-unit>
        <trans-unit id="cbfebbe442291a3e8e465b80272932906f7ed4fb" translate="yes" xml:space="preserve">
          <source>Writes a string to the file as a sequence of characters. Each character is written to the data output stream as if by the &lt;code&gt;writeChar&lt;/code&gt; method. The write starts at the current position of the file pointer.</source>
          <target state="translated">将字符串作为字符序列写入文件。每个字符就像通过 &lt;code&gt;writeChar&lt;/code&gt; 方法写入数据输出流。写入从文件指针的当前位置开始。</target>
        </trans-unit>
        <trans-unit id="b63ac37afa3c7e30a7ec3f4bba3342bb93883711" translate="yes" xml:space="preserve">
          <source>Writes a string to the file using &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; encoding in a machine-independent manner.</source>
          <target state="translated">使用&lt;a href=&quot;datainput#modified-utf-8&quot;&gt;修改后的UTF-8&lt;/a&gt;编码以独立于机器的方式将字符串写入文件。</target>
        </trans-unit>
        <trans-unit id="2d6f810066617d11d6cb068e9ebc2b6257515d4f" translate="yes" xml:space="preserve">
          <source>Writes a string to the output stream. For every character in the string &lt;code&gt;s&lt;/code&gt;, taken in order, one byte is written to the output stream. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">将字符串写入输出流。对于字符串 &lt;code&gt;s&lt;/code&gt; 中的每个字符，按顺序将一个字节写入输出流。如果 &lt;code&gt;s&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc2a7fd94389452a3c96d490dbd418c7fc0f9085" translate="yes" xml:space="preserve">
          <source>Writes a string to the output stream. For every character in the string &lt;code&gt;s&lt;/code&gt;, taken in order, two bytes are written to the output stream, ordered according to the current byte order setting. If network byte order is being used, the high-order byte is written first; the order is reversed otherwise. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown.</source>
          <target state="translated">将字符串写入输出流。对于按顺序获取的字符串 &lt;code&gt;s&lt;/code&gt; 中的每个字符，将根据当前字节顺序设置将两个字节写入输出流。如果使用网络字节顺序，则先写入高位字节；否则使用高位字节。否则顺序相反。如果 &lt;code&gt;s&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea2333de6bb14f6753c8467ddb361808ddce3a17" translate="yes" xml:space="preserve">
          <source>Writes a string to the underlying output stream as a sequence of characters. Each character is written to the data output stream as if by the &lt;code&gt;writeChar&lt;/code&gt; method. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by twice the length of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">将字符串作为字符序列写入底层输出流。每个字符就像通过 &lt;code&gt;writeChar&lt;/code&gt; 方法写入数据输出流。如果未引发异常，则 &lt;code&gt;written&lt;/code&gt; 的计数器将增加 &lt;code&gt;s&lt;/code&gt; 长度的两倍。</target>
        </trans-unit>
        <trans-unit id="d1f60a0c985ee3c99884db52d5d00830332832d9" translate="yes" xml:space="preserve">
          <source>Writes a string to the underlying output stream using &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; encoding in a machine-independent manner.</source>
          <target state="translated">使用&lt;a href=&quot;datainput#modified-utf-8&quot;&gt;修改后的UTF-8&lt;/a&gt;编码以独立于机器的方式将字符串写入基础输出流。</target>
        </trans-unit>
        <trans-unit id="11a73af4769d2fa84714761c91018f9161b700b9" translate="yes" xml:space="preserve">
          <source>Writes a string.</source>
          <target state="translated">写一个字符串。</target>
        </trans-unit>
        <trans-unit id="5a1953b8b9d27d19a7b5afed0358700c0f0015e7" translate="yes" xml:space="preserve">
          <source>Writes a string. This method cannot be inherited from the Writer class because it must suppress I/O exceptions.</source>
          <target state="translated">写一个字符串。这个方法不能从Writer类继承,因为它必须抑制I/O异常。</target>
        </trans-unit>
        <trans-unit id="eb6ba0073288a7f37d493353625aab60dc1fed80" translate="yes" xml:space="preserve">
          <source>Writes a sub array of bytes.</source>
          <target state="translated">写一个子数组的字节。</target>
        </trans-unit>
        <trans-unit id="3f4a23d3b350bf5bfadf2b639abb0bdae3bb550b" translate="yes" xml:space="preserve">
          <source>Writes an &quot;unshared&quot; object to the ObjectOutputStream. This method is identical to writeObject, except that it always writes the given object as a new, unique object in the stream (as opposed to a back-reference pointing to a previously serialized instance). Specifically:</source>
          <target state="translated">将一个 &quot;非共享 &quot;对象写入ObjectOutputStream。这个方法与writeObject相同,只是它总是将给定的对象作为一个新的、唯一的对象写入流中(而不是指向先前序列化实例的反向引用)。具体来说。</target>
        </trans-unit>
        <trans-unit id="1740f6f71c4cd03887821da91243ca075fe07b7b" translate="yes" xml:space="preserve">
          <source>Writes an 8 bit byte.</source>
          <target state="translated">写一个8位字节。</target>
        </trans-unit>
        <trans-unit id="1e21e726eeab5953cd125b7495eec89ed335d609" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; to the file as four bytes, high byte first. The write starts at the current position of the file pointer.</source>
          <target state="translated">将 &lt;code&gt;int&lt;/code&gt; 作为四个字节写入文件，高字节在前。写入从文件指针的当前位置开始。</target>
        </trans-unit>
        <trans-unit id="9fc8ec8c439b095c865cb112354e78c579eab601" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; to the underlying output stream as four bytes, high byte first. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;int&lt;/code&gt; 作为四个字节（高字节在前）写入基础输出流。如果未引发异常，则 &lt;code&gt;written&lt;/code&gt; 的计数器将增加 &lt;code&gt;4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e04bb9fdd6e28e1e95affa5629a2ce9b0aeb2c1d" translate="yes" xml:space="preserve">
          <source>Writes an &lt;code&gt;int&lt;/code&gt; value, which is comprised of four bytes, to the output stream. The byte values to be written, in the order shown, are:</source>
          <target state="translated">将一个包含四个字节的 &lt;code&gt;int&lt;/code&gt; 值写入输出流。按照所示顺序，要写入的字节值是：</target>
        </trans-unit>
        <trans-unit id="91391ca01713b61e3a68471e88e1a2ec74a5e484" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the compressed output stream. This method will block until all the bytes are written.</source>
          <target state="translated">将一个字节数组写入压缩输出流。本方法将被阻塞,直到所有字节被写入。</target>
        </trans-unit>
        <trans-unit id="5bcc78bbe57b6ce8a96809d5c51d5bdd7eb8d10e" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the current ZIP entry data. This method will block until all the bytes are written.</source>
          <target state="translated">将一个字节数组写入当前ZIP条目数据。本方法将被阻塞,直到所有字节被写入。</target>
        </trans-unit>
        <trans-unit id="b65fd57256c0433acff32087a2d8da5eaf47411f" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes to the uncompressed output stream.</source>
          <target state="translated">将一个字节数组写入未压缩的输出流。</target>
        </trans-unit>
        <trans-unit id="184076d4a82e468a9041fc00d661d8b7d8f621bd" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes. This method will block until the bytes are actually written.</source>
          <target state="translated">写入一个字节数组。本方法会阻塞,直到字节被实际写入。</target>
        </trans-unit>
        <trans-unit id="8dd5aee302b286670386d8cc0bc1e852dfd89da5" translate="yes" xml:space="preserve">
          <source>Writes an array of bytes. Will block until the bytes are actually written.</source>
          <target state="translated">写入一个字节数组。在实际写入字节之前会被阻塞。</target>
        </trans-unit>
        <trans-unit id="ea42af8fd102a5d23675fcd8f7e1a21accb34a84" translate="yes" xml:space="preserve">
          <source>Writes an array of characters.</source>
          <target state="translated">编写一个字符数组。</target>
        </trans-unit>
        <trans-unit id="928868e95fe6511cf01eeb699debe02725148a7f" translate="yes" xml:space="preserve">
          <source>Writes an array of characters. This method cannot be inherited from the Writer class because it must suppress I/O exceptions.</source>
          <target state="translated">写一个字符数组。这个方法不能从Writer类继承,因为它必须抑制I/O异常。</target>
        </trans-unit>
        <trans-unit id="ab7e466b9e9f6735bac5eb62165c0f91b84b2869" translate="yes" xml:space="preserve">
          <source>Writes an image using an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to a &lt;code&gt;File&lt;/code&gt;. If there is already a &lt;code&gt;File&lt;/code&gt; present, its contents are discarded.</source>
          <target state="translated">使用支持给定格式的任意 &lt;code&gt;ImageWriter&lt;/code&gt; 将图像写入 &lt;code&gt;File&lt;/code&gt; 。如果已经存在 &lt;code&gt;File&lt;/code&gt; ，则将其内容丢弃。</target>
        </trans-unit>
        <trans-unit id="c33f9616c13e7b7edbad66a907a09cd89959adef" translate="yes" xml:space="preserve">
          <source>Writes an image using an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to an &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="translated">使用支持给定格式的任意 &lt;code&gt;ImageWriter&lt;/code&gt; 将图像写入 &lt;code&gt;OutputStream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50e3dd58b633ef56e1113523580bcc40cd8f5260" translate="yes" xml:space="preserve">
          <source>Writes an image using the an arbitrary &lt;code&gt;ImageWriter&lt;/code&gt; that supports the given format to an &lt;code&gt;ImageOutputStream&lt;/code&gt;. The image is written to the &lt;code&gt;ImageOutputStream&lt;/code&gt; starting at the current stream pointer, overwriting existing stream data from that point forward, if present.</source>
          <target state="translated">使用支持给定格式的任意 &lt;code&gt;ImageWriter&lt;/code&gt; 将图像写入 &lt;code&gt;ImageOutputStream&lt;/code&gt; 。图像从当前流指针开始写入 &lt;code&gt;ImageOutputStream&lt;/code&gt; ，从该点开始覆盖现有流数据（如果存在）。</target>
        </trans-unit>
        <trans-unit id="ab24f3dcbe1fa930ff321e8116207af7e2609aeb" translate="yes" xml:space="preserve">
          <source>Writes any remaining uncompressed data to the output stream and closes the underlying output stream.</source>
          <target state="translated">将任何剩余的未压缩数据写入输出流,并关闭底层输出流。</target>
        </trans-unit>
        <trans-unit id="bf35ba162e8457e73f54882a5c5184fa9e4fc908" translate="yes" xml:space="preserve">
          <source>Writes array of bytes to the compressed output stream. This method will block until all the bytes are written.</source>
          <target state="translated">将字节数组写入压缩输出流。本方法会阻塞,直到所有字节被写入。</target>
        </trans-unit>
        <trans-unit id="9f542e25c7d41a9ed23b80d6673b5442bf3f0be9" translate="yes" xml:space="preserve">
          <source>Writes audio data to the mixer via this source data line. The requested number of bytes of data are read from the specified array, starting at the given offset into the array, and written to the data line's buffer. If the caller attempts to write more data than can currently be written (see &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;), this method blocks until the requested amount of data has been written. This applies even if the requested amount of data to write is greater than the data line's buffer size. However, if the data line is closed, stopped, or flushed before the requested amount has been written, the method no longer blocks, but returns the number of bytes written thus far.</source>
          <target state="translated">通过此源数据线将音频数据写入混音器。从指定数组中读取请求的数据字节数，从给定的偏移量开始到数组中，然后将其写入数据线的缓冲区。如果调用方尝试写入的数据量超过当前写入的数据量（请参阅 &lt;code&gt;&lt;a href=&quot;dataline#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; ），则此方法将阻塞，直到已写入请求的数据量为止。即使请求写入的数据量大于数据行的缓冲区大小，这也适用。但是，如果在写入请求的数量之前关闭，停止或刷新了数据线，则该方法不再阻塞，而是返回到目前为止已写入的字节数。</target>
        </trans-unit>
        <trans-unit id="87e219a2917354808d12478e2ed7441db173e738" translate="yes" xml:space="preserve">
          <source>Writes bytes to a file. The &lt;code&gt;options&lt;/code&gt; parameter specifies how the the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt;. All bytes in the byte array are written to the file. The method ensures that the file is closed when all bytes have been written (or an I/O error or other runtime exception is thrown). If an I/O error occurs then it may do so after the file has created or truncated, or after some bytes have been written to the file.</source>
          <target state="translated">将字节写入文件。该 &lt;code&gt;options&lt;/code&gt; 参数指定如何创建或打开该文件。如果不存在任何选项，则此方法将像存在&lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt;选项一样工作。换句话说，它将打开文件进行写入，如果不存在则创建文件，或者首先将现有的&lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt;截断为 &lt;code&gt;0&lt;/code&gt; 。字节数组中的所有字节均写入文件。该方法可确保在写入所有字节后（或者引发I / O错误或其他运行时异常）关闭文件。如果发生I / O错误，则可以在创建或截断文件后，或者在将某些字节写入文件后执行此操作。</target>
        </trans-unit>
        <trans-unit id="3aa9eb435ce66122fd3b1fbb9683dc6f39b12396" translate="yes" xml:space="preserve">
          <source>Writes characters to the buffer.</source>
          <target state="translated">将字符写入缓冲区。</target>
        </trans-unit>
        <trans-unit id="b26649091ef7b5d2a209d730bd88924f12963e9c" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given double value, in the current byte order, into this buffer at the current position, and then increments the position by eight.</source>
          <target state="translated">将包含给定双倍值的8个字节按当前字节顺序写入当前位置的缓冲区,然后将该位置递增8个字节。</target>
        </trans-unit>
        <trans-unit id="29fc7be2d2fa2a9838cc38ff4c3934f5c3f3655d" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given double value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">将包含给定双倍值的8个字节以当前字节顺序写入给定索引的缓冲区。</target>
        </trans-unit>
        <trans-unit id="cc89b642bf8674896232f688adbc8ebc5d1dfdc8" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given long value, in the current byte order, into this buffer at the current position, and then increments the position by eight.</source>
          <target state="translated">将包含给定长值的8个字节按当前字节顺序写入当前位置的缓冲区,然后将该位置递增8个字节。</target>
        </trans-unit>
        <trans-unit id="2bb4a200c6266d5b89a3ab96d32530f2a49d3e59" translate="yes" xml:space="preserve">
          <source>Writes eight bytes containing the given long value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">将包含给定长值的8个字节以当前字节顺序写入给定索引的缓冲区。</target>
        </trans-unit>
        <trans-unit id="b9d0787a90c45f72d95f7e055e81599ca892dbaf" translate="yes" xml:space="preserve">
          <source>Writes every character in the string &lt;code&gt;s&lt;/code&gt;, to the output stream, in order, two bytes per character. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If &lt;code&gt;s.length&lt;/code&gt; is zero, then no characters are written. Otherwise, the character &lt;code&gt;s[0]&lt;/code&gt; is written first, then &lt;code&gt;s[1]&lt;/code&gt;, and so on; the last character written is &lt;code&gt;s[s.length-1]&lt;/code&gt;. For each character, two bytes are actually written, high-order byte first, in exactly the manner of the &lt;code&gt;writeChar&lt;/code&gt; method.</source>
          <target state="translated">依次将字符串 &lt;code&gt;s&lt;/code&gt; 中的每个字符写入输出流，每个字符两个字节。如果 &lt;code&gt;s&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 。如果 &lt;code&gt;s.length&lt;/code&gt; 为零，则不写入任何字符。否则，先写字符 &lt;code&gt;s[0]&lt;/code&gt; ，然后写 &lt;code&gt;s[1]&lt;/code&gt; ，依此类推；最后写入 &lt;code&gt;s[s.length-1]&lt;/code&gt; 字符是s [s.length-1]。对于每个字符，实际上完全按照 &lt;code&gt;writeChar&lt;/code&gt; 方法的方式写入两个字节，首先写入高位字节。</target>
        </trans-unit>
        <trans-unit id="3b4e00ea7b401f90dc90c64677abaf47d2170156" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given float value, in the current byte order, into this buffer at the current position, and then increments the position by four.</source>
          <target state="translated">将包含给定浮点数的4个字节以当前字节顺序写入当前位置的缓冲区,然后将该位置增加4个字节。</target>
        </trans-unit>
        <trans-unit id="5d979f53ff93d5b35a5d4de9156c84a797cd1d5a" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given float value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">将包含给定float值的4个字节按当前字节顺序写入给定索引的缓冲区。</target>
        </trans-unit>
        <trans-unit id="d8eac6d4c7237a86bdd435eec454a1165fa276c0" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given int value, in the current byte order, into this buffer at the current position, and then increments the position by four.</source>
          <target state="translated">将包含给定int值的4个字节按当前字节顺序写入当前位置的缓冲区,然后将位置增加4个字节。</target>
        </trans-unit>
        <trans-unit id="5cf0746092fdb63187e2dce0e857024f58099778" translate="yes" xml:space="preserve">
          <source>Writes four bytes containing the given int value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">将包含给定int值的4个字节以当前字节顺序写入给定索引的缓冲区。</target>
        </trans-unit>
        <trans-unit id="ceb6f95baf23beaeef39ebca1fb801718774f47c" translate="yes" xml:space="preserve">
          <source>Writes next block of compressed data to the output stream.</source>
          <target state="translated">将下一个压缩数据块写入输出流。</target>
        </trans-unit>
        <trans-unit id="793d3092c9065640c3553038c363272625fcd2c4" translate="yes" xml:space="preserve">
          <source>Writes out a &lt;code&gt;byte&lt;/code&gt; to the underlying output stream as a 1-byte value. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">将 &lt;code&gt;byte&lt;/code&gt; 作为1字节的值写到基础输出流。如果未引发异常，则 &lt;code&gt;written&lt;/code&gt; 的计数器将增加 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b05d15e021ce2f4dcac9e9d78114869b4a50f886" translate="yes" xml:space="preserve">
          <source>Writes out the string to the underlying output stream as a sequence of bytes. Each character in the string is written out, in sequence, by discarding its high eight bits. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by the length of &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">将字符串作为字节序列写出到基础输出流中。字符串中的每个字符通过丢弃高八位来依次写出。如果未引发异常，则 &lt;code&gt;written&lt;/code&gt; 的计数器将增加 &lt;code&gt;s&lt;/code&gt; 的长度。</target>
        </trans-unit>
        <trans-unit id="6a3054c268468152f2a8887eea01d971616cbb74" translate="yes" xml:space="preserve">
          <source>Writes remaining compressed data to the output stream and closes the underlying stream.</source>
          <target state="translated">将剩余的压缩数据写入输出流并关闭底层流。</target>
        </trans-unit>
        <trans-unit id="61581676dc1ea35473d6a783082bf72e9c80ceec" translate="yes" xml:space="preserve">
          <source>Writes statement &lt;code&gt;oldStm&lt;/code&gt; to the stream. The &lt;code&gt;oldStm&lt;/code&gt; should be written entirely in terms of the callers environment, i.e. the target and all arguments should be part of the object graph being written. These expressions represent a series of &quot;what happened&quot; expressions which tell the output stream how to produce an object graph like the original.</source>
          <target state="translated">将语句 &lt;code&gt;oldStm&lt;/code&gt; 写入流中。所述 &lt;code&gt;oldStm&lt;/code&gt; 应完全在呼叫者环境方面被写入，即，在目标和所有参数应是对象图的一部分被写入。这些表达式表示一系列&amp;ldquo;发生的事情&amp;rdquo;表达式，这些表达式告诉输出流如何生成类似于原始图形的对象图。</target>
        </trans-unit>
        <trans-unit id="f052f35920dd89a7054c35d1df3b6bfb93d13930" translate="yes" xml:space="preserve">
          <source>Writes text to a character-output stream, buffering characters so as to provide for the efficient writing of single characters, arrays, and strings.</source>
          <target state="translated">将文本写入字符输出流,对字符进行缓冲,以便高效地写入单个字符、数组和字符串。</target>
        </trans-unit>
        <trans-unit id="46f7ffb3816bb380e3513417982c2f71b9fe2e32" translate="yes" xml:space="preserve">
          <source>Writes the 16 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream. The 16 high-order bits of &lt;code&gt;v&lt;/code&gt; are ignored. If the stream uses network byte order, the bytes written, in order, will be:</source>
          <target state="translated">将 &lt;code&gt;v&lt;/code&gt; 的16个低阶位写入流中。 &lt;code&gt;v&lt;/code&gt; 的16个高阶位被忽略。如果流使用网络字节顺序，则按顺序写入的字节将是：</target>
        </trans-unit>
        <trans-unit id="1695f3633211b76ec7f857f5454ea6a247025c8d" translate="yes" xml:space="preserve">
          <source>Writes the 32 bits of &lt;code&gt;v&lt;/code&gt; to the stream. If the stream uses network byte order, the bytes written, in order, will be:</source>
          <target state="translated">将 &lt;code&gt;v&lt;/code&gt; 的32位写入流中。如果流使用网络字节顺序，则按顺序写入的字节将是：</target>
        </trans-unit>
        <trans-unit id="1ad02fac0fe368119ddb18c395ff897d2d58089f" translate="yes" xml:space="preserve">
          <source>Writes the 64 bits of &lt;code&gt;v&lt;/code&gt; to the stream. If the stream uses network byte order, the bytes written, in order, will be:</source>
          <target state="translated">将 &lt;code&gt;v&lt;/code&gt; 的64位写入流中。如果流使用网络字节顺序，则按顺序写入的字节将是：</target>
        </trans-unit>
        <trans-unit id="1804455e9da4aaf420e36d129972367ec781e360" translate="yes" xml:space="preserve">
          <source>Writes the 8 low-order bits of &lt;code&gt;v&lt;/code&gt; to the stream. The 24 high-order bits of &lt;code&gt;v&lt;/code&gt; are ignored. (This means that &lt;code&gt;writeByte&lt;/code&gt; does exactly the same thing as &lt;code&gt;write&lt;/code&gt; for an integer argument.)</source>
          <target state="translated">将 &lt;code&gt;v&lt;/code&gt; 的低8位写入流中。 &lt;code&gt;v&lt;/code&gt; 的24个高阶位被忽略。（这意味着 &lt;code&gt;writeByte&lt;/code&gt; 与 &lt;code&gt;write&lt;/code&gt; 整数参数完全一样。）</target>
        </trans-unit>
        <trans-unit id="89cd571628123202a3823b52aeb30a696038cb43" translate="yes" xml:space="preserve">
          <source>Writes the Manifest to the specified OutputStream. Attributes.Name.MANIFEST_VERSION must be set in MainAttributes prior to invoking this method.</source>
          <target state="translated">将Manifest写入指定的OutputStream。在调用本方法之前,必须在MainAttributes中设置Attributes.Name.MANIFEST_VERSION。</target>
        </trans-unit>
        <trans-unit id="c24338bb5d1fb51bd9cbd3d86a25bb4355deba24" translate="yes" xml:space="preserve">
          <source>Writes the complete contents of this byte array output stream to the specified output stream argument, as if by calling the output stream's write method using &lt;code&gt;out.write(buf, 0, count)&lt;/code&gt;.</source>
          <target state="translated">将此字节数组输出流的完整内容写入指定的输出流参数，就像通过使用 &lt;code&gt;out.write(buf, 0, count)&lt;/code&gt; 调用输出流的write方法一样。</target>
        </trans-unit>
        <trans-unit id="ff4dae149c1ce83c7a6b820b14212cbe3bbf93f1" translate="yes" xml:space="preserve">
          <source>Writes the contents of the buffer to another character stream.</source>
          <target state="translated">将缓冲区的内容写入另一个字符流。</target>
        </trans-unit>
        <trans-unit id="d1d0f592eeac5c796ea935b5d994096745d157f7" translate="yes" xml:space="preserve">
          <source>Writes the given byte into this buffer at the current position, and then increments the position.</source>
          <target state="translated">在当前位置将给定的字节写入缓冲区,然后递增位置。</target>
        </trans-unit>
        <trans-unit id="dd7b88652ec60af74a840f947c7b86d252782b34" translate="yes" xml:space="preserve">
          <source>Writes the given byte into this buffer at the given index.</source>
          <target state="translated">将给定的字节写入给定索引的缓冲区。</target>
        </trans-unit>
        <trans-unit id="6a61149f23f16decaac4eae92463c7ef12672ae5" translate="yes" xml:space="preserve">
          <source>Writes the given char into this buffer at the current position, and then increments the position.</source>
          <target state="translated">在当前位置将给定的字符写入缓冲区,然后递增位置。</target>
        </trans-unit>
        <trans-unit id="4f770fa38d98aec466fccb25555cc99c0b9ddbaf" translate="yes" xml:space="preserve">
          <source>Writes the given char into this buffer at the given index.</source>
          <target state="translated">将给定的char写入给定索引的缓冲区。</target>
        </trans-unit>
        <trans-unit id="f2d1506e6de2b9485d5e760430b8d8a6e992441f" translate="yes" xml:space="preserve">
          <source>Writes the given double into this buffer at the current position, and then increments the position.</source>
          <target state="translated">将给定的双数写入当前位置的缓冲区,然后递增位置。</target>
        </trans-unit>
        <trans-unit id="68ee8a87d76de1cd2a770b8396c4ab7cf9175f3b" translate="yes" xml:space="preserve">
          <source>Writes the given double into this buffer at the given index.</source>
          <target state="translated">将给定的双数写入给定索引的缓冲区。</target>
        </trans-unit>
        <trans-unit id="370abd73ada65b5904921d209602fcc69611ebec" translate="yes" xml:space="preserve">
          <source>Writes the given float into this buffer at the current position, and then increments the position.</source>
          <target state="translated">在当前位置将给定的float写入缓冲区,然后递增该位置。</target>
        </trans-unit>
        <trans-unit id="07eaa541d5c0633efea85fbc2ae9bba6c20a12a6" translate="yes" xml:space="preserve">
          <source>Writes the given float into this buffer at the given index.</source>
          <target state="translated">在给定的索引处将给定的float写入这个缓冲区。</target>
        </trans-unit>
        <trans-unit id="19e622dee348636b8ed78c68d535a1074887c524" translate="yes" xml:space="preserve">
          <source>Writes the given int into this buffer at the current position, and then increments the position.</source>
          <target state="translated">在当前位置将给定的int写入缓冲区,然后递增位置。</target>
        </trans-unit>
        <trans-unit id="b845c5f27efaa6c518dc0d967f43b3a146bebef9" translate="yes" xml:space="preserve">
          <source>Writes the given int into this buffer at the given index.</source>
          <target state="translated">在给定的索引处将给定的int写入这个缓冲区。</target>
        </trans-unit>
        <trans-unit id="712fe7e7e38b5fd24f11498bd179d0ff8bdc747b" translate="yes" xml:space="preserve">
          <source>Writes the given long into this buffer at the current position, and then increments the position.</source>
          <target state="translated">在当前位置将给定的多头写入缓冲区,然后递增该位置。</target>
        </trans-unit>
        <trans-unit id="fabaa8aff4aa813be322673a9965363c8f76cba7" translate="yes" xml:space="preserve">
          <source>Writes the given long into this buffer at the given index.</source>
          <target state="translated">将给定的long写入给定索引的缓冲区。</target>
        </trans-unit>
        <trans-unit id="9495203bcfa27d90ba40a65bedf36e96cec6cc11" translate="yes" xml:space="preserve">
          <source>Writes the given short into this buffer at the current position, and then increments the position.</source>
          <target state="translated">在当前位置将给定的空头写入该缓冲区,然后增加该位置。</target>
        </trans-unit>
        <trans-unit id="10ed6376a80a004d623217c1faeb7c99a1dda8a2" translate="yes" xml:space="preserve">
          <source>Writes the given short into this buffer at the given index.</source>
          <target state="translated">在给定的索引处将给定的短信息写入缓冲区。</target>
        </trans-unit>
        <trans-unit id="8d975120559c26edf427658d3a3c3d0ebc4d2550" translate="yes" xml:space="preserve">
          <source>Writes the specified &lt;code&gt;byte&lt;/code&gt; to the piped output stream.</source>
          <target state="translated">将指定的 &lt;code&gt;byte&lt;/code&gt; 写入管道输出流。</target>
        </trans-unit>
        <trans-unit id="5f14d6eee88508e464e25626a9203ab46c7ae8c1" translate="yes" xml:space="preserve">
          <source>Writes the specified &lt;code&gt;byte&lt;/code&gt; to this output stream.</source>
          <target state="translated">将指定的 &lt;code&gt;byte&lt;/code&gt; 写入此输出流。</target>
        </trans-unit>
        <trans-unit id="fc8ccadb9cba29bd2eb5a6b400b75de445d2099d" translate="yes" xml:space="preserve">
          <source>Writes the specified &lt;code&gt;char&lt;/code&gt; to the piped output stream. If a thread was reading data characters from the connected piped input stream, but the thread is no longer alive, then an &lt;code&gt;IOException&lt;/code&gt; is thrown.</source>
          <target state="translated">将指定的 &lt;code&gt;char&lt;/code&gt; 写入管道输出流。如果线程正在从连接的管道输入流中读取数据字符，但是该线程不再活动，则将引发 &lt;code&gt;IOException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a361965d78596b1ec164e036366e12d2c75bb2c" translate="yes" xml:space="preserve">
          <source>Writes the specified byte (the low eight bits of the argument &lt;code&gt;b&lt;/code&gt;) to the underlying output stream. If no exception is thrown, the counter &lt;code&gt;written&lt;/code&gt; is incremented by &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">将指定的字节（参数 &lt;code&gt;b&lt;/code&gt; 的低八位）写入基础输出流。如果未引发异常，则 &lt;code&gt;written&lt;/code&gt; 的计数器将增加 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="112760f7a5bd1088e95174f743f77e6540d54a2b" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this buffered output stream.</source>
          <target state="translated">将指定的字节写入这个缓冲的输出流。</target>
        </trans-unit>
        <trans-unit id="7609567d3c31861f0c015f22b9e866c66abef6ef" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this byte array output stream.</source>
          <target state="translated">将指定的字节写入这个字节数组输出流。</target>
        </trans-unit>
        <trans-unit id="2b4802f7b977b1bf85147c28f9685965b5454afa" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this file output stream. Implements the &lt;code&gt;write&lt;/code&gt; method of &lt;code&gt;OutputStream&lt;/code&gt;.</source>
          <target state="translated">将指定的字节写入此文件输出流。实现 &lt;code&gt;OutputStream&lt;/code&gt; 的 &lt;code&gt;write&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="b729d9dffaa8a1f4157fef1e1ce618b624909b04" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this file. The write starts at the current file pointer.</source>
          <target state="translated">将指定的字节写入该文件。写入从当前文件指针开始。</target>
        </trans-unit>
        <trans-unit id="ba3a4edd85917756c50fa03243093621eed1d538" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this output stream.</source>
          <target state="translated">将指定的字节写入这个输出流。</target>
        </trans-unit>
        <trans-unit id="b599b1fa291253a78c3e88600501e421edb1c042" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this output stream. The general contract for &lt;code&gt;write&lt;/code&gt; is that one byte is written to the output stream. The byte to be written is the eight low-order bits of the argument &lt;code&gt;b&lt;/code&gt;. The 24 high-order bits of &lt;code&gt;b&lt;/code&gt; are ignored.</source>
          <target state="translated">将指定的字节写入此输出流。 &lt;code&gt;write&lt;/code&gt; 的一般约定是将一个字节写入输出流。要写入的字节是参数 &lt;code&gt;b&lt;/code&gt; 的八个低阶位。 &lt;code&gt;b&lt;/code&gt; 的24个高阶位被忽略。</target>
        </trans-unit>
        <trans-unit id="e958c00a95c755222bae929710882f0ef7598984" translate="yes" xml:space="preserve">
          <source>Writes the specified byte to this stream. If the byte is a newline and automatic flushing is enabled then the &lt;code&gt;flush&lt;/code&gt; method will be invoked.</source>
          <target state="translated">将指定的字节写入此流。如果字节是换行符并且启用了自动刷新，则将调用 &lt;code&gt;flush&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="8a7ff01c245c6e87c2ac4ef96cf3070915dfcaaf" translate="yes" xml:space="preserve">
          <source>Writes the string to the file as a sequence of bytes. Each character in the string is written out, in sequence, by discarding its high eight bits. The write starts at the current position of the file pointer.</source>
          <target state="translated">将字符串作为字节序列写入文件。字符串中的每一个字符都会按顺序写出,并丢弃其高八位。写入从文件指针的当前位置开始。</target>
        </trans-unit>
        <trans-unit id="d0a5af43cf06c929a83885e6406856a92aa5cc38" translate="yes" xml:space="preserve">
          <source>Writes the value of a user-defined attribute from a buffer.</source>
          <target state="translated">从缓冲区中写入一个用户定义的属性值。</target>
        </trans-unit>
        <trans-unit id="51e35b34ff21aa3824ad435b3d42b717ac1044a7" translate="yes" xml:space="preserve">
          <source>Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output character stream in a format suitable for using the &lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">以适合于使用&lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt;方法的格式，将此 &lt;code&gt;Properties&lt;/code&gt; 表中的此属性列表（键和元素对）写入输出字符流。</target>
        </trans-unit>
        <trans-unit id="51b4a7c90bf5626fec9c9f129aa1374ad6737d2c" translate="yes" xml:space="preserve">
          <source>Writes this property list (key and element pairs) in this &lt;code&gt;Properties&lt;/code&gt; table to the output stream in a format suitable for loading into a &lt;code&gt;Properties&lt;/code&gt; table using the &lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">以适合于使用&lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt;方法加载到 &lt;code&gt;Properties&lt;/code&gt; 表中的格式，将此 &lt;code&gt;Properties&lt;/code&gt; 表中的此属性列表（键和元素对）写入输出流。</target>
        </trans-unit>
        <trans-unit id="f13a505bf6f1163d15ecf793f7208b545f326a38" translate="yes" xml:space="preserve">
          <source>Writes to the output stream all the bytes in array &lt;code&gt;b&lt;/code&gt;. If &lt;code&gt;b&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. If &lt;code&gt;b.length&lt;/code&gt; is zero, then no bytes are written. Otherwise, the byte &lt;code&gt;b[0]&lt;/code&gt; is written first, then &lt;code&gt;b[1]&lt;/code&gt;, and so on; the last byte written is &lt;code&gt;b[b.length-1]&lt;/code&gt;.</source>
          <target state="translated">将数组 &lt;code&gt;b&lt;/code&gt; 中的所有字节写入输出流。如果 &lt;code&gt;b&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 。如果 &lt;code&gt;b.length&lt;/code&gt; 为零，则不写入任何字节。否则，首先写入字节 &lt;code&gt;b[0]&lt;/code&gt; ，然后写入 &lt;code&gt;b[1]&lt;/code&gt; ，依此类推；最后写入的字节是 &lt;code&gt;b[b.length-1]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3634369cc0a70228335b7c0d1b3ea2b4c26bb08d" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low- order bits of the argument &lt;code&gt;v&lt;/code&gt;. The 24 high-order bits of &lt;code&gt;v&lt;/code&gt; are ignored. (This means that &lt;code&gt;writeByte&lt;/code&gt; does exactly the same thing as &lt;code&gt;write&lt;/code&gt; for an integer argument.) The byte written by this method may be read by the &lt;code&gt;readByte&lt;/code&gt; method of interface &lt;code&gt;DataInput&lt;/code&gt;, which will then return a &lt;code&gt;byte&lt;/code&gt; equal to &lt;code&gt;(byte)v&lt;/code&gt;.</source>
          <target state="translated">将参数 &lt;code&gt;v&lt;/code&gt; 的八个低阶位写入输出流。 &lt;code&gt;v&lt;/code&gt; 的24个高阶位被忽略。（这意味着 &lt;code&gt;writeByte&lt;/code&gt; 不完全一样的东西作为 &lt;code&gt;write&lt;/code&gt; 为一个整数参数。）此方法写入的字节可以由读取 &lt;code&gt;readByte&lt;/code&gt; 接口的方法 &lt;code&gt;DataInput&lt;/code&gt; ，然后将返回一个 &lt;code&gt;byte&lt;/code&gt; 等于 &lt;code&gt;(byte)v&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94e71f080b530ff97228da57a38da0da555e275b" translate="yes" xml:space="preserve">
          <source>Writes to the output stream the eight low-order bits of the argument &lt;code&gt;b&lt;/code&gt;. The 24 high-order bits of &lt;code&gt;b&lt;/code&gt; are ignored.</source>
          <target state="translated">将参数 &lt;code&gt;b&lt;/code&gt; 的八个低位写入输出流。 &lt;code&gt;b&lt;/code&gt; 的24个高阶位被忽略。</target>
        </trans-unit>
        <trans-unit id="1dcbd1fcd9c20910e4d19c79a6908b0180531555" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given char value, in the current byte order, into this buffer at the current position, and then increments the position by two.</source>
          <target state="translated">将包含给定char值的两个字节按当前字节顺序写入当前位置的缓冲区,然后将该位置增量为2。</target>
        </trans-unit>
        <trans-unit id="e978de920f972d75d95f1255bab54910641e5e61" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given char value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">将包含给定char值的两个字节以当前字节顺序写入给定索引的缓冲区。</target>
        </trans-unit>
        <trans-unit id="6fc0c682093f02b665c23020bba01582a4b98e28" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given short value, in the current byte order, into this buffer at the current position, and then increments the position by two.</source>
          <target state="translated">将包含给定短值的两个字节按当前字节顺序写入当前位置的缓冲区,然后将该位置增量为2。</target>
        </trans-unit>
        <trans-unit id="0f419b1c9cfcd70b38af34a51aebf7df8b86f76e" translate="yes" xml:space="preserve">
          <source>Writes two bytes containing the given short value, in the current byte order, into this buffer at the given index.</source>
          <target state="translated">将包含给定短值的两个字节按当前字节顺序写入给定索引的缓冲区。</target>
        </trans-unit>
        <trans-unit id="4b6256eb9d0d72cbe71b13a3c7e9f7676978fe16" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream in network byte order, followed by the &lt;a href=&quot;../../../java/io/datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. Each character in the string &lt;code&gt;s&lt;/code&gt; is converted to a group of one, two, or three bytes, depending on the value of the character.</source>
          <target state="translated">以网络字节顺序将两个字节的长度信息写入输出流，然后是字符串 &lt;code&gt;s&lt;/code&gt; 中每个字符的&lt;a href=&quot;../../../java/io/datainput#modified-utf-8&quot;&gt;修改后的UTF-8&lt;/a&gt;表示形式。如果 &lt;code&gt;s&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 。字符串 &lt;code&gt;s&lt;/code&gt; 中的每个字符都将转换为一个，两个或三个字节的组，具体取决于字符的值。</target>
        </trans-unit>
        <trans-unit id="acb381ca0baa70d627eb89fc91539d21b5b1970f" translate="yes" xml:space="preserve">
          <source>Writes two bytes of length information to the output stream, followed by the &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; representation of every character in the string &lt;code&gt;s&lt;/code&gt;. If &lt;code&gt;s&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a &lt;code&gt;NullPointerException&lt;/code&gt; is thrown. Each character in the string &lt;code&gt;s&lt;/code&gt; is converted to a group of one, two, or three bytes, depending on the value of the character.</source>
          <target state="translated">将两个字节的长度信息写入输出流，然后将字符串 &lt;code&gt;s&lt;/code&gt; 中的每个字符&lt;a href=&quot;datainput#modified-utf-8&quot;&gt;修改后的UTF-8&lt;/a&gt;表示形式写入。如果 &lt;code&gt;s&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 。字符串 &lt;code&gt;s&lt;/code&gt; 中的每个字符都将转换为一个，两个或三个字节的组，具体取决于字符的值。</target>
        </trans-unit>
        <trans-unit id="840baa9d6bfa2b29f18593baa6d5a15f4137eaeb" translate="yes" xml:space="preserve">
          <source>Writes two bytes to the output stream to represent the value of the argument. The byte values to be written, in the order shown, are:</source>
          <target state="translated">将两个字节写入输出流,代表参数的值。要写入的字节值,按所示顺序为:</target>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="95ad111c35bebeafa25fe06efdef5f08bcb7e909" translate="yes" xml:space="preserve">
          <source>Writing GIF images</source>
          <target state="translated">编写GIF图片</target>
        </trans-unit>
        <trans-unit id="9cd3c35e027988d3e72acc1181f58b176b562470" translate="yes" xml:space="preserve">
          <source>Writing out a bean, on the other hand, sometimes requires special knowledge of the bean's type. If the bean's state can be expressed using only the no-argument constructor and public getter and setter methods for properties, no special knowledge is required. Otherwise, the bean requires a custom &lt;em&gt;persistence delegate&lt;/em&gt; -- an object that is in charge of writing out beans of a particular type. All classes provided in the JDK that descend from &lt;code&gt;java.awt.Component&lt;/code&gt;, as well as all their properties, automatically have persistence delegates.</source>
          <target state="translated">另一方面，写出bean有时需要有关bean类型的特殊知识。如果可以仅使用无参数构造函数以及属性的公共getter和setter方法来表示Bean的状态，则不需要特殊知识。否则，Bean需要一个自定义的&lt;em&gt;持久性委托&lt;/em&gt; -一个负责写出特定类型Bean的对象。JDK中提供的所有派生自 &lt;code&gt;java.awt.Component&lt;/code&gt; 的类及其所有属性都自动具有持久性委托。</target>
        </trans-unit>
        <trans-unit id="2aca6c8bd10dab33a4eec99abb3e68b55ac1f71c" translate="yes" xml:space="preserve">
          <source>Writing to file descriptors</source>
          <target state="translated">写入文件描述符</target>
        </trans-unit>
        <trans-unit id="087742bd2a01740eeb022cb23d5b57ca20a16d8d" translate="yes" xml:space="preserve">
          <source>WrongMethodTypeException</source>
          <target state="translated">WrongMethodTypeException</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="db449d7dc04f973b1ad97228d3cd5fa1f5225e0b" translate="yes" xml:space="preserve">
          <source>X be the MBean named by &lt;code&gt;name&lt;/code&gt;,</source>
          <target state="translated">X是按 &lt;code&gt;name&lt;/code&gt; 命名的MBean ，</target>
        </trans-unit>
        <trans-unit id="d6eed17085cd961824e6cc026bad4e1f6bbfdf9a" translate="yes" xml:space="preserve">
          <source>X dimension (&amp;micro;m).</source>
          <target state="translated">X尺寸（&amp;micro;m）。</target>
        </trans-unit>
        <trans-unit id="7f266332102748822354cc0a5aa107093c35ebbd" translate="yes" xml:space="preserve">
          <source>X dimension.</source>
          <target state="translated">X维:</target>
        </trans-unit>
        <trans-unit id="b5610424b8a02ba2abc09a2e8508cc30ad10e2b3" translate="yes" xml:space="preserve">
          <source>X,</source>
          <target state="translated">X,</target>
        </trans-unit>
        <trans-unit id="34826acc1a06fc5b72d40097770b09d8e5c62652" translate="yes" xml:space="preserve">
          <source>X, as a &lt;a href=&quot;#cg&quot;&gt;capturing group&lt;/a&gt;</source>
          <target state="translated">X，作为&lt;a href=&quot;#cg&quot;&gt;捕获组&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="153bf828911a9b26f94f5e8da8f2fb9bb7b28fe4" translate="yes" xml:space="preserve">
          <source>X.509, PGP, and SDSI certificates can all be implemented by subclassing the Certificate class, even though they contain different sets of information, and they store and retrieve the information in different ways.</source>
          <target state="translated">X.509、PGP和SDSI证书都可以通过子类Certificate类来实现,尽管它们包含不同的信息集,并且它们以不同的方式存储和检索信息。</target>
        </trans-unit>
        <trans-unit id="1bd269c56dd4b87ce14015ee8fa37115311520bf" translate="yes" xml:space="preserve">
          <source>X500Principal</source>
          <target state="translated">X500Principal</target>
        </trans-unit>
        <trans-unit id="ebe07aff1a5d06134e103668254133e47ebed3d3" translate="yes" xml:space="preserve">
          <source>X500Principal.equals()</source>
          <target state="translated">X500Principal.equals()</target>
        </trans-unit>
        <trans-unit id="44f531c8910ef1690c5414e940f95622b4b29dac" translate="yes" xml:space="preserve">
          <source>X500Principal.getEncoded()</source>
          <target state="translated">X500Principal.getEncoded()</target>
        </trans-unit>
        <trans-unit id="08dc2bb2b748578a12935a031ae247bdbc506c92" translate="yes" xml:space="preserve">
          <source>X500Principal.getName()</source>
          <target state="translated">X500Principal.getName()</target>
        </trans-unit>
        <trans-unit id="85e52a880efe4b288d45c41cedbc91debb817b34" translate="yes" xml:space="preserve">
          <source>X500Principal.hashCode()</source>
          <target state="translated">X500Principal.hashCode()</target>
        </trans-unit>
        <trans-unit id="f6d4ed090724f259caa864b84485151a2f5ed2a6" translate="yes" xml:space="preserve">
          <source>X500Principal.toString()</source>
          <target state="translated">X500Principal.toString()</target>
        </trans-unit>
        <trans-unit id="aa7c4644ed192385ca463ead0261d1728512dd3b" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential</source>
          <target state="translated">X500PrivateCredential</target>
        </trans-unit>
        <trans-unit id="d034f128505231d7ac518742ffbbed3e97e6e481" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.destroy()</source>
          <target state="translated">X500PrivateCredential.destroy()</target>
        </trans-unit>
        <trans-unit id="a6e9eecb44deb79c51837aacde9e046aa902e33a" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.getAlias()</source>
          <target state="translated">X500PrivateCredential.getAlias()</target>
        </trans-unit>
        <trans-unit id="9f750adea9e5263dff3d30eb16f0098cfb5c1a5b" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.getCertificate()</source>
          <target state="translated">X500PrivateCredential.getCertificate()</target>
        </trans-unit>
        <trans-unit id="6ad4479421ed09f884c8c3e0c36adabeee8170df" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.getPrivateKey()</source>
          <target state="translated">X500PrivateCredential.getPrivateKey()</target>
        </trans-unit>
        <trans-unit id="ef0ff1d8b5787f71f3646c30049b1d7a2bca631f" translate="yes" xml:space="preserve">
          <source>X500PrivateCredential.isDestroyed()</source>
          <target state="translated">X500PrivateCredential.isDestroyed()</target>
        </trans-unit>
        <trans-unit id="686dd940cc8227b0aa2cd69ee1f44cfa6d1e893f" translate="yes" xml:space="preserve">
          <source>X509CRL</source>
          <target state="translated">X509CRL</target>
        </trans-unit>
        <trans-unit id="7110aa0404043c957aa839aa47f0f0c0a235d814" translate="yes" xml:space="preserve">
          <source>X509CRL.equals()</source>
          <target state="translated">X509CRL.equals()</target>
        </trans-unit>
        <trans-unit id="a8d0f2a8e61792cb750521d01ae1c425200eee29" translate="yes" xml:space="preserve">
          <source>X509CRL.getEncoded()</source>
          <target state="translated">X509CRL.getEncoded()</target>
        </trans-unit>
        <trans-unit id="2f2c2d9ad2feed06f68886e5534e5a1725acf6f0" translate="yes" xml:space="preserve">
          <source>X509CRL.getIssuerDN()</source>
          <target state="translated">X509CRL.getIssuerDN()</target>
        </trans-unit>
        <trans-unit id="d5041e1c7a5b762dee37a31bfd82a14e09c5c33e" translate="yes" xml:space="preserve">
          <source>X509CRL.getIssuerX500Principal()</source>
          <target state="translated">X509CRL.getIssuerX500Principal()</target>
        </trans-unit>
        <trans-unit id="b2723672bad69076cb03b2b1698dc03f59d0ea09" translate="yes" xml:space="preserve">
          <source>X509CRL.getNextUpdate()</source>
          <target state="translated">X509CRL.getNextUpdate()</target>
        </trans-unit>
        <trans-unit id="406fe17fe2408adebb3de6191ff98d0aae6574e7" translate="yes" xml:space="preserve">
          <source>X509CRL.getRevokedCertificate()</source>
          <target state="translated">X509CRL.getRevokedCertificate()</target>
        </trans-unit>
        <trans-unit id="c282b03b35ba6133d7f69263475d3e79c4c96d18" translate="yes" xml:space="preserve">
          <source>X509CRL.getRevokedCertificates()</source>
          <target state="translated">X509CRL.getRevokedCertificates()</target>
        </trans-unit>
        <trans-unit id="676975bb590ac24ff50fbec531440b871beceedb" translate="yes" xml:space="preserve">
          <source>X509CRL.getSigAlgName()</source>
          <target state="translated">X509CRL.getSigAlgName()</target>
        </trans-unit>
        <trans-unit id="cca79e74cc8ba51fac9fb5484e66124607d369d9" translate="yes" xml:space="preserve">
          <source>X509CRL.getSigAlgOID()</source>
          <target state="translated">X509CRL.getSigAlgOID()</target>
        </trans-unit>
        <trans-unit id="28c2198822dff08b6100d64abef2998ea91df931" translate="yes" xml:space="preserve">
          <source>X509CRL.getSigAlgParams()</source>
          <target state="translated">X509CRL.getSigAlgParams()</target>
        </trans-unit>
        <trans-unit id="817097db4f4524b7475ee9a94624753adaeec91b" translate="yes" xml:space="preserve">
          <source>X509CRL.getSignature()</source>
          <target state="translated">X509CRL.getSignature()</target>
        </trans-unit>
        <trans-unit id="a6853b01102efc16cd41b4f21b2c2403aa88fbec" translate="yes" xml:space="preserve">
          <source>X509CRL.getTBSCertList()</source>
          <target state="translated">X509CRL.getTBSCertList()</target>
        </trans-unit>
        <trans-unit id="859688e6f0f0d21f0915e65120c504f1568c0fa0" translate="yes" xml:space="preserve">
          <source>X509CRL.getThisUpdate()</source>
          <target state="translated">X509CRL.getThisUpdate()</target>
        </trans-unit>
        <trans-unit id="666eba5f3eb0836f485542f2b3612b3740a26658" translate="yes" xml:space="preserve">
          <source>X509CRL.getVersion()</source>
          <target state="translated">X509CRL.getVersion()</target>
        </trans-unit>
        <trans-unit id="ef777faf32e00157c932d26e4a91ee3ec2d48f1e" translate="yes" xml:space="preserve">
          <source>X509CRL.hashCode()</source>
          <target state="translated">X509CRL.hashCode()</target>
        </trans-unit>
        <trans-unit id="7df628731cfd156631b4a6dde9d8100f8bf13d59" translate="yes" xml:space="preserve">
          <source>X509CRL.verify()</source>
          <target state="translated">X509CRL.verify()</target>
        </trans-unit>
        <trans-unit id="4929c310370b1f2c4432d741b376aa8796d6daa6" translate="yes" xml:space="preserve">
          <source>X509CRLEntry</source>
          <target state="translated">X509CRLEntry</target>
        </trans-unit>
        <trans-unit id="6f506b182e9c3e2ee873d77a6b41722c00ad04f0" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.equals()</source>
          <target state="translated">X509CRLEntry.equals()</target>
        </trans-unit>
        <trans-unit id="4ea40e3fc5a6e22b9ad4abfb207a580ed449dd38" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getCertificateIssuer()</source>
          <target state="translated">X509CRLEntry.getCertificateIssuer()</target>
        </trans-unit>
        <trans-unit id="236c0633cfcd4437299c5cfa51b69a58189686f3" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getEncoded()</source>
          <target state="translated">X509CRLEntry.getEncoded()</target>
        </trans-unit>
        <trans-unit id="dc242325ee95b283e2bce2346034bb12bd0bfcec" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getRevocationDate()</source>
          <target state="translated">X509CRLEntry.getRevocationDate()</target>
        </trans-unit>
        <trans-unit id="c8deeea3d6af56508cad742a99121e62126d0753" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getRevocationReason()</source>
          <target state="translated">X509CRLEntry.getRevocationReason()</target>
        </trans-unit>
        <trans-unit id="70dc85fba9f70a00f5b5be5375f4f46bd97ff72f" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.getSerialNumber()</source>
          <target state="translated">X509CRLEntry.getSerialNumber()</target>
        </trans-unit>
        <trans-unit id="82ac9fc56fd26a520483391d1fc255e7a65ad123" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.hasExtensions()</source>
          <target state="translated">X509CRLEntry.hasExtensions()</target>
        </trans-unit>
        <trans-unit id="e49e98981f178c407f6c206c52398697a35c2131" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.hashCode()</source>
          <target state="translated">X509CRLEntry.hashCode()</target>
        </trans-unit>
        <trans-unit id="002a4ee189ce5a952707a0330d74fddbc21248bf" translate="yes" xml:space="preserve">
          <source>X509CRLEntry.toString()</source>
          <target state="translated">X509CRLEntry.toString()</target>
        </trans-unit>
        <trans-unit id="0537cdb42327ff3a67d3ea83f714032cba724024" translate="yes" xml:space="preserve">
          <source>X509CRLSelector</source>
          <target state="translated">X509CRLSelector</target>
        </trans-unit>
        <trans-unit id="005121bdf2647a03921558ab963894a107961c75" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.addIssuer()</source>
          <target state="translated">X509CRLSelector.addIssuer()</target>
        </trans-unit>
        <trans-unit id="7aceb5d988f24a52dd02f464ca3d9494b9babed9" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.addIssuerName()</source>
          <target state="translated">X509CRLSelector.addIssuerName()</target>
        </trans-unit>
        <trans-unit id="8284e8efc69ac3a83307e2cafdf63753734cc0c4" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.clone()</source>
          <target state="translated">X509CRLSelector.clone()</target>
        </trans-unit>
        <trans-unit id="db9deb73c56072075cef0974014cbfa6b6abb260" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getCertificateChecking()</source>
          <target state="translated">X509CRLSelector.getCertificateChecking()</target>
        </trans-unit>
        <trans-unit id="6ab4ca2011fa8c661e4158060a00d8943b99ef0e" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getDateAndTime()</source>
          <target state="translated">X509CRLSelector.getDateAndTime()</target>
        </trans-unit>
        <trans-unit id="5532ca5d6569c1cbe8f868920ffc31a6e9707b99" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getIssuerNames()</source>
          <target state="translated">X509CRLSelector.getIssuerNames()</target>
        </trans-unit>
        <trans-unit id="032e18f3ad4222c7bc737794768e950215da9b65" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getIssuers()</source>
          <target state="translated">X509CRLSelector.getIssuers()</target>
        </trans-unit>
        <trans-unit id="07343df6a607c3fccbbf96fd3aa6b9b3a4fc4ef9" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getMaxCRL()</source>
          <target state="translated">X509CRLSelector.getMaxCRL()</target>
        </trans-unit>
        <trans-unit id="5caa7704f0fbf71e8eda99020577a4f32ed3aec7" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.getMinCRL()</source>
          <target state="translated">X509CRLSelector.getMinCRL()</target>
        </trans-unit>
        <trans-unit id="cd016510ad0b64a2934299f67f11e5252571bb4c" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.match()</source>
          <target state="translated">X509CRLSelector.match()</target>
        </trans-unit>
        <trans-unit id="258d0b9571e5a2fda60a3574315cefbabaa4dd5a" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setCertificateChecking()</source>
          <target state="translated">X509CRLSelector.setCertificateChecking()</target>
        </trans-unit>
        <trans-unit id="d500c0b9ab0836602fbfeff49c264f434688fe8b" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setDateAndTime()</source>
          <target state="translated">X509CRLSelector.setDateAndTime()</target>
        </trans-unit>
        <trans-unit id="96a92cb7a8b71831980d1424a5364d676285b68d" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setIssuerNames()</source>
          <target state="translated">X509CRLSelector.setIssuerNames()</target>
        </trans-unit>
        <trans-unit id="90cfbcab2db3279ddd6db3561807d714cfdd0713" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setIssuers()</source>
          <target state="translated">X509CRLSelector.setIssuers()</target>
        </trans-unit>
        <trans-unit id="bf06aacef9a3be1a9ced4a10cbdd678a2f274350" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setMaxCRLNumber()</source>
          <target state="translated">X509CRLSelector.setMaxCRLNumber()</target>
        </trans-unit>
        <trans-unit id="86a0b242f3cd5aa3f58de645180e4a240a5db1f7" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.setMinCRLNumber()</source>
          <target state="translated">X509CRLSelector.setMinCRLNumber()</target>
        </trans-unit>
        <trans-unit id="4321c653c660b241a08140ff511b46a70156446e" translate="yes" xml:space="preserve">
          <source>X509CRLSelector.toString()</source>
          <target state="translated">X509CRLSelector.toString()</target>
        </trans-unit>
        <trans-unit id="94342e1781dc9c33a70ca21cb6357db0b0b9dd67" translate="yes" xml:space="preserve">
          <source>X509CertSelector</source>
          <target state="translated">X509CertSelector</target>
        </trans-unit>
        <trans-unit id="849c98616043746f73f4de24a5afbac1d44d1497" translate="yes" xml:space="preserve">
          <source>X509CertSelector.addPathToName()</source>
          <target state="translated">X509CertSelector.addPathToName()</target>
        </trans-unit>
        <trans-unit id="6278349d36bb944f429eb415b0b2f5653f53be35" translate="yes" xml:space="preserve">
          <source>X509CertSelector.addSubjectAlternativeName()</source>
          <target state="translated">X509CertSelector.addSubjectAlternativeName()</target>
        </trans-unit>
        <trans-unit id="ed2ee8251ff17d4037102b86a0eb818ed7b9158b" translate="yes" xml:space="preserve">
          <source>X509CertSelector.clone()</source>
          <target state="translated">X509CertSelector.clone()</target>
        </trans-unit>
        <trans-unit id="4f7c0218aa9ee861a280f2a8a3d681319af44dc2" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getAuthorityKeyIdentifier()</source>
          <target state="translated">X509CertSelector.getAuthorityKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="40d694ea6a0a9eae7c98a82ec7b08ba8c6e7d8c0" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getBasicConstraints()</source>
          <target state="translated">X509CertSelector.getBasicConstraints()</target>
        </trans-unit>
        <trans-unit id="489a03ee864e5186cbe7e408a9342a09b16aa78a" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getCertificate()</source>
          <target state="translated">X509CertSelector.getCertificate()</target>
        </trans-unit>
        <trans-unit id="bdaabe014d6ad8fd33d855ee9bb1f16ef2b29b42" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getCertificateValid()</source>
          <target state="translated">X509CertSelector.getCertificateValid()</target>
        </trans-unit>
        <trans-unit id="e0b06dfa030eecee34ff0d43f2bf88f7c677a1f8" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getExtendedKeyUsage()</source>
          <target state="translated">X509CertSelector.getExtendedKeyUsage()</target>
        </trans-unit>
        <trans-unit id="df6a6707a1f1e6b86730e8d99239277ba12cc213" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getIssuer()</source>
          <target state="translated">X509CertSelector.getIssuer()</target>
        </trans-unit>
        <trans-unit id="ae7e401dc377f554ece71569312befdac83a6d76" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getIssuerAsBytes()</source>
          <target state="translated">X509CertSelector.getIssuerAsBytes()</target>
        </trans-unit>
        <trans-unit id="fff1dd584edf03c78d3f48961f0068ee33aec9fd" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getIssuerAsString()</source>
          <target state="translated">X509CertSelector.getIssuerAsString()</target>
        </trans-unit>
        <trans-unit id="fb95fd548f3274ae1629644c5d7f19e3399b95b9" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getKeyUsage()</source>
          <target state="translated">X509CertSelector.getKeyUsage()</target>
        </trans-unit>
        <trans-unit id="201ecc89e49a111d0b388bd6788c96cf2da4cfe1" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getMatchAllSubjectAltNames()</source>
          <target state="translated">X509CertSelector.getMatchAllSubjectAltNames()</target>
        </trans-unit>
        <trans-unit id="d832903d93a4fa039be163837346386802abfb52" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getNameConstraints()</source>
          <target state="translated">X509CertSelector.getNameConstraints()</target>
        </trans-unit>
        <trans-unit id="c963901b33f3f86f39cdd1dd2864b23d5088719e" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getPathToNames()</source>
          <target state="translated">X509CertSelector.getPathToNames()</target>
        </trans-unit>
        <trans-unit id="781ef4d399e43252f203c8dc4b5efd48a663b7ac" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getPolicy()</source>
          <target state="translated">X509CertSelector.getPolicy()</target>
        </trans-unit>
        <trans-unit id="28ebd04b297719d66e00f58a120d42c627462c32" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getPrivateKeyValid()</source>
          <target state="translated">X509CertSelector.getPrivateKeyValid()</target>
        </trans-unit>
        <trans-unit id="299d03b8810ccbde189382f778e1e69a9edf5518" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSerialNumber()</source>
          <target state="translated">X509CertSelector.getSerialNumber()</target>
        </trans-unit>
        <trans-unit id="30fadb44582a38c2c581267a782a13ef48ce3f8c" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubject()</source>
          <target state="translated">X509CertSelector.getSubject()</target>
        </trans-unit>
        <trans-unit id="8fe339cc206ef73ed54a20b13ef60192e178f844" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectAlternativeNames()</source>
          <target state="translated">X509CertSelector.getSubjectAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="ca470a951b9db1a85e008465b33f7f0025fd4ed7" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectAsBytes()</source>
          <target state="translated">X509CertSelector.getSubjectAsBytes()</target>
        </trans-unit>
        <trans-unit id="aed8aae80b16c67e2bd98bedd10564828eed6a02" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectAsString()</source>
          <target state="translated">X509CertSelector.getSubjectAsString()</target>
        </trans-unit>
        <trans-unit id="024358cc8426c59dad8537730df35ef69e5374a4" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectKeyIdentifier()</source>
          <target state="translated">X509CertSelector.getSubjectKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="f5738e2b6e6f38f47f261f937e072b25f4ec2eb5" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectPublicKey()</source>
          <target state="translated">X509CertSelector.getSubjectPublicKey()</target>
        </trans-unit>
        <trans-unit id="650c289d16e4fd83b1e95660cbfed07706bb9286" translate="yes" xml:space="preserve">
          <source>X509CertSelector.getSubjectPublicKeyAlgID()</source>
          <target state="translated">X509CertSelector.getSubjectPublicKeyAlgID()</target>
        </trans-unit>
        <trans-unit id="227c01cacf995c323f3ba2ddda72a8c1d03e6e30" translate="yes" xml:space="preserve">
          <source>X509CertSelector.match()</source>
          <target state="translated">X509CertSelector.match()</target>
        </trans-unit>
        <trans-unit id="68c0f28130a6bf8d3c2abd14522f6c6c9688eb02" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setAuthorityKeyIdentifier()</source>
          <target state="translated">X509CertSelector.setAuthorityKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="0743dae5d1f40b69fc2ed7f9f8063b882e1c6506" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setBasicConstraints()</source>
          <target state="translated">X509CertSelector.setBasicConstraints()</target>
        </trans-unit>
        <trans-unit id="3f91236f46d4c1ca997bb1dd60eaa6480e178eac" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setCertificate()</source>
          <target state="translated">X509CertSelector.setCertificate()</target>
        </trans-unit>
        <trans-unit id="f753e79d07d1c7ff8e7766426c9008f7d741f947" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setCertificateValid()</source>
          <target state="translated">X509CertSelector.setCertificateValid()</target>
        </trans-unit>
        <trans-unit id="357a71aae1cd2f35c6a80fb733aa1088092c6474" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setExtendedKeyUsage()</source>
          <target state="translated">X509CertSelector.setExtendedKeyUsage()</target>
        </trans-unit>
        <trans-unit id="9ea83d746002bc0aa736e6f65afa241bdcc775dc" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setIssuer()</source>
          <target state="translated">X509CertSelector.setIssuer()</target>
        </trans-unit>
        <trans-unit id="c56e1298bc77fda9dd1a56fdf04575b296fc14b7" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setKeyUsage()</source>
          <target state="translated">X509CertSelector.setKeyUsage()</target>
        </trans-unit>
        <trans-unit id="b486a38a689304e6df785424134afd125d8d5032" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setMatchAllSubjectAltNames()</source>
          <target state="translated">X509CertSelector.setMatchAllSubjectAltNames()</target>
        </trans-unit>
        <trans-unit id="b48400dc4f916de3cc95f9337e25d568a2a1c742" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setNameConstraints()</source>
          <target state="translated">X509CertSelector.setNameConstraints()</target>
        </trans-unit>
        <trans-unit id="fe470ccac7aaaa2979faf49d5584f5491d1c6565" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setPathToNames()</source>
          <target state="translated">X509CertSelector.setPathToNames()</target>
        </trans-unit>
        <trans-unit id="dfaf5c753f0e41d22b63a535d3937b53aae07e5f" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setPolicy()</source>
          <target state="translated">X509CertSelector.setPolicy()</target>
        </trans-unit>
        <trans-unit id="6d0c7877f10fc09b324ca3d3047400411f1c6ea4" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setPrivateKeyValid()</source>
          <target state="translated">X509CertSelector.setPrivateKeyValid()</target>
        </trans-unit>
        <trans-unit id="86af9d1edb45e22a2903875dd9b2971784e2c8d1" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSerialNumber()</source>
          <target state="translated">X509CertSelector.setSerialNumber()</target>
        </trans-unit>
        <trans-unit id="ec33f3cc9bc744f7b4f027680c1da2ad2b108a48" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubject()</source>
          <target state="translated">X509CertSelector.setSubject()</target>
        </trans-unit>
        <trans-unit id="7424eda4b963ea374a5ffa98029c541ca2d056a1" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectAlternativeNames()</source>
          <target state="translated">X509CertSelector.setSubjectAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="ac907bb460f67c33f513b32cdf50d78c639a3427" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectKeyIdentifier()</source>
          <target state="translated">X509CertSelector.setSubjectKeyIdentifier()</target>
        </trans-unit>
        <trans-unit id="e6a4ccb21547f2a34b70f98ec9ba1b1eaeb60dd0" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectPublicKey()</source>
          <target state="translated">X509CertSelector.setSubjectPublicKey()</target>
        </trans-unit>
        <trans-unit id="1e9218b693cd7e79257d7ae26d7276128e5c3b2b" translate="yes" xml:space="preserve">
          <source>X509CertSelector.setSubjectPublicKeyAlgID()</source>
          <target state="translated">X509CertSelector.setSubjectPublicKeyAlgID()</target>
        </trans-unit>
        <trans-unit id="c5a923a527dc9c62dba9aebf1122462312f07cc2" translate="yes" xml:space="preserve">
          <source>X509CertSelector.toString()</source>
          <target state="translated">X509CertSelector.toString()</target>
        </trans-unit>
        <trans-unit id="f6f0e8b60112f1c3be8ebabdeb6d7e48d60d9d02" translate="yes" xml:space="preserve">
          <source>X509Certificate</source>
          <target state="translated">X509Certificate</target>
        </trans-unit>
        <trans-unit id="7d60e0e197d0c0d506aa9dca6d156b869f512905" translate="yes" xml:space="preserve">
          <source>X509Certificate.checkValidity()</source>
          <target state="translated">X509Certificate.checkValidity()</target>
        </trans-unit>
        <trans-unit id="5f9840aac5626ba3ca82b57ed531cd3d3f4c15d3" translate="yes" xml:space="preserve">
          <source>X509Certificate.getBasicConstraints()</source>
          <target state="translated">X509Certificate.getBasicConstraints()</target>
        </trans-unit>
        <trans-unit id="8647c6b8afd81e28f330459dec8c7e3ccd121504" translate="yes" xml:space="preserve">
          <source>X509Certificate.getExtendedKeyUsage()</source>
          <target state="translated">X509Certificate.getExtendedKeyUsage()</target>
        </trans-unit>
        <trans-unit id="008ce5566e57c20d1a7ef32f815136c72bee066c" translate="yes" xml:space="preserve">
          <source>X509Certificate.getInstance()</source>
          <target state="translated">X509Certificate.getInstance()</target>
        </trans-unit>
        <trans-unit id="ac9c7d03b54b6ef087068f76feb5ca6ca90487ea" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerAlternativeNames()</source>
          <target state="translated">X509Certificate.getIssuerAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="7ceb0ae93b0e59134baf7b2cea3a9b450c9ddc10" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerDN()</source>
          <target state="translated">X509Certificate.getIssuerDN()</target>
        </trans-unit>
        <trans-unit id="2a45c4d375bea0212b9380afe65c7359177ff695" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerUniqueID()</source>
          <target state="translated">X509Certificate.getIssuerUniqueID()</target>
        </trans-unit>
        <trans-unit id="81b58aa8abdd44a650146b3a19b6a2755b7ceddf" translate="yes" xml:space="preserve">
          <source>X509Certificate.getIssuerX500Principal()</source>
          <target state="translated">X509Certificate.getIssuerX500Principal()</target>
        </trans-unit>
        <trans-unit id="e6633e0189c761013fb963894756a20bd053a6c4" translate="yes" xml:space="preserve">
          <source>X509Certificate.getKeyUsage()</source>
          <target state="translated">X509Certificate.getKeyUsage()</target>
        </trans-unit>
        <trans-unit id="12e70fdfd017b4e91263c6b022d715a90fce8f33" translate="yes" xml:space="preserve">
          <source>X509Certificate.getNotAfter()</source>
          <target state="translated">X509Certificate.getNotAfter()</target>
        </trans-unit>
        <trans-unit id="9a92edc1a9f8a4fd9110f3acb8fda4b1b3c6ab4e" translate="yes" xml:space="preserve">
          <source>X509Certificate.getNotBefore()</source>
          <target state="translated">X509Certificate.getNotBefore()</target>
        </trans-unit>
        <trans-unit id="27da78eb87b805e2444b1f82afb90e9bc7835b4c" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSerialNumber()</source>
          <target state="translated">X509Certificate.getSerialNumber()</target>
        </trans-unit>
        <trans-unit id="6f8af08573e408c5a6b7bc75cb80ecc6b451cb9e" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSigAlgName()</source>
          <target state="translated">X509Certificate.getSigAlgName()</target>
        </trans-unit>
        <trans-unit id="607a3a0749c8b1dab746e512d28d69eda4f25849" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSigAlgOID()</source>
          <target state="translated">X509Certificate.getSigAlgOID()</target>
        </trans-unit>
        <trans-unit id="02b5c5e5de572fff22a8a962331d8bfb41d52abc" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSigAlgParams()</source>
          <target state="translated">X509Certificate.getSigAlgParams()</target>
        </trans-unit>
        <trans-unit id="abf0378af3325f51ffce60cc5e76863d6e64cb7c" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSignature()</source>
          <target state="translated">X509Certificate.getSignature()</target>
        </trans-unit>
        <trans-unit id="63ea54ab328cdf2e3ffeca94bf86dcb1fc3ba3b2" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectAlternativeNames()</source>
          <target state="translated">X509Certificate.getSubjectAlternativeNames()</target>
        </trans-unit>
        <trans-unit id="db892dc548dadaea8e72280046ee97a7d31aff5e" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectDN()</source>
          <target state="translated">X509Certificate.getSubjectDN()</target>
        </trans-unit>
        <trans-unit id="2efa2a18e43e940888c9b04b569ccc74f02ab50b" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectUniqueID()</source>
          <target state="translated">X509Certificate.getSubjectUniqueID()</target>
        </trans-unit>
        <trans-unit id="28cd8f5a485793a0f7cad8c499296d29e2ac48d4" translate="yes" xml:space="preserve">
          <source>X509Certificate.getSubjectX500Principal()</source>
          <target state="translated">X509Certificate.getSubjectX500Principal()</target>
        </trans-unit>
        <trans-unit id="33d127567465109550abfdba854639b9080179ac" translate="yes" xml:space="preserve">
          <source>X509Certificate.getTBSCertificate()</source>
          <target state="translated">X509Certificate.getTBSCertificate()</target>
        </trans-unit>
        <trans-unit id="cfdd8cbb40490d2380f820a508eb536dc1f316f5" translate="yes" xml:space="preserve">
          <source>X509Certificate.getVersion()</source>
          <target state="translated">X509Certificate.getVersion()</target>
        </trans-unit>
        <trans-unit id="06976b95a9323811dcf9535aa216a7ec252ae43d" translate="yes" xml:space="preserve">
          <source>X509Certificate.verify()</source>
          <target state="translated">X509Certificate.verify()</target>
        </trans-unit>
        <trans-unit id="ae8f17ee616d8138bab4d4f0e4737dd1f9da13cc" translate="yes" xml:space="preserve">
          <source>X509EncodedKeySpec</source>
          <target state="translated">X509EncodedKeySpec</target>
        </trans-unit>
        <trans-unit id="626dd44a2314d53b33d369a1f08f07026b41ff51" translate="yes" xml:space="preserve">
          <source>X509EncodedKeySpec.getEncoded()</source>
          <target state="translated">X509EncodedKeySpec.getEncoded()</target>
        </trans-unit>
        <trans-unit id="5839e3e80e77157ebc8b17529536f8d4a0941fd3" translate="yes" xml:space="preserve">
          <source>X509EncodedKeySpec.getFormat()</source>
          <target state="translated">X509EncodedKeySpec.getFormat()</target>
        </trans-unit>
        <trans-unit id="d234842c0789a795b12742b8d823eef9ed978f36" translate="yes" xml:space="preserve">
          <source>X509ExtendedKeyManager</source>
          <target state="translated">X509ExtendedKeyManager</target>
        </trans-unit>
        <trans-unit id="b493b829ae35b2377354cbba6507ba8b89557e66" translate="yes" xml:space="preserve">
          <source>X509ExtendedKeyManager.chooseEngineClientAlias()</source>
          <target state="translated">X509ExtendedKeyManager.chooseEngineClientAlias()</target>
        </trans-unit>
        <trans-unit id="268c5e4bfe9daff1d0c54174fb32327af88ecc99" translate="yes" xml:space="preserve">
          <source>X509ExtendedKeyManager.chooseEngineServerAlias()</source>
          <target state="translated">X509ExtendedKeyManager.chooseEngineServerAlias()</target>
        </trans-unit>
        <trans-unit id="4ab0984afa85cd2e8f19d0156d09d7aef547baaf" translate="yes" xml:space="preserve">
          <source>X509ExtendedTrustManager</source>
          <target state="translated">X509ExtendedTrustManager</target>
        </trans-unit>
        <trans-unit id="308fba37a669971bdf5c83e790461904ac757d89" translate="yes" xml:space="preserve">
          <source>X509ExtendedTrustManager.checkClientTrusted()</source>
          <target state="translated">X509ExtendedTrustManager.checkClientTrusted()</target>
        </trans-unit>
        <trans-unit id="2339dd435d457b4c465d46b8f4645892098fa99f" translate="yes" xml:space="preserve">
          <source>X509ExtendedTrustManager.checkServerTrusted()</source>
          <target state="translated">X509ExtendedTrustManager.checkServerTrusted()</target>
        </trans-unit>
        <trans-unit id="80b51310f31ac6afeea08769e4d4b9f50226c664" translate="yes" xml:space="preserve">
          <source>X509Extension</source>
          <target state="translated">X509Extension</target>
        </trans-unit>
        <trans-unit id="e5f5dadf1208209f33dc58be405a7eb9ebcb5d0d" translate="yes" xml:space="preserve">
          <source>X509Extension.getCriticalExtensionOIDs()</source>
          <target state="translated">X509Extension.getCriticalExtensionOIDs()</target>
        </trans-unit>
        <trans-unit id="71bb077b1f322fd963fa780ed45ada48fbd41624" translate="yes" xml:space="preserve">
          <source>X509Extension.getExtensionValue()</source>
          <target state="translated">X509Extension.getExtensionValue()</target>
        </trans-unit>
        <trans-unit id="3e4a2928f4c2275aeba3a445dda0561efd55c7f5" translate="yes" xml:space="preserve">
          <source>X509Extension.getNonCriticalExtensionOIDs()</source>
          <target state="translated">X509Extension.getNonCriticalExtensionOIDs()</target>
        </trans-unit>
        <trans-unit id="5d5e4a7a3f7e1ee7a5fb70fc335737e9208f5abe" translate="yes" xml:space="preserve">
          <source>X509Extension.hasUnsupportedCriticalExtension()</source>
          <target state="translated">X509Extension.hasUnsupportedCriticalExtension()</target>
        </trans-unit>
        <trans-unit id="dd3d3c5c395ab8f86b05f638bc2e2f70a0b2cf27" translate="yes" xml:space="preserve">
          <source>X509KeyManager</source>
          <target state="translated">X509KeyManager</target>
        </trans-unit>
        <trans-unit id="beab63b45c7665300d68a9a410348592b8d02385" translate="yes" xml:space="preserve">
          <source>X509KeyManager.chooseClientAlias()</source>
          <target state="translated">X509KeyManager.chooseClientAlias()</target>
        </trans-unit>
        <trans-unit id="e2ed5257aee8f84943c3c5175c5720366da48e31" translate="yes" xml:space="preserve">
          <source>X509KeyManager.chooseServerAlias()</source>
          <target state="translated">X509KeyManager.chooseServerAlias()</target>
        </trans-unit>
        <trans-unit id="546a546e5697acf8b86342e95b6031173171bf16" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getCertificateChain()</source>
          <target state="translated">X509KeyManager.getCertificateChain()</target>
        </trans-unit>
        <trans-unit id="360d2a2870aa288733c777b743cf1e807d032144" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getClientAliases()</source>
          <target state="translated">X509KeyManager.getClientAliases()</target>
        </trans-unit>
        <trans-unit id="aac579d7db0dfe6ca743f44f435647577da385a7" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getPrivateKey()</source>
          <target state="translated">X509KeyManager.getPrivateKey()</target>
        </trans-unit>
        <trans-unit id="e3ca12c81385c04439e1e70f0e10117530ced15d" translate="yes" xml:space="preserve">
          <source>X509KeyManager.getServerAliases()</source>
          <target state="translated">X509KeyManager.getServerAliases()</target>
        </trans-unit>
        <trans-unit id="3398eab6590ac27408e569fc599faf599df3542b" translate="yes" xml:space="preserve">
          <source>X509TrustManager</source>
          <target state="translated">X509TrustManager</target>
        </trans-unit>
        <trans-unit id="b49a3c450c79104083adf3bf74cf91b3b48f5e5d" translate="yes" xml:space="preserve">
          <source>X509TrustManager.checkClientTrusted()</source>
          <target state="translated">X509TrustManager.checkClientTrusted()</target>
        </trans-unit>
        <trans-unit id="629ebeabcce436e9b7c77948c6913d0dc0dcf13a" translate="yes" xml:space="preserve">
          <source>X509TrustManager.checkServerTrusted()</source>
          <target state="translated">X509TrustManager.checkServerTrusted()</target>
        </trans-unit>
        <trans-unit id="c6144704bd36cad2146f534a13d9f8f6ba6eaabf" translate="yes" xml:space="preserve">
          <source>X509TrustManager.getAcceptedIssuers()</source>
          <target state="translated">X509TrustManager.getAcceptedIssuers()</target>
        </trans-unit>
        <trans-unit id="968ea917c7a3e5310d5e76452db2eba17f05e62f" translate="yes" xml:space="preserve">
          <source>XML formatted string to allow presentation of data to be associated with the MBean.</source>
          <target state="translated">XML格式的字符串,以允许呈现与MBean相关联的数据。</target>
        </trans-unit>
        <trans-unit id="4dc30275d354dd7181465bed4f31f1ae500952d2" translate="yes" xml:space="preserve">
          <source>XML formatted string to allow presentation of data.</source>
          <target state="translated">XML格式化的字符串,以允许数据的呈现。</target>
        </trans-unit>
        <trans-unit id="20aae2b332f8faa7cffe9721f53610418c44cc3e" translate="yes" xml:space="preserve">
          <source>XML formatted string to describe how to present operation</source>
          <target state="translated">XML格式的字符串,用于描述如何呈现操作。</target>
        </trans-unit>
        <trans-unit id="b5a0c79d0c8b8920e18dd76de904f3f4d78f2d15" translate="yes" xml:space="preserve">
          <source>XML's standard &quot;id&quot; and &quot;idref&quot; attributes are used to make references to previous expressions - so as to deal with circularities in the object graph.</source>
          <target state="translated">XML的标准 &quot;id &quot;和 &quot;idref &quot;属性被用来对以前的表达式进行引用--以便处理对象图中的循环问题。</target>
        </trans-unit>
        <trans-unit id="02dc0c5431e5a247c506d381c0c4b8b1c967fced" translate="yes" xml:space="preserve">
          <source>XMLDecoder</source>
          <target state="translated">XMLDecoder</target>
        </trans-unit>
        <trans-unit id="d3b1b38355d8b6342d116821a4e1be63c8d5d0d6" translate="yes" xml:space="preserve">
          <source>XMLDecoder.close()</source>
          <target state="translated">XMLDecoder.close()</target>
        </trans-unit>
        <trans-unit id="3c87a023ff16a95bbcc5e2a6ab97491166d7684e" translate="yes" xml:space="preserve">
          <source>XMLDecoder.createHandler()</source>
          <target state="translated">XMLDecoder.createHandler()</target>
        </trans-unit>
        <trans-unit id="af4878a005999f1097a4ecfe6e645499fb15ea61" translate="yes" xml:space="preserve">
          <source>XMLDecoder.getExceptionListener()</source>
          <target state="translated">XMLDecoder.getExceptionListener()</target>
        </trans-unit>
        <trans-unit id="66219f0041ea09c5c5a1d7fe97ca2bc3ad2aa000" translate="yes" xml:space="preserve">
          <source>XMLDecoder.getOwner()</source>
          <target state="translated">XMLDecoder.getOwner()</target>
        </trans-unit>
        <trans-unit id="0da6b45a401fc1689dd9b1ccdc3dd95adff8893b" translate="yes" xml:space="preserve">
          <source>XMLDecoder.readObject()</source>
          <target state="translated">XMLDecoder.readObject()</target>
        </trans-unit>
        <trans-unit id="5dfc857bce82ce7c5cdee5e779da1ae0eb0c0ded" translate="yes" xml:space="preserve">
          <source>XMLDecoder.setExceptionListener()</source>
          <target state="translated">XMLDecoder.setExceptionListener()</target>
        </trans-unit>
        <trans-unit id="4ee887687342067c99bfe0d0af714ced3baa95ff" translate="yes" xml:space="preserve">
          <source>XMLDecoder.setOwner()</source>
          <target state="translated">XMLDecoder.setOwner()</target>
        </trans-unit>
        <trans-unit id="4827dc07975aea991a9ecfe7b692e519a8b8c5b1" translate="yes" xml:space="preserve">
          <source>XMLEncoder</source>
          <target state="translated">XMLEncoder</target>
        </trans-unit>
        <trans-unit id="644c993c2a829288b182e72ff8ac01cd744f2319" translate="yes" xml:space="preserve">
          <source>XMLEncoder.close()</source>
          <target state="translated">XMLEncoder.close()</target>
        </trans-unit>
        <trans-unit id="ab68c831f37680e9db84b131e990543e5b98d398" translate="yes" xml:space="preserve">
          <source>XMLEncoder.flush()</source>
          <target state="translated">XMLEncoder.flush()</target>
        </trans-unit>
        <trans-unit id="c8d48b39103910603b9f10c00a838ebafd27af97" translate="yes" xml:space="preserve">
          <source>XMLEncoder.getOwner()</source>
          <target state="translated">XMLEncoder.getOwner()</target>
        </trans-unit>
        <trans-unit id="fde1fda95aff958e75e32ffa591619d7c0052826" translate="yes" xml:space="preserve">
          <source>XMLEncoder.setOwner()</source>
          <target state="translated">XMLEncoder.setOwner()</target>
        </trans-unit>
        <trans-unit id="c2f1def364640e88766c724132ad7b2ed19b5f29" translate="yes" xml:space="preserve">
          <source>XMLEncoder.writeExpression()</source>
          <target state="translated">XMLEncoder.writeExpression()</target>
        </trans-unit>
        <trans-unit id="5c5aba5754a86fd9b5760b9053b3617b33cfaa33" translate="yes" xml:space="preserve">
          <source>XMLEncoder.writeObject()</source>
          <target state="translated">XMLEncoder.writeObject()</target>
        </trans-unit>
        <trans-unit id="301f679b56d6b29ec2a14c05a4ac451119721f10" translate="yes" xml:space="preserve">
          <source>XMLEncoder.writeStatement()</source>
          <target state="translated">XMLEncoder.writeStatement()</target>
        </trans-unit>
        <trans-unit id="e5c839cc623a080310564891d481750aa0a39ecf" translate="yes" xml:space="preserve">
          <source>XMLFormatter</source>
          <target state="translated">XMLFormatter</target>
        </trans-unit>
        <trans-unit id="a039ebc562d56d49db5d31a56a8c1fdc2765dc74" translate="yes" xml:space="preserve">
          <source>XMLFormatter.format()</source>
          <target state="translated">XMLFormatter.format()</target>
        </trans-unit>
        <trans-unit id="e3b3e73f98ee02b3225ff83d01e599ac2f3faf04" translate="yes" xml:space="preserve">
          <source>XMLFormatter.getHead()</source>
          <target state="translated">XMLFormatter.getHead()</target>
        </trans-unit>
        <trans-unit id="4b1cff21015e82acd48bc7fcb02887a4a447be90" translate="yes" xml:space="preserve">
          <source>XMLFormatter.getTail()</source>
          <target state="translated">XMLFormatter.getTail()</target>
        </trans-unit>
        <trans-unit id="717ed3e5cdb8aee24386fbd8f56ff9496b2faec8" translate="yes" xml:space="preserve">
          <source>XMLParseException</source>
          <target state="translated">XMLParseException</target>
        </trans-unit>
        <trans-unit id="a9674b19f8c56f785c91a555d0a144522bb318e6" translate="yes" xml:space="preserve">
          <source>XXX</source>
          <target state="translated">XXX</target>
        </trans-unit>
        <trans-unit id="034f1965ccdbdf9e642feeb9858da5096b6d1a9a" translate="yes" xml:space="preserve">
          <source>XY</source>
          <target state="translated">XY</target>
        </trans-unit>
        <trans-unit id="23eb4d3f4155395a74e9d534f97ff4c1908f5aac" translate="yes" xml:space="preserve">
          <source>Y</source>
          <target state="translated">Y</target>
        </trans-unit>
        <trans-unit id="35bdba48809dd8ee1be57f57e1d94db588181ee6" translate="yes" xml:space="preserve">
          <source>Y dimension (&amp;micro;m).</source>
          <target state="translated">Y尺寸（&amp;micro;m）。</target>
        </trans-unit>
        <trans-unit id="197c0e6c46ded20dbfcbd8db7336bd6207a65bfa" translate="yes" xml:space="preserve">
          <source>Y dimension.</source>
          <target state="translated">Y维:</target>
        </trans-unit>
        <trans-unit id="c0f0cadca077341656948de09d8670971ee5641b" translate="yes" xml:space="preserve">
          <source>YEAR</source>
          <target state="translated">YEAR</target>
        </trans-unit>
        <trans-unit id="481a9c6d2ca9c7c5eb5060dd8cc2b1ce0410ef07" translate="yes" xml:space="preserve">
          <source>YEARS</source>
          <target state="translated">YEARS</target>
        </trans-unit>
        <trans-unit id="ee6faa4ae405a7a1b62ae698b0ca5475ea369f3a" translate="yes" xml:space="preserve">
          <source>YEAR_FIELD</source>
          <target state="translated">YEAR_FIELD</target>
        </trans-unit>
        <trans-unit id="c0da8de3b27f7ccbab0f57da97509e79821c305c" translate="yes" xml:space="preserve">
          <source>YEAR_OF_ERA</source>
          <target state="translated">YEAR_OF_ERA</target>
        </trans-unit>
        <trans-unit id="8fff039853f5c2bbb8a28d056b579c7dcb7d137f" translate="yes" xml:space="preserve">
          <source>YES</source>
          <target state="translated">YES</target>
        </trans-unit>
        <trans-unit id="1460c50dbf37743a7b91f716c6256757ffa6ddf0" translate="yes" xml:space="preserve">
          <source>YES option.</source>
          <target state="translated">YES选项:</target>
        </trans-unit>
        <trans-unit id="10bba4581ad2ecbb167ed61d19b1a97b5ea285fa" translate="yes" xml:space="preserve">
          <source>YES/NO confirmation option.</source>
          <target state="translated">YES/NO确认选项。</target>
        </trans-unit>
        <trans-unit id="dd876ed87c4dbda98d1d693738316baea6ebf6ed" translate="yes" xml:space="preserve">
          <source>YES/NO/CANCEL confirmation confirmation option.</source>
          <target state="translated">YES/NO/CANCEL确认确认选项。</target>
        </trans-unit>
        <trans-unit id="88e8d712531b4490eaa90e1c3e0a19fd89afd799" translate="yes" xml:space="preserve">
          <source>YES_NO_CANCEL_OPTION</source>
          <target state="translated">YES_NO_CANCEL_OPTION</target>
        </trans-unit>
        <trans-unit id="1dd627d7e80f48dcd10d65d614b73edf4f2cace3" translate="yes" xml:space="preserve">
          <source>YES_NO_OPTION</source>
          <target state="translated">YES_NO_OPTION</target>
        </trans-unit>
        <trans-unit id="fd3b193140207822a8a8c2f74eebf1ede5e65099" translate="yes" xml:space="preserve">
          <source>YI</source>
          <target state="translated">YI</target>
        </trans-unit>
        <trans-unit id="bed8ca31d0b472a65f6e1d662ee48d90ad89fa19" translate="yes" xml:space="preserve">
          <source>YIJING_HEXAGRAM_SYMBOLS</source>
          <target state="translated">YIJING_HEXAGRAM_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="df9a01f768c82ef2babf65461322ef9232860fe2" translate="yes" xml:space="preserve">
          <source>YI_RADICALS</source>
          <target state="translated">YI_RADICALS</target>
        </trans-unit>
        <trans-unit id="be1f730bde41e9c9710fc1f638814aa9680fb921" translate="yes" xml:space="preserve">
          <source>YI_SYLLABLES</source>
          <target state="translated">YI_SYLLABLES</target>
        </trans-unit>
        <trans-unit id="33d261c96ac4fb28f870cad1c01268ca2c9573b0" translate="yes" xml:space="preserve">
          <source>YOU_1</source>
          <target state="translated">YOU_1</target>
        </trans-unit>
        <trans-unit id="79b203b8ee487310520a52d64e14badf5e2812be" translate="yes" xml:space="preserve">
          <source>YOU_2</source>
          <target state="translated">YOU_2</target>
        </trans-unit>
        <trans-unit id="dd57beb988dd68337c59c50795a68bba79a9af98" translate="yes" xml:space="preserve">
          <source>YOU_3</source>
          <target state="translated">YOU_3</target>
        </trans-unit>
        <trans-unit id="8ca72c59050ff822b8d10eaaccfba2870187e691" translate="yes" xml:space="preserve">
          <source>YOU_4</source>
          <target state="translated">YOU_4</target>
        </trans-unit>
        <trans-unit id="c79c32ce1f0a102fcd397133096af5b5e6fbc976" translate="yes" xml:space="preserve">
          <source>YOU_5</source>
          <target state="translated">YOU_5</target>
        </trans-unit>
        <trans-unit id="9c91c0234b16c7b373058a831b9a1bfc2b79644d" translate="yes" xml:space="preserve">
          <source>YOU_6</source>
          <target state="translated">YOU_6</target>
        </trans-unit>
        <trans-unit id="07b98ecd0978b48bc442a9326138d79b9e6daa75" translate="yes" xml:space="preserve">
          <source>YOU_7</source>
          <target state="translated">YOU_7</target>
        </trans-unit>
        <trans-unit id="879e32326c5217968ac8e3a14e4a8a5214957264" translate="yes" xml:space="preserve">
          <source>Year</source>
          <target state="translated">Year</target>
        </trans-unit>
        <trans-unit id="2425a1b731c0fc16f4f484a3726259f85bd84761" translate="yes" xml:space="preserve">
          <source>Year and Week</source>
          <target state="translated">年和周</target>
        </trans-unit>
        <trans-unit id="6b6f0a28b3379d20cc3fd94135f8357b025abaf3" translate="yes" xml:space="preserve">
          <source>Year and day of year</source>
          <target state="translated">年月日</target>
        </trans-unit>
        <trans-unit id="3c668803002a51e1828c01813a95c047da4a393b" translate="yes" xml:space="preserve">
          <source>Year, formatted as at least four digits with leading zeros as necessary, e.g. &lt;code&gt;0092&lt;/code&gt; equals &lt;code&gt;92&lt;/code&gt; CE for the Gregorian calendar.</source>
          <target state="translated">年份，其格式至少为四位数，必要时带有前导零，例如，公历的 &lt;code&gt;0092&lt;/code&gt; 等于 &lt;code&gt;92&lt;/code&gt; CE。</target>
        </trans-unit>
        <trans-unit id="ada735362b657cb4f9cb93fc7bdd6158fdb42020" translate="yes" xml:space="preserve">
          <source>Year, formatted to at least four digits with leading zeros as necessary, e.g. &lt;code&gt;0092&lt;/code&gt; equals &lt;code&gt;92&lt;/code&gt; CE for the Gregorian calendar.</source>
          <target state="translated">年份，根据需要将其格式化为至少四位数，并带有前导零，例如，公历的 &lt;code&gt;0092&lt;/code&gt; 等于 &lt;code&gt;92&lt;/code&gt; CE。</target>
        </trans-unit>
        <trans-unit id="ee3207f1ce23ca6eea879703c0ab4fba1b1f79ad" translate="yes" xml:space="preserve">
          <source>Year.adjustInto()</source>
          <target state="translated">Year.adjustInto()</target>
        </trans-unit>
        <trans-unit id="96c72d3d53b7685973f9dea6c3929d95df70d1ee" translate="yes" xml:space="preserve">
          <source>Year.atDay()</source>
          <target state="translated">Year.atDay()</target>
        </trans-unit>
        <trans-unit id="32eea0332b2d9b51d40741560386ed4a446183d8" translate="yes" xml:space="preserve">
          <source>Year.atMonth()</source>
          <target state="translated">Year.atMonth()</target>
        </trans-unit>
        <trans-unit id="429aa885347633adc81e9c8b39d179a25d169cd4" translate="yes" xml:space="preserve">
          <source>Year.atMonthDay()</source>
          <target state="translated">Year.atMonthDay()</target>
        </trans-unit>
        <trans-unit id="998cdaa97867c371778fba766913f063950de27f" translate="yes" xml:space="preserve">
          <source>Year.compareTo()</source>
          <target state="translated">Year.compareTo()</target>
        </trans-unit>
        <trans-unit id="8422220c0cb0519d9c6a9f797869b789e9fe827b" translate="yes" xml:space="preserve">
          <source>Year.equals()</source>
          <target state="translated">Year.equals()</target>
        </trans-unit>
        <trans-unit id="c017f314dd3d7ed453e37afeb416f3b039fa30cd" translate="yes" xml:space="preserve">
          <source>Year.format()</source>
          <target state="translated">Year.format()</target>
        </trans-unit>
        <trans-unit id="a44c3e0e8fd882c67acaae463663ac129709c02f" translate="yes" xml:space="preserve">
          <source>Year.from()</source>
          <target state="translated">Year.from()</target>
        </trans-unit>
        <trans-unit id="dc2bb4671e98e1cfe270143d567ff37488602f86" translate="yes" xml:space="preserve">
          <source>Year.get()</source>
          <target state="translated">Year.get()</target>
        </trans-unit>
        <trans-unit id="caebffc8e9727509291079f8762ce833534563e7" translate="yes" xml:space="preserve">
          <source>Year.getLong()</source>
          <target state="translated">Year.getLong()</target>
        </trans-unit>
        <trans-unit id="8be36aca152867802d7bb05f4a7c4d0645889c29" translate="yes" xml:space="preserve">
          <source>Year.getValue()</source>
          <target state="translated">Year.getValue()</target>
        </trans-unit>
        <trans-unit id="f87cd1b717cde8d9a4680c192c1b9513a2e72805" translate="yes" xml:space="preserve">
          <source>Year.hashCode()</source>
          <target state="translated">Year.hashCode()</target>
        </trans-unit>
        <trans-unit id="b3586aa4a01f83504101fbb94acc3975ca86b43d" translate="yes" xml:space="preserve">
          <source>Year.isAfter()</source>
          <target state="translated">Year.isAfter()</target>
        </trans-unit>
        <trans-unit id="27ce683f554fc0d716c47628c034402b7455d4b3" translate="yes" xml:space="preserve">
          <source>Year.isBefore()</source>
          <target state="translated">Year.isBefore()</target>
        </trans-unit>
        <trans-unit id="f3f3ad569278782659ae4b3c503872050a6ca79e" translate="yes" xml:space="preserve">
          <source>Year.isLeap()</source>
          <target state="translated">Year.isLeap()</target>
        </trans-unit>
        <trans-unit id="5e48a6b2bd65eafe20f368427450a2e25022afe0" translate="yes" xml:space="preserve">
          <source>Year.isSupported()</source>
          <target state="translated">Year.isSupported()</target>
        </trans-unit>
        <trans-unit id="d77163b3b35badc75b1cc641233d37b2048eeda3" translate="yes" xml:space="preserve">
          <source>Year.isValidMonthDay()</source>
          <target state="translated">Year.isValidMonthDay()</target>
        </trans-unit>
        <trans-unit id="4859c673cd4cebb2592a00e98e7ac306aa8965e3" translate="yes" xml:space="preserve">
          <source>Year.length()</source>
          <target state="translated">Year.length()</target>
        </trans-unit>
        <trans-unit id="90b2e4fc33c7eb347a4f4ea531818e143a221055" translate="yes" xml:space="preserve">
          <source>Year.minus()</source>
          <target state="translated">Year.minus()</target>
        </trans-unit>
        <trans-unit id="646c4137064b5741521b34c33ff9c75ef02f7bcc" translate="yes" xml:space="preserve">
          <source>Year.minusYears()</source>
          <target state="translated">Year.minusYears()</target>
        </trans-unit>
        <trans-unit id="f0df5828d10b9bae6dce00c0585d3772c1328762" translate="yes" xml:space="preserve">
          <source>Year.now()</source>
          <target state="translated">Year.now()</target>
        </trans-unit>
        <trans-unit id="46e1899a497dc3397eb5a9abdfed28277e79ec1f" translate="yes" xml:space="preserve">
          <source>Year.of()</source>
          <target state="translated">Year.of()</target>
        </trans-unit>
        <trans-unit id="8e6af742228dc78e793d78cfef059b2a8177b625" translate="yes" xml:space="preserve">
          <source>Year.parse()</source>
          <target state="translated">Year.parse()</target>
        </trans-unit>
        <trans-unit id="e5ad8473c4e835cf30933d31cccaee4e731a1992" translate="yes" xml:space="preserve">
          <source>Year.plus()</source>
          <target state="translated">Year.plus()</target>
        </trans-unit>
        <trans-unit id="d6e7579a21dec5959d4138b28b8c58d676bd0e32" translate="yes" xml:space="preserve">
          <source>Year.plusYears()</source>
          <target state="translated">Year.plusYears()</target>
        </trans-unit>
        <trans-unit id="8b737b5839d913374612a156e91e04b5540df8bc" translate="yes" xml:space="preserve">
          <source>Year.query()</source>
          <target state="translated">Year.query()</target>
        </trans-unit>
        <trans-unit id="96a78d3f898b32d00befeee97851d8e6b9e5e668" translate="yes" xml:space="preserve">
          <source>Year.range()</source>
          <target state="translated">Year.range()</target>
        </trans-unit>
        <trans-unit id="1e5578d6c67168449bc9613be76c2cbd16739322" translate="yes" xml:space="preserve">
          <source>Year.toString()</source>
          <target state="translated">Year.toString()</target>
        </trans-unit>
        <trans-unit id="b7931414e50a772daf912fd9f1176db32e43b059" translate="yes" xml:space="preserve">
          <source>Year.until()</source>
          <target state="translated">Year.until()</target>
        </trans-unit>
        <trans-unit id="0885e8cb7a4b617c1b41099076dc2846f9253958" translate="yes" xml:space="preserve">
          <source>Year.with()</source>
          <target state="translated">Year.with()</target>
        </trans-unit>
        <trans-unit id="090853c1c8d1dd16abfe71622e6000d378f65d42" translate="yes" xml:space="preserve">
          <source>YearMonth</source>
          <target state="translated">YearMonth</target>
        </trans-unit>
        <trans-unit id="b4c9b5ec3f7cf57f135cd2647f256fd5d3e56416" translate="yes" xml:space="preserve">
          <source>YearMonth.adjustInto()</source>
          <target state="translated">YearMonth.adjustInto()</target>
        </trans-unit>
        <trans-unit id="fcd559201750b7053f8280a3ffdf29e695c8a93c" translate="yes" xml:space="preserve">
          <source>YearMonth.atDay()</source>
          <target state="translated">YearMonth.atDay()</target>
        </trans-unit>
        <trans-unit id="507bf2b05c45ad1b0053f39864bae80731db7d93" translate="yes" xml:space="preserve">
          <source>YearMonth.atEndOfMonth()</source>
          <target state="translated">YearMonth.atEndOfMonth()</target>
        </trans-unit>
        <trans-unit id="93f684084492654214f73b343109a96f4478b576" translate="yes" xml:space="preserve">
          <source>YearMonth.compareTo()</source>
          <target state="translated">YearMonth.compareTo()</target>
        </trans-unit>
        <trans-unit id="f0b1a9f4f68e8aa2a6d7401ce38c6475f23b9368" translate="yes" xml:space="preserve">
          <source>YearMonth.equals()</source>
          <target state="translated">YearMonth.equals()</target>
        </trans-unit>
        <trans-unit id="1ade7e2c1d38ff37ffde4a470822d7d9c28de185" translate="yes" xml:space="preserve">
          <source>YearMonth.format()</source>
          <target state="translated">YearMonth.format()</target>
        </trans-unit>
        <trans-unit id="008126496be7ac843b48464bd56e4e65b4af6cce" translate="yes" xml:space="preserve">
          <source>YearMonth.from()</source>
          <target state="translated">YearMonth.from()</target>
        </trans-unit>
        <trans-unit id="a433f98ebcd8ef075ce5eae4c5569d0d87302b4b" translate="yes" xml:space="preserve">
          <source>YearMonth.get()</source>
          <target state="translated">YearMonth.get()</target>
        </trans-unit>
        <trans-unit id="3cf59741761852172f99142aa35731aa775d3acf" translate="yes" xml:space="preserve">
          <source>YearMonth.getLong()</source>
          <target state="translated">YearMonth.getLong()</target>
        </trans-unit>
        <trans-unit id="ee7f2a8c047d6fb971d7cc4977d0e0eefd282181" translate="yes" xml:space="preserve">
          <source>YearMonth.getMonth()</source>
          <target state="translated">YearMonth.getMonth()</target>
        </trans-unit>
        <trans-unit id="3de224170437f7443bfa76cd3d0166d174571c03" translate="yes" xml:space="preserve">
          <source>YearMonth.getMonthValue()</source>
          <target state="translated">YearMonth.getMonthValue()</target>
        </trans-unit>
        <trans-unit id="f8fc678dd3f779cb60e9505a993ebef3a842b6ec" translate="yes" xml:space="preserve">
          <source>YearMonth.getYear()</source>
          <target state="translated">YearMonth.getYear()</target>
        </trans-unit>
        <trans-unit id="e8d3538572ffd27518d51a79d0eb9e9bec627d6a" translate="yes" xml:space="preserve">
          <source>YearMonth.hashCode()</source>
          <target state="translated">YearMonth.hashCode()</target>
        </trans-unit>
        <trans-unit id="7b51137728059234ded8f2514dafeaaff58533af" translate="yes" xml:space="preserve">
          <source>YearMonth.isAfter()</source>
          <target state="translated">YearMonth.isAfter()</target>
        </trans-unit>
        <trans-unit id="999f44648d9f9fd4bd8b94a015652fdd264f4594" translate="yes" xml:space="preserve">
          <source>YearMonth.isBefore()</source>
          <target state="translated">YearMonth.isBefore()</target>
        </trans-unit>
        <trans-unit id="4a948d3ae5a75bba80fa33b09690a3648a22f4d6" translate="yes" xml:space="preserve">
          <source>YearMonth.isLeapYear()</source>
          <target state="translated">YearMonth.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="de9674e9d509a80294d6dfbc80425d80e6c93704" translate="yes" xml:space="preserve">
          <source>YearMonth.isSupported()</source>
          <target state="translated">YearMonth.isSupported()</target>
        </trans-unit>
        <trans-unit id="f3669778686a960f322f89aa65927ee9d5c5ce25" translate="yes" xml:space="preserve">
          <source>YearMonth.isValidDay()</source>
          <target state="translated">YearMonth.isValidDay()</target>
        </trans-unit>
        <trans-unit id="702781c042b1d4bf8f48c641eb1437aefbbe2eda" translate="yes" xml:space="preserve">
          <source>YearMonth.lengthOfMonth()</source>
          <target state="translated">YearMonth.lengthOfMonth()</target>
        </trans-unit>
        <trans-unit id="609ea1740dd8647b6021971b3cb069077863dcb9" translate="yes" xml:space="preserve">
          <source>YearMonth.lengthOfYear()</source>
          <target state="translated">YearMonth.lengthOfYear()</target>
        </trans-unit>
        <trans-unit id="0039752c8bcff1a2298275daf6037717a6fb5617" translate="yes" xml:space="preserve">
          <source>YearMonth.minus()</source>
          <target state="translated">YearMonth.minus()</target>
        </trans-unit>
        <trans-unit id="9902e21df5f7226c7e708e962bc572eb012caaa7" translate="yes" xml:space="preserve">
          <source>YearMonth.minusMonths()</source>
          <target state="translated">YearMonth.minusMonths()</target>
        </trans-unit>
        <trans-unit id="6acca7599e7c6c02fed7b69b6069ad641adebd4f" translate="yes" xml:space="preserve">
          <source>YearMonth.minusYears()</source>
          <target state="translated">YearMonth.minusYears()</target>
        </trans-unit>
        <trans-unit id="bd49f324e12f610915a279dd7a4111ff72d7b51e" translate="yes" xml:space="preserve">
          <source>YearMonth.now()</source>
          <target state="translated">YearMonth.now()</target>
        </trans-unit>
        <trans-unit id="90724086d54a8f265004f03a99e729885b784ab4" translate="yes" xml:space="preserve">
          <source>YearMonth.of()</source>
          <target state="translated">YearMonth.of()</target>
        </trans-unit>
        <trans-unit id="8fcb295095a101476aa4bce6d91eee5f57267898" translate="yes" xml:space="preserve">
          <source>YearMonth.parse()</source>
          <target state="translated">YearMonth.parse()</target>
        </trans-unit>
        <trans-unit id="ed8f8c4dac862c576e3fcc3cda25cbe7393ab334" translate="yes" xml:space="preserve">
          <source>YearMonth.plus()</source>
          <target state="translated">YearMonth.plus()</target>
        </trans-unit>
        <trans-unit id="0e9148a4a016555401ed1b5b417ef9e9a113b140" translate="yes" xml:space="preserve">
          <source>YearMonth.plusMonths()</source>
          <target state="translated">YearMonth.plusMonths()</target>
        </trans-unit>
        <trans-unit id="000ac54693328177768b2d08a0082c3acb71d227" translate="yes" xml:space="preserve">
          <source>YearMonth.plusYears()</source>
          <target state="translated">YearMonth.plusYears()</target>
        </trans-unit>
        <trans-unit id="da357fbe587ef1706a92bd9acb5233fd76e20233" translate="yes" xml:space="preserve">
          <source>YearMonth.query()</source>
          <target state="translated">YearMonth.query()</target>
        </trans-unit>
        <trans-unit id="61c4cb60ed359833e2d29cda669d58722dd45dbc" translate="yes" xml:space="preserve">
          <source>YearMonth.range()</source>
          <target state="translated">YearMonth.range()</target>
        </trans-unit>
        <trans-unit id="10ca2afc7e22b234e5fe8cae60d6c49480235a66" translate="yes" xml:space="preserve">
          <source>YearMonth.toString()</source>
          <target state="translated">YearMonth.toString()</target>
        </trans-unit>
        <trans-unit id="33313dd6cb1dba91c26084dacb760b0f0e5729e0" translate="yes" xml:space="preserve">
          <source>YearMonth.until()</source>
          <target state="translated">YearMonth.until()</target>
        </trans-unit>
        <trans-unit id="01dc918ee7b6905c3bf977be32bd22a09e271245" translate="yes" xml:space="preserve">
          <source>YearMonth.with()</source>
          <target state="translated">YearMonth.with()</target>
        </trans-unit>
        <trans-unit id="91c515e1608d29aa009c1ed0a53574e91991af50" translate="yes" xml:space="preserve">
          <source>YearMonth.withMonth()</source>
          <target state="translated">YearMonth.withMonth()</target>
        </trans-unit>
        <trans-unit id="d20f5e6b0b8444350b829d6e34153939c08ed581" translate="yes" xml:space="preserve">
          <source>YearMonth.withYear()</source>
          <target state="translated">YearMonth.withYear()</target>
        </trans-unit>
        <trans-unit id="b3719ffa28865f072014ca3a25ce390300019af7" translate="yes" xml:space="preserve">
          <source>Years represented by this class follow the ISO-8601 standard and use the proleptic numbering system. Year 1 is preceded by year 0, then by year -1.</source>
          <target state="translated">本类所代表的年份遵循ISO-8601标准,使用无序编号系统。第1年前面是0年,然后是-1年。</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="aada4ac76c3c1416eafca548ff006db832142ee3" translate="yes" xml:space="preserve">
          <source>Yield is a heuristic attempt to improve relative progression between threads that would otherwise over-utilise a CPU. Its use should be combined with detailed profiling and benchmarking to ensure that it actually has the desired effect.</source>
          <target state="translated">Yield是一种启发式的尝试,旨在改善线程之间的相对进度,否则会过度利用CPU。它的使用应该与详细的剖析和基准测试相结合,以确保它确实具有预期的效果。</target>
        </trans-unit>
        <trans-unit id="57a593264473653d66159a1770096fecf5f8d9aa" translate="yes" xml:space="preserve">
          <source>You can also construct an instance of SetOfIntegerSyntax by giving it in &quot;array form.&quot; Array form consists of an array of zero or more integer groups where each integer group is a length-1 or length-2 array of &lt;code&gt;int&lt;/code&gt;s; for example, &lt;code&gt;int[0][]&lt;/code&gt;, &lt;code&gt;int[][]{{1}}&lt;/code&gt;, &lt;code&gt;int[][]{{5,10}}&lt;/code&gt;, &lt;code&gt;int[][]{{1,2},{4}}&lt;/code&gt;.</source>
          <target state="translated">您还可以通过以&amp;ldquo;数组形式&amp;rdquo;给出SetOfIntegerSyntax的实例来构造它。数组形式由零个或多个整数组组成的数组组成，其中每个整数组都是 &lt;code&gt;int&lt;/code&gt; 的length-1或length-2数组；例如， &lt;code&gt;int[0][]&lt;/code&gt; ， &lt;code&gt;int[][]{{1}}&lt;/code&gt; ， &lt;code&gt;int[][]{{5,10}}&lt;/code&gt; ， &lt;code&gt;int[][]{{1,2},{4}}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b87eeecae0ce66ba1ce38d1bc834b3e5f1e5d175" translate="yes" xml:space="preserve">
          <source>You can also control the display of numbers with such methods as &lt;code&gt;setMinimumFractionDigits&lt;/code&gt;. If you want even more control over the format or parsing, or want to give your users more control, you can try casting the &lt;code&gt;NumberFormat&lt;/code&gt; you get from the factory methods to a &lt;code&gt;DecimalFormat&lt;/code&gt;. This will work for the vast majority of locales; just remember to put it in a &lt;code&gt;try&lt;/code&gt; block in case you encounter an unusual one.</source>
          <target state="translated">您也可以使用 &lt;code&gt;setMinimumFractionDigits&lt;/code&gt; 之类的方法控制数字的显示。如果您想要对格式或解析进行更多控制，或者希望为用户提供更多控制权，则可以尝试将从工厂方法获得的 &lt;code&gt;NumberFormat&lt;/code&gt; 强制转换为 &lt;code&gt;DecimalFormat&lt;/code&gt; 。这将适用于绝大多数语言环境；只要记得将其放在 &lt;code&gt;try&lt;/code&gt; 块中，以防遇到不寻常的情况。</target>
        </trans-unit>
        <trans-unit id="a94e039d70bf5d806adcbd74c26338710f85875f" translate="yes" xml:space="preserve">
          <source>You can also get a &lt;code&gt;TimeZone&lt;/code&gt; using &lt;code&gt;getTimeZone&lt;/code&gt; along with a time zone ID. For instance, the time zone ID for the U.S. Pacific Time zone is &quot;America/Los_Angeles&quot;. So, you can get a U.S. Pacific Time &lt;code&gt;TimeZone&lt;/code&gt; object with:</source>
          <target state="translated">您还可以使用 &lt;code&gt;getTimeZone&lt;/code&gt; 和时区ID 来获取 &lt;code&gt;TimeZone&lt;/code&gt; 。例如，美国太平洋时区的时区ID为&amp;ldquo; America / Los_Angeles&amp;rdquo;。因此，您可以获得具有以下内容的美国太平洋时间 &lt;code&gt;TimeZone&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="6425e9c5e5d85b3ce8594aa43c746ad246216fe1" translate="yes" xml:space="preserve">
          <source>You can also set the time zone on the format if you wish. If you want even more control over the format or parsing, (or want to give your users more control), you can try casting the &lt;code&gt;DateFormat&lt;/code&gt; you get from the factory methods to a &lt;a href=&quot;simpledateformat&quot;&gt;&lt;code&gt;SimpleDateFormat&lt;/code&gt;&lt;/a&gt;. This will work for the majority of countries; just remember to put it in a &lt;code&gt;try&lt;/code&gt; block in case you encounter an unusual one.</source>
          <target state="translated">如果需要，还可以在格式上设置时区。如果您想要对格式或解析进行更多控制，（或希望为用户提供更多控制权），则可以尝试将从工厂方法获得的 &lt;code&gt;DateFormat&lt;/code&gt; 强制转换为&lt;a href=&quot;simpledateformat&quot;&gt; &lt;code&gt;SimpleDateFormat&lt;/code&gt; &lt;/a&gt;。这将对大多数国家起作用；只要记得将其放在 &lt;code&gt;try&lt;/code&gt; 块中，以防遇到异常。</target>
        </trans-unit>
        <trans-unit id="56a52f407f46fcfe71f2f48b05c97c7fa299698f" translate="yes" xml:space="preserve">
          <source>You can also use a &lt;code&gt;NumberFormat&lt;/code&gt; to parse numbers:</source>
          <target state="translated">您还可以使用 &lt;code&gt;NumberFormat&lt;/code&gt; 解析数字：</target>
        </trans-unit>
        <trans-unit id="3d53cdef7e10077792d00d86b59977120f193834" translate="yes" xml:space="preserve">
          <source>You can also use forms of the &lt;code&gt;parse&lt;/code&gt; and &lt;code&gt;format&lt;/code&gt; methods with &lt;code&gt;ParsePosition&lt;/code&gt; and &lt;code&gt;FieldPosition&lt;/code&gt; to allow you to:</source>
          <target state="translated">您还可以在 &lt;code&gt;ParsePosition&lt;/code&gt; 和 &lt;code&gt;FieldPosition&lt;/code&gt; 中使用 &lt;code&gt;parse&lt;/code&gt; 和 &lt;code&gt;format&lt;/code&gt; 方法的形式，以使您能够：</target>
        </trans-unit>
        <trans-unit id="56d7061772a8c443362c97b413b7ce5aa75be018" translate="yes" xml:space="preserve">
          <source>You can also use forms of the parse and format methods with &lt;a href=&quot;parseposition&quot;&gt;&lt;code&gt;ParsePosition&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fieldposition&quot;&gt;&lt;code&gt;FieldPosition&lt;/code&gt;&lt;/a&gt; to allow you to</source>
          <target state="translated">您也可以在&lt;a href=&quot;parseposition&quot;&gt; &lt;code&gt;ParsePosition&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;fieldposition&quot;&gt; &lt;code&gt;FieldPosition&lt;/code&gt; 中&lt;/a&gt;使用parse和format方法的形式，以允许您</target>
        </trans-unit>
        <trans-unit id="ffca3f9f3cc354ec10130aa7a4402b73e0f0285f" translate="yes" xml:space="preserve">
          <source>You can associate a short descriptive string with a feature. Normally these descriptive strings should be less than about 40 characters.</source>
          <target state="translated">您可以将一个简短的描述性字符串与一个特征相关联。通常这些描述性字符串应少于约40个字符。</target>
        </trans-unit>
        <trans-unit id="fd8e90929251a64b206f6a18da40e77d40b7955d" translate="yes" xml:space="preserve">
          <source>You can choose the RMI transport (JRMP or IIOP) by specifying &lt;code&gt;rmi&lt;/code&gt; or &lt;code&gt;iiop&lt;/code&gt; in the &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; part of the &lt;code&gt;serviceURL&lt;/code&gt; when creating the connector server. You can also create specialized connector servers by instantiating an appropriate subclass of &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; and supplying it to the &lt;code&gt;RMIConnectorServer&lt;/code&gt; constructor.</source>
          <target state="translated">创建连接器服务器时，可以通过在 &lt;code&gt;serviceURL&lt;/code&gt; 的 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 部分中指定 &lt;code&gt;rmi&lt;/code&gt; 或 &lt;code&gt;iiop&lt;/code&gt; 来选择RMI传输（JRMP或IIOP）。您还可以通过实例化&lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; &lt;/a&gt;的适当子类并将其提供给 &lt;code&gt;RMIConnectorServer&lt;/code&gt; 构造函数来创建专用的连接器服务器。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="79723aa70f6a049df786708f0ef79eebd6a33c50" translate="yes" xml:space="preserve">
          <source>You can construct an instance of SetOfIntegerSyntax by giving it in &quot;string form.&quot; The string consists of zero or more comma-separated integer groups. Each integer group consists of either one integer, two integers separated by a hyphen (&lt;code&gt;-&lt;/code&gt;), or two integers separated by a colon (&lt;code&gt;:&lt;/code&gt;). Each integer consists of one or more decimal digits (&lt;code&gt;0&lt;/code&gt; through &lt;code&gt;9&lt;/code&gt;). Whitespace characters cannot appear within an integer but are otherwise ignored. For example: &lt;code&gt;&quot;&quot;&lt;/code&gt;, &lt;code&gt;&quot;1&quot;&lt;/code&gt;, &lt;code&gt;&quot;5-10&quot;&lt;/code&gt;, &lt;code&gt;&quot;1:2,
 4&quot;&lt;/code&gt;.</source>
          <target state="translated">您可以通过以&amp;ldquo;字符串形式&amp;rdquo;给出SetOfIntegerSyntax的实例来构造它。该字符串由零个或多个逗号分隔的整数组组成。每个整数组由任一个整数，两个整数分离用连字符（ &lt;code&gt;-&lt;/code&gt; ），或两个整数分离由冒号（ &lt;code&gt;:&lt;/code&gt; ）。每个整数由一个或多个十进制数字（ &lt;code&gt;0&lt;/code&gt; 到 &lt;code&gt;9&lt;/code&gt; ）组成。空格字符不能出现在整数内，但否则将被忽略。例如： &lt;code&gt;&quot;&quot;&lt;/code&gt; ， &lt;code&gt;&quot;1&quot;&lt;/code&gt; ， &lt;code&gt;&quot;5-10&quot;&lt;/code&gt; ， &lt;code&gt;&quot;1:2, 4&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75fda6eb09dec3765e5f6accb34921aa9962537f" translate="yes" xml:space="preserve">
          <source>You can convert an enumeration value to a string by calling &lt;a href=&quot;enumsyntax#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt;. The string is obtained from a table supplied by the enumeration class.</source>
          <target state="translated">您可以通过调用&lt;a href=&quot;enumsyntax#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;将枚举值转换为字符串。该字符串是从枚举类提供的表中获得的。</target>
        </trans-unit>
        <trans-unit id="91a204ed3e3e527f4e0cc25682d4470b1c8c6368" translate="yes" xml:space="preserve">
          <source>You can create the &lt;code&gt;ChoiceFormat&lt;/code&gt; programmatically, as in the above example, or by using a pattern. See &lt;a href=&quot;choiceformat&quot;&gt;&lt;code&gt;ChoiceFormat&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">您可以通过编程方式（如上例）或使用模式来创建 &lt;code&gt;ChoiceFormat&lt;/code&gt; 。有关更多信息，请参见&lt;a href=&quot;choiceformat&quot;&gt; &lt;code&gt;ChoiceFormat&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d62e48a366a729bb8ddaf9c19d7323c5bb9ea44e" translate="yes" xml:space="preserve">
          <source>You can define a subclass of an enumeration class that extends it with additional enumeration values. The subclass's enumeration values' integer values need not be distinct from the superclass's enumeration values' integer values; the &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;equals()&lt;/code&gt;, and &lt;code&gt;toString()&lt;/code&gt; methods will still work properly even if the subclass uses some of the same integer values as the superclass. However, the application in which the enumeration class and subclass are used may need to have distinct integer values in the superclass and subclass.</source>
          <target state="translated">您可以定义枚举类的子类，以其他枚举值对其进行扩展。子类的枚举值的整数值不必与超类的枚举值的整数值不同。在 &lt;code&gt;==&lt;/code&gt; ， &lt;code&gt;!=&lt;/code&gt; ， &lt;code&gt;equals()&lt;/code&gt; 方法，和 &lt;code&gt;toString()&lt;/code&gt; 方法仍将正常工作，即使子类使用一些相同的整数值作为超的。但是，使用枚举类和子类的应用程序可能需要在超类和子类中具有不同的整数值。</target>
        </trans-unit>
        <trans-unit id="1a4d8cd5d64c3a8a013dd30c1ddd2ecf110aa99a" translate="yes" xml:space="preserve">
          <source>You can ensure the stream is unordered by using the &lt;a href=&quot;basestream#unordered--&quot;&gt;&lt;code&gt;BaseStream.unordered()&lt;/code&gt;&lt;/a&gt; method. For example:</source>
          <target state="translated">您可以使用&lt;a href=&quot;basestream#unordered--&quot;&gt; &lt;code&gt;BaseStream.unordered()&lt;/code&gt; &lt;/a&gt;方法确保流是无序的。例如：</target>
        </trans-unit>
        <trans-unit id="e5a73675a47e120a0f7ecbb1ef517cc98a12f6fb" translate="yes" xml:space="preserve">
          <source>You can not create &lt;code&gt;CollationKey&lt;/code&gt;s directly. Rather, generate them by calling &lt;code&gt;Collator.getCollationKey&lt;/code&gt;. You can only compare &lt;code&gt;CollationKey&lt;/code&gt;s generated from the same &lt;code&gt;Collator&lt;/code&gt; object.</source>
          <target state="translated">您不能直接创建 &lt;code&gt;CollationKey&lt;/code&gt; 。而是通过调用 &lt;code&gt;Collator.getCollationKey&lt;/code&gt; 生成它们。您只能比较从同一 &lt;code&gt;Collator&lt;/code&gt; 对象生成的 &lt;code&gt;CollationKey&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3071cf9645c3954f36c18acd09455e9742788780" translate="yes" xml:space="preserve">
          <source>You can print the same print data at different times using different processing instructions.</source>
          <target state="translated">您可以使用不同的处理指令在不同时间打印相同的打印数据。</target>
        </trans-unit>
        <trans-unit id="ecab6abb43727ea8ddd67ac72406a303b4488a7d" translate="yes" xml:space="preserve">
          <source>You can provide the name of your default realm and Key Distribution Center (KDC) host for that realm using the system properties &lt;code&gt;java.security.krb5.realm&lt;/code&gt; and &lt;code&gt;java.security.krb5.kdc&lt;/code&gt;. Both properties must be set. Alternatively, the &lt;code&gt;java.security.krb5.conf&lt;/code&gt; system property can be set to the location of an MIT style &lt;code&gt;krb5.conf&lt;/code&gt; configuration file. If none of these system properties are set, the &lt;code&gt;krb5.conf&lt;/code&gt; file is searched for in an implementation-specific manner. Typically, an implementation will first look for a &lt;code&gt;krb5.conf&lt;/code&gt; file in &lt;code&gt;&amp;lt;java-home&amp;gt;/lib/security&lt;/code&gt; and failing that, in an OS-specific location.</source>
          <target state="translated">您可以使用系统属性 &lt;code&gt;java.security.krb5.realm&lt;/code&gt; 和 &lt;code&gt;java.security.krb5.kdc&lt;/code&gt; 提供默认领域的名称和该领域的密钥分发中心（KDC）主机。必须设置两个属性。或者，可以将 &lt;code&gt;java.security.krb5.conf&lt;/code&gt; 系统属性设置为MIT样式 &lt;code&gt;krb5.conf&lt;/code&gt; 配置文件的位置。如果未设置这些系统属性，那么将以特定于实现的方式搜索 &lt;code&gt;krb5.conf&lt;/code&gt; 文件。通常，实现将首先在 &lt;code&gt;&amp;lt;java-home&amp;gt;/lib/security&lt;/code&gt; 中查找 &lt;code&gt;krb5.conf&lt;/code&gt; 文件，然后在特定于OS的位置中查找krb5.conf文件。</target>
        </trans-unit>
        <trans-unit id="ecbf23752614b8c36c36cec55731b8c1f9346736" translate="yes" xml:space="preserve">
          <source>You can register an object to receive notifications whenever the line's state changes. The object must implement the &lt;code&gt;&lt;a href=&quot;linelistener&quot;&gt;&lt;code&gt;LineListener&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; interface, which consists of the single method &lt;code&gt;&lt;a href=&quot;linelistener#update-javax.sound.sampled.LineEvent-&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. This method will be invoked when a line opens and closes (and, if it's a &lt;a href=&quot;dataline&quot;&gt;&lt;code&gt;DataLine&lt;/code&gt;&lt;/a&gt;, when it starts and stops).</source>
          <target state="translated">您可以注册一个对象，以便在线路状态发生变化时接收通知。该对象必须实现 &lt;code&gt;&lt;a href=&quot;linelistener&quot;&gt;&lt;code&gt;LineListener&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 接口，该接口由单个方法 &lt;code&gt;&lt;a href=&quot;linelistener#update-javax.sound.sampled.LineEvent-&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 组成。当某行打开和关闭时（如果是&lt;a href=&quot;dataline&quot;&gt; &lt;code&gt;DataLine&lt;/code&gt; &lt;/a&gt;，则在开始和停止时）将调用此方法。</target>
        </trans-unit>
        <trans-unit id="7aae3dda2d14210d729e570d86754d0075c52ba8" translate="yes" xml:space="preserve">
          <source>You can set a &lt;code&gt;Collator&lt;/code&gt;'s &lt;em&gt;strength&lt;/em&gt; property to determine the level of difference considered significant in comparisons. Four strengths are provided: &lt;code&gt;PRIMARY&lt;/code&gt;, &lt;code&gt;SECONDARY&lt;/code&gt;, &lt;code&gt;TERTIARY&lt;/code&gt;, and &lt;code&gt;IDENTICAL&lt;/code&gt;. The exact assignment of strengths to language features is locale dependant. For example, in Czech, &quot;e&quot; and &quot;f&quot; are considered primary differences, while &quot;e&quot; and &quot;ě&quot; are secondary differences, &quot;e&quot; and &quot;E&quot; are tertiary differences and &quot;e&quot; and &quot;e&quot; are identical. The following shows how both case and accents could be ignored for US English.</source>
          <target state="translated">您可以设置&amp;ldquo; &lt;code&gt;Collator&lt;/code&gt; &amp;rdquo;的&amp;ldquo; &lt;em&gt;强度&amp;rdquo;&lt;/em&gt;属性来确定在比较中被视为重要的差异水平。提供四个优势： &lt;code&gt;PRIMARY&lt;/code&gt; ， &lt;code&gt;SECONDARY&lt;/code&gt; ， &lt;code&gt;TERTIARY&lt;/code&gt; 和 &lt;code&gt;IDENTICAL&lt;/code&gt; 。语言功能的优势确切分配取决于语言环境。例如，在捷克语中，&amp;ldquo; e&amp;rdquo;和&amp;ldquo; f&amp;rdquo;被认为是主要区别，而&amp;ldquo; e&amp;rdquo;和&amp;ldquo;ě&amp;rdquo;是次要区别，&amp;ldquo; e&amp;rdquo;和&amp;ldquo; E&amp;rdquo;是三次区别，而&amp;ldquo; e&amp;rdquo;和&amp;ldquo; e&amp;rdquo;相同。下面显示了美国英语如何忽略大小写和重音符号。</target>
        </trans-unit>
        <trans-unit id="5e0183a9c023470ed7687fcad6aff7163435c7d6" translate="yes" xml:space="preserve">
          <source>You can then write code that uses the &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt; operators to test enumeration values; for example:</source>
          <target state="translated">然后，您可以编写使用 &lt;code&gt;==&lt;/code&gt; 和 &lt;code&gt;!=&lt;/code&gt; 运算符来测试枚举值的代码。例如：</target>
        </trans-unit>
        <trans-unit id="68bf2d505943605f240b5d18e5d4441a796abfec" translate="yes" xml:space="preserve">
          <source>You can use a DateFormat to parse also.</source>
          <target state="translated">你也可以使用DateFormat来解析。</target>
        </trans-unit>
        <trans-unit id="cd63ce394d6a7de750f9c8786c48b7af94f53eb3" translate="yes" xml:space="preserve">
          <source>You can use a predefined encoding by referring to one of the static objects created by this class, such as PCM_SIGNED or PCM_UNSIGNED. Service providers can create new encodings, such as compressed audio formats, and make these available through the &lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">您可以通过引用由此类创建的静态对象之一来使用预定义的编码，例如PCM_SIGNED或PCM_UNSIGNED。服务提供商可以创建新的编码，例如压缩的音频格式，并通过 &lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 类使它们可用。</target>
        </trans-unit>
        <trans-unit id="f152de083684ba8ec6ecc7077bc264540ddc0337" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;getAvailableIDs&lt;/code&gt; method to iterate through all the supported time zone IDs. You can then choose a supported ID to get a &lt;code&gt;TimeZone&lt;/code&gt;. If the time zone you want is not represented by one of the supported IDs, then a custom time zone ID can be specified to produce a TimeZone. The syntax of a custom time zone ID is:</source>
          <target state="translated">您可以使用 &lt;code&gt;getAvailableIDs&lt;/code&gt; 方法遍历所有受支持的时区ID。然后，您可以选择一个受支持的ID来获取 &lt;code&gt;TimeZone&lt;/code&gt; 。如果所需的时区未由支持的ID之一表示，则可以指定自定义时区ID来生成TimeZone。自定义时区ID的语法为：</target>
        </trans-unit>
        <trans-unit id="07ceb73aa197f00c410fd308c978ae6ee240aa29" translate="yes" xml:space="preserve">
          <source>You can use the same processing instructions at different times to print different data. For example, you could set your default processing instructions to: US letter-sized paper, double sided, stapled. Whenever you print a job, it prints with these settings, unless you explicitly override them.</source>
          <target state="translated">您可以在不同时间使用相同的处理指令来打印不同的数据。例如,您可以将默认的处理指令设置为。美国字母大小的纸张,双面,订书机。每当您打印一项作业时,除非您明确地覆盖这些设置,否则它都会以这些设置进行打印。</target>
        </trans-unit>
        <trans-unit id="b05cd4de24ad94c0bddb20dc688db3902542c20f" translate="yes" xml:space="preserve">
          <source>You cannot instantiate a &lt;code&gt;MidiSystem&lt;/code&gt;; all the methods are static.</source>
          <target state="translated">您不能实例化 &lt;code&gt;MidiSystem&lt;/code&gt; ；所有方法都是静态的。</target>
        </trans-unit>
        <trans-unit id="337594c8f713fce90110d31c10966c39cdd91fa3" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;a href=&quot;query#isInstanceOf-javax.management.StringValueExp-&quot;&gt;&lt;code&gt;Query.isInstanceOf&lt;/code&gt;&lt;/a&gt; in a query.</source>
          <target state="translated">您不能在查询中使用&lt;a href=&quot;query#isInstanceOf-javax.management.StringValueExp-&quot;&gt; &lt;code&gt;Query.isInstanceOf&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="12c7beaa859ecd254c3278bc9623e70a31ef26d0" translate="yes" xml:space="preserve">
          <source>You cannot use dot syntax such as &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; in the &lt;a href=&quot;monitor/monitor#setObservedAttribute-java.lang.String-&quot;&gt;observed attribute&lt;/a&gt; of a monitor, as described in the documentation for the &lt;a href=&quot;monitor/package-summary&quot;&gt;&lt;code&gt;javax.management.monitor&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">如&lt;a href=&quot;monitor/package-summary&quot;&gt; &lt;code&gt;javax.management.monitor&lt;/code&gt; &lt;/a&gt;包的文档中所述，不能在监视器的&lt;a href=&quot;monitor/monitor#setObservedAttribute-java.lang.String-&quot;&gt;观察到的属性&lt;/a&gt;中使用点语法，例如 &lt;code&gt;HeapMemoryUsage.used&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03ade857dee92756695ba52fe1273011660a8a9a" translate="yes" xml:space="preserve">
          <source>You cannot use wildcards in a key property of an &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt;, for example &lt;code&gt;domain:type=Foo,name=*&lt;/code&gt;. Wildcards that match whole properties are still allowed, for example &lt;code&gt;*:*&lt;/code&gt; or &lt;code&gt;*:type=Foo,*&lt;/code&gt;.</source>
          <target state="translated">您不能在&lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;的键属性中使用通配符，例如 &lt;code&gt;domain:type=Foo,name=*&lt;/code&gt; 。仍允许使用匹配整个属性的通配符，例如 &lt;code&gt;*:*&lt;/code&gt; 或 &lt;code&gt;*:type=Foo,*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11d00d927bbe61d629fbd9a4b0a013506a7a2b34" translate="yes" xml:space="preserve">
          <source>You convert the password characters to a PBE key by creating an instance of the appropriate secret-key factory. For example, a secret-key factory for PKCS #5 will construct a PBE key from only the low order 8 bits of each password character, whereas a secret-key factory for PKCS #12 will take all 16 bits of each character.</source>
          <target state="translated">您可以通过创建一个合适的秘钥工厂的实例来将密码字符转换为PBE密钥,例如,PKCS #5的秘钥工厂将只用每个密码字符的低阶8位来构建一个PBE密钥,而PKCS #12的秘钥工厂将用每个密码字符的全部16位来构建一个PBE密钥。例如,PKCS #5的秘钥工厂将仅从每个密码字符的低阶8位构建PBE密钥,而PKCS #12的秘钥工厂将取每个字符的全部16位。</target>
        </trans-unit>
        <trans-unit id="a744a4e8190ed7df34f3f1794a15419538a27dd6" translate="yes" xml:space="preserve">
          <source>You could then sort &lt;code&gt;anArray&lt;/code&gt; by creating &lt;code&gt;new
 SortTask(anArray)&lt;/code&gt; and invoking it in a ForkJoinPool. As a more concrete simple example, the following task increments each element of an array:</source>
          <target state="translated">然后，您可以通过创建 &lt;code&gt;new SortTask(anArray)&lt;/code&gt; 并在ForkJoinPool中调用它来对 &lt;code&gt;anArray&lt;/code&gt; 进行排序。作为一个更具体的简单示例，以下任务将增加数组中的每个元素：</target>
        </trans-unit>
        <trans-unit id="0d401d2630ee7267cecc9c4666d6a5999871385a" translate="yes" xml:space="preserve">
          <source>You do not have to restrict yourself to using a single family of &lt;code&gt;ResourceBundle&lt;/code&gt;s. For example, you could have a set of bundles for exception messages, &lt;code&gt;ExceptionResources&lt;/code&gt; (&lt;code&gt;ExceptionResources_fr&lt;/code&gt;, &lt;code&gt;ExceptionResources_de&lt;/code&gt;, ...), and one for widgets, &lt;code&gt;WidgetResource&lt;/code&gt; (&lt;code&gt;WidgetResources_fr&lt;/code&gt;, &lt;code&gt;WidgetResources_de&lt;/code&gt;, ...); breaking up the resources however you like.</source>
          <target state="translated">您不必局限于使用单个 &lt;code&gt;ResourceBundle&lt;/code&gt; 家族。例如，您可能有一组用于异常消息的捆绑包， &lt;code&gt;ExceptionResources&lt;/code&gt; （ &lt;code&gt;ExceptionResources_fr&lt;/code&gt; ， &lt;code&gt;ExceptionResources_de&lt;/code&gt; ，...），以及一个用于小部件的 &lt;code&gt;WidgetResource&lt;/code&gt; （ &lt;code&gt;WidgetResources_fr&lt;/code&gt; ， &lt;code&gt;WidgetResources_de&lt;/code&gt; ，...）；随意拆分资源。</target>
        </trans-unit>
        <trans-unit id="d7b1e07c0c115e08707ab4b3fe0e242b73527cf6" translate="yes" xml:space="preserve">
          <source>You don't generally deal directly with &lt;code&gt;EventHandler&lt;/code&gt; instances. Instead, you use one of the &lt;code&gt;EventHandler&lt;/code&gt;&lt;code&gt;create&lt;/code&gt; methods to create an object that implements a given listener interface. This listener object uses an &lt;code&gt;EventHandler&lt;/code&gt; object behind the scenes to encapsulate information about the event, the object to be sent a message when the event occurs, the message (method) to be sent, and any argument to the method. The following section gives examples of how to create listener objects using the &lt;code&gt;create&lt;/code&gt; methods.</source>
          <target state="translated">通常，您通常不直接处理 &lt;code&gt;EventHandler&lt;/code&gt; 实例。而是使用 &lt;code&gt;EventHandler&lt;/code&gt; &lt;code&gt;create&lt;/code&gt; 方法之一创建一个实现给定侦听器接口的对象。此侦听器对象在后台使用 &lt;code&gt;EventHandler&lt;/code&gt; 对象封装有关事件的信息，事件发生时要向其发送消息的对象，要发送的消息（方法）以及该方法的任何参数。以下部分提供了有关如何使用 &lt;code&gt;create&lt;/code&gt; 方法创建侦听器对象的示例。</target>
        </trans-unit>
        <trans-unit id="85b0dcce880b98708c6cd409b79d331393f60dc9" translate="yes" xml:space="preserve">
          <source>You may also find the inherited methods from &lt;a href=&quot;abstractownablesynchronizer&quot;&gt;&lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt;&lt;/a&gt; useful to keep track of the thread owning an exclusive synchronizer. You are encouraged to use them -- this enables monitoring and diagnostic tools to assist users in determining which threads hold locks.</source>
          <target state="translated">您可能还会发现从&lt;a href=&quot;abstractownablesynchronizer&quot;&gt; &lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt; &lt;/a&gt;继承的方法对于跟踪拥有独占同步器的线程很有用。鼓励您使用它们-这将启用监视和诊断工具，以帮助用户确定哪些线程持有锁。</target>
        </trans-unit>
        <trans-unit id="303362cc01176f19b8ddd0166dfc267ce6935f47" translate="yes" xml:space="preserve">
          <source>You may register to receive event notification of handshake completion. This involves the use of two additional classes. &lt;em&gt;HandshakeCompletedEvent&lt;/em&gt; objects are passed to &lt;em&gt;HandshakeCompletedListener&lt;/em&gt; instances, which are registered by users of this API. &lt;code&gt;SSLSocket&lt;/code&gt;s are created by &lt;code&gt;SSLSocketFactory&lt;/code&gt;s, or by &lt;code&gt;accept&lt;/code&gt;ing a connection from a &lt;code&gt;SSLServerSocket&lt;/code&gt;.</source>
          <target state="translated">您可以注册以接收握手完成的事件通知。这涉及两个附加类的使用。&lt;em&gt;HandshakeCompletedEvent&lt;/em&gt;对象传递到&lt;em&gt;HandshakeCompletedListener&lt;/em&gt;实例，该实例由此API的用户注册。 &lt;code&gt;SSLSocket&lt;/code&gt; 由 &lt;code&gt;SSLSocketFactory&lt;/code&gt; 或通过 &lt;code&gt;accept&lt;/code&gt; &lt;code&gt;SSLServerSocket&lt;/code&gt; 的连接来创建。</target>
        </trans-unit>
        <trans-unit id="61185834ddb566bfd1d5b3bc7da66182a242e672" translate="yes" xml:space="preserve">
          <source>You read and write beans in XML format using the &lt;a href=&quot;xmldecoder&quot;&gt;&lt;code&gt;XMLDecoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;xmlencoder&quot;&gt;&lt;code&gt;XMLEncoder&lt;/code&gt;&lt;/a&gt; classes, respectively. One notable feature of the persistence scheme is that reading in a bean requires no special knowledge of the bean.</source>
          <target state="translated">您分别使用&lt;a href=&quot;xmldecoder&quot;&gt; &lt;code&gt;XMLDecoder&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;xmlencoder&quot;&gt; &lt;code&gt;XMLEncoder&lt;/code&gt; &lt;/a&gt;类以XML格式读取和写入bean 。持久性方案的一个显着特征是，在Bean中读取不需要对Bean有特殊的了解。</target>
        </trans-unit>
        <trans-unit id="cf02d7838e1d6a7e0de73b3b0cf6884d6e312c89" translate="yes" xml:space="preserve">
          <source>You retrieve an object from resource bundle using the appropriate getter method. Because &quot;OkKey&quot; and &quot;CancelKey&quot; are both strings, you would use &lt;code&gt;getString&lt;/code&gt; to retrieve them:</source>
          <target state="translated">您可以使用适当的getter方法从资源包中检索对象。因为&amp;ldquo; OkKey&amp;rdquo;和&amp;ldquo; CancelKey&amp;rdquo;都是字符串，所以您将使用 &lt;code&gt;getString&lt;/code&gt; 检索它们：</target>
        </trans-unit>
        <trans-unit id="1e9fbe269cafe576751ea7d16c9e507674a510e8" translate="yes" xml:space="preserve">
          <source>You should consider all of these things when evaluating the suitability of a given implementation for your application.</source>
          <target state="translated">在评估一个给定的实现是否适合你的应用时,你应该考虑所有这些事情。</target>
        </trans-unit>
        <trans-unit id="2316f8a5c5946d9b95f3331bd49565046f6d876b" translate="yes" xml:space="preserve">
          <source>You use &lt;code&gt;getAttributes()&lt;/code&gt; to retrieve the attributes associated with a directory object (for which you supply the name). Attributes are modified using &lt;code&gt;modifyAttributes()&lt;/code&gt;. You can add, replace, or remove attributes and/or attribute values using this operation.</source>
          <target state="translated">您可以使用 &lt;code&gt;getAttributes()&lt;/code&gt; 检索与目录对象（为其提供名称）关联的属性。使用 &lt;code&gt;modifyAttributes()&lt;/code&gt; 修改属性。您可以使用此操作添加，替换或删除属性和/或属性值。</target>
        </trans-unit>
        <trans-unit id="8de2bf6c9cf01498214e095d7c1b48596e4891b2" translate="yes" xml:space="preserve">
          <source>You use the factory methods provided by this class to create instances of various types of break iterators. In particular, use &lt;code&gt;getWordInstance&lt;/code&gt;, &lt;code&gt;getLineInstance&lt;/code&gt;, &lt;code&gt;getSentenceInstance&lt;/code&gt;, and &lt;code&gt;getCharacterInstance&lt;/code&gt; to create &lt;code&gt;BreakIterator&lt;/code&gt;s that perform word, line, sentence, and character boundary analysis respectively. A single &lt;code&gt;BreakIterator&lt;/code&gt; can work only on one unit (word, line, sentence, and so on). You must use a different iterator for each unit boundary analysis you wish to perform.</source>
          <target state="translated">您可以使用此类提供的工厂方法来创建各种类型的中断迭代器的实例。特别是，使用 &lt;code&gt;getWordInstance&lt;/code&gt; ， &lt;code&gt;getLineInstance&lt;/code&gt; ， &lt;code&gt;getSentenceInstance&lt;/code&gt; 和 &lt;code&gt;getCharacterInstance&lt;/code&gt; 创建分别执行单词，行，句子和字符边界分析的 &lt;code&gt;BreakIterator&lt;/code&gt; 。一个 &lt;code&gt;BreakIterator&lt;/code&gt; 只能在一个单元（单词，行，句子等）上工作。您必须对每个要执行的单元边界分析使用不同的迭代器。</target>
        </trans-unit>
        <trans-unit id="909f99a779adb66a76fc53ab56c7dd1caf35d0fd" translate="yes" xml:space="preserve">
          <source>Z</source>
          <target state="translated">Z</target>
        </trans-unit>
        <trans-unit id="1a272fd282089fe514817567377ca24b72d0625f" translate="yes" xml:space="preserve">
          <source>ZERO</source>
          <target state="translated">ZERO</target>
        </trans-unit>
        <trans-unit id="2a19472792991c5af795344d9391eaee274ee2b5" translate="yes" xml:space="preserve">
          <source>ZIP entry comments have maximum length of 0xffff. If the length of the specified comment string is greater than 0xFFFF bytes after encoding, only the first 0xFFFF bytes are output to the ZIP file entry.</source>
          <target state="translated">ZIP条目注释的最大长度为0xffffff。如果指定的注释字符串的长度在编码后大于0xFFFF字节,则只将前0xFFFF字节输出到ZIP文件条目中。</target>
        </trans-unit>
        <trans-unit id="e49fe6496c235d8d3a03d905ed9f2dc1be6cd81d" translate="yes" xml:space="preserve">
          <source>ZIP public domain inflate/deflate compression technology.</source>
          <target state="translated">ZIP公域充气/放气压缩技术。</target>
        </trans-unit>
        <trans-unit id="e35bb1ebab37055cd5264a2f0d37aace5710d2f3" translate="yes" xml:space="preserve">
          <source>ZONE_OFFSET</source>
          <target state="translated">ZONE_OFFSET</target>
        </trans-unit>
        <trans-unit id="a2ec140b8a70c560d7316de2af194d1cfabc3527" translate="yes" xml:space="preserve">
          <source>Zero if the argument is equal to this abstract pathname, a value less than zero if this abstract pathname is lexicographically less than the argument, or a value greater than zero if this abstract pathname is lexicographically greater than the argument</source>
          <target state="translated">如果参数等于这个抽象路径名,则为零;如果这个抽象路径名在词法上小于参数,则为小于零的值;如果这个抽象路径名在词法上大于参数,则为大于零的值。</target>
        </trans-unit>
        <trans-unit id="7346201829949b7025b454a078963e6e27531e34" translate="yes" xml:space="preserve">
          <source>ZipEntry</source>
          <target state="translated">ZipEntry</target>
        </trans-unit>
        <trans-unit id="51c913e32243ca472d88e1c5d1d16cf48b354610" translate="yes" xml:space="preserve">
          <source>ZipEntry.clone()</source>
          <target state="translated">ZipEntry.clone()</target>
        </trans-unit>
        <trans-unit id="cac750489f66dc2ae540a080b10453140182423d" translate="yes" xml:space="preserve">
          <source>ZipEntry.getComment()</source>
          <target state="translated">ZipEntry.getComment()</target>
        </trans-unit>
        <trans-unit id="b7e950e263a346a5ec00ce1e238298be041ae66d" translate="yes" xml:space="preserve">
          <source>ZipEntry.getCompressedSize()</source>
          <target state="translated">ZipEntry.getCompressedSize()</target>
        </trans-unit>
        <trans-unit id="6d03e1a9e9aa8b1360e9ab52ca4f706766216aee" translate="yes" xml:space="preserve">
          <source>ZipEntry.getCrc()</source>
          <target state="translated">ZipEntry.getCrc()</target>
        </trans-unit>
        <trans-unit id="a049ac1e96965adbde1e1c9aaf7119affec3072e" translate="yes" xml:space="preserve">
          <source>ZipEntry.getCreationTime()</source>
          <target state="translated">ZipEntry.getCreationTime()</target>
        </trans-unit>
        <trans-unit id="b633c2f2cd38e8bbd225785180c4d08eaa673d53" translate="yes" xml:space="preserve">
          <source>ZipEntry.getExtra()</source>
          <target state="translated">ZipEntry.getExtra()</target>
        </trans-unit>
        <trans-unit id="cecf4681fea23f354e8f416b1b49fd43ca1c0e51" translate="yes" xml:space="preserve">
          <source>ZipEntry.getLastAccessTime()</source>
          <target state="translated">ZipEntry.getLastAccessTime()</target>
        </trans-unit>
        <trans-unit id="e75ce547adef769a3f818befe64fe61bde596b3f" translate="yes" xml:space="preserve">
          <source>ZipEntry.getLastModifiedTime()</source>
          <target state="translated">ZipEntry.getLastModifiedTime()</target>
        </trans-unit>
        <trans-unit id="ec4276b35b9a668675b7f006b0f50544814615e9" translate="yes" xml:space="preserve">
          <source>ZipEntry.getMethod()</source>
          <target state="translated">ZipEntry.getMethod()</target>
        </trans-unit>
        <trans-unit id="0fcca1d65ccb463341f3507d991c371bf1ab4aaf" translate="yes" xml:space="preserve">
          <source>ZipEntry.getName()</source>
          <target state="translated">ZipEntry.getName()</target>
        </trans-unit>
        <trans-unit id="d054d771883a118a722a120f401e381e806e7cbd" translate="yes" xml:space="preserve">
          <source>ZipEntry.getSize()</source>
          <target state="translated">ZipEntry.getSize()</target>
        </trans-unit>
        <trans-unit id="7159a044da3279ca273042f3a7410b503d61b3bc" translate="yes" xml:space="preserve">
          <source>ZipEntry.getTime()</source>
          <target state="translated">ZipEntry.getTime()</target>
        </trans-unit>
        <trans-unit id="0f918fdad4f52cf03725738a2a9bb67f3ee15c8f" translate="yes" xml:space="preserve">
          <source>ZipEntry.hashCode()</source>
          <target state="translated">ZipEntry.hashCode()</target>
        </trans-unit>
        <trans-unit id="fc3bfd49fc863cb50f4ed27be6d1a741ac4caee6" translate="yes" xml:space="preserve">
          <source>ZipEntry.isDirectory()</source>
          <target state="translated">ZipEntry.isDirectory()</target>
        </trans-unit>
        <trans-unit id="7aa79bd1117214860fed2e6fd86bd9e5882a6652" translate="yes" xml:space="preserve">
          <source>ZipEntry.setComment()</source>
          <target state="translated">ZipEntry.setComment()</target>
        </trans-unit>
        <trans-unit id="600df89ced480be5bd7ee5b7e2325853aa7e3f1f" translate="yes" xml:space="preserve">
          <source>ZipEntry.setCompressedSize()</source>
          <target state="translated">ZipEntry.setCompressedSize()</target>
        </trans-unit>
        <trans-unit id="ccb8ee9f0b89df648d0ea4fef05059a8398dcdb5" translate="yes" xml:space="preserve">
          <source>ZipEntry.setCrc()</source>
          <target state="translated">ZipEntry.setCrc()</target>
        </trans-unit>
        <trans-unit id="02242fe65bfd1e291772ce3685e3af7bf022e8fe" translate="yes" xml:space="preserve">
          <source>ZipEntry.setCreationTime()</source>
          <target state="translated">ZipEntry.setCreationTime()</target>
        </trans-unit>
        <trans-unit id="e581227ae4af4f2d2b445f539ace55cba2ab59cd" translate="yes" xml:space="preserve">
          <source>ZipEntry.setExtra()</source>
          <target state="translated">ZipEntry.setExtra()</target>
        </trans-unit>
        <trans-unit id="a932cff43fc2869b9386d50eed82bf6134ffefeb" translate="yes" xml:space="preserve">
          <source>ZipEntry.setLastAccessTime()</source>
          <target state="translated">ZipEntry.setLastAccessTime()</target>
        </trans-unit>
        <trans-unit id="81b2d0a9b4f52739f7bb047c151df14026173a00" translate="yes" xml:space="preserve">
          <source>ZipEntry.setLastModifiedTime()</source>
          <target state="translated">ZipEntry.setLastModifiedTime()</target>
        </trans-unit>
        <trans-unit id="b4d5fd3e1b609ec1cf49cad07e620801ea9a2fc1" translate="yes" xml:space="preserve">
          <source>ZipEntry.setMethod()</source>
          <target state="translated">ZipEntry.setMethod()</target>
        </trans-unit>
        <trans-unit id="847e16f27c048a7514fec9f2d92d1431739cd7c2" translate="yes" xml:space="preserve">
          <source>ZipEntry.setSize()</source>
          <target state="translated">ZipEntry.setSize()</target>
        </trans-unit>
        <trans-unit id="0e33756f566a551c8ee4620d6c269b8cab31dab5" translate="yes" xml:space="preserve">
          <source>ZipEntry.setTime()</source>
          <target state="translated">ZipEntry.setTime()</target>
        </trans-unit>
        <trans-unit id="1286f67d4b7ee81c2a867a47f7205e206eb8d2a6" translate="yes" xml:space="preserve">
          <source>ZipEntry.toString()</source>
          <target state="translated">ZipEntry.toString()</target>
        </trans-unit>
        <trans-unit id="83fd5b8d24556ebf242ab5bd4670b8bf581dd692" translate="yes" xml:space="preserve">
          <source>ZipError</source>
          <target state="translated">ZipError</target>
        </trans-unit>
        <trans-unit id="5c6a539aa71664dd52e957856c81dfaeff9b268a" translate="yes" xml:space="preserve">
          <source>ZipException</source>
          <target state="translated">ZipException</target>
        </trans-unit>
        <trans-unit id="f9d240431c831ab12b7156e65af3fc91ebf43e8e" translate="yes" xml:space="preserve">
          <source>ZipFile</source>
          <target state="translated">ZipFile</target>
        </trans-unit>
        <trans-unit id="20488fbf675da704ffd8e37cc8622489caa5c255" translate="yes" xml:space="preserve">
          <source>ZipFile.close()</source>
          <target state="translated">ZipFile.close()</target>
        </trans-unit>
        <trans-unit id="b58854f9114d64a6f4466613c81122c1bbcfe4ab" translate="yes" xml:space="preserve">
          <source>ZipFile.entries()</source>
          <target state="translated">ZipFile.entries()</target>
        </trans-unit>
        <trans-unit id="d05366cc8bef7cb42b05e9391619bf40f1013d32" translate="yes" xml:space="preserve">
          <source>ZipFile.finalize()</source>
          <target state="translated">ZipFile.finalize()</target>
        </trans-unit>
        <trans-unit id="601fa6c7267e24fc86a5e3c7916833b563836b10" translate="yes" xml:space="preserve">
          <source>ZipFile.getComment()</source>
          <target state="translated">ZipFile.getComment()</target>
        </trans-unit>
        <trans-unit id="e2b850beed51efdab3f751a590ccbcd0cbf8c02e" translate="yes" xml:space="preserve">
          <source>ZipFile.getEntry()</source>
          <target state="translated">ZipFile.getEntry()</target>
        </trans-unit>
        <trans-unit id="d5ef9abd7a32fa844ca1429407a4c7393ef16641" translate="yes" xml:space="preserve">
          <source>ZipFile.getInputStream()</source>
          <target state="translated">ZipFile.getInputStream()</target>
        </trans-unit>
        <trans-unit id="20953e0c4be9aca94285665ca434862612d077ea" translate="yes" xml:space="preserve">
          <source>ZipFile.getName()</source>
          <target state="translated">ZipFile.getName()</target>
        </trans-unit>
        <trans-unit id="ab5d02ff4c5dc8d8b67aefb8ee47bde3b5f978a7" translate="yes" xml:space="preserve">
          <source>ZipFile.size()</source>
          <target state="translated">ZipFile.size()</target>
        </trans-unit>
        <trans-unit id="5899f0506ae59175f38d5fd7aabedf3586402f38" translate="yes" xml:space="preserve">
          <source>ZipFile.stream()</source>
          <target state="translated">ZipFile.stream()</target>
        </trans-unit>
        <trans-unit id="b048bc12b3e76eb4e903c0b5e96db354cace237d" translate="yes" xml:space="preserve">
          <source>ZipInputStream</source>
          <target state="translated">ZipInputStream</target>
        </trans-unit>
        <trans-unit id="06fe8827b9c41096049da2b9ee827ecb18bf1273" translate="yes" xml:space="preserve">
          <source>ZipInputStream.available()</source>
          <target state="translated">ZipInputStream.available()</target>
        </trans-unit>
        <trans-unit id="8e8511128b69ab410c54970fec556d60699e5a88" translate="yes" xml:space="preserve">
          <source>ZipInputStream.close()</source>
          <target state="translated">ZipInputStream.close()</target>
        </trans-unit>
        <trans-unit id="eddeda81febe5c6af898d27071d258312809c585" translate="yes" xml:space="preserve">
          <source>ZipInputStream.closeEntry()</source>
          <target state="translated">ZipInputStream.closeEntry()</target>
        </trans-unit>
        <trans-unit id="b06dd5161fd84500304d50db846069c03cadb4cd" translate="yes" xml:space="preserve">
          <source>ZipInputStream.createZipEntry()</source>
          <target state="translated">ZipInputStream.createZipEntry()</target>
        </trans-unit>
        <trans-unit id="8db3c445d92f42e0ac65c54a5c8587931b833082" translate="yes" xml:space="preserve">
          <source>ZipInputStream.getNextEntry()</source>
          <target state="translated">ZipInputStream.getNextEntry()</target>
        </trans-unit>
        <trans-unit id="2979471ebf9e241b8e65e9c31aa4c310d9deb8f6" translate="yes" xml:space="preserve">
          <source>ZipInputStream.read()</source>
          <target state="translated">ZipInputStream.read()</target>
        </trans-unit>
        <trans-unit id="f88955ec13aaacb7ad7a787e13390dc28a8ee1e5" translate="yes" xml:space="preserve">
          <source>ZipInputStream.skip()</source>
          <target state="translated">ZipInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="ec9a9932d330260c90a9158c2cdb58947c28af4f" translate="yes" xml:space="preserve">
          <source>ZipOutputStream</source>
          <target state="translated">ZipOutputStream</target>
        </trans-unit>
        <trans-unit id="e9c8cfd0505c37129de3ce83dff3b4facebbd2c6" translate="yes" xml:space="preserve">
          <source>ZipOutputStream.close()</source>
          <target state="translated">ZipOutputStream.close()</target>
        </trans-unit>
        <trans-unit id="cfe7c15a3e9b158caeb0c0e26086ab7b1a8c1244" translate="yes" xml:space="preserve">
          <source>ZipOutputStream.closeEntry()</source>
          <target state="translated">ZipOutputStream.closeEntry()</target>
        </trans-unit>
        <trans-unit id="dd7a1e514f44dda1f7ec08a7443918a4c02b705f" translate="yes" xml:space="preserve">
          <source>ZipOutputStream.finish()</source>
          <target state="translated">ZipOutputStream.finish()</target>
        </trans-unit>
        <trans-unit id="46bd3490e109b3557751380be80437646baf3493" translate="yes" xml:space="preserve">
          <source>ZipOutputStream.putNextEntry()</source>
          <target state="translated">ZipOutputStream.putNextEntry()</target>
        </trans-unit>
        <trans-unit id="bee00b4b065f2c2445b7727da19f35579d060035" translate="yes" xml:space="preserve">
          <source>ZipOutputStream.setComment()</source>
          <target state="translated">ZipOutputStream.setComment()</target>
        </trans-unit>
        <trans-unit id="791aaac0e7c4acca41e13698501b568a2bbf019e" translate="yes" xml:space="preserve">
          <source>ZipOutputStream.setLevel()</source>
          <target state="translated">ZipOutputStream.setLevel()</target>
        </trans-unit>
        <trans-unit id="88cb002aeeec64996cf5a68bfee9c7046fa6f112" translate="yes" xml:space="preserve">
          <source>ZipOutputStream.setMethod()</source>
          <target state="translated">ZipOutputStream.setMethod()</target>
        </trans-unit>
        <trans-unit id="e48bc71c6895b5a59ec710f3317de52e2517e1f8" translate="yes" xml:space="preserve">
          <source>ZipOutputStream.write()</source>
          <target state="translated">ZipOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="4aa03cd8a3be5163af908dada48a7cec40161f08" translate="yes" xml:space="preserve">
          <source>ZoneId</source>
          <target state="translated">ZoneId</target>
        </trans-unit>
        <trans-unit id="92364051ddbfdba118894796f03190001efa8bad" translate="yes" xml:space="preserve">
          <source>ZoneId - the &lt;a href=&quot;../zoneid&quot;&gt;time-zone&lt;/a&gt; id</source>
          <target state="translated">ZoneId- &lt;a href=&quot;../zoneid&quot;&gt;时区&lt;/a&gt; ID</target>
        </trans-unit>
        <trans-unit id="e6a3bbaeb1c5f66c0d2599d7f384eb7f5a02a280" translate="yes" xml:space="preserve">
          <source>ZoneId.equals()</source>
          <target state="translated">ZoneId.equals()</target>
        </trans-unit>
        <trans-unit id="3fde1bfc08952c7561b23e72cc037d5c0391b432" translate="yes" xml:space="preserve">
          <source>ZoneId.from()</source>
          <target state="translated">ZoneId.from()</target>
        </trans-unit>
        <trans-unit id="a37cddf00935933b7aa7d2a55508aa5911c7bfc7" translate="yes" xml:space="preserve">
          <source>ZoneId.getAvailableZoneIds()</source>
          <target state="translated">ZoneId.getAvailableZoneIds()</target>
        </trans-unit>
        <trans-unit id="e88c796d4006b3e0d6d8f7824f8d821496e1730d" translate="yes" xml:space="preserve">
          <source>ZoneId.getDisplayName()</source>
          <target state="translated">ZoneId.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="f8513df276a1c798422865f6b454982b4a15a19c" translate="yes" xml:space="preserve">
          <source>ZoneId.getId()</source>
          <target state="translated">ZoneId.getId()</target>
        </trans-unit>
        <trans-unit id="553a38976150b90123e2c9f7f260a90d560808be" translate="yes" xml:space="preserve">
          <source>ZoneId.getRules()</source>
          <target state="translated">ZoneId.getRules()</target>
        </trans-unit>
        <trans-unit id="cadf6f41e8f4eb26ff3c3fed7212d0b37d7f79ce" translate="yes" xml:space="preserve">
          <source>ZoneId.hashCode()</source>
          <target state="translated">ZoneId.hashCode()</target>
        </trans-unit>
        <trans-unit id="d236fd2cfe92523d77c17405fc64530444234bcd" translate="yes" xml:space="preserve">
          <source>ZoneId.normalized()</source>
          <target state="translated">ZoneId.normalized()</target>
        </trans-unit>
        <trans-unit id="d262ae2d2ae3ec4b9b94fe372c70d454f982df4b" translate="yes" xml:space="preserve">
          <source>ZoneId.of()</source>
          <target state="translated">ZoneId.of()</target>
        </trans-unit>
        <trans-unit id="29b904a9c6afb86b6ba2ec5b303cb6991d4f210a" translate="yes" xml:space="preserve">
          <source>ZoneId.ofOffset()</source>
          <target state="translated">ZoneId.ofOffset()</target>
        </trans-unit>
        <trans-unit id="292106f9d74f178e9873a6653b700e9d0b582d6d" translate="yes" xml:space="preserve">
          <source>ZoneId.systemDefault()</source>
          <target state="translated">ZoneId.systemDefault()</target>
        </trans-unit>
        <trans-unit id="2bc86ff719a8d0768659a0c464754999f7546d6d" translate="yes" xml:space="preserve">
          <source>ZoneId.toString()</source>
          <target state="translated">ZoneId.toString()</target>
        </trans-unit>
        <trans-unit id="5a2d3850607b36c57d8f98e504a07661194c31dc" translate="yes" xml:space="preserve">
          <source>ZoneOffset</source>
          <target state="translated">ZoneOffset</target>
        </trans-unit>
        <trans-unit id="cac447faca7b626030133a0fde2df2475295c1ab" translate="yes" xml:space="preserve">
          <source>ZoneOffset.adjustInto()</source>
          <target state="translated">ZoneOffset.adjustInto()</target>
        </trans-unit>
        <trans-unit id="5cf32f037c248a05a5fc3e3262318ff545939abe" translate="yes" xml:space="preserve">
          <source>ZoneOffset.compareTo()</source>
          <target state="translated">ZoneOffset.compareTo()</target>
        </trans-unit>
        <trans-unit id="0a288cfd0b032faabc3e6c932bed019047be3498" translate="yes" xml:space="preserve">
          <source>ZoneOffset.equals()</source>
          <target state="translated">ZoneOffset.equals()</target>
        </trans-unit>
        <trans-unit id="5fea8b25a7e779dbd7df95ed8ac908d837670bc7" translate="yes" xml:space="preserve">
          <source>ZoneOffset.from()</source>
          <target state="translated">ZoneOffset.from()</target>
        </trans-unit>
        <trans-unit id="024b7925ae665beb1732bb9ceaabf1e62933036f" translate="yes" xml:space="preserve">
          <source>ZoneOffset.get()</source>
          <target state="translated">ZoneOffset.get()</target>
        </trans-unit>
        <trans-unit id="163a82409d459c968acc4e17be3f3e1ee896e198" translate="yes" xml:space="preserve">
          <source>ZoneOffset.getId()</source>
          <target state="translated">ZoneOffset.getId()</target>
        </trans-unit>
        <trans-unit id="404cd16affec94d42dcf64bf1d99ef02b0fd433b" translate="yes" xml:space="preserve">
          <source>ZoneOffset.getLong()</source>
          <target state="translated">ZoneOffset.getLong()</target>
        </trans-unit>
        <trans-unit id="19e999c8678b17cfc7ee2e78e9f72002c28c06a2" translate="yes" xml:space="preserve">
          <source>ZoneOffset.getRules()</source>
          <target state="translated">ZoneOffset.getRules()</target>
        </trans-unit>
        <trans-unit id="73bc388ffa550ba5afb335cbbe2740376b7fd858" translate="yes" xml:space="preserve">
          <source>ZoneOffset.getTotalSeconds()</source>
          <target state="translated">ZoneOffset.getTotalSeconds()</target>
        </trans-unit>
        <trans-unit id="c8552953b8f57b5a5cf8fe39edc9d577b349ceaf" translate="yes" xml:space="preserve">
          <source>ZoneOffset.hashCode()</source>
          <target state="translated">ZoneOffset.hashCode()</target>
        </trans-unit>
        <trans-unit id="f476c2768ecbd9d0bc6e29dc2df46d365bdd8dd8" translate="yes" xml:space="preserve">
          <source>ZoneOffset.isSupported()</source>
          <target state="translated">ZoneOffset.isSupported()</target>
        </trans-unit>
        <trans-unit id="cbb9be272acdf46e8fcdc4bc703f4f6842f066f7" translate="yes" xml:space="preserve">
          <source>ZoneOffset.of()</source>
          <target state="translated">ZoneOffset.of()</target>
        </trans-unit>
        <trans-unit id="18cb5ed531cde928c6b5bf55d0f39507d3f927c2" translate="yes" xml:space="preserve">
          <source>ZoneOffset.ofHours()</source>
          <target state="translated">ZoneOffset.ofHours()</target>
        </trans-unit>
        <trans-unit id="8fff6ef580f9755daca853f49391fa43dfe8f759" translate="yes" xml:space="preserve">
          <source>ZoneOffset.ofHoursMinutes()</source>
          <target state="translated">ZoneOffset.ofHoursMinutes()</target>
        </trans-unit>
        <trans-unit id="d80d8048f13149802f8ac904859a308bad88d4fe" translate="yes" xml:space="preserve">
          <source>ZoneOffset.ofHoursMinutesSeconds()</source>
          <target state="translated">ZoneOffset.ofHoursMinutesSeconds()</target>
        </trans-unit>
        <trans-unit id="590a9fe27bda3c9faa795de00aae459c0b9d6edc" translate="yes" xml:space="preserve">
          <source>ZoneOffset.ofTotalSeconds()</source>
          <target state="translated">ZoneOffset.ofTotalSeconds()</target>
        </trans-unit>
        <trans-unit id="c2fc98cd22091a09a72aebbefae95a46c4ac702b" translate="yes" xml:space="preserve">
          <source>ZoneOffset.query()</source>
          <target state="translated">ZoneOffset.query()</target>
        </trans-unit>
        <trans-unit id="89a696aaafbe3692208ad56ef508cf07a7b8efd6" translate="yes" xml:space="preserve">
          <source>ZoneOffset.range()</source>
          <target state="translated">ZoneOffset.range()</target>
        </trans-unit>
        <trans-unit id="916e927cc5f4081719cf32689b7f49b46fa1113b" translate="yes" xml:space="preserve">
          <source>ZoneOffset.toString()</source>
          <target state="translated">ZoneOffset.toString()</target>
        </trans-unit>
        <trans-unit id="d393730ea4c6ed940a1e8a86c750234384066573" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition</source>
          <target state="translated">ZoneOffsetTransition</target>
        </trans-unit>
        <trans-unit id="8b120b1a4713d12623af1d9c0df76d8415dff04d" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.compareTo()</source>
          <target state="translated">ZoneOffsetTransition.compareTo()</target>
        </trans-unit>
        <trans-unit id="928495bd5be40474c8fe1206bc8c442a017d806b" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.equals()</source>
          <target state="translated">ZoneOffsetTransition.equals()</target>
        </trans-unit>
        <trans-unit id="60667db902c823acacc3fd7aaf9dad99e56e15be" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.getDateTimeAfter()</source>
          <target state="translated">ZoneOffsetTransition.getDateTimeAfter()</target>
        </trans-unit>
        <trans-unit id="e73977b7b6672391dbc0649a3fa2bbbb038db2e7" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.getDateTimeBefore()</source>
          <target state="translated">ZoneOffsetTransition.getDateTimeBefore()</target>
        </trans-unit>
        <trans-unit id="4ccaded1d6e608e830b9473b39a078a879fe91cf" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.getDuration()</source>
          <target state="translated">ZoneOffsetTransition.getDuration()</target>
        </trans-unit>
        <trans-unit id="5377019ee087e86ad211be8e2588d5bb95bcd935" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.getInstant()</source>
          <target state="translated">ZoneOffsetTransition.getInstant()</target>
        </trans-unit>
        <trans-unit id="9aca039879023d2afe20c5df1e07a1a60dff3b45" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.getOffsetAfter()</source>
          <target state="translated">ZoneOffsetTransition.getOffsetAfter()</target>
        </trans-unit>
        <trans-unit id="df6034ea04e7bafcd04df0275209ab6cfdb4bb4e" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.getOffsetBefore()</source>
          <target state="translated">ZoneOffsetTransition.getOffsetBefore()</target>
        </trans-unit>
        <trans-unit id="7fc1ea50e5f5b9defb3f4f9a49f98a3e61476917" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.hashCode()</source>
          <target state="translated">ZoneOffsetTransition.hashCode()</target>
        </trans-unit>
        <trans-unit id="f00ab80850ddb42188d4cec39b8a32726be84495" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.isGap()</source>
          <target state="translated">ZoneOffsetTransition.isGap()</target>
        </trans-unit>
        <trans-unit id="8d857407ebbbc8a657690038ffb5547ca0e17f8e" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.isOverlap()</source>
          <target state="translated">ZoneOffsetTransition.isOverlap()</target>
        </trans-unit>
        <trans-unit id="1f811b5d3cb264b1026e3aa8ce8b364241dc9457" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.isValidOffset()</source>
          <target state="translated">ZoneOffsetTransition.isValidOffset()</target>
        </trans-unit>
        <trans-unit id="c3f7a503ee800fb38f5c5bb623db834d44e1ff81" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.of()</source>
          <target state="translated">ZoneOffsetTransition.of()</target>
        </trans-unit>
        <trans-unit id="dcb5812a3831d6b643dd05dc0f4770a4cdc262be" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.toEpochSecond()</source>
          <target state="translated">ZoneOffsetTransition.toEpochSecond()</target>
        </trans-unit>
        <trans-unit id="7c1d9f6a743a860553c45b8b765cd24df9865c92" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransition.toString()</source>
          <target state="translated">ZoneOffsetTransition.toString()</target>
        </trans-unit>
        <trans-unit id="a68cec6ecace12eac0f3fe1444749ddad141dc44" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule</source>
          <target state="translated">ZoneOffsetTransitionRule</target>
        </trans-unit>
        <trans-unit id="be383ab8cb5548ddb421754fbb6f36151f8c01b9" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.TimeDefinition</source>
          <target state="translated">ZoneOffsetTransitionRule.TimeDefinition</target>
        </trans-unit>
        <trans-unit id="c26c24304fac05a3607517b42642bacd91592e31" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.TimeDefinition.createDateTime()</source>
          <target state="translated">ZoneOffsetTransitionRule.TimeDefinition.createDateTime()</target>
        </trans-unit>
        <trans-unit id="bade57f105b739e3102fd61381de6dc1ef8e42aa" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.TimeDefinition.valueOf()</source>
          <target state="translated">ZoneOffsetTransitionRule.TimeDefinition.valueOf()</target>
        </trans-unit>
        <trans-unit id="6317dcd1f073977ce20b683c1597c5a80babe093" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.TimeDefinition.values()</source>
          <target state="translated">ZoneOffsetTransitionRule.TimeDefinition.values()</target>
        </trans-unit>
        <trans-unit id="98dbafd30092d436acf2f6621c250212d7464060" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.createTransition()</source>
          <target state="translated">ZoneOffsetTransitionRule.createTransition()</target>
        </trans-unit>
        <trans-unit id="fd67f06e65fc2f14b596bc159323803bb7108831" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.equals()</source>
          <target state="translated">ZoneOffsetTransitionRule.equals()</target>
        </trans-unit>
        <trans-unit id="173558e139a92f8ed551a5bc516a976f607bbee8" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.getDayOfMonthIndicator()</source>
          <target state="translated">ZoneOffsetTransitionRule.getDayOfMonthIndicator()</target>
        </trans-unit>
        <trans-unit id="e93a3a4e2d8f6a5f0e0af202366489df1a96d5bd" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.getDayOfWeek()</source>
          <target state="translated">ZoneOffsetTransitionRule.getDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="a1d69aac7b7fd5383d61da95e1be77556c998525" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.getLocalTime()</source>
          <target state="translated">ZoneOffsetTransitionRule.getLocalTime()</target>
        </trans-unit>
        <trans-unit id="5c51cfeb46feb2fdf389a2dde339ee7de3f9ed69" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.getMonth()</source>
          <target state="translated">ZoneOffsetTransitionRule.getMonth()</target>
        </trans-unit>
        <trans-unit id="767fa88e1f4405225908f4b026b6a2600a404e6e" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.getOffsetAfter()</source>
          <target state="translated">ZoneOffsetTransitionRule.getOffsetAfter()</target>
        </trans-unit>
        <trans-unit id="44f39f16a397a47d76a2853dbe2bb55636d3aded" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.getOffsetBefore()</source>
          <target state="translated">ZoneOffsetTransitionRule.getOffsetBefore()</target>
        </trans-unit>
        <trans-unit id="95c850fb98d9cd4a4180d50c15020f0b04304270" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.getStandardOffset()</source>
          <target state="translated">ZoneOffsetTransitionRule.getStandardOffset()</target>
        </trans-unit>
        <trans-unit id="a0cce2769e606d48b846e22d20715cce259a4d87" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.getTimeDefinition()</source>
          <target state="translated">ZoneOffsetTransitionRule.getTimeDefinition()</target>
        </trans-unit>
        <trans-unit id="b16764f3408e1ae61b45a1b7679b33c5b3a529d6" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.hashCode()</source>
          <target state="translated">ZoneOffsetTransitionRule.hashCode()</target>
        </trans-unit>
        <trans-unit id="e6a6835e6d12897fdeadc4cfd79ed6b8330ec0b3" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.isMidnightEndOfDay()</source>
          <target state="translated">ZoneOffsetTransitionRule.isMidnightEndOfDay()</target>
        </trans-unit>
        <trans-unit id="cfc134675883eb73abfb9baa1050f91c527e3cee" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.of()</source>
          <target state="translated">ZoneOffsetTransitionRule.of()</target>
        </trans-unit>
        <trans-unit id="13e28349e4a726accc706afb84d59fe0516c098f" translate="yes" xml:space="preserve">
          <source>ZoneOffsetTransitionRule.toString()</source>
          <target state="translated">ZoneOffsetTransitionRule.toString()</target>
        </trans-unit>
        <trans-unit id="0f2eb2f0139bd33b96ff338deed850d8ef358320" translate="yes" xml:space="preserve">
          <source>ZoneRules</source>
          <target state="translated">ZoneRules</target>
        </trans-unit>
        <trans-unit id="d0a6ae1a08f7d00f82fc0a21e050f5530dac5f03" translate="yes" xml:space="preserve">
          <source>ZoneRules.equals()</source>
          <target state="translated">ZoneRules.equals()</target>
        </trans-unit>
        <trans-unit id="08b4f189f148eca3b1f1844625b9a6539bdbce42" translate="yes" xml:space="preserve">
          <source>ZoneRules.getDaylightSavings()</source>
          <target state="translated">ZoneRules.getDaylightSavings()</target>
        </trans-unit>
        <trans-unit id="be45f596c4312fff01de2ce914de96e658379c7f" translate="yes" xml:space="preserve">
          <source>ZoneRules.getOffset()</source>
          <target state="translated">ZoneRules.getOffset()</target>
        </trans-unit>
        <trans-unit id="64ee2ac469375b76945bbcbe7d24625cbfb5250b" translate="yes" xml:space="preserve">
          <source>ZoneRules.getStandardOffset()</source>
          <target state="translated">ZoneRules.getStandardOffset()</target>
        </trans-unit>
        <trans-unit id="fe43f90b0ba330baa898e602c8f2a97b4dd209e3" translate="yes" xml:space="preserve">
          <source>ZoneRules.getTransition()</source>
          <target state="translated">ZoneRules.getTransition()</target>
        </trans-unit>
        <trans-unit id="825ff5324fc7d7f3f0968bf2d3c7f7d73cb9f1b3" translate="yes" xml:space="preserve">
          <source>ZoneRules.getTransitionRules()</source>
          <target state="translated">ZoneRules.getTransitionRules()</target>
        </trans-unit>
        <trans-unit id="7343a47336214ab4e8eab83dd73f5a3981cba59e" translate="yes" xml:space="preserve">
          <source>ZoneRules.getTransitions()</source>
          <target state="translated">ZoneRules.getTransitions()</target>
        </trans-unit>
        <trans-unit id="a4815e254ec0ab86cd027aa4b3584aaf5136f360" translate="yes" xml:space="preserve">
          <source>ZoneRules.getValidOffsets()</source>
          <target state="translated">ZoneRules.getValidOffsets()</target>
        </trans-unit>
        <trans-unit id="844b4ff952343e2096e7db1ffbf35759f5f86820" translate="yes" xml:space="preserve">
          <source>ZoneRules.hashCode()</source>
          <target state="translated">ZoneRules.hashCode()</target>
        </trans-unit>
        <trans-unit id="c7c53ff59a018c7e8403162b90f91514c5090b47" translate="yes" xml:space="preserve">
          <source>ZoneRules.isDaylightSavings()</source>
          <target state="translated">ZoneRules.isDaylightSavings()</target>
        </trans-unit>
        <trans-unit id="ff67e76236da5565a1c1ea438b678373559d23d0" translate="yes" xml:space="preserve">
          <source>ZoneRules.isFixedOffset()</source>
          <target state="translated">ZoneRules.isFixedOffset()</target>
        </trans-unit>
        <trans-unit id="12d16ef0fc124ac798ac5fed5341fe2c3b0dc0b4" translate="yes" xml:space="preserve">
          <source>ZoneRules.isValidOffset()</source>
          <target state="translated">ZoneRules.isValidOffset()</target>
        </trans-unit>
        <trans-unit id="1096d7dc2f0e564a7a545e1bd81e90ef1f50b137" translate="yes" xml:space="preserve">
          <source>ZoneRules.nextTransition()</source>
          <target state="translated">ZoneRules.nextTransition()</target>
        </trans-unit>
        <trans-unit id="dc6d20df24ebc0ad18495309ec701bf4d201c270" translate="yes" xml:space="preserve">
          <source>ZoneRules.of()</source>
          <target state="translated">ZoneRules.of()</target>
        </trans-unit>
        <trans-unit id="9693dfe7f30fe1ff76119e51adaf620063914a64" translate="yes" xml:space="preserve">
          <source>ZoneRules.previousTransition()</source>
          <target state="translated">ZoneRules.previousTransition()</target>
        </trans-unit>
        <trans-unit id="1e43eba1ba713cd1b9215a71d2558ed6531a56fa" translate="yes" xml:space="preserve">
          <source>ZoneRules.toString()</source>
          <target state="translated">ZoneRules.toString()</target>
        </trans-unit>
        <trans-unit id="d42369e3b13b7366c140919388454c192c149b1f" translate="yes" xml:space="preserve">
          <source>ZoneRulesException</source>
          <target state="translated">ZoneRulesException</target>
        </trans-unit>
        <trans-unit id="a92066a1ea850a2116ee648cbc429b6b94bbe181" translate="yes" xml:space="preserve">
          <source>ZoneRulesProvider</source>
          <target state="translated">ZoneRulesProvider</target>
        </trans-unit>
        <trans-unit id="32ca75fecf2366279788c6ca8ac1b64cc46d5170" translate="yes" xml:space="preserve">
          <source>ZoneRulesProvider may be installed in an instance of the Java Platform as extension classes, that is, jar files placed into any of the usual extension directories. Installed providers are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class. A ZoneRulesProvider identifies itself with a provider configuration file named &lt;code&gt;java.time.zone.ZoneRulesProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;. The file should contain a line that specifies the fully qualified concrete zonerules-provider class name. Providers may also be made available by adding them to the class path or by registering themselves via &lt;a href=&quot;zonerulesprovider#registerProvider-java.time.zone.ZoneRulesProvider-&quot;&gt;&lt;code&gt;registerProvider(java.time.zone.ZoneRulesProvider)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ZoneRulesProvider可以作为扩展类安装在Java Platform的实例中，也就是说，将jar文件放置在任何常规扩展目录中。使用&lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;类定义的服务提供程序加载工具来加载已安装的提供程序。 ZoneRulesProvider用资源目录 &lt;code&gt;META-INF/services&lt;/code&gt; 中名为 &lt;code&gt;java.time.zone.ZoneRulesProvider&lt;/code&gt; 的提供程序配置文件标识自己。该文件应包含一行，该行指定完全合格的具体zonerules-provider类名称。也可以通过将提供者添加到类路径或通过&lt;a href=&quot;zonerulesprovider#registerProvider-java.time.zone.ZoneRulesProvider-&quot;&gt; &lt;code&gt;registerProvider(java.time.zone.ZoneRulesProvider)&lt;/code&gt; &lt;/a&gt;方法进行注册来使提供者可用。</target>
        </trans-unit>
        <trans-unit id="674802bdac670f92a26000105901b8957c91f6f1" translate="yes" xml:space="preserve">
          <source>ZoneRulesProvider.getAvailableZoneIds()</source>
          <target state="translated">ZoneRulesProvider.getAvailableZoneIds()</target>
        </trans-unit>
        <trans-unit id="54299b98b57cb5e2308f48c291460a6ab0b5d8b4" translate="yes" xml:space="preserve">
          <source>ZoneRulesProvider.getRules()</source>
          <target state="translated">ZoneRulesProvider.getRules()</target>
        </trans-unit>
        <trans-unit id="3fd0a8f6f42e18b39ac2d29bf6b1e6474c7681ef" translate="yes" xml:space="preserve">
          <source>ZoneRulesProvider.getVersions()</source>
          <target state="translated">ZoneRulesProvider.getVersions()</target>
        </trans-unit>
        <trans-unit id="d37df87a18fdfc4986a1b0b6cf38c03f637b63d3" translate="yes" xml:space="preserve">
          <source>ZoneRulesProvider.provideRefresh()</source>
          <target state="translated">ZoneRulesProvider.provideRefresh()</target>
        </trans-unit>
        <trans-unit id="0b9af13865187a9b48ffdabe85397839d1484e99" translate="yes" xml:space="preserve">
          <source>ZoneRulesProvider.provideRules()</source>
          <target state="translated">ZoneRulesProvider.provideRules()</target>
        </trans-unit>
        <trans-unit id="74d3704bc29d2e621a5d8b48b4d629541810631a" translate="yes" xml:space="preserve">
          <source>ZoneRulesProvider.provideVersions()</source>
          <target state="translated">ZoneRulesProvider.provideVersions()</target>
        </trans-unit>
        <trans-unit id="8468ab362d70510d36d377d20c6142709510becc" translate="yes" xml:space="preserve">
          <source>ZoneRulesProvider.provideZoneIds()</source>
          <target state="translated">ZoneRulesProvider.provideZoneIds()</target>
        </trans-unit>
        <trans-unit id="4a989019855c45f1facf3bc19c377cf4434aca38" translate="yes" xml:space="preserve">
          <source>ZoneRulesProvider.refresh()</source>
          <target state="translated">ZoneRulesProvider.refresh()</target>
        </trans-unit>
        <trans-unit id="a4822bc6b4b936323fcc6e32fe9696eab8841efe" translate="yes" xml:space="preserve">
          <source>ZoneRulesProvider.registerProvider()</source>
          <target state="translated">ZoneRulesProvider.registerProvider()</target>
        </trans-unit>
        <trans-unit id="ae8fc49d111ee029dfc164e59ca151c4cfeec506" translate="yes" xml:space="preserve">
          <source>ZoneText - the name of the time-zone</source>
          <target state="translated">ZoneText-时区名称</target>
        </trans-unit>
        <trans-unit id="0fc90bcef4000c6dee01392dcb0284d22c7c0716" translate="yes" xml:space="preserve">
          <source>Zoned Date Time</source>
          <target state="translated">分区日期时间</target>
        </trans-unit>
        <trans-unit id="341189515dfb5d5f82c3a45b8f7d8dd2c8a9a6af" translate="yes" xml:space="preserve">
          <source>ZonedDateTime</source>
          <target state="translated">ZonedDateTime</target>
        </trans-unit>
        <trans-unit id="d778f2dc5e30bda324cfe696eafc4d4c908e5ec9" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.equals()</source>
          <target state="translated">ZonedDateTime.equals()</target>
        </trans-unit>
        <trans-unit id="0bbeb7af0c1b4654ded58835a6eddf559f86c980" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.format()</source>
          <target state="translated">ZonedDateTime.format()</target>
        </trans-unit>
        <trans-unit id="e0a1e74f95eac2a76547d29c4bcc78d65b06b440" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.from()</source>
          <target state="translated">ZonedDateTime.from()</target>
        </trans-unit>
        <trans-unit id="72746a8031b4faf5a73339d8381462ee812fa8c5" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.get()</source>
          <target state="translated">ZonedDateTime.get()</target>
        </trans-unit>
        <trans-unit id="659b08f537147717c9efb20fc21f4ad648a9e6fa" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getDayOfMonth()</source>
          <target state="translated">ZonedDateTime.getDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="687d8c80b4b51681bf62a6a78876afb15483224f" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getDayOfWeek()</source>
          <target state="translated">ZonedDateTime.getDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="58289a6d5239ed339230629fca8c259cce646f4e" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getDayOfYear()</source>
          <target state="translated">ZonedDateTime.getDayOfYear()</target>
        </trans-unit>
        <trans-unit id="e737f7bae40e4dc8087ebfb95d152223bda578d8" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getHour()</source>
          <target state="translated">ZonedDateTime.getHour()</target>
        </trans-unit>
        <trans-unit id="0adb2499f5b70972260f52d3e3d09c2a09988a78" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getLong()</source>
          <target state="translated">ZonedDateTime.getLong()</target>
        </trans-unit>
        <trans-unit id="a84a29fc0f7133dd36c348b2082462714b2a56ce" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getMinute()</source>
          <target state="translated">ZonedDateTime.getMinute()</target>
        </trans-unit>
        <trans-unit id="920d62477919388b281c2a0a79955f25fab265ac" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getMonth()</source>
          <target state="translated">ZonedDateTime.getMonth()</target>
        </trans-unit>
        <trans-unit id="4944cd6af35189636094cfdc02d550935bdea4d6" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getMonthValue()</source>
          <target state="translated">ZonedDateTime.getMonthValue()</target>
        </trans-unit>
        <trans-unit id="322eb79ba9ed854b13a9754360ebcce439a07c62" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getNano()</source>
          <target state="translated">ZonedDateTime.getNano()</target>
        </trans-unit>
        <trans-unit id="9102c94d415a37c8092d0369c4c6454c7d2c5d71" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getOffset()</source>
          <target state="translated">ZonedDateTime.getOffset()</target>
        </trans-unit>
        <trans-unit id="a95dc530315af27b3c86f9faf43e9da88826bc46" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getSecond()</source>
          <target state="translated">ZonedDateTime.getSecond()</target>
        </trans-unit>
        <trans-unit id="a52f18eec640f245b7ed01fdd7f0c8789f071a1b" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getYear()</source>
          <target state="translated">ZonedDateTime.getYear()</target>
        </trans-unit>
        <trans-unit id="d2ac25f055ebc788953e36370831397ae078a9aa" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.getZone()</source>
          <target state="translated">ZonedDateTime.getZone()</target>
        </trans-unit>
        <trans-unit id="d8cba5bb921d686591936e9be5aa4171b92f375d" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.hashCode()</source>
          <target state="translated">ZonedDateTime.hashCode()</target>
        </trans-unit>
        <trans-unit id="8fca1c010c96b70b28eb2bfc226fe0234b1409e1" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.isSupported()</source>
          <target state="translated">ZonedDateTime.isSupported()</target>
        </trans-unit>
        <trans-unit id="dcdc4050a28f92d3f5f6e09525f0945c30f01c69" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.minus()</source>
          <target state="translated">ZonedDateTime.minus()</target>
        </trans-unit>
        <trans-unit id="6631448277146ca46f37256d50308024f90a7b76" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.minusDays()</source>
          <target state="translated">ZonedDateTime.minusDays()</target>
        </trans-unit>
        <trans-unit id="60b93c73aeb984d0b25bce7b6f173a619a8d431b" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.minusHours()</source>
          <target state="translated">ZonedDateTime.minusHours()</target>
        </trans-unit>
        <trans-unit id="ec6f9a66cbdbc7f4b406b19524c7687547a90444" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.minusMinutes()</source>
          <target state="translated">ZonedDateTime.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="1ac68d2e65733453bdfea000dfb2c6d471c5a9a1" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.minusMonths()</source>
          <target state="translated">ZonedDateTime.minusMonths()</target>
        </trans-unit>
        <trans-unit id="6c7bccf382257a01d71f225a5903e8b4462a7afd" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.minusNanos()</source>
          <target state="translated">ZonedDateTime.minusNanos()</target>
        </trans-unit>
        <trans-unit id="945eb783b7e1a9705671a6c0daf1d9b52b7255b2" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.minusSeconds()</source>
          <target state="translated">ZonedDateTime.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="9c2ef82ab725ef5793b35d2ea6e4491b50c55efc" translate="yes" xml:space="preserve">
          <source>ZonedDateTime.minusWeeks()</source>
          <target state="translated">ZonedDateTime.minusWeeks()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
