<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="d7762c22e001277ee5cd6aeecabf121605fbece7" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the left key location (there is more than one possible location for this key). Example: the left shift key.</source>
          <target state="translated">表示按下或松开的键在左键位置的常数(该键的可能位置不止一个)。例如:左移键。</target>
        </trans-unit>
        <trans-unit id="9a1f11a170c0a575584e55c5fb1d677bb6358739" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the right key location (there is more than one possible location for this key).</source>
          <target state="translated">一个常数,表示按下或松开的键在正确的键位上(该键有多个可能的位置)。</target>
        </trans-unit>
        <trans-unit id="98822459a383fdb86b1f6269201518447e31508e" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the right key location (there is more than one possible location for this key). Example: the right shift key.</source>
          <target state="translated">一个常数,表示按下或松开的键在正确的键位上(这个键的可能位置不止一个)。例如:右移键。</target>
        </trans-unit>
        <trans-unit id="29d575fa10f7d1466aa0adcd76dc7b048791c20c" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is not distinguished as the left or right version of a key, and did not originate on the numeric keypad (or did not originate with a virtual key corresponding to the numeric keypad).</source>
          <target state="translated">一个常数,表示被按下或松开的键没有被区分为左键或右键的版本,也没有起源于数字键盘(或没有起源于数字键盘对应的虚拟键)。</target>
        </trans-unit>
        <trans-unit id="4f8a965994d6bdff67c964a039e7f1a4fd80747d" translate="yes" xml:space="preserve">
          <source>A constant indicating that the keyLocation is indeterminate or not relevant.</source>
          <target state="translated">表示keyLocation不确定或不相关的常数。</target>
        </trans-unit>
        <trans-unit id="9f2c38207a19702e47eb202ace4e581e89aa869f" translate="yes" xml:space="preserve">
          <source>A constant indicating that the keyLocation is indeterminate or not relevant. &lt;code&gt;KEY_TYPED&lt;/code&gt; events do not have a keyLocation; this value is used instead.</source>
          <target state="translated">一个常量，指示keyLocation是不确定的或不相关的。 &lt;code&gt;KEY_TYPED&lt;/code&gt; 事件没有keyLocation；改用此值。</target>
        </trans-unit>
        <trans-unit id="20c201122998a1314d1f84487379aeb5d8cd68c9" translate="yes" xml:space="preserve">
          <source>A constant indicating that transactions are not supported.</source>
          <target state="translated">表示不支持交易的常数。</target>
        </trans-unit>
        <trans-unit id="2d5ee397d0953f8c878592a157223de0668f57de" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a Unicode stream.</source>
          <target state="translated">一个常量，向 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 对象指示给定的参数是Unicode流。</target>
        </trans-unit>
        <trans-unit id="444a3b653570cc75145a9db33019375cdb0d23ea" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a Unicode stream. This &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">一个常量，向 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 对象指示给定的参数是Unicode流。提供此 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 对象，作为 &lt;code&gt;SyncFactory&lt;/code&gt; 静态工厂SPI机制中定义的 &lt;code&gt;SyncProvider&lt;/code&gt; 抽象类的扩展。</target>
        </trans-unit>
        <trans-unit id="d1af75dffd4a28ad609bd172e9df6b60b0492280" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a binary stream.</source>
          <target state="translated">一个常量，向 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 对象指示给定的参数是二进制流。</target>
        </trans-unit>
        <trans-unit id="82f3fde9e0a9c49845f36259d577d009885b6c5d" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is a binary stream. A &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">一个常量，向 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 对象指示给定的参数是二进制流。提供 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 对象，作为 &lt;code&gt;SyncFactory&lt;/code&gt; 静态工厂SPI机制中定义的 &lt;code&gt;SyncProvider&lt;/code&gt; 抽象类的扩展。</target>
        </trans-unit>
        <trans-unit id="b2e11b618c4a9eb29b087fecb9e638df2e5f9e9c" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is an ASCII stream.</source>
          <target state="translated">一个常量，向 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 对象指示给定的参数是ASCII流。</target>
        </trans-unit>
        <trans-unit id="778c619722f209ee6e231b3b6a638d87619250b4" translate="yes" xml:space="preserve">
          <source>A constant indicating to a &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object that a given parameter is an ASCII stream. A &lt;code&gt;RowSetReaderImpl&lt;/code&gt; object is provided as an extension of the &lt;code&gt;SyncProvider&lt;/code&gt; abstract class defined in the &lt;code&gt;SyncFactory&lt;/code&gt; static factory SPI mechanism.</source>
          <target state="translated">一个常量，向 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 对象指示给定的参数是ASCII流。提供 &lt;code&gt;RowSetReaderImpl&lt;/code&gt; 对象，作为 &lt;code&gt;SyncFactory&lt;/code&gt; 静态工厂SPI机制中定义的 &lt;code&gt;SyncProvider&lt;/code&gt; 抽象类的扩展。</target>
        </trans-unit>
        <trans-unit id="05fd9daac8cc107ac74022f8e6a431daa3310be1" translate="yes" xml:space="preserve">
          <source>A constant pool index does not refer to a UTF-8 entry</source>
          <target state="translated">一个常量池索引并不是指UTF-8条目。</target>
        </trans-unit>
        <trans-unit id="6b17d0eb335bec84834c46dc6002183dea1ae9ba" translate="yes" xml:space="preserve">
          <source>A constant pool index is out of bounds.</source>
          <target state="translated">恒定的池指数是出界的。</target>
        </trans-unit>
        <trans-unit id="b83da880fe62fcf431fa2b80b966091f24e6c21a" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a general Unicode string.</source>
          <target state="translated">由 &lt;code&gt;getAttributeDataType&lt;/code&gt; 返回的常量，指示属性的值是常规Unicode字符串。</target>
        </trans-unit>
        <trans-unit id="7e64a1186b69b4d433ea2f6a6e2d5e8963e0b2a9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of a decimal floating-point number.</source>
          <target state="translated">由 &lt;code&gt;getAttributeDataType&lt;/code&gt; 返回的常量，指示属性的值是十进制浮点数的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="ab34a89f1927a75ce08a7f8cd06fc8745928ab5f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of a double-precision decimal floating-point number.</source>
          <target state="translated">由 &lt;code&gt;getAttributeDataType&lt;/code&gt; 返回的常量，指示属性的值是双精度十进制浮点数的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="1dc9d55cfd527b1e9a8494e21da70bbc73b4a0ca" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is a string representation of an integer.</source>
          <target state="translated">由 &lt;code&gt;getAttributeDataType&lt;/code&gt; 返回的常量，指示属性的值是整数的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="b055c29b61d38048b3db837907dda4788b82beaf" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is one of the boolean values 'true' or 'false'.</source>
          <target state="translated">由 &lt;code&gt;getAttributeDataType&lt;/code&gt; 返回的常量，指示属性的值是布尔值&amp;ldquo; true&amp;rdquo;或&amp;ldquo; false&amp;rdquo;之一。</target>
        </trans-unit>
        <trans-unit id="9c7921138692ad31aed03ed87a2c18d7559fa6f8" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeDataType&lt;/code&gt; indicating that the value of an attribute is one of the boolean values 'true' or 'false'. Attribute values of type DATATYPE_BOOLEAN should be marked as enumerations, and the permitted values should be the string literal values &quot;TRUE&quot; or &quot;FALSE&quot;, although a plugin may also recognise lower or mixed case equivalents.</source>
          <target state="translated">由 &lt;code&gt;getAttributeDataType&lt;/code&gt; 返回的常量，指示属性的值是布尔值&amp;ldquo; true&amp;rdquo;或&amp;ldquo; false&amp;rdquo;之一。DATATYPE_BOOLEAN类型的属性值应标记为枚举，并且允许的值应为字符串文字值&amp;ldquo; TRUE&amp;rdquo;或&amp;ldquo; FALSE&amp;rdquo;，尽管插件也可以识别小写或大小写混合形式。</target>
        </trans-unit>
        <trans-unit id="566bce4b46c648ea6165b9faa10f160b834017b7" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values.</source>
          <target state="translated">由 &lt;code&gt;getAttributeValueType&lt;/code&gt; 和 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示可以为属性或用户对象设置值的范围。</target>
        </trans-unit>
        <trans-unit id="536b4870053ade20fbb0746b24a7e47d769bbe9e" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values. Both the minimum and maximum values of the range are exclusive. It is recommended that ranges of integers be inclusive on both ends, and that exclusive ranges be used only for floating-point data.</source>
          <target state="translated">由 &lt;code&gt;getAttributeValueType&lt;/code&gt; 和 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示可以为属性或用户对象设置值的范围。范围的最小值和最大值均互斥。建议在两端都包含整数范围，并且排除范围仅用于浮点数据。</target>
        </trans-unit>
        <trans-unit id="0b757473db53368a2ef12d97dd50853ce089eaf3" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a range of values. Both the minimum and maximum values of the range are inclusive. It is recommended that ranges of integers be inclusive on both ends, and that exclusive ranges be used only for floating-point data.</source>
          <target state="translated">由 &lt;code&gt;getAttributeValueType&lt;/code&gt; 和 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示可以为属性或用户对象设置值的范围。范围的最小值和最大值都包括在内。建议在两端都包含整数范围，并且排除范围仅用于浮点数据。</target>
        </trans-unit>
        <trans-unit id="2983d9a4c8f0070d53ebb95bf9e8a10f5fc81489" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set a single, arbitrary value.</source>
          <target state="translated">由 &lt;code&gt;getAttributeValueType&lt;/code&gt; 和 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示可以将属性或用户对象设置为单个任意值。</target>
        </trans-unit>
        <trans-unit id="7dd2ee1ceefd12d472ba5e7d72f427399d68f9c3" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set one of a number of enumerated values.</source>
          <target state="translated">由 &lt;code&gt;getAttributeValueType&lt;/code&gt; 和 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示可以将属性或用户对象设置为多个枚举值之一。</target>
        </trans-unit>
        <trans-unit id="0700eebf90e2b9b27717269ad4daa5ca6eaf8941" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set one of a number of enumerated values. In the case of attributes, these values are &lt;code&gt;String&lt;/code&gt;s; for objects, they are &lt;code&gt;Object&lt;/code&gt;s implementing a given class or interface.</source>
          <target state="translated">由 &lt;code&gt;getAttributeValueType&lt;/code&gt; 和 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示可以将属性或用户对象设置为多个枚举值之一。对于属性，这些值是 &lt;code&gt;String&lt;/code&gt; 。对于对象，它们是实现给定类或接口的 &lt;code&gt;Object&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ec6012b51cd19cccf833c92407daa945b1a03e9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a list or array of values.</source>
          <target state="translated">由 &lt;code&gt;getAttributeValueType&lt;/code&gt; 和 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示可以将属性或用户对象设置为值的列表或数组。</target>
        </trans-unit>
        <trans-unit id="01a4565fe7f6e19d3ab523d52b2e3d4022290f1b" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a list or array of values. In the case of attributes, the list will consist of whitespace-separated values within a &lt;code&gt;String&lt;/code&gt;; for objects, an array will be used.</source>
          <target state="translated">由 &lt;code&gt;getAttributeValueType&lt;/code&gt; 和 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示可以将属性或用户对象设置为值的列表或数组。对于属性，列表将由 &lt;code&gt;String&lt;/code&gt; 中的空格分隔的值组成；对于对象，将使用数组。</target>
        </trans-unit>
        <trans-unit id="80334552b3aebe7d8c7a06d06da04a1a3568a90f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values.</source>
          <target state="translated">由 &lt;code&gt;getAttributeValueType&lt;/code&gt; 和 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示可以将属性或用户对象设置为值的范围。</target>
        </trans-unit>
        <trans-unit id="1b6629d90c3b11283881b0238ff02a1f68047efe" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values. The maximum (but not the minimum) value of the range is inclusive.</source>
          <target state="translated">由 &lt;code&gt;getAttributeValueType&lt;/code&gt; 和 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示可以将属性或用户对象设置为值的范围。范围的最大值（但不是最小值）是包括在内的。</target>
        </trans-unit>
        <trans-unit id="772f7ec75791ea05130b58e948867c25d7e5fe15" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getAttributeValueType&lt;/code&gt; and &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate that the attribute or user object may be set to a range of values. The minimum (but not the maximum) value of the range is inclusive.</source>
          <target state="translated">由 &lt;code&gt;getAttributeValueType&lt;/code&gt; 和 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示可以将属性或用户对象设置为值的范围。范围的最小值（但不是最大值）包括两端值。</target>
        </trans-unit>
        <trans-unit id="17abfcd5d959c22775f6b62852cd890d8ecc15d8" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element may not have any children.</source>
          <target state="translated">由 &lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示元素可能没有任何子代。</target>
        </trans-unit>
        <trans-unit id="1514659e4abf19076195fdc813b9841606a061a9" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element may not have any children. In other words, it is required to be a leaf node.</source>
          <target state="translated">由 &lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示元素可能没有任何子级。换句话说，它必须是叶节点。</target>
        </trans-unit>
        <trans-unit id="b270fd2569573332c2d9e007ae63e71559dcca3c" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a sequence of instances of any of its legal child elements.</source>
          <target state="translated">由 &lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示元素必须具有其任何合法子元素的实例序列。</target>
        </trans-unit>
        <trans-unit id="0ca721acca6c2ee0f535842aac83a6e8e73d7b2b" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a sequence of instances of any of its legal child elements. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;(a|b|c|d|...)*&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示元素必须具有其任何合法子元素的实例序列。在DTD术语中，元素的内容由序列 &lt;code&gt;(a|b|c|d|...)*&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="349d171edd3b592ceb01cdb21161389dea4db0db" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a single instance of each of its legal child elements, in order.</source>
          <target state="translated">由 &lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示一个元素必须依次具有其每个合法子元素的单个实例。</target>
        </trans-unit>
        <trans-unit id="25307fe80f331b10c26c8b31d0ddbea83dc5eb8e" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have a single instance of each of its legal child elements, in order. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;a,b,c,d,...&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示一个元素必须依次具有每个合法子元素的单个实例。用DTD术语，元素的内容由序列 &lt;code&gt;a,b,c,d,...&lt;/code&gt; 定义。</target>
        </trans-unit>
        <trans-unit id="62b7bc8bdc42c3f8bc44d2fd527e686dc6e82432" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or more instances of its unique legal child element.</source>
          <target state="translated">由 &lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示元素必须具有零个或多个其唯一的Legal子元素实例。</target>
        </trans-unit>
        <trans-unit id="d2a5ac0abac4124c2691f77efb666b9cd9be6e2f" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or more instances of its unique legal child element. In DTD terms, the contents of the element are defined by a starred expression &lt;code&gt;a*&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示元素必须具有零个或多个其唯一的合法子元素实例。用DTD术语，该元素的内容由带星号的表达式 &lt;code&gt;a*&lt;/code&gt; 定义。</target>
        </trans-unit>
        <trans-unit id="55f9aa4fe76b8c0ceece5c17f4e27e5156875298" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one children, selected from among its legal child elements.</source>
          <target state="translated">由 &lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示一个元素必须具有零个或一个子元素（从其合法子元素中选择）。</target>
        </trans-unit>
        <trans-unit id="25a43eb749e0d4acdb5a2d1a97249b39d470bc43" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one children, selected from among its legal child elements. In DTD terms, the contents of the element are defined by a selection &lt;code&gt;a|b|c|d|...&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示一个元素必须具有零个或一个子元素（从其合法子元素中选择）。在DTD术语中，元素的内容由选择 &lt;code&gt;a|b|c|d|...&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2158f87b8f92b42c073e896d0d5528d518ffe0e1" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one instance of each of its legal child elements, in order.</source>
          <target state="translated">由 &lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示一个元素按顺序必须具有零个或每个合法子元素一个实例。</target>
        </trans-unit>
        <trans-unit id="94f4855baee14b64d1efe591ef1cabf5480c75ae" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getChildPolicy&lt;/code&gt; to indicate that an element must have zero or one instance of each of its legal child elements, in order. In DTD terms, the contents of the element are defined by a sequence &lt;code&gt;a?,b?,c?,d?,...&lt;/code&gt;.</source>
          <target state="translated">由 &lt;code&gt;getChildPolicy&lt;/code&gt; 返回的常量，指示一个元素按顺序必须具有零个或每个合法子元素一个实例。用DTD术语，元素的内容由序列 &lt;code&gt;a?,b?,c?,d?,...&lt;/code&gt; 定义。</target>
        </trans-unit>
        <trans-unit id="d25737fce32883b6c144ed133d1e77a8c2421fac" translate="yes" xml:space="preserve">
          <source>A constant returned by &lt;code&gt;getObjectValueType&lt;/code&gt; to indicate the absence of a user object.</source>
          <target state="translated">由 &lt;code&gt;getObjectValueType&lt;/code&gt; 返回的常量，指示缺少用户对象。</target>
        </trans-unit>
        <trans-unit id="9958a5b1e7e52f53c31a2b6e90641f49be5abe83" translate="yes" xml:space="preserve">
          <source>A constant that indicates a horizontal scroll bar.</source>
          <target state="translated">一个表示水平滚动条的常数。</target>
        </trans-unit>
        <trans-unit id="2a664bb96fbace79e8921afd5d417d9d8f0a8b80" translate="yes" xml:space="preserve">
          <source>A constant that indicates a vertical scroll bar.</source>
          <target state="translated">一个表示垂直滚动条的常数。</target>
        </trans-unit>
        <trans-unit id="9f3b1eee9cafae4150875d4465c302deee8b24bd" translate="yes" xml:space="preserve">
          <source>A constant that represents the days field.</source>
          <target state="translated">代表日场的一个常数。</target>
        </trans-unit>
        <trans-unit id="d50083a6b811310bfcdc88e734bb35da6b1077b7" translate="yes" xml:space="preserve">
          <source>A constant that represents the hours field.</source>
          <target state="translated">一个代表小时领域的常数。</target>
        </trans-unit>
        <trans-unit id="b17282818a9c4ae66351fe225c2aa4c623204a5c" translate="yes" xml:space="preserve">
          <source>A constant that represents the minutes field.</source>
          <target state="translated">一个代表分钟领域的常数。</target>
        </trans-unit>
        <trans-unit id="485fdf7fd1644fefedcc79390cca96901956c9af" translate="yes" xml:space="preserve">
          <source>A constant that represents the months field.</source>
          <target state="translated">一个代表月份领域的常数。</target>
        </trans-unit>
        <trans-unit id="bfeb5d39997aa2b454607fa8adcb25d4cf79ebfb" translate="yes" xml:space="preserve">
          <source>A constant that represents the seconds field.</source>
          <target state="translated">一个代表秒字段的常数。</target>
        </trans-unit>
        <trans-unit id="b48e61a5313fb72ce52d866513c4f3214262890d" translate="yes" xml:space="preserve">
          <source>A constant that represents the years field.</source>
          <target state="translated">一个代表年份领域的常数。</target>
        </trans-unit>
        <trans-unit id="5abebda073f15c5667612d5bce665df5e30f7ecd" translate="yes" xml:space="preserve">
          <source>A constant to determine whether the node is accepted, rejected, or skipped, as defined above.</source>
          <target state="translated">一个常数,用于确定该节点是接受、拒绝还是跳过,如上文所定义。</target>
        </trans-unit>
        <trans-unit id="a9bb52a1a0861cec5571123e621ea88ed9320640" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt; or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable a feature for future writes.</source>
          <target state="translated">可以传递给诸如 &lt;code&gt;setTilingMode&lt;/code&gt; 或 &lt;code&gt;setCompressionMode&lt;/code&gt; 之类的方法中的常量值，以启用将来的写入功能。</target>
        </trans-unit>
        <trans-unit id="35d4eb9703c2210692f0d6cfb2192f616bfd7eae" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt; or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable a feature for future writes. That is, when this mode is set the stream will be tiled or compressed according to additional information supplied to the corresponding &lt;code&gt;set&lt;/code&gt; methods in this class and retrievable from the corresponding &lt;code&gt;get&lt;/code&gt; methods. Note that this mode is not supported for progressive output.</source>
          <target state="translated">可以传递给诸如 &lt;code&gt;setTilingMode&lt;/code&gt; 或 &lt;code&gt;setCompressionMode&lt;/code&gt; 之类的方法中的常量值，以启用将来的写入功能。也就是说，设置此模式时，将根据提供给此类中相应的 &lt;code&gt;set&lt;/code&gt; 方法的附加信息对流进行平铺或压缩，并可从相应的 &lt;code&gt;get&lt;/code&gt; 方法中检索该附加信息。请注意，逐行输出不支持此模式。</target>
        </trans-unit>
        <trans-unit id="559ccbc6f19c151bdc59b4dda6613806012db4fa" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to disable a feature for future writes.</source>
          <target state="translated">可以传递给诸如 &lt;code&gt;setTilingMode&lt;/code&gt; ， &lt;code&gt;setProgressiveMode&lt;/code&gt; 和 &lt;code&gt;setCompressionMode&lt;/code&gt; 之类的方法的常量值，以禁用将来的写入功能。</target>
        </trans-unit>
        <trans-unit id="5e3bdadffec9d389f0e6f442f4a8826a156f5a94" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to disable a feature for future writes. That is, when this mode is set the stream will &lt;b&gt;not&lt;/b&gt; be tiled, progressive, or compressed, and the relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">可以传递给诸如 &lt;code&gt;setTilingMode&lt;/code&gt; ， &lt;code&gt;setProgressiveMode&lt;/code&gt; 和 &lt;code&gt;setCompressionMode&lt;/code&gt; 之类的方法的常量值，以禁用将来的写入功能。也就是说，设置此模式时，将&lt;b&gt;不会&lt;/b&gt;对流进行平铺，渐进或压缩，并且相关的访问器方法将抛出 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ab70b2d758691d0eea3255e3dfcc38b6fab8268" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes.</source>
          <target state="translated">可以传递给诸如 &lt;code&gt;setTilingMode&lt;/code&gt; ， &lt;code&gt;setProgressiveMode&lt;/code&gt; 和 &lt;code&gt;setCompressionMode&lt;/code&gt; 之类的方法的常数值，以启用该功能以备将来写入。</target>
        </trans-unit>
        <trans-unit id="c8f7898366002f517660648a2793ba433862bbdf" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, and &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes. That is, when this mode is enabled the stream will be tiled, progressive, or compressed according to a sensible default chosen internally by the writer in a plug-in dependent way, and the relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">可以传递给诸如 &lt;code&gt;setTilingMode&lt;/code&gt; ， &lt;code&gt;setProgressiveMode&lt;/code&gt; 和 &lt;code&gt;setCompressionMode&lt;/code&gt; 之类的方法的常数值，以启用该功能以备将来写入。也就是说，启用此模式时，将根据编写者在内部选择的，取决于插件的方式根据合理的默认值对流进行平铺，渐进或压缩，并且相关的访问器方法将抛出 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="67a60cf03e51978f5cc896a2789a14cf370f1371" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes.</source>
          <target state="translated">可以传递给诸如 &lt;code&gt;setTilingMode&lt;/code&gt; ， &lt;code&gt;setProgressiveMode&lt;/code&gt; 或 &lt;code&gt;setCompressionMode&lt;/code&gt; 之类的方法的常数值，以启用该功能以备将来写入。</target>
        </trans-unit>
        <trans-unit id="ee2714f160a481212e68cea2fc3d76b6fb1a8d6a" translate="yes" xml:space="preserve">
          <source>A constant value that may be passed into methods such as &lt;code&gt;setTilingMode&lt;/code&gt;, &lt;code&gt;setProgressiveMode&lt;/code&gt;, or &lt;code&gt;setCompressionMode&lt;/code&gt; to enable that feature for future writes. That is, when this mode is enabled the stream will be tiled, progressive, or compressed based on the contents of stream and/or image metadata passed into the write operation, and any relevant accessor methods will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">可以传递给诸如 &lt;code&gt;setTilingMode&lt;/code&gt; ， &lt;code&gt;setProgressiveMode&lt;/code&gt; 或 &lt;code&gt;setCompressionMode&lt;/code&gt; 之类的方法的常数值，以启用该功能以备将来写入。也就是说，启用此模式时，将根据传递到写入操作中的流和/或图像元数据的内容对流进行平铺，渐进或压缩，并且任何相关的访问器方法都将抛出 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7279f33ba91d89c119cc784b7519e6b9ac4694d5" translate="yes" xml:space="preserve">
          <source>A constructor consumes an extra argument for the object which is being constructed.</source>
          <target state="translated">构造函数为正在构造的对象消耗一个额外的参数。</target>
        </trans-unit>
        <trans-unit id="57902652588e33d2d2877e5267fcd4fb79931dc7" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;Comparator&lt;/code&gt;, which creates an empty sorted map sorted according to the specified comparator.</source>
          <target state="translated">具有单个参数类型 &lt;code&gt;Comparator&lt;/code&gt; 的构造函数，该构造函数创建一个空的已排序映射，该映射根据指定的比较器进行排序。</target>
        </trans-unit>
        <trans-unit id="25c8b9f747c078b778797b44d629f2869067a88a" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;Map&lt;/code&gt;, which creates a new map with the same key-value mappings as its argument, sorted according to the keys' natural ordering.</source>
          <target state="translated">具有单个 &lt;code&gt;Map&lt;/code&gt; 类型参数的构造方法，该方法将创建一个新映射，该映射具有与其参数相同的键-值映射关系，并根据键的自然顺序进行排序。</target>
        </trans-unit>
        <trans-unit id="e3fc63f43b8fbf5b83832243411d77bf7df6af1f" translate="yes" xml:space="preserve">
          <source>A constructor with a single argument of type &lt;code&gt;SortedMap&lt;/code&gt;, which creates a new sorted map with the same key-value mappings and the same ordering as the input sorted map.</source>
          <target state="translated">具有一个 &lt;code&gt;SortedMap&lt;/code&gt; 类型的单个参数的构造方法，该方法将创建一个新的排序映射，并与输入的排序映射具有相同的键值映射和相同的顺序。</target>
        </trans-unit>
        <trans-unit id="bb2ddb390065f595439cee7ee8032949a41e280e" translate="yes" xml:space="preserve">
          <source>A constructor.</source>
          <target state="translated">一个构造函数。</target>
        </trans-unit>
        <trans-unit id="f1c2c74a3242b5c113a78d6363133d53c47f8c7a" translate="yes" xml:space="preserve">
          <source>A container class which implements automatic horizontal and/or vertical scrolling for a single child component.</source>
          <target state="translated">一个容器类,它实现了单个子组件的自动水平和/或垂直滚动。</target>
        </trans-unit>
        <trans-unit id="bfeb7ff9e9012b81d288e07e149e676bb15c69a9" translate="yes" xml:space="preserve">
          <source>A container class which implements automatic horizontal and/or vertical scrolling for a single child component. The display policy for the scrollbars can be set to:</source>
          <target state="translated">一个容器类,它为单个子组件实现自动水平和/或垂直滚动。滚动条的显示策略可以设置为:。</target>
        </trans-unit>
        <trans-unit id="033a41394c724546f3c08acfb5335c17f8e39383" translate="yes" xml:space="preserve">
          <source>A container for data of a specific primitive type.</source>
          <target state="translated">特定基元类型数据的容器。</target>
        </trans-unit>
        <trans-unit id="0fe5ece952a897ad3f011797cc5800337da1ccf1" translate="yes" xml:space="preserve">
          <source>A container is a component that can contain components and other containers. A container can also have a layout manager that controls the visual placement of components in the container. The AWT package contains several layout manager classes and an interface for building your own layout manager. See Container and LayoutManager for more information.</source>
          <target state="translated">容器是一个可以包含组件和其他容器的组件。一个容器也可以有一个布局管理器,它可以控制容器中组件的可视化放置。AWT包包含了几个布局管理器类和一个用于构建你自己的布局管理器的接口。更多信息请参见 Container 和 LayoutManager。</target>
        </trans-unit>
        <trans-unit id="d301613cbda6d20a56bf5fe3261d32c8415661bf" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">一个可能包含也可能不包含 &lt;code&gt;double&lt;/code&gt; 值的容器对象。</target>
        </trans-unit>
        <trans-unit id="2e040a2204bf84dfc907e22c7186ff1dd00d1f3d" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">一个可能包含也可能不包含 &lt;code&gt;double&lt;/code&gt; 值的容器对象。如果存在值，则 &lt;code&gt;isPresent()&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。如果不存在任何值，则认为该对象</target>
        </trans-unit>
        <trans-unit id="4ff6f48ffb79030c6e6d4e15b3600b41ee558686" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;double&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsDouble()&lt;/code&gt; will return the value.</source>
          <target state="translated">一个可能包含也可能不包含 &lt;code&gt;double&lt;/code&gt; 值的容器对象。如果存在值，则 &lt;code&gt;isPresent()&lt;/code&gt; 将返回 &lt;code&gt;true&lt;/code&gt; ,而 &lt;code&gt;getAsDouble()&lt;/code&gt; 将返回该值。</target>
        </trans-unit>
        <trans-unit id="494737a0966b7218e4ec36fd115c3df7489bf2ab" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">一个可能包含也可能不包含 &lt;code&gt;int&lt;/code&gt; 值的容器对象。</target>
        </trans-unit>
        <trans-unit id="0a04a3c3154a4d845ca222b91180f4f9964d877d" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;int&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsInt()&lt;/code&gt; will return the value.</source>
          <target state="translated">一个可能包含也可能不包含 &lt;code&gt;int&lt;/code&gt; 值的容器对象。如果存在值，则 &lt;code&gt;isPresent()&lt;/code&gt; 将返回 &lt;code&gt;true&lt;/code&gt; ,而 &lt;code&gt;getAsInt()&lt;/code&gt; 将返回该值。</target>
        </trans-unit>
        <trans-unit id="f4dcdc898b7b16e8f53dc7fbd5332c85cd925ef5" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value.</source>
          <target state="translated">可能包含或可能不包含 &lt;code&gt;long&lt;/code&gt; 值的容器对象。</target>
        </trans-unit>
        <trans-unit id="2e8bc20ff92caf071e1a187b92d99c84b7060ce0" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">一个可能包含或可能不包含 &lt;code&gt;long&lt;/code&gt; 值的容器对象。如果存在值，则 &lt;code&gt;isPresent()&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。如果不存在任何值，则认为该对象</target>
        </trans-unit>
        <trans-unit id="7ba6650f4dd8bcb2a89191e9f85ba776ac9fbf51" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a &lt;code&gt;long&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;getAsLong()&lt;/code&gt; will return the value.</source>
          <target state="translated">可能包含或可能不包含 &lt;code&gt;long&lt;/code&gt; 值的容器对象。如果存在值，则 &lt;code&gt;isPresent()&lt;/code&gt; 将返回 &lt;code&gt;true&lt;/code&gt; ,而 &lt;code&gt;getAsLong()&lt;/code&gt; 将返回该值。</target>
        </trans-unit>
        <trans-unit id="5c434ceb61c7062bc7fbbc566df4838fccea2d8a" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-&lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">一个可能包含也可能不包含非 &lt;code&gt;null&lt;/code&gt; 值的容器对象。</target>
        </trans-unit>
        <trans-unit id="5ea105fdcda73f70cb854a64b62b86d90652415a" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-&lt;code&gt;null&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">一个可能包含也可能不包含非 &lt;code&gt;null&lt;/code&gt; 值的容器对象。如果存在值，则 &lt;code&gt;isPresent()&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。如果不存在任何值，则认为该对象</target>
        </trans-unit>
        <trans-unit id="ea0d5d0324a2c3445923b7e686fe31c2a89e78f7" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-null value.</source>
          <target state="translated">一个容器对象,可以包含或不包含一个非空值。</target>
        </trans-unit>
        <trans-unit id="c89988fd4f74ec363ece708cf6ca9597a2151ab0" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain a non-null value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;get()&lt;/code&gt; will return the value.</source>
          <target state="translated">可以包含或不包含非null值的容器对象。如果存在值，则 &lt;code&gt;isPresent()&lt;/code&gt; 将返回 &lt;code&gt;true&lt;/code&gt; ,而 &lt;code&gt;get()&lt;/code&gt; 将返回该值。</target>
        </trans-unit>
        <trans-unit id="8c3f2db677ea0ff39d4e792525d50b18477b99aa" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain an &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">一个可能包含也可能不包含 &lt;code&gt;int&lt;/code&gt; 值的容器对象。</target>
        </trans-unit>
        <trans-unit id="48a83d02c6e3550c5cd54b82f9175944ccf50df2" translate="yes" xml:space="preserve">
          <source>A container object which may or may not contain an &lt;code&gt;int&lt;/code&gt; value. If a value is present, &lt;code&gt;isPresent()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;. If no value is present, the object is considered</source>
          <target state="translated">一个可能包含也可能不包含 &lt;code&gt;int&lt;/code&gt; 值的容器对象。如果存在值，则 &lt;code&gt;isPresent()&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; 。如果不存在任何值，则认为该对象</target>
        </trans-unit>
        <trans-unit id="b91c8230c80b13f05800d49bab2e18616b06eedc" translate="yes" xml:space="preserve">
          <source>A container used to create a multiple-document interface or a virtual desktop.</source>
          <target state="translated">用于创建多文档界面或虚拟桌面的容器。</target>
        </trans-unit>
        <trans-unit id="460e235cc5d693c9143dca60521c64fd21d3afb3" translate="yes" xml:space="preserve">
          <source>A container used to create a multiple-document interface or a virtual desktop. You create &lt;code&gt;JInternalFrame&lt;/code&gt; objects and add them to the &lt;code&gt;JDesktopPane&lt;/code&gt;. &lt;code&gt;JDesktopPane&lt;/code&gt; extends &lt;code&gt;JLayeredPane&lt;/code&gt; to manage the potentially overlapping internal frames. It also maintains a reference to an instance of &lt;code&gt;DesktopManager&lt;/code&gt; that is set by the UI class for the current look and feel (L&amp;amp;F). Note that &lt;code&gt;JDesktopPane&lt;/code&gt; does not support borders.</source>
          <target state="translated">用于创建多文档界面或虚拟桌面的容器。您创建 &lt;code&gt;JInternalFrame&lt;/code&gt; 对象，并将它们添加到 &lt;code&gt;JDesktopPane&lt;/code&gt; 中。 &lt;code&gt;JDesktopPane&lt;/code&gt; 扩展了 &lt;code&gt;JLayeredPane&lt;/code&gt; 以管理可能重叠的内部框架。它还维护对UI类为当前外观（L＆F）设置的 &lt;code&gt;DesktopManager&lt;/code&gt; 实例的引用。请注意， &lt;code&gt;JDesktopPane&lt;/code&gt; 不支持边框。</target>
        </trans-unit>
        <trans-unit id="759245797f4e5d9025f0f817bf669b092afd8bdd" translate="yes" xml:space="preserve">
          <source>A content type consists of a media type (referred to as the primary type), a subtype, and optional parameters. See &lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; for details on the syntax of a MIME type.</source>
          <target state="translated">内容类型由媒体类型（称为主要类型），子类型和可选参数组成。有关MIME类型的语法的详细信息，请参阅&lt;a href=&quot;http://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a07a9ca02d8838c9aabcd8e92f5e7d4ef3600e1d" translate="yes" xml:space="preserve">
          <source>A content type consists of a media type (referred to as the primary type), a subtype, and optional parameters. See &lt;a href=&quot;https://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt; for details on the syntax of a MIME type.</source>
          <target state="translated">内容类型由媒体类型（称为主要类型），子类型和可选参数组成。有关MIME类型的语法的详细信息，请参阅&lt;a href=&quot;https://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="31d867731596f79566c79cb5d48b9bcbf97a9cc3" translate="yes" xml:space="preserve">
          <source>A context consists of name-to-object bindings. The Binding class represents such a binding. It consists of a name and an object. The &lt;code&gt;Context.listBindings()&lt;/code&gt; method returns an enumeration of Binding.</source>
          <target state="translated">上下文由名称到对象的绑定组成。Binding类表示这种绑定。它由一个名称和一个对象组成。所述 &lt;code&gt;Context.listBindings()&lt;/code&gt; 方法返回绑定的枚举。</target>
        </trans-unit>
        <trans-unit id="6fe4f651e32a551af03604ca60b8a21ff254ecfc" translate="yes" xml:space="preserve">
          <source>A context consists of name-to-object bindings. The NameClassPair class represents the name and the class of the bound object. It consists of a name and a string representing the package-qualified class name.</source>
          <target state="translated">一个上下文由名称到对象的绑定组成。NameClassPair 类表示绑定对象的名称和类。它由一个名称和一个表示包限定的类名的字符串组成。</target>
        </trans-unit>
        <trans-unit id="6b1263a6521cddb7203c713b91d8a90e7ac7f9e3" translate="yes" xml:space="preserve">
          <source>A context for resolving URLs with the scheme id &lt;code&gt;scheme&lt;/code&gt;; &lt;code&gt;null&lt;/code&gt; if the factory for creating the context is not found.</source>
          <target state="translated">用方案id &lt;code&gt;scheme&lt;/code&gt; 解析URL的上下文; 如果找不到用于创建上下文的工厂，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b7377c77308502e8c96858c12fe1aaf5cda4abe1" translate="yes" xml:space="preserve">
          <source>A context instance's connection request controls are retrieved using the method &lt;code&gt;getConnectControls()&lt;/code&gt;.</source>
          <target state="translated">使用方法 &lt;code&gt;getConnectControls()&lt;/code&gt; 检索上下文实例的连接请求控件。</target>
        </trans-unit>
        <trans-unit id="7dcb16da6df7e43ac4ec30b2d1186f29508041d6" translate="yes" xml:space="preserve">
          <source>A context instance's request controls are retrieved using the method &lt;code&gt;getRequestControls()&lt;/code&gt;.</source>
          <target state="translated">使用方法 &lt;code&gt;getRequestControls()&lt;/code&gt; 检索上下文实例的请求控件。</target>
        </trans-unit>
        <trans-unit id="b3986a2d2458e187acf1c4e8bd0f8e686f85ea03" translate="yes" xml:space="preserve">
          <source>A control character: &lt;code&gt;[\x00-\x1F\x7F]&lt;/code&gt;</source>
          <target state="translated">控制字符： &lt;code&gt;[\x00-\x1F\x7F]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f98f93af0f8e1282f6442fa10efae582e9be0974" translate="yes" xml:space="preserve">
          <source>A control character: &lt;code&gt;\p{gc=Cc}&lt;/code&gt;</source>
          <target state="translated">控制字符： &lt;code&gt;\p{gc=Cc}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03f0ef9add23fa9fe6cf9ea49f54ef4dd6fddc66" translate="yes" xml:space="preserve">
          <source>A control object created using &lt;code&gt;ctl&lt;/code&gt;; or &lt;code&gt;ctl&lt;/code&gt; if a control object cannot be created using the algorithm described above.</source>
          <target state="translated">使用 &lt;code&gt;ctl&lt;/code&gt; 创建的控制对象；或 &lt;code&gt;ctl&lt;/code&gt; 如果控制对象不能使用上面描述的算法创建。</target>
        </trans-unit>
        <trans-unit id="15fd2bad66ad41394b33f2026df97fb9742abb62" translate="yes" xml:space="preserve">
          <source>A control object from the current input method, or null.</source>
          <target state="translated">来自当前输入法的控制对象,或为空。</target>
        </trans-unit>
        <trans-unit id="a96bcedbc8cade8ee1583d1bef494bb5a4cd2784" translate="yes" xml:space="preserve">
          <source>A control that displays a set of hierarchical data as an outline.</source>
          <target state="translated">一个以大纲形式显示一组层次数据的控件。</target>
        </trans-unit>
        <trans-unit id="c4e331080c956ba6b483e5d9420bef3aff651730" translate="yes" xml:space="preserve">
          <source>A control that displays a set of hierarchical data as an outline. You can find task-oriented documentation and examples of using trees in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">将一组分层数据显示为大纲的控件。您可以在&lt;em&gt;《 Java教程》的&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;如何使用树&lt;/a&gt;&amp;rdquo;一节中找到面向任务的文档和使用树&lt;em&gt;的示例。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59a3b7894251564f988b6e5f53616b037746cc9f" translate="yes" xml:space="preserve">
          <source>A control that displays a set of hierarchical data as an outline. You can find task-oriented documentation and examples of using trees in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;How to Use Trees&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">将一组分层数据显示为大纲的控件。您可以在&lt;em&gt;《 Java教程》的&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tree.html&quot;&gt;如何使用树&lt;/a&gt;&amp;rdquo;一节中找到面向任务的文档和使用树&lt;em&gt;的示例。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c76468063f6a347a02b2e829bca94d83e038db4" translate="yes" xml:space="preserve">
          <source>A controller that controls the newly created layer</source>
          <target state="translated">控制新创建层的控制器</target>
        </trans-unit>
        <trans-unit id="e8b5bb1e0993770f9414abaef919d2a5802810a9" translate="yes" xml:space="preserve">
          <source>A convenience class for simplifying interaction with TIFF native image metadata.</source>
          <target state="translated">一个方便的类,用于简化与TIFF本地图像元数据的交互。</target>
        </trans-unit>
        <trans-unit id="1a75c57f730d220aff1a3d906e24e8f446b9eb34" translate="yes" xml:space="preserve">
          <source>A convenience class for simplifying interaction with TIFF native image metadata. A TIFF image metadata tree represents an Image File Directory (IFD) from a TIFF 6.0 stream. An IFD consists of a number of IFD Entries each of which associates an identifying tag number with a compatible value. A &lt;code&gt;TIFFDirectory&lt;/code&gt; instance corresponds to an IFD and contains a set of &lt;a href=&quot;tifffield&quot;&gt;&lt;code&gt;TIFFField&lt;/code&gt;&lt;/a&gt;s each of which corresponds to an IFD Entry in the IFD.</source>
          <target state="translated">一个便利类，用于简化与TIFF本机图像元数据的交互。TIFF图像元数据树表示TIFF 6.0流中的图像文件目录（IFD）。IFD由多个IFD条目组成，每个IFD条目都将标识标签号与兼容值相关联。甲 &lt;code&gt;TIFFDirectory&lt;/code&gt; 实例对应的IFD和包含一组&lt;a href=&quot;tifffield&quot;&gt; &lt;code&gt;TIFFField&lt;/code&gt; &lt;/a&gt; s各自对应的一个IFD条目在IFD。</target>
        </trans-unit>
        <trans-unit id="f8a647654bd9827401aa4fa86ac7705f850e64b2" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(av, null)&lt;/code&gt;.</source>
          <target state="translated">一个等效于 &lt;code&gt;v.visit(av, null)&lt;/code&gt; 便捷方法。</target>
        </trans-unit>
        <trans-unit id="16a529aa63d7b6f13c0e894161babc3d250fb7d3" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(e, null)&lt;/code&gt;.</source>
          <target state="translated">一个等效于 &lt;code&gt;v.visit(e, null)&lt;/code&gt; 便捷方法。</target>
        </trans-unit>
        <trans-unit id="ebffac1d76e29602ecbccd02cb486db670466a22" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;v.visit(t, null)&lt;/code&gt;.</source>
          <target state="translated">一个等效于 &lt;code&gt;v.visit(t, null)&lt;/code&gt; 便捷方法。</target>
        </trans-unit>
        <trans-unit id="c7e2bb4b27f4ec5751c6bdc3e1a96d4fc5026a5b" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(av, null)&lt;/code&gt;.</source>
          <target state="translated">一种等效于 &lt;code&gt;visit(av, null)&lt;/code&gt; 便捷方法。</target>
        </trans-unit>
        <trans-unit id="e027c55d6f63aefa9109af389bfa002788c9fa27" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(e, null)&lt;/code&gt;.</source>
          <target state="translated">一种等效于 &lt;code&gt;visit(e, null)&lt;/code&gt; 便捷方法。</target>
        </trans-unit>
        <trans-unit id="f950fa78fa10c16997c1f6fbd3be463e7b7ace85" translate="yes" xml:space="preserve">
          <source>A convenience method equivalent to &lt;code&gt;visit(t, null)&lt;/code&gt;.</source>
          <target state="translated">一种等效于 &lt;code&gt;visit(t, null)&lt;/code&gt; 便捷方法。</target>
        </trans-unit>
        <trans-unit id="99b2a2e379217d8a0d4b8ef3dd5abf7e7a7ebf16" translate="yes" xml:space="preserve">
          <source>A convenience method for looking up a property value.</source>
          <target state="translated">一种方便的查询房产价值的方法。</target>
        </trans-unit>
        <trans-unit id="cbc44c2a4d64a62243581006ccd8548476d7bd75" translate="yes" xml:space="preserve">
          <source>A convenience method for looking up a property value. It is equivalent to:</source>
          <target state="translated">查询房产价值的一种方便方法。它相当于:</target>
        </trans-unit>
        <trans-unit id="dd485d4e5579dedc9b9b1bfb030340f3998e0248" translate="yes" xml:space="preserve">
          <source>A convenience method for storing up a property value.</source>
          <target state="translated">一种存储属性值的方便方法。</target>
        </trans-unit>
        <trans-unit id="1e18895b1e56a88f711cf08b63e41a03fe2225fc" translate="yes" xml:space="preserve">
          <source>A convenience method for storing up a property value. It is equivalent to:</source>
          <target state="translated">一种存储属性值的方便方法。它相当于:</target>
        </trans-unit>
        <trans-unit id="54ae1ece57ee9ffdae9f1667cbe9a12df084c4eb" translate="yes" xml:space="preserve">
          <source>A convenience method that acts as if &lt;code&gt;LSSerializer.write&lt;/code&gt; was called with a &lt;code&gt;LSOutput&lt;/code&gt; with no encoding specified and &lt;code&gt;LSOutput.systemId&lt;/code&gt; set to the &lt;code&gt;uri&lt;/code&gt; argument.</source>
          <target state="translated">一种方便的方法，就像在未指定编码且 &lt;code&gt;LSOutput.systemId&lt;/code&gt; 设置为 &lt;code&gt;uri&lt;/code&gt; 参数的 &lt;code&gt;LSSerializer.write&lt;/code&gt; 下调用 &lt;code&gt;LSOutput&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7c27733947ef3a444f59481b63f3bb1fc034a487" translate="yes" xml:space="preserve">
          <source>A convenience method that calls &lt;code&gt;read(b, 0, b.length)&lt;/code&gt;.</source>
          <target state="translated">调用 &lt;code&gt;read(b, 0, b.length)&lt;/code&gt; 便捷方法。</target>
        </trans-unit>
        <trans-unit id="807e70668dbaedff20cf9b8a517a79a6404816d3" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in mode &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt;, with no header or footer text.</source>
          <target state="translated">一种方便的方法，该方法显示一个打印对话框，然后以 &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; 模式打印此 &lt;code&gt;JTable&lt;/code&gt; ，不包含页眉或页脚文本。</target>
        </trans-unit>
        <trans-unit id="ceedfd41667c1bda072569a382c479a19e63d68e" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in mode &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt;, with no header or footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">一种方便的方法，该方法显示一个打印对话框，然后以 &lt;code&gt;PrintMode.FIT_WIDTH&lt;/code&gt; 模式打印此 &lt;code&gt;JTable&lt;/code&gt; ，不包含页眉或页脚文本。在打印期间，将显示一个带有进度条选项的模式进度对话框。</target>
        </trans-unit>
        <trans-unit id="6223c755bd1a3f99a9d9956cc7466b6caf4b3fcb" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with no header or footer text.</source>
          <target state="translated">一种方便的方法，该方法显示打印对话框，然后以给定的打印模式打印此 &lt;code&gt;JTable&lt;/code&gt; ，而没有页眉或页脚文本。</target>
        </trans-unit>
        <trans-unit id="877633eadeea377c10e3fbe8b2d649f1bd5706e3" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with no header or footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">一种方便的方法，该方法显示打印对话框，然后以给定的打印模式打印此 &lt;code&gt;JTable&lt;/code&gt; ，而没有页眉或页脚文本。在打印期间，将显示一个带有进度条选项的模式进度对话框。</target>
        </trans-unit>
        <trans-unit id="ecfe982eaffed33abd7f4d8a496ed6b0dcae69c5" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with the specified header and footer text.</source>
          <target state="translated">一种方便的方法，该方法显示一个打印对话框，然后以给定的打印模式使用指定的页眉和页脚文本来打印此 &lt;code&gt;JTable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="797ddd61d31da4855ab5fb584acf4b15d2543b26" translate="yes" xml:space="preserve">
          <source>A convenience method that displays a printing dialog, and then prints this &lt;code&gt;JTable&lt;/code&gt; in the given printing mode, with the specified header and footer text. A modal progress dialog, with an abort option, will be shown for the duration of printing.</source>
          <target state="translated">一种方便的方法，该方法显示一个打印对话框，然后以给定的打印模式使用指定的页眉和页脚文本来打印此 &lt;code&gt;JTable&lt;/code&gt; 。在打印期间，将显示一个带有进度条选项的模式进度对话框。</target>
        </trans-unit>
        <trans-unit id="283a99263b3a7a4ec3eb5efe9c38b580f6c5ced4" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a byte.</source>
          <target state="translated">一个以字节形式返回参数的方便方法。</target>
        </trans-unit>
        <trans-unit id="28c9fbd2ef30bbeae2eb3befcc763aba1fa2e0eb" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a byte. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Byte&lt;/code&gt;.</source>
          <target state="translated">一种将参数作为字节返回的便捷方法。如果参数为 &lt;code&gt;null&lt;/code&gt; 或不是 &lt;code&gt;Byte&lt;/code&gt; ,则引发异常。</target>
        </trans-unit>
        <trans-unit id="ebd384ff0ca5f30a5e0a8c9ad6731c18938a2de7" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a char.</source>
          <target state="translated">一个方便的方法,将一个参数以char的形式返回。</target>
        </trans-unit>
        <trans-unit id="943c460c5961c35f10136d79eecd64420524f821" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a char. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Character&lt;/code&gt;.</source>
          <target state="translated">一种将参数作为char返回的便捷方法。如果参数为 &lt;code&gt;null&lt;/code&gt; 或不是 &lt;code&gt;Character&lt;/code&gt; ,则抛出异常。</target>
        </trans-unit>
        <trans-unit id="9299b862be9cb5f48ba998965def8a106f265b48" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a double.</source>
          <target state="translated">一个方便的方法,将一个参数返回为双数。</target>
        </trans-unit>
        <trans-unit id="0a4928bb86282825c0d0349c047c0c7f91b12e57" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a double. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Double&lt;/code&gt;.</source>
          <target state="translated">一种将参数返回为double的便捷方法。如果参数为 &lt;code&gt;null&lt;/code&gt; 或不是 &lt;code&gt;Double&lt;/code&gt; ,则抛出异常。</target>
        </trans-unit>
        <trans-unit id="7d714cdbfd4c754d4cfadc5e295c8e601f417c1d" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a float.</source>
          <target state="translated">一个方便的方法,将一个参数返回为float。</target>
        </trans-unit>
        <trans-unit id="6b8f4bcda4d37d4b73d947a9674d1b53d644b757" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a float. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Float&lt;/code&gt;.</source>
          <target state="translated">一种将参数返回为浮点数的便捷方法。如果参数为 &lt;code&gt;null&lt;/code&gt; 或不是 &lt;code&gt;Float&lt;/code&gt; ,则会引发异常。</target>
        </trans-unit>
        <trans-unit id="5d3c86fa44ad2b33e64227671b292e4b240c5a5d" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a long.</source>
          <target state="translated">一个方便的方法,将一个参数返回为long。</target>
        </trans-unit>
        <trans-unit id="43bc7bfca54e042222983f9e48f68745a5dfbb77" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a long. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Long&lt;/code&gt;.</source>
          <target state="translated">一种方便的方法来返回一个long形参。如果参数为 &lt;code&gt;null&lt;/code&gt; 或不是 &lt;code&gt;Long&lt;/code&gt; ,则抛出异常。</target>
        </trans-unit>
        <trans-unit id="184db79e285fbcabdf3665ef62914ed4d5295fd1" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a short.</source>
          <target state="translated">一个方便的方法,将一个参数作为一个短参数返回。</target>
        </trans-unit>
        <trans-unit id="1b4b1ce8266727e88ff4a4a2856fea1a2e381801" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as a short. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not a &lt;code&gt;Short&lt;/code&gt;.</source>
          <target state="translated">一种将参数返回为short的便捷方法。如果参数为 &lt;code&gt;null&lt;/code&gt; 或不是 &lt;code&gt;Short&lt;/code&gt; ,则抛出异常。</target>
        </trans-unit>
        <trans-unit id="48b5cd060eef9c2b39dca326ba801f578061c0e4" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as an int.</source>
          <target state="translated">一个方便的方法,将参数返回为一个int。</target>
        </trans-unit>
        <trans-unit id="532f65b1b7e14711268e9c70a498ade80cd68042" translate="yes" xml:space="preserve">
          <source>A convenience method to return a parameter as an int. An exception is thrown if the parameter is &lt;code&gt;null&lt;/code&gt; or not an &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">一种将参数返回为int的便捷方法。如果参数为 &lt;code&gt;null&lt;/code&gt; 或不是 &lt;code&gt;Integer&lt;/code&gt; ,则会引发异常。</target>
        </trans-unit>
        <trans-unit id="d111cbd6b41c2ec780244806b0efcc6e09e34206" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's execute permission for this abstract pathname.</source>
          <target state="translated">一个方便的方法,用于设置所有者对这个抽象路径名的执行权限。</target>
        </trans-unit>
        <trans-unit id="b79d96520d2a2823d7650d8196b0afa730e7bde5" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's execute permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to execute files that are not marked executable.</source>
          <target state="translated">一个方便的方法,用于设置所有者对这个抽象路径名的执行权限。在某些平台上,可能会以特殊的权限启动Java虚拟机,允许它执行没有标记为可执行的文件。</target>
        </trans-unit>
        <trans-unit id="9c5f74355de733dd0c77f822b18ab1093d5053f8" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's read permission for this abstract pathname.</source>
          <target state="translated">一个方便的方法,用于设置所有者对这个抽象路径名的读取权限。</target>
        </trans-unit>
        <trans-unit id="c61e898f162a2725342347bb011438457029df56" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's read permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that are marked as unreadable.</source>
          <target state="translated">一个方便的方法,用于设置所有者对这个抽象路径名的读取权限。在某些平台上,可能会以特殊的权限启动Java虚拟机,允许它读取被标记为不可读的文件。</target>
        </trans-unit>
        <trans-unit id="8522c8eecf8c188ae3f5c7af8d515d84ecf53638" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's read permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that that are marked as unreadable.</source>
          <target state="translated">一个方便的方法,用于设置所有者对这个抽象路径名的读取权限。在某些平台上,可以用特殊的权限启动Java虚拟机,允许它读取标记为不可读的文件。</target>
        </trans-unit>
        <trans-unit id="7ccae16f4c65f4ffb387b6a92877cb7bdde73741" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's write permission for this abstract pathname.</source>
          <target state="translated">一个方便的方法,用于设置所有者对这个抽象路径名的写入权限。</target>
        </trans-unit>
        <trans-unit id="70adbfa143948dbfbe2a2079d23a3c700d25e391" translate="yes" xml:space="preserve">
          <source>A convenience method to set the owner's write permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that disallow write operations.</source>
          <target state="translated">一个方便的方法,用于设置所有者对这个抽象路径名的写权限。在某些平台上,可能会以特殊的权限启动Java虚拟机,允许它修改不允许进行写操作的文件。</target>
        </trans-unit>
        <trans-unit id="8390e30450358a6ea70064ba0435f38800aed856" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this console's output stream using the specified format string and arguments.</source>
          <target state="translated">一个方便的方法,使用指定的格式字符串和参数将一个格式化的字符串写入这个控制台的输出流。</target>
        </trans-unit>
        <trans-unit id="f3a608167c200beb78de0abed90f0e9a8f45921d" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this output stream using the specified format string and arguments.</source>
          <target state="translated">一个方便的方法,使用指定的格式字符串和参数将一个格式化的字符串写入这个输出流。</target>
        </trans-unit>
        <trans-unit id="057f452c5522dff43c52c19081fba580e4096f04" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this writer using the specified format string and arguments.</source>
          <target state="translated">一个方便的方法,使用指定的格式字符串和参数向这个写入器写入一个格式化的字符串。</target>
        </trans-unit>
        <trans-unit id="8cf3d0db1f2e456a656fc16b71edb621d58b8d0c" translate="yes" xml:space="preserve">
          <source>A convenience method to write a formatted string to this writer using the specified format string and arguments. If automatic flushing is enabled, calls to this method will flush the output buffer.</source>
          <target state="translated">一个方便的方法,使用指定的格式字符串和参数将格式化的字符串写入该写入器。如果启用了自动刷新功能,调用本方法将刷新输出缓冲区。</target>
        </trans-unit>
        <trans-unit id="e712b86666e15790d81bace0d8ef4d573f4eea97" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform page setup dialog.</source>
          <target state="translated">一个显示跨平台页面设置对话框的方便方法。</target>
        </trans-unit>
        <trans-unit id="60d87dcf83ee6f1ac872e3217d721c3ca77b0d27" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform page setup dialog. The choices available will reflect the print service currently set on this PrinterJob.</source>
          <target state="translated">一个方便的方法,显示一个跨平台的页面设置对话框。可用的选择将反映出当前在该打印任务上设置的打印服务。</target>
        </trans-unit>
        <trans-unit id="98a09ce2aa2369702097696923a831c4f66ccf72" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform print dialog for all services which are capable of printing 2D graphics using the &lt;code&gt;Pageable&lt;/code&gt; interface.</source>
          <target state="translated">一种便利的方法，它为所有能够使用 &lt;code&gt;Pageable&lt;/code&gt; 界面打印2D图形的服务显示一个跨平台的打印对话框。</target>
        </trans-unit>
        <trans-unit id="2fcfb06ab6fe3bd2ebd0ab4931beb49dc7099e60" translate="yes" xml:space="preserve">
          <source>A convenience method which displays a cross-platform print dialog for all services which are capable of printing 2D graphics using the &lt;code&gt;Pageable&lt;/code&gt; interface. The selected printer when the dialog is initially displayed will reflect the print service currently attached to this print job. If the user changes the print service, the PrinterJob will be updated to reflect this, unless the user cancels the dialog. As well as allowing the user to select the destination printer, the user can also select values of various print request attributes.</source>
          <target state="translated">一种便利的方法，它为所有能够使用 &lt;code&gt;Pageable&lt;/code&gt; 界面打印2D图形的服务显示一个跨平台的打印对话框。最初显示对话框时，所选打印机将反映当前附加到该打印作业的打印服务。如果用户更改了打印服务，除非用户取消对话框，否则PrinterJob将被更新以反映这一点。除了允许用户选择目标打印机外，用户还可以选择各种打印请求属性的值。</target>
        </trans-unit>
        <trans-unit id="bc3c50b2d142242dac51d5fcf3d231fce606de43" translate="yes" xml:space="preserve">
          <source>A convenience method which locates factories for stream print services which can image 2D graphics.</source>
          <target state="translated">一种方便的方法,可以为流式打印服务定位工厂,可以对2D图形进行成像。</target>
        </trans-unit>
        <trans-unit id="d447e3392051f85c24ed40199bf6fe4c3e94a3c3" translate="yes" xml:space="preserve">
          <source>A convenience method which locates factories for stream print services which can image 2D graphics. Sample usage :</source>
          <target state="translated">是一种方便的方法,它可以为能够对二维图形进行成像的流式打印服务定位工厂。使用示例。</target>
        </trans-unit>
        <trans-unit id="672d84b5e5ba08b84c1c7afb2749463b7f8e63db" translate="yes" xml:space="preserve">
          <source>A convenience method which looks up 2D print services.</source>
          <target state="translated">一种方便的方法,可以查询二维打印服务。</target>
        </trans-unit>
        <trans-unit id="cb4aa5666c349dbc23740d5c5e9867260211490c" translate="yes" xml:space="preserve">
          <source>A convenience method which looks up 2D print services. Services returned from this method may be installed on &lt;code&gt;PrinterJob&lt;/code&gt;s which support print services. Calling this method is equivalent to calling &lt;a href=&quot;../../../javax/print/printservicelookup#lookupPrintServices(javax.print.DocFlavor,javax.print.attribute.AttributeSet)&quot;&gt;&lt;code&gt;PrintServiceLookup.lookupPrintServices()&lt;/code&gt;&lt;/a&gt; and specifying a Pageable DocFlavor.</source>
          <target state="translated">查找2D打印服务的便捷方法。从此方法返回的服务可以安装在支持打印服务的 &lt;code&gt;PrinterJob&lt;/code&gt; 上。调用此方法等效于调用&lt;a href=&quot;../../../javax/print/printservicelookup#lookupPrintServices(javax.print.DocFlavor,javax.print.attribute.AttributeSet)&quot;&gt; &lt;code&gt;PrintServiceLookup.lookupPrintServices()&lt;/code&gt; &lt;/a&gt;并指定一个Pageable DocFlavor。</target>
        </trans-unit>
        <trans-unit id="66abb527922f743b62aa7e70858db1aa029ed263" translate="yes" xml:space="preserve">
          <source>A convenience print method that displays a print dialog, and then prints this &lt;code&gt;JTextComponent&lt;/code&gt; in</source>
          <target state="translated">一个方便的印刷方法，其中显示的打印对话框，然后打印这个 &lt;code&gt;JTextComponent&lt;/code&gt; 在</target>
        </trans-unit>
        <trans-unit id="64bde2928b505165975e0f37a6c2cda5a9820208" translate="yes" xml:space="preserve">
          <source>A convenient shortcut for locating elements is the method &lt;a href=&quot;#getElement(java.lang.String)&quot;&gt;&lt;code&gt;getElement(String)&lt;/code&gt;&lt;/a&gt;; returns an element whose &lt;code&gt;ID&lt;/code&gt; attribute matches the specified value. For example, &lt;code&gt;d.getElement(&quot;BOX&quot;)&lt;/code&gt; returns the &lt;code&gt;DIV&lt;/code&gt; element.</source>
          <target state="translated">&lt;a href=&quot;#getElement(java.lang.String)&quot;&gt; &lt;code&gt;getElement(String)&lt;/code&gt; &lt;/a&gt;方法是查找元素的便捷捷径。返回其 &lt;code&gt;ID&lt;/code&gt; 属性与指定值匹配的元素。例如， &lt;code&gt;d.getElement(&quot;BOX&quot;)&lt;/code&gt; 返回 &lt;code&gt;DIV&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="3a1a8039aac719e599728c0c27428d151c53c8d8" translate="yes" xml:space="preserve">
          <source>A cookie to store may or may not be associated with an URI. If it is not associated with an URI, the cookie's domain and path attribute will indicate where it comes from. If it is associated with an URI and its domain and path attribute are not specified, given URI will indicate where this cookie comes from.</source>
          <target state="translated">要存储的cookie可能与URI相关联,也可能不相关联。如果它不与URI相关联,那么cookie的域和路径属性将表明它来自哪里。如果它与URI相关联,并且它的域和路径属性没有被指定,那么给定的URI将指示这个cookie的来源。</target>
        </trans-unit>
        <trans-unit id="6ed2cdafa04c759296cf982bd9190b629e1e1a1f" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;name&lt;/code&gt; is made and stored. Subsequent changes to &lt;code&gt;name&lt;/code&gt; do not affect the copy in this NamingException and vice versa.</source>
          <target state="translated">会创建并存储 &lt;code&gt;name&lt;/code&gt; 的副本。对 &lt;code&gt;name&lt;/code&gt; 后续更改不会影响此NamingException中的副本，反之亦然。</target>
        </trans-unit>
        <trans-unit id="847e6f4959462c58ea8ac27a4387b6518797a9bd" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;name&lt;/code&gt; is made and stored. Subsequent changes to &lt;code&gt;name&lt;/code&gt; does not affect the copy in this NamingException and vice versa.</source>
          <target state="translated">制作并存储 &lt;code&gt;name&lt;/code&gt; 的副本。随后对 &lt;code&gt;name&lt;/code&gt; 更改不会影响此NamingException中的副本，反之亦然。</target>
        </trans-unit>
        <trans-unit id="2014e4f257019657ca846cfb69be1eedec61a26e" translate="yes" xml:space="preserve">
          <source>A copy of &lt;code&gt;newName&lt;/code&gt; is made and stored. Subsequent changes to &lt;code&gt;name&lt;/code&gt; does not affect the copy in this NamingException and vice versa.</source>
          <target state="translated">创建并存储 &lt;code&gt;newName&lt;/code&gt; 的副本。随后对 &lt;code&gt;name&lt;/code&gt; 更改不会影响此NamingException中的副本，反之亦然。</target>
        </trans-unit>
        <trans-unit id="d405432971fb5d5bd4d9655c00ba110cf9164761" translate="yes" xml:space="preserve">
          <source>A copy of the certificates array, or null if there is none.</source>
          <target state="translated">证书数组的副本,如果没有,则为空。</target>
        </trans-unit>
        <trans-unit id="2c53b1d71e76fb7f9999eb4ea68630428eca0196" translate="yes" xml:space="preserve">
          <source>A copy of the code signer array, or null if there is none.</source>
          <target state="translated">代码签名者数组的副本,如果没有,则为空。</target>
        </trans-unit>
        <trans-unit id="d12b5b76ae33b8ff518231f4bdf080025e7d1ecc" translate="yes" xml:space="preserve">
          <source>A copy of the current quantization table.</source>
          <target state="translated">当前量化表的副本。</target>
        </trans-unit>
        <trans-unit id="39726b352731b62ca6b918622ee3ca622b5b8a86" translate="yes" xml:space="preserve">
          <source>A copy of the date or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">日期的副本,如果标识符没有映射到为该定时器MBean注册的任何定时器通知,则为空。</target>
        </trans-unit>
        <trans-unit id="95671ff38df1ecf38192edcde87daa005a34113e" translate="yes" xml:space="preserve">
          <source>A copy of the flag indicating whether a periodic notification is executed at</source>
          <target state="translated">标志的副本,表明是否在以下时间执行定期通知:</target>
        </trans-unit>
        <trans-unit id="2d2d2301896bb87bf4110f7f9035139f0077d8a5" translate="yes" xml:space="preserve">
          <source>A copy of the period or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">如果标识符没有映射到为该定时器MBean注册的任何定时器通知,则为周期的副本或空。</target>
        </trans-unit>
        <trans-unit id="7162e1527ed5572f6cb24373b5f74999ffaf9db9" translate="yes" xml:space="preserve">
          <source>A copy of the remaining number of occurrences or null if the identifier is not mapped to any timer notification registered for this timer MBean.</source>
          <target state="translated">如果标识符没有映射到为该定时器MBean注册的任何定时器通知,则为剩余出现次数的副本或空。</target>
        </trans-unit>
        <trans-unit id="50876ec5fa35a1c18223c83324392c638b888998" translate="yes" xml:space="preserve">
          <source>A copy of the set of output properties in effect for the next transformation.</source>
          <target state="translated">下一次变换时有效的输出属性集的副本。</target>
        </trans-unit>
        <trans-unit id="67421ae13fd23f4c24e8887b04d367966e5e8324" translate="yes" xml:space="preserve">
          <source>A copy of the specified enum set.</source>
          <target state="translated">指定的枚举集的副本。</target>
        </trans-unit>
        <trans-unit id="df7838b154197b11591455e756b04860d754eddc" translate="yes" xml:space="preserve">
          <source>A copy of the this LDAP name.</source>
          <target state="translated">这个LDAP名称的副本。</target>
        </trans-unit>
        <trans-unit id="ef57a052b407fe7cec8a98762eedf987fe6eb85f" translate="yes" xml:space="preserve">
          <source>A copy of this</source>
          <target state="translated">本文件的副本</target>
        </trans-unit>
        <trans-unit id="f05780f73bdf8cfeaf60a3f5d18215bea1164a3c" translate="yes" xml:space="preserve">
          <source>A corner component will only be visible if there is an empty space in that corner for it to exist in. For example, consider a component set into the top right corner of a scroll pane with a column header. If the scroll pane's vertical scrollbar is not present, perhaps because the view component hasn't grown large enough to require it, then the corner component will not be shown (since there is no empty space in that corner created by the meeting of the header and vertical scroll bar). Forcing the scroll bar to always be shown, using &lt;code&gt;setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_ALWAYS)&lt;/code&gt;, will ensure that the space for the corner component always exists.</source>
          <target state="translated">仅在角落组件中存在一个空白处时，该角落组件才可见。例如，考虑一个设置在带有列标题的滚动窗格右上角的组件。如果不存在滚动窗格的垂直滚动条，则可能是由于视图组件的尺寸不够大而无法使用，因此将不显示拐角组件（因为在该拐角处没有通过标题会议创建的空白空间）和垂直滚动条）。使用 &lt;code&gt;setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_ALWAYS)&lt;/code&gt; 强制始终显示滚动条，将确保角组件的空间始终存在。</target>
        </trans-unit>
        <trans-unit id="006ad8eae957fdfb71c138d6dee58128135c8d4f" translate="yes" xml:space="preserve">
          <source>A correct &lt;code&gt;ListSelectionModel&lt;/code&gt; implementation notifies the set of &lt;code&gt;javax.swing.event.ListSelectionListener&lt;/code&gt;s that have been added to it each time a change to the selection occurs. These changes are characterized by a &lt;code&gt;javax.swing.event.ListSelectionEvent&lt;/code&gt;, which identifies the range of the selection change.</source>
          <target state="translated">每次选择更改发生更改时，正确的 &lt;code&gt;ListSelectionModel&lt;/code&gt; 实现都会通知已添加到其中的 &lt;code&gt;javax.swing.event.ListSelectionListener&lt;/code&gt; 的集合。这些更改的特征是 &lt;code&gt;javax.swing.event.ListSelectionEvent&lt;/code&gt; ，它标识选择更改的范围。</target>
        </trans-unit>
        <trans-unit id="45b413993b1520d780fb987e3d90b52cd11ab28e" translate="yes" xml:space="preserve">
          <source>A correct way to write the addSource function is to clone the source Vector:</source>
          <target state="translated">写addSource函数的正确方法是克隆源Vector。</target>
        </trans-unit>
        <trans-unit id="bfe0b7d026c71e8963a98d7d535863e14aaad2cb" translate="yes" xml:space="preserve">
          <source>A counter monitor sends a &lt;a href=&quot;monitornotification#THRESHOLD_VALUE_EXCEEDED&quot;&gt;&lt;code&gt;threshold
 notification&lt;/code&gt;&lt;/a&gt; when the value of the counter reaches or exceeds a threshold known as the comparison level. The notify flag must be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">当计数器的值达到或超过称为比较级别的&lt;a href=&quot;monitornotification#THRESHOLD_VALUE_EXCEEDED&quot;&gt; &lt;code&gt;threshold notification&lt;/code&gt; &lt;/a&gt;时，计数器监视器会发送阈值通知。notify标志必须设置为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5aa116cd195f41d88b93e7e05e33512e16c94f4" translate="yes" xml:space="preserve">
          <source>A counting semaphore.</source>
          <target state="translated">数的旗语。</target>
        </trans-unit>
        <trans-unit id="5f0f0f0344e5f8679592b34bede9e77639210058" translate="yes" xml:space="preserve">
          <source>A counting semaphore. Conceptually, a semaphore maintains a set of permits. Each &lt;a href=&quot;#acquire()&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; blocks if necessary until a permit is available, and then takes it. Each &lt;a href=&quot;#release()&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; adds a permit, potentially releasing a blocking acquirer. However, no actual permit objects are used; the &lt;code&gt;Semaphore&lt;/code&gt; just keeps a count of the number available and acts accordingly.</source>
          <target state="translated">计数信号量。从概念上讲，信号量维护一组许可证。如有必要，每个&lt;a href=&quot;#acquire()&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; 会&lt;/a&gt;阻塞，直到获得许可为止，然后再获取许可。每个&lt;a href=&quot;#release()&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;添加一个许可，有可能释放阻塞获取者。但是，没有使用实际的许可对象。该 &lt;code&gt;Semaphore&lt;/code&gt; 只是不断数量的计数可用，采取相应的行动。</target>
        </trans-unit>
        <trans-unit id="1878569fa082444cb799d4d4472ca8f08f05481f" translate="yes" xml:space="preserve">
          <source>A counting semaphore. Conceptually, a semaphore maintains a set of permits. Each &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; blocks if necessary until a permit is available, and then takes it. Each &lt;a href=&quot;semaphore#release--&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; adds a permit, potentially releasing a blocking acquirer. However, no actual permit objects are used; the &lt;code&gt;Semaphore&lt;/code&gt; just keeps a count of the number available and acts accordingly.</source>
          <target state="translated">计数信号量。从概念上讲，信号量维护一组许可证。如有必要，每个&lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt;阻塞，直到获得许可为止，然后再获取许可。每个&lt;a href=&quot;semaphore#release--&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt;添加一个许可，有可能释放阻塞获取者。但是，没有使用实际的许可对象。该 &lt;code&gt;Semaphore&lt;/code&gt; 只是不断数量的计数可用，采取相应的行动。</target>
        </trans-unit>
        <trans-unit id="7ef50c2f78174c7e3ff2ae341386d9693f14a6a2" translate="yes" xml:space="preserve">
          <source>A cover for HTMLEditorKit.insertHTML.</source>
          <target state="translated">HTMLEditorKit.insertHTML的封面。</target>
        </trans-unit>
        <trans-unit id="4b660728216539f39406aedd92d8cf8abfbfdc29" translate="yes" xml:space="preserve">
          <source>A cover for HTMLEditorKit.insertHTML. If an exception it thrown it is wrapped in a RuntimeException and thrown.</source>
          <target state="translated">HTMLEditorKit.insertHTML的一个掩护。如果出现异常,则会被封装在一个RuntimeException中并被抛出。</target>
        </trans-unit>
        <trans-unit id="17a6af52f060965e86c67aebd554d45e863130ac" translate="yes" xml:space="preserve">
          <source>A cryptographic service is always associated with a particular algorithm or type. For example, a digital signature service is always associated with a particular algorithm (e.g., DSA), and a CertificateFactory service is always associated with a particular certificate type (e.g., X.509).</source>
          <target state="translated">密码服务总是与特定的算法或类型相关联。例如,数字签名服务总是与特定的算法(如DSA)相关联,而证书制造服务总是与特定的证书类型(如X.509)相关联。</target>
        </trans-unit>
        <trans-unit id="3d49d8541edd780589e4ca07657ecf84fd361175" translate="yes" xml:space="preserve">
          <source>A cryptographically strong random number minimally complies with the statistical random number generator tests specified in &lt;a href=&quot;http://csrc.nist.gov/cryptval/140-2.htm&quot;&gt; &lt;i&gt;FIPS 140-2, Security Requirements for Cryptographic Modules&lt;/i&gt;&lt;/a&gt;, section 4.9.1. Additionally, SecureRandom must produce non-deterministic output. Therefore any seed material passed to a SecureRandom object must be unpredictable, and all SecureRandom output sequences must be cryptographically strong, as described in &lt;a href=&quot;http://www.ietf.org/rfc/rfc1750.txt&quot;&gt; &lt;i&gt;RFC 1750: Randomness Recommendations for Security&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">加密强度高的随机数至少符合&lt;a href=&quot;http://csrc.nist.gov/cryptval/140-2.htm&quot;&gt;&lt;i&gt;FIPS 140-2&amp;ldquo;加密模块的安全性要求&amp;rdquo;&lt;/i&gt;&lt;/a&gt;第4.9.1节中指定的统计随机数生成器测试。此外，SecureRandom必须产生不确定的输出。因此，传递给SecureRandom对象的任何种子材料都必须不可预测，并且所有SecureRandom输出序列必须具有加密强度，如&lt;a href=&quot;http://www.ietf.org/rfc/rfc1750.txt&quot;&gt;&lt;i&gt;RFC 1750：安全性随机性建议中所述&lt;/i&gt;&lt;/a&gt;。 &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="00cd8fbb64796f31c2a59103935ef4a790cae1ba" translate="yes" xml:space="preserve">
          <source>A cryptographically strong random number minimally complies with the statistical random number generator tests specified in &lt;a href=&quot;http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf&quot;&gt; &lt;i&gt;FIPS 140-2, Security Requirements for Cryptographic Modules&lt;/i&gt;&lt;/a&gt;, section 4.9.1. Additionally, &lt;code&gt;SecureRandom&lt;/code&gt; must produce non-deterministic output. Therefore any seed material passed to a &lt;code&gt;SecureRandom&lt;/code&gt; object must be unpredictable, and all &lt;code&gt;SecureRandom&lt;/code&gt; output sequences must be cryptographically strong, as described in &lt;a href=&quot;http://tools.ietf.org/html/rfc4086&quot;&gt; &lt;i&gt;RFC 4086: Randomness Requirements for Security&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">加密强度高的随机数至少符合&lt;a href=&quot;http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf&quot;&gt;&lt;i&gt;FIPS 140-2&amp;ldquo;加密模块的安全性要求&amp;rdquo;&lt;/i&gt;&lt;/a&gt;第4.9.1节中指定的统计随机数生成器测试。此外， &lt;code&gt;SecureRandom&lt;/code&gt; 必须产生不确定的输出。因此，传递给 &lt;code&gt;SecureRandom&lt;/code&gt; 对象的任何种子材料都必须是不可预测的，并且所有 &lt;code&gt;SecureRandom&lt;/code&gt; 输出序列必须具有加密强度，如&lt;a href=&quot;http://tools.ietf.org/html/rfc4086&quot;&gt;&lt;i&gt;RFC 4086：&amp;ldquo;安全性的随机性要求&amp;rdquo;中所述&lt;/i&gt;&lt;/a&gt;。 &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="589638db071d6405141971ad4e888a98d9d379a0" translate="yes" xml:space="preserve">
          <source>A cryptographically strong random number minimally complies with the statistical random number generator tests specified in &lt;a href=&quot;http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf&quot;&gt; &lt;i&gt;FIPS 140-2, Security Requirements for Cryptographic Modules&lt;/i&gt;&lt;/a&gt;, section 4.9.1. Additionally, &lt;code&gt;SecureRandom&lt;/code&gt; must produce non-deterministic output. Therefore any seed material passed to a &lt;code&gt;SecureRandom&lt;/code&gt; object must be unpredictable, and all &lt;code&gt;SecureRandom&lt;/code&gt; output sequences must be cryptographically strong, as described in &lt;a href=&quot;https://tools.ietf.org/html/rfc4086&quot;&gt; &lt;i&gt;RFC 4086: Randomness Requirements for Security&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">加密强度高的随机数至少符合&lt;a href=&quot;http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf&quot;&gt;&lt;i&gt;FIPS 140-2&amp;ldquo;加密模块的安全性要求&amp;rdquo;&lt;/i&gt;&lt;/a&gt;第4.9.1节中指定的统计随机数生成器测试。此外， &lt;code&gt;SecureRandom&lt;/code&gt; 必须产生不确定的输出。因此，传递给 &lt;code&gt;SecureRandom&lt;/code&gt; 对象的任何种子材料都必须是不可预测的，并且所有 &lt;code&gt;SecureRandom&lt;/code&gt; 输出序列必须具有加密强度，如&lt;a href=&quot;https://tools.ietf.org/html/rfc4086&quot;&gt;&lt;i&gt;RFC 4086：&amp;ldquo;安全性的随机性要求&amp;rdquo;中所述&lt;/i&gt;&lt;/a&gt;。 &lt;i&gt;&lt;/i&gt; &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="6e1ad5ccdaee2397b9cf498e124fe74f968acd0d" translate="yes" xml:space="preserve">
          <source>A cubic parametric curve segment specified with &lt;code&gt;double&lt;/code&gt; coordinates.</source>
          <target state="translated">用 &lt;code&gt;double&lt;/code&gt; 坐标指定的三次参数曲线段。</target>
        </trans-unit>
        <trans-unit id="a7e216a818fced7e98353e4b7bbdea310be88d95" translate="yes" xml:space="preserve">
          <source>A cubic parametric curve segment specified with &lt;code&gt;float&lt;/code&gt; coordinates.</source>
          <target state="translated">用 &lt;code&gt;float&lt;/code&gt; 坐标指定的三次参数曲线段。</target>
        </trans-unit>
        <trans-unit id="fa5deb637528748537e80092135237e4eb9b1b7c" translate="yes" xml:space="preserve">
          <source>A currency symbol</source>
          <target state="translated">一种货币符号</target>
        </trans-unit>
        <trans-unit id="51f6b838a1574832f2e9fbffda3b26c4015239a0" translate="yes" xml:space="preserve">
          <source>A custom layout manager that is responsible for the layout of layeredPane, glassPane, and menuBar.</source>
          <target state="translated">一个自定义布局管理器,负责分层窗格、玻璃窗格和菜单栏的布局。</target>
        </trans-unit>
        <trans-unit id="dc755e278cda4dc95c7384213717314814ed613e" translate="yes" xml:space="preserve">
          <source>A customized caret appearance can be achieved by reimplementing the paint method. If the paint method is changed, the damage method should also be reimplemented to cause a repaint for the area needed to render the caret. The caret extends the Rectangle class which is used to hold the bounding box for where the caret was last rendered. This enables the caret to repaint in a thread-safe manner when the caret moves without making a call to modelToView which is unstable between model updates and view repair (i.e. the order of delivery to DocumentListeners is not guaranteed).</source>
          <target state="translated">可以通过重新实施涂装方法来实现定制的卡口外观。如果改变了油漆方法,也应该重新实施破坏方法,以使渲染卡口所需的区域重新油漆。Caret扩展了Rectangle类,该类用于保留最后渲染caret的边界框。这使得当caret移动时,caret能够以线程安全的方式重新绘制,而不需要调用modelToView,因为在模型更新和视图修复之间是不稳定的(即不保证向DocumentListeners的交付顺序)。</target>
        </trans-unit>
        <trans-unit id="0d9a552f1eae9532772ba8a0f5bd21b603f695ba" translate="yes" xml:space="preserve">
          <source>A customizer class provides a complete custom GUI for customizing a target Java Bean.</source>
          <target state="translated">一个自定义器类提供了一个完整的自定义GUI,用于自定义一个目标Java Bean。</target>
        </trans-unit>
        <trans-unit id="155801b8d431610d4f89e1e764da92c1508c8337" translate="yes" xml:space="preserve">
          <source>A cycle is detected, say where module &lt;code&gt;m1&lt;/code&gt; requires module &lt;code&gt;m2&lt;/code&gt; and &lt;code&gt;m2&lt;/code&gt; requires &lt;code&gt;m1&lt;/code&gt;.</source>
          <target state="translated">检测到一个循环，例如，其中模块 &lt;code&gt;m1&lt;/code&gt; 需要模块 &lt;code&gt;m2&lt;/code&gt; ,而 &lt;code&gt;m2&lt;/code&gt; 需要 &lt;code&gt;m1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2069b8c17d37c31667b7fab19c4856de0cc1f8d1" translate="yes" xml:space="preserve">
          <source>A daemon thread group is automatically destroyed when its last thread is stopped or its last thread group is destroyed.</source>
          <target state="translated">当守护进程的最后一个线程停止或最后一个线程组被销毁时,守护进程线程组会自动销毁。</target>
        </trans-unit>
        <trans-unit id="05d0e41569ec35aa65fa2c0237db9083d80b3ecd" translate="yes" xml:space="preserve">
          <source>A dash</source>
          <target state="translated">A dash</target>
        </trans-unit>
        <trans-unit id="a33b219dbf7a1c9bcc3067caa4ec245d6a63116b" translate="yes" xml:space="preserve">
          <source>A data input stream lets an application read primitive Java data types from an underlying input stream in a machine-independent way.</source>
          <target state="translated">数据输入流允许应用程序以一种与机器无关的方式从底层输入流中读取原始的Java数据类型。</target>
        </trans-unit>
        <trans-unit id="d45df3da7223cc3f060b7b0d57ac3b346e061e77" translate="yes" xml:space="preserve">
          <source>A data input stream lets an application read primitive Java data types from an underlying input stream in a machine-independent way. An application uses a data output stream to write data that can later be read by a data input stream.</source>
          <target state="translated">数据输入流使应用程序能够以一种与机器无关的方式从底层输入流中读取原始的Java数据类型。应用程序使用数据输出流来写数据,这些数据以后可以由数据输入流读取。</target>
        </trans-unit>
        <trans-unit id="ec9aec4344d0e51aa12ef1215631eb1d67b5a569" translate="yes" xml:space="preserve">
          <source>A data line has an internal buffer in which the incoming or outgoing audio data is queued. The &lt;a href=&quot;#drain()&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt; method blocks until this internal buffer becomes empty, usually because all queued data has been processed. The &lt;a href=&quot;#flush()&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt; method discards any available queued data from the internal buffer.</source>
          <target state="translated">数据线具有内部缓冲区，传入或传出的音频数据在该缓冲区中排队。的&lt;a href=&quot;#drain()&quot;&gt; &lt;code&gt;drain()&lt;/code&gt; &lt;/a&gt;方法将阻塞，直到此内部缓冲器变空时，通常是因为所有排队的数据已经被处理。的&lt;a href=&quot;#flush()&quot;&gt; &lt;code&gt;flush()&lt;/code&gt; &lt;/a&gt;方法丢弃从内部缓冲器的任何可用排队的数据。</target>
        </trans-unit>
        <trans-unit id="1de7e80dd13dc68d3168ef0a6e2fe9e3913dcf0a" translate="yes" xml:space="preserve">
          <source>A data line has an internal buffer in which the incoming or outgoing audio data is queued. The &lt;code&gt;&lt;a href=&quot;dataline#drain--&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method blocks until this internal buffer becomes empty, usually because all queued data has been processed. The &lt;code&gt;&lt;a href=&quot;dataline#flush--&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method discards any available queued data from the internal buffer.</source>
          <target state="translated">数据线具有内部缓冲区，传入或传出的音频数据在其中排队。的 &lt;code&gt;&lt;a href=&quot;dataline#drain--&quot;&gt;&lt;code&gt;drain()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法将阻塞，直到此内部缓冲器变空时，通常是因为所有排队的数据已经被处理。的 &lt;code&gt;&lt;a href=&quot;dataline#flush--&quot;&gt;&lt;code&gt;flush()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法丢弃从内部缓冲器的任何可用排队的数据。</target>
        </trans-unit>
        <trans-unit id="ea6cbb8b0f188dc029372c2eb8622099b8037345" translate="yes" xml:space="preserve">
          <source>A data line produces &lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt; events whenever it begins or ceases active presentation or capture of data. These events can be generated in response to specific requests, or as a result of less direct state changes. For example, if &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; is called on an inactive data line, and data is available for capture or playback, a &lt;code&gt;START&lt;/code&gt; event will be generated shortly, when data playback or capture actually begins. Or, if the flow of data to an active data line is constricted so that a gap occurs in the presentation of data, a &lt;code&gt;STOP&lt;/code&gt; event is generated.</source>
          <target state="translated">每当数据线开始或停止主动显示或捕获数据时，它都会产生&lt;a href=&quot;lineevent.type#START&quot;&gt; &lt;code&gt;START&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;lineevent.type#STOP&quot;&gt; &lt;code&gt;STOP&lt;/code&gt; &lt;/a&gt;事件。这些事件可以响应于特定请求而生成，或者是由于状态变化不那么直接而生成的。例如，如果在不活动的数据行上调用&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;，并且数据可用于捕获或回放，则在实际开始数据回放或捕获时，将很快生成 &lt;code&gt;START&lt;/code&gt; 事件。或者，如果到活动数据线的数据流受到限制，以致在数据表示中出现间隙，则会生成 &lt;code&gt;STOP&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="5c11db064de02f620dcd7062f6e3d3fe8017c28a" translate="yes" xml:space="preserve">
          <source>A data line produces &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; events whenever it begins or ceases active presentation or capture of data. These events can be generated in response to specific requests, or as a result of less direct state changes. For example, if &lt;code&gt;&lt;a href=&quot;dataline#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is called on an inactive data line, and data is available for capture or playback, a &lt;code&gt;START&lt;/code&gt; event will be generated shortly, when data playback or capture actually begins. Or, if the flow of data to an active data line is constricted so that a gap occurs in the presentation of data, a &lt;code&gt;STOP&lt;/code&gt; event is generated.</source>
          <target state="translated">每当数据线开始或停止主动显示或捕获数据时，它都会产生 &lt;code&gt;&lt;a href=&quot;lineevent.type#START&quot;&gt;&lt;code&gt;START&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;a href=&quot;lineevent.type#STOP&quot;&gt;&lt;code&gt;STOP&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 事件。这些事件可以响应于特定请求而生成，或者是由于状态变化不那么直接而生成的。例如，如果在不活动的数据行上调用 &lt;code&gt;&lt;a href=&quot;dataline#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; ，并且数据可用于捕获或回放，则在实际上开始进行数据回放或捕获时，将很快生成 &lt;code&gt;START&lt;/code&gt; 事件。或者，如果到活动数据线的数据流受到限制，以致在数据表示中出现间隙，则会生成 &lt;code&gt;STOP&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="039c1d1d51bba8822833fd86de721e61e08f3939" translate="yes" xml:space="preserve">
          <source>A data model for a combo box.</source>
          <target state="translated">一个组合框的数据模型。</target>
        </trans-unit>
        <trans-unit id="e6dadba60cfbfb81f34f2058ee572d2de4e1288f" translate="yes" xml:space="preserve">
          <source>A data model for a combo box. This interface extends &lt;code&gt;ListDataModel&lt;/code&gt; and adds the concept of a</source>
          <target state="translated">组合框的数据模型。该接口扩展了 &lt;code&gt;ListDataModel&lt;/code&gt; 并添加了</target>
        </trans-unit>
        <trans-unit id="b4ade92fed66a9ea602b46e8ce07d94ae873930c" translate="yes" xml:space="preserve">
          <source>A data output stream lets an application write primitive Java data types to an output stream in a portable way.</source>
          <target state="translated">数据输出流允许应用程序以可移植的方式将原始的Java数据类型写入输出流。</target>
        </trans-unit>
        <trans-unit id="7e49ad230178e81f14bea1885dc6b952a1a78975" translate="yes" xml:space="preserve">
          <source>A data output stream lets an application write primitive Java data types to an output stream in a portable way. An application can then use a data input stream to read the data back in.</source>
          <target state="translated">数据输出流允许应用程序以可移植的方式将原始的Java数据类型写入输出流。然后应用程序可以使用数据输入流将数据读回。</target>
        </trans-unit>
        <trans-unit id="6ffd7d53aef0182ff78f6145031ad6fa96eaf5e9" translate="yes" xml:space="preserve">
          <source>A datagram channel is created by invoking one of the &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods of this class. It is not possible to create a channel for an arbitrary, pre-existing datagram socket. A newly-created datagram channel is open but not connected. A datagram channel need not be connected in order for the &lt;a href=&quot;#send(java.nio.ByteBuffer,java.net.SocketAddress)&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#receive(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; methods to be used. A datagram channel may be connected, by invoking its &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method, in order to avoid the overhead of the security checks are otherwise performed as part of every send and receive operation. A datagram channel must be connected in order to use the &lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods, since those methods do not accept or return socket addresses.</source>
          <target state="translated">数据报通道是通过调用此类的&lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;方法之一创建的。无法为任意现有的数据报套接字创建通道。新建的数据报通道已打开，但未连接。无需连接数据报通道即可使用&lt;a href=&quot;#send(java.nio.ByteBuffer,java.net.SocketAddress)&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#receive(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt;方法。可以通过调用数据报通道的&lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;方法来连接数据报通道，以避免安全检查的开销，否则安全检查将作为每个发送和接收操作的一部分执行。数据报通道必须连接才能使用的&lt;a href=&quot;#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法，因为这些方法不接受或返回套接字地址。</target>
        </trans-unit>
        <trans-unit id="860c85146d0e51648ee215e21e8c0d125f69ac4d" translate="yes" xml:space="preserve">
          <source>A datagram channel is created by invoking one of the &lt;a href=&quot;datagramchannel#open--&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods of this class. It is not possible to create a channel for an arbitrary, pre-existing datagram socket. A newly-created datagram channel is open but not connected. A datagram channel need not be connected in order for the &lt;a href=&quot;datagramchannel#send-java.nio.ByteBuffer-java.net.SocketAddress-&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datagramchannel#receive-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; methods to be used. A datagram channel may be connected, by invoking its &lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method, in order to avoid the overhead of the security checks are otherwise performed as part of every send and receive operation. A datagram channel must be connected in order to use the &lt;a href=&quot;datagramchannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datagramchannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods, since those methods do not accept or return socket addresses.</source>
          <target state="translated">通过调用此类的&lt;a href=&quot;datagramchannel#open--&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;方法之一来创建数据报通道。无法为任意现有的数据报套接字创建通道。新建的数据报通道已打开但未连接。无需连接数据报通道即可使用&lt;a href=&quot;datagramchannel#send-java.nio.ByteBuffer-java.net.SocketAddress-&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;datagramchannel#receive-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt;方法。可以通过调用数据报通道的&lt;a href=&quot;datagramchannel#connect-java.net.SocketAddress-&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;方法来连接数据报通道，以避免安全检查的开销，否则将作为每个发送和接收操作的一部分执行安全检查。数据报通道必须连接才能使用的&lt;a href=&quot;datagramchannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;datagramchannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法，因为这些方法不接受或返回套接字地址。</target>
        </trans-unit>
        <trans-unit id="b50daddc17e2dc3b7a053825fe91e19a870e48dc" translate="yes" xml:space="preserve">
          <source>A datagram socket associated with this channel</source>
          <target state="translated">一个与该通道相关联的数据报插座</target>
        </trans-unit>
        <trans-unit id="3d2c68abbc6de0158a3eae16d10798edaae398fe" translate="yes" xml:space="preserve">
          <source>A datagram socket is the sending or receiving point for a packet delivery service. Each packet sent or received on a datagram socket is individually addressed and routed. Multiple packets sent from one machine to another may be routed differently, and may arrive in any order.</source>
          <target state="translated">数据报套接字是数据包传送服务的发送或接收点。在数据报套接字上发送或接收的每个数据包都是单独寻址和路由的。从一台机器向另一台机器发送的多个数据包可能会以不同的方式进行路由,并可能以任何顺序到达。</target>
        </trans-unit>
        <trans-unit id="ad8df8d5ed296cdf0ebd9da1afb9e92512db37c3" translate="yes" xml:space="preserve">
          <source>A datagram socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/datagramchannel#open()&quot;&gt;&lt;code&gt;DatagramChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">且仅当通道本身是通过&lt;a href=&quot;../nio/channels/datagramchannel#open()&quot;&gt; &lt;code&gt;DatagramChannel.open&lt;/code&gt; &lt;/a&gt;方法创建的，数据报套接字才会具有一个通道。</target>
        </trans-unit>
        <trans-unit id="0ae7f8573e25c5bd21f3782b0c07769f31eec235" translate="yes" xml:space="preserve">
          <source>A datagram socket will have a channel if, and only if, the channel itself was created via the &lt;a href=&quot;../nio/channels/datagramchannel#open--&quot;&gt;&lt;code&gt;DatagramChannel.open&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">且仅当通道本身是通过&lt;a href=&quot;../nio/channels/datagramchannel#open--&quot;&gt; &lt;code&gt;DatagramChannel.open&lt;/code&gt; &lt;/a&gt;方法创建的，数据报套接字才会具有一个通道。</target>
        </trans-unit>
        <trans-unit id="28f9164c3c92e685be103dbf4f46c787de2d68b2" translate="yes" xml:space="preserve">
          <source>A date (day of month) is represented by an integer from 1 to 31 in the usual manner.</source>
          <target state="translated">日期(月日)用通常的方式从1到31的整数表示。</target>
        </trans-unit>
        <trans-unit id="765d4dd40d45377469a0163c1106343e90f2903d" translate="yes" xml:space="preserve">
          <source>A date in the Hijrah calendar system.</source>
          <target state="translated">Hijrah日历系统中的一个日期。</target>
        </trans-unit>
        <trans-unit id="c1c7acc4aa80b7eeb7672f49c432e7cd85327b48" translate="yes" xml:space="preserve">
          <source>A date in the Japanese Imperial calendar system.</source>
          <target state="translated">日本皇室历法中的一个日期。</target>
        </trans-unit>
        <trans-unit id="7de30d127cf084154c18dba24d51f5c4658f9091" translate="yes" xml:space="preserve">
          <source>A date in the Minguo calendar system.</source>
          <target state="translated">民国历系统中的一个日期。</target>
        </trans-unit>
        <trans-unit id="eb679e0dede92d2e659a9d8242cd334c8812c331" translate="yes" xml:space="preserve">
          <source>A date in the Thai Buddhist calendar system.</source>
          <target state="translated">泰国佛教历法中的一个日期。</target>
        </trans-unit>
        <trans-unit id="c9aefbb3b8fbfbb921cfbea59354493d7c161995" translate="yes" xml:space="preserve">
          <source>A date is time-based if it can be used to imply meaning from a date. It must have a &lt;a href=&quot;#getDuration()&quot;&gt;duration&lt;/a&gt; that is an integral multiple of the length of a standard day. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a unit like 36 hours.</source>
          <target state="translated">如果日期可以用来暗示日期的意义，则它是基于时间的。它的&lt;a href=&quot;#getDuration()&quot;&gt;持续时间&lt;/a&gt;必须是标准日长度的整数倍。请注意， &lt;code&gt;isDateBased()&lt;/code&gt; 和 &lt;code&gt;isTimeBased()&lt;/code&gt; 返回false都是有效的，例如代表36个小时的单位时。</target>
        </trans-unit>
        <trans-unit id="73688423161d451845e09cb015764dabbeb668f9" translate="yes" xml:space="preserve">
          <source>A date is time-based if it can be used to imply meaning from a date. It must have a &lt;a href=&quot;temporalunit#getDuration--&quot;&gt;duration&lt;/a&gt; that is an integral multiple of the length of a standard day. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a unit like 36 hours.</source>
          <target state="translated">如果日期可以用来暗示日期的意义，则它是基于时间的。它的&lt;a href=&quot;temporalunit#getDuration--&quot;&gt;持续时间&lt;/a&gt;必须是标准日长度的整数倍。请注意， &lt;code&gt;isDateBased()&lt;/code&gt; 和 &lt;code&gt;isTimeBased()&lt;/code&gt; 返回false 都是有效的，例如代表36个小时的单位时。</target>
        </trans-unit>
        <trans-unit id="15998c955b5528e968175b0e012f5926807a8abe" translate="yes" xml:space="preserve">
          <source>A date without a time-zone in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03&lt;/code&gt;.</source>
          <target state="translated">ISO-8601日历系统中没有时区的日期，例如 &lt;code&gt;2007-12-03&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="922a9f59988c2dc98cc4b1ef57bbd880865b6d16" translate="yes" xml:space="preserve">
          <source>A date without time-of-day or time-zone in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">在一个任意的年表中,一个没有时间-日期或时区的日期,用于先进的全球化应用案例。</target>
        </trans-unit>
        <trans-unit id="2e438e7f48db8594363e3d4b8a272fd1430eae73" translate="yes" xml:space="preserve">
          <source>A date-based amount of time in the ISO-8601 calendar system, such as '2 years, 3 months and 4 days'.</source>
          <target state="translated">ISO-8601日历系统中基于日期的时间量,如 &quot;2年3个月4天&quot;。</target>
        </trans-unit>
        <trans-unit id="ea8975e273a6ef0177859f50acb175de6d095b63" translate="yes" xml:space="preserve">
          <source>A date-based amount of time, such as '3 years, 4 months and 5 days' in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">一个基于日期的时间量,如 &quot;3年4个月零5天 &quot;的任意年表,用于高级全球化应用案例。</target>
        </trans-unit>
        <trans-unit id="164536bebef9f26d2ca2490445b8e742d6eac336" translate="yes" xml:space="preserve">
          <source>A date-time with a time-zone in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">一个带有任意时序的时区的日期时间,用于先进的全球化应用案例。</target>
        </trans-unit>
        <trans-unit id="097280af56f500be86aab77cc886c6c68d69083a" translate="yes" xml:space="preserve">
          <source>A date-time with a time-zone in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03T10:15:30+01:00 Europe/Paris&lt;/code&gt;.</source>
          <target state="translated">ISO-8601日历系统中带有时区的日期时间，例如 &lt;code&gt;2007-12-03T10:15:30+01:00 Europe/Paris&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ef9fd927e47ecd38cbd267620a731630ad6d605" translate="yes" xml:space="preserve">
          <source>A date-time with an offset from UTC/Greenwich in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03T10:15:30+01:00&lt;/code&gt;.</source>
          <target state="translated">与ISO-8601日历系统中的UTC /格林威治时间偏移的日期时间，例如 &lt;code&gt;2007-12-03T10:15:30+01:00&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa42790b0fd24d4edfc2bea6b761cee59e338ba9" translate="yes" xml:space="preserve">
          <source>A date-time without a time-zone in an arbitrary chronology, intended for advanced globalization use cases.</source>
          <target state="translated">在一个任意的年表中,一个没有时区的日期时间,用于先进的全球化应用案例。</target>
        </trans-unit>
        <trans-unit id="4cd7fec84ac247f0315d0f529964606dad258e5d" translate="yes" xml:space="preserve">
          <source>A date-time without a time-zone in the ISO-8601 calendar system, such as &lt;code&gt;2007-12-03T10:15:30&lt;/code&gt;.</source>
          <target state="translated">ISO-8601日历系统中没有时区的日期时间，例如 &lt;code&gt;2007-12-03T10:15:30&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="157be410809c28fe9d32a7c9658f228c1d9c12a7" translate="yes" xml:space="preserve">
          <source>A day-of-week, such as 'Tuesday'.</source>
          <target state="translated">一周中的某一天,如 &quot;星期二&quot;。</target>
        </trans-unit>
        <trans-unit id="89abd7c81d146952b08c454a0a1da8bc94ec80c6" translate="yes" xml:space="preserve">
          <source>A deadlock was detected.</source>
          <target state="translated">发现了一个僵局。</target>
        </trans-unit>
        <trans-unit id="a9ecc568d3f4daf6463d56e74479f881abbaf7f1" translate="yes" xml:space="preserve">
          <source>A decimal digit character:&lt;code&gt;\p{IsDigit}&lt;/code&gt;</source>
          <target state="translated">十进制数字字符： &lt;code&gt;\p{IsDigit}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5eff0f0d27d8edf396c4eb418d3158f33ab7a26b" translate="yes" xml:space="preserve">
          <source>A decimal digit character:&lt;code&gt;p{IsDigit}&lt;/code&gt;</source>
          <target state="translated">十进制数字字符： &lt;code&gt;p{IsDigit}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b598631977de5f143e88066dce901dff98686a6" translate="yes" xml:space="preserve">
          <source>A decimal digit: &lt;code&gt;[0-9]&lt;/code&gt;</source>
          <target state="translated">十进制数字： &lt;code&gt;[0-9]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="157311c8bc1e2a311fd7d16a1903d15eeb1dce10" translate="yes" xml:space="preserve">
          <source>A decimal point</source>
          <target state="translated">小数点</target>
        </trans-unit>
        <trans-unit id="3a147eaebba94f0aafb2fc225c172ce03371c707" translate="yes" xml:space="preserve">
          <source>A decorative icon to be placed in the dialog box. A default value for this is determined by the &lt;code&gt;messageType&lt;/code&gt; parameter.</source>
          <target state="translated">放置在对话框中的装饰性图标。其默认值由 &lt;code&gt;messageType&lt;/code&gt; 参数确定。</target>
        </trans-unit>
        <trans-unit id="eacb7c1c16ebd99f7dce891e5025f17399f2e2f4" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;BaseRowSet&lt;/code&gt; object is initialized with many starting values. The following is true of a default &lt;code&gt;RowSet&lt;/code&gt; instance that extends the &lt;code&gt;BaseRowSet&lt;/code&gt; class:</source>
          <target state="translated">默认的 &lt;code&gt;BaseRowSet&lt;/code&gt; 对象用许多起始值初始化。对于扩展 &lt;code&gt;BaseRowSet&lt;/code&gt; 类的默认 &lt;code&gt;RowSet&lt;/code&gt; 实例，以下内容适用：</target>
        </trans-unit>
        <trans-unit id="cd2a0ef14d56cc958a92c93743ec0088b9a70441" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;CallbackHandler&lt;/code&gt; class implementation may be specified by setting the value of the &lt;code&gt;auth.login.defaultCallbackHandler&lt;/code&gt; security property.</source>
          <target state="translated">可以通过设置 &lt;code&gt;auth.login.defaultCallbackHandler&lt;/code&gt; 安全属性的值来指定默认的 &lt;code&gt;CallbackHandler&lt;/code&gt; 类实现。</target>
        </trans-unit>
        <trans-unit id="b99bfd83db6c28b8a002954d21d2d96a76dea25f" translate="yes" xml:space="preserve">
          <source>A default &lt;code&gt;ResultSet&lt;/code&gt; object is not updatable and has a cursor that moves forward only. Thus, you can iterate through it only once and only from the first row to the last row. It is possible to produce &lt;code&gt;ResultSet&lt;/code&gt; objects that are scrollable and/or updatable. The following code fragment, in which &lt;code&gt;con&lt;/code&gt; is a valid &lt;code&gt;Connection&lt;/code&gt; object, illustrates how to make a result set that is scrollable and insensitive to updates by others, and that is updatable. See &lt;code&gt;ResultSet&lt;/code&gt; fields for other options.</source>
          <target state="translated">默认的 &lt;code&gt;ResultSet&lt;/code&gt; 对象是不可更新的，并且具有仅向前移动的光标。因此，您只能迭代一次，并且只能从第一行到最后一行进行迭代。可以产生可滚动和/或可更新的 &lt;code&gt;ResultSet&lt;/code&gt; 对象。以下代码片段（其中 &lt;code&gt;con&lt;/code&gt; 是有效的 &lt;code&gt;Connection&lt;/code&gt; 对象）说明了如何制作可滚动且对其他人的更新不敏感且可更新的结果集。有关其他选项，请参见 &lt;code&gt;ResultSet&lt;/code&gt; 字段。</target>
        </trans-unit>
        <trans-unit id="fe8d0db92ce5c4e505b1f926182cc6432d1640de" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuBarUI.</source>
          <target state="translated">MenuBarUI的默认L＆F实现。</target>
        </trans-unit>
        <trans-unit id="e04e173ec48be7a696a9414557505123bb614b96" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuBarUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">MenuBarUI的默认L＆F实现。此实现是&amp;ldquo;组合&amp;rdquo;视图/控制器。</target>
        </trans-unit>
        <trans-unit id="6a8272f3e52f484a6ce27c79c9769215ed5ae87c" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuUI.</source>
          <target state="translated">MenuUI的默认L＆F实现。</target>
        </trans-unit>
        <trans-unit id="95200ec264056fd4c2a8497e57d2858c47f0191d" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of MenuUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">MenuUI的默认L＆F实现。此实现是&amp;ldquo;组合&amp;rdquo;视图/控制器。</target>
        </trans-unit>
        <trans-unit id="9faf29b8ac86cd6ee98675a5581ff9e8c31c42f0" translate="yes" xml:space="preserve">
          <source>A default L&amp;amp;F implementation of ScrollPaneUI.</source>
          <target state="translated">ScrollPaneUI的默认L＆F实现。</target>
        </trans-unit>
        <trans-unit id="5cd744bf0733a787180eef4442c83eed314c098e" translate="yes" xml:space="preserve">
          <source>A default TerminalFactory is always available. However, depending on the implementation, it may not offer any terminals.</source>
          <target state="translated">一个默认的TerminalFactory总是可用的。然而,根据不同的实现,它可能不提供任何终端。</target>
        </trans-unit>
        <trans-unit id="b9a6eacf12d63cc0e2ee5fc279c41f03de9eabe5" translate="yes" xml:space="preserve">
          <source>A default horizontal thumb &lt;code&gt;Icon&lt;/code&gt;.</source>
          <target state="translated">默认的水平拇指 &lt;code&gt;Icon&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4783bbb67a33b2992887ff110755ed8d76992c97" translate="yes" xml:space="preserve">
          <source>A default horizontal thumb &lt;code&gt;Icon&lt;/code&gt;. This field might not be used. To change the &lt;code&gt;Icon&lt;/code&gt; used by this delegate directly set it using the &lt;code&gt;Slider.horizontalThumbIcon&lt;/code&gt; UIManager property.</source>
          <target state="translated">默认的水平拇指 &lt;code&gt;Icon&lt;/code&gt; 。可能不使用该字段。要更改此委托使用的 &lt;code&gt;Icon&lt;/code&gt; ，请使用 &lt;code&gt;Slider.horizontalThumbIcon&lt;/code&gt; UIManager属性直接将其设置。</target>
        </trans-unit>
        <trans-unit id="895cd1d0c3c4897508ede06f87f5a985330bf289" translate="yes" xml:space="preserve">
          <source>A default implementation of Caret.</source>
          <target state="translated">Caret的默认实现。</target>
        </trans-unit>
        <trans-unit id="57bbfc291e6251172e02f1663e0f826298ae79ee" translate="yes" xml:space="preserve">
          <source>A default implementation of Caret. The caret is rendered as a vertical line in the color specified by the CaretColor property of the associated JTextComponent. It can blink at the rate specified by the BlinkRate property.</source>
          <target state="translated">Caret的默认实现。Caret以垂直线的形式呈现,颜色由相关JTextComponent的CaretColor属性指定。它可以以BlinkRate属性指定的速度闪烁。</target>
        </trans-unit>
        <trans-unit id="b08558f81563eb2f14f1c724a86a9b41c48e40d8" translate="yes" xml:space="preserve">
          <source>A default vertical thumb &lt;code&gt;Icon&lt;/code&gt;.</source>
          <target state="translated">默认的垂直拇指 &lt;code&gt;Icon&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="377ac0b773de448340bc8623588ff6c5ffc7818e" translate="yes" xml:space="preserve">
          <source>A default vertical thumb &lt;code&gt;Icon&lt;/code&gt;. This field might not be used. To change the &lt;code&gt;Icon&lt;/code&gt; used by this delegate directly set it using the &lt;code&gt;Slider.verticalThumbIcon&lt;/code&gt; UIManager property.</source>
          <target state="translated">默认的垂直拇指 &lt;code&gt;Icon&lt;/code&gt; 。可能不使用该字段。要更改此委托使用的 &lt;code&gt;Icon&lt;/code&gt; ，请使用 &lt;code&gt;Slider.verticalThumbIcon&lt;/code&gt; UIManager属性直接设置它。</target>
        </trans-unit>
        <trans-unit id="3eead970a964cfd77fd60eb90fa4973507e78a75" translate="yes" xml:space="preserve">
          <source>A definition of the way a local time can be converted to the actual transition date-time.</source>
          <target state="translated">定义本地时间可以转换为实际转换日期时间的方式。</target>
        </trans-unit>
        <trans-unit id="c9dd44617c4d88f5e2e6388d8e2dafe4e46a14ef" translate="yes" xml:space="preserve">
          <source>A delayed result-bearing action that can be cancelled.</source>
          <target state="translated">可以取消的延迟结果行动。</target>
        </trans-unit>
        <trans-unit id="ac46e84e3abf4aff48d4f542f6baf971ac9dad1e" translate="yes" xml:space="preserve">
          <source>A delayed result-bearing action that can be cancelled. Usually a scheduled future is the result of scheduling a task with a &lt;a href=&quot;scheduledexecutorservice&quot;&gt;&lt;code&gt;ScheduledExecutorService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">延迟的结果承载操作可以取消。通常，计划好的将来是使用&lt;a href=&quot;scheduledexecutorservice&quot;&gt; &lt;code&gt;ScheduledExecutorService&lt;/code&gt; 计划&lt;/a&gt;任务的结果。</target>
        </trans-unit>
        <trans-unit id="c23a3f9cc77449f2c7206f98f654f1e397e1782a" translate="yes" xml:space="preserve">
          <source>A dependence upon a module</source>
          <target state="translated">依赖于一个模块</target>
        </trans-unit>
        <trans-unit id="f40660856cefafd499f5a8c83c6a54124863e05e" translate="yes" xml:space="preserve">
          <source>A dependence upon a module.</source>
          <target state="translated">对一个模块的依赖。</target>
        </trans-unit>
        <trans-unit id="5572adadfdd4648f0ee6ddebccd29574fd8ebae6" translate="yes" xml:space="preserve">
          <source>A dependency of a module.</source>
          <target state="translated">一个模块的依赖性。</target>
        </trans-unit>
        <trans-unit id="daf559c6ba08fd75e8590ce4b96a16bac7e5a662" translate="yes" xml:space="preserve">
          <source>A dereferencer of &lt;a href=&quot;urireference&quot;&gt;&lt;code&gt;URIReference&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;urireference&quot;&gt; &lt;code&gt;URIReference&lt;/code&gt; &lt;/a&gt;的解引用器。</target>
        </trans-unit>
        <trans-unit id="9281783cd7910a1b9bd0cbddec54bbe22a45331a" translate="yes" xml:space="preserve">
          <source>A description of a Serializable field from a Serializable class.</source>
          <target state="translated">一个来自Serializable类的Serializable字段的描述。</target>
        </trans-unit>
        <trans-unit id="76b5a73d15645da68ef6f5bf9709ccb80943a81e" translate="yes" xml:space="preserve">
          <source>A description of a Serializable field from a Serializable class. An array of ObjectStreamFields is used to declare the Serializable fields of a class.</source>
          <target state="translated">对一个Serializable类的Serializable字段的描述。ObjectStreamFields数组用于声明一个类的Serializable字段。</target>
        </trans-unit>
        <trans-unit id="c7bc9d1857a6006010eb18d44c52d8253a604f31" translate="yes" xml:space="preserve">
          <source>A description of a change to a Snippet.</source>
          <target state="translated">对Snippet变化的描述。</target>
        </trans-unit>
        <trans-unit id="05445b6bb330f95d9e563e81b33c315d2aa68a78" translate="yes" xml:space="preserve">
          <source>A description of a change to a Snippet. These are generated by direct changes to state with &lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt;&lt;code&gt;JShell.eval(String)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;jshell#drop(jdk.jshell.Snippet)&quot;&gt;&lt;code&gt;JShell.drop(Snippet)&lt;/code&gt;&lt;/a&gt;, or indirectly by these same methods as dependencies change or Snippets are overwritten. For direct changes, the &lt;a href=&quot;#causeSnippet()&quot;&gt;&lt;code&gt;causeSnippet()&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">对代码段的更改的描述。这些是通过使用&lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt; &lt;code&gt;JShell.eval(String)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;jshell#drop(jdk.jshell.Snippet)&quot;&gt; &lt;code&gt;JShell.drop(Snippet)&lt;/code&gt; &lt;/a&gt;直接更改状态而生成的，或者是通过与依赖项更改或代码段被覆盖时相同的方法间接生成的。对于直接更改，&lt;a href=&quot;#causeSnippet()&quot;&gt; &lt;code&gt;causeSnippet()&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62eb29e85381c666aa2036d142f522d9f38765c8" translate="yes" xml:space="preserve">
          <source>A description of a to-be-instantiated KeyStore object.</source>
          <target state="translated">一个待实例化的KeyStore对象的描述。</target>
        </trans-unit>
        <trans-unit id="3d1c33b4d2727c3bbde32903a7c46f61993d7993" translate="yes" xml:space="preserve">
          <source>A description of the result state of a coder.</source>
          <target state="translated">编码器的结果状态的描述。</target>
        </trans-unit>
        <trans-unit id="0d6f09acd02e2b1303ba87805be2fea193b39dfd" translate="yes" xml:space="preserve">
          <source>A description of these layouts follows:</source>
          <target state="translated">下面对这些布局进行说明。</target>
        </trans-unit>
        <trans-unit id="503550528bc86ec5d2191b4236089b4484a623f3" translate="yes" xml:space="preserve">
          <source>A descriptive message to be placed in the dialog box. In the most common usage, message is just a &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt; constant. However, the type of this parameter is actually &lt;code&gt;Object&lt;/code&gt;. Its interpretation depends on its type:</source>
          <target state="translated">描述性消息要放置在对话框中。在最常见的用法中，消息只是一个 &lt;code&gt;String&lt;/code&gt; 或 &lt;code&gt;String&lt;/code&gt; 常量。但是，此参数的类型实际上是 &lt;code&gt;Object&lt;/code&gt; 。其解释取决于其类型：</target>
        </trans-unit>
        <trans-unit id="941de8ae14a5bae60a5d906de62f015bbb32d97b" translate="yes" xml:space="preserve">
          <source>A descriptive string</source>
          <target state="translated">一个描述性的字符串</target>
        </trans-unit>
        <trans-unit id="39b6b0c8659ae33eb1969916bc67e68279e3a0d9" translate="yes" xml:space="preserve">
          <source>A descriptor can be mutable or immutable. An immutable descriptor, once created, never changes. The &lt;code&gt;Descriptor&lt;/code&gt; methods that could modify the contents of the descriptor will throw an exception for an immutable descriptor. Immutable descriptors are usually instances of &lt;a href=&quot;immutabledescriptor&quot;&gt;&lt;code&gt;ImmutableDescriptor&lt;/code&gt;&lt;/a&gt; or a subclass. Mutable descriptors are usually instances of &lt;a href=&quot;modelmbean/descriptorsupport&quot;&gt;&lt;code&gt;DescriptorSupport&lt;/code&gt;&lt;/a&gt; or a subclass.</source>
          <target state="translated">描述符可以是可变的或不可变的。不变的描述符一旦创建，就不会改变。可以修改描述符内容的 &lt;code&gt;Descriptor&lt;/code&gt; 方法将为不可变描述符抛出异常。不可变描述符通常是&lt;a href=&quot;immutabledescriptor&quot;&gt; &lt;code&gt;ImmutableDescriptor&lt;/code&gt; &lt;/a&gt;或子类的实例。可变描述符通常是&lt;a href=&quot;modelmbean/descriptorsupport&quot;&gt; &lt;code&gt;DescriptorSupport&lt;/code&gt; &lt;/a&gt;或子类的实例。</target>
        </trans-unit>
        <trans-unit id="72904f35789eb5719433f738c8b55b480e3f7be2" translate="yes" xml:space="preserve">
          <source>A descriptor consists of a collection of fields. Each field is in fieldname=fieldvalue format. Field names are not case sensitive, case will be preserved on field values.</source>
          <target state="translated">一个描述符由一组字段组成。每个字段的格式是fieldname=fieldvalue。字段名不区分大小写,字段值将保留大小写。</target>
        </trans-unit>
        <trans-unit id="90bc82ff659998d45e1e39ffda8cb824fc0bfa07" translate="yes" xml:space="preserve">
          <source>A descriptor registered with the activation system can be used to recreate/activate the object specified by the descriptor. The &lt;code&gt;MarshalledObject&lt;/code&gt; in the object's descriptor is passed as the second argument to the remote object's constructor for object to use during reinitialization/activation.</source>
          <target state="translated">在激活系统中注册的描述符可用于重新创建/激活由描述符指定的对象。对象描述符中的 &lt;code&gt;MarshalledObject&lt;/code&gt; 作为第二个参数传递给远程对象的构造函数，以供对象在重新初始化/激活期间使用。</target>
        </trans-unit>
        <trans-unit id="f0ff2df0a69862e0b2488b671e2b54a0b5b5e113" translate="yes" xml:space="preserve">
          <source>A descriptor which is equal to this descriptor.</source>
          <target state="translated">与本描述符相等的描述符。</target>
        </trans-unit>
        <trans-unit id="8b2a24b623eccf5a9645ac3decd3f1d344237a87" translate="yes" xml:space="preserve">
          <source>A diagnostic command may or may not support options or arguments. All the operations return &lt;code&gt;String&lt;/code&gt; and either take no parameter for operations that do not support any option or argument, or take a &lt;code&gt;String[]&lt;/code&gt; parameter for operations that support at least one option or argument. Each option or argument must be stored in a single String. Options or arguments split across several String instances are not supported.</source>
          <target state="translated">诊断命令可能支持也可能不支持选项或参数。所有操作都返回 &lt;code&gt;String&lt;/code&gt; ，对于不支持任何选项或参数的操作，不带参数；对于至少支持一个选项或参数的操作，均带 &lt;code&gt;String[]&lt;/code&gt; 参数。每个选项或参数都必须存储在单个String中。不支持在多个String实例之间拆分的选项或参数。</target>
        </trans-unit>
        <trans-unit id="4b102a703f2ede2ee34cfdc855003bf78429b505" translate="yes" xml:space="preserve">
          <source>A dialog can be either modeless (the default) or modal. A modal dialog is one which blocks input to some other top-level windows in the application, except for any windows created with the dialog as their owner. See &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/Modality.html&quot;&gt;AWT Modality&lt;/a&gt; specification for details.</source>
          <target state="translated">对话框可以是无模式的（默认）或模式的。模态对话框是一种阻止输入到应用程序中其他一些顶级窗口的对话框，除了以该对话框作为其所有者创建的任何窗口。有关详细信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/java/awt/doc-files/Modality.html&quot;&gt;AWT Modality&lt;/a&gt;规范。</target>
        </trans-unit>
        <trans-unit id="fc8f2c65df5aea7a55b5208f4ea73e494b161cb9" translate="yes" xml:space="preserve">
          <source>A dialog can be either modeless (the default) or modal. A modal dialog is one which blocks input to some other top-level windows in the application, except for any windows created with the dialog as their owner. See &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/Modality.html&quot;&gt;AWT Modality&lt;/a&gt; specification for details.</source>
          <target state="translated">对话框可以是无模式的（默认）或模式的。模态对话框是一种阻止输入到应用程序中其他一些顶级窗口的对话框，除了以该对话框作为其所有者创建的任何窗口。有关详细信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/java/awt/doc-files/Modality.html&quot;&gt;AWT Modality&lt;/a&gt;规范。</target>
        </trans-unit>
        <trans-unit id="904d1f2e68b031295de8cafe7035cb526e4f3232" translate="yes" xml:space="preserve">
          <source>A dialog may have another window as its owner when it's constructed. When the owner window of a visible dialog is minimized, the dialog will automatically be hidden from the user. When the owner window is subsequently restored, the dialog is made visible to the user again.</source>
          <target state="translated">一个对话框在构造时,可能有另一个窗口作为它的所有者。当一个可见对话框的所有者窗口被最小化时,该对话框将自动对用户隐藏。当所有者窗口随后被恢复时,对话框又会对用户可见。</target>
        </trans-unit>
        <trans-unit id="f495413b1396c36454c52331f1acea05a9263eaf" translate="yes" xml:space="preserve">
          <source>A dialog may have its native decorations (i.e. Frame &amp;amp; Titlebar) turned off with &lt;code&gt;setUndecorated&lt;/code&gt;. This can only be done while the dialog is not &lt;a href=&quot;component#isDisplayable()&quot;&gt;&lt;code&gt;displayable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">对话框可以使用 &lt;code&gt;setUndecorated&lt;/code&gt; 关闭其本机装饰（即Frame和Titlebar）。仅在对话框不可&lt;a href=&quot;component#isDisplayable()&quot;&gt; &lt;code&gt;displayable&lt;/code&gt; &lt;/a&gt;时才能执行此操作。</target>
        </trans-unit>
        <trans-unit id="f2ac3be272a0574021e64ac6b1513e44e8223162" translate="yes" xml:space="preserve">
          <source>A digit: &lt;code&gt;[0-9]&lt;/code&gt;</source>
          <target state="translated">一位数字： &lt;code&gt;[0-9]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e55b37ed13f5e44ba0fa6d222acf00463637355" translate="yes" xml:space="preserve">
          <source>A digit: &lt;code&gt;\p{IsDigit}&lt;/code&gt;</source>
          <target state="translated">一个数字： &lt;code&gt;\p{IsDigit}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e1c6320bfe897efcad522bedce59a1bf3c1d0a0" translate="yes" xml:space="preserve">
          <source>A direct byte buffer mapped to a region of a file</source>
          <target state="translated">一个直接的字节缓冲区,映射到文件的一个区域。</target>
        </trans-unit>
        <trans-unit id="0fc1a07aefb0815717141569b5cba4c4d5206598" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may also be created by &lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;&lt;code&gt;mapping&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory. An implementation of the Java platform may optionally support the creation of direct byte buffers from native code via JNI. If an instance of one of these kinds of buffers refers to an inaccessible region of memory then an attempt to access that region will not change the buffer's content and will cause an unspecified exception to be thrown either at the time of the access or at some later time.</source>
          <target state="translated">直接字节缓冲区也可以通过&lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt; &lt;code&gt;mapping&lt;/code&gt; &lt;/a&gt;文件的区域直接映射到内存中来创建。Java平台的实现可以选择支持通过JNI从本机代码创建直接字节缓冲区。如果这些缓冲区之一的实例引用了内存的不可访问区域，则尝试访问该区域将不会更改缓冲区的内容，并且将导致在访问时或稍后发生未指定的异常。时间。</target>
        </trans-unit>
        <trans-unit id="81aaa261b81128af12881c936333c5551a92c591" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may also be created by &lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;mapping&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory. An implementation of the Java platform may optionally support the creation of direct byte buffers from native code via JNI. If an instance of one of these kinds of buffers refers to an inaccessible region of memory then an attempt to access that region will not change the buffer's content and will cause an unspecified exception to be thrown either at the time of the access or at some later time.</source>
          <target state="translated">直接字节缓冲区也可以通过&lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;mapping&lt;/code&gt; &lt;/a&gt;文件的区域直接映射到内存中来创建。 Java平台的实现可以选择支持通过JNI从本机代码创建直接字节缓冲区。如果这些缓冲区之一的实例引用了内存的不可访问区域，则尝试访问该区域将不会更改缓冲区的内容，并且将导致在访问时或稍后出现未指定的异常。时间。</target>
        </trans-unit>
        <trans-unit id="337623b1fe9aafecb2caab98fab459cf9372f5c9" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may be created by invoking the &lt;a href=&quot;#allocateDirect(int)&quot;&gt;&lt;code&gt;allocateDirect&lt;/code&gt;&lt;/a&gt; factory method of this class. The buffers returned by this method typically have somewhat higher allocation and deallocation costs than non-direct buffers. The contents of direct buffers may reside outside of the normal garbage-collected heap, and so their impact upon the memory footprint of an application might not be obvious. It is therefore recommended that direct buffers be allocated primarily for large, long-lived buffers that are subject to the underlying system's native I/O operations. In general it is best to allocate direct buffers only when they yield a measurable gain in program performance.</source>
          <target state="translated">可以通过调用此类的&lt;a href=&quot;#allocateDirect(int)&quot;&gt; &lt;code&gt;allocateDirect&lt;/code&gt; &lt;/a&gt;工厂方法来创建直接字节缓冲区。这种方法返回的缓冲区通常比非直接缓冲区具有更高的分配和释放成本。直接缓冲区的内容可能驻留在普通垃圾回收堆的外部，因此它们对应用程序内存占用的影响可能并不明显。因此，建议直接缓冲区主要分配给大型，寿命长的缓冲区，这些缓冲区要受基础系统的本机I / O操作的约束。通常，最好仅在直接缓冲区产生可衡量的程序性能提升时才分配它们。</target>
        </trans-unit>
        <trans-unit id="cbbe5c24c618f05f3ad9a84e48d3d7e4a20571df" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may be created by invoking the &lt;a href=&quot;#allocateDirect(int)&quot;&gt;&lt;code&gt;allocateDirect&lt;/code&gt;&lt;/a&gt; factory method of this class. The buffers returned by this method typically have somewhat higher allocation and deallocation costs than non-direct buffers. The contents of direct buffers may reside outside of the normal garbage-collected heap, and so their impact upon the memory footprint of an application might not be obvious. It is therefore recommended that direct buffers be allocated primarily for large, long-lived buffers that are subject to the underlying system's native I/O operations. In general it is best to allocate direct buffers only when they yield a measureable gain in program performance.</source>
          <target state="translated">可以通过调用此类的&lt;a href=&quot;#allocateDirect(int)&quot;&gt; &lt;code&gt;allocateDirect&lt;/code&gt; &lt;/a&gt;工厂方法来创建直接字节缓冲区。这种方法返回的缓冲区通常比非直接缓冲区具有更高的分配和释放成本。直接缓冲区的内容可能驻留在普通垃圾回收堆的外部，因此它们对应用程序内存占用的影响可能并不明显。因此，建议直接缓冲区主要分配给大型，寿命长的缓冲区，这些缓冲区要受基础系统的本机I / O操作的约束。通常，最好仅在直接缓冲区产生可衡量的程序性能提升时才分配它们。</target>
        </trans-unit>
        <trans-unit id="ab01d4bccb2016b6742b55c3ca10eb76a7c66d26" translate="yes" xml:space="preserve">
          <source>A direct byte buffer may be created by invoking the &lt;a href=&quot;bytebuffer#allocateDirect-int-&quot;&gt;&lt;code&gt;allocateDirect&lt;/code&gt;&lt;/a&gt; factory method of this class. The buffers returned by this method typically have somewhat higher allocation and deallocation costs than non-direct buffers. The contents of direct buffers may reside outside of the normal garbage-collected heap, and so their impact upon the memory footprint of an application might not be obvious. It is therefore recommended that direct buffers be allocated primarily for large, long-lived buffers that are subject to the underlying system's native I/O operations. In general it is best to allocate direct buffers only when they yield a measureable gain in program performance.</source>
          <target state="translated">可以通过调用此类的&lt;a href=&quot;bytebuffer#allocateDirect-int-&quot;&gt; &lt;code&gt;allocateDirect&lt;/code&gt; &lt;/a&gt;工厂方法来创建直接字节缓冲区。这种方法返回的缓冲区通常比非直接缓冲区具有更高的分配和释放成本。直接缓冲区的内容可能驻留在普通垃圾回收堆的外部，因此它们对应用程序内存占用的影响可能并不明显。因此，建议直接缓冲区主要分配给大型，寿命长的缓冲区，这些缓冲区要受基础系统的本机I / O操作的约束。通常，最好仅在直接缓冲区产生可观的程序性能提升时才分配它们。</target>
        </trans-unit>
        <trans-unit id="9e62af31304449a0e8e9997671ca8cef65fe0060" translate="yes" xml:space="preserve">
          <source>A direct byte buffer whose content is a memory-mapped region of a file.</source>
          <target state="translated">一个直接的字节缓冲区,其内容是文件的内存映射区域。</target>
        </trans-unit>
        <trans-unit id="27d710eefe649a75a4ba4bf7f513ec23a73d1bf8" translate="yes" xml:space="preserve">
          <source>A direct method handle reference kind, as defined in the &lt;a href=&quot;methodhandleinfo#refkinds&quot;&gt;table above&lt;/a&gt;.</source>
          <target state="translated">上&lt;a href=&quot;methodhandleinfo#refkinds&quot;&gt;表中&lt;/a&gt;定义的直接方法句柄引用种类。</target>
        </trans-unit>
        <trans-unit id="2c4d94bf1cbf3f0b6e58c8d46620a3904bfb67dc" translate="yes" xml:space="preserve">
          <source>A directory might return more attributes than was requested (see &lt;strong&gt;Attribute Type Names&lt;/strong&gt; in the class description), but is not allowed to return arbitrary, unrelated attributes.</source>
          <target state="translated">目录返回的属性可能比请求的要多（请参阅类描述中的&amp;ldquo; &lt;strong&gt;属性类型名称&lt;/strong&gt; &amp;rdquo;），但不允许返回任意的，不相关的属性。</target>
        </trans-unit>
        <trans-unit id="2f43b3eeaa9f2985c2c0a2500f1ecaf8cf55ba57" translate="yes" xml:space="preserve">
          <source>A directory might return more attributes than were requested (see &lt;strong&gt;Attribute Type Names&lt;/strong&gt; in the class description) but is not allowed to return arbitrary, unrelated attributes.</source>
          <target state="translated">目录返回的属性可能比请求的多（请参阅类描述中的&amp;ldquo; &lt;strong&gt;属性类型名称&lt;/strong&gt; &amp;rdquo;），但不允许返回任意的，不相关的属性。</target>
        </trans-unit>
        <trans-unit id="03fe397e85f8a42f3fbf743c8747c214f39a12ce" translate="yes" xml:space="preserve">
          <source>A directory stream is not required to be</source>
          <target state="translated">一个目录流不需要是</target>
        </trans-unit>
        <trans-unit id="688f381d5ef6e2e50ea91339058716db8dfc57cc" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;RowSet&lt;/code&gt; object that has implemented the &lt;code&gt;RowSetInternal&lt;/code&gt; interface can call on its reader (the &lt;code&gt;RowSetReader&lt;/code&gt; object associated with it) to populate it with data. When an application calls the &lt;code&gt;RowSet.execute&lt;/code&gt; method, that method calls on the rowset's reader to do much of the work. Implementations can vary widely, but generally a reader makes a connection to the data source, reads data from the data source and populates the rowset with it, and closes the connection. A reader may also update the &lt;code&gt;RowSetMetaData&lt;/code&gt; object for its rowset. The rowset's internal state is also updated, either by the reader or directly by the method &lt;code&gt;RowSet.execute&lt;/code&gt;.</source>
          <target state="translated">已经实现 &lt;code&gt;RowSetInternal&lt;/code&gt; 接口的断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象可以调用其读取器（与之关联的 &lt;code&gt;RowSetReader&lt;/code&gt; 对象）以向其填充数据。当应用程序调用 &lt;code&gt;RowSet.execute&lt;/code&gt; 方法时，该方法将调用行集的读取器来完成许多工作。实现的变化范围很广，但是通常，阅读器会与数据源建立连接，从数据源读取数据，并使用数据填充行集，然后关闭连接。读者也可以为其行集更新 &lt;code&gt;RowSetMetaData&lt;/code&gt; 对象。行集的内部状态也可以通过读取器或直接通过 &lt;code&gt;RowSet.execute&lt;/code&gt; 方法来更新。</target>
        </trans-unit>
        <trans-unit id="110186d8a895ddbb678f6d03ccace1c416a9dfda" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;RowSet&lt;/code&gt; object that has implemented the &lt;code&gt;RowSetInternal&lt;/code&gt; interface can call on its writer (the &lt;code&gt;RowSetWriter&lt;/code&gt; object associated with it) to write changes back to the underlying data source. Implementations may vary widely, but generally, a writer will do the following:</source>
          <target state="translated">已实现 &lt;code&gt;RowSetInternal&lt;/code&gt; 接口的断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象可以调用其编写器（ &lt;code&gt;RowSetWriter&lt;/code&gt; 关联的RowSetWriter对象），将更改写回到基础数据源。实现可能有很大的不同，但是通常，编写者将执行以下操作：</target>
        </trans-unit>
        <trans-unit id="450d789fb4ad236790f5011ec44343669706eef9" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;RowSet&lt;/code&gt; object, such as a &lt;code&gt;CachedRowSet&lt;/code&gt; object, &lt;b&gt;should&lt;/b&gt; delegate connection management to a &lt;code&gt;SyncProvider&lt;/code&gt; object provided by the &lt;code&gt;SyncFactory&lt;/code&gt;. To ensure fully disconnected semantics, all disconnected &lt;code&gt;RowSet&lt;/code&gt; objects &lt;b&gt;must&lt;/b&gt; ensure that the original connection made to the data source to populate the &lt;code&gt;RowSet&lt;/code&gt; object is closed to permit the garbage collector to recover and release resources. The &lt;code&gt;SyncProvider&lt;/code&gt; object ensures that the critical JDBC properties are maintained in order to re-establish a connection to the data source when a synchronization is required. A disconnected &lt;code&gt;RowSet&lt;/code&gt; object should therefore ensure that no extraneous references remain on the &lt;code&gt;Connection&lt;/code&gt; object.</source>
          <target state="translated">断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象（例如 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象）&lt;b&gt;应将&lt;/b&gt;连接管理委派给 &lt;code&gt;SyncFactory&lt;/code&gt; 提供的 &lt;code&gt;SyncProvider&lt;/code&gt; 对象。为了确保语义完全断开，所有断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象&lt;b&gt;必须&lt;/b&gt;确保关闭与数据源的原始连接以填充 &lt;code&gt;RowSet&lt;/code&gt; 对象，以允许垃圾回收器恢复和释放资源。所述 &lt;code&gt;SyncProvider&lt;/code&gt; 对象确保临界JDBC性能得到保持，以便需要时同步重新建立到数据源的连接。断开连接的 &lt;code&gt;RowSet&lt;/code&gt; &lt;b&gt;&lt;/b&gt;因此，对象应确保 &lt;code&gt;Connection&lt;/code&gt; 对象上没有多余的引用。</target>
        </trans-unit>
        <trans-unit id="0f70425adb4860eace6ccc351f6a243d8c310126" translate="yes" xml:space="preserve">
          <source>A disconnected &lt;code&gt;Rowset&lt;/code&gt; object may get access to a &lt;code&gt;SyncProvider&lt;/code&gt; object in one of the following two ways:</source>
          <target state="translated">断开连接的 &lt;code&gt;Rowset&lt;/code&gt; 对象可以通过以下两种方式之一访问 &lt;code&gt;SyncProvider&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="f36a9dca7441e97c0bdb8885b48b0430dc5dcf59" translate="yes" xml:space="preserve">
          <source>A disconnected rowset may have a &lt;code&gt;Reader&lt;/code&gt; (a &lt;code&gt;RowSetReader&lt;/code&gt; object) and a writer (a &lt;code&gt;RowSetWriter&lt;/code&gt; object) associated with it. The &lt;code&gt;Reader&lt;/code&gt; may be implemented in many different ways to populate a rowset with data, including getting data from a non-relational data source. The writer can also be implemented in many different ways to propagate changes made to the rowset's data back to the underlying data source.</source>
          <target state="translated">断开连接的行集可能具有与之关联的 &lt;code&gt;Reader&lt;/code&gt; （一个 &lt;code&gt;RowSetReader&lt;/code&gt; 对象）和一个writer（一个 &lt;code&gt;RowSetWriter&lt;/code&gt; 对象）。该 &lt;code&gt;Reader&lt;/code&gt; 可以在许多不同的方式来填充数据行集，包括从非关系型数据源获取数据来实现。还可以通过许多不同的方式来实现writer，以便将对行集数据所做的更改传播回基础数据源。</target>
        </trans-unit>
        <trans-unit id="24aaafb4de473bcceb6c1a588033ca327c736e00" translate="yes" xml:space="preserve">
          <source>A discussion of the use of dynamically typesafe views may be found in the documentation for the &lt;a href=&quot;#checkedCollection(java.util.Collection,java.lang.Class)&quot;&gt;&lt;code&gt;checkedCollection&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">有关使用动态类型安全视图的讨论，可以在&lt;a href=&quot;#checkedCollection(java.util.Collection,java.lang.Class)&quot;&gt; &lt;code&gt;checkedCollection&lt;/code&gt; &lt;/a&gt;方法的文档中找到。</target>
        </trans-unit>
        <trans-unit id="1daa8bbdabafd9fce66bb5e5f6f1d901814d2276" translate="yes" xml:space="preserve">
          <source>A discussion of the use of dynamically typesafe views may be found in the documentation for the &lt;a href=&quot;collections#checkedCollection-java.util.Collection-java.lang.Class-&quot;&gt;&lt;code&gt;checkedCollection&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">有关使用动态类型安全视图的讨论，可以在&lt;a href=&quot;collections#checkedCollection-java.util.Collection-java.lang.Class-&quot;&gt; &lt;code&gt;checkedCollection&lt;/code&gt; &lt;/a&gt;方法的文档中找到。</target>
        </trans-unit>
        <trans-unit id="5bf7cdfb210761e58612920806cc60028cef0dee" translate="yes" xml:space="preserve">
          <source>A display area for a short text string or an image, or both.</source>
          <target state="translated">一个显示区域,用于显示一个简短的文本字符串或图像,或两者。</target>
        </trans-unit>
        <trans-unit id="5a434aab2ca42e2ccca690bb12ce75fe97d8f206" translate="yes" xml:space="preserve">
          <source>A display area for a short text string or an image, or both. A label does not react to input events. As a result, it cannot get the keyboard focus. A label can, however, display a keyboard alternative as a convenience for a nearby component that has a keyboard alternative but can't display it.</source>
          <target state="translated">一个显示区域,用于显示一个简短的文本字符串或图像,或两者。标签对输入事件没有反应。因此,它不能获得键盘焦点。但是,标签可以显示一个键盘选项,为附近有键盘选项但不能显示的组件提供方便。</target>
        </trans-unit>
        <trans-unit id="2af42f197ce8c147ed5af6ab9abbb20857cbf9da" translate="yes" xml:space="preserve">
          <source>A distinct rendering area of a Swing component.</source>
          <target state="translated">Swing组件的一个独特的渲染区域。</target>
        </trans-unit>
        <trans-unit id="4b400d01f64cbdd08143ab0c640264ea343ecb60" translate="yes" xml:space="preserve">
          <source>A distinct rendering area of a Swing component. A component may support one or more regions. Specific component regions are defined by the typesafe enumeration in this class.</source>
          <target state="translated">一个Swing组件的不同渲染区域。一个组件可以支持一个或多个区域。具体的组件区域由该类中的typeafe枚举定义。</target>
        </trans-unit>
        <trans-unit id="880fb129a686d82ae7e8a1faddba49404e033c38" translate="yes" xml:space="preserve">
          <source>A do-nothing constructor.</source>
          <target state="translated">一个无所事事的构造函数。</target>
        </trans-unit>
        <trans-unit id="ba128ff46d6d09091f6de642d4da3a2a3af5bf2f" translate="yes" xml:space="preserve">
          <source>A document that can be marked up with character and paragraph styles in a manner similar to the Rich Text Format.</source>
          <target state="translated">可以用类似于富文本格式的方式用字符和段落样式标记的文档。</target>
        </trans-unit>
        <trans-unit id="6466e47872811247292613ad06e41649e2466883" translate="yes" xml:space="preserve">
          <source>A document that can be marked up with character and paragraph styles in a manner similar to the Rich Text Format. The element structure for this document represents style crossings for style runs. These style runs are mapped into a paragraph element structure (which may reside in some other structure). The style runs break at paragraph boundaries since logical styles are assigned to paragraph boundaries.</source>
          <target state="translated">一个文档,可以用类似于富文本格式的方式标记字符和段落样式。该文档的元素结构表示样式运行的样式交叉。这些样式运行被映射到一个段落元素结构中(它可能位于其他结构中)。样式运行在段落边界处断开,因为逻辑样式被分配到段落边界。</target>
        </trans-unit>
        <trans-unit id="9cf5b610d9afca74d207b8d156cd175c162fb034" translate="yes" xml:space="preserve">
          <source>A document that models HTML.</source>
          <target state="translated">一个HTML模型的文档。</target>
        </trans-unit>
        <trans-unit id="3463762c970ad57db4db9fc03ca463b94634ba5f" translate="yes" xml:space="preserve">
          <source>A document that models HTML. The purpose of this model is to support both browsing and editing. As a result, the structure described by an HTML document is not exactly replicated by default. The element structure that is modeled by default, is built by the class &lt;code&gt;HTMLDocument.HTMLReader&lt;/code&gt;, which implements the &lt;code&gt;HTMLEditorKit.ParserCallback&lt;/code&gt; protocol that the parser expects. To change the structure one can subclass &lt;code&gt;HTMLReader&lt;/code&gt;, and reimplement the method &lt;a href=&quot;#getReader(int)&quot;&gt;&lt;code&gt;getReader(int)&lt;/code&gt;&lt;/a&gt; to return the new reader implementation. The documentation for &lt;code&gt;HTMLReader&lt;/code&gt; should be consulted for the details of the default structure created. The intent is that the document be non-lossy (although reproducing the HTML format may result in a different format).</source>
          <target state="translated">建模HTML的文档。该模型的目的是支持浏览和编辑。结果，默认情况下不会完全复制HTML文档描述的结构。默认情况下建模的元素结构由类 &lt;code&gt;HTMLDocument.HTMLReader&lt;/code&gt; 构建，该类实现了解析器期望的 &lt;code&gt;HTMLEditorKit.ParserCallback&lt;/code&gt; 协议。要更改结构，可以将 &lt;code&gt;HTMLReader&lt;/code&gt; 子类化，然后重新实现&lt;a href=&quot;#getReader(int)&quot;&gt; &lt;code&gt;getReader(int)&lt;/code&gt; &lt;/a&gt;方法以返回新的阅读器实现。 &lt;code&gt;HTMLReader&lt;/code&gt; 的文档有关创建的默认结构的详细信息，请查阅。目的是使文档无损（尽管复制HTML格式可能会导致格式不同）。</target>
        </trans-unit>
        <trans-unit id="b71c71564559739571d89dc193d01264a17d03d7" translate="yes" xml:space="preserve">
          <source>A documentation comment of an element is a comment that begins with &quot;&lt;code&gt;/**&lt;/code&gt;&quot; , ends with a separate &quot;&lt;code&gt;*/&lt;/code&gt;&quot;, and immediately precedes the element, ignoring white space. Therefore, a documentation comment contains at least three&quot;&lt;code&gt;*&lt;/code&gt;&quot; characters. The text returned for the documentation comment is a processed form of the comment as it appears in source code. The leading &quot;&lt;code&gt;
 /**&lt;/code&gt;&quot; and trailing &quot;&lt;code&gt;*/&lt;/code&gt;&quot; are removed. For lines of the comment starting after the initial &quot;&lt;code&gt;/**&lt;/code&gt;&quot;, leading white space characters are discarded as are any consecutive &quot;&lt;code&gt;*&lt;/code&gt;&quot; characters appearing after the white space or starting the line. The processed lines are then concatenated together (including line terminators) and returned.</source>
          <target state="translated">元素的文档注释是这样的注释，其注释以&amp;ldquo; &lt;code&gt;/**&lt;/code&gt; &amp;rdquo;开头，以单独的&amp;ldquo; &lt;code&gt;*/&lt;/code&gt; &amp;rdquo;结尾，并紧随该元素之前，忽略空白。因此，文档注释至少包含三个&amp;ldquo; &lt;code&gt;*&lt;/code&gt; &amp;rdquo;字符。返回文档注释的文本是注释的经过处理的形式，如其在源代码中所示。开头的&amp;ldquo; &lt;code&gt; /**&lt;/code&gt; &amp;rdquo;和结尾的&amp;ldquo; &lt;code&gt;*/&lt;/code&gt; &amp;rdquo;已删除。对于以&amp;ldquo; &lt;code&gt;/**&lt;/code&gt; &amp;rdquo;开头的注释行，与所有连续的&amp;ldquo; &lt;code&gt;*&lt;/code&gt; &amp;rdquo;一样，前导空格字符都将被丢弃字符出现在空格之后或行首。然后将处理过的行连接在一起（包括行终止符）并返回。</target>
        </trans-unit>
        <trans-unit id="b3f4fef94aef2e7e91d9e397eff9c286026bcf3e" translate="yes" xml:space="preserve">
          <source>A documentation comment of an element is a comment that begins with &quot;&lt;code&gt;/**&lt;/code&gt;&quot; , ends with a separate &quot;&lt;code&gt;*/&lt;/code&gt;&quot;, and immediately precedes the element, ignoring white space. Therefore, a documentation comment contains at least three&quot;&lt;code&gt;*&lt;/code&gt;&quot; characters. The text returned for the documentation comment is a processed form of the comment as it appears in source code. The leading &quot;&lt;code&gt;/**&lt;/code&gt;&quot; and trailing &quot;&lt;code&gt;*/&lt;/code&gt;&quot; are removed. For lines of the comment starting after the initial &quot;&lt;code&gt;/**&lt;/code&gt;&quot;, leading white space characters are discarded as are any consecutive &quot;&lt;code&gt;*&lt;/code&gt;&quot; characters appearing after the white space or starting the line. The processed lines are then concatenated together (including line terminators) and returned.</source>
          <target state="translated">元素的文档注释是这样的注释，其注释以&amp;ldquo; &lt;code&gt;/**&lt;/code&gt; &amp;rdquo; 开头，以单独的&amp;ldquo; &lt;code&gt;*/&lt;/code&gt; &amp;rdquo; 结尾，并紧随该元素之前，忽略空白。因此，文档注释至少包含三个&amp;ldquo; &lt;code&gt;*&lt;/code&gt; &amp;rdquo;字符。返回文档注释的文本是注释的经过处理的形式，如在源代码中所示。开头的&amp;ldquo; &lt;code&gt;/**&lt;/code&gt; &amp;rdquo;和结尾的&amp;ldquo; &lt;code&gt;*/&lt;/code&gt; &amp;rdquo;已删除。对于以&amp;ldquo; &lt;code&gt;/**&lt;/code&gt; &amp;rdquo; 开头的注释行，前面的空格字符和任何连续的&amp;ldquo; &lt;code&gt;*&lt;/code&gt; &amp;rdquo;都将被丢弃字符出现在空格之后或行首。然后将处理过的行连接在一起（包括行终止符）并返回。</target>
        </trans-unit>
        <trans-unit id="545f3669480c8808e321f44caf0afcd640b24087" translate="yes" xml:space="preserve">
          <source>A documentation comment of an element is a comment that begins with &quot;&lt;code&gt;/**&lt;/code&gt;&quot;, ends with a separate &quot;&lt;code&gt;*/&lt;/code&gt;&quot;, and immediately precedes the element, ignoring white space. Therefore, a documentation comment contains at least three &quot;&lt;code&gt;*&lt;/code&gt;&quot; characters. The text returned for the documentation comment is a processed form of the comment as it appears in source code. The leading &quot;&lt;code&gt;/**&lt;/code&gt;&quot; and trailing &quot;&lt;code&gt;*/&lt;/code&gt;&quot; are removed. For lines of the comment starting after the initial &quot;&lt;code&gt;/**&lt;/code&gt;&quot;, leading white space characters are discarded as are any consecutive &quot;&lt;code&gt;*&lt;/code&gt;&quot; characters appearing after the white space or starting the line. The processed lines are then concatenated together (including line terminators) and returned.</source>
          <target state="translated">元素的文档注释是这样的注释，该注释以&amp;ldquo; &lt;code&gt;/**&lt;/code&gt; &amp;rdquo;开头，以单独的&amp;ldquo; &lt;code&gt;*/&lt;/code&gt; &amp;rdquo;结尾，并且紧随该元素之前，忽略空白。因此，文档注释至少包含三个&amp;ldquo; &lt;code&gt;*&lt;/code&gt; &amp;rdquo;字符。返回文档注释的文本是注释的经过处理的形式，如其在源代码中所示。开头的&amp;ldquo; &lt;code&gt;/**&lt;/code&gt; &amp;rdquo;和结尾的&amp;ldquo; &lt;code&gt;*/&lt;/code&gt; &amp;rdquo;已删除。对于以&amp;ldquo; &lt;code&gt;/**&lt;/code&gt; &amp;rdquo;开头的注释行，与所有连续的&amp;ldquo; &lt;code&gt;*&lt;/code&gt; &amp;rdquo;一样，前导空格字符都将被丢弃字符出现在空格之后或行首。然后将处理过的行连接在一起（包括行终止符）并返回。</target>
        </trans-unit>
        <trans-unit id="8a519d07cd7e79c8044a66914a8a5c4fbc8d047e" translate="yes" xml:space="preserve">
          <source>A documentation for a candidate for continuation of the given user's input.</source>
          <target state="translated">候选者的文件,用于继续给定用户的输入。</target>
        </trans-unit>
        <trans-unit id="fc953ed4ff12851c45b606c0dca273654084ace6" translate="yes" xml:space="preserve">
          <source>A domain name consisting of one or more</source>
          <target state="translated">一个域名由一个或多个</target>
        </trans-unit>
        <trans-unit id="f0a13517cae5c3558d1607d5b802c6dbc9b72514" translate="yes" xml:space="preserve">
          <source>A dotted-quad IPv4 address of the form</source>
          <target state="translated">一个点阵式的IPv4地址,形式为</target>
        </trans-unit>
        <trans-unit id="5a84dd1bce4cdbeb08becc1d7ae6d1d359e78aa6" translate="yes" xml:space="preserve">
          <source>A double buffer is not comparable to any other type of object.</source>
          <target state="translated">双重缓冲区不是其他类型的对象所能比拟的。</target>
        </trans-unit>
        <trans-unit id="c42eb01adeccbb9bb551f09447b1ea18887c870f" translate="yes" xml:space="preserve">
          <source>A double buffer is not equal to any other type of object.</source>
          <target state="translated">双缓冲区不等于任何其他类型的对象。</target>
        </trans-unit>
        <trans-unit id="eef80ddc49ceb62f77b5716e5156654ae8ddee60" translate="yes" xml:space="preserve">
          <source>A double buffer.</source>
          <target state="translated">一个双缓冲区。</target>
        </trans-unit>
        <trans-unit id="c4de03a0777a17496e226bfbd9084bda84d187a9" translate="yes" xml:space="preserve">
          <source>A double click listener.</source>
          <target state="translated">一个双击听筒。</target>
        </trans-unit>
        <trans-unit id="2eeb0e4ee0ca6dfa257886d6f97b74b0924e5fe0" translate="yes" xml:space="preserve">
          <source>A double value that represents the angular extent of the arc in degrees.</source>
          <target state="translated">一个双值,表示弧线的角度范围,单位是度。</target>
        </trans-unit>
        <trans-unit id="bcbb9667d570232b95d0a554b50eb130abe5a862" translate="yes" xml:space="preserve">
          <source>A double value that represents the starting angle of the arc in degrees.</source>
          <target state="translated">一个双值,表示弧线的起始角度,单位是度。</target>
        </trans-unit>
        <trans-unit id="d0cec8f9e99dfd7dea921d292434a4c23e91e89f" translate="yes" xml:space="preserve">
          <source>A down-cycle focus traversal action.</source>
          <target state="translated">下周期重点穿越动作。</target>
        </trans-unit>
        <trans-unit id="7dd676ca98f55c2728eafc7eed92cc4112f1eba4" translate="yes" xml:space="preserve">
          <source>A driver that is accessed via a &lt;code&gt;DataSource&lt;/code&gt; object does not register itself with the &lt;code&gt;DriverManager&lt;/code&gt;. Rather, a &lt;code&gt;DataSource&lt;/code&gt; object is retrieved through a lookup operation and then used to create a &lt;code&gt;Connection&lt;/code&gt; object. With a basic implementation, the connection obtained through a &lt;code&gt;DataSource&lt;/code&gt; object is identical to a connection obtained through the &lt;code&gt;DriverManager&lt;/code&gt; facility.</source>
          <target state="translated">通过 &lt;code&gt;DataSource&lt;/code&gt; 对象访问的驱动程序不会在 &lt;code&gt;DriverManager&lt;/code&gt; 中注册自身。而是，通过查找操作检索 &lt;code&gt;DataSource&lt;/code&gt; 对象，然后将其用于创建 &lt;code&gt;Connection&lt;/code&gt; 对象。通过基本实现，通过 &lt;code&gt;DataSource&lt;/code&gt; 对象获得的连接与通过 &lt;code&gt;DriverManager&lt;/code&gt; 工具获得的连接相同。</target>
        </trans-unit>
        <trans-unit id="1f6b416a3bb637b910a1a9345bce82c1097d25bd" translate="yes" xml:space="preserve">
          <source>A dummy constructor.</source>
          <target state="translated">一个虚构函数。</target>
        </trans-unit>
        <trans-unit id="ec23e7b42341db8a34268a2d8f2135e2acccceeb" translate="yes" xml:space="preserve">
          <source>A duration of zero or one nanosecond would have no truncation effect. Passing one of these will return the underlying clock.</source>
          <target state="translated">持续时间为零或一纳秒将不会产生截断效果。传递其中一个将返回基础时钟。</target>
        </trans-unit>
        <trans-unit id="707ea64794ea49795fc1fbf1c5bb2e342b9a2947" translate="yes" xml:space="preserve">
          <source>A duration of zero would have no offsetting effect. Passing zero will return the underlying clock.</source>
          <target state="translated">持续时间为零将不会产生抵消效果。过零将返回基本时钟。</target>
        </trans-unit>
        <trans-unit id="9b537f9aafa5416ef5331e31b922ae14170c2110" translate="yes" xml:space="preserve">
          <source>A dynamic call site is linked just before its first execution. The bootstrap method call implementing the linkage occurs within a thread that is attempting a first execution.</source>
          <target state="translated">一个动态调用站点在其第一次执行之前就被链接。实现链接的bootstrap方法调用发生在一个正在尝试第一次执行的线程中。</target>
        </trans-unit>
        <trans-unit id="80f373678cec5d9f9816518ac0151384e5addeb3" translate="yes" xml:space="preserve">
          <source>A dynamic call site is originally in an unlinked state. In this state, there is no target method for the call site to invoke.</source>
          <target state="translated">一个动态的调用站点最初是处于非链接状态。在这种状态下,调用站点没有目标方法可以调用。</target>
        </trans-unit>
        <trans-unit id="a35f1d6c92b89c6d3284e21bbafa4993e9e55cab" translate="yes" xml:space="preserve">
          <source>A dynamic module can read the modules of all of the superinterfaces of a proxy class and the modules of the types referenced by all public method signatures of a proxy class. If a superinterface or a referenced type, say &lt;code&gt;T&lt;/code&gt;, is in a non-exported package, the &lt;a href=&quot;../module&quot;&gt;module&lt;/a&gt; of &lt;code&gt;T&lt;/code&gt; is updated to export the package of &lt;code&gt;T&lt;/code&gt; to the dynamic module.</source>
          <target state="translated">动态模块可以读取代理类的所有超级接口的模块以及代理类的所有公共方法签名引用的类型的模块。如果一个超接口或引用的类型，比方说 &lt;code&gt;T&lt;/code&gt; ，是在非导出的软件包，所述&lt;a href=&quot;../module&quot;&gt;模块&lt;/a&gt;的 &lt;code&gt;T&lt;/code&gt; 更新为包导出 &lt;code&gt;T&lt;/code&gt; 到动态模块。</target>
        </trans-unit>
        <trans-unit id="ddb5ee4c0960e48c089f4d8e38609787b474d01d" translate="yes" xml:space="preserve">
          <source>A dynamic module is a named module generated at runtime. A proxy class defined in a dynamic module is encapsulated and not accessible to any module. Calling &lt;a href=&quot;constructor#newInstance(java.lang.Object...)&quot;&gt;&lt;code&gt;Constructor.newInstance(Object...)&lt;/code&gt;&lt;/a&gt; on a proxy class in a dynamic module will throw &lt;code&gt;IllegalAccessException&lt;/code&gt;; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; method should be used instead.</source>
          <target state="translated">动态模块是在运行时生成的命名模块。动态模块中定义的代理类已封装，任何模块都无法访问。在动态模块中的代理类上调用&lt;a href=&quot;constructor#newInstance(java.lang.Object...)&quot;&gt; &lt;code&gt;Constructor.newInstance(Object...)&lt;/code&gt; &lt;/a&gt;会抛出 &lt;code&gt;IllegalAccessException&lt;/code&gt; ; 应该改用 &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="e0e84d0f37ed837b18dc38b43e9581df209ca4d8" translate="yes" xml:space="preserve">
          <source>A facility for threads to schedule tasks for future execution in a background thread.</source>
          <target state="translated">为线程提供的一种设施,用于在后台线程中调度未来执行的任务。</target>
        </trans-unit>
        <trans-unit id="bdaa3fdd98dc8ca4ca47e134d4bacf3327c2afba" translate="yes" xml:space="preserve">
          <source>A facility for threads to schedule tasks for future execution in a background thread. Tasks may be scheduled for one-time execution, or for repeated execution at regular intervals.</source>
          <target state="translated">一种用于线程在后台线程中调度任务以供将来执行的设施。任务可以被安排为一次性执行,也可以定期重复执行。</target>
        </trans-unit>
        <trans-unit id="9eb599a894d1362c773f87be709e799cd7ba2e0d" translate="yes" xml:space="preserve">
          <source>A facility to load implementations of a service.</source>
          <target state="translated">装载服务实施的设施。</target>
        </trans-unit>
        <trans-unit id="3e9d6b0d519e0d5df9d38026b8e9f08942170f60" translate="yes" xml:space="preserve">
          <source>A factory API that enables applications to obtain a &lt;code&gt;RowSetFactory&lt;/code&gt; implementation that can be used to create different types of &lt;code&gt;RowSet&lt;/code&gt; implementations.</source>
          <target state="translated">工厂API，使应用程序能够获取 &lt;code&gt;RowSetFactory&lt;/code&gt; 实现，该实现可用于创建不同类型的 &lt;code&gt;RowSet&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="98d5a1240b4d6af21c0f0633cb83b9d2a9f2f464" translate="yes" xml:space="preserve">
          <source>A factory class for creating &lt;a href=&quot;dynamiclinker&quot;&gt;&lt;code&gt;DynamicLinker&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">用于创建&lt;a href=&quot;dynamiclinker&quot;&gt; &lt;code&gt;DynamicLinker&lt;/code&gt; &lt;/a&gt;对象的工厂类。</target>
        </trans-unit>
        <trans-unit id="5f32e2e60153bf31217181f139a7b507d0e43f61" translate="yes" xml:space="preserve">
          <source>A factory class for creating &lt;a href=&quot;dynamiclinker&quot;&gt;&lt;code&gt;DynamicLinker&lt;/code&gt;&lt;/a&gt; objects. Dynamic linkers are the central objects in Dynalink; these are composed of several &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; objects and coordinate linking of call sites with them. The usual dynamic linker is a linker composed of all &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; objects explicitly pre-created by the user of the factory and configured with &lt;a href=&quot;#setPrioritizedLinkers(java.util.List)&quot;&gt;&lt;code&gt;setPrioritizedLinkers(List)&lt;/code&gt;&lt;/a&gt;, as well as any &lt;a href=&quot;#setClassLoader(java.lang.ClassLoader)&quot;&gt;&lt;code&gt;automatically discovered&lt;/code&gt;&lt;/a&gt; ones, and finally the ones configured with &lt;a href=&quot;#setFallbackLinkers(java.util.List)&quot;&gt;&lt;code&gt;setFallbackLinkers(List)&lt;/code&gt;&lt;/a&gt;; this last category usually includes &lt;a href=&quot;beans/beanslinker&quot;&gt;&lt;code&gt;BeansLinker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于创建&lt;a href=&quot;dynamiclinker&quot;&gt; &lt;code&gt;DynamicLinker&lt;/code&gt; &lt;/a&gt;对象的工厂类。动态链接器是Dynalink中的中心对象。这些由几个&lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; &lt;/a&gt;对象组成，并协调呼叫站点与它们的链接。通常的动态链接器是由所有&lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; &lt;/a&gt;对象组成的链接器，这些对象由工厂用户显式预先创建并配置有&lt;a href=&quot;#setPrioritizedLinkers(java.util.List)&quot;&gt; &lt;code&gt;setPrioritizedLinkers(List)&lt;/code&gt; &lt;/a&gt;以及任何&lt;a href=&quot;#setClassLoader(java.lang.ClassLoader)&quot;&gt; &lt;code&gt;automatically discovered&lt;/code&gt; &lt;/a&gt;的对象，最后是由&lt;a href=&quot;#setFallbackLinkers(java.util.List)&quot;&gt; &lt;code&gt;setFallbackLinkers(List)&lt;/code&gt; &lt;/a&gt;配置的对象；最后一个类别通常包括&lt;a href=&quot;beans/beanslinker&quot;&gt; &lt;code&gt;BeansLinker&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9d83bf4f0dfb948ac8ea59714cca2a0d1d7f915b" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;PooledConnection&lt;/code&gt; 对象的工厂。</target>
        </trans-unit>
        <trans-unit id="4079df8510ea4b42042be30d372469553f00611f" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects. An object that implements this interface will typically be registered with a naming service that is based on the Java Naming and Directory Interface (JNDI).</source>
          <target state="translated">&lt;code&gt;PooledConnection&lt;/code&gt; 对象的工厂。通常，将向基于Java命名和目录接口（JNDI）的命名服务注册实现此接口的对象。</target>
        </trans-unit>
        <trans-unit id="ae5bf3593b2bc2ebbd3b41b8caf27d80db5b1246" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;PooledConnection&lt;/code&gt; objects. An object that implements this interface will typically be registered with a naming service that is based on the Java&amp;trade; Naming and Directory Interface (JNDI).</source>
          <target state="translated">&lt;code&gt;PooledConnection&lt;/code&gt; 对象的工厂。通常，将使用基于Java&amp;trade;命名和目录接口（JNDI）的命名服务来注册实现此接口的对象。</target>
        </trans-unit>
        <trans-unit id="579b6f648f592b2c7ff6326232a8cd8cc173bf83" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally.</source>
          <target state="translated">内部使用的 &lt;code&gt;XAConnection&lt;/code&gt; 对象的工厂。</target>
        </trans-unit>
        <trans-unit id="2fd8a6518ad98e04361c5c6a8384cdf45536a3c3" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally. An object that implements the &lt;code&gt;XADataSource&lt;/code&gt; interface is typically registered with a naming service that uses the Java Naming and Directory Interface (JNDI).</source>
          <target state="translated">内部使用的 &lt;code&gt;XAConnection&lt;/code&gt; 对象的工厂。通常，向 &lt;code&gt;XADataSource&lt;/code&gt; 接口的对象注册使用Java命名和目录接口（JNDI）的命名服务。</target>
        </trans-unit>
        <trans-unit id="10a7fb9a720b14cdeded353cb7a72ae0f53b0b28" translate="yes" xml:space="preserve">
          <source>A factory for &lt;code&gt;XAConnection&lt;/code&gt; objects that is used internally. An object that implements the &lt;code&gt;XADataSource&lt;/code&gt; interface is typically registered with a naming service that uses the Java Naming and Directory Interface&amp;trade; (JNDI).</source>
          <target state="translated">内部使用的 &lt;code&gt;XAConnection&lt;/code&gt; 对象的工厂。通常，向 &lt;code&gt;XADataSource&lt;/code&gt; 接口的对象注册使用Java命名和目录接口TM（JNDI）的命名服务。</target>
        </trans-unit>
        <trans-unit id="87f6ab02b247d5436eed5e9f5e2a03cd7e138648" translate="yes" xml:space="preserve">
          <source>A factory for CardTerminal objects.</source>
          <target state="translated">CardTerminal对象的工厂。</target>
        </trans-unit>
        <trans-unit id="02af8ac601cf2412d598ea387602eb65495daa2c" translate="yes" xml:space="preserve">
          <source>A factory for CardTerminal objects. It allows an application to</source>
          <target state="translated">一个CardTerminal对象的工厂。它允许一个应用程序</target>
        </trans-unit>
        <trans-unit id="131e4fe4fdae1da728043a7c48a260ffd3f9c887" translate="yes" xml:space="preserve">
          <source>A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents.</source>
          <target state="translated">一个工厂，用于连接到此 &lt;code&gt;DataSource&lt;/code&gt; 对象表示的物理数据源。</target>
        </trans-unit>
        <trans-unit id="741aad3bec1fac6e74dc65ac9ade4f8d4def37e5" translate="yes" xml:space="preserve">
          <source>A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents. An alternative to the &lt;code&gt;DriverManager&lt;/code&gt; facility, a &lt;code&gt;DataSource&lt;/code&gt; object is the preferred means of getting a connection. An object that implements the &lt;code&gt;DataSource&lt;/code&gt; interface will typically be registered with a naming service based on the Java Naming and Directory (JNDI) API.</source>
          <target state="translated">一个工厂，用于连接到此 &lt;code&gt;DataSource&lt;/code&gt; 对象表示的物理数据源。作为 &lt;code&gt;DriverManager&lt;/code&gt; 工具的替代方法， &lt;code&gt;DataSource&lt;/code&gt; 对象是获得连接的首选方法。实现 &lt;code&gt;DataSource&lt;/code&gt; 接口的对象通常会基于Java命名和目录（JNDI）API向命名服务注册。</target>
        </trans-unit>
        <trans-unit id="fac16fd026dbf49e9965916a11212b5c068ba6ed" translate="yes" xml:space="preserve">
          <source>A factory for connections to the physical data source that this &lt;code&gt;DataSource&lt;/code&gt; object represents. An alternative to the &lt;code&gt;DriverManager&lt;/code&gt; facility, a &lt;code&gt;DataSource&lt;/code&gt; object is the preferred means of getting a connection. An object that implements the &lt;code&gt;DataSource&lt;/code&gt; interface will typically be registered with a naming service based on the Java&amp;trade; Naming and Directory (JNDI) API.</source>
          <target state="translated">一个工厂，用于连接到此 &lt;code&gt;DataSource&lt;/code&gt; 对象表示的物理数据源。作为 &lt;code&gt;DriverManager&lt;/code&gt; 工具的替代方法， &lt;code&gt;DataSource&lt;/code&gt; 对象是获得连接的首选方法。实现 &lt;code&gt;DataSource&lt;/code&gt; 接口的对象通常会基于Java&amp;trade;命名和目录（JNDI）API向命名服务注册。</target>
        </trans-unit>
        <trans-unit id="bfbdc95ca7e6c1437aa26750a0c65f90a90ae45d" translate="yes" xml:space="preserve">
          <source>A factory for creating &lt;a href=&quot;keyinfo&quot;&gt;&lt;code&gt;KeyInfo&lt;/code&gt;&lt;/a&gt; objects from scratch or for unmarshalling a &lt;code&gt;KeyInfo&lt;/code&gt; object from a corresponding XML representation.</source>
          <target state="translated">一个工厂，用于从头开始创建&lt;a href=&quot;keyinfo&quot;&gt; &lt;code&gt;KeyInfo&lt;/code&gt; &lt;/a&gt;对象，或者用于从对应的XML表示中解组 &lt;code&gt;KeyInfo&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="447ae3b752cb09da56fb7966e82af8d086341193" translate="yes" xml:space="preserve">
          <source>A factory for creating &lt;a href=&quot;xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; objects from scratch or for unmarshalling an &lt;code&gt;XMLSignature&lt;/code&gt; object from a corresponding XML representation.</source>
          <target state="translated">一个工厂，用于从头开始创建&lt;a href=&quot;xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt;对象，或者用于从相应的XML表示中解组 &lt;code&gt;XMLSignature&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="a196e5bf4cb12af434f8fcf8232f8f20522e3246" translate="yes" xml:space="preserve">
          <source>A factory for creating method handles for linking missing member behavior in &lt;a href=&quot;beanslinker&quot;&gt;&lt;code&gt;BeansLinker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个用于创建方法句柄的工厂，用于链接&lt;a href=&quot;beanslinker&quot;&gt; &lt;code&gt;BeansLinker&lt;/code&gt; 中&lt;/a&gt;缺少的成员行为。</target>
        </trans-unit>
        <trans-unit id="b8f7b68b30b808c6d1b76e510e89ebe4f6171cd4" translate="yes" xml:space="preserve">
          <source>A factory for creating method handles for linking missing member behavior in &lt;a href=&quot;beanslinker&quot;&gt;&lt;code&gt;BeansLinker&lt;/code&gt;&lt;/a&gt;. BeansLinker links these method handles into guarded invocations for link requests specifying &lt;code&gt;GET_*&lt;/code&gt; and &lt;code&gt;SET_*&lt;/code&gt;&lt;a href=&quot;../standardoperation&quot;&gt;&lt;code&gt;StandardOperation&lt;/code&gt;&lt;/a&gt;s when it is either certain or possible that the requested member (property, method, or element) is missing. They will be linked both for &lt;a href=&quot;../namedoperation&quot;&gt;&lt;code&gt;named&lt;/code&gt;&lt;/a&gt; and unnamed operations. The implementer must ensure that the parameter types of the returned method handle match the parameter types of the call site described in the link request. The return types can differ, though, to allow &lt;a href=&quot;../dynamiclinkerfactory#setPrelinkTransformer(jdk.dynalink.linker.GuardedInvocationTransformer)&quot;&gt;&lt;code&gt;DynamicLinkerFactory.setPrelinkTransformer(jdk.dynalink.linker.GuardedInvocationTransformer)&lt;/code&gt;&lt;/a&gt; late return type transformations}. It is allowed to return &lt;code&gt;null&lt;/code&gt; for a method handle if the default behavior is sufficient.</source>
          <target state="translated">一个用于创建方法句柄的工厂，用于链接&lt;a href=&quot;beanslinker&quot;&gt; &lt;code&gt;BeansLinker&lt;/code&gt; 中&lt;/a&gt;缺少的成员行为。当确定或可能缺少所请求的成员（属性，方法或元素）时，BeansLinker会将这些方法句柄链接到指定 &lt;code&gt;GET_*&lt;/code&gt; 和 &lt;code&gt;SET_*&lt;/code&gt; &lt;a href=&quot;../standardoperation&quot;&gt; &lt;code&gt;StandardOperation&lt;/code&gt; &lt;/a&gt;的链接请求的受保护的调用中。它们将被链接以进行&lt;a href=&quot;../namedoperation&quot;&gt; &lt;code&gt;named&lt;/code&gt; &lt;/a&gt;操作和未命名操作。实现者必须确保返回的方法句柄的参数类型与链接请求中描述的调用站点的参数类型匹配。但是，返回类型可以不同，以允许&lt;a href=&quot;../dynamiclinkerfactory#setPrelinkTransformer(jdk.dynalink.linker.GuardedInvocationTransformer)&quot;&gt; &lt;code&gt;DynamicLinkerFactory.setPrelinkTransformer(jdk.dynalink.linker.GuardedInvocationTransformer)&lt;/code&gt; &lt;/a&gt;延迟返回类型转换}。如果默认行为足够，则允许为方法句柄返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3e0b467ba2dc989506e0ee0a0bb1aacb33912437" translate="yes" xml:space="preserve">
          <source>A factory object that generates Preferences objects.</source>
          <target state="translated">一个生成偏好对象的工厂对象。</target>
        </trans-unit>
        <trans-unit id="101b3fce69853a396df998619090ea7c49a64227" translate="yes" xml:space="preserve">
          <source>A factory object that generates Preferences objects. Providers of new &lt;a href=&quot;preferences&quot;&gt;&lt;code&gt;Preferences&lt;/code&gt;&lt;/a&gt; implementations should provide corresponding &lt;code&gt;PreferencesFactory&lt;/code&gt; implementations so that the new &lt;code&gt;Preferences&lt;/code&gt; implementation can be installed in place of the platform-specific default implementation.</source>
          <target state="translated">生成&amp;ldquo;首选项&amp;rdquo;对象的工厂对象。新的&lt;a href=&quot;preferences&quot;&gt; &lt;code&gt;Preferences&lt;/code&gt; &lt;/a&gt;实施的提供者应提供相应的 &lt;code&gt;PreferencesFactory&lt;/code&gt; 实施，以便可以安装新的 &lt;code&gt;Preferences&lt;/code&gt; 实施来代替特定于平台的默认实现。</target>
        </trans-unit>
        <trans-unit id="012439963caa9c740b53700ca7f65192a34f5061" translate="yes" xml:space="preserve">
          <source>A factory that enables applications to obtain instances of &lt;code&gt;DOMImplementation&lt;/code&gt;.</source>
          <target state="translated">使应用程序能够获得 &lt;code&gt;DOMImplementation&lt;/code&gt; 实例的工厂。</target>
        </trans-unit>
        <trans-unit id="9dec17682dae61c4e3664b4d404fd914e0739877" translate="yes" xml:space="preserve">
          <source>A factory to build views for HTML.</source>
          <target state="translated">一个为HTML建立视图的工厂。</target>
        </trans-unit>
        <trans-unit id="4859eae3ed9161a437459fc111d12cc6dfeb9a6d" translate="yes" xml:space="preserve">
          <source>A factory to build views for HTML. The following table describes what this factory will build by default.</source>
          <target state="translated">一个为HTML构建视图的工厂。下表描述了该工厂默认要构建的内容。</target>
        </trans-unit>
        <trans-unit id="e72ea0c899015a79e68fd6431aed375e5031320e" translate="yes" xml:space="preserve">
          <source>A factory to create a view of some portion of document subject.</source>
          <target state="translated">一个工厂来创建文档主题的某些部分的视图。</target>
        </trans-unit>
        <trans-unit id="5d98c05b8f6e5a37c3763765419238927bfff5ef" translate="yes" xml:space="preserve">
          <source>A factory to create a view of some portion of document subject. This is intended to enable customization of how views get mapped over a document model.</source>
          <target state="translated">一个工厂,用于创建文档主题某些部分的视图。其目的是为了让用户能够自定义视图在文档模型上的映射方式。</target>
        </trans-unit>
        <trans-unit id="63b7b032fe80d4faf6433141990e02b45251e415" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character blocks in the Unicode specification.</source>
          <target state="translated">代表Unicode规范中字符块的字符子集系列。</target>
        </trans-unit>
        <trans-unit id="a24fb7d86b530dcf58935f77822385b0ba5a6d7b" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character blocks in the Unicode specification. Character blocks generally define characters used for a specific script or purpose. A character is contained by at most one Unicode block.</source>
          <target state="translated">代表Unicode规范中字符块的字符子集系列。字符块通常定义了用于特定脚本或目的的字符。一个字符最多包含一个Unicode字符块。</target>
        </trans-unit>
        <trans-unit id="3ec563e568f55e4f71b71ac1435cf68999ac1f70" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">代表&lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt;&lt;i&gt;Unicode标准附件＃24：脚本名称中&lt;/i&gt;&lt;/a&gt;定义的字符脚本的字符子集系列。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="b57546c0d16673c5ddb9bd2cdd184a4b0ab8b0a7" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;. Every Unicode character is assigned to a single Unicode script, either a specific script, such as &lt;a href=&quot;#LATIN&quot;&gt;&lt;code&gt;Latin&lt;/code&gt;&lt;/a&gt;, or one of the following three special values, &lt;a href=&quot;#INHERITED&quot;&gt;&lt;code&gt;Inherited&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#COMMON&quot;&gt;&lt;code&gt;Common&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#UNKNOWN&quot;&gt;&lt;code&gt;Unknown&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">代表&lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt;&lt;i&gt;Unicode标准附件＃24：脚本名称中&lt;/i&gt;&lt;/a&gt;定义的字符脚本的字符子集系列。每个Unicode字符都分配给单个Unicode脚本，该脚本可以是特定脚本（例如&lt;a href=&quot;#LATIN&quot;&gt; &lt;code&gt;Latin&lt;/code&gt; )&lt;/a&gt;，也可以是以下三个特殊值之一（&lt;a href=&quot;#INHERITED&quot;&gt; &lt;code&gt;Inherited&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#COMMON&quot;&gt; &lt;code&gt;Common&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#UNKNOWN&quot;&gt; &lt;code&gt;Unknown&lt;/code&gt; )&lt;/a&gt;。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="9c8c5279fc99f2514225c6d1d19175798ae080ea" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;. Every Unicode character is assigned to a single Unicode script, either a specific script, such as &lt;a href=&quot;character.unicodescript#LATIN&quot;&gt;&lt;code&gt;Latin&lt;/code&gt;&lt;/a&gt;, or one of the following three special values, &lt;a href=&quot;character.unicodescript#INHERITED&quot;&gt;&lt;code&gt;Inherited&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;character.unicodescript#COMMON&quot;&gt;&lt;code&gt;Common&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;character.unicodescript#UNKNOWN&quot;&gt;&lt;code&gt;Unknown&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">代表&lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt;&lt;i&gt;Unicode标准附件＃24：脚本名称中&lt;/i&gt;&lt;/a&gt;定义的字符脚本的字符子集系列。每个Unicode字符都分配给单个Unicode脚本，该脚本可以是特定脚本（例如&lt;a href=&quot;character.unicodescript#LATIN&quot;&gt; &lt;code&gt;Latin&lt;/code&gt; )&lt;/a&gt;，也可以是以下三个特殊值之一：&lt;a href=&quot;character.unicodescript#INHERITED&quot;&gt; &lt;code&gt;Inherited&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;character.unicodescript#COMMON&quot;&gt; &lt;code&gt;Common&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;character.unicodescript#UNKNOWN&quot;&gt; &lt;code&gt;Unknown&lt;/code&gt; &lt;/a&gt;。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="7de6b769568dc26754d391b2d697863a4b675e7a" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;https://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">代表&lt;a href=&quot;https://www.unicode.org/reports/tr24/&quot;&gt;&lt;i&gt;Unicode标准附件＃24：脚本名称中&lt;/i&gt;&lt;/a&gt;定义的字符脚本的字符子集系列。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="a4fc4e1c216ea0aef69c728ba14bcadf6ade3445" translate="yes" xml:space="preserve">
          <source>A family of character subsets representing the character scripts defined in the &lt;a href=&quot;https://www.unicode.org/reports/tr24/&quot;&gt; &lt;i&gt;Unicode Standard Annex #24: Script Names&lt;/i&gt;&lt;/a&gt;. Every Unicode character is assigned to a single Unicode script, either a specific script, such as &lt;a href=&quot;#LATIN&quot;&gt;&lt;code&gt;Latin&lt;/code&gt;&lt;/a&gt;, or one of the following three special values, &lt;a href=&quot;#INHERITED&quot;&gt;&lt;code&gt;Inherited&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#COMMON&quot;&gt;&lt;code&gt;Common&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#UNKNOWN&quot;&gt;&lt;code&gt;Unknown&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">代表&lt;a href=&quot;https://www.unicode.org/reports/tr24/&quot;&gt;&lt;i&gt;Unicode标准附件＃24：脚本名称中&lt;/i&gt;&lt;/a&gt;定义的字符脚本的字符子集系列。每个Unicode字符都分配给单个Unicode脚本，该脚本可以是特定脚本（例如&lt;a href=&quot;#LATIN&quot;&gt; &lt;code&gt;Latin&lt;/code&gt; )&lt;/a&gt;，也可以是以下三个特殊值之一（&lt;a href=&quot;#INHERITED&quot;&gt; &lt;code&gt;Inherited&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#COMMON&quot;&gt; &lt;code&gt;Common&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#UNKNOWN&quot;&gt; &lt;code&gt;Unknown&lt;/code&gt; )&lt;/a&gt;。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="9eaa4a882ff6f7b68aa33cabdb36bc4551205285" translate="yes" xml:space="preserve">
          <source>A field in a TIFF Image File Directory (IFD) is defined as a tag number accompanied by a sequence of values of identical data type. TIFF 6.0 defines 12 data types; a 13th type &lt;code&gt;IFD&lt;/code&gt; is defined in TIFF Tech Note 1 of TIFF Specification Supplement 1. These TIFF data types are referred to by Java constants and mapped internally onto Java language data types and type names as follows:</source>
          <target state="translated">TIFF图像文件目录（IFD）中的字段定义为标签编号，并带有相同数据类型的值序列。TIFF 6.0定义了12种数据类型；TIFF规范补充1的TIFF技术说明1中定义了第13种 &lt;code&gt;IFD&lt;/code&gt; 类型。这些TIFF数据类型由Java常量引用，并在内部映射到Java语言数据类型和类型名称，如下所示：</target>
        </trans-unit>
        <trans-unit id="cb6cfa1af99682ad4ccf2d09f7b713dfe2919b99" translate="yes" xml:space="preserve">
          <source>A field is date-based if it can be derived from &lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;EPOCH_DAY&lt;/code&gt;&lt;/a&gt;. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a field like minute-of-week.</source>
          <target state="translated">如果字段可以从&lt;a href=&quot;chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;EPOCH_DAY&lt;/code&gt; &lt;/a&gt;派生，则它是基于日期的。请注意， &lt;code&gt;isDateBased()&lt;/code&gt; 和 &lt;code&gt;isTimeBased()&lt;/code&gt; 返回false 都是有效的，例如代表星期几之类的字段时。</target>
        </trans-unit>
        <trans-unit id="06d4b6c0fcbdbfaf03d612c54baeb44342bf70b4" translate="yes" xml:space="preserve">
          <source>A field is time-based if it can be derived from &lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;NANO_OF_DAY&lt;/code&gt;&lt;/a&gt;. Note that it is valid for both &lt;code&gt;isDateBased()&lt;/code&gt; and &lt;code&gt;isTimeBased()&lt;/code&gt; to return false, such as when representing a field like minute-of-week.</source>
          <target state="translated">如果字段可以从&lt;a href=&quot;chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;NANO_OF_DAY&lt;/code&gt; &lt;/a&gt;派生，则它是基于时间的。请注意， &lt;code&gt;isDateBased()&lt;/code&gt; 和 &lt;code&gt;isTimeBased()&lt;/code&gt; 返回false 都是有效的，例如代表星期几之类的字段时。</target>
        </trans-unit>
        <trans-unit id="b07348f8e4cb68554849ca186156d3c0c4587481" translate="yes" xml:space="preserve">
          <source>A field is used to express part of a larger date-time, such as year, month-of-year or second-of-minute. All fields implement &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt;. The set of well known fields are defined in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;HOUR_OF_DAY&lt;/code&gt;. Additional fields are defined by &lt;a href=&quot;julianfields&quot;&gt;&lt;code&gt;JulianFields&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;weekfields&quot;&gt;&lt;code&gt;WeekFields&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;isofields&quot;&gt;&lt;code&gt;IsoFields&lt;/code&gt;&lt;/a&gt;. The field interface is designed to allow application defined fields.</source>
          <target state="translated">字段用于表示较大日期时间的一部分，例如年，年月或分钟。所有字段都实现&lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; &lt;/a&gt;。在&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;中定义了一组众所周知的字段，例如 &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; 。其他字段由&lt;a href=&quot;julianfields&quot;&gt; &lt;code&gt;JulianFields&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;weekfields&quot;&gt; &lt;code&gt;WeekFields&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;isofields&quot;&gt; &lt;code&gt;IsoFields&lt;/code&gt; &lt;/a&gt;定义。字段接口旨在允许应用程序定义字段。</target>
        </trans-unit>
        <trans-unit id="1b9bbd2e4bb02eff4c009d2e28cfb775b042abb6" translate="yes" xml:space="preserve">
          <source>A field might change or be removed in a future JDK release. A best practice for callers of this method is to validate the field before attempting access.</source>
          <target state="translated">字段可能会在未来的JDK版本中被更改或删除。对于本方法的调用者来说,最好的做法是在尝试访问之前验证该字段。</target>
        </trans-unit>
        <trans-unit id="835f2490b6cfe9fa75186c818d8516b2e4a5f979" translate="yes" xml:space="preserve">
          <source>A field not described by a more specific kind (like &lt;code&gt;ENUM_CONSTANT&lt;/code&gt;).</source>
          <target state="translated">没有用更具体的类型描述的字段（例如 &lt;code&gt;ENUM_CONSTANT&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b9124f145776683f4253809cd0411ccd5b528c41" translate="yes" xml:space="preserve">
          <source>A field of date-time, such as month-of-year or hour-of-minute.</source>
          <target state="translated">一个日期时间字段,如年月日或时分。</target>
        </trans-unit>
        <trans-unit id="e150dcc5b1e035eec8b678494a857eb63cde20d6" translate="yes" xml:space="preserve">
          <source>A field of the resulting &lt;code&gt;Duration&lt;/code&gt; will be unset if and only if respective fields of two input &lt;code&gt;Duration&lt;/code&gt;s are unset.</source>
          <target state="translated">当且仅当两个输入 &lt;code&gt;Duration&lt;/code&gt; 的相应字段未设置时，结果 &lt;code&gt;Duration&lt;/code&gt; 的字段才会被设置。</target>
        </trans-unit>
        <trans-unit id="561ec93c50ac986765d6e5eddfd9cb88b32c965f" translate="yes" xml:space="preserve">
          <source>A field to store user data.</source>
          <target state="translated">存储用户数据的字段。</target>
        </trans-unit>
        <trans-unit id="7093bcdde49295add6532ea87edaa57b21040595" translate="yes" xml:space="preserve">
          <source>A field to store user data. Mostly used to store style sheets.</source>
          <target state="translated">一个存储用户数据的字段。主要用于存储样式表。</target>
        </trans-unit>
        <trans-unit id="515a450d2e23adc65e388953c350b7eb5e4204e8" translate="yes" xml:space="preserve">
          <source>A field type descriptor string for a non-array type is either a one-letter code corresponding to a primitive type (&lt;code&gt;&quot;J&quot;, &quot;I&quot;, &quot;C&quot;, &quot;S&quot;, &quot;B&quot;, &quot;D&quot;, &quot;F&quot;, &quot;Z&quot;, &quot;V&quot;&lt;/code&gt;), or the letter &lt;code&gt;&quot;L&quot;&lt;/code&gt;, followed by the fully qualified binary name of a class, followed by &lt;code&gt;&quot;;&quot;&lt;/code&gt;. A field type descriptor for an array type is the character &lt;code&gt;&quot;[&quot;&lt;/code&gt; followed by the field descriptor for the component type. Examples of valid type descriptor strings include &lt;code&gt;&quot;Ljava/lang/String;&quot;&lt;/code&gt;, &lt;code&gt;&quot;I&quot;&lt;/code&gt;, &lt;code&gt;&quot;[I&quot;&lt;/code&gt;, &lt;code&gt;&quot;V&quot;&lt;/code&gt;, &lt;code&gt;&quot;[Ljava/lang/String;&quot;&lt;/code&gt;, etc. See JVMS 4.3.2 (&quot;Field Descriptors&quot;) for more detail.</source>
          <target state="translated">非数组类型的字段类型描述符字符串是与原始类型（ &lt;code&gt;&quot;J&quot;, &quot;I&quot;, &quot;C&quot;, &quot;S&quot;, &quot;B&quot;, &quot;D&quot;, &quot;F&quot;, &quot;Z&quot;, &quot;V&quot;&lt;/code&gt; ）或字母 &lt;code&gt;&quot;L&quot;&lt;/code&gt; ，后跟一个类的完全限定的二进制名称，后跟 &lt;code&gt;&quot;;&quot;&lt;/code&gt; 。数组类型的字段类型描述符是字符 &lt;code&gt;&quot;[&quot;&lt;/code&gt; 后跟组件类型的字段描述符。有效类型描述符字符串的示例包括 &lt;code&gt;&quot;Ljava/lang/String;&quot;&lt;/code&gt; ， &lt;code&gt;&quot;I&quot;&lt;/code&gt; ， &lt;code&gt;&quot;[I&quot;&lt;/code&gt; ， &lt;code&gt;&quot;V&quot;&lt;/code&gt; ， &lt;code&gt;&quot;[Ljava/lang/String;&quot;&lt;/code&gt; 等等。有关更多详细信息，请参见JVMS 4.3.2（&amp;ldquo;字段描述符&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="dda0e6d153e939c0eebf6f92e4c6f459678f22a4" translate="yes" xml:space="preserve">
          <source>A file attribute view provides a read-only or updatable view of a set of file attributes. This method is intended to be used where the file attribute view defines type-safe methods to read or update the file attributes. The &lt;code&gt;type&lt;/code&gt; parameter is the type of the attribute view required and the method returns an instance of that type if supported. The &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; type supports access to the basic attributes of a file. Invoking this method to select a file attribute view of that type will always return an instance of that class.</source>
          <target state="translated">文件属性视图提供了一组文件属性的只读或可更新视图。此方法旨在用于文件属性视图定义读取或更新文件属性的类型安全方法的情况。所述 &lt;code&gt;type&lt;/code&gt; 参数是所需要的属性视图的类型，并且如果支持该方法返回该类型的一个实例。该&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;类型支持访问文件的基本属性。调用此方法以选择该类型的文件属性视图将始终返回该类的实例。</target>
        </trans-unit>
        <trans-unit id="deda609125e7d48e407f76f729b8f27d65f74ddb" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a &lt;em&gt;basic set&lt;/em&gt; of file attributes common to many file systems.</source>
          <target state="translated">文件属性视图，提供了许多文件系统共有的&lt;em&gt;基本&lt;/em&gt;文件属性&lt;em&gt;集&lt;/em&gt;的视图。</target>
        </trans-unit>
        <trans-unit id="c25c5edd2e59e66e30742b0dc9fb42aac420e492" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a &lt;em&gt;basic set&lt;/em&gt; of file attributes common to many file systems. The basic set of file attributes consist of &lt;em&gt;mandatory&lt;/em&gt; and &lt;em&gt;optional&lt;/em&gt; file attributes as defined by the &lt;a href=&quot;basicfileattributes&quot;&gt;&lt;code&gt;BasicFileAttributes&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">文件属性视图，提供了许多文件系统共有的&lt;em&gt;基本&lt;/em&gt;文件属性&lt;em&gt;集&lt;/em&gt;的视图。文件属性的基本集合由&lt;a href=&quot;basicfileattributes&quot;&gt; &lt;code&gt;BasicFileAttributes&lt;/code&gt; &lt;/a&gt;接口定义的&lt;em&gt;强制&lt;/em&gt;和&lt;em&gt;可选&lt;/em&gt;文件属性组成。</target>
        </trans-unit>
        <trans-unit id="3f5f657f89b3a00a961d3cdfff1050605cb66a30" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a file's user-defined attributes, sometimes known as &lt;em&gt;extended attributes&lt;/em&gt;.</source>
          <target state="translated">文件属性视图，提供文件用户定义属性（有时称为&lt;em&gt;扩展属性）&lt;/em&gt;的视图。</target>
        </trans-unit>
        <trans-unit id="92134ae2669883f7bd8d353e8b759e080264ae92" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of a file's user-defined attributes, sometimes known as &lt;em&gt;extended attributes&lt;/em&gt;. User-defined file attributes are used to store metadata with a file that is not meaningful to the file system. It is primarily intended for file system implementations that support such a capability directly but may be emulated. The details of such emulation are highly implementation specific and therefore not specified.</source>
          <target state="translated">文件属性视图，提供文件用户定义属性（有时称为&lt;em&gt;扩展属性）&lt;/em&gt;的视图。用户定义的文件属性用于将元数据与对文件系统无意义的文件一起存储。它主要用于直接支持这种功能但可以被仿真的文件系统实现。这种仿真的细节是高度实现特定的，因此未指定。</target>
        </trans-unit>
        <trans-unit id="e6a4b8e3954a7ff014e199475145d881eb3c5987" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of the file attributes commonly associated with files on file systems used by operating systems that implement the Portable Operating System Interface (POSIX) family of standards.</source>
          <target state="translated">一个文件属性视图,它提供了一个文件属性的视图,通常与实施便携式操作系统接口(POSIX)系列标准的操作系统使用的文件系统上的文件相关联。</target>
        </trans-unit>
        <trans-unit id="73aab05f1958ac269a1d81f012b9a0e86f942671" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of the legacy &quot;DOS&quot; file attributes.</source>
          <target state="translated">一个文件属性视图,它提供了一个传统的 &quot;DOS &quot;文件属性的视图。</target>
        </trans-unit>
        <trans-unit id="06ce420caee228b75176ea93c6da6be3e8962c23" translate="yes" xml:space="preserve">
          <source>A file attribute view that provides a view of the legacy &quot;DOS&quot; file attributes. These attributes are supported by file systems such as the File Allocation Table (FAT) format commonly used in &lt;em&gt;consumer devices&lt;/em&gt;.</source>
          <target state="translated">提供旧版&amp;ldquo; DOS&amp;rdquo;文件属性视图的文件属性视图。文件系统支持这些属性，例如&lt;em&gt;消费类设备中&lt;/em&gt;常用的文件分配表（FAT）格式。</target>
        </trans-unit>
        <trans-unit id="c56af10820e6747bde58155c74dc6b8cb1c563e9" translate="yes" xml:space="preserve">
          <source>A file attribute view that supports reading or updating a file's Access Control Lists (ACL) or file owner attributes.</source>
          <target state="translated">一个文件属性视图,支持读取或更新文件的访问控制列表(ACL)或文件所有者属性。</target>
        </trans-unit>
        <trans-unit id="fc8f481ef9d0d618680cc9caba8c29e3b337fd06" translate="yes" xml:space="preserve">
          <source>A file attribute view that supports reading or updating the owner of a file.</source>
          <target state="translated">一个文件属性视图,支持读取或更新文件的所有者。</target>
        </trans-unit>
        <trans-unit id="637eb168120f6d58bb9a543da7d437ff587931ee" translate="yes" xml:space="preserve">
          <source>A file attribute view that supports reading or updating the owner of a file. This file attribute view is intended for file system implementations that support a file attribute that represents an identity that is the owner of the file. Often the owner of a file is the identity of the entity that created the file.</source>
          <target state="translated">一个支持读取或更新文件所有者的文件属性视图。这个文件属性视图是为支持文件属性的文件系统实现而设计的,文件属性代表的是文件所有者的身份。通常,文件的所有者是创建文件的实体的身份。</target>
        </trans-unit>
        <trans-unit id="50d3c544cf02930f72d3dd2dcf7596521b56b995" translate="yes" xml:space="preserve">
          <source>A file channel is a &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; that is connected to a file. It has a current</source>
          <target state="translated">文件通道是连接到文件的&lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; &lt;/a&gt;。它有电流</target>
        </trans-unit>
        <trans-unit id="b56454099a3b48fd182acb907397a9dc83e2ebc7" translate="yes" xml:space="preserve">
          <source>A file channel is created by invoking one of the &lt;a href=&quot;#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. A file channel can also be obtained from an existing &lt;a href=&quot;../../io/fileinputstream#getChannel()&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../io/fileoutputstream#getChannel()&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../io/randomaccessfile#getChannel()&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; object by invoking that object's &lt;code&gt;getChannel&lt;/code&gt; method, which returns a file channel that is connected to the same underlying file. Where the file channel is obtained from an existing stream or random access file then the state of the file channel is intimately connected to that of the object whose &lt;code&gt;getChannel&lt;/code&gt; method returned the channel. Changing the channel's position, whether explicitly or by reading or writing bytes, will change the file position of the originating object, and vice versa. Changing the file's length via the file channel will change the length seen via the originating object, and vice versa. Changing the file's content by writing bytes will change the content seen by the originating object, and vice versa.</source>
          <target state="translated">通过调用此类定义的一种&lt;a href=&quot;#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;方法来创建文件通道。也可以通过调用该对象的 &lt;code&gt;getChannel&lt;/code&gt; 方法从现有&lt;a href=&quot;../../io/fileinputstream#getChannel()&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../io/fileoutputstream#getChannel()&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/randomaccessfile#getChannel()&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; &lt;/a&gt;对象获取文件通道，该方法返回连接到相同基础文件的文件通道。如果文件通道是从现有流或随机访问文件获得的，则文件通道的状态与其 &lt;code&gt;getChannel&lt;/code&gt; 的对象的状态紧密相连。方法返回了通道。无论是显式地还是通过读取或写入字节来更改通道的位置，都将更改原始对象的文件位置，反之亦然。通过文件通道更改文件的长度将更改通过原始对象看到的长度，反之亦然。通过写入字节来更改文件的内容将更改原始对象看到的内容，反之亦然。</target>
        </trans-unit>
        <trans-unit id="a3d45873616dfb5f64695ebaf34a5417aaf96574" translate="yes" xml:space="preserve">
          <source>A file channel is created by invoking one of the &lt;a href=&quot;filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. A file channel can also be obtained from an existing &lt;a href=&quot;../../io/fileinputstream#getChannel--&quot;&gt;&lt;code&gt;FileInputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../io/fileoutputstream#getChannel--&quot;&gt;&lt;code&gt;FileOutputStream&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../io/randomaccessfile#getChannel--&quot;&gt;&lt;code&gt;RandomAccessFile&lt;/code&gt;&lt;/a&gt; object by invoking that object's &lt;code&gt;getChannel&lt;/code&gt; method, which returns a file channel that is connected to the same underlying file. Where the file channel is obtained from an existing stream or random access file then the state of the file channel is intimately connected to that of the object whose &lt;code&gt;getChannel&lt;/code&gt; method returned the channel. Changing the channel's position, whether explicitly or by reading or writing bytes, will change the file position of the originating object, and vice versa. Changing the file's length via the file channel will change the length seen via the originating object, and vice versa. Changing the file's content by writing bytes will change the content seen by the originating object, and vice versa.</source>
          <target state="translated">通过调用此类定义的一种&lt;a href=&quot;filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;方法来创建文件通道。也可以通过调用该对象的 &lt;code&gt;getChannel&lt;/code&gt; 方法从现有&lt;a href=&quot;../../io/fileinputstream#getChannel--&quot;&gt; &lt;code&gt;FileInputStream&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../io/fileoutputstream#getChannel--&quot;&gt; &lt;code&gt;FileOutputStream&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/randomaccessfile#getChannel--&quot;&gt; &lt;code&gt;RandomAccessFile&lt;/code&gt; &lt;/a&gt;对象获取文件通道，该方法返回连接到相同基础文件的文件通道。如果文件通道是从现有流或随机访问文件获得的，则文件通道的状态与其 &lt;code&gt;getChannel&lt;/code&gt; 的对象的状态紧密相连。方法返回通道。无论是显式更改通道位置，还是通过读取或写入字节来更改通道位置，都将更改原始对象的文件位置，反之亦然。通过文件通道更改文件的长度将更改通过原始对象看到的长度，反之亦然。通过写入字节来更改文件的内容将更改原始对象看到的内容，反之亦然。</target>
        </trans-unit>
        <trans-unit id="b94e4d0c80198834d983bc6e3bb51a9dd99a5d5e" translate="yes" xml:space="preserve">
          <source>A file channel that is open for writing may be in</source>
          <target state="translated">一个开放的写文件通道可能在</target>
        </trans-unit>
        <trans-unit id="9faaef2741bf30dbc54b5af9a41af4397e3de550" translate="yes" xml:space="preserve">
          <source>A file loading event.</source>
          <target state="translated">一个文件加载事件。</target>
        </trans-unit>
        <trans-unit id="cb5c27031614e42ea12644e9d3cc607334c9b99b" translate="yes" xml:space="preserve">
          <source>A file lock is either</source>
          <target state="translated">文件锁可以是</target>
        </trans-unit>
        <trans-unit id="e16568056aeea069ecd34d375096a08ef82c7ca7" translate="yes" xml:space="preserve">
          <source>A file output stream is an output stream for writing data to a &lt;code&gt;File&lt;/code&gt; or to a &lt;code&gt;FileDescriptor&lt;/code&gt;.</source>
          <target state="translated">文件输出流是用于将数据写入 &lt;code&gt;File&lt;/code&gt; 或 &lt;code&gt;FileDescriptor&lt;/code&gt; 的输出流。</target>
        </trans-unit>
        <trans-unit id="6d6f1007335cda7cde3d679a1dbaf6aa504670c2" translate="yes" xml:space="preserve">
          <source>A file output stream is an output stream for writing data to a &lt;code&gt;File&lt;/code&gt; or to a &lt;code&gt;FileDescriptor&lt;/code&gt;. Whether or not a file is available or may be created depends upon the underlying platform. Some platforms, in particular, allow a file to be opened for writing by only one &lt;code&gt;FileOutputStream&lt;/code&gt; (or other file-writing object) at a time. In such situations the constructors in this class will fail if the file involved is already open.</source>
          <target state="translated">文件输出流是用于将数据写入 &lt;code&gt;File&lt;/code&gt; 或 &lt;code&gt;FileDescriptor&lt;/code&gt; 的输出流。文件是否可用或是否可以创建取决于底层平台。特别是某些平台，一次只允许一个 &lt;code&gt;FileOutputStream&lt;/code&gt; （或其他文件写入对象）打开一个文件进行写入。在这种情况下，如果所涉及的文件已经打开，则此类中的构造函数将失败。</target>
        </trans-unit>
        <trans-unit id="8a79e46569e7c0e6ac13297491f4474b3fba636e" translate="yes" xml:space="preserve">
          <source>A file saving event.</source>
          <target state="translated">一个文件保存事件。</target>
        </trans-unit>
        <trans-unit id="1504cc80177c88564aff13f864faf9b4cc1e4f14" translate="yes" xml:space="preserve">
          <source>A file system is open upon creation and can be closed by invoking its &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. Once closed, any further attempt to access objects in the file system cause &lt;a href=&quot;closedfilesystemexception&quot;&gt;&lt;code&gt;ClosedFileSystemException&lt;/code&gt;&lt;/a&gt; to be thrown. File systems created by the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; cannot be closed.</source>
          <target state="translated">文件系统在创建时打开，可以通过调用其&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法关闭。一旦关闭，任何进一步尝试访问文件系统中的对象的尝试都会引发&lt;a href=&quot;closedfilesystemexception&quot;&gt; &lt;code&gt;ClosedFileSystemException&lt;/code&gt; &lt;/a&gt;。默认&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;创建的文件系统无法关闭。</target>
        </trans-unit>
        <trans-unit id="9dfaa0b7bf6f105699605d63ef04558be23f70fd" translate="yes" xml:space="preserve">
          <source>A file system is open upon creation and can be closed by invoking its &lt;a href=&quot;filesystem#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method. Once closed, any further attempt to access objects in the file system cause &lt;a href=&quot;closedfilesystemexception&quot;&gt;&lt;code&gt;ClosedFileSystemException&lt;/code&gt;&lt;/a&gt; to be thrown. File systems created by the default &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; cannot be closed.</source>
          <target state="translated">文件系统在创建时打开，可以通过调用其&lt;a href=&quot;filesystem#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法关闭。一旦关闭，任何进一步尝试访问文件系统中的对象的尝试都会引发&lt;a href=&quot;closedfilesystemexception&quot;&gt; &lt;code&gt;ClosedFileSystemException&lt;/code&gt; &lt;/a&gt;。默认&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;创建的文件系统无法关闭。</target>
        </trans-unit>
        <trans-unit id="0d1780ff9ebff809b69e5e84bd16e835fd70a0aa" translate="yes" xml:space="preserve">
          <source>A file system is the factory for several types of objects:</source>
          <target state="translated">文件系统是几种类型的对象的工厂。</target>
        </trans-unit>
        <trans-unit id="2aafa7d2b1e430fc99b0ad47e955d5980d694e00" translate="yes" xml:space="preserve">
          <source>A file system may implement restrictions to certain operations on the actual file-system object, such as reading, writing, and executing. These restrictions are collectively known as</source>
          <target state="translated">文件系统可以实现对实际文件系统对象的某些操作的限制,如读、写和执行。这些限制统称为</target>
        </trans-unit>
        <trans-unit id="50c9ca57e623b4c14bcb87e67ff20918988b3535" translate="yes" xml:space="preserve">
          <source>A file system provider is a concrete implementation of this class that implements the abstract methods defined by this class. A provider is identified by a &lt;code&gt;URI&lt;/code&gt;&lt;a href=&quot;#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default provider is identified by the URI scheme &quot;file&quot;. It creates the &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. The &lt;a href=&quot;../filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class defines how file system providers are located and loaded. The default provider is typically a system-default provider but may be overridden if the system property &lt;code&gt;
 java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is set. In that case, the provider has a one argument constructor whose formal parameter type is &lt;code&gt;
 FileSystemProvider&lt;/code&gt;. All other providers have a zero argument constructor that initializes the provider.</source>
          <target state="translated">文件系统提供程序是此类的具体实现，它实现了此类定义的抽象方法。提供者由 &lt;code&gt;URI&lt;/code&gt; &lt;a href=&quot;#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;标识。默认提供程序由URI方案&amp;ldquo;文件&amp;rdquo;标识。它创建&lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;，该文件系统提供对Java虚拟机可访问的文件系统的访问。该&lt;a href=&quot;../filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; &lt;/a&gt;类定义文件系统供应商如何定位和加载。默认提供程序通常是系统默认提供程序，但是如果设置了系统属性 &lt;code&gt; java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; ,则可以将其覆盖。在这种情况下，提供者具有一个参数构造函数，其形式参数类型为 &lt;code&gt; FileSystemProvider&lt;/code&gt; 。所有其他提供程序都有一个用于初始化提供程序的零参数构造函数。</target>
        </trans-unit>
        <trans-unit id="9453d4cf1f13a548849907fb569946cba24981c2" translate="yes" xml:space="preserve">
          <source>A file system provider is a concrete implementation of this class that implements the abstract methods defined by this class. A provider is identified by a &lt;code&gt;URI&lt;/code&gt;&lt;a href=&quot;#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default provider is identified by the URI scheme &quot;file&quot;. It creates the &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. The &lt;a href=&quot;../filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class defines how file system providers are located and loaded. The default provider is typically a system-default provider but may be overridden if the system property &lt;code&gt;&lt;span id=&quot;java.nio.file.spi.DefaultFileSystemProvider&quot;&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/span&gt;&lt;/code&gt; is set. In that case, the provider has a one argument constructor whose formal parameter type is &lt;code&gt;
 FileSystemProvider&lt;/code&gt;. All other providers have a zero argument constructor that initializes the provider.</source>
          <target state="translated">文件系统提供程序是此类的具体实现，它实现了此类定义的抽象方法。提供者由 &lt;code&gt;URI&lt;/code&gt; &lt;a href=&quot;#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;标识。默认提供程序由URI方案&amp;ldquo;文件&amp;rdquo;标识。它创建&lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;，该文件系统提供对Java虚拟机可访问的文件系统的访问。该&lt;a href=&quot;../filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; &lt;/a&gt;类定义文件系统供应商如何定位和加载。默认提供程序通常是系统默认提供程序，但是如果设置了系统属性 &lt;code&gt;&lt;span id=&quot;java.nio.file.spi.DefaultFileSystemProvider&quot;&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/span&gt;&lt;/code&gt; ,则可以将其覆盖。在这种情况下，提供者具有一个参数构造函数，其形式参数类型为 &lt;code&gt; FileSystemProvider&lt;/code&gt; 。所有其他提供程序都有一个用于初始化提供程序的零参数构造函数。</target>
        </trans-unit>
        <trans-unit id="1e8b4b9993656e1244070ad20dae9aefaa220eb7" translate="yes" xml:space="preserve">
          <source>A file system provider is a concrete implementation of this class that implements the abstract methods defined by this class. A provider is identified by a &lt;code&gt;URI&lt;/code&gt;&lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt;. The default provider is identified by the URI scheme &quot;file&quot;. It creates the &lt;a href=&quot;../filesystem&quot;&gt;&lt;code&gt;FileSystem&lt;/code&gt;&lt;/a&gt; that provides access to the file systems accessible to the Java virtual machine. The &lt;a href=&quot;../filesystems&quot;&gt;&lt;code&gt;FileSystems&lt;/code&gt;&lt;/a&gt; class defines how file system providers are located and loaded. The default provider is typically a system-default provider but may be overridden if the system property &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; is set. In that case, the provider has a one argument constructor whose formal parameter type is &lt;code&gt;FileSystemProvider&lt;/code&gt;. All other providers have a zero argument constructor that initializes the provider.</source>
          <target state="translated">文件系统提供程序是此类的具体实现，它实现了此类定义的抽象方法。提供者由 &lt;code&gt;URI&lt;/code&gt; &lt;a href=&quot;filesystemprovider#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt;标识。默认提供程序由URI方案&amp;ldquo;文件&amp;rdquo;标识。它创建&lt;a href=&quot;../filesystem&quot;&gt; &lt;code&gt;FileSystem&lt;/code&gt; &lt;/a&gt;，提供对Java虚拟机访问的文件系统的访问。该&lt;a href=&quot;../filesystems&quot;&gt; &lt;code&gt;FileSystems&lt;/code&gt; &lt;/a&gt;类定义文件系统供应商如何定位和加载。默认提供程序通常是系统默认提供程序，但是如果设置了系统属性 &lt;code&gt;java.nio.file.spi.DefaultFileSystemProvider&lt;/code&gt; ,则可以将其覆盖。在这种情况下，提供者具有一个参数构造函数，其形式参数类型为 &lt;code&gt;FileSystemProvider&lt;/code&gt; 。所有其他提供程序都有一个用于初始化提供程序的零参数构造函数。</target>
        </trans-unit>
        <trans-unit id="ce65bc131fb341143ffa2432afe6788f89f640c4" translate="yes" xml:space="preserve">
          <source>A file system provides access to a file store that may be composed of a number of distinct file hierarchies, each with its own top-level root directory. Unless denied by the security manager, each element in the returned iterator corresponds to the root directory of a distinct file hierarchy. The order of the elements is not defined. The file hierarchies may change during the lifetime of the Java virtual machine. For example, in some implementations, the insertion of removable media may result in the creation of a new file hierarchy with its own top-level directory.</source>
          <target state="translated">文件系统提供对文件存储的访问,该文件存储可能由许多不同的文件层次结构组成,每个层次结构都有自己的顶层根目录。除非被安全管理器拒绝,否则返回的迭代器中的每个元素都对应于一个不同文件层次结构的根目录。元素的顺序没有定义。在Java虚拟机的生命周期内,文件层次结构可能会发生变化。例如,在某些实现中,插入可移动介质可能会导致创建一个具有自己顶层目录的新文件层次结构。</target>
        </trans-unit>
        <trans-unit id="67ce0311f6028fd1552cf502d1719372ae4c2342" translate="yes" xml:space="preserve">
          <source>A file type detector for probing a file to guess its file type.</source>
          <target state="translated">一个文件类型检测器,用于探测文件以猜测其文件类型。</target>
        </trans-unit>
        <trans-unit id="61027a230d12f615246216d95e4ebcd7132e375c" translate="yes" xml:space="preserve">
          <source>A file type detector is a concrete implementation of this class, has a zero-argument constructor, and implements the abstract methods specified below.</source>
          <target state="translated">文件类型检测器是这个类的具体实现,它有一个零参数构造函数,并实现了下面指定的抽象方法。</target>
        </trans-unit>
        <trans-unit id="672c5562db439fda1727f52bc78e2d03e4797b3b" translate="yes" xml:space="preserve">
          <source>A file-lock object is created each time a lock is acquired on a file via one of the &lt;a href=&quot;filechannel#lock(long,long,boolean)&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;filechannel#tryLock(long,long,boolean)&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, or the &lt;a href=&quot;asynchronousfilechannel#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asynchronousfilechannel#tryLock(long,long,boolean)&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;asynchronousfilechannel&quot;&gt;&lt;code&gt;AsynchronousFileChannel&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">每次通过&lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;asynchronousfilechannel#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;asynchronousfilechannel#tryLock(long,long,boolean)&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt;方法之一或&lt;a href=&quot;asynchronousfilechannel&quot;&gt; &lt;code&gt;AsynchronousFileChannel&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;filechannel#lock(long,long,boolean)&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;filechannel#tryLock(long,long,boolean)&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt;方法之一获取文件锁时，都会创建一个文件锁对象。</target>
        </trans-unit>
        <trans-unit id="7a8fa8c5ab136a06c54fd39e4c674ceb8e8879dc" translate="yes" xml:space="preserve">
          <source>A file-lock object is created each time a lock is acquired on a file via one of the &lt;a href=&quot;filechannel#lock-long-long-boolean-&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;filechannel#tryLock-long-long-boolean-&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, or the &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asynchronousfilechannel#tryLock-long-long-boolean-&quot;&gt;&lt;code&gt;tryLock&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;asynchronousfilechannel&quot;&gt;&lt;code&gt;AsynchronousFileChannel&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">每次通过&lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;asynchronousfilechannel#tryLock-long-long-boolean-&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt;方法之一或&lt;a href=&quot;asynchronousfilechannel&quot;&gt; &lt;code&gt;AsynchronousFileChannel&lt;/code&gt; &lt;/a&gt;类的&lt;a href=&quot;filechannel#lock-long-long-boolean-&quot;&gt; &lt;code&gt;lock&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;filechannel#tryLock-long-long-boolean-&quot;&gt; &lt;code&gt;tryLock&lt;/code&gt; &lt;/a&gt;方法之一获取文件锁时，都会创建一个文件锁对象。</target>
        </trans-unit>
        <trans-unit id="f5e07c6b2c7d4656577eb217d6c977813de3732f" translate="yes" xml:space="preserve">
          <source>A file-lock object is initially valid. It remains valid until the lock is released by invoking the &lt;a href=&quot;#release()&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; method, by closing the channel that was used to acquire it, or by the termination of the Java virtual machine, whichever comes first. The validity of a lock may be tested by invoking its &lt;a href=&quot;#isValid()&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">文件锁对象最初是有效的。在调用锁&lt;a href=&quot;#release()&quot;&gt; &lt;code&gt;release&lt;/code&gt; &lt;/a&gt;方法，关闭用于获取锁的通道或通过Java虚拟机终止（以先到者为准）释放锁之前，它一直保持有效。可以通过调用&lt;a href=&quot;#isValid()&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt;方法来测试锁的有效性。</target>
        </trans-unit>
        <trans-unit id="ad42d41492ff4c772586b7c3843a8158af9ec343" translate="yes" xml:space="preserve">
          <source>A file-lock object is initially valid. It remains valid until the lock is released by invoking the &lt;a href=&quot;filelock#release--&quot;&gt;&lt;code&gt;release&lt;/code&gt;&lt;/a&gt; method, by closing the channel that was used to acquire it, or by the termination of the Java virtual machine, whichever comes first. The validity of a lock may be tested by invoking its &lt;a href=&quot;filelock#isValid--&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">文件锁对象最初是有效的。它一直有效，直到通过调用&lt;a href=&quot;filelock#release--&quot;&gt; &lt;code&gt;release&lt;/code&gt; &lt;/a&gt;方法，关闭用于获取它的通道或通过Java虚拟机终止（以先到者为准）来释放锁为止。锁的有效性可以通过调用&lt;a href=&quot;filelock#isValid--&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt;方法来测试。</target>
        </trans-unit>
        <trans-unit id="711939d8e50341d6cac3f60c7b46e0edf7fe9bab" translate="yes" xml:space="preserve">
          <source>A file-lock object records the file channel upon whose file the lock is held, the type and validity of the lock, and the position and size of the locked region. Only the validity of a lock is subject to change over time; all other aspects of a lock's state are immutable.</source>
          <target state="translated">一个文件锁对象记录了锁所在文件的文件通道、锁的类型和有效性,以及锁区域的位置和大小。只有锁的有效性会随着时间的推移而改变;锁的状态的所有其他方面是不可改变的。</target>
        </trans-unit>
        <trans-unit id="b2d3192bfc2e11788cf1e5bba0d4f970488f3fc3" translate="yes" xml:space="preserve">
          <source>A file-mapping mode.</source>
          <target state="translated">一种文件映射模式。</target>
        </trans-unit>
        <trans-unit id="37db82205994f143c5f9c99d0b674ca7cbf64f42" translate="yes" xml:space="preserve">
          <source>A filter can be set via &lt;a href=&quot;objectinputstream#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;setObjectInputFilter&lt;/code&gt;&lt;/a&gt; for an individual ObjectInputStream. A filter can be set via &lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt;&lt;code&gt;Config.setSerialFilter&lt;/code&gt;&lt;/a&gt; to affect every &lt;code&gt;ObjectInputStream&lt;/code&gt; that does not otherwise set a filter.</source>
          <target state="translated">可以通过&lt;a href=&quot;objectinputstream#setObjectInputFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;setObjectInputFilter&lt;/code&gt; &lt;/a&gt;为单个ObjectInputStream设置过滤器。可以通过&lt;a href=&quot;objectinputfilter.config#setSerialFilter(java.io.ObjectInputFilter)&quot;&gt; &lt;code&gt;Config.setSerialFilter&lt;/code&gt; &lt;/a&gt;设置过滤器，以影响每个未设置过滤器的 &lt;code&gt;ObjectInputStream&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7de111ba655a02d8af6bcdb6e71c56d7031e6b00" translate="yes" xml:space="preserve">
          <source>A filter determines whether the arguments are &lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt;&lt;code&gt;ALLOWED&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt;&lt;code&gt;REJECTED&lt;/code&gt;&lt;/a&gt; and should return the appropriate status. If the filter cannot determine the status it should return &lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt;&lt;code&gt;UNDECIDED&lt;/code&gt;&lt;/a&gt;. Filters should be designed for the specific use case and expected types. A filter designed for a particular use may be passed a class that is outside of the scope of the filter. If the purpose of the filter is to black-list classes then it can reject a candidate class that matches and report UNDECIDED for others. A filter may be called with class equals &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;arrayLength&lt;/code&gt; equal -1, the depth, number of references, and stream size and return a status that reflects only one or only some of the values. This allows a filter to specific about the choice it is reporting and to use other filters without forcing either allowed or rejected status.</source>
          <target state="translated">过滤器确定参数是&lt;a href=&quot;objectinputfilter.status#ALLOWED&quot;&gt; &lt;code&gt;ALLOWED&lt;/code&gt; &lt;/a&gt;还是&lt;a href=&quot;objectinputfilter.status#REJECTED&quot;&gt; &lt;code&gt;REJECTED&lt;/code&gt; ,&lt;/a&gt;并应返回适当的状态。如果过滤器无法确定状态，则应返回&lt;a href=&quot;objectinputfilter.status#UNDECIDED&quot;&gt; &lt;code&gt;UNDECIDED&lt;/code&gt; &lt;/a&gt;。过滤器应针对特定用例和预期类型进行设计。为特定用途设计的过滤器可能会传递超出过滤器范围的类。如果过滤器的目的是将类列入黑名单，则它可以拒绝匹配的候选类，并为其他类报告UNDECIDED。可以使用等于 &lt;code&gt;null&lt;/code&gt; 的类， &lt;code&gt;arrayLength&lt;/code&gt; 调用过滤器等于-1，深度，引用数和流大小，并返回仅反映一个或某些值的状态。这使筛选器可以特定于要报告的选择，并可以使用其他筛选器，而不会强制允许或拒绝状态。</target>
        </trans-unit>
        <trans-unit id="0bf0848690b34b73710f009588eaee0ac9b1dec7" translate="yes" xml:space="preserve">
          <source>A filter for abstract pathnames.</source>
          <target state="translated">一个抽象路径名的过滤器。</target>
        </trans-unit>
        <trans-unit id="cd8e90abaff87389d67364ef74dae3c1534bc794" translate="yes" xml:space="preserve">
          <source>A filter used to pre- and post-process incoming requests.</source>
          <target state="translated">用于对收到的请求进行预处理和后处理的过滤器。</target>
        </trans-unit>
        <trans-unit id="537df4732e9806243084d92dc643311f023f8fb0" translate="yes" xml:space="preserve">
          <source>A filter used to pre- and post-process incoming requests. Pre-processing occurs before the application's exchange handler is invoked, and post-processing occurs after the exchange handler returns. Filters are organised in chains, and are associated with HttpContext instances.</source>
          <target state="translated">用于对传入请求进行预处理和后处理的过滤器。预处理发生在应用程序的交换处理程序被调用之前,后处理发生在交换处理程序返回之后。过滤器被组织在链中,并与HttpContext实例相关联。</target>
        </trans-unit>
        <trans-unit id="4e46c5f00d4c9311a752d8db9bc2a6b91d9ee455" translate="yes" xml:space="preserve">
          <source>A filtering collector differs from a stream's &lt;code&gt;filter()&lt;/code&gt; operation. In this example, suppose there are no employees whose salary is above the threshold in some department. Using a filtering collector as shown above would result in a mapping from that department to an empty &lt;code&gt;Set&lt;/code&gt;. If a stream &lt;code&gt;filter()&lt;/code&gt; operation were done instead, there would be no mapping for that department at all.</source>
          <target state="translated">过滤收集器不同于流的 &lt;code&gt;filter()&lt;/code&gt; 操作。在此示例中，假设在某个部门中没有薪水高于阈值的员工。如上所示，使用过滤器收集器将导致从该部门到空 &lt;code&gt;Set&lt;/code&gt; 的映射。如果改为执行stream &lt;code&gt;filter()&lt;/code&gt; 操作，则该部门将根本没有映射。</target>
        </trans-unit>
        <trans-unit id="f5d806550c847ea862457c3d219d54ba7153c428" translate="yes" xml:space="preserve">
          <source>A finder of modules.</source>
          <target state="translated">一个模块的发现者。</target>
        </trans-unit>
        <trans-unit id="5a27c0038919302b881a06f7ffdce9745aa933a5" translate="yes" xml:space="preserve">
          <source>A finder of modules. A &lt;code&gt;ModuleFinder&lt;/code&gt; is used to find modules during &lt;a href=&quot;package-summary#resolution&quot;&gt;resolution&lt;/a&gt; or &lt;a href=&quot;configuration#service-binding&quot;&gt;service binding&lt;/a&gt;.</source>
          <target state="translated">模块的发现者。一个 &lt;code&gt;ModuleFinder&lt;/code&gt; 使用过程中发现的模块&lt;a href=&quot;package-summary#resolution&quot;&gt;分辨率&lt;/a&gt;或&lt;a href=&quot;configuration#service-binding&quot;&gt;服务绑定&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a0855a7cb6e2cc9c6bb1e2f2e28bf3f0bf0f605f" translate="yes" xml:space="preserve">
          <source>A flag for recording whether this attribute's values are ordered.</source>
          <target state="translated">用于记录该属性的值是否有序的标志。</target>
        </trans-unit>
        <trans-unit id="0150a3e4f9ae041e8ce2e60f25a81b388f493479" translate="yes" xml:space="preserve">
          <source>A flag indicating that there has been at least one &lt;code&gt;PropertyChangeVetoException&lt;/code&gt; thrown for the attempted setBeanContext operation.</source>
          <target state="translated">一个标志，指示已为尝试的setBeanContext操作抛出至少一个 &lt;code&gt;PropertyChangeVetoException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef38e7098fbd7a1a4c4c2c37ee356ad0ed51a5b9" translate="yes" xml:space="preserve">
          <source>A flag indicating whether this attribute was actually specified in the start-tag of its element, or was defaulted from the schema.</source>
          <target state="translated">一个标志,表示这个属性是在其元素的起始标签中实际指定的,还是从模式中默认的。</target>
        </trans-unit>
        <trans-unit id="a00c11559390c6c3c288e96fb53f1dac078f6002" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text in the char array after the indicated limit should not be examined.</source>
          <target state="translated">layoutGlyphVector的一个标志,表示不应该检查指定限制后的char数组中的文本。</target>
        </trans-unit>
        <trans-unit id="89b835f89e44dca84649d0af8a2d341b267b828d" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text in the char array before the indicated start should not be examined.</source>
          <target state="translated">layoutGlyphVector的一个标志,表示不应该检查指定开始前的char数组中的文本。</target>
        </trans-unit>
        <trans-unit id="1b05810e2680c32d104367e2bc3bdf2856bec039" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text is left-to-right as determined by Bidi analysis.</source>
          <target state="translated">layoutGlyphVector的一个标志,表示文字是由Bidi分析决定的从左到右。</target>
        </trans-unit>
        <trans-unit id="2f642699b80e7848ecebfe10f5fb03cf79285cd9" translate="yes" xml:space="preserve">
          <source>A flag to layoutGlyphVector indicating that text is right-to-left as determined by Bidi analysis.</source>
          <target state="translated">layoutGlyphVector的一个标志,表示文本是由Bidi分析决定的从右到左。</target>
        </trans-unit>
        <trans-unit id="3b2359dfcb7720ef48d07ba5990a5de781cb3c32" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a complex glyph-to-char mapping (one that does not map glyphs to chars one-to-one in strictly ascending or descending order matching the run direction).</source>
          <target state="translated">与getLayoutFlags一起使用的标志，指示此 &lt;code&gt;GlyphVector&lt;/code&gt; 具有复杂的字形到字符映射（一个不按与运行方向严格的升序或降序将字形一对一地映射到chars的字形）。</target>
        </trans-unit>
        <trans-unit id="9e458e69570a072d1fc8ecb0f33a8857f2d161d8" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a right-to-left run direction.</source>
          <target state="translated">与getLayoutFlags一起使用的标志，指示此 &lt;code&gt;GlyphVector&lt;/code&gt; 具有从右到左的运行方向。</target>
        </trans-unit>
        <trans-unit id="5d389bdc65eb9e2f6f6590d7b5a086d06acef5c7" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has a right-to-left run direction. This refers to the glyph-to-char mapping and does not imply that the visual locations of the glyphs are necessarily in this order, although generally they will be.</source>
          <target state="translated">与getLayoutFlags一起使用的标志，指示此 &lt;code&gt;GlyphVector&lt;/code&gt; 具有从右到左的运行方向。这是指字形到字符的映射，并不意味着字形的可视位置必须按此顺序排列，尽管通常会如此。</target>
        </trans-unit>
        <trans-unit id="27d657250e658fcd9c6d68b3f91f841beea746f8" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has per-glyph transforms.</source>
          <target state="translated">与getLayoutFlags一起使用的标志，指示此 &lt;code&gt;GlyphVector&lt;/code&gt; 具有按字形转换。</target>
        </trans-unit>
        <trans-unit id="64110abfbbbc887bb854fb4704c0089ffea09615" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has position adjustments.</source>
          <target state="translated">与getLayoutFlags一起使用的标志，指示此 &lt;code&gt;GlyphVector&lt;/code&gt; 具有位置调整。</target>
        </trans-unit>
        <trans-unit id="80fe54feb13a5cc0c3529dbae576c4c0c7d6c892" translate="yes" xml:space="preserve">
          <source>A flag used with getLayoutFlags that indicates that this &lt;code&gt;GlyphVector&lt;/code&gt; has position adjustments. When this is true, the glyph positions don't match the accumulated default advances of the glyphs (for example, if kerning has been done).</source>
          <target state="translated">与getLayoutFlags一起使用的标志，指示此 &lt;code&gt;GlyphVector&lt;/code&gt; 具有位置调整。如果为真，则字形位置与字形的累积默认提前量不匹配（例如，如果字距调整已完成）。</target>
        </trans-unit>
        <trans-unit id="dec43e8a9f1bb9d6b9c197216876739e500aa223" translate="yes" xml:space="preserve">
          <source>A float buffer is not comparable to any other type of object.</source>
          <target state="translated">浮动缓冲区与其他类型的对象没有可比性。</target>
        </trans-unit>
        <trans-unit id="5fb7a5a9e39b583648f523754a43509e1e7a8e4b" translate="yes" xml:space="preserve">
          <source>A float buffer is not equal to any other type of object.</source>
          <target state="translated">浮动缓冲区不等于任何其他类型的对象。</target>
        </trans-unit>
        <trans-unit id="8e77a58864e91572b793bb101954ce33a7471066" translate="yes" xml:space="preserve">
          <source>A float buffer.</source>
          <target state="translated">一个浮动缓冲区。</target>
        </trans-unit>
        <trans-unit id="bd680bc60ca812a5387563332bf314e22d394073" translate="yes" xml:space="preserve">
          <source>A flow layout arranges components in a directional flow, much like lines of text in a paragraph.</source>
          <target state="translated">流动布局以定向流动的方式安排组件,就像段落中的文字行一样。</target>
        </trans-unit>
        <trans-unit id="6a46d621888c556449816594810e0ad6f440cf3b" translate="yes" xml:space="preserve">
          <source>A flow layout arranges components in a directional flow, much like lines of text in a paragraph. The flow direction is determined by the container's &lt;code&gt;componentOrientation&lt;/code&gt; property and may be one of two values:</source>
          <target state="translated">流布局将组件按方向流排列，非常类似于段落中的文本行。流向由容器的 &lt;code&gt;componentOrientation&lt;/code&gt; 属性确定，并且可以是两个值之一：</target>
        </trans-unit>
        <trans-unit id="fb80e248814493a514fcef9129f6cbb0b50437d8" translate="yes" xml:space="preserve">
          <source>A flow layout lets each component assume its natural (preferred) size.</source>
          <target state="translated">流程布局让每个组件承担其自然(首选)尺寸。</target>
        </trans-unit>
        <trans-unit id="d96ba43b6da836af6fc96efc40a3cd8caf037eff" translate="yes" xml:space="preserve">
          <source>A focus traversal action with unspecified direction.</source>
          <target state="translated">一个方向不明确的焦点遍历动作。</target>
        </trans-unit>
        <trans-unit id="d03e66bb96338159b743fc35610bd55d6fbcf642" translate="yes" xml:space="preserve">
          <source>A font designer will typically carefully hint a font for the most common user interface point sizes. Consequently the 'gasp' table will likely specify to use only hinting at those sizes and not &quot;smoothing&quot;. So in many cases the resulting text display is equivalent to &lt;code&gt;VALUE_TEXT_ANTIALIAS_OFF&lt;/code&gt;. This may be unexpected but is correct.</source>
          <target state="translated">字体设计人员通常会仔细提示最常见的用户界面磅值的字体。因此，&amp;ldquo; gasp&amp;rdquo;表可能会指定仅使用这些大小的提示，而不使用&amp;ldquo;平滑&amp;rdquo;。因此，在许多情况下，结果显示的文本等效于 &lt;code&gt;VALUE_TEXT_ANTIALIAS_OFF&lt;/code&gt; 。这可能是意外的，但是正确的。</target>
        </trans-unit>
        <trans-unit id="2f6791a60db81c95891702d713d2e3e17a17c38c" translate="yes" xml:space="preserve">
          <source>A footer element (&lt;code&gt;TFOOT&lt;/code&gt; ).</source>
          <target state="translated">页脚元素（ &lt;code&gt;TFOOT&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="095d84578b9b46db68702b89c5e268f351fac4b5" translate="yes" xml:space="preserve">
          <source>A format conversion provider provides format conversion services from one or more input formats to one or more output formats.</source>
          <target state="translated">格式转换提供商提供从一种或多种输入格式到一种或多种输出格式的格式转换服务。</target>
        </trans-unit>
        <trans-unit id="9cc5d6ee4e5941d38db8fe246dade4e397e58a4b" translate="yes" xml:space="preserve">
          <source>A format conversion provider provides format conversion services from one or more input formats to one or more output formats. Converters include codecs, which encode and/or decode audio data, as well as transcoders, etc. Format converters provide methods for determining what conversions are supported and for obtaining an audio stream from which converted data can be read.</source>
          <target state="translated">格式转换供应商提供从一种或多种输入格式到一种或多种输出格式的格式转换服务。转换器包括编解码器,其对音频数据进行编码和/或解码,以及转码器等。格式转换器提供用于确定支持哪些转换的方法,以及用于获得可从中读取转换数据的音频流的方法。</target>
        </trans-unit>
        <trans-unit id="787cdbb4f865ed56be30b06dfca7e0f4af1393ad" translate="yes" xml:space="preserve">
          <source>A formatted string</source>
          <target state="translated">一个格式化的字符串</target>
        </trans-unit>
        <trans-unit id="e34e6b811c39b4b5b349c092b770d0705e7dbe5f" translate="yes" xml:space="preserve">
          <source>A forward focus traversal action.</source>
          <target state="translated">前期的重点穿越动作。</target>
        </trans-unit>
        <trans-unit id="35d25a295891e4731302bd13ab6217bf8d2a28c1" translate="yes" xml:space="preserve">
          <source>A fragment of Java code representing an initializer for the current value.</source>
          <target state="translated">代表当前值初始化器的Java代码片段。</target>
        </trans-unit>
        <trans-unit id="60990cb5e587dad8e349ae68390eae1367ebed51" translate="yes" xml:space="preserve">
          <source>A frame may have its native decorations (i.e. &lt;code&gt;Frame&lt;/code&gt; and &lt;code&gt;Titlebar&lt;/code&gt;) turned off with &lt;code&gt;setUndecorated&lt;/code&gt;. This can only be done while the frame is not &lt;a href=&quot;component#isDisplayable()&quot;&gt;&lt;code&gt;displayable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">框架可以使用 &lt;code&gt;setUndecorated&lt;/code&gt; 关闭其本机装饰（即 &lt;code&gt;Frame&lt;/code&gt; 和 &lt;code&gt;Titlebar&lt;/code&gt; ）。仅当框架无法&lt;a href=&quot;component#isDisplayable()&quot;&gt; &lt;code&gt;displayable&lt;/code&gt; &lt;/a&gt;时才能执行此操作。</target>
        </trans-unit>
        <trans-unit id="b942d4b2fdeab74944136600301e72f5eb3d26f0" translate="yes" xml:space="preserve">
          <source>A frame-like object that is clipped by a desktop pane.</source>
          <target state="translated">一个被桌面窗格剪下的框架状物体。</target>
        </trans-unit>
        <trans-unit id="9e2e6aded9e997f98ab282c9eb759f9a92abd1bd" translate="yes" xml:space="preserve">
          <source>A frame-like object that is clipped by a desktop pane. The desktop pane, internal frame, and desktop icon objects are often used to create multiple document interfaces within an application.</source>
          <target state="translated">一个被桌面窗格剪下的类似框架的对象。桌面窗格、内部框架和桌面图标对象通常用于在一个应用程序中创建多个文档界面。</target>
        </trans-unit>
        <trans-unit id="3869e53a3cced311d994733b36fbcccab3b1d8c9" translate="yes" xml:space="preserve">
          <source>A freshly-created lookup object on the &lt;a href=&quot;methodhandles#lookup()&quot;&gt;caller's class&lt;/a&gt; has all possible bits set, except &lt;code&gt;UNCONDITIONAL&lt;/code&gt;. A lookup object on a new lookup class &lt;a href=&quot;#in(java.lang.Class)&quot;&gt;created from a previous lookup object&lt;/a&gt; may have some mode bits set to zero. Mode bits can also be &lt;a href=&quot;#dropLookupMode(int)&quot;&gt;directly cleared&lt;/a&gt;. Once cleared, mode bits cannot be restored from the downgraded lookup object. The purpose of this is to restrict access via the new lookup object, so that it can access only names which can be reached by the original lookup object, and also by the new lookup class.</source>
          <target state="translated">&lt;a href=&quot;methodhandles#lookup()&quot;&gt;调用者类&lt;/a&gt;上的新创建的查找对象已设置了所有可能的位，但 &lt;code&gt;UNCONDITIONAL&lt;/code&gt; 除外。&lt;a href=&quot;#in(java.lang.Class)&quot;&gt;从先前的查找对象创建&lt;/a&gt;的新查找类上的查找对象可能会将某些模式位设置为零。模式位也可以&lt;a href=&quot;#dropLookupMode(int)&quot;&gt;直接清除&lt;/a&gt;。一旦清除，便无法从降级的查找对象中恢复模式位。这样做的目的是限制通过新的查找对象进行的访问，以便它只能访问原始查找对象以及新的查找类可以访问的名称。</target>
        </trans-unit>
        <trans-unit id="f50712164fb4f66c4a5273060c757a95e13d5e62" translate="yes" xml:space="preserve">
          <source>A freshly-created lookup object on the &lt;a href=&quot;methodhandles#lookup--&quot;&gt;caller's class&lt;/a&gt; has all possible bits set, since the caller class can access all its own members. A lookup object on a new lookup class &lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt;created from a previous lookup object&lt;/a&gt; may have some mode bits set to zero. The purpose of this is to restrict access via the new lookup object, so that it can access only names which can be reached by the original lookup object, and also by the new lookup class.</source>
          <target state="translated">对一个刚创建的查询对象&lt;a href=&quot;methodhandles#lookup--&quot;&gt;调用者的类&lt;/a&gt;设置了所有可能的位，因为调用类可以访问自己的所有成员。&lt;a href=&quot;methodhandles.lookup#in-java.lang.Class-&quot;&gt;从先前的查找对象创建&lt;/a&gt;的新查找类上的查找对象可能会将某些模式位设置为零。这样做的目的是限制通过新的查找对象进行的访问，以便它只能访问原始查找对象以及新的查找类可以访问的名称。</target>
        </trans-unit>
        <trans-unit id="1b5de0b9db89f7dec9586d9d504d2d55acb5d76d" translate="yes" xml:space="preserve">
          <source>A function that accepts two partial results and merges them.</source>
          <target state="translated">一个接受两个部分结果并将其合并的函数。</target>
        </trans-unit>
        <trans-unit id="6d07cafb2c426484441f2fe06c267dc28cd189d5" translate="yes" xml:space="preserve">
          <source>A function that accepts two partial results and merges them. The combiner function may fold state from one argument into the other and return that, or may return a new result container.</source>
          <target state="translated">一个接受两个部分结果并将其合并的函数。组合函数可以将一个参数的状态折叠到另一个参数中并返回,也可以返回一个新的结果容器。</target>
        </trans-unit>
        <trans-unit id="43bddcf15e634de817d95953c7f18c644307bb91" translate="yes" xml:space="preserve">
          <source>A function that creates and returns a new mutable result container.</source>
          <target state="translated">一个创建并返回一个新的可变结果容器的函数。</target>
        </trans-unit>
        <trans-unit id="ac772ea250f6df76a426391d3fc80b98a029b616" translate="yes" xml:space="preserve">
          <source>A function that folds a value into a mutable result container.</source>
          <target state="translated">一个将一个值折叠到一个可变化的结果容器中的函数。</target>
        </trans-unit>
        <trans-unit id="c9b6cc11acd2a2833a727b14160da37708cf5cb6" translate="yes" xml:space="preserve">
          <source>A future release of the JDK may change the default value of the &lt;code&gt;java.security.manager&lt;/code&gt; system property to &quot;&lt;code&gt;disallow&lt;/code&gt;&quot;.</source>
          <target state="translated">JDK的未来发行版可能会将 &lt;code&gt;java.security.manager&lt;/code&gt; 系统属性的默认值更改为&amp;ldquo; &lt;code&gt;disallow&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="ac22082df4a50758f8268942cc76f7ff63cfbbfc" translate="yes" xml:space="preserve">
          <source>A garbage collection notification is emitted by &lt;a href=&quot;garbagecollectormxbean&quot;&gt;&lt;code&gt;GarbageCollectorMXBean&lt;/code&gt;&lt;/a&gt; when the Java virtual machine completes a garbage collection action The notification emitted will contain the garbage collection notification information about the status of the memory:</source>
          <target state="translated">Java虚拟机完成垃圾回收操作时，&lt;a href=&quot;garbagecollectormxbean&quot;&gt; &lt;code&gt;GarbageCollectorMXBean&lt;/code&gt; &lt;/a&gt;会发出垃圾回收通知。发出的通知将包含有关内存状态的垃圾回收通知信息：</target>
        </trans-unit>
        <trans-unit id="f1e987f1e57505c842f18a1165026e190dbf68de" translate="yes" xml:space="preserve">
          <source>A gauge monitor observes an attribute that is continuously variable with time. A gauge monitor sends notifications as follows:</source>
          <target state="translated">仪表监控器观察一个随时间连续变化的属性。仪表监控器发送的通知如下。</target>
        </trans-unit>
        <trans-unit id="1354cd976006274706a25240cf8974eba59b5894" translate="yes" xml:space="preserve">
          <source>A general guideline for validators is to return true if the attribute was originally present in the pipeline, and false if it was added by the validator.</source>
          <target state="translated">验证器的一般准则是,如果属性原本就存在于管道中,则返回true,如果是验证器添加的,则返回false。</target>
        </trans-unit>
        <trans-unit id="f3bb2e152ff1aaee77640e95e07291f19892a22f" translate="yes" xml:space="preserve">
          <source>A generator of uniform pseudorandom values applicable for use in (among other contexts) isolated parallel computations that may generate subtasks.</source>
          <target state="translated">统一伪随机值的生成器,适用于(在其他情况下)孤立的并行计算,可以生成子任务。</target>
        </trans-unit>
        <trans-unit id="f296f7762bab23d802a5065844a5502434108582" translate="yes" xml:space="preserve">
          <source>A generator of uniform pseudorandom values applicable for use in (among other contexts) isolated parallel computations that may generate subtasks. Class &lt;code&gt;SplittableRandom&lt;/code&gt; supports methods for producing pseudorandom numbers of type &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt; with similar usages as for class &lt;a href=&quot;random&quot;&gt;&lt;code&gt;Random&lt;/code&gt;&lt;/a&gt; but differs in the following ways:</source>
          <target state="translated">统一伪随机值的生成器适用于（除其他上下文之外）可能会产生子任务的隔离并行计算。 &lt;code&gt;SplittableRandom&lt;/code&gt; 类支持产生类型为 &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;long&lt;/code&gt; 和 &lt;code&gt;double&lt;/code&gt; 的伪随机数的方法，其用法与类&lt;a href=&quot;random&quot;&gt; &lt;code&gt;Random&lt;/code&gt; &lt;/a&gt;相似，但在以下方面有所不同：</target>
        </trans-unit>
        <trans-unit id="39c26f88bef5c9de64f68da3b786d42455a9cab2" translate="yes" xml:space="preserve">
          <source>A generic Abstract Window Toolkit(AWT) container object is a component that can contain other AWT components.</source>
          <target state="translated">一个通用的抽象窗口工具包(AWT)容器对象是一个可以包含其他AWT组件的组件。</target>
        </trans-unit>
        <trans-unit id="5f318d1625a7edc63e2f5618183f323472491dc4" translate="yes" xml:space="preserve">
          <source>A generic HTML TagElement class.</source>
          <target state="translated">一个通用的HTML TagElement类。</target>
        </trans-unit>
        <trans-unit id="1b641406d58da099513d996133375b981123f238" translate="yes" xml:space="preserve">
          <source>A generic HTML TagElement class. The methods define how white space is interpreted around the tag.</source>
          <target state="translated">一个通用的HTML TagElement类。这些方法定义了如何解释标签周围的空白空间。</target>
        </trans-unit>
        <trans-unit id="ee3e63d8bc812120b6319da0e643f81f18db8658" translate="yes" xml:space="preserve">
          <source>A generic account exception.</source>
          <target state="translated">一个通用的账户异常。</target>
        </trans-unit>
        <trans-unit id="6638c80328392fd542656ba1c109b89d4578d810" translate="yes" xml:space="preserve">
          <source>A generic container that is often used to group objects.</source>
          <target state="translated">一个通用的容器,通常用来分组对象。</target>
        </trans-unit>
        <trans-unit id="ea8cc0b37c072a62f90548d86d62546be1b6030b" translate="yes" xml:space="preserve">
          <source>A generic credential exception.</source>
          <target state="translated">通用凭证异常。</target>
        </trans-unit>
        <trans-unit id="8d3921e6c41e544a62aad090d777399ba09dfeb0" translate="yes" xml:space="preserve">
          <source>A generic element defines a family of types, not just one. If this is a generic element, a</source>
          <target state="translated">一个通用元素定义了一个类型系列,而不仅仅是一个类型。如果这是一个通用元素,那么一个</target>
        </trans-unit>
        <trans-unit id="b1afdf0cd5e768e29225070708940face02a0af6" translate="yes" xml:space="preserve">
          <source>A generic element defines a family of types, not just one. If this is a generic element, a prototypical type is returned which has the element's invocation on the type variables corresponding to its own formal type parameters. For example, for the generic class element &lt;code&gt;C&amp;lt;N extends Number&amp;gt;&lt;/code&gt;, the parameterized type &lt;code&gt;C&amp;lt;N&amp;gt;&lt;/code&gt; is returned. The &lt;a href=&quot;../util/types&quot;&gt;&lt;code&gt;Types&lt;/code&gt;&lt;/a&gt; utility interface has more general methods for obtaining the full range of types defined by an element.</source>
          <target state="translated">通用元素定义了一类类型，而不仅仅是一个。如果这是通用元素，则返回原型类型，该类型具有元素对其对应于其自身形式类型参数的类型变量的调用。例如，对于通用类元素 &lt;code&gt;C&amp;lt;N extends Number&amp;gt;&lt;/code&gt; ，返回参数化类型 &lt;code&gt;C&amp;lt;N&amp;gt;&lt;/code&gt; 。所述&lt;a href=&quot;../util/types&quot;&gt; &lt;code&gt;Types&lt;/code&gt; &lt;/a&gt;工具接口具有用于获得全范围的由元件限定类型的更多的一般方法。</target>
        </trans-unit>
        <trans-unit id="3578a52f1bc291e214ae7fd982f27e4ba0b688c3" translate="yes" xml:space="preserve">
          <source>A generic implementation of &lt;code&gt;ColorSelectionModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ColorSelectionModel&lt;/code&gt; 的通用实现。</target>
        </trans-unit>
        <trans-unit id="30dc67c3ddc214c44e60b4ae5fede37d7fcd999c" translate="yes" xml:space="preserve">
          <source>A generic implementation of BoundedRangeModel.</source>
          <target state="translated">BoundedRangeModel的通用实现。</target>
        </trans-unit>
        <trans-unit id="1f635e63becb19276595cfd341b6bc81d2e61999" translate="yes" xml:space="preserve">
          <source>A generic implementation of SingleSelectionModel.</source>
          <target state="translated">SingleSelectionModel的通用实现。</target>
        </trans-unit>
        <trans-unit id="75035a576fd43563b6b8ea7a4a57774133267093" translate="yes" xml:space="preserve">
          <source>A generic interface describing operations that transform method handles.</source>
          <target state="translated">一个描述转换方法句柄操作的通用接口。</target>
        </trans-unit>
        <trans-unit id="77699ac8ce1639725272014a583a4f432c56526a" translate="yes" xml:space="preserve">
          <source>A generic interface describing operations that transform method handles. Typical usage is for implementing &lt;a href=&quot;../dynamiclinkerfactory#setInternalObjectsFilter(jdk.dynalink.linker.MethodHandleTransformer)&quot;&gt;&lt;code&gt;internal objects filters&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">描述转换方法处理的操作的通用接口。典型的用法是实现&lt;a href=&quot;../dynamiclinkerfactory#setInternalObjectsFilter(jdk.dynalink.linker.MethodHandleTransformer)&quot;&gt; &lt;code&gt;internal objects filters&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5ccd60299ff2b531b7b5d0ed4bca19b49c6e458e" translate="yes" xml:space="preserve">
          <source>A generic interface for a mutable collection of unique attributes.</source>
          <target state="translated">一个用于独特属性的可变异集合的通用接口。</target>
        </trans-unit>
        <trans-unit id="69fa87a3d0b58ae17bc145d5d6f7bee1fd0c231d" translate="yes" xml:space="preserve">
          <source>A generic interface for a mutable collection of unique attributes. Implementations will probably want to provide a constructor of the form:</source>
          <target state="translated">一个通用接口,用于一个可变的唯一属性集合。实现时可能需要提供一个构造函数,其形式为:</target>
        </trans-unit>
        <trans-unit id="36a2626cbe080b42ca256bc3f5f06c6e465de057" translate="yes" xml:space="preserve">
          <source>A given connector need not support the generation of client stubs. However, the connectors specified by the JMX Remote API do (JMXMP Connector and RMI Connector).</source>
          <target state="translated">指定的连接器不需要支持客户端存根的生成。但是,JMX远程API指定的连接器(JMXMP连接器和RMI连接器)可以支持生成客户端存根。</target>
        </trans-unit>
        <trans-unit id="b139f5ad6b7946d259047308f55c666e905ba834" translate="yes" xml:space="preserve">
          <source>A given invocation of the Java virtual machine maintains a system-wide list of file type detectors. Installed file type detectors are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class. Installed file type detectors are loaded using the system class loader. If the system class loader cannot be found then the extension class loader is used; If the extension class loader cannot be found then the bootstrap class loader is used. File type detectors are typically installed by placing them in a JAR file on the application class path or in the extension directory, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, and the file lists one or more fully-qualified names of concrete subclass of &lt;code&gt;FileTypeDetector &lt;/code&gt; that have a zero argument constructor. If the process of locating or instantiating the installed file type detectors fails then an unspecified error is thrown. The ordering that installed providers are located is implementation specific.</source>
          <target state="translated">Java虚拟机的给定调用维护了系统范围内的文件类型检测器列表。使用&lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;类定义的服务提供者加载工具来加载已安装的文件类型检测器。使用系统类加载器加载已安装的文件类型检测器。如果找不到系统类加载器，则使用扩展类加载器；否则，使用扩展类加载器。如果找不到扩展类加载器，则使用引导类加载器。文件类型检测器通常通过将它们放置在应用程序类路径或扩展目录中的JAR文件中进行安装，该JAR文件在资源目录 &lt;code&gt;META-INF/services&lt;/code&gt; 包含名为 &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; 的提供程序配置文件。/服务，并且该文件列出了一个或多个具有零参数构造函数的 &lt;code&gt;FileTypeDetector &lt;/code&gt; 具体子类的标准名称。如果查找或实例化已安装文件类型检测器的过程失败，则会引发未指定的错误。已安装的提供程序所在的顺序是特定于实现的。</target>
        </trans-unit>
        <trans-unit id="c99eab50de0140ef9d944911fa037ec867874873" translate="yes" xml:space="preserve">
          <source>A given invocation of the Java virtual machine maintains a system-wide list of file type detectors. Installed file type detectors are loaded using the service-provider loading facility defined by the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; class. Installed file type detectors are loaded using the system class loader. If the system class loader cannot be found then the platform class loader is used. File type detectors are typically installed by placing them in a JAR file on the application class path, the JAR file contains a provider-configuration file named &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, and the file lists one or more fully-qualified names of concrete subclass of &lt;code&gt;FileTypeDetector &lt;/code&gt; that have a zero argument constructor. If the process of locating or instantiating the installed file type detectors fails then an unspecified error is thrown. The ordering that installed providers are located is implementation specific.</source>
          <target state="translated">Java虚拟机的给定调用维护了系统范围内的文件类型检测器列表。使用&lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;类定义的服务提供者加载工具来加载已安装的文件类型检测器。使用系统类加载器加载已安装的文件类型检测器。如果找不到系统类加载器，则使用平台类加载器。通常通过将文件类型检测器放置在应用程序类路径上的JAR文件中来安装文件，该JAR文件在资源目录 &lt;code&gt;META-INF/services&lt;/code&gt; 中包含名为 &lt;code&gt;java.nio.file.spi.FileTypeDetector&lt;/code&gt; 的提供程序配置文件，并且文件列出 &lt;code&gt;FileTypeDetector &lt;/code&gt; 的具体子类的一个或多个完全限定名称具有零参数的构造函数。如果查找或实例化已安装文件类型检测器的过程失败，则会引发未指定的错误。已安装的提供程序所在的顺序是特定于实现的。</target>
        </trans-unit>
        <trans-unit id="9e3b442b5fe9a27c98a08c95f21bc990f7ab8bc7" translate="yes" xml:space="preserve">
          <source>A global color table is written to the output stream if one of the following conditions is met:</source>
          <target state="translated">如果满足以下条件之一,全局颜色表将被写入输出流。</target>
        </trans-unit>
        <trans-unit id="7919fd5e0a156cbf5a6d578801b4051978ce6323" translate="yes" xml:space="preserve">
          <source>A group layout is used to combine together multiple &lt;em&gt;member layouts&lt;/em&gt;.</source>
          <target state="translated">组布局用于将多个&lt;em&gt;成员布局&lt;/em&gt;组合在一起。</target>
        </trans-unit>
        <trans-unit id="3878a482e95aa330ec2b9f1a8f94afc99382d0ee" translate="yes" xml:space="preserve">
          <source>A group layout is used to combine together multiple &lt;em&gt;member layouts&lt;/em&gt;. There are two ways in which member layouts can be combined: if member layouts are laid out one after the other, the resulting group layout is said to be a &lt;em&gt;struct&lt;/em&gt; (see &lt;a href=&quot;memorylayout#ofStruct(jdk.incubator.foreign.MemoryLayout...)&quot;&gt;&lt;code&gt;MemoryLayout.ofStruct(MemoryLayout...)&lt;/code&gt;&lt;/a&gt;); conversely, if all member layouts are laid out at the same starting offset, the resulting group layout is said to be a &lt;em&gt;union&lt;/em&gt; (see &lt;a href=&quot;memorylayout#ofUnion(jdk.incubator.foreign.MemoryLayout...)&quot;&gt;&lt;code&gt;MemoryLayout.ofUnion(MemoryLayout...)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">组布局用于将多个&lt;em&gt;成员布局&lt;/em&gt;组合在一起。可以通过两种方式组合成员布局：如果成员布局一个接一个地布置，则结果组布局被称为&lt;em&gt;结构&lt;/em&gt;（请参见&lt;a href=&quot;memorylayout#ofStruct(jdk.incubator.foreign.MemoryLayout...)&quot;&gt; &lt;code&gt;MemoryLayout.ofStruct(MemoryLayout...)&lt;/code&gt; &lt;/a&gt;）；相反，如果所有成员布局都以相同的起始偏移量进行布局，则结果组布局被称为&lt;em&gt;联合&lt;/em&gt;（请参见&lt;a href=&quot;memorylayout#ofUnion(jdk.incubator.foreign.MemoryLayout...)&quot;&gt; &lt;code&gt;MemoryLayout.ofUnion(MemoryLayout...)&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="8af0722143a8cd99cd10f9bcc5d199373569cb1d" translate="yes" xml:space="preserve">
          <source>A grouping of asynchronous channels for the purpose of resource sharing</source>
          <target state="translated">以资源共享为目的的异步通道组。</target>
        </trans-unit>
        <trans-unit id="c24b47a3aa5a36d6a87410408d2c4d5a5faf5cfe" translate="yes" xml:space="preserve">
          <source>A grouping of asynchronous channels for the purpose of resource sharing.</source>
          <target state="translated">以资源共享为目的的异步通道分组。</target>
        </trans-unit>
        <trans-unit id="e523c29175596d5a85587ffc32f4afa7a0f727ed" translate="yes" xml:space="preserve">
          <source>A guarding dynamic linker that can determine whether it can link the call site solely based on the type of the first argument at linking invocation time.</source>
          <target state="translated">守护动态链接器,可以在链接调用时仅根据第一个参数的类型来判断是否可以链接调用站点。</target>
        </trans-unit>
        <trans-unit id="56b90f0cdf584fea1ad19bbe6701bbb7c7dc09ec" translate="yes" xml:space="preserve">
          <source>A guarding dynamic linker that can determine whether it can link the call site solely based on the type of the first argument at linking invocation time. (The first argument is usually the receiver). Most language-specific linkers will fall into this category, as they recognize their native objects as Java objects of classes implementing a specific language-native interface or superclass. The linker mechanism can optimize the dispatch for these linkers, see &lt;a href=&quot;support/compositetypebasedguardingdynamiclinker&quot;&gt;&lt;code&gt;CompositeTypeBasedGuardingDynamicLinker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一种保护性动态链接器，它可以仅在链接调用时根据第一个参数的类型来确定是否可以链接调用站点。（第一个参数通常是接收者）。大多数特定于语言的链接器都属于此类，因为它们将其本机对象识别为实现特定语言本机接口或超类的类的Java对象。链接器机制可以优化这些链接器的调度，请参阅&lt;a href=&quot;support/compositetypebasedguardingdynamiclinker&quot;&gt; &lt;code&gt;CompositeTypeBasedGuardingDynamicLinker&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2be906f8d04ce14e3feb869931fc7b7f37dae596" translate="yes" xml:space="preserve">
          <source>A handle is a small icon that displays adjacent to the node which allows the user to click once to expand or collapse the node. A common interface shows a plus sign (+) for a node which can be expanded and a minus sign (-) for a node which can be collapsed. Handles are always shown for nodes below the topmost level.</source>
          <target state="translated">句柄是显示在节点旁边的一个小图标,用户可以点击一次来展开或折叠节点。常见的界面显示一个加号(+)表示可以展开的节点,一个减号(-)表示可以折叠的节点。最上层以下的节点总是显示手柄。</target>
        </trans-unit>
        <trans-unit id="30a821dd5510cfba238591c999baad3298ac1b21" translate="yes" xml:space="preserve">
          <source>A handle to the standard error stream.</source>
          <target state="translated">标准误差流的句柄。</target>
        </trans-unit>
        <trans-unit id="9928d62a2404074511ec0f299ada0040336beb28" translate="yes" xml:space="preserve">
          <source>A handle to the standard error stream. Usually, this file descriptor is not used directly, but rather via the output stream known as &lt;code&gt;System.err&lt;/code&gt;.</source>
          <target state="translated">标准错误流的句柄。通常，不直接使用此文件描述符，而是通过称为 &lt;code&gt;System.err&lt;/code&gt; 的输出流使用。</target>
        </trans-unit>
        <trans-unit id="0a7380902243667d2be7d7f4080010cd101f173f" translate="yes" xml:space="preserve">
          <source>A handle to the standard input stream.</source>
          <target state="translated">标准输入流的句柄。</target>
        </trans-unit>
        <trans-unit id="a2838c09bf3325466fca5db9ee06eb2453bfff6d" translate="yes" xml:space="preserve">
          <source>A handle to the standard input stream. Usually, this file descriptor is not used directly, but rather via the input stream known as &lt;code&gt;System.in&lt;/code&gt;.</source>
          <target state="translated">标准输入流的句柄。通常，不直接使用此文件描述符，而是通过称为 &lt;code&gt;System.in&lt;/code&gt; 的输入流使用。</target>
        </trans-unit>
        <trans-unit id="1978a1df9850d456ea7b0d47dceb737dbb3e418e" translate="yes" xml:space="preserve">
          <source>A handle to the standard output stream.</source>
          <target state="translated">标准输出流的句柄。</target>
        </trans-unit>
        <trans-unit id="e8b2f584a4219597bac6f663c5cbf24cfa40cf51" translate="yes" xml:space="preserve">
          <source>A handle to the standard output stream. Usually, this file descriptor is not used directly, but rather via the output stream known as &lt;code&gt;System.out&lt;/code&gt;.</source>
          <target state="translated">标准输出流的句柄。通常，不直接使用此文件描述符，而是通过称为 &lt;code&gt;System.out&lt;/code&gt; 的输出流使用。</target>
        </trans-unit>
        <trans-unit id="a1b5138ff4cb191fc484864d0a2d10c52bfd78da" translate="yes" xml:space="preserve">
          <source>A handler for consuming notifications from the SCTP stack.</source>
          <target state="translated">用于消耗SCTP协议栈的通知的处理程序。</target>
        </trans-unit>
        <trans-unit id="4a3f24c9968701ba089eded185c35bffc8539bb2" translate="yes" xml:space="preserve">
          <source>A handler for consuming the result of an asynchronous I/O operation.</source>
          <target state="translated">用于消耗异步I/O操作结果的处理程序。</target>
        </trans-unit>
        <trans-unit id="87b43b91a9388e1643e11f5fb51e2f91d80cd199" translate="yes" xml:space="preserve">
          <source>A handler for consuming the result of an asynchronous operation</source>
          <target state="translated">用于消耗异步操作结果的处理程序。</target>
        </trans-unit>
        <trans-unit id="2ced0ff8936b2b8ca7d93d97b9ddc96163d5006b" translate="yes" xml:space="preserve">
          <source>A handler for push promises.</source>
          <target state="translated">一个推送承诺的处理程序。</target>
        </trans-unit>
        <trans-unit id="3cec3929b4904998820b22c6d9b5a5aebdfb2d20" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that discards the oldest unhandled request and then retries &lt;code&gt;execute&lt;/code&gt;, unless the executor is shut down, in which case the task is discarded.</source>
          <target state="translated">拒绝任务的处理程序，它丢弃最旧的未处理请求，然后重试 &lt;code&gt;execute&lt;/code&gt; ，除非执行器被关闭，在这种情况下，该任务将被丢弃。</target>
        </trans-unit>
        <trans-unit id="6d2b537bf297eb19ca8a1ca48bc8a94afcc52f9b" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that runs the rejected task directly in the calling thread of the &lt;code&gt;execute&lt;/code&gt; method, unless the executor has been shut down, in which case the task is discarded.</source>
          <target state="translated">拒绝任务的处理程序，它直接在 &lt;code&gt;execute&lt;/code&gt; 方法的调用线程中运行拒绝任务，除非执行器已关闭，在这种情况下，该任务将被丢弃。</target>
        </trans-unit>
        <trans-unit id="12e0f3f68b2f87e89d6864a58af1905bcde37958" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that silently discards the rejected task.</source>
          <target state="translated">被拒绝的任务的处理程序,默默地丢弃被拒绝的任务。</target>
        </trans-unit>
        <trans-unit id="2e10982cc89e46fcc6c511554f0ca769b7a3f337" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that throws a &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">抛出&lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; 的被&lt;/a&gt;拒绝任务的处理程序。</target>
        </trans-unit>
        <trans-unit id="d4927fee05dc5b481a362ec2b93edc23d0a7a2e5" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that throws a &lt;a href=&quot;rejectedexecutionexception&quot;&gt;&lt;code&gt;RejectedExecutionException&lt;/code&gt;&lt;/a&gt;. This is the default handler for &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scheduledthreadpoolexecutor&quot;&gt;&lt;code&gt;ScheduledThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">抛出&lt;a href=&quot;rejectedexecutionexception&quot;&gt; &lt;code&gt;RejectedExecutionException&lt;/code&gt; 的被&lt;/a&gt;拒绝任务的处理程序。这是&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;scheduledthreadpoolexecutor&quot;&gt; &lt;code&gt;ScheduledThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;的默认处理程序。</target>
        </trans-unit>
        <trans-unit id="d3cce71daa234bfb9ba87e7bb64a50184f43e70f" translate="yes" xml:space="preserve">
          <source>A handler for rejected tasks that throws a &lt;code&gt;RejectedExecutionException&lt;/code&gt;.</source>
          <target state="translated">抛出 &lt;code&gt;RejectedExecutionException&lt;/code&gt; 的被拒绝任务的处理程序。</target>
        </trans-unit>
        <trans-unit id="abc1f69c0d6ea8e98a9bd04a018ce25520ec62a5" translate="yes" xml:space="preserve">
          <source>A handler for response bodies.</source>
          <target state="translated">响应机构的处理程序。</target>
        </trans-unit>
        <trans-unit id="45a1e2095347e4e6aa94d3b5dab9a732262b2e18" translate="yes" xml:space="preserve">
          <source>A handler for response bodies. The class &lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt;&lt;code&gt;BodyHandlers&lt;/code&gt;&lt;/a&gt; provides implementations of many common body handlers.</source>
          <target state="translated">响应主体的处理程序。&lt;a href=&quot;httpresponse.bodyhandlers&quot;&gt; &lt;code&gt;BodyHandlers&lt;/code&gt; &lt;/a&gt;类提供了许多常见主体处理程序的实现。</target>
        </trans-unit>
        <trans-unit id="7f8ca17fde6e602f88cd3d6a07f614961244d33f" translate="yes" xml:space="preserve">
          <source>A handler for tasks that cannot be executed by a &lt;a href=&quot;threadpoolexecutor&quot;&gt;&lt;code&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个无法由&lt;a href=&quot;threadpoolexecutor&quot;&gt; &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; &lt;/a&gt;执行的任务的处理程序。</target>
        </trans-unit>
        <trans-unit id="06c0ebbb5e3c421200e02ff95ec0e812f7ef5aca" translate="yes" xml:space="preserve">
          <source>A handler which is invoked to process HTTP exchanges.</source>
          <target state="translated">一个处理程序,它被调用来处理HTTP交换。</target>
        </trans-unit>
        <trans-unit id="2a55adfcac5c280004809c287f6c5c3609f7f7bf" translate="yes" xml:space="preserve">
          <source>A handler which is invoked to process HTTP exchanges. Each HTTP exchange is handled by one of these handlers.</source>
          <target state="translated">一个处理程序,它被调用来处理HTTP交换。每个HTTP交换都由这些处理程序中的一个来处理。</target>
        </trans-unit>
        <trans-unit id="0a91275847969127c3a82acb83d8bd92b1ca604e" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;.</source>
          <target state="translated">播放MIDI音&lt;a href=&quot;sequence&quot;&gt; &lt;code&gt;sequence&lt;/code&gt; &lt;/a&gt;的硬件或软件设备称为音序&lt;em&gt;器&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="fbd1b68861c6ec91db40150e61ef171032c7db14" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;. A MIDI sequence contains lists of time-stamped MIDI data, such as might be read from a standard MIDI file. Most sequencers also provide functions for creating and editing sequences.</source>
          <target state="translated">播放MIDI音&lt;a href=&quot;sequence&quot;&gt; &lt;code&gt;sequence&lt;/code&gt; &lt;/a&gt;的硬件或软件设备称为音序&lt;em&gt;器&lt;/em&gt;。MIDI序列包含带有时间戳的MIDI数据列表，例如可以从标准MIDI文件中读取的数据。大多数音序器还提供创建和编辑音序的功能。</target>
        </trans-unit>
        <trans-unit id="cb43ba18f8e33a313d98fe4907d0dc669c17300e" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;.</source>
          <target state="translated">播放MIDI音 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 的硬件或软件设备称为音序&lt;em&gt;器&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="1050858df573c8b54a98d32a32a6761e7ca701a4" translate="yes" xml:space="preserve">
          <source>A hardware or software device that plays back a MIDI &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; is known as a &lt;em&gt;sequencer&lt;/em&gt;. A MIDI sequence contains lists of time-stamped MIDI data, such as might be read from a standard MIDI file. Most sequencers also provide functions for creating and editing sequences.</source>
          <target state="translated">播放MIDI音 &lt;code&gt;&lt;a href=&quot;sequence&quot;&gt;&lt;code&gt;sequence&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 的硬件或软件设备称为音序&lt;em&gt;器&lt;/em&gt;。MIDI序列包含带有时间戳的MIDI数据列表，例如可以从标准MIDI文件中读取的列表。大多数音序器还提供用于创建和编辑音序的功能。</target>
        </trans-unit>
        <trans-unit id="3a7edc5100c7524404899934b687c1b0263088ad" translate="yes" xml:space="preserve">
          <source>A hash code</source>
          <target state="translated">一个哈希码</target>
        </trans-unit>
        <trans-unit id="8f0f5eba602ce509dcca3db786c22c74bdedbf76" translate="yes" xml:space="preserve">
          <source>A hash code based on the executable's hash code.</source>
          <target state="translated">基于可执行文件的哈希码的哈希码。</target>
        </trans-unit>
        <trans-unit id="6422685e686802184d02914f59e5e03e37e4b920" translate="yes" xml:space="preserve">
          <source>A hash code for this &lt;code&gt;WeekFields&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;WeekFields&lt;/code&gt; 的哈希码。</target>
        </trans-unit>
        <trans-unit id="082377c5769ccaeb74c377e922e220bd74c1eb8b" translate="yes" xml:space="preserve">
          <source>A hash code for this DecimalStyle.</source>
          <target state="translated">这个DecimalStyle的哈希码。</target>
        </trans-unit>
        <trans-unit id="1a0a2cbf33b6fc708b1e71a5607d7568aba4cd9d" translate="yes" xml:space="preserve">
          <source>A hash code for this abstract pathname</source>
          <target state="translated">这个抽象路径名的哈希码。</target>
        </trans-unit>
        <trans-unit id="5e74913296ef0affb84d3a88b703ae21e89763f7" translate="yes" xml:space="preserve">
          <source>A hash code for this chronology.</source>
          <target state="translated">该年表的哈希码。</target>
        </trans-unit>
        <trans-unit id="56ecf462977972b604f5d42c94c6433b5d120cb4" translate="yes" xml:space="preserve">
          <source>A hash code for this clock.</source>
          <target state="translated">这个时钟的哈希码。</target>
        </trans-unit>
        <trans-unit id="6d733f15fb333cbf3f6de70fb60920b8481a2562" translate="yes" xml:space="preserve">
          <source>A hash code for this date-time.</source>
          <target state="translated">这个日期时间的哈希码。</target>
        </trans-unit>
        <trans-unit id="cd393e22a9982f36df6d1e49fdc513be03d5db18" translate="yes" xml:space="preserve">
          <source>A hash code for this date.</source>
          <target state="translated">这个日期的哈希码;</target>
        </trans-unit>
        <trans-unit id="75aa073250f910cbe612992bee56c47830c125f3" translate="yes" xml:space="preserve">
          <source>A hash code for this duration.</source>
          <target state="translated">这段时间的哈希码。</target>
        </trans-unit>
        <trans-unit id="ef6b3720cb101c6523e14b342faf358533e784b6" translate="yes" xml:space="preserve">
          <source>A hash code for this month-day.</source>
          <target state="translated">这个月日的哈希码。</target>
        </trans-unit>
        <trans-unit id="9d286da27efe86be8a56c732ea14a6d1d4c2dd17" translate="yes" xml:space="preserve">
          <source>A hash code for this offset.</source>
          <target state="translated">该偏移量的哈希码。</target>
        </trans-unit>
        <trans-unit id="338c5ee14af4c4f5108e22b8984af253203eb866" translate="yes" xml:space="preserve">
          <source>A hash code for this period.</source>
          <target state="translated">这一时期的哈希码。</target>
        </trans-unit>
        <trans-unit id="d1ca372319e5779208c68834db7457509cffd5e9" translate="yes" xml:space="preserve">
          <source>A hash code for this range.</source>
          <target state="translated">这个范围的哈希码。</target>
        </trans-unit>
        <trans-unit id="def95cbd7ecd69e1cb41c6e7fe9e142e1b6e12b9" translate="yes" xml:space="preserve">
          <source>A hash code for this time-zone ID.</source>
          <target state="translated">该时区ID的哈希码。</target>
        </trans-unit>
        <trans-unit id="21b0c4b6c9ca1f20ee357c40a64a32937d745822" translate="yes" xml:space="preserve">
          <source>A hash code for this time.</source>
          <target state="translated">这次的哈希码。</target>
        </trans-unit>
        <trans-unit id="8fc40307541ad29754e7c8cc76d8cdac1da4dab9" translate="yes" xml:space="preserve">
          <source>A hash code for this year-month.</source>
          <target state="translated">本年月日的哈希码。</target>
        </trans-unit>
        <trans-unit id="0f0ed6aa7948b36fe936b86cc68d0c6dc3a1c7b0" translate="yes" xml:space="preserve">
          <source>A hash code for this year.</source>
          <target state="translated">今年的一个哈希码。</target>
        </trans-unit>
        <trans-unit id="c7260df544fa8e975c1248b223e104cf612fdcea" translate="yes" xml:space="preserve">
          <source>A hash code of this reference as an int.</source>
          <target state="translated">此引用的哈希码为一个int。</target>
        </trans-unit>
        <trans-unit id="c038c38ee7b79b8905fbe54cde0df6b4f273532e" translate="yes" xml:space="preserve">
          <source>A hash code value for this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">此 &lt;code&gt;UUID&lt;/code&gt; 的哈希码值</target>
        </trans-unit>
        <trans-unit id="85283c8b1e2ec2edadf924f01b3aaeb9490f0d58" translate="yes" xml:space="preserve">
          <source>A hash code value for this object.</source>
          <target state="translated">此对象的哈希码值。</target>
        </trans-unit>
        <trans-unit id="5e119773bedd6f34e3f4a604ececbbc72f9f1cf7" translate="yes" xml:space="preserve">
          <source>A hash table supporting full concurrency of retrievals and high expected concurrency for updates.</source>
          <target state="translated">一个支持检索的全并发和更新的高预期并发的哈希表。</target>
        </trans-unit>
        <trans-unit id="7be080c5693a5494d8a81110a7c2c060ad2b0789" translate="yes" xml:space="preserve">
          <source>A hash table supporting full concurrency of retrievals and high expected concurrency for updates. This class obeys the same functional specification as &lt;a href=&quot;../hashtable&quot;&gt;&lt;code&gt;Hashtable&lt;/code&gt;&lt;/a&gt;, and includes versions of methods corresponding to each method of &lt;code&gt;Hashtable&lt;/code&gt;. However, even though all operations are thread-safe, retrieval operations do &lt;em&gt;not&lt;/em&gt; entail locking, and there is &lt;em&gt;not&lt;/em&gt; any support for locking the entire table in a way that prevents all access. This class is fully interoperable with &lt;code&gt;Hashtable&lt;/code&gt; in programs that rely on its thread safety but not on its synchronization details.</source>
          <target state="translated">一个哈希表，它支持检索的完全并发性和更新的高期望并发性。此类遵循与&lt;a href=&quot;../hashtable&quot;&gt; &lt;code&gt;Hashtable&lt;/code&gt; &lt;/a&gt;相同的功能规范，并且包括与 &lt;code&gt;Hashtable&lt;/code&gt; 的每个方法相对应的方法的版本。但是，即使所有操作都是线程安全的，检索操作&lt;em&gt;也不&lt;/em&gt;需要进行锁定，并且&lt;em&gt;不&lt;/em&gt;支持以阻止所有访问的方式锁定整个表。在依赖于其线程安全性但不依赖于其同步详细信息的程序中，此类可与 &lt;code&gt;Hashtable&lt;/code&gt; 完全互操作。</target>
        </trans-unit>
        <trans-unit id="f2ac80bdd78fba7e815e2307473834134c0b8301" translate="yes" xml:space="preserve">
          <source>A hash-code value for this URI</source>
          <target state="translated">该URI的哈希码值。</target>
        </trans-unit>
        <trans-unit id="d3497b3b6dfa91c3d3b0888a9fd10432473f17f6" translate="yes" xml:space="preserve">
          <source>A hash-code value for this descriptor.</source>
          <target state="translated">此描述符的哈希码值。</target>
        </trans-unit>
        <trans-unit id="151aa801653e9351defb38ce2c8618918a6ba455" translate="yes" xml:space="preserve">
          <source>A hash-code value for this virtual machine</source>
          <target state="translated">该虚拟机的哈希码值。</target>
        </trans-unit>
        <trans-unit id="6f786cf19e1bfad99116b7eea0c7c4d01a129f5e" translate="yes" xml:space="preserve">
          <source>A hashcode value for this object.</source>
          <target state="translated">此对象的哈希码值。</target>
        </trans-unit>
        <trans-unit id="0c92d5878bd4109278901b64a7898c9b219f4450" translate="yes" xml:space="preserve">
          <source>A helper interface to run the nested event loop.</source>
          <target state="translated">运行嵌套事件循环的辅助接口。</target>
        </trans-unit>
        <trans-unit id="531037da01ce93fad322a6e90507cf29968387ee" translate="yes" xml:space="preserve">
          <source>A hexadecimal digit: &lt;code&gt;[0-9a-fA-F]&lt;/code&gt;</source>
          <target state="translated">十六进制数字： &lt;code&gt;[0-9a-fA-F]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8019d565ee6672068a88a557bf3259f61e9f6e2e" translate="yes" xml:space="preserve">
          <source>A hexadecimal digit: &lt;code&gt;[\p{gc=Nd}\p{IsHex_Digit}]&lt;/code&gt;</source>
          <target state="translated">十六进制数字： &lt;code&gt;[\p{gc=Nd}\p{IsHex_Digit}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="854769d68115f9401de71a1c27601cf8c3ddf233" translate="yes" xml:space="preserve">
          <source>A hidden class or interface cannot be described in &lt;a href=&quot;constant/constantdesc&quot;&gt;&lt;em&gt;nominal form&lt;/em&gt;&lt;/a&gt; by &lt;a href=&quot;#describeConstable()&quot;&gt;&lt;code&gt;Class::describeConstable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;constant/classdesc#of(java.lang.String)&quot;&gt;&lt;code&gt;ClassDesc::of&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;constant/classdesc#ofDescriptor(java.lang.String)&quot;&gt;&lt;code&gt;ClassDesc::ofDescriptor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个隐藏的类或接口不能被描述&lt;a href=&quot;constant/constantdesc&quot;&gt;&lt;em&gt;标称形式&lt;/em&gt;&lt;/a&gt;由&lt;a href=&quot;#describeConstable()&quot;&gt; &lt;code&gt;Class::describeConstable&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;constant/classdesc#of(java.lang.String)&quot;&gt; &lt;code&gt;ClassDesc::of&lt;/code&gt; &lt;/a&gt;，或&lt;a href=&quot;constant/classdesc#ofDescriptor(java.lang.String)&quot;&gt; &lt;code&gt;ClassDesc::ofDescriptor&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33feb4751de206337df0da8b411af356b47dfbe1" translate="yes" xml:space="preserve">
          <source>A hidden class or interface cannot be discovered by &lt;a href=&quot;#forName(java.lang.String)&quot;&gt;&lt;code&gt;Class::forName&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt;&lt;code&gt;ClassLoader::loadClass&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#forName(java.lang.String)&quot;&gt; &lt;code&gt;Class::forName&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;classloader#loadClass(java.lang.String,boolean)&quot;&gt; &lt;code&gt;ClassLoader::loadClass&lt;/code&gt; &lt;/a&gt;不能发现隐藏的类或接口。</target>
        </trans-unit>
        <trans-unit id="bdbc23c75dc01eb9bc547d290b2694f3cdd11d0e" translate="yes" xml:space="preserve">
          <source>A hidden class or interface cannot be referenced by the constant pools of other classes and interfaces.</source>
          <target state="translated">一个隐藏的类或接口不能被其他类和接口的常量池引用。</target>
        </trans-unit>
        <trans-unit id="d24b8283c653fdd6ed4a2e087f19e836042302de" translate="yes" xml:space="preserve">
          <source>A hidden class or interface is never an array class, but may be the element type of an array. In all other respects, the fact that a class or interface is hidden has no bearing on the characteristics exposed by the methods of class &lt;code&gt;Class&lt;/code&gt;.</source>
          <target state="translated">隐藏的类或接口绝不是数组类，而可以是数组的元素类型。在所有其他方面，隐藏类或接口的事实与 &lt;code&gt;Class&lt;/code&gt; 类的方法所揭示的特征无关。</target>
        </trans-unit>
        <trans-unit id="ea99b794c163661f5edc141486ec187f2c07ad75" translate="yes" xml:space="preserve">
          <source>A hidden class or interface may be serializable, but this requires a custom serialization mechanism in order to ensure that instances are properly serialized and deserialized. The default serialization mechanism supports only classes and interfaces that are discoverable by their class name.</source>
          <target state="translated">一个隐藏的类或接口可能是可序列化的,但这需要一个自定义的序列化机制,以确保实例被正确序列化和反序列化。默认的序列化机制只支持通过类名可以发现的类和接口。</target>
        </trans-unit>
        <trans-unit id="f5c10d3bde5bef7105f7b7369c1b278236f25262" translate="yes" xml:space="preserve">
          <source>A hidden nestmate class has access to the private members of all classes and interfaces in the same nest.</source>
          <target state="translated">一个隐藏的嵌套类可以访问同一嵌套中所有类和接口的私有成员。</target>
        </trans-unit>
        <trans-unit id="0eaf5113462f5f09a75427d07e5000b2557a560e" translate="yes" xml:space="preserve">
          <source>A hierarchical URI is considered to be less than an opaque URI with an identical scheme.</source>
          <target state="translated">层次化的URI被认为是小于相同方案的不透明URI。</target>
        </trans-unit>
        <trans-unit id="3f15b0dd6e68706f3cc8aca6a2b0b354d9959881" translate="yes" xml:space="preserve">
          <source>A hierarchical URI is subject to further parsing according to the syntax</source>
          <target state="translated">层次化的URI可以根据语法进行进一步的解析。</target>
        </trans-unit>
        <trans-unit id="1b72242d36dd9c1a1bbcdcd871a57488b4e19272" translate="yes" xml:space="preserve">
          <source>A higher value (eg 200) corresponds to lower contrast text when displaying dark text on a light background.</source>
          <target state="translated">当在浅色背景上显示深色文本时,较高的值(例如 200)对应较低的对比度文本。</target>
        </trans-unit>
        <trans-unit id="0d5419f9f8244ee00b27805e52cb8a6861a1f7c0" translate="yes" xml:space="preserve">
          <source>A higher-quality spliterator will provide balanced and known-size splits, accurate sizing information, and a number of other &lt;a href=&quot;../spliterator#characteristics()&quot;&gt;&lt;code&gt;characteristics&lt;/code&gt;&lt;/a&gt; of the spliterator or data that can be used by implementations to optimize execution.</source>
          <target state="translated">更高质量的拆分器将提供平衡的已知大小的拆分，准确的大小调整信息以及拆分器或数据的许多其他&lt;a href=&quot;../spliterator#characteristics()&quot;&gt; &lt;code&gt;characteristics&lt;/code&gt; &lt;/a&gt;，可用于实现以优化执行。</target>
        </trans-unit>
        <trans-unit id="3a70b6cdbfa6b9ebe9df52783e9c0b40b7945da0" translate="yes" xml:space="preserve">
          <source>A higher-quality spliterator will provide balanced and known-size splits, accurate sizing information, and a number of other &lt;a href=&quot;../spliterator#characteristics--&quot;&gt;&lt;code&gt;characteristics&lt;/code&gt;&lt;/a&gt; of the spliterator or data that can be used by implementations to optimize execution.</source>
          <target state="translated">更高质量的拆分器将提供平衡的已知大小的拆分，准确的大小信息以及拆分器或数据的许多其他&lt;a href=&quot;../spliterator#characteristics--&quot;&gt; &lt;code&gt;characteristics&lt;/code&gt; &lt;/a&gt;，可用于实现以优化执行。</target>
        </trans-unit>
        <trans-unit id="e3b3c45bec3819031bfb3beac1e4cf8a85411829" translate="yes" xml:space="preserve">
          <source>A highlight.</source>
          <target state="translated">一个亮点。</target>
        </trans-unit>
        <trans-unit id="1f73842d8304b98d46d95ef4a1c93bc4aeac0030" translate="yes" xml:space="preserve">
          <source>A hint to the scheduler that the current thread is willing to yield its current use of a processor.</source>
          <target state="translated">暗示调度器,当前线程愿意放弃当前使用的处理器。</target>
        </trans-unit>
        <trans-unit id="1d2af2f2ec5660f7616d7e59e084554df9083acf" translate="yes" xml:space="preserve">
          <source>A hint to the scheduler that the current thread is willing to yield its current use of a processor. The scheduler is free to ignore this hint.</source>
          <target state="translated">给调度器的提示,即当前线程愿意让出其当前使用的处理器。调度器可以随意忽略这个提示。</target>
        </trans-unit>
        <trans-unit id="2e25d8e3fd6b9427c3d026104f6c339e625a8770" translate="yes" xml:space="preserve">
          <source>A horizontal line is drawn dividing the children of the root node.</source>
          <target state="translated">在根节点的子节点之间画一条横线。</target>
        </trans-unit>
        <trans-unit id="c154a87c0971a077f5cd09333efec30ff1904e75" translate="yes" xml:space="preserve">
          <source>A horizontal offset to be applied to the subsampling grid before subsampling.</source>
          <target state="translated">在子采样前应用于子采样网格的水平偏移。</target>
        </trans-unit>
        <trans-unit id="dce262eaf05a51984255debdf4e961963652fdf2" translate="yes" xml:space="preserve">
          <source>A horizontal offset to be applied to the subsampling grid before subsampling. The first pixel to be used will be offset this amount from the origin of the region, or of the image if no region is specified.</source>
          <target state="translated">子采样前应用于子采样网格的水平偏移量。要使用的第一个像素将从区域的原点偏移这个数量,如果没有指定区域,则从图像的原点偏移这个数量。</target>
        </trans-unit>
        <trans-unit id="cae300f90785fca5b33cd05f0e37e347f3bdb295" translate="yes" xml:space="preserve">
          <source>A horizontal whitespace character: &lt;code&gt;[ \t\xA0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000]&lt;/code&gt;</source>
          <target state="translated">水平空格字符： &lt;code&gt;[ \t\xA0\u1680\u180e\u2000-\u200a\u202f\u205f\u3000]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2092bd5cb7b434a04d1edfe6aba1977fb241b996" translate="yes" xml:space="preserve">
          <source>A host isn't in a domain (RFC 2965 sec. 3.3.2) if:</source>
          <target state="translated">在以下情况下,主机不在一个域内(RFC 2965 sec.3.3.2):</target>
        </trans-unit>
        <trans-unit id="db7e379eb5e0f3f3d4c5030d527a0a8f61a34df4" translate="yes" xml:space="preserve">
          <source>A human readable description of the file.</source>
          <target state="translated">文件的可读性说明;</target>
        </trans-unit>
        <trans-unit id="cdc37c4166ea9c8a2930ce69109a712e2add43c0" translate="yes" xml:space="preserve">
          <source>A human readable description of the file. For example, a file named</source>
          <target state="translated">文件的可读性描述。例如,一个名为</target>
        </trans-unit>
        <trans-unit id="05275ceba984e39524d2b0df962c6b901d482052" translate="yes" xml:space="preserve">
          <source>A human readable description of the type of the file.</source>
          <target state="translated">对文件类型的可读性描述。</target>
        </trans-unit>
        <trans-unit id="bf5a6fdb997f26851858a2a7e49351bab13266e2" translate="yes" xml:space="preserve">
          <source>A human readable description of the type of the file. For example, a &lt;code&gt;jpg&lt;/code&gt; file might have a type description of: &quot;A JPEG Compressed Image File&quot;</source>
          <target state="translated">文件类型的人类可读描述。例如， &lt;code&gt;jpg&lt;/code&gt; 文件的类型描述可能为：&amp;ldquo; A JPEG压缩图像文件&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="d6381a21b33e7b13b7e539d9fd273f492eae9e53" translate="yes" xml:space="preserve">
          <source>A hypertext anchor.</source>
          <target state="translated">一个超文本锚。</target>
        </trans-unit>
        <trans-unit id="07aa9b38a4ede3c83aa047636c3e1f374ce196f4" translate="yes" xml:space="preserve">
          <source>A instance of &lt;code&gt;CookieManager&lt;/code&gt; will have cookie policy ACCEPT_ORIGINAL_SERVER by default. Users always can call this method to set another cookie policy.</source>
          <target state="translated">&lt;code&gt;CookieManager&lt;/code&gt; 的实例默认情况下具有Cookie策略ACCEPT_ORIGINAL_SERVER。用户始终可以调用此方法来设置另一个cookie策略。</target>
        </trans-unit>
        <trans-unit id="ed93d745a111d391d7a2f46cbf50e03f102e5d8b" translate="yes" xml:space="preserve">
          <source>A int buffer is not comparable to any other type of object.</source>
          <target state="translated">一个int缓冲区不能与其他类型的对象相提并论。</target>
        </trans-unit>
        <trans-unit id="a7a5c5dcd5045f34fd77586929f7a76518869889" translate="yes" xml:space="preserve">
          <source>A int buffer is not equal to any other type of object.</source>
          <target state="translated">一个int缓冲区不等于任何其他类型的对象。</target>
        </trans-unit>
        <trans-unit id="3b8db826daaeb4da111cdd530cd07bbeacba70f5" translate="yes" xml:space="preserve">
          <source>A is a HDN string and has the form NB, where N is a non-empty name string, B has the form .B', and B' is a HDN string. (So, x.y.com domain-matches .Y.com but not Y.com.)</source>
          <target state="translated">A 是一个 HDN 字符串,其形式为 NB,其中 N 是一个非空的名称字符串,B 的形式为 .B',B'是一个 HDN 字符串。所以,x.y.com域名匹配.Y.com但不匹配Y.com)。</target>
        </trans-unit>
        <trans-unit id="c1d25b7429dcbb1987d6223c0fd9a5ab8b4f4d68" translate="yes" xml:space="preserve">
          <source>A java.awt.Component that will allow a human to directly edit the current property value. May be null if this is not supported.</source>
          <target state="translated">一个允许人类直接编辑当前属性值的java.awt.Component。如果不支持,可以为空。</target>
        </trans-unit>
        <trans-unit id="f8479b6e12a50290a4467817e2ae521cd0602642" translate="yes" xml:space="preserve">
          <source>A key for decrypting.</source>
          <target state="translated">一把解密用的钥匙。</target>
        </trans-unit>
        <trans-unit id="5f2f2b91c9987065c527424b56bb25a319710c59" translate="yes" xml:space="preserve">
          <source>A key for encrypting.</source>
          <target state="translated">加密用的密钥。</target>
        </trans-unit>
        <trans-unit id="aeb7761ffdaca83c367d0f28bdffb8e9a53f6697" translate="yes" xml:space="preserve">
          <source>A key for signing.</source>
          <target state="translated">签字用的钥匙。</target>
        </trans-unit>
        <trans-unit id="ba41fbf59d1b71ab91a38baf00516e42096254bd" translate="yes" xml:space="preserve">
          <source>A key for verifying.</source>
          <target state="translated">一把验证的钥匙。</target>
        </trans-unit>
        <trans-unit id="7b3c012683f968fa1daa96c09c44348b3118cee4" translate="yes" xml:space="preserve">
          <source>A key indicating the shape should be filled.</source>
          <target state="translated">表示形状的钥匙应该被填充。</target>
        </trans-unit>
        <trans-unit id="d4c1bb24115fe4e1a99161dae231b08fd3bac417" translate="yes" xml:space="preserve">
          <source>A key indicating the shape should be stroked with a 1-pixel wide stroke.</source>
          <target state="translated">表示形状的键应以1个像素宽的笔触来描画。</target>
        </trans-unit>
        <trans-unit id="e2f512559524a09759b68d44fb68ab035c63ee9c" translate="yes" xml:space="preserve">
          <source>A key is added to a selector's key set as a side effect of registering a channel via the channel's &lt;a href=&quot;selectablechannel#register(java.nio.channels.Selector,int)&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method. Cancelled keys are removed from the key set during selection operations. The key set itself is not directly modifiable.</source>
          <target state="translated">一个键被添加到选择器的键集中，作为通过通道的&lt;a href=&quot;selectablechannel#register(java.nio.channels.Selector,int)&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;方法注册通道的副作用。在选择操作期间，已取消的键将从键集中删除。密钥集本身不能直接修改。</target>
        </trans-unit>
        <trans-unit id="dc935686fe4c4bf5294565416f415b4c8bfe92e9" translate="yes" xml:space="preserve">
          <source>A key is added to a selector's key set as a side effect of registering a channel via the channel's &lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method. Cancelled keys are removed from the key set during selection operations. The key set itself is not directly modifiable.</source>
          <target state="translated">一个键被添加到选择器的键集中，作为通过通道的&lt;a href=&quot;selectablechannel#register-java.nio.channels.Selector-int-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt;方法注册通道的副作用。在选择操作期间，已取消的键将从键集中删除。密钥集本身不能直接修改。</target>
        </trans-unit>
        <trans-unit id="11bba173b0c2ffe68b976c77efcdac1edeb723a9" translate="yes" xml:space="preserve">
          <source>A key is added to its selector's cancelled-key set when it is cancelled, whether by closing its channel or by invoking its &lt;a href=&quot;selectionkey#cancel()&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method. Cancelling a key will cause its channel to be deregistered during the next selection operation, at which time the key will be removed from all of the selector's key sets.</source>
          <target state="translated">取消键时，无论是通过关闭其通道还是通过调用其&lt;a href=&quot;selectionkey#cancel()&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;方法，都会将一个键添加到其选择器的cancelled键集中。取消某个键将导致其频道在下一次选择操作期间被注销，这时该键将从所有选择器的键集中删除。</target>
        </trans-unit>
        <trans-unit id="964050a9069a956131820dda0c3b3fdb5dec31af" translate="yes" xml:space="preserve">
          <source>A key is added to its selector's cancelled-key set when it is cancelled, whether by closing its channel or by invoking its &lt;a href=&quot;selectionkey#cancel--&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; method. Cancelling a key will cause its channel to be deregistered during the next selection operation, at which time the key will removed from all of the selector's key sets.</source>
          <target state="translated">取消键时，无论是通过关闭其通道还是通过调用其&lt;a href=&quot;selectionkey#cancel--&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt;方法，都会将一个键添加到其选择器的cancelled键集中。取消某个键将导致其频道在下一次选择操作期间被注销，这时该键将从所有选择器的键集中删除。</target>
        </trans-unit>
        <trans-unit id="c5c83f6d5654385f02695581674b4358677f2c26" translate="yes" xml:space="preserve">
          <source>A key is valid upon creation and remains so until it is cancelled, its channel is closed, or its selector is closed.</source>
          <target state="translated">一个键在创建时是有效的,并保持有效,直到它被取消,它的通道被关闭,或它的选择器被关闭。</target>
        </trans-unit>
        <trans-unit id="3567b234d34db2898e97ad89a7423f7ad8bb314d" translate="yes" xml:space="preserve">
          <source>A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). For example, a DSA private key may be specified by its components &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;p&lt;/code&gt;, &lt;code&gt;q&lt;/code&gt;, and &lt;code&gt;g&lt;/code&gt; (see &lt;a href=&quot;dsaprivatekeyspec&quot;&gt;&lt;code&gt;DSAPrivateKeySpec&lt;/code&gt;&lt;/a&gt;), or it may be specified using its DER encoding (see &lt;a href=&quot;pkcs8encodedkeyspec&quot;&gt;&lt;code&gt;PKCS8EncodedKeySpec&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">可以以特定于算法的方式或以独立于算法的编码格式（例如ASN.1）来指定密钥。例如，DSA私钥可以由其组件 &lt;code&gt;x&lt;/code&gt; ， &lt;code&gt;p&lt;/code&gt; ， &lt;code&gt;q&lt;/code&gt; 和 &lt;code&gt;g&lt;/code&gt; 指定（请参见&lt;a href=&quot;dsaprivatekeyspec&quot;&gt; &lt;code&gt;DSAPrivateKeySpec&lt;/code&gt; &lt;/a&gt;），也可以使用其DER编码指定（请参见&lt;a href=&quot;pkcs8encodedkeyspec&quot;&gt; &lt;code&gt;PKCS8EncodedKeySpec&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="dd53af8d943f80628e365177149bf1813ced8fbe" translate="yes" xml:space="preserve">
          <source>A key part of the date-time problem space is adjusting a date to a new, related value, such as the &quot;last day of the month&quot;, or &quot;next Wednesday&quot;. These are modeled as functions that adjust a base date-time. The functions implement &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt; and operate on &lt;code&gt;Temporal&lt;/code&gt;. A set of common functions are provided in &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. For example, to find the first occurrence of a day-of-week after a given date, use &lt;a href=&quot;temporaladjusters#next(java.time.DayOfWeek)&quot;&gt;&lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt;. Applications can also define adjusters by implementing &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日期时间问题空间的关键部分是将日期调整为新的相关值，例如&amp;ldquo;每月的最后一天&amp;rdquo;或&amp;ldquo;下一个星期三&amp;rdquo;。这些被建模为调整基准日期时间的函数。该函数实现&lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; &lt;/a&gt;并在 &lt;code&gt;Temporal&lt;/code&gt; 上进行操作。&lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt;中提供了一组常用功能。例如，要查找给定日期之后一周中的某天的第一次出现，请使用&lt;a href=&quot;temporaladjusters#next(java.time.DayOfWeek)&quot;&gt; &lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt; &lt;/a&gt;，例如 &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt; 。应用程序还可以通过实现&lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; &lt;/a&gt;来定义调整器。</target>
        </trans-unit>
        <trans-unit id="1f46b54c144fbfb71c028bbb373ce3b3ddfb0cb9" translate="yes" xml:space="preserve">
          <source>A key part of the date-time problem space is adjusting a date to a new, related value, such as the &quot;last day of the month&quot;, or &quot;next Wednesday&quot;. These are modeled as functions that adjust a base date-time. The functions implement &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt; and operate on &lt;code&gt;Temporal&lt;/code&gt;. A set of common functions are provided in &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt;. For example, to find the first occurrence of a day-of-week after a given date, use &lt;a href=&quot;temporaladjusters#next-java.time.DayOfWeek-&quot;&gt;&lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt;. Applications can also define adjusters by implementing &lt;a href=&quot;temporaladjuster&quot;&gt;&lt;code&gt;TemporalAdjuster&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">日期时间问题空间的关键部分是将日期调整为新的相关值，例如&amp;ldquo;每月的最后一天&amp;rdquo;或&amp;ldquo;下一个星期三&amp;rdquo;。这些被建模为调整基准日期时间的函数。该函数实现&lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; &lt;/a&gt;并在 &lt;code&gt;Temporal&lt;/code&gt; 上运行。&lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt;中提供了一组常用功能。例如，要查找给定日期之后一周中某天的第一次出现，请使用&lt;a href=&quot;temporaladjusters#next-java.time.DayOfWeek-&quot;&gt; &lt;code&gt;TemporalAdjusters.next(DayOfWeek)&lt;/code&gt; &lt;/a&gt;，例如 &lt;code&gt;date.with(next(MONDAY))&lt;/code&gt; 。应用程序还可以通过实现&lt;a href=&quot;temporaladjuster&quot;&gt; &lt;code&gt;TemporalAdjuster&lt;/code&gt; &lt;/a&gt;来定义调整器。</target>
        </trans-unit>
        <trans-unit id="bd8a761e520198c1cdaa54b4d4372dc66292abc6" translate="yes" xml:space="preserve">
          <source>A key property list as defined below.</source>
          <target state="translated">关键财产清单,定义如下:</target>
        </trans-unit>
        <trans-unit id="f68a1b3c961bf3188f44addd02d18988aa1e3f1b" translate="yes" xml:space="preserve">
          <source>A key property list written as a String is a comma-separated list of elements. Each element is either an asterisk or a key property. A key property consists of a key, an equals (&lt;code&gt;=&lt;/code&gt;), and the associated value.</source>
          <target state="translated">以字符串形式编写的键属性列表是逗号分隔的元素列表。每个元素都是星号或键属性。键属性由一个键，一个等于（ &lt;code&gt;=&lt;/code&gt; ）和关联的值组成。</target>
        </trans-unit>
        <trans-unit id="c0586c9ec6232590f575482bb2c80c36ba5f7423" translate="yes" xml:space="preserve">
          <source>A key representing the registration of this channel with the given selector</source>
          <target state="translated">一个代表该通道在给定选择器中注册的键。</target>
        </trans-unit>
        <trans-unit id="ecefc7965907056694e7481d75b869b29f450431" translate="yes" xml:space="preserve">
          <source>A key representing the registration of this object with the given watch service</source>
          <target state="translated">代表该对象在给定手表服务中注册的密钥。</target>
        </trans-unit>
        <trans-unit id="f42a40d645e94595a63ed0059561f728071e39f5" translate="yes" xml:space="preserve">
          <source>A key specification is a transparent representation of the key material that constitutes a key. A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). This package contains key specifications for DSA public and private keys, RSA public and private keys, PKCS #8 private keys in DER-encoded format, and X.509 public and private keys in DER-encoded format.</source>
          <target state="translated">钥匙规格是构成钥匙的钥匙材料的透明表示。密钥可以用特定于算法的方式来指定,也可以用独立于算法的编码格式(如ASN.1)来指定。这个软件包包含了DSA公钥和私钥、RSA公钥和私钥、DER编码格式的PKCS #8私钥和DER编码格式的X.509公钥和私钥的密钥规范。</target>
        </trans-unit>
        <trans-unit id="e0f3d8b0a4094e0a7b104df6160697464e59ec13" translate="yes" xml:space="preserve">
          <source>A key specification is a transparent representation of the key material that constitutes a key. A key may be specified in an algorithm-specific way, or in an algorithm-independent encoding format (such as ASN.1). This package contains key specifications for Diffie-Hellman public and private keys, as well as key specifications for DES, Triple DES, and PBE secret keys.</source>
          <target state="translated">钥匙规格是构成钥匙的钥匙材料的透明表示。密钥可以用特定于算法的方式来指定,也可以用独立于算法的编码格式(如ASN.1)来指定。这个软件包包含Diffie-Hellman公钥和私钥的密钥规范,以及DES、Triple DES和PBE秘密密钥的密钥规范。</target>
        </trans-unit>
        <trans-unit id="0aacfcfb6bf4889f12230f05b825f1f2e0d7537b" translate="yes" xml:space="preserve">
          <source>A key use case for calculations on a date in an arbitrary calendar system is producing a month-by-month calendar for display and user interaction. Again, this is a UI issue, and use of this interface solely within a few methods of the UI layer may be justified.</source>
          <target state="translated">在一个任意的日历系统中,对日期进行计算的一个关键用例是生成一个逐月的日历,用于显示和用户交互。同样,这是一个UI问题,仅在UI层的几个方法中使用这个接口可能是合理的。</target>
        </trans-unit>
        <trans-unit id="c34e01f46090c7cf338fb81da1087990aca8505e" translate="yes" xml:space="preserve">
          <source>A kit can safely store editing state as an instance of the kit will be dedicated to a text component. New kits will normally be created by cloning a prototype kit. The kit will have its &lt;code&gt;setComponent&lt;/code&gt; method called to establish its relationship with a JTextComponent.</source>
          <target state="translated">套件可以安全地存储编辑状态，因为套件的实例将专用于文本组件。通常会通过克隆原型套件来创建新套件。该工具包将调用其 &lt;code&gt;setComponent&lt;/code&gt; 方法来建立与JTextComponent的关系。</target>
        </trans-unit>
        <trans-unit id="7fcb15f00291a40cab9dcee79f5d952bd5eac29d" translate="yes" xml:space="preserve">
          <source>A label is an individual part of a domain name. The original ToASCII operation, as defined in RFC 3490, only operates on a single label. This method can handle both label and entire domain name, by assuming that labels in a domain name are always separated by dots. The following characters are recognized as dots: \u002E (full stop), \u3002 (ideographic full stop), \uFF0E (fullwidth full stop), and \uFF61 (halfwidth ideographic full stop). if dots are used as label separators, this method also changes all of them to \u002E (full stop) in output translated string.</source>
          <target state="translated">标签是域名的一个独立部分。RFC 3490中定义的原始ToASCII操作只对单个标签进行操作。这种方法既可以处理标签,也可以处理整个域名,因为它假定域名中的标签总是用点来分隔。以下字符被识别为点。\如果使用点作为标签分隔符,本方法也会在输出的翻译字符串中把所有的点改为点002E(满分)。</target>
        </trans-unit>
        <trans-unit id="123da693824e9381ac6679a81d6dc167f1012487" translate="yes" xml:space="preserve">
          <source>A label is an individual part of a domain name. The original ToUnicode operation, as defined in RFC 3490, only operates on a single label. This method can handle both label and entire domain name, by assuming that labels in a domain name are always separated by dots. The following characters are recognized as dots: \u002E (full stop), \u3002 (ideographic full stop), \uFF0E (fullwidth full stop), and \uFF61 (halfwidth ideographic full stop).</source>
          <target state="translated">标签是域名的一个独立部分。RFC 3490中定义的原始ToUnicode操作只对单个标签进行操作。这个方法可以同时处理标签和整个域名,因为它假定域名中的标签总是用点来分隔。以下字符被识别为点。以下字符被识别为点:\u002E(句号),\u3002(表意的句号),\uFF0E(全宽的句号),以及\uFF61(半宽的表意的句号)。</target>
        </trans-unit>
        <trans-unit id="5057ac95e11321f63baa2115c1f6ba3069ef33ed" translate="yes" xml:space="preserve">
          <source>A label's leading and trailing edge are determined from the value of its &lt;a href=&quot;../../java/awt/componentorientation&quot;&gt;&lt;code&gt;ComponentOrientation&lt;/code&gt;&lt;/a&gt; property. At present, the default ComponentOrientation setting maps the leading edge to left and the trailing edge to right.</source>
          <target state="translated">标签的前缘和后缘由其&lt;a href=&quot;../../java/awt/componentorientation&quot;&gt; &lt;code&gt;ComponentOrientation&lt;/code&gt; &lt;/a&gt;属性的值确定。当前，默认的ComponentOrientation设置将前边缘映射到左侧，将后边缘映射到右侧。</target>
        </trans-unit>
        <trans-unit id="cb92260b3dcdd0b455ee21f13b75301d79957387" translate="yes" xml:space="preserve">
          <source>A language runtime that wishes to make at least some of its linkers available to other language runtimes for interoperability will need to use a &lt;a href=&quot;guardingdynamiclinkerexporter&quot;&gt;&lt;code&gt;GuardingDynamicLinkerExporter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">希望使至少某些链接程序可用于其他语言运行时以实现互操作性的语言运行时，将需要使用&lt;a href=&quot;guardingdynamiclinkerexporter&quot;&gt; &lt;code&gt;GuardingDynamicLinkerExporter&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="253218e6f649ceefe10cad50f21d102120bfa077" translate="yes" xml:space="preserve">
          <source>A later token has already been processed.</source>
          <target state="translated">后来的令牌已经被处理过了。</target>
        </trans-unit>
        <trans-unit id="677b023fe7ec6362779ee6d3c8675d6129a3afd3" translate="yes" xml:space="preserve">
          <source>A later token has already been processed. This is a fatal error code that may occur during context establishment. It is not used to indicate supplementary status values. The MessageProp object is used for that purpose.</source>
          <target state="translated">后面的令牌已经被处理。这是一个致命的错误代码,可能在上下文建立期间发生。它不用于指示补充状态值。MessageProp对象用于此目的。</target>
        </trans-unit>
        <trans-unit id="5277e37c88befb14c4900a1e7b21705943a1921e" translate="yes" xml:space="preserve">
          <source>A layer is created from a graph of modules in a &lt;a href=&quot;module/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt; and a function that maps each module to a &lt;a href=&quot;classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt;. Creating a layer informs the Java virtual machine about the classes that may be loaded from the modules so that the Java virtual machine knows which module that each class is a member of.</source>
          <target state="translated">根据&lt;a href=&quot;module/configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; 中&lt;/a&gt;的模块图和将每个模块映射到&lt;a href=&quot;classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt;的函数创建一个图层。创建一个层会通知Java虚拟机有关可以从模块加载的类的信息，以便Java虚拟机知道每个类是哪个模块的成员。</target>
        </trans-unit>
        <trans-unit id="1342f1334f0443aaf9516668d4ea2e646d808449" translate="yes" xml:space="preserve">
          <source>A layer of modules in the Java virtual machine.</source>
          <target state="translated">Java虚拟机中的一层模块。</target>
        </trans-unit>
        <trans-unit id="d0f54cc0e5057c7986390cbc721e478d9988fe29" translate="yes" xml:space="preserve">
          <source>A layout manager that allows multiple components to be laid out either vertically or horizontally.</source>
          <target state="translated">一个布局管理器,允许多个组件垂直或水平布局。</target>
        </trans-unit>
        <trans-unit id="b2079d32865329cc7156e48c142cc7deb2aadb37" translate="yes" xml:space="preserve">
          <source>A layout manager that allows multiple components to be laid out either vertically or horizontally. The components will not wrap so, for example, a vertical arrangement of components will stay vertically arranged when the frame is resized.</source>
          <target state="translated">一个布局管理器,允许多个组件垂直或水平排列。组件不会被包裹,因此,例如,当框架被调整大小时,垂直排列的组件将保持垂直排列。</target>
        </trans-unit>
        <trans-unit id="72907ab61e9adc794018ea3cbf42699ea9fef1c6" translate="yes" xml:space="preserve">
          <source>A layout manager to arrange components over the top of each other.</source>
          <target state="translated">一个布局管理器,用于将组件排列在彼此的顶部。</target>
        </trans-unit>
        <trans-unit id="01ab3fef8b40a4d2b6e84d588ce178f6e7e3ad2d" translate="yes" xml:space="preserve">
          <source>A layout manager to arrange components over the top of each other. The requested size of the container will be the largest requested size of the children, taking alignment needs into consideration. The alignment is based upon what is needed to properly fit the children in the allocation area. The children will be placed such that their alignment points are all on top of each other.</source>
          <target state="translated">一个布局管理器,用于将组件排列在彼此的顶部。容器的请求尺寸将是子代的最大请求尺寸,并考虑到对齐需求。排列是基于在分配区域中正确地容纳子代的需要。孩子们将被放置在这样的位置,即他们的对齐点都在彼此的顶部。</target>
        </trans-unit>
        <trans-unit id="68072440892b4cb0b002870cbe0b646916ecdea7" translate="yes" xml:space="preserve">
          <source>A layout's natural alignment can be overridden if needed (see &lt;a href=&quot;#withBitAlignment(long)&quot;&gt;&lt;code&gt;withBitAlignment(long)&lt;/code&gt;&lt;/a&gt;), which can be useful to describe hyper-aligned layouts.</source>
          <target state="translated">如果需要，可以覆盖布局的自然对齐方式（请参见&lt;a href=&quot;#withBitAlignment(long)&quot;&gt; &lt;code&gt;withBitAlignment(long)&lt;/code&gt; &lt;/a&gt;），这对于描述超对齐的布局很有用。</target>
        </trans-unit>
        <trans-unit id="97d54d21fcf748da2a9bb68d7e686e2f8dfef862" translate="yes" xml:space="preserve">
          <source>A leading component separator (the composite name string begins with a separator) denotes a leading empty component (a component consisting of an empty string). A trailing component separator (the composite name string ends with a separator) denotes a trailing empty component. Adjacent component separators denote an empty component.</source>
          <target state="translated">前面的组件分隔符(复合名称字符串以分隔符开始)表示前面的空组件(由一个空字符串组成的组件)。后面的组件分隔符(复合名称字符串以分隔符结束)表示后面的空组件。相邻的组件分隔符表示一个空组件。</target>
        </trans-unit>
        <trans-unit id="fcad8987095acc8d02184de58b249c169cc6e9af" translate="yes" xml:space="preserve">
          <source>A leading separator (the compound name string begins with a separator) denotes a leading empty atomic component (consisting of an empty string). A trailing separator (the compound name string ends with a separator) denotes a trailing empty atomic component. Adjacent separators denote an empty atomic component.</source>
          <target state="translated">前面的分隔符(复名字符串以分隔符开始)表示一个前面的空原子成分(由一个空字符串组成)。尾部分隔符(复名字符串以分隔符结束)表示尾部的空原子成分,相邻的分隔符表示空原子成分。相邻的分隔符表示一个空原子成分。</target>
        </trans-unit>
        <trans-unit id="e1a750474571c1caa8c781c57987f658741abc84" translate="yes" xml:space="preserve">
          <source>A leap-year is a year of a longer length than normal. The exact meaning is determined by the chronology according to the following constraints.</source>
          <target state="translated">闰年是指比正常年份长的一年。确切的含义是根据以下约束条件,由纪年来确定的。</target>
        </trans-unit>
        <trans-unit id="97d705fdaf553c98ff69239e30eff552390ebd01" translate="yes" xml:space="preserve">
          <source>A leap-year is a year of a longer length than normal. The exact meaning is determined by the chronology with the constraint that a leap-year must imply a year-length longer than a non leap-year.</source>
          <target state="translated">闰年是指比正常年份长的一年。确切的含义是由年表决定的,但有一个限制条件,即闰年必须比非闰年的年限长。</target>
        </trans-unit>
        <trans-unit id="953f8698788a9660e6c0a3bdd71c8c8119fdd91e" translate="yes" xml:space="preserve">
          <source>A lease contains a unique VM identifier and a lease duration.</source>
          <target state="translated">一个租约包含一个唯一的虚拟机标识符和一个租约期限。</target>
        </trans-unit>
        <trans-unit id="c0b22f14dc030e91d35fb03f5b42eff402d43340" translate="yes" xml:space="preserve">
          <source>A lease contains a unique VM identifier and a lease duration. A Lease object is used to request and grant leases to remote object references.</source>
          <target state="translated">租约包含一个唯一的虚拟机标识符和一个租约期限。租约对象用于请求和授予远程对象引用的租约。</target>
        </trans-unit>
        <trans-unit id="6ce6d8413a1eee6af64c042532b1129f5a9ab5b6" translate="yes" xml:space="preserve">
          <source>A legacy programmatic interface for the Java Programming Language compiler, javac.</source>
          <target state="translated">Java编程语言编译器的传统程序接口,javac。</target>
        </trans-unit>
        <trans-unit id="22bb118a5d892bc95459f914b2d52ee1a13ebd1d" translate="yes" xml:space="preserve">
          <source>A legacy programmatic interface for the Java Programming Language compiler, javac. See the &lt;a href=&quot;../../../../module-summary&quot;&gt;&lt;code&gt;jdk.compiler&lt;/code&gt;&lt;/a&gt; module for details on replacement APIs.</source>
          <target state="translated">Java编程语言编译器javac的旧式编程接口。有关替换API的详细信息，请参见&lt;a href=&quot;../../../../module-summary&quot;&gt; &lt;code&gt;jdk.compiler&lt;/code&gt; &lt;/a&gt;模块。</target>
        </trans-unit>
        <trans-unit id="53a2599abeb7238ac2f98a3b5600a3def82bd862" translate="yes" xml:space="preserve">
          <source>A lenient query for the &lt;code&gt;ZoneId&lt;/code&gt;, falling back to the &lt;code&gt;ZoneOffset&lt;/code&gt;.</source>
          <target state="translated">对 &lt;code&gt;ZoneId&lt;/code&gt; 的宽大查询，回溯到 &lt;code&gt;ZoneOffset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc4c49462e7a1fe884a4de6151aa15633318f510" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite context lifetime.</source>
          <target state="translated">表示无限期上下文寿命的寿命常数。</target>
        </trans-unit>
        <trans-unit id="4aeacf66c5c9e40fd212093fc0fabc89fc4ede13" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite context lifetime. This value must is set to the maximum integer value in Java - &lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个生命周期常数，表示不确定的上下文生命周期。此值必须设置为Java- &lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 中&lt;/a&gt;的最大整数值。</target>
        </trans-unit>
        <trans-unit id="d29bd4bbbab78549a664342c4352facb19ca9be4" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite credential lifetime.</source>
          <target state="translated">代表无限期凭证寿命的寿命常数。</target>
        </trans-unit>
        <trans-unit id="c20a7615c31d04d0931569589e5ae9e53ecddea1" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing indefinite credential lifetime. This value must is set to the maximum integer value in Java - &lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">生命周期常数，表示不确定的证书生命周期。此值必须设置为Java- &lt;a href=&quot;../../../../java.base/java/lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; 中&lt;/a&gt;的最大整数值。</target>
        </trans-unit>
        <trans-unit id="8234ce96d3a2d8f155f84e80a615b00a6a0f1d4f" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default context lifetime.</source>
          <target state="translated">一个代表默认上下文寿命的寿命常数。</target>
        </trans-unit>
        <trans-unit id="6f986dfd8833a6e2fcc19621aff2df7651bf272e" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default context lifetime. This value is set to 0.</source>
          <target state="translated">代表默认上下文寿命的寿命常数。该值设置为0。</target>
        </trans-unit>
        <trans-unit id="d47581dc6d095f98d74975a81b4fc941aca6e752" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default credential lifetime.</source>
          <target state="translated">代表默认凭证寿命的寿命常数。</target>
        </trans-unit>
        <trans-unit id="b6062c1fe03b24d5e70f80869eabacd1c8e15a8b" translate="yes" xml:space="preserve">
          <source>A lifetime constant representing the default credential lifetime. This value it set to 0.</source>
          <target state="translated">代表默认凭证寿命的寿命常数。该值设置为0。</target>
        </trans-unit>
        <trans-unit id="056dc7e5f5acdbe9072497479b984fdf625f1673" translate="yes" xml:space="preserve">
          <source>A lightweight component doesn't have a native toolkit peer.</source>
          <target state="translated">一个轻量级组件没有原生的工具包对等。</target>
        </trans-unit>
        <trans-unit id="961da4c1767206da49835874c56a453eb333103a" translate="yes" xml:space="preserve">
          <source>A lightweight component doesn't have a native toolkit peer. Subclasses of &lt;code&gt;Component&lt;/code&gt; and &lt;code&gt;Container&lt;/code&gt;, other than the ones defined in this package like &lt;code&gt;Button&lt;/code&gt; or &lt;code&gt;Scrollbar&lt;/code&gt;, are lightweight. All of the Swing components are lightweights.</source>
          <target state="translated">轻量级组件没有本地工具包对等体。 &lt;code&gt;Component&lt;/code&gt; 和 &lt;code&gt;Container&lt;/code&gt; 的子类（在此包中定义的子类（如 &lt;code&gt;Button&lt;/code&gt; 或 &lt;code&gt;Scrollbar&lt;/code&gt; )除外）是轻量级的。所有的Swing组件都是轻量级的。</target>
        </trans-unit>
        <trans-unit id="185a81fc9a29fad538cdc2a966ca75ad3243ce0a" translate="yes" xml:space="preserve">
          <source>A lightweight container that uses a BoxLayout object as its layout manager.</source>
          <target state="translated">一个轻量级的容器,使用BoxLayout对象作为它的布局管理器。</target>
        </trans-unit>
        <trans-unit id="979d25672adedcde0b0dd84c461e1543b2458bcc" translate="yes" xml:space="preserve">
          <source>A lightweight container that uses a BoxLayout object as its layout manager. Box provides several class methods that are useful for containers using BoxLayout -- even non-Box containers.</source>
          <target state="translated">一个轻量级的容器,使用BoxLayout对象作为其布局管理器。Box提供了几个对使用BoxLayout的容器有用的类方法--甚至是非Box容器。</target>
        </trans-unit>
        <trans-unit id="aa12d0cac093b12b3e599eb656d726a52b98e4e3" translate="yes" xml:space="preserve">
          <source>A lightweight container used behind the scenes by &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;JApplet&lt;/code&gt;, and &lt;code&gt;JInternalFrame&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JFrame&lt;/code&gt; ， &lt;code&gt;JDialog&lt;/code&gt; ， &lt;code&gt;JWindow&lt;/code&gt; ， &lt;code&gt;JApplet&lt;/code&gt; 和 &lt;code&gt;JInternalFrame&lt;/code&gt; 在后台使用的轻量级容器。</target>
        </trans-unit>
        <trans-unit id="5205f5e675c9dc2be1e53cb3d5c4f7df5153a51c" translate="yes" xml:space="preserve">
          <source>A lightweight container used behind the scenes by &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;JApplet&lt;/code&gt;, and &lt;code&gt;JInternalFrame&lt;/code&gt;. For task-oriented information on functionality provided by root panes see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html&quot;&gt;How to Use Root Panes&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JFrame&lt;/code&gt; ， &lt;code&gt;JDialog&lt;/code&gt; ， &lt;code&gt;JWindow&lt;/code&gt; ， &lt;code&gt;JApplet&lt;/code&gt; 和 &lt;code&gt;JInternalFrame&lt;/code&gt; 在后台使用的轻量级容器。有关根窗格提供的功能的面向任务的信息，请参阅&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html&quot;&gt;如何使用根窗格&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dda45079996094e0a48e475b024010a2be2b0aa0" translate="yes" xml:space="preserve">
          <source>A lightweight container used behind the scenes by &lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, &lt;code&gt;JApplet&lt;/code&gt;, and &lt;code&gt;JInternalFrame&lt;/code&gt;. For task-oriented information on functionality provided by root panes see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html&quot;&gt;How to Use Root Panes&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;JFrame&lt;/code&gt; ， &lt;code&gt;JDialog&lt;/code&gt; ， &lt;code&gt;JWindow&lt;/code&gt; ， &lt;code&gt;JApplet&lt;/code&gt; 和 &lt;code&gt;JInternalFrame&lt;/code&gt; 在后台使用的轻量级容器。有关根窗格提供的功能的面向任务的信息，请参阅&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/rootpane.html&quot;&gt;如何使用根窗格&lt;/a&gt;&lt;em&gt;&amp;rdquo;&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="d7dee2457c08564bdda284896607baec0996631f" translate="yes" xml:space="preserve">
          <source>A lightweight object that provides many of the features of a native frame, including dragging, closing, becoming an icon, resizing, title display, and support for a menu bar.</source>
          <target state="translated">一个轻量级的对象,它提供了许多本地框架的功能,包括拖动、关闭、成为一个图标、调整大小、标题显示以及对菜单栏的支持。</target>
        </trans-unit>
        <trans-unit id="f6fd25a0119a6fc946ca5ed9b5dec6debec44e37" translate="yes" xml:space="preserve">
          <source>A lightweight object that provides many of the features of a native frame, including dragging, closing, becoming an icon, resizing, title display, and support for a menu bar. For task-oriented documentation and examples of using internal frames, see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">一个轻量级的对象，提供了本机框架的许多功能，包括拖动，关闭，变为图标，调整大小，标题显示以及对菜单栏的支持。有关面向任务的文档和使用内部框架的示例，请参阅&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;如何使用内部框架&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d555bfb1698e7bad5e9afb69368480e86ab9ca70" translate="yes" xml:space="preserve">
          <source>A lightweight object that provides many of the features of a native frame, including dragging, closing, becoming an icon, resizing, title display, and support for a menu bar. For task-oriented documentation and examples of using internal frames, see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;How to Use Internal Frames&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">一个轻量级的对象，提供了本机框架的许多功能，包括拖动，关闭，变为图标，调整大小，标题显示以及对菜单栏的支持。有关面向任务的文档和使用内部框架的示例，请参阅&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/internalframe.html&quot;&gt;如何使用内部框架&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e7e4ac118d01d0cc449198a99d54ff399706233a" translate="yes" xml:space="preserve">
          <source>A line border UI resource.</source>
          <target state="translated">一个线型边框的UI资源。</target>
        </trans-unit>
        <trans-unit id="acc386c289b45c240b5420ea9f37eef84f9e9787" translate="yes" xml:space="preserve">
          <source>A line can have controls, such as gain, pan, and reverb. The controls themselves are instances of classes that extend the base &lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt; class. The &lt;code&gt;Line&lt;/code&gt; interface provides two accessor methods for obtaining the line's controls: &lt;a href=&quot;#getControls()&quot;&gt;&lt;code&gt;getControls&lt;/code&gt;&lt;/a&gt; returns the entire set, and &lt;a href=&quot;#getControl(javax.sound.sampled.Control.Type)&quot;&gt;&lt;code&gt;getControl&lt;/code&gt;&lt;/a&gt; returns a single control of specified type.</source>
          <target state="translated">一行可以具有诸如增益，声相和混响之类的控件。控件本身是扩展基础&lt;a href=&quot;control&quot;&gt; &lt;code&gt;Control&lt;/code&gt; &lt;/a&gt;类的类的实例。所述 &lt;code&gt;Line&lt;/code&gt; 接口提供了用于获得该线的控制2的存取方法：&lt;a href=&quot;#getControls()&quot;&gt; &lt;code&gt;getControls&lt;/code&gt; &lt;/a&gt;返回整个集合，并&lt;a href=&quot;#getControl(javax.sound.sampled.Control.Type)&quot;&gt; &lt;code&gt;getControl&lt;/code&gt; &lt;/a&gt;返回指定类型的单个控制。</target>
        </trans-unit>
        <trans-unit id="b56c5699f1874ffdd2862ebff22710a3d81daec8" translate="yes" xml:space="preserve">
          <source>A line can have controls, such as gain, pan, and reverb. The controls themselves are instances of classes that extend the base &lt;code&gt;&lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. The &lt;code&gt;Line&lt;/code&gt; interface provides two accessor methods for obtaining the line's controls: &lt;code&gt;&lt;a href=&quot;line#getControls--&quot;&gt;&lt;code&gt;getControls&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; returns the entire set, and &lt;code&gt;&lt;a href=&quot;line#getControl-javax.sound.sampled.Control.Type-&quot;&gt;&lt;code&gt;getControl&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; returns a single control of specified type.</source>
          <target state="translated">一行可以具有诸如增益，声相和混响之类的控件。控件本身是扩展基础 &lt;code&gt;&lt;a href=&quot;control&quot;&gt;&lt;code&gt;Control&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 类的类的实例。所述 &lt;code&gt;Line&lt;/code&gt; 接口提供了用于获得该线的控制2的存取方法： &lt;code&gt;&lt;a href=&quot;line#getControls--&quot;&gt;&lt;code&gt;getControls&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 返回整个集合，并 &lt;code&gt;&lt;a href=&quot;line#getControl-javax.sound.sampled.Control.Type-&quot;&gt;&lt;code&gt;getControl&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 返回指定类型的单个控制。</target>
        </trans-unit>
        <trans-unit id="8786a5fe383b5efbdf5037cc5b63611602b61532" translate="yes" xml:space="preserve">
          <source>A line feed (LF) character standing by itself means &quot;go to column 1 of the next line.&quot;</source>
          <target state="translated">换行(LF)字符单独存在的意思是 &quot;转到下一行的第1列&quot;。</target>
        </trans-unit>
        <trans-unit id="8b693dcbd13d371398add1d691705128da936559" translate="yes" xml:space="preserve">
          <source>A line is a sequence of bytes ending with a carriage return character (&lt;code&gt;'\r'&lt;/code&gt;), a newline character (&lt;code&gt;'\n'&lt;/code&gt;), or a carriage return character followed immediately by a linefeed character. In all three cases, the line terminating character(s) are returned as a single newline character.</source>
          <target state="translated">行是一个字节序列，以回车符（ &lt;code&gt;'\r'&lt;/code&gt; ），换行符（ &lt;code&gt;'\n'&lt;/code&gt; ）或回车符后紧跟换行符结尾。在所有三种情况下，行终止字符都作为单个换行符返回。</target>
        </trans-unit>
        <trans-unit id="cd89c4e3b2be50c382c2539dcc24464fdbb0045e" translate="yes" xml:space="preserve">
          <source>A line is a sequence of characters ending with either a carriage-return character (&lt;code&gt;'\r'&lt;/code&gt;) or a newline character (&lt;code&gt;'\n'&lt;/code&gt;). In addition, a carriage-return character followed immediately by a newline character is treated as a single end-of-line token.</source>
          <target state="translated">行是由回车符（ &lt;code&gt;'\r'&lt;/code&gt; ）或换行符（ &lt;code&gt;'\n'&lt;/code&gt; ）结尾的一系列字符。另外，回车字符后紧跟换行符被视为单个行尾标记。</target>
        </trans-unit>
        <trans-unit id="1ba222b541f295d3bf4f50e5a5f62ba700c4b970" translate="yes" xml:space="preserve">
          <source>A line is considered to be &lt;a id=&quot;lt&quot;&gt;terminated&lt;/a&gt; by any one of a line feed ('\n'), a carriage return ('\r'), or a carriage return followed immediately by a linefeed.</source>
          <target state="translated">一行被认为由换行符（'\ n'），回车符（'\ r'）或回车符后立即换行符中的任何一个&lt;a id=&quot;lt&quot;&gt;终止&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3247ed16456853302a1cf889fa07ec387d051119" translate="yes" xml:space="preserve">
          <source>A line is considered to be &lt;a name=&quot;lt&quot;&gt;terminated&lt;/a&gt; by any one of a line feed ('\n'), a carriage return ('\r'), or a carriage return followed immediately by a linefeed.</source>
          <target state="translated">一行被认为由换行符（'\ n'），回车符（'\ r'）或回车符后立即换行符中的任何一个&lt;a name=&quot;lt&quot;&gt;终止&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c4fde9f82d44868764c4b891f64e208e4c533ea9" translate="yes" xml:space="preserve">
          <source>A line is drawn connecting the child to the parent. For handling of the root node refer to &lt;a href=&quot;../../jtree#setRootVisible(boolean)&quot;&gt;&lt;code&gt;JTree.setRootVisible(boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../jtree#setShowsRootHandles(boolean)&quot;&gt;&lt;code&gt;JTree.setShowsRootHandles(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">画一条线将孩子和父母联系起来。有关处理根节点的信息，请参考&lt;a href=&quot;../../jtree#setRootVisible(boolean)&quot;&gt; &lt;code&gt;JTree.setRootVisible(boolean)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../jtree#setShowsRootHandles(boolean)&quot;&gt; &lt;code&gt;JTree.setShowsRootHandles(boolean)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0b7ca0c2af9f1edee874d303ecbb4bfe840e2ae1" translate="yes" xml:space="preserve">
          <source>A line of text is terminated by a carriage-return character (&lt;code&gt;'\r'&lt;/code&gt;), a newline character (&lt;code&gt;'\n'&lt;/code&gt;), a carriage-return character immediately followed by a newline character, or the end of the file. Line-terminating characters are discarded and are not included as part of the string returned.</source>
          <target state="translated">文本行以回车符（ &lt;code&gt;'\r'&lt;/code&gt; ），换行符（ &lt;code&gt;'\n'&lt;/code&gt; ），紧跟换行符的回车符或文件结尾结束。行终止字符将被丢弃，并且不包含在返回的字符串中。</target>
        </trans-unit>
        <trans-unit id="1dea08ed54499fe496d9233626bb8c4a7cd9288e" translate="yes" xml:space="preserve">
          <source>A line segment specified with double coordinates.</source>
          <target state="translated">用双坐标指定的线段。</target>
        </trans-unit>
        <trans-unit id="a8ddba63111ee463487f4ecaeb6ac0f5f0c77a0e" translate="yes" xml:space="preserve">
          <source>A line segment specified with float coordinates.</source>
          <target state="translated">用浮点坐标指定的线段。</target>
        </trans-unit>
        <trans-unit id="d1d421a3c437913459686e8e2c616f56c058bc0b" translate="yes" xml:space="preserve">
          <source>A line-separator character (&lt;code&gt;'\u2028'&lt;/code&gt;), or</source>
          <target state="translated">行分隔符（ &lt;code&gt;'\u2028'&lt;/code&gt; ），或</target>
        </trans-unit>
        <trans-unit id="6a06843d99cb5f85c0cf509d37a1efecb9a3799a" translate="yes" xml:space="preserve">
          <source>A linear collection that supports element insertion and removal at both ends.</source>
          <target state="translated">一个线性集合,支持两端的元素插入和移除。</target>
        </trans-unit>
        <trans-unit id="b40d08cf909bccb933847ab2cbb7c69d15600fc8" translate="yes" xml:space="preserve">
          <source>A linear collection that supports element insertion and removal at both ends. The name</source>
          <target state="translated">一个线性集合,支持元素两端的插入和删除。名称为</target>
        </trans-unit>
        <trans-unit id="97306c8d3ba98c3b4909e917962a43aca00f125b" translate="yes" xml:space="preserve">
          <source>A linked hash map has two parameters that affect its performance:</source>
          <target state="translated">链接哈希图有两个参数会影响其性能。</target>
        </trans-unit>
        <trans-unit id="a5d0567d95ba1f476603a27df139f097cc946400" translate="yes" xml:space="preserve">
          <source>A linked hash set has two parameters that affect its performance:</source>
          <target state="translated">链接哈希集有两个参数会影响其性能。</target>
        </trans-unit>
        <trans-unit id="9c9e0867175b986e4f2b87796f88caedeb1e9946" translate="yes" xml:space="preserve">
          <source>A linker for ordinary Java objects.</source>
          <target state="translated">一个普通Java对象的链接器。</target>
        </trans-unit>
        <trans-unit id="affa66eb9e4a4f8a6ac9d48864528117f0ba660c" translate="yes" xml:space="preserve">
          <source>A linker for ordinary Java objects. Normally used as the ultimate fallback linker by the &lt;a href=&quot;../dynamiclinkerfactory&quot;&gt;&lt;code&gt;DynamicLinkerFactory&lt;/code&gt;&lt;/a&gt; so it is given the chance to link calls to all objects that no other linker recognized. Specifically, this linker will:</source>
          <target state="translated">普通Java对象的链接器。通常由&lt;a href=&quot;../dynamiclinkerfactory&quot;&gt; &lt;code&gt;DynamicLinkerFactory&lt;/code&gt; &lt;/a&gt;用作最终的回退链接器，因此可以将调用链接到其他链接器无法识别的所有对象。具体来说，此链接器将：</target>
        </trans-unit>
        <trans-unit id="af4a484b57104a2c2324c4ecf87d1974394a01ac" translate="yes" xml:space="preserve">
          <source>A list containing all the style sheets explicitly linked into or embedded in a document.</source>
          <target state="translated">一个包含所有明确链接到或嵌入文档的样式表的列表。</target>
        </trans-unit>
        <trans-unit id="68d8b70ebc94fcdaac2fe77686b7d1b9b8250f84" translate="yes" xml:space="preserve">
          <source>A list containing all the style sheets explicitly linked into or embedded in a document. For HTML documents, this includes external style sheets, included via the HTML LINK element, and inline STYLE elements. In XML, this includes external style sheets, included via style sheet processing instructions (see [XML StyleSheet]).</source>
          <target state="translated">一个包含所有明确链接到或嵌入文档中的样式表的列表。对于HTML文档,这包括通过HTML LINK元素包含的外部样式表,以及内联STYLE元素。在XML中,这包括外部样式表,通过样式表处理指令包含在内(参见[XML样式表])。</target>
        </trans-unit>
        <trans-unit id="4a34d022e2b151d44379f6754c3e516c74e49078" translate="yes" xml:space="preserve">
          <source>A list of &lt;code&gt;String&lt;/code&gt; each of which is a currently registered &lt;code&gt;Logger&lt;/code&gt; name.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 列表，每个字符串都是当前注册的 &lt;code&gt;Logger&lt;/code&gt; 名称。</target>
        </trans-unit>
        <trans-unit id="65e892dc9473951e991ccf155b1ca1274401dc1f" translate="yes" xml:space="preserve">
          <source>A list of DOM implementations that support the desired features.</source>
          <target state="translated">支持所需功能的DOM实现列表。</target>
        </trans-unit>
        <trans-unit id="b08264eb34333533bdb8e9acfb6937f62fd4417e" translate="yes" xml:space="preserve">
          <source>A list of DOMImplementations that support the desired features.</source>
          <target state="translated">支持所需功能的DOMImplementations列表。</target>
        </trans-unit>
        <trans-unit id="15cf90d8d2220c9cd8197762d2212a7447bdf437" translate="yes" xml:space="preserve">
          <source>A list of MBeanServer objects.</source>
          <target state="translated">MBeanServer对象的列表。</target>
        </trans-unit>
        <trans-unit id="5f8ac20f98db2102405d283706e710c0a6f21fe3" translate="yes" xml:space="preserve">
          <source>A list of all CSS rules contained within the media block.</source>
          <target state="translated">包含在媒体块中的所有CSS规则的列表。</target>
        </trans-unit>
        <trans-unit id="fffc7b0cba51983d91340505c95ccc243c63c6fd" translate="yes" xml:space="preserve">
          <source>A list of available event names is retrieved by invoking &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/flightrecorder#getEventTypes()&quot;&gt;&lt;code&gt;FlightRecorder.getEventTypes()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getName()&quot;&gt;&lt;code&gt;EventType.getName()&lt;/code&gt;&lt;/a&gt;. A list of available settings for an event type is obtained by invoking &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getSettingDescriptors()&quot;&gt;&lt;code&gt;EventType.getSettingDescriptors()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/valuedescriptor#getName()&quot;&gt;&lt;code&gt;ValueDescriptor.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过调用&lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/flightrecorder#getEventTypes()&quot;&gt; &lt;code&gt;FlightRecorder.getEventTypes()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getName()&quot;&gt; &lt;code&gt;EventType.getName()&lt;/code&gt; &lt;/a&gt;检索可用事件名称的列表。通过调用&lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/eventtype#getSettingDescriptors()&quot;&gt; &lt;code&gt;EventType.getSettingDescriptors()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../../../jdk.jfr/jdk/jfr/valuedescriptor#getName()&quot;&gt; &lt;code&gt;ValueDescriptor.getName()&lt;/code&gt; &lt;/a&gt;获得事件类型的可用设置的列表。</target>
        </trans-unit>
        <trans-unit id="6f020188a50eb819f75561d6bd73f8e2e2329a3d" translate="yes" xml:space="preserve">
          <source>A list of available event names is retrieved by invoking &lt;a href=&quot;flightrecorder#getEventTypes()&quot;&gt;&lt;code&gt;FlightRecorder.getEventTypes()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;eventtype#getName()&quot;&gt;&lt;code&gt;EventType.getName()&lt;/code&gt;&lt;/a&gt;. A list of available settings for an event type is obtained by invoking &lt;a href=&quot;eventtype#getSettingDescriptors()&quot;&gt;&lt;code&gt;EventType.getSettingDescriptors()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;valuedescriptor#getName()&quot;&gt;&lt;code&gt;ValueDescriptor.getName()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过调用&lt;a href=&quot;flightrecorder#getEventTypes()&quot;&gt; &lt;code&gt;FlightRecorder.getEventTypes()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;eventtype#getName()&quot;&gt; &lt;code&gt;EventType.getName()&lt;/code&gt; &lt;/a&gt;检索可用事件名称的列表。通过调用&lt;a href=&quot;eventtype#getSettingDescriptors()&quot;&gt; &lt;code&gt;EventType.getSettingDescriptors()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;valuedescriptor#getName()&quot;&gt; &lt;code&gt;ValueDescriptor.getName()&lt;/code&gt; &lt;/a&gt;获得事件类型的可用设置的列表。</target>
        </trans-unit>
        <trans-unit id="de48ea7e17b256037e5c901cc789fac23bfb5898" translate="yes" xml:space="preserve">
          <source>A list of choices the user can select from.</source>
          <target state="translated">用户可以选择的列表。</target>
        </trans-unit>
        <trans-unit id="31e54663fdecd8b34639cd2595d3190ba6f979d8" translate="yes" xml:space="preserve">
          <source>A list of choices the user can select from. Also optionally allows the user to enter a choice of their own.</source>
          <target state="translated">用户可以选择的选择列表。也可选择允许用户输入自己的选择。</target>
        </trans-unit>
        <trans-unit id="bf7009e57a42ab2b8198d59d5043bf01d53a555f" translate="yes" xml:space="preserve">
          <source>A list of event listeners for this component.</source>
          <target state="translated">该组件的事件监听器列表。</target>
        </trans-unit>
        <trans-unit id="be31e28e9acde1db832856f21a141e6f8fd1a8c8" translate="yes" xml:space="preserve">
          <source>A list of listeners that will receive events from this object.</source>
          <target state="translated">将从该对象接收事件的监听器列表。</target>
        </trans-unit>
        <trans-unit id="e2cdf1db9dc024dd948eaa61978df4a6a1912d0e" translate="yes" xml:space="preserve">
          <source>A list of matching &lt;code&gt;Element&lt;/code&gt; nodes.</source>
          <target state="translated">匹配的 &lt;code&gt;Element&lt;/code&gt; 节点的列表。</target>
        </trans-unit>
        <trans-unit id="327dc1311c6db843812e310f9ea93f54d5a3b51b" translate="yes" xml:space="preserve">
          <source>A list of media types for this rule.</source>
          <target state="translated">本规则的媒体类型列表。</target>
        </trans-unit>
        <trans-unit id="c6b7af05baec8c3125a586ea93677557bde075be" translate="yes" xml:space="preserve">
          <source>A list of media types for which this style sheet may be used.</source>
          <target state="translated">可使用该样式表的媒体类型列表。</target>
        </trans-unit>
        <trans-unit id="ce084408655d8ff5f3ed083f8ea3a1698adb007b" translate="yes" xml:space="preserve">
          <source>A list of paths to be searched by the bootstrap class loader. Paths represent directories or libraries (commonly referred to as JAR or zip libraries on many platforms). These paths are searched by the bootstrap class loader after the platform specific mechanisms of locating a class have failed. Paths are searched in the order listed. Paths in the list are separated by one or more spaces. A path takes the syntax of the path component of a hierarchical URI. The path is absolute if it begins with a slash character ('/'), otherwise it is relative. A relative path is resolved against the absolute path of the agent JAR file. Malformed and non-existent paths are ignored. When an agent is started sometime after the VM has started then paths that do not represent a JAR file are ignored. This attribute is optional.</source>
          <target state="translated">Bootstrap类加载器要搜索的路径列表。路径代表目录或库(在许多平台上通常被称为JAR或zip库)。这些路径会在特定平台的类定位机制失败后被bootstrap类加载器搜索。路径会按照列表中的顺序进行搜索。列表中的路径用一个或多个空格隔开。路径采用分层URI的路径组件的语法。如果路径以斜线字符('/')开头,那么它就是绝对路径,否则就是相对路径。相对路径会根据代理JAR文件的绝对路径进行解析。错误的和不存在的路径将被忽略。如果在虚拟机启动后的某个时间启动代理,那么不代表 JAR 文件的路径将被忽略。此属性是可选的。</target>
        </trans-unit>
        <trans-unit id="38f944f4b6529c85fda2d2d3a3815e42316e4685" translate="yes" xml:space="preserve">
          <source>A list of the installed attach providers.</source>
          <target state="translated">已安装的附件提供者的列表。</target>
        </trans-unit>
        <trans-unit id="cd71c25d8fb4c7cd0da03ca7d9bfab807b3ef157" translate="yes" xml:space="preserve">
          <source>A listener class that watches for a popup window closing.</source>
          <target state="translated">一个监视弹出窗口关闭的监听器类。</target>
        </trans-unit>
        <trans-unit id="e598c4bf95d7225b30a8913153841fb80fa29899" translate="yes" xml:space="preserve">
          <source>A listener class that watches for a popup window closing. When the popup is closing, the listener deselects the menu.</source>
          <target state="translated">一个监视弹出窗口关闭的监听器类。当弹出窗口关闭时,监听器会取消选择菜单。</target>
        </trans-unit>
        <trans-unit id="71e55bf263a6776b16cc5006150fea3427b4ac17" translate="yes" xml:space="preserve">
          <source>A listener for a Timer MBean can itself be an MBean, using the method &lt;a href=&quot;../mbeanserver#addNotificationListener(javax.management.ObjectName,javax.management.ObjectName,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;MBeanServer.addNotificationListener(ObjectName,
      ObjectName, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;. In this way, a management application can create an MBean representing a task, then schedule that task using a Timer MBean.</source>
          <target state="translated">使用方法&lt;a href=&quot;../mbeanserver#addNotificationListener(javax.management.ObjectName,javax.management.ObjectName,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;MBeanServer.addNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt; Timer MBean的侦听器本身可以是MBean 。这样，管理应用程序可以创建代表任务的MBean，然后使用Timer MBean调度该任务。</target>
        </trans-unit>
        <trans-unit id="0a94d2ecd063ae6a1df5852d1841f65f60bd65cf" translate="yes" xml:space="preserve">
          <source>A listener for a Timer MBean can itself be an MBean, using the method &lt;a href=&quot;../mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.ObjectName-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;MBeanServer.addNotificationListener(ObjectName,
      ObjectName, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;. In this way, a management application can create an MBean representing a task, then schedule that task using a Timer MBean.</source>
          <target state="translated">使用方法&lt;a href=&quot;../mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.ObjectName-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;MBeanServer.addNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt; Timer MBean的侦听器本身可以是MBean 。这样，管理应用程序可以创建代表任务的MBean，然后使用Timer MBean调度该任务。</target>
        </trans-unit>
        <trans-unit id="698554ac6345725e38dfb1615e0a194ec85c4ba6" translate="yes" xml:space="preserve">
          <source>A listener for receiving preference change events.</source>
          <target state="translated">用于接收偏好变更事件的监听器。</target>
        </trans-unit>
        <trans-unit id="1aabbb23a368618bba8cf844d1f5d4f8bd473acc" translate="yes" xml:space="preserve">
          <source>A listener for receiving preference node change events.</source>
          <target state="translated">用于接收偏好节点变化事件的监听器。</target>
        </trans-unit>
        <trans-unit id="bfc69827b09f6e59d534209ca3a289bb0277d279" translate="yes" xml:space="preserve">
          <source>A listener for the view.</source>
          <target state="translated">一个听众的看法。</target>
        </trans-unit>
        <trans-unit id="8500799ac60ccf3012e5129a0790c8e444a71044" translate="yes" xml:space="preserve">
          <source>A listener implementing all the methods in both the &lt;code&gt;MouseListener&lt;/code&gt; and &lt;code&gt;MouseMotionListener&lt;/code&gt; interfaces.</source>
          <target state="translated">在 &lt;code&gt;MouseListener&lt;/code&gt; 和 &lt;code&gt;MouseMotionListener&lt;/code&gt; 接口中实现所有方法的侦听器。</target>
        </trans-unit>
        <trans-unit id="b4e8c843b8da1377b4a4fe35087522a11a1f018f" translate="yes" xml:space="preserve">
          <source>A listener interested in &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; event types must:</source>
          <target state="translated">对 &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; 事件类型感兴趣的侦听器必须：</target>
        </trans-unit>
        <trans-unit id="dabaed40746a3ea76dd8eee23e9763e3e5474eb6" translate="yes" xml:space="preserve">
          <source>A listener interface for receiving mouse motion events during a drag operation.</source>
          <target state="translated">一种用于在拖动操作期间接收鼠标运动事件的监听器接口。</target>
        </trans-unit>
        <trans-unit id="85207bf3ee7b5f4fb2ce7243c28aed16dadb21b3" translate="yes" xml:space="preserve">
          <source>A listener is an object that has implemented the &lt;code&gt;RowSetListener&lt;/code&gt; interface. If it has been added to a &lt;code&gt;RowSet&lt;/code&gt; object's list of listeners, it will be notified when an event occurs on that &lt;code&gt;RowSet&lt;/code&gt; object. Each listener's implementation of the &lt;code&gt;RowSetListener&lt;/code&gt; methods defines what that object will do when it is notified that an event has occurred.</source>
          <target state="translated">侦听器是已实现 &lt;code&gt;RowSetListener&lt;/code&gt; 接口的对象。如果已将其添加到 &lt;code&gt;RowSet&lt;/code&gt; 对象的侦听器列表中，则在该 &lt;code&gt;RowSet&lt;/code&gt; 对象上发生事件时将通知该对象。每个侦听器对 &lt;code&gt;RowSetListener&lt;/code&gt; 方法的实现都定义了在通知对象已发生事件时该对象将执行的操作。</target>
        </trans-unit>
        <trans-unit id="8797401d0ffe322f1602faefe424a1878b3214bf" translate="yes" xml:space="preserve">
          <source>A listener might, for example, be a table or graph that needs to be updated in order to accurately reflect the current state of the &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">侦听器可能是例如表或图形，需要对其进行更新才能准确反映 &lt;code&gt;RowSet&lt;/code&gt; 对象的当前状态。</target>
        </trans-unit>
        <trans-unit id="c1eb406af2e34f83c1ff0326d1a53689b2620751" translate="yes" xml:space="preserve">
          <source>A listener that wants to be notified of &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; event types should also implement the &lt;code&gt;ObjectChangeListener&lt;/code&gt; interface.</source>
          <target state="translated">想要被通知 &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; 事件类型的 &lt;code&gt;ObjectChangeListener&lt;/code&gt; 器也应该实现ObjectChangeListener接口。</target>
        </trans-unit>
        <trans-unit id="de4c0125a157adee093814e09b281eaa9497021d" translate="yes" xml:space="preserve">
          <source>A listener that wants to be notified of namespace change events should also implement the &lt;code&gt;NamespaceChangeListener&lt;/code&gt; interface.</source>
          <target state="translated">希望收到名称空间更改事件通知的侦听器也应实现 &lt;code&gt;NamespaceChangeListener&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="4aa182dd1164d6f87d4e4f06c54fef56a59a0650" translate="yes" xml:space="preserve">
          <source>A listener to be registered upon the combo box (&lt;em&gt;not&lt;/em&gt; its popup menu) to handle mouse events that affect the state of the popup menu.</source>
          <target state="translated">要在组合框（&lt;em&gt;而不是&lt;/em&gt;其弹出菜单）上注册一个侦听器，以处理影响弹出菜单状态的鼠标事件。</target>
        </trans-unit>
        <trans-unit id="987732cee4fab52c38c198447827dec323b254e2" translate="yes" xml:space="preserve">
          <source>A listener to be registered upon the combo box (&lt;em&gt;not&lt;/em&gt; its popup menu) to handle mouse events that affect the state of the popup menu. The main purpose of this listener is to make the popup menu appear and disappear. This listener also helps with click-and-drag scenarios by setting the selection if the mouse was released over the list during a drag.</source>
          <target state="translated">要在组合框（&lt;em&gt;而不是&lt;/em&gt;其弹出菜单）上注册一个侦听器，以处理影响弹出菜单状态的鼠标事件。该侦听器的主要目的是使弹出菜单出现和消失。该侦听器还可以通过设置鼠标拖动在列表上方释放时的选择来帮助您进行单击和拖动。</target>
        </trans-unit>
        <trans-unit id="670f046d6bc2c8904ae2cf8a3aae8a6dbbb7456d" translate="yes" xml:space="preserve">
          <source>A listener to listen for model changes.</source>
          <target state="translated">一个监听器来监听模型的变化。</target>
        </trans-unit>
        <trans-unit id="3d0fdc05796202e16b01613faa5d4476667a38cc" translate="yes" xml:space="preserve">
          <source>A listener to track focus events and convert them to PropertyChange events.</source>
          <target state="translated">一个监听器来跟踪焦点事件,并将其转换为PropertyChange事件。</target>
        </trans-unit>
        <trans-unit id="9e24f20d2177ce0b96413ecb356cb7008b6d89e3" translate="yes" xml:space="preserve">
          <source>A literal string replacement</source>
          <target state="translated">字符串替换</target>
        </trans-unit>
        <trans-unit id="1971fb641c3e63b72bc3a32c19b53e864bfaab20" translate="yes" xml:space="preserve">
          <source>A local cache of the combined width of all columns</source>
          <target state="translated">所有列的合并宽度的本地缓存。</target>
        </trans-unit>
        <trans-unit id="592b027e5e9d567689958753a9389037cb88b1a2" translate="yes" xml:space="preserve">
          <source>A local color table is written to the output stream only if image metadata containing a LocalColorTable element is supplied to the writer, or no image metadata is supplied to the writer and the local color table which would be generated from the image itself is not equal to the global color table.</source>
          <target state="translated">只有当包含LocalColorTable元素的图像元数据被提供给写入器,或者没有图像元数据被提供给写入器,并且从图像本身生成的本地颜色表不等于全局颜色表时,本地颜色表才会被写入输出流。</target>
        </trans-unit>
        <trans-unit id="5e67dc7d76e5d6260aa02465cd132b1be622d15e" translate="yes" xml:space="preserve">
          <source>A local port number of &lt;code&gt;zero&lt;/code&gt; will let the system pick up a free port in the &lt;code&gt;bind&lt;/code&gt; operation.</source>
          <target state="translated">本地端口号 &lt;code&gt;zero&lt;/code&gt; 将使系统在 &lt;code&gt;bind&lt;/code&gt; 操作中选择一个空闲端口。</target>
        </trans-unit>
        <trans-unit id="a1c00ebf38471123cfabe9168122b6244c8c6a6f" translate="yes" xml:space="preserve">
          <source>A local variable in the target VM.</source>
          <target state="translated">目标虚拟机中的一个局部变量。</target>
        </trans-unit>
        <trans-unit id="7a8804556717e463f57b91b2efdc00d9fe50444d" translate="yes" xml:space="preserve">
          <source>A local variable in the target VM. Each variable declared within a &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; has its own LocalVariable object. Variables of the same name declared in different scopes have different LocalVariable objects. LocalVariables can be used alone to retrieve static information about their declaration, or can be used in conjunction with a &lt;a href=&quot;stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt; to set and get values.</source>
          <target state="translated">目标虚拟机中的本地变量。在&lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; 中&lt;/a&gt;声明的每个变量都有其自己的LocalVariable对象。在不同作用域中声明的同名变量具有不同的LocalVariable对象。LocalVariables可以单独用于检索有关其声明的静态信息，也可以与&lt;a href=&quot;stackframe&quot;&gt; &lt;code&gt;StackFrame&lt;/code&gt; &lt;/a&gt;一起使用以设置和获取值。</target>
        </trans-unit>
        <trans-unit id="ad2e095520751ba87e3068d056542787aeca9197" translate="yes" xml:space="preserve">
          <source>A local variable.</source>
          <target state="translated">一个局部变量。</target>
        </trans-unit>
        <trans-unit id="6955283daf06e25711bb8ad70a56014545639769" translate="yes" xml:space="preserve">
          <source>A locale with language &quot;no&quot;, country &quot;NO&quot;, and variant &quot;NY&quot;, representing Norwegian Nynorsk (Norway), is converted to a language tag &quot;nn-NO&quot;.</source>
          <target state="translated">语言为 &quot;no&quot;、国家为 &quot;NO&quot;、变体为 &quot;NY &quot;的locale代表挪威语Nynorsk(挪威),转换为语言标签 &quot;nn-NO&quot;。</target>
        </trans-unit>
        <trans-unit id="65c9b270c7c3f54a5f3173eaed9ba0424301ac5e" translate="yes" xml:space="preserve">
          <source>A localized String containing the description of the object.</source>
          <target state="translated">包含对象描述的本地化字符串。</target>
        </trans-unit>
        <trans-unit id="00a1c98e62c8c1f14895bfb21d9ee63a77aa54f1" translate="yes" xml:space="preserve">
          <source>A localized String containing the name of the object.</source>
          <target state="translated">包含对象名称的本地化字符串。</target>
        </trans-unit>
        <trans-unit id="3a27552254d56009aa8e1699a2f0793508aa6107" translate="yes" xml:space="preserve">
          <source>A localized short description associated with this property/method/event. This defaults to be the display name.</source>
          <target state="translated">与此属性/方法/事件相关联的本地化简短描述。默认值为显示名称。</target>
        </trans-unit>
        <trans-unit id="822cae31a3209802ad0dd2caa1aa6f4f71c55284" translate="yes" xml:space="preserve">
          <source>A lock acquired by calling the called method (if it is a synchronized method) and locks acquired by entering synchronized blocks within the called method are released. Note: this does not apply to native locks or java.util.concurrent.locks locks.</source>
          <target state="translated">调用被调用的方法(如果是同步方法)获得的锁和在被调用的方法中输入同步块获得的锁被释放。注意:这不适用于本地锁或java.util.concurrent.locks锁。</target>
        </trans-unit>
        <trans-unit id="5c9fada9017e71f49bf3f0e12ca12af8b3cad0a7" translate="yes" xml:space="preserve">
          <source>A lock is a tool for controlling access to a shared resource by multiple threads. Commonly, a lock provides exclusive access to a shared resource: only one thread at a time can acquire the lock and all access to the shared resource requires that the lock be acquired first. However, some locks may allow concurrent access to a shared resource, such as the read lock of a &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">锁是一种用于控制多个线程对共享资源的访问的工具。通常，锁提供对共享资源的独占访问：一次只能有一个线程可以获取该锁，对共享资源的所有访问都需要首先获取该锁。但是，某些锁可能允许并发访问共享资源，例如&lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; &lt;/a&gt;的读取锁。</target>
        </trans-unit>
        <trans-unit id="3a6ffffd6b30beb72af7461ead42991d37ef4948" translate="yes" xml:space="preserve">
          <source>A lock object remains valid until it is released or the associated file channel is closed, whichever comes first.</source>
          <target state="translated">一个锁定对象一直有效,直到它被释放或相关的文件通道被关闭,以先到者为准。</target>
        </trans-unit>
        <trans-unit id="28a3b257aa12bb2f4fb5f8f6e1420bc67c0a823b" translate="yes" xml:space="preserve">
          <source>A lock object representing the newly-acquired lock</source>
          <target state="translated">一个代表新获得的锁的锁对象。</target>
        </trans-unit>
        <trans-unit id="2b22d963da1177eba0b896711186aa82f5524a3d" translate="yes" xml:space="preserve">
          <source>A lock object representing the newly-acquired lock, or &lt;code&gt;null&lt;/code&gt; if the lock could not be acquired because another program holds an overlapping lock</source>
          <target state="translated">代表新获取的锁的锁对象；如果由于另一个程序持有重叠的锁而无法获取该锁，则返回 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="94c9f044a4875cfd3ff8a41efa0667cbf6bb53d6" translate="yes" xml:space="preserve">
          <source>A lock on a (region of a) file</source>
          <target state="translated">一个文件(区域)的锁。</target>
        </trans-unit>
        <trans-unit id="84ac1353e7256bd0e9a70d66e51652a6d59ae9e0" translate="yes" xml:space="preserve">
          <source>A locked region need not be contained within, or even overlap, the actual underlying file, so the value returned by this method may exceed the file's current size.</source>
          <target state="translated">锁定的区域不需要包含在实际的底层文件中,甚至不需要重叠,所以本方法返回的值可能会超过文件的当前大小。</target>
        </trans-unit>
        <trans-unit id="d2a79a2335ce967d894d9aa28b3ea94309610ccb" translate="yes" xml:space="preserve">
          <source>A logger finder is responsible for mapping from a &lt;code&gt;
 System.Logger.Level&lt;/code&gt; to a level supported by the logging backend it uses.</source>
          <target state="translated">记录器查找程序负责从 &lt;code&gt; System.Logger.Level&lt;/code&gt; 映射到它使用的日志记录后端支持的级别。</target>
        </trans-unit>
        <trans-unit id="7e0711816c11bc2760ac5554d0b7767c117620f3" translate="yes" xml:space="preserve">
          <source>A logical channel connection to a Smart Card.</source>
          <target state="translated">与智能卡的逻辑通道连接。</target>
        </trans-unit>
        <trans-unit id="82653681cfdf11447ffcbfb97eefb36b4534e087" translate="yes" xml:space="preserve">
          <source>A logical channel connection to a Smart Card. It is used to exchange APDUs with a Smart Card. A CardChannel object can be obtained by calling the method &lt;a href=&quot;card#getBasicChannel()&quot;&gt;Card.getBasicChannel()&lt;/a&gt; or &lt;a href=&quot;card#openLogicalChannel()&quot;&gt;Card.openLogicalChannel()&lt;/a&gt;.</source>
          <target state="translated">与智能卡的逻辑通道连接。它用于与智能卡交换APDU。可以通过调用&lt;a href=&quot;card#getBasicChannel()&quot;&gt;Card.getBasicChannel（）&lt;/a&gt;或&lt;a href=&quot;card#openLogicalChannel()&quot;&gt;Card.openLogicalChannel（）&lt;/a&gt;方法获得CardChannel对象。</target>
        </trans-unit>
        <trans-unit id="bda5fe24ab8cbefaf2746b532e58a035e4078331" translate="yes" xml:space="preserve">
          <source>A logical name for the data source is registered with a naming service that uses the Java Naming and Directory Interface (JNDI) API, usually by a system administrator or someone performing the duties of a system administrator. An application can retrieve the &lt;code&gt;DataSource&lt;/code&gt; object it wants by doing a lookup on the logical name that has been registered for it. The application can then use the &lt;code&gt;DataSource&lt;/code&gt; object to create a connection to the physical data source it represents.</source>
          <target state="translated">数据源的逻辑名通常由系统管理员或执行系统管理员职责的人向使用Java命名和目录接口（JNDI）API的命名服务注册。应用程序可以通过查找已为其注册的逻辑名称来检索所需的 &lt;code&gt;DataSource&lt;/code&gt; 对象。然后，应用程序可以使用 &lt;code&gt;DataSource&lt;/code&gt; 对象创建与其表示的物理数据源的连接。</target>
        </trans-unit>
        <trans-unit id="c068ce28b77aa11f0756c0de4e392d8a3775df39" translate="yes" xml:space="preserve">
          <source>A logical name for the data source is registered with a naming service that uses the Java Naming and Directory Interface&amp;trade; (JNDI) API, usually by a system administrator or someone performing the duties of a system administrator. An application can retrieve the &lt;code&gt;DataSource&lt;/code&gt; object it wants by doing a lookup on the logical name that has been registered for it. The application can then use the &lt;code&gt;DataSource&lt;/code&gt; object to create a connection to the physical data source it represents.</source>
          <target state="translated">数据源的逻辑名通常由系统管理员或执行系统管理员职责的人使用Java命名和目录接口&amp;trade;（JNDI）API向命名服务注册。应用程序可以通过查找已为其注册的逻辑名称来检索所需的 &lt;code&gt;DataSource&lt;/code&gt; 对象。然后，应用程序可以使用 &lt;code&gt;DataSource&lt;/code&gt; 对象创建与其表示的物理数据源的连接。</target>
        </trans-unit>
        <trans-unit id="bded42e220d2678d88898dced390cdac6cdad3c4" translate="yes" xml:space="preserve">
          <source>A logical set of child views, which as used as a layout pool from which a physical view is formed.</source>
          <target state="translated">一组逻辑上的子视图,它被用作布局池,由它形成物理视图。</target>
        </trans-unit>
        <trans-unit id="568c4b3b9a76ea6ca643c5daaf99dff90277ebc4" translate="yes" xml:space="preserve">
          <source>A login configuration contains the following information. Note that this example only represents the default syntax for the &lt;code&gt;Configuration&lt;/code&gt;. Subclass implementations of this class may implement alternative syntaxes and may retrieve the &lt;code&gt;Configuration&lt;/code&gt; from any source such as files, databases, or servers.</source>
          <target state="translated">登录配置包含以下信息。请注意，此示例仅表示 &lt;code&gt;Configuration&lt;/code&gt; 的默认语法。此类的子类实现可以实现替代语法，并且可以从任何源（例如文件，数据库或服务器）检索 &lt;code&gt;Configuration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26dda26d1e92f5c5e23547c5c332144ba4720ca0" translate="yes" xml:space="preserve">
          <source>A long buffer is not comparable to any other type of object.</source>
          <target state="translated">长缓冲区不是其他类型的对象所能比拟的。</target>
        </trans-unit>
        <trans-unit id="af058ad87a032a73c5dbeda376e1410c7f0e9d15" translate="yes" xml:space="preserve">
          <source>A long buffer is not equal to any other type of object.</source>
          <target state="translated">一个长缓冲区不等于任何其他类型的对象。</target>
        </trans-unit>
        <trans-unit id="14db0bab1d80c04094c29c5f4876e521eaaaad9a" translate="yes" xml:space="preserve">
          <source>A long buffer.</source>
          <target state="translated">一个长的缓冲区。</target>
        </trans-unit>
        <trans-unit id="fdd3fa643df0a7408495d391eff49d6089573722" translate="yes" xml:space="preserve">
          <source>A lookup can fail, because the containing class is not accessible to the lookup class, or because the desired class member is missing, or because the desired class member is not accessible to the lookup class, or because the lookup object is not trusted enough to access the member. In any of these cases, a &lt;code&gt;ReflectiveOperationException&lt;/code&gt; will be thrown from the attempted lookup. The exact class will be one of the following:</source>
          <target state="translated">查找可能失败，因为查找类无法访问包含类，或者因为缺少所需的类成员，或者因为查找类无法访问所需的类成员，或者因为查找对象的信任度不足以使其访问该成员。在任何这些情况下，都会从尝试的查找中引发 &lt;code&gt;ReflectiveOperationException&lt;/code&gt; 。确切的类将是以下之一：</target>
        </trans-unit>
        <trans-unit id="e02782171fa85214257bd4e30c30b1a42407ad99" translate="yes" xml:space="preserve">
          <source>A lookup can fail, because the containing class is not accessible to the lookup class, or because the desired class member is missing, or because the desired class member is not accessible to the lookup class, or because the lookup object is not trusted enough to access the member. In the case of a field setter function on a &lt;code&gt;final&lt;/code&gt; field, finality enforcement is treated as a kind of access control, and the lookup will fail, except in special cases of &lt;a href=&quot;#unreflectSetter(java.lang.reflect.Field)&quot;&gt;&lt;code&gt;Lookup.unreflectSetter&lt;/code&gt;&lt;/a&gt;. In any of these cases, a &lt;code&gt;ReflectiveOperationException&lt;/code&gt; will be thrown from the attempted lookup. The exact class will be one of the following:</source>
          <target state="translated">查找可能失败，因为查找类无法访问包含的类，或者缺少所需的类成员，或者因为查找类无法访问所需的类成员，或者因为查找对象的信任度不足以使其访问该成员。在 &lt;code&gt;final&lt;/code&gt; 字段上使用字段设置器功能的情况下，将完成性强制视为一种访问控制，并且查找将失败，除非在&lt;a href=&quot;#unreflectSetter(java.lang.reflect.Field)&quot;&gt; &lt;code&gt;Lookup.unreflectSetter&lt;/code&gt; 的&lt;/a&gt;特殊情况下。在任何这些情况下，都会从尝试的查找中引发 &lt;code&gt;ReflectiveOperationException&lt;/code&gt; 。确切的类将是以下之一：</target>
        </trans-unit>
        <trans-unit id="df039c113f004ecf80f82c293fc0ad048fa8ba6e" translate="yes" xml:space="preserve">
          <source>A lookup class which needs to create method handles will call &lt;a href=&quot;methodhandles#lookup()&quot;&gt;&lt;code&gt;MethodHandles.lookup&lt;/code&gt;&lt;/a&gt; to create a factory for itself. When the &lt;code&gt;Lookup&lt;/code&gt; factory object is created, the identity of the lookup class is determined, and securely stored in the &lt;code&gt;Lookup&lt;/code&gt; object. The lookup class (or its delegates) may then use factory methods on the &lt;code&gt;Lookup&lt;/code&gt; object to create method handles for access-checked members. This includes all methods, constructors, and fields which are allowed to the lookup class, even private ones.</source>
          <target state="translated">需要创建方法句柄的查找类将调用&lt;a href=&quot;methodhandles#lookup()&quot;&gt; &lt;code&gt;MethodHandles.lookup&lt;/code&gt; &lt;/a&gt;为自身创建工厂。当 &lt;code&gt;Lookup&lt;/code&gt; 创建工厂对象，查找类的身份被确定，并安全地存储在 &lt;code&gt;Lookup&lt;/code&gt; 对象。然后，查找类（或其委托）可以在 &lt;code&gt;Lookup&lt;/code&gt; 对象上使用工厂方法来创建用于访问检查的成员的方法句柄。这包括所有允许用于查找类的方法，构造函数和字段，甚至包括私有方法。</target>
        </trans-unit>
        <trans-unit id="0b8aa7e616f29eacc7bbf003997b65bbb16a9d5b" translate="yes" xml:space="preserve">
          <source>A lookup class which needs to create method handles will call &lt;a href=&quot;methodhandles#lookup--&quot;&gt;&lt;code&gt;MethodHandles.lookup&lt;/code&gt;&lt;/a&gt; to create a factory for itself. When the &lt;code&gt;Lookup&lt;/code&gt; factory object is created, the identity of the lookup class is determined, and securely stored in the &lt;code&gt;Lookup&lt;/code&gt; object. The lookup class (or its delegates) may then use factory methods on the &lt;code&gt;Lookup&lt;/code&gt; object to create method handles for access-checked members. This includes all methods, constructors, and fields which are allowed to the lookup class, even private ones.</source>
          <target state="translated">需要创建方法句柄的查找类将调用&lt;a href=&quot;methodhandles#lookup--&quot;&gt; &lt;code&gt;MethodHandles.lookup&lt;/code&gt; &lt;/a&gt;为自身创建工厂。当 &lt;code&gt;Lookup&lt;/code&gt; 创建工厂对象，查找类的身份被确定，并安全地存储在 &lt;code&gt;Lookup&lt;/code&gt; 对象。然后，查找类（或其委托）可以在 &lt;code&gt;Lookup&lt;/code&gt; 对象上使用工厂方法来创建用于访问检查成员的方法句柄。这包括所有允许用于查找类的方法，构造函数和字段，甚至包括私有方法。</target>
        </trans-unit>
        <trans-unit id="6fad313e8298ce9596df44644d1804116a600be9" translate="yes" xml:space="preserve">
          <source>A lookup with &lt;code&gt;PACKAGE&lt;/code&gt; but not &lt;code&gt;PRIVATE&lt;/code&gt; mode can safely delegate non-public access within the package of the lookup class without conferring &lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;private access&lt;/a&gt;. A lookup with &lt;code&gt;MODULE&lt;/code&gt; but not &lt;code&gt;PACKAGE&lt;/code&gt; mode can safely delegate &lt;code&gt;PUBLIC&lt;/code&gt; access within the module of the lookup class without conferring package access. A lookup with a &lt;a href=&quot;#previousLookupClass()&quot;&gt;previous lookup class&lt;/a&gt; (and &lt;code&gt;PUBLIC&lt;/code&gt; but not &lt;code&gt;MODULE&lt;/code&gt; mode) can safely delegate access to public classes accessible to both the module of the lookup class and the module of the previous lookup class.</source>
          <target state="translated">使用 &lt;code&gt;PACKAGE&lt;/code&gt; 但不使用 &lt;code&gt;PRIVATE&lt;/code&gt; 模式的查找可以安全地在查找类的包内委派非公开访问，而无需授予&lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;私有访问权&lt;/a&gt;。使用 &lt;code&gt;MODULE&lt;/code&gt; 但不使用 &lt;code&gt;PACKAGE&lt;/code&gt; 模式的查找可以安全地在查找类的模块内委派 &lt;code&gt;PUBLIC&lt;/code&gt; 访问，而无需授予程序包访问权限。使用&lt;a href=&quot;#previousLookupClass()&quot;&gt;先前的查找类&lt;/a&gt;（和 &lt;code&gt;PUBLIC&lt;/code&gt; 而不是 &lt;code&gt;MODULE&lt;/code&gt; 模式）进行的查找可以安全地委派对可用于查找类的模块和先前的查找类的模块访问的公共类的访问。</target>
        </trans-unit>
        <trans-unit id="209a781bacd6d342ab830cfdf5281a992aa39860" translate="yes" xml:space="preserve">
          <source>A lookup, combinator, or factory method will fail and throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if the created method handle's type would have &lt;a href=&quot;methodhandle#maxarity&quot;&gt;too many parameters&lt;/a&gt;.</source>
          <target state="translated">如果创建的方法句柄的类型&lt;a href=&quot;methodhandle#maxarity&quot;&gt;参数太多&lt;/a&gt;，则查找，组合器或工厂方法将失败并抛出 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="407af2e7c55e4f2c6720b8870c4e549db987d678" translate="yes" xml:space="preserve">
          <source>A low-level event that indicates that a window has changed its status.</source>
          <target state="translated">表示窗口状态改变的低级事件。</target>
        </trans-unit>
        <trans-unit id="91b8a97945ca1e2eee85694320a0fa0331897881" translate="yes" xml:space="preserve">
          <source>A low-level event that indicates that a window has changed its status. This low-level event is generated by a Window object when it is opened, closed, activated, deactivated, iconified, or deiconified, or when focus is transferred into or out of the Window.</source>
          <target state="translated">一个低级事件,表示一个窗口已经改变了它的状态。当窗口对象被打开、关闭、激活、停用、图标化或去图标化时,或者当焦点被转移到窗口中或从窗口中转移出来时,窗口对象就会产生这个低级事件。</target>
        </trans-unit>
        <trans-unit id="cb079744a24a989b3684b56495bdf7568cb65664" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a Component has gained or lost the input focus.</source>
          <target state="translated">一个低级事件,表示一个组件已经获得或失去输入焦点。</target>
        </trans-unit>
        <trans-unit id="f9789d3e89bc57b7e00b92b8d2f77ca87648e86e" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a Component has gained or lost the input focus. This low-level event is generated by a Component (such as a TextField). The event is passed to every &lt;code&gt;FocusListener&lt;/code&gt; or &lt;code&gt;FocusAdapter&lt;/code&gt; object which registered to receive such events using the Component's &lt;code&gt;addFocusListener&lt;/code&gt; method. (&lt;code&gt;FocusAdapter&lt;/code&gt; objects implement the &lt;code&gt;FocusListener&lt;/code&gt; interface.) Each such listener object gets this &lt;code&gt;FocusEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">指示组件已获得或失去输入焦点的低级事件。此低级事件由组件（例如TextField）生成。该事件将传递给每个已注册的 &lt;code&gt;FocusListener&lt;/code&gt; 或 &lt;code&gt;FocusAdapter&lt;/code&gt; 对象，该对象已使用组件的 &lt;code&gt;addFocusListener&lt;/code&gt; 方法注册为接收此类事件。（ &lt;code&gt;FocusAdapter&lt;/code&gt; 对象实现 &lt;code&gt;FocusListener&lt;/code&gt; 接口。）事件发生时，每个这样的侦听器对象都会获取此 &lt;code&gt;FocusEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c46a21e048aa495dbdcbb94896c23056986c3457" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a component moved, changed size, or changed visibility (also, the root class for the other component-level events).</source>
          <target state="translated">表示组件移动、改变大小或改变可见性的低级事件(也是其他组件级事件的根类)。</target>
        </trans-unit>
        <trans-unit id="649f205485b73cc811bcec91033bc6c95cd527be" translate="yes" xml:space="preserve">
          <source>A low-level event which indicates that a container's contents changed because a component was added or removed.</source>
          <target state="translated">一个低级事件,表示容器的内容因为添加或删除了一个组件而发生了变化。</target>
        </trans-unit>
        <trans-unit id="ff9b7ac08540e6b07272d4f6ab622d7f00d9e75a" translate="yes" xml:space="preserve">
          <source>A lower value (eg 100) corresponds to higher contrast text when displaying dark text on a light background.</source>
          <target state="translated">当在浅色背景上显示深色文字时,较低的值(如100)对应较高的对比度文字。</target>
        </trans-unit>
        <trans-unit id="8153cb1f4f8081e17bb4e5f6258e0dc551189059" translate="yes" xml:space="preserve">
          <source>A lower-case alphabetic character: &lt;code&gt;[a-z]&lt;/code&gt;</source>
          <target state="translated">小写字母： &lt;code&gt;[a-z]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54d053dd5de98d77f961dfe613bd1e3a4b83129d" translate="yes" xml:space="preserve">
          <source>A lowercase character:&lt;code&gt;\p{IsLowercase}&lt;/code&gt;</source>
          <target state="translated">小写字符： &lt;code&gt;\p{IsLowercase}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d23928f934094dc2c2ce78eff94117253e8966b6" translate="yes" xml:space="preserve">
          <source>A malicious user may be able to extract sensitive information that is stored in events and interrupt Flight Recorder by installing listeners or hooks that never finish.</source>
          <target state="translated">恶意用户可能会提取存储在事件中的敏感信息,并通过安装永远不会完成的监听器或钩子中断Flight Recorder。</target>
        </trans-unit>
        <trans-unit id="49afb3913762c744d38b001208ec93b93fc6fafb" translate="yes" xml:space="preserve">
          <source>A malicious user may be able to write sensitive information to Flight Recorder buffers.</source>
          <target state="translated">恶意用户可能会向飞行记录仪缓冲区写入敏感信息。</target>
        </trans-unit>
        <trans-unit id="d0c5f1bada31724a95975e7fb4646121c67bb998" translate="yes" xml:space="preserve">
          <source>A management application and a platform MBeanServer of a running virtual machine can interoperate without requiring classes used by the platform MXBean interfaces. The data types being transmitted between the JMX connector server and the connector client are JMX &lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;open types&lt;/a&gt; and this allows interoperation across versions. A data type used by the MXBean interfaces are mapped to an open type when being accessed via MBeanServer interface. See the &lt;a href=&quot;../../../javax/management/mxbean#MXBean-spec&quot;&gt; MXBean&lt;/a&gt; specification for details.</source>
          <target state="translated">运行中的虚拟机的管理应用程序和平台MBeanServer可以互操作，而无需平台MXBean接口使用的类。在JMX连接器服务器和连接器客户端之间传输的数据类型是JMX &lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;开放类型&lt;/a&gt;，这允许跨版本进行互操作。通过MBeanServer接口访问时，MXBean接口使用的数据类型将映射为开放类型。有关详细信息，请参见&lt;a href=&quot;../../../javax/management/mxbean#MXBean-spec&quot;&gt;MXBean&lt;/a&gt;规范。</target>
        </trans-unit>
        <trans-unit id="32d77cea074b43a48ea99dfb0273fed364568d22" translate="yes" xml:space="preserve">
          <source>A management application and a platform MBeanServer of a running virtual machine can interoperate without requiring classes used by the platform MXBean interfaces. The data types being transmitted between the JMX connector server and the connector client are JMX &lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;open types&lt;/a&gt; and this allows interoperation across versions. A data type used by the MXBean interfaces are mapped to an open type when being accessed via MBeanServer interface. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/javax/management/MXBean.html#MXBean-spec&quot;&gt; MXBean&lt;/a&gt; specification for details.</source>
          <target state="translated">运行中的虚拟机的管理应用程序和平台MBeanServer可以互操作，而无需平台MXBean接口使用的类。在JMX连接器服务器和连接器客户端之间传输的数据类型是JMX&lt;a href=&quot;../../../javax/management/openmbean/opentype&quot;&gt;开放类型&lt;/a&gt;，这允许跨版本进行互操作。通过MBeanServer接口访问时，MXBean接口使用的数据类型将映射为开放类型。有关详细信息，请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/javax/management/MXBean.html#MXBean-spec&quot;&gt;MXBean&lt;/a&gt;规范。</target>
        </trans-unit>
        <trans-unit id="da94c79589a35e1af6af8746f12bf935ca3975af" translate="yes" xml:space="preserve">
          <source>A manager of connections to target virtual machines.</source>
          <target state="translated">目标虚拟机的连接管理器。</target>
        </trans-unit>
        <trans-unit id="e00cd0d41435c9c22046c7b3c833db42f295bcd7" translate="yes" xml:space="preserve">
          <source>A manager of connections to target virtual machines. The VirtualMachineManager allows one application to debug multiple target VMs. (Note that the converse is not supported; a target VM can be debugged by only one debugger application.) This interface contains methods to manage connections to remote target VMs and to obtain the &lt;a href=&quot;virtualmachine&quot;&gt;&lt;code&gt;VirtualMachine&lt;/code&gt;&lt;/a&gt; mirror for available target VMs.</source>
          <target state="translated">与目标虚拟机的连接的管理器。 VirtualMachineManager允许一个应用程序调试多个目标VM。 （请注意，不支持相反的操作；目标VM只能由一个调试器应用程序进行调试。）此接口包含管理与远程目标VM的连接并获取可用目标VM的&lt;a href=&quot;virtualmachine&quot;&gt; &lt;code&gt;VirtualMachine&lt;/code&gt; &lt;/a&gt;镜像的方法。</target>
        </trans-unit>
        <trans-unit id="47fa0cfd58919cdac5200faaeab4cd1fdd71215c" translate="yes" xml:space="preserve">
          <source>A mandated construct is one that is not explicitly declared in the source code, but whose presence is mandated by the specification.</source>
          <target state="translated">授权构造是指在源代码中没有明确声明的构造,但其存在是由规范规定的。</target>
        </trans-unit>
        <trans-unit id="bd336924782d5297e51e282da651c828594dafdf" translate="yes" xml:space="preserve">
          <source>A mandated construct is one that is not explicitly declared in the source code, but whose presence is mandated by the specification. Such a construct is said to be implicitly declared. One example of a mandated element is a &lt;em&gt;default constructor&lt;/em&gt; in a class that contains no explicit constructor declarations. Another example of a mandated construct is an implicitly declared &lt;em&gt;container annotation&lt;/em&gt; used to hold multiple annotations of a repeatable annotation type.</source>
          <target state="translated">强制构造是一种未在源代码中明确声明的构造，但其存在是由规范强制进行的。据说这种构造是隐式声明的。强制元素的一个示例是不包含任何显式构造函数声明的类中的&lt;em&gt;默认构造&lt;/em&gt;函数。强制构造的另一个示例是隐式声明的&lt;em&gt;容器批注，该批注&lt;/em&gt;用于容纳可重复批注类型的多个批注。</target>
        </trans-unit>
        <trans-unit id="523acc2618e298537fac6c6db657235420efeba2" translate="yes" xml:space="preserve">
          <source>A map entry (key-value pair).</source>
          <target state="translated">一个地图条目(键值对);</target>
        </trans-unit>
        <trans-unit id="f8154228f438e29a074d401ba3f6df78033cad84" translate="yes" xml:space="preserve">
          <source>A map entry (key-value pair). The &lt;code&gt;Map.entrySet&lt;/code&gt; method returns a collection-view of the map, whose elements are of this class. The</source>
          <target state="translated">映射条目（键值对）。该 &lt;code&gt;Map.entrySet&lt;/code&gt; 方法返回地图，其元素是这个类的集合视图。的</target>
        </trans-unit>
        <trans-unit id="734ae33840ce4ece035615ca1a3162f9e1c88c0c" translate="yes" xml:space="preserve">
          <source>A map from single character keys to string values, indicating extensions apart from language identification. The extensions in &lt;code&gt;Locale&lt;/code&gt; implement the semantics and syntax of BCP 47 extension subtags and private use subtags. The extensions are case insensitive, but &lt;code&gt;Locale&lt;/code&gt; canonicalizes all extension keys and values to lower case. Note that extensions cannot have empty values.</source>
          <target state="translated">从单个字符键到字符串值的映射，指示除语言标识之外的扩展名。 &lt;code&gt;Locale&lt;/code&gt; 的扩展实现了BCP 47扩展子标签和专用子标签的语义和语法。扩展名不区分大小写，但是&amp;ldquo; &lt;code&gt;Locale&lt;/code&gt; 所有扩展名和值规范化为小写。请注意，扩展名不能为空值。</target>
        </trans-unit>
        <trans-unit id="f4fac118eaa61bd3381786afc5506fae5041565a" translate="yes" xml:space="preserve">
          <source>A map of the attributes of the &lt;code&gt;MLET&lt;/code&gt; tag and their values.</source>
          <target state="translated">&lt;code&gt;MLET&lt;/code&gt; 标记的属性及其值的映射。</target>
        </trans-unit>
        <trans-unit id="ecca0e69af4452740453796ec2257a6e8d86c1b0" translate="yes" xml:space="preserve">
          <source>A map of zone overrides to enable the short time-zone names to be used.</source>
          <target state="translated">区域覆盖图,以便能够使用短时区名称。</target>
        </trans-unit>
        <trans-unit id="125d5f648fdc6b3b583770be46f92225acbb6df2" translate="yes" xml:space="preserve">
          <source>A mapped byte buffer and the file mapping that it represents remain valid until the buffer itself is garbage-collected.</source>
          <target state="translated">一个映射的字节缓冲区和它所代表的文件映射一直有效,直到缓冲区本身被垃圾回收。</target>
        </trans-unit>
        <trans-unit id="ecbf6f19b205cafdf24d72538d04204a2f57d4fd" translate="yes" xml:space="preserve">
          <source>A mapped memory segment, that is, a memory segment backed by memory-mapped file.</source>
          <target state="translated">映射的内存段,即由内存映射文件支持的内存段。</target>
        </trans-unit>
        <trans-unit id="1d8b4897e57fdeecad1d940f01be5b12c7f07121" translate="yes" xml:space="preserve">
          <source>A mapping of key/value pairs, all of whose keys are &lt;code&gt;Strings&lt;/code&gt;.</source>
          <target state="translated">键/值对的映射，其所有键均为 &lt;code&gt;Strings&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="249f4e6247696ef79d77f9632a8840e624e39fa5" translate="yes" xml:space="preserve">
          <source>A mapping, once established, is not dependent upon the file channel that was used to create it. Closing the channel, in particular, has no effect upon the validity of the mapping.</source>
          <target state="translated">映射一旦建立,就不依赖于用于创建映射的文件通道。特别是关闭通道对映射的有效性没有影响。</target>
        </trans-unit>
        <trans-unit id="1cf7ecf320778fa8570ef98cef4c60a4d8eee590" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt; entry types.</source>
          <target state="translated">&lt;code&gt;KeyStore&lt;/code&gt; 条目类型的标记界面。</target>
        </trans-unit>
        <trans-unit id="20f1eb54a1504ea4d0329f700bd25ca65410acf6" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt;&lt;a href=&quot;#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;store&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">用于 &lt;code&gt;KeyStore&lt;/code&gt; &lt;a href=&quot;#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;store&lt;/code&gt; &lt;/a&gt;参数的标记接口。</target>
        </trans-unit>
        <trans-unit id="16110f246a5bef6d146026b68db4023a20eb468c" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt;&lt;a href=&quot;keystore#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keystore#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;store&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">用于 &lt;code&gt;KeyStore&lt;/code&gt; &lt;a href=&quot;keystore#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;keystore#store(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;store&lt;/code&gt; &lt;/a&gt;参数的标记接口。</target>
        </trans-unit>
        <trans-unit id="4f97d254de94be9955d0374c391792c8cd03cd9a" translate="yes" xml:space="preserve">
          <source>A marker interface for &lt;code&gt;KeyStore&lt;/code&gt;&lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt;&lt;code&gt;load&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;keystore#store-java.security.KeyStore.LoadStoreParameter-&quot;&gt;&lt;code&gt;store&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">用于 &lt;code&gt;KeyStore&lt;/code&gt; &lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt; &lt;code&gt;load&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;keystore#store-java.security.KeyStore.LoadStoreParameter-&quot;&gt; &lt;code&gt;store&lt;/code&gt; &lt;/a&gt;参数的标记接口。</target>
        </trans-unit>
        <trans-unit id="b87ab39dbbc70f26edc0d8e9c3fcd2b14e207095" translate="yes" xml:space="preserve">
          <source>A marker interface for keystore protection parameters.</source>
          <target state="translated">密钥库保护参数的标记接口。</target>
        </trans-unit>
        <trans-unit id="f0a2bf301a5de3c70e89b16dc01e8dabc98a1261" translate="yes" xml:space="preserve">
          <source>A marker interface for parameters used in various &lt;code&gt;SecureRandom&lt;/code&gt; methods.</source>
          <target state="translated">用于各种 &lt;code&gt;SecureRandom&lt;/code&gt; 方法中的参数的标记接口。</target>
        </trans-unit>
        <trans-unit id="0035f278ed0acbc8c02637e9be7a201b90f6b87c" translate="yes" xml:space="preserve">
          <source>A marker interface for the end of the document</source>
          <target state="translated">文件结尾的标记界面。</target>
        </trans-unit>
        <trans-unit id="9eff216b480311bcbb9834bfd9e89e5bb1ab95d0" translate="yes" xml:space="preserve">
          <source>A marker interface identifying asynchronous tasks produced by &lt;code&gt;async&lt;/code&gt; methods.</source>
          <target state="translated">一个标记接口，用于标识由 &lt;code&gt;async&lt;/code&gt; 方法产生的异步任务。</target>
        </trans-unit>
        <trans-unit id="c7f8f418ddcef0be0c8c3683d4d5c10eac3e4d5a" translate="yes" xml:space="preserve">
          <source>A marker interface identifying asynchronous tasks produced by &lt;code&gt;async&lt;/code&gt; methods. This may be useful for monitoring, debugging, and tracking asynchronous activities.</source>
          <target state="translated">一个标记接口，用于标识由 &lt;code&gt;async&lt;/code&gt; 方法产生的异步任务。这对于监视，调试和跟踪异步活动可能很有用。</target>
        </trans-unit>
        <trans-unit id="0df196a232a0c0909bbcc3867add7c3a9426e08b" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are disabled.</source>
          <target state="translated">表示所有级别都被禁用的标记。</target>
        </trans-unit>
        <trans-unit id="6f716b42aa654cf1f62f9e219ef89741ce307485" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are disabled. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;a href=&quot;integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指示所有级别均已禁用的标记。此级别的&lt;a href=&quot;#getSeverity()&quot;&gt;严重性&lt;/a&gt;为&lt;a href=&quot;integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4dd00300c1d1d8eca3dacf85fa1c12fafbc1273d" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are enabled.</source>
          <target state="translated">表示所有级别都已启用的标记。</target>
        </trans-unit>
        <trans-unit id="2ac454e10702b15ffe806cab0efb7dbec9e36eac" translate="yes" xml:space="preserve">
          <source>A marker to indicate that all levels are enabled. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;a href=&quot;integer#MIN_VALUE&quot;&gt;&lt;code&gt;Integer.MIN_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指示已启用所有级别的标记。此级别的&lt;a href=&quot;#getSeverity()&quot;&gt;严重性&lt;/a&gt;为&lt;a href=&quot;integer#MIN_VALUE&quot;&gt; &lt;code&gt;Integer.MIN_VALUE&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f09198edec762eb31b9241c7fd2744d522fe1d31" translate="yes" xml:space="preserve">
          <source>A mask for supported flags from getLayoutFlags.</source>
          <target state="translated">getLayoutFlags中支持的标志的掩码。</target>
        </trans-unit>
        <trans-unit id="44f4c50db580441785344b65adcc29714114f5ba" translate="yes" xml:space="preserve">
          <source>A mask for supported flags from getLayoutFlags. Only bits covered by the mask should be tested.</source>
          <target state="translated">getLayoutFlags中支持的标志的掩码。只有掩码覆盖的位才会被测试。</target>
        </trans-unit>
        <trans-unit id="a6aa6c3b1414a543907b16897d2cffac1cdfd599" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating auto mode.</source>
          <target state="translated">与 &quot;Flash &quot;标签一起使用的掩码,表示自动模式。</target>
        </trans-unit>
        <trans-unit id="1f7463765c393caefbb1a2aa59e465e56027565d" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating compulsory flash firing mode.</source>
          <target state="translated">与 &quot;闪光 &quot;标签一起使用的掩码,表示强制闪光模式。</target>
        </trans-unit>
        <trans-unit id="11008a1b9bed07bf81ef2b8d48ca49a118d4c819" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating compulsory flash suppression mode.</source>
          <target state="translated">与 &quot;Flash &quot;标签一起使用的掩码,表示强制性的闪光抑制模式。</target>
        </trans-unit>
        <trans-unit id="ea8c4d60b7a80668ef134ae6f663c096060be6f7" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating no flash function present.</source>
          <target state="translated">与 &quot;Flash &quot;标签一起使用的掩码,表示不存在闪光功能。</target>
        </trans-unit>
        <trans-unit id="c482ad4af56faa018ee9da7695d2529ba3cd6a95" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating red-eye reduction supported.</source>
          <target state="translated">与 &quot;Flash &quot;标签一起使用的掩码,表示支持减少红眼。</target>
        </trans-unit>
        <trans-unit id="1b1ce035712ebb0fe55b061a87b150f11bd165ff" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating strobe return light detected.</source>
          <target state="translated">与 &quot;Flash &quot;标签一起使用的掩码,表示检测到频闪回光。</target>
        </trans-unit>
        <trans-unit id="85fcf5935c6bb82d05629c0f5dc8bff64e7d5f96" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating strobe return light not detected.</source>
          <target state="translated">与 &quot;Flash &quot;标签一起使用的掩码,表示未检测到频闪回光。</target>
        </trans-unit>
        <trans-unit id="4cbbbd24270b7a478c98d814d7038afbf573187b" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;Flash&quot; tag, indicating that the flash fired.</source>
          <target state="translated">与 &quot;闪光灯 &quot;标签一起使用的掩码,表示闪光灯发射。</target>
        </trans-unit>
        <trans-unit id="21d11dc894039b2eac563c4ae59bf29edff669e4" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;NewSubfileType&quot; tag.</source>
          <target state="translated">用于 &quot;NewSubfileType &quot;标签的掩码。</target>
        </trans-unit>
        <trans-unit id="7fa06c979421786ebcc1a98729df221acd565c4e" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;T4Options&quot; tag.</source>
          <target state="translated">与 &quot;T4Options &quot;标签一起使用的掩码。</target>
        </trans-unit>
        <trans-unit id="c2c917ee880f3b775b6575fc987929825f43eed2" translate="yes" xml:space="preserve">
          <source>A mask to be used with the &quot;T6Options&quot; tag.</source>
          <target state="translated">与 &quot;T6Options &quot;标签一起使用的掩码。</target>
        </trans-unit>
        <trans-unit id="516f31ddfd8224efe35b11d66b1e0e8c19b3ab29" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI Time Code.</source>
          <target state="translated">指定使用MIDI时间码的主、从同步模式。</target>
        </trans-unit>
        <trans-unit id="1a34b881770391e5c98b3f4b648f43d1c9c9288b" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI Time Code. If this mode is used as the master sync mode, the sequencer gets its timing information from MIDI Time Code messages. This mode only applies as the master sync mode to sequencers that are also MIDI receivers. If this mode is used as the slave sync mode, the sequencer sends MIDI Time Code messages to its receiver. (See the MIDI 1.0 Detailed Specification for a description of MIDI Time Code.)</source>
          <target state="translated">指定使用MIDI时间码的主或从同步模式。如果该模式被用作主同步模式,音序器将从MIDI时间码信息中获取定时信息。该模式仅适用于同时是MIDI接收器的音序器的主同步模式。如果该模式被用作从属同步模式,音序器将向其接收器发送MIDI时间码信息。关于MIDI时间码的描述,请参见MIDI 1.0详细规范)。</target>
        </trans-unit>
        <trans-unit id="8b74dcfa4d11643692dd56060db98e20ccb865d3" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI clock messages.</source>
          <target state="translated">主或从同步模式,指定使用MIDI时钟信息。</target>
        </trans-unit>
        <trans-unit id="f1c1acbd4422c8096f1ccd850fc6f1437ccd7db8" translate="yes" xml:space="preserve">
          <source>A master or slave synchronization mode that specifies the use of MIDI clock messages. If this mode is used as the master sync mode, the sequencer gets its timing information from system real-time MIDI clock messages. This mode only applies as the master sync mode for sequencers that are also MIDI receivers. If this is the slave sync mode, the sequencer sends system real-time MIDI clock messages to its receiver. MIDI clock messages are sent at a rate of 24 per quarter note.</source>
          <target state="translated">一种指定使用MIDI时钟信息的主同步或从同步模式。如果该模式被用作主同步模式,则音序器从系统实时MIDI时钟信息中获取定时信息。该模式仅适用于同时是MIDI接收器的音序器作为主同步模式。如果这是从属同步模式,音序器向其接收器发送系统实时MIDI时钟信息。MIDI时钟信息以每个四分音符24个的速度发送。</target>
        </trans-unit>
        <trans-unit id="dccd692bcd77b8b3b096b3b3427fbdfd4efedd8e" translate="yes" xml:space="preserve">
          <source>A master synchronization mode that makes the sequencer get its timing information from its internal clock.</source>
          <target state="translated">主同步模式,使音序器从其内部时钟中获取定时信息。</target>
        </trans-unit>
        <trans-unit id="12d3b27856e9bd36d1a97eaae0372f0f8a17e986" translate="yes" xml:space="preserve">
          <source>A master synchronization mode that makes the sequencer get its timing information from its internal clock. This is not a legal slave sync mode.</source>
          <target state="translated">主同步模式,使音序器从其内部时钟中获取定时信息。这不是一个合法的从属同步模式。</target>
        </trans-unit>
        <trans-unit id="7eb366aa08c38a5f3036184a27210e6054eae460" translate="yes" xml:space="preserve">
          <source>A match column can be set in two ways:</source>
          <target state="translated">匹配列可以通过两种方式进行设置。</target>
        </trans-unit>
        <trans-unit id="e8d49a16c11b345dbd45845c1fa0699317425664" translate="yes" xml:space="preserve">
          <source>A matcher finds matches in a subset of its input called the</source>
          <target state="translated">匹配器在其输入的子集中找到匹配,称为</target>
        </trans-unit>
        <trans-unit id="758a4d9f7a90b6649a7891a5e92bf4733aec59aa" translate="yes" xml:space="preserve">
          <source>A matcher is created from a pattern by invoking the pattern's &lt;a href=&quot;pattern#matcher(java.lang.CharSequence)&quot;&gt;&lt;code&gt;matcher&lt;/code&gt;&lt;/a&gt; method. Once created, a matcher can be used to perform three different kinds of match operations:</source>
          <target state="translated">通过调用模式的&lt;a href=&quot;pattern#matcher(java.lang.CharSequence)&quot;&gt; &lt;code&gt;matcher&lt;/code&gt; &lt;/a&gt;方法从模式创建匹配器。创建匹配器后，可将其用于执行三种不同类型的匹配操作：</target>
        </trans-unit>
        <trans-unit id="2beb95eaaa4f46d10d05eb1b5ffd8b1199e910da" translate="yes" xml:space="preserve">
          <source>A matcher is created from a pattern by invoking the pattern's &lt;a href=&quot;pattern#matcher-java.lang.CharSequence-&quot;&gt;&lt;code&gt;matcher&lt;/code&gt;&lt;/a&gt; method. Once created, a matcher can be used to perform three different kinds of match operations:</source>
          <target state="translated">通过调用模式的&lt;a href=&quot;pattern#matcher-java.lang.CharSequence-&quot;&gt; &lt;code&gt;matcher&lt;/code&gt; &lt;/a&gt;方法从模式创建匹配器。创建匹配器后，可将其用于执行三种不同类型的匹配操作：</target>
        </trans-unit>
        <trans-unit id="6b606d69b6dac4199a2011b1286becb842eabc7e" translate="yes" xml:space="preserve">
          <source>A matcher may be reset explicitly by invoking its &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method or, if a new input sequence is desired, its &lt;a href=&quot;#reset(java.lang.CharSequence)&quot;&gt;&lt;code&gt;reset(CharSequence)&lt;/code&gt;&lt;/a&gt; method. Resetting a matcher discards its explicit state information and sets the append position to zero.</source>
          <target state="translated">可以通过调用其&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;方法或（如果需要一个新的输入序列）其&lt;a href=&quot;#reset(java.lang.CharSequence)&quot;&gt; &lt;code&gt;reset(CharSequence)&lt;/code&gt; &lt;/a&gt;方法来显式地重置一个匹配器。重置匹配器将丢弃其显式状态信息，并将附加位置设置为零。</target>
        </trans-unit>
        <trans-unit id="ec1706ed07cebe204549527211631a07768594eb" translate="yes" xml:space="preserve">
          <source>A matcher may be reset explicitly by invoking its &lt;a href=&quot;matcher#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method or, if a new input sequence is desired, its &lt;a href=&quot;matcher#reset-java.lang.CharSequence-&quot;&gt;&lt;code&gt;reset(CharSequence)&lt;/code&gt;&lt;/a&gt; method. Resetting a matcher discards its explicit state information and sets the append position to zero.</source>
          <target state="translated">匹配器可以通过调用&lt;a href=&quot;matcher#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;方法显式重置，或者如果需要新的输入序列，则可以调用&lt;a href=&quot;matcher#reset-java.lang.CharSequence-&quot;&gt; &lt;code&gt;reset(CharSequence)&lt;/code&gt; &lt;/a&gt;方法显式重置。重置匹配器将丢弃其显式状态信息，并将附加位置设置为零。</target>
        </trans-unit>
        <trans-unit id="7621ee330212390d04d603c1e9f1fcdf7cbe24ad" translate="yes" xml:space="preserve">
          <source>A matte border UI resource.</source>
          <target state="translated">一个哑光边框的UI资源。</target>
        </trans-unit>
        <trans-unit id="b452eaf2abe71ee3567f668d2fad17d07381a5e7" translate="yes" xml:space="preserve">
          <source>A membership key is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed. The validity of the membership key may be tested by invoking its &lt;a href=&quot;#isValid()&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">成员资格密钥在创建时有效，并且一直有效，直到通过调用&lt;a href=&quot;#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;方法删除成员资格或关闭通道为止。可以通过调用其&lt;a href=&quot;#isValid()&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt;方法来测试成员密钥的有效性。</target>
        </trans-unit>
        <trans-unit id="aac5131474a1f3893bb80ebe32ae2b7a9c14944f" translate="yes" xml:space="preserve">
          <source>A membership key is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed. The validity of the membership key may be tested by invoking its &lt;a href=&quot;membershipkey#isValid--&quot;&gt;&lt;code&gt;isValid&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">成员资格密钥在创建时有效，并且一直有效，直到通过调用&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;方法删除成员资格或关闭通道为止。成员密钥的有效性可以通过调用其&lt;a href=&quot;membershipkey#isValid--&quot;&gt; &lt;code&gt;isValid&lt;/code&gt; &lt;/a&gt;方法进行测试。</target>
        </trans-unit>
        <trans-unit id="87ff0d72d9055ee787db74e634bab1ba0c390134" translate="yes" xml:space="preserve">
          <source>A membership key may represent a membership to receive all datagrams sent to the group, or it may be &lt;em&gt;source-specific&lt;/em&gt;, meaning that it represents a membership that receives only datagrams from a specific source address. Whether or not a membership key is source-specific may be determined by invoking its &lt;a href=&quot;#sourceAddress()&quot;&gt;&lt;code&gt;sourceAddress&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">成员资格密钥可以表示接收发送到该组的所有数据报的成员资格，也可以是&lt;em&gt;特定&lt;/em&gt;于&lt;em&gt;源的&lt;/em&gt;，这意味着它表示仅接收来自特定源地址的数据报的成员资格。成员密钥是否特定于源可以通过调用其&lt;a href=&quot;#sourceAddress()&quot;&gt; &lt;code&gt;sourceAddress&lt;/code&gt; &lt;/a&gt;方法来确定。</target>
        </trans-unit>
        <trans-unit id="92540732008e2be4a329a53daa253b9bb615558c" translate="yes" xml:space="preserve">
          <source>A membership key may represent a membership to receive all datagrams sent to the group, or it may be &lt;em&gt;source-specific&lt;/em&gt;, meaning that it represents a membership that receives only datagrams from a specific source address. Whether or not a membership key is source-specific may be determined by invoking its &lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt;&lt;code&gt;sourceAddress&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">成员资格密钥可以表示接收所有发送到该组的数据报的成员资格，也可以是&lt;em&gt;特定&lt;/em&gt;于&lt;em&gt;源的&lt;/em&gt;，这意味着它表示仅接收来自特定源地址的数据报的成员资格。成员密钥是否特定于源可以通过调用其&lt;a href=&quot;membershipkey#sourceAddress--&quot;&gt; &lt;code&gt;sourceAddress&lt;/code&gt; &lt;/a&gt;方法来确定。</target>
        </trans-unit>
        <trans-unit id="8a5b6ef5de637fafac719b3e12e727fd02fec5e1" translate="yes" xml:space="preserve">
          <source>A memory access var handle is associated with an access size &lt;code&gt;S&lt;/code&gt; and an alignment constraint &lt;code&gt;B&lt;/code&gt; (both expressed in bytes). We say that a memory access operation is &lt;em&gt;fully aligned&lt;/em&gt; if it occurs at a memory address &lt;code&gt;A&lt;/code&gt; which is compatible with both alignment constraints &lt;code&gt;S&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt;. If access is fully aligned then following access modes are supported and are guaranteed to support atomic access:</source>
          <target state="translated">存储器访问变量句柄与访问大小 &lt;code&gt;S&lt;/code&gt; 和对齐约束 &lt;code&gt;B&lt;/code&gt; （均以字节表示）相关联。我们说，如果内存访问操作发生在与对齐约束 &lt;code&gt;S&lt;/code&gt; 和 &lt;code&gt;B&lt;/code&gt; 都兼容的内存地址 &lt;code&gt;A&lt;/code&gt; 上，则它是&lt;em&gt;完全对齐的&lt;/em&gt;。如果访问完全对齐，则支持以下访问模式，并保证它们支持原子访问：</target>
        </trans-unit>
        <trans-unit id="02c6853676790864de99b1f59c9c8285938b0781" translate="yes" xml:space="preserve">
          <source>A memory address models a reference into a memory location.</source>
          <target state="translated">存储器地址模型是对内存位置的引用。</target>
        </trans-unit>
        <trans-unit id="9f99cc8d57d0fba3b697ab276768a9a5d7f836d5" translate="yes" xml:space="preserve">
          <source>A memory address models a reference into a memory location. Memory addresses are typically obtained using the &lt;a href=&quot;memorysegment#baseAddress()&quot;&gt;&lt;code&gt;MemorySegment.baseAddress()&lt;/code&gt;&lt;/a&gt; method; such addresses are said to be &lt;em&gt;checked&lt;/em&gt;, and can be expressed as &lt;em&gt;offsets&lt;/em&gt; into some underlying memory segment (see &lt;a href=&quot;#segment()&quot;&gt;&lt;code&gt;segment()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#segmentOffset()&quot;&gt;&lt;code&gt;segmentOffset()&lt;/code&gt;&lt;/a&gt;). Since checked memory addresses feature both spatial and temporal bounds, these addresses can &lt;em&gt;safely&lt;/em&gt; be dereferenced using a memory access var handle (see &lt;a href=&quot;memoryhandles&quot;&gt;&lt;code&gt;MemoryHandles&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">存储器地址将引用建模到存储器位置。内存地址通常是使用&lt;a href=&quot;memorysegment#baseAddress()&quot;&gt; &lt;code&gt;MemorySegment.baseAddress()&lt;/code&gt; &lt;/a&gt;方法获得的；此类地址被称为&amp;ldquo; &lt;em&gt;checked&amp;rdquo;&lt;/em&gt;，并且可以表示为某些基础内存段中的&lt;em&gt;偏移量&lt;/em&gt;（请参见&lt;a href=&quot;#segment()&quot;&gt; &lt;code&gt;segment()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#segmentOffset()&quot;&gt; &lt;code&gt;segmentOffset()&lt;/code&gt; &lt;/a&gt;）。由于已检查的内存地址同时具有空间和时间范围，因此可以使用内存访问var句柄&lt;em&gt;安全&lt;/em&gt;地取消引用这些地址（请参阅&lt;a href=&quot;memoryhandles&quot;&gt; &lt;code&gt;MemoryHandles&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="df488fbcd4e37a3055d69e60f2a8e0121916408e" translate="yes" xml:space="preserve">
          <source>A memory layout can be used to describe the contents of a memory segment in a &lt;em&gt;language neutral&lt;/em&gt; fashion.</source>
          <target state="translated">内存布局可用于以&lt;em&gt;语言无关的&lt;/em&gt;方式描述内存段的内容。</target>
        </trans-unit>
        <trans-unit id="ef3ff9c54b287b2b3f7f6f9a0f8e1b176ade93b1" translate="yes" xml:space="preserve">
          <source>A memory layout can be used to describe the contents of a memory segment in a &lt;em&gt;language neutral&lt;/em&gt; fashion. There are two leaves in the layout hierarchy, &lt;em&gt;value layouts&lt;/em&gt;, which are used to represent values of given size and kind (see &lt;a href=&quot;valuelayout&quot;&gt;&lt;code&gt;ValueLayout&lt;/code&gt;&lt;/a&gt;) and &lt;em&gt;padding layouts&lt;/em&gt; which are used, as the name suggests, to represent a portion of a memory segment whose contents should be ignored, and which are primarily present for alignment reasons (see &lt;a href=&quot;#ofPaddingBits(long)&quot;&gt;&lt;code&gt;ofPaddingBits(long)&lt;/code&gt;&lt;/a&gt;). Some common value layout constants are defined in the &lt;a href=&quot;memorylayouts&quot;&gt;&lt;code&gt;MemoryLayouts&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">内存布局可用于以&lt;em&gt;语言无关的&lt;/em&gt;方式描述内存段的内容。布局层次结构中有两片叶子：&lt;em&gt;值布局&lt;/em&gt;（用于表示给定大小和种类的值（请参阅&lt;a href=&quot;valuelayout&quot;&gt; &lt;code&gt;ValueLayout&lt;/code&gt; &lt;/a&gt;）和&lt;em&gt;填充布局&lt;/em&gt;（用于顾名思义），用于表示一部分内存段，其内容应会被忽略，它们主要是出于对齐原因而存在（请参阅&lt;a href=&quot;#ofPaddingBits(long)&quot;&gt; &lt;code&gt;ofPaddingBits(long)&lt;/code&gt; &lt;/a&gt;）。一些常见的值布局常量在&lt;a href=&quot;memorylayouts&quot;&gt; &lt;code&gt;MemoryLayouts&lt;/code&gt; &lt;/a&gt;类中定义。</target>
        </trans-unit>
        <trans-unit id="759c3acd1cbf2f8d514c805241af3bdaa1b340bb" translate="yes" xml:space="preserve">
          <source>A memory manager is responsible for managing one or more memory pools. The garbage collector is one type of memory manager responsible for reclaiming memory occupied by unreachable objects. A Java virtual machine may have one or more memory managers. It may add or remove memory managers during execution. A memory pool can be managed by more than one memory manager.</source>
          <target state="translated">内存管理器负责管理一个或多个内存池。垃圾回收器是内存管理器的一种类型,负责回收被不可达对象占用的内存。一个Java虚拟机可能有一个或多个内存管理器。它可以在执行过程中添加或删除内存管理器。一个内存池可以由一个以上的内存管理器管理。</target>
        </trans-unit>
        <trans-unit id="bf21ff485998503fc83eb613e59967f6d9bc4ba8" translate="yes" xml:space="preserve">
          <source>A memory notification is emitted by &lt;a href=&quot;memorymxbean&quot;&gt;&lt;code&gt;MemoryMXBean&lt;/code&gt;&lt;/a&gt; when the Java virtual machine detects that the memory usage of a memory pool is exceeding a threshold value. The notification emitted will contain the memory notification information about the detected condition:</source>
          <target state="translated">当Java虚拟机检测到内存池的内存使用量超过阈值时，&lt;a href=&quot;memorymxbean&quot;&gt; &lt;code&gt;MemoryMXBean&lt;/code&gt; &lt;/a&gt;会发出内存通知。发出的通知将包含有关检测到的状况的内存通知信息：</target>
        </trans-unit>
        <trans-unit id="8ab28529f854079d6bca735fc48ddf13983bb582" translate="yes" xml:space="preserve">
          <source>A memory pool has the following attributes:</source>
          <target state="translated">一个内存池具有以下属性:</target>
        </trans-unit>
        <trans-unit id="05dcfc0734c44f5245f5a089b1b448dece950547" translate="yes" xml:space="preserve">
          <source>A memory pool represents a memory area that the Java virtual machine manages. The Java virtual machine has at least one memory pool and it may create or remove memory pools during execution. A memory pool can belong to either the heap or the non-heap memory.</source>
          <target state="translated">内存池表示Java虚拟机管理的内存区域。Java虚拟机至少有一个内存池,它可以在执行过程中创建或删除内存池。一个内存池可以属于堆内存,也可以属于非堆内存。</target>
        </trans-unit>
        <trans-unit id="2caa9f41b4d6def409d1b94d4aef7aceb2d13836" translate="yes" xml:space="preserve">
          <source>A memory segment models a contiguous region of memory.</source>
          <target state="translated">一个内存段模型是一个连续的内存区域。</target>
        </trans-unit>
        <trans-unit id="f137763f4867200f7b57d280b3a161b52eb9dc49" translate="yes" xml:space="preserve">
          <source>A memory segment models a contiguous region of memory. A memory segment is associated with both spatial and temporal bounds. Spatial bounds ensure that memory access operations on a memory segment cannot affect a memory location which falls &lt;em&gt;outside&lt;/em&gt; the boundaries of the memory segment being accessed. Temporal bounds ensure that memory access operations on a segment cannot occur after a memory segment has been closed (see &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">内存段对内存的连续区域进行建模。内存段与空间和时间范围都相关联。空间范围确保了对内存段的内存访问操作不会影响&lt;em&gt;超出&lt;/em&gt;所访问内存段边界范围的内存位置。时间范围确保关闭内存段后，不会对段执行内存访问操作（请参见&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="fa4a35c46f1a1f8fea8d8e45f0198eb4ca0e7607" translate="yes" xml:space="preserve">
          <source>A menu bar handles keyboard shortcuts for menu items, passing them along to its child menus. (Keyboard shortcuts, which are optional, provide the user with an alternative to the mouse for invoking a menu item and the action that is associated with it.) Each menu item can maintain an instance of &lt;code&gt;MenuShortcut&lt;/code&gt;. The &lt;code&gt;MenuBar&lt;/code&gt; class defines several methods, &lt;a href=&quot;#shortcuts()&quot;&gt;&lt;code&gt;shortcuts()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getShortcutMenuItem(java.awt.MenuShortcut)&quot;&gt;&lt;code&gt;getShortcutMenuItem(java.awt.MenuShortcut)&lt;/code&gt;&lt;/a&gt; that retrieve information about the shortcuts a given menu bar is managing.</source>
          <target state="translated">菜单栏处理菜单项的键盘快捷键，并将其传递到其子菜单。（键盘快捷键是可选的，为用户提供了一种替代鼠标的方式来调用菜单项以及与之关联的操作。）每个菜单项都可以维护 &lt;code&gt;MenuShortcut&lt;/code&gt; 的一个实例。在 &lt;code&gt;MenuBar&lt;/code&gt; 类定义了几个方法，&lt;a href=&quot;#shortcuts()&quot;&gt; &lt;code&gt;shortcuts()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getShortcutMenuItem(java.awt.MenuShortcut)&quot;&gt; &lt;code&gt;getShortcutMenuItem(java.awt.MenuShortcut)&lt;/code&gt; &lt;/a&gt;用于检索有关给定的菜单栏正在管理的快捷方式的信息。</target>
        </trans-unit>
        <trans-unit id="5035dd58b2fad02c6006f7e6d0c5be6150166ab0" translate="yes" xml:space="preserve">
          <source>A menu can optionally be a</source>
          <target state="translated">一个菜单可以选择是一个</target>
        </trans-unit>
        <trans-unit id="0c39c3fedba96a1dc85a3688a13359c4a0f1b393" translate="yes" xml:space="preserve">
          <source>A menu item that can be selected or deselected.</source>
          <target state="translated">一个可以选择或取消选择的菜单项。</target>
        </trans-unit>
        <trans-unit id="405567ef999c60714d2b7cf810f25c93ef8d643c" translate="yes" xml:space="preserve">
          <source>A menu item that can be selected or deselected. If selected, the menu item typically appears with a checkmark next to it. If unselected or deselected, the menu item appears without a checkmark. Like a regular menu item, a check box menu item can have either text or a graphic icon associated with it, or both.</source>
          <target state="translated">可以选择或取消选择的菜单项。如果选择,菜单项通常会在旁边出现一个复选标记。如果不选择或取消选择,则菜单项的显示没有复选标记。与普通菜单项一样,复选框菜单项可以有文字或图形图标,或两者兼有。</target>
        </trans-unit>
        <trans-unit id="659a21b7e16b76b0fda52e8389f9c126a4fd8a77" translate="yes" xml:space="preserve">
          <source>A metadata instance initialized from the contents of this &lt;code&gt;TIFFDirectory&lt;/code&gt;.</source>
          <target state="translated">从此 &lt;code&gt;TIFFDirectory&lt;/code&gt; 的内容初始化的元数据实例。</target>
        </trans-unit>
        <trans-unit id="16a1fefd1f156e716dec034d62735cb2fdb42a53" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt;, where &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; is a Java type (not &lt;code&gt;void&lt;/code&gt;) and &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; is a non-empty string, specifies that there is a readable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;. The Java type and Open type of the attribute are determined by the mapping rules below. The method &lt;code&gt;final Class getClass()&lt;/code&gt; inherited from &lt;code&gt;
        Object&lt;/code&gt; is ignored when looking for getters.</source>
          <target state="translated">方法 &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; ，其中 &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; 是Java类型（不是 &lt;code&gt;void&lt;/code&gt; ）， &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 是非空字符串，它指定存在一个称为 &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 的可读属性。属性的Java类型和Open类型由下面的映射规则确定。查找吸气剂时，将从 &lt;code&gt; Object&lt;/code&gt; 继承的方法 &lt;code&gt;final Class getClass()&lt;/code&gt; 忽略。</target>
        </trans-unit>
        <trans-unit id="457a7051128277e171a5ea7f82f57b1cd1040435" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt;, where &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; is a Java type (not &lt;code&gt;void&lt;/code&gt;) and &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; is a non-empty string, specifies that there is a readable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;. The Java type and Open type of the attribute are determined by the mapping rules below. The method &lt;code&gt;final Class getClass()&lt;/code&gt; inherited from &lt;code&gt;Object&lt;/code&gt; is ignored when looking for getters.</source>
          <target state="translated">方法 &lt;code&gt;&lt;em&gt;T&lt;/em&gt; get&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; ，其中 &lt;code&gt;&lt;em&gt;T&lt;/em&gt;&lt;/code&gt; 是Java类型（不是 &lt;code&gt;void&lt;/code&gt; ）， &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 是非空字符串，它指定存在一个称为 &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 的可读属性。属性的Java类型和Open类型由下面的映射规则确定。查找getter时，将从 &lt;code&gt;Object&lt;/code&gt; 继承的 &lt;code&gt;final Class getClass()&lt;/code&gt; 方法被忽略。</target>
        </trans-unit>
        <trans-unit id="45e0dc0f042d7646630672696718f7e2db616536" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;boolean is&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; specifies that there is a readable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; with Java type &lt;code&gt;boolean&lt;/code&gt; and Open type &lt;code&gt;SimpleType.Boolean&lt;/code&gt;.</source>
          <target state="translated">一种方法， &lt;code&gt;boolean is&lt;em&gt;N&lt;/em&gt;()&lt;/code&gt; 指定对有一个名为可读属性 &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 与Java类型 &lt;code&gt;boolean&lt;/code&gt; 和开放式 &lt;code&gt;SimpleType.Boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4a00575483612c388739a75e40677c1065a6370f" translate="yes" xml:space="preserve">
          <source>A method &lt;code&gt;void set&lt;em&gt;N&lt;/em&gt;(&lt;em&gt;T&lt;/em&gt; x)&lt;/code&gt; specifies that there is a writeable attribute called &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;. The Java type and Open type of the attribute are determined by the mapping rules below. (Of course, the name &lt;code&gt;x&lt;/code&gt; of the parameter is irrelevant.)</source>
          <target state="translated">方法 &lt;code&gt;void set&lt;em&gt;N&lt;/em&gt;(&lt;em&gt;T&lt;/em&gt; x)&lt;/code&gt; 指定存在称为 &lt;code&gt;&lt;em&gt;N&lt;/em&gt;&lt;/code&gt; 的可写属性。属性的Java类型和Open类型由下面的映射规则确定。（当然，参数的名称 &lt;code&gt;x&lt;/code&gt; 是无关紧要的。）</target>
        </trans-unit>
        <trans-unit id="9c6fa88a28a9bd29e828728ac9b5531c7d006ceb" translate="yes" xml:space="preserve">
          <source>A method declaration is &lt;a href=&quot;#isPersistent()&quot;&gt;persistent&lt;/a&gt;.</source>
          <target state="translated">方法声明是&lt;a href=&quot;#isPersistent()&quot;&gt;持久的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39fd92f3633704081b471cec4ab35144e6ebe55d" translate="yes" xml:space="preserve">
          <source>A method declaration.</source>
          <target state="translated">一个方法声明;</target>
        </trans-unit>
        <trans-unit id="5bf58281d9210c2718f012652ecb8341b9e3af78" translate="yes" xml:space="preserve">
          <source>A method declaration. The snippet is an instance of &lt;a href=&quot;methodsnippet&quot;&gt;&lt;code&gt;MethodSnippet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法声明。该代码段是&lt;a href=&quot;methodsnippet&quot;&gt; &lt;code&gt;MethodSnippet&lt;/code&gt; 的&lt;/a&gt;一个实例。</target>
        </trans-unit>
        <trans-unit id="9f151ad26a3a627668cf7977d9ea36505901b414" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a byte buffer.</source>
          <target state="translated">一种&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;字节缓冲区的方法。</target>
        </trans-unit>
        <trans-unit id="ca0c6ab07cc030a5287d27e80a03a25a67784230" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a char buffer.</source>
          <target state="translated">一种&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;char缓冲区的方法。</target>
        </trans-unit>
        <trans-unit id="4b4231f38a8bf8e304d2ab9b9dab38a325b73255" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a double buffer.</source>
          <target state="translated">一种&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;双缓冲区的方法。</target>
        </trans-unit>
        <trans-unit id="64986d2d5ed96c2dfbc0aa0bd99c07e17f5a0b82" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a float buffer.</source>
          <target state="translated">一种&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;浮动缓冲区的方法。</target>
        </trans-unit>
        <trans-unit id="b8dfbcd3cae533ef6cbb4a02c4853fa87f633721" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a long buffer.</source>
          <target state="translated">一种&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;长缓冲区的方法。</target>
        </trans-unit>
        <trans-unit id="9e34d7660fc4c604587ce011fcc3f2a57fdd4658" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; a short buffer.</source>
          <target state="translated">一种&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;短缓冲区的方法。</target>
        </trans-unit>
        <trans-unit id="b79732fa8755bda85b52323f9c34ac4c36537958" translate="yes" xml:space="preserve">
          <source>A method for &lt;a href=&quot;#compact()&quot;&gt;&lt;code&gt;compacting&lt;/code&gt;&lt;/a&gt; an int buffer.</source>
          <target state="translated">一种&lt;a href=&quot;#compact()&quot;&gt; &lt;code&gt;compacting&lt;/code&gt; &lt;/a&gt;int缓冲区的方法。</target>
        </trans-unit>
        <trans-unit id="fc4507d0bc619ee8ca9395cabbe1e3fe755b1d57" translate="yes" xml:space="preserve">
          <source>A method handle can be obtained on a method, constructor, or field which is declared with Java generic types. As with the Core Reflection API, the type of the method handle will be constructed from the erasure of the source-level type. When a method handle is invoked, the types of its arguments or the return value cast type may be generic types or type instances. If this occurs, the compiler will replace those types by their erasures when it constructs the symbolic type descriptor for the &lt;code&gt;invokevirtual&lt;/code&gt; instruction.</source>
          <target state="translated">可以在使用Java泛型类型声明的方法，构造函数或字段上获取方法句柄。与Core Reflection API一样，方法句柄的类型将从擦除源级别类型的方式构造。调用方法句柄时，其参数的类型或返回值强制类型可以是泛型类型或类型实例。如果发生这种情况，则编译器在为 &lt;code&gt;invokevirtual&lt;/code&gt; 指令构造符号类型描述符时，将通过擦除来替换这些类型。</target>
        </trans-unit>
        <trans-unit id="6b21bdd4c6300a890a95cf204bbba7785f32d420" translate="yes" xml:space="preserve">
          <source>A method handle can be obtained on a method, constructor, or field which is declared with Java generic types. As with the Core Reflection API, the type of the method handle will constructed from the erasure of the source-level type. When a method handle is invoked, the types of its arguments or the return value cast type may be generic types or type instances. If this occurs, the compiler will replace those types by their erasures when it constructs the symbolic type descriptor for the &lt;code&gt;invokevirtual&lt;/code&gt; instruction.</source>
          <target state="translated">可以在使用Java泛型类型声明的方法，构造函数或字段上获取方法句柄。与Core Reflection API一样，方法句柄的类型将从擦除源级别的类型开始构造。调用方法句柄时，其参数的类型或返回值强制类型可以是泛型类型或类型实例。如果发生这种情况，则编译器在为 &lt;code&gt;invokevirtual&lt;/code&gt; 指令构造符号类型描述符时，将通过擦除来替换这些类型。</target>
        </trans-unit>
        <trans-unit id="f85e865b4901f7eb077fe1f7678da72b01b68a19" translate="yes" xml:space="preserve">
          <source>A method handle contains a pair of special invoker methods called &lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;. Both invoker methods provide direct access to the method handle's underlying method, constructor, field, or other operation, as modified by transformations of arguments and return values. Both invokers accept calls which exactly match the method handle's own type. The plain, inexact invoker also accepts a range of other call types.</source>
          <target state="translated">方法句柄包含一对特殊的调用程序方法，分别称为&lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;。两种调用程序方法都可以直接访问方法句柄的基础方法，构造函数，字段或其他操作，这些操作已通过参数和返回值的转换进行了修改。两个调用程序都接受与方法句柄自己的类型完全匹配的调用。普通的，不精确的调用者还接受一系列其他调用类型。</target>
        </trans-unit>
        <trans-unit id="8baa56b94df191753f371cdf316dbc026a4b19c5" translate="yes" xml:space="preserve">
          <source>A method handle contains a pair of special invoker methods called &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt;. Both invoker methods provide direct access to the method handle's underlying method, constructor, field, or other operation, as modified by transformations of arguments and return values. Both invokers accept calls which exactly match the method handle's own type. The plain, inexact invoker also accepts a range of other call types.</source>
          <target state="translated">方法句柄包含一对特殊的调用程序方法，分别称为&lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt;。两种调用程序方法都可以直接访问方法句柄的基础方法，构造函数，字段或其他操作，这些参数已通过参数和返回值的转换进行了修改。两个调用程序都接受与方法句柄自己的类型完全匹配的调用。普通的，不精确的调用者还接受其他类型的调用。</target>
        </trans-unit>
        <trans-unit id="6a44db104bf074a038e01994c9e6da4c50b24b95" translate="yes" xml:space="preserve">
          <source>A method handle for a constructor</source>
          <target state="translated">一个构造函数的方法句柄</target>
        </trans-unit>
        <trans-unit id="4dfe0cb68661a263dc4a2b188c8acc042b9f9641" translate="yes" xml:space="preserve">
          <source>A method handle for a method invoked as with &lt;code&gt;invokeinterface&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;invokeinterface&lt;/code&gt; 一起调用的方法的方法句柄</target>
        </trans-unit>
        <trans-unit id="105d796ffaedd8f1f837279e30c9e41a766f71b3" translate="yes" xml:space="preserve">
          <source>A method handle for a method invoked as with &lt;code&gt;invokespecial&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;invokespecial&lt;/code&gt; 调用的方法的方法句柄</target>
        </trans-unit>
        <trans-unit id="b5bd9b52fdbc0eb3883abeef2c099c065513e10a" translate="yes" xml:space="preserve">
          <source>A method handle for a method invoked as with &lt;code&gt;invokestatic&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;invokestatic&lt;/code&gt; 一起调用的方法的方法句柄</target>
        </trans-unit>
        <trans-unit id="d2e147ff67ec41717e16e80111a40bb28ea08866" translate="yes" xml:space="preserve">
          <source>A method handle for a method invoked as with &lt;code&gt;invokevirtual&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;invokevirtual&lt;/code&gt; 一起调用的方法的方法句柄</target>
        </trans-unit>
        <trans-unit id="4598a3d8c1d223470eefa2dfb16d976c1f1501ea" translate="yes" xml:space="preserve">
          <source>A method handle for a read accessor for a static field</source>
          <target state="translated">静态字段的读取访问器的方法句柄。</target>
        </trans-unit>
        <trans-unit id="1ab3463c5754346928288d58d379fad86f155581" translate="yes" xml:space="preserve">
          <source>A method handle for a read accessor for an instance field</source>
          <target state="translated">实例字段的读取访问器的方法句柄。</target>
        </trans-unit>
        <trans-unit id="a66b53292dd3a3d8502c8a8ff51169d8b1d7cf5e" translate="yes" xml:space="preserve">
          <source>A method handle for a write accessor for a static field</source>
          <target state="translated">静态字段的写访问器的方法句柄。</target>
        </trans-unit>
        <trans-unit id="e5e013f62889afcf8d9ba24bd4f27c30455b8b85" translate="yes" xml:space="preserve">
          <source>A method handle for a write accessor for an instance field</source>
          <target state="translated">实例字段的写访问器的方法句柄。</target>
        </trans-unit>
        <trans-unit id="354331b44385d72814b44d644ce43d609d400d36" translate="yes" xml:space="preserve">
          <source>A method handle for an interface method invoked as with &lt;code&gt;invokespecial&lt;/code&gt;</source>
          <target state="translated">与 &lt;code&gt;invokespecial&lt;/code&gt; 调用的接口方法的方法句柄</target>
        </trans-unit>
        <trans-unit id="572fd61588901813858a5e05ef980f150779222e" translate="yes" xml:space="preserve">
          <source>A method handle is a typed, directly executable reference to an underlying method, constructor, field, or similar low-level operation, with optional transformations of arguments or return values.</source>
          <target state="translated">方法句柄是一个类型化的、可直接执行的对底层方法、构造函数、字段或类似的低级操作的引用,参数或返回值的转换是可选的。</target>
        </trans-unit>
        <trans-unit id="601e9818f0485220f5df6a6df4003865ff1dda61" translate="yes" xml:space="preserve">
          <source>A method handle is a typed, directly executable reference to an underlying method, constructor, field, or similar low-level operation, with optional transformations of arguments or return values. These transformations are quite general, and include such patterns as &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;conversion&lt;/a&gt;, &lt;a href=&quot;#bindTo(java.lang.Object)&quot;&gt;insertion&lt;/a&gt;, &lt;a href=&quot;methodhandles#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;deletion&lt;/a&gt;, and &lt;a href=&quot;methodhandles#filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...)&quot;&gt;substitution&lt;/a&gt;.</source>
          <target state="translated">方法句柄是对基础方法，构造函数，字段或类似的低级操作的类型化，直接可执行的引用，具有自变量或返回值的可选转换。这些转换非常普遍，并且包括诸如&lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;转换&lt;/a&gt;，&lt;a href=&quot;#bindTo(java.lang.Object)&quot;&gt;插入&lt;/a&gt;，&lt;a href=&quot;methodhandles#dropArguments(java.lang.invoke.MethodHandle,int,java.util.List)&quot;&gt;删除&lt;/a&gt;和&lt;a href=&quot;methodhandles#filterArguments(java.lang.invoke.MethodHandle,int,java.lang.invoke.MethodHandle...)&quot;&gt;替换之&lt;/a&gt;类的模式。</target>
        </trans-unit>
        <trans-unit id="3fa05ec6e74c0fc625c0541a82a118964114ff54" translate="yes" xml:space="preserve">
          <source>A method handle is a typed, directly executable reference to an underlying method, constructor, field, or similar low-level operation, with optional transformations of arguments or return values. These transformations are quite general, and include such patterns as &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;conversion&lt;/a&gt;, &lt;a href=&quot;methodhandle#bindTo-java.lang.Object-&quot;&gt;insertion&lt;/a&gt;, &lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt;deletion&lt;/a&gt;, and &lt;a href=&quot;methodhandles#filterArguments-java.lang.invoke.MethodHandle-int-java.lang.invoke.MethodHandle...-&quot;&gt;substitution&lt;/a&gt;.</source>
          <target state="translated">方法句柄是对基础方法，构造函数，字段或类似的低级操作的类型化，直接可执行的引用，并带有自变量或返回值的可选转换。这些转换非常笼统，包括&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;转换&lt;/a&gt;，&lt;a href=&quot;methodhandle#bindTo-java.lang.Object-&quot;&gt;插入&lt;/a&gt;，&lt;a href=&quot;methodhandles#dropArguments-java.lang.invoke.MethodHandle-int-java.util.List-&quot;&gt;删除&lt;/a&gt;和&lt;a href=&quot;methodhandles#filterArguments-java.lang.invoke.MethodHandle-int-java.lang.invoke.MethodHandle...-&quot;&gt;替换之&lt;/a&gt;类的模式。</target>
        </trans-unit>
        <trans-unit id="5d952641ca1800b10d6cffa65e1d0f020bc88924" translate="yes" xml:space="preserve">
          <source>A method handle's type controls the types of invocations it accepts, and the kinds of transformations that apply to it.</source>
          <target state="translated">一个方法句柄的类型控制着它所接受的调用类型,以及适用于它的转换类型。</target>
        </trans-unit>
        <trans-unit id="868a3299e2184db727b0edc3655d74054eb7fe70" translate="yes" xml:space="preserve">
          <source>A method is not required to declare in its &lt;code&gt;throws&lt;/code&gt; clause any subclasses of &lt;code&gt;Error&lt;/code&gt; that might be thrown during the execution of the method but not caught, since these errors are abnormal conditions that should never occur. That is, &lt;code&gt;Error&lt;/code&gt; and its subclasses are regarded as unchecked exceptions for the purposes of compile-time checking of exceptions.</source>
          <target state="translated">不需要方法在其 &lt;code&gt;throws&lt;/code&gt; 子句中声明可能在方法执行期间抛出但未被捕获的 &lt;code&gt;Error&lt;/code&gt; 的任何子类，因为这些错误是不应该发生的异常情况。也就是说，出于编译时检查异常的目的， &lt;code&gt;Error&lt;/code&gt; 及其子类被视为未检查的异常。</target>
        </trans-unit>
        <trans-unit id="cede3bc5c286fda8f14769935e7e5e84460b8066" translate="yes" xml:space="preserve">
          <source>A method of communication between a debugger and a target VM.</source>
          <target state="translated">一种调试器与目标虚拟机之间的通信方法。</target>
        </trans-unit>
        <trans-unit id="6726edbff007e4538c610e19f079ef101b40c9c7" translate="yes" xml:space="preserve">
          <source>A method of connection between a debugger and a target VM.</source>
          <target state="translated">调试器与目标虚拟机之间的连接方法。</target>
        </trans-unit>
        <trans-unit id="870290944221d44483332ff5a93c4c5b9f5fbe77" translate="yes" xml:space="preserve">
          <source>A method of connection between a debugger and a target VM. A connector encapsulates exactly one &lt;a href=&quot;transport&quot;&gt;&lt;code&gt;Transport&lt;/code&gt;&lt;/a&gt;. used to establish the connection. Each connector has a set of arguments which controls its operation. The arguments are stored as a map, keyed by a string. Each implementation defines the string argument keys it accepts.</source>
          <target state="translated">调试器和目标VM之间的连接方法。连接器恰好封装了一个&lt;a href=&quot;transport&quot;&gt; &lt;code&gt;Transport&lt;/code&gt; &lt;/a&gt;。用于建立连接。每个连接器都有一组控制其操作的参数。参数存储为映射，由字符串键控。每个实现都定义了它接受的字符串参数键。</target>
        </trans-unit>
        <trans-unit id="9eec3fbd4625bc7c0178910686b6b7a4115fd480" translate="yes" xml:space="preserve">
          <source>A method reference may refer either to a static or non-static method. In the non-static case, the method handle type includes an explicit receiver argument, prepended before any other arguments. In the method handle's type, the initial receiver argument is typed according to the class under which the method was initially requested. (E.g., if a non-static method handle is obtained via &lt;code&gt;ldc&lt;/code&gt;, the type of the receiver is the class named in the constant pool entry.)</source>
          <target state="translated">方法参考可以指静态或非静态方法。在非静态情况下，方法句柄类型包括一个显式的接收器参数，该参数在任何其他参数之前。在方法句柄的类型中，初始接收者参数是根据最初请求该方法的类来键入的。（例如，如果通过 &lt;code&gt;ldc&lt;/code&gt; 获得了非静态方法句柄，则接收器的类型为常量池条目中命名的类。）</target>
        </trans-unit>
        <trans-unit id="cad269b9da91c19f486eedab75bf4efc3bb48451" translate="yes" xml:space="preserve">
          <source>A method reference to the exception constructor with an empty argument list can be used as the supplier. For example, &lt;code&gt;IllegalStateException::new&lt;/code&gt;</source>
          <target state="translated">带有空参数列表的对异常构造函数的方法引用可用作提供者。例如， &lt;code&gt;IllegalStateException::new&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9898a76c96e7d7d28d9424a80b3fbd1abace77a" translate="yes" xml:space="preserve">
          <source>A method that result-bearing CountedCompleters may optionally use to help maintain result data.</source>
          <target state="translated">一个方法,结果承载的CountedCompleters可以选择使用,以帮助维护结果数据。</target>
        </trans-unit>
        <trans-unit id="80ff713d25db02a3cefe09efa77844101963da11" translate="yes" xml:space="preserve">
          <source>A method that result-bearing CountedCompleters may optionally use to help maintain result data. By default, does nothing. Overrides are not recommended. However, if this method is overridden to update existing objects or fields, then it must in general be defined to be thread-safe.</source>
          <target state="translated">一个方法,结果承载的CountedCompleters可以选择使用,以帮助维护结果数据。默认情况下,不做任何事情。不建议重写。但是,如果这个方法被重写来更新现有的对象或字段,那么一般来说,它必须被定义为线程安全的。</target>
        </trans-unit>
        <trans-unit id="314e124337cca6e52bd50063a6fcb8a5228fd544" translate="yes" xml:space="preserve">
          <source>A method to make a separate copy of the &lt;code&gt;JoinRowSet&lt;/code&gt; object</source>
          <target state="translated">制作 &lt;code&gt;JoinRowSet&lt;/code&gt; 对象的单独副本的方法</target>
        </trans-unit>
        <trans-unit id="84063deeb0e5c66bc0b8ac1435169c1c18f56b89" translate="yes" xml:space="preserve">
          <source>A method to obtain a mask for any existing mouse button.</source>
          <target state="translated">一种为任何现有的鼠标按钮获取面具的方法。</target>
        </trans-unit>
        <trans-unit id="9af5485dfac5301c3eba09595d3817d30c0bb162" translate="yes" xml:space="preserve">
          <source>A method to obtain a mask for any existing mouse button. The returned mask may be used for different purposes. Following are some of them:</source>
          <target state="translated">获取任何现有鼠标按钮的掩码的方法。返回的掩码可以用于不同的目的。以下是其中的一些用途。</target>
        </trans-unit>
        <trans-unit id="1b25841327949a6f44612d8d6ab0ea4932ceee3e" translate="yes" xml:space="preserve">
          <source>A method to request a list of DOM implementations that support the specified features and versions, as specified in .</source>
          <target state="translated">一个请求支持指定功能和版本的DOM实现列表的方法,如在.NET中指定。</target>
        </trans-unit>
        <trans-unit id="574e4904b4e4713da2d82697faf33315da724d05" translate="yes" xml:space="preserve">
          <source>A method to request the first DOM implementation that supports the specified features.</source>
          <target state="translated">请求第一个支持指定功能的DOM实现的方法。</target>
        </trans-unit>
        <trans-unit id="0b3255540dfdd307e7a4bb732db52547bb5ee7ad" translate="yes" xml:space="preserve">
          <source>A method to set the float value with a specified unit.</source>
          <target state="translated">用指定单位设置浮点数的方法。</target>
        </trans-unit>
        <trans-unit id="1ef0101911fdac8571a7022598f558662e3988f4" translate="yes" xml:space="preserve">
          <source>A method to set the float value with a specified unit. If the property attached with this value can not accept the specified unit or the float value, the value will be unchanged and a &lt;code&gt;DOMException&lt;/code&gt; will be raised.</source>
          <target state="translated">一种以指定单位设置浮点值的方法。如果与此值关联的属性不能接受指定的单位或float值，则该值将保持不变，并且将引发 &lt;code&gt;DOMException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ac56890c6c3e7134b28131fe49925bf07d4a13a" translate="yes" xml:space="preserve">
          <source>A method to set the string value with the specified unit.</source>
          <target state="translated">设置指定单位的字符串值的方法。</target>
        </trans-unit>
        <trans-unit id="11f05527daf5300a480138002e23f344ebbd48bd" translate="yes" xml:space="preserve">
          <source>A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit or the string value, the value will be unchanged and a &lt;code&gt;DOMException&lt;/code&gt; will be raised.</source>
          <target state="translated">一种以指定单位设置字符串值的方法。如果附加到此值的属性不能接受指定的单位或字符串值，则该值将保持不变，并且将引发 &lt;code&gt;DOMException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4afeaccf26c0c9c61c626d5668b50078b9e9509" translate="yes" xml:space="preserve">
          <source>A method type represents the arguments and return type accepted and returned by a method handle, or the arguments and return type passed and expected by a method handle caller.</source>
          <target state="translated">方法类型表示方法句柄接受和返回的参数和返回类型,或方法句柄调用者传递和期望的参数和返回类型。</target>
        </trans-unit>
        <trans-unit id="7753aab8f09d05964bb597b07157886ec8f0d15c" translate="yes" xml:space="preserve">
          <source>A method type represents the arguments and return type accepted and returned by a method handle, or the arguments and return type passed and expected by a method handle caller. Method types must be properly matched between a method handle and all its callers, and the JVM's operations enforce this matching at, specifically during calls to &lt;a href=&quot;methodhandle#invokeExact(java.lang.Object...)&quot;&gt;&lt;code&gt;MethodHandle.invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;MethodHandle.invoke&lt;/code&gt;&lt;/a&gt;, and during execution of &lt;code&gt;invokedynamic&lt;/code&gt; instructions.</source>
          <target state="translated">方法类型表示方法句柄接受并返回的参数和返回类型，或者方法句柄调用者传递并期望的参数和返回类型。方法类型必须在方法句柄及其所有调用者之间正确匹配，并且JVM的操作会在此条件处强制执行此匹配，特别是在调用&lt;a href=&quot;methodhandle#invokeExact(java.lang.Object...)&quot;&gt; &lt;code&gt;MethodHandle.invokeExact&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;MethodHandle.invoke&lt;/code&gt; &lt;/a&gt;期间以及执行 &lt;code&gt;invokedynamic&lt;/code&gt; 指令期间。</target>
        </trans-unit>
        <trans-unit id="71a2dc9fcf19a2c5b0704beb5103aeb20daf64e4" translate="yes" xml:space="preserve">
          <source>A method type represents the arguments and return type accepted and returned by a method handle, or the arguments and return type passed and expected by a method handle caller. Method types must be properly matched between a method handle and all its callers, and the JVM's operations enforce this matching at, specifically during calls to &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;MethodHandle.invokeExact&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;MethodHandle.invoke&lt;/code&gt;&lt;/a&gt;, and during execution of &lt;code&gt;invokedynamic&lt;/code&gt; instructions.</source>
          <target state="translated">方法类型表示方法句柄接受和返回的参数和返回类型，或者方法句柄调用者传递和期望的参数和返回类型。方法类型必须在方法句柄及其所有调用者之间正确匹配，并且JVM的操作会在此条件处强制执行此匹配，特别是在调用&lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt; &lt;code&gt;MethodHandle.invokeExact&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;MethodHandle.invoke&lt;/code&gt; &lt;/a&gt;期间以及执行 &lt;code&gt;invokedynamic&lt;/code&gt; 指令期间。</target>
        </trans-unit>
        <trans-unit id="45fcaa635da8696543cc6670e9a6f2c07be4af8b" translate="yes" xml:space="preserve">
          <source>A method, constructor, or initializer.</source>
          <target state="translated">一个方法、构造函数或初始化器。</target>
        </trans-unit>
        <trans-unit id="d107594adcb7aadca22825c251cefea0649e7b80" translate="yes" xml:space="preserve">
          <source>A method.</source>
          <target state="translated">一种方法。</target>
        </trans-unit>
        <trans-unit id="544432bdda96d5f387efdfc36348983b0031d9c4" translate="yes" xml:space="preserve">
          <source>A method. The only &lt;code&gt;SubKind&lt;/code&gt; for &lt;a href=&quot;snippet.kind#METHOD&quot;&gt;&lt;code&gt;Snippet.Kind.METHOD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个方法。唯一 &lt;code&gt;SubKind&lt;/code&gt; 为&lt;a href=&quot;snippet.kind#METHOD&quot;&gt; &lt;code&gt;Snippet.Kind.METHOD&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9b3694b32756ca8f2db40531582e67b2bc3f1034" translate="yes" xml:space="preserve">
          <source>A minimal Http server example is shown below:</source>
          <target state="translated">下面是一个最小的Http服务器的例子。</target>
        </trans-unit>
        <trans-unit id="0b155a1bb88c0bf0613eda5b33193ca7093a6f16" translate="yes" xml:space="preserve">
          <source>A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the process builder's &lt;a href=&quot;#environment()&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在某些操作系统上启动进程可能需要最少的一组与系统相关的环境变量。因此，子流程可能会继承流程构建器的&lt;a href=&quot;#environment()&quot;&gt; &lt;code&gt;environment()&lt;/code&gt; &lt;/a&gt;中的设置之外的其他环境变量设置。</target>
        </trans-unit>
        <trans-unit id="a6157c9c5a862c0de70fda2d64867e07de05695a" translate="yes" xml:space="preserve">
          <source>A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the process builder's &lt;a href=&quot;processbuilder#environment--&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">在某些操作系统上启动进程可能需要最少的一组与系统相关的环境变量。因此，子流程可能会继承流程构建器的&lt;a href=&quot;processbuilder#environment--&quot;&gt; &lt;code&gt;environment()&lt;/code&gt; &lt;/a&gt;中的设置之外的其他环境变量设置。</target>
        </trans-unit>
        <trans-unit id="d78868ad6806cc456fd63e85f5e434673de3bcbf" translate="yes" xml:space="preserve">
          <source>A minimal set of system dependent environment variables may be required to start a process on some operating systems. As a result, the subprocess may inherit additional environment variable settings beyond those in the specified environment.</source>
          <target state="translated">在某些操作系统上,可能需要一组最小的系统依赖性环境变量来启动进程。因此,子进程可能会继承指定环境中的环境变量设置之外的其他环境变量设置。</target>
        </trans-unit>
        <trans-unit id="90de6152ceb7e2040443e1d839e2daeb98a99880" translate="yes" xml:space="preserve">
          <source>A minute is represented by an integer from 0 to 59 in the usual manner.</source>
          <target state="translated">一分钟用通常的方式从0到59的整数表示。</target>
        </trans-unit>
        <trans-unit id="3c0ab4f66be133a5f69f2ffef00b81037f775e04" translate="yes" xml:space="preserve">
          <source>A mirror of a class in the target VM.</source>
          <target state="translated">目标虚拟机中一个类的镜像。</target>
        </trans-unit>
        <trans-unit id="af035544db33d41a2b74bb42c05d9041a8d3ef56" translate="yes" xml:space="preserve">
          <source>A mirror of a class in the target VM. A ClassType is a refinement of &lt;a href=&quot;referencetype&quot;&gt;&lt;code&gt;ReferenceType&lt;/code&gt;&lt;/a&gt; that applies to true classes in the JLS sense of the definition (not an interface, not an array type). Any &lt;a href=&quot;objectreference&quot;&gt;&lt;code&gt;ObjectReference&lt;/code&gt;&lt;/a&gt; that mirrors an instance of such a class will have a ClassType as its type.</source>
          <target state="translated">目标虚拟机中类的镜像。ClassType是&lt;a href=&quot;referencetype&quot;&gt; &lt;code&gt;ReferenceType&lt;/code&gt; &lt;/a&gt;的改进，适用于在JLS定义意义上的真实类（不是接口，不是数组类型）。镜像此类实例的任何&lt;a href=&quot;objectreference&quot;&gt; &lt;code&gt;ObjectReference&lt;/code&gt; &lt;/a&gt;都将使用ClassType作为其类型。</target>
        </trans-unit>
        <trans-unit id="589f9834580f02da861e523043a2544d234bfca5" translate="yes" xml:space="preserve">
          <source>A mirror of an interface in the target VM.</source>
          <target state="translated">目标虚拟机中接口的镜像。</target>
        </trans-unit>
        <trans-unit id="f9a913b43154879eabc8f4bc721c64c9b1d026ab" translate="yes" xml:space="preserve">
          <source>A mirror of an interface in the target VM. An InterfaceType is a refinement of &lt;a href=&quot;referencetype&quot;&gt;&lt;code&gt;ReferenceType&lt;/code&gt;&lt;/a&gt; that applies to true interfaces in the JLS sense of the definition (not a class, not an array type). An interface type will never be returned by &lt;a href=&quot;objectreference#referenceType()&quot;&gt;&lt;code&gt;ObjectReference.referenceType()&lt;/code&gt;&lt;/a&gt;, but it may be in the list of implemented interfaces for a &lt;a href=&quot;classtype&quot;&gt;&lt;code&gt;ClassType&lt;/code&gt;&lt;/a&gt; that is returned by that method.</source>
          <target state="translated">目标虚拟机中接口的镜像。InterfaceType是&lt;a href=&quot;referencetype&quot;&gt; &lt;code&gt;ReferenceType&lt;/code&gt; &lt;/a&gt;的改进，适用于在JLS定义意义上的真实接口（不是类，不是数组类型）。接口类型永远不会由&lt;a href=&quot;objectreference#referenceType()&quot;&gt; &lt;code&gt;ObjectReference.referenceType()&lt;/code&gt; &lt;/a&gt;返回，但是它可能在该方法返回的&lt;a href=&quot;classtype&quot;&gt; &lt;code&gt;ClassType&lt;/code&gt; &lt;/a&gt;的已实现接口列表中。</target>
        </trans-unit>
        <trans-unit id="2fbb404279daedadb48120d3ffbc5c7f91c86dc0" translate="yes" xml:space="preserve">
          <source>A mirror that has a &lt;a href=&quot;location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">具有&lt;a href=&quot;location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; 的&lt;/a&gt;镜子。</target>
        </trans-unit>
        <trans-unit id="2a2b165d0ebb6938fa640f88e06d14ff5829009a" translate="yes" xml:space="preserve">
          <source>A mix-in style interface for marking objects that should be acted upon after a given delay.</source>
          <target state="translated">一个混搭风格的界面,用于标记在给定延迟后应该被执行的对象。</target>
        </trans-unit>
        <trans-unit id="a82b2f3ea80435da0528df31d8de211f9f131bb9" translate="yes" xml:space="preserve">
          <source>A mixer can support synchronization of its lines. When one line in a synchronized group is started or stopped, the other lines in the group automatically start or stop simultaneously with the explicitly affected one.</source>
          <target state="translated">混音器可以支持其线路的同步化。当同步组中的一条线被启动或停止时,该组中的其他线会自动与明确受影响的线同时启动或停止。</target>
        </trans-unit>
        <trans-unit id="6605ccbd86386660b3cccfb6c44a5bbaf230733d" translate="yes" xml:space="preserve">
          <source>A mixer is an audio device with one or more lines.</source>
          <target state="translated">混音器是一种带有一条或多条线路的音频设备。</target>
        </trans-unit>
        <trans-unit id="d9e59a59c28f466552e7a1512eef543e2311cb0a" translate="yes" xml:space="preserve">
          <source>A mixer is an audio device with one or more lines. It need not be designed for mixing audio signals. A mixer that actually mixes audio has multiple input (source) lines and at least one output (target) line. The former are often instances of classes that implement &lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;, and the latter, &lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;. &lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt; objects, too, are either source lines or target lines. A mixer can accept prerecorded, loopable sound as input, by having some of its source lines be instances of objects that implement the &lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">调音台是具有一条或多条线路的音频设备。它不必设计用于混合音频信号。实际混合音频的混合器具有多条输入（源）线和至少一条输出（目标）线。前者通常是实现&lt;a href=&quot;sourcedataline&quot;&gt; &lt;code&gt;SourceDataLine&lt;/code&gt; &lt;/a&gt;的类的实例，而后者是&lt;a href=&quot;targetdataline&quot;&gt; &lt;code&gt;TargetDataLine&lt;/code&gt; &lt;/a&gt;的类的实例。&lt;a href=&quot;port&quot;&gt; &lt;code&gt;Port&lt;/code&gt; &lt;/a&gt;对象也可以是源线或目标线。通过使混音器的某些源线成为实现&lt;a href=&quot;clip&quot;&gt; &lt;code&gt;Clip&lt;/code&gt; &lt;/a&gt;接口的对象的实例，混音器可以接受预先录制的，可循环播放的声音作为输入。</target>
        </trans-unit>
        <trans-unit id="f0a85bd03cce327d0a024b8ca3c5739ec1759ae7" translate="yes" xml:space="preserve">
          <source>A mixer is an audio device with one or more lines. It need not be designed for mixing audio signals. A mixer that actually mixes audio has multiple input (source) lines and at least one output (target) line. The former are often instances of classes that implement &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, and the latter, &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; objects, too, are either source lines or target lines. A mixer can accept prerecorded, loopable sound as input, by having some of its source lines be instances of objects that implement the &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; interface.</source>
          <target state="translated">调音台是具有一条或多条线路的音频设备。它不必设计用于混合音频信号。实际混合音频的混合器具有多条输入（源）线和至少一条输出（目标）线。前者通常是实现 &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 的类的实例，而后者是 &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 的类的实例。 &lt;code&gt;&lt;a href=&quot;port&quot;&gt;&lt;code&gt;Port&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 对象也可以是源线或目标线。通过使混音器的某些源线成为实现 &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 接口的对象的实例，混音器可以接受预录的可循环声音作为输入。</target>
        </trans-unit>
        <trans-unit id="eb3efede6328869ca7c41918f11095f6b2a95ea9" translate="yes" xml:space="preserve">
          <source>A mixin interface for an element that has a qualified name.</source>
          <target state="translated">具有限定名称的元素的混合接口。</target>
        </trans-unit>
        <trans-unit id="940bc0118071492b342d59cad911ef90c1786c35" translate="yes" xml:space="preserve">
          <source>A mixin interface for an element that has type parameters.</source>
          <target state="translated">一个有类型参数的元素的混搭接口。</target>
        </trans-unit>
        <trans-unit id="85bfe50b01099694ef5f3fdf2cd07cd87cc85364" translate="yes" xml:space="preserve">
          <source>A mnemonic must correspond to a single key on the keyboard and should be specified using one of the &lt;code&gt;VK_XXX&lt;/code&gt; keycodes defined in &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; or one of the extended keycodes obtained through &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt;. Mnemonics are case-insensitive, therefore a key event with the corresponding keycode would cause the button to be activated whether or not the Shift modifier was pressed.</source>
          <target state="translated">助记符必须与键盘上的单个键相对应，并且应使用 &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; 中定义的 &lt;code&gt;VK_XXX&lt;/code&gt; 键码之一或通过 &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt; 获得的扩展键码之一来指定。助记符不区分大小写，因此无论是否按下Shift修饰键，带有相应键码的键事件都将导致按钮被激活。</target>
        </trans-unit>
        <trans-unit id="6fbe55459253ff7e43ccf4d93d0aac5b438e89c7" translate="yes" xml:space="preserve">
          <source>A mnemonic must correspond to a single key on the keyboard and should be specified using one of the &lt;code&gt;VK_XXX&lt;/code&gt; keycodes defined in &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt;. These codes and the wider array of codes for international keyboards may be obtained through &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt;. Mnemonics are case-insensitive, therefore a key event with the corresponding keycode would cause the button to be activated whether or not the Shift modifier was pressed.</source>
          <target state="translated">助记符必须对应于键盘上的单个键，并且应使用 &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; 中定义的 &lt;code&gt;VK_XXX&lt;/code&gt; 键码之一来指定。可以通过 &lt;code&gt;java.awt.event.KeyEvent.getExtendedKeyCodeForChar&lt;/code&gt; 获得这些代码以及用于国际键盘的更多代码。助记符不区分大小写，因此无论是否按下Shift修饰键，带有相应键码的键事件都将导致按钮被激活。</target>
        </trans-unit>
        <trans-unit id="dccf7abbdd783e10b0eaedc81b7d45650fa6829a" translate="yes" xml:space="preserve">
          <source>A model for a potentially unbounded sequence of object values.</source>
          <target state="translated">一个潜在的无界对象值序列的模型。</target>
        </trans-unit>
        <trans-unit id="b9a0e61f9edac0df5cf8ebd8c21c30ffc057a602" translate="yes" xml:space="preserve">
          <source>A model for a potentially unbounded sequence of object values. This model is similar to &lt;code&gt;ListModel&lt;/code&gt; however there are some important differences:</source>
          <target state="translated">一个可能无限的对象值序列的模型。此模型与 &lt;code&gt;ListModel&lt;/code&gt; 相似，但是有一些重要区别：</target>
        </trans-unit>
        <trans-unit id="ef7797cc5b0a0ddbc8a93f2cab350d859a88a7bf" translate="yes" xml:space="preserve">
          <source>A model that supports at most one indexed selection.</source>
          <target state="translated">最多支持一个索引选择的模型。</target>
        </trans-unit>
        <trans-unit id="113198bff2c471d9a1340e1c7395aba0b81a05b8" translate="yes" xml:space="preserve">
          <source>A model that supports selecting a &lt;code&gt;Color&lt;/code&gt;.</source>
          <target state="translated">支持选择 &lt;code&gt;Color&lt;/code&gt; 的模型。</target>
        </trans-unit>
        <trans-unit id="75a1381c14d2290171b492582cd78cc9f246be75" translate="yes" xml:space="preserve">
          <source>A moderately condensed width.</source>
          <target state="translated">一个适度浓缩的宽度。</target>
        </trans-unit>
        <trans-unit id="8d188161e9d611c063510995c84aefe5b9b8bceb" translate="yes" xml:space="preserve">
          <source>A moderately extended width.</source>
          <target state="translated">一个适度延伸的宽度。</target>
        </trans-unit>
        <trans-unit id="97d801ad32671b3e691c89407615fb7c0e1225da" translate="yes" xml:space="preserve">
          <source>A moderately heavier weight than &lt;code&gt;WEIGHT_BOLD&lt;/code&gt;.</source>
          <target state="translated">重量比 &lt;code&gt;WEIGHT_BOLD&lt;/code&gt; 适中。</target>
        </trans-unit>
        <trans-unit id="ec770c5cec376cec7cab568da145cc8cefb435ff" translate="yes" xml:space="preserve">
          <source>A moderately heavier weight than &lt;code&gt;WEIGHT_REGULAR&lt;/code&gt;.</source>
          <target state="translated">比 &lt;code&gt;WEIGHT_REGULAR&lt;/code&gt; 适中的重量。</target>
        </trans-unit>
        <trans-unit id="a659fd009867c7b19b8a9492e01adae960c27290" translate="yes" xml:space="preserve">
          <source>A moderately lighter weight than &lt;code&gt;WEIGHT_BOLD&lt;/code&gt;.</source>
          <target state="translated">比 &lt;code&gt;WEIGHT_BOLD&lt;/code&gt; 轻一些。</target>
        </trans-unit>
        <trans-unit id="b00dd7f7c7c0de87dc4b914ed635255aa8bdd375" translate="yes" xml:space="preserve">
          <source>A modifier on a module dependence.</source>
          <target state="translated">模块依赖性的修饰符。</target>
        </trans-unit>
        <trans-unit id="1f66a47c471b55a1f2837bdd92e8d02f3fbcf0b9" translate="yes" xml:space="preserve">
          <source>A modifier on a module.</source>
          <target state="translated">模块上的一个修饰符。</target>
        </trans-unit>
        <trans-unit id="9c827a6d1160b76111dacfc9cf7d5c1b048cb4d3" translate="yes" xml:space="preserve">
          <source>A modifier on an exported package.</source>
          <target state="translated">输出包上的一个修改器。</target>
        </trans-unit>
        <trans-unit id="cd12fa667e8860dab8dcf4c8cace39116df85c96" translate="yes" xml:space="preserve">
          <source>A modifier on an open package.</source>
          <target state="translated">开放式包装上的一个修饰符。</target>
        </trans-unit>
        <trans-unit id="455aa858215590bd7ae451f50057a1eaef663612" translate="yes" xml:space="preserve">
          <source>A module &quot;reads&quot; two or more modules with the same name. This includes the case where a module &quot;reads&quot; another with the same name as itself.</source>
          <target state="translated">一个模块 &quot;读取 &quot;两个或多个同名模块。这包括一个模块 &quot;读取 &quot;与自己同名的另一个模块的情况。</target>
        </trans-unit>
        <trans-unit id="eb98ec38ed46c6c4948d6e5527a24116a4008805" translate="yes" xml:space="preserve">
          <source>A module &lt;code&gt;M&lt;/code&gt; declares that it &quot;&lt;code&gt;uses p.S&lt;/code&gt;&quot; or &quot;&lt;code&gt;provides p.S with ...&lt;/code&gt;&quot; but package &lt;code&gt;p&lt;/code&gt; is neither in module &lt;code&gt;M&lt;/code&gt; nor exported to &lt;code&gt;M&lt;/code&gt; by any module that &lt;code&gt;M&lt;/code&gt; reads.</source>
          <target state="translated">模块 &lt;code&gt;M&lt;/code&gt; 声明它&amp;ldquo; &lt;code&gt;uses p.S&lt;/code&gt; &amp;rdquo;或&amp;ldquo; &lt;code&gt;provides p.S with ...&lt;/code&gt; &amp;rdquo;，但是包 &lt;code&gt;p&lt;/code&gt; 既不在模块 &lt;code&gt;M&lt;/code&gt; 中,也不被 &lt;code&gt;M&lt;/code&gt; 读取的任何模块导出到 &lt;code&gt;M&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="662c4f200c7a7a0588b4578c360940ca674b26a0" translate="yes" xml:space="preserve">
          <source>A module M declares that it 'uses p.S' or 'provides p.S with ...' but package p is neither in module M nor exported to M by any module that M &quot;reads&quot;.</source>
          <target state="translated">一个模块M声明它 &quot;使用p.S &quot;或 &quot;向p.S提供......&quot;,但包p既不在模块M中,也没有被M &quot;读取 &quot;的任何模块导出到M中。</target>
        </trans-unit>
        <trans-unit id="7051931822f315c97f2452ced1be59b68e994add" translate="yes" xml:space="preserve">
          <source>A module descriptor describes a &lt;em&gt;normal&lt;/em&gt;, open, or automatic module. &lt;em&gt;Normal&lt;/em&gt; modules and open modules describe their &lt;a href=&quot;#requires()&quot;&gt;&lt;code&gt;dependences&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#exports()&quot;&gt;&lt;code&gt;exported-packages&lt;/code&gt;&lt;/a&gt;, the services that they &lt;a href=&quot;#uses()&quot;&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#provides()&quot;&gt;&lt;code&gt;provide&lt;/code&gt;&lt;/a&gt;, and other components. &lt;em&gt;Normal&lt;/em&gt; modules may &lt;a href=&quot;#opens()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; specific packages. The module descriptor for an open modules does not declare any open packages (its &lt;code&gt;opens&lt;/code&gt; method returns an empty set) but when instantiated in the Java virtual machine then it is treated as if all packages are open. The module descriptor for an automatic module does not declare any dependences (except for the mandatory dependency on &lt;code&gt;
 java.base&lt;/code&gt;), and does not declare any exported or open packages. Automatic module receive special treatment during resolution so that they read all other modules in the configuration. When an automatic module is instantiated in the Java virtual machine then it reads every unnamed module and is treated as if all packages are exported and open.</source>
          <target state="translated">模块描述符描述了&lt;em&gt;正常&lt;/em&gt;，打开或自动模块。&lt;em&gt;普通&lt;/em&gt;模块和开放模块描述了它们的&lt;a href=&quot;#requires()&quot;&gt; &lt;code&gt;dependences&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#exports()&quot;&gt; &lt;code&gt;exported-packages&lt;/code&gt; &lt;/a&gt;，它们&lt;a href=&quot;#uses()&quot;&gt; &lt;code&gt;use&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#provides()&quot;&gt; &lt;code&gt;provide&lt;/code&gt; &lt;/a&gt;的服务以及其他组件。&lt;em&gt;普通&lt;/em&gt;模块可能会&lt;a href=&quot;#opens()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;特定的程序包。打开模块的模块描述符不声明任何打开的包（它的 &lt;code&gt;opens&lt;/code&gt; 方法返回一个空集），但是在Java虚拟机中实例化时，将其视为所有包都已打开。自动模块的模块描述符不声明任何依赖关系（除了对 &lt;code&gt; java.base&lt;/code&gt; 的强制性依赖关系），并且不声明任何导出或打开的包。自动模块在解析期间会受到特殊对待，以便它们读取配置中的所有其他模块。在Java虚拟机中实例化一个自动模块时，它将读取每个未命名的模块，并且将其视为已导出并打开所有程序包。</target>
        </trans-unit>
        <trans-unit id="cdde48874149ac1e9bbdbff00202a865dc0e60a9" translate="yes" xml:space="preserve">
          <source>A module descriptor describes a &lt;em&gt;normal&lt;/em&gt;, open, or automatic module. &lt;em&gt;Normal&lt;/em&gt; modules and open modules describe their &lt;a href=&quot;#requires()&quot;&gt;dependences&lt;/a&gt;, &lt;a href=&quot;#exports()&quot;&gt;&lt;code&gt;exported-packages&lt;/code&gt;&lt;/a&gt;, the services that they &lt;a href=&quot;#uses()&quot;&gt;use&lt;/a&gt; or &lt;a href=&quot;#provides()&quot;&gt;provide&lt;/a&gt;, and other components. &lt;em&gt;Normal&lt;/em&gt; modules may &lt;a href=&quot;#opens()&quot;&gt;open&lt;/a&gt; specific packages. The module descriptor for an open module does not declare any open packages (its &lt;code&gt;opens&lt;/code&gt; method returns an empty set) but when instantiated in the Java virtual machine then it is treated as if all packages are open. The module descriptor for an automatic module does not declare any dependences (except for the mandatory dependency on &lt;code&gt;
 java.base&lt;/code&gt;), and does not declare any exported or open packages. Automatic modules receive special treatment during resolution so that they read all other modules in the configuration. When an automatic module is instantiated in the Java virtual machine then it reads every unnamed module and is treated as if all packages are exported and open.</source>
          <target state="translated">模块描述符描述了&lt;em&gt;正常&lt;/em&gt;，打开或自动模块。&lt;em&gt;普通&lt;/em&gt;模块和开放模块描述了它们的&lt;a href=&quot;#requires()&quot;&gt;依赖项&lt;/a&gt;，&lt;a href=&quot;#exports()&quot;&gt; &lt;code&gt;exported-packages&lt;/code&gt; &lt;/a&gt;，它们&lt;a href=&quot;#uses()&quot;&gt;使用&lt;/a&gt;或&lt;a href=&quot;#provides()&quot;&gt;提供&lt;/a&gt;的服务以及其他组件。&lt;em&gt;普通&lt;/em&gt;模块可能会&lt;a href=&quot;#opens()&quot;&gt;打开&lt;/a&gt;特定的程序包。打开模块的模块描述符不声明任何打开的包（它的 &lt;code&gt;opens&lt;/code&gt; 方法返回一个空集），但是在Java虚拟机中实例化时，将其视为所有包都已打开。自动模块的模块描述符不声明任何依赖关系（除了对 &lt;code&gt; java.base&lt;/code&gt; 的强制性依赖关系），并且不声明任何导出或打开的包。自动模块在解析期间会受到特殊对待，以便它们读取配置中的所有其他模块。在Java虚拟机中实例化一个自动模块时，它将读取每个未命名的模块，并且将其视为已导出并打开所有程序包。</target>
        </trans-unit>
        <trans-unit id="39484186c8c0c1ae7050c0af3a7d39c72c80caeb" translate="yes" xml:space="preserve">
          <source>A module descriptor describes a named module and defines methods to obtain each of its components. The module descriptor for a named module in the Java virtual machine is obtained by invoking the &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;Module&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;../module#getDescriptor()&quot;&gt;&lt;code&gt;getDescriptor&lt;/code&gt;&lt;/a&gt; method. Module descriptors can also be created using the &lt;a href=&quot;moduledescriptor.builder&quot;&gt;&lt;code&gt;ModuleDescriptor.Builder&lt;/code&gt;&lt;/a&gt; class or by reading the binary form of a module declaration (&lt;code&gt;module-info.class&lt;/code&gt;) using the &lt;a href=&quot;#read(java.io.InputStream,java.util.function.Supplier)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; methods defined here.</source>
          <target state="translated">模块描述符描述了一个命名模块，并定义了获取其每个组件的方法。通过调用&lt;a href=&quot;../module&quot;&gt; &lt;code&gt;Module&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../module#getDescriptor()&quot;&gt; &lt;code&gt;getDescriptor&lt;/code&gt; &lt;/a&gt;方法，可以获取Java虚拟机中命名模块的模块描述符。也可以使用&lt;a href=&quot;moduledescriptor.builder&quot;&gt; &lt;code&gt;ModuleDescriptor.Builder&lt;/code&gt; &lt;/a&gt;类或通过使用此处定义的&lt;a href=&quot;#read(java.io.InputStream,java.util.function.Supplier)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;方法读取模块声明的二进制形式（ &lt;code&gt;module-info.class&lt;/code&gt; ）来创建模块描述符。</target>
        </trans-unit>
        <trans-unit id="eaabbb2d3e77e23acd558210c32a5e147a902783" translate="yes" xml:space="preserve">
          <source>A module descriptor.</source>
          <target state="translated">一个模块描述符;</target>
        </trans-unit>
        <trans-unit id="ec86bbca16256870199e11664f4b4e20c1e7c283" translate="yes" xml:space="preserve">
          <source>A module in a graph of &lt;em&gt;resolved modules&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;解析模块&lt;/em&gt;图中的&lt;em&gt;模块&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="b2786a1ebd9e5f7ac16e073b91113653532f96ce" translate="yes" xml:space="preserve">
          <source>A module in the target VM.</source>
          <target state="translated">目标虚拟机中的一个模块。</target>
        </trans-unit>
        <trans-unit id="294856b1fabfeb9684fab1cc4cea4d5c8337917a" translate="yes" xml:space="preserve">
          <source>A module is mapped to a class loader that already has a module of the same name defined to it.</source>
          <target state="translated">一个模块被映射到一个已经定义了同名模块的类加载器上。</target>
        </trans-unit>
        <trans-unit id="ea95f763a71a66296df0f219de84921cb321ce7c" translate="yes" xml:space="preserve">
          <source>A module is mapped to a class loader that has already defined types in any of the packages in the module.</source>
          <target state="translated">一个模块被映射到一个已经在模块中的任何一个包中定义了类型的类加载器。</target>
        </trans-unit>
        <trans-unit id="9e020352fda5c7c64704bec97a647670222fe370" translate="yes" xml:space="preserve">
          <source>A module reader is intended for cases where access to the resources in a module is required, regardless of whether the module has been loaded. A framework that scans a collection of packaged modules on the file system, for example, may use a module reader to access a specific resource in each module. A module reader is also intended to be used by &lt;code&gt;ClassLoader&lt;/code&gt; implementations that load classes and resources from modules.</source>
          <target state="translated">模块读取器用于需要访问模块中资源的情况，而无论是否已加载模块。例如，扫描文件系统上打包模块集合的框架可以使用模块读取器来访问每个模块中的特定资源。 &lt;code&gt;ClassLoader&lt;/code&gt; 实现也打算使用模块阅读器，该实现从模块加载类和资源。</target>
        </trans-unit>
        <trans-unit id="df023938795e281f4835897184ca0e8813ed88d3" translate="yes" xml:space="preserve">
          <source>A module reader is not required to be asynchronously closeable. If a thread is reading a resource and another thread invokes the close method, then the second thread may block until the read operation is complete.</source>
          <target state="translated">模块读取器不需要是异步关闭的。如果一个线程正在读取一个资源,而另一个线程调用关闭方法,那么第二个线程可以阻塞,直到读取操作完成。</target>
        </trans-unit>
        <trans-unit id="3224c079eb7e378827cebbe2bb247fe6be8ad974" translate="yes" xml:space="preserve">
          <source>A module reads two or more modules with the same name. This includes the case where a module reads another with the same name as itself.</source>
          <target state="translated">一个模块读取两个或多个同名模块。这包括一个模块读取另一个与自己同名的模块的情况。</target>
        </trans-unit>
        <trans-unit id="22abf316c218170b96c9f81b65a87289f64f9f26" translate="yes" xml:space="preserve">
          <source>A module reference is a concrete implementation of this class that implements the abstract methods defined by this class. It contains the module's descriptor and its location, if known. It also has the ability to create a &lt;a href=&quot;modulereader&quot;&gt;&lt;code&gt;ModuleReader&lt;/code&gt;&lt;/a&gt; in order to access the module's content, which may be inside the Java run-time system itself or in an artifact such as a modular JAR file.</source>
          <target state="translated">模块引用是此类的具体实现，它实现了此类定义的抽象方法。它包含模块的描述符及其位置（如果已知）。它还具有创建&lt;a href=&quot;modulereader&quot;&gt; &lt;code&gt;ModuleReader&lt;/code&gt; &lt;/a&gt;以便访问模块内容的能力，该内容可能位于Java运行时系统内部，也可能位于诸如模块化JAR文件的工件中。</target>
        </trans-unit>
        <trans-unit id="b9879bf6c336646f6375f771243418c15804cfe2" translate="yes" xml:space="preserve">
          <source>A module's version string.</source>
          <target state="translated">一个模块的版本字符串。</target>
        </trans-unit>
        <trans-unit id="e49db2cd47d76f570b602b8aeeac431ff85df08f" translate="yes" xml:space="preserve">
          <source>A module.</source>
          <target state="translated">一个模块。</target>
        </trans-unit>
        <trans-unit id="42953139b3b36dae3cc66096b2aec9e05777e71d" translate="yes" xml:space="preserve">
          <source>A month is represented by an integer from 0 to 11; 0 is January, 1 is February, and so forth; thus 11 is December.</source>
          <target state="translated">一个月用0到11的整数表示,0是1月,1是2月,以此类推,因此11是12月。</target>
        </trans-unit>
        <trans-unit id="ab22d20d25b582a956df404a2854dfd37a08a7c3" translate="yes" xml:space="preserve">
          <source>A month-day in the ISO-8601 calendar system, such as &lt;code&gt;--12-03&lt;/code&gt;.</source>
          <target state="translated">ISO- &lt;code&gt;--12-03&lt;/code&gt; ，例如--12-03。</target>
        </trans-unit>
        <trans-unit id="e911868de06210df74694f89f02b4486402c1f21" translate="yes" xml:space="preserve">
          <source>A month-day of February 29th will be adjusted to February 28th in the resulting date if the year is not a leap year.</source>
          <target state="translated">如果该年不是闰年,2月29日的月日将被调整为2月28日的结果日期。</target>
        </trans-unit>
        <trans-unit id="544d028170c4cc8966d5aa5df1674bb3bd930fe7" translate="yes" xml:space="preserve">
          <source>A month-of-year, such as 'July'.</source>
          <target state="translated">年月,如'七月'。</target>
        </trans-unit>
        <trans-unit id="72ef0e6fc016a03a5df04c55ed4903f14c08ffee" translate="yes" xml:space="preserve">
          <source>A more complete and consistent set of LIFO stack operations is provided by the &lt;a href=&quot;deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; interface and its implementations, which should be used in preference to this class. For example:</source>
          <target state="translated">&lt;a href=&quot;deque&quot;&gt; &lt;code&gt;Deque&lt;/code&gt; &lt;/a&gt;接口及其实现提供了一组更完整和一致的LIFO堆栈操作，应优先使用此类。例如：</target>
        </trans-unit>
        <trans-unit id="779ab2c19e9e20055e3d69fab40e1eae13ac1fbe" translate="yes" xml:space="preserve">
          <source>A more detailed description of the set of option buttons that will appear at the bottom of the dialog box. The usual value for the options parameter is an array of &lt;code&gt;String&lt;/code&gt;s. But the parameter type is an array of &lt;code&gt;Objects&lt;/code&gt;. A button is created for each object depending on its type:</source>
          <target state="translated">有关选项按钮集的更详细说明，将显示在对话框的底部。options参数的通常值是 &lt;code&gt;String&lt;/code&gt; 数组。但是参数类型是 &lt;code&gt;Objects&lt;/code&gt; 的数组。将为每个对象创建一个按钮，具体取决于其类型：</target>
        </trans-unit>
        <trans-unit id="a8ef92902ef52fc9390a15bc63628b67c671c8aa" translate="yes" xml:space="preserve">
          <source>A more informative set of completions would include the number of each prime:</source>
          <target state="translated">一组更翔实的完形包括每个质数的数量。</target>
        </trans-unit>
        <trans-unit id="8fba423df016bcca01d528c49a66aa0490f8d71b" translate="yes" xml:space="preserve">
          <source>A more interesting case can be illustrated by the following example in which a method in type &lt;code&gt;A&lt;/code&gt; does not override a like-named method in type &lt;code&gt;B&lt;/code&gt;:</source>
          <target state="translated">下面的示例可以说明一个更有趣的情况，其中类型 &lt;code&gt;A&lt;/code&gt; 中的方法不会覆盖类型 &lt;code&gt;B&lt;/code&gt; 中的类似方法：</target>
        </trans-unit>
        <trans-unit id="e9c58067d77bf7244be501b1ebc8017e9dfb5d7a" translate="yes" xml:space="preserve">
          <source>A more reliable way to determine which &lt;code&gt;ImageReader&lt;/code&gt;s are likely to be able to parse a particular data stream is provided by the &lt;code&gt;canDecodeInput&lt;/code&gt; method. This methods allows the service provider to inspect the actual stream contents.</source>
          <target state="translated">&lt;code&gt;canDecodeInput&lt;/code&gt; 方法提供了一种更可靠的方法来确定哪些 &lt;code&gt;ImageReader&lt;/code&gt; 可能能够解析特定的数据流。此方法使服务提供商可以检查实际流内容。</target>
        </trans-unit>
        <trans-unit id="6f2e502d946565cf8a0faf1431c1e45de5f7293b" translate="yes" xml:space="preserve">
          <source>A more reliable way to determine which &lt;code&gt;ImageWriter&lt;/code&gt;s are likely to be able to parse a particular data stream is provided by the &lt;code&gt;canEncodeImage&lt;/code&gt; method. This methods allows the service provider to inspect the actual image contents.</source>
          <target state="translated">&lt;code&gt;canEncodeImage&lt;/code&gt; 方法提供了一种更可靠的方法来确定哪些 &lt;code&gt;ImageWriter&lt;/code&gt; 可能能够解析特定的数据流。该方法使服务提供商可以检查实际图像内容。</target>
        </trans-unit>
        <trans-unit id="e98fad3c4bc26860fd5b43356494929e7f5e13c6" translate="yes" xml:space="preserve">
          <source>A multicast channel may join several multicast groups, including the same group on more than one interface. An implementation may impose a limit on the number of groups that may be joined at the same time.</source>
          <target state="translated">一个组播信道可以加入多个组播组,包括多个接口上的同一组。一个实施例可以对同时加入的组的数量加以限制。</target>
        </trans-unit>
        <trans-unit id="fc6c2bf87ac13f1021feb64a454cd4052af2d2c4" translate="yes" xml:space="preserve">
          <source>A multicast group is specified by a class D IP address and by a standard UDP port number. Class D IP addresses are in the range &lt;code&gt;224.0.0.0&lt;/code&gt; to &lt;code&gt;239.255.255.255&lt;/code&gt;, inclusive. The address 224.0.0.0 is reserved and should not be used.</source>
          <target state="translated">多播组由D类IP地址和标准UDP端口号指定。D类IP地址在 &lt;code&gt;224.0.0.0&lt;/code&gt; 到 &lt;code&gt;239.255.255.255&lt;/code&gt; 之间（含）。地址224.0.0.0是保留的，不应使用。</target>
        </trans-unit>
        <trans-unit id="7343f0136a235add22e5d1a4a1f7087a79e0cf03" translate="yes" xml:space="preserve">
          <source>A multicast group membership is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed.</source>
          <target state="translated">多播组成员资格在创建时有效，并且一直有效，直到通过调用&lt;a href=&quot;#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;方法删除成员资格或关闭通道为止。</target>
        </trans-unit>
        <trans-unit id="2c4338d75e8f3f9d14e959f365f91cefea68d6d9" translate="yes" xml:space="preserve">
          <source>A multicast group membership is valid upon creation and remains valid until the membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method, or the channel is closed.</source>
          <target state="translated">多播组成员资格在创建时是有效的，并且一直有效，直到通过调用&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;方法删除成员资格或关闭通道为止。</target>
        </trans-unit>
        <trans-unit id="1fee222616db716259fa4af6ce03b2c2360c34f2" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ButtonUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;ButtonUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="3ef1780e60881228d13a1f01f6990b531840ad92" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ColorChooserUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;ColorChooserUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="2aae38e31e2bae50f1e674f7a6d926d88f80a391" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ComboBoxUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;ComboBoxUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="01a6971639ccef86d18603a068ca7d3d55340502" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;DesktopIconUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;DesktopIconUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="21718f844feee3eb6c779b47a33192a69e4d17ab" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;DesktopPaneUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;DesktopPaneUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="02ce2c4b7cbbb3e576680056f6bf7f9bba8c7b67" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;FileChooserUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;FileChooserUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="92e8808c850534bcc256bdf71547438f2e3c5e37" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;InternalFrameUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;InternalFrameUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="1a23d3908c1bae315b127e3c02ebbbc9176015f2" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;LabelUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;LabelUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="f6b9f46db8f1ee3fd4cbca7332657eb67f3fd527" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ListUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;ListUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="938864c832b86e3cd3303e98afce5a557ea23104" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;MenuBarUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;MenuBarUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="3199bc673bd3ddfbe197155f083fcc08aaaf707e" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;MenuItemUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;MenuItemUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="c7ac51351c67842db3297bcfdf74d61cff4b640b" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;OptionPaneUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;OptionPaneUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="e09a77aff5096fac207ff03a8298c2fa6ccc41da" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;PanelUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;PanelUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="1284e1a2ecb7cb1789a48aaf6494e05832de5b81" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;PopupMenuUI&lt;/code&gt;s.</source>
          <target state="translated">一个用于组合 &lt;code&gt;PopupMenuUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="3faad1637e96e180b3c281ff8796900fa6df2a1e" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ProgressBarUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;ProgressBarUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="a8574221e5bf68d386033fc0c0140d3870d96272" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;RootPaneUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;RootPaneUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="3261bde38d3051181064931365782b9ef0d32b94" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ScrollBarUI&lt;/code&gt;s.</source>
          <target state="translated">一个用于组合 &lt;code&gt;ScrollBarUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="b6b5b98fa65bbe03d183f8198e2431f166f4cb15" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ScrollPaneUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;ScrollPaneUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="e975ff5a1489fa5104bd8b75478a94157f6b42af" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SeparatorUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;SeparatorUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="273c978a0929e4b64f114b569f3c84dab7265c81" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SliderUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;SliderUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="6fd5d419bb486ebb48d207651fac3a57a9aa0269" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SpinnerUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;SpinnerUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="4eea0ca608e5c590b325168309b6434c00f0d638" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;SplitPaneUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;SplitPaneUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="fb3dbccb3889bc7b8609d61092a161c42ee6d4d0" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TabbedPaneUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;TabbedPaneUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="bf7bc019760d3c3d87b0573b76f11a09b3a51ca9" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TableHeaderUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;TableHeaderUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="6fb9b208b295da65edcf6993e4ff79caeabd74d7" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TableUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;TableUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="95e17c75b78fee341b72027498c671ee6db26abb" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TextUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;TextUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="bedbb43564525fe5b2692e616e5f6473babec282" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ToolBarUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;ToolBarUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="6deb990b9e65562640acd50862c844cb2701aac1" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ToolTipUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;ToolTipUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="4df940effda0bc48381874736c437b749bcb0807" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;TreeUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;TreeUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="2d39954726b86f4bef02a2bf7eb406affc785111" translate="yes" xml:space="preserve">
          <source>A multiplexing UI used to combine &lt;code&gt;ViewportUI&lt;/code&gt;s.</source>
          <target state="translated">用于组合 &lt;code&gt;ViewportUI&lt;/code&gt; 的多路UI 。</target>
        </trans-unit>
        <trans-unit id="bfa6c5aa9794d343bdab40a369745170ecfa95c9" translate="yes" xml:space="preserve">
          <source>A multiplexing look and feel that allows more than one UI to be associated with a component at the same time.</source>
          <target state="translated">一个多路复用的外观和感觉,允许一个组件同时关联多个UI。</target>
        </trans-unit>
        <trans-unit id="3c1e5f419c26febccc0ffb1aca07fd601e9a17cf" translate="yes" xml:space="preserve">
          <source>A multiplexing look and feel that allows more than one UI to be associated with a component at the same time. The primary look and feel is called the &lt;em&gt;default&lt;/em&gt; look and feel, and the other look and feels are called &lt;em&gt;auxiliary&lt;/em&gt;.</source>
          <target state="translated">一种多路复用的外观，使多个UI可以同时与一个组件关联。主要外观称为&lt;em&gt;默认&lt;/em&gt;外观，其他外观称为&lt;em&gt;辅助&lt;/em&gt;外观。</target>
        </trans-unit>
        <trans-unit id="a8f6c2efcaf967fd17cecf4f42e5961f5cdde54a" translate="yes" xml:space="preserve">
          <source>A multiplexor of &lt;a href=&quot;selectablechannel&quot;&gt;&lt;code&gt;SelectableChannel&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;selectablechannel&quot;&gt; &lt;code&gt;SelectableChannel&lt;/code&gt; &lt;/a&gt;对象的多路复用器。</target>
        </trans-unit>
        <trans-unit id="1495361d783dd2a9d043b0f1ccc945ff6d84551d" translate="yes" xml:space="preserve">
          <source>A multiplexor of selectable channels</source>
          <target state="translated">可选择通道的多路复用器</target>
        </trans-unit>
        <trans-unit id="090ea028eeaac9046189bf41c551c02eab6607a3" translate="yes" xml:space="preserve">
          <source>A mutable builder class that can create an immutable &lt;code&gt;JarSigner&lt;/code&gt; from various signing-related parameters.</source>
          <target state="translated">一个可变的生成器类，可以根据各种与签名相关的参数创建一个不可变的 &lt;code&gt;JarSigner&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="555863f097a94438e284e109cba2dc49bb401875" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;DoubleStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DoubleStream&lt;/code&gt; 的可变构建器。</target>
        </trans-unit>
        <trans-unit id="90417ba4d57dcf29afd7fec868b8fdb146ad4c9b" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;LongStream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LongStream&lt;/code&gt; 的可变构建器。</target>
        </trans-unit>
        <trans-unit id="044e204fc4ab1c02d5ea7c7f7994ed6f2a93ca7d" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;Stream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Stream&lt;/code&gt; 的可变构建器。</target>
        </trans-unit>
        <trans-unit id="a93cbe7058fafefe2e6c3715c295688f4da1f0bc" translate="yes" xml:space="preserve">
          <source>A mutable builder for a &lt;code&gt;Stream&lt;/code&gt;. This allows the creation of a &lt;code&gt;Stream&lt;/code&gt; by generating elements individually and adding them to the &lt;code&gt;Builder&lt;/code&gt; (without the copying overhead that comes from using an &lt;code&gt;ArrayList&lt;/code&gt; as a temporary buffer.)</source>
          <target state="translated">&lt;code&gt;Stream&lt;/code&gt; 的可变构建器。这允许通过单独生成元素并将其添加到 &lt;code&gt;Builder&lt;/code&gt; 中来创建 &lt;code&gt;Stream&lt;/code&gt; （没有使用 &lt;code&gt;ArrayList&lt;/code&gt; 作为临时缓冲区而产生的复制开销）。</target>
        </trans-unit>
        <trans-unit id="18ca1533c6784699fe41abab6fed9f7491312a39" translate="yes" xml:space="preserve">
          <source>A mutable builder for an &lt;code&gt;IntStream&lt;/code&gt;.</source>
          <target state="translated">一个 &lt;code&gt;IntStream&lt;/code&gt; 的可变构建器。</target>
        </trans-unit>
        <trans-unit id="ecc126b3174f7ae048b22adc473a9269aec45ddf" translate="yes" xml:space="preserve">
          <source>A mutable sequence of characters.</source>
          <target state="translated">一个可变的字符序列。</target>
        </trans-unit>
        <trans-unit id="114a5f53e63078efc11af25d64ad64ab43e20f20" translate="yes" xml:space="preserve">
          <source>A mutable sequence of characters. This class provides an API compatible with &lt;code&gt;StringBuffer&lt;/code&gt;, but with no guarantee of synchronization. This class is designed for use as a drop-in replacement for &lt;code&gt;StringBuffer&lt;/code&gt; in places where the string buffer was being used by a single thread (as is generally the case). Where possible, it is recommended that this class be used in preference to &lt;code&gt;StringBuffer&lt;/code&gt; as it will be faster under most implementations.</source>
          <target state="translated">可变的字符序列。此类提供与 &lt;code&gt;StringBuffer&lt;/code&gt; 兼容的API ，但不保证同步。此类设计为在单线程正在使用字符串缓冲区的地方（通常是这种情况）来代替 &lt;code&gt;StringBuffer&lt;/code&gt; 。在可能的情况下，建议优先使用此类而不是 &lt;code&gt;StringBuffer&lt;/code&gt; ,因为在大多数实现中它会更快。</target>
        </trans-unit>
        <trans-unit id="4bf8a240b81c2f14cdad8d3ef15b686060025c38" translate="yes" xml:space="preserve">
          <source>A mutable version of &lt;code&gt;ComboBoxModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ComboBoxModel&lt;/code&gt; 的可变版本。</target>
        </trans-unit>
        <trans-unit id="72b546ec375c20860b8c2b5ba62a0a6c41c735cf" translate="yes" xml:space="preserve">
          <source>A named mapping between characters</source>
          <target state="translated">字符之间的命名映射</target>
        </trans-unit>
        <trans-unit id="2ab48f96a53d76bf9fe717aef2494bcc3996df7b" translate="yes" xml:space="preserve">
          <source>A named mapping between characters and bytes</source>
          <target state="translated">字符和字节之间的命名映射</target>
        </trans-unit>
        <trans-unit id="500b84de38af55c5c034588505665f0cccfa6d4e" translate="yes" xml:space="preserve">
          <source>A named mapping between sequences of sixteen-bit Unicode &lt;a href=&quot;../../lang/character#unicode&quot;&gt;code units&lt;/a&gt; and sequences of bytes.</source>
          <target state="translated">16位Unicode &lt;a href=&quot;../../lang/character#unicode&quot;&gt;代码单元的&lt;/a&gt;序列与字节序列之间的命名映射。</target>
        </trans-unit>
        <trans-unit id="8a8533ff28a7e7235565a6d9d987a050c6c50423" translate="yes" xml:space="preserve">
          <source>A named mapping between sequences of sixteen-bit Unicode &lt;a href=&quot;../../lang/character#unicode&quot;&gt;code units&lt;/a&gt; and sequences of bytes. This class defines methods for creating decoders and encoders and for retrieving the various names associated with a charset. Instances of this class are immutable.</source>
          <target state="translated">16位Unicode &lt;a href=&quot;../../lang/character#unicode&quot;&gt;代码单元的&lt;/a&gt;序列与字节序列之间的命名映射。此类定义了用于创建解码器和编码器以及检索与字符集关联的各种名称的方法。此类的实例是不可变的。</target>
        </trans-unit>
        <trans-unit id="458cd2c85e7533ea872f2e22726ff6877b1309a4" translate="yes" xml:space="preserve">
          <source>A named type declared within a construct other than a type.</source>
          <target state="translated">在类型之外的构造中声明的命名类型。</target>
        </trans-unit>
        <trans-unit id="c894148c721f2b7b2d26acf446229790a75dd927" translate="yes" xml:space="preserve">
          <source>A namespace declaration is written. If the namespace is a default namespace declaration (isDefault is true) then xmlns=&quot;$namespaceURI&quot; is written and the prefix is optional. If isDefault is false, the prefix must be declared and the writer must prepend xmlns to the prefix and write out a standard prefix declaration.</source>
          <target state="translated">编写一个命名空间声明。如果命名空间是一个默认的命名空间声明(isDefault为真),那么就会写出xmlns=&quot;$namespaceURI&quot;,前缀是可选的。如果isDefault为false,则必须声明前缀,写作者必须在前缀前加上xmlns,并写出一个标准的前缀声明。</target>
        </trans-unit>
        <trans-unit id="1f79de9c3b1e951c7064e57fbe3bb9c1a04d7fa1" translate="yes" xml:space="preserve">
          <source>A natural line that contains only white space characters is considered blank and is ignored. A comment line has an ASCII &lt;code&gt;'#'&lt;/code&gt; or &lt;code&gt;'!'&lt;/code&gt; as its first non-white space character; comment lines are also ignored and do not encode key-element information. In addition to line terminators, this format considers the characters space (&lt;code&gt;' '&lt;/code&gt;, &lt;code&gt;'\u0020'&lt;/code&gt;), tab (&lt;code&gt;'\t'&lt;/code&gt;, &lt;code&gt;'\u0009'&lt;/code&gt;), and form feed (&lt;code&gt;'\f'&lt;/code&gt;, &lt;code&gt;'\u000C'&lt;/code&gt;) to be white space.</source>
          <target state="translated">仅包含空格字符的自然行被视为空白，将被忽略。注释行具有ASCII &lt;code&gt;'#'&lt;/code&gt; 或 &lt;code&gt;'!'&lt;/code&gt; 作为其第一个非空白字符；注释行也将被忽略，并且不对键元素信息进行编码。除行终止符外，此格式还将字符空间（ &lt;code&gt;' '&lt;/code&gt; ， &lt;code&gt;'\u0020'&lt;/code&gt; ），制表符（ &lt;code&gt;'\t'&lt;/code&gt; ， &lt;code&gt;'\u0009'&lt;/code&gt; ）和换页符（ &lt;code&gt;'\f'&lt;/code&gt; ， &lt;code&gt;'\u000C'&lt;/code&gt; ）视为是空白。</target>
        </trans-unit>
        <trans-unit id="f5b4f6afaac43c87c02b9b20cd494e01bc27a526" translate="yes" xml:space="preserve">
          <source>A negated constraint. The returned object will be serialized as an instance of the non-public class  javax.management.NotQueryExp.</source>
          <target state="translated">一个被否定的约束。返回的对象将被序列化为非公开类 javax.management.NotQueryExp.NotQueryExp 的实例。</target>
        </trans-unit>
        <trans-unit id="6e93eae5e5563dcda094f85cda52babcb326d950" translate="yes" xml:space="preserve">
          <source>A negated constraint. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.NotQueryExp&quot;&gt; javax.management.NotQueryExp&lt;/a&gt;.</source>
          <target state="translated">否定约束。返回的对象将被序列化为非公共类&lt;a href=&quot;../../serialized-form#javax.management.NotQueryExp&quot;&gt;javax.management.NotQueryExp&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="34a27feeef7f8a3d7faa3b3f34355c7491ea4dbb" translate="yes" xml:space="preserve">
          <source>A negated constraint. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.NotQueryExp&quot;&gt; javax.management.NotQueryExp&lt;/a&gt;.</source>
          <target state="translated">否定约束。返回的对象将被序列化为非公共类&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.NotQueryExp&quot;&gt;javax.management.NotQueryExp&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="79bb08b42e8bcc663e05f72c5017484d7a3c8843" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this Name is less than, equal to, or greater than the given obj.</source>
          <target state="translated">负整数,零,或者正整数,因为这个Name小于,等于,或者大于给定的obj。</target>
        </trans-unit>
        <trans-unit id="6eced5b2e4d81d3b26a2627fda3671b2f3b39190" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this Rdn is less than, equal to, or greater than the given Object.</source>
          <target state="translated">负整数、零或正整数,因为这个Rdn小于、等于或大于给定对象。</target>
        </trans-unit>
        <trans-unit id="9fb8c6b86e5345cbef91652c29458695a07c1f13" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this URI is less than, equal to, or greater than the given URI</source>
          <target state="translated">负整数,零,或正整数,因为这个URI小于,等于,或大于给定的URI。</target>
        </trans-unit>
        <trans-unit id="ed80c12a5615031d10b0f7059e7c8eb7c272608a" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this buffer is less than, equal to, or greater than the given buffer</source>
          <target state="translated">负整数,零,或正整数,因为这个缓冲区小于,等于,或大于给定的缓冲区。</target>
        </trans-unit>
        <trans-unit id="c47633dceffec00e2e7bfd87003eb21a20911f2d" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this charset is less than, equal to, or greater than the specified charset</source>
          <target state="translated">负整数、零或正整数,因为这个字符集小于、等于或大于指定的字符集。</target>
        </trans-unit>
        <trans-unit id="3e32fdcf44f80e850e6eb4628fd8fbc785265461" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer as this module version is less than, equal to, or greater than the given module version</source>
          <target state="translated">负整数、零或正整数,因为这个模块版本小于、等于或大于给定的模块版本。</target>
        </trans-unit>
        <trans-unit id="4b96a6abdbfd3d752b041a20ff91f0ec340ed973" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this &lt;code&gt;Provides&lt;/code&gt; is less than, equal to, or greater than the given &lt;code&gt;Provides&lt;/code&gt;</source>
          <target state="translated">负整数，零或正整数（如果此 &lt;code&gt;Provides&lt;/code&gt; 小于，等于或大于给定的 &lt;code&gt;Provides&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="012de39621337d32e06dcd963efb123f2d8408d2" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this &lt;code&gt;Version&lt;/code&gt; is less than, equal to, or greater than the given &lt;code&gt;Version&lt;/code&gt;</source>
          <target state="translated">如果此 &lt;code&gt;Version&lt;/code&gt; 小于，等于或大于给定 &lt;code&gt;Version&lt;/code&gt; ，则为负整数，零或正整数</target>
        </trans-unit>
        <trans-unit id="01817bf696fd468509d9acd42283b14ca6dea95d" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module &lt;code&gt;Opens&lt;/code&gt; is less than, equal to, or greater than the given module &lt;code&gt;Opens&lt;/code&gt;</source>
          <target state="translated">如果此模块 &lt;code&gt;Opens&lt;/code&gt; 次数小于，等于或大于给定的模块 &lt;code&gt;Opens&lt;/code&gt; 次数，则为负整数，零或正整数</target>
        </trans-unit>
        <trans-unit id="54c0d1d060aa6b22af2c8866e49b11fce042bcd3" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module dependence is less than, equal to, or greater than the given module dependence</source>
          <target state="translated">一个负整数,零,或者一个正整数,如果这个模块依赖性小于,等于,或者大于给定的模块依赖性。</target>
        </trans-unit>
        <trans-unit id="ba01448065c5be61b8b1de4cc28f04f18702ae95" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module descriptor is less than, equal to, or greater than the given module descriptor</source>
          <target state="translated">如果该模块描述符小于、等于或大于给定的模块描述符,则为负整数、零或正整数。</target>
        </trans-unit>
        <trans-unit id="6b2908d9eff4fcb3e7593e05d1109f33d99c6233" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module export is less than, equal to, or greater than the given export dependence</source>
          <target state="translated">负整数、零或正整数,如果这个模块的出口小于、等于或大于给定的出口依赖度。</target>
        </trans-unit>
        <trans-unit id="a6f08088fd568982cfa37fb2123efa0d7461bf10" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this module opens is less than, equal to, or greater than the given module opens</source>
          <target state="translated">一个负整数,零,或者一个正整数,如果这个模块打开小于,等于,或者大于给定的模块打开。</target>
        </trans-unit>
        <trans-unit id="14fc75c7164240154eb81e2f5886bbd043c13ae7" translate="yes" xml:space="preserve">
          <source>A negative integer, zero, or a positive integer if this provides is less than, equal to, or greater than the given provides</source>
          <target state="translated">一个负整数,零,或者一个正整数,如果这个规定小于,等于,或者大于给定的规定。</target>
        </trans-unit>
        <trans-unit id="58f9c54b8b24163ccca7d19df4cfdcb1e2f4b205" translate="yes" xml:space="preserve">
          <source>A negative value means that the cookie is not stored persistently and will be deleted when the Web browser exits. A zero value causes the cookie to be deleted.</source>
          <target state="translated">负值意味着该cookie不会被持久存储,并将在Web浏览器退出时被删除。零值则会导致cookie被删除。</target>
        </trans-unit>
        <trans-unit id="88f0bc390bc81564616c7ace6f9f0ff719f435d2" translate="yes" xml:space="preserve">
          <source>A network channel that supports Internet Protocol (IP) multicasting.</source>
          <target state="translated">支持互联网协议(IP)多播的网络通道。</target>
        </trans-unit>
        <trans-unit id="cbdc419e84e51b1088337a46cc75bdfa7afbab39" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; instance for this &lt;code&gt;Lock&lt;/code&gt; instance</source>
          <target state="translated">此 &lt;code&gt;Lock&lt;/code&gt; 实例的新&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;实例</target>
        </trans-unit>
        <trans-unit id="aceb0d651c53edfc705d99c1a7c6bd60485b446b" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个新的&lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c807f5aaccbe3ed21f9844b74c3f8e26dc5c8f14" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; object for managing the subprocess</source>
          <target state="translated">用于管理子流程的新&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;对象</target>
        </trans-unit>
        <trans-unit id="ec57e55fd3af4b36094fc208fbb620a69cf9f500" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;AccessibleJList&lt;/code&gt; instance is created if necessary.</source>
          <target state="translated">如有必要，将创建一个新的 &lt;code&gt;AccessibleJList&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="5f48283e4f735c2f8c789ece1bf37a57efc23e23" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Attr&lt;/code&gt; object with the &lt;code&gt;nodeName&lt;/code&gt; attribute set to &lt;code&gt;name&lt;/code&gt;, and &lt;code&gt;localName&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, and &lt;code&gt;namespaceURI&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt;. The value of the attribute is the empty string.</source>
          <target state="translated">一个新的 &lt;code&gt;Attr&lt;/code&gt; 对象，其 &lt;code&gt;nodeName&lt;/code&gt; 属性设置为 &lt;code&gt;name&lt;/code&gt; ，而 &lt;code&gt;localName&lt;/code&gt; ， &lt;code&gt;prefix&lt;/code&gt; 和 &lt;code&gt;namespaceURI&lt;/code&gt; 设置为 &lt;code&gt;null&lt;/code&gt; 。该属性的值为空字符串。</target>
        </trans-unit>
        <trans-unit id="11dad3570fa8f5d2138e2f8d660ea55490c345bf" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Attr&lt;/code&gt; object with the following attributes:</source>
          <target state="translated">具有以下属性的新 &lt;code&gt;Attr&lt;/code&gt; 对象：</target>
        </trans-unit>
        <trans-unit id="dec4e93d87e2b6f8927646919d97ce55149dc434" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Connection&lt;/code&gt; object created using the JDBC 2.1 core API has an initially empty type map associated with it. A user may enter a custom mapping for a UDT in this type map. When a UDT is retrieved from a data source with the method &lt;code&gt;ResultSet.getObject&lt;/code&gt;, the &lt;code&gt;getObject&lt;/code&gt; method will check the connection's type map to see if there is an entry for that UDT. If so, the &lt;code&gt;getObject&lt;/code&gt; method will map the UDT to the class indicated. If there is no entry, the UDT will be mapped using the standard mapping.</source>
          <target state="translated">使用JDBC 2.1核心API创建的新 &lt;code&gt;Connection&lt;/code&gt; 对象具有与其初始关联的空类型映射。用户可以在此类型映射中为UDT输入自定义映射。使用 &lt;code&gt;ResultSet.getObject&lt;/code&gt; 方法从数据源检索UDT时， &lt;code&gt;getObject&lt;/code&gt; 方法将检查连接的类型映射以查看是否有该UDT的条目。如果是这样，则 &lt;code&gt;getObject&lt;/code&gt; 方法将把UDT映射到所指示的类。如果没有条目，则将使用标准映射来映射UDT。</target>
        </trans-unit>
        <trans-unit id="0d6d7b584d2467ca78948a5e3c7d4899a326124c" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Document&lt;/code&gt; object with its document element. If the &lt;code&gt;NamespaceURI&lt;/code&gt;, &lt;code&gt;qualifiedName&lt;/code&gt;, and &lt;code&gt;doctype&lt;/code&gt; are &lt;code&gt;null&lt;/code&gt;, the returned &lt;code&gt;Document&lt;/code&gt; is empty with no document element.</source>
          <target state="translated">一个新的 &lt;code&gt;Document&lt;/code&gt; 对象及其document元素。如果 &lt;code&gt;NamespaceURI&lt;/code&gt; ， &lt;code&gt;qualifiedName&lt;/code&gt; 和 &lt;code&gt;doctype&lt;/code&gt; 为 &lt;code&gt;null&lt;/code&gt; ，则返回的 &lt;code&gt;Document&lt;/code&gt; 为空，没有document元素。</target>
        </trans-unit>
        <trans-unit id="5e5a487869645c6dbb6e55243697eec58cfb36d7" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;DocumentFragment&lt;/code&gt;.</source>
          <target state="translated">一个新的 &lt;code&gt;DocumentFragment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="87f69480435125c7e2c846d1d77644e770bd9625" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;DocumentType&lt;/code&gt; node with &lt;code&gt;Node.ownerDocument&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">一个新的 &lt;code&gt;DocumentType&lt;/code&gt; 节点，其 &lt;code&gt;Node.ownerDocument&lt;/code&gt; 设置为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb08b864203a9906480e953a80cc71b7417f5f4c" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Element&lt;/code&gt; object with the &lt;code&gt;nodeName&lt;/code&gt; attribute set to &lt;code&gt;tagName&lt;/code&gt;, and &lt;code&gt;localName&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, and &lt;code&gt;namespaceURI&lt;/code&gt; set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">一个新的 &lt;code&gt;Element&lt;/code&gt; 对象，其 &lt;code&gt;nodeName&lt;/code&gt; 属性设置为 &lt;code&gt;tagName&lt;/code&gt; ，而 &lt;code&gt;localName&lt;/code&gt; ， &lt;code&gt;prefix&lt;/code&gt; 和 &lt;code&gt;namespaceURI&lt;/code&gt; 设置为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3d4f4912a05669c5f64443a3dc57bb80a56868c" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;Element&lt;/code&gt; object with the following attributes:</source>
          <target state="translated">具有以下属性的新 &lt;code&gt;Element&lt;/code&gt; 对象：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
