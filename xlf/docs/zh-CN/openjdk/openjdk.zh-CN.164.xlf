<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="f4fab39cd8224c3b1514a8f32e67ab83b0c8eab2" translate="yes" xml:space="preserve">
          <source>The management interface for a memory pool.</source>
          <target state="translated">内存池的管理界面。</target>
        </trans-unit>
        <trans-unit id="7a14f43b2f6f8cac13a2fed4f0e0a1d632571b59" translate="yes" xml:space="preserve">
          <source>The management interface for a memory pool. A memory pool represents the memory resource managed by the Java virtual machine and is managed by one or more &lt;a href=&quot;memorymanagermxbean&quot;&gt;&lt;code&gt;memory managers&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">内存池的管理接口。内存池代表Java虚拟机管理的内存资源，并由一个或多个&lt;a href=&quot;memorymanagermxbean&quot;&gt; &lt;code&gt;memory managers&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b17a1c4f6bda60b169887ec3464b73178c40c53" translate="yes" xml:space="preserve">
          <source>The management interface for the &lt;a href=&quot;../../../../java.logging/java/util/logging/package-summary&quot;&gt;logging&lt;/a&gt; facility.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.logging/java/util/logging/package-summary&quot;&gt;日志记录&lt;/a&gt;工具的管理界面。</target>
        </trans-unit>
        <trans-unit id="45ce2f8d545e61efecccb099b6f99b2e77692328" translate="yes" xml:space="preserve">
          <source>The management interface for the &lt;a href=&quot;../../util/logging/package-summary&quot;&gt;logging&lt;/a&gt; facility.</source>
          <target state="translated">&lt;a href=&quot;../../util/logging/package-summary&quot;&gt;日志记录&lt;/a&gt;工具的管理界面。</target>
        </trans-unit>
        <trans-unit id="e5da84562122ccb1a4b9947a79eb4868f2181d64" translate="yes" xml:space="preserve">
          <source>The management interface for the class loading system of the Java virtual machine.</source>
          <target state="translated">Java虚拟机的类加载系统的管理界面。</target>
        </trans-unit>
        <trans-unit id="8a6fb7cb11948cb467a53e0c5155033baa489d24" translate="yes" xml:space="preserve">
          <source>The management interface for the compilation system of the Java virtual machine.</source>
          <target state="translated">Java虚拟机的编译系统的管理界面。</target>
        </trans-unit>
        <trans-unit id="28e4b42aecf0c56a50db52a87728efbf52162f13" translate="yes" xml:space="preserve">
          <source>The management interface for the garbage collection of the Java virtual machine.</source>
          <target state="translated">Java虚拟机的垃圾收集管理界面。</target>
        </trans-unit>
        <trans-unit id="cd92e36a53dffe8143090f88af9bf00d44b66033" translate="yes" xml:space="preserve">
          <source>The management interface for the garbage collection of the Java virtual machine. Garbage collection is the process that the Java virtual machine uses to find and reclaim unreachable objects to free up memory space. A garbage collector is one type of &lt;a href=&quot;memorymanagermxbean&quot;&gt;&lt;code&gt;memory manager&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Java虚拟机的垃圾回收的管理接口。垃圾收集是Java虚拟机用来查找和回收无法访问的对象以释放内存空间的过程。垃圾收集器是一种&lt;a href=&quot;memorymanagermxbean&quot;&gt; &lt;code&gt;memory manager&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0440ae4e2f0264de76917a1f8baa0480d3a12abc" translate="yes" xml:space="preserve">
          <source>The management interface for the logging facility.</source>
          <target state="translated">记录设施的管理界面。</target>
        </trans-unit>
        <trans-unit id="93c3b79d3c66ce577a9864a254628b4a822e847f" translate="yes" xml:space="preserve">
          <source>The management interface for the logging facility. &lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;java.lang.management.PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt; is the management interface for logging facility registered in the &lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt;. It is recommended to use the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; obtained via the &lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMXBean(java.lang.Class)&quot;&gt;&lt;code&gt;ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">日志记录工具的管理界面。&lt;a href=&quot;../../../../java.management/java/lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;java.lang.management.PlatformLoggingMXBean&lt;/code&gt; &lt;/a&gt;是在&lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;注册的日志记录工具的管理接口。建议使用 &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 经由获得&lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMXBean(java.lang.Class)&quot;&gt; &lt;code&gt;ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class)&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="3ef314b5f9f21eb1016958cad7f6ed16998f4dbf" translate="yes" xml:space="preserve">
          <source>The management interface for the logging facility. It is recommended to use the &lt;a href=&quot;../../lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt; management interface that implements all attributes defined in this &lt;code&gt;LoggingMXBean&lt;/code&gt;. The &lt;a href=&quot;../../lang/management/managementfactory#getPlatformMXBean-java.lang.Class-&quot;&gt;&lt;code&gt;ManagementFactory.getPlatformMXBean&lt;/code&gt;&lt;/a&gt; method can be used to obtain the &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; object representing the management interface for logging.</source>
          <target state="translated">日志记录工具的管理界面。建议使用&lt;a href=&quot;../../lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; &lt;/a&gt;管理接口，该接口实现此 &lt;code&gt;LoggingMXBean&lt;/code&gt; 中定义的所有属性。该&lt;a href=&quot;../../lang/management/managementfactory#getPlatformMXBean-java.lang.Class-&quot;&gt; &lt;code&gt;ManagementFactory.getPlatformMXBean&lt;/code&gt; &lt;/a&gt;方法可用于获得 &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; 表示用于记录管理接口对象。</target>
        </trans-unit>
        <trans-unit id="10c44d718b1a21753bf3b069730f590be918c45f" translate="yes" xml:space="preserve">
          <source>The management interface for the memory system of the Java virtual machine.</source>
          <target state="translated">Java虚拟机的内存系统的管理界面。</target>
        </trans-unit>
        <trans-unit id="847ac3d0883ec1a323c757fc548b0fd4d2e2c36d" translate="yes" xml:space="preserve">
          <source>The management interface for the operating system on which the Java virtual machine is running.</source>
          <target state="translated">Java虚拟机运行的操作系统的管理界面。</target>
        </trans-unit>
        <trans-unit id="6eb52bce02ed0ce174dbff28ae7ecc47698722a7" translate="yes" xml:space="preserve">
          <source>The management interface for the runtime system of the Java virtual machine.</source>
          <target state="translated">Java虚拟机的运行时系统的管理界面。</target>
        </trans-unit>
        <trans-unit id="8e39ca7a7b013a02644c7fe0d0da87295154d935" translate="yes" xml:space="preserve">
          <source>The management interface for the thread system of the Java virtual machine.</source>
          <target state="translated">Java虚拟机线程系统的管理界面。</target>
        </trans-unit>
        <trans-unit id="0f89f384aef1c053634fba77e812dec13d803a9b" translate="yes" xml:space="preserve">
          <source>The management interface of this Standard MBean (or MXBean).</source>
          <target state="translated">该标准MBean(或MXBean)的管理界面。</target>
        </trans-unit>
        <trans-unit id="9a8a459cca47f20b145ecf310bebc20942a80db0" translate="yes" xml:space="preserve">
          <source>The management interfaces are also registered with the platform &lt;a href=&quot;../../../javax/management/mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; that uniquely identifies the management interface within the &lt;code&gt;MBeanServer&lt;/code&gt; takes the form:</source>
          <target state="translated">管理界面也已向平台&lt;a href=&quot;../../../javax/management/mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt;注册。唯一标识 &lt;code&gt;MBeanServer&lt;/code&gt; 中管理接口的&lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;的形式为：</target>
        </trans-unit>
        <trans-unit id="351e7dc77ed2411113c4e0ace52b31f98531806d" translate="yes" xml:space="preserve">
          <source>The management of a signer's private keys is an important and sensitive issue that should be handled by subclasses as appropriate to their intended use.</source>
          <target state="translated">签名者私钥的管理是一个重要而敏感的问题,应该由子类根据其预期用途适当处理。</target>
        </trans-unit>
        <trans-unit id="3e3ee70b5049efe06c2a7d7c78dad8ec1c86cb19" translate="yes" xml:space="preserve">
          <source>The manifest of the agent JAR file must contain the attribute &lt;code&gt;
 Premain-Class&lt;/code&gt; in its main manifest. The value of this attribute is the name of the</source>
          <target state="translated">代理JAR文件的清单必须在其主要清单中包含属性 &lt;code&gt; Premain-Class&lt;/code&gt; 。此属性的值是</target>
        </trans-unit>
        <trans-unit id="d605640695e5655c5683f5e380c0d4a62c4c111b" translate="yes" xml:space="preserve">
          <source>The manifest of the agent JAR must contain the attribute &lt;code&gt;
   Agent-Class&lt;/code&gt; in its main manfiest. The value of this attribute is the name of the</source>
          <target state="translated">代理JAR的清单必须在其主要清单中包含属性 &lt;code&gt; Agent-Class&lt;/code&gt; 。此属性的值是</target>
        </trans-unit>
        <trans-unit id="0971fe683af5a5e2e54b47c769fab0246a3b75de" translate="yes" xml:space="preserve">
          <source>The manual feed input tray in the printer.</source>
          <target state="translated">打印机中的手动进纸输入托盘。</target>
        </trans-unit>
        <trans-unit id="9d81f1be91cb53728efc46880aacfe384ada117f" translate="yes" xml:space="preserve">
          <source>The map is unmodifiable.</source>
          <target state="translated">地图是无法修改的。</target>
        </trans-unit>
        <trans-unit id="148614dffcd2a1483f4669ef60a289f4891d5d8f" translate="yes" xml:space="preserve">
          <source>The map returned by this method will have one entry for each charset for which support is available in the current Java virtual machine. If two or more supported charsets have the same canonical name then the resulting map will contain just one of them; which one it will contain is not specified.</source>
          <target state="translated">此方法返回的映射将为当前Java虚拟机中支持的每个字符集提供一个条目。如果两个或更多受支持的字符集具有相同的规范名称,那么生成的映射将只包含其中的一个;它将包含哪一个没有指定。</target>
        </trans-unit>
        <trans-unit id="cc3989e3137f8abc67f81771ff3d11582e2763d1" translate="yes" xml:space="preserve">
          <source>The map will not contain a mapping for the specified key once the call returns.</source>
          <target state="translated">一旦调用返回,该映射将不包含指定键的映射。</target>
        </trans-unit>
        <trans-unit id="8d6d635a3361ab121278dfa747bf9a62761f81a7" translate="yes" xml:space="preserve">
          <source>The mapped Java type, &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;
        List&amp;lt;String&amp;gt;&lt;/code&gt;&lt;em&gt;)&lt;/em&gt;, is &lt;code&gt;String[]&lt;/code&gt;.</source>
          <target state="translated">映射的Java类型&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt; List&amp;lt;String&amp;gt;&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;是 &lt;code&gt;String[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5efef9ce16d66b6a65a451ff2af5a09326eda0bc" translate="yes" xml:space="preserve">
          <source>The mapped Java type, &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt;&lt;em&gt;)&lt;/em&gt;, is &lt;code&gt;String[]&lt;/code&gt;.</source>
          <target state="translated">映射的Java类型&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;是 &lt;code&gt;String[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fd167e9165a3f6429397c891dd64da4bb93b1858" translate="yes" xml:space="preserve">
          <source>The mapped byte buffer</source>
          <target state="translated">映射的字节缓冲区</target>
        </trans-unit>
        <trans-unit id="5bc578c802f074a2b47893ebad7e6008cc29a3b3" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;ConfigurationInfo&lt;/code&gt; is &lt;code&gt;CompositeData&lt;/code&gt; with attributes as specified in the &lt;a href=&quot;configurationinfo#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;ConfigurationInfo.from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;ConfigurationInfo&lt;/code&gt; 的映射类型为 &lt;code&gt;CompositeData&lt;/code&gt; ,具有在&lt;a href=&quot;configurationinfo#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;ConfigurationInfo.from&lt;/code&gt; &lt;/a&gt;方法中指定的属性。</target>
        </trans-unit>
        <trans-unit id="eec85321356219422ccc94da919c9955fb20ab7d" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;EventTypeInfo&lt;/code&gt; is &lt;code&gt;CompositeData&lt;/code&gt; with attributes as specified in the &lt;a href=&quot;eventtypeinfo#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;EventTypeInfo.from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;EventTypeInfo&lt;/code&gt; 的映射类型为 &lt;code&gt;CompositeData&lt;/code&gt; ,具有在&lt;a href=&quot;eventtypeinfo#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;EventTypeInfo.from&lt;/code&gt; &lt;/a&gt;方法中指定的属性。</target>
        </trans-unit>
        <trans-unit id="b2312b24991b37933ebe862c787f3ef5bd90a444" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; is &lt;code&gt;String[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; 的映射类型为 &lt;code&gt;String[]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b54d5b016c52978ccbd2bdfb38bb414673876d40" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;Map&amp;lt;String,String&amp;gt;&lt;/code&gt; is &lt;a href=&quot;../../../javax/management/openmbean/tabulardata&quot;&gt;&lt;code&gt;TabularData&lt;/code&gt;&lt;/a&gt; with two items in each row as follows:</source>
          <target state="translated">&lt;code&gt;Map&amp;lt;String,String&amp;gt;&lt;/code&gt; 的映射类型为&lt;a href=&quot;../../../javax/management/openmbean/tabulardata&quot;&gt; &lt;code&gt;TabularData&lt;/code&gt; &lt;/a&gt;，每行中有两个项目，如下所示：</target>
        </trans-unit>
        <trans-unit id="8e952ed904175c8930ea48403051b5d05c5545c6" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;MemoryType&lt;/code&gt; is &lt;code&gt;String&lt;/code&gt; and the value is the name of the &lt;code&gt;MemoryType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MemoryType&lt;/code&gt; 的映射类型为 &lt;code&gt;String&lt;/code&gt; ，值是 &lt;code&gt;MemoryType&lt;/code&gt; 的名称。</target>
        </trans-unit>
        <trans-unit id="9e1ac76286a906fe472a7e36c4b7b1ffadc6a203" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;MemoryUsage&lt;/code&gt; is &lt;code&gt;CompositeData&lt;/code&gt; with attributes as specified in &lt;a href=&quot;memoryusage#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;MemoryUsage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MemoryUsage&lt;/code&gt; 的映射类型是 &lt;code&gt;CompositeData&lt;/code&gt; ,具有在&lt;a href=&quot;memoryusage#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;MemoryUsage&lt;/code&gt; 中&lt;/a&gt;指定的属性。</target>
        </trans-unit>
        <trans-unit id="fbaf85954f7772b1959d714dcd3394a5212a77f6" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;MemoryUsage&lt;/code&gt; is &lt;code&gt;CompositeData&lt;/code&gt; with attributes as specified in &lt;a href=&quot;memoryusage#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;MemoryUsage&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MemoryUsage&lt;/code&gt; 的映射类型是 &lt;code&gt;CompositeData&lt;/code&gt; ,具有在&lt;a href=&quot;memoryusage#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;MemoryUsage&lt;/code&gt; 中&lt;/a&gt;指定的属性。</target>
        </trans-unit>
        <trans-unit id="6cf8ae0181c2603669715b7b8d47d729964fcbb5" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;RecordingInfo&lt;/code&gt; is &lt;code&gt;CompositeData&lt;/code&gt; with attributes as specified in the &lt;a href=&quot;recordinginfo#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;RecordingInfo.from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;RecordingInfo&lt;/code&gt; 的映射类型是 &lt;code&gt;CompositeData&lt;/code&gt; ,具有在&lt;a href=&quot;recordinginfo#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;RecordingInfo.from&lt;/code&gt; &lt;/a&gt;方法中指定的属性。</target>
        </trans-unit>
        <trans-unit id="27168ca3751e58f41f1b0b7691cf1f63add33d5f" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;ThreadInfo&lt;/code&gt; is &lt;code&gt;CompositeData&lt;/code&gt; with attributes as specified in the &lt;a href=&quot;threadinfo#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;ThreadInfo.from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;ThreadInfo&lt;/code&gt; 的映射类型是 &lt;code&gt;CompositeData&lt;/code&gt; ,具有&lt;a href=&quot;threadinfo#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;ThreadInfo.from&lt;/code&gt; &lt;/a&gt;方法中指定的属性。</target>
        </trans-unit>
        <trans-unit id="61f3a8b7b0aafedaf94c7afc27dfb44c20f6f872" translate="yes" xml:space="preserve">
          <source>The mapped type of &lt;code&gt;ThreadInfo&lt;/code&gt; is &lt;code&gt;CompositeData&lt;/code&gt; with attributes as specified in the &lt;a href=&quot;threadinfo#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;ThreadInfo.from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;ThreadInfo&lt;/code&gt; 的映射类型为 &lt;code&gt;CompositeData&lt;/code&gt; ,具有&lt;a href=&quot;threadinfo#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;ThreadInfo.from&lt;/code&gt; &lt;/a&gt;方法中指定的属性。</target>
        </trans-unit>
        <trans-unit id="3c087cdbe45fea6b6b9ec0f6437a67475b253bf7" translate="yes" xml:space="preserve">
          <source>The mapping from a local date-time to an offset is not straightforward. There are three cases:</source>
          <target state="translated">从本地日期-时间到偏移量的映射并不简单。有三种情况。</target>
        </trans-unit>
        <trans-unit id="12e8672b358b7324e88869fe3994e4595f187b3a" translate="yes" xml:space="preserve">
          <source>The mapping from an instant to an offset is simple, there is only one valid offset for each instant. This method returns that offset.</source>
          <target state="translated">从一个瞬间到一个偏移量的映射很简单,每个瞬间只有一个有效的偏移量。本方法返回该偏移量。</target>
        </trans-unit>
        <trans-unit id="efa8f760fe15a8611f03234f6225c472bbad9757" translate="yes" xml:space="preserve">
          <source>The mapping function is executed using the client's &lt;a href=&quot;httpclient#executor()&quot;&gt;executor&lt;/a&gt;, and can therefore be used to map any response body type, including blocking &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;, as shown in the following example which uses a well-known JSON parser to convert an &lt;code&gt;InputStream&lt;/code&gt; into any annotated Java type.</source>
          <target state="translated">映射函数是使用客户端的&lt;a href=&quot;httpclient#executor()&quot;&gt;执行程序执行的&lt;/a&gt;，因此可用于映射任何响应主体类型，包括阻塞&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;，如以下示例所示，该示例使用众所周知的JSON解析器将 &lt;code&gt;InputStream&lt;/code&gt; 转换为任何带注释的Java类型。</target>
        </trans-unit>
        <trans-unit id="a0da09c5baf6c433f0daaa54f1f38ab8df0341d5" translate="yes" xml:space="preserve">
          <source>The mapping function is executed using the client's &lt;a href=&quot;httpclient#executor()&quot;&gt;executor&lt;/a&gt;, and can therefore be used to map any response body type, including blocking &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;. However, performing any blocking operation in the mapper function runs the risk of blocking the executor's thread for an unknown amount of time (at least until the blocking operation finishes), which may end up starving the executor of available threads. Therefore, in the case where mapping to the desired type might block (e.g. by reading on the &lt;code&gt;InputStream&lt;/code&gt;), then mapping to a &lt;a href=&quot;../../../../java.base/java/util/function/supplier&quot;&gt;&lt;code&gt;Supplier&lt;/code&gt;&lt;/a&gt; of the desired type and deferring the blocking operation until &lt;a href=&quot;../../../../java.base/java/util/function/supplier#get()&quot;&gt;&lt;code&gt;Supplier::get&lt;/code&gt;&lt;/a&gt; is invoked by the caller's thread should be preferred, as shown in the following example which uses a well-known JSON parser to convert an &lt;code&gt;InputStream&lt;/code&gt; into any annotated Java type.</source>
          <target state="translated">映射函数是使用客户端的&lt;a href=&quot;httpclient#executor()&quot;&gt;执行程序执行的&lt;/a&gt;，因此可以用于映射任何响应主体类型，包括阻塞&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;。但是，在映射器函数中执行任何阻塞操作都会冒着在未知时间（至少直到阻塞操作完成）之前阻塞执行程序线程的风险，这可能最终会使可用线程的执行程序饿死。因此，在映射到所需类型的情况可能会阻塞的情况下（例如，通过读取 &lt;code&gt;InputStream&lt;/code&gt; ），然后映射到所需类型的&lt;a href=&quot;../../../../java.base/java/util/function/supplier&quot;&gt; &lt;code&gt;Supplier&lt;/code&gt; &lt;/a&gt;并将延迟操作推迟到&lt;a href=&quot;../../../../java.base/java/util/function/supplier#get()&quot;&gt; &lt;code&gt;Supplier::get&lt;/code&gt; &lt;/a&gt;首选由调用者的线程调用，如下面的示例所示，该示例使用众所周知的JSON解析器将 &lt;code&gt;InputStream&lt;/code&gt; 转换为任何带注释的Java类型。</target>
        </trans-unit>
        <trans-unit id="6ef4cb909339e0195cefa4b8944e1ab977800051" translate="yes" xml:space="preserve">
          <source>The mapping function must not modify this map during computation.</source>
          <target state="translated">映射函数在计算过程中不得修改此图。</target>
        </trans-unit>
        <trans-unit id="213db0c7af81269192b73e1d66cfb3a1ecd68846" translate="yes" xml:space="preserve">
          <source>The mapping function should not modify this map during computation.</source>
          <target state="translated">在计算过程中,映射函数不应该修改这个映射。</target>
        </trans-unit>
        <trans-unit id="f57b59469df7401fda6a0c7302c57fa6c971a325" translate="yes" xml:space="preserve">
          <source>The mapping in the Java programming language for the SQL &lt;code&gt;CLOB&lt;/code&gt; type.</source>
          <target state="translated">Java编程语言中SQL &lt;code&gt;CLOB&lt;/code&gt; 类型的映射。</target>
        </trans-unit>
        <trans-unit id="602eb684f00ec50b36cf464526819f977542dd71" translate="yes" xml:space="preserve">
          <source>The mapping in the Java programming language for the SQL &lt;code&gt;CLOB&lt;/code&gt; type. An SQL &lt;code&gt;CLOB&lt;/code&gt; is a built-in type that stores a Character Large Object as a column value in a row of a database table. By default drivers implement a &lt;code&gt;Clob&lt;/code&gt; object using an SQL &lt;code&gt;locator(CLOB)&lt;/code&gt;, which means that a &lt;code&gt;Clob&lt;/code&gt; object contains a logical pointer to the SQL &lt;code&gt;CLOB&lt;/code&gt; data rather than the data itself. A &lt;code&gt;Clob&lt;/code&gt; object is valid for the duration of the transaction in which it was created.</source>
          <target state="translated">Java编程语言中SQL &lt;code&gt;CLOB&lt;/code&gt; 类型的映射。SQL &lt;code&gt;CLOB&lt;/code&gt; 是一种内置类型，它将字符大对象作为列值存储在数据库表的一行中。默认情况下，驱动程序使用SQL &lt;code&gt;locator(CLOB)&lt;/code&gt; 实现 &lt;code&gt;Clob&lt;/code&gt; 对象，这意味着 &lt;code&gt;Clob&lt;/code&gt; 对象包含指向SQL &lt;code&gt;CLOB&lt;/code&gt; 数据而不是数据本身的逻辑指针。甲 &lt;code&gt;Clob&lt;/code&gt; 对象是有效的在它被创建的事务的持续时间。</target>
        </trans-unit>
        <trans-unit id="f7e262f8d0324c26413eb8c1ab5f37439d2ba06d" translate="yes" xml:space="preserve">
          <source>The mapping in the Java programming language for the SQL &lt;code&gt;NCLOB&lt;/code&gt; type.</source>
          <target state="translated">Java编程语言中SQL &lt;code&gt;NCLOB&lt;/code&gt; 类型的映射。</target>
        </trans-unit>
        <trans-unit id="e6b81cfe25452ed4746be6ee376319b2833e7ce3" translate="yes" xml:space="preserve">
          <source>The mapping in the Java programming language for the SQL &lt;code&gt;NCLOB&lt;/code&gt; type. An SQL &lt;code&gt;NCLOB&lt;/code&gt; is a built-in type that stores a Character Large Object using the National Character Set as a column value in a row of a database table.</source>
          <target state="translated">Java编程语言中SQL &lt;code&gt;NCLOB&lt;/code&gt; 类型的映射。SQL &lt;code&gt;NCLOB&lt;/code&gt; 是一种内置类型，它使用&amp;ldquo;国家字符集&amp;rdquo;作为数据库表行中的列值来存储&amp;ldquo;字符大对象&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="a571d2bfd21eab9df5c46eaa9052b6dcad735a3e" translate="yes" xml:space="preserve">
          <source>The mapping in the Java programming language for the SQL type &lt;code&gt;ARRAY&lt;/code&gt;.</source>
          <target state="translated">SQL类型 &lt;code&gt;ARRAY&lt;/code&gt; 在Java编程语言中的映射。</target>
        </trans-unit>
        <trans-unit id="52f0139dde804c78136c63591218cc96ffa35433" translate="yes" xml:space="preserve">
          <source>The mapping in the Java programming language for the SQL type &lt;code&gt;ARRAY&lt;/code&gt;. By default, an &lt;code&gt;Array&lt;/code&gt; value is a transaction-duration reference to an SQL &lt;code&gt;ARRAY&lt;/code&gt; value. By default, an &lt;code&gt;Array&lt;/code&gt; object is implemented using an SQL LOCATOR(array) internally, which means that an &lt;code&gt;Array&lt;/code&gt; object contains a logical pointer to the data in the SQL &lt;code&gt;ARRAY&lt;/code&gt; value rather than containing the &lt;code&gt;ARRAY&lt;/code&gt; value's data.</source>
          <target state="translated">SQL类型 &lt;code&gt;ARRAY&lt;/code&gt; 在Java编程语言中的映射。默认情况下， &lt;code&gt;Array&lt;/code&gt; 值是对SQL &lt;code&gt;ARRAY&lt;/code&gt; 值的事务持续时间引用。默认情况下，内部使用SQL LOCATOR（array）实现 &lt;code&gt;Array&lt;/code&gt; 对象，这意味着 &lt;code&gt;Array&lt;/code&gt; 对象包含指向SQL &lt;code&gt;ARRAY&lt;/code&gt; 值中的数据的逻辑指针，而不包含 &lt;code&gt;ARRAY&lt;/code&gt; 值的数据。</target>
        </trans-unit>
        <trans-unit id="04436d9ae26c83110d5516cdd1d08ae63970fe91" translate="yes" xml:space="preserve">
          <source>The mapping in the Java programming language of an SQL &lt;code&gt;REF&lt;/code&gt; value, which is a reference to an SQL structured type value in the database.</source>
          <target state="translated">Java编程语言中SQL &lt;code&gt;REF&lt;/code&gt; 值的映射，该值是对数据库中SQL结构化类型值的引用。</target>
        </trans-unit>
        <trans-unit id="da7f373a020c4b2a772bb84d65fd06df14d3ba1a" translate="yes" xml:space="preserve">
          <source>The mapping in the Java&amp;trade; programming language for the SQL &lt;code&gt;CLOB&lt;/code&gt; type.</source>
          <target state="translated">Java&amp;trade;编程语言中SQL &lt;code&gt;CLOB&lt;/code&gt; 类型的映射。</target>
        </trans-unit>
        <trans-unit id="6975cb32bff899229ce9f4e10e17293c269e7cf3" translate="yes" xml:space="preserve">
          <source>The mapping in the Java&amp;trade; programming language for the SQL &lt;code&gt;CLOB&lt;/code&gt; type. An SQL &lt;code&gt;CLOB&lt;/code&gt; is a built-in type that stores a Character Large Object as a column value in a row of a database table. By default drivers implement a &lt;code&gt;Clob&lt;/code&gt; object using an SQL &lt;code&gt;locator(CLOB)&lt;/code&gt;, which means that a &lt;code&gt;Clob&lt;/code&gt; object contains a logical pointer to the SQL &lt;code&gt;CLOB&lt;/code&gt; data rather than the data itself. A &lt;code&gt;Clob&lt;/code&gt; object is valid for the duration of the transaction in which it was created.</source>
          <target state="translated">Java&amp;trade;编程语言中SQL &lt;code&gt;CLOB&lt;/code&gt; 类型的映射。SQL &lt;code&gt;CLOB&lt;/code&gt; 是一种内置类型，它将字符大对象作为列值存储在数据库表的一行中。默认情况下，驱动程序使用SQL &lt;code&gt;locator(CLOB)&lt;/code&gt; 实现 &lt;code&gt;Clob&lt;/code&gt; 对象，这意味着 &lt;code&gt;Clob&lt;/code&gt; 对象包含指向SQL &lt;code&gt;CLOB&lt;/code&gt; 数据而不是数据本身的逻辑指针。甲 &lt;code&gt;Clob&lt;/code&gt; 对象是有效的在它被创建的事务的持续时间。</target>
        </trans-unit>
        <trans-unit id="a55434df05c4f86901f5b64057a68cfa88f0577d" translate="yes" xml:space="preserve">
          <source>The mapping in the Java&amp;trade; programming language for the SQL &lt;code&gt;NCLOB&lt;/code&gt; type.</source>
          <target state="translated">Java&amp;trade;编程语言中SQL &lt;code&gt;NCLOB&lt;/code&gt; 类型的映射。</target>
        </trans-unit>
        <trans-unit id="7b63425c41c17fe4291c19c2b6017e208a65e5b0" translate="yes" xml:space="preserve">
          <source>The mapping in the Java&amp;trade; programming language for the SQL &lt;code&gt;NCLOB&lt;/code&gt; type. An SQL &lt;code&gt;NCLOB&lt;/code&gt; is a built-in type that stores a Character Large Object using the National Character Set as a column value in a row of a database table.</source>
          <target state="translated">Java&amp;trade;编程语言中SQL &lt;code&gt;NCLOB&lt;/code&gt; 类型的映射。SQL &lt;code&gt;NCLOB&lt;/code&gt; 是一种内置类型，它使用&amp;ldquo;国家字符集&amp;rdquo;作为数据库表行中的列值来存储&amp;ldquo;字符大对象&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="255c64e2047c17ae5184bedb71a28f00f28b7429" translate="yes" xml:space="preserve">
          <source>The mapping in the JavaTM programming language for the SQL XML type.</source>
          <target state="translated">SQL XML类型在JavaTM编程语言中的映射。</target>
        </trans-unit>
        <trans-unit id="3e6756cd08dbba5b84d5d8e2892c437d35af2b09" translate="yes" xml:space="preserve">
          <source>The mapping in the JavaTM programming language for the SQL XML type. XML is a built-in type that stores an XML value as a column value in a row of a database table. By default drivers implement an SQLXML object as a logical pointer to the XML data rather than the data itself. An SQLXML object is valid for the duration of the transaction in which it was created.</source>
          <target state="translated">SQL XML类型在JavaTM编程语言中的映射。XML是一种内置类型,它将XML值存储为数据库表中一行的列值。默认情况下,驱动程序将 SQLXML 对象作为 XML 数据的逻辑指针而不是数据本身来实现。SQLXML对象在创建它的事务的持续时间内有效。</target>
        </trans-unit>
        <trans-unit id="e1c4016a1547ff269142e86df6754b622f9096c2" translate="yes" xml:space="preserve">
          <source>The mapping is as follows:</source>
          <target state="translated">图谱如下:</target>
        </trans-unit>
        <trans-unit id="070cdcd14f1b28d83ab8a6aeee5919d756ab62c0" translate="yes" xml:space="preserve">
          <source>The masks are also used to specify to which types of events an AWTEventListener should listen. The masks are bitwise-ORed together and passed to Toolkit.addAWTEventListener.</source>
          <target state="translated">掩码也用于指定AWTEventListener应该监听哪些类型的事件。这些掩码被位或一起传递给Toolkit.addAWTEventListener。</target>
        </trans-unit>
        <trans-unit id="d94cfa1b774fa8e3080e7fb76e5c183d18614b0c" translate="yes" xml:space="preserve">
          <source>The master list of all listeners registered by other classes.</source>
          <target state="translated">其他类注册的所有听众的主列表。</target>
        </trans-unit>
        <trans-unit id="bd3430496cad125fbd6b4a89448dfd4066183dd3" translate="yes" xml:space="preserve">
          <source>The master list of all listeners registered by other classes. This can only be publicly modified by calling the add or remove listener methods in this class.</source>
          <target state="translated">其他类注册的所有监听器的主列表。只能通过调用该类中的add或remove list方法来公开修改。</target>
        </trans-unit>
        <trans-unit id="b44258d85a346a4c9b6eb26fc12ad6d8021de13a" translate="yes" xml:space="preserve">
          <source>The match flags specified when this pattern was compiled</source>
          <target state="translated">编译此模式时指定的匹配标志。</target>
        </trans-unit>
        <trans-unit id="b6161dc0d1d482e470d3b40c8580a8c7a9b72e62" translate="yes" xml:space="preserve">
          <source>The matchAllNames flag is &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">matchAllNames标志默认为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83a79f7443cf79cc4fa21a88607c23e056fb21d4" translate="yes" xml:space="preserve">
          <source>The matching element or &lt;code&gt;null&lt;/code&gt; if there is none.</source>
          <target state="translated">匹配的元素；如果不存在，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1cbc75262fd1ef2b8dadd8accd1736228c68ecd9" translate="yes" xml:space="preserve">
          <source>The matching elements.</source>
          <target state="translated">匹配的要素;</target>
        </trans-unit>
        <trans-unit id="bca93fe90b1b894db1cfc72931b5ea41fde9342c" translate="yes" xml:space="preserve">
          <source>The matching of &lt;a href=&quot;path#getRoot()&quot;&gt;&lt;code&gt;root&lt;/code&gt;&lt;/a&gt; components is highly implementation-dependent and is not specified.</source>
          <target state="translated">&lt;a href=&quot;path#getRoot()&quot;&gt; &lt;code&gt;root&lt;/code&gt; &lt;/a&gt;组件的匹配高度依赖于实现，因此未指定。</target>
        </trans-unit>
        <trans-unit id="9bde4024a82b87c160e08374c35154b8fc469748" translate="yes" xml:space="preserve">
          <source>The matching of &lt;a href=&quot;path#getRoot--&quot;&gt;&lt;code&gt;root&lt;/code&gt;&lt;/a&gt; components is highly implementation-dependent and is not specified.</source>
          <target state="translated">&lt;a href=&quot;path#getRoot--&quot;&gt; &lt;code&gt;root&lt;/code&gt; &lt;/a&gt;组件的匹配高度依赖于实现，因此未指定。</target>
        </trans-unit>
        <trans-unit id="bf6178e4c5f6199ffdea85dc0025cfc04da4e3b8" translate="yes" xml:space="preserve">
          <source>The matrix associated with this band combine operation.</source>
          <target state="translated">与该波段组合操作相关的矩阵。</target>
        </trans-unit>
        <trans-unit id="f72eb688190acfe479f553b3a38062f652d5b181" translate="yes" xml:space="preserve">
          <source>The matrix representing the returned transform is:</source>
          <target state="translated">代表返回变换的矩阵是:</target>
        </trans-unit>
        <trans-unit id="3d6e9efeee5e8c75c854f1ccf14ca0392463338e" translate="yes" xml:space="preserve">
          <source>The matrix representing this transform becomes:</source>
          <target state="translated">代表这种变换的矩阵成为。</target>
        </trans-unit>
        <trans-unit id="c1fa5aaa90da896f57abcdb817d4038ebd7a2b72" translate="yes" xml:space="preserve">
          <source>The maximize button text property.</source>
          <target state="translated">最大化按钮文本属性。</target>
        </trans-unit>
        <trans-unit id="20326d370501a0af41665f4c9a5ca80891b61f78" translate="yes" xml:space="preserve">
          <source>The maximize button.</source>
          <target state="translated">最大化按钮。</target>
        </trans-unit>
        <trans-unit id="dafe5c013a4d23dd7d97352d183fb7befdc1ae98" translate="yes" xml:space="preserve">
          <source>The maximize icon.</source>
          <target state="translated">最大化图标。</target>
        </trans-unit>
        <trans-unit id="fed4268f693a6541532c56cc66c5cf2f9c565e69" translate="yes" xml:space="preserve">
          <source>The maximum allowed length of the domain name in this implementation is &lt;code&gt;Integer.MAX_VALUE/4&lt;/code&gt;</source>
          <target state="translated">此实现中域名的最大允许长度为 &lt;code&gt;Integer.MAX_VALUE/4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4304755a2aafc9e7c8b0e05b8ff5b0b036a8a9a3" translate="yes" xml:space="preserve">
          <source>The maximum amount by which the left side of this glyph can grow.</source>
          <target state="translated">这个字形的左侧可以增长的最大数量。</target>
        </trans-unit>
        <trans-unit id="0c31d2a2db4cd524c3f8ca2915ec9d8ee723482b" translate="yes" xml:space="preserve">
          <source>The maximum amount by which the left side of this glyph can shrink (a positive number).</source>
          <target state="translated">这个字形的左边可以收缩的最大数量(正数)。</target>
        </trans-unit>
        <trans-unit id="8fe564f1a9e6b8c8a78cadb8e8049f985c60ce98" translate="yes" xml:space="preserve">
          <source>The maximum amount by which the right side of this glyph can grow.</source>
          <target state="translated">这个字形的右边可以增长的最大数量。</target>
        </trans-unit>
        <trans-unit id="5267028f1e50e91bfa8aed05f8762e1d741b42fc" translate="yes" xml:space="preserve">
          <source>The maximum amount by which the right side of this glyph can shrink (a positive number).</source>
          <target state="translated">这个字形的右边可以收缩的最大数量(正数)。</target>
        </trans-unit>
        <trans-unit id="caaaddcac02d29b7e0729b8b5a3f5eaa939992e8" translate="yes" xml:space="preserve">
          <source>The maximum normalized component value.</source>
          <target state="translated">最大归一化分量值。</target>
        </trans-unit>
        <trans-unit id="da03290405b7c1d565b96a7f711d623661662ec8" translate="yes" xml:space="preserve">
          <source>The maximum number of arguments is limited by the maximum dimension of a Java array as defined by</source>
          <target state="translated">参数的最大数量受Java数组的最大维度限制,其定义为</target>
        </trans-unit>
        <trans-unit id="ca2a7698e53e08ca40902d31c125a0421b565e34" translate="yes" xml:space="preserve">
          <source>The maximum number of bytes that will be produced per character of input</source>
          <target state="translated">每个输入字符的最大字节数。</target>
        </trans-unit>
        <trans-unit id="7e9aed519157935d36669fabf1cedde3311fc915" translate="yes" xml:space="preserve">
          <source>The maximum number of characters that will be produced per byte of input</source>
          <target state="translated">每一字节输入的最大字符数。</target>
        </trans-unit>
        <trans-unit id="91152b63e685cd48eb7d0248d3371320972bb796" translate="yes" xml:space="preserve">
          <source>The maximum number of entries that will be returned.</source>
          <target state="translated">将返回的最大条目数。</target>
        </trans-unit>
        <trans-unit id="93aede5def5caeba565f92f79b9343892253bbbf" translate="yes" xml:space="preserve">
          <source>The maximum number of inbound streams</source>
          <target state="translated">入站流的最大数量</target>
        </trans-unit>
        <trans-unit id="5b00c15ede0bb5cd986a95da4286e0f38caac37d" translate="yes" xml:space="preserve">
          <source>The maximum number of method handles in the chain.</source>
          <target state="translated">链中方法句柄的最大数量。</target>
        </trans-unit>
        <trans-unit id="a866b66e70e23668eadac882ece07b5ebb50cd08" translate="yes" xml:space="preserve">
          <source>The maximum number of method handles in the chain. Defaults to 8. You can override it in a subclass if you need to change the value.</source>
          <target state="translated">链中方法句柄的最大数量。默认值为8。如果你需要改变这个值,你可以在子类中重写它。</target>
        </trans-unit>
        <trans-unit id="83dfad991209eb6d5355a6911b7f865dcd550c22" translate="yes" xml:space="preserve">
          <source>The maximum number of outbound streams</source>
          <target state="translated">最大出站流数</target>
        </trans-unit>
        <trans-unit id="79be7d1b45b94d650237ca9ef607fb0644e6d715" translate="yes" xml:space="preserve">
          <source>The maximum number of progressive passes to read from the source.</source>
          <target state="translated">从源头读取的最大渐进次数。</target>
        </trans-unit>
        <trans-unit id="c789ee02ecf9b1e05f4f980e654a03a1c6c8656a" translate="yes" xml:space="preserve">
          <source>The maximum number of progressive passes to read from the source. By default, the value is set to &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;, which indicates that passes up to and including the last available pass should be decoded.</source>
          <target state="translated">从源读取的最大渐进遍数。默认情况下，该值设置为 &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; ，它指示应解码直到最后一个可用通行证（包括最后一个可用通行证）的通行证。</target>
        </trans-unit>
        <trans-unit id="0478f40fe1f37871e583557d8be429e250c42fb2" translate="yes" xml:space="preserve">
          <source>The maximum number of sort keys is enforced by &lt;code&gt;toggleSortOrder&lt;/code&gt;. You can specify more sort keys by invoking &lt;code&gt;setSortKeys&lt;/code&gt; directly and they will all be honored. However if &lt;code&gt;toggleSortOrder&lt;/code&gt; is subsequently invoked the maximum number of sort keys will be enforced. The default value is 3.</source>
          <target state="translated">排序键的最大数量由 &lt;code&gt;toggleSortOrder&lt;/code&gt; 强制执行。您可以通过直接调用 &lt;code&gt;setSortKeys&lt;/code&gt; 来指定更多排序键，它们将全部被接受。但是，如果随后调用 &lt;code&gt;toggleSortOrder&lt;/code&gt; ，则将强制使用最大数量的排序键。预设值为3。</target>
        </trans-unit>
        <trans-unit id="48102fd1a679cbd334e138b724fc20ac9a9bae09" translate="yes" xml:space="preserve">
          <source>The maximum number of streams requested by the local endpoint during association initialization</source>
          <target state="translated">在关联初始化期间,本地端点请求的最大流数。</target>
        </trans-unit>
        <trans-unit id="7e608d73eeb8d2a37694e89f88f31da6ae045dbb" translate="yes" xml:space="preserve">
          <source>The maximum number of streams requested by the local endpoint during association initialization.</source>
          <target state="translated">在关联初始化期间,本地端点请求的最大流数。</target>
        </trans-unit>
        <trans-unit id="fbbdc1258f7173253696d9e64d4c4a658afd6ade" translate="yes" xml:space="preserve">
          <source>The maximum priority that a thread can have.</source>
          <target state="translated">一个线程可以拥有的最大优先级。</target>
        </trans-unit>
        <trans-unit id="a36a818c4f9c33f17fb433826771d2ce806e0080" translate="yes" xml:space="preserve">
          <source>The maximum queue length for incoming connection indications (a request to connect) is set to &lt;code&gt;50&lt;/code&gt;. If a connection indication arrives when the queue is full, the connection is refused.</source>
          <target state="translated">传入连接指示（连接请求）的最大队列长度设置为 &lt;code&gt;50&lt;/code&gt; 。如果在队列已满时出现连接指示，则拒绝连接。</target>
        </trans-unit>
        <trans-unit id="6cc426f28f7320449dfe90a3a16a1a1b1f8164e7" translate="yes" xml:space="preserve">
          <source>The maximum queue length for incoming connection indications (a request to connect) is set to the &lt;code&gt;backlog&lt;/code&gt; parameter. If a connection indication arrives when the queue is full, the connection is refused.</source>
          <target state="translated">传入连接指示（连接请求）的最大队列长度设置为 &lt;code&gt;backlog&lt;/code&gt; 参数。如果在队列已满时出现连接指示，则拒绝连接。</target>
        </trans-unit>
        <trans-unit id="4e76f165176d7e28c6b59c285a7ee8af5a71fc72" translate="yes" xml:space="preserve">
          <source>The maximum radix available for conversion to and from strings.</source>
          <target state="translated">字符串转换的最大半径。</target>
        </trans-unit>
        <trans-unit id="8c6409d2fd9d317951cab0b13d3c92c453ac5d7d" translate="yes" xml:space="preserve">
          <source>The maximum radix available for conversion to and from strings. The constant value of this field is the largest value permitted for the radix argument in radix-conversion methods such as the &lt;code&gt;digit&lt;/code&gt; method, the &lt;code&gt;forDigit&lt;/code&gt; method, and the &lt;code&gt;toString&lt;/code&gt; method of class &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">可用于在字符串之间转换的最大基数。此字段的常数是基数转换方法（例如， &lt;code&gt;Integer&lt;/code&gt; 类的 &lt;code&gt;digit&lt;/code&gt; 方法， &lt;code&gt;forDigit&lt;/code&gt; 方法和 &lt;code&gt;toString&lt;/code&gt; 方法）中的基数参数允许的最大值。</target>
        </trans-unit>
        <trans-unit id="f3a3a07104e7ef00f419dbb752b94c72537382fa" translate="yes" xml:space="preserve">
          <source>The maximum read ahead allowed after a call to the &lt;code&gt;mark&lt;/code&gt; method before subsequent calls to the &lt;code&gt;reset&lt;/code&gt; method fail.</source>
          <target state="translated">调用 &lt;code&gt;mark&lt;/code&gt; 方法之后，再调用 &lt;code&gt;reset&lt;/code&gt; 方法失败之前，允许的最大预读数。</target>
        </trans-unit>
        <trans-unit id="686e085cad769598f4690d3665f22a215c1c0ea4" translate="yes" xml:space="preserve">
          <source>The maximum read ahead allowed after a call to the &lt;code&gt;mark&lt;/code&gt; method before subsequent calls to the &lt;code&gt;reset&lt;/code&gt; method fail. Whenever the difference between &lt;code&gt;pos&lt;/code&gt; and &lt;code&gt;markpos&lt;/code&gt; exceeds &lt;code&gt;marklimit&lt;/code&gt;, then the mark may be dropped by setting &lt;code&gt;markpos&lt;/code&gt; to &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">调用 &lt;code&gt;mark&lt;/code&gt; 方法之后，再调用 &lt;code&gt;reset&lt;/code&gt; 方法失败之前，允许的最大预读数。只要 &lt;code&gt;pos&lt;/code&gt; 和 &lt;code&gt;markpos&lt;/code&gt; 之差超过 &lt;code&gt;marklimit&lt;/code&gt; ，则可以通过将 &lt;code&gt;markpos&lt;/code&gt; 设置为 &lt;code&gt;-1&lt;/code&gt; 来删除该标记。</target>
        </trans-unit>
        <trans-unit id="cde12ff04949c15a881f89fbe0182caa7125e32d" translate="yes" xml:space="preserve">
          <source>The maximum size allowed.</source>
          <target state="translated">允许的最大尺寸。</target>
        </trans-unit>
        <trans-unit id="ef1976d2f2dd62e42dde8526a7697fca9d5af5a1" translate="yes" xml:space="preserve">
          <source>The maximum size allowed. For a component &lt;code&gt;comp&lt;/code&gt;, this should be equal to either &lt;code&gt;comp.getMaximumSize().width&lt;/code&gt; or &lt;code&gt;comp.getMaximumSize().height&lt;/code&gt;.</source>
          <target state="translated">允许的最大大小。对于组件 &lt;code&gt;comp&lt;/code&gt; ，它应该等于 &lt;code&gt;comp.getMaximumSize().width&lt;/code&gt; 或 &lt;code&gt;comp.getMaximumSize().height&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3fc218541d1e04f65cfa7e7c0d95141ef5e61d7f" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;Instant&lt;/code&gt;, '1000000000-12-31T23:59:59.999999999Z'.</source>
          <target state="translated">支持的最大 &lt;code&gt;Instant&lt;/code&gt; '1000000000-12-31T23：59：59.999999999Z'。</target>
        </trans-unit>
        <trans-unit id="04ce11fe3c27aa7aa9f2ef249ac2e65e1dc4e4ea" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;Instant&lt;/code&gt;, '1000000000-12-31T23:59:59.999999999Z'. This could be used by an application as a &quot;far future&quot; instant.</source>
          <target state="translated">支持的最大 &lt;code&gt;Instant&lt;/code&gt; '1000000000-12-31T23：59：59.999999999Z'。应用程序可以将其用作&amp;ldquo;遥远的未来&amp;rdquo;瞬间。</target>
        </trans-unit>
        <trans-unit id="d8bdb11e05ddef7808311da08422e5ca0efacaf6" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalDate&lt;/code&gt;, '+999999999-12-31'.</source>
          <target state="translated">支持的最大 &lt;code&gt;LocalDate&lt;/code&gt; ，&amp;ldquo; + 999999999-12-31&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="e0429cd3a2343e86a77ff7f695d6193f6a24e2a6" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalDate&lt;/code&gt;, '+999999999-12-31'. This could be used by an application as a &quot;far future&quot; date.</source>
          <target state="translated">支持的最大 &lt;code&gt;LocalDate&lt;/code&gt; ，&amp;ldquo; + 999999999-12-31&amp;rdquo;。应用程序可以将其用作&amp;ldquo;远期&amp;rdquo;日期。</target>
        </trans-unit>
        <trans-unit id="d2eff0863fd6d4cbc5acf0b15a2d8ccc04810718" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalDateTime&lt;/code&gt;, '+999999999-12-31T23:59:59.999999999'.</source>
          <target state="translated">支持的最大 &lt;code&gt;LocalDateTime&lt;/code&gt; ，'+ 999999999-12-31T23：59：59.999999999'。</target>
        </trans-unit>
        <trans-unit id="744d761c58cd3ade37321eaf06b55bc7687217a1" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalDateTime&lt;/code&gt;, '+999999999-12-31T23:59:59.999999999'. This is the local date-time just before midnight at the end of the maximum date. This combines &lt;a href=&quot;localdate#MAX&quot;&gt;&lt;code&gt;LocalDate.MAX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localtime#MAX&quot;&gt;&lt;code&gt;LocalTime.MAX&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far future&quot; date-time.</source>
          <target state="translated">支持的最大 &lt;code&gt;LocalDateTime&lt;/code&gt; ，'+ 999999999-12-31T23：59：59.999999999'。这是最大日期结束时午夜之前的本地日期时间。这结合了&lt;a href=&quot;localdate#MAX&quot;&gt; &lt;code&gt;LocalDate.MAX&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;localtime#MAX&quot;&gt; &lt;code&gt;LocalTime.MAX&lt;/code&gt; &lt;/a&gt;。应用程序可以将其用作&amp;ldquo;远期&amp;rdquo;日期时间。</target>
        </trans-unit>
        <trans-unit id="708651e23cf9a3e7e3f159ce07c8fa26f5953b8b" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalTime&lt;/code&gt;, '23:59:59.999999999'.</source>
          <target state="translated">最大支持 &lt;code&gt;LocalTime&lt;/code&gt; ，'23：59：59.999999999' 。</target>
        </trans-unit>
        <trans-unit id="a192d7e44fca6c6034ef03db938f5c28d8840499" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;LocalTime&lt;/code&gt;, '23:59:59.999999999'. This is the time just before midnight at the end of the day.</source>
          <target state="translated">最大支持 &lt;code&gt;LocalTime&lt;/code&gt; ，'23：59：59.999999999' 。这是一天结束时午夜之前的时间。</target>
        </trans-unit>
        <trans-unit id="8d5d0536c7f2d7b197a4d1276e3d35e8f6c3d2ce" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;OffsetDateTime&lt;/code&gt;, '+999999999-12-31T23:59:59.999999999-18:00'.</source>
          <target state="translated">支持的最大 &lt;code&gt;OffsetDateTime&lt;/code&gt; ，'+ 999999999-12-31T23：59：59.999999999-18：00'。</target>
        </trans-unit>
        <trans-unit id="251ab3d26132087a17d987a3306ea536b764e3b4" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;OffsetDateTime&lt;/code&gt;, '+999999999-12-31T23:59:59.999999999-18:00'. This is the local date-time just before midnight at the end of the maximum date in the minimum offset (larger negative offsets are later on the time-line). This combines &lt;a href=&quot;localdatetime#MAX&quot;&gt;&lt;code&gt;LocalDateTime.MAX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset#MIN&quot;&gt;&lt;code&gt;ZoneOffset.MIN&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far future&quot; date-time.</source>
          <target state="translated">支持的最大 &lt;code&gt;OffsetDateTime&lt;/code&gt; ，'+ 999999999-12-31T23：59：59.999999999-18：00'。这是最小偏移量中最大日期的午夜之前的本地日期时间（较大的负偏移量在时间轴上稍后）。这结合了&lt;a href=&quot;localdatetime#MAX&quot;&gt; &lt;code&gt;LocalDateTime.MAX&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;zoneoffset#MIN&quot;&gt; &lt;code&gt;ZoneOffset.MIN&lt;/code&gt; &lt;/a&gt;。应用程序可以将其用作&amp;ldquo;远期&amp;rdquo;日期时间。</target>
        </trans-unit>
        <trans-unit id="6888150958c5e1391109e70e7d9b5a79b259d824" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;OffsetTime&lt;/code&gt;, '23:59:59.999999999-18:00'.</source>
          <target state="translated">支持的最大 &lt;code&gt;OffsetTime&lt;/code&gt; ，'23：59：59.999999999-18：00'。</target>
        </trans-unit>
        <trans-unit id="b48f7359abf2b721e4ffc36d002f51c3e787a1e9" translate="yes" xml:space="preserve">
          <source>The maximum supported &lt;code&gt;OffsetTime&lt;/code&gt;, '23:59:59.999999999-18:00'. This is the time just before midnight at the end of the day in the minimum offset (larger negative offsets are later on the time-line). This combines &lt;a href=&quot;localtime#MAX&quot;&gt;&lt;code&gt;LocalTime.MAX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset#MIN&quot;&gt;&lt;code&gt;ZoneOffset.MIN&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far future&quot; date.</source>
          <target state="translated">支持的最大 &lt;code&gt;OffsetTime&lt;/code&gt; ，'23：59：59.999999999-18：00'。这是一天中最小偏移量在午夜之前的时间（较大的负偏移量在时间轴上稍后显示）。这种结合&lt;a href=&quot;localtime#MAX&quot;&gt; &lt;code&gt;LocalTime.MAX&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;zoneoffset#MIN&quot;&gt; &lt;code&gt;ZoneOffset.MIN&lt;/code&gt; &lt;/a&gt;。应用程序可以将其用作&amp;ldquo;远期&amp;rdquo;日期。</target>
        </trans-unit>
        <trans-unit id="db55fe69812e7a35add31fe3f898cbec3f75e877" translate="yes" xml:space="preserve">
          <source>The maximum supported range is from +18:00 to -18:00 inclusive.</source>
          <target state="translated">支持的最大范围为+18:00至-18:00(含)。</target>
        </trans-unit>
        <trans-unit id="c0a2c5b8a90ac648ea5c3d32022df7abb7a348b9" translate="yes" xml:space="preserve">
          <source>The maximum supported year, '+999,999,999'.</source>
          <target state="translated">最大支持的年份,'+999,999'。</target>
        </trans-unit>
        <trans-unit id="6076022801aa2a830903e2357ca4ec9a03cb7cb0" translate="yes" xml:space="preserve">
          <source>The maximum value for reserved AWT event IDs.</source>
          <target state="translated">保留的AWT事件ID的最大值。</target>
        </trans-unit>
        <trans-unit id="d3911eb56181b40f7a9d04f8fc8a8a683e53707f" translate="yes" xml:space="preserve">
          <source>The maximum value for reserved AWT event IDs. Programs defining their own event IDs should use IDs greater than this value.</source>
          <target state="translated">保留的AWT事件ID的最大值。定义自己事件ID的程序应使用大于此值的ID。</target>
        </trans-unit>
        <trans-unit id="edefbb253da2c09881430a08425fc9be7f90b625" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt; Unicode code point&lt;/a&gt;, constant &lt;code&gt;U+10FFFF&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;Unicode代码点&lt;/a&gt;的最大值，常数 &lt;code&gt;U+10FFFF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3a7910bd6efd0e6ebb4dcf27163b29a601e65d6" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt; Unicode high-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDBFF'&lt;/code&gt;.</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt;Unicode高替代代码单元&lt;/a&gt;的最大值，常量 &lt;code&gt;'\uDBFF'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e9cb824afcd96246aeae16307929222db177a085" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt; Unicode high-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDBFF'&lt;/code&gt;. A high-surrogate is also known as a</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt;Unicode高替代代码单元&lt;/a&gt;的最大值，常量 &lt;code&gt;'\uDBFF'&lt;/code&gt; 。高代理也被称为</target>
        </trans-unit>
        <trans-unit id="025d23141e8f218e9bdbe40f592e9e91b77c268e" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt; Unicode low-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDFFF'&lt;/code&gt;.</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt;Unicode低代理代码单元&lt;/a&gt;的最大值，常量 &lt;code&gt;'\uDFFF'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b33263a788749bdc77ddfac4323c224cdfbe9ba3" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt; Unicode low-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDFFF'&lt;/code&gt;. A low-surrogate is also known as a</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt;Unicode低代理代码单元&lt;/a&gt;的最大值，常量 &lt;code&gt;'\uDFFF'&lt;/code&gt; 。低代理人​​也称为</target>
        </trans-unit>
        <trans-unit id="c045d68d1fa274a1e06a8666451440c9dec070cf" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;https://www.unicode.org/glossary/#code_point&quot;&gt; Unicode code point&lt;/a&gt;, constant &lt;code&gt;U+10FFFF&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.unicode.org/glossary/#code_point&quot;&gt;Unicode代码点&lt;/a&gt;的最大值，常数 &lt;code&gt;U+10FFFF&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21c3d07ff4ff8c16d8d7f9de237255eeb4fb6fb3" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;https://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt; Unicode high-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDBFF'&lt;/code&gt;.</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;https://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt;Unicode高替代代码单元&lt;/a&gt;的最大值，常量 &lt;code&gt;'\uDBFF'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e0c3a570128ba8ead20bbfde7fc4cb87a88a026" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;https://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt; Unicode high-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDBFF'&lt;/code&gt;. A high-surrogate is also known as a</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;https://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt;Unicode高替代代码单元&lt;/a&gt;的最大值，常量 &lt;code&gt;'\uDBFF'&lt;/code&gt; 。高代理也被称为</target>
        </trans-unit>
        <trans-unit id="1d73220b385d1dd8fc0e31c41c52d89e132bfb6c" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;https://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt; Unicode low-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDFFF'&lt;/code&gt;.</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;https://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt;Unicode低代理代码单元&lt;/a&gt;的最大值，常量 &lt;code&gt;'\uDFFF'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="276865d2354411e3b518ae41c11b7c2f66480ee9" translate="yes" xml:space="preserve">
          <source>The maximum value of a &lt;a href=&quot;https://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt; Unicode low-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDFFF'&lt;/code&gt;. A low-surrogate is also known as a</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;https://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt;Unicode低代理代码单元&lt;/a&gt;的最大值，常量 &lt;code&gt;'\uDFFF'&lt;/code&gt; 。低代理也称为</target>
        </trans-unit>
        <trans-unit id="286d3939ee86174adc9c52569b3a684b11bce46b" translate="yes" xml:space="preserve">
          <source>The maximum value of a Unicode surrogate code unit in the UTF-16 encoding, constant &lt;code&gt;'\uDFFF'&lt;/code&gt;.</source>
          <target state="translated">UTF-16编码中的Unicode替代代码单元的最大值，常量 &lt;code&gt;'\uDFFF'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42573092dce64961f85c6b925d6d388e3545023c" translate="yes" xml:space="preserve">
          <source>The maximum value of the scrollbar is maximum - extent.</source>
          <target state="translated">滚动条的最大值是最大-程度。</target>
        </trans-unit>
        <trans-unit id="edc77352916d997bb34783351d83105819113640" translate="yes" xml:space="preserve">
          <source>The maximum value of this object.</source>
          <target state="translated">此对象的最大值。</target>
        </trans-unit>
        <trans-unit id="859c0a3084b1dd53ea5eaf4aff7fa3428c74b0d2" translate="yes" xml:space="preserve">
          <source>The maximum width of the column.</source>
          <target state="translated">列的最大宽度。</target>
        </trans-unit>
        <trans-unit id="ed42f003ef90603b5afd30f83e3433a1cdb3cd3e" translate="yes" xml:space="preserve">
          <source>The meaning of the term</source>
          <target state="translated">术语的含义</target>
        </trans-unit>
        <trans-unit id="1f4e7db5483a3dd3186cbf249393ad7015cc5aae" translate="yes" xml:space="preserve">
          <source>The means by which a file type detector determines the file type is highly implementation specific. A simple implementation might examine the &lt;em&gt;file extension&lt;/em&gt; (a convention used in some platforms) and map it to a file type. In other cases, the file type may be stored as a file &lt;a href=&quot;../attribute/package-summary&quot;&gt; attribute&lt;/a&gt; or the bytes in a file may be examined to guess its file type.</source>
          <target state="translated">文件类型检测器确定文件类型的方法是高度特定于实现的。一个简单的实现可以检查&lt;em&gt;文件扩展名&lt;/em&gt;（在某些平台中使用的约定）并将其映射到文件类型。在其他情况下，文件类型可以存储为文件&lt;a href=&quot;../attribute/package-summary&quot;&gt;属性，&lt;/a&gt;或者可以检查文件中的字节以猜测其文件类型。</target>
        </trans-unit>
        <trans-unit id="a4770c800d3e35c0011221e1a554258227b54744" translate="yes" xml:space="preserve">
          <source>The means by which this method determines the file type is highly implementation specific. It may simply examine the file name, it may use a file &lt;a href=&quot;../attribute/package-summary&quot;&gt;attribute&lt;/a&gt;, or it may examines bytes in the file.</source>
          <target state="translated">此方法确定文件类型的方法是高度特定于实现的。它可以简单地检查文件名，可以使用file &lt;a href=&quot;../attribute/package-summary&quot;&gt;属性&lt;/a&gt;，或者可以检查文件中的字节。</target>
        </trans-unit>
        <trans-unit id="ab45809aa21711bcf5f58537fef1609f4b9533bd" translate="yes" xml:space="preserve">
          <source>The mechanism described here does not apply when the IIOP Remote objects (Stubs or Servers) are created and connected to an ORB manually before being passed to the RMIConnector and RMIConnectorServer.</source>
          <target state="translated">当IIOP远程对象(Stubs或Servers)在被传递给RMIConnector和RMIConnectorServer之前被手动创建并连接到ORB时,这里描述的机制不适用。</target>
        </trans-unit>
        <trans-unit id="067d9eb74b05faea94f2c082c19d7e9ed59e0ad6" translate="yes" xml:space="preserve">
          <source>The mechanism for distributing the delta amongst the available columns is provided in a private method in the &lt;code&gt;JTable&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 类的私有方法中提供了在可用列之间分配增量的机制：</target>
        </trans-unit>
        <trans-unit id="31a160d09d90d413fb94d75322e249dff174488a" translate="yes" xml:space="preserve">
          <source>The mechanism name and DRBG algorithm name are determined by the &lt;a href=&quot;security#getProperty(java.lang.String)&quot;&gt;security property&lt;/a&gt;&lt;code&gt;securerandom.drbg.config&lt;/code&gt;. The default choice is Hash_DRBG with SHA-256.</source>
          <target state="translated">机制名称和DRBG算法名称由&lt;a href=&quot;security#getProperty(java.lang.String)&quot;&gt;安全性属性&lt;/a&gt; &lt;code&gt;securerandom.drbg.config&lt;/code&gt; 确定。默认选择是带有SHA-256的Hash_DRBG。</target>
        </trans-unit>
        <trans-unit id="75b2b887cd766344d43dde743abd52969399d0c6" translate="yes" xml:space="preserve">
          <source>The media type, media subtype, and parameter names are converted to lowercase.</source>
          <target state="translated">媒体类型、媒体子类型和参数名称均转换为小写。</target>
        </trans-unit>
        <trans-unit id="81485a662e4b18e73d7e50de595c401a66405a84" translate="yes" xml:space="preserve">
          <source>The media type, media subtype, and parameters are retained, but all comments and whitespace characters are discarded.</source>
          <target state="translated">媒体类型、媒体子类型和参数被保留,但所有注释和空白字符都被丢弃。</target>
        </trans-unit>
        <trans-unit id="e5ad857f39773029b21c495f43d83ff907a4db59" translate="yes" xml:space="preserve">
          <source>The medium at the &lt;code&gt;index&lt;/code&gt;th position in the &lt;code&gt;MediaList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="translated">&lt;code&gt;MediaList&lt;/code&gt; 中第 &lt;code&gt;index&lt;/code&gt; 个位置的媒体；如果该索引 &lt;code&gt;null&lt;/code&gt; ，则为null。</target>
        </trans-unit>
        <trans-unit id="fa3363aae7619540e1a0d5268b085d34e5d87f7c" translate="yes" xml:space="preserve">
          <source>The member is &lt;code&gt;protected&lt;/code&gt;&lt;code&gt;static&lt;/code&gt;, &lt;code&gt;D&lt;/code&gt; is &lt;code&gt;public&lt;/code&gt; in a package that the module containing &lt;code&gt;D&lt;/code&gt; exports to at least the module containing &lt;code&gt;C&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt; is a subclass of &lt;code&gt;D&lt;/code&gt;.</source>
          <target state="translated">成员是 &lt;code&gt;static&lt;/code&gt; &lt;code&gt;protected&lt;/code&gt; ， &lt;code&gt;D&lt;/code&gt; 在包含 &lt;code&gt;D&lt;/code&gt; 的模块至少导出到包含 &lt;code&gt;C&lt;/code&gt; 的模块的包中是 &lt;code&gt;public&lt;/code&gt; ，并且 &lt;code&gt;C&lt;/code&gt; 是 &lt;code&gt;D&lt;/code&gt; 的子类。</target>
        </trans-unit>
        <trans-unit id="b89410dcffaf7a872471541f99f6678180a6a8a8" translate="yes" xml:space="preserve">
          <source>The member is &lt;code&gt;public&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt; is &lt;code&gt;public&lt;/code&gt; in a package that the module containing &lt;code&gt;D&lt;/code&gt;&lt;a href=&quot;../module#isExported(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;exports&lt;/code&gt;&lt;/a&gt; to at least the module containing &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">在包含 &lt;code&gt;D&lt;/code&gt; 的模块至少&lt;a href=&quot;../module#isExported(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;exports&lt;/code&gt; &lt;/a&gt;到包含 &lt;code&gt;C&lt;/code&gt; 的模块的包中，成员是 &lt;code&gt;public&lt;/code&gt; 且 &lt;code&gt;D&lt;/code&gt; 是 &lt;code&gt;public&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f97e6177805adf7afc68c7962dee0fa667febf49" translate="yes" xml:space="preserve">
          <source>The membership key</source>
          <target state="translated">会员密钥</target>
        </trans-unit>
        <trans-unit id="0e5fa7adb21c0e325c51267052603c4f999c8037" translate="yes" xml:space="preserve">
          <source>The memory effects for accesses and updates of atomics generally follow the rules for volatiles, as stated in &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4&quot;&gt; The Java Language Specification (17.4 Memory Model)&lt;/a&gt;:</source>
          <target state="translated">如&lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4&quot;&gt;Java语言规范（17.4内存模型）中&lt;/a&gt;所述，用于访问和更新原子的内存效应通常遵循volatile规则：</target>
        </trans-unit>
        <trans-unit id="63ed54f77a4f5d562e787e9632c7dcd61349acbb" translate="yes" xml:space="preserve">
          <source>The memory segment this address belongs to, or &lt;code&gt;null&lt;/code&gt; if no such segment exists.</source>
          <target state="translated">该地址所属的内存段，如果不存在该内存段，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aab7acbfa43834ab7dc033f83c5c606d75b26760" translate="yes" xml:space="preserve">
          <source>The memory system of the Java virtual machine manages the following kinds of memory:</source>
          <target state="translated">Java虚拟机的内存系统管理着以下几种内存。</target>
        </trans-unit>
        <trans-unit id="27790702c54d1d404915dd82c93b620fa3c28c6a" translate="yes" xml:space="preserve">
          <source>The memory usage can be monitored in three ways:</source>
          <target state="translated">可以通过三种方式监控内存的使用情况。</target>
        </trans-unit>
        <trans-unit id="d607f7f1ba30cb36c630b3c22647d62e99ce92fd" translate="yes" xml:space="preserve">
          <source>The memory usage monitoring mechanism is intended for load-balancing or workload distribution use. For example, an application would stop receiving any new workload when its memory usage exceeds a certain threshold. It is not intended for an application to detect and recover from a low memory condition.</source>
          <target state="translated">内存使用监控机制旨在用于负载平衡或工作负载分配。例如,当应用程序的内存使用量超过某个阈值时,该应用程序将停止接收任何新的工作负载。它不是为了让应用程序检测和恢复低内存状态。</target>
        </trans-unit>
        <trans-unit id="093780ce78707d757dc19b614256bc2e6651b1d0" translate="yes" xml:space="preserve">
          <source>The memory usage of the memory pool when the notification was constructed.</source>
          <target state="translated">构建通知时内存池的内存使用情况。</target>
        </trans-unit>
        <trans-unit id="f920b80ca0223cf0e98906f5968692215bf83a73" translate="yes" xml:space="preserve">
          <source>The memory usage of the system can be monitored using &lt;a href=&quot;#Polling&quot;&gt;polling&lt;/a&gt; or &lt;a href=&quot;#ThresholdNotification&quot;&gt;threshold notification&lt;/a&gt; mechanisms.</source>
          <target state="translated">可以使用&lt;a href=&quot;#Polling&quot;&gt;轮询&lt;/a&gt;或&lt;a href=&quot;#ThresholdNotification&quot;&gt;阈值通知&lt;/a&gt;机制来监视系统的内存使用情况。</target>
        </trans-unit>
        <trans-unit id="8e5edb0774127d7a66acbb52bd0020f5a0df1d4e" translate="yes" xml:space="preserve">
          <source>The mention of URL in the documentation for this class refers to a URL string as defined by RFC 1738 and its related RFCs. It is any string that conforms to the syntax described therein, and may not always have corresponding support in the java.net.URL class or Web browsers.</source>
          <target state="translated">这个类的文档中提到的URL是指RFC 1738及其相关RFC所定义的URL字符串,它是符合其中描述的语法的任何字符串,不一定在java.net.URL类或Web浏览器中得到相应的支持。它是符合其中描述的语法的任何字符串,在java.net.URL类或Web浏览器中不一定有相应的支持。</target>
        </trans-unit>
        <trans-unit id="1759cdc52cf9269c6c862c60009301e96c6fba53" translate="yes" xml:space="preserve">
          <source>The menu bar.</source>
          <target state="translated">菜单栏。</target>
        </trans-unit>
        <trans-unit id="ff5d2fb3290b2743475828942fec01b928964169" translate="yes" xml:space="preserve">
          <source>The message consists of not more than &lt;code&gt;125&lt;/code&gt; bytes from the buffer's position to its limit. Upon normal completion of a &lt;code&gt;CompletableFuture&lt;/code&gt; returned from this method the buffer will have no remaining bytes. The buffer must not be accessed until after that.</source>
          <target state="translated">从缓冲区的位置到其限制，该消息包含不超过 &lt;code&gt;125&lt;/code&gt; 个字节。从此方法返回的 &lt;code&gt;CompletableFuture&lt;/code&gt; 正常完成后，缓冲区将没有剩余字节。直到那之后，才可以访问该缓冲区。</target>
        </trans-unit>
        <trans-unit id="3019b6df3d7638a94395e6881f48979a9dad4a64" translate="yes" xml:space="preserve">
          <source>The message digest associated with this stream.</source>
          <target state="translated">与此流相关联的消息摘要。</target>
        </trans-unit>
        <trans-unit id="272751c88e094dd94ddc0eaa4f3a055cdbd2d93b" translate="yes" xml:space="preserve">
          <source>The message is transferred from the byte buffer as if by a regular &lt;a href=&quot;../../../../../java.base/java/nio/channels/writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; operation.</source>
          <target state="translated">消息是通过常规&lt;a href=&quot;../../../../../java.base/java/nio/channels/writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;操作从字节缓冲区传输的。</target>
        </trans-unit>
        <trans-unit id="70409d0fa2f61f14b8e11191ac964557890078df" translate="yes" xml:space="preserve">
          <source>The message string is first localized to a format string using the record's ResourceBundle. (If there is no ResourceBundle, or if the message key is not found, then the key is used as the format string.) The format String uses java.text style formatting.</source>
          <target state="translated">首先使用记录的 ResourceBundle 将消息字符串本地化为格式字符串。如果没有ResourceBundle,或者没有找到消息键,则使用键作为格式字符串。格式字符串使用java.text风格的格式。</target>
        </trans-unit>
        <trans-unit id="1bd240084381979a10006bdb738cc8c1d94c319c" translate="yes" xml:space="preserve">
          <source>The message string of this notification object.</source>
          <target state="translated">该通知对象的信息字符串。</target>
        </trans-unit>
        <trans-unit id="701f16b46c2ce7a14276110cb7af4785b9c2047c" translate="yes" xml:space="preserve">
          <source>The message type determines which icon will be displayed in the caption of the message, and a possible system sound a message may generate upon showing.</source>
          <target state="translated">信息类型决定信息标题中显示的图标,以及信息显示时可能产生的系统声音。</target>
        </trans-unit>
        <trans-unit id="b54d9c568e6be1f20ad4f6aa93ae581e62015ccb" translate="yes" xml:space="preserve">
          <source>The messages's status byte</source>
          <target state="translated">消息的状态字节</target>
        </trans-unit>
        <trans-unit id="a72cf44ed0b2379b5bd18fbbfcf576f977b2239c" translate="yes" xml:space="preserve">
          <source>The meta modifier.</source>
          <target state="translated">元的修饰语。</target>
        </trans-unit>
        <trans-unit id="9366f95e074485ed30640a0891257c1b701a3d6e" translate="yes" xml:space="preserve">
          <source>The meta modifier. An indicator that the meta key was held down during the event.</source>
          <target state="translated">的元修饰符。表示在事件中元键被按住。</target>
        </trans-unit>
        <trans-unit id="a0e34f930595246eb4ac871034e3d19c8c2aa069" translate="yes" xml:space="preserve">
          <source>The meta-data describing the make up of the WebRowSet is described in XML as detailed below. Note both columns are described between the &lt;code&gt;column-definition&lt;/code&gt; tags.</source>
          <target state="translated">如下所述，用XML描述了描述WebRowSet组成的元数据。请注意，这两个列均在 &lt;code&gt;column-definition&lt;/code&gt; 标签之间进行了描述。</target>
        </trans-unit>
        <trans-unit id="8d68f77bdf14b55708f4d157fe026ae1c1203526" translate="yes" xml:space="preserve">
          <source>The metadata, including JDBC properties and Synchronization SPI properties, are maintained for future use. It is important that properties such as the &lt;code&gt;command&lt;/code&gt; property be relevant to the originating data source from which this &lt;code&gt;CachedRowSet&lt;/code&gt; object was originally established.</source>
          <target state="translated">这些元数据（包括JDBC属性和同步SPI属性）将保留以备将来使用。重要的是，诸如 &lt;code&gt;command&lt;/code&gt; 属性之类的属性必须与原始 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象从其建立的原始数据源相关。</target>
        </trans-unit>
        <trans-unit id="5900ffc1a8cc8517558f23fdade036b528a82fc8" translate="yes" xml:space="preserve">
          <source>The metal look and feel implementation of &lt;code&gt;TreeUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TreeUI&lt;/code&gt; 的金属外观实现。</target>
        </trans-unit>
        <trans-unit id="be84738a01f2fa95124f69a96842b9e168315acd" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;#divide(java.math.BigDecimal,int,java.math.RoundingMode)&quot;&gt;&lt;code&gt;divide(BigDecimal, int, RoundingMode)&lt;/code&gt;&lt;/a&gt; should be used in preference to this legacy method.</source>
          <target state="translated">方法&lt;a href=&quot;#divide(java.math.BigDecimal,int,java.math.RoundingMode)&quot;&gt; &lt;code&gt;divide(BigDecimal, int, RoundingMode)&lt;/code&gt; &lt;/a&gt;应该优先于此传统方法使用。</target>
        </trans-unit>
        <trans-unit id="fb5fe665c934cde2294e893fc3d1feab13203fea" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;#divide(java.math.BigDecimal,java.math.RoundingMode)&quot;&gt;&lt;code&gt;divide(BigDecimal, RoundingMode)&lt;/code&gt;&lt;/a&gt; should be used in preference to this legacy method.</source>
          <target state="translated">该方法&lt;a href=&quot;#divide(java.math.BigDecimal,java.math.RoundingMode)&quot;&gt; &lt;code&gt;divide(BigDecimal, RoundingMode)&lt;/code&gt; &lt;/a&gt;应该优先于此传统方法使用。</target>
        </trans-unit>
        <trans-unit id="499c73378695ae873e56bb393dd46618f2de7514" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;#forLanguageTag(java.lang.String)&quot;&gt;&lt;code&gt;forLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt; creates a &lt;code&gt;Locale&lt;/code&gt; object for a well-formed BCP 47 language tag.</source>
          <target state="translated">方法&lt;a href=&quot;#forLanguageTag(java.lang.String)&quot;&gt; &lt;code&gt;forLanguageTag(java.lang.String)&lt;/code&gt; &lt;/a&gt;为格式良好的BCP 47语言标记创建一个 &lt;code&gt;Locale&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="9d7a73950a6855c798644b49adc279997126bbed" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;#isDigit(int)&quot;&gt;&lt;code&gt;isDigit(codePoint)&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; of the character and the Unicode decimal digit value of the character (or its single-character decomposition) is less than the specified radix. In this case the decimal digit value is returned.</source>
          <target state="translated">&lt;a href=&quot;#isDigit(int)&quot;&gt; &lt;code&gt;isDigit(codePoint)&lt;/code&gt; &lt;/a&gt;的方法isDigit（codePoint）是 &lt;code&gt;true&lt;/code&gt; ，并且字符的Unicode十进制数字值（或其单字符分解）小于指定的基数。在这种情况下，将返回十进制数字值。</target>
        </trans-unit>
        <trans-unit id="b60f3cb9831db36f9ceca2a61e181635cf5b7b39" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt;&lt;code&gt;setScale(int, RoundingMode)&lt;/code&gt;&lt;/a&gt; should be used in preference to this legacy method.</source>
          <target state="translated">应该优先使用方法&lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt; &lt;code&gt;setScale(int, RoundingMode)&lt;/code&gt; &lt;/a&gt;此旧方法。</target>
        </trans-unit>
        <trans-unit id="107e4589942e2891e9ffdd66028ef7c4561dc66d" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../chrono/chronology#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;Chronology.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;Chronology::from&lt;/code&gt;. That method is equivalent to this query, except that it throws an exception if a chronology cannot be obtained.</source>
          <target state="translated">方法&lt;a href=&quot;../chrono/chronology#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;Chronology.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;可以通过方法参考 &lt;code&gt;Chronology::from&lt;/code&gt; 用作 &lt;code&gt;TemporalQuery&lt;/code&gt; 。该方法与该查询等效，不同之处在于，如果无法获得时间顺序，它将抛出异常。</target>
        </trans-unit>
        <trans-unit id="d2920b888cd3183590608cb7f05eefbb9147b9fa" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../chrono/chronology#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;Chronology.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;Chronology::from&lt;/code&gt;. That method is equivalent to this query, except that it throws an exception if a chronology cannot be obtained.</source>
          <target state="translated">方法&lt;a href=&quot;../chrono/chronology#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;Chronology.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;可以通过方法参考 &lt;code&gt;Chronology::from&lt;/code&gt; 用作 &lt;code&gt;TemporalQuery&lt;/code&gt; 。该方法与该查询等效，不同之处在于，如果无法获得时间顺序，它将抛出异常。</target>
        </trans-unit>
        <trans-unit id="2968320949ff8e3f076ab7282eb5f4f10c500e16" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneid#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;ZoneId.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;ZoneId::from&lt;/code&gt;. That method is equivalent to this query, except that it throws an exception if a zone cannot be obtained.</source>
          <target state="translated">通过方法引用 &lt;code&gt;ZoneId::from&lt;/code&gt; ，可以将方法&lt;a href=&quot;../zoneid#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;ZoneId.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;用作 &lt;code&gt;TemporalQuery&lt;/code&gt; 。该方法与该查询等效，不同之处在于，如果无法获得区域，它将引发异常。</target>
        </trans-unit>
        <trans-unit id="0fadbd5dc81bbd2e66fe9ce72197e29cd159b1e9" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneid#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;ZoneId.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;ZoneId::from&lt;/code&gt;. That method is equivalent to this query, except that it throws an exception if a zone cannot be obtained.</source>
          <target state="translated">方法&lt;a href=&quot;../zoneid#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;ZoneId.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;可以通过方法引用 &lt;code&gt;ZoneId::from&lt;/code&gt; 用作 &lt;code&gt;TemporalQuery&lt;/code&gt; 。该方法与该查询等效，不同之处在于，如果无法获得区域，它将引发异常。</target>
        </trans-unit>
        <trans-unit id="8417bab054d7bf1a2e1834915a9ee9f2fada3522" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;LocalDate::from&lt;/code&gt;. This query and &lt;code&gt;LocalDate::from&lt;/code&gt; will return the same result if the temporal object contains a date. If the temporal object does not contain a date, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">方法&lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;可以通过方法引用 &lt;code&gt;LocalDate::from&lt;/code&gt; 用作 &lt;code&gt;TemporalQuery&lt;/code&gt; 。如果时间对象包含日期，则此查询和 &lt;code&gt;LocalDate::from&lt;/code&gt; 将返回相同的结果。如果时间对象不包含日期，则方法引用将引发异常，而此查询将返回null。</target>
        </trans-unit>
        <trans-unit id="7910c769189f0da72816dcd1ec8967ad31ddc5fe" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;LocalTime::from&lt;/code&gt;. This query and &lt;code&gt;LocalTime::from&lt;/code&gt; will return the same result if the temporal object contains a time. If the temporal object does not contain a time, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">方法&lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;可以通过方法引用 &lt;code&gt;LocalTime::from&lt;/code&gt; 用作 &lt;code&gt;TemporalQuery&lt;/code&gt; 。如果时间对象包含时间， &lt;code&gt;LocalTime::from&lt;/code&gt; 此查询和LocalTime :: from将返回相同的结果。如果时间对象不包含时间，则方法引用将引发异常，而此查询将返回null。</target>
        </trans-unit>
        <trans-unit id="7437ff2a2270580f52fdbcaad5f2d8c807f5894a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;ZoneOffset::from&lt;/code&gt;. This query and &lt;code&gt;ZoneOffset::from&lt;/code&gt; will return the same result if the temporal object contains an offset. If the temporal object does not contain an offset, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">通过方法引用 &lt;code&gt;ZoneOffset::from&lt;/code&gt; ，方法&lt;a href=&quot;../zoneoffset#from(java.time.temporal.TemporalAccessor)&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;可以用作 &lt;code&gt;TemporalQuery&lt;/code&gt; 。如果时间对象包含偏移量，则此查询和 &lt;code&gt;ZoneOffset::from&lt;/code&gt; 将返回相同的结果。如果时间对象不包含偏移量，则方法引用将引发异常，而此查询将返回null。</target>
        </trans-unit>
        <trans-unit id="99349278854aaea800ab628dbf65223df309ab09" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;LocalDate::from&lt;/code&gt;. This query and &lt;code&gt;LocalDate::from&lt;/code&gt; will return the same result if the temporal object contains a date. If the temporal object does not contain a date, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">方法&lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;可以通过方法引用 &lt;code&gt;LocalDate::from&lt;/code&gt; 用作 &lt;code&gt;TemporalQuery&lt;/code&gt; 。如果时间对象包含日期，则此查询和 &lt;code&gt;LocalDate::from&lt;/code&gt; 将返回相同的结果。如果时间对象不包含日期，则方法引用将引发异常，而此查询将返回null。</target>
        </trans-unit>
        <trans-unit id="6936a4796665371bcc6fe68524a9d8cf7935a697" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;LocalTime::from&lt;/code&gt;. This query and &lt;code&gt;LocalTime::from&lt;/code&gt; will return the same result if the temporal object contains a time. If the temporal object does not contain a time, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">方法&lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;可以通过方法引用 &lt;code&gt;LocalTime::from&lt;/code&gt; 用作 &lt;code&gt;TemporalQuery&lt;/code&gt; 。如果时间对象包含时间， &lt;code&gt;LocalTime::from&lt;/code&gt; 此查询和LocalTime :: from将返回相同的结果。如果时间对象不包含时间，则方法引用将引发异常，而此查询将返回null。</target>
        </trans-unit>
        <trans-unit id="017484d9fd6cdf516726d1ddbd8dc6b63c039d60" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt;&lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt;&lt;/a&gt; can be used as a &lt;code&gt;TemporalQuery&lt;/code&gt; via a method reference, &lt;code&gt;ZoneOffset::from&lt;/code&gt;. This query and &lt;code&gt;ZoneOffset::from&lt;/code&gt; will return the same result if the temporal object contains an offset. If the temporal object does not contain an offset, then the method reference will throw an exception, whereas this query will return null.</source>
          <target state="translated">通过方法引用 &lt;code&gt;ZoneOffset::from&lt;/code&gt; ，方法&lt;a href=&quot;../zoneoffset#from-java.time.temporal.TemporalAccessor-&quot;&gt; &lt;code&gt;ZoneOffset.from(TemporalAccessor)&lt;/code&gt; &lt;/a&gt;可以用作 &lt;code&gt;TemporalQuery&lt;/code&gt; 。如果时间对象包含偏移量，则此查询和 &lt;code&gt;ZoneOffset::from&lt;/code&gt; 将返回相同的结果。如果时间对象不包含偏移量，则方法引用将引发异常，而此查询将返回null。</target>
        </trans-unit>
        <trans-unit id="acbe203a39f1e4dfd332d8350eb660e8d8a90fb4" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;character#isDigit-int-&quot;&gt;&lt;code&gt;isDigit(codePoint)&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; of the character and the Unicode decimal digit value of the character (or its single-character decomposition) is less than the specified radix. In this case the decimal digit value is returned.</source>
          <target state="translated">&lt;a href=&quot;character#isDigit-int-&quot;&gt; &lt;code&gt;isDigit(codePoint)&lt;/code&gt; &lt;/a&gt;的方法isDigit（codePoint）是 &lt;code&gt;true&lt;/code&gt; ，并且字符的Unicode十进制数字值（或其单字符分解）小于指定的基数。在这种情况下，将返回十进制数字值。</target>
        </trans-unit>
        <trans-unit id="2581bfa41d0a1a93c4108b866c01432ab81d9ff9" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;locale#forLanguageTag-java.lang.String-&quot;&gt;&lt;code&gt;forLanguageTag(java.lang.String)&lt;/code&gt;&lt;/a&gt; creates a &lt;code&gt;Locale&lt;/code&gt; object for a well-formed BCP 47 language tag.</source>
          <target state="translated">方法&lt;a href=&quot;locale#forLanguageTag-java.lang.String-&quot;&gt; &lt;code&gt;forLanguageTag(java.lang.String)&lt;/code&gt; &lt;/a&gt;为格式良好的BCP 47语言标记创建一个 &lt;code&gt;Locale&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="9b361785e205ed88604c5be102b0eacbc9006ee0" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#gc()&quot;&gt;&lt;code&gt;System.gc()&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">该方法&lt;a href=&quot;system#gc()&quot;&gt; &lt;code&gt;System.gc()&lt;/code&gt; 的&lt;/a&gt;是调用此方法的一种传统和方便的手段。</target>
        </trans-unit>
        <trans-unit id="8a7df96b80827737fe37d1466bc469409efb4f5f" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#gc--&quot;&gt;&lt;code&gt;System.gc()&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">该方法&lt;a href=&quot;system#gc--&quot;&gt; &lt;code&gt;System.gc()&lt;/code&gt; 的&lt;/a&gt;是调用此方法的一种传统和方便的手段。</target>
        </trans-unit>
        <trans-unit id="c510bc364df35c448c1d77cdcdbcb5a68cff0b77" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#load(java.lang.String)&quot;&gt;&lt;code&gt;System.load(String)&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">该方法&lt;a href=&quot;system#load(java.lang.String)&quot;&gt; &lt;code&gt;System.load(String)&lt;/code&gt; &lt;/a&gt;是调用此方法的一种传统和方便的手段。</target>
        </trans-unit>
        <trans-unit id="d67ec53b39aba953770ea5d557a9a19d55511e10" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#load-java.lang.String-&quot;&gt;&lt;code&gt;System.load(String)&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">该方法&lt;a href=&quot;system#load-java.lang.String-&quot;&gt; &lt;code&gt;System.load(String)&lt;/code&gt; &lt;/a&gt;是调用此方法的一种传统和方便的手段。</target>
        </trans-unit>
        <trans-unit id="072391e6b57b7fc8b5b4323a60a85fb6ee2592df" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#loadLibrary(java.lang.String)&quot;&gt;&lt;code&gt;System.loadLibrary(String)&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method. If native methods are to be used in the implementation of a class, a standard strategy is to put the native code in a library file (call it &lt;code&gt;LibFile&lt;/code&gt;) and then to put a static initializer:</source>
          <target state="translated">该方法&lt;a href=&quot;system#loadLibrary(java.lang.String)&quot;&gt; &lt;code&gt;System.loadLibrary(String)&lt;/code&gt; &lt;/a&gt;是调用此方法的一种传统和方便的手段。如果要在类的实现中使用本机方法，则标准策略是将本机代码放入库文件（称为 &lt;code&gt;LibFile&lt;/code&gt; ），然后放入静态初始化程序：</target>
        </trans-unit>
        <trans-unit id="70d78eaa0709f4675ae6dbbcc4cd52c5b6f29b8d" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#loadLibrary-java.lang.String-&quot;&gt;&lt;code&gt;System.loadLibrary(String)&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method. If native methods are to be used in the implementation of a class, a standard strategy is to put the native code in a library file (call it &lt;code&gt;LibFile&lt;/code&gt;) and then to put a static initializer:</source>
          <target state="translated">该方法&lt;a href=&quot;system#loadLibrary-java.lang.String-&quot;&gt; &lt;code&gt;System.loadLibrary(String)&lt;/code&gt; &lt;/a&gt;是调用此方法的一种传统和方便的手段。如果要在类的实现中使用本机方法，则标准策略是将本机代码放入库文件（称为 &lt;code&gt;LibFile&lt;/code&gt; ），然后放入静态初始化程序：</target>
        </trans-unit>
        <trans-unit id="943c6a2954f608cf1aa25a52e8e7564f9b86f14f" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#runFinalization()&quot;&gt;&lt;code&gt;System.runFinalization()&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">该方法&lt;a href=&quot;system#runFinalization()&quot;&gt; &lt;code&gt;System.runFinalization()&lt;/code&gt; &lt;/a&gt;是调用此方法的一种传统和方便的手段。</target>
        </trans-unit>
        <trans-unit id="5effd9dbcb49e11e99f1d710b3ca201a6b6a9939" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;system#runFinalization--&quot;&gt;&lt;code&gt;System.runFinalization()&lt;/code&gt;&lt;/a&gt; is the conventional and convenient means of invoking this method.</source>
          <target state="translated">该方法&lt;a href=&quot;system#runFinalization--&quot;&gt; &lt;code&gt;System.runFinalization()&lt;/code&gt; &lt;/a&gt;是调用此方法的一种传统和方便的手段。</target>
        </trans-unit>
        <trans-unit id="b0a8b68af3f04771fc8e7e14e5e1f96e743317be" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;LdapContext.getResponseControls()&lt;/code&gt; is used to retrieve the response controls generated by LDAP operations executed as the result of invoking a &lt;code&gt;Context&lt;/code&gt;/&lt;code&gt;DirContext&lt;/code&gt; operation. The result is all of the responses controls generated by the underlying LDAP operations, including any implicit reconnection. To get only the reconnection response controls, use &lt;code&gt;reconnect()&lt;/code&gt; followed by &lt;code&gt;getResponseControls()&lt;/code&gt;.</source>
          <target state="translated">方法 &lt;code&gt;LdapContext.getResponseControls()&lt;/code&gt; 用于检索由LDAP操作生成的响应控件，这些操作是由于调用 &lt;code&gt;Context&lt;/code&gt; / &lt;code&gt;DirContext&lt;/code&gt; 操作而执行的。结果是基础LDAP操作生成的所有响应控件，包括任何隐式重新连接。要仅获取重新连接响应控件，请使用 &lt;code&gt;reconnect()&lt;/code&gt; ,然后使用 &lt;code&gt;getResponseControls()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="38efe8e37d65c58afa7204d2c1ff16cacc51ef82" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; defines an attribute called &lt;code&gt;Product&lt;/code&gt;. The Open Type for this attribute is &lt;code&gt;SimpleType.OBJECTNAME&lt;/code&gt;, and the corresponding &lt;code&gt;ObjectName&lt;/code&gt; value will be the name under which the referenced &lt;code&gt;ProductMXBean&lt;/code&gt; is registered in the MBean Server.</source>
          <target state="translated">方法 &lt;code&gt;ModuleMXBean.getProduct()&lt;/code&gt; 定义了一个名为 &lt;code&gt;Product&lt;/code&gt; 的属性。此属性的打开类型为 &lt;code&gt;SimpleType.OBJECTNAME&lt;/code&gt; ，并且对应的 &lt;code&gt;ObjectName&lt;/code&gt; 值将是在MBean服务器中注册所引用的 &lt;code&gt;ProductMXBean&lt;/code&gt; 的名称。</target>
        </trans-unit>
        <trans-unit id="b38a138bc8d2f8b05cf16a6e99bf3172cecefd42" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;acceptChanges&lt;/code&gt; will throw this exception after the writer has finished checking for conflicts and has found one or more conflicts. An application may catch a &lt;code&gt;SyncProviderException&lt;/code&gt; object and call its &lt;code&gt;getSyncResolver&lt;/code&gt; method to get its &lt;code&gt;SyncResolver&lt;/code&gt; object. See the code fragment in the interface comment for &lt;a href=&quot;syncresolver&quot;&gt;&lt;code&gt;SyncResolver&lt;/code&gt;&lt;/a&gt; for an example. This &lt;code&gt;SyncResolver&lt;/code&gt; object will mirror the &lt;code&gt;RowSet&lt;/code&gt; object that generated the exception, except that it will contain only the values from the data source that are in conflict. All other values in the &lt;code&gt;SyncResolver&lt;/code&gt; object will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;acceptChanges&lt;/code&gt; 完成检查冲突并找到一个或多个冲突后，方法acceptChanges将引发此异常。应用程序可能会捕获 &lt;code&gt;SyncProviderException&lt;/code&gt; 对象，并调用其 &lt;code&gt;getSyncResolver&lt;/code&gt; 方法来获取其 &lt;code&gt;SyncResolver&lt;/code&gt; 对象。有关示例，请参见&lt;a href=&quot;syncresolver&quot;&gt; &lt;code&gt;SyncResolver&lt;/code&gt; &lt;/a&gt;的界面注释中的代码片段。此 &lt;code&gt;SyncResolver&lt;/code&gt; 对象将镜像生成异常的 &lt;code&gt;RowSet&lt;/code&gt; 对象，除了它仅包含来自数据源的冲突值。 &lt;code&gt;SyncResolver&lt;/code&gt; 对象中的所有其他值将为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0a8992dddeafc6e212c01d0a03a038c45a92273" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;clone&lt;/code&gt; for class &lt;code&gt;Object&lt;/code&gt; performs a specific cloning operation. First, if the class of this object does not implement the interface &lt;code&gt;Cloneable&lt;/code&gt;, then a &lt;code&gt;CloneNotSupportedException&lt;/code&gt; is thrown. Note that all arrays are considered to implement the interface &lt;code&gt;Cloneable&lt;/code&gt; and that the return type of the &lt;code&gt;clone&lt;/code&gt; method of an array type &lt;code&gt;T[]&lt;/code&gt; is &lt;code&gt;T[]&lt;/code&gt; where T is any reference or primitive type. Otherwise, this method creates a new instance of the class of this object and initializes all its fields with exactly the contents of the corresponding fields of this object, as if by assignment; the contents of the fields are not themselves cloned. Thus, this method performs a &quot;shallow copy&quot; of this object, not a &quot;deep copy&quot; operation.</source>
          <target state="translated">类 &lt;code&gt;Object&lt;/code&gt; 的方法 &lt;code&gt;clone&lt;/code&gt; 执行特定的克隆操作。首先，如果此对象的类未实现 &lt;code&gt;Cloneable&lt;/code&gt; 接口，则抛出 &lt;code&gt;CloneNotSupportedException&lt;/code&gt; 。注意，所有数组都被认为实现了 &lt;code&gt;Cloneable&lt;/code&gt; 接口，并且数组类型 &lt;code&gt;T[]&lt;/code&gt; 的 &lt;code&gt;clone&lt;/code&gt; 方法的返回类型为 &lt;code&gt;T[]&lt;/code&gt; 其中T是任何引用或原始类型。否则，此方法将创建此对象的类的新实例，并使用该对象相应字段的内容完全初始化其所有字段，就像通过赋值一样；字段的内容本身不会被克隆。因此，此方法执行此对象的&amp;ldquo;浅复制&amp;rdquo;，而不是&amp;ldquo;深复制&amp;rdquo;操作。</target>
        </trans-unit>
        <trans-unit id="d7f8cbf555e81b515ebed5fd01a023f91544a6b4" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;getLastChangedTime&lt;/code&gt; defines an attribute of type &lt;code&gt;long&lt;/code&gt; called &lt;code&gt;LastChangedTime&lt;/code&gt;. This is a read-only attribute, since there is no method &lt;code&gt;setLastChangedTime&lt;/code&gt;.</source>
          <target state="translated">方法 &lt;code&gt;getLastChangedTime&lt;/code&gt; 定义了一个 &lt;code&gt;long&lt;/code&gt; 为 &lt;code&gt;LastChangedTime&lt;/code&gt; 的类型的属性。这是一个只读属性，因为没有方法 &lt;code&gt;setLastChangedTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f5effcf811fba7ae5495c3eae2cda66d7e773a2" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;getRowIdLifetime&lt;/code&gt; in the interface &lt;code&gt;DatabaseMetaData&lt;/code&gt;, can be used to determine if a &lt;code&gt;RowId&lt;/code&gt; object remains valid for the duration of the transaction in which the &lt;code&gt;RowId&lt;/code&gt; was created, the duration of the session in which the &lt;code&gt;RowId&lt;/code&gt; was created, or, effectively, for as long as its identified row is not deleted. In addition to specifying the duration of its valid lifetime outside its originating data source, &lt;code&gt;getRowIdLifetime&lt;/code&gt; specifies the duration of a &lt;code&gt;ROWID&lt;/code&gt; value's valid lifetime within its originating data source. In this, it differs from a large object, because there is no limit on the valid lifetime of a large object within its originating data source.</source>
          <target state="translated">该方法 &lt;code&gt;getRowIdLifetime&lt;/code&gt; 在界面 &lt;code&gt;DatabaseMetaData&lt;/code&gt; 的，可以被用来确定是否 &lt;code&gt;RowId&lt;/code&gt; 的对象保持有效，其中，该交易的持续时间 &lt;code&gt;RowId&lt;/code&gt; 的创建，其中，所述会话的持续时间 &lt;code&gt;RowId&lt;/code&gt; 的创建，或者，有效地，如只要未删除其标识的行。除了指定其原始数据源之外的有效生存期的持续时间外， &lt;code&gt;getRowIdLifetime&lt;/code&gt; 还指定其原始数据源中 &lt;code&gt;ROWID&lt;/code&gt; 值的有效生存期的持续时间。在这方面，它与大对象不同，因为在其原始数据源内对大对象的有效生存期没有限制。</target>
        </trans-unit>
        <trans-unit id="c3c5b184cc21ee7d95602d090b1e08067e68c2a2" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;isDigit&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; of the character and the Unicode decimal digit value of the character (or its single-character decomposition) is less than the specified radix. In this case the decimal digit value is returned.</source>
          <target state="translated">&lt;code&gt;isDigit&lt;/code&gt; 方法对于字符是 &lt;code&gt;true&lt;/code&gt; ，并且字符的Unicode十进制数字值（或其单字符分解）小于指定的基数。在这种情况下，将返回十进制数字值。</target>
        </trans-unit>
        <trans-unit id="535bd995faa93342a266284ae4a21196cdfdbc7f" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextBoolean&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">方法 &lt;code&gt;nextBoolean&lt;/code&gt; 由 &lt;code&gt;Random&lt;/code&gt; 类实现，就像通过以下方式实现一样：</target>
        </trans-unit>
        <trans-unit id="39aec606639296b0b09aa7ce76c7792db0c9e8d1" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextBytes&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">&lt;code&gt;nextBytes&lt;/code&gt; 方法由 &lt;code&gt;Random&lt;/code&gt; 类实现，就像通过以下方式实现一样：</target>
        </trans-unit>
        <trans-unit id="aa5e2878d870d8e6bb6b3436cc61343f5dff5aef" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextDouble&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">方法 &lt;code&gt;nextDouble&lt;/code&gt; 由 &lt;code&gt;Random&lt;/code&gt; 类实现，就像通过以下方式实现一样：</target>
        </trans-unit>
        <trans-unit id="b61e5112029d8cee888287c3757ccf1df1bbebf8" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextFloat&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">&lt;code&gt;nextFloat&lt;/code&gt; 方法由 &lt;code&gt;Random&lt;/code&gt; 类实现，就像通过以下方式实现一样：</target>
        </trans-unit>
        <trans-unit id="52e435482b4a6bf7b9cc5a218513f721c3170375" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextGaussian&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by a threadsafe version of the following:</source>
          <target state="translated">方法 &lt;code&gt;nextGaussian&lt;/code&gt; 由 &lt;code&gt;Random&lt;/code&gt; 类实现，就好像由以下线程的安全版本实现一样：</target>
        </trans-unit>
        <trans-unit id="5153d25dbf172da98da0741daa09a59b0ad63eea" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextInt&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">&lt;code&gt;nextInt&lt;/code&gt; 方法由 &lt;code&gt;Random&lt;/code&gt; 类实现，就像通过以下方式实现一样：</target>
        </trans-unit>
        <trans-unit id="8497b578fc5004656d89b7e6983aaffbdc2fbd06" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextLong&lt;/code&gt; is implemented by class &lt;code&gt;Random&lt;/code&gt; as if by:</source>
          <target state="translated">方法 &lt;code&gt;nextLong&lt;/code&gt; 由 &lt;code&gt;Random&lt;/code&gt; 类实现，就像通过以下方式实现一样：</target>
        </trans-unit>
        <trans-unit id="f5762f86bf570324ec0ea338b6232689e3da5ef3" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;nextPage&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; as long as the current page is not the last page of rows and &lt;code&gt;false&lt;/code&gt; when there are no more pages. It can therefore be used in a &lt;code&gt;while&lt;/code&gt; loop to retrieve all of the pages, as is demonstrated in the following lines of code.</source>
          <target state="translated">只要当前页面不是行的最后一页，则 &lt;code&gt;nextPage&lt;/code&gt; 方法将返回 &lt;code&gt;true&lt;/code&gt; ;如果没有更多页面，则返回 &lt;code&gt;false&lt;/code&gt; 。因此，可以在 &lt;code&gt;while&lt;/code&gt; 循环中使用它来检索所有页面，如以下代码行所示。</target>
        </trans-unit>
        <trans-unit id="c67214681cb12eb1b4e0da6760e30a88882e1833" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;readObject&lt;/code&gt; is used to read an object from the stream. Java's safe casting should be used to get the desired type. In Java, strings and arrays are objects and are treated as objects during serialization. When read they need to be cast to the expected type.</source>
          <target state="translated">该方法 &lt;code&gt;readObject&lt;/code&gt; 用于读取从流中的对象。应该使用Java的安全类型转换来获取所需的类型。在Java中，字符串和数组是对象，在序列化期间被视为对象。读取时，需要将它们强制转换为预期的类型。</target>
        </trans-unit>
        <trans-unit id="bc3619ccbd3961713ea835abfe41261f8ad0eba7" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;readSQL&lt;/code&gt; then assigns the data to appropriate fields or elements (of this or other objects). Specifically, it must call the appropriate</source>
          <target state="translated">然后，方法 &lt;code&gt;readSQL&lt;/code&gt; 将数据分配给适当的字段或元素（此对象或其他对象的元素）。具体来说，它必须调用适当的</target>
        </trans-unit>
        <trans-unit id="4459bd46bf4834bc8d1f2a66533eab615320b4ee" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;reset&lt;/code&gt; for class &lt;code&gt;InflaterInputStream&lt;/code&gt; does nothing except throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reset&lt;/code&gt; 类 &lt;code&gt;InflaterInputStream&lt;/code&gt; 的方法除了抛出 &lt;code&gt;IOException&lt;/code&gt; 外，什么也不做。</target>
        </trans-unit>
        <trans-unit id="13e620608483b508819a8c26cd124d1d4afc2a94" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;reset&lt;/code&gt; for class &lt;code&gt;InputStream&lt;/code&gt; does nothing except throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">类 &lt;code&gt;InputStream&lt;/code&gt; 的方法 &lt;code&gt;reset&lt;/code&gt; 除了抛出 &lt;code&gt;IOException&lt;/code&gt; 外，什么也不做。</target>
        </trans-unit>
        <trans-unit id="d0d3bcb4b06a0837cd3dc72144af017482e0c6d5" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;reset&lt;/code&gt; for class &lt;code&gt;PushbackInputStream&lt;/code&gt; does nothing except throw an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">类 &lt;code&gt;PushbackInputStream&lt;/code&gt; 的方法 &lt;code&gt;reset&lt;/code&gt; 除了抛出 &lt;code&gt;IOException&lt;/code&gt; 外，什么也不做。</target>
        </trans-unit>
        <trans-unit id="f69dcbba5a7b1c0b5dad3540d98ac2d5ae36da0b" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;save&lt;/code&gt; defines an operation called &lt;code&gt;save&lt;/code&gt;. It is not an attribute, since its name does not begin with &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;set&lt;/code&gt;, or &lt;code&gt;is&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; 方法定义了一个名为 &lt;code&gt;save&lt;/code&gt; 的操作。它不是属性，因为它的名称不是以 &lt;code&gt;get&lt;/code&gt; ， &lt;code&gt;set&lt;/code&gt; 或 &lt;code&gt;is&lt;/code&gt; 开头的。</target>
        </trans-unit>
        <trans-unit id="4c15f937ab0a49ac7eff467ab6a11aa54f889c23" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;setEchoChar&lt;/code&gt; and &lt;code&gt;getEchoChar&lt;/code&gt; are not provided directly to avoid a new implementation of a pluggable look-and-feel inadvertently exposing password characters. To provide password-like services a separate class &lt;code&gt;JPasswordField&lt;/code&gt; extends &lt;code&gt;JTextField&lt;/code&gt; to provide this service with an independently pluggable look-and-feel.</source>
          <target state="translated">没有直接提供方法 &lt;code&gt;setEchoChar&lt;/code&gt; 和 &lt;code&gt;getEchoChar&lt;/code&gt; ，以避免新实现的可插拔外观意外地暴露密码字符。为了提供类似密码的服务，一个单独的类 &lt;code&gt;JPasswordField&lt;/code&gt; 扩展了 &lt;code&gt;JTextField&lt;/code&gt; 以向该服务提供可独立插入的外观。</target>
        </trans-unit>
        <trans-unit id="f7a612b5280e2e2c4c2ddcb3ab89ad9acbe42cd1" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;wasNull&lt;/code&gt; is used to determine whether the the last value read was SQL &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">该方法 &lt;code&gt;wasNull&lt;/code&gt; 用于确定读取的最后一个值是否是SQL &lt;code&gt;NULL&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3ca789241e6d14c3ac15e790f37b9b79ea366c7" translate="yes" xml:space="preserve">
          <source>The method MAY be final.</source>
          <target state="translated">该方法可能是最终的。</target>
        </trans-unit>
        <trans-unit id="af8fe63e17d04ea68ffd008d010e54db7de4fd6e" translate="yes" xml:space="preserve">
          <source>The method MUST NOT be static except for the application client.</source>
          <target state="translated">除了应用程序客户端,该方法必须不是静态的。</target>
        </trans-unit>
        <trans-unit id="1fe676d9fffea60e7a8f68402d907c0a2c03baa3" translate="yes" xml:space="preserve">
          <source>The method MUST NOT be static.</source>
          <target state="translated">该方法必须不是静态的。</target>
        </trans-unit>
        <trans-unit id="caac4ec314c6a1971b464984c3166dc42073086b" translate="yes" xml:space="preserve">
          <source>The method MUST NOT have any parameters except in the case of interceptors in which case it takes an InvocationContext object as defined by the Interceptors specification.</source>
          <target state="translated">该方法必须没有任何参数,除非是拦截器,在拦截器的情况下,该方法需要一个由拦截器规范定义的InvocationContext对象。</target>
        </trans-unit>
        <trans-unit id="89d4ef93ff558b93a6f2123bc37190ee451c78dd" translate="yes" xml:space="preserve">
          <source>The method Object.toString(), Object.hashCode(), or Object.equals(Object), when invoked on a proxy using this invocation handler, is forwarded to the MBean server as a method on the proxied MBean only if it appears in one of the proxy's interfaces. For a proxy created with &lt;a href=&quot;jmx#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMBeanProxy&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;, this means that the method must appear in the Standard MBean or MXBean interface. Otherwise these methods have the following behavior:</source>
          <target state="translated">当使用此调用处理程序在代理上调用方法Object.toString（），Object.hashCode（）或Object.equals（Object）时，仅当代理MBean出现在代理MBean中时，该方法才作为代理MBean上的方法转发给MBean服务器。代理的接口之一。对于使用&lt;a href=&quot;jmx#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMBeanProxy&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;jmx#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt;创建的代理，这意味着该方法必须出现在Standard MBean或MXBean接口中。否则，这些方法具有以下行为：</target>
        </trans-unit>
        <trans-unit id="5bd74d8dca79474f68b7ace3eb464b4b46924655" translate="yes" xml:space="preserve">
          <source>The method Object.toString(), Object.hashCode(), or Object.equals(Object), when invoked on a proxy using this invocation handler, is forwarded to the MBean server as a method on the proxied MBean only if it appears in one of the proxy's interfaces. For a proxy created with &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMBeanProxy&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt;&lt;/a&gt;, this means that the method must appear in the Standard MBean or MXBean interface. Otherwise these methods have the following behavior:</source>
          <target state="translated">当使用此调用处理程序在代理上调用方法Object.toString（），Object.hashCode（）或Object.equals（Object）时，仅当出现在代理MBean中时，该方法才作为代理MBean上的方法转发到MBean服务器。代理的接口之一。对于使用&lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMBeanProxy&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;JMX.newMXBeanProxy&lt;/code&gt; &lt;/a&gt;创建的代理，这意味着该方法必须出现在Standard MBean或MXBean接口中。否则，这些方法具有以下行为：</target>
        </trans-unit>
        <trans-unit id="bf837832e7854579616fcc0c7961e2c0f8eb7c68" translate="yes" xml:space="preserve">
          <source>The method also makes sure that the key passed in is the same as the one this exemption mechanism used in initializing and generating phases.</source>
          <target state="translated">该方法还可以确保传入的密钥与这个豁免机制在初始化和生成阶段使用的密钥相同。</target>
        </trans-unit>
        <trans-unit id="a2ebce3cfc3d67e5a06b1146951b4c5544283d64" translate="yes" xml:space="preserve">
          <source>The method area is logically part of the heap but a Java virtual machine implementation may choose not to either garbage collect or compact it. Similar to the heap, the method area may be of a fixed size or may be expanded and shrunk. The memory for the method area does not need to be contiguous.</source>
          <target state="translated">方法区在逻辑上是堆的一部分,但Java虚拟机的实现可以选择不对其进行垃圾收集或压缩。与堆类似,方法区可以是固定大小的,也可以扩展和收缩。方法区的内存不需要是连续的。</target>
        </trans-unit>
        <trans-unit id="d2f787f787f66e4c7fe7596b60f067bd719396f2" translate="yes" xml:space="preserve">
          <source>The method attempts to parse text starting at the index given by &lt;code&gt;pos&lt;/code&gt;. If parsing succeeds, then the index of &lt;code&gt;pos&lt;/code&gt; is updated to the index after the last character used (parsing does not necessarily use all characters up to the end of the string), and the parsed date is returned. The updated &lt;code&gt;pos&lt;/code&gt; can be used to indicate the starting point for the next call to this method. If an error occurs, then the index of &lt;code&gt;pos&lt;/code&gt; is not changed, the error index of &lt;code&gt;pos&lt;/code&gt; is set to the index of the character where the error occurred, and null is returned.</source>
          <target state="translated">该方法尝试解析从 &lt;code&gt;pos&lt;/code&gt; 给定的索引处开始的文本。如果解析成功，则 &lt;code&gt;pos&lt;/code&gt; 的索引将更新为使用的最后一个字符之后的索引（解析不一定会使用直到字符串末尾的所有字符），并返回解析的日期。更新的 &lt;code&gt;pos&lt;/code&gt; 可用于指示下一次对此方法的调用的起点。如果发生错误，则 &lt;code&gt;pos&lt;/code&gt; 的索引不变，将 &lt;code&gt;pos&lt;/code&gt; 的错误索引设置为发生错误的字符的索引，并返回null。</target>
        </trans-unit>
        <trans-unit id="e9294a95741242e43f78e7e3460c9763244cb68c" translate="yes" xml:space="preserve">
          <source>The method attempts to parse text starting at the index given by &lt;code&gt;pos&lt;/code&gt;. If parsing succeeds, then the index of &lt;code&gt;pos&lt;/code&gt; is updated to the index after the last character used (parsing does not necessarily use all characters up to the end of the string), and the parsed number is returned. The updated &lt;code&gt;pos&lt;/code&gt; can be used to indicate the starting point for the next call to this method. If an error occurs, then the index of &lt;code&gt;pos&lt;/code&gt; is not changed, the error index of &lt;code&gt;pos&lt;/code&gt; is set to the index of the character where the error occurred, and &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">该方法尝试解析从 &lt;code&gt;pos&lt;/code&gt; 给定的索引处开始的文本。如果解析成功，则 &lt;code&gt;pos&lt;/code&gt; 的索引将更新为使用的最后一个字符之后的索引（解析不一定使用直到字符串末尾的所有字符），并返回解析的数字。更新的 &lt;code&gt;pos&lt;/code&gt; 可用于指示下一次对此方法的调用的起点。如果发生错误，则 &lt;code&gt;pos&lt;/code&gt; 的索引不变，将 &lt;code&gt;pos&lt;/code&gt; 的错误索引设置为发生错误的字符的索引，并返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdc63bdbe6175542e0c05d24ad602abe98b3317a" translate="yes" xml:space="preserve">
          <source>The method attempts to parse text starting at the index given by &lt;code&gt;pos&lt;/code&gt;. If parsing succeeds, then the index of &lt;code&gt;pos&lt;/code&gt; is updated to the index after the last character used (parsing does not necessarily use all characters up to the end of the string), and the parsed number is returned. The updated &lt;code&gt;pos&lt;/code&gt; can be used to indicate the starting point for the next call to this method. If an error occurs, then the index of &lt;code&gt;pos&lt;/code&gt; is not changed, the error index of &lt;code&gt;pos&lt;/code&gt; is set to the index of the character where the error occurred, and null is returned.</source>
          <target state="translated">该方法尝试解析从 &lt;code&gt;pos&lt;/code&gt; 给定的索引处开始的文本。如果解析成功，则 &lt;code&gt;pos&lt;/code&gt; 的索引将更新为使用的最后一个字符之后的索引（解析不一定会使用所有字符直到字符串末尾），并返回解析的数字。更新的 &lt;code&gt;pos&lt;/code&gt; 可用于指示下一次对此方法的调用的起点。如果发生错误，则 &lt;code&gt;pos&lt;/code&gt; 的索引不变，将 &lt;code&gt;pos&lt;/code&gt; 的错误索引设置为发生错误的字符的索引，并返回null。</target>
        </trans-unit>
        <trans-unit id="755b2d6e0868e85486b4720a3bf6fb663c77e645" translate="yes" xml:space="preserve">
          <source>The method attempts to parse text starting at the index given by &lt;code&gt;pos&lt;/code&gt;. If parsing succeeds, then the index of &lt;code&gt;pos&lt;/code&gt; is updated to the index after the last character used (parsing does not necessarily use all characters up to the end of the string), and the parsed object array is returned. The updated &lt;code&gt;pos&lt;/code&gt; can be used to indicate the starting point for the next call to this method. If an error occurs, then the index of &lt;code&gt;pos&lt;/code&gt; is not changed, the error index of &lt;code&gt;pos&lt;/code&gt; is set to the index of the character where the error occurred, and null is returned.</source>
          <target state="translated">该方法尝试解析从 &lt;code&gt;pos&lt;/code&gt; 给定的索引处开始的文本。如果解析成功，则 &lt;code&gt;pos&lt;/code&gt; 的索引将更新为使用的最后一个字符之后的索引（解析不一定会使用所有字符直到字符串末尾），然后返回已解析的对象数组。更新的 &lt;code&gt;pos&lt;/code&gt; 可用于指示下一次对此方法的调用的起点。如果发生错误，则 &lt;code&gt;pos&lt;/code&gt; 的索引不变，将 &lt;code&gt;pos&lt;/code&gt; 的错误索引设置为发生错误的字符的索引，并返回null。</target>
        </trans-unit>
        <trans-unit id="728edd8d0c7fa7fe83058e87c898460ae69879c1" translate="yes" xml:space="preserve">
          <source>The method attempts to parse text starting at the index given by &lt;code&gt;pos&lt;/code&gt;. If parsing succeeds, then the index of &lt;code&gt;pos&lt;/code&gt; is updated to the index after the last character used (parsing does not necessarily use all characters up to the end of the string), and the parsed object is returned. The updated &lt;code&gt;pos&lt;/code&gt; can be used to indicate the starting point for the next call to this method. If an error occurs, then the index of &lt;code&gt;pos&lt;/code&gt; is not changed, the error index of &lt;code&gt;pos&lt;/code&gt; is set to the index of the character where the error occurred, and null is returned.</source>
          <target state="translated">该方法尝试解析从 &lt;code&gt;pos&lt;/code&gt; 给定的索引处开始的文本。如果解析成功，则 &lt;code&gt;pos&lt;/code&gt; 的索引将更新为最后一个使用的字符之后的索引（解析不一定会使用所有字符直到字符串末尾），然后返回解析的对象。更新的 &lt;code&gt;pos&lt;/code&gt; 可用于指示下一次对此方法的调用的起点。如果发生错误，则 &lt;code&gt;pos&lt;/code&gt; 的索引不变，将 &lt;code&gt;pos&lt;/code&gt; 的错误索引设置为发生错误的字符的索引，并返回null。</target>
        </trans-unit>
        <trans-unit id="bf4b711f1cdaf392a710511f3f4f04d14590ac67" translate="yes" xml:space="preserve">
          <source>The method changes the geometry-related data. Therefore, the native windowing system may ignore such requests, or it may modify the requested data, so that the &lt;code&gt;JPopupMenu&lt;/code&gt; object is placed and sized in a way that corresponds closely to the desktop settings.</source>
          <target state="translated">该方法更改与几何相关的数据。因此，本机窗口系统可能会忽略此类请求，或者可能会修改请求的数据，以便以与桌面设置紧密对应的方式放置 &lt;code&gt;JPopupMenu&lt;/code&gt; 对象并调整其大小。</target>
        </trans-unit>
        <trans-unit id="96b82a41b3cc128f7bd730255f76a7a83cf6343b" translate="yes" xml:space="preserve">
          <source>The method changes the geometry-related data. Therefore, the native windowing system may ignore such requests, or it may modify the requested data, so that the &lt;code&gt;Window&lt;/code&gt; object is placed and sized in a way that corresponds closely to the desktop settings.</source>
          <target state="translated">该方法更改与几何相关的数据。因此，本机窗口系统可能会忽略此类请求，或者可能会修改请求的数据，以便以与桌面设置紧密对应的方式放置和调整 &lt;code&gt;Window&lt;/code&gt; 对象的大小。</target>
        </trans-unit>
        <trans-unit id="d9a2756aa6193355e7784a53a8731be0aabbdbef" translate="yes" xml:space="preserve">
          <source>The method defined on a non-interceptor class MUST HAVE the following signature:</source>
          <target state="translated">在非拦截者类上定义的方法必须有以下签名。</target>
        </trans-unit>
        <trans-unit id="b7fc31a8c1bb691e0963a145eeb54ea63fdff422" translate="yes" xml:space="preserve">
          <source>The method defined on an interceptor class MUST HAVE one of the following signatures:</source>
          <target state="translated">在拦截器类上定义的方法必须具有以下签名之一。</target>
        </trans-unit>
        <trans-unit id="d288dedc0be71bcd9f7b6d49e3e7dce97a926418" translate="yes" xml:space="preserve">
          <source>The method does not take steps to guard against the &lt;code&gt;CharSequence&lt;/code&gt; being mutated while parsing.</source>
          <target state="translated">该方法没有采取措施来防止在解析时对 &lt;code&gt;CharSequence&lt;/code&gt; 进行突变。</target>
        </trans-unit>
        <trans-unit id="874cf916c1f10aad774a741a754ad2423996c2b7" translate="yes" xml:space="preserve">
          <source>The method does not treat a backslash character, &lt;code&gt;\&lt;/code&gt;, before a non-valid escape character as an error; the backslash is silently dropped. For example, in a Java string the sequence &lt;code&gt;&quot;\z&quot;&lt;/code&gt; would cause a compile time error. In contrast, this method silently drops the backslash. Therefore, this method treats the two character sequence &lt;code&gt;&quot;\b&quot;&lt;/code&gt; as equivalent to the single character &lt;code&gt;'b'&lt;/code&gt;.</source>
          <target state="translated">该方法不会在无效的转义字符之前将反斜杠字符 &lt;code&gt;\&lt;/code&gt; 视为错误；反斜杠默默地掉了下来。例如，在Java字符串中，序列 &lt;code&gt;&quot;\z&quot;&lt;/code&gt; 将导致编译时错误。相反，此方法会静默删除反斜杠。因此，此方法将两个字符序列 &lt;code&gt;&quot;\b&quot;&lt;/code&gt; 视为与单个字符 &lt;code&gt;'b'&lt;/code&gt; 等效。</target>
        </trans-unit>
        <trans-unit id="dff2253dcf2dbdbeb818932622f47c017d711d4d" translate="yes" xml:space="preserve">
          <source>The method does override or implement a method declared in a supertype.</source>
          <target state="translated">该方法确实覆盖或实现了一个超类型中声明的方法。</target>
        </trans-unit>
        <trans-unit id="de0aebf01d17f688e180aa1f2d8c519be06ac3b0" translate="yes" xml:space="preserve">
          <source>The method does the following (implementations are free to optimized but must do equivalent processing):</source>
          <target state="translated">该方法做了以下工作(实施例可以自由优化,但必须做等价处理)。</target>
        </trans-unit>
        <trans-unit id="d874850a3069b1faecbf73c1fdbee24f36633207" translate="yes" xml:space="preserve">
          <source>The method handle conversion cannot be made if any one of the required pairwise conversions cannot be made.</source>
          <target state="translated">如果不能进行任何一个所需的对偶转换,则不能进行方法句柄转换。</target>
        </trans-unit>
        <trans-unit id="a6801c974c56cb2c89e9773e9f5501edc995c2ac" translate="yes" xml:space="preserve">
          <source>The method handle may throw an &lt;em&gt;undeclared exception&lt;/em&gt;, which means any checked exception (or other checked throwable) not declared by the requested type's single abstract method. If this happens, the throwable will be wrapped in an instance of &lt;a href=&quot;../reflect/undeclaredthrowableexception&quot;&gt;&lt;code&gt;UndeclaredThrowableException&lt;/code&gt;&lt;/a&gt; and thrown in that wrapped form.</source>
          <target state="translated">方法句柄可能会引发&lt;em&gt;未声明的异常&lt;/em&gt;，这意味着未由请求的类型的单个抽象方法声明的任何已检查的异常（或其他已检查的可抛出对象）。如果发生这种情况，throwable将被包装在&lt;a href=&quot;../reflect/undeclaredthrowableexception&quot;&gt; &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; &lt;/a&gt;的实例中，并以该包装的形式抛出。</target>
        </trans-unit>
        <trans-unit id="041d039fea09ec912b2f7c0f54da21a3bfd1e44b" translate="yes" xml:space="preserve">
          <source>The method has a signature that is override-equivalent to that of any public method declared in &lt;a href=&quot;object&quot;&gt;Object&lt;/a&gt;.</source>
          <target state="translated">该方法的签名与&lt;a href=&quot;object&quot;&gt;Object中&lt;/a&gt;声明的任何公共方法的签名等效。</target>
        </trans-unit>
        <trans-unit id="4ed8c6b5045fb72aff03047fce5ebbbafb8db76e" translate="yes" xml:space="preserve">
          <source>The method has no effect and is only left present to avoid introducing a binary incompatibility.</source>
          <target state="translated">该方法没有任何效果,只是为了避免引入二进制的不兼容而留下的。</target>
        </trans-unit>
        <trans-unit id="82a435b42c8b73e724dcb824f7df83b575fd19be" translate="yes" xml:space="preserve">
          <source>The method invocation will occur in the specified thread. Method invocation can occur only if the specified thread has been suspended by an event which occurred in that thread. Method invocation is not supported when the target VM has been suspended through &lt;a href=&quot;virtualmachine#suspend()&quot;&gt;&lt;code&gt;VirtualMachine.suspend()&lt;/code&gt;&lt;/a&gt; or when the specified thread is suspended through &lt;a href=&quot;threadreference#suspend()&quot;&gt;&lt;code&gt;ThreadReference.suspend()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法调用将在指定的线程中发生。仅当指定线程已被该线程中发生的事件挂起时，才可以进行方法调用。通过&lt;a href=&quot;virtualmachine#suspend()&quot;&gt; &lt;code&gt;VirtualMachine.suspend()&lt;/code&gt; &lt;/a&gt;挂起目标VM或通过&lt;a href=&quot;threadreference#suspend()&quot;&gt; &lt;code&gt;ThreadReference.suspend()&lt;/code&gt; &lt;/a&gt;挂起指定的线程时，不支持方法调用。</target>
        </trans-unit>
        <trans-unit id="00121123a40bd3cc2c602ed162840173d63b2881" translate="yes" xml:space="preserve">
          <source>The method is called at end of dragging to place the frame in either its original place or in its floating frame.</source>
          <target state="translated">该方法在拖动结束时被调用,以将框架放置在其原始位置或浮动框架中。</target>
        </trans-unit>
        <trans-unit id="de35ac2212c0c9582b0146f8df1ba4a720f89ca9" translate="yes" xml:space="preserve">
          <source>The method is only called when the input method is active.</source>
          <target state="translated">该方法只有在输入法处于活动状态时才会被调用。</target>
        </trans-unit>
        <trans-unit id="9baa3ede543d5035f46bcd56e3c0863a6c562fb3" translate="yes" xml:space="preserve">
          <source>The method is only called when the input method is inactive.</source>
          <target state="translated">该方法只有在输入法不活动时才会被调用。</target>
        </trans-unit>
        <trans-unit id="cf9754a32ab897b521e9159a73620d72117cb589" translate="yes" xml:space="preserve">
          <source>The method is only called when the input method is inactive. A newly instantiated input method is assumed to be inactive.</source>
          <target state="translated">只有当输入方法处于非活动状态时,才会调用该方法。新实例化的输入法被认为是不活动的。</target>
        </trans-unit>
        <trans-unit id="2ad284914c9aa89e7c3697bae4da03ceba60b4f8" translate="yes" xml:space="preserve">
          <source>The method is only called when the input method is inactive. No method of this interface is called on this instance after dispose.</source>
          <target state="translated">该方法只有在输入方法不活动时才会被调用。处置后,这个接口的任何方法都不会在这个实例上被调用。</target>
        </trans-unit>
        <trans-unit id="8988a6bf12069b0fac6f427bbfce01c5e069e820" translate="yes" xml:space="preserve">
          <source>The method is overridden to take into account caret width.</source>
          <target state="translated">该方法被重写,以考虑到齿条宽度。</target>
        </trans-unit>
        <trans-unit id="623ed9d67cf1fb8a617d106f69d4d42cdce1cab5" translate="yes" xml:space="preserve">
          <source>The method is used to drag &lt;code&gt;DragWindow&lt;/code&gt; during the &lt;code&gt;JToolBar&lt;/code&gt; is being dragged.</source>
          <target state="translated">用于拖动所述方法 &lt;code&gt;DragWindow&lt;/code&gt; 期间 &lt;code&gt;JToolBar&lt;/code&gt; 的被拖动。</target>
        </trans-unit>
        <trans-unit id="7616838d561dfc62e3dd4e5cdb730d2042aaf10e" translate="yes" xml:space="preserve">
          <source>The method makes a best effort attempt to close all opened files, by catching &lt;a href=&quot;../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;s internally. Unchecked exceptions and errors are not caught. Calling close on an already closed loader has no effect.</source>
          <target state="translated">该方法通过在内部捕获&lt;a href=&quot;../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt;来尽最大努力尝试关闭所有打开的文件。未捕获未经检查的异常和错误。在已经关闭的加载器上调用close无效。</target>
        </trans-unit>
        <trans-unit id="22e6c0f3aab290294b829964017cfbc93840e56c" translate="yes" xml:space="preserve">
          <source>The method may have no visual effect if the Java platform implementation and/or the native system do not support changing the mouse cursor shape.</source>
          <target state="translated">如果Java平台实现和/或原生系统不支持改变鼠标光标形状,该方法可能没有视觉效果。</target>
        </trans-unit>
        <trans-unit id="a1d97588045b8fdfb47b76675e28ef92cc975e90" translate="yes" xml:space="preserve">
          <source>The method may only be called by the startElement event of the &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; that the application sets to the &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该方法只能由应用程序设置为&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;的startElement事件调用。</target>
        </trans-unit>
        <trans-unit id="64b19b0029680ec5059b9a2babc8eac7a26ae79d" translate="yes" xml:space="preserve">
          <source>The method may only be called by the startElement event or the endElement event of the &lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; that the application sets to the &lt;a href=&quot;validatorhandler&quot;&gt;&lt;code&gt;ValidatorHandler&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该方法只能由应用程序设置为&lt;a href=&quot;validatorhandler&quot;&gt; &lt;code&gt;ValidatorHandler&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;的startElement事件或endElement事件调用。</target>
        </trans-unit>
        <trans-unit id="01f8d9463e6eb038e7275bbee56c959165f19559" translate="yes" xml:space="preserve">
          <source>The method must have the same effect as calling the &lt;code&gt;setBindings&lt;/code&gt; method of &lt;code&gt;ScriptContext&lt;/code&gt; with the corresponding value of &lt;code&gt;scope&lt;/code&gt; on the default &lt;code&gt;ScriptContext&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">该方法必须具有与在 &lt;code&gt;ScriptEngine&lt;/code&gt; 的默认 &lt;code&gt;ScriptContext&lt;/code&gt; 上使用 &lt;code&gt;scope&lt;/code&gt; 的相应值调用 &lt;code&gt;ScriptContext&lt;/code&gt; 的 &lt;code&gt;setBindings&lt;/code&gt; 方法相同的效果。</target>
        </trans-unit>
        <trans-unit id="b61a4c76b41fb31fb418cddaaa8ae04229303a5b" translate="yes" xml:space="preserve">
          <source>The method names &quot;get&quot; and &quot;set&quot; defined in the &lt;a href=&quot;../../../java.base/java/util/list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface may also be applied to array instances, mapping to the static methods of the same name in the &lt;code&gt;Array&lt;/code&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/util/list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;接口中定义的方法名称&amp;ldquo; get&amp;rdquo;和&amp;ldquo; set&amp;rdquo;也可以应用于数组实例，映射到 &lt;code&gt;Array&lt;/code&gt; 类中具有相同名称的静态方法。</target>
        </trans-unit>
        <trans-unit id="15a01b8573f438dbb644e46e679a12309fb238bb" translate="yes" xml:space="preserve">
          <source>The method names &quot;get&quot; and &quot;set&quot; defined in the &lt;a href=&quot;../util/list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface may also be applied to array instances, mapping to the static methods of the same name in the &lt;code&gt;Array&lt;/code&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../util/list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt;接口中定义的方法名称&amp;ldquo; get&amp;rdquo;和&amp;ldquo; set&amp;rdquo; 也可以应用于数组实例，映射到 &lt;code&gt;Array&lt;/code&gt; 类中具有相同名称的静态方法。</target>
        </trans-unit>
        <trans-unit id="31ea5c5f1f94c274b3d01eb1641bbe42804b8496" translate="yes" xml:space="preserve">
          <source>The method on which PostConstruct is applied MAY be public, protected, package private or private.</source>
          <target state="translated">应用PostConstruct的方法可以是public、protected、package private或private。</target>
        </trans-unit>
        <trans-unit id="f9d54155e020311194231f7107f4623669daac2c" translate="yes" xml:space="preserve">
          <source>The method on which PreDestroy is applied MAY be public, protected, package private or private.</source>
          <target state="translated">应用PreDestroy的方法可以是公共的、受保护的、包私有的或私有的。</target>
        </trans-unit>
        <trans-unit id="a301ae939450f1e25dc09421c4085bcfd77c3e36" translate="yes" xml:space="preserve">
          <source>The method retrieves the source and destination band setting arrays from param using the &lt;code&gt;getSourceBands&lt;/code&gt; and &lt;code&gt;getDestinationBands&lt;/code&gt; methods (or considers them to be &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;param&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;). If the source band setting array is &lt;code&gt;null&lt;/code&gt;, it is considered to be equal to the array &lt;code&gt;{ 0, 1, ..., numSrcBands - 1 }&lt;/code&gt;, and similarly for the destination band setting array.</source>
          <target state="translated">该方法检索的源和目标频带使用从PARAM设置阵列 &lt;code&gt;getSourceBands&lt;/code&gt; 和 &lt;code&gt;getDestinationBands&lt;/code&gt; 方法（或认为它们是 &lt;code&gt;null&lt;/code&gt; 如果 &lt;code&gt;param&lt;/code&gt; 是 &lt;code&gt;null&lt;/code&gt; ）。如果源波段设置数组为 &lt;code&gt;null&lt;/code&gt; ，则认为它等于数组 &lt;code&gt;{ 0, 1, ..., numSrcBands - 1 }&lt;/code&gt; ，对于目标波段设置数组也类似。</target>
        </trans-unit>
        <trans-unit id="ca55322435324027e26d48fb8b856f2cd4798e10" translate="yes" xml:space="preserve">
          <source>The method retrieves the source and destination band setting arrays from param using the &lt;code&gt;getSourceBands&lt;/code&gt; and &lt;code&gt;getDestinationBands&lt;/code&gt;methods (or considers them to be &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;param&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;). If the source band setting array is &lt;code&gt;null&lt;/code&gt;, it is considered to be equal to the array &lt;code&gt;{ 0, 1, ..., numSrcBands - 1 }&lt;/code&gt;, and similarly for the destination band setting array.</source>
          <target state="translated">该方法检索的源和目标频带使用从PARAM设置阵列 &lt;code&gt;getSourceBands&lt;/code&gt; 和 &lt;code&gt;getDestinationBands&lt;/code&gt; 方法（或认为它们是 &lt;code&gt;null&lt;/code&gt; 如果 &lt;code&gt;param&lt;/code&gt; 是 &lt;code&gt;null&lt;/code&gt; ）。如果源频段设置数组为 &lt;code&gt;null&lt;/code&gt; ，则它被认为等于数组 &lt;code&gt;{ 0, 1, ..., numSrcBands - 1 }&lt;/code&gt; ，对于目标频段设置数组也类似。</target>
        </trans-unit>
        <trans-unit id="eedb75f6270c3f56b8d300605906d86bfe0698fe" translate="yes" xml:space="preserve">
          <source>The method returns &lt;code&gt;false&lt;/code&gt; if the background color of the window is not &lt;code&gt;null&lt;/code&gt; and the alpha component of the color is less than &lt;code&gt;1.0f&lt;/code&gt;. The method returns &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">如果窗口的背景颜色不为 &lt;code&gt;null&lt;/code&gt; 且该颜色的alpha分量小于 &lt;code&gt;1.0f&lt;/code&gt; ,则该方法返回 &lt;code&gt;false&lt;/code&gt; 。否则，该方法返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ec049c98e4152761fc23d3a62699d89db08b276a" translate="yes" xml:space="preserve">
          <source>The method returns &lt;code&gt;null&lt;/code&gt; for territories that don't have a currency, such as Antarctica.</source>
          <target state="translated">对于没有货币的地区（例如南极洲），该方法返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ceab077d59c6d554d1d17fd8d17c58c9283f7971" translate="yes" xml:space="preserve">
          <source>The method returns &lt;code&gt;null&lt;/code&gt; if no further fallback search is desired.</source>
          <target state="translated">如果不需要进一步的回退搜索，则该方法返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0c99f16cb456d9d761214c183263d3daa238152b" translate="yes" xml:space="preserve">
          <source>The method returns an estimate of the number of nanoseconds remaining to wait given the supplied &lt;code&gt;nanosTimeout&lt;/code&gt; value upon return, or a value less than or equal to zero if it timed out. This value can be used to determine whether and how long to re-wait in cases where the wait returns but an awaited condition still does not hold. Typical uses of this method take the following form:</source>
          <target state="translated">给定返回时提供的 &lt;code&gt;nanosTimeout&lt;/code&gt; 值，该方法将返回等待等待的纳秒数的估计值；如果超时，则返回小于或等于零的值。此值可用于确定在等待返回但仍不满足等待条件的情况下是否重新等待以及等待多长时间。此方法的典型用法采用以下形式：</target>
        </trans-unit>
        <trans-unit id="22807dd693843414d3166f9d76a4f0ab3b4b4bd9" translate="yes" xml:space="preserve">
          <source>The method returns the sum of the number of bytes that have been pushed back and the value returned by &lt;a href=&quot;filterinputstream#available()&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该方法返回已推回的字节数与&lt;a href=&quot;filterinputstream#available()&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt;返回的值之和。</target>
        </trans-unit>
        <trans-unit id="769dd36c2f309466661aec7a75b851fd30f66882" translate="yes" xml:space="preserve">
          <source>The method returns the sum of the number of bytes that have been pushed back and the value returned by &lt;a href=&quot;filterinputstream#available--&quot;&gt;&lt;code&gt;available&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该方法返回已推回的字节数与&lt;a href=&quot;filterinputstream#available--&quot;&gt; &lt;code&gt;available&lt;/code&gt; &lt;/a&gt;返回的值之和。</target>
        </trans-unit>
        <trans-unit id="cdb7f255588809397e808115b9458f128071df43" translate="yes" xml:space="preserve">
          <source>The method searches through the system-type entries, including &lt;code&gt;system,
 rewriteSystem, systemSuffix, delegateSystem&lt;/code&gt;, and &lt;code&gt;group&lt;/code&gt; entries in the current catalog in order to find a match.</source>
          <target state="translated">该方法搜索系统类型的条目，包括当前目录中的 &lt;code&gt;system, rewriteSystem, systemSuffix, delegateSystem&lt;/code&gt; 和 &lt;code&gt;group&lt;/code&gt; 条目，以找到匹配项。</target>
        </trans-unit>
        <trans-unit id="a2afd8bb1d0a6da6c75a9bebebf50a25ebca3c5c" translate="yes" xml:space="preserve">
          <source>The method searches through the uri-type entries, including &lt;code&gt;uri,
 rewriteURI, uriSuffix, delegateURI&lt;/code&gt; and &lt;code&gt;group&lt;/code&gt; entries in the current catalog in order to find a match.</source>
          <target state="translated">该方法搜索uri类型的条目，包括 &lt;code&gt;uri, rewriteURI, uriSuffix, delegateURI&lt;/code&gt; 和当前目录中的 &lt;code&gt;group&lt;/code&gt; 条目，以找到匹配项。</target>
        </trans-unit>
        <trans-unit id="216d790277e9b6cd604727689d5fc6d453f43302" translate="yes" xml:space="preserve">
          <source>The method should throw an exception if it is unable to process the error, or if it wishes execution to terminate immediately. The processor will not necessarily honor this request.</source>
          <target state="translated">如果该方法无法处理错误,或者希望立即终止执行,则应抛出一个异常。处理器不一定会尊重这个请求。</target>
        </trans-unit>
        <trans-unit id="fe250e939b7e7db52403a1ef648db2140b1af77b" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn)T&lt;/code&gt;.</source>
          <target state="translated">方法签名的形式为 &lt;code&gt;(CT1 ct1, ..., CTn ctn)T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa6f42c80d224cda0b2c792cf80e5a6075e4aad7" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T expectedValue, T newValue)T&lt;/code&gt;.</source>
          <target state="translated">方法签名的形式为 &lt;code&gt;(CT1 ct1, ..., CTn ctn, T expectedValue, T newValue)T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a36d7c4d09bc50d171503ce472f931372ba7ea8d" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T expectedValue, T newValue)boolean&lt;/code&gt;.</source>
          <target state="translated">方法签名的形式为 &lt;code&gt;(CT1 ct1, ..., CTn ctn, T expectedValue, T newValue)boolean&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7899a3c45aee2a63be58f43fb7507deaf14b7d4d" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T mask)T&lt;/code&gt;.</source>
          <target state="translated">方法签名的形式为 &lt;code&gt;(CT1 ct1, ..., CTn ctn, T mask)T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39f1f090ab5791c96af8aef06404b250428d15f5" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)T&lt;/code&gt;.</source>
          <target state="translated">方法签名的形式为 &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b6f5c80e4e9cd2bac2c511593356bcb08dd77cd9" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)void&lt;/code&gt;</source>
          <target state="translated">方法签名的形式为 &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)void&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df0cfa1862f205e9a02308b8b61263f11b297c2b" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)void&lt;/code&gt;.</source>
          <target state="translated">方法签名的形式为 &lt;code&gt;(CT1 ct1, ..., CTn ctn, T newValue)void&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5802882f01d2ae9f4aa2d6373c5cdb1490dd819f" translate="yes" xml:space="preserve">
          <source>The method signature is of the form &lt;code&gt;(CT1 ct1, ..., CTn ctn, T value)T&lt;/code&gt;.</source>
          <target state="translated">方法签名的形式为 &lt;code&gt;(CT1 ct1, ..., CTn ctn, T value)T&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1a5895c513c19101d431f066651cadee4994a6cd" translate="yes" xml:space="preserve">
          <source>The method that should be used to read an indexed property value. May return null if the property isn't indexed or is write-only.</source>
          <target state="translated">读取索引属性值的方法。如果属性没有索引或只写,可能返回null。</target>
        </trans-unit>
        <trans-unit id="4b08ff4ef56a4f901d8176c3c9d3e4ffa7c0f0db" translate="yes" xml:space="preserve">
          <source>The method that should be used to read the property value. May return null if the property can't be read.</source>
          <target state="translated">读取属性值的方法。如果不能读取属性值,可能返回null。</target>
        </trans-unit>
        <trans-unit id="27d046710b3e478e214106309178510fcd767174" translate="yes" xml:space="preserve">
          <source>The method that should be used to write an indexed property value. May return null if the property isn't indexed or is read-only.</source>
          <target state="translated">用于写入索引属性值的方法。如果属性不是索引的或者是只读的,可能返回null。</target>
        </trans-unit>
        <trans-unit id="908a1d912ea96d1085e886bbb7a0220276726cc9" translate="yes" xml:space="preserve">
          <source>The method that should be used to write the property value. May return null if the property can't be written.</source>
          <target state="translated">用于写入属性值的方法。如果不能写入属性,可以返回null。</target>
        </trans-unit>
        <trans-unit id="9f2a6855e5dad9257b6848b559469ffc4f5de113" translate="yes" xml:space="preserve">
          <source>The method then tests that both arrays are equal in length, and that neither array contains a value larger than the largest available band index.</source>
          <target state="translated">然后,该方法测试两个数组的长度是否相等,并且两个数组中没有一个数组的值大于最大的可用频段索引。</target>
        </trans-unit>
        <trans-unit id="930c767b1d1ebf85cf795f6f392c161b88a6b486" translate="yes" xml:space="preserve">
          <source>The method throws &lt;code&gt;IllegalStateException&lt;/code&gt; if the clipboard is currently unavailable. For example, on some platforms, the system clipboard is unavailable while it is accessed by another application.</source>
          <target state="translated">如果剪贴板当前不可用，则该方法将引发 &lt;code&gt;IllegalStateException&lt;/code&gt; 。例如，在某些平台上，系统剪贴板在被另一个应用程序访问时不可用。</target>
        </trans-unit>
        <trans-unit id="9895b7a9795b5dbff6546ef043e299781d0fe80d" translate="yes" xml:space="preserve">
          <source>The method to use when painting outside the gradient bounds.</source>
          <target state="translated">在渐变边界外绘制时使用的方法。</target>
        </trans-unit>
        <trans-unit id="7763d77a0367fd9e2f4e536ad7b65a7521b0a81c" translate="yes" xml:space="preserve">
          <source>The method type has a &lt;a href=&quot;../constant/methodtypedesc&quot;&gt;&lt;code&gt;nominal descriptor&lt;/code&gt;&lt;/a&gt; returned by &lt;a href=&quot;#describeConstable()&quot;&gt;&lt;code&gt;MethodType::describeConstable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">方法类型具有由&lt;a href=&quot;#describeConstable()&quot;&gt; &lt;code&gt;MethodType::describeConstable&lt;/code&gt; &lt;/a&gt;返回的&lt;a href=&quot;../constant/methodtypedesc&quot;&gt; &lt;code&gt;nominal descriptor&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="144fdf820cdab5fd0df5fc91dad88ef53b4d6791" translate="yes" xml:space="preserve">
          <source>The method type has no &lt;a href=&quot;../constant/methodtypedesc&quot;&gt;&lt;code&gt;nominal descriptor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#describeConstable()&quot;&gt;&lt;code&gt;MethodType::describeConstable&lt;/code&gt;&lt;/a&gt; returns an empty optional.</source>
          <target state="translated">方法类型没有&lt;a href=&quot;../constant/methodtypedesc&quot;&gt; &lt;code&gt;nominal descriptor&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#describeConstable()&quot;&gt; &lt;code&gt;MethodType::describeConstable&lt;/code&gt; &lt;/a&gt;返回一个空的可选。</target>
        </trans-unit>
        <trans-unit id="ec0804b3da18a61f222951f395dd58dd51623934" translate="yes" xml:space="preserve">
          <source>The method used to access the array of listeners at the event source or null if it doesn't exist.</source>
          <target state="translated">用于访问事件源的监听器数组的方法,如果不存在则为空。</target>
        </trans-unit>
        <trans-unit id="d1b1e281970d0ec8d5c6cbefb1e926c1a0c3863c" translate="yes" xml:space="preserve">
          <source>The method used to register a listener at the event source.</source>
          <target state="translated">用于在事件源注册监听器的方法。</target>
        </trans-unit>
        <trans-unit id="3cfa4fe325cf93f02d82653b486a7ae683ea287e" translate="yes" xml:space="preserve">
          <source>The method used to remove a listener at the event source.</source>
          <target state="translated">用于在事件源删除监听器的方法。</target>
        </trans-unit>
        <trans-unit id="e4e4789aa1a9f309523b4d903049df53c986ffbe" translate="yes" xml:space="preserve">
          <source>The method which will return early is referred to as the called method. The called method is the current method (as defined by the Frames section in the Java Virtual Machine Specification) for the specified thread at the time this method is called.</source>
          <target state="translated">将提前返回的方法被称为被调用方法。被调用的方法是该方法被调用时指定线程的当前方法(由Java虚拟机规范中的Frames部分定义)。</target>
        </trans-unit>
        <trans-unit id="2a56f0a297591ec761ffc4464906f2896e34b7f6" translate="yes" xml:space="preserve">
          <source>The method writeObject is used to write an object to the stream. Any object, including Strings and arrays, is written with writeObject. Multiple objects or primitives can be written to the stream. The objects must be read back from the corresponding ObjectInputstream with the same types and in the same order as they were written.</source>
          <target state="translated">writeObject方法用于向流中写入对象。任何对象,包括字符串和数组,都可以使用 writeObject 进行写入。多个对象或基元可以被写入流。必须以相同的类型和写入的顺序从相应的 ObjectInputstream 中读回这些对象。</target>
        </trans-unit>
        <trans-unit id="41363265c8a4bd05d3a45429d86429e66f37d3cc" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;#getInstant()&quot;&gt;&lt;code&gt;getInstant()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getDateTimeBefore()&quot;&gt;&lt;code&gt;getDateTimeBefore()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getDateTimeAfter()&quot;&gt;&lt;code&gt;getDateTimeAfter()&lt;/code&gt;&lt;/a&gt; all represent the same instant.</source>
          <target state="translated">方法&lt;a href=&quot;#getInstant()&quot;&gt; &lt;code&gt;getInstant()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getDateTimeBefore()&quot;&gt; &lt;code&gt;getDateTimeBefore()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getDateTimeAfter()&quot;&gt; &lt;code&gt;getDateTimeAfter()&lt;/code&gt; &lt;/a&gt;都表示同一时刻。</target>
        </trans-unit>
        <trans-unit id="1d2f32a4b9ffbf5e3d66a95c06be2ec95ffc9ed9" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;zoneoffsettransition#getInstant--&quot;&gt;&lt;code&gt;getInstant()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;zoneoffsettransition#getDateTimeBefore--&quot;&gt;&lt;code&gt;getDateTimeBefore()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffsettransition#getDateTimeAfter--&quot;&gt;&lt;code&gt;getDateTimeAfter()&lt;/code&gt;&lt;/a&gt; all represent the same instant.</source>
          <target state="translated">方法&lt;a href=&quot;zoneoffsettransition#getInstant--&quot;&gt; &lt;code&gt;getInstant()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;zoneoffsettransition#getDateTimeBefore--&quot;&gt; &lt;code&gt;getDateTimeBefore()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;zoneoffsettransition#getDateTimeAfter--&quot;&gt; &lt;code&gt;getDateTimeAfter()&lt;/code&gt; &lt;/a&gt;都表示同一时刻。</target>
        </trans-unit>
        <trans-unit id="2fa8e3c1943bf599da02611ada531a6bffa15fa8" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;getCacheSize&lt;/code&gt; and &lt;code&gt;setCacheSize&lt;/code&gt; define a read-write attribute of type &lt;code&gt;int&lt;/code&gt; called &lt;code&gt;CacheSize&lt;/code&gt; (with an initial capital, unlike the JavaBeans convention).</source>
          <target state="translated">方法 &lt;code&gt;getCacheSize&lt;/code&gt; 和 &lt;code&gt;setCacheSize&lt;/code&gt; 定义了一个类型为 &lt;code&gt;int&lt;/code&gt; 的读写属性，称为 &lt;code&gt;CacheSize&lt;/code&gt; （具有首字母大写，与JavaBeans约定不同）。</target>
        </trans-unit>
        <trans-unit id="f68f66a9cc678fa78140ffed606a6d1a687876f8" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;invokeExact&lt;/code&gt; and &lt;code&gt;invoke&lt;/code&gt; are declared to throw &lt;a href=&quot;../throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;&lt;/a&gt;, which is to say that there is no static restriction on what a method handle can throw. Since the JVM does not distinguish between checked and unchecked exceptions (other than by their class, of course), there is no particular effect on bytecode shape from ascribing checked exceptions to method handle invocations. But in Java source code, methods which perform method handle calls must either explicitly throw &lt;code&gt;Throwable&lt;/code&gt;, or else must catch all throwables locally, rethrowing only those which are legal in the context, and wrapping ones which are illegal.</source>
          <target state="translated">声明方法 &lt;code&gt;invokeExact&lt;/code&gt; 和 &lt;code&gt;invoke&lt;/code&gt; 引发&lt;a href=&quot;../throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; &lt;/a&gt;，也就是说，对方法句柄可以抛出的内容没有静态限制。由于JVM不会区分已检查异常和未检查异常（当然不是按其类划分），因此从将检查异常分配给方法句柄调用对字节码形状没有特殊影响。但是在Java源代码中，执行方法句柄调用的方法必须显式地抛出 &lt;code&gt;Throwable&lt;/code&gt; ，或者必须在本地捕获所有可抛出对象，仅重新抛出在上下文中合法的对象，然后包装非法的对象。</target>
        </trans-unit>
        <trans-unit id="bf14ebb965e886d2951ba293b030b2b06853b999" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;setAsciiStream&lt;/code&gt;, &lt;code&gt;setBinaryStream&lt;/code&gt;, &lt;code&gt;setCharacterStream&lt;/code&gt;, and &lt;code&gt;setUnicodeStream&lt;/code&gt; (which is deprecated, so applications should use &lt;code&gt;getCharacterStream&lt;/code&gt; instead) take three parameters, so for them, the element in the array returned by &lt;code&gt;getParams&lt;/code&gt; is also an array. What is different about these setter methods is that in addition to the information provided by parameters, the array contains one of the &lt;code&gt;BaseRowSet&lt;/code&gt; constants indicating the type of stream being set.</source>
          <target state="translated">所述方法 &lt;code&gt;setAsciiStream&lt;/code&gt; ， &lt;code&gt;setBinaryStream&lt;/code&gt; ， &lt;code&gt;setCharacterStream&lt;/code&gt; 和 &lt;code&gt;setUnicodeStream&lt;/code&gt; （其已过时，所以应用程序应使用 &lt;code&gt;getCharacterStream&lt;/code&gt; 代替）取三个参数，因此对他们来说，由返回的数组中的元素 &lt;code&gt;getParams&lt;/code&gt; 也是一个数组。这些设置方法的不同之处在于，除了参数提供的信息外，该数组还包含 &lt;code&gt;BaseRowSet&lt;/code&gt; 常量之一，该常量指示要设置的流的类型。</target>
        </trans-unit>
        <trans-unit id="f23e34ba9de16e07759fdba49f95969f12bcc468" translate="yes" xml:space="preserve">
          <source>The methods and constants which specify options in this interface are for implementation only. If you're not subclassing SocketImpl or DatagramSocketImpl, &lt;b&gt;you won't use these directly.&lt;/b&gt; There are type-safe methods to get/set each of these options in Socket, ServerSocket, DatagramSocket and MulticastSocket.</source>
          <target state="translated">在此接口中指定选项的方法和常量仅用于实现。如果您不继承SocketImpl或DatagramSocketImpl的子类，&lt;b&gt;则不会直接使用它们。&lt;/b&gt;在Socket，ServerSocket，DatagramSocket和MulticastSocket中，有一些类型安全的方法来获取/设置每个选项。</target>
        </trans-unit>
        <trans-unit id="7f4717636bd6cd82ae1347e0ad010ab81ed6937b" translate="yes" xml:space="preserve">
          <source>The methods and constructors of objects created by a class loader may reference other classes. To determine the class(es) referred to, the Java virtual machine invokes the &lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method of the class loader that originally created the class.</source>
          <target state="translated">由类加载器创建的对象的方法和构造函数可以引用其他类。为了确定所引用的类，Java虚拟机将调用最初创建该类的类加载器的&lt;a href=&quot;#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="a1c8839f76f0c1cc8a34ad4ed7dc5ee39ef85f5c" translate="yes" xml:space="preserve">
          <source>The methods and constructors of objects created by a class loader may reference other classes. To determine the class(es) referred to, the Java virtual machine invokes the &lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method of the class loader that originally created the class.</source>
          <target state="translated">由类加载器创建的对象的方法和构造函数可以引用其他类。为了确定所引用的类，Java虚拟机将调用最初创建该类的类加载器的&lt;a href=&quot;classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="39c7b8f07a9efbfd307fba62e3dde13e6f8f3ece" translate="yes" xml:space="preserve">
          <source>The methods and data of class &lt;code&gt;Character&lt;/code&gt; are defined by the information in the</source>
          <target state="translated">&lt;code&gt;Character&lt;/code&gt; 类的方法和数据由</target>
        </trans-unit>
        <trans-unit id="e092e659a922c45ad545ffba4e9a01d03812d39f" translate="yes" xml:space="preserve">
          <source>The methods for rendering are:</source>
          <target state="translated">渲染的方法是:</target>
        </trans-unit>
        <trans-unit id="105b50c3378baf8b8ae12b87ea824df029be9611" translate="yes" xml:space="preserve">
          <source>The methods in an implementation of this interface may only accept &lt;code&gt;DocTree&lt;/code&gt; nodes that have been created by the same implementation.</source>
          <target state="translated">此接口的实现中的方法只能接受由同一实现创建的 &lt;code&gt;DocTree&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="f07d1193469161b64e1d588a574c3d2c16bf0681" translate="yes" xml:space="preserve">
          <source>The methods in the &lt;code&gt;Joinable&lt;/code&gt; interface allow a &lt;code&gt;RowSet&lt;/code&gt; object to set a match column, retrieve a match column, or unset a match column, which is the column upon which an SQL &lt;code&gt;JOIN&lt;/code&gt; can be based. An instance of a class that implements these methods can be added to a &lt;code&gt;JoinRowSet&lt;/code&gt; object to allow an SQL &lt;code&gt;JOIN&lt;/code&gt; relationship to be established.</source>
          <target state="translated">&lt;code&gt;Joinable&lt;/code&gt; 接口中的方法允许 &lt;code&gt;RowSet&lt;/code&gt; 对象设置匹配列，检索匹配列或取消设置匹配列，这是SQL &lt;code&gt;JOIN&lt;/code&gt; 可以基于的列。可以将实现这些方法的类的实例添加到 &lt;code&gt;JoinRowSet&lt;/code&gt; 对象中，以允许建立SQL &lt;code&gt;JOIN&lt;/code&gt; 关系。</target>
        </trans-unit>
        <trans-unit id="4f2b4113e05c3868eafe1fc665c48c2e34550e14" translate="yes" xml:space="preserve">
          <source>The methods in this class all throw a &lt;code&gt;NullPointerException&lt;/code&gt;, if the specified array reference is null, except where noted.</source>
          <target state="translated">如果指定的数组引用为null，则除非另有说明，否则此类中的方法都抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f9b1c1ad7998b39c0048260abd8cc2313f1bb8c1" translate="yes" xml:space="preserve">
          <source>The methods in this class are used by the service provider to construct the bits to send to the LDAP server. Applications typically only deal with the classes that implement this interface, supplying them with any information required for a particular extended operation request. It would then pass such a class as an argument to the &lt;code&gt;LdapContext.extendedOperation()&lt;/code&gt; method for performing the LDAPv3 extended operation.</source>
          <target state="translated">服务提供者使用此类中的方法来构造要发送到LDAP服务器的位。应用程序通常只处理实现此接口的类，为它们提供特定扩展操作请求所需的任何信息。然后，它将把此类作为参数传递给 &lt;code&gt;LdapContext.extendedOperation()&lt;/code&gt; 方法，以执行LDAPv3扩展操作。</target>
        </trans-unit>
        <trans-unit id="bf8f7e029ac8a3874d50034ad3f38bf2b8cd6257" translate="yes" xml:space="preserve">
          <source>The methods in this class can be used by the application to get low level information about the extended operation response. However, typically, the application will be using methods specific to the class that implements this interface. Such a class should have decoded the BER buffer in the response and should provide methods that allow the user to access that data in the response in a type-safe and friendly manner.</source>
          <target state="translated">该类中的方法可以被应用程序用来获取关于扩展操作响应的低级信息。然而,通常情况下,应用程序将使用实现该接口的类所特有的方法。这样的类应该已经对响应中的误码缓冲区进行了解码,并且应该提供方法,允许用户以类型安全和友好的方式访问响应中的这些数据。</target>
        </trans-unit>
        <trans-unit id="e44b2a0e16d7c476c1e2b813535b71f1d47ccc33" translate="yes" xml:space="preserve">
          <source>The methods in this class may be invoked concurrently by multiple threads in a single JVM without the need for external synchronization, and the results will be equivalent to some serial execution. If this class is used concurrently</source>
          <target state="translated">该类中的方法可以在一个JVM中被多个线程并发调用,而不需要外部同步,其结果将相当于一些串行执行。如果并发使用这个类</target>
        </trans-unit>
        <trans-unit id="8c949cf9af8fb443cda22ad746c877480ab2743a" translate="yes" xml:space="preserve">
          <source>The methods in this interface are invoked internally when an application calls the method &lt;code&gt;RowSet.execute&lt;/code&gt;; an application programmer would not use them directly.</source>
          <target state="translated">当应用程序调用方法 &lt;code&gt;RowSet.execute&lt;/code&gt; 时，将在内部调用此接口中的方法。应用程序程序员不会直接使用它们。</target>
        </trans-unit>
        <trans-unit id="e9bea883b737df934e6a48c16c675c6e0826af4d" translate="yes" xml:space="preserve">
          <source>The methods in this interface can be used by an applet to obtain information about its environment.</source>
          <target state="translated">这个接口中的方法可以被小程序用来获取其环境的信息。</target>
        </trans-unit>
        <trans-unit id="256f0bfec8af2d80099c39667ba98e0fa83558c6" translate="yes" xml:space="preserve">
          <source>The methods in this interface support identification of objects by &lt;a href=&quot;http://www.ietf.org/rfc/rfc2254.txt&quot;&gt;RFC 2254&lt;/a&gt; search filters.</source>
          <target state="translated">此接口中的方法支持&lt;a href=&quot;http://www.ietf.org/rfc/rfc2254.txt&quot;&gt;RFC 2254&lt;/a&gt;搜索过滤器标识对象。</target>
        </trans-unit>
        <trans-unit id="296d9467efc7a5261cbfc84c5066d00f65578010" translate="yes" xml:space="preserve">
          <source>The methods in this interface support identification of objects by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2254.txt&quot;&gt;RFC 2254&lt;/a&gt; search filters.</source>
          <target state="translated">此接口中的方法支持通过&lt;a href=&quot;https://www.ietf.org/rfc/rfc2254.txt&quot;&gt;RFC 2254&lt;/a&gt;搜索过滤器识别对象。</target>
        </trans-unit>
        <trans-unit id="1f232e016bcfec5180a282093404d0a4a6882d22" translate="yes" xml:space="preserve">
          <source>The methods of all classes in &lt;code&gt;java.util.concurrent&lt;/code&gt; and its subpackages extend these guarantees to higher-level synchronization. In particular:</source>
          <target state="translated">&lt;code&gt;java.util.concurrent&lt;/code&gt; 中所有类的方法及其子包将这些保证扩展到更高级别的同步。特别是：</target>
        </trans-unit>
        <trans-unit id="43349f5d728c467be905a586d671bac922ccc74b" translate="yes" xml:space="preserve">
          <source>The methods of class &lt;code&gt;Class&lt;/code&gt; expose many characteristics of a class or interface. Most characteristics are derived from the &lt;code&gt;class&lt;/code&gt; file that the class loader passed to the Java Virtual Machine or from the &lt;code&gt;class&lt;/code&gt; file passed to &lt;code&gt;Lookup::defineClass&lt;/code&gt; or &lt;code&gt;Lookup::defineHiddenClass&lt;/code&gt;. A few characteristics are determined by the class loading environment at run time, such as the module returned by &lt;a href=&quot;#getModule()&quot;&gt;&lt;code&gt;getModule()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">类 &lt;code&gt;Class&lt;/code&gt; 的方法公开了类或接口的许多特征。最具特色的是从派生 &lt;code&gt;class&lt;/code&gt; 的文件传递给Java虚拟机或从类加载器 &lt;code&gt;class&lt;/code&gt; 文件传递给 &lt;code&gt;Lookup::defineClass&lt;/code&gt; 或 &lt;code&gt;Lookup::defineHiddenClass&lt;/code&gt; 。一些特性由运行时的类加载环境确定，例如&lt;a href=&quot;#getModule()&quot;&gt; &lt;code&gt;getModule()&lt;/code&gt; &lt;/a&gt;返回的模块。</target>
        </trans-unit>
        <trans-unit id="4fbf7ceda94e2ce9605129678bea18869076707d" translate="yes" xml:space="preserve">
          <source>The methods of class &lt;code&gt;Class&lt;/code&gt; expose many characteristics of a class or interface. Most characteristics are derived from the &lt;code&gt;class&lt;/code&gt; file that the class loader passed to the Java Virtual Machine. A few characteristics are determined by the class loading environment at run time, such as the module returned by &lt;a href=&quot;#getModule()&quot;&gt;&lt;code&gt;getModule()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">类 &lt;code&gt;Class&lt;/code&gt; 的方法公开了类或接口的许多特征。大多数特性都来自类加载器传递给Java虚拟机的 &lt;code&gt;class&lt;/code&gt; 文件。一些特性由运行时的类加载环境确定，例如&lt;a href=&quot;#getModule()&quot;&gt; &lt;code&gt;getModule()&lt;/code&gt; &lt;/a&gt;返回的模块。</target>
        </trans-unit>
        <trans-unit id="8c06c4b5c1c725337a3cff2da0da44820e6ab4d3" translate="yes" xml:space="preserve">
          <source>The methods of the &lt;code&gt;Graphics2D&lt;/code&gt; interface that use the outline &lt;code&gt;Shape&lt;/code&gt; returned by a &lt;code&gt;Stroke&lt;/code&gt; object include &lt;code&gt;draw&lt;/code&gt; and any other methods that are implemented in terms of that method, such as &lt;code&gt;drawLine&lt;/code&gt;, &lt;code&gt;drawRect&lt;/code&gt;, &lt;code&gt;drawRoundRect&lt;/code&gt;, &lt;code&gt;drawOval&lt;/code&gt;, &lt;code&gt;drawArc&lt;/code&gt;, &lt;code&gt;drawPolyline&lt;/code&gt;, and &lt;code&gt;drawPolygon&lt;/code&gt;.</source>
          <target state="translated">所述的方法 &lt;code&gt;Graphics2D&lt;/code&gt; 接口使用的轮廓 &lt;code&gt;Shape&lt;/code&gt; 由一个返回 &lt;code&gt;Stroke&lt;/code&gt; 对象包括 &lt;code&gt;draw&lt;/code&gt; 以及其他在该方法的条件，诸如所实现的任何其他方法 &lt;code&gt;drawLine&lt;/code&gt; ， &lt;code&gt;drawRect&lt;/code&gt; 中， &lt;code&gt;drawRoundRect&lt;/code&gt; ， &lt;code&gt;drawOval&lt;/code&gt; ， &lt;code&gt;drawArc&lt;/code&gt; ， &lt;code&gt;drawPolyline&lt;/code&gt; ，和 &lt;code&gt;drawPolygon&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba939efdaf2f5d46e723b15a2f6d210988c9dc6d" translate="yes" xml:space="preserve">
          <source>The methods of this class ( that accept a String header name ), and the &lt;code&gt;Map&lt;/code&gt; returned by the &lt;a href=&quot;#map()&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; method, operate without regard to case when retrieving the header value(s).</source>
          <target state="translated">此类的方法（接受String标头名称）以及&lt;a href=&quot;#map()&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt;方法返回的 &lt;code&gt;Map&lt;/code&gt; 的操作在检索标头值时均不考虑大小写。</target>
        </trans-unit>
        <trans-unit id="ac66d0aaaacddda7c8628c76f8814b7513844fdf" translate="yes" xml:space="preserve">
          <source>The methods of this class all throw a &lt;code&gt;NullPointerException&lt;/code&gt; if the collections or class objects provided to them are null.</source>
          <target state="translated">如果提供给它们的集合或类对象为null ，则此类的所有方法都将引发 &lt;code&gt;NullPointerException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b15b6e874e547e9e8ec5c26b9a529230eaf2be38" translate="yes" xml:space="preserve">
          <source>The methods previous() and next() are used for iteration. They return DONE if they would move outside the range from getBeginIndex() to getEndIndex() -1, signaling that the iterator has reached the end of the sequence. DONE is also returned by other methods to indicate that the current index is outside this range.</source>
          <target state="translated">方法 previous()和 next()用于迭代。如果它们会移动到从getBeginIndex()到getEndIndex()-1的范围之外,则返回DONE,表示迭代器已经到达序列的末端。DONE也会被其他方法返回,表示当前索引在这个范围之外。</target>
        </trans-unit>
        <trans-unit id="d8a896db782172f2505139879d73b1a7c70dffac" translate="yes" xml:space="preserve">
          <source>The methods related to observing mutations to the document are:</source>
          <target state="translated">与观察文件的突变有关的方法有:</target>
        </trans-unit>
        <trans-unit id="dcf7ce0d82f3dbedc197b205333a23ce9baeeeb9" translate="yes" xml:space="preserve">
          <source>The methods that accept an &lt;code&gt;int&lt;/code&gt; value support all Unicode characters, including supplementary characters. For example, &lt;code&gt;Character.isLetter(0x2F81A)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; because the code point value represents a letter (a CJK ideograph).</source>
          <target state="translated">接受 &lt;code&gt;int&lt;/code&gt; 值的方法支持所有Unicode字符，包括补充字符。例如， &lt;code&gt;Character.isLetter(0x2F81A)&lt;/code&gt; 返回 &lt;code&gt;true&lt;/code&gt; ,因为代码点值表示字母（CJK表意文字）。</target>
        </trans-unit>
        <trans-unit id="0e9f59343b1741d2ad18d4f64373c4897b94448c" translate="yes" xml:space="preserve">
          <source>The methods that create processes may not work well for special processes on certain native platforms, such as native windowing processes, daemon processes, Win16/DOS processes on Microsoft Windows, or shell scripts.</source>
          <target state="translated">对于某些原生平台上的特殊进程,如原生窗口进程、守护进程、微软Windows上的Win16/DOS进程或shell脚本等,创建进程的方法可能无法很好地发挥作用。</target>
        </trans-unit>
        <trans-unit id="b71e3777c8c977b532490037689faa12fb9e2e35" translate="yes" xml:space="preserve">
          <source>The methods that only accept a &lt;code&gt;char&lt;/code&gt; value cannot support supplementary characters. They treat &lt;code&gt;char&lt;/code&gt; values from the surrogate ranges as undefined characters. For example, &lt;code&gt;Character.isLetter('\uD840')&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, even though this specific value if followed by any low-surrogate value in a string would represent a letter.</source>
          <target state="translated">仅接受 &lt;code&gt;char&lt;/code&gt; 值的方法不能支持补充字符。他们将代理范围中的 &lt;code&gt;char&lt;/code&gt; 值视为未定义字符。例如， &lt;code&gt;Character.isLetter('\uD840')&lt;/code&gt; 返回 &lt;code&gt;false&lt;/code&gt; ，即使该特定值（如果在字符串中跟随任何低替代值表示字母）也是如此。</target>
        </trans-unit>
        <trans-unit id="cce05671072ffa768c3e060a4fed0ba60bfcf876" translate="yes" xml:space="preserve">
          <source>The micro-of-day.</source>
          <target state="translated">天的微。</target>
        </trans-unit>
        <trans-unit id="012bea3abbd9eec2b60f0cb944c493f58a31a682" translate="yes" xml:space="preserve">
          <source>The micro-of-second.</source>
          <target state="translated">秒的微。</target>
        </trans-unit>
        <trans-unit id="eb2247eaaba02959af49dbd11b3740337dcf42ce" translate="yes" xml:space="preserve">
          <source>The middle input tray in the printer.</source>
          <target state="translated">打印机中的中间输入盘。</target>
        </trans-unit>
        <trans-unit id="32c153e5d584c8cab991115e3522d22d789d047f" translate="yes" xml:space="preserve">
          <source>The milli-of-day.</source>
          <target state="translated">天的毫。</target>
        </trans-unit>
        <trans-unit id="3b415ac04f1b330955bf35e2afa52b9cb732bd02" translate="yes" xml:space="preserve">
          <source>The milli-of-second.</source>
          <target state="translated">的毫秒。</target>
        </trans-unit>
        <trans-unit id="2f6279f49fbee882c0c522be365eba539b886cf5" translate="yes" xml:space="preserve">
          <source>The millis property will be initialized to the current time.</source>
          <target state="translated">毫秒属性将被初始化为当前时间。</target>
        </trans-unit>
        <trans-unit id="7da091c278c4791ecff04eb76ed5827fe4694307" translate="yes" xml:space="preserve">
          <source>The millisecond precision of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 的毫秒精度。</target>
        </trans-unit>
        <trans-unit id="6777e9b07e5f7f3af56c4b55dd6d8aed2307bf58" translate="yes" xml:space="preserve">
          <source>The milliseconds to add to UTC to get local time.</source>
          <target state="translated">加到UTC的毫秒数,得到当地时间。</target>
        </trans-unit>
        <trans-unit id="c1888dd3fc2c61164d0f647a31d752f705f37737" translate="yes" xml:space="preserve">
          <source>The minimal number of days in the first week. For example, the ISO-8601 standard counts the first week as needing at least 4 days.</source>
          <target state="translated">第一周的最少天数。例如,ISO-8601标准规定第一周至少需要4天。</target>
        </trans-unit>
        <trans-unit id="b77330297991048617c8dd5d0f00a4b93db8dccb" translate="yes" xml:space="preserve">
          <source>The minimize button text property.</source>
          <target state="translated">最小化按钮文本属性。</target>
        </trans-unit>
        <trans-unit id="9802a60df3633c50edae56d461e6ac93844127b9" translate="yes" xml:space="preserve">
          <source>The minimize icon.</source>
          <target state="translated">最小化图标。</target>
        </trans-unit>
        <trans-unit id="a23319c3216e82c5bdfb981d32b492582aa4945e" translate="yes" xml:space="preserve">
          <source>The minimum and maximum number of integer digits are interpreted together:</source>
          <target state="translated">整数位数的最小和最大数一起解释。</target>
        </trans-unit>
        <trans-unit id="35a27b93dda62a013e257da00e049d12ea692fd9" translate="yes" xml:space="preserve">
          <source>The minimum and maximum set methods &quot;correct&quot; the other three properties to accommodate their new value argument. For example setting the model's minimum may change its maximum, value, and extent properties (in that order), to maintain the constraints specified above.</source>
          <target state="translated">最小和最大设置方法 &quot;修正 &quot;其他三个属性,以适应它们的新值参数。例如设置模型的最小值可能会改变它的最大值、值和范围属性(依次),以保持上面指定的约束。</target>
        </trans-unit>
        <trans-unit id="98f3f783b71e0a20dc1a4555bf0378c8c24abe0d" translate="yes" xml:space="preserve">
          <source>The minimum height of a grid layout is the largest minimum height of all of the components in the container times the number of rows, plus the vertical padding times the number of rows minus one, plus the top and bottom insets of the target container.</source>
          <target state="translated">网格布局的最小高度是容器中所有组件的最大最小高度乘以行数,加上垂直填充乘以行数减一,再加上目标容器的顶部和底部插页。</target>
        </trans-unit>
        <trans-unit id="e92f52da3040099a15ede70db9920c3577d612c6" translate="yes" xml:space="preserve">
          <source>The minimum index of a progressive pass to read from the source.</source>
          <target state="translated">从源头读取的渐进通道的最小指数。</target>
        </trans-unit>
        <trans-unit id="4e8a0a7939184991efd16774d48fcc9a4d9dfcd2" translate="yes" xml:space="preserve">
          <source>The minimum index of a progressive pass to read from the source. By default, the value is set to 0, which indicates that passes starting with the first available pass should be decoded.</source>
          <target state="translated">从源头读取的递进通道的最小索引。默认情况下,该值设置为0,表示从第一个可用通道开始的通道应该被解码。</target>
        </trans-unit>
        <trans-unit id="bd51c61096347bad094857c5e008f796178fd8ef" translate="yes" xml:space="preserve">
          <source>The minimum normalized component value.</source>
          <target state="translated">最小归一化分量值。</target>
        </trans-unit>
        <trans-unit id="b08e3d0656c9b7803ad29c8b58ae2ace6e4bd253" translate="yes" xml:space="preserve">
          <source>The minimum priority that a thread can have.</source>
          <target state="translated">一个线程可以拥有的最低优先级。</target>
        </trans-unit>
        <trans-unit id="cbb5d37dc4d790a9dba2a103cd7fc2ea1af9db2f" translate="yes" xml:space="preserve">
          <source>The minimum radix available for conversion to and from strings.</source>
          <target state="translated">可用于转换为字符串和从字符串转换的最小半径。</target>
        </trans-unit>
        <trans-unit id="3077331e7366d18fa715ceb7d901dde04546de29" translate="yes" xml:space="preserve">
          <source>The minimum radix available for conversion to and from strings. The constant value of this field is the smallest value permitted for the radix argument in radix-conversion methods such as the &lt;code&gt;digit&lt;/code&gt; method, the &lt;code&gt;forDigit&lt;/code&gt; method, and the &lt;code&gt;toString&lt;/code&gt; method of class &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">可用于在字符串之间转换的最小基数。该字段的常数是基数转换方法（例如， &lt;code&gt;Integer&lt;/code&gt; 类的 &lt;code&gt;digit&lt;/code&gt; 方法， &lt;code&gt;forDigit&lt;/code&gt; 方法和 &lt;code&gt;toString&lt;/code&gt; 方法）中的基数参数允许的最小值。</target>
        </trans-unit>
        <trans-unit id="e50f636aa7c810c30c501b99665a939e31839e52" translate="yes" xml:space="preserve">
          <source>The minimum set of methods for layout are:</source>
          <target state="translated">布局的最小套路是:</target>
        </trans-unit>
        <trans-unit id="205371b94b244af14f6cabf4a44e3cfe8c73e76b" translate="yes" xml:space="preserve">
          <source>The minimum size is the size of the display area plus insets plus the button.</source>
          <target state="translated">最小尺寸为显示区域加插页加按钮的尺寸。</target>
        </trans-unit>
        <trans-unit id="3690b25e2f39160f0f56e905bf68cd8b7e64d3b0" translate="yes" xml:space="preserve">
          <source>The minimum size of a &lt;code&gt;ScrollPane&lt;/code&gt; is the size of the insets plus minimum size of the viewport, plus the scrollpane's viewportBorder insets, plus the minimum size of the visible headers, plus the minimum size of the scrollbars whose displayPolicy isn't NEVER.</source>
          <target state="translated">&lt;code&gt;ScrollPane&lt;/code&gt; 的最小大小是inset的大小加上视口的最小大小，再加上滚动窗格的viewportBorder inset，再加上可见标头的最小大小，再加上displayPolicy从未为之的滚动条的最小大小。</target>
        </trans-unit>
        <trans-unit id="57a603d748c9a77c02bf11aba17ef85929085643" translate="yes" xml:space="preserve">
          <source>The minimum size required.</source>
          <target state="translated">所需的最小尺寸。</target>
        </trans-unit>
        <trans-unit id="e2c15b19cbed67ea24b210fb8b543082e37a8941" translate="yes" xml:space="preserve">
          <source>The minimum size required. For a component &lt;code&gt;comp&lt;/code&gt;, this should be equal to either &lt;code&gt;comp.getMinimumSize().width&lt;/code&gt; or &lt;code&gt;comp.getMinimumSize().height&lt;/code&gt;.</source>
          <target state="translated">所需的最小大小。对于组件 &lt;code&gt;comp&lt;/code&gt; ，它应该等于 &lt;code&gt;comp.getMinimumSize().width&lt;/code&gt; 或 &lt;code&gt;comp.getMinimumSize().height&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30de3afa3a18bc7fdf3d3a0b78834fa743a12f3e" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;Instant&lt;/code&gt;, '-1000000000-01-01T00:00Z'.</source>
          <target state="translated">支持的最低 &lt;code&gt;Instant&lt;/code&gt; ，即&amp;ldquo; -1000000000-01-01T00：00Z&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1079249c31ebba26f6b94e4287d0c29dd8ca364c" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;Instant&lt;/code&gt;, '-1000000000-01-01T00:00Z'. This could be used by an application as a &quot;far past&quot; instant.</source>
          <target state="translated">支持的最低 &lt;code&gt;Instant&lt;/code&gt; ，即&amp;ldquo; -1000000000-01-01T00：00Z&amp;rdquo;。应用程序可以将其用作&amp;ldquo;远远过去&amp;rdquo;的瞬间。</target>
        </trans-unit>
        <trans-unit id="76cfe8db5ea1a8d25819f30c0b8f625bd66ea211" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalDate&lt;/code&gt;, '-999999999-01-01'.</source>
          <target state="translated">支持的最小 &lt;code&gt;LocalDate&lt;/code&gt; ' -999999999-01-01'。</target>
        </trans-unit>
        <trans-unit id="5f720ed7cf76100435b3548f72b4aa7a8f78154b" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalDate&lt;/code&gt;, '-999999999-01-01'. This could be used by an application as a &quot;far past&quot; date.</source>
          <target state="translated">支持的最小 &lt;code&gt;LocalDate&lt;/code&gt; ' -999999999-01-01'。应用程序可以将其用作&amp;ldquo;过期&amp;rdquo;日期。</target>
        </trans-unit>
        <trans-unit id="e5a840bd5defdc3c55712bb650b591d7989521bf" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalDateTime&lt;/code&gt;, '-999999999-01-01T00:00:00'.</source>
          <target state="translated">支持的最小 &lt;code&gt;LocalDateTime&lt;/code&gt; ' -999999999-01-01T00：00：00'。</target>
        </trans-unit>
        <trans-unit id="edda553e59b5b183f028875cb568ae44225c29be" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalDateTime&lt;/code&gt;, '-999999999-01-01T00:00:00'. This is the local date-time of midnight at the start of the minimum date. This combines &lt;a href=&quot;localdate#MIN&quot;&gt;&lt;code&gt;LocalDate.MIN&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;localtime#MIN&quot;&gt;&lt;code&gt;LocalTime.MIN&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far past&quot; date-time.</source>
          <target state="translated">支持的最小 &lt;code&gt;LocalDateTime&lt;/code&gt; ，'-999999999-01-01T00：00：00'。这是最小日期开始时午夜的本地日期时间。这结合了&lt;a href=&quot;localdate#MIN&quot;&gt; &lt;code&gt;LocalDate.MIN&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;localtime#MIN&quot;&gt; &lt;code&gt;LocalTime.MIN&lt;/code&gt; &lt;/a&gt;。应用程序可以将其用作&amp;ldquo;远远&amp;rdquo;的日期时间。</target>
        </trans-unit>
        <trans-unit id="3d7781416650441b8c40b7cf42692976437f71d2" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalTime&lt;/code&gt;, '00:00'.</source>
          <target state="translated">支持的最小 &lt;code&gt;LocalTime&lt;/code&gt; '00：00'。</target>
        </trans-unit>
        <trans-unit id="6de8290bca9f960ba54ce582e866ef778c1c4612" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;LocalTime&lt;/code&gt;, '00:00'. This is the time of midnight at the start of the day.</source>
          <target state="translated">支持的最小 &lt;code&gt;LocalTime&lt;/code&gt; '00：00'。这是一天开始的午夜时间。</target>
        </trans-unit>
        <trans-unit id="9da8564e7571682085369a996e22e81a2e598909" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;OffsetDateTime&lt;/code&gt;, '-999999999-01-01T00:00:00+18:00'.</source>
          <target state="translated">支持的最小 &lt;code&gt;OffsetDateTime&lt;/code&gt; ，'- 999999999-01-01T00：00：00 + 18：00'。</target>
        </trans-unit>
        <trans-unit id="b3ce16d870d460569b094ad8fc0c1bff37370482" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;OffsetDateTime&lt;/code&gt;, '-999999999-01-01T00:00:00+18:00'. This is the local date-time of midnight at the start of the minimum date in the maximum offset (larger offsets are earlier on the time-line). This combines &lt;a href=&quot;localdatetime#MIN&quot;&gt;&lt;code&gt;LocalDateTime.MIN&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset#MAX&quot;&gt;&lt;code&gt;ZoneOffset.MAX&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far past&quot; date-time.</source>
          <target state="translated">支持的最低 &lt;code&gt;OffsetDateTime&lt;/code&gt; '-999999999-01-01T00：00：00 + 18：00'。这是最大偏移量中最小日期开始处午夜的本地日期时间（较大的偏移量在时间轴上较早）。这结合了&lt;a href=&quot;localdatetime#MIN&quot;&gt; &lt;code&gt;LocalDateTime.MIN&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;zoneoffset#MAX&quot;&gt; &lt;code&gt;ZoneOffset.MAX&lt;/code&gt; &lt;/a&gt;。应用程序可以将其用作&amp;ldquo;远远&amp;rdquo;的日期时间。</target>
        </trans-unit>
        <trans-unit id="9d5458561eebbfe1a9323f79b1d38494586759f5" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;OffsetTime&lt;/code&gt;, '00:00:00+18:00'.</source>
          <target state="translated">支持的最小 &lt;code&gt;OffsetTime&lt;/code&gt; 为'00：00：00 + 18：00'。</target>
        </trans-unit>
        <trans-unit id="ffec1f8e75141092e1bede08d9de5db86a65aee4" translate="yes" xml:space="preserve">
          <source>The minimum supported &lt;code&gt;OffsetTime&lt;/code&gt;, '00:00:00+18:00'. This is the time of midnight at the start of the day in the maximum offset (larger offsets are earlier on the time-line). This combines &lt;a href=&quot;localtime#MIN&quot;&gt;&lt;code&gt;LocalTime.MIN&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;zoneoffset#MAX&quot;&gt;&lt;code&gt;ZoneOffset.MAX&lt;/code&gt;&lt;/a&gt;. This could be used by an application as a &quot;far past&quot; date.</source>
          <target state="translated">支持的最小 &lt;code&gt;OffsetTime&lt;/code&gt; 为 '00：00：00 + 18：00'。这是最大偏移量在一天开始时的午夜时间（较大的偏移量在时间轴上较早）。这种结合&lt;a href=&quot;localtime#MIN&quot;&gt; &lt;code&gt;LocalTime.MIN&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;zoneoffset#MAX&quot;&gt; &lt;code&gt;ZoneOffset.MAX&lt;/code&gt; &lt;/a&gt;。应用程序可以将其用作&amp;ldquo;过期&amp;rdquo;日期。</target>
        </trans-unit>
        <trans-unit id="3ceea9174f0075d07f9e4c2621111a5f2e242d4a" translate="yes" xml:space="preserve">
          <source>The minimum supported year, '-999,999,999'.</source>
          <target state="translated">最低支持的年份,'-999,999'。</target>
        </trans-unit>
        <trans-unit id="04b4fe66babc8e1e2a91d1f915c13f553008f5e4" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt; Unicode code point&lt;/a&gt;, constant &lt;code&gt;U+0000&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.unicode.org/glossary/#code_point&quot;&gt;Unicode代码点&lt;/a&gt;的最小值，常数 &lt;code&gt;U+0000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c02d9afb81fad41f1b558fbf31a98f1c4c9ce720" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt; Unicode high-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uD800'&lt;/code&gt;.</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt;Unicode高代理代码单元&lt;/a&gt;的最小值，常量 &lt;code&gt;'\uD800'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7cb8698589d666395f680bde3fffc23eb4f65729" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt; Unicode high-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uD800'&lt;/code&gt;. A high-surrogate is also known as a</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;http://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt;Unicode高代理代码单元&lt;/a&gt;的最小值，常量 &lt;code&gt;'\uD800'&lt;/code&gt; 。高代理也被称为</target>
        </trans-unit>
        <trans-unit id="2d6cf70e24b8b0b8e2bc020ec9be76f98b9683d8" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt; Unicode low-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDC00'&lt;/code&gt;.</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt;Unicode低代理代码单元&lt;/a&gt;的最小值，常量 &lt;code&gt;'\uDC00'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9341aef5dc8c567df1ec3d8097f6edae0ce1571d" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt; Unicode low-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDC00'&lt;/code&gt;. A low-surrogate is also known as a</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;http://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt;Unicode低代理代码单元&lt;/a&gt;的最小值，常量 &lt;code&gt;'\uDC00'&lt;/code&gt; 。低代理人​​也称为</target>
        </trans-unit>
        <trans-unit id="b8ea878708f2a3189c4f60757a5b8113d3717cbd" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;http://www.unicode.org/glossary/#supplementary_code_point&quot;&gt; Unicode supplementary code point&lt;/a&gt;, constant &lt;code&gt;U+10000&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.unicode.org/glossary/#supplementary_code_point&quot;&gt;Unicode补充代码点&lt;/a&gt;的最小值，常数 &lt;code&gt;U+10000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e926cbbe64c62d106272c2b7ca43a189702f6c32" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;https://www.unicode.org/glossary/#code_point&quot;&gt; Unicode code point&lt;/a&gt;, constant &lt;code&gt;U+0000&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.unicode.org/glossary/#code_point&quot;&gt;Unicode代码点&lt;/a&gt;的最小值，常数 &lt;code&gt;U+0000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="faa4ac91c4459179683baf22adb4b31650bfe550" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;https://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt; Unicode high-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uD800'&lt;/code&gt;.</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;https://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt;Unicode高代理代码单元&lt;/a&gt;的最小值，常量 &lt;code&gt;'\uD800'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57dc386afdd8d6614a256ab3cbbedcf695b61f1f" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;https://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt; Unicode high-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uD800'&lt;/code&gt;. A high-surrogate is also known as a</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;https://www.unicode.org/glossary/#high_surrogate_code_unit&quot;&gt;Unicode高代理代码单元&lt;/a&gt;的最小值，常量 &lt;code&gt;'\uD800'&lt;/code&gt; 。高代理也被称为</target>
        </trans-unit>
        <trans-unit id="2e950fa9b761488294271924176dae3b26addaa4" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;https://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt; Unicode low-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDC00'&lt;/code&gt;.</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;https://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt;Unicode低代理代码单元&lt;/a&gt;的最小值，常量 &lt;code&gt;'\uDC00'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07fdfe3a8af50a24bf8c5c1fd38b79373f07e4d9" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;https://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt; Unicode low-surrogate code unit&lt;/a&gt; in the UTF-16 encoding, constant &lt;code&gt;'\uDC00'&lt;/code&gt;. A low-surrogate is also known as a</source>
          <target state="translated">UTF-16编码中的&lt;a href=&quot;https://www.unicode.org/glossary/#low_surrogate_code_unit&quot;&gt;Unicode低代理代码单元&lt;/a&gt;的最小值，常量 &lt;code&gt;'\uDC00'&lt;/code&gt; 。低代理也称为</target>
        </trans-unit>
        <trans-unit id="7552b5dd74a599165c972dac02dde4630ada40cc" translate="yes" xml:space="preserve">
          <source>The minimum value of a &lt;a href=&quot;https://www.unicode.org/glossary/#supplementary_code_point&quot;&gt; Unicode supplementary code point&lt;/a&gt;, constant &lt;code&gt;U+10000&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.unicode.org/glossary/#supplementary_code_point&quot;&gt;Unicode补充代码点&lt;/a&gt;的最小值，常数 &lt;code&gt;U+10000&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1bbc35eee66637501d6257be2b6fdd1c93811164" translate="yes" xml:space="preserve">
          <source>The minimum value of a Unicode surrogate code unit in the UTF-16 encoding, constant &lt;code&gt;'\uD800'&lt;/code&gt;.</source>
          <target state="translated">UTF-16编码中的Unicode代理代码单元的最小值，常量 &lt;code&gt;'\uD800'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fbe997ada48eff766f7cf7e14e58cec23e70059" translate="yes" xml:space="preserve">
          <source>The minimum value of this object.</source>
          <target state="translated">此对象的最小值。</target>
        </trans-unit>
        <trans-unit id="95f09a7d9f34d60654550e620dc2ba2c912bf17e" translate="yes" xml:space="preserve">
          <source>The minimum width of a grid layout is the largest minimum width of all of the components in the container times the number of columns, plus the horizontal padding times the number of columns minus one, plus the left and right insets of the target container.</source>
          <target state="translated">网格布局的最小宽度是容器中所有组件的最大最小宽度乘以列数,加上水平填充乘以列数减一,再加上目标容器的左、右镶边。</target>
        </trans-unit>
        <trans-unit id="49fc53a3cdb40d046e3fb5b2728e5af5816b14a9" translate="yes" xml:space="preserve">
          <source>The minimum width of a pane.</source>
          <target state="translated">窗格的最小宽度。</target>
        </trans-unit>
        <trans-unit id="f827476283eaf54acaaba5a3b5e6f2d519b9e79c" translate="yes" xml:space="preserve">
          <source>The minimum width of the column.</source>
          <target state="translated">列的最小宽度。</target>
        </trans-unit>
        <trans-unit id="378c9bb2706a28db8c6368858d19c8a9e15f59df" translate="yes" xml:space="preserve">
          <source>The mininum height of &lt;code&gt;JOptionPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; 的最小高度。</target>
        </trans-unit>
        <trans-unit id="a2d014de681dac8e9fa71ad11906b8b9b7ea7a1f" translate="yes" xml:space="preserve">
          <source>The mininum width of &lt;code&gt;JOptionPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JOptionPane&lt;/code&gt; 的最小宽度。</target>
        </trans-unit>
        <trans-unit id="b71bf0a754c300b6fe868e1fa102af6d640d333b" translate="yes" xml:space="preserve">
          <source>The minor version of the profile.</source>
          <target state="translated">资料的小版本。</target>
        </trans-unit>
        <trans-unit id="b66d25a3bcecafeb8650a51f2ee9c9377ad08d80" translate="yes" xml:space="preserve">
          <source>The minute of hour of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;, from 0 to 59.</source>
          <target state="translated">此 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 的小时分钟，从0到59。</target>
        </trans-unit>
        <trans-unit id="667a30120007f381c89db949ed47ebe336fec88a" translate="yes" xml:space="preserve">
          <source>The minute-of-day.</source>
          <target state="translated">当天的分钟。</target>
        </trans-unit>
        <trans-unit id="bdf3bd78cbbce8ca5c3b8eb81726aefb24544a82" translate="yes" xml:space="preserve">
          <source>The minute-of-hour.</source>
          <target state="translated">小时的分钟。</target>
        </trans-unit>
        <trans-unit id="f1d189b35d246e7c047f6472422d44013d4dce72" translate="yes" xml:space="preserve">
          <source>The mirror for a type in the target VM.</source>
          <target state="translated">目标虚拟机中类型的镜像。</target>
        </trans-unit>
        <trans-unit id="ae31e21e238c93f98e856c4c163385b9ad10e387" translate="yes" xml:space="preserve">
          <source>The mirror for a type in the target VM. This interface is the root of a type hierarchy encompassing primitive types and reference types.</source>
          <target state="translated">目标 VM 中类型的镜像。此接口是包含基元类型和引用类型的类型层次结构的根。</target>
        </trans-unit>
        <trans-unit id="ae8793069a72742b82c721802e621b8679b0b8aa" translate="yes" xml:space="preserve">
          <source>The mirror for a value in the target VM.</source>
          <target state="translated">目标虚拟机中一个值的镜像。</target>
        </trans-unit>
        <trans-unit id="cbad74b72ed9943373d11041163dd19a3f42b0b3" translate="yes" xml:space="preserve">
          <source>The mirror for a value in the target VM. This interface is the root of a value hierarchy encompassing primitive values and object values.</source>
          <target state="translated">目标 VM 中的值的镜像。此接口是包含基元值和对象值的值层次结构的根。</target>
        </trans-unit>
        <trans-unit id="d1e01e9578c34a1b819c6910e06d54349322daab" translate="yes" xml:space="preserve">
          <source>The mnemonic keycode used for the approve button when a directory is selected and the current selection mode is FILES_ONLY.</source>
          <target state="translated">当选择目录且当前选择模式为FILES_ONLY时,用于批准按钮的记号键码。</target>
        </trans-unit>
        <trans-unit id="6f280eaac6e54be7e34e3642f6ff855dccab09c2" translate="yes" xml:space="preserve">
          <source>The mode argument determines how the progression parameters are chosen, and must be either &lt;code&gt;MODE_DISABLED&lt;/code&gt;, &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt;, or &lt;code&gt;MODE_DEFAULT&lt;/code&gt;. Otherwise an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">mode参数确定如何选择进度参数，并且必须为 &lt;code&gt;MODE_DISABLED&lt;/code&gt; ， &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; 或 &lt;code&gt;MODE_DEFAULT&lt;/code&gt; 。否则，将 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b820834a96857a5b241fe95cf3e9cca22165efa9" translate="yes" xml:space="preserve">
          <source>The mode controlling compression settings, which must be set to one of the four &lt;code&gt;MODE_*&lt;/code&gt; values.</source>
          <target state="translated">模式控制压缩设置，必须将其设置为四个 &lt;code&gt;MODE_*&lt;/code&gt; 值之一。</target>
        </trans-unit>
        <trans-unit id="7f15fced94f4787a730192e708c8082a30aebb9f" translate="yes" xml:space="preserve">
          <source>The mode controlling compression settings, which must be set to one of the four &lt;code&gt;MODE_*&lt;/code&gt; values. The default is &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt;.</source>
          <target state="translated">模式控制压缩设置，必须将其设置为四个 &lt;code&gt;MODE_*&lt;/code&gt; 值之一。默认值为 &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a8ab8dfa11b67a073fb291acb9e8e1dda7b1630" translate="yes" xml:space="preserve">
          <source>The mode controlling progressive encoding, which must be set to one of the four &lt;code&gt;MODE_*&lt;/code&gt; values, except &lt;code&gt;MODE_EXPLICIT&lt;/code&gt;.</source>
          <target state="translated">控制渐进编码的模式，必须将其设置为四个 &lt;code&gt;MODE_*&lt;/code&gt; 值之一， &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; 除外。</target>
        </trans-unit>
        <trans-unit id="3de7dfb6d10df1074cd5714724b32c3da19cb20a" translate="yes" xml:space="preserve">
          <source>The mode controlling progressive encoding, which must be set to one of the four &lt;code&gt;MODE_*&lt;/code&gt; values, except &lt;code&gt;MODE_EXPLICIT&lt;/code&gt;. The default is &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt;.</source>
          <target state="translated">控制渐进编码的模式，必须将其设置为四个 &lt;code&gt;MODE_*&lt;/code&gt; 值之一， &lt;code&gt;MODE_EXPLICIT&lt;/code&gt; 除外。默认值为 &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0b4bf954229dabff064f394cda1a8fd6dbc2ddb7" translate="yes" xml:space="preserve">
          <source>The mode controlling tiling settings, which Must be set to one of the four &lt;code&gt;MODE_*&lt;/code&gt; values.</source>
          <target state="translated">模式控制平铺设置，必须将其设置为四个 &lt;code&gt;MODE_*&lt;/code&gt; 值之一。</target>
        </trans-unit>
        <trans-unit id="f25060df8ca2f2296a1ced1bd3e2a4bdeb249eca" translate="yes" xml:space="preserve">
          <source>The mode controlling tiling settings, which Must be set to one of the four &lt;code&gt;MODE_*&lt;/code&gt; values. The default is &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt;.</source>
          <target state="translated">模式控制平铺设置，必须将其设置为四个 &lt;code&gt;MODE_*&lt;/code&gt; 值之一。默认值为 &lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0539cba70c1c9cdcb4a862061eadbc32b891f327" translate="yes" xml:space="preserve">
          <source>The mode specifying the level of detail of module documentation.</source>
          <target state="translated">指定模块文档详细程度的模式。</target>
        </trans-unit>
        <trans-unit id="6fe32b2240e57a17879128135f9a453935908963" translate="yes" xml:space="preserve">
          <source>The model change type returned by getType() will be one of:</source>
          <target state="translated">getType()返回的模型变更类型将是以下类型之一:</target>
        </trans-unit>
        <trans-unit id="2616079c079dc951763eebae3bec223e413339d2" translate="yes" xml:space="preserve">
          <source>The model doesn't support indexed random access to sequence elements. Only three sequence values are accessible at a time: current, next and previous.</source>
          <target state="translated">该模型不支持对序列元素的索引随机访问。每次只能访问三个序列值:当前、下一个和上一个。</target>
        </trans-unit>
        <trans-unit id="168faef5c82b48acd963b7c9af4201a890453b16" translate="yes" xml:space="preserve">
          <source>The model is defined by the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface. This is intended to provide a flexible text storage mechanism that tracks change during edits and can be extended to more sophisticated models. The model interfaces are meant to capture the capabilities of expression given by SGML, a system used to express a wide variety of content. Each modification to the document causes notification of the details of the change to be sent to all observers in the form of a &lt;a href=&quot;../event/documentevent&quot;&gt;&lt;code&gt;DocumentEvent&lt;/code&gt;&lt;/a&gt; which allows the views to stay up to date with the model. This event is sent to observers that have implemented the &lt;a href=&quot;../event/documentlistener&quot;&gt;&lt;code&gt;DocumentListener&lt;/code&gt;&lt;/a&gt; interface and registered interest with the model being observed.</source>
          <target state="translated">该模型由&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;界面定义。这旨在提供一种灵活的文本存储机制，该机制可以跟踪编辑期间的更改，并且可以扩展到更复杂的模型。模型接口旨在捕获SGML（一种用于表达各种内容的系统）所提供的表达能力。对文档的每次修改都会以&lt;a href=&quot;../event/documentevent&quot;&gt; &lt;code&gt;DocumentEvent&lt;/code&gt; &lt;/a&gt;的形式将更改细节的通知发送给所有观察者，该事件允许视图与模型保持最新。该事件发送给已实现&lt;a href=&quot;../event/documentlistener&quot;&gt; &lt;code&gt;DocumentListener&lt;/code&gt; &lt;/a&gt;接口并已对正在观察的模型进行关注的观察员。</target>
        </trans-unit>
        <trans-unit id="8330843d459736e066acd92b3f008756fa5c7567" translate="yes" xml:space="preserve">
          <source>The model that defines the tree displayed by this object.</source>
          <target state="translated">定义此对象所显示的树的模型。</target>
        </trans-unit>
        <trans-unit id="5570617ef85dae7ecc2d0d0bb54d74a489ee7647" translate="yes" xml:space="preserve">
          <source>The model that represents the scrollbar's minimum, maximum, extent (aka &quot;visibleAmount&quot;) and current value.</source>
          <target state="translated">表示滚动条的最小、最大、范围(也就是 &quot;visibleAmount&quot;)和当前值的模型。</target>
        </trans-unit>
        <trans-unit id="75a1b07f9515385c3a661861496a6b145b77de8a" translate="yes" xml:space="preserve">
          <source>The model used by &lt;code&gt;JTree&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTree&lt;/code&gt; 使用的模型。</target>
        </trans-unit>
        <trans-unit id="3aa2540304cd41e4a19279ee3b3fa91e13a6535a" translate="yes" xml:space="preserve">
          <source>The modeling of HTML is provided by the class &lt;code&gt;HTMLDocument&lt;/code&gt;. Its documentation describes the details of how the HTML is modeled. The editing support leverages heavily off of the text package.</source>
          <target state="translated">HTML的建模由类 &lt;code&gt;HTMLDocument&lt;/code&gt; 提供。其文档描述了HTML建模方式的详细信息。编辑支持充分利用了文本包的功能。</target>
        </trans-unit>
        <trans-unit id="244c6099e5c9d507a776de051659ea7a5f6ced2a" translate="yes" xml:space="preserve">
          <source>The modern UTC time-scale was introduced in 1972, introducing the concept of whole leap-seconds. Between 1958 and 1972, the definition of UTC was complex, with minor sub-second leaps and alterations to the length of the notional second. As of 2012, discussions are underway to change the definition of UTC again, with the potential to remove leap seconds or introduce other changes.</source>
          <target state="translated">现代世界协调时时标是在1972年推出的,引入了整闰秒的概念。在1958年至1972年期间,世界协调时的定义很复杂,有轻微的亚秒级跃迁和对名义上的秒的长度的改变。截至2012年,正在讨论再次修改世界协调时的定义,有可能删除闰秒或进行其他修改。</target>
        </trans-unit>
        <trans-unit id="c9c8d93b57522e87b93d7fcd2ed2c2ba506c62e6" translate="yes" xml:space="preserve">
          <source>The modes are interpreted as follows:</source>
          <target state="translated">这些模式的解释如下:</target>
        </trans-unit>
        <trans-unit id="3cd9eb9b1298371443e0745698a19893708a9dc0" translate="yes" xml:space="preserve">
          <source>The modes are:</source>
          <target state="translated">这些模式是:</target>
        </trans-unit>
        <trans-unit id="3cc6805c08b8481a43ee22b87218eba5bf5978e2" translate="yes" xml:space="preserve">
          <source>The modification code. It is one of: DirContext.ADD_ATTRIBUTE DirContext.REPLACE_ATTRIBUTE DirContext.REMOVE_ATTRIBUTE</source>
          <target state="translated">修改代码。它是其中之一。DirContext.ADD_ATTRIBUTE DirContext.REPLACE_ATTRIBUTE DirContext.REMOVE_ATTRIBUTE</target>
        </trans-unit>
        <trans-unit id="3b8710293df9488348bad7d24782355247e162f4" translate="yes" xml:space="preserve">
          <source>The modification time and deflation hint attributes are not available, for the JAR manifest file and its containing directory.</source>
          <target state="translated">修改时间和放气提示属性不可用,对于JAR清单文件及其包含的目录。</target>
        </trans-unit>
        <trans-unit id="ae5392e591961cef35e6113a0d61745bb18d5cf2" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;abstract&lt;/code&gt;</source>
          <target state="translated">修饰符 &lt;code&gt;abstract&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="63ec4993c4772cec3247257c7af88444f99bd5d4" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;default&lt;/code&gt;</source>
          <target state="translated">修改器 &lt;code&gt;default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b79ffc26fe09a60c57670ba9443868f3e378227" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;final&lt;/code&gt;</source>
          <target state="translated">修饰语 &lt;code&gt;final&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4caecde01acdabdee3af4deddef05c9345eee88d" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;native&lt;/code&gt;</source>
          <target state="translated">修改器 &lt;code&gt;native&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12c8f5e7da855ef8de3892013c1a60aa6b53d514" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;non-sealed&lt;/code&gt;</source>
          <target state="translated">改性剂 &lt;code&gt;non-sealed&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d84914d32c0b59de560ef406f5fd476bb609a72" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;private&lt;/code&gt;</source>
          <target state="translated">修改器 &lt;code&gt;private&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca2a774915ce47a0621b004260cfcdf34bae0b19" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;protected&lt;/code&gt;</source>
          <target state="translated">修饰符 &lt;code&gt;protected&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d5d79646fb8f27e87d578f47719e85be208200f" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;public&lt;/code&gt;</source>
          <target state="translated">修饰语 &lt;code&gt;public&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95432ecf9bb75e301f3b7c042a107066741dbe1a" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;sealed&lt;/code&gt;</source>
          <target state="translated">改性剂 &lt;code&gt;sealed&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca0e06d76cb207037ed375002dc516a6bbcfd082" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;static&lt;/code&gt;</source>
          <target state="translated">修饰符 &lt;code&gt;static&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="843644ccb0d5da6c49b878e18a5c3bf04e5a41bd" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;strictfp&lt;/code&gt;</source>
          <target state="translated">修饰符 &lt;code&gt;strictfp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e064fce2e476a78dbc9a1b50a393aead551b075c" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;synchronized&lt;/code&gt;</source>
          <target state="translated">修改器已 &lt;code&gt;synchronized&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f0463dc16506480712ec2a64c8d394dc5a179d0" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;transient&lt;/code&gt;</source>
          <target state="translated">修改器 &lt;code&gt;transient&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8adc7b2e81a65197a52783e56e73bede59c438b8" translate="yes" xml:space="preserve">
          <source>The modifier &lt;code&gt;volatile&lt;/code&gt;</source>
          <target state="translated">改性剂 &lt;code&gt;volatile&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91a4f7af68a90ed955a6d478ede71ae9a892a9db" translate="yes" xml:space="preserve">
          <source>The modifier encodings are defined in</source>
          <target state="translated">修改器编码的定义在</target>
        </trans-unit>
        <trans-unit id="53c43243f455d925c46f284aad81cc7fec157428" translate="yes" xml:space="preserve">
          <source>The modifier encodings are defined in &lt;em&gt;The Java Virtual Machine Specification&lt;/em&gt;, table 4.1.</source>
          <target state="translated">修饰符编码在&lt;em&gt;《 Java虚拟机规范&lt;/em&gt;》表4.1中定义。</target>
        </trans-unit>
        <trans-unit id="7bcadef03c059150a239257f11fa3e5c8f597c42" translate="yes" xml:space="preserve">
          <source>The modifier encodings are defined in section &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.1&quot;&gt;4.1&lt;/a&gt; of</source>
          <target state="translated">改性剂编码在节中定义的&lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.1&quot;&gt;4.1&lt;/a&gt;的</target>
        </trans-unit>
        <trans-unit id="ea943ef7605756df7d4c1d9a2ba6aa05951d0cb1" translate="yes" xml:space="preserve">
          <source>The modifier flags for this parameter.</source>
          <target state="translated">该参数的修饰标志。</target>
        </trans-unit>
        <trans-unit id="d9015ba8f3732b054992024e20f5e48c6d7fa0d5" translate="yes" xml:space="preserve">
          <source>The modifier names are returned in an order consistent with the suggested modifier orderings given in sections 8.1.1, 8.3.1, 8.4.3, 8.8.3, and 9.1.1 of</source>
          <target state="translated">修饰语名称的返回顺序与第8.1.1、8.3.1、8.4.3、8.8.3和9.1.1节中建议的修饰语顺序一致。</target>
        </trans-unit>
        <trans-unit id="c051f323123e2496ae8ef9f68dd6f61e20d85875" translate="yes" xml:space="preserve">
          <source>The modifiers are placed in canonical order as specified by &quot;The Java Language Specification&quot;. This is &lt;code&gt;public&lt;/code&gt;, &lt;code&gt;protected&lt;/code&gt; or &lt;code&gt;private&lt;/code&gt; first, and then other modifiers in the following order: &lt;code&gt;static&lt;/code&gt;, &lt;code&gt;final&lt;/code&gt;, &lt;code&gt;transient&lt;/code&gt;, &lt;code&gt;volatile&lt;/code&gt;.</source>
          <target state="translated">修饰符按照&amp;ldquo; Java语言规范&amp;rdquo;中指定的规范顺序放置。首先是 &lt;code&gt;public&lt;/code&gt; ， &lt;code&gt;protected&lt;/code&gt; 或 &lt;code&gt;private&lt;/code&gt; ，然后是其他修饰符，其顺序如下： &lt;code&gt;static&lt;/code&gt; ， &lt;code&gt;final&lt;/code&gt; ， &lt;code&gt;transient&lt;/code&gt; ， &lt;code&gt;volatile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9638f5a7a035d2e6544d680de5d3ab0daed7b22" translate="yes" xml:space="preserve">
          <source>The modifiers consist of any combination of:</source>
          <target state="translated">修饰词由以下任意组合组成:</target>
        </trans-unit>
        <trans-unit id="6ff5d7370fd2f43b716be59ccc281e0ddf9dbf8a" translate="yes" xml:space="preserve">
          <source>The module declaration of the &lt;em&gt;consumer module&lt;/em&gt; that calls one of the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; factory methods to obtain a resource bundle from service providers must specify the following directive:</source>
          <target state="translated">调用 &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; 工厂方法之一从服务提供者获取资源束的&lt;em&gt;使用者模块&lt;/em&gt;的模块声明必须指定以下指令：</target>
        </trans-unit>
        <trans-unit id="cd27a759db5930b6965b70e80e45ffbd273976e9" translate="yes" xml:space="preserve">
          <source>The module declaration of this provider module specifies the following directive:</source>
          <target state="translated">该提供者模块的模块声明中指定了以下指令。</target>
        </trans-unit>
        <trans-unit id="f826091184fabed6c053393d124b02eeb394e90b" translate="yes" xml:space="preserve">
          <source>The module descriptor</source>
          <target state="translated">模块描述符</target>
        </trans-unit>
        <trans-unit id="9ffb9f109518cb257ecb641ae9e31b19f384e7d8" translate="yes" xml:space="preserve">
          <source>The module descriptor for this module</source>
          <target state="translated">本模块的模块描述符</target>
        </trans-unit>
        <trans-unit id="d5697a7d44cd8d7587068252683fa19c81cde1d8" translate="yes" xml:space="preserve">
          <source>The module descriptor is read from the buffer starting at index &lt;code&gt;p&lt;/code&gt;, where &lt;code&gt;p&lt;/code&gt; is the buffer's &lt;a href=&quot;../../nio/buffer#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; when this method is invoked. Upon return the buffer's position will be equal to &lt;code&gt;p + n&lt;/code&gt; where &lt;code&gt;n&lt;/code&gt; is the number of bytes read from the buffer.</source>
          <target state="translated">从索引 &lt;code&gt;p&lt;/code&gt; 开始，从缓冲区读取模块描述符，其中 &lt;code&gt;p&lt;/code&gt; 是调用此方法时缓冲区的&lt;a href=&quot;../../nio/buffer#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;。返回时，缓冲区的位置将等于 &lt;code&gt;p + n&lt;/code&gt; ，其中 &lt;code&gt;n&lt;/code&gt; 是从缓冲区读取的字节数。</target>
        </trans-unit>
        <trans-unit id="23823c03b5b1082b2e61b6362541194e29396b6d" translate="yes" xml:space="preserve">
          <source>The module finder locates modules by searching each directory, exploded module, or packaged module in array index order. It finds the first occurrence of a module with a given name and ignores other modules of that name that appear later in the sequence.</source>
          <target state="translated">模块查找器通过按照数组索引的顺序搜索每个目录、已打开的模块或打包的模块来查找模块。它找到第一个出现的给定名称的模块,并忽略序列中后面出现的该名称的其他模块。</target>
        </trans-unit>
        <trans-unit id="fd6e4f3b8e674aeca9b51d358b7f13e83c064b81" translate="yes" xml:space="preserve">
          <source>The module finder returned by this method supports modules packaged as JAR files. A JAR file with a &lt;code&gt;
 module-info.class&lt;/code&gt; in its top-level directory, or in a versioned entry in a &lt;a href=&quot;../../util/jar/jarfile#isMultiRelease()&quot;&gt;multi-release&lt;/a&gt; JAR file, is a modular JAR file and thus defines an &lt;em&gt;explicit&lt;/em&gt; module. A JAR file that does not have a &lt;code&gt;module-info.class&lt;/code&gt; in its top-level directory defines an &lt;em&gt;automatic module&lt;/em&gt;, as follows:</source>
          <target state="translated">此方法返回的模块查找器支持打包为JAR文件的模块。在其顶级目录中或在&lt;a href=&quot;../../util/jar/jarfile#isMultiRelease()&quot;&gt;多版本&lt;/a&gt;JAR文件的版本条目中带有 &lt;code&gt; module-info.class&lt;/code&gt; 的JAR文件是模块化JAR文件，因此定义了&lt;em&gt;显式&lt;/em&gt;模块。在其顶级目录中没有 &lt;code&gt;module-info.class&lt;/code&gt; 的JAR文件定义了一个&lt;em&gt;自动模块&lt;/em&gt;，如下所示：&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1a9f6d24753f85c58f990e727273d60e2e67d1e6" translate="yes" xml:space="preserve">
          <source>The module layer that contains this module</source>
          <target state="translated">包含该模块的模块层</target>
        </trans-unit>
        <trans-unit id="1635800c659f8343bb6f76cf0577b6d8050a774a" translate="yes" xml:space="preserve">
          <source>The module name</source>
          <target state="translated">模块名称</target>
        </trans-unit>
        <trans-unit id="53e0fa608612b58a9a810e4063bf16f58069901a" translate="yes" xml:space="preserve">
          <source>The module name of the initial/main module</source>
          <target state="translated">初始/主模块的模块名称。</target>
        </trans-unit>
        <trans-unit id="ac5d37ad4e53b906df01aa542b63a047cb5d7bde" translate="yes" xml:space="preserve">
          <source>The module names, package names, and class names that are parameters specified to the builder methods are the module names, package names, and qualified names of classes (in named packages) as defined in the</source>
          <target state="translated">模块名、包名和类名是指定给构建器方法的参数,它们是模块名、包名和类的限定名(在命名的包中),定义在</target>
        </trans-unit>
        <trans-unit id="fa45d7a186ad1d94566a5a5b06f2471c8f81eba2" translate="yes" xml:space="preserve">
          <source>The module prompts for a username and password and then verifies the password against the password stored in a directory service configured under JNDI.</source>
          <target state="translated">该模块提示输入用户名和密码,然后根据JNDI下配置的目录服务中存储的密码验证密码。</target>
        </trans-unit>
        <trans-unit id="11c2904d770fbc92f2522b07410930baefe40138" translate="yes" xml:space="preserve">
          <source>The module was implicitly declared.</source>
          <target state="translated">该模块是隐性声明的。</target>
        </trans-unit>
        <trans-unit id="3f251bc3c55d3066fc0f31b71e99d61fef714079" translate="yes" xml:space="preserve">
          <source>The module was not explicitly or implicitly declared.</source>
          <target state="translated">该模块没有明确或隐性声明。</target>
        </trans-unit>
        <trans-unit id="d3991d1b517dfde1e54a603f22fa164b96b0ed22" translate="yes" xml:space="preserve">
          <source>The module will require &quot;&lt;code&gt;java.base&lt;/code&gt;&quot; even if the dependence has not been declared (the exception is when building a module named &quot;&lt;code&gt;java.base&lt;/code&gt;&quot; as it cannot require itself). The dependence on &quot;&lt;code&gt;java.base&lt;/code&gt;&quot; will have the &lt;a href=&quot;moduledescriptor.requires.modifier#MANDATED&quot;&gt;&lt;code&gt;MANDATED&lt;/code&gt;&lt;/a&gt; modifier if the dependence was not declared.</source>
          <target state="translated">即使未声明依赖关系，该模块也将需要&amp;ldquo; &lt;code&gt;java.base&lt;/code&gt; &amp;rdquo;（例外是在构建名为&amp;ldquo; &lt;code&gt;java.base&lt;/code&gt; &amp;rdquo;的模块时，因为它本身不需要它）。如果未声明依赖关系，则对&amp;ldquo; &lt;code&gt;java.base&lt;/code&gt; &amp;rdquo;的依赖关系将具有&lt;a href=&quot;moduledescriptor.requires.modifier#MANDATED&quot;&gt; &lt;code&gt;MANDATED&lt;/code&gt; &lt;/a&gt;修饰符。</target>
        </trans-unit>
        <trans-unit id="854f140d77f63016d257e0527ca134810276d2c2" translate="yes" xml:space="preserve">
          <source>The module with the given name or an empty &lt;code&gt;Optional&lt;/code&gt; if there isn't a module with this name in this layer or any parent layer</source>
          <target state="translated">具有给定名称的模块或空的 &lt;code&gt;Optional&lt;/code&gt; 如果此层或任何父层中没有具有该名称的模块）</target>
        </trans-unit>
        <trans-unit id="62ab14799d4062196ce892d3b8d807e65d9fde90" translate="yes" xml:space="preserve">
          <source>The modulus value.</source>
          <target state="translated">模数值。</target>
        </trans-unit>
        <trans-unit id="3d08c37a4170b4dda9e34877ca839b2a5af939cc" translate="yes" xml:space="preserve">
          <source>The month of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;, from 1 to 12.</source>
          <target state="translated">此 &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 的月份，从1到12。</target>
        </trans-unit>
        <trans-unit id="52e5f16469f41afd7f7f1a42b853a6034f970843" translate="yes" xml:space="preserve">
          <source>The month-of-year, such as March.</source>
          <target state="translated">年的月份,如3月。</target>
        </trans-unit>
        <trans-unit id="ad63462cba81985606db9ca1b76cff069f0f97bd" translate="yes" xml:space="preserve">
          <source>The months unit is not automatically normalized with the years unit. This means that a period of &quot;15 months&quot; is different to a period of &quot;1 year and 3 months&quot;.</source>
          <target state="translated">月份单位没有自动与年份单位标准化。这意味着,&quot;15个月 &quot;与 &quot;1年零3个月 &quot;的期限不同。</target>
        </trans-unit>
        <trans-unit id="1808c8e9420488523fe90cca9d9f6edf6d79fa22" translate="yes" xml:space="preserve">
          <source>The most common example when the 'mixing-cutout' shape is needed is a glass pane component. The &lt;a href=&quot;../../javax/swing/jrootpane#setGlassPane(java.awt.Component)&quot;&gt;&lt;code&gt;JRootPane.setGlassPane(java.awt.Component)&lt;/code&gt;&lt;/a&gt; method automatically sets the</source>
          <target state="translated">需要&amp;ldquo;混合切口&amp;rdquo;形状时，最常见的示例是玻璃窗格组件。所述&lt;a href=&quot;../../javax/swing/jrootpane#setGlassPane(java.awt.Component)&quot;&gt; &lt;code&gt;JRootPane.setGlassPane(java.awt.Component)&lt;/code&gt; &lt;/a&gt;方法自动设置</target>
        </trans-unit>
        <trans-unit id="4513060ec32ffaef9ffecbdcf9d778476ec0f897" translate="yes" xml:space="preserve">
          <source>The most common implementations are method references, such as &lt;code&gt;LocalDate::from&lt;/code&gt; and &lt;code&gt;ZoneId::from&lt;/code&gt;. Additional common queries are provided as static methods in &lt;a href=&quot;temporalqueries&quot;&gt;&lt;code&gt;TemporalQueries&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最常见的实现是方法引用，例如 &lt;code&gt;LocalDate::from&lt;/code&gt; 和 &lt;code&gt;ZoneId::from&lt;/code&gt; 。在&lt;a href=&quot;temporalqueries&quot;&gt; &lt;code&gt;TemporalQueries&lt;/code&gt; &lt;/a&gt;中，作为静态方法提供了其他常见查询。</target>
        </trans-unit>
        <trans-unit id="7e2c1befd40582f5a4726afbca33854db8dbfdc7" translate="yes" xml:space="preserve">
          <source>The most common implementations are method references, such as &lt;code&gt;LocalDate::from&lt;/code&gt; and &lt;code&gt;ZoneId::from&lt;/code&gt;. Additional common queries are provided to return:</source>
          <target state="translated">最常见的实现是方法引用，例如 &lt;code&gt;LocalDate::from&lt;/code&gt; 和 &lt;code&gt;ZoneId::from&lt;/code&gt; 。提供了其他常见查询以返回：</target>
        </trans-unit>
        <trans-unit id="3d41a4cbf15b731db6bda6714c5e00e992b9f579" translate="yes" xml:space="preserve">
          <source>The most common query implementations are method references, such as &lt;code&gt;LocalDate::from&lt;/code&gt; and &lt;code&gt;ZoneId::from&lt;/code&gt;. Additional implementations are provided as static methods on &lt;a href=&quot;temporalquery&quot;&gt;&lt;code&gt;TemporalQuery&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">最常见的查询实现是方法引用，例如 &lt;code&gt;LocalDate::from&lt;/code&gt; 和 &lt;code&gt;ZoneId::from&lt;/code&gt; 。在&lt;a href=&quot;temporalquery&quot;&gt; &lt;code&gt;TemporalQuery&lt;/code&gt; &lt;/a&gt;上以静态方法提供了其他实现。</target>
        </trans-unit>
        <trans-unit id="c13dd68f0c8f57bb59ccd6903b4447f288e54694" translate="yes" xml:space="preserve">
          <source>The most commonly used units are defined in &lt;a href=&quot;chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt;. Further fields are supplied in &lt;a href=&quot;isofields&quot;&gt;&lt;code&gt;IsoFields&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;weekfields&quot;&gt;&lt;code&gt;WeekFields&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;julianfields&quot;&gt;&lt;code&gt;JulianFields&lt;/code&gt;&lt;/a&gt;. Fields can also be written by application code by implementing this interface.</source>
          <target state="translated">最常用的单位在&lt;a href=&quot;chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;中定义。在&lt;a href=&quot;isofields&quot;&gt; &lt;code&gt;IsoFields&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;weekfields&quot;&gt; &lt;code&gt;WeekFields&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;julianfields&quot;&gt; &lt;code&gt;JulianFields&lt;/code&gt; &lt;/a&gt;中提供了其他字段。通过实现此接口，字段也可以由应用程序代码编写。</target>
        </trans-unit>
        <trans-unit id="af7dd9ea927fa70049276104e84510298e783b39" translate="yes" xml:space="preserve">
          <source>The most commonly used units are defined in &lt;a href=&quot;chronounit&quot;&gt;&lt;code&gt;ChronoUnit&lt;/code&gt;&lt;/a&gt;. Further units are supplied in &lt;a href=&quot;isofields&quot;&gt;&lt;code&gt;IsoFields&lt;/code&gt;&lt;/a&gt;. Units can also be written by application code by implementing this interface.</source>
          <target state="translated">最常用的单位在&lt;a href=&quot;chronounit&quot;&gt; &lt;code&gt;ChronoUnit&lt;/code&gt; &lt;/a&gt;中定义。其他单元在&lt;a href=&quot;isofields&quot;&gt; &lt;code&gt;IsoFields&lt;/code&gt; &lt;/a&gt;中提供。通过实现此接口，单元也可以由应用程序代码编写。</target>
        </trans-unit>
        <trans-unit id="68bb9a4cb9aa2b82b423053d80b910869345efe3" translate="yes" xml:space="preserve">
          <source>The most condensed predefined width.</source>
          <target state="translated">最浓缩的预定义宽度。</target>
        </trans-unit>
        <trans-unit id="40695de746ccbc2352bf8577be8e1cbb2b497820" translate="yes" xml:space="preserve">
          <source>The most extended predefined width.</source>
          <target state="translated">最扩展的预定义宽度。</target>
        </trans-unit>
        <trans-unit id="336862f66e49b850485d5a43840dcf02567602aa" translate="yes" xml:space="preserve">
          <source>The most significant 64 bits of this UUID's 128 bit value</source>
          <target state="translated">这个UUID的128位值中最重要的64位。</target>
        </trans-unit>
        <trans-unit id="1b3a7b82d4c1e3494e08d3f8dcc14fcea3e3c83d" translate="yes" xml:space="preserve">
          <source>The mouse has entered a component.</source>
          <target state="translated">鼠标已进入一个组件。</target>
        </trans-unit>
        <trans-unit id="4300ff492f6761e54037896847250d58d9f7ca9a" translate="yes" xml:space="preserve">
          <source>The mouse has exited a component.</source>
          <target state="translated">鼠标已经退出了一个组件。</target>
        </trans-unit>
        <trans-unit id="88d3dea421ee35681eb08ba780924b05a6ceba05" translate="yes" xml:space="preserve">
          <source>The mouse has moved with no button pressed.</source>
          <target state="translated">鼠标已经移动,没有按下按钮。</target>
        </trans-unit>
        <trans-unit id="ba08b5f18ed9ec07f7eba8ec350b383be83d9827" translate="yes" xml:space="preserve">
          <source>The move button text property.</source>
          <target state="translated">移动按钮文本属性。</target>
        </trans-unit>
        <trans-unit id="4ed52e635196ac91fbf685930c6ca399d0d5eae6" translate="yes" xml:space="preserve">
          <source>The move cursor type.</source>
          <target state="translated">移动光标类型。</target>
        </trans-unit>
        <trans-unit id="e5b6b0ee327c4dda6a29cf8a360a7d3afa18127d" translate="yes" xml:space="preserve">
          <source>The move is performed as an atomic file system operation and all other options are ignored. If the target file exists then it is implementation specific if the existing file is replaced or this method fails by throwing an &lt;a href=&quot;../../io/ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt;. If the move cannot be performed as an atomic file system operation then &lt;a href=&quot;atomicmovenotsupportedexception&quot;&gt;&lt;code&gt;AtomicMoveNotSupportedException&lt;/code&gt;&lt;/a&gt; is thrown. This can arise, for example, when the target location is on a different &lt;code&gt;FileStore&lt;/code&gt; and would require that the file be copied, or target location is associated with a different provider to this object.</source>
          <target state="translated">该移动是作为原子文件系统操作执行的，所有其他选项都将被忽略。如果目标文件存在，则替换现有文件或此方法因抛出&lt;a href=&quot;../../io/ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; 而&lt;/a&gt;失败是特定于实现的。如果无法将移动作为原子文件系统操作执行，则抛出&lt;a href=&quot;atomicmovenotsupportedexception&quot;&gt; &lt;code&gt;AtomicMoveNotSupportedException&lt;/code&gt; &lt;/a&gt;。例如，当目标位置在不同的 &lt;code&gt;FileStore&lt;/code&gt; 上并且需要复制文件，或者目标位置与该对象的不同提供者相关联时，就会出现这种情况。</target>
        </trans-unit>
        <trans-unit id="cf8d2bee39940d0f0e5b63f3da1a2f2575577f74" translate="yes" xml:space="preserve">
          <source>The msg string is localized using the named resource bundle. If the resource bundle name is null, or an empty String or invalid then the msg string is not localized.</source>
          <target state="translated">msg 字符串是通过命名的资源包进行本地化的,如果资源包的名称为空,或为空字符串或无效,则 msg 字符串不会被本地化。如果资源包的名称为空,或为空字符串或无效,那么 msg 字符串就不会被本地化。</target>
        </trans-unit>
        <trans-unit id="87e3caa9fe0fe65747b93ccf7d2958ad47e8ab5b" translate="yes" xml:space="preserve">
          <source>The multicast &lt;code&gt;NetworkInterface&lt;/code&gt; currently set. A placeholder NetworkInterface is returned when there is no interface set; it has a single InetAddress to represent any local address.</source>
          <target state="translated">当前设置的多播 &lt;code&gt;NetworkInterface&lt;/code&gt; 。当未设置接口时，将返回占位符NetworkInterface；它具有一个InetAddress来表示任何本地地址。</target>
        </trans-unit>
        <trans-unit id="f37cfad4e06252721b39abc7c9955ec39b17924d" translate="yes" xml:space="preserve">
          <source>The multicast datagram socket class is useful for sending and receiving IP multicast packets.</source>
          <target state="translated">组播数据报套接字类对发送和接收IP组播数据包很有用。</target>
        </trans-unit>
        <trans-unit id="0c63c91d04a939fcd587cbc1f9e978924f9d2ad7" translate="yes" xml:space="preserve">
          <source>The multicast datagram socket class is useful for sending and receiving IP multicast packets. A MulticastSocket is a (UDP) DatagramSocket, with additional capabilities for joining &quot;groups&quot; of other multicast hosts on the internet.</source>
          <target state="translated">多播数据报套接字类对于发送和接收IP多播数据包非常有用。MulticastSocket是一个(UDP)DatagramSocket,具有加入互联网上其他组播主机 &quot;组 &quot;的附加功能。</target>
        </trans-unit>
        <trans-unit id="679be2f4ae9c2488715346a40d11f01c153c9386" translate="yes" xml:space="preserve">
          <source>The multicast implementation is intended to map directly to the native multicasting facility. Consequently, the following items should be considered when developing an application that receives IP multicast datagrams:</source>
          <target state="translated">组播实现的目的是直接映射到本地组播设施。因此,在开发接收IP多播数据报的应用程序时,应考虑以下项目。</target>
        </trans-unit>
        <trans-unit id="8d9f399a6a76b061b084d9b4a009e3d8e36254d4" translate="yes" xml:space="preserve">
          <source>The multiple input documents are combined into a single output document. Finishing operations (&lt;a href=&quot;finishings&quot;&gt;&lt;code&gt;Finishings&lt;/code&gt;&lt;/a&gt;), are performed on this single output document. The &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute tells how many copies of this single output document to produce. The &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; values &lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; and &lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; specify two variations of this possibility.</source>
          <target state="translated">多个输入文档合并为一个输出文档。在此单个输出文档上执行整理操作（&lt;a href=&quot;finishings&quot;&gt; &lt;code&gt;Finishings&lt;/code&gt; &lt;/a&gt;）。&amp;ldquo;&lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性指示要生成此单个输出文档的多少份副本。该 &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 值 &lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; 和 &lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; 指定的这种可能性两个变化。</target>
        </trans-unit>
        <trans-unit id="ce7b19820280a66b240e2ab7bb11f5dc03d3553e" translate="yes" xml:space="preserve">
          <source>The multiple input documents are combined into a single output document. Finishing operations (&lt;a href=&quot;finishings&quot;&gt;&lt;code&gt;Finishings&lt;/code&gt;&lt;/a&gt;), are performed on this single output document. The &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute tells how many copies of this single output document to produce. The MultipleDocumentHandling values SINGLE_DOCUMENT and SINGLE_DOCUMENT_NEW_SHEET specify two variations of this possibility.</source>
          <target state="translated">多个输入文档合并为一个输出文档。在此单个输出文档上执行整理操作（&lt;a href=&quot;finishings&quot;&gt; &lt;code&gt;Finishings&lt;/code&gt; &lt;/a&gt;）。 &amp;ldquo; &lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性告诉您要生成此单个输出文档的副本数。 MultipleDocumentHandling值SINGLE_DOCUMENT和SINGLE_DOCUMENT_NEW_SHEET指定了这种可能性的两种变体。</target>
        </trans-unit>
        <trans-unit id="ebc205570873174d635db810e1ed9b34c248d113" translate="yes" xml:space="preserve">
          <source>The multiple input documents remain separate output documents. Finishing operations (&lt;a href=&quot;finishings&quot;&gt;&lt;code&gt;Finishings&lt;/code&gt;&lt;/a&gt;), are performed on each output document separately. The &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute tells how many copies of each separate output document to produce. The &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; values &lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; and &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; specify two variations of this possibility.</source>
          <target state="translated">多个输入文档保留为单独的输出文档。整理操作（&lt;a href=&quot;finishings&quot;&gt; &lt;code&gt;Finishings&lt;/code&gt; &lt;/a&gt;）在每个输出文档上分别执行。 &amp;ldquo;&lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性告诉您每个单独的输出文档要产生多少份拷贝。该 &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 值 &lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; 和 &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; 指定的这种可能性两个变化。</target>
        </trans-unit>
        <trans-unit id="028e483478001df55d9b96778a1edffa0bfb1289" translate="yes" xml:space="preserve">
          <source>The multiple input documents remain separate output documents. Finishing operations (&lt;a href=&quot;finishings&quot;&gt;&lt;code&gt;Finishings&lt;/code&gt;&lt;/a&gt;), are performed on each output document separately. The &lt;a href=&quot;copies&quot;&gt;&lt;code&gt;Copies&lt;/code&gt;&lt;/a&gt; attribute tells how many copies of each separate output document to produce. The MultipleDocumentHandling values SEPARATE_DOCUMENTS_UNCOLLATED_COPIES and SEPARATE_DOCUMENTS_COLLATED_COPIES specify two variations of this possibility.</source>
          <target state="translated">多个输入文档保留为单独的输出文档。整理操作（&lt;a href=&quot;finishings&quot;&gt; &lt;code&gt;Finishings&lt;/code&gt; &lt;/a&gt;）在每个输出文档上分别执行。 &amp;ldquo; &lt;a href=&quot;copies&quot;&gt; &lt;code&gt;Copies&lt;/code&gt; &lt;/a&gt;属性告诉您要产生每个单独的输出文档多少份。 MultipleDocumentHandling值SEPARATE_DOCUMENTS_UNCOLLATED_COPIES和SEPARATE_DOCUMENTS_COLLATED_COPIES指定了这种可能性的两种变体。</target>
        </trans-unit>
        <trans-unit id="d1a9befa918fd9fc042bb67e1599e6636d96288a" translate="yes" xml:space="preserve">
          <source>The mutable reduction operation is called &lt;a href=&quot;stream#collect(java.util.stream.Collector)&quot;&gt;&lt;code&gt;collect()&lt;/code&gt;&lt;/a&gt;, as it collects together the desired results into a result container such as a &lt;code&gt;Collection&lt;/code&gt;. A &lt;code&gt;collect&lt;/code&gt; operation requires three functions: a supplier function to construct new instances of the result container, an accumulator function to incorporate an input element into a result container, and a combining function to merge the contents of one result container into another. The form of this is very similar to the general form of ordinary reduction:</source>
          <target state="translated">可变的归约操作称为&lt;a href=&quot;stream#collect(java.util.stream.Collector)&quot;&gt; &lt;code&gt;collect()&lt;/code&gt; &lt;/a&gt;，因为它将所需的结果收集在一起到结果容器（如 &lt;code&gt;Collection&lt;/code&gt; )中。甲 &lt;code&gt;collect&lt;/code&gt; 操作需要三个功能：一个供应商功能构建结果容器，蓄能器功能并入一个输入元件到结果容器和组合功能的新实例的一个结果容器的内容物合并到另一个。这种形式与普通归约的一般形式非常相似：</target>
        </trans-unit>
        <trans-unit id="fc368dbc299b8ec9a50b33ed2e8162f1e9e9148a" translate="yes" xml:space="preserve">
          <source>The mutable reduction operation is called &lt;a href=&quot;stream#collect-java.util.stream.Collector-&quot;&gt;&lt;code&gt;collect()&lt;/code&gt;&lt;/a&gt;, as it collects together the desired results into a result container such as a &lt;code&gt;Collection&lt;/code&gt;. A &lt;code&gt;collect&lt;/code&gt; operation requires three functions: a supplier function to construct new instances of the result container, an accumulator function to incorporate an input element into a result container, and a combining function to merge the contents of one result container into another. The form of this is very similar to the general form of ordinary reduction:</source>
          <target state="translated">可变的归约操作称为&lt;a href=&quot;stream#collect-java.util.stream.Collector-&quot;&gt; &lt;code&gt;collect()&lt;/code&gt; &lt;/a&gt;，因为它将所需的结果收集到一个结果容器中，例如 &lt;code&gt;Collection&lt;/code&gt; 。甲 &lt;code&gt;collect&lt;/code&gt; 操作需要三个功能：一个供应商功能构建结果容器，蓄能器功能并入一个输入元件到结果容器和组合功能的新实例的一个结果容器的内容物合并到另一个。其形式与普通归约的一般形式非常相似：</target>
        </trans-unit>
        <trans-unit id="6bf363cc62a0d3c9d944fdceea262606a0bad8a4" translate="yes" xml:space="preserve">
          <source>The mutable source provides a late-binding and fail-fast Spliterator.</source>
          <target state="translated">可突变的源头提供了一个延迟绑定和快速失效的Spliterator。</target>
        </trans-unit>
        <trans-unit id="d66e6381fee28dcc7d4fb931e8ee888e87c11040" translate="yes" xml:space="preserve">
          <source>The mutable source provides a late-binding and non-fail-fast Spliterator.</source>
          <target state="translated">可突变的源头提供了一个后期绑定和非故障快速的Spliter。</target>
        </trans-unit>
        <trans-unit id="2f78fc2805fc5d07a59044553456ac5cd7dd26fa" translate="yes" xml:space="preserve">
          <source>The mutable source provides a non-late-binding and non-fail-fast Spliterator.</source>
          <target state="translated">可突变的源头提供了一个非延迟绑定和非故障快速的Spliterator。</target>
        </trans-unit>
        <trans-unit id="dbe168307666cea493e681f1f4347bdcea853c7c" translate="yes" xml:space="preserve">
          <source>The mutable source provides a non-late-binding but fail-fast Spliterator.</source>
          <target state="translated">可突变源提供了一个非延迟绑定但快速失效的Spliterator。</target>
        </trans-unit>
        <trans-unit id="76d403f1093a19ad1c9bb2d7114141c8b8dfd068" translate="yes" xml:space="preserve">
          <source>The n-th date which appears in the stream is equal to &lt;code&gt;this.plus(step.multipliedBy(n))&lt;/code&gt; (but the result of step multiplication never overflows). For example, if this date is &lt;code&gt;2015-01-31&lt;/code&gt;, the end date is &lt;code&gt;2015-05-01&lt;/code&gt; and the step is 1 month, then the stream contains &lt;code&gt;2015-01-31&lt;/code&gt;, &lt;code&gt;2015-02-28&lt;/code&gt;, &lt;code&gt;2015-03-31&lt;/code&gt;, and &lt;code&gt;2015-04-30&lt;/code&gt;.</source>
          <target state="translated">流中出现的第n个日期等于 &lt;code&gt;this.plus(step.multipliedBy(n))&lt;/code&gt; （但步乘法的结果永远不会溢出）。例如，如果这个日期是 &lt;code&gt;2015-01-31&lt;/code&gt; ，结束日期是 &lt;code&gt;2015-05-01&lt;/code&gt; 和步骤为1个月，然后流包含 &lt;code&gt;2015-01-31&lt;/code&gt; ， &lt;code&gt;2015-02-28&lt;/code&gt; ， &lt;code&gt;2015-03-31&lt;/code&gt; 和 &lt;code&gt;2015-04-30&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31d3c0f6b4d01646a48dc2eec0b9c8fb5b9267a6" translate="yes" xml:space="preserve">
          <source>The name &lt;code&gt;gc&lt;/code&gt; stands for &quot;garbage collector&quot;. The Java Virtual Machine performs this recycling process automatically as needed, in a separate thread, even if the &lt;code&gt;gc&lt;/code&gt; method is not invoked explicitly.</source>
          <target state="translated">这个名字 &lt;code&gt;gc&lt;/code&gt; 代表&amp;ldquo;垃圾回收器&amp;rdquo;。即使未显式调用 &lt;code&gt;gc&lt;/code&gt; 方法，Java虚拟机也会根据需要在单独的线程中自动执行此回收过程。</target>
        </trans-unit>
        <trans-unit id="e7bae1d90225c65e4241b4140c7e704c983e32a7" translate="yes" xml:space="preserve">
          <source>The name &lt;code&gt;gc&lt;/code&gt; stands for &quot;garbage collector&quot;. The virtual machine performs this recycling process automatically as needed, in a separate thread, even if the &lt;code&gt;gc&lt;/code&gt; method is not invoked explicitly.</source>
          <target state="translated">这个名字 &lt;code&gt;gc&lt;/code&gt; 代表&amp;ldquo;垃圾回收器&amp;rdquo;。即使未显式调用 &lt;code&gt;gc&lt;/code&gt; 方法，虚拟机也会根据需要在单独的线程中自动执行此回收过程。</target>
        </trans-unit>
        <trans-unit id="298b704b9fa08b7d1afe8582882b8210ab89b9c6" translate="yes" xml:space="preserve">
          <source>The name and type the specified CompositeData must contain</source>
          <target state="translated">指定的CompositeData必须包含名称和类型。</target>
        </trans-unit>
        <trans-unit id="544bf051094ed67f6eb578a4628c2bb2628ed3d9" translate="yes" xml:space="preserve">
          <source>The name as a list of RDNs which are instances of the class &lt;a href=&quot;rdn&quot;&gt;&lt;code&gt;Rdn&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作为RDN列表的名称，这些RDN是类&lt;a href=&quot;rdn&quot;&gt; &lt;code&gt;Rdn&lt;/code&gt; 的&lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="c8650bd011ea0967d50e07bf395dc45c6981be8f" translate="yes" xml:space="preserve">
          <source>The name assigned to a tag with an unknown tag number.</source>
          <target state="translated">分配给未知标签号的标签的名称。</target>
        </trans-unit>
        <trans-unit id="22c0e5d40dd79969cd82e72465bb3fbde9230b74" translate="yes" xml:space="preserve">
          <source>The name assigned to a tag with an unknown tag number. Such a tag may be created for example when reading an IFD and a tag number is encountered which is not in any of the &lt;code&gt;TIFFTagSet&lt;/code&gt;s known to the reader.</source>
          <target state="translated">分配给标签号未知的标签的名称。例如，当读取IFD并遇到读取器不知道的 &lt;code&gt;TIFFTagSet&lt;/code&gt; 中的任何标签号时，可能会创建这样的标签。</target>
        </trans-unit>
        <trans-unit id="86b0cc1239625455eae930e65603610fafed91c8" translate="yes" xml:space="preserve">
          <source>The name at the &lt;code&gt;index&lt;/code&gt;th position in the &lt;code&gt;NameList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if there is no name for the specified index or if the index is out of range.</source>
          <target state="translated">所述名称 &lt;code&gt;index&lt;/code&gt; 个中的位置 &lt;code&gt;NameList&lt;/code&gt; 中，或 &lt;code&gt;null&lt;/code&gt; 如果不存在用于指定索引或者如果没有名称的索引是超出范围。</target>
        </trans-unit>
        <trans-unit id="e51d7878cc5e7e5574ad6e0538af772791366fe4" translate="yes" xml:space="preserve">
          <source>The name can be formed in the following ways:</source>
          <target state="translated">名称的形成可以有以下几种方式。</target>
        </trans-unit>
        <trans-unit id="504eb3737ea1138b3f84bac07b01bdfb6961254c" translate="yes" xml:space="preserve">
          <source>The name constraints are returned as a byte array. This byte array contains the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 3280 and X.509. The ASN.1 notation for this structure is supplied in the documentation for &lt;a href=&quot;trustanchor#TrustAnchor-java.security.cert.X509Certificate-byte:A-&quot;&gt;&lt;code&gt;TrustAnchor(X509Certificate trustedCert, byte[] nameConstraints) &lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名称约束以字节数组形式返回。此字节数组包含名称约束的DER编码形式，因为它们将出现在RFC 3280和X.509中定义的NameConstraints结构中。&lt;a href=&quot;trustanchor#TrustAnchor-java.security.cert.X509Certificate-byte:A-&quot;&gt; &lt;code&gt;TrustAnchor(X509Certificate trustedCert, byte[] nameConstraints) &lt;/code&gt; &lt;/a&gt;的文档中提供了此结构的ASN.1表示法。</target>
        </trans-unit>
        <trans-unit id="211caa8f49b864cd1bbad3bd9135f34a8bd884f4" translate="yes" xml:space="preserve">
          <source>The name constraints are returned as a byte array. This byte array contains the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 3280 and X.509. The ASN.1 notation for this structure is supplied in the documentation for &lt;a href=&quot;x509certselector#setNameConstraints-byte:A-&quot;&gt;&lt;code&gt;setNameConstraints(byte [] bytes)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名称约束以字节数组形式返回。此字节数组包含名称约束的DER编码形式，因为它们将出现在RFC 3280和X.509中定义的NameConstraints结构中。文档的&lt;a href=&quot;x509certselector#setNameConstraints-byte:A-&quot;&gt; &lt;code&gt;setNameConstraints(byte [] bytes)&lt;/code&gt; &lt;/a&gt;提供了此结构的ASN.1表示法。</target>
        </trans-unit>
        <trans-unit id="e7035b9680ba2a5219acc362a95cb6bab9307b7a" translate="yes" xml:space="preserve">
          <source>The name constraints are returned as a byte array. This byte array contains the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 5280 and X.509. The ASN.1 notation for this structure is supplied in the documentation for &lt;a href=&quot;#%3Cinit%3E(java.security.cert.X509Certificate,byte%5B%5D)&quot;&gt;&lt;code&gt;TrustAnchor(X509Certificate trustedCert, byte[] nameConstraints) &lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名称约束以字节数组形式返回。此字节数组包含名称约束的DER编码形式，因为它们将出现在RFC 5280和X.509中定义的NameConstraints结构中。&lt;a href=&quot;#%3Cinit%3E(java.security.cert.X509Certificate,byte%5B%5D)&quot;&gt; &lt;code&gt;TrustAnchor(X509Certificate trustedCert, byte[] nameConstraints) &lt;/code&gt; &lt;/a&gt;的文档中提供了此结构的ASN.1表示法。</target>
        </trans-unit>
        <trans-unit id="10ed19e6f99056d708df9e48318e76d1d9185711" translate="yes" xml:space="preserve">
          <source>The name constraints are returned as a byte array. This byte array contains the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 5280 and X.509. The ASN.1 notation for this structure is supplied in the documentation for &lt;a href=&quot;#setNameConstraints(byte%5B%5D)&quot;&gt;&lt;code&gt;setNameConstraints(byte [] bytes)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名称约束以字节数组形式返回。此字节数组包含名称约束的DER编码形式，因为它们将出现在RFC 5280和X.509中定义的NameConstraints结构中。文档的&lt;a href=&quot;#setNameConstraints(byte%5B%5D)&quot;&gt; &lt;code&gt;setNameConstraints(byte [] bytes)&lt;/code&gt; &lt;/a&gt;提供了此结构的ASN.1表示法。</target>
        </trans-unit>
        <trans-unit id="89d3f5a0a3d4ea6ce2bb9307cf0651027e621ab6" translate="yes" xml:space="preserve">
          <source>The name constraints are specified as a byte array. This byte array contains the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 3280 and X.509. The ASN.1 notation for this structure is supplied in the documentation for &lt;a href=&quot;trustanchor#TrustAnchor-java.security.cert.X509Certificate-byte:A-&quot;&gt;&lt;code&gt;TrustAnchor(X509Certificate trustedCert, byte[] nameConstraints) &lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名称约束被指定为字节数组。此字节数组包含名称约束的DER编码形式，因为它们将出现在RFC 3280和X.509中定义的NameConstraints结构中。&lt;a href=&quot;trustanchor#TrustAnchor-java.security.cert.X509Certificate-byte:A-&quot;&gt; &lt;code&gt;TrustAnchor(X509Certificate trustedCert, byte[] nameConstraints) &lt;/code&gt; &lt;/a&gt;的文档中提供了此结构的ASN.1表示法。</target>
        </trans-unit>
        <trans-unit id="8b28b918d68df290fd1b094f19e837f8390d6a4e" translate="yes" xml:space="preserve">
          <source>The name constraints are specified as a byte array. This byte array contains the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 5280 and X.509. The ASN.1 notation for this structure is supplied in the documentation for &lt;a href=&quot;#%3Cinit%3E(java.security.cert.X509Certificate,byte%5B%5D)&quot;&gt;&lt;code&gt;TrustAnchor(X509Certificate trustedCert, byte[] nameConstraints) &lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名称约束被指定为字节数组。此字节数组包含名称约束的DER编码形式，因为它们将出现在RFC 5280和X.509中定义的NameConstraints结构中。&lt;a href=&quot;#%3Cinit%3E(java.security.cert.X509Certificate,byte%5B%5D)&quot;&gt; &lt;code&gt;TrustAnchor(X509Certificate trustedCert, byte[] nameConstraints) &lt;/code&gt; &lt;/a&gt;的文档中提供了此结构的ASN.1表示法。</target>
        </trans-unit>
        <trans-unit id="524b24674014cc8494bd832aa5a756b964afc8ea" translate="yes" xml:space="preserve">
          <source>The name constraints are specified as a byte array. This byte array should contain the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in &lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280&lt;/a&gt; and X.509. The ASN.1 definition of this structure appears below.</source>
          <target state="translated">名称约束被指定为字节数组。此字节数组应包含名称约束的DER编码形式，因为它们将出现在&lt;a href=&quot;http://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280&lt;/a&gt;和X.509中定义的NameConstraints结构中。该结构的ASN.1定义如下所示。</target>
        </trans-unit>
        <trans-unit id="bd71c93b574504f37799ee1431d64b7c869dace9" translate="yes" xml:space="preserve">
          <source>The name constraints are specified as a byte array. This byte array should contain the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in &lt;a href=&quot;http://www.ietf.org/rfc/rfc3280&quot;&gt;RFC 3280&lt;/a&gt; and X.509. The ASN.1 definition of this structure appears below.</source>
          <target state="translated">名称约束被指定为字节数组。此字节数组应包含DER编码的名称约束形式，因为它们将出现在&lt;a href=&quot;http://www.ietf.org/rfc/rfc3280&quot;&gt;RFC 3280&lt;/a&gt;和X.509中定义的NameConstraints结构中。该结构的ASN.1定义如下所示。</target>
        </trans-unit>
        <trans-unit id="a9da8a923fd342992d3b685a87125e7c68161db4" translate="yes" xml:space="preserve">
          <source>The name constraints are specified as a byte array. This byte array should contain the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280&lt;/a&gt; and X.509. The ASN.1 definition of this structure appears below.</source>
          <target state="translated">名称约束被指定为字节数组。此字节数组应包含名称约束的DER编码形式，因为它们将出现在&lt;a href=&quot;https://tools.ietf.org/html/rfc5280&quot;&gt;RFC 5280&lt;/a&gt;和X.509中定义的NameConstraints结构中。该结构的ASN.1定义如下所示。</target>
        </trans-unit>
        <trans-unit id="e99975d51bf3d1c8399965f8cf3b760f5a960107" translate="yes" xml:space="preserve">
          <source>The name constraints are specified as a byte array. This byte array should contain the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 3280 and X.509. The ASN.1 definition of this structure appears below.</source>
          <target state="translated">名称约束被指定为一个字节数组。这个字节数组应该包含名称约束条件的DER编码形式,因为它们会出现在RFC 3280和X.509定义的NameConstraints结构中。该结构的ASN.1定义如下。</target>
        </trans-unit>
        <trans-unit id="d9e2a9452b3186e3009eca8a0d6a29d10082e447" translate="yes" xml:space="preserve">
          <source>The name constraints are specified as a byte array. This byte array should contain the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 5280 and X.509. The ASN.1 definition of this structure appears below.</source>
          <target state="translated">名称约束被指定为一个字节数组。这个字节数组应该包含名称约束的DER编码形式,因为它们会出现在RFC 5280和X.509定义的NameConstraints结构中。该结构的ASN.1定义如下。</target>
        </trans-unit>
        <trans-unit id="e2a86ce9761888022d92a9c1c1d8d272ebe5b60b" translate="yes" xml:space="preserve">
          <source>The name constraints have been violated.</source>
          <target state="translated">违反了名称限制。</target>
        </trans-unit>
        <trans-unit id="fb5609cf8ee988ed37ea8ec6d46d1aac96bcf30c" translate="yes" xml:space="preserve">
          <source>The name for a &lt;code&gt;SyncProvider&lt;/code&gt; implementation is its fully qualified class name.</source>
          <target state="translated">&lt;code&gt;SyncProvider&lt;/code&gt; 实现的名称是其完全限定的类名称。</target>
        </trans-unit>
        <trans-unit id="61219587bf820289ff27cf1e6a6218813200b244" translate="yes" xml:space="preserve">
          <source>The name for a BasicPermission is the name of the given permission (for example, &quot;exit&quot;, &quot;setFactory&quot;, &quot;print.queueJob&quot;, etc). The naming convention follows the hierarchical property naming convention. An asterisk may appear by itself, or if immediately preceded by a &quot;.&quot; may appear at the end of the name, to signify a wildcard match. For example, &quot;*&quot; and &quot;java.*&quot; signify a wildcard match, while &quot;*java&quot;, &quot;a*b&quot;, and &quot;java*&quot; do not.</source>
          <target state="translated">BasicPermission的名称是给定权限的名称(例如,&quot;exit&quot;、&quot;setFactory&quot;、&quot;print.queueJob &quot;等)。命名惯例遵循层次化的属性命名惯例。星号可以单独出现,或者如果紧接在名字前面的是&quot;.&quot;,则可以出现在名字的末尾,以表示通配符匹配。例如,&quot;*&quot;和 &quot;java.*&quot;表示通配符匹配,而 &quot;*java&quot;、&quot;a*b &quot;和 &quot;java*&quot;则不表示。</target>
        </trans-unit>
        <trans-unit id="db9c2273c564987e782fbfec8a9e4358476a9138" translate="yes" xml:space="preserve">
          <source>The name given to the default logical style attached to paragraphs.</source>
          <target state="translated">段落的默认逻辑样式的名称。</target>
        </trans-unit>
        <trans-unit id="266e8cd855ff7a938d3adfd87b104087c04d25c9" translate="yes" xml:space="preserve">
          <source>The name in the &lt;code&gt;Map&lt;/code&gt; is the event name and the setting name separated by &lt;code&gt;&quot;#&quot;&lt;/code&gt; (for example, &lt;code&gt;&quot;jdk.VMInfo#period&quot;&lt;/code&gt;). The value is a textual representation of the settings value (for example, &lt;code&gt;&quot;60 s&quot;&lt;/code&gt;).</source>
          <target state="translated">在名称 &lt;code&gt;Map&lt;/code&gt; 是事件名称和由分离设置名称 &lt;code&gt;&quot;#&quot;&lt;/code&gt; （例如， &lt;code&gt;&quot;jdk.VMInfo#period&quot;&lt;/code&gt; ）。该值是设置值的文本表示形式（例如 &lt;code&gt;&quot;60 s&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="82ff8cd92cff0415e94e8baa63e9f434898b77cd" translate="yes" xml:space="preserve">
          <source>The name in the binding is to be resolved relative to the event source &lt;code&gt;getEventContext()&lt;/code&gt;. The object returned by &lt;code&gt;Binding.getObject()&lt;/code&gt; may be null if such information is unavailable.</source>
          <target state="translated">绑定中的名称将相对于事件源 &lt;code&gt;getEventContext()&lt;/code&gt; 进行解析。如果此类信息不可用，则 &lt;code&gt;Binding.getObject()&lt;/code&gt; 返回的对象可以为null。</target>
        </trans-unit>
        <trans-unit id="cbc5a2efbe42dd82d80c8a01dba24d15cfd7bf55" translate="yes" xml:space="preserve">
          <source>The name is a &lt;code&gt;String&lt;/code&gt; that corresponds to the name of one of the static &lt;code&gt;SystemColor&lt;/code&gt; fields in the &lt;code&gt;
 SystemColor&lt;/code&gt; class. A name-color pair is created for every such &lt;code&gt;SystemColor&lt;/code&gt; field.</source>
          <target state="translated">该名称是一个 &lt;code&gt;String&lt;/code&gt; ，它对应于 &lt;code&gt; SystemColor&lt;/code&gt; 类中的静态 &lt;code&gt;SystemColor&lt;/code&gt; 字段之一的名称。将为每个此类 &lt;code&gt;SystemColor&lt;/code&gt; 字段创建一个名称-颜色对。</target>
        </trans-unit>
        <trans-unit id="e9f47c549f8f573a54eea31230a13704fa78151b" translate="yes" xml:space="preserve">
          <source>The name is a URL, or a name to be resolved relative to the initial context, or if the first character of the name is &quot;.&quot;, the name is relative to the context in which the link is bound.</source>
          <target state="translated">名称是一个URL,或者是一个相对于初始上下文要解析的名称,如果名称的第一个字符是&quot;.&quot;,则该名称是相对于链接所绑定的上下文而言的。</target>
        </trans-unit>
        <trans-unit id="61679979254cb486e82d74694afb2ea52ea52989" translate="yes" xml:space="preserve">
          <source>The name is finally normalized using normalization form KD, as described in the Unicode Standard and UAX #15</source>
          <target state="translated">最后使用归一化形式KD对名称进行归一化,如Unicode标准和UMX #15所述。</target>
        </trans-unit>
        <trans-unit id="b349c489e66c9815159d8237cb45765e03ef77a1" translate="yes" xml:space="preserve">
          <source>The name is provided as a byte array. This byte array should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure appears in the documentation for &lt;a href=&quot;#setIssuerNames(java.util.Collection)&quot;&gt;&lt;code&gt;setIssuerNames(Collection names)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名称以字节数组形式提供。此字节数组应包含一个X.501中定义的DER编码的专有名称。此结构的ASN.1注释出现在&lt;a href=&quot;#setIssuerNames(java.util.Collection)&quot;&gt; &lt;code&gt;setIssuerNames(Collection names)&lt;/code&gt; &lt;/a&gt;的文档中。</target>
        </trans-unit>
        <trans-unit id="6b968c3e471f5cb8bcebdf43477ac33f88899fb6" translate="yes" xml:space="preserve">
          <source>The name is provided as a byte array. This byte array should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure appears in the documentation for &lt;a href=&quot;x509crlselector#setIssuerNames-java.util.Collection-&quot;&gt;&lt;code&gt;setIssuerNames(Collection names)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名称以字节数组形式提供。该字节数组应包含单个DER编码的专有名称，如X.501中所定义。该结构的ASN.1注释出现在&lt;a href=&quot;x509crlselector#setIssuerNames-java.util.Collection-&quot;&gt; &lt;code&gt;setIssuerNames(Collection names)&lt;/code&gt; &lt;/a&gt;的文档中。</target>
        </trans-unit>
        <trans-unit id="d62c30e2e16759f0de7f148ea8688978e4f0848c" translate="yes" xml:space="preserve">
          <source>The name is provided as a byte array. This byte array should contain the DER encoded name, as it would appear in the GeneralName structure defined in RFC 3280 and X.509. The ASN.1 definition of this structure appears in the documentation for &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-byte:A-&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名称以字节数组形式提供。该字节数组应包含DER编码的名称，就像在RFC 3280和X.509中定义的GeneralName结构中出现的那样。该结构的ASN.1定义出现在&lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-byte:A-&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt;的文档中。</target>
        </trans-unit>
        <trans-unit id="33c854a97c7935726ec4f0b93f3dec6e0b700626" translate="yes" xml:space="preserve">
          <source>The name is provided as a byte array. This byte array should contain the DER encoded name, as it would appear in the GeneralName structure defined in RFC 3280 and X.509. The encoded byte array should only contain the encoded value of the name, and should not include the tag associated with the name in the GeneralName structure. The ASN.1 definition of this structure appears below.</source>
          <target state="translated">名称是以字节数组的形式提供的,这个字节数组应该包含DER编码的名称,就像RFC 3280和X.509中定义的GeneralName结构一样。这个字节数组应包含DER编码的名称,因为它将出现在RFC 3280和X.509定义的GeneralName结构中。编码后的字节数组应仅包含名称的编码值,而不应包括与 GeneralName 结构中的名称相关联的标记。该结构的 ASN.1 定义如下。</target>
        </trans-unit>
        <trans-unit id="1a10bc1a5f5762d2806cabd36dd335f7b09913a3" translate="yes" xml:space="preserve">
          <source>The name is provided as a byte array. This byte array should contain the DER encoded name, as it would appear in the GeneralName structure defined in RFC 5280 and X.509. The ASN.1 definition of this structure appears in the documentation for &lt;a href=&quot;#addSubjectAlternativeName(int,byte%5B%5D)&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">名称以字节数组形式提供。该字节数组应包含DER编码的名称，就像在RFC 5280和X.509中定义的GeneralName结构中出现的那样。该结构的ASN.1定义出现在&lt;a href=&quot;#addSubjectAlternativeName(int,byte%5B%5D)&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt;的文档中。</target>
        </trans-unit>
        <trans-unit id="75d5f67ff4edcf9b1ce9b4351faaa0aba31a87d7" translate="yes" xml:space="preserve">
          <source>The name is provided as a byte array. This byte array should contain the DER encoded name, as it would appear in the GeneralName structure defined in RFC 5280 and X.509. The encoded byte array should only contain the encoded value of the name, and should not include the tag associated with the name in the GeneralName structure. The ASN.1 definition of this structure appears below.</source>
          <target state="translated">该名称以字节数组的形式提供。这个字节数组应包含DER编码的名称,因为它将出现在RFC 5280和X.509定义的GeneralName结构中。编码后的字节数组应仅包含名称的编码值,而不应包括与 GeneralName 结构中的名称相关联的标记。该结构的 ASN.1 定义如下。</target>
        </trans-unit>
        <trans-unit id="5b4157e3b20b0d08a63e804105869ab9b80b570f" translate="yes" xml:space="preserve">
          <source>The name is provided in string format. &lt;a href=&quot;http://www.ietf.org/rfc/rfc822.txt&quot;&gt;RFC 822&lt;/a&gt;, DNS, and URI names use the well-established string formats for those types (subject to the restrictions included in RFC 3280). IPv4 address names are supplied using dotted quad notation. OID address names are represented as a series of nonnegative integers separated by periods. And directory names (distinguished names) are supplied in RFC 2253 format. No standard string format is defined for otherNames, X.400 names, EDI party names, IPv6 address names, or any other type of names. They should be specified using the &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-byte:A-&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">名称以字符串格式提供。&lt;a href=&quot;http://www.ietf.org/rfc/rfc822.txt&quot;&gt;RFC 822&lt;/a&gt;，DNS和URI名称对这些类型使用公认的字符串格式（受RFC 3280中包含的限制）。 IPv4地址名称使用点分四元符号提供。 OID地址名称表示为一系列用句点分隔的非负整数。目录名称（专有名称）以RFC 2253格式提供。没有为otherNames，X.400名称，EDI参与者名称，IPv6地址名称或任何其他类型的名称定义标准的字符串格式。应该使用&lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-byte:A-&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt;方法指定它们。</target>
        </trans-unit>
        <trans-unit id="6e0b384b9f6ffae73c057fe6ed3c6f704e7e1ee9" translate="yes" xml:space="preserve">
          <source>The name is provided in string format. &lt;a href=&quot;http://www.ietf.org/rfc/rfc822.txt&quot;&gt;RFC 822&lt;/a&gt;, DNS, and URI names use the well-established string formats for those types (subject to the restrictions included in RFC 5280). IPv4 address names are supplied using dotted quad notation. OID address names are represented as a series of nonnegative integers separated by periods. And directory names (distinguished names) are supplied in RFC 2253 format. No standard string format is defined for otherNames, X.400 names, EDI party names, IPv6 address names, or any other type of names. They should be specified using the &lt;a href=&quot;#addSubjectAlternativeName(int,byte%5B%5D)&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">名称以字符串格式提供。&lt;a href=&quot;http://www.ietf.org/rfc/rfc822.txt&quot;&gt;RFC 822&lt;/a&gt;，DNS和URI名称对这些类型使用公认的字符串格式（受RFC 5280中包含的限制）。 IPv4地址名称使用点分四元符号提供。 OID地址名称表示为一系列用句点分隔的非负整数。目录名称（专有名称）以RFC 2253格式提供。没有为otherNames，X.400名称，EDI参与者名称，IPv6地址名称或任何其他类型的名称定义标准的字符串格式。应该使用&lt;a href=&quot;#addSubjectAlternativeName(int,byte%5B%5D)&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt;方法指定它们。</target>
        </trans-unit>
        <trans-unit id="2d00b61b074cad56183a19ceb332126727471201" translate="yes" xml:space="preserve">
          <source>The name is provided in string format. &lt;a href=&quot;https://www.ietf.org/rfc/rfc822.txt&quot;&gt;RFC 822&lt;/a&gt;, DNS, and URI names use the well-established string formats for those types (subject to the restrictions included in RFC 5280). IPv4 address names are supplied using dotted quad notation. OID address names are represented as a series of nonnegative integers separated by periods. And directory names (distinguished names) are supplied in RFC 2253 format. No standard string format is defined for otherNames, X.400 names, EDI party names, IPv6 address names, or any other type of names. They should be specified using the &lt;a href=&quot;#addSubjectAlternativeName(int,byte%5B%5D)&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">名称以字符串格式提供。&lt;a href=&quot;https://www.ietf.org/rfc/rfc822.txt&quot;&gt;RFC 822&lt;/a&gt;，DNS和URI名称对这些类型使用公认的字符串格式（受RFC 5280中包含的限制）。 IPv4地址名称使用点分四元符号提供。 OID地址名称表示为一系列用句点分隔的非负整数。目录名称（专有名称）以RFC 2253格式提供。没有为otherNames，X.400名称，EDI参与者名称，IPv6地址名称或任何其他类型的名称定义标准的字符串格式。应该使用&lt;a href=&quot;#addSubjectAlternativeName(int,byte%5B%5D)&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt;方法指定它们。</target>
        </trans-unit>
        <trans-unit id="07a1eed59f77ed056220265851c4bb840c68eb88" translate="yes" xml:space="preserve">
          <source>The name is provided in string format. RFC 822, DNS, and URI names use the well-established string formats for those types (subject to the restrictions included in RFC 3280). IPv4 address names are supplied using dotted quad notation. OID address names are represented as a series of nonnegative integers separated by periods. And directory names (distinguished names) are supplied in RFC 2253 format. No standard string format is defined for otherNames, X.400 names, EDI party names, IPv6 address names, or any other type of names. They should be specified using the &lt;a href=&quot;x509certselector#addPathToName-int-byte:A-&quot;&gt;&lt;code&gt;addPathToName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">名称以字符串格式提供。 RFC 822，DNS和URI名称对这些类型使用公认的字符串格式（受RFC 3280中包含的限制）。 IPv4地址名称使用点分四元符号提供。 OID地址名称表示为一系列用句点分隔的非负整数。目录名称（专有名称）以RFC 2253格式提供。没有为otherNames，X.400名称，EDI参与者名称，IPv6地址名称或任何其他类型的名称定义标准的字符串格式。应该使用&lt;a href=&quot;x509certselector#addPathToName-int-byte:A-&quot;&gt; &lt;code&gt;addPathToName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt;方法指定它们。</target>
        </trans-unit>
        <trans-unit id="6019cd3e2b1f21c1ba8c7668ed41fe65ddab9695" translate="yes" xml:space="preserve">
          <source>The name is provided in string format. RFC 822, DNS, and URI names use the well-established string formats for those types (subject to the restrictions included in RFC 5280). IPv4 address names are supplied using dotted quad notation. OID address names are represented as a series of nonnegative integers separated by periods. And directory names (distinguished names) are supplied in RFC 2253 format. No standard string format is defined for otherNames, X.400 names, EDI party names, IPv6 address names, or any other type of names. They should be specified using the &lt;a href=&quot;#addPathToName(int,byte%5B%5D)&quot;&gt;&lt;code&gt;addPathToName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">名称以字符串格式提供。RFC 822，DNS和URI名称对这些类型使用公认的字符串格式（受RFC 5280中包含的限制）。IPv4地址名称使用点分四元符号提供。OID地址名称表示为一系列用句点分隔的非负整数。目录名称（专有名称）以RFC 2253格式提供。没有为otherNames，X.400名称，EDI参与者名称，IPv6地址名称或任何其他类型的名称定义标准的字符串格式。应该使用&lt;a href=&quot;#addPathToName(int,byte%5B%5D)&quot;&gt; &lt;code&gt;addPathToName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt;方法指定它们。</target>
        </trans-unit>
        <trans-unit id="062b23aadb7d34d7c8b4e9c121e5a95a465b4012" translate="yes" xml:space="preserve">
          <source>The name is the name of the property (&quot;java.home&quot;, &quot;os.name&quot;, etc). The naming convention follows the hierarchical property naming convention. Also, an asterisk may appear at the end of the name, following a &quot;.&quot;, or by itself, to signify a wildcard match. For example: &quot;java.*&quot; and &quot;*&quot; signify a wildcard match, while &quot;*java&quot; and &quot;a*b&quot; do not.</source>
          <target state="translated">名称是属性的名称(&quot;java.home&quot;、&quot;os.name &quot;等)。命名惯例遵循层次化的属性命名惯例。另外,名字的末尾可以出现一个星号,跟在&quot;.&quot;后面,或者自己出现,表示通配符匹配。例如:&quot;java.*&quot;和 &quot;java.*&quot;。&quot;java.*&quot;和 &quot;*&quot;表示通配符,而 &quot;*java &quot;和 &quot;a*b &quot;则不表示通配符。</target>
        </trans-unit>
        <trans-unit id="5739ea579054ab19a148abf7bf72c35ee5d92488" translate="yes" xml:space="preserve">
          <source>The name must be a valid Java identifier (for example, &lt;code&gt;&quot;maxThroughput&quot;&lt;/code&gt;). See 3.8 Java Language Specification for more information.</source>
          <target state="translated">该名称必须是有效的Java标识符（例如 &lt;code&gt;&quot;maxThroughput&quot;&lt;/code&gt; ）。有关更多信息，请参见3.8 Java语言规范。</target>
        </trans-unit>
        <trans-unit id="53ca24ddb66b7f4c546487a257cc2792abfc1758" translate="yes" xml:space="preserve">
          <source>The name must be a valid identifiers in the Java language (for example, &lt;code&gt;&quot;com.example.MyEvent&quot;&lt;/code&gt; for an event class or &lt;code&gt;&quot;message&quot;&lt;/code&gt; for an event field).</source>
          <target state="translated">该名称必须是Java语言中的有效标识符（例如，用于事件类的 &lt;code&gt;&quot;com.example.MyEvent&quot;&lt;/code&gt; 或用于事件字段的 &lt;code&gt;&quot;message&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="bfa54156ec30f9bc348736a478f8a06c98b8284b" translate="yes" xml:space="preserve">
          <source>The name must conform to RFC 2965. That means it can contain only ASCII alphanumeric characters and cannot contain commas, semicolons, or white space or begin with a $ character. The cookie's name cannot be changed after creation.</source>
          <target state="translated">名称必须符合RFC 2965的要求。这意味着它只能包含ASCII字母数字字符,不能包含逗号、分号或空白,也不能以$字符开头。Cookie的名称在创建后不能更改。</target>
        </trans-unit>
        <trans-unit id="996c6de93ebccc7b84117ecaee62f38d7311a913" translate="yes" xml:space="preserve">
          <source>The name of DTD; i.e., the name immediately following the &lt;code&gt;DOCTYPE&lt;/code&gt; keyword.</source>
          <target state="translated">DTD的名称；即，紧随 &lt;code&gt;DOCTYPE&lt;/code&gt; 关键字的名称。</target>
        </trans-unit>
        <trans-unit id="a0b966f42feea9c33f3253f299c07faeb601d6d2" translate="yes" xml:space="preserve">
          <source>The name of a generic type does not include any reference to its formal type parameters. For example, the fully qualified name of the interface &lt;code&gt;java.util.Set&amp;lt;E&amp;gt;&lt;/code&gt; is &quot;&lt;code&gt;java.util.Set&lt;/code&gt;&quot;. Nested types use &quot;&lt;code&gt;.&lt;/code&gt;&quot; as a separator, as in &quot;&lt;code&gt;java.util.Map.Entry&lt;/code&gt;&quot;.</source>
          <target state="translated">通用类型的名称不包含对其正式类型参数的任何引用。例如，接口 &lt;code&gt;java.util.Set&amp;lt;E&amp;gt;&lt;/code&gt; 标准名称是&amp;ldquo; &lt;code&gt;java.util.Set&lt;/code&gt; &amp;rdquo;。嵌套类型使用&amp;ldquo; &lt;code&gt;.&lt;/code&gt; &amp;rdquo;作为分隔符，例如&amp;ldquo; &lt;code&gt;java.util.Map.Entry&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="586a3e128f97fabfbfbfd557a68c800759fa8523" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the bound server name for an unbound server.</source>
          <target state="translated">指定未绑定服务器的绑定服务器名称的属性名称。</target>
        </trans-unit>
        <trans-unit id="f50fffd870d393ff1d83992d3375d9ebcd02098f" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the bound server name for an unbound server. A server is created as an unbound server by setting the &lt;code&gt;serverName&lt;/code&gt; argument in &lt;a href=&quot;#createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)&quot;&gt;&lt;code&gt;createSaslServer(java.lang.String, java.lang.String, java.lang.String, java.util.Map&amp;lt;java.lang.String, ?&amp;gt;, javax.security.auth.callback.CallbackHandler)&lt;/code&gt;&lt;/a&gt; as null. The property contains the bound host name after the authentication exchange has completed. It is only available on the server side.</source>
          <target state="translated">一个属性的名称，用于指定未绑定服务器的绑定服务器名称。服务器是通过设置作为未结合的服务器创建 &lt;code&gt;serverName&lt;/code&gt; 在参数&lt;a href=&quot;#createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)&quot;&gt; &lt;code&gt;createSaslServer(java.lang.String, java.lang.String, java.lang.String, java.util.Map&amp;lt;java.lang.String, ?&amp;gt;, javax.security.auth.callback.CallbackHandler)&lt;/code&gt; &lt;/a&gt;为null。身份验证交换完成后，该属性包含绑定的主机名。它仅在服务器端可用。</target>
        </trans-unit>
        <trans-unit id="6dc7a8ad79c2d57c4b3606f2370da251a94ec44b" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the bound server name for an unbound server. A server is created as an unbound server by setting the &lt;code&gt;serverName&lt;/code&gt; argument in &lt;a href=&quot;sasl#createSaslServer-java.lang.String-java.lang.String-java.lang.String-java.util.Map-javax.security.auth.callback.CallbackHandler-&quot;&gt;&lt;code&gt;createSaslServer(java.lang.String, java.lang.String, java.lang.String, java.util.Map&amp;lt;java.lang.String, ?&amp;gt;, javax.security.auth.callback.CallbackHandler)&lt;/code&gt;&lt;/a&gt; as null. The property contains the bound host name after the authentication exchange has completed. It is only available on the server side.</source>
          <target state="translated">一个属性的名称，它指定未绑定服务器的绑定服务器名称。通过在&lt;a href=&quot;sasl#createSaslServer-java.lang.String-java.lang.String-java.lang.String-java.util.Map-javax.security.auth.callback.CallbackHandler-&quot;&gt; &lt;code&gt;createSaslServer(java.lang.String, java.lang.String, java.lang.String, java.util.Map&amp;lt;java.lang.String, ?&amp;gt;, javax.security.auth.callback.CallbackHandler)&lt;/code&gt; &lt;/a&gt;设置 &lt;code&gt;serverName&lt;/code&gt; 参数）将服务器创建为未绑定服务器.security.auth.callback.CallbackHandler）为null。身份验证交换完成后，该属性包含绑定的主机名。它仅在服务器端可用。</target>
        </trans-unit>
        <trans-unit id="2b55f9b70a02e260dfa3c61e0194b4235bd08a1d" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the cipher strength to use.</source>
          <target state="translated">指定要使用的密码强度的属性名称。</target>
        </trans-unit>
        <trans-unit id="31543f2d17616a509f1542da77a0190a933ae420" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the cipher strength to use. The property contains a comma-separated, ordered list of cipher strength values that the client or server is willing to support. A strength value is one of</source>
          <target state="translated">指定要使用的密码强度的属性的名称。该属性包含一个以逗号分隔的、客户机或服务器愿意支持的密码强度值的有序列表。一个强度值是以下之一</target>
        </trans-unit>
        <trans-unit id="a910b5b12f169a8c9e6299db186743853fa9fd06" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the credentials to use.</source>
          <target state="translated">指定要使用的凭证的属性名称。</target>
        </trans-unit>
        <trans-unit id="55e2920c36428c57f886e32853d1f39a8e1f86e0" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the credentials to use. The property contains a mechanism-specific Java credential object. Mechanism implementations may examine the value of this property to determine whether it is a class that they support. The property may be used to supply credentials to a mechanism that supports delegated authentication.</source>
          <target state="translated">指定要使用的凭证的属性名称。该属性包含一个机制特定的Java凭证对象。机制实现可以检查该属性的值,以确定它是否是它们支持的类。该属性可用于向支持委托认证的机制提供凭证。</target>
        </trans-unit>
        <trans-unit id="a2501b67874585ca960fda8402bd14c813cfae62" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the maximum size of the raw send buffer in bytes of &lt;code&gt;SaslClient&lt;/code&gt;/&lt;code&gt;SaslServer&lt;/code&gt;.</source>
          <target state="translated">一个属性名称，该属性名称指定原始发送缓冲区的最大大小，以 &lt;code&gt;SaslClient&lt;/code&gt; / &lt;code&gt;SaslServer&lt;/code&gt; 的字节为单位。</target>
        </trans-unit>
        <trans-unit id="56b920153e04b83edb9986c955cfd7fb277a67ff" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the maximum size of the raw send buffer in bytes of &lt;code&gt;SaslClient&lt;/code&gt;/&lt;code&gt;SaslServer&lt;/code&gt;. The property contains the string representation of an integer. The value of this property is negotiated between the client and server during the authentication exchange.</source>
          <target state="translated">一个属性的名称，它指定原始发送缓冲区的最大大小（以 &lt;code&gt;SaslClient&lt;/code&gt; / &lt;code&gt;SaslServer&lt;/code&gt; 的字节为单位）。该属性包含整数的字符串表示形式。在身份验证交换期间，此属性的值在客户端和服务器之间协商。</target>
        </trans-unit>
        <trans-unit id="50ebc98595175a09096a08393ea23c009230db69" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the maximum size of the receive buffer in bytes of &lt;code&gt;SaslClient&lt;/code&gt;/&lt;code&gt;SaslServer&lt;/code&gt;.</source>
          <target state="translated">一个属性名称，该属性名称指定接收缓冲区的最大大小，以 &lt;code&gt;SaslClient&lt;/code&gt; / &lt;code&gt;SaslServer&lt;/code&gt; 的字节为单位。</target>
        </trans-unit>
        <trans-unit id="5e65556f8d43cf173606f56669dc9e1376a6357a" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the maximum size of the receive buffer in bytes of &lt;code&gt;SaslClient&lt;/code&gt;/&lt;code&gt;SaslServer&lt;/code&gt;. The property contains the string representation of an integer.</source>
          <target state="translated">一个属性名称，该属性名称指定接收缓冲区的最大大小，以 &lt;code&gt;SaslClient&lt;/code&gt; / &lt;code&gt;SaslServer&lt;/code&gt; 的字节为单位。该属性包含整数的字符串表示形式。</target>
        </trans-unit>
        <trans-unit id="1a5b3e7cc0cb1dea4bf1a55bf0bf2a3076634087" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the quality-of-protection to use.</source>
          <target state="translated">指定要使用的保护质量的属性名称。</target>
        </trans-unit>
        <trans-unit id="7c2208ad557360dbabcdcb1796613d7ab45b49c2" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies the quality-of-protection to use. The property contains a comma-separated, ordered list of quality-of-protection values that the client or server is willing to support. A qop value is one of</source>
          <target state="translated">指定要使用的保护质量的属性名称。该属性包含一个以逗号分隔的、有序的客户端或服务器愿意支持的保护质量值列表。qop 值是以下其中之一</target>
        </trans-unit>
        <trans-unit id="cd8f19eb65ae48b796032fae90788d4c582fd1e0" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms susceptible to active (non-dictionary) attacks are not permitted.</source>
          <target state="translated">规定是否不允许易受主动(非字典)攻击的机制的属性名称。</target>
        </trans-unit>
        <trans-unit id="b8d78b06c714a7846430cd85289564a8ba25548a" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms susceptible to active (non-dictionary) attacks are not permitted. The property contains &lt;code&gt;&quot;true&quot;&lt;/code&gt; if mechanisms susceptible to active attacks are not permitted; &lt;code&gt;&quot;false&quot;&lt;/code&gt; if such mechanisms are permitted. The default is &lt;code&gt;&quot;false&quot;&lt;/code&gt;.</source>
          <target state="translated">一个属性的名称，它指定是否不允许易受主动（非字典）攻击的机制。如果不允许容易受到主动攻击的机制，则该属性包含 &lt;code&gt;&quot;true&quot;&lt;/code&gt; ；如果允许这种机制，则为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。默认值为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ef96d0876dd10348f8c1f12dd21e6f2560d1563" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms susceptible to passive dictionary attacks are not permitted.</source>
          <target state="translated">指定是否不允许易受被动字典攻击的机制的属性名称。</target>
        </trans-unit>
        <trans-unit id="7ccacffcd7e795c6f2158de9fc95195180770467" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms susceptible to passive dictionary attacks are not permitted. The property contains &lt;code&gt;&quot;true&quot;&lt;/code&gt; if mechanisms susceptible to dictionary attacks are not permitted; &lt;code&gt;&quot;false&quot;&lt;/code&gt; if such mechanisms are permitted. The default is &lt;code&gt;&quot;false&quot;&lt;/code&gt;.</source>
          <target state="translated">属性的名称，用于指定是否不允许易受被动字典攻击的机制。如果不允许易受字典攻击的机制，则该属性包含 &lt;code&gt;&quot;true&quot;&lt;/code&gt; ；如果允许这种机制，则为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。默认值为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="abaa82f841676a61897a58942179bb4b525225bf" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms susceptible to simple plain passive attacks (e.g., &quot;PLAIN&quot;) are not permitted.</source>
          <target state="translated">属性的名称,指定是否不允许易受简单的普通被动攻击的机制(如 &quot;PLAIN&quot;)。</target>
        </trans-unit>
        <trans-unit id="6b6e642921edcbb0aeb070dc85a3fae28c660e0e" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms susceptible to simple plain passive attacks (e.g., &quot;PLAIN&quot;) are not permitted. The property contains &lt;code&gt;&quot;true&quot;&lt;/code&gt; if such mechanisms are not permitted; &lt;code&gt;&quot;false&quot;&lt;/code&gt; if such mechanisms are permitted. The default is &lt;code&gt;&quot;false&quot;&lt;/code&gt;.</source>
          <target state="translated">属性的名称，它指定是否不允许易受简单的普通被动攻击的机制（例如&amp;ldquo; PLAIN&amp;rdquo;）。如果不允许这种机制，则该属性包含 &lt;code&gt;&quot;true&quot;&lt;/code&gt; ；如果允许这种机制，则为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。默认值为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2be230b027b47e8ceacad313b7a595b8ba10cde" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms that accept anonymous login are not permitted.</source>
          <target state="translated">指定是否不允许接受匿名登录的机制的属性名称。</target>
        </trans-unit>
        <trans-unit id="f4fcba71a86df30c02372fc37f3f03794d3958d1" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms that accept anonymous login are not permitted. The property contains &lt;code&gt;&quot;true&quot;&lt;/code&gt; if mechanisms that accept anonymous login are not permitted; &lt;code&gt;&quot;false&quot;&lt;/code&gt; if such mechanisms are permitted. The default is &lt;code&gt;&quot;false&quot;&lt;/code&gt;.</source>
          <target state="translated">属性的名称，用于指定是否不允许接受匿名登录的机制。如果不允许接受匿名登录的机制，则该属性包含 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 否则，该属性包含&amp;ldquo; true&amp;rdquo;。如果允许这种机制，则为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。默认值为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="011a1d9f0a1619c5f4de3beca91ad9ce6660674c" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms that implement forward secrecy between sessions are required.</source>
          <target state="translated">指定是否需要在会话之间实现前向保密的机制的属性名称。</target>
        </trans-unit>
        <trans-unit id="06776ce760218a8bb3c69a553b99504e2368a22b" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms that implement forward secrecy between sessions are required. Forward secrecy means that breaking into one session will not automatically provide information for breaking into future sessions. The property contains &lt;code&gt;&quot;true&quot;&lt;/code&gt; if mechanisms that implement forward secrecy between sessions are required; &lt;code&gt;&quot;false&quot;&lt;/code&gt; if such mechanisms are not required. The default is &lt;code&gt;&quot;false&quot;&lt;/code&gt;.</source>
          <target state="translated">属性的名称，它指定是否需要在会话之间实现前向保密的机制。前向保密性意味着进入一个会话不会自动提供有关进入未来会话的信息。如果需要在会话之间实现前向保密的机制，则该属性包含 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 否则，该属性包含&amp;ldquo; true&amp;rdquo;。如果不需要这种机制，则为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。默认值为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ab394d56b4345203ccd73fb6be21a6d4fbda32a" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms that pass client credentials are required.</source>
          <target state="translated">指定是否需要传递客户端凭证的机制的属性名称。</target>
        </trans-unit>
        <trans-unit id="0ce55bb11912a17b35cd30b5ec6b2d3629fbdf83" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether mechanisms that pass client credentials are required. The property contains &lt;code&gt;&quot;true&quot;&lt;/code&gt; if mechanisms that pass client credentials are required; &lt;code&gt;&quot;false&quot;&lt;/code&gt; if such mechanisms are not required. The default is &lt;code&gt;&quot;false&quot;&lt;/code&gt;.</source>
          <target state="translated">属性的名称，用于指定是否需要通过客户端凭据的机制。如果需要通过客户端凭据的机制，则该属性包含 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 否则，该属性包含&amp;ldquo; true&amp;rdquo;。如果不需要这种机制，则为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。默认值为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="576ff001ae8f0589bede75beb4f725c2066586f4" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether the server must authenticate to the client.</source>
          <target state="translated">指定服务器是否必须对客户端进行认证的属性名称。</target>
        </trans-unit>
        <trans-unit id="11148564aae0a7b5ceb776e3ad9122d4f8cc5031" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether the server must authenticate to the client. The property contains &lt;code&gt;&quot;true&quot;&lt;/code&gt; if the server must authenticate the to client; &lt;code&gt;&quot;false&quot;&lt;/code&gt; otherwise. The default is &lt;code&gt;&quot;false&quot;&lt;/code&gt;.</source>
          <target state="translated">一个属性名称，它指定服务器是否必须向客户端进行身份验证。如果服务器必须对客户端进行身份验证，则该属性包含 &lt;code&gt;&quot;true&quot;&lt;/code&gt; 否则，属性为&amp;ldquo; true&amp;rdquo;。否则为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。默认值为 &lt;code&gt;&quot;false&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="832866552eccab3a6d070c63001ca0fadd95eee1" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether to reuse previously authenticated session information.</source>
          <target state="translated">指定是否重用之前认证的会话信息的属性名称。</target>
        </trans-unit>
        <trans-unit id="f8afde55a67986c5517be4ac59b9842900fb0c1e" translate="yes" xml:space="preserve">
          <source>The name of a property that specifies whether to reuse previously authenticated session information. The property contains &quot;true&quot; if the mechanism implementation may attempt to reuse previously authenticated session information; it contains &quot;false&quot; if the implementation must not reuse previously authenticated session information. A setting of &quot;true&quot; serves only as a hint: it does not necessarily entail actual reuse because reuse might not be possible due to a number of reasons, including, but not limited to, lack of mechanism support for reuse, expiration of reusable information, and the peer's refusal to support reuse. The property's default value is &quot;false&quot;. The value of this constant is &quot;javax.security.sasl.reuse&quot;. Note that all other parameters and properties required to create a SASL client/server instance must be provided regardless of whether this property has been supplied. That is, you cannot supply any less information in anticipation of reuse. Mechanism implementations that support reuse might allow customization of its implementation, for factors such as cache size, timeouts, and criteria for reusability. Such customizations are implementation-dependent.</source>
          <target state="translated">属性的名称,用于指定是否重用先前认证的会话信息。如果机制实现可以尝试重用先前认证的会话信息,则该属性包含 &quot;true&quot;;如果实现不得重用先前认证的会话信息,则该属性包含 &quot;false&quot;。设置为 &quot;true &quot;仅作为一种提示:它不一定意味着实际的重用,因为重用可能由于多种原因而无法实现,这些原因包括但不限于缺乏对重用的机制支持、可重用信息的到期以及对等体拒绝支持重用。该属性的默认值为 &quot;false&quot;。这个常量的值是 &quot;javax.security.sasl.reuse&quot;。请注意,无论是否提供了这个属性,都必须提供创建SASL客户/服务器实例所需的所有其他参数和属性。也就是说,你不能在预期重用的情况下少提供任何信息。支持重用的机制实现可能允许对其实现进行自定义,对于诸如缓存大小、超时和可重用性的标准等因素。这种定制化是依赖于实现的。</target>
        </trans-unit>
        <trans-unit id="883225677e8f8e5b399c448f823a43abbfc061ea" translate="yes" xml:space="preserve">
          <source>The name of a resource is a '&lt;code&gt;/&lt;/code&gt;'-separated path name that identifies the resource.</source>
          <target state="translated">资源的名称是用' &lt;code&gt;/&lt;/code&gt; '分隔的路径名，用于标识资源。</target>
        </trans-unit>
        <trans-unit id="a515910aa70c3ebcc7ce4ca607dd0dd4f6d0da22" translate="yes" xml:space="preserve">
          <source>The name of a resource is a &lt;code&gt;/&lt;/code&gt;-separated path name that identifies the resource.</source>
          <target state="translated">资源的名称是一个 &lt;code&gt;/&lt;/code&gt; 分隔的路径名，用于标识资源。</target>
        </trans-unit>
        <trans-unit id="319adc5d83fce6f79c34d9545b7888dbf5045286" translate="yes" xml:space="preserve">
          <source>The name of a run-time parameter.</source>
          <target state="translated">运行时参数的名称。</target>
        </trans-unit>
        <trans-unit id="ef4cac5600d37eabcbd751e94b89085faefd95e6" translate="yes" xml:space="preserve">
          <source>The name of a run-time parameter. See the name attribute definition in HTML 4.0.</source>
          <target state="translated">运行时参数的名称。参见HTML 4.0中的name属性定义。</target>
        </trans-unit>
        <trans-unit id="5b3ecc612b49df85d98b697f4e1750b6def88652" translate="yes" xml:space="preserve">
          <source>The name of a runtime permission required to successfully invoke the &lt;a href=&quot;#getLookup()&quot;&gt;&lt;code&gt;getLookup()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">成功调用&lt;a href=&quot;#getLookup()&quot;&gt; &lt;code&gt;getLookup()&lt;/code&gt; &lt;/a&gt;方法所需的运行时权限名称。</target>
        </trans-unit>
        <trans-unit id="6c6bde9766a09b2f3be7c967965b9ca843d70a67" translate="yes" xml:space="preserve">
          <source>The name of a type declared for the associated element or attribute, or &lt;code&gt;null&lt;/code&gt; if unknown.</source>
          <target state="translated">为关联的元素或属性声明的类型的名称；如果未知，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62982d29904d31c3a0cbb4a261e01b9f577843f4" translate="yes" xml:space="preserve">
          <source>The name of each record component must be distinct from the names of all other record components.</source>
          <target state="translated">每个记录组件的名称必须与所有其他记录组件的名称不同。</target>
        </trans-unit>
        <trans-unit id="fe25ce1fcf2cee52aa157f625ee02fa6e4aef934" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#defaultValue&quot;&gt;&lt;code&gt;
 defaultValue&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#defaultValue&quot;&gt; &lt;code&gt; defaultValue&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="02a87ad296b6a16e86ed792fcd23b2d436a8aa38" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#defaultValue&quot;&gt;&lt;code&gt;defaultValue&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#defaultValue&quot;&gt; &lt;code&gt;defaultValue&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="fb29c322db8f3271ac67d4a85fa88b1e19ea74b5" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;&lt;code&gt;
 immutableInfo&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#immutableInfo&quot;&gt; &lt;code&gt; immutableInfo&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="21a7183405f994f4abb54ab06bb8d0ca6abd1b33" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#immutableInfo&quot;&gt;&lt;code&gt;immutableInfo&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#immutableInfo&quot;&gt; &lt;code&gt;immutableInfo&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="28b747c7a3c7144aafa0ddadca50daced5ec5e60" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#interfaceClassName&quot;&gt;&lt;code&gt;
 interfaceClassName&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#interfaceClassName&quot;&gt; &lt;code&gt; interfaceClassName&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="4cae14c94ea437e28b95eb63b65b9dc19f3b9961" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#interfaceClassName&quot;&gt;&lt;code&gt;interfaceClassName&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#interfaceClassName&quot;&gt; &lt;code&gt;interfaceClassName&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="07f75e785cf9779fd44ac44a3329126cabda2bbe" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#legalValues&quot;&gt;&lt;code&gt;
 legalValues&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#legalValues&quot;&gt; &lt;code&gt; legalValues&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="9fe458bf94e08c2715db3ba7353f7b20a329fde6" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#legalValues&quot;&gt;&lt;code&gt;legalValues&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#legalValues&quot;&gt; &lt;code&gt;legalValues&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="95ff2b82f6409c0303045938f829f414f57885eb" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#maxValue&quot;&gt;&lt;code&gt;
 maxValue&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#maxValue&quot;&gt; &lt;code&gt; maxValue&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="7f056bc651ef11844698474a4860bfd2b3c8422c" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#maxValue&quot;&gt;&lt;code&gt;maxValue&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#maxValue&quot;&gt; &lt;code&gt;maxValue&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="20b8df24d89b15e474968793eeae1e9cf0905d5a" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#minValue&quot;&gt;&lt;code&gt;
 minValue&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#minValue&quot;&gt; &lt;code&gt; minValue&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="b5458eeba59dcfbb2d86cb008e54ef4459974966" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#minValue&quot;&gt;&lt;code&gt;minValue&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#minValue&quot;&gt; &lt;code&gt;minValue&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="3c360c1088b36522f6e8ac159e1dc3bfafdadb44" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#mxbean&quot;&gt;&lt;code&gt;
 mxbean&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#mxbean&quot;&gt; &lt;code&gt; mxbean&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="3d12e5d2c43700fffd1f2acdcc9bfb6314cfa143" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#mxbean&quot;&gt;&lt;code&gt;mxbean&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#mxbean&quot;&gt; &lt;code&gt;mxbean&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="b2306786e35b8dc8113a90bb0b9bfcaebbbb4111" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#openType&quot;&gt;&lt;code&gt;
 openType&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#openType&quot;&gt; &lt;code&gt; openType&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="c0f4d31dececcf3cbe425b7676d150fa31bfc39e" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#openType&quot;&gt;&lt;code&gt;openType&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#openType&quot;&gt; &lt;code&gt;openType&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="ce2f69899ea3f7db305ee78fde5c0731069c8dcd" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#originalType&quot;&gt;&lt;code&gt;
 originalType&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#originalType&quot;&gt; &lt;code&gt; originalType&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="019614432873d92a45cf0bd7b968f9482692078a" translate="yes" xml:space="preserve">
          <source>The name of the &lt;a href=&quot;descriptor#originalType&quot;&gt;&lt;code&gt;originalType&lt;/code&gt;&lt;/a&gt; field.</source>
          <target state="translated">&lt;a href=&quot;descriptor#originalType&quot;&gt; &lt;code&gt;originalType&lt;/code&gt; &lt;/a&gt;字段的名称。</target>
        </trans-unit>
        <trans-unit id="48744229149f107d48a57a9a32fe47303158d512" translate="yes" xml:space="preserve">
          <source>The name of the Cryptography Package Provider is designated also by the Signature parameter to the constructor and the &lt;code&gt;verify&lt;/code&gt; method. If the provider is not specified, the default provider is used. Each installation can be configured to use a particular provider as default.</source>
          <target state="translated">加密程序包提供者的名称也由Signature参数指定给构造函数和 &lt;code&gt;verify&lt;/code&gt; 方法。如果未指定提供程序，则使用默认提供程序。可以将每个安装配置为默认使用特定的提供程序。</target>
        </trans-unit>
        <trans-unit id="3374bc67db57b47fa67041ab369a402111b546bf" translate="yes" xml:space="preserve">
          <source>The name of the MBean within the MBean server to which methods are forwarded.</source>
          <target state="translated">方法被转发到的MBean服务器中的MBean的名称。</target>
        </trans-unit>
        <trans-unit id="e603cbb804d9eb28de3e80c8071713281c1279aa" translate="yes" xml:space="preserve">
          <source>The name of the action for the key.</source>
          <target state="translated">钥匙的动作名称。</target>
        </trans-unit>
        <trans-unit id="67bf46d27bfc385d4d53f17c9da30fc6ca21ea63" translate="yes" xml:space="preserve">
          <source>The name of the applet.</source>
          <target state="translated">小程序的名称。</target>
        </trans-unit>
        <trans-unit id="a1c26c8039abfb710d40fd7960a8ffe4de3637fc" translate="yes" xml:space="preserve">
          <source>The name of the applet. See the name attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">小程序的名称。参见HTML 4.0中的name属性定义。这个属性在HTML 4.0中已被废弃。</target>
        </trans-unit>
        <trans-unit id="c8664e99ba0ec714f65189ef121b50d48bf752bb" translate="yes" xml:space="preserve">
          <source>The name of the associated notation.</source>
          <target state="translated">相关符号的名称。</target>
        </trans-unit>
        <trans-unit id="097c841c5ffaa4f483a66be7178ea3a98d83fcc8" translate="yes" xml:space="preserve">
          <source>The name of the built-in system class loader is &lt;code&gt;&quot;app&quot;&lt;/code&gt;. The system property &quot;&lt;code&gt;java.class.path&lt;/code&gt;&quot; is read during early initialization of the VM to determine the class path. An empty value of &quot;&lt;code&gt;java.class.path&lt;/code&gt;&quot; property is interpreted differently depending on whether the initial module (the module containing the main class) is named or unnamed: If named, the built-in system class loader will have no class path and will search for classes and resources using the application module path; otherwise, if unnamed, it will set the class path to the current working directory.</source>
          <target state="translated">内置系统类加载器的名称为 &lt;code&gt;&quot;app&quot;&lt;/code&gt; 。在VM的早期初始化期间读取系统属性&amp;ldquo; &lt;code&gt;java.class.path&lt;/code&gt; &amp;rdquo;，以确定类路径。根据初始模块（包含主类的模块）是命名的还是未命名的，对&amp;ldquo; &lt;code&gt;java.class.path&lt;/code&gt; &amp;rdquo;属性的空值进行不同的解释：如果命名，则内置系统类加载器将没有类路径，并且将使用应用程序模块路径搜索类和资源；否则，如果未命名，它将把类路径设置为当前工作目录。</target>
        </trans-unit>
        <trans-unit id="59571c11a8a61f5087536ca331e870fbc1bf9620" translate="yes" xml:space="preserve">
          <source>The name of the builtin platform class loader is &lt;code&gt;&quot;platform&quot;&lt;/code&gt;.</source>
          <target state="translated">内置平台类加载器的名称为 &lt;code&gt;&quot;platform&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a80646cd5cb31601fc4aac5527e3c066f071889e" translate="yes" xml:space="preserve">
          <source>The name of the class implementing &lt;code&gt;IIOMetadataFormat&lt;/code&gt; and representing the native metadata format, initialized to &lt;code&gt;null&lt;/code&gt; and set via the constructor.</source>
          <target state="translated">实现 &lt;code&gt;IIOMetadataFormat&lt;/code&gt; 并表示本机元数据格式的类的名称，初始化为 &lt;code&gt;null&lt;/code&gt; 并通过构造函数设置。</target>
        </trans-unit>
        <trans-unit id="87c36c4524553c04fdf7d1a5553c3ac41e742c7f" translate="yes" xml:space="preserve">
          <source>The name of the code generator</source>
          <target state="translated">代码生成器的名称</target>
        </trans-unit>
        <trans-unit id="14628be31dd329e555df1f6bfb10c67eaffa4605" translate="yes" xml:space="preserve">
          <source>The name of the country appropriate to the given locale.</source>
          <target state="translated">适合特定地点的国家名称;</target>
        </trans-unit>
        <trans-unit id="4acb982db435eb2721de142ef807bacda4ac4425" translate="yes" xml:space="preserve">
          <source>The name of the country appropriate to the locale.</source>
          <target state="translated">适合当地情况的国家名称;</target>
        </trans-unit>
        <trans-unit id="78358406b490b90c985dd9db549b2619ef569e50" translate="yes" xml:space="preserve">
          <source>The name of the default event set is used to calculate its &lt;a href=&quot;beaninfo#getDefaultEventIndex()&quot;&gt;&lt;code&gt;index&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;beaninfo#getEventSetDescriptors()&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; of event sets defined in the annotated class.</source>
          <target state="translated">缺省事件集的名称被用于计算其&lt;a href=&quot;beaninfo#getDefaultEventIndex()&quot;&gt; &lt;code&gt;index&lt;/code&gt; &lt;/a&gt;中&lt;a href=&quot;beaninfo#getEventSetDescriptors()&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;中的注释的类中定义的事件集。</target>
        </trans-unit>
        <trans-unit id="04ac24816aef6488806c42c595d2915ed924cca8" translate="yes" xml:space="preserve">
          <source>The name of the default event set is used to calculate its &lt;a href=&quot;beaninfo#getDefaultEventIndex()&quot;&gt;&lt;code&gt;index&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;beaninfo#getEventSetDescriptors()&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; of event sets defined in the annotated class. If the name is not set or the annotated class does not define an event set with the specified name, the default event set index will be calculated automatically by the &lt;a href=&quot;introspector&quot;&gt;&lt;code&gt;Introspector&lt;/code&gt;&lt;/a&gt; depending on its state.</source>
          <target state="translated">缺省事件集的名称被用于计算其&lt;a href=&quot;beaninfo#getDefaultEventIndex()&quot;&gt; &lt;code&gt;index&lt;/code&gt; &lt;/a&gt;中&lt;a href=&quot;beaninfo#getEventSetDescriptors()&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;中的注释的类中定义的事件集。如果未设置名称或带注释的类未使用指定名称定义事件集，则&lt;a href=&quot;introspector&quot;&gt; &lt;code&gt;Introspector&lt;/code&gt; 将&lt;/a&gt;根据其状态自动计算默认事件集索引。</target>
        </trans-unit>
        <trans-unit id="3ce6ce57d1833563bb66734286a352e834e326ed" translate="yes" xml:space="preserve">
          <source>The name of the default property is used to calculate its &lt;a href=&quot;beaninfo#getDefaultPropertyIndex()&quot;&gt;&lt;code&gt;index&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; of properties defined in the annotated class.</source>
          <target state="translated">默认属性的名称被用于计算其&lt;a href=&quot;beaninfo#getDefaultPropertyIndex()&quot;&gt; &lt;code&gt;index&lt;/code&gt; &lt;/a&gt;中&lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;中的注解的类中定义的属性。</target>
        </trans-unit>
        <trans-unit id="086957e2f5e5ccd35b93f7fa6892198bfd1505fe" translate="yes" xml:space="preserve">
          <source>The name of the default property is used to calculate its &lt;a href=&quot;beaninfo#getDefaultPropertyIndex()&quot;&gt;&lt;code&gt;index&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt;&lt;code&gt;array&lt;/code&gt;&lt;/a&gt; of properties defined in the annotated class. If the name is not set or the annotated class does not define a property with the specified name, the default property index will be calculated automatically by the &lt;a href=&quot;introspector&quot;&gt;&lt;code&gt;Introspector&lt;/code&gt;&lt;/a&gt; depending on its state.</source>
          <target state="translated">默认属性的名称被用于计算其&lt;a href=&quot;beaninfo#getDefaultPropertyIndex()&quot;&gt; &lt;code&gt;index&lt;/code&gt; &lt;/a&gt;中&lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt; &lt;code&gt;array&lt;/code&gt; &lt;/a&gt;中的注解的类中定义的属性。如果未设置名称或带注释的类未使用指定名称定义属性，则&lt;a href=&quot;introspector&quot;&gt; &lt;code&gt;Introspector&lt;/code&gt; 将&lt;/a&gt;根据其状态自动计算默认属性索引。</target>
        </trans-unit>
        <trans-unit id="5bb84751719d943c1bdfe595f0b620fdf05a9b4b" translate="yes" xml:space="preserve">
          <source>The name of the display language appropriate to the given locale.</source>
          <target state="translated">适用于指定区域的显示语言的名称。</target>
        </trans-unit>
        <trans-unit id="60b08c752ba73a8a294eb2dc32a69396a5bd0e3a" translate="yes" xml:space="preserve">
          <source>The name of the display language.</source>
          <target state="translated">显示语言的名称。</target>
        </trans-unit>
        <trans-unit id="0cef399fec1ed02c817bd26adc657c6bf0cd05e8" translate="yes" xml:space="preserve">
          <source>The name of the display variant code appropriate to the given locale.</source>
          <target state="translated">适合给定区域的显示变体代码的名称。</target>
        </trans-unit>
        <trans-unit id="c6f8f604377a983983396835745055e795e7955c" translate="yes" xml:space="preserve">
          <source>The name of the display variant code appropriate to the locale.</source>
          <target state="translated">适合当地环境的显示变体代码的名称。</target>
        </trans-unit>
        <trans-unit id="24528e36b7470855aa32b59a5449546f41560454" translate="yes" xml:space="preserve">
          <source>The name of the element</source>
          <target state="translated">元素的名称</target>
        </trans-unit>
        <trans-unit id="a95d25eec2ed4333c2f6d38fca0cb5eeb8fd06b9" translate="yes" xml:space="preserve">
          <source>The name of the element (for backwards compatibility).</source>
          <target state="translated">元素的名称(为了向后兼容)。</target>
        </trans-unit>
        <trans-unit id="fc747a0011536738e1fa0490d7d958b96f02eb2a" translate="yes" xml:space="preserve">
          <source>The name of the element.</source>
          <target state="translated">元素的名称;</target>
        </trans-unit>
        <trans-unit id="6b3f6644531a48b6304ed514d2bea39651f0ab46" translate="yes" xml:space="preserve">
          <source>The name of the element. If &lt;code&gt;Node.localName&lt;/code&gt; is different from &lt;code&gt;null&lt;/code&gt;, this attribute is a qualified name. For example, in:</source>
          <target state="translated">元素的名称。如果 &lt;code&gt;Node.localName&lt;/code&gt; 与 &lt;code&gt;null&lt;/code&gt; 不同，则此属性为限定名称。例如，在：</target>
        </trans-unit>
        <trans-unit id="120a36a79f97ac5cca7e6072a7f24815aa4e4e51" translate="yes" xml:space="preserve">
          <source>The name of the engine implementation.</source>
          <target state="translated">引擎实现的名称。</target>
        </trans-unit>
        <trans-unit id="f75476630adc7537ab0942d349040825c278cc3c" translate="yes" xml:space="preserve">
          <source>The name of the entity</source>
          <target state="translated">该实体的名称</target>
        </trans-unit>
        <trans-unit id="97d6f3b8c4207b3258c6fdf35439ec4e64a6b33f" translate="yes" xml:space="preserve">
          <source>The name of the entity.</source>
          <target state="translated">该实体的名称;</target>
        </trans-unit>
        <trans-unit id="47e223e8c5fe87dc2f017ef2eabcb21daf87ceb2" translate="yes" xml:space="preserve">
          <source>The name of the event (case-insensitive).</source>
          <target state="translated">事件名称(不区分大小写);</target>
        </trans-unit>
        <trans-unit id="e7cc9e48bd592ef36c17b71fc57758920bbb168c" translate="yes" xml:space="preserve">
          <source>The name of the event (case-insensitive). The name must be an XML name.</source>
          <target state="translated">事件的名称(不区分大小写)。该名称必须是一个XML名称。</target>
        </trans-unit>
        <trans-unit id="d3af95a63e43cd17e9a6cea712564b8e6527a909" translate="yes" xml:space="preserve">
          <source>The name of the feature.</source>
          <target state="translated">特征的名称。</target>
        </trans-unit>
        <trans-unit id="9e5fd5b90df7480a7c2fc85c88ad6342ff889328" translate="yes" xml:space="preserve">
          <source>The name of the feature. It is recommended that subclasses call &lt;a href=&quot;#getName()&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt; rather than reading this field, and that they not change it.</source>
          <target state="translated">功能名称。建议子类调用&lt;a href=&quot;#getName()&quot;&gt; &lt;code&gt;getName()&lt;/code&gt; &lt;/a&gt;而不是读取此字段，并且不要更改它。</target>
        </trans-unit>
        <trans-unit id="95a2547de9061a70c8901a9a9ae8316a19182943" translate="yes" xml:space="preserve">
          <source>The name of the feature. It is recommended that subclasses call &lt;a href=&quot;mbeanfeatureinfo#getName--&quot;&gt;&lt;code&gt;getName()&lt;/code&gt;&lt;/a&gt; rather than reading this field, and that they not change it.</source>
          <target state="translated">功能名称。建议子类调用&lt;a href=&quot;mbeanfeatureinfo#getName--&quot;&gt; &lt;code&gt;getName()&lt;/code&gt; &lt;/a&gt;而不是读取此字段，并且不要更改它。</target>
        </trans-unit>
        <trans-unit id="94428221f570bbc866fd9fb07f0332af0c0604fc" translate="yes" xml:space="preserve">
          <source>The name of the file or directory denoted by this abstract pathname, or the empty string if this pathname's name sequence is empty</source>
          <target state="translated">该抽象路径名所表示的文件或目录的名称,如果该路径名的名称序列为空,则为空字符串。</target>
        </trans-unit>
        <trans-unit id="264313247d929c3123a9e7fe3982f9c4d6734ea2" translate="yes" xml:space="preserve">
          <source>The name of the file.</source>
          <target state="translated">文件的名称。</target>
        </trans-unit>
        <trans-unit id="358d802fea6719e80e2748acb46d55d47944cf81" translate="yes" xml:space="preserve">
          <source>The name of the file. Normally this would be simply &lt;code&gt;f.getName()&lt;/code&gt;.</source>
          <target state="translated">文件名。通常，这只是 &lt;code&gt;f.getName()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2863f6ebe2f2814981517623a864e07602aa260c" translate="yes" xml:space="preserve">
          <source>The name of the garbage collector used to perform the collection.</source>
          <target state="translated">用于执行收集的垃圾收集器的名称。</target>
        </trans-unit>
        <trans-unit id="01c9c4139ce4fa623ad1d25aaa2f563884a126a5" translate="yes" xml:space="preserve">
          <source>The name of the getter method in the annotated class, which returns the corresponding Swing container, if it is not recommended to add subcomponents to the annotated class directly.</source>
          <target state="translated">注释类中的getter方法的名称,该方法返回相应的Swing容器,如果不建议直接在注释类中添加子组件。</target>
        </trans-unit>
        <trans-unit id="6184eca693cfe52fc5392fc61940fe51c58be9b4" translate="yes" xml:space="preserve">
          <source>The name of the indexed attribute, or null if the index is out of range.</source>
          <target state="translated">索引属性的名称,如果索引超出范围则为空。</target>
        </trans-unit>
        <trans-unit id="78e529e47375c2632b7b035e64454552347f35c2" translate="yes" xml:space="preserve">
          <source>The name of the keystore's JCE provider.</source>
          <target state="translated">钥匙店的JCE供应商的名称。</target>
        </trans-unit>
        <trans-unit id="710b3a74bf068fa8de9ebf8e26c80f7f253ab602" translate="yes" xml:space="preserve">
          <source>The name of the locale appropriate to display.</source>
          <target state="translated">适合显示的区域名称。</target>
        </trans-unit>
        <trans-unit id="dc4668583967ec894c4fc99eff383fa78666fc18" translate="yes" xml:space="preserve">
          <source>The name of the log level of the specified logger; or an empty string if the log level of the specified logger is &lt;code&gt;null&lt;/code&gt;. If the specified logger does not exist, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">指定记录器的日志级别的名称；如果指定记录器的日志级别为 &lt;code&gt;null&lt;/code&gt; ,则为空字符串。如果指定的记录器不存在，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb2d73104061df95f17818382bae8dff8ab298b0" translate="yes" xml:space="preserve">
          <source>The name of the m-let registered.</source>
          <target state="translated">注册的m-let名称。</target>
        </trans-unit>
        <trans-unit id="093ff0ae78d61a47dcf7ef6063cf858716b59de9" translate="yes" xml:space="preserve">
          <source>The name of the memory pool.</source>
          <target state="translated">内存池的名称。</target>
        </trans-unit>
        <trans-unit id="c7ad1c87eb9dcdbd25ae935d16c25ad0f224ed52" translate="yes" xml:space="preserve">
          <source>The name of the method is denoted by the &quot;method&quot; attribute.</source>
          <target state="translated">方法的名称由 &quot;方法 &quot;属性表示。</target>
        </trans-unit>
        <trans-unit id="a672ec3f5d7f1814d41e28cb442fc9ba334b3bdc" translate="yes" xml:space="preserve">
          <source>The name of the monitor MBean registered.</source>
          <target state="translated">注册的监测器MBean的名称。</target>
        </trans-unit>
        <trans-unit id="c291f6decb6f8d5426876dff90ab34f56da868c4" translate="yes" xml:space="preserve">
          <source>The name of the native metadata format for this object, initialized to &lt;code&gt;null&lt;/code&gt; and set via the constructor.</source>
          <target state="translated">此对象的本机元数据格式的名称，初始化为 &lt;code&gt;null&lt;/code&gt; 并通过构造函数设置。</target>
        </trans-unit>
        <trans-unit id="ac5280a7663692ad6dd0a6b4111143acc66a2b08" translate="yes" xml:space="preserve">
          <source>The name of the package is derived from the &lt;a href=&quot;class#getName()&quot;&gt;binary names&lt;/a&gt; of the classes. Since classes in a named module must be in a named package, the derived name is never empty.</source>
          <target state="translated">包的名称是从类的&lt;a href=&quot;class#getName()&quot;&gt;二进制名称&lt;/a&gt;派生的。由于命名模块中的类必须位于命名包中，因此派生名称永远不会为空。</target>
        </trans-unit>
        <trans-unit id="b13ee813ed632277885f5a6dd137f0cfb5e8df51" translate="yes" xml:space="preserve">
          <source>The name of the package is either &lt;code&gt;&quot;&quot;&lt;/code&gt; (for classes in an unnamed package) or derived from the &lt;a href=&quot;class#getName()&quot;&gt;binary names&lt;/a&gt; of the classes (for classes in a named package).</source>
          <target state="translated">包的名称可以是 &lt;code&gt;&quot;&quot;&lt;/code&gt; （对于未命名包中的类），也可以从类的&lt;a href=&quot;class#getName()&quot;&gt;二进制名称&lt;/a&gt;派生（对于命名包中的类）。</target>
        </trans-unit>
        <trans-unit id="e4a64f909c1c428320f52ac482a8515417ecb899" translate="yes" xml:space="preserve">
          <source>The name of the parameter</source>
          <target state="translated">参数名称</target>
        </trans-unit>
        <trans-unit id="ec919114b57c6c6f0bddee6582f54e56c541ab2a" translate="yes" xml:space="preserve">
          <source>The name of the parameter, either provided by the class file or synthesized if the class file does not provide a name.</source>
          <target state="translated">参数的名称,可以是类文件提供的,也可以是合成的,如果类文件没有提供名称。</target>
        </trans-unit>
        <trans-unit id="45a1439ae42ba4c8c5dd49280d770ad86f3c6a9b" translate="yes" xml:space="preserve">
          <source>The name of the principal that should be used. The principal can be a simple username such as &quot;&lt;code&gt;testuser&lt;/code&gt;&quot; or a service name such as &quot;&lt;code&gt;host/testhost.eng.sun.com&lt;/code&gt;&quot;. You can use the &lt;code&gt;principal&lt;/code&gt; option to set the principal when there are credentials for multiple principals in the &lt;code&gt;keyTab&lt;/code&gt; or when you want a specific ticket cache only. The principal can also be set using the system property &lt;code&gt;sun.security.krb5.principal&lt;/code&gt;. In addition, if this system property is defined, then it will be used. If this property is not set, then the principal name from the configuration will be used. The principal name can be set to &quot;*&quot; when &lt;code&gt;isInitiator&lt;/code&gt; is false. In this case, the acceptor is not bound to a single principal. It can act as any principal an initiator requests if keys for that principal can be found. When &lt;code&gt;isInitiator&lt;/code&gt; is true, the principal name cannot be set to &quot;*&quot;.</source>
          <target state="translated">应该使用的主体名称。委托人可以是简单的用户名，例如&amp;ldquo; &lt;code&gt;testuser&lt;/code&gt; &amp;rdquo;，也可以是服务名，例如&amp;ldquo; &lt;code&gt;host/testhost.eng.sun.com&lt;/code&gt; &amp;rdquo;。当 &lt;code&gt;keyTab&lt;/code&gt; 中存在多个主体的凭证时，或者仅需要特定的票证高速缓存时，可以使用 &lt;code&gt;principal&lt;/code&gt; 选项来设置主体。主体也可以使用系统属性 &lt;code&gt;sun.security.krb5.principal&lt;/code&gt; 进行设置。另外，如果定义了此系统属性，则将使用它。如果未设置此属性，则将使用配置中的主体名称。当 &lt;code&gt;isInitiator&lt;/code&gt; 时，主体名称可以设置为&amp;ldquo; *&amp;rdquo;是错误的。在这种情况下，接受者未绑定到单个主体。如果可以找到该主体的密钥，它可以充当发起者请求的任何主体。当 &lt;code&gt;isInitiator&lt;/code&gt; 为true时，主体名称不能设置为&amp;ldquo; *&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="76dbce8fae53c29781d96a2d788eef7df5a5de9f" translate="yes" xml:space="preserve">
          <source>The name of the processing instruction that is sent if the result tree disables output escaping.</source>
          <target state="translated">如果结果树禁用输出转义,则发送的处理指令名称。</target>
        </trans-unit>
        <trans-unit id="16abcde6d38a72eae8ef0428bcfea1f17bf5c47a" translate="yes" xml:space="preserve">
          <source>The name of the processing instruction that is sent if the result tree enables output escaping at some point after having received a PI_DISABLE_OUTPUT_ESCAPING processing instruction.</source>
          <target state="translated">在收到PI_DISABLE_OUTPUT_ESCAPING处理指令后,如果结果树在某一时刻启用了输出转义,则发送的处理指令的名称。</target>
        </trans-unit>
        <trans-unit id="116d7b1741b1750b3a187fa6439cac63813b08f8" translate="yes" xml:space="preserve">
          <source>The name of the property at this ordinal position. The empty string if no property exists at this position.</source>
          <target state="translated">此序号位置的属性名称。如果该位置没有属性,则为空字符串。</target>
        </trans-unit>
        <trans-unit id="ac3506b2a41d26429a561490d65dccec37908ee6" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
          <target state="translated">财产的名称。</target>
        </trans-unit>
        <trans-unit id="887faaf33b50c35d7b160d10047016054616f44d" translate="yes" xml:space="preserve">
          <source>The name of the provider is supplied on the command line, which will add the provider to the system properties. For example:</source>
          <target state="translated">在命令行中提供提供者的名称,将提供者添加到系统属性中。例如:</target>
        </trans-unit>
        <trans-unit id="0fde951d6d267c7761faf39ef1278ab5b4594efa" translate="yes" xml:space="preserve">
          <source>The name of the resolved object, relative to &lt;code&gt;altNameCtx&lt;/code&gt;. It is a composite name. If null, then no name is specified.</source>
          <target state="translated">相对于 &lt;code&gt;altNameCtx&lt;/code&gt; 的已解析对象的名称。它是一个复合名称。如果为null，则不指定名称。</target>
        </trans-unit>
        <trans-unit id="cd1bd73ac27aa215798a1528ac7cb6d12a80bc26" translate="yes" xml:space="preserve">
          <source>The name of the resource that the reference points to. It can link to any compatible resource using the global JNDI names.</source>
          <target state="translated">引用所指向的资源的名称。它可以使用全局JNDI名称链接到任何兼容的资源。</target>
        </trans-unit>
        <trans-unit id="1e3b3c20b96280dc122ea9b30ac0fcd7a5b82dcf" translate="yes" xml:space="preserve">
          <source>The name of the runtime permission for creating instances of this class.</source>
          <target state="translated">创建该类实例的运行时权限名称。</target>
        </trans-unit>
        <trans-unit id="aaf04e53e4a1152396ec28d1bfb5edacd69aa3f2" translate="yes" xml:space="preserve">
          <source>The name of the runtime permission for creating instances of this class. Granting this permission to a language runtime allows it to export its linkers for automatic loading into other language runtimes.</source>
          <target state="translated">用于创建该类实例的运行时权限的名称。授予一个语言运行时的权限,允许它导出其链接器,以便自动加载到其他语言运行时。</target>
        </trans-unit>
        <trans-unit id="1ea9beb0c3bba4aa9b71ab429f16da92aee27b15" translate="yes" xml:space="preserve">
          <source>The name of the stub class to load is determined by concatenating the binary name of the root class with the suffix &lt;code&gt;_Stub&lt;/code&gt;.</source>
          <target state="translated">要加载的存根类的名称是通过将根类的二进制名称与后缀 &lt;code&gt;_Stub&lt;/code&gt; 连接在一起来确定的。</target>
        </trans-unit>
        <trans-unit id="1292f65aa82f44923949346d4e1e691d616e2a33" translate="yes" xml:space="preserve">
          <source>The name of the supported language.</source>
          <target state="translated">支持的语言名称。</target>
        </trans-unit>
        <trans-unit id="d92c69c213f3feae00524d25525f42e579d3cf48" translate="yes" xml:space="preserve">
          <source>The name of the tag, if any, associated with this kind of node.</source>
          <target state="translated">与此类节点相关联的标签名称(如果有)。</target>
        </trans-unit>
        <trans-unit id="ea3ee1b66718d70c98586654a55a17d890a101c8" translate="yes" xml:space="preserve">
          <source>The name of the timer MBean registered.</source>
          <target state="translated">注册的定时器MBean的名称。</target>
        </trans-unit>
        <trans-unit id="c5f41cf5312635b9b71243059c7c01b830a817b2" translate="yes" xml:space="preserve">
          <source>The name of the transport service</source>
          <target state="translated">运输服务的名称</target>
        </trans-unit>
        <trans-unit id="ac8d30e1489df051168dc38caa12a3e3879c648b" translate="yes" xml:space="preserve">
          <source>The name of the unsupported charset</source>
          <target state="translated">不支持的字符集名称。</target>
        </trans-unit>
        <trans-unit id="2ea3029204b8563c2686223e0b30344df216cad0" translate="yes" xml:space="preserve">
          <source>The name of the vendor for this data type</source>
          <target state="translated">该数据类型的供应商名称。</target>
        </trans-unit>
        <trans-unit id="b104e9a9f317ddcff8d221e2af9f9bbcb518f76a" translate="yes" xml:space="preserve">
          <source>The name of the vendor for this data type which is java.sql for JDBCType.</source>
          <target state="translated">这个数据类型的供应商名称是java.sql的JDBCType。</target>
        </trans-unit>
        <trans-unit id="126564f90a129c4441e4a2c75da79a1d030e99b6" translate="yes" xml:space="preserve">
          <source>The name of the vendor who defined the SPI class and a brief description of the class are available via the &lt;code&gt;getVendorName&lt;/code&gt;, &lt;code&gt;getDescription&lt;/code&gt;, and &lt;code&gt;getVersion&lt;/code&gt; methods. These methods may be internationalized to provide locale-specific output. These methods are intended mainly to provide short, human-readable information that might be used to organize a pop-up menu or other list.</source>
          <target state="translated">可以通过 &lt;code&gt;getVendorName&lt;/code&gt; ， &lt;code&gt;getDescription&lt;/code&gt; 和 &lt;code&gt;getVersion&lt;/code&gt; 方法获得定义SPI类的供应商名称和该类的简要说明。这些方法可以国际化以提供特定于语言环境的输出。这些方法主要是为了提供可用于组织弹出菜单或其他列表的简短的人类可读信息。</target>
        </trans-unit>
        <trans-unit id="962ba302c34f721b90ce31af44446e3c52ade33c" translate="yes" xml:space="preserve">
          <source>The name of the vendor who defined the SPI class and a brief description of the class are available via the &lt;code&gt;getVendorName&lt;/code&gt;, &lt;code&gt;getDescription&lt;/code&gt;, and &lt;code&gt;getVersion&lt;/code&gt; methods. These methods may be internationalized to provide locale-specific output. These methods are intended mainly to provide short, human-writable information that might be used to organize a pop-up menu or other list.</source>
          <target state="translated">可以通过 &lt;code&gt;getVendorName&lt;/code&gt; ， &lt;code&gt;getDescription&lt;/code&gt; 和 &lt;code&gt;getVersion&lt;/code&gt; 方法获得定义SPI类的供应商名称和该类的简要说明。这些方法可以国际化以提供特定于语言环境的输出。这些方法主要旨在提供可用于组织弹出菜单或其他列表的简短的可写信息。</target>
        </trans-unit>
        <trans-unit id="f00712a679d46359245fd53d36dcdc263f5f38cd" translate="yes" xml:space="preserve">
          <source>The name of this &lt;code&gt;SQLType&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;SQLType&lt;/code&gt; 的名称。</target>
        </trans-unit>
        <trans-unit id="8dd4993f396f86b98140b04a30ad081da0cc6b41" translate="yes" xml:space="preserve">
          <source>The name of this buffer pool.</source>
          <target state="translated">这个缓冲池的名称。</target>
        </trans-unit>
        <trans-unit id="8c533fca0bdf1847378d972e6408702bbaa3f035" translate="yes" xml:space="preserve">
          <source>The name of this class is taken from the terms used in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278&lt;/i&gt;&lt;/a&gt;. In that document a</source>
          <target state="translated">此类的名称来自&lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278中&lt;/i&gt;&lt;/a&gt;使用的术语。在该文件中</target>
        </trans-unit>
        <trans-unit id="bf3f5034f6d0761ce1f9b15ff92f37e5f38a40d4" translate="yes" xml:space="preserve">
          <source>The name of this class is taken from the terms used in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278&lt;/i&gt;&lt;/a&gt;. In that document a</source>
          <target state="translated">此类的名称来自&lt;a href=&quot;https://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278中&lt;/i&gt;&lt;/a&gt;使用的术语。在该文件中</target>
        </trans-unit>
        <trans-unit id="a78d89e8c4c181d92cab5b241c2e56cfa0c8eb49" translate="yes" xml:space="preserve">
          <source>The name of this node, depending on its type; see the table above.</source>
          <target state="translated">此节点的名称,取决于其类型;见上表。</target>
        </trans-unit>
        <trans-unit id="57b40764274f1fc002df7c8b7ebff9fcc7d9b22c" translate="yes" xml:space="preserve">
          <source>The name of this provider</source>
          <target state="translated">该供应商的名称</target>
        </trans-unit>
        <trans-unit id="9724d1f38cc8445c96c102f929e30366b8968038" translate="yes" xml:space="preserve">
          <source>The name only contains alphanumeric characters or the character &quot;_&quot;</source>
          <target state="translated">名称只包含字母数字字符或字符&quot;_&quot;</target>
        </trans-unit>
        <trans-unit id="6879a68caf1d6a7ab9d9a4a53cc53b346d66fe6f" translate="yes" xml:space="preserve">
          <source>The name parameter in the &lt;code&gt;addNamingListener()&lt;/code&gt; methods is referred to as the &lt;em&gt;target&lt;/em&gt;. The target, along with the scope, identify the object(s) that the listener is interested in. It is possible to register interest in a target that does not exist, but there might be limitations in the extent to which this can be supported by the service provider and underlying protocol/service.</source>
          <target state="translated">&lt;code&gt;addNamingListener()&lt;/code&gt; 方法中的name参数称为&lt;em&gt;target&lt;/em&gt;。目标与范围一起确定了侦听器感兴趣的对象。可以将兴趣注册到不存在的目标中，但是在一定程度上可以限制目标的支持服务提供商和基础协议/服务。</target>
        </trans-unit>
        <trans-unit id="860c4f0c945e8ceccccb8c32dcd64ba5a09ada9e" translate="yes" xml:space="preserve">
          <source>The name separator</source>
          <target state="translated">名称分隔符</target>
        </trans-unit>
        <trans-unit id="4513ba4813163f865c14e4ebc4f20c422d73d263" translate="yes" xml:space="preserve">
          <source>The name separator is used to separate names in a path string. An implementation may support multiple name separators in which case this method returns an implementation specific &lt;em&gt;default&lt;/em&gt; name separator. This separator is used when creating path strings by invoking the &lt;a href=&quot;path#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">名称分隔符用于分隔路径字符串中的名称。一个实现可能支持多个名称分隔符，在这种情况下，此方法将返回一个特定于实现的&lt;em&gt;默认&lt;/em&gt;名称分隔符。通过调用&lt;a href=&quot;path#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;方法创建路径字符串时，将使用此分隔符。</target>
        </trans-unit>
        <trans-unit id="35fd956615f3183b2a27cf861192a4328ba79011" translate="yes" xml:space="preserve">
          <source>The name separator is used to separate names in a path string. An implementation may support multiple name separators in which case this method returns an implementation specific &lt;em&gt;default&lt;/em&gt; name separator. This separator is used when creating path strings by invoking the &lt;a href=&quot;path#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">名称分隔符用于分隔路径字符串中的名称。一个实现可能支持多个名称分隔符，在这种情况下，此方法返回一个实现特定的&lt;em&gt;默认&lt;/em&gt;名称分隔符。通过调用&lt;a href=&quot;path#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;方法创建路径字符串时使用此分隔符。</target>
        </trans-unit>
        <trans-unit id="5428a05faaeaed33e2f9ec7686064395200f6cf6" translate="yes" xml:space="preserve">
          <source>The name under which the MBean is to be registered.</source>
          <target state="translated">(a)登记MBean的名称;</target>
        </trans-unit>
        <trans-unit id="52573a98988fd98ad0050a1dc9a6c1143b22efbf" translate="yes" xml:space="preserve">
          <source>The name under which the MBean is to be registered. This value must not be null. If the &lt;code&gt;name&lt;/code&gt; parameter is not null, it will usually but not necessarily be the returned value.</source>
          <target state="translated">MBean的注册名称。该值不能为空。如果 &lt;code&gt;name&lt;/code&gt; 参数不为null，则通常但不一定是返回值。</target>
        </trans-unit>
        <trans-unit id="c4ea4ead5eaedd88911039ea1b43c07d7392cc64" translate="yes" xml:space="preserve">
          <source>The named ClassLoader. If &lt;var&gt;l&lt;/var&gt; is the actual ClassLoader with that name, and &lt;var&gt;r&lt;/var&gt; is the returned value, then either:</source>
          <target state="translated">命名的ClassLoader。如果 &lt;var&gt;l&lt;/var&gt; 是具有该名称的实际ClassLoader，而 &lt;var&gt;r&lt;/var&gt; 是返回的值，则可以：</target>
        </trans-unit>
        <trans-unit id="5c1d5b92b4e57a45a5307ad7f0334127b6e48d33" translate="yes" xml:space="preserve">
          <source>The named character construct, &lt;code&gt;\N{&lt;/code&gt;</source>
          <target state="translated">命名字符构造 &lt;code&gt;\N{&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd3a4268a61dca16f11df59322f0d23569e1bd03" translate="yes" xml:space="preserve">
          <source>The named child node.</source>
          <target state="translated">被命名的子节点。</target>
        </trans-unit>
        <trans-unit id="3f8a750c331f2492d2d7adbdb43f580acc695902" translate="yes" xml:space="preserve">
          <source>The named class must exist and must implement the &lt;a href=&quot;../parser&quot;&gt;&lt;code&gt;Parser&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">命名的类必须存在并且必须实现&lt;a href=&quot;../parser&quot;&gt; &lt;code&gt;Parser&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="5845346cc0cc0f0d59912000c5fce352fb493340" translate="yes" xml:space="preserve">
          <source>The names in &lt;code&gt;newBd&lt;/code&gt; and &lt;code&gt;oldBd&lt;/code&gt; are to be resolved relative to the event source &lt;code&gt;source&lt;/code&gt;. For an &lt;code&gt;OBJECT_ADDED&lt;/code&gt; event type, &lt;code&gt;newBd&lt;/code&gt; must not be null. For an &lt;code&gt;OBJECT_REMOVED&lt;/code&gt; event type, &lt;code&gt;oldBd&lt;/code&gt; must not be null. For an &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; event type, &lt;code&gt;newBd&lt;/code&gt; and &lt;code&gt;oldBd&lt;/code&gt; must not be null. For an &lt;code&gt;OBJECT_RENAMED&lt;/code&gt; event type, one of &lt;code&gt;newBd&lt;/code&gt; or &lt;code&gt;oldBd&lt;/code&gt; may be null if the new or old binding is outside of the scope for which the listener has registered.</source>
          <target state="translated">&lt;code&gt;newBd&lt;/code&gt; 和 &lt;code&gt;oldBd&lt;/code&gt; 中的名称将相对于事件源 &lt;code&gt;source&lt;/code&gt; 进行解析。对于 &lt;code&gt;OBJECT_ADDED&lt;/code&gt; 事件类型， &lt;code&gt;newBd&lt;/code&gt; 不能为null。对于 &lt;code&gt;OBJECT_REMOVED&lt;/code&gt; 事件类型， &lt;code&gt;oldBd&lt;/code&gt; 不能为null。对于 &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; 事件类型， &lt;code&gt;newBd&lt;/code&gt; 和 &lt;code&gt;oldBd&lt;/code&gt; 不能为null。对于 &lt;code&gt;OBJECT_RENAMED&lt;/code&gt; 事件类型，如果新绑定或旧绑定在侦听器已注册的范围之外，则 &lt;code&gt;newBd&lt;/code&gt; 或 &lt;code&gt;oldBd&lt;/code&gt; 之一可能为null。</target>
        </trans-unit>
        <trans-unit id="28e648943eed3d5bc718d5018d02e901c65f23c3" translate="yes" xml:space="preserve">
          <source>The names must be unique: the SAX parser shall not include the same attribute twice. Attributes without values (those declared #IMPLIED without a value specified in the start tag) will be omitted from the list.</source>
          <target state="translated">名称必须是唯一的:SAX解析器不应两次包含同一个属性。没有值的属性(那些在开始标签中没有指定值而声明为#IMPLIED的属性)将从列表中省略。</target>
        </trans-unit>
        <trans-unit id="f0a8616907b43c47c1c091877850ead64500f009" translate="yes" xml:space="preserve">
          <source>The names of the available metadata formats may be queried using the &lt;code&gt;getMetadataFormatNames&lt;/code&gt; method.</source>
          <target state="translated">可以使用 &lt;code&gt;getMetadataFormatNames&lt;/code&gt; 方法查询可用元数据格式的名称。</target>
        </trans-unit>
        <trans-unit id="ac3d983bd141120202d1d7f059bd758bd4ec98ba" translate="yes" xml:space="preserve">
          <source>The names specified in the assistive_technologies property are used to query each service provider implementation. If the requested name matches the &lt;a href=&quot;../../javax/accessibility/accessibilityprovider#getName()&quot;&gt;name&lt;/a&gt; of the service provider, the &lt;a href=&quot;../../javax/accessibility/accessibilityprovider#activate()&quot;&gt;&lt;code&gt;AccessibilityProvider.activate()&lt;/code&gt;&lt;/a&gt; method will be invoked to activate the matching service provider.</source>
          <target state="translated">aidiveive_technologies属性中指定的名称用于查询每个服务提供商的实现。如果请求的名字相匹配&lt;a href=&quot;../../javax/accessibility/accessibilityprovider#getName()&quot;&gt;的名字&lt;/a&gt;服务提供者，在&lt;a href=&quot;../../javax/accessibility/accessibilityprovider#activate()&quot;&gt; &lt;code&gt;AccessibilityProvider.activate()&lt;/code&gt; &lt;/a&gt;方法将被调用，以激活匹配的服务提供商。</target>
        </trans-unit>
        <trans-unit id="029f6a8be9fb510a5f766210b1e61cc783a3f358" translate="yes" xml:space="preserve">
          <source>The names used for bindings in a &lt;code&gt;Registry&lt;/code&gt; are pure strings, not parsed. A service which stores its remote reference in a &lt;code&gt;Registry&lt;/code&gt; may wish to use a package name as a prefix in the name binding to reduce the likelihood of name collisions in the registry.</source>
          <target state="translated">在 &lt;code&gt;Registry&lt;/code&gt; 中用于绑定的名称是纯字符串，未经解析。将其远程引用存储在 &lt;code&gt;Registry&lt;/code&gt; 可能希望使用包名称作为名称绑定中的前缀，以减少注册表中名称冲突的可能性。</target>
        </trans-unit>
        <trans-unit id="bcd6ee214aa3b9f4650a6b8ae8b104453e32f318" translate="yes" xml:space="preserve">
          <source>The namespace URI at the &lt;code&gt;index&lt;/code&gt;th position in the &lt;code&gt;NameList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if there is no name for the specified index or if the index is out of range.</source>
          <target state="translated">该命名空间URI &lt;code&gt;index&lt;/code&gt; 个在位置 &lt;code&gt;NameList&lt;/code&gt; 中，或 &lt;code&gt;null&lt;/code&gt; 如果不存在用于指定索引或者如果没有名称的索引是超出范围。</target>
        </trans-unit>
        <trans-unit id="ad968aef2ce359adabcf4b06887f7b010100b12f" translate="yes" xml:space="preserve">
          <source>The namespace URI of this node, or &lt;code&gt;null&lt;/code&gt; if it is unspecified (see ).</source>
          <target state="translated">此节点的名称空间URI；如果未指定，则为 &lt;code&gt;null&lt;/code&gt; （请参阅参考资料）。</target>
        </trans-unit>
        <trans-unit id="15319931b49f78d34365b7fe637c46e690880dd9" translate="yes" xml:space="preserve">
          <source>The namespace declaration URI as a constant.</source>
          <target state="translated">命名空间声明URI作为一个常量。</target>
        </trans-unit>
        <trans-unit id="228b61ea658e02a099b69880335433a98bae30ec" translate="yes" xml:space="preserve">
          <source>The namespace declaration URI as a constant. The value is &lt;code&gt;http://www.w3.org/xmlns/2000/&lt;/code&gt;, as defined in a backwards-incompatible erratum to the &quot;Namespaces in XML&quot; recommendation. Because that erratum postdated SAX2, SAX2 defaults to the original recommendation, and does not normally use this URI.</source>
          <target state="translated">名称空间声明URI作为常量。该值是 &lt;code&gt;http://www.w3.org/xmlns/2000/&lt;/code&gt; ，在&amp;ldquo; XML的命名空间&amp;rdquo;建议的向后不兼容的勘误中定义。由于该勘误表早于SAX2，因此SAX2默认为原始建议，并且通常不使用此URI。</target>
        </trans-unit>
        <trans-unit id="894c9ad401c48e80324e2a77b581833e9593381e" translate="yes" xml:space="preserve">
          <source>The namespace of the type declared for the associated element or attribute or &lt;code&gt;null&lt;/code&gt; if the element does not have declaration or if no namespace information is available.</source>
          <target state="translated">为关联的元素或属性声明的类型的名称空间；如果元素没有声明或没有可用的名称空间信息，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1535997202a921696d8786fcff8bc91e08cf6dc6" translate="yes" xml:space="preserve">
          <source>The namespace prefix of this node, or &lt;code&gt;null&lt;/code&gt; if it is unspecified.</source>
          <target state="translated">此节点的名称空间前缀；如果未指定，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bdb974fd4cde04fb21c7dccde9027bcf31610fc0" translate="yes" xml:space="preserve">
          <source>The namespace prefix of this node, or &lt;code&gt;null&lt;/code&gt; if it is unspecified. When it is defined to be &lt;code&gt;null&lt;/code&gt;, setting it has no effect, including if the node is read-only.</source>
          <target state="translated">此节点的名称空间前缀；如果未指定，则为 &lt;code&gt;null&lt;/code&gt; 。如果将其定义为 &lt;code&gt;null&lt;/code&gt; ，则设置无效，包括节点是否为只读。</target>
        </trans-unit>
        <trans-unit id="252ba1c56374166baaa96e269996326d63427fdf" translate="yes" xml:space="preserve">
          <source>The nano-of-day.</source>
          <target state="translated">日的纳米。</target>
        </trans-unit>
        <trans-unit id="5eab94f056909b0481546e3eec3879a8647f2fdf" translate="yes" xml:space="preserve">
          <source>The nano-of-second.</source>
          <target state="translated">纳秒级的。</target>
        </trans-unit>
        <trans-unit id="2bb5963aab34db2c750039ae2c23921252e470b4" translate="yes" xml:space="preserve">
          <source>The nanosecond field is set to zero.</source>
          <target state="translated">纳秒场设置为零。</target>
        </trans-unit>
        <trans-unit id="1f1f9f634c617722a2cc7a183fbeaa32e432ed0a" translate="yes" xml:space="preserve">
          <source>The nanosecond in second field is set to zero.</source>
          <target state="translated">秒场的纳秒设置为零。</target>
        </trans-unit>
        <trans-unit id="76fd7e21a457011d726338242241f8903c347ee8" translate="yes" xml:space="preserve">
          <source>The nanosecond-of-second value measures the total number of nanoseconds from the second returned by &lt;a href=&quot;#getEpochSecond()&quot;&gt;&lt;code&gt;getEpochSecond()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">纳秒的值测量从&lt;a href=&quot;#getEpochSecond()&quot;&gt; &lt;code&gt;getEpochSecond()&lt;/code&gt; &lt;/a&gt;返回的秒数起的纳秒总数。</target>
        </trans-unit>
        <trans-unit id="83d052126d41940b2289154ad002f598ff00e77e" translate="yes" xml:space="preserve">
          <source>The nanosecond-of-second value measures the total number of nanoseconds from the second returned by &lt;code&gt;getEpochSecond&lt;/code&gt;.</source>
          <target state="translated">纳秒的 &lt;code&gt;getEpochSecond&lt;/code&gt; 从getEpochSecond返回的秒数起的纳秒总数。</target>
        </trans-unit>
        <trans-unit id="8d9af2aeac2c5039b9c64536435d8f3fb400bacf" translate="yes" xml:space="preserve">
          <source>The native byte order of the hardware upon which this Java virtual machine is running</source>
          <target state="translated">该Java虚拟机所运行的硬件的本机字节顺序。</target>
        </trans-unit>
        <trans-unit id="97bded427ee67f08fd9eb95689f83724ec8164db" translate="yes" xml:space="preserve">
          <source>The native character encoding of the Java programming language is UTF-16. A charset in the Java platform therefore defines a mapping between sequences of sixteen-bit UTF-16 code units (that is, sequences of chars) and sequences of bytes.</source>
          <target state="translated">Java编程语言的本地字符编码是UTF-16。因此,Java平台中的字符集定义了16位UTF-16编码单位序列(即字符序列)和字节序列之间的映射。</target>
        </trans-unit>
        <trans-unit id="1219b90b3713ea6ffa550dbe0af918ae384ffcc9" translate="yes" xml:space="preserve">
          <source>The native platform print dialog should be used.</source>
          <target state="translated">应使用本地平台打印对话框。</target>
        </trans-unit>
        <trans-unit id="83686ff5a26a6fe617fa1acbc83be8300b5c6546" translate="yes" xml:space="preserve">
          <source>The native process ID is an identification number that the operating system assigns to the process. The range for process id values is dependent on the operating system. For example, an embedded system might use a 16-bit value. Status information about a process is retrieved from the native system and may change asynchronously; processes may be created or terminate spontaneously. The time between when a process terminates and the process id is reused for a new process is unpredictable. Race conditions can exist between checking the status of a process and acting upon it. When using ProcessHandles avoid assumptions about the liveness or identity of the underlying process.</source>
          <target state="translated">本机进程ID是操作系统分配给进程的标识号。进程ID值的范围取决于操作系统。例如,嵌入式系统可能使用16位值。进程的状态信息是从本机系统中检索的,可能会异步变化;进程可能被创建或自发终止。进程终止和进程id被重新用于新进程之间的时间是不可预测的。在检查一个进程的状态和对其采取行动之间可能存在竞赛条件。当使用ProcessHandles时,要避免假设底层进程的有效性或身份。</target>
        </trans-unit>
        <trans-unit id="e72b8d07ae2a52493e69fa910beb1a9da83caf12" translate="yes" xml:space="preserve">
          <source>The natural ordering for a class &lt;code&gt;C&lt;/code&gt; is said to be</source>
          <target state="translated">据说 &lt;code&gt;C&lt;/code&gt; 类的自然排序是</target>
        </trans-unit>
        <trans-unit id="e26b92bd376c727cc9ae6d911fde6e70b291f7e3" translate="yes" xml:space="preserve">
          <source>The natural width/height of the component or component group, in pixels.</source>
          <target state="translated">组件或组件组的自然宽度/高度,单位为像素。</target>
        </trans-unit>
        <trans-unit id="b84120c20a6bdf6d7f5ae3856a89d9473555ad90" translate="yes" xml:space="preserve">
          <source>The negotiated SSL session</source>
          <target state="translated">协商的SSL会话</target>
        </trans-unit>
        <trans-unit id="9de1c83fb5bc0b107cb559ca22ebf44b869de4c2" translate="yes" xml:space="preserve">
          <source>The nest host of &lt;code&gt;C&lt;/code&gt; is determined to be &lt;code&gt;H&lt;/code&gt;, the nest host of the lookup class.</source>
          <target state="translated">确定 &lt;code&gt;C&lt;/code&gt; 的嵌套宿主为 &lt;code&gt;H&lt;/code&gt; ，即查找类的嵌套宿主。</target>
        </trans-unit>
        <trans-unit id="234a9e648b6468143062def34d6ca8f9dc630930" translate="yes" xml:space="preserve">
          <source>The net result of these issues is that if the &lt;code&gt;Math.sin()&lt;/code&gt; and &lt;code&gt;Math.cos()&lt;/code&gt; methods are used to directly generate the values for the matrix modifications during these radian-based rotation operations then the resulting transform is never strictly classifiable as a quadrant rotation even for a simple case like &lt;code&gt;rotate(Math.PI/2.0)&lt;/code&gt;, due to minor variations in the matrix caused by the non-0.0 values obtained for the sine and cosine. If these transforms are not classified as quadrant rotations then subsequent code which attempts to optimize further operations based upon the type of the transform will be relegated to its most general implementation.</source>
          <target state="translated">这些问题的最终结果是，如果在这些基于弧度的旋转操作过程中，使用 &lt;code&gt;Math.sin()&lt;/code&gt; 和 &lt;code&gt;Math.cos()&lt;/code&gt; 方法直接生成矩阵修改的值，则生成的变换将永远无法严格分类为象限旋转，即使对于诸如 &lt;code&gt;rotate(Math.PI/2.0)&lt;/code&gt; 之类的简单情况，由于由正弦和余弦值获得的非0.0值引起的矩阵微小变化，也可以实现象限旋转。如果这些变换未归类为象限旋转，则尝试根据变换类型优化其他操作的后续代码将被归类为其最一般的实现。</target>
        </trans-unit>
        <trans-unit id="f6f46588995ed496d4911f8ff1d273d4a2dd3241" translate="yes" xml:space="preserve">
          <source>The network class loader subclass must define the methods &lt;a href=&quot;#findClass(java.lang.String)&quot;&gt;&lt;code&gt;findClass&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;loadClassData&lt;/code&gt; to load a class from the network. Once it has downloaded the bytes that make up the class, it should use the method &lt;a href=&quot;#defineClass(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/a&gt; to create a class instance. A sample implementation is:</source>
          <target state="translated">网络类加载器子类必须定义方法&lt;a href=&quot;#findClass(java.lang.String)&quot;&gt; &lt;code&gt;findClass&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;loadClassData&lt;/code&gt; 才能从网络加载类。下载构成类的字节后，应使用&lt;a href=&quot;#defineClass(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;defineClass&lt;/code&gt; &lt;/a&gt;方法创建类实例。一个示例实现是：</target>
        </trans-unit>
        <trans-unit id="29d0ba30c08b06286e5f241683ca2b4246f089a6" translate="yes" xml:space="preserve">
          <source>The network class loader subclass must define the methods &lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;findClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;loadClassData&lt;/code&gt; to load a class from the network. Once it has downloaded the bytes that make up the class, it should use the method &lt;a href=&quot;classloader#defineClass-byte:A-int-int-&quot;&gt;&lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; to create a class instance. A sample implementation is:</source>
          <target state="translated">网络类加载器子类必须定义方法&lt;a href=&quot;classloader#findClass-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;findClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;和 &lt;code&gt;loadClassData&lt;/code&gt; 才能从网络加载类。下载构成类的字节后，应使用&lt;a href=&quot;classloader#defineClass-byte:A-int-int-&quot;&gt; &lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法创建一个类实例。一个示例实现是：</target>
        </trans-unit>
        <trans-unit id="60bdca0ec3065d96f7c4fa13ff060a6ac497223a" translate="yes" xml:space="preserve">
          <source>The network interface for Internet Protocol (IP) multicast datagrams</source>
          <target state="translated">互联网协议(IP)多播数据报的网络接口。</target>
        </trans-unit>
        <trans-unit id="67864d43181467d0e750e9cf2430f7984db2145a" translate="yes" xml:space="preserve">
          <source>The network interface for Internet Protocol (IP) multicast datagrams.</source>
          <target state="translated">互联网协议(IP)多播数据报的网络接口。</target>
        </trans-unit>
        <trans-unit id="77e297f05cd6c24b81ee98871c2f562cc1712cbf" translate="yes" xml:space="preserve">
          <source>The network interface may not be uniquely identified by the InetAddress returned.</source>
          <target state="translated">网络接口可能不会被返回的InetAddress唯一识别。</target>
        </trans-unit>
        <trans-unit id="62bdfbdb68bbddab14a9ba442a221c26cc2c40f8" translate="yes" xml:space="preserve">
          <source>The network interface may not be uniquely identified by the InetAddress returned. Use &lt;a href=&quot;#getNetworkInterface()&quot;&gt;&lt;code&gt;getNetworkInterface()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">返回的InetAddress可能无法唯一地标识网络接口。使用&lt;a href=&quot;#getNetworkInterface()&quot;&gt; &lt;code&gt;getNetworkInterface()&lt;/code&gt; &lt;/a&gt;代替。</target>
        </trans-unit>
        <trans-unit id="c1580356f22e412c53443664b7e31925aaa4d1af" translate="yes" xml:space="preserve">
          <source>The network software may discard bytes that are buffered by the socket. Bytes that aren't discarded by the network software can be read using &lt;a href=&quot;../io/inputstream#read()&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">网络软件可能会丢弃套接字缓冲的字节。可以使用&lt;a href=&quot;../io/inputstream#read()&quot;&gt; &lt;code&gt;read&lt;/code&gt; 读取&lt;/a&gt;网络软件未丢弃的字节。</target>
        </trans-unit>
        <trans-unit id="c6fe308b0ca1ecd4664a44845bd1ebbb9f779e7d" translate="yes" xml:space="preserve">
          <source>The network software may discard bytes that are buffered by the socket. Bytes that aren't discarded by the network software can be read using &lt;a href=&quot;../io/inputstream#read--&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">网络软件可能会丢弃套接字缓冲的字节。可以使用&lt;a href=&quot;../io/inputstream#read--&quot;&gt; &lt;code&gt;read&lt;/code&gt; 读取&lt;/a&gt;网络软件未丢弃的字节。</target>
        </trans-unit>
        <trans-unit id="55670e5d5dd2d95a1600413eeec6cbda76a343d6" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;bigdecimal#divide-java.math.BigDecimal-int-java.math.RoundingMode-&quot;&gt;&lt;code&gt;divide(BigDecimal, int, RoundingMode)&lt;/code&gt;&lt;/a&gt; method should be used in preference to this legacy method.</source>
          <target state="translated">新的&lt;a href=&quot;bigdecimal#divide-java.math.BigDecimal-int-java.math.RoundingMode-&quot;&gt; &lt;code&gt;divide(BigDecimal, int, RoundingMode)&lt;/code&gt; &lt;/a&gt;方法应优先于此传统方法使用。</target>
        </trans-unit>
        <trans-unit id="ac784c4d64146b5dcf94b8e436a19a6c04e1010d" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;bigdecimal#divide-java.math.BigDecimal-java.math.RoundingMode-&quot;&gt;&lt;code&gt;divide(BigDecimal, RoundingMode)&lt;/code&gt;&lt;/a&gt; method should be used in preference to this legacy method.</source>
          <target state="translated">与该旧方法相比，应优先使用新的&lt;a href=&quot;bigdecimal#divide-java.math.BigDecimal-java.math.RoundingMode-&quot;&gt; &lt;code&gt;divide(BigDecimal, RoundingMode)&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="2735dd48d8041cfacd708718becc725a951d4601" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt;&lt;code&gt;setScale(int, RoundingMode)&lt;/code&gt;&lt;/a&gt; method should be used in preference to this legacy method.</source>
          <target state="translated">应该优先于此旧方法使用新的&lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt; &lt;code&gt;setScale(int, RoundingMode)&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="78cebb1e774e1e4b22b69b8b3afb2ebe16d107f0" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;--show-*&lt;/code&gt; options provide a more detailed replacement for the older options &lt;code&gt;-public&lt;/code&gt;, &lt;code&gt;-protected&lt;/code&gt;, &lt;code&gt;-package&lt;/code&gt;, &lt;code&gt;-private&lt;/code&gt;. Alternatively, the older options can continue to be used as shorter forms for combinations of the new options, as described below:</source>
          <target state="translated">新 &lt;code&gt;--show-*&lt;/code&gt; 选项提供了对于上了年纪的选项更详细的更换 &lt;code&gt;-public&lt;/code&gt; ， &lt;code&gt;-protected&lt;/code&gt; ， &lt;code&gt;-package&lt;/code&gt; ， &lt;code&gt;-private&lt;/code&gt; 。另外，较旧的选项可以继续用作新选项组合的较短形式，如下所述：</target>
        </trans-unit>
        <trans-unit id="0ac33af37763a895fb45c8674bcd9b2f4195f026" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;CDATASection&lt;/code&gt; object.</source>
          <target state="translated">新的 &lt;code&gt;CDATASection&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="21ab9f29997ac044ac786c27f5f4247505485231" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;Comment&lt;/code&gt; object.</source>
          <target state="translated">新的 &lt;code&gt;Comment&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="3de7e88be2994a0198fc6b96016f6a661e41553f" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;EntityReference&lt;/code&gt; object.</source>
          <target state="translated">新的 &lt;code&gt;EntityReference&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="2ea1019c83ded3f69e80d30416950390eadbdebc" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;ProcessingInstruction&lt;/code&gt; object.</source>
          <target state="translated">新的 &lt;code&gt;ProcessingInstruction&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="ba45d206f6ce10fd626fa94b5424cc97accbd485" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;Rectangle&lt;/code&gt; has &lt;code&gt;(x - h, y - v)&lt;/code&gt; as its upper-left corner, width of &lt;code&gt;(width + 2h)&lt;/code&gt;, and a height of &lt;code&gt;(height + 2v)&lt;/code&gt;.</source>
          <target state="translated">新 &lt;code&gt;Rectangle&lt;/code&gt; 的左上角为 &lt;code&gt;(x - h, y - v)&lt;/code&gt; ，宽度为 &lt;code&gt;(width + 2h)&lt;/code&gt; ，高度为 &lt;code&gt;(height + 2v)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b974fb076134f8a2b5e9c5d2e506d6b6d140c6b6" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;SerialArray&lt;/code&gt; object contains the same elements as the &lt;code&gt;Array&lt;/code&gt; object from which it is built, except when the base type is the SQL type &lt;code&gt;BLOB&lt;/code&gt;, &lt;code&gt;CLOB&lt;/code&gt;, &lt;code&gt;DATALINK&lt;/code&gt; or &lt;code&gt;JAVA_OBJECT&lt;/code&gt;. In this case, each element in the new &lt;code&gt;SerialArray&lt;/code&gt; object is the appropriate serialized form, that is, a &lt;code&gt;SerialBlob&lt;/code&gt;, &lt;code&gt;SerialClob&lt;/code&gt;, &lt;code&gt;SerialDatalink&lt;/code&gt;, or &lt;code&gt;SerialJavaObject&lt;/code&gt; object.</source>
          <target state="translated">新的 &lt;code&gt;SerialArray&lt;/code&gt; 对象包含与其构建时所用的 &lt;code&gt;Array&lt;/code&gt; 对象相同的元素，但基本类型为SQL类型 &lt;code&gt;BLOB&lt;/code&gt; ， &lt;code&gt;CLOB&lt;/code&gt; ， &lt;code&gt;DATALINK&lt;/code&gt; 或 &lt;code&gt;JAVA_OBJECT&lt;/code&gt; 时除外。在这种情况下，新 &lt;code&gt;SerialArray&lt;/code&gt; 对象中的每个元素都是适当的序列化形式，即 &lt;code&gt;SerialBlob&lt;/code&gt; ， &lt;code&gt;SerialClob&lt;/code&gt; ， &lt;code&gt;SerialDatalink&lt;/code&gt; 或 &lt;code&gt;SerialJavaObject&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="80e0ce8f3d894008a7021d81d24aa60554c9d440" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;SerialArray&lt;/code&gt; object contains the same elements as the &lt;code&gt;Array&lt;/code&gt; object from which it is built, except when the base type is the SQL type &lt;code&gt;STRUCT&lt;/code&gt;, &lt;code&gt;ARRAY&lt;/code&gt;, &lt;code&gt;BLOB&lt;/code&gt;, &lt;code&gt;CLOB&lt;/code&gt;, &lt;code&gt;DATALINK&lt;/code&gt; or &lt;code&gt;JAVA_OBJECT&lt;/code&gt;. In this case, each element in the new &lt;code&gt;SerialArray&lt;/code&gt; object is the appropriate serialized form, that is, a &lt;code&gt;SerialStruct&lt;/code&gt;, &lt;code&gt;SerialArray&lt;/code&gt;, &lt;code&gt;SerialBlob&lt;/code&gt;, &lt;code&gt;SerialClob&lt;/code&gt;, &lt;code&gt;SerialDatalink&lt;/code&gt;, or &lt;code&gt;SerialJavaObject&lt;/code&gt; object.</source>
          <target state="translated">新 &lt;code&gt;SerialArray&lt;/code&gt; 对象包含相同的元素， &lt;code&gt;Array&lt;/code&gt; 从其中它是建立对象，除非当基类型是SQL类型 &lt;code&gt;STRUCT&lt;/code&gt; ， &lt;code&gt;ARRAY&lt;/code&gt; ， &lt;code&gt;BLOB&lt;/code&gt; ， &lt;code&gt;CLOB&lt;/code&gt; ， &lt;code&gt;DATALINK&lt;/code&gt; 或 &lt;code&gt;JAVA_OBJECT&lt;/code&gt; 。在这种情况下，新 &lt;code&gt;SerialArray&lt;/code&gt; 对象中的每个元素都是适当的序列化形式，即 &lt;code&gt;SerialStruct&lt;/code&gt; ， &lt;code&gt;SerialArray&lt;/code&gt; ， &lt;code&gt;SerialBlob&lt;/code&gt; ， &lt;code&gt;SerialClob&lt;/code&gt; ， &lt;code&gt;SerialDatalink&lt;/code&gt; 或 &lt;code&gt;SerialJavaObject&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="06abd2075e2ed1721af0f48e630558bf700d5acf" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;SerialBlob&lt;/code&gt; object is initialized with the data from the &lt;code&gt;Blob&lt;/code&gt; object; therefore, the &lt;code&gt;Blob&lt;/code&gt; object should have previously brought the SQL &lt;code&gt;BLOB&lt;/code&gt; value's data over to the client from the database. Otherwise, the new &lt;code&gt;SerialBlob&lt;/code&gt; object will contain no data.</source>
          <target state="translated">使用来自 &lt;code&gt;Blob&lt;/code&gt; 对象的数据初始化新的 &lt;code&gt;SerialBlob&lt;/code&gt; 对象；因此， &lt;code&gt;Blob&lt;/code&gt; 对象以前应该已经将SQL &lt;code&gt;BLOB&lt;/code&gt; 值的数据从数据库带到了客户端。否则，新的 &lt;code&gt;SerialBlob&lt;/code&gt; 对象将不包含任何数据。</target>
        </trans-unit>
        <trans-unit id="a900d5f2ddce08647425d98d24a6bddafdbf9ba0" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;SerialBlob&lt;/code&gt; object is initialized with the data from the &lt;code&gt;byte&lt;/code&gt; array, thus allowing disconnected &lt;code&gt;RowSet&lt;/code&gt; objects to establish serialized &lt;code&gt;Blob&lt;/code&gt; objects without touching the data source.</source>
          <target state="translated">使用来自 &lt;code&gt;byte&lt;/code&gt; 数组的数据初始化新的 &lt;code&gt;SerialBlob&lt;/code&gt; 对象，从而允许断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象建立序列化的 &lt;code&gt;Blob&lt;/code&gt; 对象，而无需接触数据源。</target>
        </trans-unit>
        <trans-unit id="78aaae994b4dabb3fc80be4b84511dee256896b1" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;SerialClob&lt;/code&gt; object is initialized with the data from the &lt;code&gt;Clob&lt;/code&gt; object; therefore, the &lt;code&gt;Clob&lt;/code&gt; object should have previously brought the SQL &lt;code&gt;CLOB&lt;/code&gt; value's data over to the client from the database. Otherwise, the new &lt;code&gt;SerialClob&lt;/code&gt; object object will contain no data.</source>
          <target state="translated">新的 &lt;code&gt;SerialClob&lt;/code&gt; 对象使用 &lt;code&gt;Clob&lt;/code&gt; 对象中的数据初始化；因此， &lt;code&gt;Clob&lt;/code&gt; 对象以前应该已经将SQL &lt;code&gt;CLOB&lt;/code&gt; 值的数据从数据库传递到了客户端。否则，新的 &lt;code&gt;SerialClob&lt;/code&gt; 对象对象将不包含任何数据。</target>
        </trans-unit>
        <trans-unit id="17353bad20748ceb3bfb756b24c2c22df6c4c460" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;SerialClob&lt;/code&gt; object is initialized with the data from the &lt;code&gt;char&lt;/code&gt; array, thus allowing disconnected &lt;code&gt;RowSet&lt;/code&gt; objects to establish a serialized &lt;code&gt;Clob&lt;/code&gt; object without touching the data source.</source>
          <target state="translated">使用来自 &lt;code&gt;char&lt;/code&gt; 数组的数据初始化新的 &lt;code&gt;SerialClob&lt;/code&gt; 对象，从而允许断开连接的 &lt;code&gt;RowSet&lt;/code&gt; 对象建立序列化的 &lt;code&gt;Clob&lt;/code&gt; 对象，而无需接触数据源。</target>
        </trans-unit>
        <trans-unit id="cd289b7da3f8d0a5f7fe07055b8416ed256428d0" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;Text&lt;/code&gt; object.</source>
          <target state="translated">新的 &lt;code&gt;Text&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="5d361a6c28b3a7b924134f4c2310c4356b571de7" translate="yes" xml:space="preserve">
          <source>The new Raster may additionally be translated to a different coordinate system for the plane than that used by the current Raster. The childMinX and childMinY parameters give the new (x, y) coordinate of the upper-left pixel of the returned Raster; the coordinate (childMinX, childMinY) in the new Raster will map to the same pixel as the coordinate (parentX, parentY) in the current Raster.</source>
          <target state="translated">新的Raster还可以被翻译成与当前Raster不同的平面坐标系。childMinX和childMinY参数给出了返回栅格左上角像素的新坐标(x,y);新栅格中的坐标(childMinX,childMinY)将映射到与当前栅格中的坐标(parentX,parentY)相同的像素。</target>
        </trans-unit>
        <trans-unit id="82b647f77da8fc51c747ee0f20a9855467762c05" translate="yes" xml:space="preserve">
          <source>The new Raster may be defined to contain only a subset of the bands of the current Raster, possibly reordered, by means of the bandList parameter. If bandList is null, it is taken to include all of the bands of the current Raster in their current order.</source>
          <target state="translated">新的栅格可以被定义为只包含当前栅格中的一个子集,可以通过bandList参数重新排序。如果bandList为空,则表示包含当前栅格的所有频段,并按其当前顺序排列。</target>
        </trans-unit>
        <trans-unit id="7265ccc5d623c310cc3ac47a66fc5eed1ffa49bf" translate="yes" xml:space="preserve">
          <source>The new URI</source>
          <target state="translated">新的URI</target>
        </trans-unit>
        <trans-unit id="5f405da8bbae6be9b41dfa9b6d7bbc89199565ba" translate="yes" xml:space="preserve">
          <source>The new WritableRaster may additionally be translated to a different coordinate system for the plane than that used by the current WritableRaster. The childMinX and childMinY parameters give the new (x, y) coordinate of the upper-left pixel of the returned WritableRaster; the coordinate (childMinX, childMinY) in the new WritableRaster will map to the same pixel as the coordinate (parentX, parentY) in the current WritableRaster.</source>
          <target state="translated">新的WritableRaster可以被翻译成与当前WritableRaster不同的平面坐标系。childMinX和childMinY参数给出了返回的WritableRaster的左上角像素的新坐标(x,y);新WritableRaster中的坐标(childMinX,childMinY)将映射到与当前WritableRaster中的坐标(parentX,parentY)相同的像素。</target>
        </trans-unit>
        <trans-unit id="ab5c193afbcca8cc582eca9bc77cb959c8b4bf3a" translate="yes" xml:space="preserve">
          <source>The new WritableRaster may be defined to contain only a subset of the bands of the current WritableRaster, possibly reordered, by means of the bandList parameter. If bandList is null, it is taken to include all of the bands of the current WritableRaster in their current order.</source>
          <target state="translated">新的WritableRaster可以被定义为只包含当前WritableRaster的一个子集,可以通过bandList参数重新排序。如果bandList为空,则表示包含当前WritableRaster的所有频段的当前顺序。</target>
        </trans-unit>
        <trans-unit id="a2b375f7ec337d0b7321744b498b77bbbb43dc04" translate="yes" xml:space="preserve">
          <source>The new binding: information about the object after the change.</source>
          <target state="translated">新的绑定:变更后的对象信息。</target>
        </trans-unit>
        <trans-unit id="811ee44cf7e2eeb64087a000511e1308ea7b319a" translate="yes" xml:space="preserve">
          <source>The new buffer</source>
          <target state="translated">新的缓冲区</target>
        </trans-unit>
        <trans-unit id="a9f750a1ec47c53e6933e7367f0dd037a6159afe" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given byte array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, and its mark will be undefined. Its &lt;a href=&quot;bytebuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;bytebuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&amp;gt;&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新的缓冲区将由给定的字节数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，并且其标记将是未定义的。它的&lt;a href=&quot;bytebuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且它的&lt;a href=&quot;bytebuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&amp;gt;&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="90e1aff286e96d964a4b0f5b68af2f26432a8471" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given byte array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, its mark will be undefined, and its byte order will be &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的字节数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，其标记将是未定义的，其字节顺序将为&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="b87cda267359dfa7e6d3c0f1f70075ab22125777" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given byte array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, and its mark will be undefined. Its &lt;a href=&quot;bytebuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;bytebuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新的缓冲区将由给定的字节数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为 &lt;code&gt;offset&lt;/code&gt; ，其限制将为 &lt;code&gt;offset + length&lt;/code&gt; ，并且其标记将不确定。它的&lt;a href=&quot;bytebuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，其&lt;a href=&quot;bytebuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="8379c53880b85933ce4a6ea8375b41465251bdc7" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given byte array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, its mark will be undefined, and its byte order will be &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的字节数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将被 &lt;code&gt;offset&lt;/code&gt; ，其限制将为 &lt;code&gt;offset + length&lt;/code&gt; ，其标记将是未定义的，其字节顺序将为&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="3a25bef4c13a14c4415962bc64f251e299155ad6" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given char array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, and its mark will be undefined. Its &lt;a href=&quot;charbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;charbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&amp;gt;&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的char数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，并且其标记将是未定义的。它的&lt;a href=&quot;charbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且它的&lt;a href=&quot;charbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&amp;gt;&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="c2482ceaa24382ea21ac8d5f908044a26e325543" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given char array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新的缓冲区将由给定的char数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将是 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，其标记将是未定义的，并且其字节顺序将是基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="0d2674995ec7db927894a48c261ddea8d595a398" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given char array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, and its mark will be undefined. Its &lt;a href=&quot;charbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;charbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的char数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为 &lt;code&gt;offset&lt;/code&gt; ，其限制将为 &lt;code&gt;offset + length&lt;/code&gt; ，并且其标记将不确定。它的&lt;a href=&quot;charbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，其&lt;a href=&quot;charbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="735303f9844fa882ca8acee8fe46085bd77a959b" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given char array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新的缓冲区将由给定的char数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量为 &lt;code&gt;array.length&lt;/code&gt; ，其位置为 &lt;code&gt;offset&lt;/code&gt; ，其限制为 &lt;code&gt;offset + length&lt;/code&gt; ，其标记未定义，其字节顺序为基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="35306637861eed16af88b4e2dfb5c1e37c341a44" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given double array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, and its mark will be undefined. Its &lt;a href=&quot;doublebuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;doublebuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&amp;gt;&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的double数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，并且其标记将是未定义的。它的&lt;a href=&quot;doublebuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且它的&lt;a href=&quot;doublebuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&amp;gt;&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="eb0dbfe7f7fa1cea1555c6a9994e13ed4e5283a8" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given double array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的double数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将是 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，其标记将是未定义的，并且其字节顺序将是基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="8dceaea7882e5d50ea82b5e02eaccd6768f24042" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given double array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, and its mark will be undefined. Its &lt;a href=&quot;doublebuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;doublebuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的double数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为 &lt;code&gt;offset&lt;/code&gt; ，其限制将为 &lt;code&gt;offset + length&lt;/code&gt; ，并且其标记将不确定。它的&lt;a href=&quot;doublebuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，其&lt;a href=&quot;doublebuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="48e7d25898b00d2244ede003e69d1683b40c8061" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given double array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的double数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量为 &lt;code&gt;array.length&lt;/code&gt; ，其位置为 &lt;code&gt;offset&lt;/code&gt; ，其限制为 &lt;code&gt;offset + length&lt;/code&gt; ，其标记未定义，其字节顺序为基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="a4320fd76f9f4ca139f58312ae6d89d82b8751b8" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given float array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, and its mark will be undefined. Its &lt;a href=&quot;floatbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;floatbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&amp;gt;&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的float数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，并且其标记将是未定义的。它的&lt;a href=&quot;floatbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且它的&lt;a href=&quot;floatbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&amp;gt;&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="23ca7ac0ad6d66ac718f1ac4f45677a5be8afe92" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given float array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新的缓冲区将由给定的float数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将是 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，其标记将是未定义的，并且其字节顺序将是基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="1e7911665bb7451ce6034993a67b89354cf0e0fe" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given float array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, and its mark will be undefined. Its &lt;a href=&quot;floatbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;floatbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的float数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为 &lt;code&gt;offset&lt;/code&gt; ，其限制将为 &lt;code&gt;offset + length&lt;/code&gt; ，并且其标记将不确定。它的&lt;a href=&quot;floatbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，其&lt;a href=&quot;floatbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="aaee794f7a79d58138226cea2eb7241025e96893" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given float array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新的缓冲区将由给定的float数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量为 &lt;code&gt;array.length&lt;/code&gt; ，其位置为 &lt;code&gt;offset&lt;/code&gt; ，其限制为 &lt;code&gt;offset + length&lt;/code&gt; ，其标记未定义，其字节顺序为基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="3fd84a12e6c22a3ee3939f3f6a961f726d7f5c1a" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given int array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, and its mark will be undefined. Its &lt;a href=&quot;intbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;intbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&amp;gt;&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的int数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，并且其标记将是未定义的。它的&lt;a href=&quot;intbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且它的&lt;a href=&quot;intbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&amp;gt;&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="542acab240cf7a91a0f009397f9d5e391547359c" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given int array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的int数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将是 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，其标记将是未定义的，并且其字节顺序将是基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="c8228e64f023a9d3a8c7700654a22211275f6638" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given int array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, and its mark will be undefined. Its &lt;a href=&quot;intbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;intbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的int数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为 &lt;code&gt;offset&lt;/code&gt; ，其限制将为 &lt;code&gt;offset + length&lt;/code&gt; ，并且其标记将不确定。它的&lt;a href=&quot;intbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，其&lt;a href=&quot;intbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="7a5777903d7dc4a8dd6a7b994da71372ebd61285" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given int array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的int数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量为 &lt;code&gt;array.length&lt;/code&gt; ，其位置为 &lt;code&gt;offset&lt;/code&gt; ，其限制为 &lt;code&gt;offset + length&lt;/code&gt; ，其标记未定义，其字节顺序为基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="b259e53add3a5528efdfbd8e55c0de407403a961" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given long array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, and its mark will be undefined. Its &lt;a href=&quot;longbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;longbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&amp;gt;&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的长数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，并且其标记将是未定义的。它的&lt;a href=&quot;longbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且它的&lt;a href=&quot;longbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&amp;gt;&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="c025cebd020483c761ea0b9d2e34843256ba8160" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given long array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的长数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将是 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，其标记将是未定义的，并且其字节顺序将是基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="78548868dc1648694724e198deaa1f84f096b4c8" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given long array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, and its mark will be undefined. Its &lt;a href=&quot;longbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;longbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的长数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为 &lt;code&gt;offset&lt;/code&gt; ，其限制将为 &lt;code&gt;offset + length&lt;/code&gt; ，并且其标记将不确定。它的&lt;a href=&quot;longbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，其&lt;a href=&quot;longbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="05e5d377bee49b4b9cb9eb2b7777b988471bf1d3" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given long array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的长数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量为 &lt;code&gt;array.length&lt;/code&gt; ，其位置为 &lt;code&gt;offset&lt;/code&gt; ，其限制为 &lt;code&gt;offset + length&lt;/code&gt; ，其标记未定义，其字节顺序为基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="d08a08b839ac302da9552db1b3bb522b1eeb1ba6" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given short array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, and its mark will be undefined. Its &lt;a href=&quot;shortbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;shortbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&amp;gt;&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的short数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，并且其标记将是未定义的。它的&lt;a href=&quot;shortbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且它的&lt;a href=&quot;shortbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&amp;gt;&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="938f79a566e736887d022dd209c93277878b1d06" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given short array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be &lt;code&gt;array.length&lt;/code&gt;, its position will be zero, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新的缓冲区将由给定的short数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量和限制将是 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为零，其标记将是未定义的，并且其字节顺序将是基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="b7616ef26b29d3dbc28547aecc940e0b07b48cc8" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given short array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, and its mark will be undefined. Its &lt;a href=&quot;shortbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;shortbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区将由给定的short数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量将为 &lt;code&gt;array.length&lt;/code&gt; ，其位置将为 &lt;code&gt;offset&lt;/code&gt; ，其限制将为 &lt;code&gt;offset + length&lt;/code&gt; ，并且其标记将不确定。它的&lt;a href=&quot;shortbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，其&lt;a href=&quot;shortbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="e50668684daefc59dbea18aaaf601a06240c643e" translate="yes" xml:space="preserve">
          <source>The new buffer will be backed by the given short array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity will be &lt;code&gt;array.length&lt;/code&gt;, its position will be &lt;code&gt;offset&lt;/code&gt;, its limit will be &lt;code&gt;offset + length&lt;/code&gt;, its mark will be undefined, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. Its &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; will be the given array, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新的缓冲区将由给定的short数组支持；也就是说，对缓冲区的修改将导致数组被修改，反之亦然。新缓冲区的容量为 &lt;code&gt;array.length&lt;/code&gt; ，其位置为 &lt;code&gt;offset&lt;/code&gt; ，其限制为 &lt;code&gt;offset + length&lt;/code&gt; ，其标记未定义，其字节顺序为基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它的&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;将是给定的数组，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="c14e82168abd4ac4df9c13b98e0a4c8e7cfc8643" translate="yes" xml:space="preserve">
          <source>The new buffer will share this buffer's content; that is, if the content of this buffer is mutable then modifications to one buffer will cause the other to be modified. The new buffer's capacity will be that of this buffer, its position will be &lt;code&gt;position()&lt;/code&gt; + &lt;code&gt;start&lt;/code&gt;, and its limit will be &lt;code&gt;position()&lt;/code&gt; + &lt;code&gt;end&lt;/code&gt;. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区将共享该缓冲区的内容；也就是说，如果该缓冲区的内容是可变的，则对一个缓冲区的修改将导致另一个缓冲区被修改。新缓冲区的容量将是此缓冲区的容量，其位置将是 &lt;code&gt;position()&lt;/code&gt; + &lt;code&gt;start&lt;/code&gt; ，其限制将是 &lt;code&gt;position()&lt;/code&gt; + &lt;code&gt;end&lt;/code&gt; 。当且仅当该缓冲区是直接缓冲区时，新缓冲区才是直接缓冲区；当且仅当该缓冲区是只读缓冲区时，它才是只读缓冲区。</target>
        </trans-unit>
        <trans-unit id="dc2c8b2d7d20a9e7009df83e54bdc37e78f70e0d" translate="yes" xml:space="preserve">
          <source>The new buffer's capacity, limit, position and mark values will be identical to those of this buffer. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新的缓冲区的容量、极限、位置和标记值将与本缓冲区相同。如果且仅当这个缓冲区是直接的,新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="e41c4ae231a59cfcca0e03cc7c39edbc8d2edb92" translate="yes" xml:space="preserve">
          <source>The new buffer's capacity, limit, position, and mark values will be identical to those of this buffer, and its byte order will be &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新缓冲区的容量，限制，位置和标记值将与此缓冲区的容量，限制，位置和标记值相同，并且其字节顺序为&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="49eb244b64c8d9a9ba9cd656fc24f8323f3eb0f6" translate="yes" xml:space="preserve">
          <source>The new buffer's capacity, limit, position, and mark values will be identical to those of this buffer, and its byte order will be &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的容量，限制，位置和标记值将与此缓冲区的容量，限制，位置和标记值相同，并且其字节顺序为&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;。当且仅当该缓冲区为直接缓冲区时，新缓冲区才为直接缓冲区；当且仅当此缓冲区为只读缓冲区时，该缓冲区才为只读缓冲区。</target>
        </trans-unit>
        <trans-unit id="7d665df25b33f41e16e1676893f85747fee6206b" translate="yes" xml:space="preserve">
          <source>The new buffer's capacity, limit, position, and mark values will be identical to those of this buffer.</source>
          <target state="translated">新的缓冲区的容量、极限、位置和标记值将与本缓冲区相同。</target>
        </trans-unit>
        <trans-unit id="1441a0ea6ee677b09ef764abcace356aff8ffb6a" translate="yes" xml:space="preserve">
          <source>The new buffer's capacity, limit, position, and mark values will be identical to those of this buffer. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新的缓冲区的容量、限制、位置和标记值将与本缓冲区相同。如果且仅当这个缓冲区是直接的,那么新的缓冲区将是直接的;如果且仅当这个缓冲区是只读的,那么新的缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="6550570fb9555c58e1cb0e5def73509b39966896" translate="yes" xml:space="preserve">
          <source>The new buffer's capacity, limit, position, mark values, and byte order will be identical to those of this buffer.</source>
          <target state="translated">新的缓冲区的容量、限制、位置、标记值和字节顺序将与这个缓冲区相同。</target>
        </trans-unit>
        <trans-unit id="f79d65af633493eb7a8e1c8f5a8b5b414b175153" translate="yes" xml:space="preserve">
          <source>The new buffer's capacity, limit, position, mark values, and byte order will be identical to those of this buffer. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的容量、限制、位置、标记值和字节顺序将与本缓冲区相同。如果且仅当这个缓冲区是直接的,那么新的缓冲区将是直接的;如果且仅当这个缓冲区是只读的,那么新的缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="5d0859533f4f7eba199c12f64f9c924ec68a5ed4" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be &lt;code&gt;length&lt;/code&gt;, its mark will be undefined, and its byte order will be &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零，其容量和限制将为 &lt;code&gt;length&lt;/code&gt; ，其标记将是未定义的，其字节顺序将为&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;。当且仅当该缓冲区为直接缓冲区时，新缓冲区才为直接缓冲区；当且仅当此缓冲区为只读缓冲区时，该缓冲区才为只读缓冲区。</target>
        </trans-unit>
        <trans-unit id="fd8fd4d38b4a711de6697a218a5e29d85c42d5ae" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be &lt;code&gt;length&lt;/code&gt;, its mark will be undefined, and its byte order will be identical to that of this buffer. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零，其容量和限制将为 &lt;code&gt;length&lt;/code&gt; ，其标记将是未定义的，并且其字节顺序将与此缓冲区的顺序相同。当且仅当该缓冲区为直接缓冲区时，新缓冲区才为直接缓冲区；当且仅当此缓冲区为只读缓冲区时，该缓冲区才为只读缓冲区。</target>
        </trans-unit>
        <trans-unit id="d1a160e2273e22d7f46b108919d8b91c72e2e605" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be &lt;code&gt;length&lt;/code&gt;, its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零，其容量和限制将为 &lt;code&gt;length&lt;/code&gt; ，其标记将是未定义的。当且仅当该缓冲区为直接缓冲区时，新缓冲区才为直接缓冲区；当且仅当此缓冲区为只读缓冲区时，该缓冲区才为只读缓冲区。</target>
        </trans-unit>
        <trans-unit id="a13d0be56226b191c2b44377cfe1a92626a44776" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by eight, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零,它的容量和限制将是这个缓冲区剩余的字节数除以8,它的标记将是未定义的。如果且仅当这个缓冲区是直接的,新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="c02f03f90159f93e336df782d499064fb01da7f6" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by eight, its mark will be undefined, and its byte order will be that of the byte buffer at the moment the view is created. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零,它的容量和限制将是这个缓冲区剩余的字节数除以8,它的标记将是未定义的,它的字节顺序将是创建视图时字节缓冲区的顺序。如果且仅当这个缓冲区是直接的,那么新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,那么它将是只读的。</target>
        </trans-unit>
        <trans-unit id="90552048b6aa0101e52962a0d5b974862e391b43" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by four, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零,它的容量和限制将是这个缓冲区剩余的字节数除以4,它的标记将是未定义的。如果且仅当这个缓冲区是直接的,新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="04d53bc931f3031cff24d274e2153cb0f909b287" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by four, its mark will be undefined, and its byte order will be that of the byte buffer at the moment the view is created. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置为零,它的容量和限制是这个缓冲区剩余的字节数除以四,它的标记是未定义的,它的字节顺序是创建视图时字节缓冲区的顺序。如果且仅当这个缓冲区是直接的,那么新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,那么它将是只读的。</target>
        </trans-unit>
        <trans-unit id="cfc7272e6b5899b3b2bcbd70bb498a4197e3a159" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by two, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零,它的容量和限制将是这个缓冲区剩余的字节数除以二,它的标记将是未定义的。如果且仅当这个缓冲区是直接的,新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="a414db15894243d7fc9b87769d0b51664c13216d" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by two, its mark will be undefined, and its byte order will be that of the byte buffer at the moment the view is created. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置为零,它的容量和限制是这个缓冲区剩余的字节数除以二,它的标记是未定义的,它的字节顺序是创建视图时字节缓冲区的顺序。如果且仅当这个缓冲区是直接的,那么新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,那么它将是只读的。</target>
        </trans-unit>
        <trans-unit id="b52b5dc3e863470f025e539f6bf77a5f3e4be8d9" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer or fewer subject to alignment, its mark will be undefined, and its byte order will be &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零，其容量和限制将为该缓冲区中剩余的字节数或更少的对齐对象，其标记将是未定义的，其字节顺序将为&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;。当且仅当该缓冲区为直接缓冲区时，新缓冲区才为直接缓冲区；当且仅当此缓冲区为只读缓冲区时，该缓冲区才为只读缓冲区。</target>
        </trans-unit>
        <trans-unit id="9a09a10dc3d2fc25e63569ae94bfd86cd530afbc" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零,它的容量和限制将是这个缓冲区剩余的字节数,它的标记将是未定义的。如果且仅当这个缓冲区是直接的,新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="111bd5660eac942fbcac5519244714b2247bf80a" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer, its mark will be undefined, and its byte order will be &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零，其容量和限制将是此缓冲区中剩余的字节数，其标记将是未定义的，其字节顺序将为&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;。当且仅当该缓冲区为直接缓冲区时，新缓冲区才为直接缓冲区；当且仅当此缓冲区为只读缓冲区时，该缓冲区才为只读缓冲区。</target>
        </trans-unit>
        <trans-unit id="fba588f426f87edc19c14d7f0682ef96259b59dd" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of chars remaining in this buffer, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零,它的容量和限制将是这个缓冲区剩余的字符数,它的标记将是未定义的。如果且仅当这个缓冲区是直接的,那么新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,那么新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="62b85884a696b76732cec9a21385d540addc262a" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of chars remaining in this buffer, its mark will be undefined, and its byte order will be identical to that of this buffer. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置为零,它的容量和限制是这个缓冲区剩余的字符数,它的标记是未定义的,它的字节顺序与这个缓冲区的顺序相同。如果且仅当这个缓冲区是直接的,那么新的缓冲区将是直接的,如果且仅当这个缓冲区是只读的,那么它将是只读的。</target>
        </trans-unit>
        <trans-unit id="f0973afd84caee05155e2681a55128180674a18a" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of doubles remaining in this buffer, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零,它的容量和极限将是这个缓冲区剩余的双倍数,它的标记将是未定义的。如果且仅当这个缓冲区是直接的,新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="f30e4a528cab353438c8c19e5c1f5da6f13e94ec" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of doubles remaining in this buffer, its mark will be undefined, and its byte order will be identical to that of this buffer. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置为零,它的容量和限制是这个缓冲区剩余的双倍数,它的标记是未定义的,它的字节顺序与这个缓冲区的顺序相同。如果且仅当这个缓冲区是直接的,那么新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,那么新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="ea906443b3c3866a2da17662e0837ea4ceea532d" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of elements remaining in this buffer, its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将是零,它的容量和极限将是这个缓冲区剩余的元素数,它的标记将是未定义的。如果且仅当这个缓冲区是直接的,新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="8222a6605391ceeccd212b79d0de137bdee941ea" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of floats remaining in this buffer, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零,它的容量和极限将是这个缓冲区剩余的浮点数,它的标记将是未定义的。如果且仅当这个缓冲区是直接的,新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="6e18af5ed60c263adba26d819e39f8be09733dac" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of floats remaining in this buffer, its mark will be undefined, and its byte order will be identical to that of this buffer. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置为零,它的容量和限制是这个缓冲区剩余的浮点数,它的标记是未定义的,它的字节顺序与这个缓冲区的顺序相同。如果且仅当这个缓冲区是直接的,那么新的缓冲区将是直接的,如果且仅当这个缓冲区是只读的,那么它将是只读的。</target>
        </trans-unit>
        <trans-unit id="409703dd3fa5e15595f45b7bfa97d23dfc879f75" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of ints remaining in this buffer, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零,它的容量和极限将是这个缓冲区剩余的字节数,它的标记将是未定义的。如果且仅当这个缓冲区是直接的,那么新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,那么新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="f2b37217a2a5560896450794e316ea9ef8cba8b8" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of ints remaining in this buffer, its mark will be undefined, and its byte order will be identical to that of this buffer. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置为零,它的容量和限制是这个缓冲区剩余的字节数,它的标记是未定义的,它的字节顺序与这个缓冲区的顺序相同。如果且仅当这个缓冲区是直接的,那么新的缓冲区将是直接的,如果且仅当这个缓冲区是只读的,那么它将是只读的。</target>
        </trans-unit>
        <trans-unit id="184e102258e542a41b9bc5bd5712cf1b45f7ba82" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of longs remaining in this buffer, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零,它的容量和极限将是这个缓冲区剩余的长数,它的标记将是未定义的。如果且仅当这个缓冲区是直接的,新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="319703467b5cb1d899cc5f3b715fa5fcab517e87" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of longs remaining in this buffer, its mark will be undefined, and its byte order will be identical to that of this buffer. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置为零,它的容量和限制是这个缓冲区剩余的长数,它的标记是未定义的,它的字节顺序与这个缓冲区的顺序相同。如果且仅当这个缓冲区是直接的,那么新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,那么新缓冲区将是只读的。</target>
        </trans-unit>
        <trans-unit id="db4d05da05e11921709f2c45d3cc55f4a61dcdd8" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of shorts remaining in this buffer, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置将为零,它的容量和极限将是这个缓冲区剩余的空头数量,它的标记将是未定义的。如果且仅当这个缓冲区是直接的,新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,它将是只读的。</target>
        </trans-unit>
        <trans-unit id="ca4a2b6104fd9c9d8887d29f3acd6594660e9a9a" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its capacity and its limit will be the number of shorts remaining in this buffer, its mark will be undefined, and its byte order will be identical to that of this buffer. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.</source>
          <target state="translated">新缓冲区的位置为零,它的容量和限制是这个缓冲区剩余的短线数量,它的标记是未定义的,它的字节顺序与这个缓冲区的顺序相同。如果且仅当这个缓冲区是直接的,那么新缓冲区将是直接的,如果且仅当这个缓冲区是只读的,那么它将是只读的。</target>
        </trans-unit>
        <trans-unit id="e873cc2a43337dc6d0f48726bcbfe54afbbbb3dd" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, and each of its elements will be initialized to zero. It will have a &lt;a href=&quot;bytebuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt;, and its &lt;a href=&quot;bytebuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区的位置将为零，其极限将是其容量，其标记将是未定义的，并且其每个元素都将初始化为零。它将具有一个&lt;a href=&quot;bytebuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;，并且其&lt;a href=&quot;bytebuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="0bc120342e8b1870b356b3688bd19e6b6d771658" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, and each of its elements will be initialized to zero. It will have a &lt;a href=&quot;charbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt;, and its &lt;a href=&quot;charbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区的位置将为零，其极限将是其容量，其标记将是未定义的，并且其每个元素都将初始化为零。它将具有一个&lt;a href=&quot;charbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;，并且其&lt;a href=&quot;charbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="4499f8809b64cea17e4ae935e38e57b0f0d75938" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, and each of its elements will be initialized to zero. It will have a &lt;a href=&quot;doublebuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt;, and its &lt;a href=&quot;doublebuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区的位置将为零，其极限将是其容量，其标记将是未定义的，并且其每个元素都将初始化为零。它将具有一个&lt;a href=&quot;doublebuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;，并且其&lt;a href=&quot;doublebuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="98fcf6ac3b1e8e48717c044627e4568fcf5fbd06" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, and each of its elements will be initialized to zero. It will have a &lt;a href=&quot;floatbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt;, and its &lt;a href=&quot;floatbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区的位置将为零，其极限将是其容量，其标记将是未定义的，并且其每个元素都将初始化为零。它将具有一个&lt;a href=&quot;floatbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;，并且其&lt;a href=&quot;floatbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="b824b2632dba5cfa58058d0964f1ea0de5c6b90e" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, and each of its elements will be initialized to zero. It will have a &lt;a href=&quot;intbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt;, and its &lt;a href=&quot;intbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区的位置将为零，其极限将是其容量，其标记将是未定义的，并且其每个元素都将初始化为零。它将具有一个&lt;a href=&quot;intbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;，并且其&lt;a href=&quot;intbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="0f405c739bacda631028ecb69ab8e7e2935ea317" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, and each of its elements will be initialized to zero. It will have a &lt;a href=&quot;longbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt;, and its &lt;a href=&quot;longbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区的位置将为零，其极限将是其容量，其标记将是未定义的，并且其每个元素都将初始化为零。它将具有一个&lt;a href=&quot;longbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;，并且其&lt;a href=&quot;longbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="ab6d02b7d7ce9994222ab6506d8bcc54c8589506" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, and each of its elements will be initialized to zero. It will have a &lt;a href=&quot;shortbuffer#array--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt;, and its &lt;a href=&quot;shortbuffer#arrayOffset--&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区的位置将为零，其极限将是其容量，其标记将是未定义的，并且其每个元素都将初始化为零。它将具有一个&lt;a href=&quot;shortbuffer#array--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;，并且其&lt;a href=&quot;shortbuffer#arrayOffset--&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="b9f0b692e41b510f435757041e930b3ca3d5e9be" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, and each of its elements will be initialized to zero. Whether or not it has a &lt;a href=&quot;bytebuffer#hasArray--&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; is unspecified.</source>
          <target state="translated">新缓冲区的位置将为零，其极限将是其容量，其标记将是未定义的，并且其每个元素都将初始化为零。不确定是否具有&lt;a href=&quot;bytebuffer#hasArray--&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bbc7cae7c2403b598dadadcb3b2ec2f7f72370c3" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, each of its elements will be initialized to zero, and its byte order will be &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;. It will have a &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt;, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区的位置将为零，其限制将是其容量，其标记将是未定义的，其每个元素将被初始化为零，并且其字节顺序将为&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;。它将具有一个&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="7290acf9ff7e32a5e68089310685aad7a3175da4" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, each of its elements will be initialized to zero, and its byte order will be &lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt;&lt;code&gt;BIG_ENDIAN&lt;/code&gt;&lt;/a&gt;. Whether or not it has a &lt;a href=&quot;#hasArray()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt; is unspecified.</source>
          <target state="translated">新缓冲区的位置将为零，其限制将是其容量，其标记将是未定义的，其每个元素将被初始化为零，并且其字节顺序将为&lt;a href=&quot;byteorder#BIG_ENDIAN&quot;&gt; &lt;code&gt;BIG_ENDIAN&lt;/code&gt; &lt;/a&gt;。不确定是否具有&lt;a href=&quot;#hasArray()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e20908b4684455a9d46aa45c5928acb89154e418" translate="yes" xml:space="preserve">
          <source>The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, each of its elements will be initialized to zero, and its byte order will be the &lt;a href=&quot;byteorder#nativeOrder()&quot;&gt;&lt;code&gt;native order&lt;/code&gt;&lt;/a&gt; of the underlying hardware. It will have a &lt;a href=&quot;#array()&quot;&gt;&lt;code&gt;backing array&lt;/code&gt;&lt;/a&gt;, and its &lt;a href=&quot;#arrayOffset()&quot;&gt;&lt;code&gt;array offset&lt;/code&gt;&lt;/a&gt; will be zero.</source>
          <target state="translated">新缓冲区的位置将为零，其极限将是其容量，其标记将是未定义的，其每个元素将被初始化为零，并且其字节顺序将是基础硬件的&lt;a href=&quot;byteorder#nativeOrder()&quot;&gt; &lt;code&gt;native order&lt;/code&gt; &lt;/a&gt;。它将具有一个&lt;a href=&quot;#array()&quot;&gt; &lt;code&gt;backing array&lt;/code&gt; &lt;/a&gt;，并且其&lt;a href=&quot;#arrayOffset()&quot;&gt; &lt;code&gt;array offset&lt;/code&gt; &lt;/a&gt;将为零。</target>
        </trans-unit>
        <trans-unit id="b1662b58ac08c19eb90fcbe51af1d61f93d2d097" translate="yes" xml:space="preserve">
          <source>The new byte buffer</source>
          <target state="translated">新的字节缓冲区</target>
        </trans-unit>
        <trans-unit id="a45f4c65b0bb36650376b631e6594f501b8c823a" translate="yes" xml:space="preserve">
          <source>The new channel</source>
          <target state="translated">新渠道</target>
        </trans-unit>
        <trans-unit id="39988f7bd48bce3640ae9255ae58edd4d492d701" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;../file/spi/filesystemprovider#newFileChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;newFileChannel&lt;/code&gt;&lt;/a&gt; method on the provider that created the &lt;code&gt;Path&lt;/code&gt;.</source>
          <target state="translated">通过在创建 &lt;code&gt;Path&lt;/code&gt; 的提供程序上调用&lt;a href=&quot;../file/spi/filesystemprovider#newFileChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;newFileChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。</target>
        </trans-unit>
        <trans-unit id="a0c64b8684bdcf86946498ab7c59c1c46403fb26" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;../file/spi/filesystemprovider#newFileChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;newFileChannel&lt;/code&gt;&lt;/a&gt; method on the provider that created the &lt;code&gt;Path&lt;/code&gt;.</source>
          <target state="translated">通过在创建 &lt;code&gt;Path&lt;/code&gt; 的提供程序上调用&lt;a href=&quot;../file/spi/filesystemprovider#newFileChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;newFileChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。</target>
        </trans-unit>
        <trans-unit id="a3f0ccd9145e43381e62fd1685d01e3719c2f360" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousServerSocketChannel(java.nio.channels.AsynchronousChannelGroup)&quot;&gt;&lt;code&gt;openAsynchronousServerSocketChannel&lt;/code&gt;&lt;/a&gt; method on the &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object that created the given group. If the group parameter is &lt;code&gt;null&lt;/code&gt; then the resulting channel is created by the system-wide default provider, and bound to the &lt;em&gt;default group&lt;/em&gt;.</source>
          <target state="translated">通过在创建给定组的&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;对象上调用&lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousServerSocketChannel(java.nio.channels.AsynchronousChannelGroup)&quot;&gt; &lt;code&gt;openAsynchronousServerSocketChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。如果group参数为 &lt;code&gt;null&lt;/code&gt; ,那么结果通道将由系统范围的默认提供程序创建，并绑定到&lt;em&gt;default group&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="30644cb35aeeea5e1c72b112f048cacccf59280e" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousServerSocketChannel-java.nio.channels.AsynchronousChannelGroup-&quot;&gt;&lt;code&gt;openAsynchronousServerSocketChannel&lt;/code&gt;&lt;/a&gt; method on the &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; object that created the given group. If the group parameter is &lt;code&gt;null&lt;/code&gt; then the resulting channel is created by the system-wide default provider, and bound to the &lt;em&gt;default group&lt;/em&gt;.</source>
          <target state="translated">通过在创建给定组的&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;对象上调用&lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousServerSocketChannel-java.nio.channels.AsynchronousChannelGroup-&quot;&gt; &lt;code&gt;openAsynchronousServerSocketChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。如果group参数为 &lt;code&gt;null&lt;/code&gt; ,则结果通道由系统范围的默认提供程序创建，并绑定到&lt;em&gt;default group&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="562dfacb39e3312f09e9cc2dfa08d51de3d858cf" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousSocketChannel(java.nio.channels.AsynchronousChannelGroup)&quot;&gt;&lt;code&gt;openAsynchronousSocketChannel&lt;/code&gt;&lt;/a&gt; method on the &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; that created the group. If the group parameter is &lt;code&gt;null&lt;/code&gt; then the resulting channel is created by the system-wide default provider, and bound to the &lt;em&gt;default group&lt;/em&gt;.</source>
          <target state="translated">通过在创建组的&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;上调用&lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousSocketChannel(java.nio.channels.AsynchronousChannelGroup)&quot;&gt; &lt;code&gt;openAsynchronousSocketChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。如果group参数为 &lt;code&gt;null&lt;/code&gt; ,那么结果通道将由系统范围的默认提供程序创建，并绑定到&lt;em&gt;default group&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2fa05ef1e428bfbeed57a213a4e34a9d9876bffe" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousSocketChannel-java.nio.channels.AsynchronousChannelGroup-&quot;&gt;&lt;code&gt;openAsynchronousSocketChannel&lt;/code&gt;&lt;/a&gt; method on the &lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt;&lt;code&gt;AsynchronousChannelProvider&lt;/code&gt;&lt;/a&gt; that created the group. If the group parameter is &lt;code&gt;null&lt;/code&gt; then the resulting channel is created by the system-wide default provider, and bound to the &lt;em&gt;default group&lt;/em&gt;.</source>
          <target state="translated">通过在创建组的&lt;a href=&quot;spi/asynchronouschannelprovider&quot;&gt; &lt;code&gt;AsynchronousChannelProvider&lt;/code&gt; &lt;/a&gt;上调用&lt;a href=&quot;spi/asynchronouschannelprovider#openAsynchronousSocketChannel-java.nio.channels.AsynchronousChannelGroup-&quot;&gt; &lt;code&gt;openAsynchronousSocketChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。如果group参数为 &lt;code&gt;null&lt;/code&gt; ,则结果通道由系统范围的默认提供程序创建，并绑定到&lt;em&gt;default group&lt;/em&gt;。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d32ddddfcc557792e2a3982412cb757082a83260" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/selectorprovider#openDatagramChannel()&quot;&gt;&lt;code&gt;openDatagramChannel&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object. The channel will not be connected.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openDatagramChannel()&quot;&gt; &lt;code&gt;openDatagramChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。通道将无法连接。</target>
        </trans-unit>
        <trans-unit id="154c7f6ed3d5cc86652d699d9e0e59a008d31144" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/selectorprovider#openDatagramChannel(java.net.ProtocolFamily)&quot;&gt;&lt;code&gt;openDatagramChannel&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object. The channel will not be connected.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openDatagramChannel(java.net.ProtocolFamily)&quot;&gt; &lt;code&gt;openDatagramChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。通道将无法连接。</target>
        </trans-unit>
        <trans-unit id="8a7232600a19d5c749f1ed775c91b5c69237ecde" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/selectorprovider#openDatagramChannel--&quot;&gt;&lt;code&gt;openDatagramChannel&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object. The channel will not be connected.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openDatagramChannel--&quot;&gt; &lt;code&gt;openDatagramChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。通道将无法连接。</target>
        </trans-unit>
        <trans-unit id="c3805a8ad4425a07e7b9601f1dc5f49f6555fb05" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/selectorprovider#openDatagramChannel-java.net.ProtocolFamily-&quot;&gt;&lt;code&gt;openDatagramChannel&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object. The channel will not be connected.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openDatagramChannel-java.net.ProtocolFamily-&quot;&gt; &lt;code&gt;openDatagramChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。通道将无法连接。</target>
        </trans-unit>
        <trans-unit id="959d7a0fafc989b56eed04d747893067826ef149" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/selectorprovider#openServerSocketChannel()&quot;&gt;&lt;code&gt;openServerSocketChannel&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openServerSocketChannel()&quot;&gt; &lt;code&gt;openServerSocketChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。</target>
        </trans-unit>
        <trans-unit id="1ea70f40215283abdf01fc3d884a51c682ee7f37" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/selectorprovider#openServerSocketChannel(java.net.ProtocolFamily)&quot;&gt;&lt;code&gt;openServerSocketChannel(ProtocolFamily)&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围内默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openServerSocketChannel(java.net.ProtocolFamily)&quot;&gt; &lt;code&gt;openServerSocketChannel(ProtocolFamily)&lt;/code&gt; &lt;/a&gt;方法来创建新通道。</target>
        </trans-unit>
        <trans-unit id="640a2a8aa11bc64a4a6a49aefd39e43c327cdc4d" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/selectorprovider#openServerSocketChannel--&quot;&gt;&lt;code&gt;openServerSocketChannel&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统级默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openServerSocketChannel--&quot;&gt; &lt;code&gt;openServerSocketChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。</target>
        </trans-unit>
        <trans-unit id="5a091dfe7abb19d6eed31b9d441901fe7edd403a" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/selectorprovider#openSocketChannel()&quot;&gt;&lt;code&gt;openSocketChannel&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openSocketChannel()&quot;&gt; &lt;code&gt;openSocketChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。</target>
        </trans-unit>
        <trans-unit id="0f5efe1c452cc61f00d538b00398c6e9c85c0ef0" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/selectorprovider#openSocketChannel(java.net.ProtocolFamily)&quot;&gt;&lt;code&gt;openSocketChannel(ProtocolFamily)&lt;/code&gt;&lt;/a&gt; method of the system-wide default. &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围默认值的&lt;a href=&quot;spi/selectorprovider#openSocketChannel(java.net.ProtocolFamily)&quot;&gt; &lt;code&gt;openSocketChannel(ProtocolFamily)&lt;/code&gt; &lt;/a&gt;方法来创建新通道。&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="b3c960cf1b6fdeb74926d0f06d9ebb63c6b2bfe2" translate="yes" xml:space="preserve">
          <source>The new channel is created by invoking the &lt;a href=&quot;spi/selectorprovider#openSocketChannel--&quot;&gt;&lt;code&gt;openSocketChannel&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openSocketChannel--&quot;&gt; &lt;code&gt;openSocketChannel&lt;/code&gt; &lt;/a&gt;方法来创建新通道。</target>
        </trans-unit>
        <trans-unit id="2a4e608f96db52ee969f0bd80aab227b4407654a" translate="yes" xml:space="preserve">
          <source>The new channel is unbound and unconnected.</source>
          <target state="translated">新的通道是不绑定的,不连接的。</target>
        </trans-unit>
        <trans-unit id="15c4e6dd6305ec4f180be38da828431f52c91192" translate="yes" xml:space="preserve">
          <source>The new channel is unbound.</source>
          <target state="translated">新的渠道是不绑定的。</target>
        </trans-unit>
        <trans-unit id="ea1cbf1d75b44adb6e4a5286b15544eb44d26552" translate="yes" xml:space="preserve">
          <source>The new channel's socket is initially unbound; it must be bound to a specific address via one of its socket's &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; methods before associations can be accepted.</source>
          <target state="translated">新通道的套接字最初是未绑定的；必须先通过其套接字的&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;方法之一将其绑定到特定地址，然后才能接受关联。</target>
        </trans-unit>
        <trans-unit id="ef5640ed0e3dd57e5904174d8dcc4cbd65edeff0" translate="yes" xml:space="preserve">
          <source>The new channel's socket is initially unbound; it must be bound to a specific address via one of its socket's &lt;a href=&quot;../../net/serversocket#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; methods before connections can be accepted.</source>
          <target state="translated">新通道的套接字最初是未绑定的；必须先通过其套接字的&lt;a href=&quot;../../net/serversocket#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;方法之一将其绑定到特定地址，然后才能接受连接。</target>
        </trans-unit>
        <trans-unit id="4166a9ca9c991a66f299641f2e32e0fece1a98ba" translate="yes" xml:space="preserve">
          <source>The new channel's socket is initially unbound; it must be bound to a specific address via one of its socket's &lt;a href=&quot;../../net/serversocket#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; methods before connections can be accepted.</source>
          <target state="translated">新通道的套接字最初未绑定；必须先通过其套接字的&lt;a href=&quot;../../net/serversocket#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;方法之一将其绑定到特定地址，然后才能接受连接。</target>
        </trans-unit>
        <trans-unit id="405a847e27c80c831a52b3ca25e1aee97b0b63cd" translate="yes" xml:space="preserve">
          <source>The new char buffer</source>
          <target state="translated">新字符缓冲区</target>
        </trans-unit>
        <trans-unit id="a3bfde5271747a153dbc45be6dd7b2fa8d92c106" translate="yes" xml:space="preserve">
          <source>The new character buffer</source>
          <target state="translated">新的字符缓冲区</target>
        </trans-unit>
        <trans-unit id="105e02b325849c87768426ba794cd482fa2cf5d4" translate="yes" xml:space="preserve">
          <source>The new context has the same environment properties and connection request controls as this context. See the class description for details. Implementations might also allow this context and the new context to share the same network connection or other resources if doing so does not impede the independence of either context.</source>
          <target state="translated">新的上下文具有与此上下文相同的环境属性和连接请求控件。详情请参见类描述。如果不妨碍任何一个上下文的独立性,实现也可以允许这个上下文和新上下文共享相同的网络连接或其他资源。</target>
        </trans-unit>
        <trans-unit id="32225c2b2a4cd61beeafae6360573239239143d8" translate="yes" xml:space="preserve">
          <source>The new directory stream, once created, is not dependent upon the directory stream used to create it. Closing this directory stream has no effect upon newly created directory stream.</source>
          <target state="translated">新的目录流一旦创建,就不依赖于用于创建它的目录流。关闭该目录流对新创建的目录流没有影响。</target>
        </trans-unit>
        <trans-unit id="b1472dd980957833880e469fd869da118a620a1d" translate="yes" xml:space="preserve">
          <source>The new double buffer</source>
          <target state="translated">新的双缓冲器</target>
        </trans-unit>
        <trans-unit id="2f0532ed60ab4132dd9d65f7412ae3fdaace63d3" translate="yes" xml:space="preserve">
          <source>The new float buffer</source>
          <target state="translated">新的浮动缓冲区</target>
        </trans-unit>
        <trans-unit id="f60894a3ea95a69c84bc4b87c767e21d9aecdcf4" translate="yes" xml:space="preserve">
          <source>The new glass pane's visibility is changed to match that of the current glass pane. An implication of this is that care must be taken when you want to replace the glass pane and make it visible. Either of the following will work:</source>
          <target state="translated">新的玻璃窗格的可见性会被改变,以配合当前玻璃窗格的可见性。这意味着,当您要更换玻璃窗格并使其可见时,必须小心谨慎。以下任何一种方法都可以。</target>
        </trans-unit>
        <trans-unit id="40fa9d09acdee10a0a3b36ab9ea3d84678cccd77" translate="yes" xml:space="preserve">
          <source>The new graphics context has an additional clipping rectangle, in addition to whatever (translated) clipping rectangle it inherited from the original graphics context. The origin of the new clipping rectangle is at (&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;), and its size is specified by the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; arguments.</source>
          <target state="translated">除了从原始图形上下文继承的任何（翻译的）剪切矩形之外，新的图形上下文还有一个附加的剪切矩形。新的剪辑矩形的原点是在（ &lt;code&gt;0&lt;/code&gt; ， &lt;code&gt;0&lt;/code&gt; ），以及由指定其大小 &lt;code&gt;width&lt;/code&gt; 和 &lt;code&gt;height&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="1aad4607b7a4ff89c5cae016542628ea7e5e8cda" translate="yes" xml:space="preserve">
          <source>The new graphics context is translated by (</source>
          <target state="translated">新的图形上下文是由(</target>
        </trans-unit>
        <trans-unit id="351ce29e1a236701155b75e9b6605d4772412233" translate="yes" xml:space="preserve">
          <source>The new handlers are not implemented by the SAX2 &lt;code&gt;org.xml.sax.helpers.DefaultHandler&lt;/code&gt; or &lt;code&gt;org.xml.sax.helpers.XMLFilterImpl&lt;/code&gt; classes. You can subclass these if you need such behavior, or use the helper classes found here.</source>
          <target state="translated">SAX2 &lt;code&gt;org.xml.sax.helpers.DefaultHandler&lt;/code&gt; 或 &lt;code&gt;org.xml.sax.helpers.XMLFilterImpl&lt;/code&gt; 类未实现新的处理程序。如果需要这种行为，可以将其子类化，或使用此处提供的帮助器类。</target>
        </trans-unit>
        <trans-unit id="a4c7a2f2dd2b2712931e42cff9b291f698ae12a0" translate="yes" xml:space="preserve">
          <source>The new input source, or null to require the default behaviour.</source>
          <target state="translated">新的输入源,或者为空,需要默认行为。</target>
        </trans-unit>
        <trans-unit id="1f6194d825d6dc0688d142cdf98fae1e64221945" translate="yes" xml:space="preserve">
          <source>The new int buffer</source>
          <target state="translated">新的 int 缓冲区</target>
        </trans-unit>
        <trans-unit id="16916b8d2254968908c21ac68fdf72fdd3794032" translate="yes" xml:space="preserve">
          <source>The new iterator</source>
          <target state="translated">新的迭代器</target>
        </trans-unit>
        <trans-unit id="779eee0d9cf7a611f52c9afc435db4ffc9a7b2aa" translate="yes" xml:space="preserve">
          <source>The new long buffer</source>
          <target state="translated">新的长缓冲区</target>
        </trans-unit>
        <trans-unit id="a049a6df3cdeeeac083a1b0492d8837e20ab7728" translate="yes" xml:space="preserve">
          <source>The new method handle, when invoked, will perform the following steps:</source>
          <target state="translated">新的方法句柄被调用后,将执行以下步骤。</target>
        </trans-unit>
        <trans-unit id="92e50b8ce0fbbc5d3ddc700f726a1f61541bb746" translate="yes" xml:space="preserve">
          <source>The new node, of the same type as this node.</source>
          <target state="translated">新节点,与此节点为同一类型。</target>
        </trans-unit>
        <trans-unit id="aad32c6be4c40289765349dc77371198d0722960" translate="yes" xml:space="preserve">
          <source>The new node, or &lt;code&gt;null&lt;/code&gt; if the current node has no children in the &lt;code&gt;TreeWalker&lt;/code&gt;'s logical view.</source>
          <target state="translated">新节点；如果当前节点在 &lt;code&gt;TreeWalker&lt;/code&gt; 的逻辑视图中没有子级，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8fa7f18ee056860588a84eb3540948e7621523f1" translate="yes" xml:space="preserve">
          <source>The new node, or &lt;code&gt;null&lt;/code&gt; if the current node has no next node in the &lt;code&gt;TreeWalker&lt;/code&gt;'s logical view.</source>
          <target state="translated">新节点；如果当前节点在 &lt;code&gt;TreeWalker&lt;/code&gt; 的逻辑视图中没有下一个节点，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08bee0f0cc7eaeddd7d01886f4661fa98348f038" translate="yes" xml:space="preserve">
          <source>The new node, or &lt;code&gt;null&lt;/code&gt; if the current node has no next sibling. in the &lt;code&gt;TreeWalker&lt;/code&gt;'s logical view.</source>
          <target state="translated">新节点；如果当前节点没有下一个同级，则为 &lt;code&gt;null&lt;/code&gt; 。在 &lt;code&gt;TreeWalker&lt;/code&gt; 的逻辑视图中。</target>
        </trans-unit>
        <trans-unit id="53979055d6a4dbf049878044d8f40a2525ff6d07" translate="yes" xml:space="preserve">
          <source>The new node, or &lt;code&gt;null&lt;/code&gt; if the current node has no previous node in the &lt;code&gt;TreeWalker&lt;/code&gt;'s logical view.</source>
          <target state="translated">新节点；如果当前节点在 &lt;code&gt;TreeWalker&lt;/code&gt; 的逻辑视图中没有上一个节点，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="66d1991db11199cc0a752370830eb32dd53f1760" translate="yes" xml:space="preserve">
          <source>The new node, or &lt;code&gt;null&lt;/code&gt; if the current node has no previous sibling. in the &lt;code&gt;TreeWalker&lt;/code&gt;'s logical view.</source>
          <target state="translated">新节点；如果当前节点没有先前的同级，则为 &lt;code&gt;null&lt;/code&gt; 。在 &lt;code&gt;TreeWalker&lt;/code&gt; 的逻辑视图中。</target>
        </trans-unit>
        <trans-unit id="cc9bb88661ee58f520f7596174f8b9dbd4b0c604" translate="yes" xml:space="preserve">
          <source>The new node, or &lt;code&gt;null&lt;/code&gt; if the current node has no visible children in the &lt;code&gt;TreeWalker&lt;/code&gt;'s logical view.</source>
          <target state="translated">新节点；如果当前节点在 &lt;code&gt;TreeWalker&lt;/code&gt; 的逻辑视图中没有可见的子级，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7edac962c9fdf5e1ed3e30ef75f9b85854bb6c3" translate="yes" xml:space="preserve">
          <source>The new output stream instance is created as if by invoking the 2-argument constructor DeflaterOutputStream(out, false).</source>
          <target state="translated">新的输出流实例就像调用2个参数的构造函数DeflaterOutputStream(out,false)一样被创建。</target>
        </trans-unit>
        <trans-unit id="17e00405c9d859e5ea535348ea74cc91e9987eea" translate="yes" xml:space="preserve">
          <source>The new output stream instance is created as if by invoking the 2-argument constructor GZIPOutputStream(out, false).</source>
          <target state="translated">新的输出流实例是通过调用2个参数的构造函数GZIPOutputStream(out,false)来创建的。</target>
        </trans-unit>
        <trans-unit id="eba31038050930f93163a540e115ac8b731c66f1" translate="yes" xml:space="preserve">
          <source>The new output stream instance is created as if by invoking the 3-argument constructor DeflaterOutputStream(out, def, false).</source>
          <target state="translated">新的输出流实例就像调用3个参数的构造函数DeflaterOutputStream(out,def,false)一样被创建。</target>
        </trans-unit>
        <trans-unit id="d9335ad9c012ce1f2b92b1f6698fcccb2cb17791" translate="yes" xml:space="preserve">
          <source>The new output stream instance is created as if by invoking the 3-argument constructor GZIPOutputStream(out, size, false).</source>
          <target state="translated">新的输出流实例是通过调用3个参数的构造函数GZIPOutputStream(out,size,false)来创建的。</target>
        </trans-unit>
        <trans-unit id="f12bbb4d87ec052fcf9300036f1e190a6c68064b" translate="yes" xml:space="preserve">
          <source>The new output stream instance is created as if by invoking the 4-argument constructor DeflaterOutputStream(out, def, size, false).</source>
          <target state="translated">新的输出流实例的创建就像调用4个参数的构造函数DeflaterOutputStream(out,def,size,false)一样。</target>
        </trans-unit>
        <trans-unit id="51f264957ea16725861ee0b7f2549925bad1a95b" translate="yes" xml:space="preserve">
          <source>The new parent node, or &lt;code&gt;null&lt;/code&gt; if the current node has no parent in the &lt;code&gt;TreeWalker&lt;/code&gt;'s logical view.</source>
          <target state="translated">新的父节点；如果当前节点在 &lt;code&gt;TreeWalker&lt;/code&gt; 的逻辑视图中没有父节点，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d884f874f7014685b458a4af3391ba4d45f11053" translate="yes" xml:space="preserve">
          <source>The new pipe</source>
          <target state="translated">新管道</target>
        </trans-unit>
        <trans-unit id="81743a0e516c888ca495a3379f63119c30a076d1" translate="yes" xml:space="preserve">
          <source>The new pipe is created by invoking the &lt;a href=&quot;spi/selectorprovider#openPipe()&quot;&gt;&lt;code&gt;openPipe&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openPipe()&quot;&gt; &lt;code&gt;openPipe&lt;/code&gt; &lt;/a&gt;方法来创建新管道。</target>
        </trans-unit>
        <trans-unit id="2c83e22c89152847eb837b14970d1ac61dec5b58" translate="yes" xml:space="preserve">
          <source>The new pipe is created by invoking the &lt;a href=&quot;spi/selectorprovider#openPipe--&quot;&gt;&lt;code&gt;openPipe&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围内默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openPipe--&quot;&gt; &lt;code&gt;openPipe&lt;/code&gt; &lt;/a&gt;方法来创建新管道。</target>
        </trans-unit>
        <trans-unit id="d288ab1052db5bba3bc77fb644b627d9caad3669" translate="yes" xml:space="preserve">
          <source>The new previous lookup class is chosen as follows:</source>
          <target state="translated">新的以前的查找类选择如下。</target>
        </trans-unit>
        <trans-unit id="ea7fad088fe017180a3cb702a40bcf125e3ccdc4" translate="yes" xml:space="preserve">
          <source>The new process will invoke the command and arguments given by &lt;a href=&quot;#command()&quot;&gt;&lt;code&gt;command()&lt;/code&gt;&lt;/a&gt;, in a working directory as given by &lt;a href=&quot;#directory()&quot;&gt;&lt;code&gt;directory()&lt;/code&gt;&lt;/a&gt;, with a process environment as given by &lt;a href=&quot;#environment()&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新进程将在由&lt;a href=&quot;#directory()&quot;&gt; &lt;code&gt;directory()&lt;/code&gt; &lt;/a&gt;给定的工作目录中调用由&lt;a href=&quot;#command()&quot;&gt; &lt;code&gt;command()&lt;/code&gt; &lt;/a&gt;给定的命令和参数，并具有由&lt;a href=&quot;#environment()&quot;&gt; &lt;code&gt;environment()&lt;/code&gt; &lt;/a&gt;给定的进程环境。</target>
        </trans-unit>
        <trans-unit id="e219b1425b7017143bc6b763f1e3479269fe8f77" translate="yes" xml:space="preserve">
          <source>The new process will invoke the command and arguments given by &lt;a href=&quot;processbuilder#command--&quot;&gt;&lt;code&gt;command()&lt;/code&gt;&lt;/a&gt;, in a working directory as given by &lt;a href=&quot;processbuilder#directory--&quot;&gt;&lt;code&gt;directory()&lt;/code&gt;&lt;/a&gt;, with a process environment as given by &lt;a href=&quot;processbuilder#environment--&quot;&gt;&lt;code&gt;environment()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新进程将在由&lt;a href=&quot;processbuilder#directory--&quot;&gt; &lt;code&gt;directory()&lt;/code&gt; &lt;/a&gt;给定的工作目录中调用由&lt;a href=&quot;processbuilder#command--&quot;&gt; &lt;code&gt;command()&lt;/code&gt; &lt;/a&gt;给定的命令和参数，并具有由&lt;a href=&quot;processbuilder#environment--&quot;&gt; &lt;code&gt;environment()&lt;/code&gt; &lt;/a&gt;给定的进程环境。</target>
        </trans-unit>
        <trans-unit id="95ac9042239c405df39132ca4d6a54dd4895fee9" translate="yes" xml:space="preserve">
          <source>The new selector</source>
          <target state="translated">新的选择器</target>
        </trans-unit>
        <trans-unit id="0afd52fcd7a3f4bc42d8190464378d5622d0a3f2" translate="yes" xml:space="preserve">
          <source>The new selector is created by invoking the &lt;a href=&quot;spi/selectorprovider#openSelector()&quot;&gt;&lt;code&gt;openSelector&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openSelector()&quot;&gt; &lt;code&gt;openSelector&lt;/code&gt; &lt;/a&gt;方法来创建新的选择器。</target>
        </trans-unit>
        <trans-unit id="4d90a5fbf3072fbdd10fb888cd77c2fecc69894d" translate="yes" xml:space="preserve">
          <source>The new selector is created by invoking the &lt;a href=&quot;spi/selectorprovider#openSelector--&quot;&gt;&lt;code&gt;openSelector&lt;/code&gt;&lt;/a&gt; method of the system-wide default &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通过调用系统范围的默认&lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt;对象的&lt;a href=&quot;spi/selectorprovider#openSelector--&quot;&gt; &lt;code&gt;openSelector&lt;/code&gt; &lt;/a&gt;方法来创建新的选择器。</target>
        </trans-unit>
        <trans-unit id="51a2e917f552d1b6e1f23856874476d3b036cddf" translate="yes" xml:space="preserve">
          <source>The new short buffer</source>
          <target state="translated">新的短缓冲区</target>
        </trans-unit>
        <trans-unit id="cdfb6de24569ebdf6e37ac2a01c85f6c9999b45a" translate="yes" xml:space="preserve">
          <source>The new string.</source>
          <target state="translated">新的字符串。</target>
        </trans-unit>
        <trans-unit id="256bfd55d3498eaaeab282ef6a86ba7b61007791" translate="yes" xml:space="preserve">
          <source>The new value for the preference, or &lt;code&gt;null&lt;/code&gt; if the preference was removed.</source>
          <target state="translated">首选项的新值；如果首选项已删除，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ca7055dc46762027e9a170faf3c4bd0af39a754d" translate="yes" xml:space="preserve">
          <source>The new value for the property, expressed as an Object. May be null if multiple properties have changed.</source>
          <target state="translated">属性的新值,用对象表示。如果多个属性发生了变化,则可能为空。</target>
        </trans-unit>
        <trans-unit id="1fed342089a94d554987b9df830e98f728b84e13" translate="yes" xml:space="preserve">
          <source>The new, read-only byte buffer</source>
          <target state="translated">新的、只读的字节缓冲区。</target>
        </trans-unit>
        <trans-unit id="051bb43b66b4c67456aad2b704f6aa6b0ddd97f5" translate="yes" xml:space="preserve">
          <source>The new, read-only char buffer</source>
          <target state="translated">新的,只读字符缓冲区</target>
        </trans-unit>
        <trans-unit id="5f53d1fe5257c7586da9f701a660008b6cdc42d4" translate="yes" xml:space="preserve">
          <source>The new, read-only double buffer</source>
          <target state="translated">新的、只读的双缓冲区</target>
        </trans-unit>
        <trans-unit id="ab388d6a1900bbf211a8682234f0d28e544b3f90" translate="yes" xml:space="preserve">
          <source>The new, read-only float buffer</source>
          <target state="translated">新的,只读的浮动缓冲区。</target>
        </trans-unit>
        <trans-unit id="f25346b335ad55392706741def759dd809ecac74" translate="yes" xml:space="preserve">
          <source>The new, read-only int buffer</source>
          <target state="translated">新的,只读的int缓冲区</target>
        </trans-unit>
        <trans-unit id="38c3e68c7e1d834b8bc5df3c59964660afd47865" translate="yes" xml:space="preserve">
          <source>The new, read-only long buffer</source>
          <target state="translated">新的、只读的长缓冲区</target>
        </trans-unit>
        <trans-unit id="9632c9f4a41cbd94b91ee4867c7f6daa96d1578b" translate="yes" xml:space="preserve">
          <source>The new, read-only short buffer</source>
          <target state="translated">新的、只读的短缓冲区</target>
        </trans-unit>
        <trans-unit id="c2c6f911faa099e683e433008f099f0a9b73bf5d" translate="yes" xml:space="preserve">
          <source>The newline (line feed) character (&lt;code&gt;'\u000A'&lt;/code&gt;)</source>
          <target state="translated">换行符（ &lt;code&gt;'\u000A'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c7384c3bb09727310bc462bab676b4596e47e94b" translate="yes" xml:space="preserve">
          <source>The newly constructed Sets check whether this &lt;code&gt;Subject&lt;/code&gt; has been set read-only before permitting subsequent modifications. The newly created Sets also prevent illegal modifications by ensuring that callers have sufficient permissions.</source>
          <target state="translated">新建的Sets 在允许后续修改之前，会检查此 &lt;code&gt;Subject&lt;/code&gt; 是否已设置为只读。通过确保呼叫者具有足够的权限，新创建的集合还可以防止非法修改。</target>
        </trans-unit>
        <trans-unit id="950cb6be1344fde9aef742cb8b54558cb32694c0" translate="yes" xml:space="preserve">
          <source>The newly constructed Sets check whether this &lt;code&gt;Subject&lt;/code&gt; has been set read-only before permitting subsequent modifications. The newly created Sets also prevent illegal modifications by ensuring that callers have sufficient permissions. These Sets also prohibit null elements, and attempts to add or query a null element will result in a &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">新建的Sets在允许后续修改之前，会检查此 &lt;code&gt;Subject&lt;/code&gt; 是否已设置为只读。通过确保呼叫者具有足够的权限，新创建的集合还可以防止非法修改。这些Set还禁止使用null元素，并且尝试添加或查询null元素将导致 &lt;code&gt;NullPointerException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f25a3de7da474f19021bd8b53da04f971e190cc7" translate="yes" xml:space="preserve">
          <source>The newly created &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">新创建的 &lt;code&gt;Event&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="28a3bbb5f8626699a4150b134c9da099d4f7b9f6" translate="yes" xml:space="preserve">
          <source>The newly created &lt;code&gt;LSParser&lt;/code&gt; object. This &lt;code&gt;LSParser&lt;/code&gt; is either synchronous or asynchronous depending on the value of the &lt;code&gt;mode&lt;/code&gt; argument.</source>
          <target state="translated">新创建的 &lt;code&gt;LSParser&lt;/code&gt; 对象。取决于 &lt;code&gt;mode&lt;/code&gt; 参数的值，此 &lt;code&gt;LSParser&lt;/code&gt; 是同步的还是异步的。</target>
        </trans-unit>
        <trans-unit id="2e6864f451552ad1214b39d65e1af98daa80917f" translate="yes" xml:space="preserve">
          <source>The newly created &lt;code&gt;LSSerializer&lt;/code&gt; object.</source>
          <target state="translated">新创建的 &lt;code&gt;LSSerializer&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="7e9c38638d5b2ca62e0875ef6d8d3c0e6198cf85" translate="yes" xml:space="preserve">
          <source>The newly created &lt;code&gt;NodeIterator&lt;/code&gt;.</source>
          <target state="translated">新创建的 &lt;code&gt;NodeIterator&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63f62a75ff2d1bcae67829ab95de721785ef5e31" translate="yes" xml:space="preserve">
          <source>The newly created &lt;code&gt;TreeWalker&lt;/code&gt;.</source>
          <target state="translated">新创建的 &lt;code&gt;TreeWalker&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0e5e31a1cc1c74f54f3cd20d6282840c7661b160" translate="yes" xml:space="preserve">
          <source>The newly created cell.</source>
          <target state="translated">新创建的细胞。</target>
        </trans-unit>
        <trans-unit id="71152fc3c9b4330d477e4b2a69f4edcb28719575" translate="yes" xml:space="preserve">
          <source>The newly created class or interface &lt;code&gt;C&lt;/code&gt; serves as the &lt;a href=&quot;#lookupClass()&quot;&gt;lookup class&lt;/a&gt; of the &lt;code&gt;Lookup&lt;/code&gt; object returned by this method. &lt;code&gt;C&lt;/code&gt; is &lt;em&gt;hidden&lt;/em&gt; in the sense that no other class or interface can refer to &lt;code&gt;C&lt;/code&gt; via a constant pool entry. That is, a hidden class or interface cannot be named as a supertype, a field type, a method parameter type, or a method return type by any other class. This is because a hidden class or interface does not have a binary name, so there is no internal form available to record in any class's constant pool. A hidden class or interface is not discoverable by &lt;a href=&quot;../class#forName(java.lang.String,boolean,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;Class.forName(String, boolean, ClassLoader)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../classloader#loadClass(java.lang.String,boolean)&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String, boolean)&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#findClass(java.lang.String)&quot;&gt;&lt;code&gt;findClass(String)&lt;/code&gt;&lt;/a&gt;, and is not &lt;a href=&quot;../../../../java.instrument/java/lang/instrument/instrumentation#isModifiableClass(java.lang.Class)&quot;&gt;modifiable&lt;/a&gt; by Java agents or tool agents using the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jvmti.html&quot;&gt; JVM Tool Interface&lt;/a&gt;.</source>
          <target state="translated">新创建的类或接口 &lt;code&gt;C&lt;/code&gt; 充当此方法返回的 &lt;code&gt;Lookup&lt;/code&gt; 对象的&lt;a href=&quot;#lookupClass()&quot;&gt;查找类&lt;/a&gt;。从某种意义上说 &lt;code&gt;C&lt;/code&gt; 是&lt;em&gt;隐藏的&lt;/em&gt;，因为没有其他类或接口可以通过常量池条目引用 &lt;code&gt;C&lt;/code&gt; 。也就是说，任何其他类都不能将隐藏的类或接口命名为超类型，字段类型，方法参数类型或方法返回类型。这是因为隐藏的类或接口没有二进制名称，因此没有内部形式可用于记录任何类的常量池。&lt;a href=&quot;../class#forName(java.lang.String,boolean,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;Class.forName(String, boolean, ClassLoader)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../classloader#loadClass(java.lang.String,boolean)&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String, boolean)&lt;/code&gt; &lt;/a&gt;无法发现隐藏的类或接口。&lt;em&gt;&lt;/em&gt;或&lt;a href=&quot;#findClass(java.lang.String)&quot;&gt; &lt;code&gt;findClass(String)&lt;/code&gt; &lt;/a&gt;，并且是不&lt;a href=&quot;../../../../java.instrument/java/lang/instrument/instrumentation#isModifiableClass(java.lang.Class)&quot;&gt;修改&lt;/a&gt;由Java代理或使用工具代理&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jvmti.html&quot;&gt;JVM工具接口&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a2a279a75cbfd1b2bc63caf566b30d4919609850" translate="yes" xml:space="preserve">
          <source>The newly created input object.</source>
          <target state="translated">新创建的输入对象。</target>
        </trans-unit>
        <trans-unit id="9ad3c1c06f2258bb8b0549b75e0edff7de06d15f" translate="yes" xml:space="preserve">
          <source>The newly created layer</source>
          <target state="translated">新创建的层</target>
        </trans-unit>
        <trans-unit id="fbcab23ed277974083f961513c6300581cc3dddd" translate="yes" xml:space="preserve">
          <source>The newly created output object.</source>
          <target state="translated">新创建的输出对象。</target>
        </trans-unit>
        <trans-unit id="3ecdb2179dd90bd6fc6af860dcdb167b3e9dd7a7" translate="yes" xml:space="preserve">
          <source>The newly created permission object replaces the UnresolvedPermission, which is removed.</source>
          <target state="translated">新创建的权限对象取代了被删除的UnresolvedPermission。</target>
        </trans-unit>
        <trans-unit id="c7b105995f24b1e2b648556c2293bbc4eb17ca2e" translate="yes" xml:space="preserve">
          <source>The newly created recording is in the &lt;a href=&quot;recordingstate#NEW&quot;&gt;&lt;code&gt;RecordingState.NEW&lt;/code&gt;&lt;/a&gt; state. To start the recording, invoke the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">新创建的记录处于&lt;a href=&quot;recordingstate#NEW&quot;&gt; &lt;code&gt;RecordingState.NEW&lt;/code&gt; &lt;/a&gt;状态。要开始录制，请调用&lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="a66ffa820d5afabe54a1e4db548f48c6c7d28245" translate="yes" xml:space="preserve">
          <source>The newly created row.</source>
          <target state="translated">新创建的行。</target>
        </trans-unit>
        <trans-unit id="b0535665b03585361bf66e8fd5718be81ec47c1d" translate="yes" xml:space="preserve">
          <source>The newly created thread is initially marked as being a daemon thread if and only if the thread creating it is currently marked as a daemon thread. The method &lt;a href=&quot;#setDaemon(boolean)&quot;&gt;setDaemon&lt;/a&gt; may be used to change whether or not a thread is a daemon.</source>
          <target state="translated">当且仅当创建它的线程当前被标记为守护程序线程时，才将新创建的线程最初标记为守护程序线程。&lt;a href=&quot;#setDaemon(boolean)&quot;&gt;setDaemon&lt;/a&gt;方法可用于更改线程是否是守护程序。</target>
        </trans-unit>
        <trans-unit id="526425b0b2a6b0567b0294d2b4111ab89f47f622" translate="yes" xml:space="preserve">
          <source>The newly created thread is initially marked as being a daemon thread if and only if the thread creating it is currently marked as a daemon thread. The method &lt;a href=&quot;thread#setDaemon-boolean-&quot;&gt;setDaemon&lt;/a&gt; may be used to change whether or not a thread is a daemon.</source>
          <target state="translated">当且仅当创建它的线程当前被标记为守护程序线程时，才将新创建的线程最初标记为守护程序线程。&lt;a href=&quot;thread#setDaemon-boolean-&quot;&gt;setDaemon&lt;/a&gt;方法可用于更改线程是否是守护程序。</target>
        </trans-unit>
        <trans-unit id="1f1012a0ca0d70327fd286d7c29cb6bd15b1c082" translate="yes" xml:space="preserve">
          <source>The newly defined &lt;code&gt;Package&lt;/code&gt; object</source>
          <target state="translated">新定义的 &lt;code&gt;Package&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="e8a1d4d9b98ec9cdee82b685b8101093972dd311" translate="yes" xml:space="preserve">
          <source>The newly instantiated object.</source>
          <target state="translated">新实例化的对象。</target>
        </trans-unit>
        <trans-unit id="92ff2dd99580714af4fdb9c066e81faf90f4c0bf" translate="yes" xml:space="preserve">
          <source>The next &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; in an &lt;a href=&quot;eventset&quot;&gt;&lt;code&gt;EventSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">接下来的&lt;a href=&quot;event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;在&lt;a href=&quot;eventset&quot;&gt; &lt;code&gt;EventSet&lt;/code&gt; 这样&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="30faf9343c317b3c3d65da86c3ef8e7eeaeeebe8" translate="yes" xml:space="preserve">
          <source>The next &lt;code&gt;Node&lt;/code&gt; in the set being iterated over, or &lt;code&gt;null&lt;/code&gt; if there are no more members in that set.</source>
          <target state="translated">迭代中集合中的下一个 &lt;code&gt;Node&lt;/code&gt; ；如果该集合中没有其他成员，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0cfba659f68108a8eba88e4b742d7a0c443076d6" translate="yes" xml:space="preserve">
          <source>The next attribute in the list</source>
          <target state="translated">列表中的下一个属性</target>
        </trans-unit>
        <trans-unit id="7c190fdba16a43189c716408411071b0d121dcd8" translate="yes" xml:space="preserve">
          <source>The next code fragment shows populating a &lt;code&gt;CachedRowSet&lt;/code&gt; object using the method &lt;code&gt;execute&lt;/code&gt;, which may or may not take a &lt;code&gt;Connection&lt;/code&gt; object as a parameter. This code passes &lt;code&gt;execute&lt;/code&gt; the &lt;code&gt;Connection&lt;/code&gt; object</source>
          <target state="translated">下一个代码片段显示了使用方法 &lt;code&gt;execute&lt;/code&gt; 填充 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象，该方法可以或可以不使用 &lt;code&gt;Connection&lt;/code&gt; 对象作为参数。此代码传递 &lt;code&gt;execute&lt;/code&gt; 的 &lt;code&gt;Connection&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="003d3922eea2d3f53c0b82cbc99650ac135666f8" translate="yes" xml:space="preserve">
          <source>The next content model (in a ',', '|' or '&amp;amp;' expression).</source>
          <target state="translated">下一个内容模型（以'，'，'|'或'＆'表达式表示）。</target>
        </trans-unit>
        <trans-unit id="4226522b6020d9eb89363bd243677866f295b1c0" translate="yes" xml:space="preserve">
          <source>The next event.</source>
          <target state="translated">下一个事件。</target>
        </trans-unit>
        <trans-unit id="62b2f558f8d0a98b00fed91f851c07fa625e66bd" translate="yes" xml:space="preserve">
          <source>The next event. This field is set when putting events into a linked list. This has been replaced by EventQueue.</source>
          <target state="translated">下一个事件。该字段在将事件放入链接列表时设置。此字段已被EventQueue取代。</target>
        </trans-unit>
        <trans-unit id="bc8222d0239dcfe9d56e39f9cbd0bf5bc8aa8ac0" translate="yes" xml:space="preserve">
          <source>The next example demonstrates moving to the insert row, building a new row on the insert row, inserting it into the rowset, and then calling the method &lt;code&gt;acceptChanges&lt;/code&gt; to add the new row to the underlying data source. Note that as with the getter methods, the updater methods may take either a column index or a column name to designate the column being acted upon.</source>
          <target state="translated">下一个示例演示如何移动到插入行，在插入行上构建新行，将其插入行集中，然后调用方法 &lt;code&gt;acceptChanges&lt;/code&gt; 将新行添加到基础数据源。请注意，与getter方法一样，更新程序方法可以采用列索引或列名称来指定要作用的列。</target>
        </trans-unit>
        <trans-unit id="c9a97853b991192fa16b78639ad825e96e507ee6" translate="yes" xml:space="preserve">
          <source>The next example is useful in situations where you wish to process data as it is ready on the</source>
          <target state="translated">下一个例子在以下情况下很有用,即您希望处理数据,因为它在</target>
        </trans-unit>
        <trans-unit id="6875bb5b5c807acc8e5c2fa49dd331b238e4ca8a" translate="yes" xml:space="preserve">
          <source>The next group of &lt;code&gt;JTree&lt;/code&gt; methods use &quot;visible&quot; to mean &quot;viewable&quot; (under an expanded parent):</source>
          <target state="translated">下一组 &lt;code&gt;JTree&lt;/code&gt; 方法使用&amp;ldquo;可见&amp;rdquo;来表示&amp;ldquo;可见&amp;rdquo;（在展开的父项下）：</target>
        </trans-unit>
        <trans-unit id="6b1ca923fcbee792afab001c0bf4d34e084c719f" translate="yes" xml:space="preserve">
          <source>The next simplest use of &lt;code&gt;EventHandler&lt;/code&gt; is to extract a property value from the first argument of the method in the listener interface (typically an event object) and use it to set the value of a property in the target object. In the following example we create an &lt;code&gt;ActionListener&lt;/code&gt; that sets the &lt;code&gt;nextFocusableComponent&lt;/code&gt; property of the target (myButton) object to the value of the &quot;source&quot; property of the event.</source>
          <target state="translated">&lt;code&gt;EventHandler&lt;/code&gt; 的下一个最简单的用法是从侦听器接口中的方法的第一个参数（通常是事件对象）中提取属性值，并使用它来设置目标对象中的属性值。在下面的示例中，我们创建一个 &lt;code&gt;ActionListener&lt;/code&gt; ，将目标（myButton）对象的 &lt;code&gt;nextFocusableComponent&lt;/code&gt; 属性设置为事件的&amp;ldquo; source&amp;rdquo;属性的值。</target>
        </trans-unit>
        <trans-unit id="3823007117061ff42c1e7a6b40c6d8a19f34ccd0" translate="yes" xml:space="preserve">
          <source>The next time paint is invoked on the viewport, if the clip region is smaller than the viewport size a timer is kicked off to repaint the whole region.</source>
          <target state="translated">下一次在视口上调用paint时,如果剪辑区域小于视口大小,就会启动一个定时器来重新绘制整个区域。</target>
        </trans-unit>
        <trans-unit id="f9a2faf9fb3b9f8ae2040c7c4e5d190ce7ecc0af" translate="yes" xml:space="preserve">
          <source>The next type of ID are offset-style IDs with some form of prefix, such as 'GMT+2' or 'UTC+01:00'. The recognised prefixes are 'UTC', 'GMT' and 'UT'. The offset is the suffix and will be normalized during creation. These IDs can be normalized to a &lt;code&gt;ZoneOffset&lt;/code&gt; using &lt;code&gt;normalized()&lt;/code&gt;.</source>
          <target state="translated">下一类ID是带有某种形式的前缀的偏移样式ID，例如&amp;ldquo; GMT + 2&amp;rdquo;或&amp;ldquo; UTC + 01：00&amp;rdquo;。识别的前缀为&amp;ldquo; UTC&amp;rdquo;，&amp;ldquo; GMT&amp;rdquo;和&amp;ldquo; UT&amp;rdquo;。偏移量是后缀，将在创建过程中进行标准化。可以使用 &lt;code&gt;normalized()&lt;/code&gt; 将这些ID标准化为 &lt;code&gt;ZoneOffset&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86e912d40d864957a142854d170c406757cb0414" translate="yes" xml:space="preserve">
          <source>The node added.</source>
          <target state="translated">节点补充道。</target>
        </trans-unit>
        <trans-unit id="e44f1d28b1ed0c6128cf75964dda2af57cb4bc43" translate="yes" xml:space="preserve">
          <source>The node at the &lt;code&gt;index&lt;/code&gt;th position in the &lt;code&gt;NodeList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="translated">在该节点 &lt;code&gt;index&lt;/code&gt; 在第位置 &lt;code&gt;NodeList&lt;/code&gt; ，或 &lt;code&gt;null&lt;/code&gt; 如果不是有效的索引。</target>
        </trans-unit>
        <trans-unit id="8f08767eb41800bbfbde9bbe5607f86187a21279" translate="yes" xml:space="preserve">
          <source>The node at the &lt;code&gt;index&lt;/code&gt;th position in the map, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="translated">地图中第 &lt;code&gt;index&lt;/code&gt; 个位置的节点；如果不是有效索引，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25dcefb2a69d40c85715032a38d4c765b6ad7ec0" translate="yes" xml:space="preserve">
          <source>The node at which the &lt;code&gt;TreeWalker&lt;/code&gt; is currently positioned.</source>
          <target state="translated">&lt;code&gt;TreeWalker&lt;/code&gt; 当前所在的节点。</target>
        </trans-unit>
        <trans-unit id="25c2494a9062b0a4fec44eb9e5d8f2a5f7bf6cf4" translate="yes" xml:space="preserve">
          <source>The node being inserted.</source>
          <target state="translated">正在插入的节点。</target>
        </trans-unit>
        <trans-unit id="eefd68869134b5c6003f67d668b41f50e9088f4b" translate="yes" xml:space="preserve">
          <source>The node contains the reference node.</source>
          <target state="translated">该节点包含参考节点。</target>
        </trans-unit>
        <trans-unit id="926d4c6c5c9641e6784d6df9d9121f96b518e1d8" translate="yes" xml:space="preserve">
          <source>The node contains the reference node. A node which contains is always preceding, too.</source>
          <target state="translated">节点包含参考节点。包含的节点也总是在前面。</target>
        </trans-unit>
        <trans-unit id="72cdab6fabcb4973b8730812adba18d5fc92d324" translate="yes" xml:space="preserve">
          <source>The node follows the reference node.</source>
          <target state="translated">节点跟随参考节点。</target>
        </trans-unit>
        <trans-unit id="5a40a86d7ba4c3fbae277f67eaa1edd72c64dac0" translate="yes" xml:space="preserve">
          <source>The node immediately following this node.</source>
          <target state="translated">紧接着这个节点的节点。</target>
        </trans-unit>
        <trans-unit id="70e1299d21c7e340ff3f7d3d35f755d09b6b0a68" translate="yes" xml:space="preserve">
          <source>The node immediately following this node. If there is no such node, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">该节点之后的节点。如果没有这样的节点，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="688be01f5e712790a2f07c91bccb3e81dc55084a" translate="yes" xml:space="preserve">
          <source>The node immediately preceding this node.</source>
          <target state="translated">紧接着这个节点之前的节点。</target>
        </trans-unit>
        <trans-unit id="489a2f7876809d76036f44c18b0a6878267c599e" translate="yes" xml:space="preserve">
          <source>The node immediately preceding this node. If there is no such node, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">该节点之前的节点。如果没有这样的节点，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d88a4ea137aa25d2bcdb9f0d29337d00d2719f5" translate="yes" xml:space="preserve">
          <source>The node is a &lt;code&gt;CDATASection&lt;/code&gt;.</source>
          <target state="translated">该节点是 &lt;code&gt;CDATASection&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3992c5decf9ee81e9249173454da0089170acc0c" translate="yes" xml:space="preserve">
          <source>The node is a &lt;code&gt;Comment&lt;/code&gt;.</source>
          <target state="translated">该节点是 &lt;code&gt;Comment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8cfa4ce440134eec7d17e729483d88d0752609d0" translate="yes" xml:space="preserve">
          <source>The node is a &lt;code&gt;Document&lt;/code&gt;.</source>
          <target state="translated">该节点是一个 &lt;code&gt;Document&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1253bf6ce5e8d87245eb71c8e7995f7e9d2713a" translate="yes" xml:space="preserve">
          <source>The node is a &lt;code&gt;DocumentFragment&lt;/code&gt;.</source>
          <target state="translated">该节点是 &lt;code&gt;DocumentFragment&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="104e203c7a3beb38e0173d43a12cd8263e1662ab" translate="yes" xml:space="preserve">
          <source>The node is a &lt;code&gt;DocumentType&lt;/code&gt;.</source>
          <target state="translated">该节点是 &lt;code&gt;DocumentType&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c43db55ccab03c274adc3665d5d207f1c987613b" translate="yes" xml:space="preserve">
          <source>The node is a &lt;code&gt;Namespace&lt;/code&gt;.</source>
          <target state="translated">该节点是一个 &lt;code&gt;Namespace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70799baaed087daa78146fe3d2c82c5e97d198f8" translate="yes" xml:space="preserve">
          <source>The node is a &lt;code&gt;Notation&lt;/code&gt;.</source>
          <target state="translated">该节点是一个 &lt;code&gt;Notation&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6959c6bb576b424cf20edc90de27e85139e0b7d6" translate="yes" xml:space="preserve">
          <source>The node is a &lt;code&gt;ProcessingInstruction&lt;/code&gt;.</source>
          <target state="translated">该节点是 &lt;code&gt;ProcessingInstruction&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82181fc9a25ccdbbaa459ae8ffabba3c6b011e07" translate="yes" xml:space="preserve">
          <source>The node is a &lt;code&gt;Text&lt;/code&gt; node.</source>
          <target state="translated">该节点是&amp;ldquo; &lt;code&gt;Text&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="a4f1fdcd6851b1862447156d36f1a8064edcbdef" translate="yes" xml:space="preserve">
          <source>The node is adopted, using &lt;code&gt;Document.adoptNode()&lt;/code&gt;.</source>
          <target state="translated">通过使用 &lt;code&gt;Document.adoptNode()&lt;/code&gt; 来采用该节点。</target>
        </trans-unit>
        <trans-unit id="652436729df0bb208fdc046aefbfa457dcae47c3" translate="yes" xml:space="preserve">
          <source>The node is an &lt;code&gt;Attr&lt;/code&gt;.</source>
          <target state="translated">该节点是一个 &lt;code&gt;Attr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e118daebecbe6e623fcaf62887ad574669481e6b" translate="yes" xml:space="preserve">
          <source>The node is an &lt;code&gt;Element&lt;/code&gt;.</source>
          <target state="translated">该节点是一个 &lt;code&gt;Element&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1d8a8c8365746d5f22ab7e728d5b9e9461515cb7" translate="yes" xml:space="preserve">
          <source>The node is an &lt;code&gt;Entity&lt;/code&gt;.</source>
          <target state="translated">该节点是一个 &lt;code&gt;Entity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c777aafc5adf73466ca4dc068f72c31fa299122" translate="yes" xml:space="preserve">
          <source>The node is an &lt;code&gt;EntityReference&lt;/code&gt;.</source>
          <target state="translated">该节点是 &lt;code&gt;EntityReference&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="31d528f4cb617d25ed6bf587586d2e01a3d6d2b4" translate="yes" xml:space="preserve">
          <source>The node is cloned, using &lt;code&gt;Node.cloneNode()&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;Node.cloneNode()&lt;/code&gt; 克隆节点。</target>
        </trans-unit>
        <trans-unit id="b94cbc6b4a584d6bdaedb2ccd9ce9afc37897036" translate="yes" xml:space="preserve">
          <source>The node is contained by the reference node.</source>
          <target state="translated">该节点被参考节点所包含。</target>
        </trans-unit>
        <trans-unit id="d6ece946ea02ee3d159660f34819134d355f68bc" translate="yes" xml:space="preserve">
          <source>The node is contained by the reference node. A node which is contained is always following, too.</source>
          <target state="translated">节点被引用节点所包含。被包含的节点也总是跟随。</target>
        </trans-unit>
        <trans-unit id="e47a628abe4bcb510d76413db50a34ada4a36683" translate="yes" xml:space="preserve">
          <source>The node is deleted.</source>
          <target state="translated">该节点被删除。</target>
        </trans-unit>
        <trans-unit id="83672ddfbdbb04e6267923061fcdb494f10ed227" translate="yes" xml:space="preserve">
          <source>The node is imported, using &lt;code&gt;Document.importNode()&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;Document.importNode()&lt;/code&gt; 导入节点。</target>
        </trans-unit>
        <trans-unit id="be958ab1a3a5b153c7e4bd485baa0f017b8a0164" translate="yes" xml:space="preserve">
          <source>The node is renamed, using &lt;code&gt;Document.renameNode()&lt;/code&gt;.</source>
          <target state="translated">使用 &lt;code&gt;Document.renameNode()&lt;/code&gt; 重命名该节点。</target>
        </trans-unit>
        <trans-unit id="04e411af71a3a83badf3b4023e66910b22ac252a" translate="yes" xml:space="preserve">
          <source>The node removed from this map if a node with such a local name and namespace URI exists.</source>
          <target state="translated">如果存在这样一个本地名称和命名空间URI的节点,则从该地图中删除的节点。</target>
        </trans-unit>
        <trans-unit id="b661946dd93bda0e46530c86097ef476c83f10f5" translate="yes" xml:space="preserve">
          <source>The node removed from this map if a node with such a name exists.</source>
          <target state="translated">如果有这样名字的节点存在,则从该地图中删除的节点。</target>
        </trans-unit>
        <trans-unit id="e4ac372935e647fb4df00b130e6084b54ef6b1be" translate="yes" xml:space="preserve">
          <source>The node removed.</source>
          <target state="translated">删除的节点。</target>
        </trans-unit>
        <trans-unit id="4bc33794277995ad7b77021ec5435f72d849a19b" translate="yes" xml:space="preserve">
          <source>The node replaced.</source>
          <target state="translated">被替换的节点。</target>
        </trans-unit>
        <trans-unit id="007df73ce0d9720fbd1e06f547bec4ea1ba835a2" translate="yes" xml:space="preserve">
          <source>The node that associates this style sheet with the document.</source>
          <target state="translated">将此样式表与文档关联的节点。</target>
        </trans-unit>
        <trans-unit id="4cf53e554b4a5482b427fcf2998c91fe0e55cb8a" translate="yes" xml:space="preserve">
          <source>The node that associates this style sheet with the document. For HTML, this may be the corresponding &lt;code&gt;LINK&lt;/code&gt; or &lt;code&gt;STYLE&lt;/code&gt; element. For XML, it may be the linking processing instruction. For style sheets that are included by other style sheets, the value of this attribute is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">将此样式表与文档关联的节点。对于HTML，这可能是相应的 &lt;code&gt;LINK&lt;/code&gt; 或 &lt;code&gt;STYLE&lt;/code&gt; 元素。对于XML，它可能是链接处理指令。对于其他样式表包含的样式表，此属性的值为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7572680b2b80e8ffbe2e43845817ff3163683c09" translate="yes" xml:space="preserve">
          <source>The node that is the location for the event.</source>
          <target state="translated">事件地点的节点。</target>
        </trans-unit>
        <trans-unit id="e6c54c2549b66a4b21ce4b74222cef22b07b4422" translate="yes" xml:space="preserve">
          <source>The node that is to be transformed.</source>
          <target state="translated">要转换的节点。</target>
        </trans-unit>
        <trans-unit id="2244b9f1c988f6ab45e1adc3aeaad05d28dd975b" translate="yes" xml:space="preserve">
          <source>The node that was added or removed.</source>
          <target state="translated">增加或删除的节点。</target>
        </trans-unit>
        <trans-unit id="ed73ee97c8cd24a6296d058a31d1ef9c51cf1abe" translate="yes" xml:space="preserve">
          <source>The node this locator is pointing to, or &lt;code&gt;null&lt;/code&gt; if no node is available.</source>
          <target state="translated">该定位器指向的节点，如果没有可用的节点，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d6f08034b2207c569504846755de13d16de0411" translate="yes" xml:space="preserve">
          <source>The node to which the transformation will be appended.</source>
          <target state="translated">将会被附加到转换的节点。</target>
        </trans-unit>
        <trans-unit id="4c914679c177f8361a70044b7d9e5fed26293161" translate="yes" xml:space="preserve">
          <source>The node value associated with this UUID.</source>
          <target state="translated">与此UUID相关联的节点值。</target>
        </trans-unit>
        <trans-unit id="5bbeb5b168502d18da4f1fe9867711841ff15466" translate="yes" xml:space="preserve">
          <source>The node value is only meaningful in a time-based UUID, which has version type 1. If this UUID is not a time-based UUID then this method throws UnsupportedOperationException.</source>
          <target state="translated">节点值只有在一个基于时间的UUID中才有意义,这个UUID的版本类型为1。如果这个UUID不是基于时间的UUID,那么这个方法会抛出UnsupportedOperationException。</target>
        </trans-unit>
        <trans-unit id="b2c083ad90bd1defea28a63436df660a7fd1208e" translate="yes" xml:space="preserve">
          <source>The node value of this &lt;code&gt;UUID&lt;/code&gt;</source>
          <target state="translated">此 &lt;code&gt;UUID&lt;/code&gt; 的节点值</target>
        </trans-unit>
        <trans-unit id="9083087196b5f8357ba2ae34b61b87d8cf605eab" translate="yes" xml:space="preserve">
          <source>The nominal form of an instance of a constable type is obtained via &lt;a href=&quot;#describeConstable()&quot;&gt;&lt;code&gt;describeConstable()&lt;/code&gt;&lt;/a&gt;. A &lt;a href=&quot;constable&quot;&gt;Constable&lt;/a&gt; need not be able to (or may choose not to) describe all its instances in the form of a &lt;a href=&quot;constantdesc&quot;&gt;&lt;code&gt;ConstantDesc&lt;/code&gt;&lt;/a&gt;; this method returns an &lt;a href=&quot;../../util/optional&quot;&gt;&lt;code&gt;Optional&lt;/code&gt;&lt;/a&gt; that can be empty to indicate that a nominal descriptor could not be created for an instance. (For example, &lt;a href=&quot;../invoke/methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt; will produce nominal descriptors for direct method handles, but not necessarily those produced by method handle combinators.)</source>
          <target state="translated">常量类型实例的名义形式是通过&lt;a href=&quot;#describeConstable()&quot;&gt; &lt;code&gt;describeConstable()&lt;/code&gt; &lt;/a&gt;获得的。一个&lt;a href=&quot;constable&quot;&gt;警员&lt;/a&gt;需要不能（或者可以选择不）描述的形式的所有实例&lt;a href=&quot;constantdesc&quot;&gt; &lt;code&gt;ConstantDesc&lt;/code&gt; &lt;/a&gt; ; 此方法返回一个&lt;a href=&quot;../../util/optional&quot;&gt; &lt;code&gt;Optional&lt;/code&gt; &lt;/a&gt;，可以为空，指示无法为实例创建名义上的描述符。（例如，&lt;a href=&quot;../invoke/methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt;将为直接方法句柄产生标称描述符，但不一定由方法句柄组合器产生。）</target>
        </trans-unit>
        <trans-unit id="116e08dc3c5462998592161ec4267b36074a602d" translate="yes" xml:space="preserve">
          <source>The non-&lt;code&gt;void&lt;/code&gt; result from a step function call is used to update the corresponding value in the sequence &lt;code&gt;(v...)&lt;/code&gt; of loop variables. The updated value is immediately visible to all subsequent function calls.</source>
          <target state="translated">步骤函数调用的非 &lt;code&gt;void&lt;/code&gt; 结果用于更新循环变量序列 &lt;code&gt;(v...)&lt;/code&gt; 中的相应值。更新的值对所有后续函数调用立即可见。</target>
        </trans-unit>
        <trans-unit id="b799d392c13f57a4244dc8cc1be985c89795fd60" translate="yes" xml:space="preserve">
          <source>The non-baseline tags included in this class are:</source>
          <target state="translated">该类中包括的非基准标签有:</target>
        </trans-unit>
        <trans-unit id="dbb6f21cdd21b51f043b1d7e9cd850253fc91842" translate="yes" xml:space="preserve">
          <source>The non-baseline values of baseline tags included in this class are</source>
          <target state="translated">本类中包含的基线标签的非基线值为</target>
        </trans-unit>
        <trans-unit id="abbf56635d9b1770e8f377f88d7eb5625296e6d7" translate="yes" xml:space="preserve">
          <source>The non-negative number of components in this LDAP name.</source>
          <target state="translated">该LDAP名称中的非负数组件。</target>
        </trans-unit>
        <trans-unit id="0ec6632ce3dac4952c6d1e6de9a5a4ac96bd4964" translate="yes" xml:space="preserve">
          <source>The non-negative number of type/value pairs in this Rdn.</source>
          <target state="translated">该Rdn中类型/值对的非负数。</target>
        </trans-unit>
        <trans-unit id="04c40e79aa1d2b145632c16a6ba96e3ddd6f6561" translate="yes" xml:space="preserve">
          <source>The non-null &lt;code&gt;EventContext&lt;/code&gt; that fired this event.</source>
          <target state="translated">&lt;code&gt;EventContext&lt;/code&gt; 此事件的非null EventContext。</target>
        </trans-unit>
        <trans-unit id="9835e454d9aa1da3cda1a5d111588c0dd9c03234" translate="yes" xml:space="preserve">
          <source>The non-null Attribute ID of the sort key.</source>
          <target state="translated">排序键的非空属性ID。</target>
        </trans-unit>
        <trans-unit id="72f787f2a198f8fedf6cb84c6fe0b5e362381096" translate="yes" xml:space="preserve">
          <source>The non-null RDN at index posn.</source>
          <target state="translated">索引posn处的非空RDN。</target>
        </trans-unit>
        <trans-unit id="e27f3c4b638ce7540d85488b7dcdab9e1e5afc40" translate="yes" xml:space="preserve">
          <source>The non-null Reference of this object.</source>
          <target state="translated">此对象的非空引用。</target>
        </trans-unit>
        <trans-unit id="3a820348b05a92e3255fb97f0c53e3ffddc88be6" translate="yes" xml:space="preserve">
          <source>The non-null address type of this address.</source>
          <target state="translated">该地址的非空地址类型。</target>
        </trans-unit>
        <trans-unit id="981d279effb28301c8fb24760d756c4ff54dba76" translate="yes" xml:space="preserve">
          <source>The non-null array of X.509 public-key certificates.</source>
          <target state="translated">X.509公钥证书的非空数组。</target>
        </trans-unit>
        <trans-unit id="1b2a6e4ec9d45a99cb8a8a065afc3d03e2188058" translate="yes" xml:space="preserve">
          <source>The non-null array of signature bytes.</source>
          <target state="translated">签名字节的非空数组。</target>
        </trans-unit>
        <trans-unit id="d2201b95b88b6f901440dc4bbfb1317bf8e7ee42" translate="yes" xml:space="preserve">
          <source>The non-null attribute to use for the modification.</source>
          <target state="translated">用于修改的非空属性。</target>
        </trans-unit>
        <trans-unit id="c9313ebf57ec9424f831b52f67bbfc348328c4ee" translate="yes" xml:space="preserve">
          <source>The non-null attribute type.</source>
          <target state="translated">非空属性类型。</target>
        </trans-unit>
        <trans-unit id="e8b69252e6ee01638d108902e5793b76660660f5" translate="yes" xml:space="preserve">
          <source>The non-null attribute value.</source>
          <target state="translated">非空属性值。</target>
        </trans-unit>
        <trans-unit id="2715e88a065e5152070b841d877e00fdf01a9b7e" translate="yes" xml:space="preserve">
          <source>The non-null attributes containing the type/value mappings of this Rdn.</source>
          <target state="translated">包含此Rdn的类型/值映射的非空属性。</target>
        </trans-unit>
        <trans-unit id="e7d5ad9946b78e64d8017c4154edc754f5fde616" translate="yes" xml:space="preserve">
          <source>The non-null attributes in this search result. Can be empty.</source>
          <target state="translated">这个搜索结果中的非空属性。可以为空。</target>
        </trans-unit>
        <trans-unit id="95e85cdf81db9eeec068d8d09a8ef2fb4c407fd0" translate="yes" xml:space="preserve">
          <source>The non-null buffer containing this address's contents.</source>
          <target state="translated">包含该地址内容的非空缓冲区。</target>
        </trans-unit>
        <trans-unit id="3d9f08aa3696853e49ea210dd84b71a816664327" translate="yes" xml:space="preserve">
          <source>The non-null cached initial context.</source>
          <target state="translated">非空的缓存初始上下文。</target>
        </trans-unit>
        <trans-unit id="ff3c6126fdf1cc140a98a5cb1cbb91b07b9dae34" translate="yes" xml:space="preserve">
          <source>The non-null component at index posn.</source>
          <target state="translated">指数posn的非空分量。</target>
        </trans-unit>
        <trans-unit id="a0cd8693286f7ab03bf8dfc7ae7e3825ff062d8e" translate="yes" xml:space="preserve">
          <source>The non-null context at which to continue the method.</source>
          <target state="translated">继续执行该方法的非空上下文。</target>
        </trans-unit>
        <trans-unit id="d451c4f1e3abd2fc769f4b6cdd808b41cafdf4b1" translate="yes" xml:space="preserve">
          <source>The non-null context that fired this event.</source>
          <target state="translated">启动该事件的非空上下文。</target>
        </trans-unit>
        <trans-unit id="6ccd0c9d630cefab9c9188537f5d448330d7fbd1" translate="yes" xml:space="preserve">
          <source>The non-null fully-qualified class name of the object. (e.g. &quot;java.lang.String&quot;)</source>
          <target state="translated">对象的非空的完全限定类名。(例如 &quot;java.lang.String&quot;)</target>
        </trans-unit>
        <trans-unit id="55a9d1f6cd92ef1fb0cc4c11ee02219bb6a9c640" translate="yes" xml:space="preserve">
          <source>The non-null name of this binding.</source>
          <target state="translated">此绑定的非空名。</target>
        </trans-unit>
        <trans-unit id="379e7340b01855217e56feddfd0c3f522ce31421" translate="yes" xml:space="preserve">
          <source>The non-null name of this link.</source>
          <target state="translated">这个链接的非空名。</target>
        </trans-unit>
        <trans-unit id="42b9a5b2a8d6c68424fd72083172c212655d9589" translate="yes" xml:space="preserve">
          <source>The non-null object identifier string representing the LDAP &lt;code&gt;ExtendedRequest.requestName&lt;/code&gt; component.</source>
          <target state="translated">代表LDAP &lt;code&gt;ExtendedRequest.requestName&lt;/code&gt; 组件的非空对象标识符字符串。</target>
        </trans-unit>
        <trans-unit id="2cb882abf23a7aa368fb5faa23b533a76c55bbc5" translate="yes" xml:space="preserve">
          <source>The non-null object identifier string.</source>
          <target state="translated">非空的对象标识符字符串。</target>
        </trans-unit>
        <trans-unit id="b295dc0fd888ea6d48259db4af3e90633d18ef36" translate="yes" xml:space="preserve">
          <source>The non-null object representing &lt;code&gt;obj&lt;/code&gt;'s state for binding. It could be the object (&lt;code&gt;obj&lt;/code&gt;) itself.</source>
          <target state="translated">表示 &lt;code&gt;obj&lt;/code&gt; 绑定状态的非null对象。它可能是对象（ &lt;code&gt;obj&lt;/code&gt; ）本身。</target>
        </trans-unit>
        <trans-unit id="3f69773c16095a881d10252c9218f6c6e3c34b88" translate="yes" xml:space="preserve">
          <source>The non-null string containing the string representation of this exception.</source>
          <target state="translated">包含该异常字符串表示的非空字符串。</target>
        </trans-unit>
        <trans-unit id="44e96a35fa5e2445cf72315bf35956f839cecc36" translate="yes" xml:space="preserve">
          <source>The non-null string containing the string representation.</source>
          <target state="translated">包含字符串表示的非空字符串。</target>
        </trans-unit>
        <trans-unit id="14770ada04aa52b33da43484d775da2d31012e32" translate="yes" xml:space="preserve">
          <source>The non-null string name of the signature algorithm.</source>
          <target state="translated">签字算法的非空字符串名称。</target>
        </trans-unit>
        <trans-unit id="25555b5a8e89ed1aa36bc9391297251618d88661" translate="yes" xml:space="preserve">
          <source>The non-null string of the message digest algorithm name.</source>
          <target state="translated">消息摘要算法名称的非空字符串。</target>
        </trans-unit>
        <trans-unit id="b5944a034b359b83174f56a2a7f96839e7b38494" translate="yes" xml:space="preserve">
          <source>The non-null string representation of this address.</source>
          <target state="translated">该地址的非空字符串表示。</target>
        </trans-unit>
        <trans-unit id="c14b6c44d0bf24b5cea45b3da8630bae20b53ad4" translate="yes" xml:space="preserve">
          <source>The non-null string representation of this attribute.</source>
          <target state="translated">此属性的非空字符串表示。</target>
        </trans-unit>
        <trans-unit id="e489b76b389ad519e5854a5f41ece2a22837acbc" translate="yes" xml:space="preserve">
          <source>The non-null string representation of this binding.</source>
          <target state="translated">此绑定的非空字符串表示。</target>
        </trans-unit>
        <trans-unit id="5bd52f1e3944566dde82d6b472de7f01b46708e3" translate="yes" xml:space="preserve">
          <source>The non-null string representation of this exception.</source>
          <target state="translated">这个异常的非空字符串表示。</target>
        </trans-unit>
        <trans-unit id="42db8fc25d73e560ebf5468300a8bc2116164162" translate="yes" xml:space="preserve">
          <source>The non-null string representation of this link exception.</source>
          <target state="translated">这个链接异常的非空字符串表示。</target>
        </trans-unit>
        <trans-unit id="514dc42a6376eec82b1d1ca24105735005dbb207" translate="yes" xml:space="preserve">
          <source>The non-null string representation of this modification item.</source>
          <target state="translated">该修改项目的非空字符串表示。</target>
        </trans-unit>
        <trans-unit id="c944d1dbf9885fa579e084db281b25ba8d8a9512" translate="yes" xml:space="preserve">
          <source>The non-null string representation of this reference.</source>
          <target state="translated">此引用的非空字符串表示。</target>
        </trans-unit>
        <trans-unit id="f67fe15778905975a7fa5a2327a8581b53a9f83e" translate="yes" xml:space="preserve">
          <source>The non-null unsolicited notification that caused this event to be fired.</source>
          <target state="translated">导致该事件被发射的非空的主动通知。</target>
        </trans-unit>
        <trans-unit id="d47f97097499b7920b445b44552f3b93fe502268" translate="yes" xml:space="preserve">
          <source>The nonnegative number of addresses in this reference.</source>
          <target state="translated">本参考资料中地址的非负数。</target>
        </trans-unit>
        <trans-unit id="763b0638d66b2e279fdcda534bfb0307f9e14a5c" translate="yes" xml:space="preserve">
          <source>The nonnegative number of attributes in this attribute set.</source>
          <target state="translated">该属性集的非负数属性。</target>
        </trans-unit>
        <trans-unit id="27a92262272f2e066164e4797757c92e88b495a7" translate="yes" xml:space="preserve">
          <source>The nonnegative number of components in this composite name.</source>
          <target state="translated">这个综合名称中的非负数组件。</target>
        </trans-unit>
        <trans-unit id="2ae208f4c4b22b7904207d628361c77d6ba61f42" translate="yes" xml:space="preserve">
          <source>The nonnegative number of components in this compound name.</source>
          <target state="translated">该化合物名称中成分的非负数。</target>
        </trans-unit>
        <trans-unit id="933031459aff054e43a842b4fd2dd5ed57b4a079" translate="yes" xml:space="preserve">
          <source>The nonnegative number of values in this attribute.</source>
          <target state="translated">此属性中的非负值数量。</target>
        </trans-unit>
        <trans-unit id="f552faffb0355ddf1b05a015bb7baf11154da3d5" translate="yes" xml:space="preserve">
          <source>The normal argument conversion rules for &lt;code&gt;MethodHandle.invoke&lt;/code&gt; apply to all stacked arguments. For example, if a pushed value is a primitive type, it may be converted to a reference by boxing conversion. If the bootstrap method is a variable arity method (its modifier bit &lt;code&gt;0x0080&lt;/code&gt; is set), then some or all of the arguments specified here may be collected into a trailing array parameter. (This is not a special rule, but rather a useful consequence of the interaction between &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; constants, the modifier bit for variable arity methods, and the &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;&lt;code&gt;asVarargsCollector&lt;/code&gt;&lt;/a&gt; transformation.)</source>
          <target state="translated">&lt;code&gt;MethodHandle.invoke&lt;/code&gt; 的常规参数转换规则适用于所有堆叠的参数。例如，如果推送的值是原始类型，则可以通过装箱转换将其转换为引用。如果bootstrap方法是可变arity方法（已设置其修饰符位 &lt;code&gt;0x0080&lt;/code&gt; ），则此处指定的部分或全部自变量可被收集到尾随数组参数中。 （这不是一个特殊的规则，而是 &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 常数，可变&lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt; &lt;code&gt;asVarargsCollector&lt;/code&gt; &lt;/a&gt;方法的修饰符位和asVarargsCollector转换之间相互作用的有用结果。）</target>
        </trans-unit>
        <trans-unit id="92e831571304f766e53b7678f2c8bc953d39e95a" translate="yes" xml:space="preserve">
          <source>The normal use of the &quot;privileged&quot; feature is as follows. If you don't need to return a value from within the &quot;privileged&quot; block, do the following:</source>
          <target state="translated">&quot;特权 &quot;功能的正常使用方法如下。如果你不需要从 &quot;特权 &quot;块中返回一个值,请执行以下操作。</target>
        </trans-unit>
        <trans-unit id="1713b6c492038d81b6717f471a6bc21770c3edef" translate="yes" xml:space="preserve">
          <source>The normalization checks if the rules of this &lt;code&gt;ZoneId&lt;/code&gt; have a fixed offset. If they do, then the &lt;code&gt;ZoneOffset&lt;/code&gt; equal to that offset is returned. Otherwise &lt;code&gt;this&lt;/code&gt; is returned.</source>
          <target state="translated">规范化检查此 &lt;code&gt;ZoneId&lt;/code&gt; 的规则是否具有固定的偏移量。如果它们这样做，则 &lt;code&gt;ZoneOffset&lt;/code&gt; 等于该偏移量的ZoneOffset。否则， &lt;code&gt;this&lt;/code&gt; 将返回。</target>
        </trans-unit>
        <trans-unit id="e2cd0ae79d9cf181d6f2f03a35a1f43855bdc7fd" translate="yes" xml:space="preserve">
          <source>The normalized String</source>
          <target state="translated">归一化字符串</target>
        </trans-unit>
        <trans-unit id="1b1f85af4c6b9e902075539bd21a4b792674f3bd" translate="yes" xml:space="preserve">
          <source>The normative value constraint stated relative to month field's value is in &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#isoformats&quot;&gt;W3C XML Schema 1.0 Part 2, Appendix D&lt;/a&gt;.</source>
          <target state="translated">有关月份字段值的规范值约束在&lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#isoformats&quot;&gt;W3C XML Schema 1.0第2部分，附录D中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2030261f3c87151457bf4c1a86a431b91a19ae8a" translate="yes" xml:space="preserve">
          <source>The normative value constraint stated relative to month field's value is in &lt;a href=&quot;https://www.w3.org/TR/xmlschema-2/#isoformats&quot;&gt;W3C XML Schema 1.0 Part 2, Appendix D&lt;/a&gt;.</source>
          <target state="translated">有关月份字段值的规范值约束在&lt;a href=&quot;https://www.w3.org/TR/xmlschema-2/#isoformats&quot;&gt;W3C XML Schema 1.0第2部分，附录D中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4221fe7c43b2be1f1fe74901de3af60a78573671" translate="yes" xml:space="preserve">
          <source>The north layout constraint (top of container).</source>
          <target state="translated">北部布局约束(集装箱顶部)。</target>
        </trans-unit>
        <trans-unit id="c780ad14e7504360c8fafa2a94843c0740f74099" translate="yes" xml:space="preserve">
          <source>The north-east-resize cursor type.</source>
          <target state="translated">东北方向调整光标大小的类型。</target>
        </trans-unit>
        <trans-unit id="239d8e4a2f499ca8854b5485f8b1ea607325532b" translate="yes" xml:space="preserve">
          <source>The north-resize cursor type.</source>
          <target state="translated">北部调整光标大小的类型。</target>
        </trans-unit>
        <trans-unit id="2977eceb5994e17fa1f7c0dfe7bf3a323d5dcca6" translate="yes" xml:space="preserve">
          <source>The north-west-resize cursor type.</source>
          <target state="translated">西北大小的光标类型。</target>
        </trans-unit>
        <trans-unit id="22d006471ccb7e48bf28b33ef811fdaa4f31ba30" translate="yes" xml:space="preserve">
          <source>The notation name.</source>
          <target state="translated">符号名称。</target>
        </trans-unit>
        <trans-unit id="46f4f42f6b54d68a6627b5ec7f9323ab37bbc2ac" translate="yes" xml:space="preserve">
          <source>The notation's public identifier, or null if none was given.</source>
          <target state="translated">符号的公共标识符,如果没有给定,则为空。</target>
        </trans-unit>
        <trans-unit id="c0a171fe5edbbdcd09395d7988a9b4e98a3f2976" translate="yes" xml:space="preserve">
          <source>The notation's system identifier, or null if none was given.</source>
          <target state="translated">符号的系统标识符,如果没有给出系统标识符,则为空。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
