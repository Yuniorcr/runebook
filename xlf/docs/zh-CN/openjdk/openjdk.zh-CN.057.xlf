<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="f692652cfd014a1551d5de7afae9ef2f769afe87" translate="yes" xml:space="preserve">
          <source>A CipherOutputStream is composed of an OutputStream and a Cipher so that write() methods first process the data before writing them out to the underlying OutputStream.</source>
          <target state="translated">CipherOutputStream是由一个OutputStream和一个Cipher组成的,所以write()方法首先要处理数据,然后再把数据写出来给底层的OutputStream。</target>
        </trans-unit>
        <trans-unit id="fdab3de9abf820203ceaf09327cc721a7901d721" translate="yes" xml:space="preserve">
          <source>A CipherOutputStream is composed of an OutputStream and a Cipher so that write() methods first process the data before writing them out to the underlying OutputStream. The cipher must be fully initialized before being used by a CipherOutputStream.</source>
          <target state="translated">一个CipherOutputStream是由一个OutputStream和一个Cipher组成的,因此write()方法在将数据写入底层OutputStream之前,首先要对数据进行处理。在被CipherOutputStream使用之前,密码必须被完全初始化。</target>
        </trans-unit>
        <trans-unit id="e140636c2a1d6e8b05c54e920844f13300e3f6d9" translate="yes" xml:space="preserve">
          <source>A Close message consists of a status code and a reason for closing. The status code is an integer from the range &lt;code&gt;1000 &amp;lt;= code &amp;lt;= 65535&lt;/code&gt;. The &lt;code&gt;reason&lt;/code&gt; is a string which has a UTF-8 representation not longer than &lt;code&gt;123&lt;/code&gt; bytes.</source>
          <target state="translated">关闭消息由状态代码和关闭原因组成。状态码是 &lt;code&gt;1000 &amp;lt;= code &amp;lt;= 65535&lt;/code&gt; 范围内的整数。的 &lt;code&gt;reason&lt;/code&gt; 是，其具有UTF-8表示不长于一个字符串 &lt;code&gt;123&lt;/code&gt; 个字节。</target>
        </trans-unit>
        <trans-unit id="46ddcc0101e10b1298538225e81f409130eeefd4" translate="yes" xml:space="preserve">
          <source>A Comparator that orders &lt;code&gt;String&lt;/code&gt; objects as by &lt;code&gt;compareToIgnoreCase&lt;/code&gt;.</source>
          <target state="translated">一个由 &lt;code&gt;compareToIgnoreCase&lt;/code&gt; 排序 &lt;code&gt;String&lt;/code&gt; 对象的比较器。</target>
        </trans-unit>
        <trans-unit id="9c41e56ee0d72ad167ee0d749b8fbdd54ce445e6" translate="yes" xml:space="preserve">
          <source>A Comparator that orders &lt;code&gt;String&lt;/code&gt; objects as by &lt;code&gt;compareToIgnoreCase&lt;/code&gt;. This comparator is serializable.</source>
          <target state="translated">一个由 &lt;code&gt;compareToIgnoreCase&lt;/code&gt; 排序 &lt;code&gt;String&lt;/code&gt; 对象的比较器。该比较器是可序列化的。</target>
        </trans-unit>
        <trans-unit id="d97585da074cc604cb9f746899eec743346edb74" translate="yes" xml:space="preserve">
          <source>A ConcurrentHashMap can be used as a scalable frequency map (a form of histogram or multiset) by using &lt;a href=&quot;atomic/longadder&quot;&gt;&lt;code&gt;LongAdder&lt;/code&gt;&lt;/a&gt; values and initializing via &lt;a href=&quot;#computeIfAbsent(K,java.util.function.Function)&quot;&gt;&lt;code&gt;computeIfAbsent&lt;/code&gt;&lt;/a&gt;. For example, to add a count to a &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt;, you can use &lt;code&gt;freqs.computeIfAbsent(key, k -&amp;gt; new LongAdder()).increment();&lt;/code&gt;</source>
          <target state="translated">通过使用&lt;a href=&quot;atomic/longadder&quot;&gt; &lt;code&gt;LongAdder&lt;/code&gt; &lt;/a&gt;值并通过&lt;a href=&quot;#computeIfAbsent(K,java.util.function.Function)&quot;&gt; &lt;code&gt;computeIfAbsent&lt;/code&gt; 进行&lt;/a&gt;初始化，可以将ConcurrentHashMap用作可伸缩的频率图（直方图或多集的一种形式）。例如，要将计数添加到 &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt; ，可以使用 &lt;code&gt;freqs.computeIfAbsent(key, k -&amp;gt; new LongAdder()).increment();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a88c7751045f06ed8e90b4b1167c2d52e5b7889f" translate="yes" xml:space="preserve">
          <source>A ConcurrentHashMap can be used as scalable frequency map (a form of histogram or multiset) by using &lt;a href=&quot;atomic/longadder&quot;&gt;&lt;code&gt;LongAdder&lt;/code&gt;&lt;/a&gt; values and initializing via &lt;a href=&quot;concurrenthashmap#computeIfAbsent-K-java.util.function.Function-&quot;&gt;&lt;code&gt;computeIfAbsent&lt;/code&gt;&lt;/a&gt;. For example, to add a count to a &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt;, you can use &lt;code&gt;freqs.computeIfAbsent(k -&amp;gt; new LongAdder()).increment();&lt;/code&gt;</source>
          <target state="translated">通过使用&lt;a href=&quot;atomic/longadder&quot;&gt; &lt;code&gt;LongAdder&lt;/code&gt; &lt;/a&gt;值并通过&lt;a href=&quot;concurrenthashmap#computeIfAbsent-K-java.util.function.Function-&quot;&gt; &lt;code&gt;computeIfAbsent&lt;/code&gt; 进行&lt;/a&gt;初始化，可以将ConcurrentHashMap用作可伸缩的频率图（一种直方图或多集形式）。例如，要将计数添加到 &lt;code&gt;ConcurrentHashMap&amp;lt;String,LongAdder&amp;gt; freqs&lt;/code&gt; ，可以使用 &lt;code&gt;freqs.computeIfAbsent(k -&amp;gt; new LongAdder()).increment();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cd0f5b492e5e79e1dd49d103d07a9725793440ef" translate="yes" xml:space="preserve">
          <source>A Configuration object is responsible for specifying which LoginModules should be used for a particular application, and in what order the LoginModules should be invoked.</source>
          <target state="translated">配置对象负责指定哪些LoginModules应该被用于特定的应用程序,以及LoginModules应该按照什么顺序被调用。</target>
        </trans-unit>
        <trans-unit id="547a11ef19c1cf1d7ded4cf9b28c153e3fcd9e51" translate="yes" xml:space="preserve">
          <source>A Connection is safe for access by multiple concurrent threads, although at most one thread may be reading and at most one thread may be writing at any given time.</source>
          <target state="translated">一个连接对于多个并发线程的访问是安全的,尽管在任何给定的时间内最多可能有一个线程在读,最多可能有一个线程在写。</target>
        </trans-unit>
        <trans-unit id="5ad5692597f47bcecf3a43b2a646bfa2aaa4032c" translate="yes" xml:space="preserve">
          <source>A Connection represents a bi-directional communication channel between a debugger and a target VM. A Connection is created when &lt;a href=&quot;transportservice&quot;&gt;&lt;code&gt;TransportService&lt;/code&gt;&lt;/a&gt; establishes a connection and successfully handshakes with a target VM. A TransportService implementation provides a reliable JDWP packet transportation service and consequently a Connection provides a reliable flow of JDWP packets between the debugger and the target VM. A Connection is stream oriented, that is, the JDWP packets written to a connection are read by the target VM in the order in which they were written. Similarly packets written to a Connection by the target VM are read by the debugger in the order in which they were written.</source>
          <target state="translated">连接表示调试器和目标VM之间的双向通信通道。当&lt;a href=&quot;transportservice&quot;&gt; &lt;code&gt;TransportService&lt;/code&gt; &lt;/a&gt;建立连接并成功与目标VM握手时，将创建一个Connection 。 TransportService实现提供了可靠的JDWP数据包传输服务，因此Connection提供了调试器和目标VM之间可靠的JDWP数据包流。连接是面向流的，也就是说，目标VM按照写入顺序将写入连接的JDWP数据包读取。类似地，调试器按照写入顺序将目标VM写入连接的数据包读取。</target>
        </trans-unit>
        <trans-unit id="c5e4eb65b030956b29de69ee08731c6de6de807d" translate="yes" xml:space="preserve">
          <source>A Connector is installed on the platform if it is installed in a jar file that is visible to the defining class loader of the &lt;a href=&quot;connect/connector&quot;&gt;&lt;code&gt;Connector&lt;/code&gt;&lt;/a&gt; type, and that jar file contains a provider configuration file named &lt;code&gt;Connector&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;, and the provider configuration file lists the full-qualified class name of the Connector implementation. A Connector is a class that implements the &lt;a href=&quot;connect/connector&quot;&gt;&lt;code&gt;Connector&lt;/code&gt;&lt;/a&gt; interface. More appropriately the class implements one of the specific Connector types, namely &lt;a href=&quot;connect/attachingconnector&quot;&gt;&lt;code&gt;AttachingConnector&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;connect/listeningconnector&quot;&gt;&lt;code&gt;ListeningConnector&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;connect/launchingconnector&quot;&gt;&lt;code&gt;LaunchingConnector&lt;/code&gt;&lt;/a&gt;. The format of the provider configuration file is one fully-qualified class name per line. Space and tab characters surrounding each class, as well as blank lines are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;0x23&lt;/code&gt;), and on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">连接器是安装在平台上，如果它被安装在一个jar文件，该文件是对的定义类加载器可见&lt;a href=&quot;connect/connector&quot;&gt; &lt;code&gt;Connector&lt;/code&gt; &lt;/a&gt;类型，以及jar文件包含一个名为供应商配置文件 &lt;code&gt;Connector&lt;/code&gt; 在资源目录 &lt;code&gt;META-INF/services&lt;/code&gt; ，并提供程序配置文件列出了连接器实现的全限定类名。连接器是实现&lt;a href=&quot;connect/connector&quot;&gt; &lt;code&gt;Connector&lt;/code&gt; &lt;/a&gt;接口的类。更合适的是，该类实现特定的连接器类型之一，即&lt;a href=&quot;connect/attachingconnector&quot;&gt; &lt;code&gt;AttachingConnector&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;connect/listeningconnector&quot;&gt; &lt;code&gt;ListeningConnector&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;connect/launchingconnector&quot;&gt; &lt;code&gt;LaunchingConnector&lt;/code&gt; &lt;/a&gt;。提供程序配置文件的格式是每行一个完全合格的类名。每个类周围的空格和制表符以及空白行将被忽略。注释字符为 &lt;code&gt;'#'&lt;/code&gt; （ &lt;code&gt;0x23&lt;/code&gt; ），并且在每一行中，第一个注释字符之后的所有字符都将被忽略。该文件必须使用UTF-8编码。</target>
        </trans-unit>
        <trans-unit id="d807e9225ff301fb922ab51b4ba82a0d2d0e2426" translate="yes" xml:space="preserve">
          <source>A Container that manages the contentPane and in some cases a menu bar.</source>
          <target state="translated">一个管理contentPane的容器,在某些情况下管理菜单栏。</target>
        </trans-unit>
        <trans-unit id="fcfe802b91350378730e5dab30a4dc357f811011" translate="yes" xml:space="preserve">
          <source>A Container that manages the contentPane and in some cases a menu bar. The layeredPane can be used by descendants that want to add a child to the RootPaneContainer that isn't layout managed. For example an internal dialog or a drag and drop effect component.</source>
          <target state="translated">一个管理contentPane和某些情况下管理菜单栏的容器。分层窗格可以被想要向 RootPaneContainer 添加非布局管理的子代的子代所使用,例如内部对话框或拖放效果组件。例如一个内部对话框或一个拖放效果组件。</target>
        </trans-unit>
        <trans-unit id="d8f93adfaaae3440a93e9e8eeecd144151228a0d" translate="yes" xml:space="preserve">
          <source>A ContainerListener object is registered via &lt;code&gt;addContainerListener&lt;/code&gt;</source>
          <target state="translated">通过 &lt;code&gt;addContainerListener&lt;/code&gt; 注册一个ContainerListener对象</target>
        </trans-unit>
        <trans-unit id="b22423bd271ef93fff76399aaab94802a3cd9de4" translate="yes" xml:space="preserve">
          <source>A Context instance is not guaranteed to be synchronized against concurrent access by multiple threads. Threads that need to access a single Context instance concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating a different Context instance need not synchronize. Note that the &lt;a href=&quot;#lookup(javax.naming.Name)&quot;&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/a&gt; method, when passed an empty name, will return a new Context instance representing the same naming context.</source>
          <target state="translated">不能保证上下文实例针对多个线程的并发访问进行同步。需要同时访问单个Context实例的线程应在它们之间进行同步并提供必要的锁定。多个线程（每个线程分别操纵一个不同的Context实例）无需同步。请注意，当&lt;a href=&quot;#lookup(javax.naming.Name)&quot;&gt; &lt;code&gt;lookup&lt;/code&gt; &lt;/a&gt;方法传递一个空名称时，它将返回一个表示相同命名上下文的新Context实例。</target>
        </trans-unit>
        <trans-unit id="74d36f2b93f37113d35e86b570595f7563d7d60a" translate="yes" xml:space="preserve">
          <source>A Context instance is not guaranteed to be synchronized against concurrent access by multiple threads. Threads that need to access a single Context instance concurrently should synchronize amongst themselves and provide the necessary locking. Multiple threads each manipulating a different Context instance need not synchronize. Note that the &lt;a href=&quot;context#lookup-javax.naming.Name-&quot;&gt;&lt;code&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method, when passed an empty name, will return a new Context instance representing the same naming context.</source>
          <target state="translated">不能保证上下文实例针对多个线程的并发访问进行同步。需要同时访问单个Context实例的线程应在它们之间进行同步并提供必要的锁定。多个线程各自操作一个不同的Context实例，无需同步。请注意，当传递一个空名称时，&lt;a href=&quot;context#lookup-javax.naming.Name-&quot;&gt; &lt;code&gt;&lt;code&gt;lookup&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法将返回一个表示相同命名上下文的新Context实例。</target>
        </trans-unit>
        <trans-unit id="4b29cc8def858a24b7c7f09750b3ab466a9bfce1" translate="yes" xml:space="preserve">
          <source>A CookieHandler object provides a callback mechanism to hook up a HTTP state management policy implementation into the HTTP protocol handler.</source>
          <target state="translated">CookieHandler对象提供了一个回调机制,用于将HTTP状态管理策略实现挂到HTTP协议处理程序中。</target>
        </trans-unit>
        <trans-unit id="2e14cec95df0f08d9bad153498b207b612469b68" translate="yes" xml:space="preserve">
          <source>A CookieHandler object provides a callback mechanism to hook up a HTTP state management policy implementation into the HTTP protocol handler. The HTTP state management mechanism specifies a way to create a stateful session with HTTP requests and responses.</source>
          <target state="translated">CookieHandler对象提供了一个回调机制,用于将HTTP状态管理策略实现挂到HTTP协议处理程序中。HTTP状态管理机制指定了一种通过HTTP请求和响应来创建有状态会话的方法。</target>
        </trans-unit>
        <trans-unit id="79ca6a09288e0d8b71c28a349bae374ffee24a89" translate="yes" xml:space="preserve">
          <source>A CookieStore object represents a storage for cookie.</source>
          <target state="translated">CookieStore对象表示Cookie的存储。</target>
        </trans-unit>
        <trans-unit id="283551993d847395f826933009f09ddcd3e07680" translate="yes" xml:space="preserve">
          <source>A CookieStore object represents a storage for cookie. Can store and retrieve cookies.</source>
          <target state="translated">CookieStore对象表示Cookie的存储。可以存储和检索cookie。</target>
        </trans-unit>
        <trans-unit id="3000b76d11fcc2997e83c8de2ec99b40336ee1d9" translate="yes" xml:space="preserve">
          <source>A CountedCompleter that does not itself have a completer (i.e., one for which &lt;a href=&quot;#getCompleter()&quot;&gt;&lt;code&gt;getCompleter()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;) can be used as a regular ForkJoinTask with this added functionality. However, any completer that in turn has another completer serves only as an internal helper for other computations, so its own task status (as reported in methods such as &lt;a href=&quot;future#isDone()&quot;&gt;&lt;code&gt;Future.isDone()&lt;/code&gt;&lt;/a&gt;) is arbitrary; this status changes only upon explicit invocations of &lt;a href=&quot;#complete(T)&quot;&gt;&lt;code&gt;complete(T)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#cancel(boolean)&quot;&gt;&lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#completeExceptionally(java.lang.Throwable)&quot;&gt;&lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt;&lt;/a&gt; or upon exceptional completion of method &lt;code&gt;compute&lt;/code&gt;. Upon any exceptional completion, the exception may be relayed to a task's completer (and its completer, and so on), if one exists and it has not otherwise already completed. Similarly, cancelling an internal CountedCompleter has only a local effect on that completer, so is not often useful.</source>
          <target state="translated">本身不具有完成程序的CountedCompleter（即，其中&lt;a href=&quot;#getCompleter()&quot;&gt; &lt;code&gt;getCompleter()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;null&lt;/code&gt; 的完成程序）可以用作具有此添加功能的常规ForkJoinTask。但是，任何具有另一个完成程序的完成程序仅充当其他计算的内部帮助程序，因此它自己的任务状态（如在&lt;a href=&quot;future#isDone()&quot;&gt; &lt;code&gt;Future.isDone()&lt;/code&gt; &lt;/a&gt;等方法中所报告的）是任意的。仅当显式调用&lt;a href=&quot;#complete(T)&quot;&gt; &lt;code&gt;complete(T)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;forkjointask#cancel(boolean)&quot;&gt; &lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;forkjointask#completeExceptionally(java.lang.Throwable)&quot;&gt; &lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt; &lt;/a&gt;或方法 &lt;code&gt;compute&lt;/code&gt; 异常完成时，此状态才会更改。在任何异常完成时，如果异常存在，并且尚未完成，则可以将异常转发给任务的完成者（及其完成者，依此类推）。同样，取消内部CountedCompleter对该完成程序仅具有局部影响，因此通常没有用。</target>
        </trans-unit>
        <trans-unit id="0b58e7c6e736957a773f6daa4515fd1439a70f91" translate="yes" xml:space="preserve">
          <source>A CountedCompleter that does not itself have a completer (i.e., one for which &lt;a href=&quot;countedcompleter#getCompleter--&quot;&gt;&lt;code&gt;getCompleter()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;) can be used as a regular ForkJoinTask with this added functionality. However, any completer that in turn has another completer serves only as an internal helper for other computations, so its own task status (as reported in methods such as &lt;a href=&quot;forkjointask#isDone--&quot;&gt;&lt;code&gt;ForkJoinTask.isDone()&lt;/code&gt;&lt;/a&gt;) is arbitrary; this status changes only upon explicit invocations of &lt;a href=&quot;countedcompleter#complete-T-&quot;&gt;&lt;code&gt;complete(T)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#cancel-boolean-&quot;&gt;&lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt;&lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt;&lt;/a&gt; or upon exceptional completion of method &lt;code&gt;compute&lt;/code&gt;. Upon any exceptional completion, the exception may be relayed to a task's completer (and its completer, and so on), if one exists and it has not otherwise already completed. Similarly, cancelling an internal CountedCompleter has only a local effect on that completer, so is not often useful.</source>
          <target state="translated">本身不具有完成程序的CountedCompleter（即，其中&lt;a href=&quot;countedcompleter#getCompleter--&quot;&gt; &lt;code&gt;getCompleter()&lt;/code&gt; &lt;/a&gt;返回 &lt;code&gt;null&lt;/code&gt; 的完成程序）可以用作具有此添加功能的常规ForkJoinTask。但是，任何具有另一个完成程序的完成程序仅充当其他计算的内部帮助程序，因此它自己的任务状态（如&lt;a href=&quot;forkjointask#isDone--&quot;&gt; &lt;code&gt;ForkJoinTask.isDone()&lt;/code&gt; 之类的方法中所述&lt;/a&gt;）是任意的。仅当显式调用&lt;a href=&quot;countedcompleter#complete-T-&quot;&gt; &lt;code&gt;complete(T)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;forkjointask#cancel-boolean-&quot;&gt; &lt;code&gt;ForkJoinTask.cancel(boolean)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt; &lt;code&gt;ForkJoinTask.completeExceptionally(Throwable)&lt;/code&gt; &lt;/a&gt;或方法 &lt;code&gt;compute&lt;/code&gt; 异常完成时，此状态才会更改。在任何异常完成时，如果存在异常并且该异常尚未完成，则可以将异常转发给任务的完成者（及其完成者，依此类推）。同样，取消内部CountedCompleter对该完成程序仅具有局部影响，因此通常没有用。</target>
        </trans-unit>
        <trans-unit id="e6f1d597ff81bc116ebafb1af1319ec9950f7a72" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../urireference&quot;&gt;&lt;code&gt;URIReference&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特定于DOM的&lt;a href=&quot;../urireference&quot;&gt; &lt;code&gt;URIReference&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ca5803d4a9c3a3c1bcc79939307b2f4e73b6e895" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../urireference&quot;&gt;&lt;code&gt;URIReference&lt;/code&gt;&lt;/a&gt;. The purpose of this class is to provide additional context necessary for resolving XPointer URIs or same-document references.</source>
          <target state="translated">特定于DOM的&lt;a href=&quot;../urireference&quot;&gt; &lt;code&gt;URIReference&lt;/code&gt; &lt;/a&gt;。此类的目的是提供解决XPointer URI或相同文档引用所必需的其他上下文。</target>
        </trans-unit>
        <trans-unit id="bfcd6af043d697ad391ab62fae22184ba5ce3987" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlsigncontext&quot;&gt;&lt;code&gt;XMLSignContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特定&lt;a href=&quot;../xmlsigncontext&quot;&gt; &lt;code&gt;XMLSignContext&lt;/code&gt; &lt;/a&gt;DOM的XMLSignContext。</target>
        </trans-unit>
        <trans-unit id="d85da757381ee419d046495d07e13697cdab0559" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlsigncontext&quot;&gt;&lt;code&gt;XMLSignContext&lt;/code&gt;&lt;/a&gt;. This class contains additional methods to specify the location in a DOM tree where an &lt;a href=&quot;../xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; object is to be marshalled when generating the signature.</source>
          <target state="translated">特定&lt;a href=&quot;../xmlsigncontext&quot;&gt; &lt;code&gt;XMLSignContext&lt;/code&gt; &lt;/a&gt;DOM的XMLSignContext。此类包含其他方法，用于在生成签名时指定DOM树中要整理&lt;a href=&quot;../xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt;对象的位置。</target>
        </trans-unit>
        <trans-unit id="84c78b84756fe7f1ca4c1a22cd637f11ae715df0" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlstructure&quot;&gt;&lt;code&gt;XMLStructure&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">特定&lt;a href=&quot;../xmlstructure&quot;&gt; &lt;code&gt;XMLStructure&lt;/code&gt; &lt;/a&gt;DOM的XMLStructure。</target>
        </trans-unit>
        <trans-unit id="9f4b452597df4c938ae233ce6592a0bc4944e188" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlstructure&quot;&gt;&lt;code&gt;XMLStructure&lt;/code&gt;&lt;/a&gt;. The purpose of this class is to allow a DOM node to be used to represent extensible content (any elements or mixed content) in XML Signature structures.</source>
          <target state="translated">特定&lt;a href=&quot;../xmlstructure&quot;&gt; &lt;code&gt;XMLStructure&lt;/code&gt; &lt;/a&gt;DOM的XMLStructure。此类的目的是允许DOM节点用于表示XML签名结构中的可扩展内容（任何元素或混合内容）。</target>
        </trans-unit>
        <trans-unit id="a1811213e46c06173f561a1fc0f03c49dcb92d2d" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlvalidatecontext&quot;&gt;&lt;code&gt;XMLValidateContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOM特定的&lt;a href=&quot;../xmlvalidatecontext&quot;&gt; &lt;code&gt;XMLValidateContext&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c2118176a43e7a7922a590821742530dde4b1591" translate="yes" xml:space="preserve">
          <source>A DOM-specific &lt;a href=&quot;../xmlvalidatecontext&quot;&gt;&lt;code&gt;XMLValidateContext&lt;/code&gt;&lt;/a&gt;. This class contains additional methods to specify the location in a DOM tree where an &lt;a href=&quot;../xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; is to be unmarshalled and validated from.</source>
          <target state="translated">DOM特定的&lt;a href=&quot;../xmlvalidatecontext&quot;&gt; &lt;code&gt;XMLValidateContext&lt;/code&gt; &lt;/a&gt;。此类包含其他方法，这些方法用于指定DOM树中要解组和验证&lt;a href=&quot;../xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt;的位置。</target>
        </trans-unit>
        <trans-unit id="27aa58ab7098ad2b7fa2c5756767850495dc2269" translate="yes" xml:space="preserve">
          <source>A DRBG implementation should support serialization and deserialization by retaining the configuration and effective parameters, but the internal state must not be serialized and the deserialized object must be reinstantiated.</source>
          <target state="translated">DRBG的实现应该通过保留配置和有效参数来支持序列化和反序列化,但内部状态不能被序列化,反序列化的对象必须重新建立。</target>
        </trans-unit>
        <trans-unit id="e83369b8a7eb7f1233b3798dc826997f74691129" translate="yes" xml:space="preserve">
          <source>A DRBG implementation supporting prediction resistance must also support reseeding.</source>
          <target state="translated">支持预测抗性的DRBG实施方案还必须支持重播。</target>
        </trans-unit>
        <trans-unit id="45c11400a585fe73c83ee3f1b8958999facd625f" translate="yes" xml:space="preserve">
          <source>A DRBG instance can be instantiated with parameters from an &lt;a href=&quot;drbgparameters.instantiation&quot;&gt;&lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt;&lt;/a&gt; object and other information (for example, the nonce, which is not managed by this API). This maps to the &lt;code&gt;Instantiate_function&lt;/code&gt; defined in NIST SP 800-90Ar1.</source>
          <target state="translated">可以使用&lt;a href=&quot;drbgparameters.instantiation&quot;&gt; &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; &lt;/a&gt;对象中的参数和其他信息（例如，nonce，不受此API管理）实例化DRBG实例。这映射到NIST SP 800-90Ar1中定义的 &lt;code&gt;Instantiate_function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="157c829c498bb73c9b920748902894633791d9e6" translate="yes" xml:space="preserve">
          <source>A DRBG instance can be reseeded with parameters from a &lt;a href=&quot;drbgparameters.reseed&quot;&gt;&lt;code&gt;DrbgParameters.Reseed&lt;/code&gt;&lt;/a&gt; object. This maps to the &lt;code&gt;Reseed_function&lt;/code&gt; defined in NIST SP 800-90Ar1. Calling &lt;a href=&quot;securerandom#reseed()&quot;&gt;&lt;code&gt;SecureRandom.reseed()&lt;/code&gt;&lt;/a&gt; is equivalent to calling &lt;a href=&quot;securerandom#reseed(java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandom.reseed(SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; with the effective instantiated prediction resistance flag (as returned by &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt;) with no additional input.</source>
          <target state="translated">可以使用&lt;a href=&quot;drbgparameters.reseed&quot;&gt; &lt;code&gt;DrbgParameters.Reseed&lt;/code&gt; &lt;/a&gt;对象中的参数重新植入DRBG实例。这映射到 &lt;code&gt;Reseed_function&lt;/code&gt; 在NIST SP 800-90Ar1定义。调用&lt;a href=&quot;securerandom#reseed()&quot;&gt; &lt;code&gt;SecureRandom.reseed()&lt;/code&gt; &lt;/a&gt;等效于调用&lt;a href=&quot;securerandom#reseed(java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandom.reseed(SecureRandomParameters)&lt;/code&gt; &lt;/a&gt;与有效实例化的预测性标志（由作为返回&lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt;没有额外的输入）。</target>
        </trans-unit>
        <trans-unit id="3885218929e4820b5ba912a1a78e9c95cc7a3762" translate="yes" xml:space="preserve">
          <source>A DRBG instance generates data with additional parameters from a &lt;a href=&quot;drbgparameters.nextbytes&quot;&gt;&lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt;&lt;/a&gt; object. This maps to the &lt;code&gt;Generate_function&lt;/code&gt; defined in NIST SP 800-90Ar1. Calling &lt;a href=&quot;securerandom#nextBytes(byte%5B%5D)&quot;&gt;&lt;code&gt;SecureRandom.nextBytes(byte[])&lt;/code&gt;&lt;/a&gt; is equivalent to calling &lt;a href=&quot;securerandom#nextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandom.nextBytes(byte[], SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; with the effective instantiated strength and prediction resistance flag (as returned by &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt;) with no additional input.</source>
          <target state="translated">DRBG实例从&lt;a href=&quot;drbgparameters.nextbytes&quot;&gt; &lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt; &lt;/a&gt;对象生成带有其他参数的数据。这映射到NIST SP 800-90Ar1中定义的 &lt;code&gt;Generate_function&lt;/code&gt; 。调用&lt;a href=&quot;securerandom#nextBytes(byte%5B%5D)&quot;&gt; &lt;code&gt;SecureRandom.nextBytes(byte[])&lt;/code&gt; &lt;/a&gt;等效于调用具有有效实例化强度和预测阻力标志（由&lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt;返回&lt;a href=&quot;securerandom#nextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandom.nextBytes(byte[], SecureRandomParameters)&lt;/code&gt; &lt;/a&gt;，而无需其他输入。</target>
        </trans-unit>
        <trans-unit id="40ed60db9d5800cf52c2cf5ded24397954bd0443" translate="yes" xml:space="preserve">
          <source>A DRBG is based on a DRBG mechanism as specified in this Recommendation and includes a source of randomness. A DRBG mechanism uses an algorithm (i.e., a DRBG algorithm) that produces a sequence of bits from an initial value that is determined by a seed that is determined from the output of the randomness source.&quot;</source>
          <target state="translated">DRBG基于本建议书规定的DRBG机制,包括随机性源。DRBG机制使用一种算法(即DRBG算法),该算法从一个初始值中产生一个比特序列,该初始值由一个种子确定,该种子由随机性源的输出确定。&quot;</target>
        </trans-unit>
        <trans-unit id="e4520b15cb71855ef5387229fdf25dbee934f5ca" translate="yes" xml:space="preserve">
          <source>A DRBG might reseed itself automatically if the seed period is bigger than the maximum seed life defined by the DRBG mechanism.</source>
          <target state="translated">如果种子期大于DRBG机制定义的最大种子寿命,DRBG可能会自动重新播种。</target>
        </trans-unit>
        <trans-unit id="cda30c8b519b6b092599c3f12ea40b0b472b259c" translate="yes" xml:space="preserve">
          <source>A DRBG should be implemented as a subclass of &lt;a href=&quot;securerandomspi&quot;&gt;&lt;code&gt;SecureRandomSpi&lt;/code&gt;&lt;/a&gt;. It is recommended that the implementation contain the 1-arg &lt;a href=&quot;securerandomspi#%3Cinit%3E(java.security.SecureRandomParameters)&quot;&gt;constructor&lt;/a&gt; that takes a &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; argument. If implemented this way, this implementation can be chosen by any &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; method. If it is chosen by a &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; with a &lt;a href=&quot;securerandomparameters&quot;&gt;&lt;code&gt;SecureRandomParameters&lt;/code&gt;&lt;/a&gt; parameter, the parameter is passed into this constructor. If it is chosen by a &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; without a &lt;code&gt;SecureRandomParameters&lt;/code&gt; parameter, the constructor is called with a &lt;code&gt;null&lt;/code&gt; argument and the implementation should choose its own parameters. Its &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt; must always return a non-null effective &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; object that reflects how the DRBG is actually instantiated. A caller can use this information to determine whether a &lt;code&gt;SecureRandom&lt;/code&gt; object is a DRBG and what features it supports. Please note that the returned value does not necessarily equal to the &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; object passed into the &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; call. For example, the requested capability can be &lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt;&lt;code&gt;DrbgParameters.Capability.NONE&lt;/code&gt;&lt;/a&gt; but the effective value can be &lt;a href=&quot;drbgparameters.capability#RESEED_ONLY&quot;&gt;&lt;code&gt;DrbgParameters.Capability.RESEED_ONLY&lt;/code&gt;&lt;/a&gt; if the implementation supports reseeding. The implementation must implement the &lt;a href=&quot;securerandomspi#engineNextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandomSpi.engineNextBytes(byte[], SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; method which takes a &lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt; parameter. Unless the result of &lt;a href=&quot;securerandom#getParameters()&quot;&gt;&lt;code&gt;SecureRandom.getParameters()&lt;/code&gt;&lt;/a&gt; has its &lt;a href=&quot;drbgparameters.instantiation#getCapability()&quot;&gt;capability&lt;/a&gt; being &lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt;&lt;code&gt;NONE&lt;/code&gt;&lt;/a&gt;, it must implement &lt;a href=&quot;securerandomspi#engineReseed(java.security.SecureRandomParameters)&quot;&gt;&lt;code&gt;SecureRandomSpi.engineReseed(SecureRandomParameters)&lt;/code&gt;&lt;/a&gt; which takes a &lt;code&gt;DrbgParameters.Reseed&lt;/code&gt; parameter.</source>
          <target state="translated">DRBG应该作为&lt;a href=&quot;securerandomspi&quot;&gt; &lt;code&gt;SecureRandomSpi&lt;/code&gt; &lt;/a&gt;的子类实现。建议实现中包含带有 &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; 参数的1-arg&lt;a href=&quot;securerandomspi#%3Cinit%3E(java.security.SecureRandomParameters)&quot;&gt;构造&lt;/a&gt;函数。如果以这种方式实现，则可以通过任何 &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; 方法选择此实现。如果由 &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; 使用&lt;a href=&quot;securerandomparameters&quot;&gt; &lt;code&gt;SecureRandomParameters&lt;/code&gt; &lt;/a&gt;参数选择它，则该参数将传递到此构造函数中。如果由不带 &lt;code&gt;SecureRandomParameters&lt;/code&gt; 参数的 &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; 选择它，则使用 &lt;code&gt;null&lt;/code&gt; 调用构造函数。参数和实现应选择自己的参数。它的&lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt;必须始终返回一个非null的有效 &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; 对象，该对象反映了DRBG实际实例化的方式。调用者可以使用此信息来确定 &lt;code&gt;SecureRandom&lt;/code&gt; 对象是否为DRBG及其支持的功能。请注意，返回的值不一定等于传递到 &lt;code&gt;SecureRandom.getInstance()&lt;/code&gt; 调用中的 &lt;code&gt;DrbgParameters.Instantiation&lt;/code&gt; 对象。例如，请求的功能可以是&lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt; &lt;code&gt;DrbgParameters.Capability.NONE&lt;/code&gt; ,&lt;/a&gt;但有效值可以是&lt;a href=&quot;drbgparameters.capability#RESEED_ONLY&quot;&gt; &lt;code&gt;DrbgParameters.Capability.RESEED_ONLY&lt;/code&gt; &lt;/a&gt;如果实现支持重新播种。该实现必须实现采用 &lt;code&gt;DrbgParameters.NextBytes&lt;/code&gt; 参数的&lt;a href=&quot;securerandomspi#engineNextBytes(byte%5B%5D,java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandomSpi.engineNextBytes(byte[], SecureRandomParameters)&lt;/code&gt; &lt;/a&gt;方法。除非结果&lt;a href=&quot;securerandom#getParameters()&quot;&gt; &lt;code&gt;SecureRandom.getParameters()&lt;/code&gt; &lt;/a&gt;有&lt;a href=&quot;drbgparameters.instantiation#getCapability()&quot;&gt;能力&lt;/a&gt;为&lt;a href=&quot;drbgparameters.capability#NONE&quot;&gt; &lt;code&gt;NONE&lt;/code&gt; &lt;/a&gt;，它必须实现&lt;a href=&quot;securerandomspi#engineReseed(java.security.SecureRandomParameters)&quot;&gt; &lt;code&gt;SecureRandomSpi.engineReseed(SecureRandomParameters)&lt;/code&gt; &lt;/a&gt;，这需要 &lt;code&gt;DrbgParameters.Reseed&lt;/code&gt; 参数。</target>
        </trans-unit>
        <trans-unit id="2707a9726937644a885696f5c2564da091b4818e" translate="yes" xml:space="preserve">
          <source>A Descriptor instance containing the descriptions of options and arguments supported by the diagnostic command (see below)</source>
          <target state="translated">一个描述符实例,包含诊断命令所支持的选项和参数的描述(见下文)。</target>
        </trans-unit>
        <trans-unit id="50ed389c980a3b82f5fa1dcf9431f3b476fcb7a5" translate="yes" xml:space="preserve">
          <source>A Dialog is a top-level window with a title and a border that is typically used to take some form of input from the user.</source>
          <target state="translated">Dialog是一个带有标题和边框的顶层窗口,通常用于接受用户的某种形式的输入。</target>
        </trans-unit>
        <trans-unit id="fe1b9faf4546dec2300125abdf988d84664ea20f" translate="yes" xml:space="preserve">
          <source>A Dialog is a top-level window with a title and a border that is typically used to take some form of input from the user. The size of the dialog includes any area designated for the border. The dimensions of the border area can be obtained using the &lt;code&gt;getInsets&lt;/code&gt; method, however, since these dimensions are platform-dependent, a valid insets value cannot be obtained until the dialog is made displayable by either calling &lt;code&gt;pack&lt;/code&gt; or &lt;code&gt;show&lt;/code&gt;. Since the border area is included in the overall size of the dialog, the border effectively obscures a portion of the dialog, constraining the area available for rendering and/or displaying subcomponents to the rectangle which has an upper-left corner location of &lt;code&gt;(insets.left, insets.top)&lt;/code&gt;, and has a size of &lt;code&gt;width - (insets.left + insets.right)&lt;/code&gt; by &lt;code&gt;height - (insets.top + insets.bottom)&lt;/code&gt;.</source>
          <target state="translated">对话框是带有标题和边框的顶级窗口，通常用于接受用户的某种形式的输入。对话框的大小包括为边框指定的任何区域。可以使用 &lt;code&gt;getInsets&lt;/code&gt; 方法获取边界区域的尺寸，但是，由于这些尺寸取决于平台，因此只有通过调用 &lt;code&gt;pack&lt;/code&gt; 或 &lt;code&gt;show&lt;/code&gt; 使对话框可显示之前，才能获取有效的inset值。由于边框区域包含在对话框的整体大小中，因此边框有效地遮盖了对话框的一部分，从而限制了可用于渲染和/或显示子组件的区域到具有 &lt;code&gt;(insets.left, insets.top)&lt;/code&gt; 左上角位置的矩形。左，insets.top），并且大小为 &lt;code&gt;width - (insets.left + insets.right)&lt;/code&gt; 乘以 &lt;code&gt;height - (insets.top + insets.bottom)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c0ae9f894e19bb52c1d4d3e09f60802c800601c" translate="yes" xml:space="preserve">
          <source>A Dimension object that indicates the size of this component; null if this object is not on the screen</source>
          <target state="translated">一个维度对象,表示该组件的大小;如果该对象不在屏幕上,则为空。</target>
        </trans-unit>
        <trans-unit id="e06695bbc72ff1b5ce51b060c69b0b7a40f516e3" translate="yes" xml:space="preserve">
          <source>A DocAttributeSet is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the DocAttributeSet must be instances of interface &lt;a href=&quot;docattribute&quot;&gt;&lt;code&gt;DocAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;docattributeset#add-javax.print.attribute.Attribute-&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;docattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">DocAttributeSet只是一个&lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; ,&lt;/a&gt;其构造函数和变异操作保证了额外的不变性，即DocAttributeSet中的所有属性值都必须是&lt;a href=&quot;docattribute&quot;&gt; &lt;code&gt;DocAttribute&lt;/code&gt; &lt;/a&gt;接口的实例。在下面重新指定&lt;a href=&quot;docattributeset#add-javax.print.attribute.Attribute-&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;docattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt;操作，以确保此附加不变性。</target>
        </trans-unit>
        <trans-unit id="5bc5e64bf408896ae8dba4b17329bc04ad7f5266" translate="yes" xml:space="preserve">
          <source>A DocTreeVisitor that visits all the child tree nodes, and provides support for maintaining a path for the parent nodes.</source>
          <target state="translated">一个访问所有子树节点的DocTreeVisitor,并支持维护父节点的路径。</target>
        </trans-unit>
        <trans-unit id="9492bbff885119eea05fc66973cb2acb8444da26" translate="yes" xml:space="preserve">
          <source>A DocTreeVisitor that visits all the child tree nodes, and provides support for maintaining a path for the parent nodes. To visit nodes of a particular type, just override the corresponding visitorXYZ method. Inside your method, call super.visitXYZ to visit descendant nodes.</source>
          <target state="translated">一个DocTreeVisitor,它可以访问所有的子树节点,并为维护父节点的路径提供支持。要访问特定类型的节点,只需覆盖相应的visitorXYZ方法。在你的方法里面,调用super.visitXYZ来访问子孙节点。</target>
        </trans-unit>
        <trans-unit id="9526eb9e07d3f0d597f8deb47aa3a8a53b2774f7" translate="yes" xml:space="preserve">
          <source>A DocumentFragment containing the extracted contents.</source>
          <target state="translated">一个包含提取内容的DocumentFragment。</target>
        </trans-unit>
        <trans-unit id="d885aecedb913e7e9ad58e330026c748fe5d6401" translate="yes" xml:space="preserve">
          <source>A DocumentFragment that contains content equivalent to this Range.</source>
          <target state="translated">包含与该Range相当内容的DocumentFragment。</target>
        </trans-unit>
        <trans-unit id="21f6b69850f9a459ccf9785d7b301978a813eb95" translate="yes" xml:space="preserve">
          <source>A Duration object represents a period of Gregorian time, which consists of six fields (years, months, days, hours, minutes, and seconds) plus a sign (+/-) field.</source>
          <target state="translated">持续时间对象表示一个格里高利时间段,它由六个字段(年、月、日、时、分、秒)加上一个符号(+/-)字段组成。</target>
        </trans-unit>
        <trans-unit id="540605bdc46068b28f36fc2fbe886657aecbbe59" translate="yes" xml:space="preserve">
          <source>A Feature type as defined in the &lt;a href=&quot;catalogfeatures#CatalogFeatures&quot;&gt;Catalog Features table&lt;/a&gt;.</source>
          <target state="translated">在&amp;ldquo;&lt;a href=&quot;catalogfeatures#CatalogFeatures&quot;&gt;目录特征&amp;rdquo;表中&lt;/a&gt;定义的特征类型。</target>
        </trans-unit>
        <trans-unit id="dca67a6c4e0325cfb67cd9c03877cb0ceaed02e9" translate="yes" xml:space="preserve">
          <source>A Filter can be used to provide fine grain control over what is logged, beyond the control provided by log levels.</source>
          <target state="translated">过滤器可以用来对记录的内容进行精细的控制,超越了日志级别提供的控制。</target>
        </trans-unit>
        <trans-unit id="f4c9a148d25d26005d31ec79131ad55e93256cdf" translate="yes" xml:space="preserve">
          <source>A FlavorMap which relaxes the traditional 1-to-1 restriction of a Map.</source>
          <target state="translated">一个FlavorMap,它放宽了传统Map的1对1限制。</target>
        </trans-unit>
        <trans-unit id="3a992429c52c81d400c8823b0098a371a1a65594" translate="yes" xml:space="preserve">
          <source>A FlavorMap which relaxes the traditional 1-to-1 restriction of a Map. A flavor is permitted to map to any number of natives, and likewise a native is permitted to map to any number of flavors. FlavorTables need not be symmetric, but typically are.</source>
          <target state="translated">一个FlavorMap,它放宽了传统Map的1对1限制。一个flavor可以映射到任意数量的native,同样,一个native也可以映射到任意数量的flavor。FlavorTables不需要是对称的,但通常是对称的。</target>
        </trans-unit>
        <trans-unit id="e1d9b95370b4f9df8a6d70a956837bb6799f17f8" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy defines the order in which Components with a particular focus cycle root are traversed.</source>
          <target state="translated">FocusTraversalPolicy定义了具有特定焦点周期根的组件被遍历的顺序。</target>
        </trans-unit>
        <trans-unit id="9bb82711aef2432546f117d8e08ea56e21f68ac1" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy defines the order in which Components with a particular focus cycle root are traversed. Instances can apply the policy to arbitrary focus cycle roots, allowing themselves to be shared across Containers. They do not need to be reinitialized when the focus cycle roots of a Component hierarchy change.</source>
          <target state="translated">FocusTraversalPolicy定义了具有特定焦点循环根的组件被遍历的顺序。实例可以将策略应用于任意的焦点周期根,允许自己在容器间共享。当Component层次结构的焦点周期根发生变化时,它们不需要重新初始化。</target>
        </trans-unit>
        <trans-unit id="302ac4a992098dd291ee9fbed1be3b0b5de7f45a" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order based on the order of child Components in a Container.</source>
          <target state="translated">FocusTraversalPolicy,根据容器中子组件的顺序确定遍历顺序。</target>
        </trans-unit>
        <trans-unit id="274bc4a822765b08e82d940279bca9411febe9a1" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order based on the order of child Components in a Container. From a particular focus cycle root, the policy makes a pre-order traversal of the Component hierarchy, and traverses a Container's children according to the ordering of the array returned by &lt;code&gt;Container.getComponents()&lt;/code&gt;. Portions of the hierarchy that are not visible and displayable will not be searched.</source>
          <target state="translated">根据容器中子组件的顺序确定遍历顺序的FocusTraversalPolicy。该策略从特定的焦点循环根开始对Component层次结构进行预遍历，并根据 &lt;code&gt;Container.getComponents()&lt;/code&gt; 返回的数组的顺序遍历Container的子级。层次结构中不可见和不可显示的部分将不会被搜索。</target>
        </trans-unit>
        <trans-unit id="16d3e951d9cfb4b5c0983d839e0275daab570b30" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order by sorting the Components of a focus traversal cycle based on a given Comparator.</source>
          <target state="translated">一个FocusTraversalPolicy,它根据给定的Comparator对焦点遍历周期的Components进行排序,从而确定遍历顺序。</target>
        </trans-unit>
        <trans-unit id="28e6d08b1a0a8ff91d5931eea821c9b751c3af21" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy that determines traversal order by sorting the Components of a focus traversal cycle based on a given Comparator. Portions of the Component hierarchy that are not visible and displayable will not be included.</source>
          <target state="translated">FocusTraversalPolicy,通过根据给定的比较器对焦点遍历周期的组件进行排序来确定遍历顺序。组件层次结构中不可见和不可显示的部分将不被包括在内。</target>
        </trans-unit>
        <trans-unit id="698aaf8759f47e00f9e85c5a656eba498985410d" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy which can optionally provide an algorithm for determining a JInternalFrame's initial Component.</source>
          <target state="translated">FocusTraversalPolicy,它可以选择提供一个算法来确定JInternalFrame的初始Component。</target>
        </trans-unit>
        <trans-unit id="603c6fd19f8c9bfa4462453a5c87aa26a6d0596a" translate="yes" xml:space="preserve">
          <source>A FocusTraversalPolicy which can optionally provide an algorithm for determining a JInternalFrame's initial Component. The initial Component is the first to receive focus when the JInternalFrame is first selected. By default, this is the same as the JInternalFrame's default Component to focus.</source>
          <target state="translated">FocusTraversalPolicy,可选择提供用于确定JInternalFrame初始组件的算法。当JInternalFrame第一次被选中时,初始Component是第一个接收焦点的。默认情况下,这与JInternalFrame的默认Component是相同的焦点。</target>
        </trans-unit>
        <trans-unit id="ecb63af3753ed032809d47c9dac0e904126fcbc0" translate="yes" xml:space="preserve">
          <source>A Format</source>
          <target state="translated">A格式</target>
        </trans-unit>
        <trans-unit id="bbcc0a1f7b91d484f43961c41f2b9e4a4e5bee04" translate="yes" xml:space="preserve">
          <source>A Formatter provides support for formatting LogRecords.</source>
          <target state="translated">格式化器提供对格式化日志记录的支持。</target>
        </trans-unit>
        <trans-unit id="3608d52e4dbd328bc721e5e2b9946b7f8c5348fb" translate="yes" xml:space="preserve">
          <source>A Future representing the result of the operation</source>
          <target state="translated">代表操作结果的 &quot;未来&quot;。</target>
        </trans-unit>
        <trans-unit id="77df36e7d76d3d9d3302e4a05f0c08c1f7c69e5b" translate="yes" xml:space="preserve">
          <source>A GlyphView is a styled chunk of text that represents a view mapped over an element in the text model.</source>
          <target state="translated">GlyphView是一个样式化的文本块,它代表了一个映射在文本模型中元素上的视图。</target>
        </trans-unit>
        <trans-unit id="fe06c64887e8525641c9b2e3bf0d0229ff870a18" translate="yes" xml:space="preserve">
          <source>A GlyphView is a styled chunk of text that represents a view mapped over an element in the text model. This view is generally responsible for displaying text glyphs using character level attributes in some way. An implementation of the GlyphPainter class is used to do the actual rendering and model/view translations. This separates rendering from layout and management of the association with the model.</source>
          <target state="translated">GlyphView是一个样式化的文本块,它代表了一个映射在文本模型中元素上的视图。这个视图通常负责以某种方式使用字符级属性显示文本字形。GlyphPainter类的一个实现被用来完成实际的渲染和模型/视图的转换。这就将渲染和布局以及与模型的关联管理分开了。</target>
        </trans-unit>
        <trans-unit id="457cb135519bf29ef81b844625f7d44dfa89268c" translate="yes" xml:space="preserve">
          <source>A Graphic Control Extension block is written to the output stream only if image metadata containing a GraphicControlExtension element is supplied to the writer, or no image metadata is supplied and the local color table generated from the image requires a transparent index. Application, Plain Text, and Comment Extension blocks are written only if they are supplied to the writer via image metadata.</source>
          <target state="translated">只有当包含 GraphicControlExtension 元素的图像元数据被提供给写入器,或者没有提供图像元数据,并且从图像生成的本地颜色表需要透明索引时,才会将图形控制扩展块写入输出流。应用程序、纯文本和注释扩展块只有在通过图像元数据提供给编写者时才会被写入。</target>
        </trans-unit>
        <trans-unit id="af50eb5591ce520db7166060578eb5119637a841" translate="yes" xml:space="preserve">
          <source>A GuardedObject encapsulates a target object and a Guard object, such that access to the target object is possible only if the Guard object allows it. Once an object is encapsulated by a GuardedObject, access to that object is controlled by the &lt;code&gt;getObject&lt;/code&gt; method, which invokes the &lt;code&gt;checkGuard&lt;/code&gt; method on the Guard object that is guarding access. If access is not allowed, an exception is thrown.</source>
          <target state="translated">GuardedObject封装了一个目标对象和一个Guard对象，因此只有在Guard对象允许的情况下，才可以访问目标对象。一旦对象由GuardedObject封装，对对象的访问就由 &lt;code&gt;getObject&lt;/code&gt; 方法控制，该方法将在保护访问的Guard对象上调用 &lt;code&gt;checkGuard&lt;/code&gt; 方法。如果不允许访问，则会引发异常。</target>
        </trans-unit>
        <trans-unit id="0d2351b4772e9dd16b7c18f880f43463fbe76dff" translate="yes" xml:space="preserve">
          <source>A GuardedObject is an object that is used to protect access to another object.</source>
          <target state="translated">GuardedObject是一个用于保护对另一个对象的访问的对象。</target>
        </trans-unit>
        <trans-unit id="a8cab0413a630393329d2147838049ef36d1f63c" translate="yes" xml:space="preserve">
          <source>A High Level API</source>
          <target state="translated">一个高级的API</target>
        </trans-unit>
        <trans-unit id="2854169b1f57e75e9ac3dbe50ff057a38dfce876" translate="yes" xml:space="preserve">
          <source>A HttpsServer must have an associated &lt;a href=&quot;httpsconfigurator&quot;&gt;&lt;code&gt;HttpsConfigurator&lt;/code&gt;&lt;/a&gt; object which is used to establish the SSL configuration for the SSL connections.</source>
          <target state="translated">HttpsServer必须具有关联的&lt;a href=&quot;httpsconfigurator&quot;&gt; &lt;code&gt;HttpsConfigurator&lt;/code&gt; &lt;/a&gt;对象，该对象用于为SSL连接建立SSL配置。</target>
        </trans-unit>
        <trans-unit id="442600dfbcfd8bf2010e18f3553c561440fccade" translate="yes" xml:space="preserve">
          <source>A JConsole plugin class.</source>
          <target state="translated">一个JConsole插件类。</target>
        </trans-unit>
        <trans-unit id="f8d20b9c9e49faa0af898f115b8f06472032b236" translate="yes" xml:space="preserve">
          <source>A JConsole plugin class. JConsole uses the &lt;a href=&quot;../../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;service provider&lt;/code&gt;&lt;/a&gt; mechanism to search the JConsole plugins. Users can provide their JConsole plugins in a jar file containing a file named</source>
          <target state="translated">JConsole插件类。JConsole使用&lt;a href=&quot;../../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;service provider&lt;/code&gt; &lt;/a&gt;机制来搜索JConsole插件。用户可以在一个jar文件中提供其JConsole插件，该jar文件包含一个名为的文件</target>
        </trans-unit>
        <trans-unit id="d437afb1b90af655cc574ef39642c28c1f36c07a" translate="yes" xml:space="preserve">
          <source>A JDBC &lt;code&gt;FilteredRowSet&lt;/code&gt; standard implementation implements the &lt;code&gt;RowSet&lt;/code&gt; interfaces and extends the &lt;code&gt;CachedRowSet&lt;/code&gt; class. The &lt;code&gt;CachedRowSet&lt;/code&gt; class provides a set of protected cursor manipulation methods, which a &lt;code&gt;FilteredRowSet&lt;/code&gt; implementation can override to supply filtering support.</source>
          <target state="translated">JDBC &lt;code&gt;FilteredRowSet&lt;/code&gt; 标准实现实现 &lt;code&gt;RowSet&lt;/code&gt; 接口并扩展 &lt;code&gt;CachedRowSet&lt;/code&gt; 类。所述 &lt;code&gt;CachedRowSet&lt;/code&gt; 的类别提供一组的受保护的光标操纵方法，其中 &lt;code&gt;FilteredRowSet&lt;/code&gt; 的实施可以覆盖以提供过滤支持。</target>
        </trans-unit>
        <trans-unit id="4b568137ce228a499651a74987888d9f610f408c" translate="yes" xml:space="preserve">
          <source>A JDBC &lt;code&gt;FilteredRowSet&lt;/code&gt; standard implementation implements the &lt;code&gt;RowSet&lt;/code&gt; interfaces and extends the &lt;code&gt;CachedRowSet&lt;/code&gt;&amp;trade; class. The &lt;code&gt;CachedRowSet&lt;/code&gt; class provides a set of protected cursor manipulation methods, which a &lt;code&gt;FilteredRowSet&lt;/code&gt; implementation can override to supply filtering support.</source>
          <target state="translated">JDBC &lt;code&gt;FilteredRowSet&lt;/code&gt; 标准实现实现了 &lt;code&gt;RowSet&lt;/code&gt; 接口并扩展了 &lt;code&gt;CachedRowSet&lt;/code&gt; &amp;trade;类。所述 &lt;code&gt;CachedRowSet&lt;/code&gt; 的类别提供一组的受保护的光标操纵方法，其中 &lt;code&gt;FilteredRowSet&lt;/code&gt; 的实施可以覆盖以提供过滤支持。</target>
        </trans-unit>
        <trans-unit id="f0c4285b19f9b0fd1c94cb6a7db61c10c4f56263" translate="yes" xml:space="preserve">
          <source>A JDBC driver implementation should use the constructor &lt;code&gt;BatchUpdateException(String reason, String SQLState,
 int vendorCode, long []updateCounts,Throwable cause) &lt;/code&gt; instead of constructors that take &lt;code&gt;int[]&lt;/code&gt; for the update counts to avoid the possibility of overflow.</source>
          <target state="translated">JDBC驱动程序实现应使用构造函数 &lt;code&gt;BatchUpdateException(String reason, String SQLState, int vendorCode, long []updateCounts,Throwable cause) &lt;/code&gt; 而不是使用 &lt;code&gt;int[]&lt;/code&gt; 作为更新计数的构造函数，以免发生溢出。</target>
        </trans-unit>
        <trans-unit id="afe77a9a4f253a94bef7be1d1c15dad00d77f18e" translate="yes" xml:space="preserve">
          <source>A JDBC driver may create a &lt;a href=&quot;driveraction&quot;&gt;DriverAction&lt;/a&gt; implementation in order to receive notifications when &lt;a href=&quot;drivermanager#deregisterDriver(java.sql.Driver)&quot;&gt;DriverManager.deregisterDriver(java.sql.Driver)&lt;/a&gt; has been called.</source>
          <target state="translated">JDBC驱动程序可以创建一个&lt;a href=&quot;driveraction&quot;&gt;DriverAction&lt;/a&gt;实现，以便在调用&lt;a href=&quot;drivermanager#deregisterDriver(java.sql.Driver)&quot;&gt;DriverManager.deregisterDriver（java.sql.Driver）&lt;/a&gt;时接收通知。</target>
        </trans-unit>
        <trans-unit id="ff73ce0cbe8e77a9a813ec78bb01ad5e71852504" translate="yes" xml:space="preserve">
          <source>A JMX API connector server that creates RMI-based connections from remote clients.</source>
          <target state="translated">一个JMX API连接器服务器,可从远程客户端创建基于RMI的连接。</target>
        </trans-unit>
        <trans-unit id="f3afe2bdfa3c0dbc4a8b8de29b9607e68d7a3f26" translate="yes" xml:space="preserve">
          <source>A JMX API connector server that creates RMI-based connections from remote clients. Usually, such connector servers are made using &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个JMX API连接器服务器，用于从远程客户端创建基于RMI的连接。通常，此类连接器服务器是使用&lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; &lt;/a&gt;制成的。但是，专用应用程序可以直接使用此类，例如，与&lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; &lt;/a&gt;对象一起使用。</target>
        </trans-unit>
        <trans-unit id="ae6c98f065b6700b78cceaae125cd30aa4ee675a" translate="yes" xml:space="preserve">
          <source>A JMX API connector server that creates RMI-based connections from remote clients. Usually, such connector servers are made using &lt;a href=&quot;../jmxconnectorserverfactory&quot;&gt;&lt;code&gt;JMXConnectorServerFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">一个JMX API连接器服务器，用于从远程客户端创建基于RMI的连接。通常，此类连接器服务器是使用&lt;a href=&quot;../jmxconnectorserverfactory&quot;&gt; &lt;code&gt;JMXConnectorServerFactory&lt;/code&gt; &lt;/a&gt;制成的。但是，专用应用程序可以直接使用此类，例如，与&lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; &lt;/a&gt;对象一起使用。</target>
        </trans-unit>
        <trans-unit id="09e9f2e7630982c7edec95fee6f02dfafa3e0363" translate="yes" xml:space="preserve">
          <source>A JVM TI based JDWP back-end will never set this capability to true.</source>
          <target state="translated">基于JVM TI的JDWP后端永远不会将这个功能设置为true。</target>
        </trans-unit>
        <trans-unit id="b7e6c2614e2f71adc4152c814a2dce219bcaa2a4" translate="yes" xml:space="preserve">
          <source>A Jar directory</source>
          <target state="translated">Jar目录</target>
        </trans-unit>
        <trans-unit id="6dc19b4c0c9bf7e2c340017f908ce07b36d720a9" translate="yes" xml:space="preserve">
          <source>A Jar entry</source>
          <target state="translated">A罐条目</target>
        </trans-unit>
        <trans-unit id="33f576854d1202217500a73131dc51de90b4477a" translate="yes" xml:space="preserve">
          <source>A Jar file</source>
          <target state="translated">一个 Jar 文件</target>
        </trans-unit>
        <trans-unit id="d2232034a8463b68d6045835678f544d2ee44838" translate="yes" xml:space="preserve">
          <source>A Java API for Stream Control Transport Protocol.</source>
          <target state="translated">流控制传输协议的Java API。</target>
        </trans-unit>
        <trans-unit id="297b2a16ec407bba3eff5fdf89b75e43355d9a86" translate="yes" xml:space="preserve">
          <source>A Java L&amp;amp;F implementation of SliderUI.</source>
          <target state="translated">SliderUI的Java L＆F实现。</target>
        </trans-unit>
        <trans-unit id="1da6827faf9d07ac2f0b35aead3537d4219ce887" translate="yes" xml:space="preserve">
          <source>A Java Print Service instance is allowed to support any other doc flavors (or none) in addition to the above mandatory ones, at the implementation's choice.</source>
          <target state="translated">Java打印服务实例除了支持上述强制性的文档外,还允许支持任何其他的文档风味(或不支持),由实现者选择。</target>
        </trans-unit>
        <trans-unit id="a66aee2d7211302980680b8958d4f89d8a39a52b" translate="yes" xml:space="preserve">
          <source>A Java Print Service instance is not &lt;b&gt;&lt;i&gt;required&lt;/i&gt;&lt;/b&gt; to support the following print data formats and print data representation classes. In fact, a developer using this class should &lt;b&gt;never&lt;/b&gt; assume that a particular print service supports the document types corresponding to these pre-defined doc flavors. Always query the print service to determine what doc flavors it supports. However, developers who have print services that support these doc flavors are encouraged to refer to the predefined singleton instances created here.</source>
          <target state="translated">&lt;b&gt;&lt;i&gt;不需要&lt;/i&gt;&lt;/b&gt; Java Print Service实例即可支持以下打印数据格式和打印数据表示形式类。实际上，使用此类的开发人员&lt;b&gt;永远不要&lt;/b&gt;假定特定的打印服务支持与这些预定义的文档样式相对应的文档类型。始终查询打印服务以确定其支持的文档类型。但是，鼓励具有支持这些文档样式的打印服务的开发人员参考此处创建的预定义单例实例。</target>
        </trans-unit>
        <trans-unit id="80192c859d3924988eb6d8c333ea17126c2df7c7" translate="yes" xml:space="preserve">
          <source>A Java Virtual Machine implementation may hide implementation specific frames in addition to &lt;a href=&quot;#SHOW_REFLECT_FRAMES&quot;&gt;reflection frames&lt;/a&gt;. A &lt;code&gt;StackWalker&lt;/code&gt; with this &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; option will show all hidden frames (including reflection frames).</source>
          <target state="translated">Java虚拟机实现可能会隐藏&lt;a href=&quot;#SHOW_REFLECT_FRAMES&quot;&gt;反射框架&lt;/a&gt;之外的特定于实现的框架。一个 &lt;code&gt;StackWalker&lt;/code&gt; 这个 &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; 选项将显示所有隐藏帧（包括反射帧）。</target>
        </trans-unit>
        <trans-unit id="8d892ffdda46a2fc60c6a1d8a7c68c1f25ce0467" translate="yes" xml:space="preserve">
          <source>A Java class can implement this interface to indicate how it is to be converted into a &lt;code&gt;CompositeData&lt;/code&gt; by the MXBean framework.</source>
          <target state="translated">Java类可以实现此接口，以指示如何通过MXBean框架将其转换为 &lt;code&gt;CompositeData&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6edf0111df61af6dbdeb9ee50bfaf78d76b3ee69" translate="yes" xml:space="preserve">
          <source>A Java method call expression naming &lt;code&gt;invokeExact&lt;/code&gt; or &lt;code&gt;invoke&lt;/code&gt; can invoke a method handle from Java source code. From the viewpoint of source code, these methods can take any arguments and their result can be cast to any return type. Formally this is accomplished by giving the invoker methods &lt;code&gt;Object&lt;/code&gt; return types and variable arity &lt;code&gt;Object&lt;/code&gt; arguments, but they have an additional quality called &lt;em&gt;signature polymorphism&lt;/em&gt; which connects this freedom of invocation directly to the JVM execution stack.</source>
          <target state="translated">命名为 &lt;code&gt;invokeExact&lt;/code&gt; 或 &lt;code&gt;invoke&lt;/code&gt; 的 Java方法调用表达式可以从Java源代码中调用方法句柄。从源代码的角度来看，这些方法可以采用任何参数，并且其结果可以强制转换为任何返回类型。形式上，这是通过给调用方方法提供 &lt;code&gt;Object&lt;/code&gt; 返回类型和可变arity &lt;code&gt;Object&lt;/code&gt; 参数来实现的，但是它们具有称为&lt;em&gt;签名多态&lt;/em&gt;的附加&lt;em&gt;特性&lt;/em&gt;，可以将这种调用自由直接连接到JVM执行堆栈。</target>
        </trans-unit>
        <trans-unit id="1bc0756c84e38c0f95a41e93652ab4f8e248990e" translate="yes" xml:space="preserve">
          <source>A Java method call expression naming an access mode method can invoke a VarHandle from Java source code. From the viewpoint of source code, these methods can take any arguments and their polymorphic result (if expressed) can be cast to any return type. Formally this is accomplished by giving the access mode methods variable arity &lt;code&gt;Object&lt;/code&gt; arguments and &lt;code&gt;Object&lt;/code&gt; return types (if the return type is polymorphic), but they have an additional quality called &lt;em&gt;signature polymorphism&lt;/em&gt; which connects this freedom of invocation directly to the JVM execution stack.</source>
          <target state="translated">命名访问模式方法的Java方法调用表达式可以从Java源代码调用VarHandle。从源代码的角度来看，这些方法可以采用任何参数，并且它们的多态结果（如果表达）可以强制转换为任何返回类型。形式上，这是通过为访问模式方法提供可变的arity &lt;code&gt;Object&lt;/code&gt; 参数和 &lt;code&gt;Object&lt;/code&gt; 返回类型（如果返回类型是多态的）来实现的，但是它们具有称为&lt;em&gt;签名多态&lt;/em&gt;的附加质量，该特性将这种调用自由直接连接到JVM执行堆栈。</target>
        </trans-unit>
        <trans-unit id="1fe29cb0e20cb86de06da465519562798f09f55a" translate="yes" xml:space="preserve">
          <source>A Java method that has a native modifier is considered a Java frame.</source>
          <target state="translated">一个具有本地修饰符的Java方法被认为是一个Java框架。</target>
        </trans-unit>
        <trans-unit id="58e91acafe8fe67ec2c2ccabb641a8ae3f696d06" translate="yes" xml:space="preserve">
          <source>A Java object cannot be registered in the MBeanServer unless it is a JMX compliant MBean. By instantiating a RequiredModelMBean, resources are guaranteed that the MBean is valid. MBeanException and RuntimeOperationsException must be thrown on every public method. This allows for wrapping exceptions from distributed communications (RMI, EJB, etc.)</source>
          <target state="translated">除非是符合JMX标准的MBean,否则不能在MBeanServer中注册一个Java对象。通过实例化一个 RequiredModelMBean,可以保证资源的 MBean 是有效的。MBeanException和RuntimeOperationsException必须在每个公共方法上抛出。这允许包装来自分布式通信(RMI、EJB等)的异常。</target>
        </trans-unit>
        <trans-unit id="e09f03419e3950f2881774c48754316dc68ddd62" translate="yes" xml:space="preserve">
          <source>A Java platform implementation may support only a limited, non-empty set of echo characters. Attempts to set an unsupported echo character will cause the default echo character to be used instead. Subsequent calls to getEchoChar() will return the echo character originally requested. This might or might not be identical to the echo character actually used by the TextField implementation.</source>
          <target state="translated">Java 平台的实现可能只支持有限的、非空的回声字符集。试图设置一个不支持的回声字符将导致使用默认的回声字符。随后对getEchoChar()的调用将返回最初请求的回声字符。这可能与TextField实现实际使用的回声字符相同,也可能不相同。</target>
        </trans-unit>
        <trans-unit id="095bc22faf4c5e3630fb6dfd307c760dbd1d9547" translate="yes" xml:space="preserve">
          <source>A Java platform implementation may support only a limited, non-empty set of echo characters. This function returns the echo character originally requested via setEchoChar(). The echo character actually used by the TextField implementation might be different.</source>
          <target state="translated">Java平台可能只支持有限的、非空的回声字符集。这个函数返回最初通过setEchoChar()请求的回声字符。TextField实现实际使用的回声字符可能不同。</target>
        </trans-unit>
        <trans-unit id="4eb2563d5e9d99d4ab24f61d7144f77e0fe3b8b2" translate="yes" xml:space="preserve">
          <source>A Java virtual machine can be described using a &lt;a href=&quot;../virtualmachinedescriptor&quot;&gt;&lt;code&gt;VirtualMachineDescriptor&lt;/code&gt;&lt;/a&gt;. This method invokes the descriptor's &lt;a href=&quot;../virtualmachinedescriptor#provider()&quot;&gt;&lt;code&gt;provider()&lt;/code&gt;&lt;/a&gt; method to check that it is equal to this provider. It then attempts to attach to the Java virtual machine.</source>
          <target state="translated">可以使用&lt;a href=&quot;../virtualmachinedescriptor&quot;&gt; &lt;code&gt;VirtualMachineDescriptor&lt;/code&gt; &lt;/a&gt;描述Java虚拟机。此方法调用描述符的&lt;a href=&quot;../virtualmachinedescriptor#provider()&quot;&gt; &lt;code&gt;provider()&lt;/code&gt; &lt;/a&gt;方法以检查它是否与此提供程序相等。然后，它尝试附加到Java虚拟机。</target>
        </trans-unit>
        <trans-unit id="58c03aa680d8c3910bd52a6133e2ef98635461ef" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the following management interfaces:</source>
          <target state="translated">一个Java虚拟机有以下管理界面的单一实例。</target>
        </trans-unit>
        <trans-unit id="1ec588c4eb2d7f429dc6d90136bd82c63be83482" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getClassLoadingMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getClassLoadingMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="70c8f67671b8966ac11b075966365897c84518be" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getClassLoadingMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getClassLoadingMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getClassLoadingMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="697fcfae7e6cab80b51bc022451b82dddc540831" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getCompilationMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getCompilationMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;方法获得该实例。</target>
        </trans-unit>
        <trans-unit id="347e8813cc60d56413338a44f31ad5ee9c2fa302" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getCompilationMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getCompilationMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getCompilationMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法获得。</target>
        </trans-unit>
        <trans-unit id="3a90239fd82a5490b3ea8e410880f47d3498d8d2" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getMemoryMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;方法获得。</target>
        </trans-unit>
        <trans-unit id="5fa8db4ab567a59fc5f60ec01c6e824fe7c05a22" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getMemoryMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法获得。</target>
        </trans-unit>
        <trans-unit id="4705fea51ed57ff81141225fcc84ffcaa313f0e7" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getOperatingSystemMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getOperatingSystemMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;方法获得该实例。</target>
        </trans-unit>
        <trans-unit id="67d5e334705bccf69af8d75f22e7f727e30e55d9" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getOperatingSystemMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getOperatingSystemMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getOperatingSystemMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法获得。</target>
        </trans-unit>
        <trans-unit id="9147b460a50b435cc53f63706f359ace7746be8c" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getRuntimeMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getRuntimeMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;方法获得该实例。</target>
        </trans-unit>
        <trans-unit id="afc0758b2e4f293302644dac2a4656ff98d653c2" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getRuntimeMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getRuntimeMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getRuntimeMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法获得。</target>
        </trans-unit>
        <trans-unit id="ee17a3fa41a1ceba5841d3cf559df83560728d76" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getThreadMXBean()&quot;&gt;&lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getThreadMXBean()&quot;&gt; &lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;方法获得。</target>
        </trans-unit>
        <trans-unit id="cde8a42465b0560c9bd42d46d1f0eabb338a9d89" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has a single instance of the implementation class of this interface. This instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getThreadMXBean--&quot;&gt;&lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的单个实例。实现此接口的此实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getThreadMXBean--&quot;&gt; &lt;code&gt;ManagementFactory.getThreadMXBean()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法获得。</target>
        </trans-unit>
        <trans-unit id="474a94763f2c5c22a83857e1b426a51503734da1" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has at least one non-empty layer, the &lt;a href=&quot;#boot()&quot;&gt;&lt;code&gt;boot&lt;/code&gt;&lt;/a&gt; layer, that is created when the Java virtual machine is started. The boot layer contains module &lt;code&gt;java.base&lt;/code&gt; and is the only layer in the Java virtual machine with a module named &quot;&lt;code&gt;java.base&lt;/code&gt;&quot;. The modules in the boot layer are mapped to the bootstrap class loader and other class loaders that are &lt;a href=&quot;classloader#builtinLoaders&quot;&gt; built-in&lt;/a&gt; into the Java virtual machine. The boot layer will often be the &lt;a href=&quot;#parents()&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt; when creating additional layers.</source>
          <target state="translated">Java虚拟机至少具有一个非空层，即&lt;a href=&quot;#boot()&quot;&gt; &lt;code&gt;boot&lt;/code&gt; &lt;/a&gt;层，该层是在启动Java虚拟机时创建的。引导层包含模块 &lt;code&gt;java.base&lt;/code&gt; ,并且是Java虚拟机中唯一具有名为&amp;ldquo; &lt;code&gt;java.base&lt;/code&gt; &amp;rdquo;的模块的层。引导层中的模块被映射到引导类加载器和Java虚拟机中&lt;a href=&quot;classloader#builtinLoaders&quot;&gt;内置的&lt;/a&gt;其他类加载器。创建其他层时，引导层通常是&lt;a href=&quot;#parents()&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt;层。</target>
        </trans-unit>
        <trans-unit id="8e05fc4a55f98c87df7022394b7fa8fb70a14dce" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryPoolMXBeans()&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的一个或多个实例。实现此接口的实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getMemoryPoolMXBeans()&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;方法获得该MXBean。</target>
        </trans-unit>
        <trans-unit id="5cdd50ff313fa53fb85c54c49e1ba0d35d26a61b" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryPoolMXBeans--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机具有此接口的实现类的一个或多个实例。实现此接口的实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getMemoryPoolMXBeans--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryPoolMXBeans()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法获得该MXBean。</target>
        </trans-unit>
        <trans-unit id="6850a97c2118b0e5557ce433324f39f61a7bcbcb" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more memory managers. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryManagerMXBeans()&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">一台Java虚拟机具有一个或多个内存管理器。实现此接口的实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getMemoryManagerMXBeans()&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;方法获得该MXBean。</target>
        </trans-unit>
        <trans-unit id="8a6b48dc53a0805d7177ee1ae5c3d1d720dd2b4d" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has one or more memory managers. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getMemoryManagerMXBeans--&quot;&gt;&lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">一台Java虚拟机具有一个或多个内存管理器。实现此接口的实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getMemoryManagerMXBeans--&quot;&gt; &lt;code&gt;ManagementFactory.getMemoryManagerMXBeans()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法获得该MXBean。</target>
        </trans-unit>
        <trans-unit id="7690649d409fc24f67e4adade638be6ff2f11b9b" translate="yes" xml:space="preserve">
          <source>A Java virtual machine has zero or a single instance of the following management interfaces.</source>
          <target state="translated">一个Java虚拟机有零个或一个以下管理接口的实例。</target>
        </trans-unit>
        <trans-unit id="3643080b6a5df5b46e7094eca6936cb87018df88" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may add its platform extension to the management interface by defining platform-dependent interfaces that extend the standard management interfaces to include platform-specific metrics and management operations. The static factory methods in the &lt;code&gt;ManagementFactory&lt;/code&gt; class will return the MXBeans with the platform extension.</source>
          <target state="translated">Java虚拟机实现可以通过定义依赖于平台的接口（将标准管理接口扩展为包括特定于平台的指标和管理操作）来将其平台扩展添加到管理接口。 &lt;code&gt;ManagementFactory&lt;/code&gt; 类中的静态工厂方法将返回带有平台扩展的MXBean。</target>
        </trans-unit>
        <trans-unit id="aa2fce070965d52fff3fd77ec7dbd45ec8214fd6" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may not support the boot class path mechanism for the bootstrap class loader to search for class files. The &lt;a href=&quot;#isBootClassPathSupported()&quot;&gt;&lt;code&gt;isBootClassPathSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if the Java virtual machine supports this method.</source>
          <target state="translated">Java虚拟机实现可能不支持引导类加载器用来搜索类文件的引导类路径机制。所述&lt;a href=&quot;#isBootClassPathSupported()&quot;&gt; &lt;code&gt;isBootClassPathSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定Java虚拟机支持这种方法。</target>
        </trans-unit>
        <trans-unit id="0fdebaa2381914e0bb13323b3f7999aa8c1d3f43" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may not support the boot class path mechanism for the bootstrap class loader to search for class files. The &lt;a href=&quot;runtimemxbean#isBootClassPathSupported--&quot;&gt;&lt;code&gt;isBootClassPathSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if the Java virtual machine supports this method.</source>
          <target state="translated">Java虚拟机实现可能不支持引导类加载器用来搜索类文件的引导类路径机制。所述&lt;a href=&quot;runtimemxbean#isBootClassPathSupported--&quot;&gt; &lt;code&gt;isBootClassPathSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定Java虚拟机支持这种方法。</target>
        </trans-unit>
        <trans-unit id="cbbf7263ee3ada105d25e3a25dac19fb977c0afe" translate="yes" xml:space="preserve">
          <source>A Java virtual machine implementation may support measuring the CPU time for the current thread, for any thread, or for no threads.</source>
          <target state="translated">Java虚拟机实现可以支持测量当前线程、任何线程或无线程的CPU时间。</target>
        </trans-unit>
        <trans-unit id="7b6780bf281838641eef498afd94e1fe1579132e" translate="yes" xml:space="preserve">
          <source>A Java virtual machine is identified by an abstract identifier. The nature of this identifier is platform dependent but in many cases it will be the string representation of the process identifier (or pid).</source>
          <target state="translated">Java虚拟机由一个抽象标识符识别。这个标识符的性质取决于平台,但在许多情况下,它将是进程标识符(或pid)的字符串表示。</target>
        </trans-unit>
        <trans-unit id="b8771f6593b5af27179c3bb03a94a2816a796c54" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may disable CPU time measurement by default. The &lt;a href=&quot;#isThreadCpuTimeEnabled()&quot;&gt;&lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setThreadCpuTimeEnabled(boolean)&quot;&gt;&lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt;&lt;/a&gt; methods can be used to test if CPU time measurement is enabled and to enable/disable this support respectively. Enabling thread CPU measurement could be expensive in some Java virtual machine implementations.</source>
          <target state="translated">Java虚拟机可能默认禁用CPU时间测量。所述&lt;a href=&quot;#isThreadCpuTimeEnabled()&quot;&gt; &lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#setThreadCpuTimeEnabled(boolean)&quot;&gt; &lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt; &lt;/a&gt;的方法可以如果CPU时间测量被启用并分别这种支持可以启用/禁用被用于测试。在某些Java虚拟机实现中，启用线程CPU测量可能会很昂贵。</target>
        </trans-unit>
        <trans-unit id="9fd238169eb9f786a282e184b0797c3100026965" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may disable CPU time measurement by default. The &lt;a href=&quot;threadmxbean#isThreadCpuTimeEnabled--&quot;&gt;&lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;threadmxbean#setThreadCpuTimeEnabled-boolean-&quot;&gt;&lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt;&lt;/a&gt; methods can be used to test if CPU time measurement is enabled and to enable/disable this support respectively. Enabling thread CPU measurement could be expensive in some Java virtual machine implementations.</source>
          <target state="translated">Java虚拟机可能默认禁用CPU时间测量。所述&lt;a href=&quot;threadmxbean#isThreadCpuTimeEnabled--&quot;&gt; &lt;code&gt;isThreadCpuTimeEnabled()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;threadmxbean#setThreadCpuTimeEnabled-boolean-&quot;&gt; &lt;code&gt;setThreadCpuTimeEnabled(boolean)&lt;/code&gt; &lt;/a&gt;的方法可以如果CPU时间测量被启用并分别这种支持可以启用/禁用被用于测试。在某些Java虚拟机实现中，启用线程CPU测量可能会很昂贵。</target>
        </trans-unit>
        <trans-unit id="5af48488aaddcec098475db597e0b2ea17a79281" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may have one or more instances of the following management interfaces.</source>
          <target state="translated">一个Java虚拟机可以有一个或多个以下管理接口的实例。</target>
        </trans-unit>
        <trans-unit id="e36433af5b9e48410e17f94fe22c92e9be5113cf" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may have one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans()&quot;&gt;&lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;platform MBeanServer&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机可能具有此接口的实现类的一个或多个实例。实现此接口的实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans()&quot;&gt; &lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;platform MBeanServer&lt;/code&gt; &lt;/a&gt;方法获得该MXBean。</target>
        </trans-unit>
        <trans-unit id="95203d6db041687aade0c2be196517a165b0adcb" translate="yes" xml:space="preserve">
          <source>A Java virtual machine may have one or more instances of the implementation class of this interface. An instance implementing this interface is an &lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt; that can be obtained by calling the &lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans--&quot;&gt;&lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt;&lt;/a&gt; method or from the &lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Java虚拟机可能具有此接口的实现类的一个或多个实例。实现此接口的实例是&lt;a href=&quot;managementfactory#MXBean&quot;&gt;MXBean&lt;/a&gt;，可以通过调用&lt;a href=&quot;managementfactory#getGarbageCollectorMXBeans--&quot;&gt; &lt;code&gt;ManagementFactory.getGarbageCollectorMXBeans()&lt;/code&gt; &lt;/a&gt;方法或从&lt;a href=&quot;managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;platform &lt;code&gt;MBeanServer&lt;/code&gt;&lt;/code&gt; &lt;/a&gt;方法获得该MXBean。</target>
        </trans-unit>
        <trans-unit id="efb1cbd2f64596a7e895a5a7b43612a96af7c59d" translate="yes" xml:space="preserve">
          <source>A Java virtual machine performs collection usage threshold checking on a memory pool basis. This checking is enabled if the collection usage threshold is set to a positive value. If the collection usage threshold is set to zero, this checking is disabled on this memory pool. Default value is zero. The Java virtual machine performs the collection usage threshold checking at garbage collection time.</source>
          <target state="translated">Java 虚拟机以内存池为基础执行集合使用阈值检查。如果集合使用阈值设置为正值,则启用此检查。如果将集合使用阈值设置为零,则在此内存池上禁用此检查。默认值为零。Java虚拟机在垃圾收集时执行收集使用阈值检查。</target>
        </trans-unit>
        <trans-unit id="8a86334f9b1ec01b79c33f43a194f31c7eb87240" translate="yes" xml:space="preserve">
          <source>A Java virtual machine performs usage threshold crossing checking on a memory pool basis at its best appropriate time, typically, at garbage collection time. Each memory pool maintains a &lt;a href=&quot;#getUsageThresholdCount()&quot;&gt;&lt;code&gt;usage threshold count&lt;/code&gt;&lt;/a&gt; that will get incremented every time when the Java virtual machine detects that the memory pool usage is crossing the threshold.</source>
          <target state="translated">Java虚拟机通常在垃圾回收时间的最佳适当时间基于内存池执行使用率阈值交叉检查。每个内存池都维护一个&lt;a href=&quot;#getUsageThresholdCount()&quot;&gt; &lt;code&gt;usage threshold count&lt;/code&gt; &lt;/a&gt;，每当Java虚拟机检测到内存池使用率超过阈值时，该计数就会增加。</target>
        </trans-unit>
        <trans-unit id="a8b2b51d16e2e228fa4a5cbcce2fb6267e261d1e" translate="yes" xml:space="preserve">
          <source>A Java virtual machine performs usage threshold crossing checking on a memory pool basis at its best appropriate time, typically, at garbage collection time. Each memory pool maintains a &lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt;&lt;code&gt;usage threshold count&lt;/code&gt;&lt;/a&gt; that will get incremented every time when the Java virtual machine detects that the memory pool usage is crossing the threshold.</source>
          <target state="translated">Java虚拟机通常在垃圾回收时间的最佳适当时间基于内存池执行使用率阈值交叉检查。每个内存池都维护一个&lt;a href=&quot;memorypoolmxbean#getUsageThresholdCount--&quot;&gt; &lt;code&gt;usage threshold count&lt;/code&gt; &lt;/a&gt;，每当Java虚拟机检测到内存池使用率超过阈值时，该计数就会增加。</target>
        </trans-unit>
        <trans-unit id="f591e4434edb680353f817c17fbb80e4318446a3" translate="yes" xml:space="preserve">
          <source>A Java virtual machine.</source>
          <target state="translated">一个Java虚拟机。</target>
        </trans-unit>
        <trans-unit id="657273352ec0c0d17b18a655ec31ad2fce7306d4" translate="yes" xml:space="preserve">
          <source>A JavaBean nested within a BeanContext, may ask that BeanContext to provide an instance of a &quot;service&quot;, based upon a reference to a Java Class object that represents that service.</source>
          <target state="translated">嵌套在BeanContext中的JavaBean,可以要求该BeanContext提供一个 &quot;服务 &quot;的实例,基于对代表该服务的Java类对象的引用。</target>
        </trans-unit>
        <trans-unit id="cbfa3a04746bf2e669058dbb316d63d08277b0ab" translate="yes" xml:space="preserve">
          <source>A KRB_CRED message is defined in Section 5.8.1 of the Kerberos Protocol Specification (&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;) as:</source>
          <target state="translated">在Kerberos协议规范（&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;）的第5.8.1节中，将KRB_CRED消息定义为：</target>
        </trans-unit>
        <trans-unit id="fbe7ad691130bca8fbd84927805547f7efac8f0b" translate="yes" xml:space="preserve">
          <source>A KRB_CRED message is defined in Section 5.8.1 of the Kerberos Protocol Specification (&lt;a href=&quot;https://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;) as:</source>
          <target state="translated">在Kerberos协议规范（&lt;a href=&quot;https://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;）的第5.8.1节中，将KRB_CRED消息定义为：</target>
        </trans-unit>
        <trans-unit id="4856ceba23801dd7f33418aeaae137318b971a6d" translate="yes" xml:space="preserve">
          <source>A Kerberos JAAS login module that obtains long term secret keys from a keytab file should use this class. The login module will store an instance of this class in the private credential set of a &lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; during the commit phase of the authentication process.</source>
          <target state="translated">从密钥表文件中获取长期密钥的Kerberos JAAS登录模块应使用此类。登录模块将在身份验证过程的提交阶段将此类的实例存储在&lt;a href=&quot;../../../../../java.base/javax/security/auth/subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt;的私有证书集中。</target>
        </trans-unit>
        <trans-unit id="3abf2e9662154c3360ad9e12084989fccc02c4fc" translate="yes" xml:space="preserve">
          <source>A Kerberos JAAS login module that obtains long term secret keys from a keytab file should use this class. The login module will store an instance of this class in the private credential set of a &lt;a href=&quot;../subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt; during the commit phase of the authentication process.</source>
          <target state="translated">从密钥表文件中获取长期秘密密钥的Kerberos JAAS登录模块应使用此类。登录模块将在身份验证过程的提交阶段将此类的实例存储在&lt;a href=&quot;../subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt;的私有证书集中。</target>
        </trans-unit>
        <trans-unit id="447d01d458e313cec32a02eaa5cecaa0a26e2112" translate="yes" xml:space="preserve">
          <source>A Kerberos service using a keytab to read secret keys should use the &lt;a href=&quot;keytab&quot;&gt;&lt;code&gt;KeyTab&lt;/code&gt;&lt;/a&gt; class, where latest keys can be read when needed.</source>
          <target state="translated">使用keytab读取密钥的Kerberos服务应使用&lt;a href=&quot;keytab&quot;&gt; &lt;code&gt;KeyTab&lt;/code&gt; &lt;/a&gt;类，可以在需要时读取最新的密钥。</target>
        </trans-unit>
        <trans-unit id="0f4eb7d3eddf9e5cdd73c01e702fff914c37ea87" translate="yes" xml:space="preserve">
          <source>A Key pair generator for a particular algorithm creates a public/private key pair that can be used with this algorithm. It also associates algorithm-specific parameters with each of the generated keys.</source>
          <target state="translated">特定算法的密钥对生成器可以创建一个可用于该算法的公钥/私钥对。它还将算法的特定参数与每个生成的密钥相关联。</target>
        </trans-unit>
        <trans-unit id="096673ba135366e0327920d2953045ffc1a73dc8" translate="yes" xml:space="preserve">
          <source>A Key should use KeyRep as its serialized representation. Note that a serialized Key may contain sensitive information which should not be exposed in untrusted environments. See the  Security Appendix of the Serialization Specification for more information.</source>
          <target state="translated">一个Key应该使用KeyRep作为它的序列化表示。请注意,序列化的Key可能包含敏感信息,这些信息不应该暴露在不受信任的环境中。更多信息请参见序列化规范的安全附录。</target>
        </trans-unit>
        <trans-unit id="2dbe2f6e28368d28b4e57a87d42ca110e25332c7" translate="yes" xml:space="preserve">
          <source>A Key should use KeyRep as its serialized representation. Note that a serialized Key may contain sensitive information which should not be exposed in untrusted environments. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/serialization/security.html&quot;&gt; Security Appendix&lt;/a&gt; of the Serialization Specification for more information.</source>
          <target state="translated">密钥应使用KeyRep作为其序列化表示形式。请注意，序列化的密钥可能包含敏感信息，这些信息不应在不受信任的环境中公开。有关更多信息，请参见序列化规范的&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/serialization/security.html&quot;&gt;安全性附录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cdb33e019ce481772325144a6ee07deb6901d297" translate="yes" xml:space="preserve">
          <source>A Key should use KeyRep as its serialized representation. Note that a serialized Key may contain sensitive information which should not be exposed in untrusted environments. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/serialization/security.html&quot;&gt; Security Appendix&lt;/a&gt; of the Serialization Specification for more information.</source>
          <target state="translated">密钥应使用KeyRep作为其序列化表示形式。请注意，序列化的密钥可能包含敏感信息，这些信息不应在不受信任的环境中公开。有关更多信息，请参见序列化规范的&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/serialization/security.html&quot;&gt;安全性附录&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3465d18f7c958f4eeced04692ba85e06b354c9ec" translate="yes" xml:space="preserve">
          <source>A KeyAlreadyExistsException with a detail message.</source>
          <target state="translated">一个带有细节信息的KeyAlreadyExistsException。</target>
        </trans-unit>
        <trans-unit id="e37b2fbff6d8ebf1d7b8bd7d21ae02fa2e660373" translate="yes" xml:space="preserve">
          <source>A KeyAlreadyExistsException with no detail message.</source>
          <target state="translated">一个没有细节信息的KeyAlreadyExistsException。</target>
        </trans-unit>
        <trans-unit id="8bc4eacbad1d0c40ed7878a2f885b6d5f62533b7" translate="yes" xml:space="preserve">
          <source>A KeyEventDispatcher cooperates with the current KeyboardFocusManager in the targeting and dispatching of all KeyEvents.</source>
          <target state="translated">一个KeyEventDispatcher与当前的KeyboardFocusManager合作,对所有KeyEvents进行定位和调度。</target>
        </trans-unit>
        <trans-unit id="ac54a63dd2de6f1d147a892a47d92518fafab8e3" translate="yes" xml:space="preserve">
          <source>A KeyEventDispatcher cooperates with the current KeyboardFocusManager in the targeting and dispatching of all KeyEvents. KeyEventDispatchers registered with the current KeyboardFocusManager will receive KeyEvents before they are dispatched to their targets, allowing each KeyEventDispatcher to retarget the event, consume it, dispatch the event itself, or make other changes.</source>
          <target state="translated">一个KeyEventDispatcher与当前的KeyboardFocusManager合作,对所有KeyEvents进行定位和调度。与当前KeyboardFocusManager注册的KeyEventDispatcher将在KeyEvents被派发到其目标之前接收KeyEvents,允许每个KeyEventDispatcher重新锁定事件、消耗事件、派发事件本身或进行其他更改。</target>
        </trans-unit>
        <trans-unit id="bed31dbb99340dc18c4a0575e4637bb187d0fa64" translate="yes" xml:space="preserve">
          <source>A KeyEventPostProcessor cooperates with the current KeyboardFocusManager in the final resolution of all unconsumed KeyEvents.</source>
          <target state="translated">一个KeyEventPostProcessor与当前的KeyboardFocusManager合作,对所有未消耗的KeyEvents进行最终解析。</target>
        </trans-unit>
        <trans-unit id="60e283cd00d232003055cd84c668841c63a28591" translate="yes" xml:space="preserve">
          <source>A KeyEventPostProcessor cooperates with the current KeyboardFocusManager in the final resolution of all unconsumed KeyEvents. KeyEventPostProcessors registered with the current KeyboardFocusManager will receive KeyEvents after the KeyEvents have been dispatched to and handled by their targets. KeyEvents that would have been otherwise discarded because no Component in the application currently owns the focus will also be forwarded to registered KeyEventPostProcessors. This will allow applications to implement features that require global KeyEvent post-handling, such as menu shortcuts.</source>
          <target state="translated">KeyEventPostProcessor与当前的KeyboardFocusManager合作,最终解决所有未消耗的KeyEvents。在当前KeyboardFocusManager注册的KeyEventPostProcessor将在KeyEvents被派发到目标并由其目标处理后接收KeyEvents。否则,由于应用程序中目前没有任何组件拥有焦点而被丢弃的KeyEvents也将被转发给注册的KeyEventPostProcessors。这将允许应用程序实现需要全局KeyEvent后处理的功能,例如菜单快捷键。</target>
        </trans-unit>
        <trans-unit id="7d43ddd3fd0e04d7152918c4a6544b9288fdb112" translate="yes" xml:space="preserve">
          <source>A KeyStroke represents a key action on the keyboard, or equivalent input device.</source>
          <target state="translated">一个KeyStroke代表了键盘上的一个键操作,或等效的输入设备。</target>
        </trans-unit>
        <trans-unit id="df1b8e126758b85c9a9308b975a57f80e0949491" translate="yes" xml:space="preserve">
          <source>A KeyStroke represents a key action on the keyboard, or equivalent input device. KeyStrokes can correspond to only a press or release of a particular key, just as KEY_PRESSED and KEY_RELEASED KeyEvents do; alternately, they can correspond to typing a specific Java character, just as KEY_TYPED KeyEvents do. In all cases, KeyStrokes can specify modifiers (alt, shift, control, meta, altGraph, or a combination thereof) which must be present during the action for an exact match.</source>
          <target state="translated">一个KeyStroke代表了键盘上的一个键操作,或者等价的输入设备。KeyStrokes可以像KEY_PRESSED和KEY_RELEASED KeyEvents一样,只对应于按下或释放一个特定的键;也可以像KEY_TYPED KeyEvents一样,对应于输入一个特定的Java字符。在所有情况下,KeyStrokes可以指定修饰符(alt、shift、control、meta、altGraph或它们的组合),这些修饰符必须在操作过程中出现,以实现精确匹配。</target>
        </trans-unit>
        <trans-unit id="f9cb9d5595a420716375bdc90a99c076fa50ccbc" translate="yes" xml:space="preserve">
          <source>A Latin script character (&lt;a href=&quot;#usc&quot;&gt;script&lt;/a&gt;)</source>
          <target state="translated">拉丁字母字符（&lt;a href=&quot;#usc&quot;&gt;script&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="3df86ed1a5c5d9a4c4287bba1036f7e47b615722" translate="yes" xml:space="preserve">
          <source>A LinkException instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single LinkException instance should lock the object.</source>
          <target state="translated">LinkException 实例不针对并发多线程访问进行同步。试图访问和修改单个LinkException实例的多个线程应该锁定该对象。</target>
        </trans-unit>
        <trans-unit id="b68abbabb6e97ad8331f3d5518e74f7c062df9f1" translate="yes" xml:space="preserve">
          <source>A LinkRef contains a single StringRefAddr, whose type is &quot;LinkAddress&quot;, and whose contents is the link name. The class name field of the Reference is that of this (LinkRef) class.</source>
          <target state="translated">一个LinkRef包含一个单一的StringRefAddr,其类型是 &quot;LinkAddress&quot;,其内容是链接名。Reference的类名字段就是这个(LinkRef)类的名称。</target>
        </trans-unit>
        <trans-unit id="84f7678a14a9b51bae97ebf4cbbebc77f8fd09e2" translate="yes" xml:space="preserve">
          <source>A LinkRef instance is not synchronized against concurrent access by multiple threads. Threads that need to access a LinkRef instance concurrently should synchronize amongst themselves and provide the necessary locking.</source>
          <target state="translated">LinkRef实例不会针对多个线程的并发访问进行同步。需要并发访问LinkRef实例的线程应该在它们之间同步,并提供必要的锁定。</target>
        </trans-unit>
        <trans-unit id="1a22a9eae003d2fd4d91b57b9501d9c8bd8e05f4" translate="yes" xml:space="preserve">
          <source>A Locale.</source>
          <target state="translated">A地域。</target>
        </trans-unit>
        <trans-unit id="8e9450ade3577279276bfc67304338bff8c8a567" translate="yes" xml:space="preserve">
          <source>A LogManager initializes the logging configuration via the &lt;a href=&quot;#readConfiguration()&quot;&gt;&lt;code&gt;readConfiguration()&lt;/code&gt;&lt;/a&gt; method during LogManager initialization. By default, LogManager default configuration is used. The logging configuration read by LogManager must be in the &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;properties file&lt;/a&gt; format.</source>
          <target state="translated">在LogManager初始化期间，LogManager通过&lt;a href=&quot;#readConfiguration()&quot;&gt; &lt;code&gt;readConfiguration()&lt;/code&gt; &lt;/a&gt;方法初始化日志记录配置。默认情况下，使用LogManager默认配置。LogManager读取的日志记录配置必须采用&lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;属性文件&lt;/a&gt;格式。</target>
        </trans-unit>
        <trans-unit id="6779005abde1a1d41736e7235a71052354ae112b" translate="yes" xml:space="preserve">
          <source>A Logger object is used to log messages for a specific system or application component.</source>
          <target state="translated">Logger对象用于记录特定系统或应用程序组件的消息。</target>
        </trans-unit>
        <trans-unit id="c499d734d095b4b498a4bc777509de20cc1569e0" translate="yes" xml:space="preserve">
          <source>A Logger object is used to log messages for a specific system or application component. Loggers are normally named, using a hierarchical dot-separated namespace. Logger names can be arbitrary strings, but they should normally be based on the package name or class name of the logged component, such as java.net or javax.swing. In addition it is possible to create &quot;anonymous&quot; Loggers that are not stored in the Logger namespace.</source>
          <target state="translated">记录仪对象用于记录特定系统或应用程序组件的消息。记录仪通常使用层次化的点分隔命名空间来命名。记录仪的名称可以是任意字符串,但通常应该基于被记录组件的包名或类名,如java.net或javax.swing。此外,还可以创建不存储在Logger命名空间中的 &quot;匿名 &quot;Logger。</target>
        </trans-unit>
        <trans-unit id="3004083b41f7279bccf2d376054f13365417107a" translate="yes" xml:space="preserve">
          <source>A LoginContext should not be used to authenticate more than one Subject. A separate LoginContext should be used to authenticate each different Subject.</source>
          <target state="translated">一个LoginContext不应该被用来验证一个以上的主题。每一个不同的主体都应该使用单独的LoginContext来进行认证。</target>
        </trans-unit>
        <trans-unit id="d08eeb72c55f5def07e0edd5465431aea0a4bae5" translate="yes" xml:space="preserve">
          <source>A Low Level API</source>
          <target state="translated">一个低级别的API</target>
        </trans-unit>
        <trans-unit id="0e4bee990e5dd51f412e4e4f387a0961aa4345bb" translate="yes" xml:space="preserve">
          <source>A MAC mechanism that is based on cryptographic hash functions is referred to as HMAC. HMAC can be used with any cryptographic hash function, e.g., MD5 or SHA-1, in combination with a secret shared key. HMAC is specified in RFC 2104.</source>
          <target state="translated">基于加密散列函数的MAC机制被称为HMAC。HMAC可以与任何加密哈希函数一起使用,例如MD5或SHA-1,并与秘密共享密钥相结合。HMAC在RFC 2104中规定。</target>
        </trans-unit>
        <trans-unit id="fdf1d560479dc25561c05387e1a440a1e90682b9" translate="yes" xml:space="preserve">
          <source>A MAC mechanism that is based on cryptographic hash functions is referred to as HMAC. HMAC can be used with any cryptographic hash function, e.g., SHA256 or SHA384, in combination with a secret shared key. HMAC is specified in RFC 2104.</source>
          <target state="translated">基于加密散列函数的MAC机制被称为HMAC。HMAC可以与任何加密哈希函数一起使用,例如SHA256或SHA384,并与秘密共享密钥相结合。HMAC在RFC 2104中规定。</target>
        </trans-unit>
        <trans-unit id="a23eefafff3c08d819fbb5e313f435090a8297a6" translate="yes" xml:space="preserve">
          <source>A MAC provides a way to check the integrity of information transmitted over or stored in an unreliable medium, based on a secret key. Typically, message authentication codes are used between two parties that share a secret key in order to validate information transmitted between these parties.</source>
          <target state="translated">MAC提供了一种根据秘密密钥检查在不可靠的介质上传输或存储的信息的完整性的方法。通常,信息验证码用于共享秘密密钥的双方之间,以验证双方之间传输的信息。</target>
        </trans-unit>
        <trans-unit id="d41c3f0b35e054811d0849376f58a811e7f00a9f" translate="yes" xml:space="preserve">
          <source>A MIDI track is an independent stream of MIDI events (time-stamped MIDI data) that can be stored along with other tracks in a standard MIDI file.</source>
          <target state="translated">MIDI音轨是一个独立的MIDI事件流(有时间标记的MIDI数据),可以和其他音轨一起存储在标准MIDI文件中。</target>
        </trans-unit>
        <trans-unit id="d2a10cf14dbd436a9cd345369966e488cc6b0cd9" translate="yes" xml:space="preserve">
          <source>A MIDI track is an independent stream of MIDI events (time-stamped MIDI data) that can be stored along with other tracks in a standard MIDI file. The MIDI specification allows only 16 channels of MIDI data, but tracks are a way to get around this limitation. A MIDI file can contain any number of tracks, each containing its own stream of up to 16 channels of MIDI data.</source>
          <target state="translated">MIDI音轨是一个独立的MIDI事件流(有时间标记的MIDI数据),可以和其他音轨一起存储在标准MIDI文件中。MIDI规范只允许16个通道的MIDI数据,但音轨是绕过这个限制的一种方法。一个MIDI文件可以包含任何数量的音轨,每个音轨都包含自己的16个通道的MIDI数据流。</target>
        </trans-unit>
        <trans-unit id="d0adcd7942ffec4cb4b752421915de265cef59a0" translate="yes" xml:space="preserve">
          <source>A MIME Content-Type of application/x-java-serialized-object represents a graph of Java object(s) that have been made persistent.</source>
          <target state="translated">Application/x-java-serialized-object 的 MIME Content-Type 表示一个已被持久化的 Java 对象图。</target>
        </trans-unit>
        <trans-unit id="38f511a1ae137bb74e5a438fa8768396bf4ae4f0" translate="yes" xml:space="preserve">
          <source>A Media object is constructed with a value which represents one of the ways in which the Media attribute can be specified.</source>
          <target state="translated">构建一个Media对象,其值代表了可以指定Media属性的方式之一。</target>
        </trans-unit>
        <trans-unit id="b13c27ef195bd2599009457a31387e46c3d6317f" translate="yes" xml:space="preserve">
          <source>A MenuSelectionManager owns the selection in menu hierarchy.</source>
          <target state="translated">一个MenuSelectionManager拥有菜单层次结构中的选择。</target>
        </trans-unit>
        <trans-unit id="19cfdd71c28853aeb68181d5e607cc11e56ea2a2" translate="yes" xml:space="preserve">
          <source>A MessageDigest object starts out initialized. The data is processed through it using the &lt;a href=&quot;#update(byte)&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; methods. At any point &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; can be called to reset the digest. Once all the data to be updated has been updated, one of the &lt;a href=&quot;#digest()&quot;&gt;&lt;code&gt;digest&lt;/code&gt;&lt;/a&gt; methods should be called to complete the hash computation.</source>
          <target state="translated">MessageDigest对象开始初始化。使用&lt;a href=&quot;#update(byte)&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt;方法通过它来处理数据。在任何时候&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;可以被称为重置摘要。一旦所有要更新的数据都已更新，应调用&lt;a href=&quot;#digest()&quot;&gt; &lt;code&gt;digest&lt;/code&gt; &lt;/a&gt;方法之一以完成哈希计算。</target>
        </trans-unit>
        <trans-unit id="955576c5a5581056e12e98e515200ac2a050d292" translate="yes" xml:space="preserve">
          <source>A MessageDigest object starts out initialized. The data is processed through it using the &lt;a href=&quot;messagedigest#update-byte-&quot;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt; methods. At any point &lt;a href=&quot;messagedigest#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; can be called to reset the digest. Once all the data to be updated has been updated, one of the &lt;a href=&quot;messagedigest#digest--&quot;&gt;&lt;code&gt;digest&lt;/code&gt;&lt;/a&gt; methods should be called to complete the hash computation.</source>
          <target state="translated">MessageDigest对象开始初始化。使用&lt;a href=&quot;messagedigest#update-byte-&quot;&gt; &lt;code&gt;update&lt;/code&gt; &lt;/a&gt;方法通过它处理数据。在任何时候&lt;a href=&quot;messagedigest#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt;可以被称为重置摘要。一旦所有要更新的数据都已更新，应调用&lt;a href=&quot;messagedigest#digest--&quot;&gt; &lt;code&gt;digest&lt;/code&gt; &lt;/a&gt;方法之一以完成哈希计算。</target>
        </trans-unit>
        <trans-unit id="760b5e67094e5d1666915b913b1ebe906a629622" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F extension of BasicToolTipUI.</source>
          <target state="translated">BasicToolTipUI的Metal L＆F扩展。</target>
        </trans-unit>
        <trans-unit id="e8be3781f7693e04538ce956a8377ac5041a0e14" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of PopupMenuSeparatorUI.</source>
          <target state="translated">PopupMenuSeparatorUI的Metal L＆F实现。</target>
        </trans-unit>
        <trans-unit id="c3e774ebb2ddabdb4af3ae4661c351e8180b863a" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of PopupMenuSeparatorUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">PopupMenuSeparatorUI的Metal L＆F实现。此实现是&amp;ldquo;组合&amp;rdquo;视图/控制器。</target>
        </trans-unit>
        <trans-unit id="1e7532460d65efaa82224f91f9286332e436cba3" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of ScrollPaneUI.</source>
          <target state="translated">ScrollPaneUI的Metal L＆F实现。</target>
        </trans-unit>
        <trans-unit id="1fb41a1a8a5537b8af07056ae6285b86ffa805a9" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of SeparatorUI.</source>
          <target state="translated">SeparatorUI的Metal L＆F实现。</target>
        </trans-unit>
        <trans-unit id="121fc4578012ff2fd48e3a89a545be23c8baafe6" translate="yes" xml:space="preserve">
          <source>A Metal L&amp;amp;F implementation of SeparatorUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">SeparatorUI的Metal L＆F实现。此实现是&amp;ldquo;组合&amp;rdquo;视图/控制器。</target>
        </trans-unit>
        <trans-unit id="10797e2b0052195d122ff78c9fae404da94c4e90" translate="yes" xml:space="preserve">
          <source>A Metal Look and Feel implementation of ToolBarUI.</source>
          <target state="translated">ToolBarUI的金属外观和感觉实现。</target>
        </trans-unit>
        <trans-unit id="f1e589b1e5c5d2fae61d29209696a8efd1be4199" translate="yes" xml:space="preserve">
          <source>A Metal Look and Feel implementation of ToolBarUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">ToolBarUI的Metal Look and Feel实现。这个实现是一个 &quot;组合 &quot;视图/控制器。</target>
        </trans-unit>
        <trans-unit id="803d83c43dc480618586a553a4b522b5a0ec2e04" translate="yes" xml:space="preserve">
          <source>A MethodDescriptor describes a particular method that a Java Bean supports for external access from other components.</source>
          <target state="translated">方法描述符(MethodDescriptor)描述了一个Java Bean支持从其他组件进行外部访问的特定方法。</target>
        </trans-unit>
        <trans-unit id="d0f804d7008af50737f94d6477754beb1010e9fb" translate="yes" xml:space="preserve">
          <source>A Model MBean implements the &lt;a href=&quot;modelmbean&quot;&gt;&lt;code&gt;ModelMBean&lt;/code&gt;&lt;/a&gt; interface. It is a &lt;a href=&quot;../dynamicmbean&quot;&gt;&lt;code&gt;DynamicMBean&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;../dynamicmbean#getMBeanInfo()&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method returns an object implementing &lt;a href=&quot;modelmbeaninfo&quot;&gt;&lt;code&gt;ModelMBeanInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Model MBean实现&lt;a href=&quot;modelmbean&quot;&gt; &lt;code&gt;ModelMBean&lt;/code&gt; &lt;/a&gt;接口。这是一个&lt;a href=&quot;../dynamicmbean&quot;&gt; &lt;code&gt;DynamicMBean&lt;/code&gt; ,&lt;/a&gt;其&lt;a href=&quot;../dynamicmbean#getMBeanInfo()&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; &lt;/a&gt;方法返回一个实现&lt;a href=&quot;modelmbeaninfo&quot;&gt; &lt;code&gt;ModelMBeanInfo&lt;/code&gt; &lt;/a&gt;的对象。</target>
        </trans-unit>
        <trans-unit id="91d72defe3fc764893ef27e5b33b5fbfd41ea16c" translate="yes" xml:space="preserve">
          <source>A Model MBean implements the &lt;a href=&quot;modelmbean&quot;&gt;&lt;code&gt;ModelMBean&lt;/code&gt;&lt;/a&gt; interface. It is a &lt;a href=&quot;../dynamicmbean&quot;&gt;&lt;code&gt;DynamicMBean&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;../dynamicmbean#getMBeanInfo--&quot;&gt;&lt;code&gt;getMBeanInfo&lt;/code&gt;&lt;/a&gt; method returns an object implementing &lt;a href=&quot;modelmbeaninfo&quot;&gt;&lt;code&gt;ModelMBeanInfo&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Model MBean实现&lt;a href=&quot;modelmbean&quot;&gt; &lt;code&gt;ModelMBean&lt;/code&gt; &lt;/a&gt;接口。这是一个&lt;a href=&quot;../dynamicmbean&quot;&gt; &lt;code&gt;DynamicMBean&lt;/code&gt; ,&lt;/a&gt;其&lt;a href=&quot;../dynamicmbean#getMBeanInfo--&quot;&gt; &lt;code&gt;getMBeanInfo&lt;/code&gt; &lt;/a&gt;方法返回一个实现&lt;a href=&quot;modelmbeaninfo&quot;&gt; &lt;code&gt;ModelMBeanInfo&lt;/code&gt; &lt;/a&gt;的对象。</target>
        </trans-unit>
        <trans-unit id="5fa4459bcc5c002c0889ae2582fb13f8b72d3392" translate="yes" xml:space="preserve">
          <source>A ModificationItem instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single ModificationItem instance should lock the object.</source>
          <target state="translated">一个ModificationItem实例不针对并发的多线程访问进行同步。多个线程试图访问和修改一个ModificationItem实例时,应该锁定对象。</target>
        </trans-unit>
        <trans-unit id="5f24c3518d3a348a45bfe52460020ee3686cf3c7" translate="yes" xml:space="preserve">
          <source>A MouseWheelEvent object is passed to every &lt;code&gt;MouseWheelListener&lt;/code&gt; object which registered to receive the &quot;interesting&quot; mouse events using the component's &lt;code&gt;addMouseWheelListener&lt;/code&gt; method. Each such listener object gets a &lt;code&gt;MouseEvent&lt;/code&gt; containing the mouse event.</source>
          <target state="translated">将MouseWheelEvent对象传递给每个注册的 &lt;code&gt;MouseWheelListener&lt;/code&gt; 对象，该对象使用组件的 &lt;code&gt;addMouseWheelListener&lt;/code&gt; 方法接收&amp;ldquo;有趣的&amp;rdquo;鼠标事件。每个此类侦听器对象都会获取一个包含鼠标事件的 &lt;code&gt;MouseEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="749c912382df2f74f77f5f7b63be25733a99d8a9" translate="yes" xml:space="preserve">
          <source>A NameClassPair instance is not synchronized against concurrent access by multiple threads. Threads that need to access a NameClassPair concurrently should synchronize amongst themselves and provide the necessary locking.</source>
          <target state="translated">NameClassPair实例不会针对多个线程的并发访问进行同步。需要并发访问NameClassPair的线程应该在它们之间同步,并提供必要的锁定。</target>
        </trans-unit>
        <trans-unit id="92a4e5c819312f8959ac271f2ff97604c99409a2" translate="yes" xml:space="preserve">
          <source>A Namespace isA Attribute. One can iterate over a list of namespaces as a list of attributes. However this method returns only the list of namespaces declared on this START_ELEMENT and does not include the attributes declared on this START_ELEMENT. Returns an empty iterator if there are no namespaces.</source>
          <target state="translated">一个命名空间就是一个属性。我们可以把一个命名空间列表作为属性列表来迭代。但是这个方法只返回在这个START_ELEMENT上声明的命名空间列表,而不包括在这个START_ELEMENT上声明的属性。如果没有命名空间,则返回一个空迭代器。</target>
        </trans-unit>
        <trans-unit id="7e7295790c1a5d3bd815dd25f033a68bd2490d77" translate="yes" xml:space="preserve">
          <source>A NamingException instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single NamingException instance should lock the object.</source>
          <target state="translated">NamingException 实例不针对并发多线程访问进行同步。试图访问和修改单个NamingException实例的多个线程应该锁定该对象。</target>
        </trans-unit>
        <trans-unit id="164b36b7d4fc68ee83c3981d6470a16a12b3861e" translate="yes" xml:space="preserve">
          <source>A NamingException or null if the result code indicates success.</source>
          <target state="translated">NamingException,如果结果代码显示成功,则为空。</target>
        </trans-unit>
        <trans-unit id="8f45b936b6c00effd5463dc498cdf2a68178fb76" translate="yes" xml:space="preserve">
          <source>A Number representing the value of the number parsed.</source>
          <target state="translated">A 代表数字解析值的数字。</target>
        </trans-unit>
        <trans-unit id="6dc0d83796c6103dc59ff116f2ae7fa6d275d3f7" translate="yes" xml:space="preserve">
          <source>A PKCS #7 signed data message.</source>
          <target state="translated">一个PKCS #7签名的数据信息。</target>
        </trans-unit>
        <trans-unit id="7947363f410e759dec4cff244cf40fe7626b45bb" translate="yes" xml:space="preserve">
          <source>A PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; uses these parameters to &lt;a href=&quot;certpathbuilder#build(java.security.cert.CertPathParameters)&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; a &lt;code&gt;CertPath&lt;/code&gt; which has been validated according to the PKIX certification path validation algorithm.</source>
          <target state="translated">PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; 使用这些参数来&lt;a href=&quot;certpathbuilder#build(java.security.cert.CertPathParameters)&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt;已根据PKIX认证路径验证算法进行验证的 &lt;code&gt;CertPath&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9135000054431edfc163866d6964d598cbae6906" translate="yes" xml:space="preserve">
          <source>A PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; uses these parameters to &lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; a &lt;code&gt;CertPath&lt;/code&gt; which has been validated according to the PKIX certification path validation algorithm.</source>
          <target state="translated">PKIX &lt;code&gt;CertPathBuilder&lt;/code&gt; 使用这些参数来&lt;a href=&quot;certpathbuilder#build-java.security.cert.CertPathParameters-&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt;已根据PKIX认证路径验证算法进行验证的 &lt;code&gt;CertPath&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c49f7526051c142ee0dd56661e95608920ec388" translate="yes" xml:space="preserve">
          <source>A PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; uses these parameters to validate a &lt;code&gt;CertPath&lt;/code&gt; according to the PKIX certification path validation algorithm.</source>
          <target state="translated">PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; 使用这些参数根据PKIX认证路径验证算法来验证 &lt;code&gt;CertPath&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48c412dcaf046147fa71cc4a6fcbc23aa8ff0005" translate="yes" xml:space="preserve">
          <source>A PRNG &lt;code&gt;SecureRandom&lt;/code&gt; will not seed itself automatically if &lt;code&gt;setSeed&lt;/code&gt; is called before any &lt;code&gt;nextBytes&lt;/code&gt; or &lt;code&gt;reseed&lt;/code&gt; calls. The caller should make sure that the &lt;code&gt;seed&lt;/code&gt; argument contains enough entropy for the security of this &lt;code&gt;SecureRandom&lt;/code&gt;.</source>
          <target state="translated">如果在任何 &lt;code&gt;nextBytes&lt;/code&gt; 或 &lt;code&gt;reseed&lt;/code&gt; 调用之前调用 &lt;code&gt;setSeed&lt;/code&gt; ,则PRNG &lt;code&gt;SecureRandom&lt;/code&gt; 不会自动为自身播种。调用者应确保 &lt;code&gt;seed&lt;/code&gt; 参数包含足够的熵，以确保此 &lt;code&gt;SecureRandom&lt;/code&gt; 的安全。</target>
        </trans-unit>
        <trans-unit id="854617ae48663537c49b436fc3d7da84f4484169" translate="yes" xml:space="preserve">
          <source>A Pack200 file compressed with gzip can be hosted on HTTP/1.1 web servers. The deployment applications can use &quot;Accept-Encoding=pack200-gzip&quot;. This indicates to the server that the client application desires a version of the file encoded with Pack200 and further compressed with gzip. Please refer to &lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/deployment/deployment-guide/pack200.html&quot;&gt;Java Deployment Guide&lt;/a&gt; for more details and techniques.</source>
          <target state="translated">可以将使用gzip压缩的Pack200文件托管在HTTP / 1.1 Web服务器上。部署应用程序可以使用&amp;ldquo; Accept-Encoding = pack200-gzip&amp;rdquo;。这向服务器表明客户端应用程序需要使用Pack200编码并进一步使用gzip压缩的文件版本。有关更多详细信息和技术，请参考&lt;a href=&quot;https://docs.oracle.com/javase/7/docs/technotes/guides/deployment/deployment-guide/pack200.html&quot;&gt;Java部署指南&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac4cc50612cc686681e2c61b64290b6abe06eb08" translate="yes" xml:space="preserve">
          <source>A Pack200 file compressed with gzip can be hosted on HTTP/1.1 web servers. The deployment applications can use &quot;Accept-Encoding=pack200-gzip&quot;. This indicates to the server that the client application desires a version of the file encoded with Pack200 and further compressed with gzip. Please refer to the Java Deployment Guide for techniques and details.</source>
          <target state="translated">用gzip压缩的Pack200文件可以托管在HTTP/1.1的Web服务器上。部署应用程序可以使用 &quot;Accept-Encoding=pack200-gzip&quot;。这向服务器表明,客户端应用程序希望获得使用 Pack200 编码并进一步使用 gzip 压缩的文件版本。有关技术和细节,请参考《Java部署指南》。</target>
        </trans-unit>
        <trans-unit id="26b5bebd1f3102a674fcfd96ea05dcefd49708a7" translate="yes" xml:space="preserve">
          <source>A Parser for HTML Documents (actually, you can specify a DTD, but you should really only use this class with the html dtd in swing).</source>
          <target state="translated">一个HTML文档解析器(实际上,你可以指定一个DTD,但你真的应该只用swing中的html dtd来使用这个类)。</target>
        </trans-unit>
        <trans-unit id="df141f22315b40619f7602dbe08b6ccd3361b66a" translate="yes" xml:space="preserve">
          <source>A Parser for HTML Documents (actually, you can specify a DTD, but you should really only use this class with the html dtd in swing). Reads an InputStream of HTML and invokes the appropriate methods in the ParserCallback class. This is the default parser used by HTMLEditorKit to parse HTML url's.</source>
          <target state="translated">一个HTML文档的解析器(实际上,你可以指定一个DTD,但你应该只用swing中的html dtd来使用这个类)。读取HTML的输入流,并调用ParserCallback类中的相应方法。这是HTMLEditorKit用来解析HTML url的默认解析器。</target>
        </trans-unit>
        <trans-unit id="84cb7411320ac8ed87b1f652e437833252a4f096" translate="yes" xml:space="preserve">
          <source>A Permission to perform actions related to MBeanServers.</source>
          <target state="translated">一个执行MBeanServers相关操作的权限。</target>
        </trans-unit>
        <trans-unit id="5a50af10f0548cc284f1921ca0fb4100116c9960" translate="yes" xml:space="preserve">
          <source>A Permission to perform actions related to MBeanServers. The &lt;em&gt;name&lt;/em&gt; of the permission specifies the operation requested or granted by the permission. For a granted permission, it can be &lt;code&gt;*&lt;/code&gt; to allow all of the MBeanServer operations specified below. Otherwise, for a granted or requested permission, it must be one of the following:</source>
          <target state="translated">执行与MBeanServer相关的操作的权限。许可权的&lt;em&gt;名称&lt;/em&gt;指定了许可权请求或授予的操作。对于授予的权限，可以为 &lt;code&gt;*&lt;/code&gt; ,以允许下面指定的所有MBeanServer操作。否则，对于授予或请求的许可，它必须是以下之一：</target>
        </trans-unit>
        <trans-unit id="1a23c34cdf952da9a88f0b4beee8c3caff55a3af" translate="yes" xml:space="preserve">
          <source>A Ping message has been received.</source>
          <target state="translated">已收到一个Ping消息。</target>
        </trans-unit>
        <trans-unit id="9ba3cf2463264b9d3d582745ac8e03f1e41d35e3" translate="yes" xml:space="preserve">
          <source>A Policy object is responsible for determining whether code executing in the Java runtime environment has permission to perform a security-sensitive operation.</source>
          <target state="translated">Policy对象负责确定在Java运行时环境中执行的代码是否具有执行安全敏感操作的权限。</target>
        </trans-unit>
        <trans-unit id="bab7b72d49f304e2d347eefbf65b392b3d1d5ce9" translate="yes" xml:space="preserve">
          <source>A Pong message has been received.</source>
          <target state="translated">已收到Pong信息。</target>
        </trans-unit>
        <trans-unit id="01126747f862efe506045e674ab008983953a57d" translate="yes" xml:space="preserve">
          <source>A Print Job's attribute set includes zero instances or one instance of a &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute, not more than one instance. A new &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute replaces an existing &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute, if any. In other words, &lt;code&gt;JobMessageFromOperator&lt;/code&gt; is not intended to be a history log. If it wishes, the client can detect changes to a Print Job's &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute and maintain the client's own history log of the &lt;code&gt;JobMessageFromOperator&lt;/code&gt; attribute values.</source>
          <target state="translated">一个打印作业的属性集包括零个实例或一个 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 属性的一个实例，最多不超过一个实例。如果有的话，新的 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 属性将替换现有的 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 属性。换句话说， &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 不能用作历史日志。如果愿意，客户端可以检测到打印作业的 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 属性的更改，并维护客户端自己的 &lt;code&gt;JobMessageFromOperator&lt;/code&gt; 属性值的历史日志。</target>
        </trans-unit>
        <trans-unit id="788dd3b9cb5575680ee8b91fc4a7829f040d4177" translate="yes" xml:space="preserve">
          <source>A Print Job's attribute set includes zero instances or one instance of a JobMessageFromOperator attribute, not more than one instance. A new JobMessageFromOperator attribute replaces an existing JobMessageFromOperator attribute, if any. In other words, JobMessageFromOperator is not intended to be a history log. If it wishes, the client can detect changes to a Print Job's JobMessageFromOperator attribute and maintain the client's own history log of the JobMessageFromOperator attribute values.</source>
          <target state="translated">打印作业的属性集包括零个实例或一个JobMessageFromOperator属性的实例,不能超过一个实例。新的JobMessageFromOperator属性会替换现有的JobMessageFromOperator属性(如果有)。换句话说,JobMessageFromOperator不是为了成为历史日志。如果愿意,客户端可以检测打印作业的JobMessageFromOperator属性的变化,并维护客户端自己的JobMessageFromOperator属性值的历史日志。</target>
        </trans-unit>
        <trans-unit id="c9bb43db8ad0625147b830d3d2525c9ce45b6fb2" translate="yes" xml:space="preserve">
          <source>A Print Service's attribute set includes zero instances or one instance of a &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute, not more than one instance. A new &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute replaces an existing &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute, if any. In other words, &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; is not intended to be a history log. If it wishes, the client can detect changes to a Print Service's &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute and maintain the client's own history log of the &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; attribute values.</source>
          <target state="translated">打印服务的属性集包括零个实例或 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 属性的一个实例，最多不超过一个实例。如果有的话，新的 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 属性将替换现有的 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 属性。换句话说， &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 不能用作历史记录日志。如果愿意，客户端可以检测到对打印服务的 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 属性的更改，并维护客户端自己的 &lt;code&gt;PrinterMessageFromOperator&lt;/code&gt; 属性值的历史日志。</target>
        </trans-unit>
        <trans-unit id="b3fbfe61d65c959def5e9c362257b887a2cb544e" translate="yes" xml:space="preserve">
          <source>A Print Service's attribute set includes zero instances or one instance of a PrinterMessageFromOperator attribute, not more than one instance. A new PrinterMessageFromOperator attribute replaces an existing PrinterMessageFromOperator attribute, if any. In other words, PrinterMessageFromOperator is not intended to be a history log. If it wishes, the client can detect changes to a Print Service's PrinterMessageFromOperator attribute and maintain the client's own history log of the PrinterMessageFromOperator attribute values.</source>
          <target state="translated">打印服务的属性集包括零个实例或一个PrinterMessageFromOperator属性的实例,但不超过一个实例。新的 PrinterMessageFromOperator 属性会替换现有的 PrinterMessageFromOperator 属性(如果有)。换句话说,PrinterMessageFromOperator不是一个历史日志。如果愿意,客户端可以检测打印服务的 PrinterMessageFromOperator 属性的变化,并维护客户端自己的 PrinterMessageFromOperator 属性值的历史日志。</target>
        </trans-unit>
        <trans-unit id="00809d2345c35d6032f2b3d9c3d237d721951fd9" translate="yes" xml:space="preserve">
          <source>A PrintJobAttributeSet is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the PrintJobAttributeSet must be instances of interface &lt;a href=&quot;printjobattribute&quot;&gt;&lt;code&gt;PrintJobAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;printjobattributeset#add-javax.print.attribute.Attribute-&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;printjobattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;&amp;gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">PrintJobAttributeSet只是一个&lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; ,&lt;/a&gt;其构造函数和变异操作保证了额外的不变性，即PrintJobAttributeSet中的所有属性值都必须是接口&lt;a href=&quot;printjobattribute&quot;&gt; &lt;code&gt;PrintJobAttribute&lt;/code&gt; 的&lt;/a&gt;实例。该&lt;a href=&quot;printjobattributeset#add-javax.print.attribute.Attribute-&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt;，以及&lt;a href=&quot;printjobattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt; &lt;code&gt;&amp;gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt;操作如下respecified，以保证此附加不变量。</target>
        </trans-unit>
        <trans-unit id="aded721603c3407f5fe76e7ae0854d15518d503d" translate="yes" xml:space="preserve">
          <source>A PrintServiceAttributeSet is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the PrintServiceAttributeSet must be instances of interface &lt;a href=&quot;printserviceattribute&quot;&gt;&lt;code&gt;PrintServiceAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;printserviceattributeset#add-javax.print.attribute.Attribute-&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;printserviceattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">PrintServiceAttributeSet只是一个&lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; ,&lt;/a&gt;其构造函数和更改操作保证了一个附加的不变性，即PrintServiceAttributeSet中的所有属性值都必须是&lt;a href=&quot;printserviceattribute&quot;&gt; &lt;code&gt;PrintServiceAttribute&lt;/code&gt; &lt;/a&gt;接口的实例。在下面重新指定&lt;a href=&quot;printserviceattributeset#add-javax.print.attribute.Attribute-&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;printserviceattributeset#addAll-javax.print.attribute.AttributeSet-&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt;操作，以确保此附加不变性。</target>
        </trans-unit>
        <trans-unit id="d18341003dec13cb3f1d230f871b24a6e72ee60b" translate="yes" xml:space="preserve">
          <source>A PrintServiceLookup implementor is recommended to check for the SecurityManager.checkPrintJobAccess() to deny access to untrusted code. Following this recommended policy means that untrusted code may not be able to locate any print services. Downloaded applets are the most common example of untrusted code.</source>
          <target state="translated">建议PrintServiceLookup实现者检查SecurityManager.checkPrintJobAccess(),以拒绝未受信任的代码访问。遵循这个推荐的策略意味着未受信任的代码可能无法定位任何打印服务。下载的小程序是不受信任代码的最常见例子。</target>
        </trans-unit>
        <trans-unit id="e3d3b699ec44fa5cb9418453115f10cc05579590" translate="yes" xml:space="preserve">
          <source>A Properties object, never null.</source>
          <target state="translated">一个Properties对象,从不为空。</target>
        </trans-unit>
        <trans-unit id="10b040397443e35ff9a1b4b3fb6ab446d6ad464b" translate="yes" xml:space="preserve">
          <source>A PropertyChangeEvent describing the vetoed change.</source>
          <target state="translated">一个描述被否决的更改的PropertyChangeEvent。</target>
        </trans-unit>
        <trans-unit id="ab73ff36dfb487a2f44f83849e1b4b10be50fd68" translate="yes" xml:space="preserve">
          <source>A PropertyChangeEvent will be fired after the properties are read.</source>
          <target state="translated">读取属性后,一个PropertyChangeEvent将被触发。</target>
        </trans-unit>
        <trans-unit id="a16db4dd463f94a63a6456263d04a8f035b25366" translate="yes" xml:space="preserve">
          <source>A PropertyChangeEvent will get fired when the selection mode changes.</source>
          <target state="translated">当选择模式改变时,一个PropertyChangeEvent将被触发。</target>
        </trans-unit>
        <trans-unit id="3e24b6e6debe053e3f9cb736a6248ea32cde627e" translate="yes" xml:space="preserve">
          <source>A PropertyChangeListener for the JSpinner itself</source>
          <target state="translated">为JSpinner本身提供一个PropertyChangeListener。</target>
        </trans-unit>
        <trans-unit id="210fdaae95a7097543fc846ccda7b63eb7c4f1e2" translate="yes" xml:space="preserve">
          <source>A PropertyDescriptor describes one property that a Java Bean exports via a pair of accessor methods.</source>
          <target state="translated">一个PropertyDescriptor描述了一个Java Bean通过一对访问器方法导出的一个属性。</target>
        </trans-unit>
        <trans-unit id="1464e97af59354fbd845d53627b8278e9c59294d" translate="yes" xml:space="preserve">
          <source>A PropertyEditor class provides support for GUIs that want to allow users to edit a property value of a given type.</source>
          <target state="translated">一个PropertyEditor类为想要允许用户编辑给定类型的属性值的GUI提供支持。</target>
        </trans-unit>
        <trans-unit id="d5cf0eea0af22ebff646362d36d7efcc29d1b673" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may choose to make available a full custom Component that edits its property value.</source>
          <target state="translated">一个PropertyEditor可以选择提供一个完整的自定义组件来编辑其属性值。</target>
        </trans-unit>
        <trans-unit id="bc13a76e8f1c594363edc02c7a10b439d47023e5" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may choose to make available a full custom Component that edits its property value. It is the responsibility of the PropertyEditor to hook itself up to its editor Component itself and to report property value changes by firing a PropertyChange event.</source>
          <target state="translated">一个PropertyEditor可以选择提供一个完整的自定义组件来编辑它的属性值。PropertyEditor有责任将自己挂到它的编辑组件本身,并通过触发一个PropertyChange事件来报告属性值的变化。</target>
        </trans-unit>
        <trans-unit id="38a8e61b7acfa8c231a16d409b25ad982881fa13" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may chose to make available a full custom Component that edits its property value.</source>
          <target state="translated">一个PropertyEditor可以选择提供一个完整的自定义组件来编辑其属性值。</target>
        </trans-unit>
        <trans-unit id="44ea1cd4419c757f6d11083ec4202002c7a9e613" translate="yes" xml:space="preserve">
          <source>A PropertyEditor may chose to make available a full custom Component that edits its property value. It is the responsibility of the PropertyEditor to hook itself up to its editor Component itself and to report property value changes by firing a PropertyChange event.</source>
          <target state="translated">一个PropertyEditor可以选择提供一个完整的自定义组件来编辑它的属性值。PropertyEditor有责任将自己挂到它的编辑组件本身,并通过触发一个PropertyChange事件来报告属性值的变化。</target>
        </trans-unit>
        <trans-unit id="f4f2e8c8f1f59cc189f5bb0901bb99e8d1a07215" translate="yes" xml:space="preserve">
          <source>A PropertyVetoException is thrown when a proposed change to a property represents an unacceptable value.</source>
          <target state="translated">当一个属性的拟议更改代表一个不可接受的值时,就会抛出一个PropertyVetoException。</target>
        </trans-unit>
        <trans-unit id="6df0896862f9934ca74f436ed4ffa6672430f1df" translate="yes" xml:space="preserve">
          <source>A ProtectionParameter encapsulating a CallbackHandler.</source>
          <target state="translated">一个封装CallbackHandler的保护参数。</target>
        </trans-unit>
        <trans-unit id="8d0b3b6eaa138860768bfa20636e6a955c42c7d3" translate="yes" xml:space="preserve">
          <source>A QueryExp that represents the constraint. The returned object will be serialized as an instance of the non-public class  javax.management.InQueryExp.</source>
          <target state="translated">一个代表约束的QueryExp。返回的对象将被序列化为非公共类 javax.management.InQueryExp 的实例。</target>
        </trans-unit>
        <trans-unit id="effc9e70adbfc6da748c614eb4be50c4cbf263aa" translate="yes" xml:space="preserve">
          <source>A QueryExp that represents the constraint. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.InQueryExp&quot;&gt; javax.management.InQueryExp&lt;/a&gt;.</source>
          <target state="translated">代表约束的QueryExp。返回的对象将被序列化为非公共类&lt;a href=&quot;../../serialized-form#javax.management.InQueryExp&quot;&gt;javax.management.InQueryExp&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="9bfebeefeb71a8b0ebe03208f4960f9ab36d7fc8" translate="yes" xml:space="preserve">
          <source>A QueryExp that represents the constraint. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.InQueryExp&quot;&gt; javax.management.InQueryExp&lt;/a&gt;.</source>
          <target state="translated">代表约束的QueryExp。返回的对象将被序列化为非公共类&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.InQueryExp&quot;&gt;javax.management.InQueryExp&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="583e71a7f6e2aff967487468f384738975930ffe" translate="yes" xml:space="preserve">
          <source>A Raster defines values for pixels occupying a particular rectangular area of the plane, not necessarily including (0, 0). The rectangle, known as the Raster's bounding rectangle and available by means of the getBounds method, is defined by minX, minY, width, and height values. The minX and minY values define the coordinate of the upper left corner of the Raster. References to pixels outside of the bounding rectangle may result in an exception being thrown, or may result in references to unintended elements of the Raster's associated DataBuffer. It is the user's responsibility to avoid accessing such pixels.</source>
          <target state="translated">Raster定义了占据平面特定矩形区域的像素值,不一定包括(0,0)。这个矩形称为Raster的边界矩形,通过getBounds方法获得,由minX、minY、宽度和高度值定义。minX和minY值定义了Raster左上角的坐标。对边界矩形之外的像素的引用可能会导致一个异常被抛出,或者导致对Raster的相关DataBuffer的非预期元素的引用。用户有责任避免访问这些像素。</target>
        </trans-unit>
        <trans-unit id="d2bd9b552fb40d834460bb85f3d834ecdc269a9b" translate="yes" xml:space="preserve">
          <source>A Raster may share a DataBuffer with another Raster either by explicit construction or by the use of the createChild and createTranslatedChild methods. Rasters created by these methods can return a reference to the Raster they were created from by means of the getParent method. For a Raster that was not constructed by means of a call to createTranslatedChild or createChild, getParent will return null.</source>
          <target state="translated">一个栅格可以通过显式构造或使用createChild和createTranslatedChild方法与另一个栅格共享一个DataBuffer。通过这些方法创建的栅格,可以通过getParent方法返回对它们创建的栅格的引用。对于没有通过调用createTranslatedChild或createChild方法创建的栅格,getParent将返回null。</target>
        </trans-unit>
        <trans-unit id="52905c2d1fd8ebf284d91b93183febbbf5b93aa3" translate="yes" xml:space="preserve">
          <source>A Red-Black tree based &lt;a href=&quot;navigablemap&quot;&gt;&lt;code&gt;NavigableMap&lt;/code&gt;&lt;/a&gt; implementation.</source>
          <target state="translated">基于红黑树的&lt;a href=&quot;navigablemap&quot;&gt; &lt;code&gt;NavigableMap&lt;/code&gt; &lt;/a&gt;实现。</target>
        </trans-unit>
        <trans-unit id="2790240116df87dc3724e9b84e65f5cd4d285f7c" translate="yes" xml:space="preserve">
          <source>A Red-Black tree based &lt;a href=&quot;navigablemap&quot;&gt;&lt;code&gt;NavigableMap&lt;/code&gt;&lt;/a&gt; implementation. The map is sorted according to the &lt;a href=&quot;../lang/comparable&quot;&gt;natural ordering&lt;/a&gt; of its keys, or by a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; provided at map creation time, depending on which constructor is used.</source>
          <target state="translated">基于红黑树的&lt;a href=&quot;navigablemap&quot;&gt; &lt;code&gt;NavigableMap&lt;/code&gt; &lt;/a&gt;实现。根据映射键的&lt;a href=&quot;../lang/comparable&quot;&gt;自然顺序&lt;/a&gt;或在映射创建时提供的&lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt;对映射进行排序，具体取决于使用哪个构造函数。</target>
        </trans-unit>
        <trans-unit id="de24db46360a144e5972237ad65900278ca0e818" translate="yes" xml:space="preserve">
          <source>A RefAddr is contained within a Reference.</source>
          <target state="translated">一个RefAddr包含在一个Reference中。</target>
        </trans-unit>
        <trans-unit id="db17f35dc3353169ebcd282698b849c67f5cfba3" translate="yes" xml:space="preserve">
          <source>A Reference also contains information to assist in creating an instance of the object to which this Reference refers. It contains the class name of that object, and the class name and location of the factory to be used to create the object. The class factory location is a space-separated list of URLs representing the class path used to load the factory. When the factory class (or any class or resource upon which it depends) needs to be loaded, each URL is used (in order) to attempt to load the class.</source>
          <target state="translated">参考文献还包含协助创建该参考文献所指向的对象实例的信息。它包含该对象的类名,以及用于创建该对象的工厂的类名和位置。类工厂位置是一个用空格分隔的URL列表,代表用于加载工厂的类路径。当需要加载工厂类(或它所依赖的任何类或资源)时,将使用(按顺序)每个 URL 尝试加载该类。</target>
        </trans-unit>
        <trans-unit id="8440e1f50dc257e8c791e88363c2bc8840c48660" translate="yes" xml:space="preserve">
          <source>A Reference consists of an ordered list of addresses and class information about the object being referenced. Each address in the list identifies a communications endpoint for the same conceptual object. The &quot;communications endpoint&quot; is information that indicates how to contact the object. It could be, for example, a network address, a location in memory on the local machine, another process on the same machine, etc. The order of the addresses in the list may be of significance to object factories that interpret the reference.</source>
          <target state="translated">引用由一个有序的地址列表和被引用对象的类信息组成。列表中的每个地址都标识了同一概念对象的通信端点。&quot;通信端点 &quot;是指示如何联系对象的信息。例如,它可以是一个网络地址、本地机器上内存中的一个位置、同一台机器上的另一个进程等。列表中地址的顺序可能对解释引用的对象工厂具有重要意义。</target>
        </trans-unit>
        <trans-unit id="0d09a0ffc22c477d525609b2de8a150f2e3869fd" translate="yes" xml:space="preserve">
          <source>A Reference instance is not synchronized against concurrent access by multiple threads. Threads that need to access a single Reference concurrently should synchronize amongst themselves and provide the necessary locking.</source>
          <target state="translated">Reference实例不会针对多个线程的并发访问进行同步。需要并发访问单个Reference的线程应该在它们之间同步,并提供必要的锁定。</target>
        </trans-unit>
        <trans-unit id="6db43dcfd60566c1dccf7a3e8ecca2a4da050eb1" translate="yes" xml:space="preserve">
          <source>A Reference represents a way of recording address information about objects which themselves are not directly bound to the naming system. Such objects can implement the Referenceable interface as a way for programs that use that object to determine what its Reference is. For example, when binding a object, if an object implements the Referenceable interface, getReference() can be invoked on the object to get its Reference to use for binding.</source>
          <target state="translated">Reference代表了一种记录对象地址信息的方式,这些对象本身并不直接绑定到命名系统中。这种对象可以实现Referenceable接口,作为使用该对象的程序确定其Reference是什么的一种方式。例如,在绑定一个对象时,如果一个对象实现了Referenceable接口,就可以对该对象调用getReference()来获取它的Reference用于绑定。</target>
        </trans-unit>
        <trans-unit id="0731039932ddf04f89aec388bc10248aa71c3293" translate="yes" xml:space="preserve">
          <source>A Reference represents a way of recording address information about objects which themselves are not directly bound to the naming system. Such objects can implement the Referenceable interface as a way for programs that use that object to determine what its Reference is. For example, when binding an object, if an object implements the Referenceable interface, getReference() can be invoked on the object to get its Reference to use for binding.</source>
          <target state="translated">Reference代表了一种记录对象地址信息的方式,这些对象本身并不直接绑定到命名系统中。这种对象可以实现Referenceable接口,作为使用该对象的程序确定其Reference是什么的一种方式。例如,在绑定一个对象时,如果一个对象实现了Referenceable接口,就可以对该对象调用getReference()来获取它的Reference用于绑定。</target>
        </trans-unit>
        <trans-unit id="4264db3c7ee124c340e610e7ebefdc1a8451fa89" translate="yes" xml:space="preserve">
          <source>A RelationNotification notification is sent, its type being:</source>
          <target state="translated">发送一个RelationNotification通知,其类型为:。</target>
        </trans-unit>
        <trans-unit id="5ac61035063a73b282ef8ef40f44e455f0e65bf7" translate="yes" xml:space="preserve">
          <source>A RelationNotification, with type RELATION_BASIC_CREATION, is sent.</source>
          <target state="translated">发送一个类型为RELATION_BASIC_CREATION的RelationNotification。</target>
        </trans-unit>
        <trans-unit id="9bfca27e3cf3e160da5442cef2903f856d3a0a9d" translate="yes" xml:space="preserve">
          <source>A RelationSupport object is used internally by the Relation Service to represent simple relations (only roles, no properties or methods), with an unlimited number of roles, of any relation type.</source>
          <target state="translated">RelationSupport对象被Relation Service内部用来表示简单的关系(只有角色,没有属性或方法),任何关系类型的角色数量不限。</target>
        </trans-unit>
        <trans-unit id="2b5afc0ac78c2cf646952eec6da6199ce1326de0" translate="yes" xml:space="preserve">
          <source>A RelationSupport object is used internally by the Relation Service to represent simple relations (only roles, no properties or methods), with an unlimited number of roles, of any relation type. As internal representation, it is not exposed to the user.</source>
          <target state="translated">关系服务在内部使用RelationSupport对象来表示任何关系类型的简单关系(只有角色,没有属性或方法),角色数量不限。作为内部表示,它不会暴露给用户。</target>
        </trans-unit>
        <trans-unit id="b629caa896430c731614690866acaa67f23a1984" translate="yes" xml:space="preserve">
          <source>A RelationTypeSupport object implements the RelationType interface.</source>
          <target state="translated">RelationTypeSupport对象实现了RelationType接口。</target>
        </trans-unit>
        <trans-unit id="ee8b0968b179d91d5ed759fc07925e3159b47910" translate="yes" xml:space="preserve">
          <source>A RenderContext encapsulates the information needed to produce a specific rendering from a RenderableImage.</source>
          <target state="translated">RenderContext封装了从RenderableImage产生特定渲染所需的信息。</target>
        </trans-unit>
        <trans-unit id="9078261ada39638a99acac9f9d32ef7fda248bd5" translate="yes" xml:space="preserve">
          <source>A RenderContext encapsulates the information needed to produce a specific rendering from a RenderableImage. It contains the area to be rendered specified in rendering-independent terms, the resolution at which the rendering is to be performed, and hints used to control the rendering process.</source>
          <target state="translated">RenderContext封装了从RenderableImage产生特定渲染所需的信息。它包含了以渲染无关的术语指定的要渲染的区域,要进行渲染的分辨率,以及用于控制渲染过程的提示。</target>
        </trans-unit>
        <trans-unit id="9dddeb4ca105c0161e9ad1fd2771bd4578b4cbed" translate="yes" xml:space="preserve">
          <source>A RenderableImage is a common interface for rendering-independent images (a notion which subsumes resolution independence).</source>
          <target state="translated">RenderableImage是渲染独立图像的通用接口(这个概念包含了分辨率独立性)。</target>
        </trans-unit>
        <trans-unit id="3c59214ddcb483d8f48a85ae353d28a809916b68" translate="yes" xml:space="preserve">
          <source>A RenderableImage is a common interface for rendering-independent images (a notion which subsumes resolution independence). That is, images which are described and have operations applied to them independent of any specific rendering of the image. For example, a RenderableImage can be rotated and cropped in resolution-independent terms. Then, it can be rendered for various specific contexts, such as a draft preview, a high-quality screen display, or a printer, each in an optimal fashion.</source>
          <target state="translated">RenderableImage是渲染无关的图像的通用接口(这个概念包含了分辨率的独立性)。也就是说,图像的描述和操作是独立于图像的任何特定渲染的。例如,一个RenderableImage可以以独立于分辨率的方式进行旋转和裁剪。然后,它可以为各种特定的上下文渲染,如草稿预览、高质量的屏幕显示或打印机,每一个都以最佳的方式进行。</target>
        </trans-unit>
        <trans-unit id="e93dc7725a42f90d07760849bb6d6f6bbdeeac7a" translate="yes" xml:space="preserve">
          <source>A RenderedImage containing the desired output.</source>
          <target state="translated">一个包含所需输出的RenderedImage。</target>
        </trans-unit>
        <trans-unit id="79bde1b0e74701b93db9ea2bcc42075ced48b74d" translate="yes" xml:space="preserve">
          <source>A RenderedImage is returned from a RenderableImage via the createRendering() method, which takes a RenderContext. The RenderContext specifies how the RenderedImage should be constructed. Note that it is not possible to extract pixels directly from a RenderableImage.</source>
          <target state="translated">RenderedImage是通过createRendering()方法从RenderableImage返回的,该方法需要一个RenderContext。RenderContext指定了RenderedImage的构造方式。请注意,不可能直接从RenderableImage中提取像素。</target>
        </trans-unit>
        <trans-unit id="93cdea27087d9b8a8a0a537fb17f4e431c836a31" translate="yes" xml:space="preserve">
          <source>A ResolveResult instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single ResolveResult instance should lock the object.</source>
          <target state="translated">ResolveResult实例不针对并发多线程访问进行同步。试图访问和修改单个ResolveResult实例的多个线程应该锁定该对象。</target>
        </trans-unit>
        <trans-unit id="d6ace36ae9882cf1b5bf51c8fccd0fb9fe4684da" translate="yes" xml:space="preserve">
          <source>A Retention meta-annotation has effect only if the meta-annotated type is used directly for annotation. It has no effect if the meta-annotated type is used as a member type in another annotation type.</source>
          <target state="translated">只有当元注解类型直接用于注解时,保留元注解才有效果。如果元注解类型被用作另一个注解类型的成员类型,它就没有效果。</target>
        </trans-unit>
        <trans-unit id="ed104d8e87a3d8da6b36e28ccb0aec3193af8db7" translate="yes" xml:space="preserve">
          <source>A RoleInfo object summarises a role in a relation type.</source>
          <target state="translated">RoleInfo对象总结了关系类型中的一个角色。</target>
        </trans-unit>
        <trans-unit id="ec0a32da937a776c1063eab47ab7ca3cd55d6864" translate="yes" xml:space="preserve">
          <source>A RoleList represents a list of roles (Role objects).</source>
          <target state="translated">RoleList表示一个角色列表(Role对象)。</target>
        </trans-unit>
        <trans-unit id="791805f3afacc64ffc2d229168541451185927aa" translate="yes" xml:space="preserve">
          <source>A RoleList represents a list of roles (Role objects). It is used as parameter when creating a relation, and when trying to set several roles in a relation (via 'setRoles()' method). It is returned as part of a RoleResult, to provide roles successfully retrieved.</source>
          <target state="translated">一个RoleList代表了一个角色列表(Role对象),它在创建关系时被用作参数,在关系中尝试设置几个角色时(通过'setRoles()'方法)。当创建一个关系时,它被用作参数,当试图在一个关系中设置几个角色时(通过'setRoles()'方法),它被作为RoleResult的一部分返回,提供成功检索的角色。它作为RoleResult的一部分被返回,以提供成功检索到的角色。</target>
        </trans-unit>
        <trans-unit id="777446281cfb44efc3a7765d7980e9e852336293" translate="yes" xml:space="preserve">
          <source>A RoleUnresolvedList represents a list of RoleUnresolved objects, representing roles not retrieved from a relation due to a problem encountered when trying to access (read or write) the roles.</source>
          <target state="translated">一个RoleUnresolvedList表示一个RoleUnresolved对象的列表,表示由于试图访问(读或写)角色时遇到的问题而没有从关系中检索到的角色。</target>
        </trans-unit>
        <trans-unit id="7325ddd62ff36e6331d01ce341d2cf4fcf2ec099" translate="yes" xml:space="preserve">
          <source>A SAX ContentHandler that may be used to process SAX parse events (parsing transformation instructions) into a Templates object.</source>
          <target state="translated">一个SAX ContentHandler,可用于处理SAX解析事件(解析转换指令)到Templates对象。</target>
        </trans-unit>
        <trans-unit id="ec7f22b21a9a2bac2d33c6eefb18ff62d0660ac4" translate="yes" xml:space="preserve">
          <source>A SAX parser must never report an XML declaration (XML 1.0, section 2.8) or a text declaration (XML 1.0, section 4.3.1) using this method.</source>
          <target state="translated">SAX解析器绝对不能使用该方法报告XML声明(XML 1.0,2.8节)或文本声明(XML 1.0,4.3.1节)。</target>
        </trans-unit>
        <trans-unit id="288bc4bc5d2c7f142d7ecd425afbdd9da11413c7" translate="yes" xml:space="preserve">
          <source>A SAX parser should never report an XML declaration (XML 1.0, section 2.8) or a text declaration (XML 1.0, section 4.3.1) using this method.</source>
          <target state="translated">SAX解析器不应该使用该方法报告XML声明(XML 1.0,2.8节)或文本声明(XML 1.0,4.3.1节)。</target>
        </trans-unit>
        <trans-unit id="283f19aa4142dd07d10f92cdf68cd1663a23134a" translate="yes" xml:space="preserve">
          <source>A SQL statement is precompiled and stored in a &lt;code&gt;PreparedStatement&lt;/code&gt; object. This object can then be used to efficiently execute this statement multiple times.</source>
          <target state="translated">SQL语句已预编译并存储在 &lt;code&gt;PreparedStatement&lt;/code&gt; 对象中。然后可以使用该对象多次有效地执行该语句。</target>
        </trans-unit>
        <trans-unit id="4f38ffe217bbbe39b23e4a9e889a3ea0ff7647bb" translate="yes" xml:space="preserve">
          <source>A SQL statement with or without IN parameters can be pre-compiled and stored in a &lt;code&gt;PreparedStatement&lt;/code&gt; object. This object can then be used to efficiently execute this statement multiple times.</source>
          <target state="translated">可以预编译带有或不带有IN参数的SQL语句，并将其存储在 &lt;code&gt;PreparedStatement&lt;/code&gt; 对象中。然后可以使用该对象多次有效地执行该语句。</target>
        </trans-unit>
        <trans-unit id="fbe07bcb178ca907bd1ca81ab707c31bcf66f7a6" translate="yes" xml:space="preserve">
          <source>A SSL socket must choose to operate in the client or server mode. This will determine who begins the handshaking process, as well as which messages should be sent by each party. Each connection must have one client and one server, or handshaking will not progress properly. Once the initial handshaking has started, a socket can not switch between client and server modes, even when performing renegotiations.</source>
          <target state="translated">SSL套接字必须选择在客户端或服务器模式下运行。这将决定谁开始握手过程,以及每一方应该发送哪些消息。每个连接必须有一个客户端和一个服务器,否则握手将无法正常进行。一旦初始握手开始,一个套接字就不能在客户端和服务器模式之间切换,即使在执行重新协商时也是如此。</target>
        </trans-unit>
        <trans-unit id="a613da8e4c6656a826823882ea40c2c07b2ade72" translate="yes" xml:space="preserve">
          <source>A START_DOCUMENT event is not required to be written to the stream. If present the attributes are written inside the appropriate XML declaration syntax</source>
          <target state="translated">START_DOCUMENT事件不需要写到流中。如果存在,属性将被写入适当的XML声明语法中。</target>
        </trans-unit>
        <trans-unit id="d9343126a3fde0ac1e5e14db634f7712b994d330" translate="yes" xml:space="preserve">
          <source>A START_ELEMENT will be written by writing the name, namespaces, and attributes of the event in XML 1.0 valid syntax for START_ELEMENTs. The name is written by looking up the prefix for the namespace uri. The writer can be configured to respect prefixes of QNames. If the writer is respecting prefixes it must use the prefix set on the QName. The default behavior is to lookup the value for the prefix on the EventWriter's internal namespace context. Each attribute (if any) is written using the behavior specified in the attribute section of this table. Each namespace (if any) is written using the behavior specified in the namespace section of this table.</source>
          <target state="translated">一个START_ELEMENT将通过在XML 1.0有效的START_ELEMENTs语法中写出事件的名称、命名空间和属性。名字是通过查找命名空间uri的前缀来编写的。写者可以被配置为尊重QNames的前缀。如果写入者尊重前缀,它必须使用QName上设置的前缀。默认行为是在EventWriter的内部命名空间上下文中查找前缀的值。每个属性(如果有的话)都使用本表属性部分指定的行为进行写入。每个命名空间(如果有的话)都使用本表命名空间部分指定的行为进行写入。</target>
        </trans-unit>
        <trans-unit id="002e3d363e7411d3e07136d328c345b536631fcc" translate="yes" xml:space="preserve">
          <source>A SampleModel describes how samples of a Raster are stored in the primitive array elements of a DataBuffer. Samples may be stored one per data element, as in a PixelInterleavedSampleModel or BandedSampleModel, or packed several to an element, as in a SinglePixelPackedSampleModel or MultiPixelPackedSampleModel. The SampleModel is also controls whether samples are sign extended, allowing unsigned data to be stored in signed Java data types such as byte, short, and int.</source>
          <target state="translated">SampleModel描述了Raster的样本如何存储在DataBuffer的基元数组元素中。样本可以像PixelInterleavedSampleModel或BandedSampleModel那样,每个数据元素存储一个,也可以像SinglePixelPackedSampleModel或MultiPixelPackedSampleModel那样,将多个样本打包到一个元素中。SampleModel还可以控制样本是否是符号扩展,允许将无符号数据存储在有符号的Java数据类型中,如byte、short和int。</target>
        </trans-unit>
        <trans-unit id="b8c05a28f4c76f4894432a5eec5e506f8dbb9fba" translate="yes" xml:space="preserve">
          <source>A Scope does not itself contain the details of the elements corresponding to the parameters, methods and fields of the methods and classes containing its position. However, these elements can be determined from the enclosing elements.</source>
          <target state="translated">一个范围本身并不包含对应于包含其位置的方法和类的参数、方法和字段的元素的细节。但是,这些元素可以从包围元素中确定。</target>
        </trans-unit>
        <trans-unit id="dbb4f8e610bbe24f131ded77d36352e5f9cdd1df" translate="yes" xml:space="preserve">
          <source>A SearchControls instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single SearchControls instance should lock the object.</source>
          <target state="translated">SearchControls 实例不针对并发的多线程访问进行同步。试图访问和修改单个SearchControls实例的多个线程应该锁定该对象。</target>
        </trans-unit>
        <trans-unit id="1679714a37191663024ae5020a1a32e147d2158f" translate="yes" xml:space="preserve">
          <source>A SearchResult instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single SearchResult instance should lock the object.</source>
          <target state="translated">SearchResult实例不针对并发的多线程访问进行同步。多个线程试图访问和修改一个SearchResult实例时,应该锁定对象。</target>
        </trans-unit>
        <trans-unit id="ddc878f0525a0ae2c63096397e4b4f076e278727" translate="yes" xml:space="preserve">
          <source>A Selector and its key set are safe for use by multiple concurrent threads. Its selected-key set and cancelled-key set, however, are not.</source>
          <target state="translated">一个选择器和它的键集可以被多个并发线程安全使用。但是,它的选定键集和取消键集却不安全。</target>
        </trans-unit>
        <trans-unit id="2cfbf9afee5ca6970c51fad8addcc8b290639a32" translate="yes" xml:space="preserve">
          <source>A Selector's key set is safe for use by multiple concurrent threads. Retrieval operations from the key set do not generally block and so may overlap with new registrations that add to the set, or with the cancellation steps of selection operations that remove keys from the set. Iterators and spliterators return elements reflecting the state of the set at some point at or since the creation of the iterator/spliterator. They do not throw &lt;a href=&quot;../../util/concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">选择器的密钥集可以安全地供多个并发线程使用。从密钥集中检索操作通常不会阻塞，因此可能会与添加到密钥集中的新注册重叠，或者与从密钥集中删除密钥的选择操作的取消步骤重叠。迭代器和拆分器返回的元素反映了在创建迭代器/拆分器之时或之后的某个时刻集合的状态。他们不抛出&lt;a href=&quot;../../util/concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e00d2a48cc88debbbc8ff846e3e8b6896bb31b19" translate="yes" xml:space="preserve">
          <source>A SerialArray is not safe for use by multiple concurrent threads. If a SerialArray is to be used by more than one thread then access to the SerialArray should be controlled by appropriate synchronization.</source>
          <target state="translated">一个SerialArray被多个并发线程使用是不安全的。如果一个SerialArray要被一个以上的线程使用,那么对SerialArray的访问应该由适当的同步控制。</target>
        </trans-unit>
        <trans-unit id="44e526f281e668fb5e09c5ab3c87140d7227ca3e" translate="yes" xml:space="preserve">
          <source>A SerialBlob is not safe for use by multiple concurrent threads. If a SerialBlob is to be used by more than one thread then access to the SerialBlob should be controlled by appropriate synchronization.</source>
          <target state="translated">一个SerialBlob被多个并发线程使用是不安全的。如果一个SerialBlob要被一个以上的线程使用,那么对SerialBlob的访问应该由适当的同步控制。</target>
        </trans-unit>
        <trans-unit id="dd646d03ddb105d0bac81eced4b8eb0e3ff3c917" translate="yes" xml:space="preserve">
          <source>A SerialClob is not safe for use by multiple concurrent threads. If a SerialClob is to be used by more than one thread then access to the SerialClob should be controlled by appropriate synchronization.</source>
          <target state="translated">一个SerialClob被多个并发线程使用是不安全的。如果一个SerialClob要被一个以上的线程使用,那么对SerialClob的访问应该由适当的同步控制。</target>
        </trans-unit>
        <trans-unit id="81574c1043d87636a063adedeabc66f1d61ceb85" translate="yes" xml:space="preserve">
          <source>A SerialDatalink is not safe for use by multiple concurrent threads. If a SerialDatalink is to be used by more than one thread then access to the SerialDatalink should be controlled by appropriate synchronization.</source>
          <target state="translated">一个SerialDatalink被多个并发线程使用是不安全的。如果一个SerialDatalink要被多个线程使用,那么对SerialDatalink的访问应该由适当的同步控制。</target>
        </trans-unit>
        <trans-unit id="9f3eec55f797b3747a05d13091a8e49d493d2406" translate="yes" xml:space="preserve">
          <source>A SerialJavaObject is not safe for use by multiple concurrent threads. If a SerialJavaObject is to be used by more than one thread then access to the SerialJavaObject should be controlled by appropriate synchronization.</source>
          <target state="translated">一个SerialJavaObject被多个并发线程使用是不安全的。如果一个SerialJavaObject要被多个线程使用,那么对SerialJavaObject的访问应该通过适当的同步来控制。</target>
        </trans-unit>
        <trans-unit id="de69347512c9e24edad8226eeb10a28653f5fdad" translate="yes" xml:space="preserve">
          <source>A SerialRef is not safe for use by multiple concurrent threads. If a SerialRef is to be used by more than one thread then access to the SerialRef should be controlled by appropriate synchronization.</source>
          <target state="translated">一个SerialRef被多个并发线程使用是不安全的。如果一个SerialRef要被一个以上的线程使用,那么对SerialRef的访问应该由适当的同步控制。</target>
        </trans-unit>
        <trans-unit id="64045efc284039aa388c3d2b54ec25a5435fe1b9" translate="yes" xml:space="preserve">
          <source>A SerialStruct is not safe for use by multiple concurrent threads. If a SerialStruct is to be used by more than one thread then access to the SerialStruct should be controlled by appropriate synchronization.</source>
          <target state="translated">一个SerialStruct被多个并发线程使用是不安全的。如果一个SerialStruct要被多个线程使用,那么对SerialStruct的访问应该通过适当的同步来控制。</target>
        </trans-unit>
        <trans-unit id="3f04f99687730ce27ecb80dc343284595a3a84ae" translate="yes" xml:space="preserve">
          <source>A ServerRef represents the server-side handle for a remote object implementation.</source>
          <target state="translated">ServerRef代表远程对象实现的服务器端句柄。</target>
        </trans-unit>
        <trans-unit id="8b7dfc401c9e2278b7a452ecc6049b6c585c7a6e" translate="yes" xml:space="preserve">
          <source>A Service Provider Interface for transform and canonicalization algorithms.</source>
          <target state="translated">一个用于转换和规范化算法的服务提供商接口。</target>
        </trans-unit>
        <trans-unit id="29f771aa9fe09756354550c2ac62170658a3b899" translate="yes" xml:space="preserve">
          <source>A ServicePermission contains a service principal name and a list of actions which specify the context the credential can be used within.</source>
          <target state="translated">一个ServicePermission包含一个服务委托人名称和一个动作列表,这些动作指定了凭证可以在其中使用的上下文。</target>
        </trans-unit>
        <trans-unit id="4ba48579f134d97906faffaf9f6e57bf973f9875" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 from request-host example for Domain=.local will be accepted, because the effective host name for the request- host is example.local, and example.local domain-matches .local.</source>
          <target state="translated">来自request-host example的Domain=.local的Set-Cookie2将被接受,因为request-host的有效主机名是example.local,而example.local的域名与.local匹配。</target>
        </trans-unit>
        <trans-unit id="6895bf828873767919772735d8c4d1094678e223" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 from request-host x.foo.com for Domain=.foo.com would be accepted.</source>
          <target state="translated">来自request-host x.foo.com for Domain=.foo.com的Set-Cookie2将被接受。</target>
        </trans-unit>
        <trans-unit id="6f2144bbbd723933bf48da180bed425d06939a0b" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 from request-host y.x.foo.com for Domain=.foo.com would be rejected, because H is y.x and contains a dot.</source>
          <target state="translated">来自request-host y.x.foo.com for Domain=.foo.com的Set-Cookie2将被拒绝,因为H是y.x并且包含一个点。</target>
        </trans-unit>
        <trans-unit id="6fb58c1fb8b4e8eee8655028b90b8e904f3c7f2e" translate="yes" xml:space="preserve">
          <source>A Set-Cookie2 with Domain=.com or Domain=.com., will always be rejected, because there is no embedded dot.</source>
          <target state="translated">一个带有Domain=.com或Domain=.com.的Set-Cookie2,总是会被拒绝,因为没有嵌入点。</target>
        </trans-unit>
        <trans-unit id="b858838aeabfa1457392741cd815a016065affc6" translate="yes" xml:space="preserve">
          <source>A Signature object can be used to generate and verify digital signatures.</source>
          <target state="translated">签名对象可以用来生成和验证数字签名。</target>
        </trans-unit>
        <trans-unit id="a93a9f1ae30f6c50f9486ccbbeaba1b1e61a03bf" translate="yes" xml:space="preserve">
          <source>A Smart Card terminal, sometimes referred to as a Smart Card Reader.</source>
          <target state="translated">智能卡终端,有时也称为智能卡读卡器。</target>
        </trans-unit>
        <trans-unit id="45dd47d159d4276919bf9e71ace96b84aa36c9fe" translate="yes" xml:space="preserve">
          <source>A Smart Card terminal, sometimes referred to as a Smart Card Reader. A CardTerminal object can be obtained by calling &lt;a href=&quot;cardterminals#list()&quot;&gt;CardTerminals.list()&lt;/a&gt; or &lt;a href=&quot;cardterminals#getTerminal(java.lang.String)&quot;&gt;CardTerminals.getTerminal()&lt;/a&gt;.</source>
          <target state="translated">智能卡终端，有时也称为智能卡读取器。可以通过调用&lt;a href=&quot;cardterminals#list()&quot;&gt;CardTerminals.list（）&lt;/a&gt;或&lt;a href=&quot;cardterminals#getTerminal(java.lang.String)&quot;&gt;CardTerminals.getTerminal（）&lt;/a&gt;获得CardTerminal对象。</target>
        </trans-unit>
        <trans-unit id="77a8571605263fd69eb1b488f0ad385fbdb5015f" translate="yes" xml:space="preserve">
          <source>A Smart Card with which a connection has been established.</source>
          <target state="translated">与之建立连接的智能卡。</target>
        </trans-unit>
        <trans-unit id="42b8587782f713a7077049c19b38b7ff3a2fe65d" translate="yes" xml:space="preserve">
          <source>A Smart Card with which a connection has been established. Card objects are obtained by calling &lt;a href=&quot;cardterminal#connect(java.lang.String)&quot;&gt;&lt;code&gt;CardTerminal.connect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">与之建立连接的智能卡。卡对象是通过调用&lt;a href=&quot;cardterminal#connect(java.lang.String)&quot;&gt; &lt;code&gt;CardTerminal.connect()&lt;/code&gt; &lt;/a&gt;获得的。</target>
        </trans-unit>
        <trans-unit id="a255907101cfd692c0186357164537023b4a6bbc" translate="yes" xml:space="preserve">
          <source>A Smart Card's answer-to-reset bytes.</source>
          <target state="translated">智能卡的应答复位字节。</target>
        </trans-unit>
        <trans-unit id="fdd4774986903d05177ad526d61b0b11a04cf2ae" translate="yes" xml:space="preserve">
          <source>A Smart Card's answer-to-reset bytes. A Card's ATR object can be obtained by calling &lt;a href=&quot;card#getATR()&quot;&gt;Card.getATR()&lt;/a&gt;. This class does not attempt to verify that the ATR encodes a semantically valid structure.</source>
          <target state="translated">智能卡的应答重置字节。可以通过调用&lt;a href=&quot;card#getATR()&quot;&gt;Card.getATR（）&lt;/a&gt;获得卡的ATR对象。此类不会尝试验证ATR是否对语义有效的结构进行编码。</target>
        </trans-unit>
        <trans-unit id="59346d9f702e9856fec551bc4d75bbdb5816095e" translate="yes" xml:space="preserve">
          <source>A Snippet is compiled into code wrapped in a 'wrapper class'. The execution engine is used by the core JShell implementation to load and, for executable Snippets, execute the Snippet.</source>
          <target state="translated">一个Snippet被编译成代码包装在一个 &quot;包装类 &quot;中。执行引擎被核心JShell实现用来加载,对于可执行的Snippet,执行Snippet。</target>
        </trans-unit>
        <trans-unit id="52fa75afe15a498e062cf0f5df82201756759146" translate="yes" xml:space="preserve">
          <source>A Snippet represents a snippet of Java source code as passed to &lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt;&lt;code&gt;JShell.eval(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">片段表示传递给&lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt; &lt;code&gt;JShell.eval(java.lang.String)&lt;/code&gt; &lt;/a&gt;的Java源代码片段。</target>
        </trans-unit>
        <trans-unit id="512e000f29f26360ebdc35ecac93aaf58b660ae4" translate="yes" xml:space="preserve">
          <source>A Snippet represents a snippet of Java source code as passed to &lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt;&lt;code&gt;JShell.eval(java.lang.String)&lt;/code&gt;&lt;/a&gt;. It is associated only with the &lt;a href=&quot;jshell&quot;&gt;&lt;code&gt;JShell&lt;/code&gt;&lt;/a&gt; instance that created it. An instance of Snippet (including its subclasses) is immutable: an access to any of its methods will always return the same result. For information about the current state of the snippet within the JShell state engine, query &lt;code&gt;JShell&lt;/code&gt; passing the Snippet.</source>
          <target state="translated">片段表示传递给&lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt; &lt;code&gt;JShell.eval(java.lang.String)&lt;/code&gt; &lt;/a&gt;的Java源代码片段。它仅与创建它的&lt;a href=&quot;jshell&quot;&gt; &lt;code&gt;JShell&lt;/code&gt; &lt;/a&gt;实例相关联。 Snippet的实例（包括其子类）是不可变的：对其任何方法的访问将始终返回相同的结果。有关片段的JShell状态引擎内的当前状态信息，查询 &lt;code&gt;JShell&lt;/code&gt; 传递片段。</target>
        </trans-unit>
        <trans-unit id="93d994609fb379ae52ffefc83a20c2cfde345a5e" translate="yes" xml:space="preserve">
          <source>A SortingFocusTraversalPolicy which sorts Components based on their size, position, and orientation.</source>
          <target state="translated">一个SortingFocusTraversalPolicy,它根据组件的大小、位置和方向进行排序。</target>
        </trans-unit>
        <trans-unit id="53f9189199a4c22307fee1ec82d36a18c980a207" translate="yes" xml:space="preserve">
          <source>A SortingFocusTraversalPolicy which sorts Components based on their size, position, and orientation. Based on their size and position, Components are roughly categorized into rows and columns. For a Container with horizontal orientation, columns run left-to-right or right-to-left, and rows run top- to-bottom. For a Container with vertical orientation, columns run top-to- bottom and rows run left-to-right or right-to-left. See &lt;code&gt;ComponentOrientation&lt;/code&gt; for more information. All columns in a row are fully traversed before proceeding to the next row.</source>
          <target state="translated">SortingFocusTraversalPolicy，用于根据组件的大小，位置和方向对其进行排序。根据组件的大小和位置，组件大致分为行和列。对于水平方向的容器，列从左到右或从右到左运行，行从上到下。对于具有垂直方向的容器，列从上到下运行，行从左到右或从右到左运行。有关更多信息，请参见 &lt;code&gt;ComponentOrientation&lt;/code&gt; 。在继续进行下一行之前，必须对行中的所有列进行完全遍历。</target>
        </trans-unit>
        <trans-unit id="0f0f751c9f2576a082cf218b4944a0824c05d3d9" translate="yes" xml:space="preserve">
          <source>A Source object, or null if the href cannot be resolved, and the processor should try to resolve the URI itself.</source>
          <target state="translated">一个Source对象,如果不能解析href,则为空,处理器应该尝试解析URI本身。</target>
        </trans-unit>
        <trans-unit id="0c7d2d97ab5f9a2a4c2647296f0fc3ee7ed7f73e" translate="yes" xml:space="preserve">
          <source>A SourceLocator object, or null if none was specified.</source>
          <target state="translated">SourceLocator对象,如果没有指定,则为空。</target>
        </trans-unit>
        <trans-unit id="5d60c9454eec886f4519e3a8d389a6f15b69f6a8" translate="yes" xml:space="preserve">
          <source>A Spliterator also reports a set of &lt;a href=&quot;#characteristics()&quot;&gt;&lt;code&gt;characteristics()&lt;/code&gt;&lt;/a&gt; of its structure, source, and elements from among &lt;a href=&quot;#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#DISTINCT&quot;&gt;&lt;code&gt;DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#NONNULL&quot;&gt;&lt;code&gt;NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#IMMUTABLE&quot;&gt;&lt;code&gt;IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#CONCURRENT&quot;&gt;&lt;code&gt;CONCURRENT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt;. These may be employed by Spliterator clients to control, specialize or simplify computation. For example, a Spliterator for a &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;SIZED&lt;/code&gt;, a Spliterator for a &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;DISTINCT&lt;/code&gt;, and a Spliterator for a &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; would also report &lt;code&gt;SORTED&lt;/code&gt;. Characteristics are reported as a simple unioned bit set. Some characteristics additionally constrain method behavior; for example if &lt;code&gt;ORDERED&lt;/code&gt;, traversal methods must conform to their documented ordering. New characteristics may be defined in the future, so implementors should not assign meanings to unlisted values.</source>
          <target state="translated">甲Spliterator还报告了一组&lt;a href=&quot;#characteristics()&quot;&gt; &lt;code&gt;characteristics()&lt;/code&gt; &lt;/a&gt;它的结构，源的，和选自元素&lt;a href=&quot;#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#DISTINCT&quot;&gt; &lt;code&gt;DISTINCT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#NONNULL&quot;&gt; &lt;code&gt;NONNULL&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#IMMUTABLE&quot;&gt; &lt;code&gt;IMMUTABLE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#CONCURRENT&quot;&gt; &lt;code&gt;CONCURRENT&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt;。这些可能被Spliterator客户端用来控制，专门化或简化计算。例如，对于一个Spliterator&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;将报告 &lt;code&gt;SIZED&lt;/code&gt; ，一个Spliterator的&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;将报告 &lt;code&gt;DISTINCT&lt;/code&gt; 和Spliterator为&lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; 的&lt;/a&gt;也将报告 &lt;code&gt;SORTED&lt;/code&gt; 。特性报告为简单的联合位集。一些特征还限制了方法的行为。例如，如果为 &lt;code&gt;ORDERED&lt;/code&gt; ，则遍历方法必须符合其记录的顺序。将来可能会定义新的特性，因此实现者不应为未列出的值分配含义。</target>
        </trans-unit>
        <trans-unit id="6248ef2d830cf1c3f13c7471c9dc229c171552bb" translate="yes" xml:space="preserve">
          <source>A Spliterator also reports a set of &lt;a href=&quot;spliterator#characteristics--&quot;&gt;&lt;code&gt;characteristics()&lt;/code&gt;&lt;/a&gt; of its structure, source, and elements from among &lt;a href=&quot;spliterator#ORDERED&quot;&gt;&lt;code&gt;ORDERED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#DISTINCT&quot;&gt;&lt;code&gt;DISTINCT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SORTED&quot;&gt;&lt;code&gt;SORTED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#SIZED&quot;&gt;&lt;code&gt;SIZED&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#NONNULL&quot;&gt;&lt;code&gt;NONNULL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#IMMUTABLE&quot;&gt;&lt;code&gt;IMMUTABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;spliterator#CONCURRENT&quot;&gt;&lt;code&gt;CONCURRENT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;SUBSIZED&lt;/code&gt;&lt;/a&gt;. These may be employed by Spliterator clients to control, specialize or simplify computation. For example, a Spliterator for a &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;SIZED&lt;/code&gt;, a Spliterator for a &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; would report &lt;code&gt;DISTINCT&lt;/code&gt;, and a Spliterator for a &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; would also report &lt;code&gt;SORTED&lt;/code&gt;. Characteristics are reported as a simple unioned bit set. Some characteristics additionally constrain method behavior; for example if &lt;code&gt;ORDERED&lt;/code&gt;, traversal methods must conform to their documented ordering. New characteristics may be defined in the future, so implementors should not assign meanings to unlisted values.</source>
          <target state="translated">甲Spliterator还报告了一组&lt;a href=&quot;spliterator#characteristics--&quot;&gt; &lt;code&gt;characteristics()&lt;/code&gt; &lt;/a&gt;它的结构，源的，和选自元素&lt;a href=&quot;spliterator#ORDERED&quot;&gt; &lt;code&gt;ORDERED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#DISTINCT&quot;&gt; &lt;code&gt;DISTINCT&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SORTED&quot;&gt; &lt;code&gt;SORTED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#SIZED&quot;&gt; &lt;code&gt;SIZED&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#NONNULL&quot;&gt; &lt;code&gt;NONNULL&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#IMMUTABLE&quot;&gt; &lt;code&gt;IMMUTABLE&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;spliterator#CONCURRENT&quot;&gt; &lt;code&gt;CONCURRENT&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;SUBSIZED&lt;/code&gt; &lt;/a&gt;。这些可能被Spliterator客户端用来控制，专门化或简化计算。例如，对于一个Spliterator &lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;将报告 &lt;code&gt;SIZED&lt;/code&gt; ，一个Spliterator的&lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;将报告 &lt;code&gt;DISTINCT&lt;/code&gt; 和Spliterator为&lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; 的&lt;/a&gt;也将报告 &lt;code&gt;SORTED&lt;/code&gt; 。特性报告为简单的联合位集。一些特征还限制了方法的行为。例如，如果为 &lt;code&gt;ORDERED&lt;/code&gt; ，则遍历方法必须符合其记录的顺序。将来可能会定义新的特性，因此实现者不应为未列出的值分配含义。</target>
        </trans-unit>
        <trans-unit id="b367edba58ac5adb0acfdef2911c33149e7143da" translate="yes" xml:space="preserve">
          <source>A Spliterator may also partition off some of its elements (using &lt;a href=&quot;#trySplit()&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt;) as another Spliterator, to be used in possibly-parallel operations. Operations using a Spliterator that cannot split, or does so in a highly imbalanced or inefficient manner, are unlikely to benefit from parallelism. Traversal and splitting exhaust elements; each Spliterator is useful for only a single bulk computation.</source>
          <target state="translated">分离器还可以将其某些元素分区（使用&lt;a href=&quot;#trySplit()&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; &lt;/a&gt;）作为另一个分离器，以用于可能的并行操作。使用拆分器的操作无法拆分，或者以高度不平衡或效率低下的方式拆分，因此不太可能从并行性中受益。遍历和分裂排气元件；每个分割器仅对单个批量计算有用。</target>
        </trans-unit>
        <trans-unit id="d9f6a0c6465be108c334cf628409a3ad690f8f7b" translate="yes" xml:space="preserve">
          <source>A Spliterator may also partition off some of its elements (using &lt;a href=&quot;spliterator#trySplit--&quot;&gt;&lt;code&gt;trySplit()&lt;/code&gt;&lt;/a&gt;) as another Spliterator, to be used in possibly-parallel operations. Operations using a Spliterator that cannot split, or does so in a highly imbalanced or inefficient manner, are unlikely to benefit from parallelism. Traversal and splitting exhaust elements; each Spliterator is useful for only a single bulk computation.</source>
          <target state="translated">分离器还可以将其某些元素分区（使用&lt;a href=&quot;spliterator#trySplit--&quot;&gt; &lt;code&gt;trySplit()&lt;/code&gt; &lt;/a&gt;）作为另一个分离器，以用于可能的并行操作。使用拆分器的操作无法拆分，或者以高度不平衡或低效的方式拆分，因此不太可能从并行性中受益。遍历和分裂排气元件；每个分割器仅对单个批量计算有用。</target>
        </trans-unit>
        <trans-unit id="368447ad2a78e05e6fa041cfd6cfcca60712beff" translate="yes" xml:space="preserve">
          <source>A Spliterator may traverse elements individually (&lt;a href=&quot;#tryAdvance(java.util.function.Consumer)&quot;&gt;&lt;code&gt;tryAdvance()&lt;/code&gt;&lt;/a&gt;) or sequentially in bulk (&lt;a href=&quot;#forEachRemaining(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEachRemaining()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">分隔符可以单独遍历元素（&lt;a href=&quot;#tryAdvance(java.util.function.Consumer)&quot;&gt; &lt;code&gt;tryAdvance()&lt;/code&gt; &lt;/a&gt;）或批量遍历元素（&lt;a href=&quot;#forEachRemaining(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEachRemaining()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9e6ecfecbfb5711aba7a9b40c9f235874d4a36ff" translate="yes" xml:space="preserve">
          <source>A Spliterator may traverse elements individually (&lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt;&lt;code&gt;tryAdvance()&lt;/code&gt;&lt;/a&gt;) or sequentially in bulk (&lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEachRemaining()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">分离器可以遍历元素（&lt;a href=&quot;spliterator#tryAdvance-java.util.function.Consumer-&quot;&gt; &lt;code&gt;tryAdvance()&lt;/code&gt; &lt;/a&gt;）或顺序遍历元素（&lt;a href=&quot;spliterator#forEachRemaining-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEachRemaining()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d7d4efb72039f9c4f8f7a5d8d0153ab18c6bbe28" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for &lt;code&gt;double&lt;/code&gt; values.</source>
          <target state="translated">一个专门用于 &lt;code&gt;double&lt;/code&gt; 精度值的分隔符。</target>
        </trans-unit>
        <trans-unit id="ee9833694647b182022aea939627acec11e77f90" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for &lt;code&gt;int&lt;/code&gt; values.</source>
          <target state="translated">一个专门用于 &lt;code&gt;int&lt;/code&gt; 值的分隔符。</target>
        </trans-unit>
        <trans-unit id="d75cf90e20587284a83f9f86eeabb428d03d4edb" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for &lt;code&gt;long&lt;/code&gt; values.</source>
          <target state="translated">一个专门用于 &lt;code&gt;long&lt;/code&gt; 值的分隔符。</target>
        </trans-unit>
        <trans-unit id="67268317020c1926976403229b9b1887973879f6" translate="yes" xml:space="preserve">
          <source>A Spliterator specialized for primitive values.</source>
          <target state="translated">一个专门针对基元值的Spliterator。</target>
        </trans-unit>
        <trans-unit id="ca86126b3a78cfaba2bff794833a4eed9c92e384" translate="yes" xml:space="preserve">
          <source>A Spliterator that does not report &lt;code&gt;SIZED&lt;/code&gt; as required by &lt;code&gt;SUBSIZED&lt;/code&gt; is inconsistent and no guarantees can be made about any computation using that Spliterator.</source>
          <target state="translated">未按SUBSIZED 要求报告 &lt;code&gt;SIZED&lt;/code&gt; 的 &lt;code&gt;SUBSIZED&lt;/code&gt; 器不一致，并且不能保证使用该分隔器进行任何计算。</target>
        </trans-unit>
        <trans-unit id="e3d62906e8da82ee77e8b2f4c0973f7fd498db04" translate="yes" xml:space="preserve">
          <source>A Spliterator that reports &lt;code&gt;SORTED&lt;/code&gt; must also report &lt;code&gt;ORDERED&lt;/code&gt;.</source>
          <target state="translated">报告 &lt;code&gt;SORTED&lt;/code&gt; SORTED的拆分器也必须报告 &lt;code&gt;ORDERED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="05ee8b03530406302bf575aa5044154d110cfecb" translate="yes" xml:space="preserve">
          <source>A Stream Protocol Version.</source>
          <target state="translated">A流协议版。</target>
        </trans-unit>
        <trans-unit id="d8cf2e470f091b5c07da8eea4c11ca61ccf46934" translate="yes" xml:space="preserve">
          <source>A String consisting of the ObjectNames separated by newlines (\n).</source>
          <target state="translated">一个由对象名称组成的字符串,用换行符(/n)分隔。</target>
        </trans-unit>
        <trans-unit id="3903bf31aa42e6c114795cdf491dbf0aa9693f8f" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Dialog&quot;.</source>
          <target state="translated">逻辑字体 &quot;Dialog &quot;的规范族名的字符串常数。</target>
        </trans-unit>
        <trans-unit id="0b30368c4aee17afbc6a4a4b0b74819e41ede594" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Dialog&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">一个字符串常数,用于逻辑字体 &quot;Dialog &quot;的规范族名。它在字体构造中很有用,可以提供编译时的名称验证。</target>
        </trans-unit>
        <trans-unit id="f2718ae0b228c2ef8b11627c7586bdba20041b95" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;DialogInput&quot;.</source>
          <target state="translated">用于逻辑字体 &quot;DialogInput &quot;的规范族名的字符串常量。</target>
        </trans-unit>
        <trans-unit id="f370d094613558702ae869f997abe0955fc1a50b" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;DialogInput&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">一个字符串常量,用于逻辑字体 &quot;DialogInput &quot;的规范族名。它在字体构造中很有用,可以提供编译时对该名称的验证。</target>
        </trans-unit>
        <trans-unit id="d21788d7d87c95f563cdd3e22817cfdd45783207" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Monospaced&quot;.</source>
          <target state="translated">一个字符串常量,用于逻辑字体 &quot;Monospaced &quot;的规范家族名称。</target>
        </trans-unit>
        <trans-unit id="59e6387686d4fbb9048e1731fd584211e5bc1033" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Monospaced&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">一个字符串常量,用于逻辑字体 &quot;Monospaced &quot;的规范家族名称。它在字体构造中很有用,可以提供编译时的名称验证。</target>
        </trans-unit>
        <trans-unit id="adb0d16a019ad98c65549a78060709b3c0ca6429" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;SansSerif&quot;.</source>
          <target state="translated">用于逻辑字体 &quot;SansSerif &quot;的规范族名的字符串常数。</target>
        </trans-unit>
        <trans-unit id="82061b16ff90e409acf21344956476d7b26d4d2a" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;SansSerif&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">一个字符串常量,用于逻辑字体 &quot;SansSerif &quot;的规范家族名称。它在字体构造中很有用,可以提供编译时的名称验证。</target>
        </trans-unit>
        <trans-unit id="dc8777c651c7eb618ad5b85e41b91d2568ef8166" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Serif&quot;.</source>
          <target state="translated">用于逻辑字体 &quot;Serif &quot;的规范族名的字符串常数。</target>
        </trans-unit>
        <trans-unit id="b0155bb93a72b6201d47b316c10976ba587dcf66" translate="yes" xml:space="preserve">
          <source>A String constant for the canonical family name of the logical font &quot;Serif&quot;. It is useful in Font construction to provide compile-time verification of the name.</source>
          <target state="translated">一个字符串常量,用于逻辑字体 &quot;Serif &quot;的规范家族名称。它在字体构造中很有用,可以提供编译时的名称验证。</target>
        </trans-unit>
        <trans-unit id="a69696403e137dac0fd6dabe54afedd9ef18c862" translate="yes" xml:space="preserve">
          <source>A String containing the contents of the line, not including any &lt;a href=&quot;#lt&quot;&gt;line termination characters&lt;/a&gt;, or &lt;code&gt;null&lt;/code&gt; if the end of the stream has been reached</source>
          <target state="translated">一个字符串，其中包含行的内容，不包含任何&lt;a href=&quot;#lt&quot;&gt;行终止符&lt;/a&gt;；如果已到达流的末尾，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="db6d1021028e3cbf16df11dca2fd2f2666ebbd60" translate="yes" xml:space="preserve">
          <source>A String containing the contents of the line, not including any line-termination characters, or null if the end of the stream has been reached</source>
          <target state="translated">一个字符串,包含行的内容,不包括任何行结束符,如果已经到达流的末端,则为空。</target>
        </trans-unit>
        <trans-unit id="87ae167984e6cc087671c105cb70aada9cb50df5" translate="yes" xml:space="preserve">
          <source>A String containing the contents of the line, not including any line-termination characters, or null if the end of the stream has been reached without reading any characters</source>
          <target state="translated">一个字符串,包含行的内容,不包括任何行结束符,如果没有读取任何字符就到达流的末端,则为空。</target>
        </trans-unit>
        <trans-unit id="8b2bdd600c04329d16ed051f51385b7261b43223" translate="yes" xml:space="preserve">
          <source>A String containing the name of the attribute.</source>
          <target state="translated">一个包含属性名称的字符串。</target>
        </trans-unit>
        <trans-unit id="3cde810521bbbdbb0180b17cab5426000e0d4345" translate="yes" xml:space="preserve">
          <source>A String containing the resulting Base64 encoded characters</source>
          <target state="translated">一个包含Base64编码字符的字符串。</target>
        </trans-unit>
        <trans-unit id="8fe1847821681223cea518f8aa25b33656ee96f0" translate="yes" xml:space="preserve">
          <source>A String containing the type of the attribute.</source>
          <target state="translated">一个包含属性类型的字符串。</target>
        </trans-unit>
        <trans-unit id="fd57db6a7931be2d9006628a23d2fcc5acc407dc" translate="yes" xml:space="preserve">
          <source>A String identifying this object.</source>
          <target state="translated">识别此对象的字符串。</target>
        </trans-unit>
        <trans-unit id="200600fdfe6836092dd19256b4f4482e4464b587" translate="yes" xml:space="preserve">
          <source>A String representation of the parameter and return types</source>
          <target state="translated">参数和返回类型的字符串表示</target>
        </trans-unit>
        <trans-unit id="8034c622fc521b3cb25229c6ca69ddf1914b29e3" translate="yes" xml:space="preserve">
          <source>A String representation of the parameter types of the method.</source>
          <target state="translated">方法的参数类型的字符串表示。</target>
        </trans-unit>
        <trans-unit id="31e9ea8525a8560b59f58da903f59c6dd51d08cb" translate="yes" xml:space="preserve">
          <source>A String representation of the type of the variable.</source>
          <target state="translated">一个表示变量类型的字符串。</target>
        </trans-unit>
        <trans-unit id="08477f881587328d65b47e64452e3918f1b048f3" translate="yes" xml:space="preserve">
          <source>A String representation of this notification.</source>
          <target state="translated">该通知的字符串表示。</target>
        </trans-unit>
        <trans-unit id="c5ccd1cc097e027dc844e7f01ac67691287abb3b" translate="yes" xml:space="preserve">
          <source>A String representing the host operating system encoding. This will follow the conventions documented in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt; &lt;i&gt;RFC 2278: IANA Charset Registration Procedures&lt;/i&gt;&lt;/a&gt; except where historical names are returned for compatibility with previous versions of the Java platform. The value returned from method is valid only for the VM which returns it, for use in a DocFlavor. This is the charset for all the &quot;HOST&quot; pre-defined DocFlavors in the executing VM.</source>
          <target state="translated">一个字符串，代表主机操作系统的编码。这将遵循&lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278：IANA字符集注册过程中&lt;/i&gt;&lt;/a&gt;记录的约定，但返回历史名称以与Java平台的早期版本兼容时除外。从方法返回的值仅对返回它的VM有效，以便在DocFlavor中使用。这是执行VM中所有&amp;ldquo; HOST&amp;rdquo;预定义DocFlavor的字符集。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="c1623ad3e0ba0f38c19e3766c7458e7310d27f8d" translate="yes" xml:space="preserve">
          <source>A SubjectDelegationPermission contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">一个SubjectDelegationPermission包含一个名称(也称为 &quot;目标名称&quot;),但没有行动列表;你要么有命名的权限,要么没有。</target>
        </trans-unit>
        <trans-unit id="a50393320641aa55977e14747b2b9d9fedb6e4ab" translate="yes" xml:space="preserve">
          <source>A SubmissionPublisher uses the &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; supplied in its constructor for delivery to subscribers. The best choice of Executor depends on expected usage. If the generator(s) of submitted items run in separate threads, and the number of subscribers can be estimated, consider using a &lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt;&lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt;&lt;/a&gt;. Otherwise consider using the default, normally the &lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt;&lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SubmissionPublisher使用其构造函数中提供的&lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt;传递给订阅者。执行器的最佳选择取决于预期的用法。如果提交项目的生成器在单独的线程中运行，并且可以估计订阅者的数量，请考虑使用&lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt; &lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt; &lt;/a&gt;。否则，请考虑使用默认值，通常是&lt;a href=&quot;forkjoinpool#commonPool()&quot;&gt; &lt;code&gt;ForkJoinPool.commonPool()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1c296903804a48c18c444aaf1353143c6219973a" translate="yes" xml:space="preserve">
          <source>A Swing component, but nothing else is known about it.</source>
          <target state="translated">一个Swing组件,但对它一无所知。</target>
        </trans-unit>
        <trans-unit id="d973f324cf2b66189a9c2d305928a62c0a540f2c" translate="yes" xml:space="preserve">
          <source>A SynthStyle implementation used by Nimbus.</source>
          <target state="translated">Nimbus使用的一个SynthStyle实现。</target>
        </trans-unit>
        <trans-unit id="195ecfc6c24b070b2bbae61bce38bb6797ed4f1a" translate="yes" xml:space="preserve">
          <source>A SynthStyle implementation used by Nimbus. Each Region that has been registered with the NimbusLookAndFeel will have an associated NimbusStyle. Third party components that are registered with the NimbusLookAndFeel will therefore be handed a NimbusStyle from the look and feel from the #getStyle(JComponent, Region) method.</source>
          <target state="translated">Nimbus使用的一个SynthStyle实现。每个被NimbusLookAndFeel注册的区域都有一个相关的NimbusStyle。因此,在NimbusLookAndFeel中注册的第三方组件将从#getStyle(JComponent,Region)方法的外观和感觉中获得一个NimbusStyle。</target>
        </trans-unit>
        <trans-unit id="6f5fb5f7436e1169598f89979c615e1c6b421f2b" translate="yes" xml:space="preserve">
          <source>A TabSet is comprised of many TabStops.</source>
          <target state="translated">一个TabSet由许多TabStops组成。</target>
        </trans-unit>
        <trans-unit id="4d2e65f1afaadf6e5b56ca96babd1e67ffc575b9" translate="yes" xml:space="preserve">
          <source>A TabSet is comprised of many TabStops. It offers methods for locating the closest TabStop to a given position and finding all the potential TabStops. It is also immutable.</source>
          <target state="translated">一个TabSet由许多TabStops组成。它提供了寻找离给定位置最近的TabStop和寻找所有潜在TabStop的方法。它也是不可改变的。</target>
        </trans-unit>
        <trans-unit id="99a0f3b7d598fe63eb79043c7f602515aefc7bf9" translate="yes" xml:space="preserve">
          <source>A Templates object capable of being used for transformation purposes, never &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">可以用于转换目的的Templates对象，决不能为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0afb5034cda03fb53773a3b8b6c76d13225c26e" translate="yes" xml:space="preserve">
          <source>A Transformer object that may be used to perform a transformation in a single thread, never null.</source>
          <target state="translated">一个可用于在单线程中执行变换的Transformer对象,绝不为空。</target>
        </trans-unit>
        <trans-unit id="165121885ff7031bb1ba281672c4c781d9e0c325" translate="yes" xml:space="preserve">
          <source>A TransformerFactory instance can be used to create &lt;a href=&quot;javax/xml/transform/transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;javax/xml/transform/templates&quot;&gt;&lt;code&gt;Templates&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">TransformerFactory实例可用于创建&lt;a href=&quot;javax/xml/transform/transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;javax/xml/transform/templates&quot;&gt; &lt;code&gt;Templates&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="738d3ef9016284d5a4197e0c10f8c08675850a70" translate="yes" xml:space="preserve">
          <source>A TransformerFactory instance can be used to create &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;templates&quot;&gt;&lt;code&gt;Templates&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">TransformerFactory实例可用于创建&lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;templates&quot;&gt; &lt;code&gt;Templates&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="cab3ffd0b2890e9d3a40921261596ce362fa06cd" translate="yes" xml:space="preserve">
          <source>A TransformerHandler listens for SAX ContentHandler parse events and transforms them to a Result.</source>
          <target state="translated">TransformerHandler监听SAX ContentHandler解析事件并将其转换为Result。</target>
        </trans-unit>
        <trans-unit id="0e6419c61ca6cd7f1fc084046e7312a433e4e135" translate="yes" xml:space="preserve">
          <source>A Transport represents the transport mechanism used by a &lt;a href=&quot;connector&quot;&gt;&lt;code&gt;Connector&lt;/code&gt;&lt;/a&gt; to establish a connection with a target VM. It consists of a name which is obtained by invoking the &lt;a href=&quot;#name()&quot;&gt;&lt;code&gt;name()&lt;/code&gt;&lt;/a&gt; method. Furthermore, a Transport encapsulates a &lt;a href=&quot;spi/transportservice&quot;&gt;&lt;code&gt;TransportService&lt;/code&gt;&lt;/a&gt; which is the underlying service used to establish connections and exchange Java Debug Wire Protocol (JDWP) packets with a target VM.</source>
          <target state="translated">传输表示&lt;a href=&quot;connector&quot;&gt; &lt;code&gt;Connector&lt;/code&gt; &lt;/a&gt;用来与目标VM建立连接的传输机制。它由一个名称组成，该名称是通过调用&lt;a href=&quot;#name()&quot;&gt; &lt;code&gt;name()&lt;/code&gt; &lt;/a&gt;方法获得的。此外，传输封装了&lt;a href=&quot;spi/transportservice&quot;&gt; &lt;code&gt;TransportService&lt;/code&gt; &lt;/a&gt;，后者是用于建立连接并与目标VM交换Java调试线协议（JDWP）数据包的基础服务。</target>
        </trans-unit>
        <trans-unit id="f03eff628fc4eb1c7d82bf513d09fea53f007eb4" translate="yes" xml:space="preserve">
          <source>A TreeSelectionModel can be configured to allow only one path (&lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt;) a number of contiguous paths (&lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt;) or a number of discontiguous paths (&lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt;). A &lt;code&gt;RowMapper&lt;/code&gt; is used to determine if TreePaths are contiguous. In the absence of a RowMapper &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; and &lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt; behave the same, that is they allow any number of paths to be contained in the TreeSelectionModel.</source>
          <target state="translated">可以将TreeSelectionModel配置为仅允许一个路径（ &lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt; ），多个连续路径（ &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; ）或多个不连续路径（ &lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt; ）。甲 &lt;code&gt;RowMapper&lt;/code&gt; 用于确定是否的TreePaths是连续的。在没有RowMapper的情况下， &lt;code&gt;CONTIGUOUS_TREE_SELECTION&lt;/code&gt; 和 &lt;code&gt;DISCONTIGUOUS_TREE_SELECTION&lt;/code&gt; 的行为相同，即它们允许在TreeSelectionModel中包含任意数量的路径。</target>
        </trans-unit>
        <trans-unit id="c0c0a02995a75e13e0f345effb873536e4d8b07a" translate="yes" xml:space="preserve">
          <source>A TreeVisitor that visits all the child tree nodes, and provides support for maintaining a path for the parent nodes.</source>
          <target state="translated">一个访问所有子树节点的TreeVisitor,并为维护父节点的路径提供支持。</target>
        </trans-unit>
        <trans-unit id="7f617fd6760ea28c745863d12af482abfdc6522c" translate="yes" xml:space="preserve">
          <source>A TreeVisitor that visits all the child tree nodes, and provides support for maintaining a path for the parent nodes. To visit nodes of a particular type, just override the corresponding visitorXYZ method. Inside your method, call super.visitXYZ to visit descendant nodes.</source>
          <target state="translated">一个TreeVisitor,它可以访问所有的子树节点,并为维护父节点的路径提供支持。要访问特定类型的节点,只需覆盖相应的visitorXYZ方法。在你的方法里面,调用super.visitXYZ来访问子孙节点。</target>
        </trans-unit>
        <trans-unit id="8bcb2ab10ceab736736cb8f0d67a5962e369dcb4" translate="yes" xml:space="preserve">
          <source>A TreeVisitor that visits all the child tree nodes.</source>
          <target state="translated">一个访问所有子树节点的TreeVisitor。</target>
        </trans-unit>
        <trans-unit id="e5550e63cbb9f0c4c4fb4f96482ce4883d15ff62" translate="yes" xml:space="preserve">
          <source>A TreeVisitor that visits all the child tree nodes. To visit nodes of a particular type, just override the corresponding visitXYZ method. Inside your method, call super.visitXYZ to visit descendant nodes.</source>
          <target state="translated">一个访问所有子树节点的TreeVisitor。要访问特定类型的节点,只需覆盖相应的 visitXYZ 方法。在你的方法里面,调用super.visitXYZ来访问子树节点。</target>
        </trans-unit>
        <trans-unit id="f39bdb486457a86bb3e3c0e535d1d916ae85357b" translate="yes" xml:space="preserve">
          <source>A Type may be used to represent a run-time type:</source>
          <target state="translated">类型可以用来表示运行时类型。</target>
        </trans-unit>
        <trans-unit id="4de9d5ca8af798099e9bfebc84abc0b530fb040a" translate="yes" xml:space="preserve">
          <source>A URI designating a document that describes the reason for the change.</source>
          <target state="translated">指定描述变更原因的文件的URI。</target>
        </trans-unit>
        <trans-unit id="1d012f2af436a34c96b1db9cc7a735687458e73a" translate="yes" xml:space="preserve">
          <source>A URI designating a document that describes the reason for the change. See the cite attribute definition in HTML 4.0.</source>
          <target state="translated">指定描述更改原因的文档的URI。参见HTML 4.0中的cite属性定义。</target>
        </trans-unit>
        <trans-unit id="0269b1c0e37af242ebcfaca361b1bc8af033614b" translate="yes" xml:space="preserve">
          <source>A URI designating a source document or message.</source>
          <target state="translated">指定源文件或信息的URI。</target>
        </trans-unit>
        <trans-unit id="a7952393cbb2c2afa3b224f79e5b4a154970d272" translate="yes" xml:space="preserve">
          <source>A URI designating a source document or message. See the cite attribute definition in HTML 4.0.</source>
          <target state="translated">指定源文件或消息的URI。参见HTML 4.0中的cite属性定义。</target>
        </trans-unit>
        <trans-unit id="d25fbd12c19963574cd043b190288b5fff901b24" translate="yes" xml:space="preserve">
          <source>A URI designating the initial frame contents.</source>
          <target state="translated">指定初始框架内容的URI。</target>
        </trans-unit>
        <trans-unit id="9cf2543a07ae2fd6a4e728a74ef6428ff27308bb" translate="yes" xml:space="preserve">
          <source>A URI designating the initial frame contents. See the src attribute definition in HTML 4.0.</source>
          <target state="translated">指定初始框架内容的URI。参见HTML 4.0中的src属性定义。</target>
        </trans-unit>
        <trans-unit id="46172656d648db0ec18759d51f5eabcbde6598f3" translate="yes" xml:space="preserve">
          <source>A URI equivalent to this URI, but whose path is in normal form</source>
          <target state="translated">与该URI相当的URI,但其路径是正常形式的。</target>
        </trans-unit>
        <trans-unit id="a4305f044aa66375e2cc03aeddd3d88bf93aaf85" translate="yes" xml:space="preserve">
          <source>A URI for this file object.</source>
          <target state="translated">该文件对象的URI。</target>
        </trans-unit>
        <trans-unit id="154269b7e32c514b5b1642379b1e1117058a96da" translate="yes" xml:space="preserve">
          <source>A URI is a uniform resource</source>
          <target state="translated">URI是一种统一的资源</target>
        </trans-unit>
        <trans-unit id="9367949ffb8f452862af1ba00ea6c875ca3f9707" translate="yes" xml:space="preserve">
          <source>A URI is absolute if, and only if, it has a scheme component.</source>
          <target state="translated">一个URI是绝对的,如果而且只有当它有一个方案组件时。</target>
        </trans-unit>
        <trans-unit id="94345fc265e9b24959e3d1ed9134dad6dc7e8e04" translate="yes" xml:space="preserve">
          <source>A URI is opaque if, and only if, it is absolute and its scheme-specific part does not begin with a slash character ('/'). An opaque URI has a scheme, a scheme-specific part, and possibly a fragment; all other components are undefined.</source>
          <target state="translated">一个URI是不透明的,如果而且只有当它是绝对的,并且它的方案特定部分不以斜线字符('/')开头。一个不透明的URI有一个方案,一个方案特定的部分,可能还有一个片段;所有其他部分都是未定义的。</target>
        </trans-unit>
        <trans-unit id="7d6b54a6c877a3c664f23b86d8ddc582fecd6a90" translate="yes" xml:space="preserve">
          <source>A URI specifying the location of the object's data.</source>
          <target state="translated">指定对象数据位置的URI。</target>
        </trans-unit>
        <trans-unit id="b24369232c7a038afb334f213e06b51cf36b9587" translate="yes" xml:space="preserve">
          <source>A URI specifying the location of the object's data. See the data attribute definition in HTML 4.0.</source>
          <target state="translated">指定对象数据位置的URI。参见HTML 4.0中的数据属性定义。</target>
        </trans-unit>
        <trans-unit id="da466cddbd0f1331bfef8b2b4d58d23551683564" translate="yes" xml:space="preserve">
          <source>A URI to the resource; an empty &lt;code&gt;Optional&lt;/code&gt; if the resource is not found or a URI cannot be constructed to locate the resource</source>
          <target state="translated">资源的URI；一个空的 &lt;code&gt;Optional&lt;/code&gt; 如果找不到资源或无法构造URI来定位资源</target>
        </trans-unit>
        <trans-unit id="b0e3fa5f67754d2e9848e74d28feb8d7ca0cc28c" translate="yes" xml:space="preserve">
          <source>A URI whose authority field has been parsed as a server-based authority</source>
          <target state="translated">一个URI,其权限字段已被解析为基于服务器的权限。</target>
        </trans-unit>
        <trans-unit id="2fcf4a492d36b6af7584282a3e866b529a8ee186" translate="yes" xml:space="preserve">
          <source>A URL Connection to a Java ARchive (JAR) file or an entry in a JAR file.</source>
          <target state="translated">连接到Java ARchive (JAR)文件或JAR文件中的一个条目的URL。</target>
        </trans-unit>
        <trans-unit id="7b36cd88efa53b8fd8140df198b49bbe4ab1f7ce" translate="yes" xml:space="preserve">
          <source>A URL can optionally specify a &quot;port&quot;, which is the port number to which the TCP connection is made on the remote host machine. If the port is not specified, the default port for the protocol is used instead. For example, the default port for &lt;code&gt;http&lt;/code&gt; is &lt;code&gt;80&lt;/code&gt;. An alternative port could be specified as:</source>
          <target state="translated">URL可以选择指定&amp;ldquo;端口&amp;rdquo;，它是远程主机上进行TCP连接的端口号。如果未指定端口，则使用协议的默认端口。例如， &lt;code&gt;http&lt;/code&gt; 的默认端口是 &lt;code&gt;80&lt;/code&gt; 。备用端口可以指定为：</target>
        </trans-unit>
        <trans-unit id="aa5301852c56aba73f775bfa7a5b22d2603450d5" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the DoInput flag to true if you intend to use the URL connection for input, false if not. The default is true.</source>
          <target state="translated">URL连接可以用于输入和/或输出。如果您打算将URL连接用于输入,则将DoInput标志设置为true,如果不打算,则设置为false。默认为true。</target>
        </trans-unit>
        <trans-unit id="5244de89744fc5c25c418eba65578cda558ff54b" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the DoOutput flag to true if you intend to use the URL connection for output, false if not. The default is false.</source>
          <target state="translated">URL连接可以用于输入和/或输出。如果您打算将URL连接用于输出,则将DoOutput标志设置为true,如果不打算,则设置为false。默认为false。</target>
        </trans-unit>
        <trans-unit id="8d8c5f4cb6e58fe5b76f34e8407b7e7bd29dcba8" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the doInput flag to true if you intend to use the URL connection for input, false if not. The default is true.</source>
          <target state="translated">URL连接可以用于输入和/或输出。如果您打算将URL连接用于输入,则将doInput标志设置为true,如果不打算,则设置为false。默认为true。</target>
        </trans-unit>
        <trans-unit id="4910ed6e30f883b0fe7e39dcfe9293b8a7ef6ac1" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Set the doOutput flag to true if you intend to use the URL connection for output, false if not. The default is false.</source>
          <target state="translated">URL连接可以用于输入和/或输出。如果您打算将URL连接用于输出,则将doOutput标志设置为true,如果不打算,则设置为false。默认为false。</target>
        </trans-unit>
        <trans-unit id="766c723594f236c4538ccfb762a210a591498917" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Setting the &lt;code&gt;doInput&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt; indicates that the application intends to read data from the URL connection.</source>
          <target state="translated">URL连接可用于输入和/或输出。将 &lt;code&gt;doInput&lt;/code&gt; 标志设置为 &lt;code&gt;true&lt;/code&gt; 表示应用程序打算从URL连接读取数据。</target>
        </trans-unit>
        <trans-unit id="1a7da67c471a96ebf79df397de1637daa0bc78b3" translate="yes" xml:space="preserve">
          <source>A URL connection can be used for input and/or output. Setting the &lt;code&gt;doOutput&lt;/code&gt; flag to &lt;code&gt;true&lt;/code&gt; indicates that the application intends to write data to the URL connection.</source>
          <target state="translated">URL连接可用于输入和/或输出。将 &lt;code&gt;doOutput&lt;/code&gt; 标志设置为 &lt;code&gt;true&lt;/code&gt; 表示应用程序打算将数据写入URL连接。</target>
        </trans-unit>
        <trans-unit id="1fbebfef446b244f3203c437b814094e77364922" translate="yes" xml:space="preserve">
          <source>A URL constructed from this URI</source>
          <target state="translated">由该URI构建的URL</target>
        </trans-unit>
        <trans-unit id="9d10a2603b4e208793c8c68d9fdac790148d2841" translate="yes" xml:space="preserve">
          <source>A URL context for &lt;code&gt;name&lt;/code&gt; or the cached initial context. The result cannot be null.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 的URL上下文或缓存的初始上下文。结果不能为空。</target>
        </trans-unit>
        <trans-unit id="35e31bbbe45e6238bb463b154a7d9ec5a91fb8b1" translate="yes" xml:space="preserve">
          <source>A URL may have appended to it a &quot;fragment&quot;, also known as a &quot;ref&quot; or a &quot;reference&quot;. The fragment is indicated by the sharp sign character &quot;#&quot; followed by more characters. For example,</source>
          <target state="translated">一个URL可能附加了一个 &quot;片段&quot;,也称为 &quot;参考 &quot;或 &quot;引用&quot;。片段用尖锐的符号字符 &quot;#&quot;表示,后面跟着更多的字符。例如</target>
        </trans-unit>
        <trans-unit id="2039d67b96f857326c2ff123c85b3a8a95404175" translate="yes" xml:space="preserve">
          <source>A URL object representing the equivalent file URL</source>
          <target state="translated">一个代表等价文件URL的URL对象</target>
        </trans-unit>
        <trans-unit id="5d9699ce86879480eb18d3fbd5b85ec03b6b3614" translate="yes" xml:space="preserve">
          <source>A URL stream handler factory is used as specified in the &lt;a href=&quot;url#%3Cinit%3E(java.lang.String,java.lang.String,int,java.lang.String)&quot;&gt;URL constructor&lt;/a&gt;.</source>
          <target state="translated">URL流处理程序工厂用于&lt;a href=&quot;url#%3Cinit%3E(java.lang.String,java.lang.String,int,java.lang.String)&quot;&gt;URL构造函数中&lt;/a&gt;指定的位置。</target>
        </trans-unit>
        <trans-unit id="c2e302f5891d1b4c08f7bcf5df80f1ab5397f165" translate="yes" xml:space="preserve">
          <source>A URL stream handler provider identifies itself with a provider-configuration file named java.net.spi.URLStreamHandlerProvider in the resource directory META-INF/services. The file should contain a list of fully-qualified concrete URL stream handler provider class names, one per line.</source>
          <target state="translated">URL 流处理程序提供者用资源目录 META-INF/services 中名为 java.net.spi.URLStreamHandlerProvider 的提供者配置文件来标识自己。该文件应该包含一个完全限定的具体 URL 流处理提供者类名的列表,每行一个。</target>
        </trans-unit>
        <trans-unit id="e791f7fee7aedc0ed0a03c5e49fd427ae335c426" translate="yes" xml:space="preserve">
          <source>A URL stream handler provider is a concrete subclass of this class that has a zero-argument constructor. URL stream handler providers may be installed in an instance of the Java platform by adding them to the application class path.</source>
          <target state="translated">URL流处理程序提供者是该类的一个具体子类,它有一个零参数的构造函数。URL流处理程序提供者可以通过将它们添加到应用程序类路径中,安装在Java平台的实例中。</target>
        </trans-unit>
        <trans-unit id="e306ba01a860d552e0695d25b64fcecd19dab8bf" translate="yes" xml:space="preserve">
          <source>A URL that specifies the location of the key store password. Required when no callback handler is provided and &lt;code&gt;protected&lt;/code&gt; is false. No default value.</source>
          <target state="translated">一个URL，它指定密钥存储区密码的位置。如果未提供回调处理程序且 &lt;code&gt;protected&lt;/code&gt; 为false，则为必需。无默认值。</target>
        </trans-unit>
        <trans-unit id="10e067671739ed4eef1f17c9e550b22670333647" translate="yes" xml:space="preserve">
          <source>A URL that specifies the location of the key store. Defaults to a URL pointing to the .keystore file in the directory specified by the &lt;code&gt;user.home&lt;/code&gt; system property. The input stream from this URL is passed to the &lt;code&gt;KeyStore.load&lt;/code&gt; method. &quot;NONE&quot; may be specified if a &lt;code&gt;null&lt;/code&gt; stream must be passed to the &lt;code&gt;KeyStore.load&lt;/code&gt; method. &quot;NONE&quot; should be specified if the KeyStore resides on a hardware token device, for example.</source>
          <target state="translated">一个URL，它指定密钥库的位置。默认为指向 &lt;code&gt;user.home&lt;/code&gt; 系统属性指定的目录中的.keystore文件的URL 。该URL的输入流将传递到 &lt;code&gt;KeyStore.load&lt;/code&gt; 方法。如果必须将 &lt;code&gt;null&lt;/code&gt; 流传 &lt;code&gt;KeyStore.load&lt;/code&gt; 方法，则可以指定&amp;ldquo; NONE&amp;rdquo; 。例如，如果KeyStore驻留在硬件令牌设备上，则应指定&amp;ldquo; NONE&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="5007359e5e0d0229416a6b36664c1fd73df2988a" translate="yes" xml:space="preserve">
          <source>A URL that specifies the location of the specific private key password needed to access the private key for this alias. The keystore password is used if this value is needed and not specified.</source>
          <target state="translated">指定访问该别名的私钥所需的特定私钥密码的位置的URL。如果需要这个值而又没有指定,则使用钥匙库密码。</target>
        </trans-unit>
        <trans-unit id="fa63bf2e1ce3456d75297bda8f8418e5ea88c614" translate="yes" xml:space="preserve">
          <source>A URL to the resource; &lt;code&gt;null&lt;/code&gt; if the resource could not be found, a URL could not be constructed to locate the resource, access to the resource is denied by the security manager, or there isn't a module of the given name defined to the class loader.</source>
          <target state="translated">资源的URL；如果找不到资源，无法构造URL来定位资源，安全管理器拒绝对资源的访问或没有为类加载器定义给定名称的模块，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="686d1942f27451f39cf3f8eb1804e867663d839a" translate="yes" xml:space="preserve">
          <source>A URLConnection with support for HTTP-specific features.</source>
          <target state="translated">一个支持HTTP特定功能的URLConnection。</target>
        </trans-unit>
        <trans-unit id="9af20c4c1e6ff5245b9204d42ad98ee746d95004" translate="yes" xml:space="preserve">
          <source>A URLConnection with support for HTTP-specific features. See &lt;a href=&quot;http://www.w3.org/pub/WWW/Protocols/&quot;&gt; the spec &lt;/a&gt; for details.</source>
          <target state="translated">一个支持HTTP特定功能的URLConnection。有关详细信息，请参见&lt;a href=&quot;http://www.w3.org/pub/WWW/Protocols/&quot;&gt;规格&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="643fa223c105af72c37f5078798300ed790b4abb" translate="yes" xml:space="preserve">
          <source>A URLConnection with support for HTTP-specific features. See &lt;a href=&quot;https://www.w3.org/pub/WWW/Protocols/&quot;&gt; the spec &lt;/a&gt; for details.</source>
          <target state="translated">一个支持HTTP特定功能的URLConnection。有关详细信息，请参见&lt;a href=&quot;https://www.w3.org/pub/WWW/Protocols/&quot;&gt;规格&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="be182296d2804d94b9a2ee18ba5793be943e43fe" translate="yes" xml:space="preserve">
          <source>A Unicode character can also be represented by using its &lt;b&gt;Hex notation&lt;/b&gt; (hexadecimal code point value) directly as described in construct &lt;code&gt;\x{...}&lt;/code&gt;, for example a supplementary character U+2011F can be specified as &lt;code&gt;\x{2011F}&lt;/code&gt;, instead of two consecutive Unicode escape sequences of the surrogate pair &lt;code&gt;\uD840&lt;/code&gt;&lt;code&gt;\uDD1F&lt;/code&gt;.</source>
          <target state="translated">Unicode字符也可以直接使用其&lt;b&gt;十六进制表示法&lt;/b&gt;（十六进制代码点值）来表示，如结构 &lt;code&gt;\x{...}&lt;/code&gt; ，例如，可以将补充字符U + 2011F指定为 &lt;code&gt;\x{2011F}&lt;/code&gt; ，代理对 &lt;code&gt;\uD840&lt;/code&gt; &lt;code&gt;\uDD1F&lt;/code&gt; 的两个连续的Unicode转义序列之一。</target>
        </trans-unit>
        <trans-unit id="7f38ebc1a2646d495dcc65b799102891c80b966a" translate="yes" xml:space="preserve">
          <source>A Unicode character can also be represented in a regular-expression by using its &lt;b&gt;Hex notation&lt;/b&gt;(hexadecimal code point value) directly as described in construct &lt;code&gt;\x{...}&lt;/code&gt;, for example a supplementary character U+2011F can be specified as &lt;code&gt;\x{2011F}&lt;/code&gt;, instead of two consecutive Unicode escape sequences of the surrogate pair &lt;code&gt;\uD840&lt;/code&gt;&lt;code&gt;\uDD1F&lt;/code&gt;.</source>
          <target state="translated">Unicode字符也可以通过直接使用其&lt;b&gt;十六进制表示法&lt;/b&gt;（十六进制代码点值）以正则表达式&lt;b&gt;表示&lt;/b&gt;，如结构 &lt;code&gt;\x{...}&lt;/code&gt; ，例如，可以将补充字符U + 2011F指定为 &lt;code&gt;\x{2011F}&lt;/code&gt; ，而不是代理对 &lt;code&gt;\uD840&lt;/code&gt; &lt;code&gt;\uDD1F&lt;/code&gt; 的两个连续的Unicode转义序列。</target>
        </trans-unit>
        <trans-unit id="eaf310432ca180b7afec132043396dd76e215fa9" translate="yes" xml:space="preserve">
          <source>A Unicode extended grapheme cluster boundary</source>
          <target state="translated">一个Unicode扩展的字词群边界</target>
        </trans-unit>
        <trans-unit id="38aae3de7952dbe48a6406151bec5cf5e28b311d" translate="yes" xml:space="preserve">
          <source>A Unicode range may have more than one set of decimal digits. If multiple decimal digits sets are specified for the same Unicode range, one of the sets will take precedence as follows.</source>
          <target state="translated">一个Unicode范围可以有多个十进制数组。如果为同一Unicode范围指定了多个十进制数字集,则其中一个集将以下列方式优先。</target>
        </trans-unit>
        <trans-unit id="91b634a905eef0b7c11d2e566c240dec3fa478e6" translate="yes" xml:space="preserve">
          <source>A VMDeathRequest with a suspend policy of &lt;a href=&quot;eventrequest#SUSPEND_ALL&quot;&gt;&lt;code&gt;SUSPEND_ALL&lt;/code&gt;&lt;/a&gt; can be used to assure processing of incoming &lt;a href=&quot;eventrequest#SUSPEND_NONE&quot;&gt;&lt;code&gt;SUSPEND_NONE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;eventrequest#SUSPEND_EVENT_THREAD&quot;&gt;&lt;code&gt;SUSPEND_EVENT_THREAD&lt;/code&gt;&lt;/a&gt; events before VM death. If all event processing is being done in the same thread as event sets are being read, enabling the request is all that is needed since the VM will be suspended until the &lt;a href=&quot;../event/eventset&quot;&gt;&lt;code&gt;EventSet&lt;/code&gt;&lt;/a&gt; containing the &lt;a href=&quot;../event/vmdeathevent&quot;&gt;&lt;code&gt;VMDeathEvent&lt;/code&gt;&lt;/a&gt; is resumed.</source>
          <target state="translated">具有SUSPEND_ALL挂起策略的&lt;a href=&quot;eventrequest#SUSPEND_ALL&quot;&gt; &lt;code&gt;SUSPEND_ALL&lt;/code&gt; &lt;/a&gt;可用于确保在VM死亡之前处理传入的&lt;a href=&quot;eventrequest#SUSPEND_NONE&quot;&gt; &lt;code&gt;SUSPEND_NONE&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;eventrequest#SUSPEND_EVENT_THREAD&quot;&gt; &lt;code&gt;SUSPEND_EVENT_THREAD&lt;/code&gt; &lt;/a&gt;事件。如果所有的事件处理是在同一个线程正在做作为事件集正被读取时，使该请求是必要的，因为虚拟机将被挂起，直到所有&lt;a href=&quot;../event/eventset&quot;&gt; &lt;code&gt;EventSet&lt;/code&gt; 这样&lt;/a&gt;含有&lt;a href=&quot;../event/vmdeathevent&quot;&gt; &lt;code&gt;VMDeathEvent&lt;/code&gt; &lt;/a&gt;被恢复。</target>
        </trans-unit>
        <trans-unit id="d674c354c7dc403f6c1635412848be85e540fb69" translate="yes" xml:space="preserve">
          <source>A VMID is a identifier that is unique across all Java virtual machines.</source>
          <target state="translated">VMID是所有Java虚拟机中唯一的标识符。</target>
        </trans-unit>
        <trans-unit id="90196b6563f9763af14eecbb3ae5c84ae6e40d4a" translate="yes" xml:space="preserve">
          <source>A VMID is a identifier that is unique across all Java virtual machines. VMIDs are used by the distributed garbage collector to identify client VMs.</source>
          <target state="translated">VMID是所有Java虚拟机中唯一的标识符。VMID由分布式垃圾收集器用来识别客户端虚拟机。</target>
        </trans-unit>
        <trans-unit id="e9a3d6f9767ce3a5ff8e8a2ee12bc9bad41f8362" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class  javax.management.BooleanValueExp.</source>
          <target state="translated">一个包含参数的ValueExp对象。返回的对象将被序列化为非公开类javax.management.BooleanValueExp的实例。</target>
        </trans-unit>
        <trans-unit id="3ac069999aacbbba7fe0c87a4e7cd0b23e05b604" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class  javax.management.NumericValueExp.</source>
          <target state="translated">一个包含参数的ValueExp对象。返回的对象将被序列化为非公开类javax.management.NumericValueExp的实例。</target>
        </trans-unit>
        <trans-unit id="6466036f6be6a06d3789cc75bdde132b7fc34cd2" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BooleanValueExp&quot;&gt; javax.management.BooleanValueExp&lt;/a&gt;.</source>
          <target state="translated">一个包含参数的ValueExp对象。返回的对象将被序列化为非公共类&lt;a href=&quot;../../serialized-form#javax.management.BooleanValueExp&quot;&gt;javax.management.BooleanValueExp&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="21ce50c2a44dda142eee93ab86df474408b2b106" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.NumericValueExp&quot;&gt; javax.management.NumericValueExp&lt;/a&gt;.</source>
          <target state="translated">一个包含参数的ValueExp对象。返回的对象将被序列化为非公共类&lt;a href=&quot;../../serialized-form#javax.management.NumericValueExp&quot;&gt;javax.management.NumericValueExp&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="e541c33429b88c5cd6e442c7d303d34f536b1278" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BooleanValueExp&quot;&gt; javax.management.BooleanValueExp&lt;/a&gt;.</source>
          <target state="translated">一个包含参数的ValueExp对象。返回的对象将被序列化为非公共类&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BooleanValueExp&quot;&gt;javax.management.BooleanValueExp&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="3e945ac72d5a2c81dda7ea7b90e3767aea6930d6" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the argument. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.NumericValueExp&quot;&gt; javax.management.NumericValueExp&lt;/a&gt;.</source>
          <target state="translated">一个包含参数的ValueExp对象。返回的对象将被序列化为非公共类&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.NumericValueExp&quot;&gt;javax.management.NumericValueExp&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="e009f231e6128eed9dd899a26aad65683e5ff76e" translate="yes" xml:space="preserve">
          <source>A ValueExp object containing the string argument.</source>
          <target state="translated">一个包含字符串参数的ValueExp对象。</target>
        </trans-unit>
        <trans-unit id="de22c6e9990da5a49747707bdd019ef158c6a772" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the difference between two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#MINUS&quot;&gt;&lt;code&gt;MINUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个ValueExp，表示两个参数之间的差异。返回的对象将被序列化为非公共类javax.management.BinaryOpValueExp的实例，其 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;query#MINUS&quot;&gt; &lt;code&gt;MINUS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8c74afc32a5f7e81f815386cc19dea701c149ae0" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the difference between two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#MINUS&quot;&gt;&lt;code&gt;MINUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个ValueExp，表示两个参数之间的差异。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt;与 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;#MINUS&quot;&gt; &lt;code&gt;MINUS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59514d99ef808f2aaa562c1e0b1d9cd2b65ed8ed" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the difference between two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#MINUS&quot;&gt;&lt;code&gt;MINUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个ValueExp，表示两个参数之间的差异。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt;与 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;#MINUS&quot;&gt; &lt;code&gt;MINUS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dac970aefa6859b648a0490bbf81cfc0c56fbaf3" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the product. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#TIMES&quot;&gt;&lt;code&gt;TIMES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示产品的ValueExp。返回的对象将被序列化为非公共类javax.management.BinaryOpValueExp的实例，其 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;query#TIMES&quot;&gt; &lt;code&gt;TIMES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3e2bd1be6dfba00422a2838a4d23ed7dcffc30b" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the product. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#TIMES&quot;&gt;&lt;code&gt;TIMES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">代表产品的ValueExp。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt;与 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;#TIMES&quot;&gt; &lt;code&gt;TIMES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59004bd8f1a8f12424067d27e7a0c1ad9154fd93" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the product. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#TIMES&quot;&gt;&lt;code&gt;TIMES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">代表产品的ValueExp。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt;与 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;#TIMES&quot;&gt; &lt;code&gt;TIMES&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="fb2307ebe7608266981f5807bc8dca0e01ae2792" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the quotient of two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#DIV&quot;&gt;&lt;code&gt;DIV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个ValueExp，表示两个参数的商。返回的对象将被序列化为非公共类javax.management.BinaryOpValueExp的实例，其 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;query#DIV&quot;&gt; &lt;code&gt;DIV&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0913e6076e38486448e01405a844d0dbd00409ad" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the quotient of two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#DIV&quot;&gt;&lt;code&gt;DIV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个ValueExp，表示两个参数的商。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt;与 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;#DIV&quot;&gt; &lt;code&gt;DIV&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99fd913b8850829c38948cf1fa7030724fad760d" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the quotient of two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#DIV&quot;&gt;&lt;code&gt;DIV&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个ValueExp，表示两个参数的商。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt;与 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;#DIV&quot;&gt; &lt;code&gt;DIV&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e478ed03b6fed397fd38511cec48ee079619762f" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the sum or concatenation of the two arguments. The returned object will be serialized as an instance of the non-public class  javax.management.BinaryOpValueExp with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;query#PLUS&quot;&gt;&lt;code&gt;PLUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个ValueExp，表示两个参数的总和或串联。返回的对象将被序列化为非公共类javax.management.BinaryOpValueExp的实例，其 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;query#PLUS&quot;&gt; &lt;code&gt;PLUS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15cab161546e026ef993a9b8da56f93da01f2b44" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the sum or concatenation of the two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#PLUS&quot;&gt;&lt;code&gt;PLUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个ValueExp，表示两个参数的总和或串联。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;../../serialized-form#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt;与 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;#PLUS&quot;&gt; &lt;code&gt;PLUS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="40ec1a9e2f9387d2af8dbd069cf350cecc61361e" translate="yes" xml:space="preserve">
          <source>A ValueExp representing the sum or concatenation of the two arguments. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryOpValueExp&quot;&gt; javax.management.BinaryOpValueExp&lt;/a&gt; with an &lt;code&gt;op&lt;/code&gt; equal to &lt;a href=&quot;#PLUS&quot;&gt;&lt;code&gt;PLUS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个ValueExp，表示两个参数的总和或串联。返回的对象将被序列化为非公共类的实例&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.BinaryOpValueExp&quot;&gt;javax.management.BinaryOpValueExp&lt;/a&gt;与 &lt;code&gt;op&lt;/code&gt; 等于&lt;a href=&quot;#PLUS&quot;&gt; &lt;code&gt;PLUS&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="da79d6a27b9722bcbb8eb927ed21919c37c40df7" translate="yes" xml:space="preserve">
          <source>A VarHandle can be obtained for a variable, such as a field, which is declared with Java generic types. As with the Core Reflection API, the VarHandle's variable type will be constructed from the erasure of the source-level type. When a VarHandle access mode method is invoked, the types of its arguments or the return value cast type may be generic types or type instances. If this occurs, the compiler will replace those types by their erasures when it constructs the symbolic type descriptor for the &lt;code&gt;invokevirtual&lt;/code&gt; instruction.</source>
          <target state="translated">可以为使用Java泛型类型声明的变量（例如字段）获取VarHandle。与Core Reflection API一样，VarHandle的变量类型将从擦除源级类型的方式构造而成。当调用VarHandle访问模式方法时，其参数的类型或返回值强制类型可以是泛型类型或类型实例。如果发生这种情况，则编译器在为 &lt;code&gt;invokevirtual&lt;/code&gt; 指令构造符号类型描述符时，将通过擦除来替换这些类型。</target>
        </trans-unit>
        <trans-unit id="2d64337fca144335343a7688adc0906139915db5" translate="yes" xml:space="preserve">
          <source>A VarHandle has:</source>
          <target state="translated">一个VarHandle有。</target>
        </trans-unit>
        <trans-unit id="346d4362ea02fde74f598e5306bb7b843b16795e" translate="yes" xml:space="preserve">
          <source>A VarHandle is a dynamically strongly typed reference to a variable, or to a parametrically-defined family of variables, including static fields, non-static fields, array elements, or components of an off-heap data structure.</source>
          <target state="translated">VarHandle是一个动态的强类型引用,指向一个变量或参数定义的变量系列,包括静态字段、非静态字段、数组元素或离堆数据结构的组件。</target>
        </trans-unit>
        <trans-unit id="de1aa02407688dae7f5153e91a6ab574a175ad64" translate="yes" xml:space="preserve">
          <source>A VarHandle is a dynamically strongly typed reference to a variable, or to a parametrically-defined family of variables, including static fields, non-static fields, array elements, or components of an off-heap data structure. Access to such variables is supported under various &lt;em&gt;access modes&lt;/em&gt;, including plain read/write access, volatile read/write access, and compare-and-set.</source>
          <target state="translated">VarHandle是对变量或参数定义的变量系列的动态强类型引用，包括静态字段，非静态字段，数组元素或堆外数据结构的组件。在各种&lt;em&gt;访问模式&lt;/em&gt;下都支持对此类变量的&lt;em&gt;访问&lt;/em&gt;，包括普通读/写访问，易失性读/写访问和比较设置。</target>
        </trans-unit>
        <trans-unit id="1dade9420af64edb18e50f6ed324d8bae4afc3fc" translate="yes" xml:space="preserve">
          <source>A Vector of non-source parameters, stored as arbitrary Objects.</source>
          <target state="translated">一个非源参数的向量,作为任意对象存储。</target>
        </trans-unit>
        <trans-unit id="0eaf561a3048faba6888488a8a46614e7b4a0163" translate="yes" xml:space="preserve">
          <source>A Vector of sources, stored as arbitrary Objects.</source>
          <target state="translated">源的向量,存储为任意对象。</target>
        </trans-unit>
        <trans-unit id="aac5e0222272bb261720ffcaaeeb78590ccfa9eb" translate="yes" xml:space="preserve">
          <source>A VetoableChange event gets fired whenever a bean changes a &quot;constrained&quot; property.</source>
          <target state="translated">每当一个bean改变一个 &quot;约束 &quot;属性时,一个VetoableChange事件就会被触发。</target>
        </trans-unit>
        <trans-unit id="47e1ca5f54a2d9b2109e0fe47cb06e0eeb891d55" translate="yes" xml:space="preserve">
          <source>A VetoableChange event gets fired whenever a bean changes a &quot;constrained&quot; property. You can register a VetoableChangeListener with a source bean so as to be notified of any constrained property updates.</source>
          <target state="translated">每当Bean改变一个 &quot;约束 &quot;属性时,一个VetoableChange事件就会被触发。你可以在源Bean中注册一个VetoableChangeListener,以便通知任何约束属性的更新。</target>
        </trans-unit>
        <trans-unit id="8f5c093ca0710ef1569a35eb50ff32a656d0bd3f" translate="yes" xml:space="preserve">
          <source>A View expresses the size that it would like to be in terms of three values, a minimum, a preferred, and a maximum span. Layout in a view is can be done independently upon each axis. For a properly functioning View implementation, the minimum span will be &amp;lt;= the preferred span which in turn will be &amp;lt;= the maximum span.</source>
          <target state="translated">视图用三个值（最小，首选和最大跨度）表示想要的大小。视图中的布局可以在每个轴上独立完成。对于功能正常的View实现，最小范围将小于等于首选范围，而首选范围将小于等于最大范围。</target>
        </trans-unit>
        <trans-unit id="aeb283117ceef294fc1fa38376fad98b35fbca1c" translate="yes" xml:space="preserve">
          <source>A View that tries to flow it's children into some partially constrained space.</source>
          <target state="translated">一个视图,试图将它的子代流进某个部分受限的空间。</target>
        </trans-unit>
        <trans-unit id="03d9d433c2e4e3037e29a1c00df9d2571ecc9562" translate="yes" xml:space="preserve">
          <source>A View that tries to flow it's children into some partially constrained space. This can be used to build things like paragraphs, pages, etc. The flow is made up of the following pieces of functionality.</source>
          <target state="translated">一个视图,它试图将它的子代流进一些部分限制的空间。这可以用来构建段落、页面等。流程由以下功能组成。</target>
        </trans-unit>
        <trans-unit id="ee1e8b4296c893c4d7c94912074b62ded0e743bf" translate="yes" xml:space="preserve">
          <source>A VirtualMachine is obtained by invoking the &lt;a href=&quot;#attach(java.lang.String)&quot;&gt;&lt;code&gt;attach&lt;/code&gt;&lt;/a&gt; method with an identifier that identifies the target virtual machine. The identifier is implementation-dependent but is typically the process identifier (or pid) in environments where each Java virtual machine runs in its own operating system process. Alternatively, a &lt;code&gt;VirtualMachine&lt;/code&gt; instance is obtained by invoking the &lt;a href=&quot;#attach(com.sun.tools.attach.VirtualMachineDescriptor)&quot;&gt;&lt;code&gt;attach&lt;/code&gt;&lt;/a&gt; method with a &lt;a href=&quot;virtualmachinedescriptor&quot;&gt;&lt;code&gt;VirtualMachineDescriptor&lt;/code&gt;&lt;/a&gt; obtained from the list of virtual machine descriptors returned by the &lt;a href=&quot;#list()&quot;&gt;&lt;code&gt;list&lt;/code&gt;&lt;/a&gt; method. Once a reference to a virtual machine is obtained, the &lt;a href=&quot;#loadAgent(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadAgent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#loadAgentLibrary(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadAgentLibrary&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#loadAgentPath(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadAgentPath&lt;/code&gt;&lt;/a&gt; methods are used to load agents into target virtual machine. The &lt;a href=&quot;#loadAgent(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadAgent&lt;/code&gt;&lt;/a&gt; method is used to load agents that are written in the Java Language and deployed in a &lt;a href=&quot;../../../../../java.base/java/util/jar/jarfile&quot;&gt;&lt;code&gt;JAR file&lt;/code&gt;&lt;/a&gt;. (See &lt;a href=&quot;../../../../../java.instrument/java/lang/instrument/package-summary&quot;&gt;&lt;code&gt;java.lang.instrument&lt;/code&gt;&lt;/a&gt; for a detailed description on how these agents are loaded and started). The &lt;a href=&quot;#loadAgentLibrary(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadAgentLibrary&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#loadAgentPath(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadAgentPath&lt;/code&gt;&lt;/a&gt; methods are used to load agents that are deployed either in a dynamic library or statically linked into the VM and make use of the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jvmti.html&quot;&gt;JVM Tools Interface&lt;/a&gt;.</source>
          <target state="translated">通过使用带有标识目标虚拟机的标识符的&lt;a href=&quot;#attach(java.lang.String)&quot;&gt; &lt;code&gt;attach&lt;/code&gt; &lt;/a&gt;方法获得VirtualMachine 。该标识符取决于实现，但是在每个Java虚拟机都在其自己的操作系统进程中运行的环境中，通常是进程标识符（或pid）。或者，通过使用从&lt;a href=&quot;#list()&quot;&gt; &lt;code&gt;list&lt;/code&gt; &lt;/a&gt;方法返回的虚拟机描述符列表中获得的&lt;a href=&quot;virtualmachinedescriptor&quot;&gt; &lt;code&gt;VirtualMachineDescriptor&lt;/code&gt; &lt;/a&gt;调用&lt;a href=&quot;#attach(com.sun.tools.attach.VirtualMachineDescriptor)&quot;&gt; &lt;code&gt;attach&lt;/code&gt; &lt;/a&gt;方法来获得 &lt;code&gt;VirtualMachine&lt;/code&gt; 实例。一旦获得对虚拟机的引用，&lt;a href=&quot;#loadAgent(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadAgent&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#loadAgentLibrary(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadAgentLibrary&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#loadAgentPath(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadAgentPath&lt;/code&gt; &lt;/a&gt;方法用于将代理加载到目标虚拟机。该&lt;a href=&quot;#loadAgent(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadAgent&lt;/code&gt; &lt;/a&gt;方法用于加载写在Java语言和部署在代理&lt;a href=&quot;../../../../../java.base/java/util/jar/jarfile&quot;&gt; &lt;code&gt;JAR file&lt;/code&gt; &lt;/a&gt;。（有关如何加载和启动这些代理的详细说明，请参见&lt;a href=&quot;../../../../../java.instrument/java/lang/instrument/package-summary&quot;&gt; &lt;code&gt;java.lang.instrument&lt;/code&gt; &lt;/a&gt;）。的&lt;a href=&quot;#loadAgentLibrary(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadAgentLibrary&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#loadAgentPath(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadAgentPath&lt;/code&gt; &lt;/a&gt;方法用于那些在动态库被部署或静态链接到VM和利用的负载剂&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jvmti.html&quot;&gt;JVM工具接口&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ab038febd4ff8a17baa7a1f884071e2c63c84896" translate="yes" xml:space="preserve">
          <source>A VirtualMachine is safe for use by multiple concurrent threads.</source>
          <target state="translated">一个VirtualMachine可以被多个并发线程安全使用。</target>
        </trans-unit>
        <trans-unit id="9e0c0ae784b3d7dd792ff0e13da6668b9f8807d4" translate="yes" xml:space="preserve">
          <source>A VirtualMachine representing the target VM.</source>
          <target state="translated">一个代表目标虚拟机的VirtualMachine。</target>
        </trans-unit>
        <trans-unit id="a59dbcf0e5ed997449c1ca960d3cfad12429ccf0" translate="yes" xml:space="preserve">
          <source>A WebSocket Client.</source>
          <target state="translated">一个WebSocket客户端。</target>
        </trans-unit>
        <trans-unit id="6c0caac0032d15b5cbcf0bb9f34cc7144c7ecb40" translate="yes" xml:space="preserve">
          <source>A WindowListener object is registered via &lt;code&gt;addWindowListener&lt;/code&gt;</source>
          <target state="translated">通过 &lt;code&gt;addWindowListener&lt;/code&gt; 注册一个WindowListener对象。</target>
        </trans-unit>
        <trans-unit id="c20c932d676d18ddbf6f8a194924859cc6b4263d" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of LabelUI.</source>
          <target state="translated">LabelUI的Windows L＆F实现。</target>
        </trans-unit>
        <trans-unit id="4639c9c8aed77f95dec0c260268ce49ea6b2573b" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of LabelUI. This implementation is completely static, i.e. there's only one UIView implementation that's shared by all JLabel objects.</source>
          <target state="translated">LabelUI的Windows L＆F实现。此实现是完全静态的，即所有JLabel对象共享一个UIView实现。</target>
        </trans-unit>
        <trans-unit id="6b46cfcc9ae92123b341dd696dd87a0c0c364511" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of PopupMenuUI.</source>
          <target state="translated">PopupMenuUI的Windows L＆F实现。</target>
        </trans-unit>
        <trans-unit id="38783a10643ea6017b77fdca0ae7c524df8d5714" translate="yes" xml:space="preserve">
          <source>A Windows L&amp;amp;F implementation of PopupMenuUI. This implementation is a &quot;combined&quot; view/controller.</source>
          <target state="translated">PopupMenuUI的Windows L＆F实现。此实现是&amp;ldquo;组合&amp;rdquo;视图/控制器。</target>
        </trans-unit>
        <trans-unit id="84eef7227591dfb31e4351e83703d8d7e7c808e3" translate="yes" xml:space="preserve">
          <source>A Zip file system supports a file attribute &lt;a href=&quot;../java.base/java/nio/file/attribute/fileattributeview&quot;&gt;&lt;code&gt;view&lt;/code&gt;&lt;/a&gt; named &quot;&lt;code&gt;zip&lt;/code&gt;&quot; that defines the following file attribute:</source>
          <target state="translated">Zip文件系统支持名为&amp;ldquo; &lt;code&gt;zip&lt;/code&gt; &amp;rdquo;的文件属性&lt;a href=&quot;../java.base/java/nio/file/attribute/fileattributeview&quot;&gt; &lt;code&gt;view&lt;/code&gt; &lt;/a&gt;，该视图定义了以下文件属性：</target>
        </trans-unit>
        <trans-unit id="b2aa3bd8fd31cdb2a0f7b728153dcf915cbfbbcf" translate="yes" xml:space="preserve">
          <source>A a String representation of this EventObject.</source>
          <target state="translated">该EventObject的一个字符串表示。</target>
        </trans-unit>
        <trans-unit id="11757ec3e3827cf92d351ba865dfed39ea1240a9" translate="yes" xml:space="preserve">
          <source>A backslash ('\') is replaced by two backslashes.</source>
          <target state="translated">一个反斜杠('\')由两个反斜杠代替。</target>
        </trans-unit>
        <trans-unit id="d13a207d7d90fb5512d75f0c3479cc11ff6801c9" translate="yes" xml:space="preserve">
          <source>A backward focus traversal action.</source>
          <target state="translated">一个向后聚焦的穿越动作。</target>
        </trans-unit>
        <trans-unit id="cada23d86d062aa416b782b62eb17b32428f781c" translate="yes" xml:space="preserve">
          <source>A bar or palette usually composed of push buttons or toggle buttons.</source>
          <target state="translated">通常由按钮或切换按钮组成的条形或调色板。</target>
        </trans-unit>
        <trans-unit id="a955ae175ef5ad4bc0e6ffb66794bdd6dd6a1ca8" translate="yes" xml:space="preserve">
          <source>A bar or palette usually composed of push buttons or toggle buttons. It is often used to provide the most frequently used functions for an application.</source>
          <target state="translated">通常由按钮或切换按钮组成的条形或调色板。它通常用于为应用程序提供最常用的功能。</target>
        </trans-unit>
        <trans-unit id="b644c455a9509cb9d591b444af1a13434e31e755" translate="yes" xml:space="preserve">
          <source>A base class for &lt;code&gt;CellEditors&lt;/code&gt;, providing default implementations for the methods in the &lt;code&gt;CellEditor&lt;/code&gt; interface except &lt;code&gt;getCellEditorValue()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CellEditors&lt;/code&gt; 的基类，为 &lt;code&gt;CellEditor&lt;/code&gt; 接口中的方法 &lt;code&gt;getCellEditorValue()&lt;/code&gt; 除外）提供默认实现。</target>
        </trans-unit>
        <trans-unit id="91798e6442ae977e2b893d183265edc3147c3870" translate="yes" xml:space="preserve">
          <source>A base class for &lt;code&gt;CellEditors&lt;/code&gt;, providing default implementations for the methods in the &lt;code&gt;CellEditor&lt;/code&gt; interface except &lt;code&gt;getCellEditorValue()&lt;/code&gt;. Like the other abstract implementations in Swing, also manages a list of listeners.</source>
          <target state="translated">&lt;code&gt;CellEditors&lt;/code&gt; 的基类，为 &lt;code&gt;CellEditor&lt;/code&gt; 接口中的方法 &lt;code&gt;getCellEditorValue()&lt;/code&gt; 除外）提供默认实现。像Swing中的其他抽象实现一样，它也管理侦听器列表。</target>
        </trans-unit>
        <trans-unit id="455e59b9955df043ed94f5a654bafd77c5c2c54e" translate="yes" xml:space="preserve">
          <source>A base class to use in creating a look and feel for Swing.</source>
          <target state="translated">一个用于创建Swing的外观和感觉的基类。</target>
        </trans-unit>
        <trans-unit id="d0a9ecceee606636d10d1821b425fc447cbb76bd" translate="yes" xml:space="preserve">
          <source>A base interface that all views shall derive from.</source>
          <target state="translated">所有视图都应来自于一个基本接口。</target>
        </trans-unit>
        <trans-unit id="85a695e0a1b18958abe873386285f1bdbac52158" translate="yes" xml:space="preserve">
          <source>A base type for primitive specializations of &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 的原始专业化的基本类型。</target>
        </trans-unit>
        <trans-unit id="dee3cc77f71740db72c16054028dc7ae130310d3" translate="yes" xml:space="preserve">
          <source>A base type for primitive specializations of &lt;code&gt;Iterator&lt;/code&gt;. Specialized subtypes are provided for &lt;a href=&quot;primitiveiterator.ofint&quot;&gt;&lt;code&gt;int&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;primitiveiterator.oflong&quot;&gt;&lt;code&gt;long&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;primitiveiterator.ofdouble&quot;&gt;&lt;code&gt;double&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; 的原始专业化的基本类型。为&lt;a href=&quot;primitiveiterator.ofint&quot;&gt; &lt;code&gt;int&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;primitiveiterator.oflong&quot;&gt; &lt;code&gt;long&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;primitiveiterator.ofdouble&quot;&gt; &lt;code&gt;double&lt;/code&gt; &lt;/a&gt;值提供了专门的子类型。</target>
        </trans-unit>
        <trans-unit id="2b346f931b744f2effa3e679b4d22baf582e2493" translate="yes" xml:space="preserve">
          <source>A basic L&amp;amp;F implementation of JInternalFrame.</source>
          <target state="translated">JInternalFrame的基本L＆F实现。</target>
        </trans-unit>
        <trans-unit id="03e5c62b1ef7855739731ed5053d55441ac097df" translate="yes" xml:space="preserve">
          <source>A basic file view.</source>
          <target state="translated">一个基本的文件视图。</target>
        </trans-unit>
        <trans-unit id="330958ae2b2690ce2d5744b57b724ffe2e706850" translate="yes" xml:space="preserve">
          <source>A basic implementation of the &lt;a href=&quot;../relinkablecallsite&quot;&gt;&lt;code&gt;RelinkableCallSite&lt;/code&gt;&lt;/a&gt; as a &lt;a href=&quot;../../../../java.base/java/lang/invoke/mutablecallsite&quot;&gt;&lt;code&gt;MutableCallSite&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../relinkablecallsite&quot;&gt; &lt;code&gt;RelinkableCallSite&lt;/code&gt; &lt;/a&gt;作为&lt;a href=&quot;../../../../java.base/java/lang/invoke/mutablecallsite&quot;&gt; &lt;code&gt;MutableCallSite&lt;/code&gt; 的&lt;/a&gt;基本实现。</target>
        </trans-unit>
        <trans-unit id="ee0a92c1b4f58e0438ade8d49f914c2f786d0bce" translate="yes" xml:space="preserve">
          <source>A basic implementation of the &lt;a href=&quot;../relinkablecallsite&quot;&gt;&lt;code&gt;RelinkableCallSite&lt;/code&gt;&lt;/a&gt; as a &lt;a href=&quot;../../../../java.base/java/lang/invoke/mutablecallsite&quot;&gt;&lt;code&gt;MutableCallSite&lt;/code&gt;&lt;/a&gt;. It carries a &lt;a href=&quot;../callsitedescriptor&quot;&gt;&lt;code&gt;CallSiteDescriptor&lt;/code&gt;&lt;/a&gt; passed in the constructor and provides the correct implementation of the &lt;a href=&quot;../relinkablecallsite#initialize(java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;RelinkableCallSite.initialize(MethodHandle)&lt;/code&gt;&lt;/a&gt; method. Subclasses must provide &lt;a href=&quot;../relinkablecallsite#relink(jdk.dynalink.linker.GuardedInvocation,java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;RelinkableCallSite.relink(GuardedInvocation, MethodHandle)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../relinkablecallsite#resetAndRelink(jdk.dynalink.linker.GuardedInvocation,java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;RelinkableCallSite.resetAndRelink(GuardedInvocation, MethodHandle)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;a href=&quot;../relinkablecallsite&quot;&gt; &lt;code&gt;RelinkableCallSite&lt;/code&gt; &lt;/a&gt;作为&lt;a href=&quot;../../../../java.base/java/lang/invoke/mutablecallsite&quot;&gt; &lt;code&gt;MutableCallSite&lt;/code&gt; 的&lt;/a&gt;基本实现。它带有在构造函数中传递的&lt;a href=&quot;../callsitedescriptor&quot;&gt; &lt;code&gt;CallSiteDescriptor&lt;/code&gt; &lt;/a&gt;，并提供&lt;a href=&quot;../relinkablecallsite#initialize(java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;RelinkableCallSite.initialize(MethodHandle)&lt;/code&gt; &lt;/a&gt;方法的正确实现。子类必须提供&lt;a href=&quot;../relinkablecallsite#relink(jdk.dynalink.linker.GuardedInvocation,java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;RelinkableCallSite.relink(GuardedInvocation, MethodHandle)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../relinkablecallsite#resetAndRelink(jdk.dynalink.linker.GuardedInvocation,java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;RelinkableCallSite.resetAndRelink(GuardedInvocation, MethodHandle)&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="757c0088402967d24f23a8035cef98a04f349e45" translate="yes" xml:space="preserve">
          <source>A bean may have a default event typically applied when this bean is used.</source>
          <target state="translated">一个bean可以有一个默认事件,通常在使用这个bean时应用。</target>
        </trans-unit>
        <trans-unit id="d2a15aefed6017824efeac0412e782440b3a0c35" translate="yes" xml:space="preserve">
          <source>A bean may have a default property commonly updated when this bean is customized.</source>
          <target state="translated">一个bean可能有一个默认的属性,当这个bean被定制时,通常会更新。</target>
        </trans-unit>
        <trans-unit id="7b273b9931986f91991a96e656bfa52cdde7293e" translate="yes" xml:space="preserve">
          <source>A bevel border UI resource.</source>
          <target state="translated">一个斜边框的UI资源。</target>
        </trans-unit>
        <trans-unit id="018d39cd93e976ee471a7864af5f3ac20158c282" translate="yes" xml:space="preserve">
          <source>A binary data has been received.</source>
          <target state="translated">已收到一个二进制数据。</target>
        </trans-unit>
        <trans-unit id="4648940a25187a7ad9c93ab3e21a7689feb5c6d2" translate="yes" xml:space="preserve">
          <source>A binary reference address is immutable in the sense that its fields once created, cannot be replaced. However, it is possible to access the byte array used to hold the opaque buffer. Programs are strongly recommended against changing this byte array. Changes to this byte array need to be explicitly synchronized.</source>
          <target state="translated">二进制参考地址是不可改变的,因为它的字段一旦创建,就不能被替换。然而,可以访问用于保存不透明缓冲区的字节数组。强烈建议程序不要改变这个字节数组。对这个字节数组的更改需要显式同步。</target>
        </trans-unit>
        <trans-unit id="e9a69c91e078c72bfbc6bb0be12172d7d205524d" translate="yes" xml:space="preserve">
          <source>A binding pattern tree</source>
          <target state="translated">绑定模式树</target>
        </trans-unit>
        <trans-unit id="9b4a58b41e0f612b3bb3f852f0c16d6a48b838df" translate="yes" xml:space="preserve">
          <source>A binding variable in a pattern .</source>
          <target state="translated">一个模式中的绑定变量。</target>
        </trans-unit>
        <trans-unit id="dbe41ba4c77685ab14e9a7b3096abfc683e4a114" translate="yes" xml:space="preserve">
          <source>A binding variable name.</source>
          <target state="translated">绑定变量名称。</target>
        </trans-unit>
        <trans-unit id="b7f76763a178b32dc17af7fcf8ca87ef2efe4315" translate="yes" xml:space="preserve">
          <source>A black and white only printer must not include the &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; attribute in its attribute set or service registration. If this attribute is present, then the &lt;a href=&quot;colorsupported&quot;&gt;&lt;code&gt;ColorSupported&lt;/code&gt;&lt;/a&gt; printer description attribute must also be present and have a value of &lt;code&gt;SUPPORTED&lt;/code&gt;.</source>
          <target state="translated">仅黑白打印机不能在其属性集或服务注册中包括 &lt;code&gt;PagesPerMinuteColor&lt;/code&gt; 属性。如果存在此属性，则&lt;a href=&quot;colorsupported&quot;&gt; &lt;code&gt;ColorSupported&lt;/code&gt; &lt;/a&gt;打印机描述属性也必须存在并且其值为 &lt;code&gt;SUPPORTED&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28756260cab42ed3fc29c2fd2d2d202118fb38c6" translate="yes" xml:space="preserve">
          <source>A black and white only printer must not include the PagesPerMinuteColor attribute in its attribute set or service registration. If this attribute is present, then the &lt;a href=&quot;colorsupported&quot;&gt;&lt;code&gt;ColorSupported&lt;/code&gt;&lt;/a&gt; printer description attribute must also be present and have a value of SUPPORTED.</source>
          <target state="translated">仅黑白打印机不能在其属性集或服务注册中包括PagesPerMinuteColor属性。如果存在此属性，则&lt;a href=&quot;colorsupported&quot;&gt; &lt;code&gt;ColorSupported&lt;/code&gt; &lt;/a&gt;打印机描述属性也必须存在并且其值为SUPPORTED。</target>
        </trans-unit>
        <trans-unit id="53259515a896c061e25a9ed15f463634c03f56e2" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether the concrete subclass supports the standard metadata format, set via the constructor.</source>
          <target state="translated">表示具体子类是否支持标准元数据格式的布尔值,通过构造函数设置。</target>
        </trans-unit>
        <trans-unit id="d9477ca049b88489d2b38149a23433afe1bc4eed" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether this plug-in supports the standard metadata format for image metadata, initially &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指示此插件是否支持图像元数据的标准元数据格式的布尔值，最初为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b83ab706b6e17d09a40ff25d34c822ad27c15d07" translate="yes" xml:space="preserve">
          <source>A boolean indicating whether this plug-in supports the standard metadata format for stream metadata, initially &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指示此插件是否支持流元数据的标准元数据格式的布尔值，最初为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="586dc302c71cd147bbd0eb1bda6c4463b2e7b5ff" translate="yes" xml:space="preserve">
          <source>A border layout lays out a container, arranging and resizing its components to fit in five regions: north, south, east, west, and center.</source>
          <target state="translated">边框布局布置了一个容器,安排和调整其组件的大小,以适应五个区域:北、南、东、西和中心。</target>
        </trans-unit>
        <trans-unit id="c8e83443a66028005dedb3435b96388107b471da" translate="yes" xml:space="preserve">
          <source>A border layout lays out a container, arranging and resizing its components to fit in five regions: north, south, east, west, and center. Each region may contain no more than one component, and is identified by a corresponding constant: &lt;code&gt;NORTH&lt;/code&gt;, &lt;code&gt;SOUTH&lt;/code&gt;, &lt;code&gt;EAST&lt;/code&gt;, &lt;code&gt;WEST&lt;/code&gt;, and &lt;code&gt;CENTER&lt;/code&gt;. When adding a component to a container with a border layout, use one of these five constants, for example:</source>
          <target state="translated">边框布局会布置一个容器，布置并调整其组件的大小以适合五个区域：北部，南部，东部，西部和中部。每个区域最多只能包含一个组成部分，并由相应的常数标识： &lt;code&gt;NORTH&lt;/code&gt; ， &lt;code&gt;SOUTH&lt;/code&gt; ， &lt;code&gt;EAST&lt;/code&gt; ， &lt;code&gt;WEST&lt;/code&gt; 和 &lt;code&gt;CENTER&lt;/code&gt; 。将组件添加到具有边框布局的容器时，请使用以下五个常量之一，例如：</target>
        </trans-unit>
        <trans-unit id="517df06dadc252901da6ef01e78578e693ec0af0" translate="yes" xml:space="preserve">
          <source>A border without focus.</source>
          <target state="translated">一个没有焦点的边界。</target>
        </trans-unit>
        <trans-unit id="b39ce668b8a6a89fc32432670ce35ae52e61bcc0" translate="yes" xml:space="preserve">
          <source>A bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; backed by an array.</source>
          <target state="translated">由数组支持的有界&lt;a href=&quot;blockingqueue&quot;&gt;阻塞队列&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62ef4090491b3f77e59b611b48659dc0dcd37310" translate="yes" xml:space="preserve">
          <source>A bounded &lt;a href=&quot;blockingqueue&quot;&gt;blocking queue&lt;/a&gt; backed by an array. This queue orders elements FIFO (first-in-first-out). The &lt;em&gt;head&lt;/em&gt; of the queue is that element that has been on the queue the longest time. The &lt;em&gt;tail&lt;/em&gt; of the queue is that element that has been on the queue the shortest time. New elements are inserted at the tail of the queue, and the queue retrieval operations obtain elements at the head of the queue.</source>
          <target state="translated">由数组支持的有界&lt;a href=&quot;blockingqueue&quot;&gt;阻塞队列&lt;/a&gt;。此队列对元素FIFO（先进先出）进行排序。队列的&lt;em&gt;开头&lt;/em&gt;是已在队列中停留最长时间的元素。队列的&lt;em&gt;尾部&lt;/em&gt;是最短时间出现在队列中的元素。新元素插入到队列的尾部，并且队列检索操作在队列的开头获取元素。</target>
        </trans-unit>
        <trans-unit id="b53d722b4fd560e25dee8f224333fbad41cf9fb4" translate="yes" xml:space="preserve">
          <source>A box that does layout asynchronously.</source>
          <target state="translated">一个异步做布局的盒子。</target>
        </trans-unit>
        <trans-unit id="0e61d562b479de3b9e950e78b73dc829234eeec4" translate="yes" xml:space="preserve">
          <source>A box that does layout asynchronously. This is useful to keep the GUI event thread moving by not doing any layout on it. The layout is done on a granularity of operations on the child views. After each child view is accessed for some part of layout (a potentially time consuming operation) the remaining tasks can be abandoned or a new higher priority task (i.e. to service a synchronous request or a visible area) can be taken on.</source>
          <target state="translated">一个异步进行布局的盒子。这对于保持GUI事件线程的移动是很有用的,可以不对它做任何布局。布局是在对子视图的操作粒度上完成的。在每个子视图被访问以进行部分布局(一种潜在的耗时操作)之后,剩余的任务可以被放弃,或者可以接受一个新的更高优先级的任务(即服务于同步请求或可见区域)。</target>
        </trans-unit>
        <trans-unit id="b4abeac083bd93bc54fb7b00d129de9a377831f0" translate="yes" xml:space="preserve">
          <source>A break iterator for character breaks</source>
          <target state="translated">一个用于中断字符的迭代器</target>
        </trans-unit>
        <trans-unit id="51a9a46286d79ded1086a034d58ac0c2a8978838" translate="yes" xml:space="preserve">
          <source>A break iterator for line breaks</source>
          <target state="translated">用于换行的中断迭代器</target>
        </trans-unit>
        <trans-unit id="617aea254f35f926f8aa9dc19969e3dc93afda12" translate="yes" xml:space="preserve">
          <source>A break iterator for sentence breaks</source>
          <target state="translated">一个断句迭代器,用于断句</target>
        </trans-unit>
        <trans-unit id="bd76fb690012655da975ab2cbf26de08e24283dd" translate="yes" xml:space="preserve">
          <source>A break iterator for word breaks</source>
          <target state="translated">一个断字迭代器,用于断字</target>
        </trans-unit>
        <trans-unit id="406bc890e10642a15686bc5abafda22562398985" translate="yes" xml:space="preserve">
          <source>A brief description of the property, which may be null.</source>
          <target state="translated">财产的简要说明,可能是无效的;</target>
        </trans-unit>
        <trans-unit id="7dc94e24dcfe5c7b1314267497f1ff31df1b8d99" translate="yes" xml:space="preserve">
          <source>A buffer is a linear, finite sequence of elements of a specific primitive type. Aside from its content, the essential properties of a buffer are its capacity, limit, and position:</source>
          <target state="translated">缓冲区是一个线性的、有限的、具有特定基元类型的元素序列。除了内容外,缓冲区的基本属性是其容量、极限和位置。</target>
        </trans-unit>
        <trans-unit id="324c6bf038720a465066054397d4264a929bfa20" translate="yes" xml:space="preserve">
          <source>A buffer's</source>
          <target state="translated">缓冲区的</target>
        </trans-unit>
        <trans-unit id="a38d36a5171b52d9f4d2d9a4cc3e0cd798f3a0e0" translate="yes" xml:space="preserve">
          <source>A buffered character-input stream that keeps track of line numbers.</source>
          <target state="translated">缓冲的字符输入流,用于跟踪行号。</target>
        </trans-unit>
        <trans-unit id="b3d3e341d936c2a9318fb36824834ab6e62b6e5a" translate="yes" xml:space="preserve">
          <source>A buffered character-input stream that keeps track of line numbers. This class defines methods &lt;a href=&quot;#setLineNumber(int)&quot;&gt;&lt;code&gt;setLineNumber(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getLineNumber()&quot;&gt;&lt;code&gt;getLineNumber()&lt;/code&gt;&lt;/a&gt; for setting and getting the current line number respectively.</source>
          <target state="translated">缓冲的字符输入流，可跟踪行号。此类定义方法&lt;a href=&quot;#setLineNumber(int)&quot;&gt; &lt;code&gt;setLineNumber(int)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getLineNumber()&quot;&gt; &lt;code&gt;getLineNumber()&lt;/code&gt; 分别&lt;/a&gt;用于设置和获取当前行号。</target>
        </trans-unit>
        <trans-unit id="127c3edf2b5b53a296ab7ff8b00ca59e412aef0d" translate="yes" xml:space="preserve">
          <source>A buffered character-input stream that keeps track of line numbers. This class defines methods &lt;a href=&quot;linenumberreader#setLineNumber-int-&quot;&gt;&lt;code&gt;setLineNumber(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;linenumberreader#getLineNumber--&quot;&gt;&lt;code&gt;getLineNumber()&lt;/code&gt;&lt;/a&gt; for setting and getting the current line number respectively.</source>
          <target state="translated">跟踪行号的缓冲字符输入流。此类定义方法&lt;a href=&quot;linenumberreader#setLineNumber-int-&quot;&gt; &lt;code&gt;setLineNumber(int)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;linenumberreader#getLineNumber--&quot;&gt; &lt;code&gt;getLineNumber()&lt;/code&gt; 分别&lt;/a&gt;用于设置和获取当前行号。</target>
        </trans-unit>
        <trans-unit id="e65216352a7cdc1813ee9c1f3621f5fff483eb48" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents.</source>
          <target state="translated">从 &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; 对象创建的构建器，用于建立与 &lt;code&gt;data source&lt;/code&gt; 对象代表的数据库的连接。</target>
        </trans-unit>
        <trans-unit id="3f9ce534d0b45e9473e99dfe870a0419c1b21269" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents. The connection properties that were specified for the &lt;code&gt;data source&lt;/code&gt; are used as the default values by the &lt;code&gt;PooledConnectionBuilder&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;ConnectionPoolDataSource&lt;/code&gt; 对象创建的构建器，用于建立与 &lt;code&gt;data source&lt;/code&gt; 对象代表的数据库的连接。 &lt;code&gt;PooledConnectionBuilder&lt;/code&gt; 将为 &lt;code&gt;data source&lt;/code&gt; 指定的连接属性用作默认值。</target>
        </trans-unit>
        <trans-unit id="c42aec692303e67d7e0cd838bc2b34e718365f35" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents.</source>
          <target state="translated">从 &lt;code&gt;DataSource&lt;/code&gt; 对象创建的构建器，用于建立与 &lt;code&gt;data source&lt;/code&gt; 对象表示的数据库的连接。</target>
        </trans-unit>
        <trans-unit id="558091f1b6a3efb4688fae32804636fdfc712164" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents. The connection properties that were specified for the &lt;code&gt;data source&lt;/code&gt; are used as the default values by the &lt;code&gt;ConnectionBuilder&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;DataSource&lt;/code&gt; 对象创建的构建器，用于建立与 &lt;code&gt;data source&lt;/code&gt; 对象表示的数据库的连接。用于中指定的连接属性 &lt;code&gt;data source&lt;/code&gt; 被用作由所述默认值 &lt;code&gt;ConnectionBuilder&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="566021a6baaeed56333107094a71714d8032b0e5" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; or &lt;code&gt;XADataSource&lt;/code&gt; object, used to create a &lt;a href=&quot;shardingkey&quot;&gt;&lt;code&gt;ShardingKey&lt;/code&gt;&lt;/a&gt; with sub-keys of supported data types.</source>
          <target state="translated">从 &lt;code&gt;DataSource&lt;/code&gt; 或 &lt;code&gt;XADataSource&lt;/code&gt; 对象创建的构建器，用于创建具有受支持数据类型的子键的&lt;a href=&quot;shardingkey&quot;&gt; &lt;code&gt;ShardingKey&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="61d9e88e2b428c2193e3b6be7223e6a2534e5383" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;DataSource&lt;/code&gt; or &lt;code&gt;XADataSource&lt;/code&gt; object, used to create a &lt;a href=&quot;shardingkey&quot;&gt;&lt;code&gt;ShardingKey&lt;/code&gt;&lt;/a&gt; with sub-keys of supported data types. Implementations must support JDBCType.VARCHAR and may also support additional data types.</source>
          <target state="translated">从 &lt;code&gt;DataSource&lt;/code&gt; 或 &lt;code&gt;XADataSource&lt;/code&gt; 对象创建的构建器，用于创建具有受支持数据类型的子键的&lt;a href=&quot;shardingkey&quot;&gt; &lt;code&gt;ShardingKey&lt;/code&gt; &lt;/a&gt;。实现必须支持JDBCType.VARCHAR，并且还可能支持其他数据类型。</target>
        </trans-unit>
        <trans-unit id="c4bfe00bc2cd3b2a915143b2b25128ac3d505377" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;XADataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents.</source>
          <target state="translated">从 &lt;code&gt;XADataSource&lt;/code&gt; 对象创建的构建器，用于建立与 &lt;code&gt;data source&lt;/code&gt; 对象表示的数据库的连接。</target>
        </trans-unit>
        <trans-unit id="bd7714e68eb51e63c2d6f82ae5563dd469619854" translate="yes" xml:space="preserve">
          <source>A builder created from a &lt;code&gt;XADataSource&lt;/code&gt; object, used to establish a connection to the database that the &lt;code&gt;data source&lt;/code&gt; object represents. The connection properties that were specified for the &lt;code&gt;data source&lt;/code&gt; are used as the default values by the &lt;code&gt;XAConnectionBuilder&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;XADataSource&lt;/code&gt; 对象创建的构建器，用于建立与 &lt;code&gt;data source&lt;/code&gt; 对象表示的数据库的连接。 &lt;code&gt;XAConnectionBuilder&lt;/code&gt; 将为 &lt;code&gt;data source&lt;/code&gt; 指定的连接属性用作默认值。</target>
        </trans-unit>
        <trans-unit id="fd06f2bbd6f49b4bdcf7cba3b88e386982cbd5ce" translate="yes" xml:space="preserve">
          <source>A builder for building &lt;a href=&quot;moduledescriptor&quot;&gt;&lt;code&gt;ModuleDescriptor&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">用于构建&lt;a href=&quot;moduledescriptor&quot;&gt; &lt;code&gt;ModuleDescriptor&lt;/code&gt; &lt;/a&gt;对象的生成器。</target>
        </trans-unit>
        <trans-unit id="bfe1209556db202095f679c78205318316cc3c7f" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;aclentry&quot;&gt;&lt;code&gt;AclEntry&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">建设者&lt;a href=&quot;aclentry&quot;&gt; &lt;code&gt;AclEntry&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="48657716ecde9cf1aa0386b562b3c7f6b1e93571" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;httpclient&quot;&gt;HTTP Clients&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httpclient&quot;&gt;HTTP客户端&lt;/a&gt;的构建器。</target>
        </trans-unit>
        <trans-unit id="9c1d56acb9250faa10dd305af9b2a71d1a6d125d" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;httprequest&quot;&gt;HTTP requests&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;httprequest&quot;&gt;HTTP请求&lt;/a&gt;的构建器。</target>
        </trans-unit>
        <trans-unit id="3cd01e0b6f4639058df49a2a83a3afc3c4502df0" translate="yes" xml:space="preserve">
          <source>A builder of &lt;a href=&quot;websocket&quot;&gt;WebSocket Clients&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;websocket&quot;&gt;WebSocket客户端&lt;/a&gt;的构建器。</target>
        </trans-unit>
        <trans-unit id="74c899729de99eee302f7445e3e0184e12bcf2d5" translate="yes" xml:space="preserve">
          <source>A built-in linear RGB color space.</source>
          <target state="translated">内置线性RGB色彩空间。</target>
        </trans-unit>
        <trans-unit id="5d5e7e43d68c574ca0b4fa5b84daf4afb013ec4f" translate="yes" xml:space="preserve">
          <source>A built-in linear RGB color space. This space is based on the same RGB primaries as &lt;code&gt;CS_sRGB&lt;/code&gt;, but has a linear tone reproduction curve.</source>
          <target state="translated">内置的线性RGB色彩空间。该空间基于与 &lt;code&gt;CS_sRGB&lt;/code&gt; 相同的RGB主色，但是具有线性色调再现曲线。</target>
        </trans-unit>
        <trans-unit id="0062b3fcd663e4e029d1ea6f304a146815cd4949" translate="yes" xml:space="preserve">
          <source>A built-in linear RGB color space. This space is based on the same RGB primaries as CS_sRGB, but has a linear tone reproduction curve.</source>
          <target state="translated">一个内置的线性RGB色彩空间。该空间基于与CS_sRGB相同的RGB原色,但具有线性色调再现曲线。</target>
        </trans-unit>
        <trans-unit id="30c3cd71c2aa594ef9ceaa865aafe8177481a872" translate="yes" xml:space="preserve">
          <source>A byte array containing the complete message</source>
          <target state="translated">一个包含完整信息的字节数组</target>
        </trans-unit>
        <trans-unit id="2fdf2d1cb3dfe2091e6c1d8bd86c78745f1e654c" translate="yes" xml:space="preserve">
          <source>A byte array that contains the profile data.</source>
          <target state="translated">一个包含配置文件数据的字节数组。</target>
        </trans-unit>
        <trans-unit id="1c29cf60f4f20b273d6f101f890b7459c68d9951" translate="yes" xml:space="preserve">
          <source>A byte array that contains the tagged data element. Returns &lt;code&gt;null&lt;/code&gt; if the specified tag doesn't exist.</source>
          <target state="translated">包含标记的数据元素的字节数组。如果指定的标记不存在，则返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbc9cc88f9018e37e4137ac516b27f389f5eccd6" translate="yes" xml:space="preserve">
          <source>A byte buffer can be allocated as a &lt;a href=&quot;bytebuffer#direct&quot;&gt; &lt;i&gt;direct&lt;/i&gt;&lt;/a&gt; buffer, in which case the Java virtual machine will make a best effort to perform native I/O operations directly upon it.</source>
          <target state="translated">可以将字节缓冲区分配为&lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;直接&lt;/i&gt;&lt;/a&gt;缓冲区，在这种情况下，Java虚拟机将尽最大努力直接在其上执行本机I / O操作。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="0fe13aa63192114f12b3a8e344ea4d7117f95759" translate="yes" xml:space="preserve">
          <source>A byte buffer can be created by &lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;&lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory, in which case a few additional file-related operations defined in the &lt;a href=&quot;mappedbytebuffer&quot;&gt;&lt;code&gt;MappedByteBuffer&lt;/code&gt;&lt;/a&gt; class are available.</source>
          <target state="translated">可以通过&lt;a href=&quot;channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt; &lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;文件的区域直接&lt;i&gt;映射&lt;/i&gt;到内存中来创建字节缓冲区，在这种情况下，可以使用&lt;a href=&quot;mappedbytebuffer&quot;&gt; &lt;code&gt;MappedByteBuffer&lt;/code&gt; &lt;/a&gt;类中定义的一些其他与文件相关的操作。</target>
        </trans-unit>
        <trans-unit id="3c5f814251ab0cac9e1798c421a7d52224d57054" translate="yes" xml:space="preserve">
          <source>A byte buffer can be created by &lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; a region of a file directly into memory, in which case a few additional file-related operations defined in the &lt;a href=&quot;mappedbytebuffer&quot;&gt;&lt;code&gt;MappedByteBuffer&lt;/code&gt;&lt;/a&gt; class are available.</source>
          <target state="translated">可以通过&lt;a href=&quot;channels/filechannel#map-java.nio.channels.FileChannel.MapMode-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;mapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;文件的区域直接&lt;i&gt;映射&lt;/i&gt;到内存来创建字节缓冲区，在这种情况下，可以使用&lt;a href=&quot;mappedbytebuffer&quot;&gt; &lt;code&gt;MappedByteBuffer&lt;/code&gt; &lt;/a&gt;类中定义的一些其他与文件相关的操作。</target>
        </trans-unit>
        <trans-unit id="2eb05d66e3c7c4442b0b85a159ad1f90174e0af1" translate="yes" xml:space="preserve">
          <source>A byte buffer containing the contents of the resource or an empty &lt;code&gt;Optional&lt;/code&gt; if not found</source>
          <target state="translated">包含资源内容的字节缓冲区；如果未找到，则为空 &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cae5d7e92a952c9f183b9ac23cef0349767f9c4d" translate="yes" xml:space="preserve">
          <source>A byte buffer containing the encoded characters</source>
          <target state="translated">一个包含编码字符的字节缓冲区。</target>
        </trans-unit>
        <trans-unit id="2b25d877daf83d19cc13a61ba16bd3ff131bbe6a" translate="yes" xml:space="preserve">
          <source>A byte buffer is either</source>
          <target state="translated">一个字节缓冲区可以是</target>
        </trans-unit>
        <trans-unit id="8fe357f9c74421b793e6def02c6dd8e017a504dd" translate="yes" xml:space="preserve">
          <source>A byte buffer is not comparable to any other type of object.</source>
          <target state="translated">一个字节缓冲区不能与任何其他类型的对象相比。</target>
        </trans-unit>
        <trans-unit id="4c8399125540b20bdb02f8e90db06eefe52cd4ac" translate="yes" xml:space="preserve">
          <source>A byte buffer is not equal to any other type of object.</source>
          <target state="translated">一个字节缓冲区不等于任何其他类型的对象。</target>
        </trans-unit>
        <trans-unit id="928e7d1b2622daaff3134713be2904a81648a760" translate="yes" xml:space="preserve">
          <source>A byte buffer mapped to a file</source>
          <target state="translated">一个映射到文件的字节缓冲区。</target>
        </trans-unit>
        <trans-unit id="25b8cb5ca683a1699796ded61ded855a5cee13da" translate="yes" xml:space="preserve">
          <source>A byte buffer provides access to its content as either a heterogeneous or homogeneous sequence of &lt;a href=&quot;bytebuffer#bin&quot;&gt;&lt;i&gt;binary data&lt;/i&gt;&lt;/a&gt; of any non-boolean primitive type, in either big-endian or little-endian &lt;a href=&quot;byteorder&quot;&gt;byte order&lt;/a&gt;.</source>
          <target state="translated">字节缓冲区以大端&lt;a href=&quot;byteorder&quot;&gt;字节&lt;/a&gt;序或小端字节序的形式提供对任何非布尔基元类型的&lt;a href=&quot;bytebuffer#bin&quot;&gt;&lt;i&gt;二进制数据&lt;/i&gt;&lt;/a&gt;的异构或同质序列的访问。</target>
        </trans-unit>
        <trans-unit id="0b52ba3ab4c5d7deeda40a8723f5b43184feaa37" translate="yes" xml:space="preserve">
          <source>A byte buffer provides access to its content as either a heterogeneous or homogeneous sequence of &lt;a href=&quot;bytebuffer#bin&quot;&gt;binary data&lt;/a&gt; of any non-boolean primitive type, in either big-endian or little-endian &lt;a href=&quot;byteorder&quot;&gt;byte order&lt;/a&gt;.</source>
          <target state="translated">字节缓冲区以大端&lt;a href=&quot;byteorder&quot;&gt;字节&lt;/a&gt;序或小端字节序的形式提供对任何非布尔基元类型的&lt;a href=&quot;bytebuffer#bin&quot;&gt;二进制数据&lt;/a&gt;的异构或同质序列的访问。</target>
        </trans-unit>
        <trans-unit id="89b17475be8ed8b74d9824ee945925183e8c4b46" translate="yes" xml:space="preserve">
          <source>A byte buffer.</source>
          <target state="translated">一个字节缓冲区。</target>
        </trans-unit>
        <trans-unit id="88bcbe82898f6c96d90acd1c56b5987f6f08ad0f" translate="yes" xml:space="preserve">
          <source>A byte channel that maintains a current</source>
          <target state="translated">一个字节通道,保持了当前的</target>
        </trans-unit>
        <trans-unit id="845ad2cb4762b64991c6e2d6e95d59612deaf435" translate="yes" xml:space="preserve">
          <source>A calendar system is defined by the &lt;a href=&quot;chronology&quot;&gt;&lt;code&gt;Chronology&lt;/code&gt;&lt;/a&gt; interface, while a date in a calendar system is defined by the &lt;a href=&quot;chronolocaldate&quot;&gt;&lt;code&gt;ChronoLocalDate&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">日历系统由&lt;a href=&quot;chronology&quot;&gt; &lt;code&gt;Chronology&lt;/code&gt; &lt;/a&gt;界面定义，而日历系统中的日期则由&lt;a href=&quot;chronolocaldate&quot;&gt; &lt;code&gt;ChronoLocalDate&lt;/code&gt; &lt;/a&gt;界面定义。</target>
        </trans-unit>
        <trans-unit id="ce4b54aff35ccf9905033e61ef22da804a259a1e" translate="yes" xml:space="preserve">
          <source>A calendar system, used to organize and identify dates.</source>
          <target state="translated">一种日历系统,用于组织和识别日期。</target>
        </trans-unit>
        <trans-unit id="b8c17792b7dc5b2e841edb56de9cd4dc47f658c5" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;checkPermission&lt;/code&gt; with &lt;code&gt;java.security.AllPermission&lt;/code&gt; does not result in a SecurityException.</source>
          <target state="translated">使用 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 调用 &lt;code&gt;checkPermission&lt;/code&gt; 不会导致SecurityException。</target>
        </trans-unit>
        <trans-unit id="0153f14fc38bde22e0a2e72d882599272b17331f" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;forName(&quot;X&quot;)&lt;/code&gt; causes the class named &lt;code&gt;X&lt;/code&gt; to be initialized.</source>
          <target state="translated">调用 &lt;code&gt;forName(&quot;X&quot;)&lt;/code&gt; 会导致初始化名为 &lt;code&gt;X&lt;/code&gt; 的类。</target>
        </trans-unit>
        <trans-unit id="ccc6dca760accd0b2d5c4147af5d2b22b5e1ceaa" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;nn.getNumber()&lt;/code&gt; will then return &lt;b&gt;5&lt;/b&gt;.</source>
          <target state="translated">调用 &lt;code&gt;nn.getNumber()&lt;/code&gt; 将返回&lt;b&gt;5&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="acc3befecff36defc80810488e5d4f79be41dab2" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;setOriginalRow&lt;/code&gt; is irreversible.</source>
          <target state="translated">对 &lt;code&gt;setOriginalRow&lt;/code&gt; 的调用是不可逆的。</target>
        </trans-unit>
        <trans-unit id="5d9747712d9c7476a00f6fa1bc5816c855acb2f5" translate="yes" xml:space="preserve">
          <source>A call to &lt;code&gt;start&lt;/code&gt; on a thread</source>
          <target state="translated">调用以 &lt;code&gt;start&lt;/code&gt; 线程</target>
        </trans-unit>
        <trans-unit id="fb38ea61db2c8d9a29ac9db67146e75701ab7b75" translate="yes" xml:space="preserve">
          <source>A call to plain &lt;code&gt;invoke&lt;/code&gt; works the same as a call to &lt;code&gt;invokeExact&lt;/code&gt;, if the symbolic type descriptor specified by the caller exactly matches the method handle's own type. If there is a type mismatch, &lt;code&gt;invoke&lt;/code&gt; attempts to adjust the type of the receiving method handle, as if by a call to &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;, to obtain an exactly invokable method handle &lt;code&gt;M2&lt;/code&gt;. This allows a more powerful negotiation of method type between caller and callee.</source>
          <target state="translated">如果调用方指定的符号类型描述符与方法句柄自身的类型完全匹配，则对纯 &lt;code&gt;invoke&lt;/code&gt; 的调用与对 &lt;code&gt;invokeExact&lt;/code&gt; 的调用相同。如果类型不匹配，则 &lt;code&gt;invoke&lt;/code&gt; 尝试调整接收方法句柄的类型，就像通过调用&lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; 一样&lt;/a&gt;，以获得完全可调用的方法句柄 &lt;code&gt;M2&lt;/code&gt; 。这样可以在调用方和被调用方之间进行更强大的方法类型协商。</target>
        </trans-unit>
        <trans-unit id="a1273885f9474307edbb63fe4336b5043edf79d1" translate="yes" xml:space="preserve">
          <source>A call to plain &lt;code&gt;invoke&lt;/code&gt; works the same as a call to &lt;code&gt;invokeExact&lt;/code&gt;, if the symbolic type descriptor specified by the caller exactly matches the method handle's own type. If there is a type mismatch, &lt;code&gt;invoke&lt;/code&gt; attempts to adjust the type of the receiving method handle, as if by a call to &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;, to obtain an exactly invokable method handle &lt;code&gt;M2&lt;/code&gt;. This allows a more powerful negotiation of method type between caller and callee.</source>
          <target state="translated">如果调用方指定的符号类型描述符与方法句柄自己的类型完全匹配，则对纯 &lt;code&gt;invoke&lt;/code&gt; 的调用与对 &lt;code&gt;invokeExact&lt;/code&gt; 的调用相同。如果存在类型不匹配，则 &lt;code&gt;invoke&lt;/code&gt; 尝试调整接收方法句柄的类型，就像通过调用&lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; 一样&lt;/a&gt;，以获得完全可调用的方法句柄 &lt;code&gt;M2&lt;/code&gt; 。这样可以在调用方和被调用方之间进行更强大的方法类型协商。</target>
        </trans-unit>
        <trans-unit id="a17c6a5af8605b07ab534ab287ceff2fa43816d7" translate="yes" xml:space="preserve">
          <source>A call to the method &lt;code&gt;getParams&lt;/code&gt; returns the values stored in the &lt;code&gt;Hashtable&lt;/code&gt; object as an array of &lt;code&gt;Object&lt;/code&gt; instances. An element in this array may be a simple &lt;code&gt;Object&lt;/code&gt; instance or an array (which is a type of &lt;code&gt;Object&lt;/code&gt;). The particular setter method used determines whether an element in this array is an &lt;code&gt;Object&lt;/code&gt; or an array.</source>
          <target state="translated">对方法 &lt;code&gt;getParams&lt;/code&gt; 的调用返回作为 &lt;code&gt;Object&lt;/code&gt; 实例数组存储在 &lt;code&gt;Hashtable&lt;/code&gt; 对象中的值。此数组中的元素可以是简单的 &lt;code&gt;Object&lt;/code&gt; 实例，也可以是数组（这是 &lt;code&gt;Object&lt;/code&gt; 的类型）。使用的特定的setter方法确定此数组中的元素是 &lt;code&gt;Object&lt;/code&gt; 还是数组。</target>
        </trans-unit>
        <trans-unit id="50587dcf47bbbd5d977c6c68d1dba4482e20af75" translate="yes" xml:space="preserve">
          <source>A call to the method &lt;code&gt;nextConflict&lt;/code&gt; will implicitly close an input stream if one is open and will clear the &lt;code&gt;SyncResolver&lt;/code&gt; object's warning chain.</source>
          <target state="translated">如果打开了 &lt;code&gt;nextConflict&lt;/code&gt; 方法，则它的调用将隐式关闭输入流，并清除 &lt;code&gt;SyncResolver&lt;/code&gt; 对象的警告链。</target>
        </trans-unit>
        <trans-unit id="518e192efe315dd3fb9a9fff3c71548a6a80b7d0" translate="yes" xml:space="preserve">
          <source>A call to the method &lt;code&gt;previousConflict&lt;/code&gt; will implicitly close an input stream if one is open and will clear the &lt;code&gt;SyncResolver&lt;/code&gt; object's warning chain.</source>
          <target state="translated">调用方法 &lt;code&gt;previousConflict&lt;/code&gt; 会隐式关闭输入流（如果打开的话），并会清除 &lt;code&gt;SyncResolver&lt;/code&gt; 对象的警告链。</target>
        </trans-unit>
        <trans-unit id="634085829af74ce806f9f2d387d3f5c712eaf824" translate="yes" xml:space="preserve">
          <source>A call to this method resets this &lt;code&gt;Mac&lt;/code&gt; object to the state it was in when previously initialized via a call to &lt;code&gt;init(Key)&lt;/code&gt; or &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt;. That is, the object is reset and available to generate another MAC from the same key, if desired, via new calls to &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;doFinal&lt;/code&gt;. (In order to reuse this &lt;code&gt;Mac&lt;/code&gt; object with a different key, it must be reinitialized via a call to &lt;code&gt;init(Key)&lt;/code&gt; or &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt;.</source>
          <target state="translated">对此方法的调用会将此 &lt;code&gt;Mac&lt;/code&gt; 对象重置为先前通过调用 &lt;code&gt;init(Key)&lt;/code&gt; 或 &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt; 初始化时的状态。也就是说，如果需要，可以通过对 &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;doFinal&lt;/code&gt; 的新调用来重置该对象并使其从同一密钥生成另一个MAC 。 （为了通过另一个键重复使用此 &lt;code&gt;Mac&lt;/code&gt; 对象，必须通过调用 &lt;code&gt;init(Key)&lt;/code&gt; 或 &lt;code&gt;init(Key, AlgorithmParameterSpec)&lt;/code&gt; 重新初始化它。</target>
        </trans-unit>
        <trans-unit id="4886ead2dadc8153d8df2ce75f91333caf2a6224" translate="yes" xml:space="preserve">
          <source>A call to this method resets this signature object to the state it was in when previously initialized for signing via a call to &lt;code&gt;initSign(PrivateKey)&lt;/code&gt;. That is, the object is reset and available to generate another signature from the same signer, if desired, via new calls to &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;sign&lt;/code&gt;.</source>
          <target state="translated">对此方法的调用会将此签名对象重置为先前通过调用 &lt;code&gt;initSign(PrivateKey)&lt;/code&gt; 进行初始化以进行签名时的状态。也就是说，如果需要，可以通过新的 &lt;code&gt;update&lt;/code&gt; 和 &lt;code&gt;sign&lt;/code&gt; 调用重置该对象并使其从同一签名者生成另一个签名。</target>
        </trans-unit>
        <trans-unit id="76fc154e54203ae305cc7d9a3ee179a09214b472" translate="yes" xml:space="preserve">
          <source>A call to this method resets this signature object to the state it was in when previously initialized for verification via a call to &lt;code&gt;initVerify(PublicKey)&lt;/code&gt;. That is, the object is reset and available to verify another signature from the identity whose public key was specified in the call to &lt;code&gt;initVerify&lt;/code&gt;.</source>
          <target state="translated">对此方法的调用会将此签名对象重置为先前通过调用 &lt;code&gt;initVerify(PublicKey)&lt;/code&gt; 进行初始化以进行验证的状态。即，该对象被重置，并且可以用来从标识中验证另一个签名，该标识的身份是在对 &lt;code&gt;initVerify&lt;/code&gt; 的调用中指定的。</target>
        </trans-unit>
        <trans-unit id="3c3f413a455df6c2e8fd25015d50c0b20ad9ebe5" translate="yes" xml:space="preserve">
          <source>A call to this method will return each outstanding task exactly once.</source>
          <target state="translated">对该方法的调用将准确地返回每个未完成的任务一次。</target>
        </trans-unit>
        <trans-unit id="eea4bd5a33950b5798360bfeb8fc27d91943934a" translate="yes" xml:space="preserve">
          <source>A callback that will be called exactly once after the Spi class has been instantiated and registered in a &lt;code&gt;ServiceRegistry&lt;/code&gt;.</source>
          <target state="translated">实例化Spi类并将其注册到 &lt;code&gt;ServiceRegistry&lt;/code&gt; 中之后，将仅调用一次回调。</target>
        </trans-unit>
        <trans-unit id="73594faaa9514a1c74b8c1749cd461ade7dd464c" translate="yes" xml:space="preserve">
          <source>A callback that will be called exactly once after the Spi class has been instantiated and registered in a &lt;code&gt;ServiceRegistry&lt;/code&gt;. This may be used to verify that the environment is suitable for this service, for example that native libraries can be loaded. If the service cannot function in the environment where it finds itself, it should deregister itself from the registry.</source>
          <target state="translated">在Spi类已实例化并注册到 &lt;code&gt;ServiceRegistry&lt;/code&gt; 中之后，将仅调用一次回调。这可用于验证环境是否适合此服务，例如可以加载本机库。如果该服务无法在其找到的环境中运行，则应从注册表中注销自己。</target>
        </trans-unit>
        <trans-unit id="d9e488bdf35f09c0f0d09e9364cbcf74bf1848b2" translate="yes" xml:space="preserve">
          <source>A callback that will be whenever the Spi class has been deregistered from a &lt;code&gt;ServiceRegistry&lt;/code&gt;.</source>
          <target state="translated">从 &lt;code&gt;ServiceRegistry&lt;/code&gt; 注销Spi类时将发生的回调。</target>
        </trans-unit>
        <trans-unit id="0b158ecbe2cce58e46d356dc6dbe9612a22819c5" translate="yes" xml:space="preserve">
          <source>A caller can be marked as being &quot;privileged&quot; (see &lt;a href=&quot;#doPrivileged(java.security.PrivilegedAction)&quot;&gt;&lt;code&gt;doPrivileged&lt;/code&gt;&lt;/a&gt; and below). When making access control decisions, the &lt;code&gt;checkPermission&lt;/code&gt; method stops checking if it reaches a caller that was marked as &quot;privileged&quot; via a &lt;code&gt;doPrivileged&lt;/code&gt; call without a context argument (see below for information about a context argument). If that caller's domain has the specified permission and at least one limiting permission argument (if any) implies the requested permission, no further checking is done and &lt;code&gt;checkPermission&lt;/code&gt; returns quietly, indicating that the requested access is allowed. If that domain does not have the specified permission, an exception is thrown, as usual. If the caller's domain had the specified permission but it was not implied by any limiting permission arguments given in the call to &lt;code&gt;doPrivileged&lt;/code&gt; then the permission checking continues until there are no more callers or another &lt;code&gt;doPrivileged&lt;/code&gt; call matches the requested permission and returns normally.</source>
          <target state="translated">可以将呼叫者标记为&amp;ldquo;特权&amp;rdquo;（请参阅&lt;a href=&quot;#doPrivileged(java.security.PrivilegedAction)&quot;&gt; &lt;code&gt;doPrivileged&lt;/code&gt; &lt;/a&gt;及以下内容）。在做出访问控制决策时， &lt;code&gt;checkPermission&lt;/code&gt; 方法停止检查是否通过没有上下文参数的 &lt;code&gt;doPrivileged&lt;/code&gt; 调用到达了被标记为&amp;ldquo;特权&amp;rdquo;的调用方（有关上下文参数的信息，请参见下文）。如果该调用者的域具有指定的许可权，并且至少一个限制许可权参数（如果有）暗含请求的许可权，则不会进行进一步的检查，并且 &lt;code&gt;checkPermission&lt;/code&gt; 静默返回，指示允许所请求的访问。如果该域没有指定的权限，则照常抛出异常。如果调用方的域具有指定的权限，但是对 &lt;code&gt;doPrivileged&lt;/code&gt; 的调用中没有提供任何限制权限参数，则表示该域不隐含，然后，将继续进行权限检查，直到不再有任何调用者或另一个 &lt;code&gt;doPrivileged&lt;/code&gt; 调用与请求的权限匹配并正常返回为止。</target>
        </trans-unit>
        <trans-unit id="0862bd54496a4757c9e9f164297b979e3e8f8ea7" translate="yes" xml:space="preserve">
          <source>A caller can be marked as being &quot;privileged&quot; (see &lt;a href=&quot;accesscontroller#doPrivileged-java.security.PrivilegedAction-&quot;&gt;&lt;code&gt;doPrivileged&lt;/code&gt;&lt;/a&gt; and below). When making access control decisions, the &lt;code&gt;checkPermission&lt;/code&gt; method stops checking if it reaches a caller that was marked as &quot;privileged&quot; via a &lt;code&gt;doPrivileged&lt;/code&gt; call without a context argument (see below for information about a context argument). If that caller's domain has the specified permission and at least one limiting permission argument (if any) implies the requested permission, no further checking is done and &lt;code&gt;checkPermission&lt;/code&gt; returns quietly, indicating that the requested access is allowed. If that domain does not have the specified permission, an exception is thrown, as usual. If the caller's domain had the specified permission but it was not implied by any limiting permission arguments given in the call to &lt;code&gt;doPrivileged&lt;/code&gt; then the permission checking continues until there are no more callers or another &lt;code&gt;doPrivileged&lt;/code&gt; call matches the requested permission and returns normally.</source>
          <target state="translated">可以将呼叫者标记为&amp;ldquo;特权&amp;rdquo;（请参阅&lt;a href=&quot;accesscontroller#doPrivileged-java.security.PrivilegedAction-&quot;&gt; &lt;code&gt;doPrivileged&lt;/code&gt; &lt;/a&gt;及以下内容）。在做出访问控制决策时， &lt;code&gt;checkPermission&lt;/code&gt; 方法停止检查是否通过没有上下文参数的 &lt;code&gt;doPrivileged&lt;/code&gt; 调用到达了被标记为&amp;ldquo;特权&amp;rdquo;的调用方（有关上下文参数的信息，请参见下文）。如果该调用方的域具有指定的许可权，并且至少一个限制许可权参数（如果有）暗含请求的许可权，则不会进行进一步的检查，并且 &lt;code&gt;checkPermission&lt;/code&gt; 静默返回，指示允许请求的访问。如果该域没有指定的权限，则照常抛出异常。如果调用方的域具有指定的权限，但是对 &lt;code&gt;doPrivileged&lt;/code&gt; 的调用中未提供任何限制权限参数，则该域不隐含该权限，然后继续进行权限检查，直到不再有任何调用者或另一个 &lt;code&gt;doPrivileged&lt;/code&gt; 调用与请求的权限匹配并正常返回为止。</target>
        </trans-unit>
        <trans-unit id="f4f31ba8f0b9f51355a1e48264e3f68465bf471d" translate="yes" xml:space="preserve">
          <source>A caller can use the returned value to find out what features this &lt;code&gt;SecureRandom&lt;/code&gt; supports.</source>
          <target state="translated">调用者可以使用返回的值来查找此 &lt;code&gt;SecureRandom&lt;/code&gt; 支持的功能。</target>
        </trans-unit>
        <trans-unit id="8c16eb7940727c4a225b9b8e6f19ebba4d1dbab5" translate="yes" xml:space="preserve">
          <source>A caller creates a &lt;code&gt;JarSigner.Builder&lt;/code&gt; object, (optionally) sets some parameters, and calls &lt;a href=&quot;jarsigner.builder#build()&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;JarSigner&lt;/code&gt; object. This &lt;code&gt;JarSigner&lt;/code&gt; object can then be used to sign a jar file.</source>
          <target state="translated">调用者创建一个 &lt;code&gt;JarSigner.Builder&lt;/code&gt; 对象，（可选）设置一些参数，然后调用&lt;a href=&quot;jarsigner.builder#build()&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt;创建一个 &lt;code&gt;JarSigner&lt;/code&gt; 对象。然后，可以使用此 &lt;code&gt;JarSigner&lt;/code&gt; 对象对jar文件进行签名。</target>
        </trans-unit>
        <trans-unit id="e4753d9b632b33c1a0abdaa51b4b703409680b9b" translate="yes" xml:space="preserve">
          <source>A caller obtains a &lt;code&gt;SecureRandom&lt;/code&gt; instance via the no-argument constructor or one of the &lt;code&gt;getInstance&lt;/code&gt; methods. For example:</source>
          <target state="translated">调用者通过无参数构造函数或 &lt;code&gt;getInstance&lt;/code&gt; 方法之一获取 &lt;code&gt;SecureRandom&lt;/code&gt; 实例。例如：</target>
        </trans-unit>
        <trans-unit id="4f95088e3230b86cb9b7c79d72fd9093503b3392" translate="yes" xml:space="preserve">
          <source>A caller obtains a SecureRandom instance via the no-argument constructor or one of the &lt;code&gt;getInstance&lt;/code&gt; methods:</source>
          <target state="translated">调用方通过无参数构造函数或 &lt;code&gt;getInstance&lt;/code&gt; 方法之一获取SecureRandom实例：</target>
        </trans-unit>
        <trans-unit id="3c51b9f09fa6bf9ea50aeda8b949600008199a46" translate="yes" xml:space="preserve">
          <source>A caller requires permissions to access the Credentials in the returned &lt;code&gt;Set&lt;/code&gt;, or to modify the &lt;code&gt;Set&lt;/code&gt; itself. A &lt;code&gt;SecurityException&lt;/code&gt; is thrown if the caller does not have the proper permissions.</source>
          <target state="translated">调用者需要权限才能访问返回的 &lt;code&gt;Set&lt;/code&gt; 中的凭据，或修改 &lt;code&gt;Set&lt;/code&gt; 本身。一个 &lt;code&gt;SecurityException&lt;/code&gt; 如果调用者没有适当的权限被抛出。</target>
        </trans-unit>
        <trans-unit id="211590620b98a755e675671fd16ab96437b6cf06" translate="yes" xml:space="preserve">
          <source>A caller, specified as a &lt;code&gt;Lookup&lt;/code&gt; object, in module &lt;code&gt;M1&lt;/code&gt; is allowed to do deep reflection on module &lt;code&gt;M2&lt;/code&gt; and package of the target class if and only if all of the following conditions are &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">呼叫者，指定为 &lt;code&gt;Lookup&lt;/code&gt; 对象，在模块 &lt;code&gt;M1&lt;/code&gt; 被允许做模块深反射 &lt;code&gt;M2&lt;/code&gt; 目标类的包并当且仅当满足以下所有条件都为 &lt;code&gt;true&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="1e48b60ad6e578809d6b962cd5312d6a4b206220" translate="yes" xml:space="preserve">
          <source>A cancellable asynchronous computation.</source>
          <target state="translated">一种可取消的异步计算。</target>
        </trans-unit>
        <trans-unit id="67943adf19495c6479d17dbaae4d893b5cc515c6" translate="yes" xml:space="preserve">
          <source>A cancellable asynchronous computation. This class provides a base implementation of &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;, with methods to start and cancel a computation, query to see if the computation is complete, and retrieve the result of the computation. The result can only be retrieved when the computation has completed; the &lt;code&gt;get&lt;/code&gt; methods will block if the computation has not yet completed. Once the computation has completed, the computation cannot be restarted or cancelled (unless the computation is invoked using &lt;a href=&quot;#runAndReset()&quot;&gt;&lt;code&gt;runAndReset()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">可取消的异步计算。此类提供&lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;的基本实现，其中包含启动和取消计算，查询以查看计算是否完成以及检索计算结果的方法。只有在计算完成后才能检索结果；如果计算尚未完成，则 &lt;code&gt;get&lt;/code&gt; 方法将阻塞。一旦计算完成，就不能重新启动或取消计算（除非使用&lt;a href=&quot;#runAndReset()&quot;&gt; &lt;code&gt;runAndReset()&lt;/code&gt; &lt;/a&gt;调用计算）。</target>
        </trans-unit>
        <trans-unit id="8a206c9c1ebd0c5daa3ba1ae87da2f6428b62838" translate="yes" xml:space="preserve">
          <source>A cancellable asynchronous computation. This class provides a base implementation of &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt;, with methods to start and cancel a computation, query to see if the computation is complete, and retrieve the result of the computation. The result can only be retrieved when the computation has completed; the &lt;code&gt;get&lt;/code&gt; methods will block if the computation has not yet completed. Once the computation has completed, the computation cannot be restarted or cancelled (unless the computation is invoked using &lt;a href=&quot;futuretask#runAndReset--&quot;&gt;&lt;code&gt;runAndReset()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">可取消的异步计算。此类提供&lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt;的基本实现，其中包含启动和取消计算，查询以查看计算是否完成以及检索计算结果的方法。只有在计算完成后才能检索结果；如果计算尚未完成，则 &lt;code&gt;get&lt;/code&gt; 方法将阻塞。一旦计算完成，就不能重新启动或取消计算（除非使用&lt;a href=&quot;futuretask#runAndReset--&quot;&gt; &lt;code&gt;runAndReset()&lt;/code&gt; &lt;/a&gt;调用计算）。</target>
        </trans-unit>
        <trans-unit id="0bde49251f486239d86c6636b6fddc644044500f" translate="yes" xml:space="preserve">
          <source>A candidate for continuation of the given user's input.</source>
          <target state="translated">对给定用户的输入进行延续的候选。</target>
        </trans-unit>
        <trans-unit id="aef21ff5141b0e8f3b8b1c52a6f43cb4c41bd468" translate="yes" xml:space="preserve">
          <source>A canonical Lookup object that wraps &lt;a href=&quot;../../../../../java.base/java/lang/invoke/methodhandles#publicLookup()&quot;&gt;&lt;code&gt;MethodHandles.publicLookup()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">一个包装了&lt;a href=&quot;../../../../../java.base/java/lang/invoke/methodhandles#publicLookup()&quot;&gt; &lt;code&gt;MethodHandles.publicLookup()&lt;/code&gt; 的&lt;/a&gt;规范化Lookup对象。</target>
        </trans-unit>
        <trans-unit id="b21dfa611af8d9c0df34407a03e5ebd1c6a33f75" translate="yes" xml:space="preserve">
          <source>A canonical pathname is both absolute and unique. The precise definition of canonical form is system-dependent. This method first converts this pathname to absolute form if necessary, as if by invoking the &lt;a href=&quot;#getAbsolutePath()&quot;&gt;&lt;code&gt;getAbsolutePath()&lt;/code&gt;&lt;/a&gt; method, and then maps it to its unique form in a system-dependent way. This typically involves removing redundant names such as &lt;code&gt;&quot;.&quot;&lt;/code&gt; and &lt;code&gt;&quot;..&quot;&lt;/code&gt; from the pathname, resolving symbolic links (on UNIX platforms), and converting drive letters to a standard case (on Microsoft Windows platforms).</source>
          <target state="translated">规范路径名是绝对的，也是唯一的。规范形式的精确定义取决于系统。如果需要，此方法首先将此路径名转换为绝对形式，就像通过调用&lt;a href=&quot;#getAbsolutePath()&quot;&gt; &lt;code&gt;getAbsolutePath()&lt;/code&gt; &lt;/a&gt;方法一样，然后以与系统有关的方式将其映射为其唯一形式。这通常涉及删除多余的名称，例如 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 从路径名开始），解析符号链接（在UNIX平台上），并将驱动器号转换为标准大小写（在Microsoft Windows平台上）。</target>
        </trans-unit>
        <trans-unit id="b24dd18062248073c34de95bfbf526897b131dd5" translate="yes" xml:space="preserve">
          <source>A canonical pathname is both absolute and unique. The precise definition of canonical form is system-dependent. This method first converts this pathname to absolute form if necessary, as if by invoking the &lt;a href=&quot;file#getAbsolutePath--&quot;&gt;&lt;code&gt;getAbsolutePath()&lt;/code&gt;&lt;/a&gt; method, and then maps it to its unique form in a system-dependent way. This typically involves removing redundant names such as &lt;code&gt;&quot;.&quot;&lt;/code&gt; and &lt;code&gt;&quot;..&quot;&lt;/code&gt; from the pathname, resolving symbolic links (on UNIX platforms), and converting drive letters to a standard case (on Microsoft Windows platforms).</source>
          <target state="translated">规范路径名是绝对的，也是唯一的。规范形式的精确定义取决于系统。如果需要，此方法首先将此路径名转换为绝对形式，就像通过调用&lt;a href=&quot;file#getAbsolutePath--&quot;&gt; &lt;code&gt;getAbsolutePath()&lt;/code&gt; &lt;/a&gt;方法一样，然后以与系统有关的方式将其映射为其唯一形式。这通常涉及删除多余的名称，例如 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;..&quot;&lt;/code&gt; 从路径名开始），解析符号链接（在UNIX平台上），并将驱动器号转换为标准大小写（在Microsoft Windows平台上）。</target>
        </trans-unit>
        <trans-unit id="81bf709141336beed8f753343474c99206c52e04" translate="yes" xml:space="preserve">
          <source>A capability-based lock with three modes for controlling read/write access.</source>
          <target state="translated">基于能力的锁,有三种模式控制读/写访问。</target>
        </trans-unit>
        <trans-unit id="3c2e4112d21cf12f2a7a271b9c964f9ff2328115" translate="yes" xml:space="preserve">
          <source>A capability-based lock with three modes for controlling read/write access. The state of a StampedLock consists of a version and mode. Lock acquisition methods return a stamp that represents and controls access with respect to a lock state; &quot;try&quot; versions of these methods may instead return the special value zero to represent failure to acquire access. Lock release and conversion methods require stamps as arguments, and fail if they do not match the state of the lock. The three modes are:</source>
          <target state="translated">一个基于能力的锁,有三种模式,用于控制读/写访问。StampedLock的状态由版本和模式组成。锁定获取方法返回一个代表并控制对锁状态的访问的印章;这些方法的 &quot;try &quot;版本可能会返回一个特殊的值0来代表获取访问失败。锁的释放和转换方法需要印章作为参数,如果它们不匹配锁的状态,则失败。这三种模式是</target>
        </trans-unit>
        <trans-unit id="b4c23c15c033507b435f0f0a354dbc2b8655d74c" translate="yes" xml:space="preserve">
          <source>A capturing group can also be assigned a &quot;name&quot;, a &lt;code&gt;named-capturing group&lt;/code&gt;, and then be back-referenced later by the &quot;name&quot;. Group names are composed of the following characters. The first character must be a &lt;code&gt;letter&lt;/code&gt;.</source>
          <target state="translated">还可以为捕获组分配一个&amp;ldquo;名称&amp;rdquo;，一个 &lt;code&gt;named-capturing group&lt;/code&gt; ，然后稍后再通过&amp;ldquo;名称&amp;rdquo;进行反向引用。组名由以下字符组成。第一个字符必须是 &lt;code&gt;letter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cff8bffd93ff124f465e2fd1a81f11d6fce23cb2" translate="yes" xml:space="preserve">
          <source>A carriage return (CR) character standing by itself means &quot;go to column 1 of the next line.&quot;</source>
          <target state="translated">回车(CR)字符本身表示 &quot;转到下一行的第1列&quot;。</target>
        </trans-unit>
        <trans-unit id="c9d0a280ee3997ec1b9b09288f8793052e7adc66" translate="yes" xml:space="preserve">
          <source>A carriage-return character followed immediately by a newline character (&lt;code&gt;&quot;\r\n&quot;&lt;/code&gt;),</source>
          <target state="translated">回车符，后跟换行符（ &lt;code&gt;&quot;\r\n&quot;&lt;/code&gt; ），</target>
        </trans-unit>
        <trans-unit id="7d281acac654e42af39e1b04fe639f300961197b" translate="yes" xml:space="preserve">
          <source>A catalog can be used in two situations:</source>
          <target state="translated">目录可以在两种情况下使用。</target>
        </trans-unit>
        <trans-unit id="f9fd75cd2b59eced2f9f99a3d712bf466288bc82" translate="yes" xml:space="preserve">
          <source>A catalog is an XML file that contains a root &lt;code&gt;catalog&lt;/code&gt; entry with a list of catalog entries. The entries can also be grouped with a &lt;code&gt;group&lt;/code&gt; entry. The catalog and group entries may specify &lt;code&gt;prefer&lt;/code&gt; and &lt;code&gt;xml:base&lt;/code&gt; attributes that set preference of public or system type of entries and base URI to resolve relative URIs.</source>
          <target state="translated">目录是一个XML文件，其中包含带有 &lt;code&gt;catalog&lt;/code&gt; 条目列表的根目录条目。条目也可以与 &lt;code&gt;group&lt;/code&gt; 条目分组。目录和组条目可以指定 &lt;code&gt;prefer&lt;/code&gt; red和 &lt;code&gt;xml:base&lt;/code&gt; 属性，这些属性设置条目的公共或系统类型的首选项以及用于解析相对URI的基本URI。</target>
        </trans-unit>
        <trans-unit id="710bcf1312738b711a53e4482726a0d613afae7f" translate="yes" xml:space="preserve">
          <source>A cause can be associated with a throwable in two ways: via a constructor that takes the cause as an argument, or via the &lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. New throwable classes that wish to allow causes to be associated with them should provide constructors that take a cause and delegate (perhaps indirectly) to one of the &lt;code&gt;Throwable&lt;/code&gt; constructors that takes a cause. Because the &lt;code&gt;initCause&lt;/code&gt; method is public, it allows a cause to be associated with any throwable, even a &quot;legacy throwable&quot; whose implementation predates the addition of the exception chaining mechanism to &lt;code&gt;Throwable&lt;/code&gt;.</source>
          <target state="translated">可以通过两种方式将原因与throwable相关联：通过将原因作为参数的&lt;a href=&quot;#initCause(java.lang.Throwable)&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt;函数，或者通过initCause（Throwable）方法。希望允许原因与之关联的新的throwable类应提供采用原因的 &lt;code&gt;Throwable&lt;/code&gt; 函数，并（可能间接）委托给采用原因的Throwable构造函数之一。因为 &lt;code&gt;initCause&lt;/code&gt; 方法是公共的，所以它允许将原因与任何throwable关联，甚至可以将其原因实现与在 &lt;code&gt;Throwable&lt;/code&gt; 中添加异常链接机制之前的&amp;ldquo; legacy throwable&amp;rdquo;相关联。</target>
        </trans-unit>
        <trans-unit id="200e757132c0a25b1d7ddb249bee8390af696aeb" translate="yes" xml:space="preserve">
          <source>A cause can be associated with a throwable in two ways: via a constructor that takes the cause as an argument, or via the &lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt;&lt;code&gt;initCause(Throwable)&lt;/code&gt;&lt;/a&gt; method. New throwable classes that wish to allow causes to be associated with them should provide constructors that take a cause and delegate (perhaps indirectly) to one of the &lt;code&gt;Throwable&lt;/code&gt; constructors that takes a cause. Because the &lt;code&gt;initCause&lt;/code&gt; method is public, it allows a cause to be associated with any throwable, even a &quot;legacy throwable&quot; whose implementation predates the addition of the exception chaining mechanism to &lt;code&gt;Throwable&lt;/code&gt;.</source>
          <target state="translated">可以通过两种方式将原因与throwable相关联：通过将原因作为参数的&lt;a href=&quot;throwable#initCause-java.lang.Throwable-&quot;&gt; &lt;code&gt;initCause(Throwable)&lt;/code&gt; &lt;/a&gt;函数，或者通过initCause（Throwable）方法。希望允许原因与之关联的新的throwable类应提供采用原因的 &lt;code&gt;Throwable&lt;/code&gt; 函数，并（可能间接）委托给采用原因的Throwable构造函数之一。因为 &lt;code&gt;initCause&lt;/code&gt; 方法是公共的，所以它允许将原因与任何throwable关联，甚至可以将其原因实现与在 &lt;code&gt;Throwable&lt;/code&gt; 中添加异常链接机制之前的&amp;ldquo;旧式throwable&amp;rdquo;相关联。</target>
        </trans-unit>
        <trans-unit id="eb9adaf3b7e2f40fbde1879f520e8811bd797f68" translate="yes" xml:space="preserve">
          <source>A central authority generates parameters and gives them to the two entities seeking to generate a secret key. The parameters are a prime &lt;code&gt;p&lt;/code&gt;, a base &lt;code&gt;g&lt;/code&gt;, and optionally the length in bits of the private value, &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">中央机构生成参数，并将其提供给寻求生成密钥的两个实体。参数是质数 &lt;code&gt;p&lt;/code&gt; ，基数 &lt;code&gt;g&lt;/code&gt; ，还可以是私有值 &lt;code&gt;l&lt;/code&gt; 的以位为单位的长度。</target>
        </trans-unit>
        <trans-unit id="b15f87ac85c08bc308c57b0713f245a6c447fad2" translate="yes" xml:space="preserve">
          <source>A certificate factory for X.509 must return certificates that are an instance of &lt;code&gt;java.security.cert.X509Certificate&lt;/code&gt;, and CRLs that are an instance of &lt;code&gt;java.security.cert.X509CRL&lt;/code&gt;.</source>
          <target state="translated">对于X.509证书工厂必须返回是一个实例证明 &lt;code&gt;java.security.cert.X509Certificate&lt;/code&gt; 这是一个实例，和CRL &lt;code&gt;java.security.cert.X509CRL&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="d13204c98a6ed6a0090b39584fbff66ef2fd4ba5" translate="yes" xml:space="preserve">
          <source>A certificate path.</source>
          <target state="translated">一个证书路径。</target>
        </trans-unit>
        <trans-unit id="69bc8c8897a2aaa1567c6f12d93e327556a92e8e" translate="yes" xml:space="preserve">
          <source>A certificate policies extension, if present in an X.509 version 3 certificate, contains a sequence of one or more policy information terms, each of which consists of an object identifier (OID) and optional qualifiers. In an end-entity certificate, these policy information terms indicate the policy under which the certificate has been issued and the purposes for which the certificate may be used. In a CA certificate, these policy information terms limit the set of policies for certification paths which include this certificate.</source>
          <target state="translated">如果X.509版本3证书中存在证书政策扩展,则证书政策扩展包含一个或多个政策信息术语的序列,每个术语由对象标识符(OID)和可选的限定词组成。在终端实体证书中,这些策略信息术语表明了签发证书所依据的策略和证书的使用目的。在CA证书中,这些政策信息术语限制了包含该证书的认证路径的政策集。</target>
        </trans-unit>
        <trans-unit id="9933e974bacdc1916d38c135e6dcadb6b2a6d9c6" translate="yes" xml:space="preserve">
          <source>A chain of &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;Filter&lt;/code&gt;&lt;/a&gt; objects can be added to a HttpContext. All exchanges processed by the context can be pre- and post-processed by each Filter in the chain.</source>
          <target state="translated">可以将一系列&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;Filter&lt;/code&gt; &lt;/a&gt;对象添加到HttpContext中。上下文处理的所有交换都可以由链中的每个筛选器进行预处理和后处理。</target>
        </trans-unit>
        <trans-unit id="85319023e489273c315d40932bdf85cb3186c72f" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated by a reparenting operation.</source>
          <target state="translated">更改标志指示 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; 事件是由重新父母操作生成的。</target>
        </trans-unit>
        <trans-unit id="bb2b625f6b484a7070cb6e62b9b33def551595c3" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy displayability.</source>
          <target state="translated">更改标志指示由于层次结构可显示性的更改而生成了 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="837626a41ae79571ddaeb140f3b90f20eb1b3985" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy displayability. To discern the current displayability of the hierarchy, call the &lt;code&gt;Component.isDisplayable&lt;/code&gt; method. Displayability changes occur in response to explicit or implicit calls of the &lt;code&gt;Component.addNotify&lt;/code&gt; and &lt;code&gt;Component.removeNotify&lt;/code&gt; methods.</source>
          <target state="translated">更改标志指示由于层次结构可显示性的更改而生成了 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; 事件。若要识别层次结构的当前可显示性，请调用 &lt;code&gt;Component.isDisplayable&lt;/code&gt; 方法。可显示性更改是对 &lt;code&gt;Component.addNotify&lt;/code&gt; 和 &lt;code&gt;Component.removeNotify&lt;/code&gt; 方法的显式或隐式调用的响应。</target>
        </trans-unit>
        <trans-unit id="5472c41138de79447fec8dc2fc20286b49ea8028" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy showing state.</source>
          <target state="translated">更改标志指示由于层次结构显示状态的更改而生成了 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; 事件。</target>
        </trans-unit>
        <trans-unit id="1cc8f0028793cf25800b99b5d052a1c9a42d1f0c" translate="yes" xml:space="preserve">
          <source>A change flag indicates that the &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; event was generated due to the changing of the hierarchy showing state. To discern the current showing state of the hierarchy, call the &lt;code&gt;Component.isShowing&lt;/code&gt; method. Showing state changes occur when either the displayability or visibility of the hierarchy occurs. Visibility changes occur in response to explicit or implicit calls of the &lt;code&gt;Component.show&lt;/code&gt; and &lt;code&gt;Component.hide&lt;/code&gt; methods.</source>
          <target state="translated">更改标志指示由于层次结构显示状态的更改而生成了 &lt;code&gt;HIERARCHY_CHANGED&lt;/code&gt; 事件。若要识别层次结构的当前显示状态，请调用 &lt;code&gt;Component.isShowing&lt;/code&gt; 方法。当层次结构的可显示性或可见性发生时，就会发生显示状态更改。可视性更改是对 &lt;code&gt;Component.show&lt;/code&gt; 和 &lt;code&gt;Component.hide&lt;/code&gt; 方法的显式或隐式调用的响应。</target>
        </trans-unit>
        <trans-unit id="12b7e0369567e0a42b4add2191ea7b355c8240c6" translate="yes" xml:space="preserve">
          <source>A change in the value of the nesting BeanContext property of this BeanContextChild may be vetoed by throwing the appropriate exception.</source>
          <target state="translated">该BeanContextChild的嵌套BeanContext属性值的改变可以通过抛出适当的异常来否决。</target>
        </trans-unit>
        <trans-unit id="d72d29acf86e7702c32bda0ec435a23e72471262" translate="yes" xml:space="preserve">
          <source>A channel cannot be deregistered directly; instead, the key representing its registration must be</source>
          <target state="translated">一个通道不能直接注销;相反,代表其注册的密钥必须是</target>
        </trans-unit>
        <trans-unit id="8d7e774f5d23e83f7b27801d7e8202ecdb67d702" translate="yes" xml:space="preserve">
          <source>A channel for a stream-oriented connecting socket</source>
          <target state="translated">一个面向流的连接插座的通道</target>
        </trans-unit>
        <trans-unit id="9e1601a8223fa155ec20c1df5e38f1e8f95ed05f" translate="yes" xml:space="preserve">
          <source>A channel for reading, writing, mapping, and manipulating a file.</source>
          <target state="translated">读、写、映射和操作文件的通道。</target>
        </trans-unit>
        <trans-unit id="7af84c638e550c68636fe765e24dc5f5baf6f9db" translate="yes" xml:space="preserve">
          <source>A channel is either open or closed. A channel is open upon creation, and once closed it remains closed. Once a channel is closed, any attempt to invoke an I/O operation upon it will cause a &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt; to be thrown. Whether or not a channel is open may be tested by invoking its &lt;a href=&quot;#isOpen()&quot;&gt;&lt;code&gt;isOpen&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">通道是打开的还是关闭的。通道在创建时打开，一旦关闭，它便保持关闭状态。通道一旦关闭，任何在其上调用I / O操作的尝试都将引发&lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; &lt;/a&gt;。可以通过调用&lt;a href=&quot;#isOpen()&quot;&gt; &lt;code&gt;isOpen&lt;/code&gt; &lt;/a&gt;方法来测试通道是否打开。</target>
        </trans-unit>
        <trans-unit id="9ac0c81f717986b03ee3daf2a9350d01082aa55a" translate="yes" xml:space="preserve">
          <source>A channel is either open or closed. A channel is open upon creation, and once closed it remains closed. Once a channel is closed, any attempt to invoke an I/O operation upon it will cause a &lt;a href=&quot;closedchannelexception&quot;&gt;&lt;code&gt;ClosedChannelException&lt;/code&gt;&lt;/a&gt; to be thrown. Whether or not a channel is open may be tested by invoking its &lt;a href=&quot;channel#isOpen--&quot;&gt;&lt;code&gt;isOpen&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">通道是打开的还是关闭的。通道在创建时打开，一旦关闭，它便保持关闭状态。通道一旦关闭，任何在其上调用I / O操作的尝试都将引发&lt;a href=&quot;closedchannelexception&quot;&gt; &lt;code&gt;ClosedChannelException&lt;/code&gt; &lt;/a&gt;。可以通过调用&lt;a href=&quot;channel#isOpen--&quot;&gt; &lt;code&gt;isOpen&lt;/code&gt; &lt;/a&gt;方法来测试通道是否打开。</target>
        </trans-unit>
        <trans-unit id="eab623e8a59c695937f908e43f6b29a8917aa6f4" translate="yes" xml:space="preserve">
          <source>A channel may be created and the process of establishing the link to the remote socket may be initiated via the &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; method for later completion by the &lt;a href=&quot;#finishConnect()&quot;&gt;&lt;code&gt;finishConnect&lt;/code&gt;&lt;/a&gt; method. Whether or not a connection operation is in progress may be determined by invoking the &lt;a href=&quot;#isConnectionPending()&quot;&gt;&lt;code&gt;isConnectionPending&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">可以创建一个通道，并可以通过&lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt;方法启动建立到远程套接字的链接的过程，以稍后通过&lt;a href=&quot;#finishConnect()&quot;&gt; &lt;code&gt;finishConnect&lt;/code&gt; &lt;/a&gt;方法完成。可以通过调用&lt;a href=&quot;#isConnectionPending()&quot;&gt; &lt;code&gt;isConnectionPending&lt;/code&gt; &lt;/a&gt;方法来确定是否正在进行连接操作。</target>
        </trans-unit>
        <trans-unit id="7bb5a0f968508f5be9958440240f5d1267c99a94" translate="yes" xml:space="preserve">
          <source>A channel may be registered at most once with any particular selector.</source>
          <target state="translated">一个频道最多可以用任何特定的选择器注册一次。</target>
        </trans-unit>
        <trans-unit id="21fb8ef335a3687ca6d6626447bc68cde9a71bdf" translate="yes" xml:space="preserve">
          <source>A channel representing the readable end of a &lt;a href=&quot;pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示&lt;a href=&quot;pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt;可读端的通道。</target>
        </trans-unit>
        <trans-unit id="d85558a6843581591cf1be190cf66c79e3f828ac" translate="yes" xml:space="preserve">
          <source>A channel representing the writable end of a &lt;a href=&quot;pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">表示&lt;a href=&quot;pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt;的可写端的通道。</target>
        </trans-unit>
        <trans-unit id="70dc1aab8c52e3f7d92aa4d0c02a1489f7dbc0ea" translate="yes" xml:space="preserve">
          <source>A channel represents an open connection to an entity such as a hardware device, a file, a network socket, or a program component that is capable of performing one or more distinct I/O operations, for example reading or writing.</source>
          <target state="translated">通道表示与一个实体的开放连接,如硬件设备、文件、网络套接字或程序组件,它能够执行一个或多个不同的I/O操作,例如读或写。</target>
        </trans-unit>
        <trans-unit id="b8fef62afdf0975eec2e59fb2c36004534d294f5" translate="yes" xml:space="preserve">
          <source>A channel supports asynchronous closing and interruption if, and only if, it implements this interface. This can be tested at runtime, if necessary, via the &lt;code&gt;instanceof&lt;/code&gt; operator.</source>
          <target state="translated">仅当通道实现此接口时，它才支持异步关闭和中断。可以在运行时通过 &lt;code&gt;instanceof&lt;/code&gt; 运算符对其进行测试。</target>
        </trans-unit>
        <trans-unit id="fc0d5b76afd6f0f29b38f37a05ac0c3b9c5f72e6" translate="yes" xml:space="preserve">
          <source>A channel that can be asynchronously closed and interrupted.</source>
          <target state="translated">一个可以异步关闭和中断的通道。</target>
        </trans-unit>
        <trans-unit id="59b7b7fac8ee9975147807e839aeb8fe38d241bb" translate="yes" xml:space="preserve">
          <source>A channel that can be multiplexed</source>
          <target state="translated">可以复用的通道</target>
        </trans-unit>
        <trans-unit id="1214854eb0213a1ff43a9021db015696b91deec7" translate="yes" xml:space="preserve">
          <source>A channel that can be multiplexed via a &lt;a href=&quot;selector&quot;&gt;&lt;code&gt;Selector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">可以通过&lt;a href=&quot;selector&quot;&gt; &lt;code&gt;Selector&lt;/code&gt; &lt;/a&gt;进行多路复用的通道。</target>
        </trans-unit>
        <trans-unit id="800646be4ec902c097761409c9fd09caafb4a495" translate="yes" xml:space="preserve">
          <source>A channel that can read and write bytes.</source>
          <target state="translated">一个可以读和写字节的通道。</target>
        </trans-unit>
        <trans-unit id="3a18d46d23ef0ee898d000c7fdbcf8d70cccbb4c" translate="yes" xml:space="preserve">
          <source>A channel that can read and write bytes. This interface simply unifies &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt;; it does not specify any new operations.</source>
          <target state="translated">可以读取和写入字节的通道。这个接口简单地将&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;统一起来；它没有指定任何新操作。</target>
        </trans-unit>
        <trans-unit id="42a631ef4c7905c22f79a70339587d209893d713" translate="yes" xml:space="preserve">
          <source>A channel that can read bytes into a sequence of buffers.</source>
          <target state="translated">一个可以将字节读入缓冲区序列的通道。</target>
        </trans-unit>
        <trans-unit id="ecb9b303f470a97f2f08805d8d8c94b642db6ff2" translate="yes" xml:space="preserve">
          <source>A channel that can read bytes.</source>
          <target state="translated">一个可以读取字节的通道。</target>
        </trans-unit>
        <trans-unit id="95845315fdbf28ed7bd0ae0197a23b2ef4a4b208" translate="yes" xml:space="preserve">
          <source>A channel that can write bytes from a sequence of buffers.</source>
          <target state="translated">一个可以从缓冲区序列中写入字节的通道。</target>
        </trans-unit>
        <trans-unit id="8f098a9ecf20dc34b289410aad7ca21436a5b36f" translate="yes" xml:space="preserve">
          <source>A channel that can write bytes.</source>
          <target state="translated">一个可以写入字节的通道。</target>
        </trans-unit>
        <trans-unit id="b4efac3fa36ee432ca8226ac9cfe90afc82a7eaa" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is</source>
          <target state="translated">实现这个接口的通道是</target>
        </trans-unit>
        <trans-unit id="9de1e12b8a7a8c3fb32ce8821603d037f0633115" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is &lt;em&gt;asynchronously closeable&lt;/em&gt;: If an I/O operation is outstanding on the channel and the channel's &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked, then the I/O operation fails with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">实现此接口的通道可以&lt;em&gt;异步关闭&lt;/em&gt;：如果通道上未执行I / O操作，并且调用了通道的&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法，则I / O操作将失败，并抛出&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="5b097b4ced43ca741c0e40c7c3e34b41dfce4add" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is &lt;em&gt;asynchronously closeable&lt;/em&gt;: If an I/O operation is outstanding on the channel and the channel's &lt;a href=&quot;asynchronouschannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method is invoked, then the I/O operation fails with the exception &lt;a href=&quot;asynchronouscloseexception&quot;&gt;&lt;code&gt;AsynchronousCloseException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">实现此接口的通道可以&lt;em&gt;异步关闭&lt;/em&gt;：如果通道上未执行I / O操作，并且调用了通道的&lt;a href=&quot;asynchronouschannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法，则I / O操作将失败，并抛出&lt;a href=&quot;asynchronouscloseexception&quot;&gt; &lt;code&gt;AsynchronousCloseException&lt;/code&gt; &lt;/a&gt;异常。</target>
        </trans-unit>
        <trans-unit id="90dcd4176d9405a8587e9db345ff7af48f1eba63" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is a channel to a network socket. The &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method is used to bind the socket to a local &lt;a href=&quot;../../net/socketaddress&quot;&gt;&lt;code&gt;address&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;#getLocalAddress()&quot;&gt;&lt;code&gt;getLocalAddress&lt;/code&gt;&lt;/a&gt; method returns the address that the socket is bound to, and the &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods are used to set and query socket options. An implementation of this interface should specify the socket options that it supports.</source>
          <target state="translated">实现此接口的通道是通往网络套接字的通道。的&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;方法用于将套接字绑定到一个本地&lt;a href=&quot;../../net/socketaddress&quot;&gt; &lt;code&gt;address&lt;/code&gt; &lt;/a&gt;，所述&lt;a href=&quot;#getLocalAddress()&quot;&gt; &lt;code&gt;getLocalAddress&lt;/code&gt; &lt;/a&gt;方法返回套接字绑定到的地址，所述&lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt; &lt;code&gt;getOption&lt;/code&gt; &lt;/a&gt;方法用于设置和查询套接字选项。此接口的实现应指定它支持的套接字选项。</target>
        </trans-unit>
        <trans-unit id="d5b8a450c6a26f4e50db17fd5ebc4459ce7d7949" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is a channel to a network socket. The &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method is used to bind the socket to a local &lt;a href=&quot;../../net/socketaddress&quot;&gt;&lt;code&gt;address&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;networkchannel#getLocalAddress--&quot;&gt;&lt;code&gt;getLocalAddress&lt;/code&gt;&lt;/a&gt; method returns the address that the socket is bound to, and the &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods are used to set and query socket options. An implementation of this interface should specify the socket options that it supports.</source>
          <target state="translated">实现此接口的通道是通往网络套接字的通道。的&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;方法用于将套接字绑定到一个本地&lt;a href=&quot;../../net/socketaddress&quot;&gt; &lt;code&gt;address&lt;/code&gt; &lt;/a&gt;，所述&lt;a href=&quot;networkchannel#getLocalAddress--&quot;&gt; &lt;code&gt;getLocalAddress&lt;/code&gt; &lt;/a&gt;方法返回套接字绑定到的地址，所述&lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt; &lt;code&gt;getOption&lt;/code&gt; &lt;/a&gt;方法用于设置和查询套接字选项。此接口的实现应指定它支持的套接字选项。</target>
        </trans-unit>
        <trans-unit id="9b4ffd0b00aae234d34f01c53dd96dc57bf6b6e0" translate="yes" xml:space="preserve">
          <source>A channel that implements this interface is also</source>
          <target state="translated">实现这个接口的通道也是</target>
        </trans-unit>
        <trans-unit id="d9796e052a0f539e5d20f76e2665722b23b84065" translate="yes" xml:space="preserve">
          <source>A channel that supports asynchronous I/O operations.</source>
          <target state="translated">一个支持异步I/O操作的通道。</target>
        </trans-unit>
        <trans-unit id="191edb71e4e511906b4a3aabedb3d6703cb5257a" translate="yes" xml:space="preserve">
          <source>A channel that supports asynchronous I/O operations. Asynchronous I/O operations will usually take one of two forms:</source>
          <target state="translated">支持异步I/O操作的通道。异步I/O操作通常有两种形式之一。</target>
        </trans-unit>
        <trans-unit id="9ed40df29696c88e6c71549b1c57172f2535d2e1" translate="yes" xml:space="preserve">
          <source>A channel to a datagram-oriented socket</source>
          <target state="translated">通往面向数据报的套接字的通道</target>
        </trans-unit>
        <trans-unit id="8dd23ea95fe683f2446dc0f81225ff9c1aa46c49" translate="yes" xml:space="preserve">
          <source>A channel to a network socket</source>
          <target state="translated">通往网络插座的通道</target>
        </trans-unit>
        <trans-unit id="0b7fadce40dec6dc50b0937f58a33b6784464fad" translate="yes" xml:space="preserve">
          <source>A channel to a network socket.</source>
          <target state="translated">一个网络插座的通道。</target>
        </trans-unit>
        <trans-unit id="fba973fb0458ecef3b4ce50b17afa170ef7b7640" translate="yes" xml:space="preserve">
          <source>A channel to a stream-oriented listening socket</source>
          <target state="translated">通往面向流的监听套接字的通道</target>
        </trans-unit>
        <trans-unit id="db20aa88a7238119d3ad50b601b0e37532ec55a6" translate="yes" xml:space="preserve">
          <source>A char buffer containing the decoded characters</source>
          <target state="translated">一个包含解码字符的字符缓冲区</target>
        </trans-unit>
        <trans-unit id="f83ee77e42e8490f810288c59eb103b9eb63a96e" translate="yes" xml:space="preserve">
          <source>A char buffer is not comparable to any other type of object.</source>
          <target state="translated">一个char缓冲区不能与任何其他类型的对象相提并论。</target>
        </trans-unit>
        <trans-unit id="bc1b6b1c3f1c52066b1cf54b29319071b3f900d3" translate="yes" xml:space="preserve">
          <source>A char buffer is not equal to any other type of object.</source>
          <target state="translated">一个char缓冲区不等于任何其他类型的对象。</target>
        </trans-unit>
        <trans-unit id="c92b2e8ed081e77f9fb1315da995d59a732735d8" translate="yes" xml:space="preserve">
          <source>A char buffer.</source>
          <target state="translated">一个字符缓冲区。</target>
        </trans-unit>
        <trans-unit id="4b1521bc66da3c7b406225d686d4a3b8aab6e713" translate="yes" xml:space="preserve">
          <source>A char value is a surrogate code unit if and only if it is either a &lt;a href=&quot;#isLowSurrogate(char)&quot;&gt;low-surrogate code unit&lt;/a&gt; or a &lt;a href=&quot;#isHighSurrogate(char)&quot;&gt;high-surrogate code unit&lt;/a&gt;.</source>
          <target state="translated">当且仅当它是&lt;a href=&quot;#isLowSurrogate(char)&quot;&gt;低替代代码单元&lt;/a&gt;或&lt;a href=&quot;#isHighSurrogate(char)&quot;&gt;高&lt;/a&gt;替代代码单元时，char值才是替代代码单元。</target>
        </trans-unit>
        <trans-unit id="b747af939ee20ee5f1cd9aefd76c5b5096a87a8b" translate="yes" xml:space="preserve">
          <source>A char value is a surrogate code unit if and only if it is either a &lt;a href=&quot;character#isLowSurrogate-char-&quot;&gt;low-surrogate code unit&lt;/a&gt; or a &lt;a href=&quot;character#isHighSurrogate-char-&quot;&gt;high-surrogate code unit&lt;/a&gt;.</source>
          <target state="translated">当且仅当它是&lt;a href=&quot;character#isLowSurrogate-char-&quot;&gt;低替代代码单元&lt;/a&gt;或&lt;a href=&quot;character#isHighSurrogate-char-&quot;&gt;高&lt;/a&gt;替代代码单元时，char值才是替代代码单元。</target>
        </trans-unit>
        <trans-unit id="d41302344e7fbbca3b8d487f3516ee3b89ee120f" translate="yes" xml:space="preserve">
          <source>A character array containing the password or passphrase read from the console, not including any line-termination characters, or &lt;code&gt;null&lt;/code&gt; if an end of stream has been reached.</source>
          <target state="translated">一个字符数组，包含从控制台读取的密码或口令，不包括任何行终止字符；如果已到达流的结尾，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86592acb8a1516339482f65b9fe9fea4d5b1cbbf" translate="yes" xml:space="preserve">
          <source>A character in the Greek block (&lt;a href=&quot;#ubc&quot;&gt;block&lt;/a&gt;)</source>
          <target state="translated">希腊语块中的一个字符（&lt;a href=&quot;#ubc&quot;&gt;block&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="43025dbde61ef9eae4dedd1a09f0b0781d452fd0" translate="yes" xml:space="preserve">
          <source>A character is</source>
          <target state="translated">一个角色是</target>
        </trans-unit>
        <trans-unit id="cb0553deb810e8d6dd8f9d602644b698eec9741e" translate="yes" xml:space="preserve">
          <source>A character is a digit if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt;.</source>
          <target state="translated">如果字符的一般类别类型（由&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;提供）为 &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt; ，则该字符为数字。</target>
        </trans-unit>
        <trans-unit id="7f4ce8079139a88322f4ae2aba1220448793d458" translate="yes" xml:space="preserve">
          <source>A character is a digit if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt;.</source>
          <target state="translated">如果字符的一般类别类型（由&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;提供）为 &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt; ，则该字符为数字。</target>
        </trans-unit>
        <trans-unit id="fdd1a754889230886d0a4a8fb8d9c2f75250cd5a" translate="yes" xml:space="preserve">
          <source>A character is a digit if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt;.</source>
          <target state="translated">如果 &lt;code&gt;Character.getType(ch)&lt;/code&gt; 提供的常规类别类型为 &lt;code&gt;DECIMAL_DIGIT_NUMBER&lt;/code&gt; ，则该字符为数字。</target>
        </trans-unit>
        <trans-unit id="86596435c2b454f09594fe7bcb120fdcbf6b33f8" translate="yes" xml:space="preserve">
          <source>A character is a titlecase character if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;TITLECASE_LETTER&lt;/code&gt;.</source>
          <target state="translated">字符是否为标题字符，如果它的一般类别类型，通过提供&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;，是 &lt;code&gt;TITLECASE_LETTER&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ed0b005fbc298f5a0e45fbdd786dd40107520eed" translate="yes" xml:space="preserve">
          <source>A character is a titlecase character if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;TITLECASE_LETTER&lt;/code&gt;.</source>
          <target state="translated">字符是否为标题字符，如果它的一般类别类型，通过提供&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;，是 &lt;code&gt;TITLECASE_LETTER&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40b7e7e298658479c6f67b4c32be450022509975" translate="yes" xml:space="preserve">
          <source>A character is a titlecase character if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;TITLECASE_LETTER&lt;/code&gt;.</source>
          <target state="translated">字符是否为标题字符，如果它的一般类别类型，通过提供 &lt;code&gt;Character.getType(ch)&lt;/code&gt; ，是 &lt;code&gt;TITLECASE_LETTER&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e7bd610b8db92391f43cfc39a18c3845bd141e6" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">如果由&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;提供的字符的常规类别类型为以下任意一种，则该字符被视为字母：</target>
        </trans-unit>
        <trans-unit id="b3e93e58c4c08afdd56f97246f883396140cfeb6" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">如果由&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;提供的字符的常规类别类型为以下任意一种，则该字符被视为字母：</target>
        </trans-unit>
        <trans-unit id="cfd74a58d4f3e068c12a4637ed1ea71a70c63fca" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is any of the following:</source>
          <target state="translated">如果 &lt;code&gt;Character.getType(ch)&lt;/code&gt; 提供的常规类别类型为以下任意一种，则认为该字符为字母：</target>
        </trans-unit>
        <trans-unit id="eb9be73ffc1dba87de77bf2d3f3de709be554f21" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter or digit if either &lt;a href=&quot;#isLetter(int)&quot;&gt;&lt;code&gt;isLetter(codePoint)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#isDigit(int)&quot;&gt;&lt;code&gt;isDigit(codePoint)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; for the character.</source>
          <target state="translated">如果&lt;a href=&quot;#isLetter(int)&quot;&gt; &lt;code&gt;isLetter(codePoint)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#isDigit(int)&quot;&gt; &lt;code&gt;isDigit(codePoint)&lt;/code&gt; &lt;/a&gt;对该字符返回 &lt;code&gt;true&lt;/code&gt; ，则该字符被视为字母或数字。</target>
        </trans-unit>
        <trans-unit id="257a1fc191243a38382ed54b91922f94818951c2" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter or digit if either &lt;a href=&quot;character#isLetter-int-&quot;&gt;&lt;code&gt;isLetter(codePoint)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;character#isDigit-int-&quot;&gt;&lt;code&gt;isDigit(codePoint)&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; for the character.</source>
          <target state="translated">如果&lt;a href=&quot;character#isLetter-int-&quot;&gt; &lt;code&gt;isLetter(codePoint)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;character#isDigit-int-&quot;&gt; &lt;code&gt;isDigit(codePoint)&lt;/code&gt; &lt;/a&gt;对该字符返回 &lt;code&gt;true&lt;/code&gt; ，则该字符被视为字母或数字。</target>
        </trans-unit>
        <trans-unit id="56e9e520047941ac231e484f638ee37ff36c4c23" translate="yes" xml:space="preserve">
          <source>A character is considered to be a letter or digit if either &lt;code&gt;Character.isLetter(char ch)&lt;/code&gt; or &lt;code&gt;Character.isDigit(char ch)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for the character.</source>
          <target state="translated">如果 &lt;code&gt;Character.isLetter(char ch)&lt;/code&gt; 或 &lt;code&gt;Character.isDigit(char ch)&lt;/code&gt; 为该字符返回 &lt;code&gt;true&lt;/code&gt; ，则该字符被视为字母或数字。</target>
        </trans-unit>
        <trans-unit id="2d4c273187e4ccb1b8ec6cc8e1f191b5bd57f64c" translate="yes" xml:space="preserve">
          <source>A character is considered to be alphabetic if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">如果由&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;提供的字符的常规类别类型为以下任意一种，则认为该字符为字母：</target>
        </trans-unit>
        <trans-unit id="1daab1c6e481dada609c883697d804983fd2e80e" translate="yes" xml:space="preserve">
          <source>A character is considered to be alphabetic if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is any of the following:</source>
          <target state="translated">如果字符的一般类别类型（由&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;提供）是以下任意一种，则认为该字符为字母：</target>
        </trans-unit>
        <trans-unit id="846ad6665f9e9112c25d9f35739a2d02161fe462" translate="yes" xml:space="preserve">
          <source>A character is defined if at least one of the following is true:</source>
          <target state="translated">如果以下至少一项为真,则定义一个字符。</target>
        </trans-unit>
        <trans-unit id="ea5a7550d236465222599d48f08d22aa0cb71565" translate="yes" xml:space="preserve">
          <source>A character is lowercase if its general category type, provided by &lt;a href=&quot;#getType(char)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Lowercase as defined by the Unicode Standard.</source>
          <target state="translated">如果字符的一般类别类型（由&lt;a href=&quot;#getType(char)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;提供）为 &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt; ，或者具有Unicode标准定义的辅助属性Other_Lowercase，则该字符为小写。</target>
        </trans-unit>
        <trans-unit id="7b4fe37a529ecb9e0094fe32d5a9d41a0084dcdd" translate="yes" xml:space="preserve">
          <source>A character is lowercase if its general category type, provided by &lt;a href=&quot;character#getType-char-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Lowercase as defined by the Unicode Standard.</source>
          <target state="translated">如果字符的一般类别类型（由&lt;a href=&quot;character#getType-char-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;提供）为 &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt; ，或者具有Unicode标准定义的辅助属性Other_Lowercase，则该字符为小写。</target>
        </trans-unit>
        <trans-unit id="770ed3a3b7a1750f819b0f53d78ab4e560573022" translate="yes" xml:space="preserve">
          <source>A character is lowercase if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Lowercase as defined by the Unicode Standard.</source>
          <target state="translated">如果字符的一般类别类型（由 &lt;code&gt;Character.getType(ch)&lt;/code&gt; 提供）为 &lt;code&gt;LOWERCASE_LETTER&lt;/code&gt; ，或者具有Unicode标准定义的辅助属性Other_Lowercase，则该字符为小写。</target>
        </trans-unit>
        <trans-unit id="eec0334e27b2f98bcaa2468f12171e3996f3bb46" translate="yes" xml:space="preserve">
          <source>A character is uppercase if its general category type, provided by &lt;a href=&quot;#getType(int)&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Uppercase as defined by the Unicode Standard.</source>
          <target state="translated">如果字符的一般类别类型（由&lt;a href=&quot;#getType(int)&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;提供）为 &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt; ，或者具有Unicode标准定义的辅助属性Other_Uppercase，则该字符为大写。</target>
        </trans-unit>
        <trans-unit id="a03c0a4129a458c83450c7f6d5b8a7d9f5975f99" translate="yes" xml:space="preserve">
          <source>A character is uppercase if its general category type, provided by &lt;a href=&quot;character#getType-int-&quot;&gt;&lt;code&gt;getType(codePoint)&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt;, or it has contributory property Other_Uppercase as defined by the Unicode Standard.</source>
          <target state="translated">如果字符的一般类别类型（由&lt;a href=&quot;character#getType-int-&quot;&gt; &lt;code&gt;getType(codePoint)&lt;/code&gt; &lt;/a&gt;提供）为 &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt; ，或者具有Unicode标准定义的辅助属性Other_Uppercase，则该字符为大写。</target>
        </trans-unit>
        <trans-unit id="691356a97a7e1df0d7387885124751d46be64f49" translate="yes" xml:space="preserve">
          <source>A character is uppercase if its general category type, provided by &lt;code&gt;Character.getType(ch)&lt;/code&gt;, is &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt;. or it has contributory property Other_Uppercase as defined by the Unicode Standard.</source>
          <target state="translated">如果 &lt;code&gt;Character.getType(ch)&lt;/code&gt; 提供的常规类别类型为 &lt;code&gt;UPPERCASE_LETTER&lt;/code&gt; ，则该字符为大写。或具有Unicode标准定义的贡献性属性Other_Uppercase。</target>
        </trans-unit>
        <trans-unit id="3e6d561d343a7744b12d7a0fc05b3bcf33b29211" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if and only if any of the following are true:</source>
          <target state="translated">如果且仅如果以下任何一项为真,一个字符可以成为Java标识符的一部分。</target>
        </trans-unit>
        <trans-unit id="7d03aa6ebaecd70cf74508561b81aa7dff281fc5" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if and only if one of the following conditions is true:</source>
          <target state="translated">如果且仅当以下条件之一为真时,一个字符可以成为Java标识符的一部分。</target>
        </trans-unit>
        <trans-unit id="1ac0fb63df90ee768362eb2ea36be06b1c3ba9f2" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if any of the following are true:</source>
          <target state="translated">如果以下任何一项为真,一个字符可以成为Java标识符的一部分。</target>
        </trans-unit>
        <trans-unit id="d681d7b226cccb4843f419f5ed003d0a55f37320" translate="yes" xml:space="preserve">
          <source>A character may be part of a Java identifier if any of the following conditions are true:</source>
          <target state="translated">如果以下任何一个条件为真,一个字符可以成为Java标识符的一部分。</target>
        </trans-unit>
        <trans-unit id="3d4c6b2fd3ac5173e7a35051a02bcb5aca73d33c" translate="yes" xml:space="preserve">
          <source>A character may be part of a Unicode identifier if and only if one of the following statements is true:</source>
          <target state="translated">如果且仅当以下陈述之一为真时,一个字符可以成为Unicode标识符的一部分。</target>
        </trans-unit>
        <trans-unit id="6acb9fd8c4c0db766c6d1bcd34828dc2a4ff4f1b" translate="yes" xml:space="preserve">
          <source>A character may start a Java identifier if and only if one of the following conditions is true:</source>
          <target state="translated">如果且仅当以下条件之一为真时,一个字符可以启动一个Java标识符。</target>
        </trans-unit>
        <trans-unit id="3fada3cffc279f5988b5a9f5e97628c24a2aa3eb" translate="yes" xml:space="preserve">
          <source>A character may start a Java identifier if and only if one of the following is true:</source>
          <target state="translated">如果且仅当以下情况之一为真时,一个字符可以开始一个Java标识符。</target>
        </trans-unit>
        <trans-unit id="8765bea07151f2ce322c2b3d88588b5932784a7e" translate="yes" xml:space="preserve">
          <source>A character may start a Unicode identifier if and only if one of the following conditions is true:</source>
          <target state="translated">如果且仅当以下条件之一为真时,一个字符可以开始一个Unicode标识符。</target>
        </trans-unit>
        <trans-unit id="691511f32534c704fa5a722392a9bc0eb20fb683" translate="yes" xml:space="preserve">
          <source>A character stream that collects its output in a string buffer, which can then be used to construct a string.</source>
          <target state="translated">一个字符流,将其输出收集到一个字符串缓冲区,然后可以用来构造一个字符串。</target>
        </trans-unit>
        <trans-unit id="6e7b08f91b89d317251e96eea88d34f90455c7a7" translate="yes" xml:space="preserve">
          <source>A character stream whose source is a string.</source>
          <target state="translated">一个字符流,其源是一个字符串。</target>
        </trans-unit>
        <trans-unit id="d75764e4070dffd8fcb663eb5024c4e2583781ea" translate="yes" xml:space="preserve">
          <source>A character-stream reader that allows characters to be pushed back into the stream.</source>
          <target state="translated">一个允许将字符推回流的字符流阅读器。</target>
        </trans-unit>
        <trans-unit id="7e71cb0a066a90cfe9e8b1752b6cfd83166a3957" translate="yes" xml:space="preserve">
          <source>A charset</source>
          <target state="translated">一个字符集</target>
        </trans-unit>
        <trans-unit id="d22770c7dbf1fb019d5babc9504c5657e1aba041" translate="yes" xml:space="preserve">
          <source>A charset coder, that is, either a decoder or an encoder, consumes bytes (or characters) from an input buffer, translates them, and writes the resulting characters (or bytes) to an output buffer. A coding process terminates for one of four categories of reasons, which are described by instances of this class:</source>
          <target state="translated">一个字符集编码器,即解码器或编码器,从输入缓冲区消耗字节(或字符),翻译它们,并将结果的字符(或字节)写入输出缓冲区。编码过程因四类原因之一而终止,这四类原因由该类的实例描述。</target>
        </trans-unit>
        <trans-unit id="bcd0ab276ddc94d3bcc05a6158cfcc333e771240" translate="yes" xml:space="preserve">
          <source>A charset name must begin with either a letter or a digit. The empty string is not a legal charset name. Charset names are not case-sensitive; that is, case is always ignored when comparing charset names. Charset names generally follow the conventions documented in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278: IANA Charset Registration Procedures&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">字符集名称必须以字母或数字开头。空字符串不是合法的字符集名称。字符集名称不区分大小写；也就是说，比较字符集名称时始终忽略大小写。字符集名称通常遵循&lt;a href=&quot;http://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278：IANA字符集注册程序中&lt;/i&gt;&lt;/a&gt;记录的约定。</target>
        </trans-unit>
        <trans-unit id="8e2a95320549b8db94c51a87394ea9c1e0448918" translate="yes" xml:space="preserve">
          <source>A charset name must begin with either a letter or a digit. The empty string is not a legal charset name. Charset names are not case-sensitive; that is, case is always ignored when comparing charset names. Charset names generally follow the conventions documented in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278: IANA Charset Registration Procedures&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">字符集名称必须以字母或数字开头。空字符串不是合法的字符集名称。字符集名称不区分大小写；也就是说，比较字符集名称时始终忽略大小写。字符集名称通常遵循&lt;a href=&quot;https://www.ietf.org/rfc/rfc2278.txt&quot;&gt;&lt;i&gt;RFC 2278：IANA字符集注册过程中&lt;/i&gt;&lt;/a&gt;记录的约定。</target>
        </trans-unit>
        <trans-unit id="4fe6216b2b6912b763b72e1be7ba9f4eee5aa678" translate="yes" xml:space="preserve">
          <source>A charset object for the default charset</source>
          <target state="translated">默认字符集的字符集对象。</target>
        </trans-unit>
        <trans-unit id="21f8395adeb2457ad7d39af82263c878f2937a8d" translate="yes" xml:space="preserve">
          <source>A charset object for the named charset</source>
          <target state="translated">一个名为charset的字符集对象。</target>
        </trans-unit>
        <trans-unit id="18bb2c3bab5292ed8acddebeb49d66ce2ec77bbb" translate="yes" xml:space="preserve">
          <source>A charset object for the named charset, or &lt;code&gt;null&lt;/code&gt; if the named charset is not supported by this provider</source>
          <target state="translated">命名字符集的字符集对象；如果此提供程序不支持命名字符集，则返回 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb32edc10313e3f65dbd9b8601d559d2295da0ed" translate="yes" xml:space="preserve">
          <source>A charset provider identifies itself with a provider-configuration file named &lt;code&gt;java.nio.charset.spi.CharsetProvider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;. The file should contain a list of fully-qualified concrete charset-provider class names, one per line. A line is terminated by any one of a line feed (&lt;code&gt;'\n'&lt;/code&gt;), a carriage return (&lt;code&gt;'\r'&lt;/code&gt;), or a carriage return followed immediately by a line feed. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;'\u0023'&lt;/code&gt;); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">字符集提供程序使用资源目录 &lt;code&gt;META-INF/services&lt;/code&gt; 中名为 &lt;code&gt;java.nio.charset.spi.CharsetProvider&lt;/code&gt; 的提供程序配置文件标识自身。该文件应包含一个完全限定的具体charset-provider类名列表，每行一个。换行符由换行符（ &lt;code&gt;'\n'&lt;/code&gt; ），回车符（ &lt;code&gt;'\r'&lt;/code&gt; ）或回车符后的任意一个终止。每个名称周围的空格和制表符以及空白行将被忽略。注释字符为 &lt;code&gt;'#'&lt;/code&gt; （ &lt;code&gt;'\u0023'&lt;/code&gt; ）;在每一行中，第一个注释字符之后的所有字符都将被忽略。该文件必须使用UTF-8编码。</target>
        </trans-unit>
        <trans-unit id="3bb5f8d2cb453a6dc7cf144db31f427c7be37ff5" translate="yes" xml:space="preserve">
          <source>A charset provider is a concrete subclass of this class that has a zero-argument constructor and some number of associated charset implementation classes. Charset providers may be installed in an instance of the Java platform as extensions, that is, jar files placed into any of the usual extension directories. Providers may also be made available by adding them to the applet or application class path or by some other platform-specific means. Charset providers are looked up via the current thread's &lt;a href=&quot;../../../lang/thread#getContextClassLoader--&quot;&gt;&lt;code&gt;context class
 loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">字符集提供程序是此类的具体子类，具有零参数构造函数和一些关联的字符集实现类。字符集提供程序可以作为扩展安装在Java平台的实例中，也就是说，将jar文件放置在任何常用扩展目录中。也可以通过将提供程序添加到applet或应用程序类路径或通过其他某些特定于平台的方式来使提供程序可用。通过当前线程的&lt;a href=&quot;../../../lang/thread#getContextClassLoader--&quot;&gt; &lt;code&gt;context class loader&lt;/code&gt; &lt;/a&gt;查找Charset提供程序。</target>
        </trans-unit>
        <trans-unit id="fcdd4387e1735ee181ae70c77eedb02f69bb3a74" translate="yes" xml:space="preserve">
          <source>A charset provider is a concrete subclass of this class that has a zero-argument constructor and some number of associated charset implementation classes. Charset providers may be installed in an instance of the Java platform as extensions. Providers may also be made available by adding them to the applet or application class path or by some other platform-specific means. Charset providers are looked up via the current thread's &lt;a href=&quot;../../../lang/thread#getContextClassLoader()&quot;&gt;&lt;code&gt;context class
 loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">字符集提供程序是此类的具体子类，具有零参数构造函数和一些关联的字符集实现类。字符集提供程序可以作为扩展安装在Java平台的实例中。也可以通过将提供程序添加到applet或应用程序类路径或通过其他某些特定于平台的方法来使提供程序可用。通过当前线程的&lt;a href=&quot;../../../lang/thread#getContextClassLoader()&quot;&gt; &lt;code&gt;context class loader&lt;/code&gt; &lt;/a&gt;查找Charset提供程序。</target>
        </trans-unit>
        <trans-unit id="9d6dc81ecb99a6a83dfb6cadac6c7fa6effcc17c" translate="yes" xml:space="preserve">
          <source>A check box is a graphical component that can be in either an &quot;on&quot; (&lt;code&gt;true&lt;/code&gt;) or &quot;off&quot; (&lt;code&gt;false&lt;/code&gt;) state.</source>
          <target state="translated">复选框是一个图形组件，可以处于&amp;ldquo;打开&amp;rdquo;（ &lt;code&gt;true&lt;/code&gt; ）或&amp;ldquo;关闭&amp;rdquo;（ &lt;code&gt;false&lt;/code&gt; ）状态。</target>
        </trans-unit>
        <trans-unit id="66ae41487fb0f59ebd90709f08e9e6d7764b16f8" translate="yes" xml:space="preserve">
          <source>A check box is a graphical component that can be in either an &quot;on&quot; (&lt;code&gt;true&lt;/code&gt;) or &quot;off&quot; (&lt;code&gt;false&lt;/code&gt;) state. Clicking on a check box changes its state from &quot;on&quot; to &quot;off,&quot; or from &quot;off&quot; to &quot;on.&quot;</source>
          <target state="translated">复选框是一个图形组件，可以处于&amp;ldquo;打开&amp;rdquo;（ &lt;code&gt;true&lt;/code&gt; ）或&amp;ldquo;关闭&amp;rdquo;（ &lt;code&gt;false&lt;/code&gt; ）状态。单击复选框将其状态从&amp;ldquo;打开&amp;rdquo;更改为&amp;ldquo;关闭&amp;rdquo;，或从&amp;ldquo;关闭&amp;rdquo;更改为&amp;ldquo;打开&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="fc996ae529d54a16a993527ce6766ddeeb05b1e1" translate="yes" xml:space="preserve">
          <source>A choice that can be checked or unchecked and provides a separate indicator for the current state.</source>
          <target state="translated">一个可以选中或不选中的选择,并为当前状态提供一个单独的指标。</target>
        </trans-unit>
        <trans-unit id="ece31ac787ed07fbedfac8cb5253447ae75ba96a" translate="yes" xml:space="preserve">
          <source>A class &lt;code&gt;Foo&lt;/code&gt; wishing to access preferences pertaining to its package can obtain a preference node as follows:</source>
          <target state="translated">希望访问与其包有关的首选项的 &lt;code&gt;Foo&lt;/code&gt; 类可以按如下方式获得首选项节点：</target>
        </trans-unit>
        <trans-unit id="ae98ff943348b60e461a71dc5e8acbac7acde1d9" translate="yes" xml:space="preserve">
          <source>A class acting as a supplier of guarding dynamic linkers that can be automatically loaded by other language runtimes.</source>
          <target state="translated">作为守护动态链接器的供应者的一个类,它可以被其他语言运行时自动加载。</target>
        </trans-unit>
        <trans-unit id="abed67332837e291e8ce3f94e535f501fc9b28dc" translate="yes" xml:space="preserve">
          <source>A class acting as a supplier of guarding dynamic linkers that can be automatically loaded by other language runtimes. Language runtimes wishing to export their own linkers should subclass this class and implement the &lt;a href=&quot;../../../../java.base/java/util/function/supplier#get()&quot;&gt;&lt;code&gt;Supplier.get()&lt;/code&gt;&lt;/a&gt; method to return a list of exported linkers and declare the subclass in &lt;code&gt;/META-INF/services/jdk.dynalink.linker.GuardingDynamicLinkerExporter&lt;/code&gt; resource of their distribution (typically, JAR file) so that dynamic linker factories can discover them using the &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; mechanism. Note that instantiating this class is tied to a security check for the &lt;code&gt;RuntimePermission(&quot;dynalink.exportLinkersAutomatically&quot;)&lt;/code&gt; when a security manager is present, to ensure that only trusted runtimes can automatically export their linkers into other runtimes.</source>
          <target state="translated">充当保护动态链接程序的提供者的类，该链接程序可以由其他语言运行时自动加载。希望导出自己的链接器的语言运行时应将该类作为子类，并实现&lt;a href=&quot;../../../../java.base/java/util/function/supplier#get()&quot;&gt; &lt;code&gt;Supplier.get()&lt;/code&gt; &lt;/a&gt;方法以返回已导出的链接器列表，并在其各自的 &lt;code&gt;/META-INF/services/jdk.dynalink.linker.GuardingDynamicLinkerExporter&lt;/code&gt; 资源中声明该子类。分发（通常是JAR文件），以便动态链接程序工厂可以使用&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;机制发现它们。请注意，实例化此类与对 &lt;code&gt;RuntimePermission(&quot;dynalink.exportLinkersAutomatically&quot;)&lt;/code&gt; 的安全检查相关联 如果存在安全管理器，请确保只有受信任的运行时才能将其链接程序自动导出到其他运行时。</target>
        </trans-unit>
        <trans-unit id="6fba903462c5e274f857cc56faf41e8e1cdf8504" translate="yes" xml:space="preserve">
          <source>A class attribute expression. The returned object will be serialized as an instance of the non-public class  javax.management.ClassAttributeValueExp.</source>
          <target state="translated">一个类属性表达式。返回的对象将被序列化为非公开类javax.management.ClassAttributeValueExp的实例。</target>
        </trans-unit>
        <trans-unit id="b70e7a0c27b89abfe494762079ddd5f5ea4432e8" translate="yes" xml:space="preserve">
          <source>A class attribute expression. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.ClassAttributeValueExp&quot;&gt; javax.management.ClassAttributeValueExp&lt;/a&gt;.</source>
          <target state="translated">类属性表达式。返回的对象将被序列化为非公共类&lt;a href=&quot;../../serialized-form#javax.management.ClassAttributeValueExp&quot;&gt;javax.management.ClassAttributeValueExp&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="767fd0deaf3510407bac3c69daa307c5c6a9f25f" translate="yes" xml:space="preserve">
          <source>A class attribute expression. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.ClassAttributeValueExp&quot;&gt; javax.management.ClassAttributeValueExp&lt;/a&gt;.</source>
          <target state="translated">类属性表达式。返回的对象将被序列化为非公共类&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.ClassAttributeValueExp&quot;&gt;javax.management.ClassAttributeValueExp&lt;/a&gt;的实例。</target>
        </trans-unit>
        <trans-unit id="c89a8aacf78b87597462542f12b1287b60ecb678" translate="yes" xml:space="preserve">
          <source>A class can implement the &lt;code&gt;Observer&lt;/code&gt; interface when it wants to be informed of changes in observable objects.</source>
          <target state="translated">当一个类希望被告知可观察对象的变化时，可以实现 &lt;code&gt;Observer&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="aba1fcf9735c8794d9553c9de8b9def398f44c4b" translate="yes" xml:space="preserve">
          <source>A class containing static convenience methods for locating &lt;code&gt;ImageReader&lt;/code&gt;s and &lt;code&gt;ImageWriter&lt;/code&gt;s, and performing simple encoding and decoding.</source>
          <target state="translated">包含用于定位 &lt;code&gt;ImageReader&lt;/code&gt; 和 &lt;code&gt;ImageWriter&lt;/code&gt; 并执行简单编码和解码的静态便利方法的类。</target>
        </trans-unit>
        <trans-unit id="c0334b4ce731ca83d507f211dc5bcced61e8bc5f" translate="yes" xml:space="preserve">
          <source>A class containing the TIFF tags used to reference the Exif and GPS IFDs.</source>
          <target state="translated">一个包含TIFF标签的类,用于引用Exif和GPS IFDs。</target>
        </trans-unit>
        <trans-unit id="1c946b8d62ea15a903d31e5943f708157fec4d07" translate="yes" xml:space="preserve">
          <source>A class containing the TIFF tags used to reference the Exif and GPS IFDs. This tag set should be added to the root tag set by means of the &lt;a href=&quot;tiffimagereadparam#addAllowedTagSet(javax.imageio.plugins.tiff.TIFFTagSet)&quot;&gt;&lt;code&gt;TIFFImageReadParam.addAllowedTagSet&lt;/code&gt;&lt;/a&gt; method if Exif support is desired.</source>
          <target state="translated">包含用于引用Exif和GPS IFD的TIFF标签的类。如果需要Exif支持，&lt;a href=&quot;tiffimagereadparam#addAllowedTagSet(javax.imageio.plugins.tiff.TIFFTagSet)&quot;&gt; &lt;code&gt;TIFFImageReadParam.addAllowedTagSet&lt;/code&gt; &lt;/a&gt;方法将此标签集添加到根标签集。</target>
        </trans-unit>
        <trans-unit id="641749c8a9d68528cad53c114c0e0349b0997a09" translate="yes" xml:space="preserve">
          <source>A class declaration.</source>
          <target state="translated">一个类的声明。</target>
        </trans-unit>
        <trans-unit id="bc91ee34ec987f996cdefc11a3e239b5bf5d6288" translate="yes" xml:space="preserve">
          <source>A class declaration. A &lt;code&gt;SubKind&lt;/code&gt; of &lt;a href=&quot;snippet.kind#TYPE_DECL&quot;&gt;&lt;code&gt;Snippet.Kind.TYPE_DECL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">类声明。一个 &lt;code&gt;SubKind&lt;/code&gt; 的&lt;a href=&quot;snippet.kind#TYPE_DECL&quot;&gt; &lt;code&gt;Snippet.Kind.TYPE_DECL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ce0000d9fedd31b80c15cba3d9a9ef3dc49592dd" translate="yes" xml:space="preserve">
          <source>A class defining the notion of a TIFF tag.</source>
          <target state="translated">一个定义 TIFF 标签概念的类。</target>
        </trans-unit>
        <trans-unit id="f4de1c4fa220b7678865e87b1b2b26f0c6f28c68" translate="yes" xml:space="preserve">
          <source>A class defining the notion of a TIFF tag. A TIFF tag is a key that may appear in an Image File Directory (IFD). In the IFD each tag has some data associated with it, which may consist of zero or more values of a given data type. The combination of a tag and a value is known as an IFD Entry or TIFF Field.</source>
          <target state="translated">一个定义 TIFF 标签概念的类。TIFF标签是可能出现在图像文件目录(IFD)中的一个键。在 IFD 中,每个标签都有一些与之相关的数据,这些数据可能由给定数据类型的零个或多个值组成。标签和值的组合称为IFD条目或TIFF字段。</target>
        </trans-unit>
        <trans-unit id="317047d47afb67f04ec027478f70d7ecc2962ebb" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be decoded.</source>
          <target state="translated">一个描述如何对流进行解码的类。</target>
        </trans-unit>
        <trans-unit id="c9b6d1a8dfd34b6a2f783596c581d7bf8cfbfa2a" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be decoded. Instances of this class or its subclasses are used to supply prescriptive &quot;how-to&quot; information to instances of &lt;code&gt;ImageReader&lt;/code&gt;.</source>
          <target state="translated">一个类，描述如何对流进行解码。此类或其子类的实例用于向 &lt;code&gt;ImageReader&lt;/code&gt; 的实例提供说明性的&amp;ldquo;操作方法&amp;rdquo;信息。</target>
        </trans-unit>
        <trans-unit id="bdb5406053749def02227e1d5e2b473d7e57d6aa" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be encoded.</source>
          <target state="translated">一个描述如何对流进行编码的类。</target>
        </trans-unit>
        <trans-unit id="eb7e66efcdb5a0340069e0f95db4d8c40901525c" translate="yes" xml:space="preserve">
          <source>A class describing how a stream is to be encoded. Instances of this class or its subclasses are used to supply prescriptive &quot;how-to&quot; information to instances of &lt;code&gt;ImageWriter&lt;/code&gt;.</source>
          <target state="translated">一个类，描述如何对流进行编码。此类或其子类的实例用于向 &lt;code&gt;ImageWriter&lt;/code&gt; 实例提供说明性的&amp;ldquo;操作方法&amp;rdquo;信息。</target>
        </trans-unit>
        <trans-unit id="e5034257b5743dfaf2facf699619ce7949ccab52" translate="yes" xml:space="preserve">
          <source>A class designed to produce preconfigured &quot;accessory&quot; objects to insert into color choosers.</source>
          <target state="translated">一个旨在生成预配置的 &quot;附件 &quot;对象的类,以插入到颜色选择器中。</target>
        </trans-unit>
        <trans-unit id="c4cea7f0cea8b3c4c1d900e2c74bafad3d5dc6b1" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG Huffman table.</source>
          <target state="translated">一个封装单个JPEG赫夫曼表的类。</target>
        </trans-unit>
        <trans-unit id="321f8c15f8e226bd6268946f3635814d5dc70788" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG Huffman table. Fields are provided for the &quot;standard&quot; tables taken from Annex K of the JPEG specification. These are the tables used as defaults.</source>
          <target state="translated">一个封装单个JPEG赫夫曼表的类。从JPEG规范的附件K中为 &quot;标准 &quot;表提供了字段。这些表被用作默认值。</target>
        </trans-unit>
        <trans-unit id="7d0f9ed539cc05958b0c68b8a54ebd530f7cf999" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG quantization table.</source>
          <target state="translated">一个封装单个JPEG量化表的类。</target>
        </trans-unit>
        <trans-unit id="9a5e3d73505c4420c99527a5d829a03a35d0ff9c" translate="yes" xml:space="preserve">
          <source>A class encapsulating a single JPEG quantization table. The elements appear in natural order (as opposed to zig-zag order). Static variables are provided for the &quot;standard&quot; tables taken from Annex K of the JPEG specification, as well as the default tables conventionally used for visually lossless encoding.</source>
          <target state="translated">一个封装单个JPEG量化表的类。这些元素以自然顺序出现(相对于曲折的顺序)。静态变量是为 &quot;标准 &quot;表提供的,从JPEG规范的附件K中提取,以及默认表通常用于视觉无损编码。</target>
        </trans-unit>
        <trans-unit id="44f8037065e3191d22b9bee6220170570919d116" translate="yes" xml:space="preserve">
          <source>A class encapsulating state useful when painting.</source>
          <target state="translated">一个封装了绘画时有用的状态的类。</target>
        </trans-unit>
        <trans-unit id="cc9d6ee592a3b7b332ff1cbb6d82df947b65806d" translate="yes" xml:space="preserve">
          <source>A class encapsulating state useful when painting. Generally, instances of this class are created once, and reused for each paint request without modification. This class contains values useful when hinting the cache engine, and when decoding control points and bezier curve anchors.</source>
          <target state="translated">一个封装了绘画时有用的状态的类。一般来说,这个类的实例只创建一次,并在每次绘制请求时不加修改地重复使用。这个类包含了在提示缓存引擎时,以及在解码控制点和贝塞尔曲线锚时有用的值。</target>
        </trans-unit>
        <trans-unit id="bde55079a3684e11cbe1598e95c1ba9db4e8a1f3" translate="yes" xml:space="preserve">
          <source>A class file can also be created to hold information about a package, including package annotations. To create a class file for a named package, have the &lt;code&gt;name&lt;/code&gt; argument be the package's name followed by &lt;code&gt;&quot;.package-info&quot;&lt;/code&gt;; creating a class file for an unnamed package is not supported.</source>
          <target state="translated">也可以创建一个类文件来保存有关程序包的信息，包括程序包注释。要为命名包创建类文件，请将 &lt;code&gt;name&lt;/code&gt; 参数作为包的名称，后跟 &lt;code&gt;&quot;.package-info&quot;&lt;/code&gt; ; 不支持为未命名的程序包创建类文件。</target>
        </trans-unit>
        <trans-unit id="d524dbc67636cae0787b2f597b10cfb1ce326300" translate="yes" xml:space="preserve">
          <source>A class for building certification paths (also known as certificate chains).</source>
          <target state="translated">构建认证路径(又称证书链)的一类。</target>
        </trans-unit>
        <trans-unit id="79a919ed13386b15bc475fe84e9d59954394707e" translate="yes" xml:space="preserve">
          <source>A class for retrieving &lt;code&gt;Certificate&lt;/code&gt;s and &lt;code&gt;CRL&lt;/code&gt;s from a repository.</source>
          <target state="translated">用于从存储库中检索 &lt;code&gt;Certificate&lt;/code&gt; 和 &lt;code&gt;CRL&lt;/code&gt; 的类。</target>
        </trans-unit>
        <trans-unit id="ec4b47f315864b8bfb44767c9e4144c8782ed06e" translate="yes" xml:space="preserve">
          <source>A class for validating certification paths (also known as certificate chains).</source>
          <target state="translated">一个用于验证认证路径(也称为证书链)的类。</target>
        </trans-unit>
        <trans-unit id="b5cf2a4811c8c47c2f2e81f99cd8b41ae527cd0f" translate="yes" xml:space="preserve">
          <source>A class implementing this interface is an &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt;. A Java virtual machine has one or more implementations of this interface. The &lt;a href=&quot;managementfactory#getPlatformMXBeans(java.lang.Class)&quot;&gt;&lt;code&gt;getPlatformMXBeans&lt;/code&gt;&lt;/a&gt; method can be used to obtain the list of &lt;code&gt;BufferPoolMXBean&lt;/code&gt; objects representing the management interfaces for pools of buffers as follows:</source>
          <target state="translated">实现此接口的类是&lt;a href=&quot;../../../javax/management/mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; &lt;/a&gt;。Java虚拟机具有此接口的一个或多个实现。该&lt;a href=&quot;managementfactory#getPlatformMXBeans(java.lang.Class)&quot;&gt; &lt;code&gt;getPlatformMXBeans&lt;/code&gt; &lt;/a&gt;方法可用于获得列表 &lt;code&gt;BufferPoolMXBean&lt;/code&gt; 对象表示如下为缓冲器池的管理接口：</target>
        </trans-unit>
        <trans-unit id="a4826fac13ffcb96ddcf1d4b8835ded2eb4fc3d3" translate="yes" xml:space="preserve">
          <source>A class implementing this interface is an &lt;a href=&quot;../../../javax/management/mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt;. A Java virtual machine has one or more implementations of this interface. The &lt;a href=&quot;managementfactory#getPlatformMXBeans-java.lang.Class-&quot;&gt;&lt;code&gt;getPlatformMXBeans&lt;/code&gt;&lt;/a&gt; method can be used to obtain the list of &lt;code&gt;BufferPoolMXBean&lt;/code&gt; objects representing the management interfaces for pools of buffers as follows:</source>
          <target state="translated">实现此接口的类是&lt;a href=&quot;../../../javax/management/mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; &lt;/a&gt;。Java虚拟机具有此接口的一个或多个实现。该&lt;a href=&quot;managementfactory#getPlatformMXBeans-java.lang.Class-&quot;&gt; &lt;code&gt;getPlatformMXBeans&lt;/code&gt; &lt;/a&gt;方法可用于获得列表 &lt;code&gt;BufferPoolMXBean&lt;/code&gt; 对象表示如下为缓冲器池的管理接口：</target>
        </trans-unit>
        <trans-unit id="30cb9bfe590afa7140059341db51e815882fadf3" translate="yes" xml:space="preserve">
          <source>A class implements the &lt;code&gt;Cloneable&lt;/code&gt; interface to indicate to the &lt;a href=&quot;object#clone()&quot;&gt;&lt;code&gt;Object.clone()&lt;/code&gt;&lt;/a&gt; method that it is legal for that method to make a field-for-field copy of instances of that class.</source>
          <target state="translated">一个类实现 &lt;code&gt;Cloneable&lt;/code&gt; 接口，以向&lt;a href=&quot;object#clone()&quot;&gt; &lt;code&gt;Object.clone()&lt;/code&gt; &lt;/a&gt;方法指示该方法为该类的实例进行逐域复制是合法的。</target>
        </trans-unit>
        <trans-unit id="3428d317a441756ed9f2c24a1df7a91726e5d72d" translate="yes" xml:space="preserve">
          <source>A class implements the &lt;code&gt;Cloneable&lt;/code&gt; interface to indicate to the &lt;a href=&quot;object#clone--&quot;&gt;&lt;code&gt;Object.clone()&lt;/code&gt;&lt;/a&gt; method that it is legal for that method to make a field-for-field copy of instances of that class.</source>
          <target state="translated">一个类实现 &lt;code&gt;Cloneable&lt;/code&gt; 接口，以向&lt;a href=&quot;object#clone--&quot;&gt; &lt;code&gt;Object.clone()&lt;/code&gt; &lt;/a&gt;方法指示该方法为该类的实例进行逐域复制是合法的。</target>
        </trans-unit>
        <trans-unit id="c8075902995269160e86cb8b9ba140e903437aff" translate="yes" xml:space="preserve">
          <source>A class install (load or redefine) encountered a problem.</source>
          <target state="translated">一个类的安装(加载或重新定义)遇到了问题。</target>
        </trans-unit>
        <trans-unit id="9c8b9f339d61d938dcccc73bcd63029bdd10d347" translate="yes" xml:space="preserve">
          <source>A class loader is an object that is responsible for loading classes.</source>
          <target state="translated">类加载器是一个负责加载类的对象。</target>
        </trans-unit>
        <trans-unit id="483c50e9fa089e4562649e86aded48aaae4bb6ff" translate="yes" xml:space="preserve">
          <source>A class loader is an object that is responsible for loading classes. The class &lt;code&gt;ClassLoader&lt;/code&gt; is an abstract class. Given the &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class. A typical strategy is to transform the name into a file name and then read a &quot;class file&quot; of that name from a file system.</source>
          <target state="translated">类加载器是负责加载类的对象。类 &lt;code&gt;ClassLoader&lt;/code&gt; 是一个抽象类。给定类的&lt;a href=&quot;#binary-name&quot;&gt;二进制名称&lt;/a&gt;，类加载器应尝试查找或生成构成该类定义的数据。一种典型的策略是将名称转换为文件名，然后从文件系统中读取该名称的&amp;ldquo;类文件&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="9cff8322dc2f981b7001727324b185bd2894264e" translate="yes" xml:space="preserve">
          <source>A class loader is an object that is responsible for loading classes. The class &lt;code&gt;ClassLoader&lt;/code&gt; is an abstract class. Given the &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt; of a class, a class loader should attempt to locate or generate data that constitutes a definition for the class. A typical strategy is to transform the name into a file name and then read a &quot;class file&quot; of that name from a file system.</source>
          <target state="translated">类加载器是负责加载类的对象。类 &lt;code&gt;ClassLoader&lt;/code&gt; 是一个抽象类。给定类的&lt;a href=&quot;#name&quot;&gt;二进制名称&lt;/a&gt;，类加载器应尝试查找或生成构成该类定义的数据。一种典型的策略是将名称转换为文件名，然后从文件系统中读取该名称的&amp;ldquo;类文件&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="4108fac3f645fe70cf248e15dab179847668a929" translate="yes" xml:space="preserve">
          <source>A class loader object from the target VM.</source>
          <target state="translated">来自目标虚拟机的类加载器对象。</target>
        </trans-unit>
        <trans-unit id="d99577b9ecdd28327146103bc3d4e51f9c754501" translate="yes" xml:space="preserve">
          <source>A class loader object from the target VM. A ClassLoaderReference is an &lt;a href=&quot;objectreference&quot;&gt;&lt;code&gt;ObjectReference&lt;/code&gt;&lt;/a&gt; with additional access to classloader-specific information from the target VM. Instances ClassLoaderReference are obtained through calls to &lt;a href=&quot;referencetype#classLoader()&quot;&gt;&lt;code&gt;ReferenceType.classLoader()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">目标VM的类加载器对象。 ClassLoaderReference是一个&lt;a href=&quot;objectreference&quot;&gt; &lt;code&gt;ObjectReference&lt;/code&gt; &lt;/a&gt;，可以从目标VM附加访问特定于类加载器的信息。实例ClassLoaderReference是通过调用&lt;a href=&quot;referencetype#classLoader()&quot;&gt; &lt;code&gt;ReferenceType.classLoader()&lt;/code&gt; 获得的&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28bc76f0c319effd2168c6c88997fb73db1ee3ba" translate="yes" xml:space="preserve">
          <source>A class loader that wishes to define a package for classes in a JAR typically uses the specification and implementation titles, versions, and vendors from the JAR's manifest. If the package is specified as &lt;a href=&quot;../util/jar/attributes.name#SEALED&quot;&gt;sealed&lt;/a&gt; in the JAR's manifest, the &lt;code&gt;URL&lt;/code&gt; of the JAR file is typically used as the &lt;code&gt;sealBase&lt;/code&gt;. If classes of package &lt;code&gt;'p'&lt;/code&gt; defined by this class loader are loaded from multiple JARs, the &lt;code&gt;Package&lt;/code&gt; object may contain different information depending on the first class of package &lt;code&gt;'p'&lt;/code&gt; defined and which JAR's manifest is read first to explicitly define package &lt;code&gt;'p'&lt;/code&gt;.</source>
          <target state="translated">希望为JAR中的类定义程序包的类加载器通常使用JAR清单中的规范和实现标题，版本和供应商。如果在JAR的清单中将包指定为&lt;a href=&quot;../util/jar/attributes.name#SEALED&quot;&gt;密封&lt;/a&gt;的，则通常将JAR文件的 &lt;code&gt;URL&lt;/code&gt; 用作 &lt;code&gt;sealBase&lt;/code&gt; 。如果从多个JAR加载了由该类加载器定义的包 &lt;code&gt;'p'&lt;/code&gt; 的类，则 &lt;code&gt;Package&lt;/code&gt; 对象可能包含不同的信息，具体取决于定义的包 &lt;code&gt;'p'&lt;/code&gt; 的第一类，并且首先读取哪个JAR清单来显式定义包 &lt;code&gt;'p'&lt;/code&gt; 。。</target>
        </trans-unit>
        <trans-unit id="7ce39fd66531a7a384263f9e859092a5c3c09aed" translate="yes" xml:space="preserve">
          <source>A class name pattern can also be empty or the single character &quot;&lt;code&gt;*&lt;/code&gt;&quot;, both of which grant access to any class.</source>
          <target state="translated">类名模式也可以为空，也可以为单个字符&amp;ldquo; &lt;code&gt;*&lt;/code&gt; &amp;rdquo;，这两个字符都可以访问任何类。</target>
        </trans-unit>
        <trans-unit id="eafdfdaff9ebe1458ff0f0d387bac53a390d9b47" translate="yes" xml:space="preserve">
          <source>A class not described by a more specific kind (like &lt;code&gt;
 ENUM&lt;/code&gt; or &lt;code&gt;RECORD&lt;/code&gt;).</source>
          <target state="translated">未用更具体的类型描述的类（例如 &lt;code&gt; ENUM&lt;/code&gt; 或 &lt;code&gt;RECORD&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="e317baf1134b30d7d9e54b8f4adcb3831a0e31b4" translate="yes" xml:space="preserve">
          <source>A class not described by a more specific kind (like &lt;code&gt;ENUM&lt;/code&gt;).</source>
          <target state="translated">没有用更具体的种类描述的类（例如 &lt;code&gt;ENUM&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a440e6b75c88a838558e44089c2773db3f9d7efa" translate="yes" xml:space="preserve">
          <source>A class or instance variable in the target VM.</source>
          <target state="translated">目标虚拟机中的一个类或实例变量。</target>
        </trans-unit>
        <trans-unit id="bd1b2f64d2ced9541ef1039b02a0d85f236cd2e0" translate="yes" xml:space="preserve">
          <source>A class or instance variable in the target VM. See &lt;a href=&quot;typecomponent&quot;&gt;&lt;code&gt;TypeComponent&lt;/code&gt;&lt;/a&gt; for general information about Field and Method mirrors.</source>
          <target state="translated">目标VM中的类或实例变量。有关字段和方法镜像的一般信息，请参见&lt;a href=&quot;typecomponent&quot;&gt; &lt;code&gt;TypeComponent&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="223baf0622d960f0075afe47ba5da29a671febc8" translate="yes" xml:space="preserve">
          <source>A class or interface created by &lt;a href=&quot;../classloader#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt;a class loader&lt;/a&gt; has a strong relationship with that class loader. That is, every &lt;code&gt;Class&lt;/code&gt; object contains a reference to the &lt;code&gt;ClassLoader&lt;/code&gt; that &lt;a href=&quot;../class#getClassLoader()&quot;&gt;defined it&lt;/a&gt;. This means that a class created by a class loader may be unloaded if and only if its defining loader is not reachable and thus may be reclaimed by a garbage collector (JLS 12.7). By default, however, a hidden class or interface may be unloaded even if the class loader that is marked as its defining loader is &lt;a href=&quot;../ref/package#reachability&quot;&gt;reachable&lt;/a&gt;. This behavior is useful when a hidden class or interface serves multiple classes defined by arbitrary class loaders. In other cases, a hidden class or interface may be linked to a single class (or a small number of classes) with the same defining loader as the hidden class or interface. In such cases, where the hidden class or interface must be coterminous with a normal class or interface, the &lt;a href=&quot;methodhandles.lookup.classoption#STRONG&quot;&gt;&lt;code&gt;STRONG&lt;/code&gt;&lt;/a&gt; option may be passed in &lt;code&gt;options&lt;/code&gt;. This arranges for a hidden class to have the same strong relationship with the class loader marked as its defining loader, as a normal class or interface has with its own defining loader. If &lt;code&gt;STRONG&lt;/code&gt; is not used, then the invoker of &lt;code&gt;defineHiddenClass&lt;/code&gt; may still prevent a hidden class or interface from being unloaded by ensuring that the &lt;code&gt;Class&lt;/code&gt; object is reachable.</source>
          <target state="translated">由&lt;a href=&quot;../classloader#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt;类加载器&lt;/a&gt;创建的类或接口与该类加载器有很强的关系。也就是说，每一个 &lt;code&gt;Class&lt;/code&gt; 对象包含到一个参考 &lt;code&gt;ClassLoader&lt;/code&gt; 该&lt;a href=&quot;../class#getClassLoader()&quot;&gt;定义它&lt;/a&gt;。这意味着由类加载器创建的类可以在且仅当其定义的加载器不可访问且因此可以被垃圾收集器回收时才被卸载（JLS 12.7）。但是，默认情况下，即使标记为定义加载程序的类加载程序是&lt;a href=&quot;../ref/package#reachability&quot;&gt;可访问的&lt;/a&gt;，也可以卸载隐藏的类或接口。。当隐藏的类或接口为由任意类加载器定义的多个类提供服务时，此行为很有用。在其他情况下，可以使用与隐藏类或接口相同的定义加载程序将隐藏类或接口链接到单个类（或少量类）。在这种情况下，如果隐藏的类或接口必须与普通的类或接口相接，则可以在 &lt;code&gt;options&lt;/code&gt; 中传递&lt;a href=&quot;methodhandles.lookup.classoption#STRONG&quot;&gt; &lt;code&gt;STRONG&lt;/code&gt; &lt;/a&gt;选项。这将使隐藏的类与标记为其定义加载器的类加载器具有相同的牢固关系，就像普通类或接口具有其自己的定义加载器一样。如果不使用 &lt;code&gt;STRONG&lt;/code&gt; ，则 &lt;code&gt;defineHiddenClass&lt;/code&gt; 的调用者通过确保 &lt;code&gt;Class&lt;/code&gt; 对象可访问，仍然可以防止隐藏的类或接口被卸载。</target>
        </trans-unit>
        <trans-unit id="c9f583fe8bfb7ef404c8235f8d53f12d3627a07e" translate="yes" xml:space="preserve">
          <source>A class or interface created by the invocation of &lt;a href=&quot;invoke/methodhandles.lookup#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)&quot;&gt;&lt;code&gt;Lookup::defineHiddenClass&lt;/code&gt;&lt;/a&gt; is a &lt;a href=&quot;#isHidden()&quot;&gt;&lt;em&gt;hidden&lt;/em&gt;&lt;/a&gt; class or interface. All kinds of class, including enum types and record types, may be hidden classes; all kinds of interface, including annotation types, may be hidden interfaces. The &lt;a href=&quot;#getName()&quot;&gt;name of a hidden class or interface&lt;/a&gt; is not a &lt;a href=&quot;classloader#binary-name&quot;&gt;binary name&lt;/a&gt;, which means the following:</source>
          <target state="translated">通过调用&lt;a href=&quot;invoke/methodhandles.lookup#defineHiddenClass(byte%5B%5D,boolean,java.lang.invoke.MethodHandles.Lookup.ClassOption...)&quot;&gt; &lt;code&gt;Lookup::defineHiddenClass&lt;/code&gt; &lt;/a&gt;创建的类或接口是&lt;a href=&quot;#isHidden()&quot;&gt;&lt;em&gt;隐藏的&lt;/em&gt;&lt;/a&gt;类或接口。所有种类的类，包括枚举类型和记录类型，都可能是隐藏的类。包括注释类型在内的各种接口都可能是隐藏的接口。所述&lt;a href=&quot;#getName()&quot;&gt;隐藏类或接口的名称&lt;/a&gt;不是&lt;a href=&quot;classloader#binary-name&quot;&gt;二进制名称&lt;/a&gt;，这意味着以下情况：</target>
        </trans-unit>
        <trans-unit id="bc3cd42645526b63c6b87578e25cc1cecfc66711" translate="yes" xml:space="preserve">
          <source>A class or interface type that could not be resolved.</source>
          <target state="translated">无法解析的类或接口类型。</target>
        </trans-unit>
        <trans-unit id="6a03a390b706ffc95966f4d839f5e6763859f7f2" translate="yes" xml:space="preserve">
          <source>A class or interface type.</source>
          <target state="translated">一个类或接口类型。</target>
        </trans-unit>
        <trans-unit id="eeec5ed6b752d7b244e35cceec9fac5e56058a29" translate="yes" xml:space="preserve">
          <source>A class representing a field in a TIFF 6.0 Image File Directory.</source>
          <target state="translated">一个代表TIFF 6.0图像文件目录中的字段的类。</target>
        </trans-unit>
        <trans-unit id="1ceaf0ae9fac66af5c5c71328e5f53e64786f589" translate="yes" xml:space="preserve">
          <source>A class representing a mutable reference to an array of bytes and an offset and length within that array.</source>
          <target state="translated">一个表示对字节数组的可变引用以及数组内偏移量和长度的类。</target>
        </trans-unit>
        <trans-unit id="4a48a4b9106cdb7952ce705c7bb7a3668a981ba8" translate="yes" xml:space="preserve">
          <source>A class representing a mutable reference to an array of bytes and an offset and length within that array. &lt;code&gt;IIOByteBuffer&lt;/code&gt; is used by &lt;code&gt;ImageInputStream&lt;/code&gt; to supply a sequence of bytes to the caller, possibly with fewer copies than using the conventional &lt;code&gt;read&lt;/code&gt; methods that take a user-supplied byte array.</source>
          <target state="translated">一个类，表示对字节数组的可变引用以及该数组内的偏移量和长度。 &lt;code&gt;ImageInputStream&lt;/code&gt; 使用 &lt;code&gt;IIOByteBuffer&lt;/code&gt; 将字节序列提供给调用方，与使用采用用户提供的字节数组的常规 &lt;code&gt;read&lt;/code&gt; 方法相比，副本的副本数可能更少。</target>
        </trans-unit>
        <trans-unit id="e9dd636c411f076fe4378038d5f1703cc19f7d24" translate="yes" xml:space="preserve">
          <source>A class representing a node in a meta-data tree, which implements the  &lt;code&gt;org.w3c.dom.Element&lt;/code&gt; interface and additionally allows for the storage of non-textual objects via the &lt;code&gt;getUserObject&lt;/code&gt; and &lt;code&gt;setUserObject&lt;/code&gt; methods.</source>
          <target state="translated">一个表示元数据树中的节点的类，该类实现 &lt;code&gt;org.w3c.dom.Element&lt;/code&gt; 接口，并另外允许通过 &lt;code&gt;getUserObject&lt;/code&gt; 和 &lt;code&gt;setUserObject&lt;/code&gt; 方法存储非文本对象。</target>
        </trans-unit>
        <trans-unit id="31770ec82ed7a7631fb0df3ef8512d4ee88b8cad" translate="yes" xml:space="preserve">
          <source>A class representing a node in a meta-data tree, which implements the &lt;a href=&quot;../../../../java.xml/org/w3c/dom/element&quot;&gt;&lt;code&gt;org.w3c.dom.Element&lt;/code&gt;&lt;/a&gt; interface and additionally allows for the storage of non-textual objects via the &lt;code&gt;getUserObject&lt;/code&gt; and &lt;code&gt;setUserObject&lt;/code&gt; methods.</source>
          <target state="translated">一个表示元数据树中的节点的类，该类实现&lt;a href=&quot;../../../../java.xml/org/w3c/dom/element&quot;&gt; &lt;code&gt;org.w3c.dom.Element&lt;/code&gt; &lt;/a&gt;接口，并另外允许通过 &lt;code&gt;getUserObject&lt;/code&gt; 和 &lt;code&gt;setUserObject&lt;/code&gt; 方法存储非文本对象。</target>
        </trans-unit>
        <trans-unit id="aa458131f0ff37b7112e04879ddc2839c58b609a" translate="yes" xml:space="preserve">
          <source>A class representing a rectangular array of pixels.</source>
          <target state="translated">一个表示矩形像素数组的类。</target>
        </trans-unit>
        <trans-unit id="0240e3aa9f0230fc803745e8fa3b52820913e9df" translate="yes" xml:space="preserve">
          <source>A class representing a rectangular array of pixels. A Raster encapsulates a DataBuffer that stores the sample values and a SampleModel that describes how to locate a given sample value in a DataBuffer.</source>
          <target state="translated">一个代表像素的矩形数组的类。一个Raster封装了一个存储样本值的DataBuffer和一个描述如何在DataBuffer中定位给定样本值的SampleModel。</target>
        </trans-unit>
        <trans-unit id="dc59480a1d752590ed85efab39445c512153f1b4" translate="yes" xml:space="preserve">
          <source>A class representing a set of TIFF tags.</source>
          <target state="translated">一个代表TIFF标签集的类。</target>
        </trans-unit>
        <trans-unit id="549cc45802ab080822e624dddc4d2092ceaada25" translate="yes" xml:space="preserve">
          <source>A class representing a set of TIFF tags. Each tag in the set must have a unique number (this is a limitation of the TIFF specification itself).</source>
          <target state="translated">一个代表TIFF标签集的类。集合中的每个标签必须有一个唯一的编号(这是TIFF规范本身的限制)。</target>
        </trans-unit>
        <trans-unit id="cf35a2292268ef14707ab51444acb570507d98a9" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve private keys as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)&lt;/a&gt;, including the curve and other algorithm parameters.</source>
          <target state="translated">一个类，表示&lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032中&lt;/a&gt;定义的椭圆曲线私钥：Edwards-Curve Digital Signature Algorithm（EdDSA），包括曲线和其他算法参数。</target>
        </trans-unit>
        <trans-unit id="c5e665b8a423149b8e92b890c860babf58604f5f" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve private keys as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)&lt;/a&gt;, including the curve and other algorithm parameters. The private key is a bit string represented using a byte array. This class only supports bit string lengths that are a multiple of 8.</source>
          <target state="translated">一个类，表示&lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032中&lt;/a&gt;定义的椭圆曲线私钥：Edwards-Curve Digital Signature Algorithm（EdDSA），包括曲线和其他算法参数。私钥是使用字节数组表示的位字符串。此类仅支持8的倍数的位字符串长度。</target>
        </trans-unit>
        <trans-unit id="bf3e8146bb2649a21a546240318b9148a02bf417" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve private keys as defined in RFC 7748, including the curve and other algorithm parameters.</source>
          <target state="translated">代表RFC 7748中定义的椭圆曲线私钥的类,包括曲线和其他算法参数。</target>
        </trans-unit>
        <trans-unit id="6350dab2b329b90dfef3c402ac607a717719da0d" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve private keys as defined in RFC 7748, including the curve and other algorithm parameters. The private key is represented as an encoded scalar value. The decoding procedure defined in the RFC includes an operation that forces certain bits of the key to either 1 or 0. This operation is known as &quot;pruning&quot; or &quot;clamping&quot; the private key. All arrays in this spec are unpruned, and implementations will need to prune the array before using it in any numerical operations.</source>
          <target state="translated">一个代表RFC 7748中定义的椭圆曲线私钥的类,包括曲线和其他算法参数。私钥用一个编码的标量值表示。RFC中定义的解码过程包括一个强制密钥某些位为1或0的操作,这个操作被称为 &quot;修剪 &quot;或 &quot;夹紧 &quot;私钥。本规范中的所有数组都是未经修剪的,在任何数值运算中使用数组之前,实现者都需要对数组进行修剪。</target>
        </trans-unit>
        <trans-unit id="5ba7f8326097dcf0dcc3c32cf020861916678fa8" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve public keys as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)&lt;/a&gt;, including the curve and other algorithm parameters.</source>
          <target state="translated">一个类，表示&lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032中&lt;/a&gt;定义的椭圆曲线公钥：Edwards-Curve数字签名算法（EdDSA），包括曲线和其他算法参数。</target>
        </trans-unit>
        <trans-unit id="818fea0754db86edb48c136cacdc3abdb706edeb" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve public keys as defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)&lt;/a&gt;, including the curve and other algorithm parameters. The public key is a point on the curve, which is represented using an &lt;code&gt;EdECPoint&lt;/code&gt;.</source>
          <target state="translated">一个类，表示&lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032中&lt;/a&gt;定义的椭圆曲线公钥：Edwards-Curve数字签名算法（EdDSA），包括曲线和其他算法参数。公钥是曲线上的一个点，使用 &lt;code&gt;EdECPoint&lt;/code&gt; 表示。</target>
        </trans-unit>
        <trans-unit id="47e6d76e25b1c4d7ec2e9a6c6896665d47bf80f7" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve public keys as defined in RFC 7748, including the curve and other algorithm parameters.</source>
          <target state="translated">一个代表RFC 7748中定义的椭圆曲线公钥的类,包括曲线和其他算法参数。</target>
        </trans-unit>
        <trans-unit id="0fa31fb1db3f2bf4170a4504fda888238f5857ac" translate="yes" xml:space="preserve">
          <source>A class representing elliptic curve public keys as defined in RFC 7748, including the curve and other algorithm parameters. The public key is a particular point on the curve, which is represented using only its u-coordinate. A u-coordinate is an element of the field of integers modulo some value that is determined by the algorithm parameters. This field element is represented by a BigInteger which may hold any value. That is, the BigInteger is not restricted to the range of canonical field elements.</source>
          <target state="translated">RFC 7748中定义的椭圆曲线公钥的类,包括曲线和其他算法参数。公钥是曲线上的一个特定点,只用它的u坐标来表示。u 坐标是整数字段中的一个元素,它是由算法参数决定的某个值。这个域元素用一个BigInteger来表示,它可以容纳任何值。也就是说,BigInteger不受限于规范域元素的范围。</target>
        </trans-unit>
        <trans-unit id="65c946c01af08b81e126884eb2cf472a54fa6698" translate="yes" xml:space="preserve">
          <source>A class representing the extra tags found in a &lt;a href=&quot;http://tools.ietf.org/html/rfc2306.html&quot;&gt;TIFF-F&lt;/a&gt; (RFC 2036) file.</source>
          <target state="translated">表示在&lt;a href=&quot;http://tools.ietf.org/html/rfc2306.html&quot;&gt;TIFF-F&lt;/a&gt;（RFC 2036）文件中找到的额外标签的类。</target>
        </trans-unit>
        <trans-unit id="9c465cf61ba9c52f678f341d3ae588ed345006b7" translate="yes" xml:space="preserve">
          <source>A class representing the extra tags found in a &lt;a href=&quot;https://tools.ietf.org/html/rfc2306.html&quot;&gt;TIFF-F&lt;/a&gt; (RFC 2036) file.</source>
          <target state="translated">表示在&lt;a href=&quot;https://tools.ietf.org/html/rfc2306.html&quot;&gt;TIFF-F&lt;/a&gt;（RFC 2036）文件中找到的额外标签的类。</target>
        </trans-unit>
        <trans-unit id="e2465331bfa6b2ec667a7a1a199b513b9f4467c6" translate="yes" xml:space="preserve">
          <source>A class representing the set of tags found in the baseline TIFF specification as well as some common additional tags.</source>
          <target state="translated">代表基线 TIFF 规范中的标签集以及一些常见的附加标签的类。</target>
        </trans-unit>
        <trans-unit id="b85817ff47ba848e015b8adf4ea8038a4777bdf3" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in a GeoTIFF IFD.</source>
          <target state="translated">表示在GeoTIFF IFD中找到的标签的类。</target>
        </trans-unit>
        <trans-unit id="639aa3e6bfa855a19d38be8bddb1f4b7cf9e77ce" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in a GeoTIFF IFD. GeoTIFF is a standard for annotating georeferenced or geocoded raster imagery. This class does</source>
          <target state="translated">表示在GeoTIFF IFD中发现的标签的类。GeoTIFF是一个用于标注地理参照或地理编码栅格图像的标准。这个类不</target>
        </trans-unit>
        <trans-unit id="ad48f4700fc5b0e6bc913680cdd26ad0db193c79" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif GPS Info IFD.</source>
          <target state="translated">代表在Exif GPS Info IFD中找到的标签的类。</target>
        </trans-unit>
        <trans-unit id="84527dca923846fad6949b91ca530336221f8b18" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif IFD.</source>
          <target state="translated">一个表示在Exif IFD中找到的标签的类。</target>
        </trans-unit>
        <trans-unit id="ff411da7e062b66bf98168cb887363bdde4fa6e4" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif IFD. Exif is a standard for annotating images used by most digital camera manufacturers. The Exif specification may be found at &lt;a href=&quot;http://www.exif.org/Exif2-2.PDF&quot;&gt; &lt;code&gt;http://www.exif.org/Exif2-2.PDF&lt;/code&gt; &lt;/a&gt;.</source>
          <target state="translated">表示在Exif IFD中找到的标签的类。Exif是用于注释大多数数码相机制造商使用的图像的标准。可以在&lt;a href=&quot;http://www.exif.org/Exif2-2.PDF&quot;&gt; &lt;code&gt;http://www.exif.org/Exif2-2.PDF&lt;/code&gt; 中&lt;/a&gt;找到Exif规范。</target>
        </trans-unit>
        <trans-unit id="37f8dd762267c3d3d350af455503509a6ba5e61a" translate="yes" xml:space="preserve">
          <source>A class representing the tags found in an Exif Interoperability IFD.</source>
          <target state="translated">代表在Exif互操作性IFD中找到的标签的类。</target>
        </trans-unit>
        <trans-unit id="0faaa8cb7ea41080a9897a029d07ba7f64951d59" translate="yes" xml:space="preserve">
          <source>A class should implement this interface if it meets three criteria:</source>
          <target state="translated">如果一个类满足三个标准,就应该实现这个接口。</target>
        </trans-unit>
        <trans-unit id="92346a2f99faeaaa261517e46da5df7b89aef4c7" translate="yes" xml:space="preserve">
          <source>A class that allows the format of an image (in particular, its &lt;code&gt;SampleModel&lt;/code&gt; and &lt;code&gt;ColorModel&lt;/code&gt;) to be specified in a convenient manner.</source>
          <target state="translated">一个允许以方便的方式指定图像格式（特别是其 &lt;code&gt;SampleModel&lt;/code&gt; 和 &lt;code&gt;ColorModel&lt;/code&gt; ）的类。</target>
        </trans-unit>
        <trans-unit id="9c8e539dbcfd8560d6896c579d5cc9832b8d9d59" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the Adler-32 checksum of a data stream.</source>
          <target state="translated">一个可以用来计算数据流的Adler-32校验和的类。</target>
        </trans-unit>
        <trans-unit id="cdd5cc0c0766766349e5a8df9631efc59ea37f9a" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the Adler-32 checksum of a data stream. An Adler-32 checksum is almost as reliable as a CRC-32 but can be computed much faster.</source>
          <target state="translated">一个可用于计算数据流的Adler-32校验和的类。阿德勒-32校验和几乎和CRC-32一样可靠,但计算速度快得多。</target>
        </trans-unit>
        <trans-unit id="0c514c4d4229f220cdf94ab33ba1f0e3f329c671" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the CRC-32 of a data stream.</source>
          <target state="translated">一个可以用来计算数据流的CRC-32的类。</target>
        </trans-unit>
        <trans-unit id="5ea18e62bf6041eb3df169d804ad7a5cd70f37dd" translate="yes" xml:space="preserve">
          <source>A class that can be used to compute the CRC-32C of a data stream.</source>
          <target state="translated">一个可以用来计算数据流的CRC-32C的类。</target>
        </trans-unit>
        <trans-unit id="b4438f53bff9ad76b2b996f593f314197aaa9ed9" translate="yes" xml:space="preserve">
          <source>A class that describes the pointer position.</source>
          <target state="translated">一个描述指针位置的类。</target>
        </trans-unit>
        <trans-unit id="2b974107948994a749fc354434093fd17886c263" translate="yes" xml:space="preserve">
          <source>A class that describes the pointer position. It provides the &lt;code&gt;GraphicsDevice&lt;/code&gt; where the pointer is and the &lt;code&gt;Point&lt;/code&gt; that represents the coordinates of the pointer.</source>
          <target state="translated">一个描述指针位置的类。它提供了 &lt;code&gt;GraphicsDevice&lt;/code&gt; 指针所在的位置和 &lt;code&gt;Point&lt;/code&gt; ，该Point表示指针的坐标。</target>
        </trans-unit>
        <trans-unit id="01fd859a5bddef604f485cd1d6721c1620367871" translate="yes" xml:space="preserve">
          <source>A class that holds a list of EventListeners.</source>
          <target state="translated">一个拥有EventListeners列表的类。</target>
        </trans-unit>
        <trans-unit id="bccbef1b527baff869bc778e0f10bad79b251f40" translate="yes" xml:space="preserve">
          <source>A class that holds a list of EventListeners. A single instance can be used to hold all listeners (of all types) for the instance using the list. It is the responsiblity of the class using the EventListenerList to provide type-safe API (preferably conforming to the JavaBeans spec) and methods which dispatch event notification methods to appropriate Event Listeners on the list. The main benefits that this class provides are that it is relatively cheap in the case of no listeners, and it provides serialization for event-listener lists in a single place, as well as a degree of MT safety (when used correctly). Usage example: Say one is defining a class that sends out FooEvents, and one wants to allow users of the class to register FooListeners and receive notification when FooEvents occur. The following should be added to the class definition:</source>
          <target state="translated">一个持有EventListeners列表的类。一个单一的实例可以用来持有使用该列表的实例的所有监听器(所有类型)。使用EventListenerList的类的责任是提供类型安全的API(最好符合JavaBeans规范)和方法,将事件通知方法派发到列表中适当的事件监听器。这个类提供的主要好处是,在没有监听器的情况下,它的成本相对较低,而且它在一个地方为事件监听器列表提供了序列化,以及一定程度的MT安全(正确使用时)。使用实例。假设我们定义了一个发送FooEvents的类,并希望允许该类的用户注册FooListeners,并在FooEvents发生时收到通知。应该在类定义中添加以下内容。</target>
        </trans-unit>
        <trans-unit id="561f7d252748cac94cef43b93aa50d3e54fc0a81" translate="yes" xml:space="preserve">
          <source>A class that implements a mechanism to transfer data using cut/copy/paste operations.</source>
          <target state="translated">一个实现使用剪切/复制/粘贴操作传输数据的机制的类。</target>
        </trans-unit>
        <trans-unit id="0b9ccb86c63ff8e5e87cf5de1df071397be14468" translate="yes" xml:space="preserve">
          <source>A class that implements a menu which can be dynamically popped up at a specified position within a component.</source>
          <target state="translated">一个实现菜单的类,它可以在组件的指定位置动态弹出。</target>
        </trans-unit>
        <trans-unit id="aa6462377deb828ac8fabeb31954961761d5ec35" translate="yes" xml:space="preserve">
          <source>A class that implements an empty border with no size.</source>
          <target state="translated">一个实现无大小的空边框的类。</target>
        </trans-unit>
        <trans-unit id="b014c94e857bb1e947e25e73bed04f20f2b5deb9" translate="yes" xml:space="preserve">
          <source>A class that implements an empty border with no size. This provides a convenient base class from which other border classes can be easily derived.</source>
          <target state="translated">一个实现无大小的空边框的类。这提供了一个方便的基类,其他边框类可以很容易地从这个基类衍生出来。</target>
        </trans-unit>
        <trans-unit id="99cb9344c7cb6b12873b27569feddc972d067b39" translate="yes" xml:space="preserve">
          <source>A class that represents an SCTP association.</source>
          <target state="translated">一个代表SCTP关联的类。</target>
        </trans-unit>
        <trans-unit id="ca6acaf5f47411e180b6a86f697ad80777c28261" translate="yes" xml:space="preserve">
          <source>A class that represents an immutable universally unique identifier (UUID).</source>
          <target state="translated">一个表示不可更改的通用唯一标识符(UUID)的类。</target>
        </trans-unit>
        <trans-unit id="eb88a241c9240d74a35296b3eb6f058d620a61af" translate="yes" xml:space="preserve">
          <source>A class that represents an immutable universally unique identifier (UUID). A UUID represents a 128-bit value.</source>
          <target state="translated">一个表示不可更改的通用唯一标识符(UUID)的类。一个UUID代表一个128位的值。</target>
        </trans-unit>
        <trans-unit id="50fc59ed7536359ec8a59f0e493fe3242a135a31" translate="yes" xml:space="preserve">
          <source>A class to encapsulate MimeType parsing related exceptions.</source>
          <target state="translated">一个封装MimeType解析相关异常的类。</target>
        </trans-unit>
        <trans-unit id="8ad4c7c92a2deb2763930f0efab0ca42fe600177" translate="yes" xml:space="preserve">
          <source>A class to encapsulate symbolic colors representing the color of native GUI objects on a system.</source>
          <target state="translated">一个封装符号颜色的类,代表系统中原生GUI对象的颜色。</target>
        </trans-unit>
        <trans-unit id="325b06e0b2c5d8f415697a9862a7840ea37a5102" translate="yes" xml:space="preserve">
          <source>A class to encapsulate symbolic colors representing the color of native GUI objects on a system. For systems which support the dynamic update of the system colors (when the user changes the colors) the actual RGB values of these symbolic colors will also change dynamically. In order to compare the &quot;current&quot; RGB value of a &lt;code&gt;SystemColor&lt;/code&gt; object with a non-symbolic Color object, &lt;code&gt;getRGB&lt;/code&gt; should be used rather than &lt;code&gt;equals&lt;/code&gt;.</source>
          <target state="translated">封装表示系统上本机GUI对象颜色的符号颜色的类。对于支持动态更新系统颜色的系统（当用户更改颜色时），这些符号颜色的实际RGB值也将动态更改。为了将 &lt;code&gt;SystemColor&lt;/code&gt; 对象的&amp;ldquo;当前&amp;rdquo; RGB值与非符号Color对象进行比较，应使用 &lt;code&gt;getRGB&lt;/code&gt; 而不是 &lt;code&gt;equals&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="030b29871944e589acd7496284b1c4426c4716e2" translate="yes" xml:space="preserve">
          <source>A class to encapsulate the bitmap representation of the mouse cursor.</source>
          <target state="translated">一个封装鼠标光标的位图表示的类。</target>
        </trans-unit>
        <trans-unit id="2616ee32c896220e397e902634bd1c1e8c1589bd" translate="yes" xml:space="preserve">
          <source>A class to manage the effective position of the child views in a localized area while changes are being made around the localized area.</source>
          <target state="translated">围绕局部区域进行变化的同时,管理局部区域内儿童视图的有效位置的类。</target>
        </trans-unit>
        <trans-unit id="37be1b43a2f31099bae6adbd6242fcde167cd4c4" translate="yes" xml:space="preserve">
          <source>A class to manage the effective position of the child views in a localized area while changes are being made around the localized area. The AsyncBoxView may be continuously changing, but the visible area needs to remain fairly stable until the layout thread decides to publish an update to the parent.</source>
          <target state="translated">一个类,用于管理局部区域中子视图的有效位置,同时围绕局部区域进行更改。AsyncBoxView可能会不断变化,但可见区域需要保持相当稳定,直到布局线程决定向父节点发布更新。</target>
        </trans-unit>
        <trans-unit id="9670fee5d37230af79301f57acb9eece66d27fe5" translate="yes" xml:space="preserve">
          <source>A class to monitor the progress of some operation.</source>
          <target state="translated">监视某些操作进度的类。</target>
        </trans-unit>
        <trans-unit id="9fd4e45fc15093167532ea519baf9d505efa6efa" translate="yes" xml:space="preserve">
          <source>A class to monitor the progress of some operation. If it looks like the operation will take a while, a progress dialog will be popped up. When the ProgressMonitor is created it is given a numeric range and a descriptive string. As the operation progresses, call the setProgress method to indicate how far along the [min,max] range the operation is. Initially, there is no ProgressDialog. After the first millisToDecideToPopup milliseconds (default 500) the progress monitor will predict how long the operation will take. If it is longer than millisToPopup (default 2000, 2 seconds) a ProgressDialog will be popped up.</source>
          <target state="translated">一个用于监控某些操作进度的类。如果看起来操作需要一段时间,就会弹出一个进度对话框。当ProgressMonitor被创建时,它被赋予一个数值范围和一个描述性字符串。当操作进行时,调用setProgress方法来指示操作在[min,max]范围内有多远。最初,没有ProgressDialog。在第一个 millisToDecideToPopup 毫秒(默认为 500)之后,进度监控器将预测操作需要多长时间。如果时间长于 millisToPopup(默认 2000,2 秒),将弹出 ProgressDialog。</target>
        </trans-unit>
        <trans-unit id="8aa982ebac932e2a0592a5cc78b9283fd6107389" translate="yes" xml:space="preserve">
          <source>A class to perform rendering of the glyphs.</source>
          <target state="translated">一个执行字形渲染的类。</target>
        </trans-unit>
        <trans-unit id="cd7e5df83035855ad2d528ef68b31448dee3c330" translate="yes" xml:space="preserve">
          <source>A class to perform rendering of the glyphs. This can be implemented to be stateless, or to hold some information as a cache to facilitate faster rendering and model/view translation. At a minimum, the GlyphPainter allows a View implementation to perform its duties independent of a particular version of JVM and selection of capabilities (i.e. shaping for i18n, etc).</source>
          <target state="translated">一个执行字形渲染的类。它可以被实现为无状态的,或者作为一个缓存来保存一些信息,以方便更快的渲染和模型/视图转换。最起码,GlyphPainter允许一个View实现独立于特定版本的JVM和能力选择(即i18n的整形等)来执行其职责。</target>
        </trans-unit>
        <trans-unit id="9a3bf3434d33e345126979cf076b010942e38ffd" translate="yes" xml:space="preserve">
          <source>A class used to specify EdDSA signature and verification parameters.</source>
          <target state="translated">一个用于指定EdDSA签名和验证参数的类。</target>
        </trans-unit>
        <trans-unit id="02ac38e260bbf2e225fc788fbe95b49eb55b3120" translate="yes" xml:space="preserve">
          <source>A class used to specify EdDSA signature and verification parameters. All algorithm modes in &lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)&lt;/a&gt; can be specified using combinations of the settings in this class.</source>
          <target state="translated">用于指定EdDSA签名和验证参数的类。可以使用此类中的设置组合来指定&lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032：Edwards-Curve数字签名算法（EdDSA）中的&lt;/a&gt;所有算法模式。</target>
        </trans-unit>
        <trans-unit id="bca4de61f3be4e6b7ba61ee56e5ad81c0eec2dcc" translate="yes" xml:space="preserve">
          <source>A class which enables secure communications using protocols such as the Secure Sockets Layer (SSL) or &lt;a href=&quot;http://www.ietf.org/rfc/rfc2246.txt&quot;&gt; IETF RFC 2246 &quot;Transport Layer Security&quot; (TLS) &lt;/a&gt; protocols, but is transport independent.</source>
          <target state="translated">使用安全套接字层（SSL）或&lt;a href=&quot;http://www.ietf.org/rfc/rfc2246.txt&quot;&gt;IETF RFC 2246&amp;ldquo;传输层安全&amp;rdquo;（TLS）&lt;/a&gt;协议等协议实现安全通信的类，但与传输无关。</target>
        </trans-unit>
        <trans-unit id="341cdd49d7489833a770dff670edc4d21fbb8db2" translate="yes" xml:space="preserve">
          <source>A class which enables secure communications using protocols such as the Secure Sockets Layer (SSL) or &lt;a href=&quot;https://www.ietf.org/rfc/rfc2246.txt&quot;&gt; IETF RFC 2246 &quot;Transport Layer Security&quot; (TLS) &lt;/a&gt; protocols, but is transport independent.</source>
          <target state="translated">使用安全套接字层（SSL）或&lt;a href=&quot;https://www.ietf.org/rfc/rfc2246.txt&quot;&gt;IETF RFC 2246&amp;ldquo;传输层安全&amp;rdquo;（TLS）&lt;/a&gt;协议等协议实现安全通信的类，但与传输无关。</target>
        </trans-unit>
        <trans-unit id="21ca1c378b497afd314ff5f225a2637e9eaa55fe" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; with a &quot;bound&quot; property.</source>
          <target state="translated">它扩展了一类 &lt;code&gt;EventListenerProxy&lt;/code&gt; 的专门用于添加 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 具有&amp;ldquo;绑定&amp;rdquo;属性。</target>
        </trans-unit>
        <trans-unit id="0f3ca17d6fac572ec6a95c1b55d04d926f20879a" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;PropertyChangeListener&lt;/code&gt; with a &quot;bound&quot; property. Instances of this class can be added as &lt;code&gt;PropertyChangeListener&lt;/code&gt;s to a bean which supports firing property change events.</source>
          <target state="translated">它扩展了一类 &lt;code&gt;EventListenerProxy&lt;/code&gt; 的专门用于添加 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 具有&amp;ldquo;绑定&amp;rdquo;属性。此类的实例可以作为 &lt;code&gt;PropertyChangeListener&lt;/code&gt; 添加到支持触发属性更改事件的Bean中。</target>
        </trans-unit>
        <trans-unit id="0314ff4c39d100d0f62f503ec1527df57cbde8df" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;VetoableChangeListener&lt;/code&gt; with a &quot;constrained&quot; property.</source>
          <target state="translated">扩展 &lt;code&gt;EventListenerProxy&lt;/code&gt; 的类，专门用于添加具有&amp;ldquo; constrained&amp;rdquo;属性的 &lt;code&gt;VetoableChangeListener&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08dd04ae093513ff4643c0d0511758136f388009" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding a &lt;code&gt;VetoableChangeListener&lt;/code&gt; with a &quot;constrained&quot; property. Instances of this class can be added as &lt;code&gt;VetoableChangeListener&lt;/code&gt;s to a bean which supports firing vetoable change events.</source>
          <target state="translated">扩展 &lt;code&gt;EventListenerProxy&lt;/code&gt; 的类，专门用于添加具有&amp;ldquo; constrained&amp;rdquo;属性的 &lt;code&gt;VetoableChangeListener&lt;/code&gt; 。可以将此类的实例作为 &lt;code&gt;VetoableChangeListener&lt;/code&gt; 添加到支持触发vetoable更改事件的Bean中。</target>
        </trans-unit>
        <trans-unit id="f4f59cb8ccd1394ce9dce3aaab5645471dfc04e9" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding an &lt;code&gt;AWTEventListener&lt;/code&gt; for a specific event mask.</source>
          <target state="translated">一个类，扩展了 &lt;code&gt;EventListenerProxy&lt;/code&gt; ,专门用于为特定事件掩码添加 &lt;code&gt;AWTEventListener&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7eabbe3e661a2f1aec0a2f4de36c118c72ac391" translate="yes" xml:space="preserve">
          <source>A class which extends the &lt;code&gt;EventListenerProxy&lt;/code&gt; specifically for adding an &lt;code&gt;AWTEventListener&lt;/code&gt; for a specific event mask. Instances of this class can be added as &lt;code&gt;AWTEventListener&lt;/code&gt;s to a &lt;code&gt;Toolkit&lt;/code&gt; object.</source>
          <target state="translated">一个类，扩展了 &lt;code&gt;EventListenerProxy&lt;/code&gt; ,专门用于为特定事件掩码添加 &lt;code&gt;AWTEventListener&lt;/code&gt; 。此类的实例可以作为 &lt;code&gt;AWTEventListener&lt;/code&gt; 添加到 &lt;code&gt;Toolkit&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="dd13932c0d22b0160242af32a989bade22bb60de" translate="yes" xml:space="preserve">
          <source>A class which implements a border of an arbitrary stroke.</source>
          <target state="translated">一个实现任意笔画边框的类。</target>
        </trans-unit>
        <trans-unit id="a9d774a2ad1c34f943fd3f35eec23cc0435ff679" translate="yes" xml:space="preserve">
          <source>A class which implements a line border of arbitrary thickness and of a single color.</source>
          <target state="translated">一个实现任意粗细和单一颜色的线框的类。</target>
        </trans-unit>
        <trans-unit id="af729e265d8facc27cf4d8a66ab8677d821faede" translate="yes" xml:space="preserve">
          <source>A class which implements a raised or lowered bevel with softened corners.</source>
          <target state="translated">一个类,它实现了一个带软化角的凸起或降低的斜角。</target>
        </trans-unit>
        <trans-unit id="b7f926173de62d6b847f8323ac6334b03a1ecf24" translate="yes" xml:space="preserve">
          <source>A class which implements a simple etched border which can either be etched-in or etched-out.</source>
          <target state="translated">一个实现简单的蚀刻边框的类,可以是蚀刻进去的,也可以是蚀刻出来的。</target>
        </trans-unit>
        <trans-unit id="9b29e9316680a3927d3ec38f4e1643fb2880f946" translate="yes" xml:space="preserve">
          <source>A class which implements a simple etched border which can either be etched-in or etched-out. If no highlight/shadow colors are initialized when the border is created, then these colors will be dynamically derived from the background color of the component argument passed into the paintBorder() method.</source>
          <target state="translated">一个实现简单蚀刻边框的类,它可以是蚀刻的,也可以是蚀刻的。如果在创建边框时没有初始化高光/阴影颜色,那么这些颜色将从传递到paintBorder()方法中的组件参数的背景颜色中动态导出。</target>
        </trans-unit>
        <trans-unit id="b3caff1179de3b708c9ee025e3ade256a0f5bf51" translate="yes" xml:space="preserve">
          <source>A class which implements a simple two-line bevel border.</source>
          <target state="translated">一个实现简单的双线斜边框的类。</target>
        </trans-unit>
        <trans-unit id="ec95e0328e1937e3c469a14b4cca798e2ff74f43" translate="yes" xml:space="preserve">
          <source>A class which implements an arbitrary border with the addition of a String title in a specified position and justification.</source>
          <target state="translated">一个实现任意边框的类,在指定的位置上添加一个字符串标题和对齐方式。</target>
        </trans-unit>
        <trans-unit id="0dfe0cda489fd1752a80ce4eb44364ba506773f3" translate="yes" xml:space="preserve">
          <source>A class which provides a matte-like border of either a solid color or a tiled icon.</source>
          <target state="translated">一个提供纯色或平铺图标的哑光边框的类。</target>
        </trans-unit>
        <trans-unit id="5273e822b15f7fdd2b253dfd633abca7b4f55002" translate="yes" xml:space="preserve">
          <source>A class which provides an empty, transparent border which takes up space but does no drawing.</source>
          <target state="translated">一个提供空的透明边框的类,该边框占用空间但不绘图。</target>
        </trans-unit>
        <trans-unit id="b1e64d61b139a3339ef50761bae5d21d454e68e6" translate="yes" xml:space="preserve">
          <source>A client connection has been closed.</source>
          <target state="translated">客户端连接已被关闭。</target>
        </trans-unit>
        <trans-unit id="7b6c01324c3ee4c5d8a2eca046353dc1ea9bd2ae" translate="yes" xml:space="preserve">
          <source>A client connection has failed unexpectedly.</source>
          <target state="translated">客户端连接意外失败。</target>
        </trans-unit>
        <trans-unit id="ebbd35c91f41e39a02ce595327e7d60d48a87106" translate="yes" xml:space="preserve">
          <source>A client connection has potentially lost notifications. This notification only appears on the client side.</source>
          <target state="translated">客户端连接有可能丢失通知。该通知只在客户端出现。</target>
        </trans-unit>
        <trans-unit id="321eb78d1a8f4a5ebde928ad8b9f55df945982a9" translate="yes" xml:space="preserve">
          <source>A client usually needs to provide more than one processing instruction when submitting a print job. For example, the client might need to specify a media size of A4 and a landscape orientation. To send more than one processing instruction, the client collects the attributes into an attribute set, which the Java Print Service API represents with the &lt;a href=&quot;attributeset&quot;&gt;AttributeSet&lt;/a&gt; interface.</source>
          <target state="translated">客户在提交打印作业时通常需要提供多个处理指令。例如，客户端可能需要指定A4的介质尺寸和横向。为了发送多个处理指令，客户端将属性收集到一个属性集中，该属性集由Java Print Service API用&lt;a href=&quot;attributeset&quot;&gt;AttributeSet&lt;/a&gt;接口表示。</target>
        </trans-unit>
        <trans-unit id="0b3646c8eee79de5884011a641b442d887ea986b" translate="yes" xml:space="preserve">
          <source>A clock providing access to the current instant, date and time using a time-zone.</source>
          <target state="translated">提供使用时区访问当前即时、日期和时间的时钟。</target>
        </trans-unit>
        <trans-unit id="411022af40541bd60a70533dd8bb81f330bbe450" translate="yes" xml:space="preserve">
          <source>A clock will typically obtain the current instant and then convert that to a date or time using a time-zone. This method returns a clock with similar properties but using a different time-zone.</source>
          <target state="translated">时钟通常会获取当前的瞬间,然后使用时区将其转换为日期或时间。本方法返回一个具有类似属性但使用不同时区的时钟。</target>
        </trans-unit>
        <trans-unit id="d73f130682600c047cfb7bb69f8f3922da7e3c8a" translate="yes" xml:space="preserve">
          <source>A clock will typically obtain the current instant and then convert that to a date or time using a time-zone. This method returns the time-zone used.</source>
          <target state="translated">时钟通常会获取当前的瞬间,然后使用时区将其转换为日期或时间。本方法返回所使用的时区。</target>
        </trans-unit>
        <trans-unit id="a03ba4716d7f3442eb5f94c77e6e8bfaf44ac187" translate="yes" xml:space="preserve">
          <source>A clone of this &lt;code&gt;TIFFDirectory&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;TIFFDirectory&lt;/code&gt; 的副本。</target>
        </trans-unit>
        <trans-unit id="1575e46f4c5894841b9bc15230c2209aba6759ca" translate="yes" xml:space="preserve">
          <source>A clone of this &lt;code&gt;TIFFField&lt;/code&gt;.</source>
          <target state="translated">此 &lt;code&gt;TIFFField&lt;/code&gt; 的副本。</target>
        </trans-unit>
        <trans-unit id="7d032403b72ab32c0db49ce6607f5c43e7ea0265" translate="yes" xml:space="preserve">
          <source>A close square bracket ']'.</source>
          <target state="translated">一个紧密的方括号']'。</target>
        </trans-unit>
        <trans-unit id="d361bb340d365f338527ec16d60b0e4997f35113" translate="yes" xml:space="preserve">
          <source>A code defining the type of the value as defined above.</source>
          <target state="translated">定义上述值的类型的代码。</target>
        </trans-unit>
        <trans-unit id="16d9daac0def4e983ab4c345604f43aa4b945147" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">表示&lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。</target>
        </trans-unit>
        <trans-unit id="274120ef259900f587c826ae4fad58dc903ce5f7" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">表示&lt;a href=&quot;#div(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。这主要是查询的序列化形式所引起的。</target>
        </trans-unit>
        <trans-unit id="756e5b583471e455897a7576819b503cbab87645" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">代表&lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。</target>
        </trans-unit>
        <trans-unit id="f1422a61531e7ab11df0fbe57dcaf39896d2617f" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">代表&lt;a href=&quot;#eq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。这主要是查询的序列化形式所引起的。</target>
        </trans-unit>
        <trans-unit id="2e09148fead05ae5e4c4acd6942f9b8d3553e934" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">代表&lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。</target>
        </trans-unit>
        <trans-unit id="0f02aa79f6bc2b0698074f7c981c7447533ebf61" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">代表&lt;a href=&quot;#geq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。这主要是查询的序列化形式所引起的。</target>
        </trans-unit>
        <trans-unit id="65639dae217f0171d1cbc9fcc085e8381bb991fa" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">代表&lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。</target>
        </trans-unit>
        <trans-unit id="72e4a41d5f53410fcee634c5b960892e2ab132ba" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">代表&lt;a href=&quot;#gt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。这主要是查询的序列化形式所引起的。</target>
        </trans-unit>
        <trans-unit id="356bf4bc91720230a8de12a728316e7e4afe957f" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">代表&lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。</target>
        </trans-unit>
        <trans-unit id="b4d193635627eb8b0d32271d8266d898212ae087" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">代表&lt;a href=&quot;#leq(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。这主要是查询的序列化形式所引起的。</target>
        </trans-unit>
        <trans-unit id="4772932c32caf465517bbb17560ee1a5df935a55" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query.</source>
          <target state="translated">表示&lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。</target>
        </trans-unit>
        <trans-unit id="1a14a97eef7fd8e0b40bbcd0a0f0e9978da41c9d" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">表示&lt;a href=&quot;#lt(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。这主要是查询的序列化形式所引起的。</target>
        </trans-unit>
        <trans-unit id="d4d1d20b7db8d473db7b9c0173c7ed1be02118db" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">表示&lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。</target>
        </trans-unit>
        <trans-unit id="9d06f858e5f7e75827ccceb5504a9a693be878f3" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">表示&lt;a href=&quot;#minus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。这主要是查询的序列化形式所引起的。</target>
        </trans-unit>
        <trans-unit id="c2592553116110b83871597faf2ef3d219afb57c" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">代表&lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。</target>
        </trans-unit>
        <trans-unit id="6f3c8ffe6b209dc3c393905c377cd0bd4455b398" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">代表&lt;a href=&quot;#plus(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。这主要是查询的序列化形式所引起的。</target>
        </trans-unit>
        <trans-unit id="28091a6029c4893f031676693a7b37de5ae873b8" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression.</source>
          <target state="translated">表示&lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。</target>
        </trans-unit>
        <trans-unit id="16064b74275b2ada36b278bd9880d50992e31d6c" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt;&lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">表示&lt;a href=&quot;#times(javax.management.ValueExp,javax.management.ValueExp)&quot;&gt; &lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。这主要是查询的序列化形式所引起的。</target>
        </trans-unit>
        <trans-unit id="a3167f8e6fb50dd28fb24a3c88ebe100fe20efca" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#div-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">表示&lt;a href=&quot;query#div-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;div(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。这主要是查询的序列化形式引起的。</target>
        </trans-unit>
        <trans-unit id="7bb36ba56666bf2d309a7d849a64f0feb91a1c90" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#eq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">代表&lt;a href=&quot;query#eq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;eq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。这主要是查询的序列化形式引起的。</target>
        </trans-unit>
        <trans-unit id="e1f3063b18e6a5262c8d2ca620f2e501fed8e478" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#geq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">代表&lt;a href=&quot;query#geq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;geq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。这主要是查询的序列化形式引起的。</target>
        </trans-unit>
        <trans-unit id="76157a29212309c8696c9440a7608cee01f04524" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#gt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">代表&lt;a href=&quot;query#gt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;gt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。这主要是查询的序列化形式引起的。</target>
        </trans-unit>
        <trans-unit id="aaf590563a128b508138fdcf398112e1e233a859" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#leq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">代表&lt;a href=&quot;query#leq-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;leq(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。这主要是查询的序列化形式引起的。</target>
        </trans-unit>
        <trans-unit id="b3e616c5883d2f276fc5ec2915c117e7e83e390d" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#lt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; query. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">表示&lt;a href=&quot;query#lt-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;lt(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;查询的代码。这主要是查询的序列化形式引起的。</target>
        </trans-unit>
        <trans-unit id="9f32472a91294d62e6f749d86f189b4cf1130071" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#minus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">表示&lt;a href=&quot;query#minus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;minus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。这主要是查询的序列化形式引起的。</target>
        </trans-unit>
        <trans-unit id="131ebaef4e8f0c0eada9e793b43e33f7c63c1497" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#plus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">代表&lt;a href=&quot;query#plus-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;plus(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。这主要是查询的序列化形式引起的。</target>
        </trans-unit>
        <trans-unit id="086389d031264f0909b42a38a4d40ccaa6ef304e" translate="yes" xml:space="preserve">
          <source>A code representing the &lt;a href=&quot;query#times-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt;&lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt;&lt;/a&gt; expression. This is chiefly of interest for the serialized form of queries.</source>
          <target state="translated">代表&lt;a href=&quot;query#times-javax.management.ValueExp-javax.management.ValueExp-&quot;&gt; &lt;code&gt;times(javax.management.ValueExp, javax.management.ValueExp)&lt;/code&gt; &lt;/a&gt;表达式的代码。这主要是查询的序列化形式引起的。</target>
        </trans-unit>
        <trans-unit id="15959f314ff470e7f4e0c8ec74706e2bbe3e1b8a" translate="yes" xml:space="preserve">
          <source>A code representing the type of the underlying object, as defined above.</source>
          <target state="translated">表示基础对象类型的代码,如上文所定义。</target>
        </trans-unit>
        <trans-unit id="a48255a462a8fe2a18b71300cb141d68b6c64c88" translate="yes" xml:space="preserve">
          <source>A code representing the type of this result, as defined by the type constants.</source>
          <target state="translated">代表该结果类型的代码,由类型常数定义。</target>
        </trans-unit>
        <trans-unit id="9e046118fc615d90a21c6a38e709d405bcdb107b" translate="yes" xml:space="preserve">
          <source>A coder-result object describing the reason for termination</source>
          <target state="translated">一个描述终止原因的编码结果对象。</target>
        </trans-unit>
        <trans-unit id="1bc357c45dad65bdc1abef893fd379bb2a9a1253" translate="yes" xml:space="preserve">
          <source>A coder-result object, either &lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt;&lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;coderresult#OVERFLOW&quot;&gt;&lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">编码器结果对象，即&lt;a href=&quot;coderresult#UNDERFLOW&quot;&gt; &lt;code&gt;CoderResult.UNDERFLOW&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;coderresult#OVERFLOW&quot;&gt; &lt;code&gt;CoderResult.OVERFLOW&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6cb44da210a8abf4eb01f4e0b39fcd31491af613" translate="yes" xml:space="preserve">
          <source>A collection adapter &lt;code&gt;collectArguments(mh, 0, coll)&lt;/code&gt; is equivalent to one which first &quot;folds&quot; the affected arguments, and then drops them, in separate steps as follows:</source>
          <target state="translated">集合适配器 &lt;code&gt;collectArguments(mh, 0, coll)&lt;/code&gt; 等效于一个集合适配器，它首先&amp;ldquo;折叠&amp;rdquo;受影响的参数，然后按以下步骤将其删除：</target>
        </trans-unit>
        <trans-unit id="2d53b7ff736eba16937ab8f02218e094fde7b521" translate="yes" xml:space="preserve">
          <source>A collection designed for holding elements prior to processing.</source>
          <target state="translated">设计用于在处理前保存元素的集合。</target>
        </trans-unit>
        <trans-unit id="68b3debc55e51d5e6557af0db3301e3ccdcb6461" translate="yes" xml:space="preserve">
          <source>A collection designed for holding elements prior to processing. Besides basic &lt;a href=&quot;collection&quot;&gt;&lt;code&gt;Collection&lt;/code&gt;&lt;/a&gt; operations, queues provide additional insertion, extraction, and inspection operations. Each of these methods exists in two forms: one throws an exception if the operation fails, the other returns a special value (either &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, depending on the operation). The latter form of the insert operation is designed specifically for use with capacity-restricted &lt;code&gt;Queue&lt;/code&gt; implementations; in most implementations, insert operations cannot fail.</source>
          <target state="translated">设计用于在处理之前容纳元素的集合。除了基本的&lt;a href=&quot;collection&quot;&gt; &lt;code&gt;Collection&lt;/code&gt; &lt;/a&gt;操作外，队列还提供其他插入，提取和检查操作。这些方法中的每一种都以两种形式存在：一种在操作失败时引发异常，另一种返回一个特殊值（取决于操作，为 &lt;code&gt;null&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; ）。插入操作的后一种形式是专为与容量受限的 &lt;code&gt;Queue&lt;/code&gt; 实现一起使用而设计的；在大多数实现中，插入操作不会失败。</target>
        </trans-unit>
        <trans-unit id="a9a6eaf75c3b08210b1413d74a93d98cde849eb7" translate="yes" xml:space="preserve">
          <source>A collection implementation that implements the &lt;code&gt;Serializable&lt;/code&gt; interface cannot be guaranteed to be serializable. The reason is that in general, collections contain elements of other types, and it is not possible to determine statically whether instances of some element type are actually serializable. For example, consider a serializable &lt;code&gt;Collection&amp;lt;E&amp;gt;&lt;/code&gt;, where &lt;code&gt;E&lt;/code&gt; does not implement the &lt;code&gt;Serializable&lt;/code&gt; interface. The collection may be serializable, if it contains only elements of some serializable subtype of &lt;code&gt;E&lt;/code&gt;, or if it is empty. Collections are thus said to be</source>
          <target state="translated">不能保证实现 &lt;code&gt;Serializable&lt;/code&gt; 接口的集合实现可序列化。原因是，通常，集合包含其他类型的元素，并且无法静态确定某些元素类型的实例是否实际上可序列化。例如，考虑一个可序列化的 &lt;code&gt;Collection&amp;lt;E&amp;gt;&lt;/code&gt; ，其中 &lt;code&gt;E&lt;/code&gt; 没有实现 &lt;code&gt;Serializable&lt;/code&gt; 接口。如果集合仅包含 &lt;code&gt;E&lt;/code&gt; 的某些可序列化子类型的元素，或者该集合为空，则该集合可以是可序列化的。因此，收藏被认为是</target>
        </trans-unit>
        <trans-unit id="f59aab2d9547406cafa399bd2d77f092dd7a82e2" translate="yes" xml:space="preserve">
          <source>A collection of &lt;em&gt;well known&lt;/em&gt; or common attribute keys and methods to apply to an AttributeSet or MutableAttributeSet to get/set the properties in a typesafe manner.</source>
          <target state="translated">一组&lt;em&gt;众所周知的&lt;/em&gt;或通用的属性键和方法的集合，这些键和方法适用于AttributeSet或MutableAttributeSet以类型安全的方式获取/设置属性。</target>
        </trans-unit>
        <trans-unit id="b706bd12cd5f8e7ab14786576d893eceee56aa06" translate="yes" xml:space="preserve">
          <source>A collection of all &lt;code&gt;AREA&lt;/code&gt; elements and anchor ( &lt;code&gt;A&lt;/code&gt; ) elements in a document with a value for the &lt;code&gt;href&lt;/code&gt; attribute.</source>
          <target state="translated">具有 &lt;code&gt;href&lt;/code&gt; 属性值的文档中所有 &lt;code&gt;AREA&lt;/code&gt; 元素和锚点（ &lt;code&gt;A&lt;/code&gt; ）元素的集合。</target>
        </trans-unit>
        <trans-unit id="30b51038e0a87b618d4db965d9652d4e5ffb6c2a" translate="yes" xml:space="preserve">
          <source>A collection of all the &lt;code&gt;IMG&lt;/code&gt; elements in a document.</source>
          <target state="translated">文档中所有 &lt;code&gt;IMG&lt;/code&gt; 元素的集合。</target>
        </trans-unit>
        <trans-unit id="5008ce44ea301cad10347cf1bd11f0779bd66c42" translate="yes" xml:space="preserve">
          <source>A collection of all the &lt;code&gt;IMG&lt;/code&gt; elements in a document. The behavior is limited to &lt;code&gt;IMG&lt;/code&gt; elements for backwards compatibility.</source>
          <target state="translated">文档中所有 &lt;code&gt;IMG&lt;/code&gt; 元素的集合。为了向后兼容，该行为仅限于 &lt;code&gt;IMG&lt;/code&gt; 元素。</target>
        </trans-unit>
        <trans-unit id="b0b2b068497ab694ef7d26fc745a76bb3d3637fb" translate="yes" xml:space="preserve">
          <source>A collection of all the &lt;code&gt;OBJECT&lt;/code&gt; elements that include applets and &lt;code&gt;APPLET&lt;/code&gt; ( deprecated ) elements in a document.</source>
          <target state="translated">文档中所有包含applet和 &lt;code&gt;APPLET&lt;/code&gt; （不推荐使用）元素的 &lt;code&gt;OBJECT&lt;/code&gt; 元素的集合。</target>
        </trans-unit>
        <trans-unit id="ad16f7a0f7648c69a237393486c97e2998d7332d" translate="yes" xml:space="preserve">
          <source>A collection of all the anchor (&lt;code&gt;A&lt;/code&gt; ) elements in a document with a value for the &lt;code&gt;name&lt;/code&gt; attribute.</source>
          <target state="translated">具有 &lt;code&gt;name&lt;/code&gt; 属性值的文档中所有锚点（ &lt;code&gt;A&lt;/code&gt; ）元素的集合。</target>
        </trans-unit>
        <trans-unit id="b8bd8c620fd899912427be326f5706c337544f9c" translate="yes" xml:space="preserve">
          <source>A collection of all the anchor (&lt;code&gt;A&lt;/code&gt; ) elements in a document with a value for the &lt;code&gt;name&lt;/code&gt; attribute. Note. For reasons of backwards compatibility, the returned set of anchors only contains those anchors created with the &lt;code&gt;name&lt;/code&gt; attribute, not those created with the &lt;code&gt;id&lt;/code&gt; attribute.</source>
          <target state="translated">具有 &lt;code&gt;name&lt;/code&gt; 属性值的文档中所有锚点（ &lt;code&gt;A&lt;/code&gt; ）元素的集合。笔记。出于向后兼容的原因，返回的锚集仅包含使用 &lt;code&gt;name&lt;/code&gt; 属性创建的锚，而不包含使用 &lt;code&gt;id&lt;/code&gt; 属性创建的锚。</target>
        </trans-unit>
        <trans-unit id="3e706a1dae6e0540493d65fc9b2ba01c376f89bb" translate="yes" xml:space="preserve">
          <source>A collection of all the forms of a document.</source>
          <target state="translated">一个文件的所有形式的集合。</target>
        </trans-unit>
        <trans-unit id="461ccfb5dcfe04e9522249ee785de05875b3ef4a" translate="yes" xml:space="preserve">
          <source>A collection of attributes to associate with an element in a document.</source>
          <target state="translated">一个与文档中的元素相关联的属性集合。</target>
        </trans-unit>
        <trans-unit id="938b9f3e55564142422e27aa653a0da3ed879659" translate="yes" xml:space="preserve">
          <source>A collection of attributes to associate with an element in a document. Since these are typically used to associate character and paragraph styles with the element, operations for this are provided. Other customized attributes that get associated with the element will effectively be name-value pairs that live in a hierarchy and if a name (key) is not found locally, the request is forwarded to the parent. Commonly used attributes are separated out to facilitate alternative implementations that are more efficient.</source>
          <target state="translated">一个与文档中元素相关联的属性集合。由于这些属性通常用于将字符和段落样式与元素关联起来,因此提供了这方面的操作。其他自定义的属性,得到与元素相关联的属性将有效地成为名称-值对,它们存在于一个层次结构中,如果在本地找不到名称(键),则将请求转发到父元素。常用的属性被分离出来,以方便更高效的替代实现。</target>
        </trans-unit>
        <trans-unit id="320018eaa34b7b516123d4e578088cd6f97ff4ed" translate="yes" xml:space="preserve">
          <source>A collection of attributes, typically used to represent character and paragraph styles.</source>
          <target state="translated">一个属性的集合,通常用于表示字符和段落样式。</target>
        </trans-unit>
        <trans-unit id="6c8e3eb74807024b9845a5446b8991354e3afd80" translate="yes" xml:space="preserve">
          <source>A collection of attributes, typically used to represent character and paragraph styles. This is an implementation of MutableAttributeSet that can be observed if desired. These styles will take advantage of immutability while the sets are small enough, and may be substantially more efficient than something like SimpleAttributeSet.</source>
          <target state="translated">一个属性的集合,通常用来表示字符和段落样式。这是MutableAttributeSet的一个实现,如果需要的话可以观察到。这些样式将利用不可变性的优势,同时集子足够小,可能比简单属性集(SimpleAttributeSet)这样的东西更有效率。</target>
        </trans-unit>
        <trans-unit id="daad42586d8382773f61a80ac9d8a9a960bc9ed2" translate="yes" xml:space="preserve">
          <source>A collection of bindings of KeyStrokes to actions.</source>
          <target state="translated">KeyStrokes与动作的绑定集合。</target>
        </trans-unit>
        <trans-unit id="214488a70119ea5c739cf23236a2ecb22add7f67" translate="yes" xml:space="preserve">
          <source>A collection of bindings of KeyStrokes to actions. The bindings are basically name-value pairs that potentially resolve in a hierarchy.</source>
          <target state="translated">KeyStrokes 与动作的绑定的集合。这些绑定基本上是可能在一个层次结构中解析的名-值对。</target>
        </trans-unit>
        <trans-unit id="bd0c8e2a8c90cddd8d3a20af3894414e16b21b63" translate="yes" xml:space="preserve">
          <source>A collection of constants generally used for positioning and orienting components on the screen.</source>
          <target state="translated">一个常量的集合,通常用于定位和定向屏幕上的组件。</target>
        </trans-unit>
        <trans-unit id="ad2b8f0ed4118ca4e414b433ca3f2198d41ed52f" translate="yes" xml:space="preserve">
          <source>A collection of methods to deal with various text related activities.</source>
          <target state="translated">处理各种文字相关活动的方法集合。</target>
        </trans-unit>
        <trans-unit id="819f9a66ec486a6661a3a43fb152349b79c11a6d" translate="yes" xml:space="preserve">
          <source>A collection of pixels is represented as a Raster, which consists of a DataBuffer and a SampleModel. The SampleModel allows access to samples in the DataBuffer and may provide low-level information that a programmer can use to directly manipulate samples and pixels in the DataBuffer.</source>
          <target state="translated">像素的集合用Raster表示,它由DataBuffer和SampleModel组成。SampleModel允许访问DataBuffer中的样本,并可能提供程序员可以用来直接操作DataBuffer中的样本和像素的低级信息。</target>
        </trans-unit>
        <trans-unit id="cfd3afba57ee37f6342c4e39d07ce9f81d200210" translate="yes" xml:space="preserve">
          <source>A collection of settings and metadata describing the configuration.</source>
          <target state="translated">描述配置的设置和元数据的集合。</target>
        </trans-unit>
        <trans-unit id="7637646e14f7755f8e9aeb36fd802da41f8fb558" translate="yes" xml:space="preserve">
          <source>A collection of unique attributes.</source>
          <target state="translated">一个独特属性的集合。</target>
        </trans-unit>
        <trans-unit id="dcf32be1ae22a40a3b351bd2ff31dffecf4e02e6" translate="yes" xml:space="preserve">
          <source>A collection of unique attributes. This is a read-only, immutable interface. An attribute is basically a key and a value assigned to the key. The collection may represent something like a style run, a logical style, etc. These are generally used to describe features that will contribute to some graphical representation such as a font. The set of possible keys is unbounded and can be anything. Typically View implementations will respond to attribute definitions and render something to represent the attributes.</source>
          <target state="translated">一个独特属性的集合。这是一个只读的、不可更改的接口。一个属性基本上就是一个键和一个分配给键的值。这个集合可以代表诸如样式运行、逻辑样式等。这些一般用于描述将有助于一些图形表示的特征,如字体。可能的键的集合是没有边界的,可以是任何东西。通常View实现会响应属性定义,并渲染一些东西来表示属性。</target>
        </trans-unit>
        <trans-unit id="d056f201a492fbd928cfc64c39c7c8c570d12dc7" translate="yes" xml:space="preserve">
          <source>A collection of utility methods for Swing.</source>
          <target state="translated">Swing的实用方法的集合。</target>
        </trans-unit>
        <trans-unit id="35eecf8b6bf9de4c11825dba857014a73dae84d7" translate="yes" xml:space="preserve">
          <source>A collection that contains no duplicate elements.</source>
          <target state="translated">一个不包含重复元素的集合。</target>
        </trans-unit>
        <trans-unit id="d9305b926296adf001ad4ca75d6bb83b0e0e24fd" translate="yes" xml:space="preserve">
          <source>A collection that contains no duplicate elements. More formally, sets contain no pair of elements &lt;code&gt;e1&lt;/code&gt; and &lt;code&gt;e2&lt;/code&gt; such that &lt;code&gt;e1.equals(e2)&lt;/code&gt;, and at most one null element. As implied by its name, this interface models the mathematical</source>
          <target state="translated">不包含重复元素的集合。更正式地说，集合不包含元素对 &lt;code&gt;e1&lt;/code&gt; 和 &lt;code&gt;e2&lt;/code&gt; ，因此 &lt;code&gt;e1.equals(e2)&lt;/code&gt; 和最多一个空元素。顾名思义，此接口可对数学模型进行建模</target>
        </trans-unit>
        <trans-unit id="e30d7f9b91d5a7ffab48faee759b58d4ae7bc7c2" translate="yes" xml:space="preserve">
          <source>A colon</source>
          <target state="translated">一个结肠</target>
        </trans-unit>
        <trans-unit id="a5774fa8d9c069418206ed483e2ca2f3cf35a52d" translate="yes" xml:space="preserve">
          <source>A colon (&lt;code&gt;:&lt;/code&gt;).</source>
          <target state="translated">冒号（ &lt;code&gt;:&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="be18cc9564ae7139f76881c6aeab6e3606b669e2" translate="yes" xml:space="preserve">
          <source>A color percentage value can always be converted to a number and vice versa.</source>
          <target state="translated">颜色百分比值总是可以转换为数字,反之亦然。</target>
        </trans-unit>
        <trans-unit id="f3014f21a6bc8bc6dcb869994f59c9558c53b7eb" translate="yes" xml:space="preserve">
          <source>A comma</source>
          <target state="translated">逗号</target>
        </trans-unit>
        <trans-unit id="58bed6c2bf813dbd5b59b07d5f4ba3ec11ec7f9e" translate="yes" xml:space="preserve">
          <source>A comma-separated list of &lt;code&gt;.jar&lt;/code&gt; file names.</source>
          <target state="translated">&lt;code&gt;.jar&lt;/code&gt; 文件名的逗号分隔列表。</target>
        </trans-unit>
        <trans-unit id="21ada3f1a472115f0bef241523aeab6cda76d7ec" translate="yes" xml:space="preserve">
          <source>A comma-separated list of content types that a server processing this form will handle correctly.</source>
          <target state="translated">以逗号分隔的内容类型列表,处理此表单的服务器将正确处理这些内容。</target>
        </trans-unit>
        <trans-unit id="cc92e45b79be7a269f657f1d29d468aba08cbae2" translate="yes" xml:space="preserve">
          <source>A comma-separated list of content types that a server processing this form will handle correctly. See the accept attribute definition in HTML 4.0.</source>
          <target state="translated">以逗号分隔的内容类型列表,服务器处理此表单时将正确处理这些内容。参见HTML 4.0中的accept属性定义。</target>
        </trans-unit>
        <trans-unit id="3e15ed690ab5b10b6bbfffdf6ea9f15a49f6225b" translate="yes" xml:space="preserve">
          <source>A command APDU following the structure defined in ISO/IEC 7816-4.</source>
          <target state="translated">遵循ISO/IEC 7816-4中定义的结构的命令APDU。</target>
        </trans-unit>
        <trans-unit id="681b75f4208064da9a591ffc6a26dbde63b01fc6" translate="yes" xml:space="preserve">
          <source>A command APDU following the structure defined in ISO/IEC 7816-4. It consists of a four byte header and a conditional body of variable length. This class does not attempt to verify that the APDU encodes a semantically valid command.</source>
          <target state="translated">遵循ISO/IEC 7816-4中定义的结构的命令APDU。它由一个四个字节的头和一个可变长度的条件体组成。该类不试图验证APDU是否编码了语义上有效的命令。</target>
        </trans-unit>
        <trans-unit id="c28100e80e883d1cd0313829f4706d03760bb13d" translate="yes" xml:space="preserve">
          <source>A common format of resource bundles is in &lt;a href=&quot;propertyresourcebundle&quot;&gt;.properties&lt;/a&gt; file format. Typically &lt;code&gt;.properties&lt;/code&gt; resource bundles are packaged in a JAR file. Resource bundle only JAR file can be readily deployed as an &lt;a href=&quot;../lang/module/modulefinder#automatic-modules&quot;&gt; automatic module&lt;/a&gt;. For example, if the JAR file contains the entry &quot;&lt;code&gt;p/q/Foo_ja.properties&lt;/code&gt;&quot; and no &lt;code&gt;.class&lt;/code&gt; entry, when resolved and defined as an automatic module, no package is derived for this module. This allows resource bundles in &lt;code&gt;.properties&lt;/code&gt; format packaged in one or more JAR files that may contain entries in the same directory and can be resolved successfully as automatic modules.</source>
          <target state="translated">资源束的常见格式是&lt;a href=&quot;propertyresourcebundle&quot;&gt;.properties&lt;/a&gt;文件格式。通常， &lt;code&gt;.properties&lt;/code&gt; 资源包打包在JAR文件中。仅资源包的JAR文件可以很容易地部署为&lt;a href=&quot;../lang/module/modulefinder#automatic-modules&quot;&gt;自动模块&lt;/a&gt;。例如，如果JAR文件包含条目&amp;ldquo; &lt;code&gt;p/q/Foo_ja.properties&lt;/code&gt; &amp;rdquo;和没有 &lt;code&gt;.class&lt;/code&gt; 条目，则在将其解析并定义为自动模块时，不会为此模块派生任何程序包。这允许将 &lt;code&gt;.properties&lt;/code&gt; 格式的资源包打包到一个或多个JAR文件中，这些文件可能包含同一目录中的条目，并且可以作为自动模块成功解析。</target>
        </trans-unit>
        <trans-unit id="69b0d2636d902fad23aed7fa5d62125f0203e8ab" translate="yes" xml:space="preserve">
          <source>A common interface for all entities that declare type variables.</source>
          <target state="translated">为所有声明类型变量的实体提供一个通用接口。</target>
        </trans-unit>
        <trans-unit id="c0a8585c7a0901c1332aef262b2493ef29edd91b" translate="yes" xml:space="preserve">
          <source>A common operation to want to do is to set the background color that will be used if the main viewport view is smaller than the viewport, or is not opaque. This can be accomplished by setting the background color of the viewport, via &lt;code&gt;scrollPane.getViewport().setBackground()&lt;/code&gt;. The reason for setting the color of the viewport and not the scrollpane is that by default &lt;code&gt;JViewport&lt;/code&gt; is opaque which, among other things, means it will completely fill in its background using its background color. Therefore when &lt;code&gt;JScrollPane&lt;/code&gt; draws its background the viewport will usually draw over it.</source>
          <target state="translated">常见的操作是设置主视口视图小于视口或不透明时将使用的背景颜色。这可以通过通过 &lt;code&gt;scrollPane.getViewport().setBackground()&lt;/code&gt; 设置视口的背景色来实现。设置视口而不是滚动窗格的颜色的原因是，默认情况下， &lt;code&gt;JViewport&lt;/code&gt; 是不透明的，这意味着它会使用其背景颜色完全填充其背景。因此，当 &lt;code&gt;JScrollPane&lt;/code&gt; 绘制其背景时，视口通常将在其上绘制。</target>
        </trans-unit>
        <trans-unit id="473969e4a73feeded3816bdf23272e57822f32d1" translate="yes" xml:space="preserve">
          <source>A common strategy for creating more complex types of documents is to have the EditorKit implementation return a factory. Since the EditorKit ties all of the pieces necessary to maintain a type of document, the factory is typically an important part of that and should be produced by the EditorKit implementation.</source>
          <target state="translated">创建更复杂的文档类型的常见策略是让EditorKit实现返回一个工厂。由于EditorKit绑定了维护文档类型所需的所有部件,因此工厂通常是其中的重要部分,应该由EditorKit实现产生。</target>
        </trans-unit>
        <trans-unit id="f9828806665693a1722cf24a45e24e2a1d43bf9f" translate="yes" xml:space="preserve">
          <source>A common superclass for exceptions specific to different kinds of unknown entities allows a single catch block to easily provide uniform handling of those related conditions.</source>
          <target state="translated">针对不同种类的未知实体所特有的异常的共同超级类,允许一个单一的捕获块轻松地提供对这些相关条件的统一处理。</target>
        </trans-unit>
        <trans-unit id="7b03fd8af749e1a3ce6657ea29c356afa369685b" translate="yes" xml:space="preserve">
          <source>A common superclass for those exceptions allows a single catch block to have code handling them uniformly.</source>
          <target state="translated">对于这些异常,一个共同的超级类可以让一个捕捉块的代码统一处理它们。</target>
        </trans-unit>
        <trans-unit id="149122bbabc5bd28e11163d620d20637d4bfd2af" translate="yes" xml:space="preserve">
          <source>A common use for this attribute will be applications which want to redirect output to a local disk file : eg.&quot;file:out.prn&quot;. Note that proper construction of &quot;file:&quot; scheme &lt;code&gt;URI&lt;/code&gt; instances should be performed using the &lt;code&gt;toURI()&lt;/code&gt; method of class &lt;a href=&quot;../../../../../java.base/java/io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;. See the documentation on that class for more information.</source>
          <target state="translated">此属性的常见用法是希望将输出重定向到本地磁盘文件的应用程序：例如&amp;ldquo; file：out.prn&amp;rdquo;。请注意，应使用&lt;a href=&quot;../../../../../java.base/java/io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;类的 &lt;code&gt;toURI()&lt;/code&gt; 方法执行&amp;ldquo; file：&amp;rdquo;方案 &lt;code&gt;URI&lt;/code&gt; 实例的正确构造。有关更多信息，请参见该类的文档。</target>
        </trans-unit>
        <trans-unit id="5a2eb4eb16e9b666e1d02dd5dca1670d20c9c93d" translate="yes" xml:space="preserve">
          <source>A common use for this attribute will be applications which want to redirect output to a local disk file : eg.&quot;file:out.prn&quot;. Note that proper construction of &quot;file:&quot; scheme URI instances should be performed using the &lt;code&gt;toURI()&lt;/code&gt; method of class &lt;a href=&quot;../../../../java/io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;. See the documentation on that class for more information.</source>
          <target state="translated">该属性的常见用法是希望将输出重定向到本地磁盘文件的应用程序：例如&amp;ldquo; file：out.prn&amp;rdquo;。请注意，应使用&lt;a href=&quot;../../../../java/io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;类的 &lt;code&gt;toURI()&lt;/code&gt; 方法执行&amp;ldquo; file：&amp;rdquo;方案URI实例的正确构造。有关更多信息，请参见该类的文档。</target>
        </trans-unit>
        <trans-unit id="9cb164a5e205a0c430729ed3740e2ce03c8aa47f" translate="yes" xml:space="preserve">
          <source>A compact pattern contains a positive and negative subpattern separated by a subpattern boundary character &lt;code&gt;';' (U+003B)&lt;/code&gt;, for example, &lt;code&gt;&quot;0K;-0K&quot;&lt;/code&gt;. Each subpattern has a prefix, minimum integer digits, and suffix. The negative subpattern is optional, if absent, then the positive subpattern prefixed with the minus sign (&lt;code&gt;'-' U+002D HYPHEN-MINUS&lt;/code&gt;) is used as the negative subpattern. That is, &lt;code&gt;&quot;0K&quot;&lt;/code&gt; alone is equivalent to &lt;code&gt;&quot;0K;-0K&quot;&lt;/code&gt;. If there is an explicit negative subpattern, it serves only to specify the negative prefix and suffix. The number of minimum integer digits, and other characteristics are all the same as the positive pattern. That means that &lt;code&gt;&quot;0K;-00K&quot;&lt;/code&gt; produces precisely the same behavior as &lt;code&gt;&quot;0K;-0K&quot;&lt;/code&gt;.</source>
          <target state="translated">紧凑模式包含由子模式边界字符 &lt;code&gt;';' (U+003B)&lt;/code&gt; 分隔的正和负子模式。 （U + 003B），例如 &lt;code&gt;&quot;0K;-0K&quot;&lt;/code&gt; 。每个子模式都有一个前缀，最小整数位数和后缀。负子模式是可选的，如果不存在，则将带有负号（ &lt;code&gt;'-' U+002D HYPHEN-MINUS&lt;/code&gt; ）的正子模式用作负子模式。也就是说，单独的 &lt;code&gt;&quot;0K&quot;&lt;/code&gt; 等效于 &lt;code&gt;&quot;0K;-0K&quot;&lt;/code&gt; 。如果存在显式的负子模式，则仅用于指定负前缀和后缀。最小整数位数和其他特征均与正模式相同。这表示 &lt;code&gt;&quot;0K;-00K&quot;&lt;/code&gt; 产生与 &lt;code&gt;&quot;0K;-0K&quot;&lt;/code&gt; 完全相同的行为。</target>
        </trans-unit>
        <trans-unit id="c63c4e1982cffaa645ac58895c8ba84f0ed174a4" translate="yes" xml:space="preserve">
          <source>A compact pattern has the following syntax:</source>
          <target state="translated">一个紧凑模式的语法如下。</target>
        </trans-unit>
        <trans-unit id="1fe1f3bb87793834d9a54ab4f102ca3d395dccdb" translate="yes" xml:space="preserve">
          <source>A compact textual description of this &lt;a href=&quot;varhandle&quot;&gt;VarHandle&lt;/a&gt;</source>
          <target state="translated">此&lt;a href=&quot;varhandle&quot;&gt;VarHandle的&lt;/a&gt;紧凑文本描述</target>
        </trans-unit>
        <trans-unit id="03ea6e35d385ce5e64e68851429a00df86bd6776" translate="yes" xml:space="preserve">
          <source>A compact textual description of this call site descriptor</source>
          <target state="translated">对这一呼叫站点描述符的简要文字说明。</target>
        </trans-unit>
        <trans-unit id="61f746ffb5574dbcc361de786ab0ebcc0630c128" translate="yes" xml:space="preserve">
          <source>A compact textual description of this descriptor</source>
          <target state="translated">对这一描述符的精简文字说明。</target>
        </trans-unit>
        <trans-unit id="b812460359ac28696c5c53d6194bcc0b4e3e6d4b" translate="yes" xml:space="preserve">
          <source>A comparator that imposes the reverse of the</source>
          <target state="translated">一个比较器,施加了一个相反的。</target>
        </trans-unit>
        <trans-unit id="b1069285dcf5aa4a511fd41ed7ca14c6e2a346c9" translate="yes" xml:space="preserve">
          <source>A comparator that imposes the reverse ordering of the specified comparator.</source>
          <target state="translated">一个对指定的比较器实施反向排序的比较器。</target>
        </trans-unit>
        <trans-unit id="88cbfaab6cde9461570cfd17bac039d6f107d7c6" translate="yes" xml:space="preserve">
          <source>A comparison function, which imposes a</source>
          <target state="translated">一个比较函数,它施加了一个</target>
        </trans-unit>
        <trans-unit id="8611f588b20f634a35201b6faa98a5b6fa04b35e" translate="yes" xml:space="preserve">
          <source>A compiled representation of a regular expression.</source>
          <target state="translated">正则表达式的编译表示。</target>
        </trans-unit>
        <trans-unit id="ecd305d3625122d943cbe093e927d37229d6ccf1" translate="yes" xml:space="preserve">
          <source>A compiler tool has an associated standard file manager, which is the file manager that is native to the tool (or built-in). The standard file manager can be obtained by calling &lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">编译器工具具有关联的标准文件管理器，该文件管理器是该工具（或内置）的本机文件管理器。可以通过调用&lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;获得标准文件管理器。</target>
        </trans-unit>
        <trans-unit id="507982c243d52965e48c7b0732508c6ac665735a" translate="yes" xml:space="preserve">
          <source>A compiler tool has an associated standard file manager, which is the file manager that is native to the tool (or built-in). The standard file manager can be obtained by calling &lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">编译器工具具有一个关联的标准文件管理器，该文件管理器是该工具（或内置）的本机文件管理器。可以通过调用&lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager&lt;/a&gt;获得标准文件管理器。</target>
        </trans-unit>
        <trans-unit id="317c0a69ba9309f170888d8994808d0c8f23b104" translate="yes" xml:space="preserve">
          <source>A compiler tool must function with any file manager as long as any additional requirements as detailed in the methods below are met. If no file manager is provided, the compiler tool will use a standard file manager such as the one returned by &lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">只要满足以下方法中详述的任何其他要求，编译器工具就可以与任何文件管理器一起使用。如果未提供文件管理器，则编译器工具将使用标准文件管理器，例如&lt;a href=&quot;#getStandardFileManager(javax.tools.DiagnosticListener,java.util.Locale,java.nio.charset.Charset)&quot;&gt;getStandardFileManager&lt;/a&gt;返回的文件管理器。</target>
        </trans-unit>
        <trans-unit id="a22de5f7495f42b8eb96d0161f9be3e98aab30a9" translate="yes" xml:space="preserve">
          <source>A compiler tool must function with any file manager as long as any additional requirements as detailed in the methods below are met. If no file manager is provided, the compiler tool will use a standard file manager such as the one returned by &lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager&lt;/a&gt;.</source>
          <target state="translated">只要满足以下方法中详述的任何其他要求，编译器工具就必须与任何文件管理器一起使用。如果未提供文件管理器，则编译器工具将使用标准文件管理器，例如&lt;a href=&quot;javacompiler#getStandardFileManager-javax.tools.DiagnosticListener-java.util.Locale-java.nio.charset.Charset-&quot;&gt;getStandardFileManager&lt;/a&gt;返回的文件管理器。</target>
        </trans-unit>
        <trans-unit id="c8340a51d99720fe0c029bc676ff25eb592e4528" translate="yes" xml:space="preserve">
          <source>A compiler-specific value, or &lt;code&gt;null&lt;/code&gt; if no compiler is available</source>
          <target state="translated">特定于编译器的值；如果没有可用的编译器，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="460e4928a2e29c648b0051779a7baf6b2bb69f82" translate="yes" xml:space="preserve">
          <source>A complex data type that consists of one or more fields.</source>
          <target state="translated">由一个或多个字段组成的复杂数据类型。</target>
        </trans-unit>
        <trans-unit id="c013238a0fecb5ce789627bf17d6e1e533e68de4" translate="yes" xml:space="preserve">
          <source>A compliant &lt;code&gt;SyncProvider&lt;/code&gt; implementation that is fully pluggable into the &lt;code&gt;SyncFactory&lt;/code&gt;&lt;b&gt;must&lt;/b&gt; extend and implement all abstract methods in the &lt;a href=&quot;syncprovider&quot;&gt;&lt;code&gt;SyncProvider&lt;/code&gt;&lt;/a&gt; class. In addition, an implementation &lt;b&gt;must&lt;/b&gt; determine the grade, locking and updatable view capabilities defined in the &lt;code&gt;SyncProvider&lt;/code&gt; class definition. One or more of the &lt;code&gt;SyncProvider&lt;/code&gt; description criteria &lt;b&gt;must&lt;/b&gt; be supported. It is expected that vendor implementations will offer a range of grade, locking, and updatable view capabilities.</source>
          <target state="translated">完全可插入 &lt;code&gt;SyncFactory&lt;/code&gt; 的兼容 &lt;code&gt;SyncProvider&lt;/code&gt; 实现&lt;b&gt;必须&lt;/b&gt;扩展并实现&lt;a href=&quot;syncprovider&quot;&gt; &lt;code&gt;SyncProvider&lt;/code&gt; &lt;/a&gt;类中的所有抽象方法。此外，实现&lt;b&gt;必须&lt;/b&gt;确定 &lt;code&gt;SyncProvider&lt;/code&gt; 类定义中定义的等级，锁定和可更新视图功能。&lt;b&gt;必须&lt;/b&gt;支持一个或多个 &lt;code&gt;SyncProvider&lt;/code&gt; 描述标准。预计供应商实施将提供一系列的等级，锁定和可更新的视图功能。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ef095778aeb29d0bee970385d5cf9a54e63ddb71" translate="yes" xml:space="preserve">
          <source>A compliant JDBC &lt;code&gt;RowSet&lt;/code&gt; implementation &lt;b&gt;must&lt;/b&gt; implement one or more standard interfaces specified in this package and &lt;b&gt;may&lt;/b&gt; extend the &lt;a href=&quot;baserowset&quot;&gt;&lt;code&gt;BaseRowSet&lt;/code&gt;&lt;/a&gt; abstract class. For example, a &lt;code&gt;CachedRowSet&lt;/code&gt; implementation must implement the &lt;code&gt;CachedRowSet&lt;/code&gt; interface and extend the &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class. The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the standard architecture on which all &lt;code&gt;RowSet&lt;/code&gt; implementations should be built, regardless of whether the &lt;code&gt;RowSet&lt;/code&gt; objects exist in a connected or disconnected environment. The &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class provides any &lt;code&gt;RowSet&lt;/code&gt; implementation with its base functionality, including property manipulation and event notification that is fully compliant with &lt;a href=&quot;http://java.sun.com/products/javabeans&quot;&gt;JavaBeans&lt;/a&gt; component requirements. As an example, all implementations provided in the reference implementations (contained in the &lt;code&gt;com.sun.rowset&lt;/code&gt; package) use the &lt;code&gt;BaseRowSet&lt;/code&gt; class as a basis for their implementations.</source>
          <target state="translated">兼容的JDBC &lt;code&gt;RowSet&lt;/code&gt; 实现&lt;b&gt;必须&lt;/b&gt;实现此程序包中指定的一个或多个标准接口，并且&lt;b&gt;可以&lt;/b&gt;扩展&lt;a href=&quot;baserowset&quot;&gt; &lt;code&gt;BaseRowSet&lt;/code&gt; &lt;/a&gt;抽象类。例如， &lt;code&gt;CachedRowSet&lt;/code&gt; 实现必须实现 &lt;code&gt;CachedRowSet&lt;/code&gt; 接口并扩展 &lt;code&gt;BaseRowSet&lt;/code&gt; 抽象类。所述 &lt;code&gt;BaseRowSet&lt;/code&gt; 类提供的标准体系结构在其上的所有 &lt;code&gt;RowSet&lt;/code&gt; 的实现应该建立，而不管 &lt;code&gt;RowSet&lt;/code&gt; 在连接或断开环境中存在的对象。该 &lt;code&gt;BaseRowSet&lt;/code&gt; 抽象类提供任何 &lt;code&gt;RowSet&lt;/code&gt; 具有基本功能的实现，包括完全符合&lt;a href=&quot;http://java.sun.com/products/javabeans&quot;&gt;JavaBeans&lt;/a&gt;组件要求的属性操作和事件通知。例如，参考实现中提供的所有实现（包含在 &lt;code&gt;com.sun.rowset&lt;/code&gt; 包中）均使用 &lt;code&gt;BaseRowSet&lt;/code&gt; 类作为其实现的基础。</target>
        </trans-unit>
        <trans-unit id="eaa59560f57b71feac5a20194598fcd42e9ee0a3" translate="yes" xml:space="preserve">
          <source>A compliant JDBC &lt;code&gt;RowSet&lt;/code&gt; implementation &lt;b&gt;must&lt;/b&gt; implement one or more standard interfaces specified in this package and &lt;b&gt;may&lt;/b&gt; extend the &lt;a href=&quot;baserowset&quot;&gt;&lt;code&gt;BaseRowSet&lt;/code&gt;&lt;/a&gt; abstract class. For example, a &lt;code&gt;CachedRowSet&lt;/code&gt; implementation must implement the &lt;code&gt;CachedRowSet&lt;/code&gt; interface and extend the &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class. The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the standard architecture on which all &lt;code&gt;RowSet&lt;/code&gt; implementations should be built, regardless of whether the &lt;code&gt;RowSet&lt;/code&gt; objects exist in a connected or disconnected environment. The &lt;code&gt;BaseRowSet&lt;/code&gt; abstract class provides any &lt;code&gt;RowSet&lt;/code&gt; implementation with its base functionality, including property manipulation and event notification that is fully compliant with &lt;a href=&quot;https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans&lt;/a&gt; component requirements. As an example, all implementations provided in the reference implementations (contained in the &lt;code&gt;com.sun.rowset&lt;/code&gt; package) use the &lt;code&gt;BaseRowSet&lt;/code&gt; class as a basis for their implementations.</source>
          <target state="translated">兼容的JDBC &lt;code&gt;RowSet&lt;/code&gt; 实现&lt;b&gt;必须&lt;/b&gt;实现此程序包中指定的一个或多个标准接口，并且&lt;b&gt;可以&lt;/b&gt;扩展&lt;a href=&quot;baserowset&quot;&gt; &lt;code&gt;BaseRowSet&lt;/code&gt; &lt;/a&gt;抽象类。例如， &lt;code&gt;CachedRowSet&lt;/code&gt; 实现必须实现 &lt;code&gt;CachedRowSet&lt;/code&gt; 接口并扩展 &lt;code&gt;BaseRowSet&lt;/code&gt; 抽象类。所述 &lt;code&gt;BaseRowSet&lt;/code&gt; 类提供的标准体系结构在其上的所有 &lt;code&gt;RowSet&lt;/code&gt; 的实现应该建立，而不管 &lt;code&gt;RowSet&lt;/code&gt; 在连接或断开环境中存在的对象。该 &lt;code&gt;BaseRowSet&lt;/code&gt; 抽象类提供任何 &lt;code&gt;RowSet&lt;/code&gt; 具有基本功能的实现，包括完全符合&lt;a href=&quot;https://www.oracle.com/technetwork/java/javase/documentation/spec-136004.html&quot;&gt;JavaBeans&lt;/a&gt;组件要求的属性操作和事件通知。例如，参考实现中提供的所有实现（包含在 &lt;code&gt;com.sun.rowset&lt;/code&gt; 包中）均使用 &lt;code&gt;BaseRowSet&lt;/code&gt; 类作为其实现的基础。</target>
        </trans-unit>
        <trans-unit id="fd54ac5c73834653a330eeea3f04f9607f95a18f" translate="yes" xml:space="preserve">
          <source>A component can be moved to the top or bottom position within its layer by calling &lt;code&gt;moveToFront&lt;/code&gt; or &lt;code&gt;moveToBack&lt;/code&gt;.</source>
          <target state="translated">可以通过调用 &lt;code&gt;moveToFront&lt;/code&gt; 或 &lt;code&gt;moveToBack&lt;/code&gt; 将组件移到其层内的顶部或底部位置。</target>
        </trans-unit>
        <trans-unit id="ce680a6c1c38459061c4c3b21c2f89763dc41c31" translate="yes" xml:space="preserve">
          <source>A component gained the focus.</source>
          <target state="translated">一个组件获得了重点。</target>
        </trans-unit>
        <trans-unit id="09dfef83c5863bccfcebb0659b7993032c336b08" translate="yes" xml:space="preserve">
          <source>A component is made displayable either when it is added to a displayable containment hierarchy or when its containment hierarchy is made displayable. A containment hierarchy is made displayable when its ancestor window is either packed or made visible.</source>
          <target state="translated">当一个组件被添加到一个可显示的包含层次结构中时,或者当它的包含层次结构被显示时,该组件都是可显示的。当一个包含层次结构的祖先窗口被打包或被显示时,该包含层次结构就可以显示。</target>
        </trans-unit>
        <trans-unit id="b2cebf45dce5e66f26a7b4a8b67921e722feb059" translate="yes" xml:space="preserve">
          <source>A component is made undisplayable either when it is removed from a displayable containment hierarchy or when its containment hierarchy is made undisplayable. A containment hierarchy is made undisplayable when its ancestor window is disposed.</source>
          <target state="translated">当组件从可显示的包含层次结构中移除时,或当组件的包含层次结构变得不可显示时,该组件将变得不可显示。当一个包含层次结构的祖先窗口被处理时,该包含层次结构将不可显示。</target>
        </trans-unit>
        <trans-unit id="2c7dfbc065f1196e41f2a84cc03c919a7d0aba07" translate="yes" xml:space="preserve">
          <source>A component listener to track show/hide/resize events and convert them to PropertyChange events.</source>
          <target state="translated">一个组件监听器,用于跟踪show/hide/resize事件并将其转换为PropertyChange事件。</target>
        </trans-unit>
        <trans-unit id="a1e4aea39b32a55132a7191c95ec3d6490806639" translate="yes" xml:space="preserve">
          <source>A component lost the focus.</source>
          <target state="translated">一个组件失去了焦点。</target>
        </trans-unit>
        <trans-unit id="679d259c58ee38716564f2caf4e42a4aa66a6aa4" translate="yes" xml:space="preserve">
          <source>A component may be left undefined by passing &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">可以通过传递 &lt;code&gt;null&lt;/code&gt; 来使组件保持未定义状态。</target>
        </trans-unit>
        <trans-unit id="020fba51ee1091155e2da3e20554783a558aaf13" translate="yes" xml:space="preserve">
          <source>A component that acts as both a Subscriber and Publisher.</source>
          <target state="translated">一个既是订阅者又是发布者的组件。</target>
        </trans-unit>
        <trans-unit id="15ceae254918b0ef6d94940a0ec178f6e5336260" translate="yes" xml:space="preserve">
          <source>A component that combines a button or editable field and a drop-down list.</source>
          <target state="translated">一个结合了按钮或可编辑字段和下拉列表的组件。</target>
        </trans-unit>
        <trans-unit id="5faef24a6fc07543039a7b12cf55022c812cece0" translate="yes" xml:space="preserve">
          <source>A component that combines a button or editable field and a drop-down list. The user can select a value from the drop-down list, which appears at the user's request. If you make the combo box editable, then the combo box includes an editable field into which the user can type a value.</source>
          <target state="translated">一个结合了按钮或可编辑字段和下拉列表的组件。用户可以从下拉列表中选择一个值,下拉列表会根据用户的要求出现。如果您使组合框是可编辑的,那么组合框就包括一个可编辑的字段,用户可以在其中输入一个值。</target>
        </trans-unit>
        <trans-unit id="704f9861bf93bff7d6f2a884c9f6fcda58ad6a1a" translate="yes" xml:space="preserve">
          <source>A component that displays a list of objects and allows the user to select one or more items.</source>
          <target state="translated">一个显示对象列表并允许用户选择一个或多个项目的组件。</target>
        </trans-unit>
        <trans-unit id="0eb8518159403706b6e12f50a429cbdbbe4b48bc" translate="yes" xml:space="preserve">
          <source>A component that displays a list of objects and allows the user to select one or more items. A separate model, &lt;code&gt;ListModel&lt;/code&gt;, maintains the contents of the list.</source>
          <target state="translated">一种显示对象列表并允许用户选择一个或多个项目的组件。一个单独的模型 &lt;code&gt;ListModel&lt;/code&gt; 维护列表的内容。</target>
        </trans-unit>
        <trans-unit id="a3e56e4baebcff6472e0d38834430c3e1a5ed1d0" translate="yes" xml:space="preserve">
          <source>A component that lets the user graphically select a value by sliding a knob within a bounded interval.</source>
          <target state="translated">一个组件,让用户通过在一个限定的区间内滑动旋钮,以图形方式选择一个值。</target>
        </trans-unit>
        <trans-unit id="4a97e366ad870b7ed4064276a5470ba5b5ba0526" translate="yes" xml:space="preserve">
          <source>A component that lets the user graphically select a value by sliding a knob within a bounded interval. The knob is always positioned at the points that match integer values within the specified interval.</source>
          <target state="translated">一个组件,让用户可以通过在限定的区间内滑动旋钮以图形方式选择一个值。旋钮总是定位在与指定区间内的整数值相匹配的点上。</target>
        </trans-unit>
        <trans-unit id="0dc2d5a67102bfcb565b400826769c8ed453c1ba" translate="yes" xml:space="preserve">
          <source>A component that lets the user switch between a group of components by clicking on a tab with a given title and/or icon.</source>
          <target state="translated">一个组件,允许用户通过点击给定标题和/或图标的标签在一组组件之间切换。</target>
        </trans-unit>
        <trans-unit id="a543cd02bd31e7234610b239b52d4ebf49372b46" translate="yes" xml:space="preserve">
          <source>A component that lets the user switch between a group of components by clicking on a tab with a given title and/or icon. For examples and information on using tabbed panes see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html&quot;&gt;How to Use Tabbed Panes&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">通过单击带有给定标题和/或图标的选项卡，用户可以在一组组件之间切换的组件。有关使用选项卡式窗格的示例和信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html&quot;&gt;如何使用选项卡式窗格&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a1adc010ae0d1fb5537b7adb134371ba96f790a" translate="yes" xml:space="preserve">
          <source>A component that lets the user switch between a group of components by clicking on a tab with a given title and/or icon. For examples and information on using tabbed panes see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html&quot;&gt;How to Use Tabbed Panes&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">通过单击带有给定标题和/或图标的选项卡，用户可以在一组组件之间切换的组件。有关使用选项卡式窗格的示例和信息，请参见&lt;em&gt;《 Java教程》&lt;/em&gt;中的&lt;em&gt;&amp;ldquo;&lt;/em&gt;&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/tabbedpane.html&quot;&gt;如何使用选项卡式窗格&lt;/a&gt;&amp;rdquo;一节。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ca411fd4076f10e631b20e5262e62782a1730dca" translate="yes" xml:space="preserve">
          <source>A component that visually displays the progress of some task.</source>
          <target state="translated">一个能直观地显示某项任务进度的组件。</target>
        </trans-unit>
        <trans-unit id="490c085d9d786efb4c130b5466ea2b4c8247ff15" translate="yes" xml:space="preserve">
          <source>A component that visually displays the progress of some task. As the task progresses towards completion, the progress bar displays the task's percentage of completion. This percentage is typically represented visually by a rectangle which starts out empty and gradually becomes filled in as the task progresses. In addition, the progress bar can display a textual representation of this percentage.</source>
          <target state="translated">一个可视化显示某个任务进度的组件。随着任务的完成,进度条显示任务的完成百分比。这个百分比通常由一个矩形直观地表示,开始时是空的,随着任务的进展,它逐渐被填满。此外,进度条还可以显示该百分比的文字表示。</target>
        </trans-unit>
        <trans-unit id="b481c61e6ab81c9981655232bcaa4eb8b0e7e43e" translate="yes" xml:space="preserve">
          <source>A component whose paint() method will render the specified value.</source>
          <target state="translated">一个组件,其paint()方法将渲染指定的值。</target>
        </trans-unit>
        <trans-unit id="6612f77e16c0f91da39443d81f8e28776739b289" translate="yes" xml:space="preserve">
          <source>A component's own internal selection mechanism (or caret for text components) should be used to track the drop location.</source>
          <target state="translated">应使用组件自身的内部选择机制(或文本组件的卡口)来跟踪投放位置。</target>
        </trans-unit>
        <trans-unit id="910aea3bab537d73873ced3f63278e9b9ed9f3e5" translate="yes" xml:space="preserve">
          <source>A composite Border class used to compose two Border objects into a single border by nesting an inside Border object within the insets of an outside Border object.</source>
          <target state="translated">一个复合边界类,通过在外部边界对象的嵌套中嵌套一个内部边界对象,将两个边界对象合成一个边界。</target>
        </trans-unit>
        <trans-unit id="fa5a35f7f4b3f674832802a41333821de4426d13" translate="yes" xml:space="preserve">
          <source>A composite Border class used to compose two Border objects into a single border by nesting an inside Border object within the insets of an outside Border object. For example, this class may be used to add blank margin space to a component with an existing decorative border:</source>
          <target state="translated">一个复合边框类,通过将一个内部边框对象嵌套在一个外部边框对象的镶边中,将两个边框对象合成一个边框。例如,该类可用于为一个具有装饰性边框的组件添加空白边框空间。</target>
        </trans-unit>
        <trans-unit id="c240d3ac3169c5fa449a090551b1533296f8d47e" translate="yes" xml:space="preserve">
          <source>A composite name consisting of the components at indexes in the range [0,posn).</source>
          <target state="translated">由[0,posn]范围内索引的组件组成的复合名称。</target>
        </trans-unit>
        <trans-unit id="e307b9d7fcecb7e46cc83b164a05b08703be2f60" translate="yes" xml:space="preserve">
          <source>A composite name consisting of the components at indexes in the range [posn,size()). If posn is equal to size(), an empty composite name is returned.</source>
          <target state="translated">由在[posn,size()]范围内索引的组件组成的复合名称。如果posn等于size(),则返回一个空的合成名。</target>
        </trans-unit>
        <trans-unit id="7dfa482b279ca78ddba323e57c791439726a65ef" translate="yes" xml:space="preserve">
          <source>A composite type-based guarding dynamic linker.</source>
          <target state="translated">一种基于复合型守护的动态链接器。</target>
        </trans-unit>
        <trans-unit id="b40a5316fe236f009ad25f617ac484cdcb7f2c03" translate="yes" xml:space="preserve">
          <source>A composite type-based guarding dynamic linker. When a receiver of a not yet seen class is encountered, all linkers are queried sequentially on their &lt;a href=&quot;../typebasedguardingdynamiclinker#canLinkType(java.lang.Class)&quot;&gt;&lt;code&gt;TypeBasedGuardingDynamicLinker.canLinkType(Class)&lt;/code&gt;&lt;/a&gt; method. The linkers returning true are then bound to the class, and next time a receiver of same type is encountered, the linking is delegated to those linkers only, speeding up dispatch.</source>
          <target state="translated">基于复合类型的防护动态链接器。当遇到尚未看到的类的接收者时，将在其&lt;a href=&quot;../typebasedguardingdynamiclinker#canLinkType(java.lang.Class)&quot;&gt; &lt;code&gt;TypeBasedGuardingDynamicLinker.canLinkType(Class)&lt;/code&gt; &lt;/a&gt;方法上顺序查询所有链接器。然后将返回true的链接器绑定到该类，并且下次遇到相同类型的接收器时，仅将链接委派给那些链接器，从而加快了分发速度。</target>
        </trans-unit>
        <trans-unit id="012ac5ae3a315f67bc8b90d54324f1996bc43f52" translate="yes" xml:space="preserve">
          <source>A compound border UI resource.</source>
          <target state="translated">一个复合边框UI资源。</target>
        </trans-unit>
        <trans-unit id="388d169a4059ab43399d30021348063b4a944861" translate="yes" xml:space="preserve">
          <source>A compound name consisting of the components at indexes in the range [0,posn).</source>
          <target state="translated">在[0,posn]范围内,由索引处的组件组成的复合名称。</target>
        </trans-unit>
        <trans-unit id="76c4e0dce25522531bae9b9e60264ef59857ae2b" translate="yes" xml:space="preserve">
          <source>A compound name consisting of the components at indexes in the range [posn,size()). If posn is equal to size(), an empty compound name is returned.</source>
          <target state="translated">在[posn,size()]范围内,由索引中的组件组成的复合名称。如果posn等于size(),则返回一个空的复合名。</target>
        </trans-unit>
        <trans-unit id="870a4660763c1f34e013dffa68e06e176fa3b5fb" translate="yes" xml:space="preserve">
          <source>A compression quality setting of 0.0 is most generically interpreted as &quot;high compression is important,&quot; while a setting of 1.0 is most generically interpreted as &quot;high image quality is important.&quot;</source>
          <target state="translated">压缩质量设置为0.0,最通俗地解释为 &quot;高压缩很重要&quot;,而设置为1.0,最通俗地解释为 &quot;高图像质量很重要&quot;。</target>
        </trans-unit>
        <trans-unit id="e55237d8b1c126bd419cb998c4d2143c21b0a60c" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled, that throws one or more checked exceptions.</source>
          <target state="translated">启用权限后执行的计算,抛出一个或多个检查异常。</target>
        </trans-unit>
        <trans-unit id="df5aa60f9378ed72d43eb803f402550168f3ddfe" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled, that throws one or more checked exceptions. The computation is performed by invoking &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; on the &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; object. This interface is used only for computations that throw checked exceptions; computations that do not throw checked exceptions should use &lt;code&gt;PrivilegedAction&lt;/code&gt; instead.</source>
          <target state="translated">在启用特权的情况下执行的计算，将引发一个或多个检查的异常。通过调用 &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; 对象上的 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; 来执行计算。此接口仅用于引发检查的异常的计算。不引发检查异常的计算应改用 &lt;code&gt;PrivilegedAction&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53d6bfa858b3f3fb8deab95e04cbb70669ba6ea2" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled.</source>
          <target state="translated">启用权限后进行的计算。</target>
        </trans-unit>
        <trans-unit id="a84d8847cd9be7eb09312d16b993c90bbee17967" translate="yes" xml:space="preserve">
          <source>A computation to be performed with privileges enabled. The computation is performed by invoking &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; on the &lt;code&gt;PrivilegedAction&lt;/code&gt; object. This interface is used only for computations that do not throw checked exceptions; computations that throw checked exceptions must use &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; instead.</source>
          <target state="translated">在启用特权的情况下执行的计算。通过调用 &lt;code&gt;PrivilegedAction&lt;/code&gt; 对象上的 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; 来执行计算。该接口仅用于不引发检查异常的计算。引发检查异常的计算必须改用 &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4962e8975e2684994a507f252d7cedb853ac1283" translate="yes" xml:space="preserve">
          <source>A concrete CountedCompleter class must define method &lt;a href=&quot;#compute()&quot;&gt;&lt;code&gt;compute()&lt;/code&gt;&lt;/a&gt;, that should in most cases (as illustrated below), invoke &lt;code&gt;tryComplete()&lt;/code&gt; once before returning. The class may also optionally override method &lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon normal completion, and method &lt;a href=&quot;#onExceptionalCompletion(java.lang.Throwable,java.util.concurrent.CountedCompleter)&quot;&gt;&lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon any exception.</source>
          <target state="translated">具体的CountedCompleter类必须定义方法&lt;a href=&quot;#compute()&quot;&gt; &lt;code&gt;compute()&lt;/code&gt; &lt;/a&gt;，该方法在大多数情况下（如下所示）应在返回之前调用 &lt;code&gt;tryComplete()&lt;/code&gt; 一次。该类还可以选择重写&lt;a href=&quot;#onCompletion(java.util.concurrent.CountedCompleter)&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; &lt;/a&gt;方法以在正常完成时执行操作，并&lt;a href=&quot;#onExceptionalCompletion(java.lang.Throwable,java.util.concurrent.CountedCompleter)&quot;&gt; &lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt; &lt;/a&gt;以在任何异常时执行操作。</target>
        </trans-unit>
        <trans-unit id="592ff92d53f5fd5d1113ffb2481eaf8c68991cfb" translate="yes" xml:space="preserve">
          <source>A concrete CountedCompleter class must define method &lt;a href=&quot;countedcompleter#compute--&quot;&gt;&lt;code&gt;compute()&lt;/code&gt;&lt;/a&gt;, that should in most cases (as illustrated below), invoke &lt;code&gt;tryComplete()&lt;/code&gt; once before returning. The class may also optionally override method &lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon normal completion, and method &lt;a href=&quot;countedcompleter#onExceptionalCompletion-java.lang.Throwable-java.util.concurrent.CountedCompleter-&quot;&gt;&lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt;&lt;/a&gt; to perform an action upon any exception.</source>
          <target state="translated">具体的CountedCompleter类必须定义方法&lt;a href=&quot;countedcompleter#compute--&quot;&gt; &lt;code&gt;compute()&lt;/code&gt; &lt;/a&gt;，在大多数情况下（如下所示），该方法应在返回之前调用 &lt;code&gt;tryComplete()&lt;/code&gt; 一次。该类还可以选择重写&lt;a href=&quot;countedcompleter#onCompletion-java.util.concurrent.CountedCompleter-&quot;&gt; &lt;code&gt;onCompletion(CountedCompleter)&lt;/code&gt; &lt;/a&gt;方法以在正常完成时执行操作，以及&lt;a href=&quot;countedcompleter#onExceptionalCompletion-java.lang.Throwable-java.util.concurrent.CountedCompleter-&quot;&gt; &lt;code&gt;onExceptionalCompletion(Throwable, CountedCompleter)&lt;/code&gt; &lt;/a&gt;以在任何异常时执行操作。</target>
        </trans-unit>
        <trans-unit id="4d75c025f877b02d00b1e105a4eccc88b0eaef34" translate="yes" xml:space="preserve">
          <source>A concrete channel class must also implement the &lt;a href=&quot;#implCloseChannel()&quot;&gt;&lt;code&gt;implCloseChannel&lt;/code&gt;&lt;/a&gt; method in such a way that if it is invoked while another thread is blocked in a native I/O operation upon the channel then that operation will immediately return, either by throwing an exception or by returning normally. If a thread is interrupted or the channel upon which it is blocked is asynchronously closed then the channel's &lt;a href=&quot;#end(boolean)&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method will throw the appropriate exception.</source>
          <target state="translated">一个具体的通道类还必须以这样的方式实现&lt;a href=&quot;#implCloseChannel()&quot;&gt; &lt;code&gt;implCloseChannel&lt;/code&gt; &lt;/a&gt;方法：如果在通道的本机I / O操作中另一个线程被阻塞时调用该通道，则该操作将立即抛出异常或通过正常返回而立即返回。如果线程被中断或被阻塞的通道被异步关闭，则通道的&lt;a href=&quot;#end(boolean)&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;方法将抛出适当的异常。</target>
        </trans-unit>
        <trans-unit id="7c5d3b0a75ab72fca28782e0f37995ed37f00346" translate="yes" xml:space="preserve">
          <source>A concrete channel class must also implement the &lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt;&lt;code&gt;implCloseChannel&lt;/code&gt;&lt;/a&gt; method in such a way that if it is invoked while another thread is blocked in a native I/O operation upon the channel then that operation will immediately return, either by throwing an exception or by returning normally. If a thread is interrupted or the channel upon which it is blocked is asynchronously closed then the channel's &lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt;&lt;code&gt;end&lt;/code&gt;&lt;/a&gt; method will throw the appropriate exception.</source>
          <target state="translated">一个具体的通道类还必须以这样的方式实现&lt;a href=&quot;abstractinterruptiblechannel#implCloseChannel--&quot;&gt; &lt;code&gt;implCloseChannel&lt;/code&gt; &lt;/a&gt;方法：如果在通道的本机I / O操作中另一个线程被阻塞时调用该方法，则该操作将立即抛出异常或通过正常返回而立即返回。如果线程被中断或被阻塞的通道被异步关闭，则通道的&lt;a href=&quot;abstractinterruptiblechannel#end-boolean-&quot;&gt; &lt;code&gt;end&lt;/code&gt; &lt;/a&gt;方法将抛出适当的异常。</target>
        </trans-unit>
        <trans-unit id="f923d4960b765d0c3f8ba0b31067d29761b88f04" translate="yes" xml:space="preserve">
          <source>A concrete class providing a reusable implementation of the &lt;code&gt;IIOMetadataFormat&lt;/code&gt; interface.</source>
          <target state="translated">一个具体的类，提供 &lt;code&gt;IIOMetadataFormat&lt;/code&gt; 接口的可重用实现。</target>
        </trans-unit>
        <trans-unit id="d282fdf80a823d1b9ce109892a02adada32f1789" translate="yes" xml:space="preserve">
          <source>A concrete class providing a reusable implementation of the &lt;code&gt;IIOMetadataFormat&lt;/code&gt; interface. In addition, a static instance representing the standard, plug-in neutral &lt;code&gt;javax_imageio_1.0&lt;/code&gt; format is provided by the &lt;code&gt;getStandardFormatInstance&lt;/code&gt; method.</source>
          <target state="translated">一个具体的类，提供 &lt;code&gt;IIOMetadataFormat&lt;/code&gt; 接口的可重用实现。另外， &lt;code&gt;getStandardFormatInstance&lt;/code&gt; 方法提供了一个静态实例，该实例表示标准的插件中性 &lt;code&gt;javax_imageio_1.0&lt;/code&gt; 格式。</target>
        </trans-unit>
        <trans-unit id="3a859801a589e89ad20bf50860bca6d1644bd9df" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;code&gt;MetalTheme&lt;/code&gt; providing the original look of the Java Look and Feel, code-named &quot;Steel&quot;.</source>
          <target state="translated">&lt;code&gt;MetalTheme&lt;/code&gt; 的一个具体实现，提供了Java Look and Feel的原始外观，代号为&amp;ldquo; Steel&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="3e45fae144bb45f682a4256d4bde5bda7c7e35cd" translate="yes" xml:space="preserve">
          <source>A concrete implementation of &lt;code&gt;MetalTheme&lt;/code&gt; providing the original look of the Java Look and Feel, code-named &quot;Steel&quot;. Refer to &lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt;&lt;code&gt;MetalLookAndFeel.setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&lt;/code&gt;&lt;/a&gt; for details on changing the default theme.</source>
          <target state="translated">&lt;code&gt;MetalTheme&lt;/code&gt; 的一个具体实现，提供了Java Look and Feel的原始外观，代号为&amp;ldquo; Steel&amp;rdquo;。有关更改默认主题的详细信息，请参阅&lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt; &lt;code&gt;MetalLookAndFeel.setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="712749aaea88a267414698100643df70c8e94b89" translate="yes" xml:space="preserve">
          <source>A concrete implementation of the &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; class can be created to extend the PKIX certification path validation algorithm. For example, an implementation may check for and process a critical private extension of each certificate in a certification path.</source>
          <target state="translated">可以创建 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 类的具体实现，以扩展PKIX认证路径验证算法。例如，一种实现可以检查并处理认证路径中每个证书的关键私有扩展。</target>
        </trans-unit>
        <trans-unit id="1b8f023ff523d8ca2174982322b18fc912277484" translate="yes" xml:space="preserve">
          <source>A concrete provider class cannot be instantiated; or</source>
          <target state="translated">不能实例化一个具体的提供者类;或</target>
        </trans-unit>
        <trans-unit id="cc3f133bae4475dd14d8dd56a065e5893f608a9b" translate="yes" xml:space="preserve">
          <source>A concrete provider class is not a subclass of the service class;</source>
          <target state="translated">具体的提供者类不是服务类的子类。</target>
        </trans-unit>
        <trans-unit id="3f8ded546ab785eb4d9c3cb4e994d57af15e27e9" translate="yes" xml:space="preserve">
          <source>A concrete provider class named in a provider-configuration file cannot be found;</source>
          <target state="translated">找不到在提供者配置文件中命名的具体提供者类。</target>
        </trans-unit>
        <trans-unit id="bd3332e52829c9939c6c0ecf492723b00eb5c0f9" translate="yes" xml:space="preserve">
          <source>A concrete subclass of AbstractUndoableEdit, used to assemble little UndoableEdits into great big ones.</source>
          <target state="translated">AbstractUndoableEdit的一个具体子类,用于将小的UndoableEdits组合成大的UndoableEdits。</target>
        </trans-unit>
        <trans-unit id="ceafe9ec57fc5178908de09d46ccde06e41ae006" translate="yes" xml:space="preserve">
          <source>A concrete subclass of this class must call this constructor when it is</source>
          <target state="translated">这个类的一个具体的子类必须调用这个构造函数,当它的</target>
        </trans-unit>
        <trans-unit id="b35811703a10342f5d9a4a448b169f0e54e12d29" translate="yes" xml:space="preserve">
          <source>A condition that violates the integrity of the resource was detected.</source>
          <target state="translated">检测到有违反资源完整性的情况。</target>
        </trans-unit>
        <trans-unit id="07aeda6128298b4c1cf51a969819ad2ad9cb99b8" translate="yes" xml:space="preserve">
          <source>A configuration encapsulates the &lt;em&gt;readability graph&lt;/em&gt; that is the output of resolution. A readability graph is a directed graph whose vertices are of type &lt;a href=&quot;resolvedmodule&quot;&gt;&lt;code&gt;ResolvedModule&lt;/code&gt;&lt;/a&gt; and the edges represent the readability amongst the modules. &lt;code&gt;Configuration&lt;/code&gt; defines the &lt;a href=&quot;#modules()&quot;&gt;&lt;code&gt;modules()&lt;/code&gt;&lt;/a&gt; method to get the set of resolved modules in the graph. &lt;code&gt;
 ResolvedModule&lt;/code&gt; defines the &lt;a href=&quot;resolvedmodule#reads()&quot;&gt;&lt;code&gt;reads()&lt;/code&gt;&lt;/a&gt; method to get the set of modules that a resolved module reads. The modules that are read may be in the same configuration or may be in &lt;a href=&quot;#parents()&quot;&gt;&lt;code&gt;parent&lt;/code&gt;&lt;/a&gt; configurations.</source>
          <target state="translated">配置封装了&lt;em&gt;可读性图&lt;/em&gt;，它是分辨率的输出。可读性图是有向图，其顶点的类型为&lt;a href=&quot;resolvedmodule&quot;&gt; &lt;code&gt;ResolvedModule&lt;/code&gt; &lt;/a&gt;，并且边表示模块之间的可读性。 &lt;code&gt;Configuration&lt;/code&gt; 定义了&lt;a href=&quot;#modules()&quot;&gt; &lt;code&gt;modules()&lt;/code&gt; &lt;/a&gt;方法来获取图中的已解析模块集。 &lt;code&gt; ResolvedModule&lt;/code&gt; 定义了&lt;a href=&quot;resolvedmodule#reads()&quot;&gt; &lt;code&gt;reads()&lt;/code&gt; &lt;/a&gt;方法来获取已解析模块读取的模块集。读取的模块可以具有相同的配置，也可以具有&lt;a href=&quot;#parents()&quot;&gt; &lt;code&gt;parent&lt;/code&gt; &lt;/a&gt;配置。</target>
        </trans-unit>
        <trans-unit id="6d4a50dce10eebcc0c661ebcd24fec5ac19d2f24" translate="yes" xml:space="preserve">
          <source>A configuration that is the result of &lt;a href=&quot;package-summary#resolution&quot;&gt; resolution&lt;/a&gt; or resolution with &lt;a href=&quot;configuration#service-binding&quot;&gt;service binding&lt;/a&gt;.</source>
          <target state="translated">由&lt;a href=&quot;package-summary#resolution&quot;&gt;解决&lt;/a&gt;或通过&lt;a href=&quot;configuration#service-binding&quot;&gt;服务绑定&lt;/a&gt;解决的结果的配置。</target>
        </trans-unit>
        <trans-unit id="b6b77ef77fa579c1e5efd157525e672a61cae898" translate="yes" xml:space="preserve">
          <source>A conflict exists when a value that a &lt;code&gt;RowSet&lt;/code&gt; object has changed and is attempting to write to the data source has also been changed in the data source since the last synchronization. An application can call the &lt;code&gt;SyncResolver&lt;/code&gt; method &lt;code&gt;getConflictValue&lt;/code&gt; to retrieve the value in the data source that is the cause of the conflict because the values in a &lt;code&gt;SyncResolver&lt;/code&gt; object are the conflict values from the data source.</source>
          <target state="translated">自上次同步以来，当 &lt;code&gt;RowSet&lt;/code&gt; 对象的值已更改并且正在尝试写入数据源的值也已在数据源中更改时，就会发生冲突。应用程序可以调用 &lt;code&gt;SyncResolver&lt;/code&gt; 方法 &lt;code&gt;getConflictValue&lt;/code&gt; 来检索数据源中引起冲突的值，因为 &lt;code&gt;SyncResolver&lt;/code&gt; 对象中的值是来自数据源的冲突值。</target>
        </trans-unit>
        <trans-unit id="0c340ff2dd841300b12351d4451e3b177b33445e" translate="yes" xml:space="preserve">
          <source>A conformant implementation of the CSS module is not required to implement the &lt;code&gt;CSS2Properties&lt;/code&gt; interface. If an implementation does implement this interface, the expectation is that language-specific methods can be used to cast from an instance of the &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface to the &lt;code&gt;CSS2Properties&lt;/code&gt; interface.</source>
          <target state="translated">不需要CSS模块的一致实现即可实现 &lt;code&gt;CSS2Properties&lt;/code&gt; 接口。如果实现确实实现了此接口，则期望可以使用特定于语言的方法将 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 接口的实例转换为 &lt;code&gt;CSS2Properties&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="cc609d610081d3eb2009f3b0b682a2d0744654f4" translate="yes" xml:space="preserve">
          <source>A connection (session) with a specific database.</source>
          <target state="translated">与特定数据库的连接(会话)。</target>
        </trans-unit>
        <trans-unit id="ee9aefb429edbd8df1f29763cff2d2eb28169d9d" translate="yes" xml:space="preserve">
          <source>A connection (session) with a specific database. SQL statements are executed and results are returned within the context of a connection.</source>
          <target state="translated">与特定数据库的连接(会话)。在连接的上下文中执行SQL语句并返回结果。</target>
        </trans-unit>
        <trans-unit id="299e83306671c9eb781789308acd9829e2489297" translate="yes" xml:space="preserve">
          <source>A connection between a debugger and a target VM which it debugs.</source>
          <target state="translated">调试器和它调试的目标虚拟机之间的连接。</target>
        </trans-unit>
        <trans-unit id="4add4a7755f479c2c8e4b939505e109477251372" translate="yes" xml:space="preserve">
          <source>A connection is either open or closed. It is open upon creation, and remains open until it is closed. Once closed, it remains closed, and any attempt to invoke an I/O operation upon it will cause a &lt;a href=&quot;closedconnectionexception&quot;&gt;&lt;code&gt;ClosedConnectionException&lt;/code&gt;&lt;/a&gt; to be thrown. A connection can be tested by invoking the &lt;a href=&quot;#isOpen()&quot;&gt;&lt;code&gt;isOpen&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">连接是打开的还是关闭的。它在创建时是打开的，并保持打开状态直到关闭。一旦关闭，它将保持关闭状态，任何在其上调用I / O操作的尝试都将引发&lt;a href=&quot;closedconnectionexception&quot;&gt; &lt;code&gt;ClosedConnectionException&lt;/code&gt; &lt;/a&gt;。可以通过调用&lt;a href=&quot;#isOpen()&quot;&gt; &lt;code&gt;isOpen&lt;/code&gt; &lt;/a&gt;方法来测试连接。</target>
        </trans-unit>
        <trans-unit id="39c6171b927625f248ca9cc137d36414e7251ecb" translate="yes" xml:space="preserve">
          <source>A connection pool manager is often also a statement pool manager, maintaining a pool of &lt;code&gt;PreparedStatement&lt;/code&gt; objects. When an application closes a prepared statement, it calls the &lt;code&gt;PreparedStatement&lt;/code&gt; method &lt;code&gt;close&lt;/code&gt;. When &lt;code&gt;Statement&lt;/code&gt; pooling is being done, the pool manager is notified because it has registered itself as a &lt;code&gt;StatementEventListener&lt;/code&gt; object using the &lt;code&gt;ConnectionPool&lt;/code&gt; method &lt;code&gt;addStatementEventListener&lt;/code&gt;. Thus, when an application closes its &lt;code&gt;PreparedStatement&lt;/code&gt;, the underlying prepared statement is recycled rather than being closed.</source>
          <target state="translated">连接池管理器通常还是语句池管理器，维护一个 &lt;code&gt;PreparedStatement&lt;/code&gt; 对象池。当应用程序关闭准备好的语句时，它将调用 &lt;code&gt;PreparedStatement&lt;/code&gt; 方法 &lt;code&gt;close&lt;/code&gt; 。当 &lt;code&gt;Statement&lt;/code&gt; 池正在做，池管理器被通知，因为它已经登记为 &lt;code&gt;StatementEventListener&lt;/code&gt; 使用对象 &lt;code&gt;ConnectionPool&lt;/code&gt; 方法 &lt;code&gt;addStatementEventListener&lt;/code&gt; 。因此，当应用程序关闭其 &lt;code&gt;PreparedStatement&lt;/code&gt; 时，底层的Prepared语句将被回收而不是被关闭。</target>
        </trans-unit>
        <trans-unit id="a4759012fd2d12d2910e6e9a75125a735e1330fd" translate="yes" xml:space="preserve">
          <source>A connection to a remote RMI connector.</source>
          <target state="translated">连接到远程RMI连接器。</target>
        </trans-unit>
        <trans-unit id="3a5e32e0701cdda0f60e3703da4ba437ad78a105" translate="yes" xml:space="preserve">
          <source>A connection to a remote RMI connector. Usually, such connections are made using &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserver&quot;&gt;&lt;code&gt;RMIServer&lt;/code&gt;&lt;/a&gt; stub obtained without going through JNDI.</source>
          <target state="translated">与远程RMI连接器的连接。通常，此类连接是使用&lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; 进行的&lt;/a&gt;。但是，专业应用程序可以直接使用此类，例如，无需通过JNDI即可获得&lt;a href=&quot;rmiserver&quot;&gt; &lt;code&gt;RMIServer&lt;/code&gt; &lt;/a&gt;存根。</target>
        </trans-unit>
        <trans-unit id="5281da5fc208b5e3d2084885ed1d79b4dffb1e6b" translate="yes" xml:space="preserve">
          <source>A connection to a remote RMI connector. Usually, such connections are made using &lt;a href=&quot;../jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;. However, specialized applications can use this class directly, for example with an &lt;a href=&quot;rmiserver&quot;&gt;&lt;code&gt;RMIServer&lt;/code&gt;&lt;/a&gt; stub obtained without going through JNDI.</source>
          <target state="translated">与远程RMI连接器的连接。通常，使用&lt;a href=&quot;../jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;进行此类连接。但是，专业应用程序可以直接使用此类，例如，无需通过JNDI即可获得&lt;a href=&quot;rmiserver&quot;&gt; &lt;code&gt;RMIServer&lt;/code&gt; &lt;/a&gt;存根。</target>
        </trans-unit>
        <trans-unit id="71906a6e7fa82ce2f2832820f8575698417e451d" translate="yes" xml:space="preserve">
          <source>A connector client is usually created by supplying the &lt;code&gt;JMXServiceURL&lt;/code&gt; of the connector server to connect to to the &lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL)&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">通常，通过提供连接器服务器的 &lt;code&gt;JMXServiceURL&lt;/code&gt; 来连接到&lt;a href=&quot;jmxconnectorfactory#connect(javax.management.remote.JMXServiceURL)&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt;方法来创建连接器客户端。</target>
        </trans-unit>
        <trans-unit id="dc1d7a566611a4eca771151edadc407ccf141315" translate="yes" xml:space="preserve">
          <source>A connector client is usually created by supplying the &lt;code&gt;JMXServiceURL&lt;/code&gt; of the connector server to connect to to the &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-&quot;&gt;&lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">通常，通过提供连接器服务器的 &lt;code&gt;JMXServiceURL&lt;/code&gt; 以连接到&lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-&quot;&gt; &lt;code&gt;JMXConnectorFactory.connect&lt;/code&gt; &lt;/a&gt;方法来创建连接器客户端。</target>
        </trans-unit>
        <trans-unit id="65172dc0939a2899342cf72ef4c3f4d5e6170f30" translate="yes" xml:space="preserve">
          <source>A connector makes an MBean server remotely accessible through a given protocol. The JMX Remote API allows the use of different type of connectors:</source>
          <target state="translated">连接器使MBean服务器可以通过给定的协议进行远程访问。JMX远程API允许使用不同类型的连接器。</target>
        </trans-unit>
        <trans-unit id="cf69170289a60c8bf7efda788561d4a3030c1e4f" translate="yes" xml:space="preserve">
          <source>A connector server for which this is inappropriate must override this method so that it either implements the appropriate logic or throws &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">不适合使用此方法的连接器服务器必须重写此方法，以便它实现适当的逻辑或引发&lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b06816216886f3a82230d72723751d319943331" translate="yes" xml:space="preserve">
          <source>A connector server for which this is inappropriate must override this method so that it either implements the appropriate logic or throws &lt;a href=&quot;../../../java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">不适合使用此方法的连接器服务器必须重写此方法，以便它实现适当的逻辑或引发&lt;a href=&quot;../../../java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc00c2f98497585b47c3192d00eadd75676cea50" translate="yes" xml:space="preserve">
          <source>A connector server is associated with an MBean server either by registering it in that MBean server, or by passing the MBean server to its constructor.</source>
          <target state="translated">连接器服务器通过在该MBean服务器中注册,或者通过将MBean服务器传递给它的构造函数,与MBean服务器关联。</target>
        </trans-unit>
        <trans-unit id="6fac640212c8d0324caf80a8772bfee8a59e6f76" translate="yes" xml:space="preserve">
          <source>A connector server is created by constructing an instance of a subclass of &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;. Usually, this instance is created using the method &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">连接器服务器是通过构造&lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; &lt;/a&gt;的子类的实例创建的。通常，使用方法&lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer(javax.management.remote.JMXServiceURL,java.util.Map,javax.management.MBeanServer)&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;创建此实例。</target>
        </trans-unit>
        <trans-unit id="fd981a4467010ba08d191c25715b89bbb07202d0" translate="yes" xml:space="preserve">
          <source>A connector server is created by constructing an instance of a subclass of &lt;a href=&quot;jmxconnectorserver&quot;&gt;&lt;code&gt;JMXConnectorServer&lt;/code&gt;&lt;/a&gt;. Usually, this instance is created using the method &lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt;&lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">通过构造&lt;a href=&quot;jmxconnectorserver&quot;&gt; &lt;code&gt;JMXConnectorServer&lt;/code&gt; &lt;/a&gt;的子类的实例来创建连接器服务器。通常，使用方法&lt;a href=&quot;jmxconnectorserverfactory#newJMXConnectorServer-javax.management.remote.JMXServiceURL-java.util.Map-javax.management.MBeanServer-&quot;&gt; &lt;code&gt;JMXConnectorServerFactory.newJMXConnectorServer&lt;/code&gt; &lt;/a&gt;创建此实例。</target>
        </trans-unit>
        <trans-unit id="2a47d2048c31d3b32a0bd0153594dc11132afdaf" translate="yes" xml:space="preserve">
          <source>A connector server is inactive when created. It only starts listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#start()&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. A connector server stops listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#stop()&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called or when the connector server is unregistered from its MBean server.</source>
          <target state="translated">连接器服务器在创建时处于非活动状态。仅在调用&lt;a href=&quot;jmxconnectorservermbean#start()&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;方法时才开始侦听客户端连接。当调用&lt;a href=&quot;jmxconnectorservermbean#stop()&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;方法或从其MBean服务器取消注册连接器服务器时，连接器服务器将停止侦听客户端连接。</target>
        </trans-unit>
        <trans-unit id="729de493400b8161527e266d3a8c893c12cafa51" translate="yes" xml:space="preserve">
          <source>A connector server is inactive when created. It only starts listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; method is called. A connector server stops listening for client connections when the &lt;a href=&quot;jmxconnectorservermbean#stop--&quot;&gt;&lt;code&gt;stop&lt;/code&gt;&lt;/a&gt; method is called or when the connector server is unregistered from its MBean server.</source>
          <target state="translated">连接器服务器在创建时处于非活动状态。仅在调用&lt;a href=&quot;jmxconnectorservermbean#start--&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt;方法时才开始侦听客户端连接。当调用&lt;a href=&quot;jmxconnectorservermbean#stop--&quot;&gt; &lt;code&gt;stop&lt;/code&gt; &lt;/a&gt;方法或从其MBean服务器取消注册连接器服务器时，连接器服务器将停止侦听客户端连接。</target>
        </trans-unit>
        <trans-unit id="12e57f9bb7586e272f069121c0df6b87deaf05b6" translate="yes" xml:space="preserve">
          <source>A connector which attaches to a previously running target VM.</source>
          <target state="translated">连接到先前运行的目标虚拟机的连接器。</target>
        </trans-unit>
        <trans-unit id="9665130308a1f817b39b3a9ddac09a4eb536c1d1" translate="yes" xml:space="preserve">
          <source>A connector which can launch a target VM before connecting to it.</source>
          <target state="translated">一个连接器,可以在连接到目标虚拟机之前启动它。</target>
        </trans-unit>
        <trans-unit id="c1e41d1e27b81a844b90852e2dc709bb0574c545" translate="yes" xml:space="preserve">
          <source>A connector which listens for a connection initiated by a target VM.</source>
          <target state="translated">侦听目标虚拟机发起的连接的连接器。</target>
        </trans-unit>
        <trans-unit id="b4357533106a251a960a61dd27d9689023c47e50" translate="yes" xml:space="preserve">
          <source>A consecutive sequence of decimal digits is treated as a decimal number:</source>
          <target state="translated">连续的小数位数序列被视为一个十进制数。</target>
        </trans-unit>
        <trans-unit id="b50e7d81381adb7c96ec61ab5d96776c14c3174c" translate="yes" xml:space="preserve">
          <source>A consecutive sequence of letters is regarded as a word and treated as follows:</source>
          <target state="translated">一个连续的字母序列被视为一个单词,并按以下方式处理。</target>
        </trans-unit>
        <trans-unit id="3845fd433ee9f6ab5405a2a4af3547c641770e94" translate="yes" xml:space="preserve">
          <source>A consequence of the use of &lt;code&gt;ScheduledFuture&lt;/code&gt; objects is that &lt;a href=&quot;threadpoolexecutor#afterExecute(java.lang.Runnable,java.lang.Throwable)&quot;&gt;&lt;code&gt;afterExecute&lt;/code&gt;&lt;/a&gt; is always called with a null second &lt;code&gt;Throwable&lt;/code&gt; argument, even if the &lt;code&gt;command&lt;/code&gt; terminated abruptly. Instead, the &lt;code&gt;Throwable&lt;/code&gt; thrown by such a task can be obtained via &lt;a href=&quot;future#get()&quot;&gt;&lt;code&gt;Future.get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;ScheduledFuture&lt;/code&gt; 对象的结果是，即使 &lt;code&gt;command&lt;/code&gt; 突然终止，始终使用空的第二 &lt;code&gt;Throwable&lt;/code&gt; 参数调用&lt;a href=&quot;threadpoolexecutor#afterExecute(java.lang.Runnable,java.lang.Throwable)&quot;&gt; &lt;code&gt;afterExecute&lt;/code&gt; &lt;/a&gt;。相反，可以通过&lt;a href=&quot;future#get()&quot;&gt; &lt;code&gt;Future.get()&lt;/code&gt; &lt;/a&gt;获得由此类任务引发的 &lt;code&gt;Throwable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c154b2d7544e9e17d7ac9c57de6d6ed0d852b19a" translate="yes" xml:space="preserve">
          <source>A consequence of the use of &lt;code&gt;ScheduledFuture&lt;/code&gt; objects is that &lt;a href=&quot;threadpoolexecutor#afterExecute-java.lang.Runnable-java.lang.Throwable-&quot;&gt;&lt;code&gt;afterExecute&lt;/code&gt;&lt;/a&gt; is always called with a null second &lt;code&gt;Throwable&lt;/code&gt; argument, even if the &lt;code&gt;command&lt;/code&gt; terminated abruptly. Instead, the &lt;code&gt;Throwable&lt;/code&gt; thrown by such a task can be obtained via &lt;a href=&quot;future#get--&quot;&gt;&lt;code&gt;Future.get()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">使用 &lt;code&gt;ScheduledFuture&lt;/code&gt; 对象的结果是，即使 &lt;code&gt;command&lt;/code&gt; 突然终止，始终使用空的第二 &lt;code&gt;Throwable&lt;/code&gt; 参数调用&lt;a href=&quot;threadpoolexecutor#afterExecute-java.lang.Runnable-java.lang.Throwable-&quot;&gt; &lt;code&gt;afterExecute&lt;/code&gt; &lt;/a&gt;。相反，可以通过&lt;a href=&quot;future#get--&quot;&gt; &lt;code&gt;Future.get()&lt;/code&gt; &lt;/a&gt;获得由此类任务引发的 &lt;code&gt;Throwable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="622ec8aa9696f49b5a1d49f1ec97d4e475ae08b1" translate="yes" xml:space="preserve">
          <source>A constant for a period of zero.</source>
          <target state="translated">一个周期为零的常数。</target>
        </trans-unit>
        <trans-unit id="1477f5f68f8134d2aecf8c4707dc2163e321bbce" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">拥有 &lt;code&gt;double&lt;/code&gt; 类型的非数值（NaN）值的常数。</target>
        </trans-unit>
        <trans-unit id="408ab1d95aeb7f78d5620b36adb094b5f8e386ed" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;double&lt;/code&gt;. It is equivalent to the value returned by &lt;code&gt;Double.longBitsToDouble(0x7ff8000000000000L)&lt;/code&gt;.</source>
          <target state="translated">拥有 &lt;code&gt;double&lt;/code&gt; 类型的非数值（NaN）值的常数。它等效于 &lt;code&gt;Double.longBitsToDouble(0x7ff8000000000000L)&lt;/code&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="d8788ee830046de75b94187700a963f5317049c0" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">持有 &lt;code&gt;float&lt;/code&gt; 类型的非数值（NaN）值的常数。</target>
        </trans-unit>
        <trans-unit id="7a9f41909332598bf0fe8a6b6c7e05fcc54b78f8" translate="yes" xml:space="preserve">
          <source>A constant holding a Not-a-Number (NaN) value of type &lt;code&gt;float&lt;/code&gt;. It is equivalent to the value returned by &lt;code&gt;Float.intBitsToFloat(0x7fc00000)&lt;/code&gt;.</source>
          <target state="translated">持有 &lt;code&gt;float&lt;/code&gt; 类型的非数值（NaN）值的常数。它等效于 &lt;code&gt;Float.intBitsToFloat(0x7fc00000)&lt;/code&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="0c3f813cf29203f458e4a403c0749db1ce8e4539" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;double&lt;/code&gt;, (2-2&lt;sup&gt;-52&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;1023&lt;/sup&gt;.</source>
          <target state="translated">拥有 &lt;code&gt;double&lt;/code&gt; （2-2 &lt;sup&gt;-52&lt;/sup&gt;）&amp;middot;2 &lt;sup&gt;1023&lt;/sup&gt;类型的最大正有限值的常数。</target>
        </trans-unit>
        <trans-unit id="c2370477399c9d24edd4e5ac9a5b7d569b9b314b" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;double&lt;/code&gt;, (2-2&lt;sup&gt;-52&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;1023&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.fffffffffffffP+1023&lt;/code&gt; and also equal to &lt;code&gt;Double.longBitsToDouble(0x7fefffffffffffffL)&lt;/code&gt;.</source>
          <target state="translated">拥有 &lt;code&gt;double&lt;/code&gt; （2-2 &lt;sup&gt;-52&lt;/sup&gt;）&amp;middot;2 &lt;sup&gt;1023&lt;/sup&gt;类型的最大正有限值的常数。它等于十六进制浮点文字 &lt;code&gt;0x1.fffffffffffffP+1023&lt;/code&gt; ，也等于 &lt;code&gt;Double.longBitsToDouble(0x7fefffffffffffffL)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="49c356c451cc04904396932fe1a3f20233a7f5a8" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;float&lt;/code&gt;, (2-2&lt;sup&gt;-23&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;127&lt;/sup&gt;.</source>
          <target state="translated">保持 &lt;code&gt;float&lt;/code&gt; 型最大正有限值（2-2 &lt;sup&gt;-23&lt;/sup&gt;）&amp;middot;2 &lt;sup&gt;127的&lt;/sup&gt;常数。</target>
        </trans-unit>
        <trans-unit id="1559c3190af98081a3a4166e36cd940881955573" translate="yes" xml:space="preserve">
          <source>A constant holding the largest positive finite value of type &lt;code&gt;float&lt;/code&gt;, (2-2&lt;sup&gt;-23&lt;/sup&gt;)&amp;middot;2&lt;sup&gt;127&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.fffffeP+127f&lt;/code&gt; and also equal to &lt;code&gt;Float.intBitsToFloat(0x7f7fffff)&lt;/code&gt;.</source>
          <target state="translated">拥有 &lt;code&gt;float&lt;/code&gt; （2-2 &lt;sup&gt;-23&lt;/sup&gt;）&amp;middot;2 &lt;sup&gt;127&lt;/sup&gt;类型的最大正有限值的常数。它等于十六进制浮点文字 &lt;code&gt;0x1.fffffeP+127f&lt;/code&gt; ，也等于 &lt;code&gt;Float.intBitsToFloat(0x7f7fffff)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="aa45635c3dac94b3e1415bc2816262b93420be17" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value a &lt;code&gt;byte&lt;/code&gt; can have, 2&lt;sup&gt;7&lt;/sup&gt;-1.</source>
          <target state="translated">保留一个 &lt;code&gt;byte&lt;/code&gt; 可以具有的最大值的常数2 &lt;sup&gt;7&lt;/sup&gt; -1。</target>
        </trans-unit>
        <trans-unit id="c81538130b7723dffb4e565ca4c43f81ab349db0" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value a &lt;code&gt;long&lt;/code&gt; can have, 2&lt;sup&gt;63&lt;/sup&gt;-1.</source>
          <target state="translated">一个常数，保持 &lt;code&gt;long&lt;/code&gt; 可以具有的最大值2 &lt;sup&gt;63&lt;/sup&gt; -1。</target>
        </trans-unit>
        <trans-unit id="a20a77b22599d89aa750f87d3b8f6393a31871b6" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value a &lt;code&gt;short&lt;/code&gt; can have, 2&lt;sup&gt;15&lt;/sup&gt;-1.</source>
          <target state="translated">一个常数，它保持 &lt;code&gt;short&lt;/code&gt; 可以具有的最大值2 &lt;sup&gt;15&lt;/sup&gt; -1。</target>
        </trans-unit>
        <trans-unit id="89f6fa143f9ec2f083ee659804ad1b8c50e1db45" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value an &lt;code&gt;int&lt;/code&gt; can have, 2&lt;sup&gt;31&lt;/sup&gt;-1.</source>
          <target state="translated">保持 &lt;code&gt;int&lt;/code&gt; 可以具有的最大值的常数2 &lt;sup&gt;31&lt;/sup&gt; -1。</target>
        </trans-unit>
        <trans-unit id="213c983a4885ceaaad32258ba70bcf2aca3ef5ce" translate="yes" xml:space="preserve">
          <source>A constant holding the maximum value of weight, 1.0, which indicates that the language range is a good fit for the user.</source>
          <target state="translated">一个常数,保持权重的最大值,1.0,表示该语言范围很适合用户。</target>
        </trans-unit>
        <trans-unit id="195e5bbc3041eea84adab54a11e575298b1c41cf" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value a &lt;code&gt;byte&lt;/code&gt; can have, -2&lt;sup&gt;7&lt;/sup&gt;.</source>
          <target state="translated">保持一个 &lt;code&gt;byte&lt;/code&gt; 可以具有的最小值的常数-2 &lt;sup&gt;7&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="52acf66e806a2a273588e0eb3f8f800460ba9f69" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value a &lt;code&gt;long&lt;/code&gt; can have, -2&lt;sup&gt;63&lt;/sup&gt;.</source>
          <target state="translated">一个常数，可以保持 &lt;code&gt;long&lt;/code&gt; 可以具有的最小值-2 &lt;sup&gt;63&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="d88b8661d44e693837e8dcbbb8ad71a38058f36b" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value a &lt;code&gt;short&lt;/code&gt; can have, -2&lt;sup&gt;15&lt;/sup&gt;.</source>
          <target state="translated">保持 &lt;code&gt;short&lt;/code&gt; 可以具有的最小值的常数-2 &lt;sup&gt;15&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="fd86206e57defe248bbdbdca1a38c5b7fe7516c3" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value an &lt;code&gt;int&lt;/code&gt; can have, -2&lt;sup&gt;31&lt;/sup&gt;.</source>
          <target state="translated">保持 &lt;code&gt;int&lt;/code&gt; 可以具有的最小值的常数-2 &lt;sup&gt;31&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="366d749bc03e21a5730979c744989b2ca9b9b0f7" translate="yes" xml:space="preserve">
          <source>A constant holding the minimum value of weight, 0.0, which indicates that the language range is not a good fit for the user.</source>
          <target state="translated">一个常数,保持权重的最小值0.0,表示语言范围不适合用户。</target>
        </trans-unit>
        <trans-unit id="ec09f1e6a384ccf4edc76113c490998c57d6faf9" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">一个常数，保持 &lt;code&gt;double&lt;/code&gt; 型的负无穷大。</target>
        </trans-unit>
        <trans-unit id="03a6d5a6655c2a060db44ef940b07a63cb0d9b15" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;double&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Double.longBitsToDouble(0xfff0000000000000L)&lt;/code&gt;.</source>
          <target state="translated">一个常数，保持 &lt;code&gt;double&lt;/code&gt; 型的负无穷大。它等于 &lt;code&gt;Double.longBitsToDouble(0xfff0000000000000L)&lt;/code&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="237d098976370c391bc3e6e82087bc622bb9f347" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">一个常量，保持 &lt;code&gt;float&lt;/code&gt; 类型的负无穷大。</target>
        </trans-unit>
        <trans-unit id="562f4fa39e792042eda77256d90f71f667f9cb4d" translate="yes" xml:space="preserve">
          <source>A constant holding the negative infinity of type &lt;code&gt;float&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Float.intBitsToFloat(0xff800000)&lt;/code&gt;.</source>
          <target state="translated">一个常量，保持 &lt;code&gt;float&lt;/code&gt; 类型的负无穷大。它等于 &lt;code&gt;Float.intBitsToFloat(0xff800000)&lt;/code&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="520f3294013e64c156f492ac639180a454efb1f2" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">一个常数，保持 &lt;code&gt;double&lt;/code&gt; 型的正无穷大。</target>
        </trans-unit>
        <trans-unit id="89bdfdbbe53820259637babc21d8836fd71ccc85" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;double&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Double.longBitsToDouble(0x7ff0000000000000L)&lt;/code&gt;.</source>
          <target state="translated">一个常数，保持 &lt;code&gt;double&lt;/code&gt; 型的正无穷大。它等于 &lt;code&gt;Double.longBitsToDouble(0x7ff0000000000000L)&lt;/code&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="476c7126d47afc9d47bd86d5d8fe47269ec1e776" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">保持 &lt;code&gt;float&lt;/code&gt; 类型为正无穷的常数。</target>
        </trans-unit>
        <trans-unit id="e4edd55348f3bbcf29f947e2199d27f6106b6d21" translate="yes" xml:space="preserve">
          <source>A constant holding the positive infinity of type &lt;code&gt;float&lt;/code&gt;. It is equal to the value returned by &lt;code&gt;Float.intBitsToFloat(0x7f800000)&lt;/code&gt;.</source>
          <target state="translated">保持 &lt;code&gt;float&lt;/code&gt; 类型为正无穷的常数。它等于 &lt;code&gt;Float.intBitsToFloat(0x7f800000)&lt;/code&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="b6ebed79b2e5b37f5b30f735301a55cdb9a92c0c" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1074&lt;/sup&gt;.</source>
          <target state="translated">一个常数，它保持 &lt;code&gt;double&lt;/code&gt; 类型的最小非零正值2 &lt;sup&gt;-1074&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="997f769b40571ffd14031483d8e7531f40e5ad0f" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1074&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x0.0000000000001P-1022&lt;/code&gt; and also equal to &lt;code&gt;Double.longBitsToDouble(0x1L)&lt;/code&gt;.</source>
          <target state="translated">一个常数，它保持 &lt;code&gt;double&lt;/code&gt; 类型的最小非零正值2 &lt;sup&gt;-1074&lt;/sup&gt;。它等于十六进制浮点文字 &lt;code&gt;0x0.0000000000001P-1022&lt;/code&gt; ，也等于 &lt;code&gt;Double.longBitsToDouble(0x1L)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72c438d246bb6c822505f14b07f2b5af54558848" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-149&lt;/sup&gt;.</source>
          <target state="translated">一个常量，它持有 &lt;code&gt;float&lt;/code&gt; 类型的最小正非零值2 &lt;sup&gt;-149&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="31f87b77b0b8567fdb51e96a07e699ba219f199a" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive nonzero value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-149&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x0.000002P-126f&lt;/code&gt; and also equal to &lt;code&gt;Float.intBitsToFloat(0x1)&lt;/code&gt;.</source>
          <target state="translated">一个常量，它持有 &lt;code&gt;float&lt;/code&gt; 类型的最小正非零值2 &lt;sup&gt;-149&lt;/sup&gt;。它等于十六进制浮点文字 &lt;code&gt;0x0.000002P-126f&lt;/code&gt; ，也等于 &lt;code&gt;Float.intBitsToFloat(0x1)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3c55a987c7ceb1b6d0cd0c0bc00253de8cc2f2f" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1022&lt;/sup&gt;.</source>
          <target state="translated">一个常数，保持最小的 &lt;code&gt;double&lt;/code&gt; 型正&lt;sup&gt;范&lt;/sup&gt;数值，2 &lt;sup&gt;-1022&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="43ac95af04530b21424fe9fe4d0d50cb98b1f66e" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;double&lt;/code&gt;, 2&lt;sup&gt;-1022&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.0p-1022&lt;/code&gt; and also equal to &lt;code&gt;Double.longBitsToDouble(0x0010000000000000L)&lt;/code&gt;.</source>
          <target state="translated">一个常数，保持最小的 &lt;code&gt;double&lt;/code&gt; 型正正规值，2 &lt;sup&gt;-1022&lt;/sup&gt;。它等于十六进制浮点文字 &lt;code&gt;0x1.0p-1022&lt;/code&gt; ，也等于 &lt;code&gt;Double.longBitsToDouble(0x0010000000000000L)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56e942658197cbb108717eeb662e7b73120d0074" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-126&lt;/sup&gt;.</source>
          <target state="translated">一个常数，保持 &lt;code&gt;float&lt;/code&gt; 型的最小正正规值2 &lt;sup&gt;-126&lt;/sup&gt;。</target>
        </trans-unit>
        <trans-unit id="981c4e581250bfe1199ccc6d949a0d2120c2ca33" translate="yes" xml:space="preserve">
          <source>A constant holding the smallest positive normal value of type &lt;code&gt;float&lt;/code&gt;, 2&lt;sup&gt;-126&lt;/sup&gt;. It is equal to the hexadecimal floating-point literal &lt;code&gt;0x1.0p-126f&lt;/code&gt; and also equal to &lt;code&gt;Float.intBitsToFloat(0x00800000)&lt;/code&gt;.</source>
          <target state="translated">一个常数，保持 &lt;code&gt;float&lt;/code&gt; 型的最小正正规值2 &lt;sup&gt;-126&lt;/sup&gt;。它等于十六进制浮点文字 &lt;code&gt;0x1.0p-126f&lt;/code&gt; ，也等于 &lt;code&gt;Float.intBitsToFloat(0x00800000)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56d934c7a517e9935eda91929df3ed1fbd67c0e3" translate="yes" xml:space="preserve">
          <source>A constant indicating that a number token has been read.</source>
          <target state="translated">一个常数,表示已经读取了一个数字标记。</target>
        </trans-unit>
        <trans-unit id="648ea7585761892bba4a14317322b6419df48f35" translate="yes" xml:space="preserve">
          <source>A constant indicating that a word token has been read.</source>
          <target state="translated">一个常数,表示已经读取了一个词令牌。</target>
        </trans-unit>
        <trans-unit id="98b4a9c5387ca18d776a07de80c4f34274c13477" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads and non-repeatable reads are prevented; phantom reads can occur.</source>
          <target state="translated">一个常数,表示防止脏读和不可重复读,会出现幻读。</target>
        </trans-unit>
        <trans-unit id="fd9b1bce18e7e3d182ec7959d944a03570266ccb" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads and non-repeatable reads are prevented; phantom reads can occur. This level prohibits a transaction from reading a row with uncommitted changes in it, and it also prohibits the situation where one transaction reads a row, a second transaction alters the row, and the first transaction rereads the row, getting different values the second time (a &quot;non-repeatable read&quot;).</source>
          <target state="translated">一个常量,表示防止脏读和不可重复读,幻读可能发生。这个级别禁止一个事务读取一条有未承诺修改的行,也禁止一个事务读取一条行,第二个事务修改这条行,第一个事务重读这条行,第二次得到不同的值(&quot;不可重复读&quot;)的情况。</target>
        </trans-unit>
        <trans-unit id="5ccebbb810455f6dcf6fbc1780c90f63ef476103" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads are prevented; non-repeatable reads and phantom reads can occur.</source>
          <target state="translated">表示防止脏读的常数;可能发生不可重复读和幻读。</target>
        </trans-unit>
        <trans-unit id="49efda05d67d342a70be7ecd6deb6a94a376bd49" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads are prevented; non-repeatable reads and phantom reads can occur. This level only prohibits a transaction from reading a row with uncommitted changes in it.</source>
          <target state="translated">表示防止脏读的常数,不可重复读和幻读可能发生。这个级别只禁止事务读取一条有未提交修改的记录。</target>
        </trans-unit>
        <trans-unit id="37d9f7bc59529a0ca49b271888a4f173001c8c7f" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads are prevented.</source>
          <target state="translated">表示防止脏读、不可重复读和幻读的常数。</target>
        </trans-unit>
        <trans-unit id="1cd08ab7a3dbb038e7b29ee382cc26d88ac61eb5" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads are prevented. This level includes the prohibitions in &lt;code&gt;TRANSACTION_REPEATABLE_READ&lt;/code&gt; and further prohibits the situation where one transaction reads all rows that satisfy a &lt;code&gt;WHERE&lt;/code&gt; condition, a second transaction inserts a row that satisfies that &lt;code&gt;WHERE&lt;/code&gt; condition, and the first transaction rereads for the same condition, retrieving the additional &quot;phantom&quot; row in the second read.</source>
          <target state="translated">一个常数，指示脏读，不可重复读和幻像读。该级别包括 &lt;code&gt;TRANSACTION_REPEATABLE_READ&lt;/code&gt; 中的禁止条件，并进一步禁止以下情况：一个事务读取满足 &lt;code&gt;WHERE&lt;/code&gt; 条件的所有行，第二个事务插入满足 &lt;code&gt;WHERE&lt;/code&gt; 条件的行，并且第一个事务针对相同条件重新读取，并检索其他&amp;ldquo;幻影&amp;rdquo;行中的第二读。</target>
        </trans-unit>
        <trans-unit id="900f9670f4b5738ea6e1f6deeecfb6113cadf9d1" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads can occur.</source>
          <target state="translated">一个常数,表示可能出现脏读、不可重复读和幻读。</target>
        </trans-unit>
        <trans-unit id="75e113b185a8034fd038a5931ef3fc02dd1f98ac" translate="yes" xml:space="preserve">
          <source>A constant indicating that dirty reads, non-repeatable reads and phantom reads can occur. This level allows a row changed by one transaction to be read by another transaction before any changes in that row have been committed (a &quot;dirty read&quot;). If any of the changes are rolled back, the second transaction will have retrieved an invalid row.</source>
          <target state="translated">一个常数,表示可以发生脏读、不可重复读和幻读。这个级别允许一个事务更改的行在该行的任何更改被提交之前被另一个事务读取(一个 &quot;脏读&quot;)。如果任何更改被回滚,第二个事务将检索到一条无效的行。</target>
        </trans-unit>
        <trans-unit id="b15777e7d884a405608153040cd013c01f5d0b33" translate="yes" xml:space="preserve">
          <source>A constant indicating that the end of the line has been read.</source>
          <target state="translated">一个常数,表示该行的结束已被读取。</target>
        </trans-unit>
        <trans-unit id="3e9ce93a619d65834f17595305fc77f97a49324d" translate="yes" xml:space="preserve">
          <source>A constant indicating that the end of the stream has been read.</source>
          <target state="translated">一个常数,表示流的结束已被读取。</target>
        </trans-unit>
        <trans-unit id="05ff7d5d039f3d599a44d1a82113a8346729d551" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key event originated on the numeric keypad or with a virtual key corresponding to the numeric keypad.</source>
          <target state="translated">一个常数,表示按键事件起源于数字键盘或与数字键盘对应的虚拟按键。</target>
        </trans-unit>
        <trans-unit id="9be0ab06be8a50e56ba406130301c789831fded3" translate="yes" xml:space="preserve">
          <source>A constant indicating that the key pressed or released is in the left key location (there is more than one possible location for this key).</source>
          <target state="translated">表示被按下或释放的键在左键位置的常数(该键的可能位置不止一个)。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
