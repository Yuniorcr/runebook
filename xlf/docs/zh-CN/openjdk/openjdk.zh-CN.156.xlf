<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="5951fdcb7eaad658dd8f305149f76d4e28ab97cc" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.getId()</source>
          <target state="translated">ThaiBuddhistChronology.getId()</target>
        </trans-unit>
        <trans-unit id="5dc3d69674033a15206befd7f6f1f0bd82e1f586" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.isLeapYear()</source>
          <target state="translated">ThaiBuddhistChronology.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="0ca9e1ad57b9dc845e3c7a8290592d23191a4c7c" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.localDateTime()</source>
          <target state="translated">ThaiBuddhistChronology.localDateTime()</target>
        </trans-unit>
        <trans-unit id="62c58c7a6de0785fc1963f4cdc3f687a137b9c8a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.prolepticYear()</source>
          <target state="translated">ThaiBuddhistChronology.prolepticYear()</target>
        </trans-unit>
        <trans-unit id="84dec28471d39425c7517074060ef484dc960f5b" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.range()</source>
          <target state="translated">ThaiBuddhistChronology.range()</target>
        </trans-unit>
        <trans-unit id="6f1b85d9c539b822fc2c329e721c9f10d3615fda" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.resolveDate()</source>
          <target state="translated">ThaiBuddhistChronology.resolveDate()</target>
        </trans-unit>
        <trans-unit id="ef04f245e01dd1ed7ca48833a62e0cf965f8b9c8" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistChronology.zonedDateTime()</source>
          <target state="translated">ThaiBuddhistChronology.zonedDateTime()</target>
        </trans-unit>
        <trans-unit id="56cacb065b48fc5b20d838fbbe8bde43dbb623ac" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate</source>
          <target state="translated">ThaiBuddhistDate</target>
        </trans-unit>
        <trans-unit id="db18fff8c5f1eba899d8e2fec3b841757b2c64a3" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.atTime()</source>
          <target state="translated">ThaiBuddhistDate.atTime()</target>
        </trans-unit>
        <trans-unit id="9d6dc83ae18f9c046ce1ca0c1c1858d808569894" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.equals()</source>
          <target state="translated">ThaiBuddhistDate.equals()</target>
        </trans-unit>
        <trans-unit id="a1d0a76834da9825dbe7a22b7df411265b938345" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.from()</source>
          <target state="translated">ThaiBuddhistDate.from()</target>
        </trans-unit>
        <trans-unit id="631ff9458cac35099e69a03f2c39b78d3177d43d" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getChronology()</source>
          <target state="translated">ThaiBuddhistDate.getChronology()</target>
        </trans-unit>
        <trans-unit id="867efbd62bb34492da2f93784ae9940be543f6e8" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getEra()</source>
          <target state="translated">ThaiBuddhistDate.getEra()</target>
        </trans-unit>
        <trans-unit id="b20965a16ab7d753daa15fdd1445726a4b4bc735" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.getLong()</source>
          <target state="translated">ThaiBuddhistDate.getLong()</target>
        </trans-unit>
        <trans-unit id="1d08e48b0f31e7d132dcf2513888d58482f93533" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.hashCode()</source>
          <target state="translated">ThaiBuddhistDate.hashCode()</target>
        </trans-unit>
        <trans-unit id="05c327da97b723029b77d71ab87e5769aa49376d" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.lengthOfMonth()</source>
          <target state="translated">ThaiBuddhistDate.lengthOfMonth()</target>
        </trans-unit>
        <trans-unit id="83339f429fc8d1032f157bfa1a6f48584818ee22" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.minus()</source>
          <target state="translated">ThaiBuddhistDate.minus()</target>
        </trans-unit>
        <trans-unit id="1772e94bfa441b9d316fb8029d2e0a2880c086e9" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.now()</source>
          <target state="translated">ThaiBuddhistDate.now()</target>
        </trans-unit>
        <trans-unit id="eee511f518f709d927b64f0cf053d2bc3abdf547" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.of()</source>
          <target state="translated">ThaiBuddhistDate.of()</target>
        </trans-unit>
        <trans-unit id="6e5182152bdca111eee82cfccedeccac50e6be2b" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.plus()</source>
          <target state="translated">ThaiBuddhistDate.plus()</target>
        </trans-unit>
        <trans-unit id="3caf1e8127398daabc0daecbc7a3899bc28bf097" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.range()</source>
          <target state="translated">ThaiBuddhistDate.range()</target>
        </trans-unit>
        <trans-unit id="c9251bd315b835c130709c2bd5ad364ffcd087a2" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.toEpochDay()</source>
          <target state="translated">ThaiBuddhistDate.toEpochDay()</target>
        </trans-unit>
        <trans-unit id="e14e21c8865db3adeb700749d14718da3c6d5c12" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.toString()</source>
          <target state="translated">ThaiBuddhistDate.toString()</target>
        </trans-unit>
        <trans-unit id="b5d685fb3d918cd886b757988fe0097b71da0c52" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.until()</source>
          <target state="translated">ThaiBuddhistDate.until()</target>
        </trans-unit>
        <trans-unit id="0891bb4c3ac498e3de588a3b988abfe28bd45b3a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistDate.with()</source>
          <target state="translated">ThaiBuddhistDate.with()</target>
        </trans-unit>
        <trans-unit id="0c6f18d03a0410128636e15c4276fb431889de55" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra</source>
          <target state="translated">ThaiBuddhistEra</target>
        </trans-unit>
        <trans-unit id="1e44ae46b9f83afcc5d0dd91bd2ba339e3ffe2e6" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.getValue()</source>
          <target state="translated">ThaiBuddhistEra.getValue()</target>
        </trans-unit>
        <trans-unit id="1f8b419c0c527a193ab6d599bd7ec00e696ce392" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.of()</source>
          <target state="translated">ThaiBuddhistEra.of()</target>
        </trans-unit>
        <trans-unit id="551e2de4fb34142d0eff47396c16cf09f916c035" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.valueOf()</source>
          <target state="translated">ThaiBuddhistEra.valueOf()</target>
        </trans-unit>
        <trans-unit id="5ec30eac149daa0ab70fa50291d1ae80950de39a" translate="yes" xml:space="preserve">
          <source>ThaiBuddhistEra.values()</source>
          <target state="translated">ThaiBuddhistEra.values()</target>
        </trans-unit>
        <trans-unit id="8a430b0436fbafd13ff3f8f793fd3a22f31a2926" translate="yes" xml:space="preserve">
          <source>That</source>
          <target state="translated">That</target>
        </trans-unit>
        <trans-unit id="383a080e9d69d6f722f57039b9091b9f29317036" translate="yes" xml:space="preserve">
          <source>That a selection key indicates that its channel is ready for some operation is a hint, but not a guarantee, that such an operation can be performed by a thread without causing the thread to block. It is imperative that code that performs multiplexed I/O be written so as to ignore these hints when they prove to be incorrect.</source>
          <target state="translated">一个选择键表明它的通道已经准备好进行某些操作,这是一个提示,但不是保证,这样的操作可以由一个线程执行,而不会导致线程阻塞。在编写执行多路I/O的代码时,当这些提示被证明是不正确的时候,必须要忽略这些提示。</target>
        </trans-unit>
        <trans-unit id="2e116fde30bfce6bc219f98a723200588db818f4" translate="yes" xml:space="preserve">
          <source>That a selection key's ready set indicates that its channel is ready for some operation category is a hint, but not a guarantee, that an operation in such a category may be performed by a thread without causing the thread to block. A ready set is most likely to be accurate immediately after the completion of a selection operation. It is likely to be made inaccurate by external events and by I/O operations that are invoked upon the corresponding channel.</source>
          <target state="translated">一个选择键的就绪集表示它的通道已经为某种操作类别做好了准备,这是一种提示,但不是保证,这种类别的操作可以由线程执行而不会导致线程阻塞。准备好的集合最有可能在选择操作完成后立即准确。它很可能因为外部事件和在相应通道上调用的I/O操作而变得不准确。</target>
        </trans-unit>
        <trans-unit id="7293d0c8de22c531a5129cfdad90649cce36d51f" translate="yes" xml:space="preserve">
          <source>That implementation makes the operation suitable for short traversals from a known position. But to traverse all of the leaves in the tree, you should use &lt;code&gt;depthFirstEnumeration&lt;/code&gt; to enumerate the nodes in the tree and use &lt;code&gt;isLeaf&lt;/code&gt; on each node to determine which are leaves.</source>
          <target state="translated">该实现方式使该操作适合于从已知位置进行短遍历。但是要遍历树中的所有叶子，应使用 &lt;code&gt;depthFirstEnumeration&lt;/code&gt; 枚举树中的节点，并在每个节点上使用 &lt;code&gt;isLeaf&lt;/code&gt; 以确定哪些是叶子。</target>
        </trans-unit>
        <trans-unit id="afcead73a580f282a044b63d246784dd77d66756" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;cipher.getParameters().getEncoded()&lt;/code&gt;.</source>
          <target state="translated">即 &lt;code&gt;cipher.getParameters().getEncoded()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ffbb9cc7363c310d2444b1a8fa556ad01792b87" translate="yes" xml:space="preserve">
          <source>That is, if &lt;code&gt;AWTEvent&lt;/code&gt; A is enqueued to the &lt;code&gt;EventQueue&lt;/code&gt; before &lt;code&gt;AWTEvent&lt;/code&gt; B then event B will not be dispatched before event A.</source>
          <target state="translated">也就是说，如果在 &lt;code&gt;AWTEvent&lt;/code&gt; B之前将 &lt;code&gt;AWTEvent&lt;/code&gt; A排队到 &lt;code&gt;EventQueue&lt;/code&gt; 中，那么将不会在事件A之前调度事件B。</target>
        </trans-unit>
        <trans-unit id="47b2766631eff8497375264c6fafdca64d098834" translate="yes" xml:space="preserve">
          <source>That is, it creates a virtual machine descriptor such that the</source>
          <target state="translated">也就是说,它创建了一个虚拟机描述符,使得</target>
        </trans-unit>
        <trans-unit id="1838fbc3bd4ca130f9a4e006ec1c3120622cb2b7" translate="yes" xml:space="preserve">
          <source>That is, it is not permitted that several events from this queue are dispatched simultaneously.</source>
          <target state="translated">也就是说,不允许这个队列中的多个事件同时被调度。</target>
        </trans-unit>
        <trans-unit id="556c041f00679345ada54c5a7f121b6e2342017b" translate="yes" xml:space="preserve">
          <source>That is, the above declaration is identical to the following, more verbose one:</source>
          <target state="translated">也就是说,上面的声明与下面的更简洁的声明完全相同。</target>
        </trans-unit>
        <trans-unit id="7fbef03361aa2d11a29ea57ba9573d91992f1ee2" translate="yes" xml:space="preserve">
          <source>That supports three categories of application that modify entity resolution. &lt;em&gt;Old Style&lt;/em&gt; applications won't know about this interface; they will provide an EntityResolver. &lt;em&gt;Transitional Mode&lt;/em&gt; provide an EntityResolver2 and automatically get the benefit of its methods in any systems (parsers or other tools) supporting it, due to polymorphism. Both &lt;em&gt;Old Style&lt;/em&gt; and &lt;em&gt;Transitional Mode&lt;/em&gt; applications will work with any SAX2 parser. &lt;em&gt;New style&lt;/em&gt; applications will fail to run except on SAX2 parsers that support this particular feature. They will insist that feature flag have a value of &quot;true&quot;, and the EntityResolver2 implementation they provide might throw an exception if the original SAX 1.0 style entity resolution method is invoked.</source>
          <target state="translated">它支持修改实体分辨率的三类应用程序。&lt;em&gt;旧样式的&lt;/em&gt;应用程序将不知道此接口。他们将提供一个EntityResolver。由于多态性，&lt;em&gt;过渡模式&lt;/em&gt;提供EntityResolver2并在支持它的任何系统（解析器或其他工具）中自动获得其方法的好处。无论&lt;em&gt;旧式&lt;/em&gt;和&lt;em&gt;转换模式&lt;/em&gt;应用程序将与任何SAX2解析器工作。&lt;em&gt;新风格&lt;/em&gt;除了在支持此特定功能的SAX2解析器上，应用程序将无法运行。他们将坚持认为特征标记的值为&amp;ldquo; true&amp;rdquo;，并且如果调用原始的SAX 1.0样式实体解析方法，则他们提供的EntityResolver2实现可能会引发异常。</target>
        </trans-unit>
        <trans-unit id="006efee9935d1d56869e21b1bac583a106240016" translate="yes" xml:space="preserve">
          <source>That this method returns &lt;code&gt;false&lt;/code&gt; does not imply that no bytes have yet been decoded. Some auto-detecting decoders are capable of decoding some, or even all, of an input byte sequence without fixing on a particular charset.</source>
          <target state="translated">此方法返回 &lt;code&gt;false&lt;/code&gt; 并不意味着尚未解码任何字节。一些自动检测解码器能够在不固定特定字符集的情况下解码部分或全部输入字节序列。</target>
        </trans-unit>
        <trans-unit id="93ef0dd827103681fcee453b78be2ff14e1a261d" translate="yes" xml:space="preserve">
          <source>The</source>
          <target state="translated">The</target>
        </trans-unit>
        <trans-unit id="d28a162efe56d735c7f674ab51f90529f140fe99" translate="yes" xml:space="preserve">
          <source>The &quot;&amp;lt;hostname&amp;gt;&quot; is an ASCII representation of the hostname, which may contains A-labels. For example, a returned value of an pseudo hostname may look like:</source>
          <target state="translated">&amp;ldquo; &amp;lt;主机名&amp;gt;&amp;rdquo;是主机名的ASCII表示形式，其中可能包含A标签。例如，伪主机名的返回值可能类似于：</target>
        </trans-unit>
        <trans-unit id="fbe380e337c8737cb91d45f2fdda4edb182c7b59" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;code&gt;.jar&lt;/code&gt;&quot; suffix is removed.</source>
          <target state="translated">后缀&amp;ldquo; &lt;code&gt;.jar&lt;/code&gt; &amp;rdquo;已删除。</target>
        </trans-unit>
        <trans-unit id="5e0cd1ddc5f8cc6b8cae5364b989cfa39faab14b" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;code&gt;permissions&lt;/code&gt;&quot; attribute is not optional in the &quot;&lt;code&gt;posix&lt;/code&gt;&quot; view so a default set of permissions are used for entries that do not have access permissions stored in the Zip file. The default set of permissions are</source>
          <target state="translated">&amp;ldquo; &lt;code&gt;permissions&lt;/code&gt; &amp;rdquo;属性在&amp;ldquo; &lt;code&gt;posix&lt;/code&gt; &amp;rdquo;视图中不是可选的，因此默认权限集用于没有Zip文件中存储的访问权限的条目。默认的权限集是</target>
        </trans-unit>
        <trans-unit id="3cb83e70711efc11b9d5c355db1e4fee21b3d4ec" translate="yes" xml:space="preserve">
          <source>The &quot;Concurrent&quot; prefix used with some classes in this package is a shorthand indicating several differences from similar &quot;synchronized&quot; classes. For example &lt;code&gt;java.util.Hashtable&lt;/code&gt; and &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; are synchronized. But &lt;a href=&quot;concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is &quot;concurrent&quot;. A concurrent collection is thread-safe, but not governed by a single exclusion lock. In the particular case of ConcurrentHashMap, it safely permits any number of concurrent reads as well as a large number of concurrent writes. &quot;Synchronized&quot; classes can be useful when you need to prevent all access to a collection via a single lock, at the expense of poorer scalability. In other cases in which multiple threads are expected to access a common collection, &quot;concurrent&quot; versions are normally preferable. And unsynchronized collections are preferable when either collections are unshared, or are accessible only when holding other locks.</source>
          <target state="translated">与该程序包中某些类一起使用的&amp;ldquo;并发&amp;rdquo;前缀是一种速记，表示与类似的&amp;ldquo;同步&amp;rdquo;类有所不同。例如， &lt;code&gt;java.util.Hashtable&lt;/code&gt; 和 &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; 已同步。但是&lt;a href=&quot;concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;是&amp;ldquo;并发&amp;rdquo;。并发集合是线程安全的，但不受单个排除锁的约束。在ConcurrentHashMap的特定情况下，它安全地允许任何数量的并发读取以及大量的并发写入。当需要阻止通过单个锁对集合的所有访问时，&amp;ldquo;同步&amp;rdquo;类可能很有用，但代价是可伸缩性较差。在期望多个线程访问一个公共集合的其他情况下，通常最好使用&amp;ldquo;并发&amp;rdquo;版本。当未共享的集合或仅在持有其他锁时才可访问的集合时，不同步的集合是更可取的。</target>
        </trans-unit>
        <trans-unit id="761b12883375956b1fd5c3659aa381596b01fdaa" translate="yes" xml:space="preserve">
          <source>The &quot;Concurrent&quot; prefix used with some classes in this package is a shorthand indicating several differences from similar &quot;synchronized&quot; classes. For example &lt;code&gt;java.util.Hashtable&lt;/code&gt; and &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; are synchronized. But &lt;a href=&quot;concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt; is &quot;concurrent&quot;. A concurrent collection is thread-safe, but not governed by a single exclusion lock. In the particular case of ConcurrentHashMap, it safely permits any number of concurrent reads as well as a tunable number of concurrent writes. &quot;Synchronized&quot; classes can be useful when you need to prevent all access to a collection via a single lock, at the expense of poorer scalability. In other cases in which multiple threads are expected to access a common collection, &quot;concurrent&quot; versions are normally preferable. And unsynchronized collections are preferable when either collections are unshared, or are accessible only when holding other locks.</source>
          <target state="translated">与该程序包中某些类一起使用的&amp;ldquo;并发&amp;rdquo;前缀是一种速记，表示与类似的&amp;ldquo;同步&amp;rdquo;类有所不同。例如， &lt;code&gt;java.util.Hashtable&lt;/code&gt; 和 &lt;code&gt;Collections.synchronizedMap(new HashMap())&lt;/code&gt; 已同步。但是&lt;a href=&quot;concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt;是&amp;ldquo;并发&amp;rdquo;。并发集合是线程安全的，但不受单个排除锁的约束。在ConcurrentHashMap的特定情况下，它安全地允许任意数量的并发读取以及可调数量的并发写入。当需要阻止通过单个锁对集合的所有访问时，&amp;ldquo;同步&amp;rdquo;类可能很有用，但代价是可伸缩性较差。在期望多个线程访问一个公共集合的其他情况下，通常最好使用&amp;ldquo;并发&amp;rdquo;版本。当未共享的集合或仅在持有其他锁时才可访问的集合时，不同步的集合是更可取的。</target>
        </trans-unit>
        <trans-unit id="2be3c7247d4c95e0eee9f8ccfea4760fa5e29c40" translate="yes" xml:space="preserve">
          <source>The &quot;TableExample&quot; directory in the demo area of the source distribution gives a number of complete examples of &lt;code&gt;JTable&lt;/code&gt; usage, covering how the &lt;code&gt;JTable&lt;/code&gt; can be used to provide an editable view of data taken from a database and how to modify the columns in the display to use specialized renderers and editors.</source>
          <target state="translated">源代码分发的演示区域中的&amp;ldquo; TableExample&amp;rdquo;目录提供了一些 &lt;code&gt;JTable&lt;/code&gt; 使用情况的完整示例，涵盖了如何使用 &lt;code&gt;JTable&lt;/code&gt; 提供从数据库获取的数据的可编辑视图以及如何修改显示中的列。使用专门的渲染器和编辑器。</target>
        </trans-unit>
        <trans-unit id="f5d233d2c83083380d6b780fce20712170e44145" translate="yes" xml:space="preserve">
          <source>The &quot;block&quot; increment for scrolling in the specified direction. This value should always be positive.</source>
          <target state="translated">在指定方向上滚动的 &quot;块 &quot;增量。该值应始终为正值。</target>
        </trans-unit>
        <trans-unit id="5c92ed0ed7f44357d29a0d93b7d5e34400a5966a" translate="yes" xml:space="preserve">
          <source>The &quot;class&quot; attribute is used to specify the target of a static method or constructor explicitly; its value being the fully qualified name of the class.</source>
          <target state="translated">&quot;类 &quot;属性用于显式指定静态方法或构造函数的目标;其值是类的全称。</target>
        </trans-unit>
        <trans-unit id="410744ec5d7aaa6733716ca632b49febdb1c1415" translate="yes" xml:space="preserve">
          <source>The &quot;contentPane&quot; is the primary container for application specific components.</source>
          <target state="translated">&quot;contentPane &quot;是应用程序特定组件的主要容器。</target>
        </trans-unit>
        <trans-unit id="b5f47fbc154769f72f7809d97f7c4fc03a4116e0" translate="yes" xml:space="preserve">
          <source>The &quot;contentPane&quot; is the primary container for application specific components. Applications should add children to the contentPane, set its layout manager, and so on.</source>
          <target state="translated">&quot;contentPane &quot;是应用程序特定组件的主要容器。应用程序应该向contentPane添加子程序,设置其布局管理器等。</target>
        </trans-unit>
        <trans-unit id="99b714dc607d2a32a9e5ae18a28845a9ad7f9870" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; algorithms contained in this class, that is, the algorithms that modify the collection on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the collection does not support the appropriate mutation primitive(s), such as the &lt;code&gt;set&lt;/code&gt; method. These algorithms may, but are not required to, throw this exception if an invocation would have no effect on the collection. For example, invoking the &lt;code&gt;sort&lt;/code&gt; method on an unmodifiable list that is already sorted may or may not throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">如果该集合不支持适当的突变原语（例如 &lt;code&gt;set&lt;/code&gt; 方法），则指定该类中包含的&amp;ldquo;破坏性&amp;rdquo;算法，即修改其操作的集合的算法，以引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。如果调用对集合没有影响，则这些算法可能会（但不是必需）引发此异常。例如，在已排序的不可修改列表上调用 &lt;code&gt;sort&lt;/code&gt; 方法可能会或可能不会抛出 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d3799b0d99e9f9ae8ba59928fbe544b7e50ada4f" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the collection on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this collection does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the collection. For example, invoking the &lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt;&lt;code&gt;addAll(Collection)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable collection may, but is not required to, throw the exception if the collection to be added is empty.</source>
          <target state="translated">如果此集合不支持该操作，则指定该接口中包含的&amp;ldquo;破坏性&amp;rdquo;方法，即修改其操作的集合的方法，以引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。在这种情况下，如果调用对集合没有影响，则这些方法可能会（但不是必需）引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。例如，如果要添加的集合为空，则对一个不可修改的集合调用&lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt; &lt;code&gt;addAll(Collection)&lt;/code&gt; &lt;/a&gt;方法可能（但并非必须）引发异常。</target>
        </trans-unit>
        <trans-unit id="f888ae94165a497ee34db90a9611055f9403494e" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the map on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this map does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the map. For example, invoking the &lt;a href=&quot;#putAll(java.util.Map)&quot;&gt;&lt;code&gt;putAll(Map)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable map may, but is not required to, throw the exception if the map whose mappings are to be &quot;superimposed&quot; is empty.</source>
          <target state="translated">如果此映射不支持该操作，则指定该接口中包含的&amp;ldquo;破坏性&amp;rdquo;方法（即，修改其操作的映射的方法）以引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。在这种情况下，如果调用对地图没有影响，则这些方法可能会（但不是必需）引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。例如，如果要&amp;ldquo;叠加&amp;rdquo;映射的映射为空，则在（但不是必须&lt;a href=&quot;#putAll(java.util.Map)&quot;&gt; &lt;code&gt;putAll(Map)&lt;/code&gt; &lt;/a&gt;在不可修改的映射上调用putAll（Map）方法可能会引发异常。</target>
        </trans-unit>
        <trans-unit id="523d08144b8e0cc24e5d2b715228e9abf2df6508" translate="yes" xml:space="preserve">
          <source>The &quot;destructive&quot; methods contained in this interface, that is, the methods that modify the map on which they operate, are specified to throw &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if this map does not support the operation. If this is the case, these methods may, but are not required to, throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; if the invocation would have no effect on the map. For example, invoking the &lt;a href=&quot;map#putAll-java.util.Map-&quot;&gt;&lt;code&gt;putAll(Map)&lt;/code&gt;&lt;/a&gt; method on an unmodifiable map may, but is not required to, throw the exception if the map whose mappings are to be &quot;superimposed&quot; is empty.</source>
          <target state="translated">如果此映射不支持该操作，则指定该接口中包含的&amp;ldquo;破坏性&amp;rdquo;方法（即修改其操作的映射的方法）以引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。在这种情况下，如果调用对地图没有影响，则这些方法可能会（但不是必需）引发 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 。例如，如果要&amp;ldquo;叠加&amp;rdquo;映射的映射为空，则在但不可更改的映射上调用&lt;a href=&quot;map#putAll-java.util.Map-&quot;&gt; &lt;code&gt;putAll(Map)&lt;/code&gt; &lt;/a&gt;方法可能会（但并非必须）引发异常。</target>
        </trans-unit>
        <trans-unit id="eae4891e98416f7d88cd670a3c2c7ffcf50a66c3" translate="yes" xml:space="preserve">
          <source>The &quot;expert&quot; flag is used to distinguish between features that are intended for expert users from those that are intended for normal users.</source>
          <target state="translated">专家 &quot;标志用于区分为专家用户设计的功能和为普通用户设计的功能。</target>
        </trans-unit>
        <trans-unit id="53de2781ee0e7ac40066ecc66400a0280e82b151" translate="yes" xml:space="preserve">
          <source>The &quot;expert&quot; flag is used to distinguish between those features that are intended for expert users from those that are intended for normal users.</source>
          <target state="translated">专家 &quot;标志用于区分那些为专家用户设计的功能和为普通用户设计的功能。</target>
        </trans-unit>
        <trans-unit id="96db2ea0542daeff5fb771b914acf904d52fda1e" translate="yes" xml:space="preserve">
          <source>The &quot;global&quot; Logger object is provided as a convenience to developers who are making casual use of the Logging package. Developers who are making serious use of the logging package (for example in products) should create and use their own Logger objects, with appropriate names, so that logging can be controlled on a suitable per-Logger granularity. Developers also need to keep a strong reference to their Logger objects to prevent them from being garbage collected.</source>
          <target state="translated">全局 &quot;日志记录器对象是为了方便那些随意使用日志记录包的开发人员而提供的。认真使用记录包的开发人员(例如在产品中)应该创建和使用自己的记录器对象,并使用适当的名称,这样就可以在每个记录器的适当粒度上控制记录。开发者还需要对他们的Logger对象保持一个强有力的引用,以防止它们被垃圾收集。</target>
        </trans-unit>
        <trans-unit id="6d7cb2b2bdfe06e56767bcb0bc7bde1627ef37ec" translate="yes" xml:space="preserve">
          <source>The &quot;heavyweight&quot; components (those that delegate to a peer, or native component on the host system) are shown with a darker, heavier box. The four heavyweight JFC/Swing containers (&lt;code&gt;JFrame&lt;/code&gt;, &lt;code&gt;JDialog&lt;/code&gt;, &lt;code&gt;JWindow&lt;/code&gt;, and &lt;code&gt;JApplet&lt;/code&gt;) are shown in relation to the AWT classes they extend. These four components are the only heavyweight containers in the Swing library. The lightweight container &lt;code&gt;JInternalFrame&lt;/code&gt; is also shown. All five of these JFC/Swing containers implement the &lt;code&gt;RootPaneContainer&lt;/code&gt; interface, and they all delegate their operations to a &lt;code&gt;JRootPane&lt;/code&gt; (shown with a little &quot;handle&quot; on top).</source>
          <target state="translated">显示&amp;ldquo;较重&amp;rdquo;组件（在主机系统上委派给对等项或本机组件的那些组件）时，它会显示一个较暗，较重的框。相对于它们扩展的AWT类，显示了四个重量级的JFC / Swing容器（ &lt;code&gt;JFrame&lt;/code&gt; ， &lt;code&gt;JDialog&lt;/code&gt; ， &lt;code&gt;JWindow&lt;/code&gt; 和 &lt;code&gt;JApplet&lt;/code&gt; ）。这四个组件是Swing库中唯一的重量级容器。还显示了轻量级容器 &lt;code&gt;JInternalFrame&lt;/code&gt; 。所有这五个JFC / Swing容器都实现 &lt;code&gt;RootPaneContainer&lt;/code&gt; 接口，并且它们都将其操作委托给 &lt;code&gt;JRootPane&lt;/code&gt; （在顶部显示一个小&amp;ldquo;句柄&amp;rdquo;）。</target>
        </trans-unit>
        <trans-unit id="3c8addeccbf7f5e85580dfc2361b06f37794364c" translate="yes" xml:space="preserve">
          <source>The &quot;hidden&quot; flag is used to identify features that are intended only for tool use, and which should not be exposed to humans.</source>
          <target state="translated">&quot;隐藏 &quot;标志用于识别只供工具使用的特征,这些特征不应暴露在人类面前。</target>
        </trans-unit>
        <trans-unit id="a488d2b6590253541ee7f92e1ac3dd1986e06a1b" translate="yes" xml:space="preserve">
          <source>The &quot;host_name&quot; type representing of a DNS hostname (see &lt;a href=&quot;snihostname&quot;&gt;&lt;code&gt;SNIHostName&lt;/code&gt;&lt;/a&gt;) in a Server Name Indication (SNI) extension.</source>
          <target state="translated">服务器名称指示（SNI）扩展名中代表DNS主机名的&amp;ldquo; host_name&amp;rdquo;类型（请参阅&lt;a href=&quot;snihostname&quot;&gt; &lt;code&gt;SNIHostName&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="10a044e56e8d6b8a40829767ab33a3bc7ae091b1" translate="yes" xml:space="preserve">
          <source>The &quot;key pressed&quot; event.</source>
          <target state="translated">&quot;按键被按 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="cb1a2a9817108a8f3fb0c74a1517f31d89883b1c" translate="yes" xml:space="preserve">
          <source>The &quot;key pressed&quot; event. This event is generated when a key is pushed down.</source>
          <target state="translated">&quot;按键被按 &quot;事件。当一个键被按下时,就会产生该事件。</target>
        </trans-unit>
        <trans-unit id="15a0b36368e7533da45b107a8fdb9d0dbb87991b" translate="yes" xml:space="preserve">
          <source>The &quot;key released&quot; event.</source>
          <target state="translated">&quot;密钥发布 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="89065abb7212cafb2aa0e60705c8e8fb49031c07" translate="yes" xml:space="preserve">
          <source>The &quot;key released&quot; event. This event is generated when a key is let up.</source>
          <target state="translated">&quot;钥匙释放 &quot;事件。该事件在钥匙被放出时产生。</target>
        </trans-unit>
        <trans-unit id="c4db56f511a0b0caa531937b259ac838d670ef62" translate="yes" xml:space="preserve">
          <source>The &quot;key typed&quot; event.</source>
          <target state="translated">按键输入 &quot;的事件。</target>
        </trans-unit>
        <trans-unit id="1731c860a12ee2be3d3d567b4975c99da1c6b048" translate="yes" xml:space="preserve">
          <source>The &quot;key typed&quot; event. This event is generated when a character is entered. In the simplest case, it is produced by a single key press. Often, however, characters are produced by series of key presses, and the mapping from key pressed events to key typed events may be many-to-one or many-to-many.</source>
          <target state="translated">&quot;键入 &quot;事件。这个事件是在输入一个字符时产生的。在最简单的情况下,它是由单次按键产生的。但通常情况下,字符是由一系列按键产生的,从按键事件到按键输入事件的映射可能是多对一或多对多。</target>
        </trans-unit>
        <trans-unit id="d5ee252810cba0d533bf7f76c20a67b32a87cd3a" translate="yes" xml:space="preserve">
          <source>The &quot;listen&quot; action is only meaningful when used with &quot;localhost&quot; and means the ability to bind to a specified port. The &quot;resolve&quot; action is implied when any of the other actions are present. The action &quot;resolve&quot; refers to host/ip name service lookups.</source>
          <target state="translated">&quot;listen &quot;操作只有在与 &quot;localhost &quot;一起使用时才有意义,它意味着绑定到指定端口的能力。当其他任何一个动作存在时,&quot;resolve &quot;动作都是隐含的。动作 &quot;resolve &quot;指的是主机/ip名服务查找。</target>
        </trans-unit>
        <trans-unit id="d3c0ba0eee2ac7b66f3aef3fc73c2b223a4c0ec9" translate="yes" xml:space="preserve">
          <source>The &quot;mouse clicked&quot; event.</source>
          <target state="translated">鼠标点击 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="fd95273f9e0f97ba6154493334dfbc88304d3745" translate="yes" xml:space="preserve">
          <source>The &quot;mouse clicked&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is pressed and released.</source>
          <target state="translated">&amp;ldquo;鼠标单击&amp;rdquo;事件。当按下并释放鼠标按钮时，将发生此 &lt;code&gt;MouseEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="eb930dfd17a60925068d70705e9352f325ee57fe" translate="yes" xml:space="preserve">
          <source>The &quot;mouse dragged&quot; event.</source>
          <target state="translated">鼠标拖动 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="b075435502c8f7106ae0666596bf2e26f2c15d14" translate="yes" xml:space="preserve">
          <source>The &quot;mouse dragged&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse position changes while a mouse button is pressed.</source>
          <target state="translated">&amp;ldquo;鼠标拖动&amp;rdquo;事件。当在按下鼠标按钮时更改鼠标位置时，将发生此 &lt;code&gt;MouseEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78c6cf4d6d751d3b148d29d91a9b44b79d81b329" translate="yes" xml:space="preserve">
          <source>The &quot;mouse entered&quot; event.</source>
          <target state="translated">鼠标进入 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="92484043e5f424f60214946af78c19a23cb0e672" translate="yes" xml:space="preserve">
          <source>The &quot;mouse entered&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse cursor enters the unobscured part of component's geometry.</source>
          <target state="translated">&amp;ldquo;鼠标进入&amp;rdquo;事件。当鼠标光标进入组件的几何图形的未遮盖部分时，将发生此 &lt;code&gt;MouseEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7cf7efa1787704ba9875d107afd4470014ed223c" translate="yes" xml:space="preserve">
          <source>The &quot;mouse exited&quot; event.</source>
          <target state="translated">鼠标退出 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="7633a989f55a9a134d2f8ff1b7940365bbd2c29a" translate="yes" xml:space="preserve">
          <source>The &quot;mouse exited&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse cursor exits the unobscured part of component's geometry.</source>
          <target state="translated">&amp;ldquo;鼠标退出&amp;rdquo;事件。当鼠标光标退出组件几何的未被遮盖的部分时，将发生此 &lt;code&gt;MouseEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19a32ec102054b05202c9958fa7c4841ba476534" translate="yes" xml:space="preserve">
          <source>The &quot;mouse moved&quot; event.</source>
          <target state="translated">鼠标移动 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="7c7e14a335bae48f1e5f91e66b80f93c264e4e45" translate="yes" xml:space="preserve">
          <source>The &quot;mouse moved&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when the mouse position changes.</source>
          <target state="translated">&amp;ldquo;鼠标移动&amp;rdquo;事件。当鼠标位置更改时，将发生此 &lt;code&gt;MouseEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3bbcddb1dc3d6cbd24ab4a55e75d7a461d4f45a" translate="yes" xml:space="preserve">
          <source>The &quot;mouse pressed&quot; event.</source>
          <target state="translated">鼠标被按下 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="ae781e8182fd3b20274560fd07afa5afdaa84dc5" translate="yes" xml:space="preserve">
          <source>The &quot;mouse pressed&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is pushed down.</source>
          <target state="translated">&amp;ldquo;按下鼠标&amp;rdquo;事件。当按下鼠标按钮时，将发生此 &lt;code&gt;MouseEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0ffd7c3529bd8be1ff6ce38f355d520951884df" translate="yes" xml:space="preserve">
          <source>The &quot;mouse released&quot; event.</source>
          <target state="translated">鼠标释放 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="5339e6250ff74b2626aff20bcdc159359391a858" translate="yes" xml:space="preserve">
          <source>The &quot;mouse released&quot; event. This &lt;code&gt;MouseEvent&lt;/code&gt; occurs when a mouse button is let up.</source>
          <target state="translated">&amp;ldquo;鼠标释放&amp;rdquo;事件。释放鼠标按钮时，将发生此 &lt;code&gt;MouseEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f299653ce8809acb5d9b394aeb347b35b63a060" translate="yes" xml:space="preserve">
          <source>The &quot;mouse wheel&quot; event.</source>
          <target state="translated">鼠标轮 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="e2517857e2bd19f0daa1ea9a18fc38bf3b4b844e" translate="yes" xml:space="preserve">
          <source>The &quot;mouse wheel&quot; event. This is the only &lt;code&gt;MouseWheelEvent&lt;/code&gt;. It occurs when a mouse equipped with a wheel has its wheel rotated.</source>
          <target state="translated">&amp;ldquo;鼠标滚轮&amp;rdquo;事件。这是唯一的 &lt;code&gt;MouseWheelEvent&lt;/code&gt; 。当配备轮子的鼠标的轮子旋转时，会发生这种情况。</target>
        </trans-unit>
        <trans-unit id="34537c0a9b18a5b97ca9dba2fc6ccb6e06339c2a" translate="yes" xml:space="preserve">
          <source>The &quot;no offset&quot; text controls what text is printed when the total amount of the offset fields to be output is zero. Example values would be 'Z', '+00:00', 'UTC' or 'GMT'. Three formats are accepted for parsing UTC - the &quot;no offset&quot; text, and the plus and minus versions of zero defined by the pattern.</source>
          <target state="translated">无偏移 &quot;文本控制当要输出的偏移字段总数为零时打印什么文本。示例值是'Z'、'+00:00'、'UTC'或'GMT'。解析UTC有三种格式--&quot;无偏移 &quot;文本,以及由模式定义的零的正负版本。</target>
        </trans-unit>
        <trans-unit id="0039eb18c439a8fe0ded6f996e270014f44833ff" translate="yes" xml:space="preserve">
          <source>The &quot;object&quot; tag denotes an &lt;em&gt;expression&lt;/em&gt; whose value is to be used as the argument to the enclosing element.</source>
          <target state="translated">&amp;ldquo;对象&amp;rdquo;标签表示一个&lt;em&gt;表达式，&lt;/em&gt;其值将用作封闭元素的参数。</target>
        </trans-unit>
        <trans-unit id="07afefc8066cbe0c177d01f4791e1bb9f5f5aedd" translate="yes" xml:space="preserve">
          <source>The &quot;permissions&quot; attribute is the set of access permissions that are optionally stored for entries in a Zip file. The value of the attribute is &lt;code&gt;null&lt;/code&gt; for entries that do not have access permissions. Zip file systems do not enforce access permissions.</source>
          <target state="translated">&amp;ldquo; permissions&amp;rdquo;属性是一组访问权限，可以选择将其存储为Zip文件中的条目。对于没有访问权限的条目，该属性的值为 &lt;code&gt;null&lt;/code&gt; 。Zip文件系统不强制执行访问权限。</target>
        </trans-unit>
        <trans-unit id="835d0c505cadb9b5c180adf1b65df786a3e7c0b6" translate="yes" xml:space="preserve">
          <source>The &quot;permissions&quot; attribute may be read and set using the &lt;a href=&quot;../java.base/java/nio/file/files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;Files.getAttribute&lt;/a&gt; and &lt;a href=&quot;../java.base/java/nio/file/files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;Files.setAttribute&lt;/a&gt; methods. The following example uses these methods to read and set the attribute:</source>
          <target state="translated">可以使用&lt;a href=&quot;../java.base/java/nio/file/files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;Files.getAttribute&lt;/a&gt;和&lt;a href=&quot;../java.base/java/nio/file/files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;Files.setAttribute&lt;/a&gt;方法读取和设置&amp;ldquo;权限&amp;rdquo;属性。下面的示例使用这些方法来读取和设置属性：</target>
        </trans-unit>
        <trans-unit id="8b7ed3f19fc82e3673167bf96934264dcec09b2d" translate="yes" xml:space="preserve">
          <source>The &quot;preferred&quot; flag is used to identify features that are particularly important for presenting to humans.</source>
          <target state="translated">&quot;首选 &quot;标志是用来识别那些对呈现给人类特别重要的特征。</target>
        </trans-unit>
        <trans-unit id="4b8e7b319e024eaf410d2b4884b5404343990997" translate="yes" xml:space="preserve">
          <source>The &quot;propagationId&quot; field is reserved for future use.</source>
          <target state="translated">&quot;propagationId &quot;字段保留给将来使用。</target>
        </trans-unit>
        <trans-unit id="e52ae4af20949258e854e3591de7eb4159275419" translate="yes" xml:space="preserve">
          <source>The &quot;propagationId&quot; field is reserved for future use. In Beans 1.0 the sole requirement is that if a listener catches a PropertyChangeEvent and then fires a PropertyChangeEvent of its own, then it should make sure that it propagates the propagationId field from its incoming event to its outgoing event.</source>
          <target state="translated">&quot;propagationId &quot;字段是为了将来使用而保留的。在Beans 1.0中,唯一的要求是,如果一个监听器捕获了一个PropertyChangeEvent,然后发射了自己的PropertyChangeEvent,那么它应该确保将传播Id字段从它的传入事件传播到它的传出事件。</target>
        </trans-unit>
        <trans-unit id="28e0bfde4b5880a6ead92dd03fce5b3e532829ac" translate="yes" xml:space="preserve">
          <source>The &quot;selectionBackground&quot; is the color of the text when it is painted over an unfilled area of the progress bar.</source>
          <target state="translated">&quot;selectionBackground &quot;是在进度条的未填写区域上涂抹文字时的颜色。</target>
        </trans-unit>
        <trans-unit id="217311dded8133e98a9dbffc4c619b4a9be712b0" translate="yes" xml:space="preserve">
          <source>The &quot;selectionForeground&quot; is the color of the text when it is painted over a filled area of the progress bar.</source>
          <target state="translated">&quot;selectionForeground &quot;是指在进度条的填充区域上涂抹文字时的颜色。</target>
        </trans-unit>
        <trans-unit id="42bdeb61efcd06a145da747487352948dbf3d104" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; error output stream.</source>
          <target state="translated">标准 &quot;误差输出流。</target>
        </trans-unit>
        <trans-unit id="448f901e9880ca6676ec228309500276a588387c" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; error output stream. This stream is already open and ready to accept output data.</source>
          <target state="translated">标准 &quot;错误输出流。该流已经打开并准备接受输出数据。</target>
        </trans-unit>
        <trans-unit id="c09e43335de1888d318df0870ac4ad9eac45e377" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; input stream.</source>
          <target state="translated">的 &quot;标准 &quot;输入流。</target>
        </trans-unit>
        <trans-unit id="9b0fa7082ba453aa32dcb16ac03daf1ba9c65c4f" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; input stream. This stream is already open and ready to supply input data. Typically this stream corresponds to keyboard input or another input source specified by the host environment or user.</source>
          <target state="translated">标准 &quot;输入流。这个流已经打开并准备好提供输入数据。通常这个流对应键盘输入或主机环境或用户指定的其他输入源。</target>
        </trans-unit>
        <trans-unit id="75482cec17e77687e4c5e4dd58db85c8319d6643" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; output stream.</source>
          <target state="translated">的 &quot;标准 &quot;输出流。</target>
        </trans-unit>
        <trans-unit id="8d594a48963bd0f322bbb684e19620412a6932c8" translate="yes" xml:space="preserve">
          <source>The &quot;standard&quot; output stream. This stream is already open and ready to accept output data. Typically this stream corresponds to display output or another output destination specified by the host environment or user.</source>
          <target state="translated">标准 &quot;输出流。该流已经打开并准备接受输出数据。通常情况下,该流对应于显示输出或主机环境或用户指定的其他输出目的地。</target>
        </trans-unit>
        <trans-unit id="e49f1b992ecac3c4246b928abba36653e8cfabb0" translate="yes" xml:space="preserve">
          <source>The &quot;unit&quot; increment for scrolling in the specified direction</source>
          <target state="translated">在指定方向上滚动的 &quot;单位 &quot;增量。</target>
        </trans-unit>
        <trans-unit id="c7b2a0b2a156cc227469775e832652ef0030c0b5" translate="yes" xml:space="preserve">
          <source>The &quot;unit&quot; increment for scrolling in the specified direction. This value should always be positive.</source>
          <target state="translated">在指定方向上滚动的 &quot;单位 &quot;增量。该值应始终为正值。</target>
        </trans-unit>
        <trans-unit id="2dd42dc8f0100ef88f1c09f4b716e6faae9b9104" translate="yes" xml:space="preserve">
          <source>The &quot;viewport&quot; or &quot;porthole&quot; through which you see the underlying information.</source>
          <target state="translated">通过 &quot;视口 &quot;或 &quot;舷窗 &quot;看到基本信息。</target>
        </trans-unit>
        <trans-unit id="7abc451b2b8a02dae8147b6816d130c87349c8a6" translate="yes" xml:space="preserve">
          <source>The &quot;viewport&quot; or &quot;porthole&quot; through which you see the underlying information. When you scroll, what moves is the viewport. It is like peering through a camera's viewfinder. Moving the viewfinder upwards brings new things into view at the top of the picture and loses things that were at the bottom.</source>
          <target state="translated">通过 &quot;视口 &quot;或 &quot;舷窗&quot;,你可以看到基本信息。当你滚动时,移动的是视窗。这就像通过相机的取景器来观察一样。向上移动取景器,就会使画面顶部的新事物进入视野,而失去底部的事物。</target>
        </trans-unit>
        <trans-unit id="87b168e22e7b27d60154fb06e4407a5bdb2ba403" translate="yes" xml:space="preserve">
          <source>The &quot;virtual key&quot; constants defined in &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; can be used to specify the key code. For example:</source>
          <target state="translated">可以使用 &lt;code&gt;java.awt.event.KeyEvent&lt;/code&gt; 中定义的&amp;ldquo;虚拟密钥&amp;rdquo;常量来指定密钥代码。例如：</target>
        </trans-unit>
        <trans-unit id="42fa43eba557cdf1cf26626adea323a5cf291383" translate="yes" xml:space="preserve">
          <source>The &quot;virtual key&quot; constants defined in java.awt.event.KeyEvent can be used to specify the key code. For example:</source>
          <target state="translated">java.awt.event.KeyEvent中定义的 &quot;虚拟密钥 &quot;常量可以用来指定密钥代码。例如</target>
        </trans-unit>
        <trans-unit id="542ceac497d888731f108f54134d87b43e6e1e87" translate="yes" xml:space="preserve">
          <source>The &quot;void&quot; tag denotes a &lt;em&gt;statement&lt;/em&gt; which will be executed, but whose result will not be used as an argument to the enclosing method.</source>
          <target state="translated">&amp;ldquo; void&amp;rdquo;标记表示将要执行的&lt;em&gt;语句&lt;/em&gt;，但是其结果将不会用作封闭方法的参数。</target>
        </trans-unit>
        <trans-unit id="5413cb19ad08d0c83ec83a25d94198413a07db11" translate="yes" xml:space="preserve">
          <source>The &quot;widgets&quot; examples shown earlier shows how reduction combines with other operations to replace for loops with bulk operations. If &lt;code&gt;widgets&lt;/code&gt; is a collection of &lt;code&gt;Widget&lt;/code&gt; objects, which have a &lt;code&gt;getWeight&lt;/code&gt; method, we can find the heaviest widget with:</source>
          <target state="translated">前面显示的&amp;ldquo;窗口小部件&amp;rdquo;示例显示了减少操作如何与其他操作结合使用，以批量操作代替循环。如果 &lt;code&gt;widgets&lt;/code&gt; 是具有 &lt;code&gt;getWeight&lt;/code&gt; 方法的 &lt;code&gt;Widget&lt;/code&gt; 对象的集合，则可以使用以下命令找到最重的小部件：</target>
        </trans-unit>
        <trans-unit id="486adbc041dbce3b82611e2ccb70488eb3e94270" translate="yes" xml:space="preserve">
          <source>The &quot;widgets&quot; examples shown earlier shows how reduction combines with other operations to replace for-loops with bulk operations. If &lt;code&gt;widgets&lt;/code&gt; is a collection of &lt;code&gt;Widget&lt;/code&gt; objects, which have a &lt;code&gt;getWeight&lt;/code&gt; method, we can find the heaviest widget with:</source>
          <target state="translated">前面显示的&amp;ldquo;窗口小部件&amp;rdquo;示例显示了减少操作如何与其他操作结合起来，以批量操作替换for循环。如果 &lt;code&gt;widgets&lt;/code&gt; 是具有 &lt;code&gt;getWeight&lt;/code&gt; 方法的 &lt;code&gt;Widget&lt;/code&gt; 对象的集合，则可以使用以下命令找到最重的小部件：</target>
        </trans-unit>
        <trans-unit id="9ef7ea7bc7a6cc52453a4c0762bb67aa32d26c11" translate="yes" xml:space="preserve">
          <source>The &quot;window activated&quot; event type.</source>
          <target state="translated">窗口激活 &quot;事件类型。</target>
        </trans-unit>
        <trans-unit id="226427283659032d179c570438fad9fad0c92457" translate="yes" xml:space="preserve">
          <source>The &quot;window activated&quot; event type. This event indicates that keystrokes and mouse clicks are directed towards this internal frame.</source>
          <target state="translated">&quot;窗口激活 &quot;事件类型。该事件表示按键和鼠标点击都指向这个内部框架。</target>
        </trans-unit>
        <trans-unit id="cf5285f557eaed961f7b089388434d1897fd8d74" translate="yes" xml:space="preserve">
          <source>The &quot;window closed&quot; event.</source>
          <target state="translated">窗口关闭 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="0bd85abd28b81dd4e92f480fe6c4ffc04de9ae6a" translate="yes" xml:space="preserve">
          <source>The &quot;window closed&quot; event. This event is delivered after the internal frame has been closed as the result of a call to the &lt;code&gt;setClosed&lt;/code&gt; or &lt;code&gt;dispose&lt;/code&gt; method.</source>
          <target state="translated">&amp;ldquo;窗口关闭&amp;rdquo;事件。调用 &lt;code&gt;setClosed&lt;/code&gt; 或 &lt;code&gt;dispose&lt;/code&gt; 方法导致内部框架关闭后，将传递此事件。</target>
        </trans-unit>
        <trans-unit id="b02d8a38a7c497198054b98777fad1cda5bdb9c6" translate="yes" xml:space="preserve">
          <source>The &quot;window deactivated&quot; event type.</source>
          <target state="translated">窗口停用 &quot;的事件类型。</target>
        </trans-unit>
        <trans-unit id="f2fafc768c0f5cb1c334413348114360e836dc93" translate="yes" xml:space="preserve">
          <source>The &quot;window deactivated&quot; event type. This event indicates that keystrokes and mouse clicks are no longer directed to the internal frame.</source>
          <target state="translated">&quot;窗口停用 &quot;事件类型。该事件表示按键和鼠标点击不再指向内部框架。</target>
        </trans-unit>
        <trans-unit id="408bbda837c71da78c76f55730fb50a043774050" translate="yes" xml:space="preserve">
          <source>The &quot;window deiconified&quot; event type.</source>
          <target state="translated">窗口deiconified &quot;事件类型。</target>
        </trans-unit>
        <trans-unit id="52d2752f94b96c2494b60b46964d812e8cf6ba71" translate="yes" xml:space="preserve">
          <source>The &quot;window deiconified&quot; event type. This event indicates that the internal frame has been restored to its normal size.</source>
          <target state="translated">窗口deiconified &quot;事件类型。该事件表明内部框架已恢复到正常大小。</target>
        </trans-unit>
        <trans-unit id="fdc7911a6dbe466488c70a583cd5451f62271756" translate="yes" xml:space="preserve">
          <source>The &quot;window iconified&quot; event.</source>
          <target state="translated">窗口图标化 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="cd6ed970523e6e0baed21a463189d7232d4321f4" translate="yes" xml:space="preserve">
          <source>The &quot;window iconified&quot; event. This event indicates that the internal frame was shrunk down to a small icon.</source>
          <target state="translated">&quot;窗口图标化 &quot;事件。该事件表明内部框架被缩小为一个小图标。</target>
        </trans-unit>
        <trans-unit id="ada4fcc113683f29a8a6153c0c2bf59ae79df5ab" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event.</source>
          <target state="translated">窗口正在关闭 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="77cf40f7c82e26ae7cb58dc8fb5f7a97d962f1db" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event. This event is delivered when the user attempts to close the internal frame, such as by clicking the internal frame's close button, or when a program attempts to close the internal frame by invoking the &lt;code&gt;setClosed&lt;/code&gt; method.</source>
          <target state="translated">&amp;ldquo;窗口关闭&amp;rdquo;事件。当用户尝试关闭内部框架时（例如通过单击内部框架的关闭按钮），或者当程序通过调用 &lt;code&gt;setClosed&lt;/code&gt; 方法尝试关闭内部框架时，将传递此事件。</target>
        </trans-unit>
        <trans-unit id="2f70a4fb74eeed3e23a4b7140075a7623a0646be" translate="yes" xml:space="preserve">
          <source>The &quot;window is closing&quot; event. This event is delivered when the user attempts to close the window from the window's system menu. If the program does not explicitly hide or dispose the window while processing this event, the window close operation will be cancelled.</source>
          <target state="translated">窗口正在关闭 &quot;事件。当用户试图从窗口的系统菜单中关闭窗口时,就会发出该事件。如果程序在处理该事件时没有明确地隐藏或处理窗口,则窗口关闭操作将被取消。</target>
        </trans-unit>
        <trans-unit id="35b9ff91928feda93eb2bbd321ab8c5974e6a7a3" translate="yes" xml:space="preserve">
          <source>The &quot;window opened&quot; event.</source>
          <target state="translated">窗口打开 &quot;事件。</target>
        </trans-unit>
        <trans-unit id="812e0c735e5c1dec67159170fe8e4124fe33b906" translate="yes" xml:space="preserve">
          <source>The &quot;window opened&quot; event. This event is delivered only the first time the internal frame is made visible.</source>
          <target state="translated">窗口打开 &quot;事件。该事件仅在内部框架第一次被显示时才会发生。</target>
        </trans-unit>
        <trans-unit id="dd51a31f2fb3c35a53c40953e7b137610fa538ba" translate="yes" xml:space="preserve">
          <source>The '*' and '-' may only be specified in the final segment of a path and must be the only character in that segment. Any query or fragment components of the url are ignored when constructing URLPermissions.</source>
          <target state="translated">'*'和'-'只能在路径的最后一段指定,并且必须是该段中唯一的字符。当构建URLPermissions时,url的任何查询或片段组件都会被忽略。</target>
        </trans-unit>
        <trans-unit id="c3dd2c4f47449a4544b3de80cb83d745f1361cb0" translate="yes" xml:space="preserve">
          <source>The '*' character refers to all resources in the same &quot;directory&quot; - in other words all resources with the same number of path components, and which only differ in the final path component, represented by the '*'.</source>
          <target state="translated">'*'字符指的是同一 &quot;目录 &quot;中的所有资源--换句话说,所有资源的路径组件数量相同,只是最后的路径组件不同,用'*'表示。</target>
        </trans-unit>
        <trans-unit id="ee55a8c7a709fc6f43cb4acb7ee8a297e4b37cda" translate="yes" xml:space="preserve">
          <source>The '-' character refers to all resources recursively below the preceding path (e.g. http://www.example.com/a/b/c/d/e.html matches this example).</source>
          <target state="translated">'-'字符指的是前一个路径下面的所有资源(例如http://www.example.com/a/b/c/d/e.html 符合这个例子)。</target>
        </trans-unit>
        <trans-unit id="5b1a4b786fce275a14542316145f1ffc6265c6f2" translate="yes" xml:space="preserve">
          <source>The '-' character refers to all resources recursively below the preceding path (eg. http://www.oracle.com/a/b/c/d/e.html matches this example).</source>
          <target state="translated">'-'字符指的是前面路径下面的所有资源(例如,http://www.oracle.com/a/b/c/d/e.html 与本例匹配)。</target>
        </trans-unit>
        <trans-unit id="a61c324d5664eb3125e624c3e41910d6b8260976" translate="yes" xml:space="preserve">
          <source>The '-' is a literal (non-editable) character, and is skipped.</source>
          <target state="translated">'-'是一个字面意思(不可编辑)的字符,可以跳过。</target>
        </trans-unit>
        <trans-unit id="b9075ee33f640272d08ecfd74afcc317aa1feeee" translate="yes" xml:space="preserve">
          <source>The '_' character represents any single character; the '%' character represents any sequence of zero or more characters.</source>
          <target state="translated">'_'字符代表任何单个字符;'%'字符代表任何零或多个字符的序列。</target>
        </trans-unit>
        <trans-unit id="2d3d7549dcf0d83ed68ff060f89f99b12e4561e6" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence captured by the group during the previous match, or &lt;code&gt;null&lt;/code&gt; if the group failed to match part of the input</source>
          <target state="translated">该组在上一次匹配期间捕获的（可能为空）子序列；如果该组未能匹配输入的一部分，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f610b577e0d0c1aa68c7de09df91b0c3b1792629" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence captured by the named group during the previous match, or &lt;code&gt;null&lt;/code&gt; if the group failed to match part of the input</source>
          <target state="translated">命名组在上一次匹配期间捕获的（可能为空）子序列；如果该组未能匹配输入的一部分，则为 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b452ff3f7cd68722baf21b3005843847575b9ad" translate="yes" xml:space="preserve">
          <source>The (possibly empty) subsequence matched by the previous match, in string form</source>
          <target state="translated">前一个匹配项所匹配的(可能是空的)子序列,以字符串的形式出现。</target>
        </trans-unit>
        <trans-unit id="8341c85cf0c06e0be2262709eb4535bb0c5658b6" translate="yes" xml:space="preserve">
          <source>The (potentially null) Object whose notifyAll() method will be called immediately after the Runnable.run() method has returned or thrown an exception or after the event was disposed.</source>
          <target state="translated">其notifyAll()方法将在Runnable.run()方法返回或抛出异常后或事件被处理后立即被调用的(可能是空的)对象。</target>
        </trans-unit>
        <trans-unit id="03e6e28175ae241b91674d1ee7e9f6b8e22a39c6" translate="yes" xml:space="preserve">
          <source>The (user-accessible) request headers that this request was (or will be) sent with.</source>
          <target state="translated">这个请求被(或将被)发送的(用户可访问的)请求头。</target>
        </trans-unit>
        <trans-unit id="db8c98f744455c4ea33c3652417a8d4d6babb38a" translate="yes" xml:space="preserve">
          <source>The +90 direction was chosen because simple finishing on the long edge is the same edge whether portrait or landscape.</source>
          <target state="translated">之所以选择+90的方向,是因为在长边上进行简单的修饰,无论纵向还是横向都是一样的边。</target>
        </trans-unit>
        <trans-unit id="dc75f82aa609831b4e45d1280715e643c1e08fde" translate="yes" xml:space="preserve">
          <source>The 14 bit clock sequence value is constructed from the clock sequence field of this UUID. The clock sequence field is used to guarantee temporal uniqueness in a time-based UUID.</source>
          <target state="translated">14位的时钟序列值由该UUID的时钟序列字段构造而成。时钟序列字段用于保证基于时间的UUID的时间唯一性。</target>
        </trans-unit>
        <trans-unit id="9244f80a9a7b954470832171ad15b5298b7c6027" translate="yes" xml:space="preserve">
          <source>The 48 bit node value is constructed from the node field of this UUID. This field is intended to hold the IEEE 802 address of the machine that generated this UUID to guarantee spatial uniqueness.</source>
          <target state="translated">48位的节点值由该UUID的节点字段构造而成。该字段旨在保存生成该UUID的机器的IEEE 802地址,以保证空间上的唯一性。</target>
        </trans-unit>
        <trans-unit id="cf62656bdd2342ac213b17c11186efa9fdef0697" translate="yes" xml:space="preserve">
          <source>The 60 bit timestamp value is constructed from the time_low, time_mid, and time_hi fields of this &lt;code&gt;UUID&lt;/code&gt;. The resulting timestamp is measured in 100-nanosecond units since midnight, October 15, 1582 UTC.</source>
          <target state="translated">60位时间戳值是根据此 &lt;code&gt;UUID&lt;/code&gt; 的time_low，time_mid和time_hi字段构造的。自1582年10月15日午夜以来，所得的时间戳以100纳秒为单位进行测量。</target>
        </trans-unit>
        <trans-unit id="dece32256f323cee7e134d3087e518f2b7ddcafa" translate="yes" xml:space="preserve">
          <source>The 8 primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;
      long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;) are mapped to the corresponding boxed types from &lt;code&gt;java.lang&lt;/code&gt;, namely &lt;code&gt;
      Boolean&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt;, etc. The Open Type is the corresponding &lt;code&gt;SimpleType&lt;/code&gt;. Thus, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;
      long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;SimpleType.LONG&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;
      java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">8种基本Java类型（ &lt;code&gt;boolean&lt;/code&gt; ， &lt;code&gt;byte&lt;/code&gt; ， &lt;code&gt;short&lt;/code&gt; ， &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt; long&lt;/code&gt; ， &lt;code&gt;float&lt;/code&gt; ， &lt;code&gt;double&lt;/code&gt; ， &lt;code&gt;char&lt;/code&gt; ）被映射到相应的盒装类型从 &lt;code&gt;java.lang&lt;/code&gt; 中，即 &lt;code&gt; Boolean&lt;/code&gt; ， &lt;code&gt;Byte&lt;/code&gt; 等的开放类型是相应的 &lt;code&gt;SimpleType&lt;/code&gt; 的。因此，&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt; long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;是 &lt;code&gt;SimpleType.LONG&lt;/code&gt; ，&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;是 &lt;code&gt; java.lang.Long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5148f442500cb2e7c77d69481afbed4f322b7043" translate="yes" xml:space="preserve">
          <source>The 8 primitive Java types (&lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;byte&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;) are mapped to the corresponding boxed types from &lt;code&gt;java.lang&lt;/code&gt;, namely &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt;, etc. The Open Type is the corresponding &lt;code&gt;SimpleType&lt;/code&gt;. Thus, &lt;em&gt;opentype(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;SimpleType.LONG&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;java.lang.Long&lt;/code&gt;.</source>
          <target state="translated">8种基本Java类型（ &lt;code&gt;boolean&lt;/code&gt; ， &lt;code&gt;byte&lt;/code&gt; ， &lt;code&gt;short&lt;/code&gt; ， &lt;code&gt;int&lt;/code&gt; ， &lt;code&gt;long&lt;/code&gt; ， &lt;code&gt;float&lt;/code&gt; ， &lt;code&gt;double&lt;/code&gt; ， &lt;code&gt;char&lt;/code&gt; ）被映射到相应的盒装类型从 &lt;code&gt;java.lang&lt;/code&gt; 中，即 &lt;code&gt;Boolean&lt;/code&gt; ， &lt;code&gt;Byte&lt;/code&gt; 等的开放类型是相应的 &lt;code&gt;SimpleType&lt;/code&gt; 的。因此，&lt;em&gt;opentype（&lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;是 &lt;code&gt;SimpleType.LONG&lt;/code&gt; ，&lt;em&gt;opendata（&lt;/em&gt; &lt;code&gt;long&lt;/code&gt; &lt;em&gt;）&lt;/em&gt;是 &lt;code&gt;java.lang.Long&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a6b61faaf0fa15e874e7aa6036cb8bbc437bc046" translate="yes" xml:space="preserve">
          <source>The 800-90Ar1 specification allows for a variety of DRBG implementation choices, such as:</source>
          <target state="translated">800-90Ar1规范允许多种DRBG的实现选择,如:。</target>
        </trans-unit>
        <trans-unit id="9e58fb199b65ff39292af5a70bd8d9990914fb0a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;ObjID()&lt;/code&gt;&lt;/a&gt; constructor can be used to generate a unique object identifier. Such an &lt;code&gt;ObjID&lt;/code&gt; is unique over time with respect to the host it is generated on. The &lt;a href=&quot;#%3Cinit%3E(int)&quot;&gt;&lt;code&gt;ObjID(int)&lt;/code&gt;&lt;/a&gt; constructor can be used to create a &quot;well-known&quot; object identifier. The scope of a well-known &lt;code&gt;ObjID&lt;/code&gt; depends on the RMI runtime it is exported to.</source>
          <target state="translated">所述&lt;a href=&quot;#%3Cinit%3E()&quot;&gt; &lt;code&gt;ObjID()&lt;/code&gt; &lt;/a&gt;构造函数可以被用于产生一个唯一的对象标识符。相对于其生成的主机，这样的 &lt;code&gt;ObjID&lt;/code&gt; 随时间推移是唯一的。所述&lt;a href=&quot;#%3Cinit%3E(int)&quot;&gt; &lt;code&gt;ObjID(int)&lt;/code&gt; &lt;/a&gt;的构造可以被用来创建一个&amp;ldquo;公知&amp;rdquo;的对象标识符。众所周知的 &lt;code&gt;ObjID&lt;/code&gt; 的范围取决于将其导出到的RMI运行时。</target>
        </trans-unit>
        <trans-unit id="b4e3f86cc07101d3686dcbfa5a8ccabe930104d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;UID()&lt;/code&gt;&lt;/a&gt; constructor can be used to generate an identifier that is unique over time with respect to the host it is generated on. The &lt;a href=&quot;#%3Cinit%3E(short)&quot;&gt;&lt;code&gt;UID(short)&lt;/code&gt;&lt;/a&gt; constructor can be used to create one of 2&lt;sup&gt;16&lt;/sup&gt; well-known identifiers.</source>
          <target state="translated">的&lt;a href=&quot;#%3Cinit%3E()&quot;&gt; &lt;code&gt;UID()&lt;/code&gt; &lt;/a&gt;构造函数可以被用于产生一个标识符是唯一随时间相对于生成它的主机。的&lt;a href=&quot;#%3Cinit%3E(short)&quot;&gt; &lt;code&gt;UID(short)&lt;/code&gt; &lt;/a&gt;的构造可以用来创建的2一个&lt;sup&gt;16&lt;/sup&gt;公知的标识符。</target>
        </trans-unit>
        <trans-unit id="682311c69459705b6611d2116dd3a23ba37087d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;single-argument constructor&lt;/a&gt; requires any illegal characters in its argument to be quoted and preserves any escaped octets and</source>
          <target state="translated">该&lt;a href=&quot;#%3Cinit%3E(java.lang.String)&quot;&gt;单参数的构造函数&lt;/a&gt;，需要在它的参数中的任何非法字符被引用，并保留任何转义八位字节</target>
        </trans-unit>
        <trans-unit id="0d511e9cdd40f514d5106cf2ef66216314a29c9d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;multi-argument constructors&lt;/a&gt; quote illegal characters as required by the components in which they appear. The percent character (&lt;code&gt;'%'&lt;/code&gt;) is always quoted by these constructors. Any</source>
          <target state="translated">在&lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)&quot;&gt;多参数构造&lt;/a&gt;所要求的在它们出现的部件引用非法字符。这些构造函数始终引用百分号（ &lt;code&gt;'%'&lt;/code&gt; ）。任何</target>
        </trans-unit>
        <trans-unit id="12a6cdf59f396e7ede4167477fe96500e2984545" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#HOUR_OF_DAY&quot;&gt;&lt;code&gt;HOUR_OF_DAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#HOUR&quot;&gt;&lt;code&gt;HOUR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; fields are handled independently and the &lt;a href=&quot;#time_resolution&quot;&gt;the resolution rule for the time of day&lt;/a&gt; is applied. Clearing one of the fields doesn't reset the hour of day value of this &lt;code&gt;Calendar&lt;/code&gt;. Use &lt;a href=&quot;#set(int,int)&quot;&gt;&lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt;&lt;/a&gt; to reset the hour value.</source>
          <target state="translated">该&lt;a href=&quot;#HOUR_OF_DAY&quot;&gt; &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#HOUR&quot;&gt; &lt;code&gt;HOUR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#AM_PM&quot;&gt; &lt;code&gt;AM_PM&lt;/code&gt; &lt;/a&gt;字段的独立处理和&lt;a href=&quot;#time_resolution&quot;&gt;为一天中的时间分辨率规则&lt;/a&gt;被应用。清除其中一个字段不会重置此 &lt;code&gt;Calendar&lt;/code&gt; 的一天中的小时值。使用&lt;a href=&quot;#set(int,int)&quot;&gt; &lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt; &lt;/a&gt;重置小时值。</target>
        </trans-unit>
        <trans-unit id="1d3797757117e40a3e66974929944ba9d9f97b3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9f15ef683ec00288c71d3577bc42eb084e27f694" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f808d49e1dbf56a3c4398227f6b1e2bf8250f43f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_LOCAL_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;#ISO_LOCAL_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0c109d69bd2a94cc8708a4b92a21150d220aabd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56ea47af67300951fe2f7673e1da328222067840" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt; where the instant is converted from &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;UTC&lt;/code&gt; offset. Parsing is case insensitive.</source>
          <target state="translated">所述&lt;a href=&quot;#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;其中瞬间从转换&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;使用 &lt;code&gt;UTC&lt;/code&gt; 偏移。解析不区分大小写。</target>
        </trans-unit>
        <trans-unit id="6462b3412eddb31db3350f0bec08a7567c11bfe2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1. Later eras are numbered from 2 (&lt;a href=&quot;#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;)).</source>
          <target state="translated">包含1970-01-01（ISO日历系统）的&lt;a href=&quot;#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt;时代的值为1。以后的时代从2（&lt;a href=&quot;#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt;）开始编号。早期时代，编号为0（&lt;a href=&quot;#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt;）-1（&lt;a href=&quot;#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt;））。</target>
        </trans-unit>
        <trans-unit id="1218f5e11c1b0fbb96868c89e68629f6c6f31a8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#SHOW_HIDDEN_FRAMES&quot;&gt;&lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt;&lt;/a&gt; option can also be used to show all reflection frames and it will also show other hidden frames that are implementation-specific.</source>
          <target state="translated">该&lt;a href=&quot;#SHOW_HIDDEN_FRAMES&quot;&gt; &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; &lt;/a&gt;选项也可用于显示所有的反射框架，它也将显示其他隐藏的框架是实现特定的。</target>
        </trans-unit>
        <trans-unit id="c3d51ccaaa6c7526c0b9fe4eaa230ff7631e6c8e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; methods that do not otherwise have a value to return are specified to return the network channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">指定不具有返回值的&lt;a href=&quot;#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt;方法以返回在其上调用它们的网络通道。这样可以将方法调用链接在一起。此接口的实现应专用于返回类型，以便可以链接实现类上的方法调用。</target>
        </trans-unit>
        <trans-unit id="7b41cd732268ff9ba7ada77977453a57f1631483" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method determines whether the access request indicated by a specified permission should be granted or denied. A sample call appears below. In this example, &lt;code&gt;checkPermission&lt;/code&gt; will determine whether or not to grant &quot;read&quot; access to the file named &quot;testFile&quot; in the &quot;/temp&quot; directory.</source>
          <target state="translated">所述&lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;方法确定由指定的许可指示的访问请求是否应当被准许或拒绝。下面会出现一个示例调用。在此示例中， &lt;code&gt;checkPermission&lt;/code&gt; 将确定是否授予对&amp;ldquo; / temp&amp;rdquo;目录中名为&amp;ldquo; testFile&amp;rdquo;的文件的&amp;ldquo;读取&amp;rdquo;访问权限。</target>
        </trans-unit>
        <trans-unit id="fc21b8772df57e16a19a32de1251db03dac1b038" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method synchronizes on the selector and its selected-key set in the same order as in a selection operation.</source>
          <target state="translated">的&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法同步上的选择和它的以相同的顺序选择键集作为一个选择操作。</target>
        </trans-unit>
        <trans-unit id="0c452ba0c8c3a01125dbd7aa512ab0bb6267b570" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#defineModulesWithOneLoader(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;defineModulesWithOneLoader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt;&lt;/a&gt; methods provide convenient ways to create a module layer where all modules are mapped to a single class loader or where each module is mapped to its own class loader. The &lt;a href=&quot;#defineModules(java.lang.module.Configuration,java.util.function.Function)&quot;&gt;&lt;code&gt;defineModules&lt;/code&gt;&lt;/a&gt; method is for more advanced cases where modules are mapped to custom class loaders by means of a function specified to the method. Each of these methods has an instance and static variant. The instance methods create a layer with the receiver as the parent layer. The static methods are for more advanced cases where there can be more than one parent layer or where a &lt;a href=&quot;modulelayer.controller&quot;&gt;&lt;code&gt;Controller&lt;/code&gt;&lt;/a&gt; is needed to control modules in the layer</source>
          <target state="translated">的&lt;a href=&quot;#defineModulesWithOneLoader(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;defineModulesWithOneLoader&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#defineModulesWithManyLoaders(java.lang.module.Configuration,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;defineModulesWithManyLoaders&lt;/code&gt; &lt;/a&gt;方法提供方便的方式来创建，其中所有模块被映射到一个单一的类装载程序或其中，每个模块被映射到其自己的类加载器的模块层。该&lt;a href=&quot;#defineModules(java.lang.module.Configuration,java.util.function.Function)&quot;&gt; &lt;code&gt;defineModules&lt;/code&gt; &lt;/a&gt;方法对于其中模块通过指定的方法的功能的手段被映射到定制类加载器更高级的情况下。这些方法中的每一个都有一个实例和静态变量。实例方法创建一个以接收者为父层的层。静态方法适用于更高级的情况，其中可以有多个父层，或者需要一个&lt;a href=&quot;modulelayer.controller&quot;&gt; &lt;code&gt;Controller&lt;/code&gt; &lt;/a&gt;来控制该层中的模块</target>
        </trans-unit>
        <trans-unit id="8b028e1e9572581fd279877b772e9ad7c8a10ac0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#element()&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#peek()&quot;&gt;&lt;code&gt;peek()&lt;/code&gt;&lt;/a&gt; methods return, but do not remove, the head of the queue.</source>
          <target state="translated">该&lt;a href=&quot;#element()&quot;&gt; &lt;code&gt;element()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#peek()&quot;&gt; &lt;code&gt;peek()&lt;/code&gt; &lt;/a&gt;方法返回，但不移除，队列的头。</target>
        </trans-unit>
        <trans-unit id="59fe8ba28696ef3fa84a45d40a68ce4ad796fed3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#fillInStackTrace()&quot;&gt;&lt;code&gt;fillInStackTrace()&lt;/code&gt;&lt;/a&gt; method is called to initialize the stack trace data in the newly created throwable.</source>
          <target state="translated">所述&lt;a href=&quot;#fillInStackTrace()&quot;&gt; &lt;code&gt;fillInStackTrace()&lt;/code&gt; &lt;/a&gt;方法被调用在新创建的抛出初始化堆栈跟踪数据。</target>
        </trans-unit>
        <trans-unit id="65031d3365faff2695a182538e3b2421b65176cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#find()&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; method scans the input sequence looking for the next subsequence that matches the pattern.</source>
          <target state="translated">该&lt;a href=&quot;#find()&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;方法扫描寻找与模式匹配的下一个子输入序列。</target>
        </trans-unit>
        <trans-unit id="485afabc350f71204e8f4d536d46cdaf239de32b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#find(java.lang.String)&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#findAll()&quot;&gt;&lt;code&gt;findAll&lt;/code&gt;&lt;/a&gt; methods defined here can fail for several reasons. These include I/O errors, errors detected parsing a module descriptor (&lt;code&gt;module-info.class&lt;/code&gt;), or in the case of &lt;code&gt;ModuleFinder&lt;/code&gt; returned by &lt;a href=&quot;#of(java.nio.file.Path...)&quot;&gt;&lt;code&gt;ModuleFinder.of&lt;/code&gt;&lt;/a&gt;, that two or more modules with the same name are found in a directory. When an error is detected then these methods throw &lt;a href=&quot;findexception&quot;&gt;&lt;code&gt;FindException&lt;/code&gt;&lt;/a&gt; with an appropriate &lt;a href=&quot;../throwable#getCause()&quot;&gt;&lt;code&gt;cause&lt;/code&gt;&lt;/a&gt;. The behavior of a &lt;code&gt;ModuleFinder&lt;/code&gt; after a &lt;code&gt;FindException&lt;/code&gt; is thrown is undefined. For example, invoking &lt;code&gt;find&lt;/code&gt; after an exception is thrown may or may not scan the same modules that lead to the exception. It is recommended that a module finder be discarded after an exception is thrown.</source>
          <target state="translated">此处定义的&lt;a href=&quot;#find(java.lang.String)&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#findAll()&quot;&gt; &lt;code&gt;findAll&lt;/code&gt; &lt;/a&gt;方法可能由于多种原因而失败。这些包括I / O错误，在解析模块描述符（ &lt;code&gt;module-info.class&lt;/code&gt; ）时检测到的错误，或者在 &lt;code&gt;ModuleFinder&lt;/code&gt; .of返回&lt;a href=&quot;#of(java.nio.file.Path...)&quot;&gt; &lt;code&gt;ModuleFinder.of&lt;/code&gt; &lt;/a&gt;的情况下，在目录中找到了两个或更多个具有相同名称的模块。当检测到错误时，这些方法&lt;a href=&quot;findexception&quot;&gt; &lt;code&gt;FindException&lt;/code&gt; &lt;/a&gt;适当的&lt;a href=&quot;../throwable#getCause()&quot;&gt; &lt;code&gt;cause&lt;/code&gt; &lt;/a&gt;引发FindException。抛出 &lt;code&gt;ModuleFinder&lt;/code&gt; 后， &lt;code&gt;FindException&lt;/code&gt; 的行为是不确定的。例如，调用 &lt;code&gt;find&lt;/code&gt; 引发异常后，可能会或可能不会扫描导致异常的相同模块。建议在引发异常后丢弃模块查找器。</target>
        </trans-unit>
        <trans-unit id="a0be6cc5b803049be30b6393527056072d664d40" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#findInLine(java.lang.String)&quot;&gt;&lt;code&gt;findInLine()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt;&lt;code&gt;findWithinHorizon()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#skip(java.util.regex.Pattern)&quot;&gt;&lt;code&gt;skip()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#findAll(java.util.regex.Pattern)&quot;&gt;&lt;code&gt;findAll()&lt;/code&gt;&lt;/a&gt; methods operate independently of the delimiter pattern. These methods will attempt to match the specified pattern with no regard to delimiters in the input and thus can be used in special circumstances where delimiters are not relevant. These methods may block waiting for more input.</source>
          <target state="translated">所述&lt;a href=&quot;#findInLine(java.lang.String)&quot;&gt; &lt;code&gt;findInLine()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#findWithinHorizon(java.lang.String,int)&quot;&gt; &lt;code&gt;findWithinHorizon()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#skip(java.util.regex.Pattern)&quot;&gt; &lt;code&gt;skip()&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;#findAll(java.util.regex.Pattern)&quot;&gt; &lt;code&gt;findAll()&lt;/code&gt; &lt;/a&gt;方法中的分隔符图案的独立操作。这些方法将尝试匹配指定的模式而与输入中的分隔符无关，因此可以在分隔符不相关的特殊情况下使用。这些方法可能会阻止等待更多输入。</target>
        </trans-unit>
        <trans-unit id="76c75e1993d06be0c203f41c01f7c21dc08dea73" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#flags()&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentryflag&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; to indicate how entries are inherited and propagated</source>
          <target state="translated">该&lt;a href=&quot;#flags()&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;组件是一组&lt;a href=&quot;aclentryflag&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;指示条目如何继承和传播</target>
        </trans-unit>
        <trans-unit id="190f5e4e1c44c5bff240e5e10541bfc811769ca9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#floatdFlags&quot;&gt;default behavior&lt;/a&gt; when no flags are given is the same as for Float and Double.</source>
          <target state="translated">没有给出标志时的&lt;a href=&quot;#floatdFlags&quot;&gt;默认行为&lt;/a&gt;与Float和Double相同。</target>
        </trans-unit>
        <trans-unit id="8440ae8a2e8c8cb5abe641e67dc8c2628fb82898" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(double,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(double, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#format(long,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(long, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt;&lt;code&gt;parse(String, ParsePosition)&lt;/code&gt;&lt;/a&gt; methods may throw &lt;code&gt;NullPointerException&lt;/code&gt;, if any of their parameter is &lt;code&gt;null&lt;/code&gt;. The subclass may provide its own implementation and specification about &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;#format(double,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(double, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#format(long,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(long, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt; &lt;code&gt;parse(String, ParsePosition)&lt;/code&gt; &lt;/a&gt;方法可能抛出 &lt;code&gt;NullPointerException&lt;/code&gt; ，如果它们的任何参数为 &lt;code&gt;null&lt;/code&gt; 。子类可以提供自己的有关 &lt;code&gt;NullPointerException&lt;/code&gt; 的实现和规范。</target>
        </trans-unit>
        <trans-unit id="6ddeb2913f2a55c19f8bf8bdbf4bdad02909664b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt;&lt;code&gt;format(Date, StringBuffer, FieldPosition)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt;&lt;code&gt;parse(String, ParsePosition)&lt;/code&gt;&lt;/a&gt; methods may throw &lt;code&gt;NullPointerException&lt;/code&gt;, if any of their parameter is &lt;code&gt;null&lt;/code&gt;. The subclass may provide its own implementation and specification about &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">如果&lt;a href=&quot;#format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)&quot;&gt; &lt;code&gt;format(Date, StringBuffer, FieldPosition)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#parse(java.lang.String,java.text.ParsePosition)&quot;&gt; &lt;code&gt;parse(String, ParsePosition)&lt;/code&gt; &lt;/a&gt;方法的任何参数为 &lt;code&gt;null&lt;/code&gt; ，则可能抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 。子类可以提供自己的有关 &lt;code&gt;NullPointerException&lt;/code&gt; 的实现和规范。</target>
        </trans-unit>
        <trans-unit id="c35eba97249f91e14a4aa2e210793e65c3843e54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#format(java.util.Locale,java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; method for this object which has a locale argument does not change this value.</source>
          <target state="translated">具有语言环境参数的该对象的&lt;a href=&quot;#format(java.util.Locale,java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt;方法不会更改此值。</target>
        </trans-unit>
        <trans-unit id="2c86df6f2aba994c7c6bab473720f8bbcbca5a50" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; methods support multiple annotations of the same type on an element. If the argument to either method is a repeatable annotation type (JLS 9.6), then the method will &quot;look through&quot; a container annotation (JLS 9.7), if present, and return any annotations inside the container. Container annotations may be generated at compile-time to wrap multiple annotations of the argument type.</source>
          <target state="translated">所述&lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;的方法支持元件上的多个相同类型的注释。如果任一方法的参数都是可重复的注释类型（JLS 9.6），则该方法将&amp;ldquo;浏览&amp;rdquo;容器注释（JLS 9.7）（如果存在），并返回容器内部的所有注释。容器注释可以在编译时生成，以包装参数类型的多个注释。</target>
        </trans-unit>
        <trans-unit id="26e3ecdc3c9cecc99f848c86e3623862cae408e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; methods support multiple annotations of the same type on an element. If the argument to either method is a repeatable annotation type (JLS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-9.html#jls-9.6&quot;&gt;9.6&lt;/a&gt;), then the method will &quot;look through&quot; a container annotation (JLS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-9.html#jls-9.7&quot;&gt;9.7&lt;/a&gt;), if present, and return any annotations inside the container. Container annotations may be generated at compile-time to wrap multiple annotations of the argument type.</source>
          <target state="translated">所述&lt;a href=&quot;#getAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getDeclaredAnnotationsByType(java.lang.Class)&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;的方法支持元件上的多个相同类型的注释。如果这两种方法的参数都是可重复的注释类型（JLS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-9.html#jls-9.6&quot;&gt;9.6&lt;/a&gt;），则该方法将&amp;ldquo;浏览&amp;rdquo;容器注释（JLS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se15/html/jls-9.html#jls-9.7&quot;&gt;9.7&lt;/a&gt;）（如果存在），并返回容器内部的所有注释。容器注释可以在编译时生成，以包装参数类型的多个注释。</target>
        </trans-unit>
        <trans-unit id="fdab4d7eeb982b1f24089281c7dfb71b45783340" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getAttributes()&quot;&gt;&lt;code&gt;getAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getOperations()&quot;&gt;&lt;code&gt;getOperations()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getConstructors()&quot;&gt;&lt;code&gt;getConstructors()&lt;/code&gt;&lt;/a&gt; methods of the implementing class should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; respectively which implement the &lt;a href=&quot;openmbeanattributeinfo&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeanoperationinfo&quot;&gt;&lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;openmbeanconstructorinfo&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; interface respectively.</source>
          <target state="translated">实现类的&lt;a href=&quot;#getAttributes()&quot;&gt; &lt;code&gt;getAttributes()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getOperations()&quot;&gt; &lt;code&gt;getOperations()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getConstructors()&quot;&gt; &lt;code&gt;getConstructors()&lt;/code&gt; &lt;/a&gt;方法应在运行时分别返回&lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;子类的实例的数组，它们分别实现&lt;a href=&quot;openmbeanattributeinfo&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;openmbeanoperationinfo&quot;&gt; &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;openmbeanconstructorinfo&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="72faf261c7a536f2c59a574937656ff7b51fe043" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getBody()&quot;&gt;&lt;code&gt;getBody()&lt;/code&gt;&lt;/a&gt; method returns a &lt;a href=&quot;../../../../java.base/java/util/concurrent/completionstage&quot;&gt;&lt;code&gt;CompletionStage&lt;/code&gt;&lt;/a&gt;&amp;lt;&lt;code&gt;T&lt;/code&gt;&amp;gt; that provides the response body object. The &lt;code&gt;CompletionStage&lt;/code&gt; must be obtainable at any time. When it completes depends on the nature of type &lt;code&gt;T&lt;/code&gt;. In many cases, when &lt;code&gt;T&lt;/code&gt; represents the entire body after being consumed then the &lt;code&gt;CompletionStage&lt;/code&gt; completes after the body has been consumed. If &lt;code&gt;T&lt;/code&gt; is a streaming type, such as &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;, then it completes before the body has been read, because the calling code uses the &lt;code&gt;InputStream&lt;/code&gt; to consume the data.</source>
          <target state="translated">的&lt;a href=&quot;#getBody()&quot;&gt; &lt;code&gt;getBody()&lt;/code&gt; &lt;/a&gt;方法返回一个&lt;a href=&quot;../../../../java.base/java/util/concurrent/completionstage&quot;&gt; &lt;code&gt;CompletionStage&lt;/code&gt; &lt;/a&gt; &amp;lt; &lt;code&gt;T&lt;/code&gt; 提供所述响应体对象&amp;gt;。该 &lt;code&gt;CompletionStage&lt;/code&gt; 必须随时索取。它何时完成取决于类型 &lt;code&gt;T&lt;/code&gt; 的性质。在许多情况下，当 &lt;code&gt;T&lt;/code&gt; 被消耗后代表整个身体时，则在消耗 &lt;code&gt;CompletionStage&lt;/code&gt; 身体后CompletionStage会完成。如果 &lt;code&gt;T&lt;/code&gt; 是流类型，例如&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;，则它在读取正文之前完成，因为调用代码使用 &lt;code&gt;InputStream&lt;/code&gt; 消耗数据。</target>
        </trans-unit>
        <trans-unit id="2e1291a76ec559b2d29b8cd475884a4633cf2f6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getBody()&quot;&gt;&lt;code&gt;getBody()&lt;/code&gt;&lt;/a&gt; method returns a &lt;a href=&quot;../../../../java.base/java/util/concurrent/completionstage&quot;&gt;&lt;code&gt;CompletionStage&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; that provides the response body object. The &lt;code&gt;CompletionStage&lt;/code&gt; must be obtainable at any time. When it completes depends on the nature of type &lt;code&gt;T&lt;/code&gt;. In many cases, when &lt;code&gt;T&lt;/code&gt; represents the entire body after being consumed then the &lt;code&gt;CompletionStage&lt;/code&gt; completes after the body has been consumed. If &lt;code&gt;T&lt;/code&gt; is a streaming type, such as &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;, then it completes before the body has been read, because the calling code uses the &lt;code&gt;InputStream&lt;/code&gt; to consume the data.</source>
          <target state="translated">的&lt;a href=&quot;#getBody()&quot;&gt; &lt;code&gt;getBody()&lt;/code&gt; &lt;/a&gt;方法返回一个&lt;a href=&quot;../../../../java.base/java/util/concurrent/completionstage&quot;&gt; &lt;code&gt;CompletionStage&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&amp;lt;T&amp;gt;&lt;/code&gt; 提供所述响应体对象。该 &lt;code&gt;CompletionStage&lt;/code&gt; 必须随时索取。它何时完成取决于类型 &lt;code&gt;T&lt;/code&gt; 的性质。在许多情况下，当 &lt;code&gt;T&lt;/code&gt; 被消耗后代表整个身体时，则在消耗 &lt;code&gt;CompletionStage&lt;/code&gt; 身体后CompletionStage会完成。如果 &lt;code&gt;T&lt;/code&gt; 是流类型，例如&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;，则它在读取正文之前完成，因为调用代码使用 &lt;code&gt;InputStream&lt;/code&gt; 消耗数据。</target>
        </trans-unit>
        <trans-unit id="32435269bba763b6eed91c0fa1607a52b35430fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getCalendar()&quot;&gt;&lt;code&gt;getCalendar()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getNumberFormat()&quot;&gt;&lt;code&gt;getNumberFormat()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getTimeZone()&quot;&gt;&lt;code&gt;getTimeZone()&lt;/code&gt;&lt;/a&gt; methods may return &lt;code&gt;null&lt;/code&gt;, if the respective values of this instance is set to &lt;code&gt;null&lt;/code&gt; through the corresponding setter methods. For Example: &lt;a href=&quot;#getTimeZone()&quot;&gt;&lt;code&gt;getTimeZone()&lt;/code&gt;&lt;/a&gt; may return &lt;code&gt;null&lt;/code&gt;, if the &lt;code&gt;TimeZone&lt;/code&gt; value of this instance is set as &lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt;&lt;code&gt;setTimeZone(null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;#getCalendar()&quot;&gt; &lt;code&gt;getCalendar()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getNumberFormat()&quot;&gt; &lt;code&gt;getNumberFormat()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getTimeZone()&quot;&gt; &lt;code&gt;getTimeZone()&lt;/code&gt; &lt;/a&gt;方法可返回 &lt;code&gt;null&lt;/code&gt; ，如果此实例的相应值被设置为 &lt;code&gt;null&lt;/code&gt; 通过相应的设置方法。例如：如果此实例的 &lt;code&gt;TimeZone&lt;/code&gt; 值设置为&lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt; &lt;code&gt;setTimeZone(null)&lt;/code&gt; &lt;/a&gt;，则&lt;a href=&quot;#getTimeZone()&quot;&gt; &lt;code&gt;getTimeZone()&lt;/code&gt; &lt;/a&gt;可能返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d548ec1adba7df814c35c56a9d94e05c3e1227d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getDeclaringClass()&quot;&gt;&lt;code&gt;getDeclaringClass()&lt;/code&gt;&lt;/a&gt; method may be unsupported as determined by the &lt;a href=&quot;stackwalker.option&quot;&gt;stack walking options&lt;/a&gt; of a &lt;a href=&quot;stackwalker&quot;&gt;stack walker&lt;/a&gt;.</source>
          <target state="translated">的&lt;a href=&quot;#getDeclaringClass()&quot;&gt; &lt;code&gt;getDeclaringClass()&lt;/code&gt; &lt;/a&gt;通过所确定的方法可以是不受支持的&lt;a href=&quot;stackwalker.option&quot;&gt;堆栈遍历选项&lt;/a&gt;一个的&lt;a href=&quot;stackwalker&quot;&gt;堆叠步行者&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d4c01e514a6c723b1c356309d3d13365f6f6cf37" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getFileStores()&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method returns an iterator over the underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;file-stores&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#getFileStores()&quot;&gt; &lt;code&gt;getFileStores&lt;/code&gt; &lt;/a&gt;方法返回在底层的迭代器&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;file-stores&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e2fd79ed77ea552ff89f8d8ead155a3581da1522" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getIterator(javax.swing.text.html.HTML.Tag)&quot;&gt;&lt;code&gt;getIterator(HTML.Tag t)&lt;/code&gt;&lt;/a&gt; method can also be used for finding all occurrences of the specified HTML tag in the document.</source>
          <target state="translated">的&lt;a href=&quot;#getIterator(javax.swing.text.html.HTML.Tag)&quot;&gt; &lt;code&gt;getIterator(HTML.Tag t)&lt;/code&gt; &lt;/a&gt;方法也可用于寻找指定的HTML标签的所有出现在文档中。</target>
        </trans-unit>
        <trans-unit id="3300fd87f6f8a6538e519485e93d458bc5394918" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getOwner()&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods may be used to read or update the owner of the file.</source>
          <target state="translated">所述&lt;a href=&quot;#getOwner()&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法可用于读取或更新的文件的所有者。</target>
        </trans-unit>
        <trans-unit id="64901b8451e1c8852e7089d807ed5f8258270d8e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPath(java.lang.String,java.lang.String...)&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method converts a system dependent &lt;em&gt;path string&lt;/em&gt;, returning a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object that may be used to locate and access a file.</source>
          <target state="translated">所述&lt;a href=&quot;#getPath(java.lang.String,java.lang.String...)&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;方法转换一个依赖于系统的&lt;em&gt;路径字符串&lt;/em&gt;，返回一个&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;可被用于定位和访问的文件对象。</target>
        </trans-unit>
        <trans-unit id="8fd2d9f74ec9cdead2e0184fbf49aa9ddf9115b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPathMatcher(java.lang.String)&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method is used to create a &lt;a href=&quot;pathmatcher&quot;&gt;&lt;code&gt;PathMatcher&lt;/code&gt;&lt;/a&gt; that performs match operations on paths.</source>
          <target state="translated">该&lt;a href=&quot;#getPathMatcher(java.lang.String)&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt;方法被用来创建一个&lt;a href=&quot;pathmatcher&quot;&gt; &lt;code&gt;PathMatcher&lt;/code&gt; &lt;/a&gt;执行匹配的路径的操作。</target>
        </trans-unit>
        <trans-unit id="a560f4cd636efba36278b039e9aa6637d4fa976d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPeerCertificates()&quot;&gt;&lt;code&gt;getPeerCertificates()&lt;/code&gt;&lt;/a&gt; method that returns an array of &lt;code&gt;java.security.cert.Certificate&lt;/code&gt; should be used instead.</source>
          <target state="translated">应该改用返回 &lt;code&gt;java.security.cert.Certificate&lt;/code&gt; 数组的&lt;a href=&quot;#getPeerCertificates()&quot;&gt; &lt;code&gt;getPeerCertificates()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="313bda01207414193392bffc5273876e5116943a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformClassLoader()&quot;&gt;&lt;code&gt;platform class loader&lt;/code&gt;&lt;/a&gt; may delegate to the application class loader but the application class loader is not its ancestor. When invoked on the platform class loader, this method will not find packages defined to the application class loader.</source>
          <target state="translated">该&lt;a href=&quot;#getPlatformClassLoader()&quot;&gt; &lt;code&gt;platform class loader&lt;/code&gt; &lt;/a&gt;可授权的应用程序类加载器，但应用类加载器是不是它的祖先。在平台类加载器上调用时，此方法将找不到定义到应用程序类加载器的程序包。</target>
        </trans-unit>
        <trans-unit id="0c93939323354c73ed8f0956cf1175a9c81572a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformClassLoader()&quot;&gt;&lt;code&gt;platform class loader&lt;/code&gt;&lt;/a&gt; may delegate to the application class loader. In other words, packages in modules defined to the application class loader may be visible to the platform class loader. On the other hand, the application class loader is not its ancestor and hence when invoked on the platform class loader, this method will not return any packages defined to the application class loader.</source>
          <target state="translated">该&lt;a href=&quot;#getPlatformClassLoader()&quot;&gt; &lt;code&gt;platform class loader&lt;/code&gt; &lt;/a&gt;可授权应用程序类加载器。换句话说，定义给应用程序类加载器的模块中的程序包对于平台类加载器可能是可见的。另一方面，应用程序类加载器不是其祖先，因此在平台类加载器上调用时，此方法不会将任何定义的包返回给应用程序类加载器。</target>
        </trans-unit>
        <trans-unit id="457ebe76737264b01c1e1c27299d64cf99dbc43d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getPlatformManagementInterfaces()&quot;&gt;&lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt;&lt;/a&gt; method returns all management interfaces supported in the Java virtual machine including the standard management interfaces listed in the tables below as well as the management interfaces extended by the JDK implementation.</source>
          <target state="translated">该&lt;a href=&quot;#getPlatformManagementInterfaces()&quot;&gt; &lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt; &lt;/a&gt;方法返回在Java虚拟机包括下面的表以及通过JDK实现扩展管理接口中列出的标准管理接口，所支持的所有管理接口。</target>
        </trans-unit>
        <trans-unit id="84b83e16e7d300b2d7773bc228f8821d4fecf3d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRawUserInfo()&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawPath()&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawQuery()&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawFragment()&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getRawAuthority()&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods return the values of their corresponding components in raw form, without interpreting any escaped octets. The strings returned by these methods may contain both escaped octets and</source>
          <target state="translated">的&lt;a href=&quot;#getRawUserInfo()&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getRawPath()&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getRawQuery()&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getRawFragment()&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getRawAuthority()&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getRawSchemeSpecificPart()&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; &lt;/a&gt;方法返回原始形式及其相应的分量的值，而不用解释任何转义八位组。这些方法返回的字符串可能同时包含转义八位字节和</target>
        </trans-unit>
        <trans-unit id="891cbbb7b678ed269448de3333f3c927fe5fa40f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRemaining()&quot;&gt;remaining byte count&lt;/a&gt; will be reduced by the number of consumed input bytes. If the &lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;setInput(ByteBuffer)&lt;/code&gt;&lt;/a&gt; method was called to provide a buffer for input, the input buffer's position will be advanced the number of consumed bytes.</source>
          <target state="translated">所述&lt;a href=&quot;#getRemaining()&quot;&gt;剩余的字节计数&lt;/a&gt;将通过消耗输入的字节数被减少。如果调用&lt;a href=&quot;#setInput(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;setInput(ByteBuffer)&lt;/code&gt; &lt;/a&gt;方法为输入提供缓冲区，则输入缓冲区的位置将增加已消耗字节数。</target>
        </trans-unit>
        <trans-unit id="71a5ae33e22c851a1c1a637a5ed40b081c469403" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRevocationChecker()&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathBuilder&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">使用&lt;a href=&quot;#getRevocationChecker()&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;方法，应用程序可以在检查证书的吊销状态时指定 &lt;code&gt;CertPathBuilder&lt;/code&gt; 使用的其他特定于算法的参数和选项。这是一个示例，演示如何将其与PKIX算法结合使用：</target>
        </trans-unit>
        <trans-unit id="6225f57b6a8a1feec5ebc1ed8607b650f0217212" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getRevocationChecker()&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathValidator&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">使用&lt;a href=&quot;#getRevocationChecker()&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;方法，应用程序可以在检查证书的吊销状态时指定 &lt;code&gt;CertPathValidator&lt;/code&gt; 使用的其他特定于算法的参数和选项。这是一个示例，演示如何将其与PKIX算法结合使用：</target>
        </trans-unit>
        <trans-unit id="8330d802646a04e518219a971d7d2f79724a3ffd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getSignature()&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">所述&lt;a href=&quot;#getSignature()&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt;方法应在运行时返回的子类的实例的数组&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;它实现了&lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; &lt;/a&gt;接口（通常为&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="31af394073090130fd1f8beb5c75278aebe2c90d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getSourceRegion(javax.imageio.ImageReadParam,int,int)&quot;&gt;&lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt;&lt;/a&gt; method may be used if only source clipping is desired.</source>
          <target state="translated">所述&lt;a href=&quot;#getSourceRegion(javax.imageio.ImageReadParam,int,int)&quot;&gt; &lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt; &lt;/a&gt;如果仅源削波需要，可以使用方法。</target>
        </trans-unit>
        <trans-unit id="6826382276a67d54297a06127ee3b75d9f038626" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getSuperclass()&quot;&gt;direct superclass&lt;/a&gt; of a record class is &lt;code&gt;java.lang.Record&lt;/code&gt;. A record class has (possibly zero) record components, that is, &lt;a href=&quot;#getRecordComponents()&quot;&gt;&lt;code&gt;getRecordComponents()&lt;/code&gt;&lt;/a&gt; returns a non-null value.</source>
          <target state="translated">记录类的&lt;a href=&quot;#getSuperclass()&quot;&gt;直接超&lt;/a&gt;类是 &lt;code&gt;java.lang.Record&lt;/code&gt; 。记录类具有（可能为零）记录组件，即&lt;a href=&quot;#getRecordComponents()&quot;&gt; &lt;code&gt;getRecordComponents()&lt;/code&gt; &lt;/a&gt;返回一个非null值。</target>
        </trans-unit>
        <trans-unit id="83d43fd9e2a48582721d6f9affffd5098ee4bec9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUsage()&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method provides an estimate of the current usage of a memory pool. For a garbage-collected memory pool, the amount of used memory includes the memory occupied by all objects in the pool including both &lt;em&gt;reachable&lt;/em&gt; and &lt;em&gt;unreachable&lt;/em&gt; objects.</source>
          <target state="translated">所述&lt;a href=&quot;#getUsage()&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt;方法提供了存储器池的当前使用情况的估计。对于垃圾回收的内存池，已用内存量包括池中所有对象（包括&lt;em&gt;可&lt;/em&gt;&lt;em&gt;访问&lt;/em&gt;对象和&lt;em&gt;不可访问&lt;/em&gt;对象）占用的内存。</target>
        </trans-unit>
        <trans-unit id="559aadec9e879fc10fa12147be2c7e895971e5af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUserInfo()&quot;&gt;&lt;code&gt;getUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getPath()&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getQuery()&quot;&gt;&lt;code&gt;getQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getFragment()&quot;&gt;&lt;code&gt;getFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getAuthority()&quot;&gt;&lt;code&gt;getAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getSchemeSpecificPart()&quot;&gt;&lt;code&gt;getSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods decode any escaped octets in their corresponding components. The strings returned by these methods may contain both</source>
          <target state="translated">的&lt;a href=&quot;#getUserInfo()&quot;&gt; &lt;code&gt;getUserInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getPath()&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getQuery()&quot;&gt; &lt;code&gt;getQuery&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getFragment()&quot;&gt; &lt;code&gt;getFragment&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getAuthority()&quot;&gt; &lt;code&gt;getAuthority&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getSchemeSpecificPart()&quot;&gt; &lt;code&gt;getSchemeSpecificPart&lt;/code&gt; &lt;/a&gt;方法是以其相应的部件解码任何转义八位组。这些方法返回的字符串可能包含</target>
        </trans-unit>
        <trans-unit id="c1ecc682c394d5429ead1bc5e6b032e53a1e3cfd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#getUserPrincipalLookupService()&quot;&gt;&lt;code&gt;getUserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; to lookup users or groups by name.</source>
          <target state="translated">该&lt;a href=&quot;#getUserPrincipalLookupService()&quot;&gt; &lt;code&gt;getUserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;方法返回&lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;按名称查找用户或组。</target>
        </trans-unit>
        <trans-unit id="745b9cdeea817364e334364a39d0a45c736ab00e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isCollectionUsageThresholdSupported()&quot;&gt;&lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if this functionality is supported.</source>
          <target state="translated">所述&lt;a href=&quot;#isCollectionUsageThresholdSupported()&quot;&gt; &lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否支持该功能。</target>
        </trans-unit>
        <trans-unit id="90fec33b491d33702594f93509a72af9d3f5cb90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isProxyClass(java.lang.Class)&quot;&gt;&lt;code&gt;Proxy.isProxyClass&lt;/code&gt;&lt;/a&gt; method can be used to determine if a given class is a proxy class.</source>
          <target state="translated">该&lt;a href=&quot;#isProxyClass(java.lang.Class)&quot;&gt; &lt;code&gt;Proxy.isProxyClass&lt;/code&gt; &lt;/a&gt;方法可用于确定给定的类是一个代理类。</target>
        </trans-unit>
        <trans-unit id="2c598e99d45cbbe9a04f38fa8dc91096cbd3a7d8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isThreadContentionMonitoringSupported()&quot;&gt;&lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports thread contention monitoring. The thread contention monitoring is disabled by default. The &lt;a href=&quot;#setThreadContentionMonitoringEnabled(boolean)&quot;&gt;&lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt;&lt;/a&gt; method can be used to enable thread contention monitoring.</source>
          <target state="translated">所述&lt;a href=&quot;#isThreadContentionMonitoringSupported()&quot;&gt; &lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否一个Java虚拟机支持线程争用监视。默认情况下，线程争用监视处于禁用状态。所述&lt;a href=&quot;#setThreadContentionMonitoringEnabled(boolean)&quot;&gt; &lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt; &lt;/a&gt;方法可用于启用线程争用监视。</target>
        </trans-unit>
        <trans-unit id="7b9631e9f6d40e6b620e784137534f813361a172" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for any thread. The &lt;a href=&quot;#isCurrentThreadCpuTimeSupported()&quot;&gt;&lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for the current thread. A Java virtual machine implementation that supports CPU time measurement for any thread will also support that for the current thread.</source>
          <target state="translated">所述&lt;a href=&quot;#isThreadCpuTimeSupported()&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否一个Java虚拟机支持测量的CPU时间的任何线程。所述&lt;a href=&quot;#isCurrentThreadCpuTimeSupported()&quot;&gt; &lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否一个Java虚拟机支持当前线程测量的CPU时间。支持任何线程的CPU时间测量的Java虚拟机实现也将支持当前线程的时间。</target>
        </trans-unit>
        <trans-unit id="07a942a3ea7a2470fc40b97213df775f8393b88e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface)&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt;&lt;/a&gt; method is used to join a group and receive all multicast datagrams sent to the group. A channel may join several multicast groups and may join the same group on several &lt;a href=&quot;../../net/networkinterface&quot;&gt;&lt;code&gt;interfaces&lt;/code&gt;&lt;/a&gt;. Membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method on the returned &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt;. If the underlying platform supports source filtering then the &lt;a href=&quot;membershipkey#block(java.net.InetAddress)&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;membershipkey#unblock(java.net.InetAddress)&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="translated">在&lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface)&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt; &lt;/a&gt;方法用于加入组和接收发送到该组的所有多播数据报。通道可以加入多个多播组，也可以在多个&lt;a href=&quot;../../net/networkinterface&quot;&gt; &lt;code&gt;interfaces&lt;/code&gt; &lt;/a&gt;上加入相同的组。通过调用返回的&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt;上的&lt;a href=&quot;membershipkey#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;方法来删除成员资格。如果基础平台支持源过滤，则可以使用&lt;a href=&quot;membershipkey#block(java.net.InetAddress)&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;membershipkey#unblock(java.net.InetAddress)&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt;方法来阻止或取消阻止来自特定源地址的多播数据报。</target>
        </trans-unit>
        <trans-unit id="9227e6048eb60c8fc84d7128ee8ee2b101cf46af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt;&lt;/a&gt; method is used to begin receiving datagrams sent to a group whose source address matches a given source address. This method throws &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if the underlying platform does not support source filtering. Membership is &lt;em&gt;cumulative&lt;/em&gt; and this method may be invoked again with the same group and interface to allow receiving datagrams from other source addresses. The method returns a &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt; that represents membership to receive datagrams from the given source address. Invoking the key's &lt;a href=&quot;membershipkey#drop()&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method drops membership so that datagrams from the source address can no longer be received.</source>
          <target state="translated">在&lt;a href=&quot;#join(java.net.InetAddress,java.net.NetworkInterface,java.net.InetAddress)&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt; &lt;/a&gt;方法被用于开始接收发送到其源地址给定的源地址相匹配的一组数据报。如果基础平台不支持源筛选，则此方法将引发&lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;。成员资格是&lt;em&gt;累积性的&lt;/em&gt;，可以使用相同的组和接口再次调用此方法，以允许从其他源地址接收数据报。该方法返回一个&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt;，该成员资格表示表示从给定源地址接收数据报的成员身份。调用键的&lt;a href=&quot;membershipkey#drop()&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;方法会删除成员资格，这样就无法再接收来自源地址的数据报。</target>
        </trans-unit>
        <trans-unit id="283c2ba216ecb30af2542116821ebfc3dd6848c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#load(java.io.Reader)&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;#store(java.io.Writer,java.lang.String)&quot;&gt;&lt;code&gt;store(Writer, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties from and to a character based stream in a simple line-oriented format specified below. The &lt;a href=&quot;#load(java.io.InputStream)&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;#store(java.io.OutputStream,java.lang.String)&quot;&gt;&lt;code&gt;store(OutputStream, String)&lt;/code&gt;&lt;/a&gt; methods work the same way as the load(Reader)/store(Writer, String) pair, except the input/output stream is encoded in ISO 8859-1 character encoding. Characters that cannot be directly represented in this encoding can be written using Unicode escapes as defined in section 3.3 of</source>
          <target state="translated">所述&lt;a href=&quot;#load(java.io.Reader)&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;#store(java.io.Writer,java.lang.String)&quot;&gt; &lt;code&gt;store(Writer, String)&lt;/code&gt; &lt;/a&gt;从和向基于字符的流中的一个简单的面向行的格式的方法加载和存储属性规定如下。所述&lt;a href=&quot;#load(java.io.InputStream)&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;#store(java.io.OutputStream,java.lang.String)&quot;&gt; &lt;code&gt;store(OutputStream, String)&lt;/code&gt; &lt;/a&gt;的方法的工作方式为负载（读取器）/存储（作家，字符串）一对相同的，除了输入/输出流在ISO 8859-1字符编码进行编码。不能使用此编码直接表示的字符可以使用Unicode转义来编写，如第3.3节中所定义</target>
        </trans-unit>
        <trans-unit id="6c64782820ca91ace54f1f86ea9f86492a8d8863" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#loadFromXML(java.io.InputStream)&quot;&gt;&lt;code&gt;loadFromXML(InputStream)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties in a simple XML format. By default the UTF-8 character encoding is used, however a specific encoding may be specified if required. Implementations are required to support UTF-8 and UTF-16 and may support other encodings. An XML properties document has the following DOCTYPE declaration:</source>
          <target state="translated">所述&lt;a href=&quot;#loadFromXML(java.io.InputStream)&quot;&gt; &lt;code&gt;loadFromXML(InputStream)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt; &lt;/a&gt;在一个简单的XML格式方法加载和存储属性。默认情况下，使用UTF-8字符编码，但是如果需要，可以指定特定的编码。需要支持UTF-8和UTF-16的实现，并且可能支持其他编码。XML属性文档具有以下DOCTYPE声明：</target>
        </trans-unit>
        <trans-unit id="ff9a153b92e71fa09c965e8f74027cdf39942b60" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lock&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; used to synchronize operations on the returned &lt;code&gt;Reader&lt;/code&gt; is not specified.</source>
          <target state="translated">未指定用于对返回的 &lt;code&gt;Reader&lt;/code&gt; 进行同步操作的&lt;a href=&quot;#lock&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6ea5963a2b34831a1c71c2fbc0dd2b148d5c67d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lock&quot;&gt;&lt;code&gt;object&lt;/code&gt;&lt;/a&gt; used to synchronize operations on the returned &lt;code&gt;Writer&lt;/code&gt; is not specified.</source>
          <target state="translated">未指定用于对返回的 &lt;code&gt;Writer&lt;/code&gt; 进行同步操作的&lt;a href=&quot;#lock&quot;&gt; &lt;code&gt;object&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="84550bbdc380964aefe4e00daea2a1ea69eda243" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lookingAt()&quot;&gt;&lt;code&gt;lookingAt&lt;/code&gt;&lt;/a&gt; method attempts to match the input sequence, starting at the beginning, against the pattern.</source>
          <target state="translated">该&lt;a href=&quot;#lookingAt()&quot;&gt; &lt;code&gt;lookingAt&lt;/code&gt; &lt;/a&gt;方法企图以匹配输入序列，起始于开始时，对所述图案。</target>
        </trans-unit>
        <trans-unit id="e15947d08b1cf61f32694c5aa54059625b82e3ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt; for this &lt;code&gt;Lookup&lt;/code&gt; must include &lt;a href=&quot;#hasFullPrivilegeAccess()&quot;&gt;full privilege&lt;/a&gt; access. This level of access is needed to create &lt;code&gt;C&lt;/code&gt; in the module of the lookup class of this &lt;code&gt;Lookup&lt;/code&gt;.</source>
          <target state="translated">在&lt;a href=&quot;#lookupModes()&quot;&gt;查找模式&lt;/a&gt;此 &lt;code&gt;Lookup&lt;/code&gt; 必须包含&lt;a href=&quot;#hasFullPrivilegeAccess()&quot;&gt;完全权限&lt;/a&gt;的访问。在此 &lt;code&gt;Lookup&lt;/code&gt; 的lookup类的模块中创建 &lt;code&gt;C&lt;/code&gt; 需要此访问级别。</target>
        </trans-unit>
        <trans-unit id="78c866a477b89a46ec489346a183a845bc204d84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt; for this lookup must include &lt;a href=&quot;#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt; access as default (package) members will be accessible to the class. The &lt;code&gt;PACKAGE&lt;/code&gt; lookup mode serves to authenticate that the lookup object was created by a caller in the runtime package (or derived from a lookup originally created by suitably privileged code to a target class in the runtime package).</source>
          <target state="translated">该&lt;a href=&quot;#lookupModes()&quot;&gt;查找的查找模式&lt;/a&gt;必须包括&lt;a href=&quot;#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt;访问权限，因为该类可以访问默认（包）成员。所述 &lt;code&gt;PACKAGE&lt;/code&gt; 查找模式用于认证该查找目的通过在运行时包呼叫者创建（或从最初由适当特权代码在运行时包创建目标类的查找导出）。</target>
        </trans-unit>
        <trans-unit id="af8af1d74c30b23540127f0b0b432dad9af185a7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#matches()&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method attempts to match the entire input sequence against the pattern.</source>
          <target state="translated">该&lt;a href=&quot;#matches()&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt;方法的尝试来匹配图案中的整个输入序列。</target>
        </trans-unit>
        <trans-unit id="9cf613d99e0fc77707140b31310fa50f3b661bdc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#newWatchService()&quot;&gt;&lt;code&gt;newWatchService&lt;/code&gt;&lt;/a&gt; method creates a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; that may be used to watch objects for changes and events.</source>
          <target state="translated">该&lt;a href=&quot;#newWatchService()&quot;&gt; &lt;code&gt;newWatchService&lt;/code&gt; &lt;/a&gt;方法创建一个&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt;可用于观看的变化和事件的对象。</target>
        </trans-unit>
        <trans-unit id="0f2779d651def565116a29cb04d620dbba2f2dd2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hasNext()&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; methods and their companion methods (such as &lt;a href=&quot;#nextInt()&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#hasNextInt()&quot;&gt;&lt;code&gt;hasNextInt()&lt;/code&gt;&lt;/a&gt;) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both &lt;code&gt;hasNext()&lt;/code&gt; and &lt;code&gt;next()&lt;/code&gt; methods may block waiting for further input. Whether a &lt;code&gt;hasNext()&lt;/code&gt; method blocks has no connection to whether or not its associated &lt;code&gt;next()&lt;/code&gt; method will block. The &lt;a href=&quot;#tokens()&quot;&gt;&lt;code&gt;tokens()&lt;/code&gt;&lt;/a&gt; method may also block waiting for input.</source>
          <target state="translated">的&lt;a href=&quot;#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#hasNext()&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt;方法及其同伴方法（如&lt;a href=&quot;#nextInt()&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#hasNextInt()&quot;&gt; &lt;code&gt;hasNextInt()&lt;/code&gt; &lt;/a&gt;）首先跳过与分隔符模式匹配的任何输入，然后尝试返回下一个标记。既 &lt;code&gt;hasNext()&lt;/code&gt; 和 &lt;code&gt;next()&lt;/code&gt; 方法可阻塞等待进一步的输入。是否 &lt;code&gt;hasNext()&lt;/code&gt; 方法嵌段具有到其相关联是否无连接 &lt;code&gt;next()&lt;/code&gt; 方法将阻塞。所述&lt;a href=&quot;#tokens()&quot;&gt; &lt;code&gt;tokens()&lt;/code&gt; &lt;/a&gt;方法也可能会阻塞等待输入。</target>
        </trans-unit>
        <trans-unit id="a4eabcb070201104bd4072f1fbef69e32c7ed568" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of()&quot;&gt;&lt;code&gt;Map.of&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ofEntries(java.util.Map.Entry...)&quot;&gt;&lt;code&gt;Map.ofEntries&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#copyOf(java.util.Map)&quot;&gt;&lt;code&gt;Map.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable maps. The &lt;code&gt;Map&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">该&lt;a href=&quot;#of()&quot;&gt; &lt;code&gt;Map.of&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#ofEntries(java.util.Map.Entry...)&quot;&gt; &lt;code&gt;Map.ofEntries&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#copyOf(java.util.Map)&quot;&gt; &lt;code&gt;Map.copyOf&lt;/code&gt; &lt;/a&gt;静态工厂方法提供了一种方便的方法来创建不可修改的地图。这些方法创建的 &lt;code&gt;Map&lt;/code&gt; 实例具有以下特征：</target>
        </trans-unit>
        <trans-unit id="5a3652c966b080da38bf2f411dad00b6802884ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of(E...)&quot;&gt;&lt;code&gt;List.of&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt;&lt;code&gt;List.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable lists. The &lt;code&gt;List&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">该&lt;a href=&quot;#of(E...)&quot;&gt; &lt;code&gt;List.of&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt; &lt;code&gt;List.copyOf&lt;/code&gt; &lt;/a&gt;静态工厂方法提供了一种方便的方式来创建不可修改的列表。这些方法创建的 &lt;code&gt;List&lt;/code&gt; 实例具有以下特征：</target>
        </trans-unit>
        <trans-unit id="b75ebf0e3eb357a1a5138bef731809fcdcfbdf5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#of(E...)&quot;&gt;&lt;code&gt;Set.of&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt;&lt;code&gt;Set.copyOf&lt;/code&gt;&lt;/a&gt; static factory methods provide a convenient way to create unmodifiable sets. The &lt;code&gt;Set&lt;/code&gt; instances created by these methods have the following characteristics:</source>
          <target state="translated">该&lt;a href=&quot;#of(E...)&quot;&gt; &lt;code&gt;Set.of&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#copyOf(java.util.Collection)&quot;&gt; &lt;code&gt;Set.copyOf&lt;/code&gt; &lt;/a&gt;静态工厂方法提供了一种方便的方法来创建不可修改的集合。这些方法创建的 &lt;code&gt;Set&lt;/code&gt; 实例具有以下特征：</target>
        </trans-unit>
        <trans-unit id="fc4145739906a5fafcf27e7b758feb7e10fa3e1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#offer(E)&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt; method inserts an element if possible, otherwise returning &lt;code&gt;false&lt;/code&gt;. This differs from the &lt;a href=&quot;collection#add(E)&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt; method, which can fail to add an element only by throwing an unchecked exception. The &lt;code&gt;offer&lt;/code&gt; method is designed for use when failure is a normal, rather than exceptional occurrence, for example, in fixed-capacity (or &quot;bounded&quot;) queues.</source>
          <target state="translated">所述&lt;a href=&quot;#offer(E)&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;如果可能的方法插入一个元件，否则返回 &lt;code&gt;false&lt;/code&gt; 。这不同于&lt;a href=&quot;collection#add(E)&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt;方法，后者只能通过引发未经检查的异常来添加元素。该 &lt;code&gt;offer&lt;/code&gt; 的方法设计用于当故障是正常的，而不是特殊的发生，例如，在固定容量（或&amp;ldquo;有界&amp;rdquo;）队列。</target>
        </trans-unit>
        <trans-unit id="c9f6349a4ae2d3a238eb3271977a5ff56ad4db25" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#permissions()&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentrypermission&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">的&lt;a href=&quot;#permissions()&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;组件是一组&lt;a href=&quot;aclentrypermission&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="404a185f9841c99d54d179b827ceceb997785ba3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#position(long)&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#truncate(long)&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt; methods which do not otherwise have a value to return are specified to return the channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">指定没有返回值的&lt;a href=&quot;#position(long)&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#truncate(long)&quot;&gt; &lt;code&gt;truncate&lt;/code&gt; &lt;/a&gt;方法以返回在其上调用它们的通道。这样可以将方法调用链接在一起。此接口的实现应专用于返回类型，以便可以链接实现类上的方法调用。</target>
        </trans-unit>
        <trans-unit id="7901edc883e754854d8ae590ec6d7d61281b0f1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#principal()&quot;&gt;&lt;code&gt;principal&lt;/code&gt;&lt;/a&gt; component, sometimes called the &quot;who&quot; component, is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; corresponding to the identity that the entry grants or denies access</source>
          <target state="translated">的&lt;a href=&quot;#principal()&quot;&gt; &lt;code&gt;principal&lt;/code&gt; &lt;/a&gt;成分，有时也被称为&amp;ldquo;谁&amp;rdquo;组成部分，是一个&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;对应身份的条目授予或拒绝访问</target>
        </trans-unit>
        <trans-unit id="0252e2b5ac28e835bd24e1eb9ad03a80bbc13d38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#read(java.io.InputStream,java.lang.Object)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a &lt;code&gt;Reader&lt;/code&gt;. Note that if the content type is HTML, relative references (e.g. for things like images) can't be resolved unless the &amp;lt;base&amp;gt; tag is used or the &lt;em&gt;Base&lt;/em&gt; property on &lt;code&gt;HTMLDocument&lt;/code&gt; is set. In this case the current &lt;code&gt;EditorKit&lt;/code&gt; will be used, and the content type will be expected to be of this type.</source>
          <target state="translated">该&lt;a href=&quot;#read(java.io.InputStream,java.lang.Object)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;方法可用于初始化从所述部件 &lt;code&gt;Reader&lt;/code&gt; 。请注意，如果内容类型为HTML，则除非使用&amp;lt;base&amp;gt;标记或设置 &lt;code&gt;HTMLDocument&lt;/code&gt; 的&lt;em&gt;Base&lt;/em&gt;属性，否则无法解析相对引用（例如，用于图像之类的东西）。在这种情况下，将使用当前的 &lt;code&gt;EditorKit&lt;/code&gt; ，并且内容类型应为该类型。</target>
        </trans-unit>
        <trans-unit id="c3c9ff5626e9554f693ad6ddf85f19c656c52ccb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods defined by this class allow a timeout to be specified when initiating a read or write operation. If the timeout elapses before an operation completes then the operation completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. A timeout may leave the channel, or the underlying connection, in an inconsistent state. Where the implementation cannot guarantee that bytes have not been read from the channel then it puts the channel into an implementation specific &lt;em&gt;error state&lt;/em&gt;. A subsequent attempt to initiate a &lt;code&gt;read&lt;/code&gt; operation causes an unspecified runtime exception to be thrown. Similarly if a &lt;code&gt;write&lt;/code&gt; operation times out and the implementation cannot guarantee bytes have not been written to the channel then further attempts to &lt;code&gt;write&lt;/code&gt; to the channel cause an unspecified runtime exception to be thrown. When a timeout elapses then the state of the &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, or the sequence of buffers, for the I/O operation is not defined. Buffers should be discarded or at least care must be taken to ensure that the buffers are not accessed while the channel remains open. All methods that accept timeout parameters treat values less than or equal to zero to mean that the I/O operation does not timeout.</source>
          <target state="translated">此类定义的&lt;a href=&quot;#read(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#write(java.nio.ByteBuffer,long,java.util.concurrent.TimeUnit,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法允许在启动读取或写入操作时指定超时。如果在操作完成之前已超时，则操作将以&lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; &lt;/a&gt;异常完成。超时可能会使通道或基础连接处于不一致状态。如果实现无法保证未从通道读取字节，则它将通道置于实现特定的&lt;em&gt;错误状态&lt;/em&gt;。随后尝试启动 &lt;code&gt;read&lt;/code&gt; 操作会引发未指定的运行时异常。同样，如果 &lt;code&gt;write&lt;/code&gt; 操作超时，实现无法保证尚未将字节写入通道，然后进一步尝试 &lt;code&gt;write&lt;/code&gt; 通道会引发未指定的运行时异常。超时后，将不会定义I / O操作的&lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt;或缓冲区序列的状态。应该丢弃缓冲区，或者至少必须注意确保在通道保持打开状态时不访问缓冲区。所有接受超时参数的方法都将值小于或等于零视为I / O操作不会超时。</target>
        </trans-unit>
        <trans-unit id="1d9fe06809d0a55ee94fa7c5575ab00fb2cbf4e3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method is used to read the file's attributes. The file &lt;a href=&quot;posixfileattributes#owner()&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/a&gt; is represented by a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; that is the identity of the file owner for the purposes of access control. The &lt;a href=&quot;posixfileattributes#group()&quot;&gt;&lt;code&gt;group-owner&lt;/code&gt;&lt;/a&gt;, represented by a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt;, is the identity of the group owner, where a group is an identity created for administrative purposes so as to determine the access rights for the members of the group.</source>
          <target state="translated">该&lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;方法用于读取文件的属性。文件&lt;a href=&quot;posixfileattributes#owner()&quot;&gt; &lt;code&gt;owner&lt;/code&gt; &lt;/a&gt;由&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;表示，UserPrincipal是文件所有者的身份，用于访问控制。该&lt;a href=&quot;posixfileattributes#group()&quot;&gt; &lt;code&gt;group-owner&lt;/code&gt; &lt;/a&gt;，用a表示&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; &lt;/a&gt;，是组拥有者，其中一组是用于管理目的创建的，以便确定该组的成员的存取权的身份的身份。</target>
        </trans-unit>
        <trans-unit id="ef05e8d8630d24a4539bbca297c4ec8e95476f17" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#redirectErrorStream()&quot;&gt;&lt;code&gt;redirectErrorStream()&lt;/code&gt;&lt;/a&gt; of each ProcessBuilder applies to the respective process. If set to &lt;code&gt;true&lt;/code&gt;, the error stream is written to the same stream as standard output.</source>
          <target state="translated">每个ProcessBuilder的&lt;a href=&quot;#redirectErrorStream()&quot;&gt; &lt;code&gt;redirectErrorStream()&lt;/code&gt; &lt;/a&gt;适用于相应的进程。如果设置为 &lt;code&gt;true&lt;/code&gt; ，则将错误流写入与标准输出相同的流。</target>
        </trans-unit>
        <trans-unit id="d60d96790fcf12bd52c7ceb255ee2290d4d63d7d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#remove()&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#poll()&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; methods remove and return the head of the queue. Exactly which element is removed from the queue is a function of the queue's ordering policy, which differs from implementation to implementation. The &lt;code&gt;remove()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; methods differ only in their behavior when the queue is empty: the &lt;code&gt;remove()&lt;/code&gt; method throws an exception, while the &lt;code&gt;poll()&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;#remove()&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#poll()&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;方法可移除和返回队列的头。确切地说，从队列中删除了哪个元素是队列的排序策略的函数，每个实现的实现方法不同。的 &lt;code&gt;remove()&lt;/code&gt; 和 &lt;code&gt;poll()&lt;/code&gt; 方法仅区别在于它们的行为，当该队列是空的：在 &lt;code&gt;remove()&lt;/code&gt; 方法抛出异常，而 &lt;code&gt;poll()&lt;/code&gt; 方法返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b71740ad55dd486243123249a69711ae3adb45e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#removeEldestEntry(java.util.Map.Entry)&quot;&gt;&lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt;&lt;/a&gt; method may be overridden to impose a policy for removing stale mappings automatically when new mappings are added to the map.</source>
          <target state="translated">所述&lt;a href=&quot;#removeEldestEntry(java.util.Map.Entry)&quot;&gt; &lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt; &lt;/a&gt;方法可以被重写以强加一个策略，用于当新映射添加到地图自动除去失效的映射。</target>
        </trans-unit>
        <trans-unit id="f388f89464ce1efc48db1ad1eb74d58994279c54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#select()&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(long)&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow()&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; methods add the keys of channels ready to perform an operation to the selected-key set, or update the ready-operation set of keys already in the selected-key set.</source>
          <target state="translated">的&lt;a href=&quot;#select()&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#select(long)&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;#selectNow()&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt;方法添加准备在选择键集已执行操作的选择键集，或更新密钥的准备就绪操作信道集合的密钥。</target>
        </trans-unit>
        <trans-unit id="3d9fe37bdba1bdbf40ca515feaaf9c3f126885ae" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt;&lt;code&gt;select(Consumer)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt;&lt;code&gt;select(Consumer, long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt;&lt;code&gt;selectNow(Consumer)&lt;/code&gt;&lt;/a&gt; methods perform an</source>
          <target state="translated">的&lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt; &lt;code&gt;select(Consumer)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt; &lt;code&gt;select(Consumer, long)&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt; &lt;code&gt;selectNow(Consumer)&lt;/code&gt; &lt;/a&gt;的方法执行</target>
        </trans-unit>
        <trans-unit id="fc7a14c324b4c491d6e144c3f63588c2f48f7a71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt;&lt;code&gt;setCalendar(Calendar)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setNumberFormat(java.text.NumberFormat)&quot;&gt;&lt;code&gt;setNumberFormat(NumberFormat)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt;&lt;code&gt;setTimeZone(TimeZone)&lt;/code&gt;&lt;/a&gt; methods do not throw &lt;code&gt;NullPointerException&lt;/code&gt; when their parameter is &lt;code&gt;null&lt;/code&gt;, but any subsequent operations on the same instance may throw &lt;code&gt;NullPointerException&lt;/code&gt;.</source>
          <target state="translated">当&lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt; &lt;code&gt;setCalendar(Calendar)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#setNumberFormat(java.text.NumberFormat)&quot;&gt; &lt;code&gt;setNumberFormat(NumberFormat)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#setTimeZone(java.util.TimeZone)&quot;&gt; &lt;code&gt;setTimeZone(TimeZone)&lt;/code&gt; &lt;/a&gt;方法的参数为 &lt;code&gt;null&lt;/code&gt; 时，它们不会抛出 &lt;code&gt;NullPointerException&lt;/code&gt; ，但是在同一实例上进行的任何后续操作都可能抛出 &lt;code&gt;NullPointerException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30fa18ad27f297296b044126d2041ea7ea479b67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setPage(java.net.URL)&quot;&gt;&lt;code&gt;setPage&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a URL. In this case, the content type will be determined from the URL, and the registered &lt;code&gt;EditorKit&lt;/code&gt; for that content type will be set.</source>
          <target state="translated">该&lt;a href=&quot;#setPage(java.net.URL)&quot;&gt; &lt;code&gt;setPage&lt;/code&gt; &lt;/a&gt;方法可用于从一个URL初始化组件。在这种情况下，将从URL确定内容类型，并设置该内容类型的注册 &lt;code&gt;EditorKit&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12baf4ccc1db7688f8d44afcde7b6744bb5c9dfe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#setText(java.lang.String)&quot;&gt;&lt;code&gt;setText&lt;/code&gt;&lt;/a&gt; method can be used to initialize the component from a string. In this case the current &lt;code&gt;EditorKit&lt;/code&gt; will be used, and the content type will be expected to be of this type.</source>
          <target state="translated">所述&lt;a href=&quot;#setText(java.lang.String)&quot;&gt; &lt;code&gt;setText&lt;/code&gt; &lt;/a&gt;方法可用于从字符串初始化组件。在这种情况下，将使用当前的 &lt;code&gt;EditorKit&lt;/code&gt; ，并且内容类型应为该类型。</target>
        </trans-unit>
        <trans-unit id="5ba01f383f346e26e2c6a5defafb5896d214129d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#shutdown()&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; method is used to initiate an &lt;em&gt;orderly shutdown&lt;/em&gt; of a group. An orderly shutdown marks the group as shutdown; further attempts to construct a channel that binds to the group will throw &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;. Whether or not a group is shutdown can be tested using the &lt;a href=&quot;#isShutdown()&quot;&gt;&lt;code&gt;isShutdown&lt;/code&gt;&lt;/a&gt; method. Once shutdown, the group &lt;em&gt;terminates&lt;/em&gt; when all asynchronous channels that are bound to the group are closed, all actively executing completion handlers have run to completion, and resources used by the group are released. No attempt is made to stop or interrupt threads that are executing completion handlers. The &lt;a href=&quot;#isTerminated()&quot;&gt;&lt;code&gt;isTerminated&lt;/code&gt;&lt;/a&gt; method is used to test if the group has terminated, and the &lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; method can be used to block until the group has terminated.</source>
          <target state="translated">该&lt;a href=&quot;#shutdown()&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;方法用于启动一个&lt;em&gt;有序地关闭&lt;/em&gt;一组。顺序关闭会将该组标记为关闭；进一步尝试构造绑定到组的通道将引发&lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; &lt;/a&gt;。可以使用&lt;a href=&quot;#isShutdown()&quot;&gt; &lt;code&gt;isShutdown&lt;/code&gt; &lt;/a&gt;方法测试是否关闭组。一旦关闭，该组&lt;em&gt;将&lt;/em&gt;在关闭所有绑定到该组的异步通道，所有正在执行的完成处理程序运行完毕并释放该组使用的资源时终止。没有尝试停止或中断正在执行完成处理程序的线程。该&lt;a href=&quot;#isTerminated()&quot;&gt; &lt;code&gt;isTerminated&lt;/code&gt; &lt;/a&gt;方法用于测试如果组已经终止，并且&lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;在组终止之前，可以使用awaitTermination方法进行阻止。</target>
        </trans-unit>
        <trans-unit id="fb8d7794284deaddd5c051be877e293a50aade4e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#shutdownNow()&quot;&gt;&lt;code&gt;shutdownNow&lt;/code&gt;&lt;/a&gt; method can be used to initiate a &lt;em&gt;forceful shutdown&lt;/em&gt; of the group. In addition to the actions performed by an orderly shutdown, the &lt;code&gt;shutdownNow&lt;/code&gt; method closes all open channels in the group as if by invoking the &lt;a href=&quot;asynchronouschannel#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该&lt;a href=&quot;#shutdownNow()&quot;&gt; &lt;code&gt;shutdownNow&lt;/code&gt; &lt;/a&gt;方法可用于发起&lt;em&gt;有力关闭&lt;/em&gt;该组。除了通过有序关闭执行的操作外， &lt;code&gt;shutdownNow&lt;/code&gt; 方法还通过调用&lt;a href=&quot;asynchronouschannel#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法来关闭组中所有打开的通道。</target>
        </trans-unit>
        <trans-unit id="c9af2c8f7cf388858a16a6750ade5734fe7b6ede" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#slice()&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#slice(int,int)&quot;&gt;&lt;code&gt;slice(index,length)&lt;/code&gt;&lt;/a&gt; methods create a subsequence of a buffer: They leave the limit and the position unchanged.</source>
          <target state="translated">将&lt;a href=&quot;#slice()&quot;&gt; &lt;code&gt;slice()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#slice(int,int)&quot;&gt; &lt;code&gt;slice(index,length)&lt;/code&gt; &lt;/a&gt;方法创建一个缓冲区的子序列：他们离开了极限，位置不变。</target>
        </trans-unit>
        <trans-unit id="33fb27c2c564d3705cef054d1baae924b5d2bf54" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#startPipeline(java.util.List)&quot;&gt;&lt;code&gt;startPipeline&lt;/code&gt;&lt;/a&gt; method can be invoked to create a pipeline of new processes that send the output of each process directly to the next process. Each process has the attributes of its respective ProcessBuilder.</source>
          <target state="translated">该&lt;a href=&quot;#startPipeline(java.util.List)&quot;&gt; &lt;code&gt;startPipeline&lt;/code&gt; &lt;/a&gt;方法可以被调用来创建直接发送的每个进程的输出到下一个处理的新工艺的一个管道。每个进程都具有其各自的ProcessBuilder的属性。</target>
        </trans-unit>
        <trans-unit id="8eca9523e3548f92f482798189e91dff0e7836f2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#supportedOptions(java.lang.Class)&quot;&gt;&lt;code&gt;supportedOptions(Class)&lt;/code&gt;&lt;/a&gt; method can be called to determine the complete set of options available (per socket type) on the current system.</source>
          <target state="translated">所述&lt;a href=&quot;#supportedOptions(java.lang.Class)&quot;&gt; &lt;code&gt;supportedOptions(Class)&lt;/code&gt; &lt;/a&gt;方法可以被调用，以确定完整集的当前系统上可用的（每个插座型）的选项。</target>
        </trans-unit>
        <trans-unit id="e337b45e7f50fae2c01488f43bd843f36ebcb157" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt;&lt;code&gt;syncAll&lt;/code&gt;&lt;/a&gt; operation provides a way to force threads to accept a new target value, even if there is no other synchronization.</source>
          <target state="translated">该&lt;a href=&quot;#syncAll(java.lang.invoke.MutableCallSite%5B%5D)&quot;&gt; &lt;code&gt;syncAll&lt;/code&gt; &lt;/a&gt;操作提供了一种方法来强制线程接受一个新的目标值，即使没有其他的同步。</target>
        </trans-unit>
        <trans-unit id="992fc683c8b560dbb6114a38df797c785f0f9454" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toASCIIString()&quot;&gt;&lt;code&gt;toASCIIString&lt;/code&gt;&lt;/a&gt; method returns a fully quoted and encoded URI string that does not contain any</source>
          <target state="translated">该&lt;a href=&quot;#toASCIIString()&quot;&gt; &lt;code&gt;toASCIIString&lt;/code&gt; &lt;/a&gt;方法返回一个不包含任何一个完全引用和编码的URI字符串</target>
        </trans-unit>
        <trans-unit id="35726dda3d36345e921ec2f26c1649acac41b9a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toDisplayString()&quot;&gt;&lt;code&gt;toDisplayString()&lt;/code&gt;&lt;/a&gt; method allows you to obtain the localized string for a locale independent key from a predefined &lt;code&gt;ResourceBundle&lt;/code&gt; for the keys defined in this class. This localized string is intended to be readable by humans.</source>
          <target state="translated">所述&lt;a href=&quot;#toDisplayString()&quot;&gt; &lt;code&gt;toDisplayString()&lt;/code&gt; &lt;/a&gt;方法，可以得到用于从一个预定义的一个区域无关的键的本地化字符串 &lt;code&gt;ResourceBundle&lt;/code&gt; 对该类中定义的密钥。该本地化字符串旨在为人类可读。</target>
        </trans-unit>
        <trans-unit id="65b4b7be65a52928b9c78e34dccbe47a502708e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toEngineeringString()&quot;&gt;&lt;code&gt;toEngineeringString()&lt;/code&gt;&lt;/a&gt; method may be used for presenting numbers with exponents in engineering notation, and the &lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; method may be used for rounding a &lt;code&gt;BigDecimal&lt;/code&gt; so it has a known number of digits after the decimal point.</source>
          <target state="translated">所述&lt;a href=&quot;#toEngineeringString()&quot;&gt; &lt;code&gt;toEngineeringString()&lt;/code&gt; &lt;/a&gt;方法可用于在工程符号指数的数，并且&lt;a href=&quot;#setScale(int,java.math.RoundingMode)&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; &lt;/a&gt;可用于舍入的方法 &lt;code&gt;BigDecimal&lt;/code&gt; 因此它具有的小数点后的数字已知数量。</target>
        </trans-unit>
        <trans-unit id="bc086637a391b1032b4d9a87f65f931f3ebfac84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method returns a URI string with all necessary quotation but which may contain</source>
          <target state="translated">该&lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;方法返回一个URI字符串所有必要的报价，其中可能包含</target>
        </trans-unit>
        <trans-unit id="478767a169faaeb53898bb2638beee30a4b18797" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#type()&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; component determines if the entry grants or denies access.</source>
          <target state="translated">该&lt;a href=&quot;#type()&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;组件确定如果该条目授予或拒绝访问。</target>
        </trans-unit>
        <trans-unit id="22dd7f57ec39defcc50324c81f0f9c18cf2d4803" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#walk(java.util.function.Function)&quot;&gt;&lt;code&gt;walk&lt;/code&gt;&lt;/a&gt; method opens a sequential stream of &lt;a href=&quot;stackwalker.stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt;s for the current thread and then applies the given function to walk the &lt;code&gt;StackFrame&lt;/code&gt; stream. The stream reports stack frame elements in order, from the top most frame that represents the execution point at which the stack was generated to the bottom most frame. The &lt;code&gt;StackFrame&lt;/code&gt; stream is closed when the &lt;code&gt;walk&lt;/code&gt; method returns. If an attempt is made to reuse the closed stream, &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该&lt;a href=&quot;#walk(java.util.function.Function)&quot;&gt; &lt;code&gt;walk&lt;/code&gt; &lt;/a&gt;方法打开的顺序流&lt;a href=&quot;stackwalker.stackframe&quot;&gt; &lt;code&gt;StackFrame&lt;/code&gt; &lt;/a&gt; S为当前线程，然后应用给定函数行走 &lt;code&gt;StackFrame&lt;/code&gt; 流。该流按顺序报告堆栈帧元素，从代表生成堆栈的执行点的最顶部的帧到最底部的帧。该 &lt;code&gt;StackFrame&lt;/code&gt; 流被关闭的时候 &lt;code&gt;walk&lt;/code&gt; 方法返回。如果尝试重用已关闭的流，则将抛出 &lt;code&gt;IllegalStateException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="104e9821fb34ad83cbe06a664eb098239b1f2dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withChronology(java.time.chrono.Chronology)&quot;&gt;&lt;code&gt;withChronology&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the chronology. If overridden, the date-time value is converted to the chronology before formatting. During parsing the date-time value is converted to the chronology before it is returned.</source>
          <target state="translated">该&lt;a href=&quot;#withChronology(java.time.chrono.Chronology)&quot;&gt; &lt;code&gt;withChronology&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式化重写年表。如果被覆盖，则日期时间值将在格式化之前转换为时间顺序。在解析过程中，日期时间值在返回之前先转换为时间顺序。</target>
        </trans-unit>
        <trans-unit id="8e69011f7c1b9509096433b5315c14df4b0867c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withDecimalStyle(java.time.format.DecimalStyle)&quot;&gt;&lt;code&gt;withDecimalStyle&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the &lt;a href=&quot;decimalstyle&quot;&gt;&lt;code&gt;DecimalStyle&lt;/code&gt;&lt;/a&gt;. The DecimalStyle symbols are used for formatting and parsing.</source>
          <target state="translated">该&lt;a href=&quot;#withDecimalStyle(java.time.format.DecimalStyle)&quot;&gt; &lt;code&gt;withDecimalStyle&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式，它覆盖&lt;a href=&quot;decimalstyle&quot;&gt; &lt;code&gt;DecimalStyle&lt;/code&gt; &lt;/a&gt;。DecimalStyle符号用于格式化和解析。</target>
        </trans-unit>
        <trans-unit id="179737e50aab62d467c3cc1df8b25dae572a53e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the locale. The locale affects some aspects of formatting and parsing. For example, the &lt;a href=&quot;#ofLocalizedDate(java.time.format.FormatStyle)&quot;&gt;&lt;code&gt;ofLocalizedDate&lt;/code&gt;&lt;/a&gt; provides a formatter that uses the locale specific date format.</source>
          <target state="translated">该&lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式，它覆盖的区域设置。语言环境会影响格式化和解析的某些方面。例如，&lt;a href=&quot;#ofLocalizedDate(java.time.format.FormatStyle)&quot;&gt; &lt;code&gt;ofLocalizedDate&lt;/code&gt; &lt;/a&gt;提供了使用区域设置特定日期格式的格式化程序。</target>
        </trans-unit>
        <trans-unit id="7b5f8f7f416846ce6c11368f1979062c39147ad9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withResolverFields(java.time.temporal.TemporalField...)&quot;&gt;&lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt;&lt;/a&gt; parameter allows the set of fields that will be resolved to be filtered before resolving starts. For example, if the formatter has parsed a year, month, day-of-month and day-of-year, then there are two approaches to resolve a date: (year + month + day-of-month) and (year + day-of-year). The resolver fields allows one of the two approaches to be selected. If no resolver fields are set then both approaches must result in the same date.</source>
          <target state="translated">该&lt;a href=&quot;#withResolverFields(java.time.temporal.TemporalField...)&quot;&gt; &lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt; &lt;/a&gt;参数允许设置将要解决的解决开始前被过滤领域。例如，如果格式化程序已解析了年，月，月日和年月日，则有两种方法可以解析日期：（年+月+月日）和（年+一年中的一天）。分解程序字段允许选择两种方法之一。如果未设置解析器字段，则两种方法都必须得到相同的日期。</target>
        </trans-unit>
        <trans-unit id="4eb3b989121f5815135159b785773c5f4b0e5bee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZone&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the zone. If overridden, the date-time value is converted to a ZonedDateTime with the requested ZoneId before formatting. During parsing the ZoneId is applied before the value is returned.</source>
          <target state="translated">该&lt;a href=&quot;#withZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZone&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式，它覆盖的区域。如果被覆盖，则在格式化之前，日期时间值将使用请求的ZoneId转换为ZonedDateTime。在解析期间，将在返回值之前应用ZoneId。</target>
        </trans-unit>
        <trans-unit id="10635f0ded9a4021fc6c0f3a93a616a278660b29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../../../java.base/java/net/socketpermission&quot;&gt;&lt;code&gt;SocketPermission&lt;/code&gt;&lt;/a&gt; to connect to an LDAP server.</source>
          <target state="translated">连接到LDAP服务器的&lt;a href=&quot;../../../../../../java.base/java/net/socketpermission&quot;&gt; &lt;code&gt;SocketPermission&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="41a249dc2c78c4dc627ba478f329176648d9f256" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../../../java.base/javax/security/auth/authpermission&quot;&gt;&lt;code&gt;AuthPermission&lt;/code&gt;&lt;/a&gt; to modify the set of &lt;a href=&quot;../../../../../../java.base/java/security/principal&quot;&gt;&lt;code&gt;Principal&lt;/code&gt;&lt;/a&gt;s associated with a &lt;a href=&quot;../../../../../../java.base/javax/security/auth/subject&quot;&gt;&lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;../../../../../../java.base/javax/security/auth/authpermission&quot;&gt; &lt;code&gt;AuthPermission&lt;/code&gt; &lt;/a&gt;修改组&lt;a href=&quot;../../../../../../java.base/java/security/principal&quot;&gt; &lt;code&gt;Principal&lt;/code&gt; &lt;/a&gt;与相连的S&lt;a href=&quot;../../../../../../java.base/javax/security/auth/subject&quot;&gt; &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="150ae3baaf5338beede41ab2ee57ec98285d921d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.base/java/nio/channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;map&lt;/a&gt; method throws &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt; when this map mode is used on an implementation that does not support it.</source>
          <target state="translated">如果在&lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;不支持&lt;/a&gt;此实现的实现上使用此映射模式，则&lt;a href=&quot;../../../../java.base/java/nio/channels/filechannel#map(java.nio.channels.FileChannel.MapMode,long,long)&quot;&gt;map&lt;/a&gt;方法将引发UnsupportedOperationException。</target>
        </trans-unit>
        <trans-unit id="5767321150fbf304f9c853fe7423b79275141cc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;properties&lt;/a&gt; for loggers and Handlers will have names starting with the dot-separated name for the handler or logger.</source>
          <target state="translated">记录器和处理程序的&lt;a href=&quot;../../../../java.base/java/util/properties&quot;&gt;属性&lt;/a&gt;的名称应以处理程序或记录器的点分隔名称开头。</target>
        </trans-unit>
        <trans-unit id="0069f70249676e93e664c0be115bc404720187e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; API. The &lt;code&gt;ServiceLoader&lt;/code&gt; API will look for a class name in the file &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; in jars available to the runtime. For example, to have the RowSetFactory implementation &lt;code&gt;com.sun.rowset.RowSetFactoryImpl &lt;/code&gt; loaded, the entry in &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; would be:</source>
          <target state="translated">该&lt;a href=&quot;../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; API。该 &lt;code&gt;ServiceLoader&lt;/code&gt; API将寻找一个类名的文件中 &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; 在运行时可用的罐子。例如，要加载RowSetFactory实现 &lt;code&gt;com.sun.rowset.RowSetFactoryImpl &lt;/code&gt; ， &lt;code&gt;META-INF/services/javax.sql.rowset.RowSetFactory&lt;/code&gt; 中的条目应为：</target>
        </trans-unit>
        <trans-unit id="379a2f9a4e106290a5ae7cfc103ae424d738cbd5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.management/javax/management/descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; is a collection of fields containing additional meta-data for a JMX element. A field is a name and an associated value. The additional meta-data provided for an operation associated with a diagnostic command are described in the table below:</source>
          <target state="translated">该&lt;a href=&quot;../../../../java.management/javax/management/descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt;是包含附加的元数据用于JMX元件字段的集合。字段是名称和关联的值。下表描述了为与诊断命令相关的操作提供的其他元数据：</target>
        </trans-unit>
        <trans-unit id="a23b10f96e4ba74a54f5bc79e62ed11824566541" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../../java.management/javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for uniquely identifying the diagnostic MBean within an MBeanServer is:</source>
          <target state="translated">用于唯一标识MBeanServer中的诊断MBean的&lt;a href=&quot;../../../../java.management/javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;是：</target>
        </trans-unit>
        <trans-unit id="522c2e92bd2b278cbf22bf030310e50d7ce05ec7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../java.base/java/net/uri&quot;&gt;URI&lt;/a&gt; returned from &lt;code&gt;&lt;a href=&quot;fileobject#toUri()&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;fileobject#toUri()&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt; 返回的&lt;a href=&quot;../../../java.base/java/net/uri&quot;&gt;URI&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a81bf25ed46b7ed4b581a608b7780d76bdc79dd9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../java.base/java/util/locale&quot;&gt;locale&lt;/a&gt; of the description in this &lt;code&gt;MBeanInfo&lt;/code&gt;, &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, etc, as returned by &lt;a href=&quot;../../../java.base/java/util/locale#toString()&quot;&gt;&lt;code&gt;Locale.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../../java.base/java/util/locale#toString()&quot;&gt; &lt;code&gt;Locale.toString()&lt;/code&gt; &lt;/a&gt;返回的此 &lt;code&gt;MBeanInfo&lt;/code&gt; ， &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; 等中的描述的&lt;a href=&quot;../../../java.base/java/util/locale&quot;&gt;语言环境&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bc51dcb232ef7f25e91fae041a5e61191866e752" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; that uniquely identifies the management interface for logging within the &lt;code&gt;MBeanServer&lt;/code&gt; is:</source>
          <target state="translated">唯一标识用于在 &lt;code&gt;MBeanServer&lt;/code&gt; 中记录的管理接口的&lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt;是：</target>
        </trans-unit>
        <trans-unit id="3c2067b4092577ae338b99899873d5c51ff4766a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../../io/file#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method to construct a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; by converting the abstract path represented by the &lt;code&gt;java.io.File&lt;/code&gt; object. The resulting &lt;code&gt;Path&lt;/code&gt; can be used to operate on the same file as the &lt;code&gt;File&lt;/code&gt; object. The &lt;code&gt;Path&lt;/code&gt; specification provides further information on the &lt;a href=&quot;path#interop&quot;&gt;interoperability&lt;/a&gt; between &lt;code&gt;Path&lt;/code&gt; and &lt;code&gt;java.io.File&lt;/code&gt; objects.</source>
          <target state="translated">的&lt;a href=&quot;../../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;类定义了&lt;a href=&quot;../../io/file#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; &lt;/a&gt;方法构造一个&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;通过转换由表示的抽象路径 &lt;code&gt;java.io.File&lt;/code&gt; 对象。生成的 &lt;code&gt;Path&lt;/code&gt; 可用于与 &lt;code&gt;File&lt;/code&gt; 对象在同一文件上进行操作。的 &lt;code&gt;Path&lt;/code&gt; 规范提供了关于所述另外的信息&lt;a href=&quot;path#interop&quot;&gt;互操作性&lt;/a&gt;之间 &lt;code&gt;Path&lt;/code&gt; 和 &lt;code&gt;java.io.File&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="9a85bd907f559c9802535fa51f23ef29d3d95c9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../io/file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; class defines the &lt;a href=&quot;../../io/file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method to construct a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; by converting the abstract path represented by the &lt;code&gt;java.io.File&lt;/code&gt; object. The resulting &lt;code&gt;Path&lt;/code&gt; can be used to operate on the same file as the &lt;code&gt;File&lt;/code&gt; object. The &lt;code&gt;Path&lt;/code&gt; specification provides further information on the &lt;a href=&quot;path#interop&quot;&gt;interoperability&lt;/a&gt; between &lt;code&gt;Path&lt;/code&gt; and &lt;code&gt;java.io.File&lt;/code&gt; objects.</source>
          <target state="translated">的&lt;a href=&quot;../../io/file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;类定义了&lt;a href=&quot;../../io/file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; &lt;/a&gt;方法构造一个&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;通过转换由表示的抽象路径 &lt;code&gt;java.io.File&lt;/code&gt; 对象。生成的 &lt;code&gt;Path&lt;/code&gt; 可用于与 &lt;code&gt;File&lt;/code&gt; 对象在同一文件上进行操作。的 &lt;code&gt;Path&lt;/code&gt; 规范提供了关于所述另外的信息&lt;a href=&quot;path#interop&quot;&gt;互操作性&lt;/a&gt;之间 &lt;code&gt;Path&lt;/code&gt; 和 &lt;code&gt;java.io.File&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="d5be3abde35d6105d79ad74bc634371ab99a05a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../java/net/uri&quot;&gt;URI&lt;/a&gt; returned from &lt;code&gt;&lt;a href=&quot;fileobject#toUri--&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">从 &lt;code&gt;&lt;a href=&quot;fileobject#toUri--&quot;&gt;FileObject.toUri()&lt;/a&gt;&lt;/code&gt; 返回的&lt;a href=&quot;../../java/net/uri&quot;&gt;URI&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="134ad8107ae31bdb06239d777265c61dbef39bc0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../java/util/locale&quot;&gt;locale&lt;/a&gt; of the description in this &lt;code&gt;MBeanInfo&lt;/code&gt;, &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, etc, as returned by &lt;a href=&quot;../../java/util/locale#toString--&quot;&gt;&lt;code&gt;Locale.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../java/util/locale#toString--&quot;&gt; &lt;code&gt;Locale.toString()&lt;/code&gt; &lt;/a&gt;返回的此 &lt;code&gt;MBeanInfo&lt;/code&gt; ， &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; 等中的描述的&lt;a href=&quot;../../java/util/locale&quot;&gt;语言环境&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3c934c128f75a8a4fa5a31b7015ed85f88403315" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt; of the channel's socket is platform (and possibly configuration) dependent and therefore unspecified. The &lt;a href=&quot;#open(java.net.ProtocolFamily)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; allows the protocol family to be selected when opening a datagram channel, and should be used to open datagram channels that are intended for Internet Protocol multicasting.</source>
          <target state="translated">通道套接字的&lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt;取决于平台（可能还有配置），因此未指定。的&lt;a href=&quot;#open(java.net.ProtocolFamily)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;允许打开一个数据报通道时将被选择的协议族，并且应该被用于意图用于互联网协议多播数据报开放通道。</target>
        </trans-unit>
        <trans-unit id="f1ec0c7d3ac150a1e7303b1353c79b5a3e266162" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;ProtocolFamily&lt;/code&gt;&lt;/a&gt; of the channel's socket is platform (and possibly configuration) dependent and therefore unspecified. The &lt;a href=&quot;datagramchannel#open-java.net.ProtocolFamily-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; allows the protocol family to be selected when opening a datagram channel, and should be used to open datagram channels that are intended for Internet Protocol multicasting.</source>
          <target state="translated">通道套接字的&lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;ProtocolFamily&lt;/code&gt; &lt;/a&gt;与平台（可能还有配置）有关，因此未指定。的&lt;a href=&quot;datagramchannel#open-java.net.ProtocolFamily-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt;允许打开一个数据报通道时将被选择的协议族，并且应该被用于意图用于互联网协议多播数据报开放通道。</target>
        </trans-unit>
        <trans-unit id="26ee394bd5a91389898fffb43587756f5372b01d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; option should be enabled prior to &lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;binding&lt;/code&gt;&lt;/a&gt; the socket. This is required to allow multiple members of the group to bind to the same address.</source>
          <target state="translated">该&lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; &lt;/a&gt;选项应该先启用&lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;binding&lt;/code&gt; &lt;/a&gt;插座。这是允许组中的多个成员绑定到同一地址所必需的。</target>
        </trans-unit>
        <trans-unit id="17b844a7bf6569487aadb2b841362d26db2df769" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt;&lt;code&gt;SO_REUSEADDR&lt;/code&gt;&lt;/a&gt; option should be enabled prior to &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;binding&lt;/code&gt;&lt;/a&gt; the socket. This is required to allow multiple members of the group to bind to the same address.</source>
          <target state="translated">该&lt;a href=&quot;../../net/standardsocketoptions#SO_REUSEADDR&quot;&gt; &lt;code&gt;SO_REUSEADDR&lt;/code&gt; &lt;/a&gt;选项应该先启用&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;binding&lt;/code&gt; &lt;/a&gt;插座。这是允许组中的多个成员绑定到同一地址所必需的。</target>
        </trans-unit>
        <trans-unit id="5e9eeca29aab2965612038f9a3795990d96a2122" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../security/protectiondomain&quot;&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/a&gt; of a proxy class is the same as that of system classes loaded by the bootstrap class loader, such as &lt;code&gt;java.lang.Object&lt;/code&gt;, because the code for a proxy class is generated by trusted system code. This protection domain will typically be granted &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">代理类的&lt;a href=&quot;../../security/protectiondomain&quot;&gt; &lt;code&gt;ProtectionDomain&lt;/code&gt; &lt;/a&gt;与引导类加载器加载的系统类（例如 &lt;code&gt;java.lang.Object&lt;/code&gt; )的保护域相同，因为代理类的代码是由受信任的系统代码生成的。通常将授予此保护域 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ecb831d25072794a8321beb08d3f2989b4eb525" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../time/zoneid#systemDefault()&quot;&gt;&lt;code&gt;system default TimeZone&lt;/code&gt;&lt;/a&gt; is used to convert the UTC time to local date-time.</source>
          <target state="translated">该&lt;a href=&quot;../../time/zoneid#systemDefault()&quot;&gt; &lt;code&gt;system default TimeZone&lt;/code&gt; &lt;/a&gt;来UTC时间以当地日期时间转换。</target>
        </trans-unit>
        <trans-unit id="8cce448bf1e954b21943bc931e3a7ed24ae93fed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../util/locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; class provide access to a range of information useful for localizing an application. This includes the language and region, such as &quot;en-GB&quot; for English as used in Great Britain.</source>
          <target state="translated">的&lt;a href=&quot;../../util/locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt;类提供访问的范围内的用于定位的应用有用的信息。这包括语言和地区，例如英国使用的英语&amp;ldquo; en-GB&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="7786edad52abe214490e50f86c58831524452f9b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; methods may also be used to read or update the owner. In that case, the owner attribute is identified by the name &lt;code&gt;&quot;owner&quot;&lt;/code&gt;, and the value of the attribute is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法还可以用于读或更新的所有者。在这种情况下，所有者属性由名称 &lt;code&gt;&quot;owner&quot;&lt;/code&gt; 标识，并且该属性的值是&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f8a11726aa14cd73ca2137ecb864daef15163536" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes as if by invoking the &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法可以用作如果通过调用以读取任何这些属性的&lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="85684b2fc47146275fdab7d2c9f839a7fdc85f8f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;#readAttributes()&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法可以被用来读取这些属性，或通过任何定义的属性的&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;仿佛通过调用&lt;a href=&quot;#readAttributes()&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="01813ca8a2f4cee820ce424da9550d8a914a2790" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the ACL or owner attributes as if by invoking the &lt;a href=&quot;#getAcl()&quot;&gt;&lt;code&gt;getAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#getOwner()&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute(java.nio.file.Path,java.lang.String,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法可以用作如果通过调用来读取或ACL所有者属性&lt;a href=&quot;#getAcl()&quot;&gt; &lt;code&gt;getAcl&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;fileownerattributeview#getOwner()&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="f7bcc13ad5cb486576996f847be7d97aa0930b3d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; methods may also be used to read or update the owner. In that case, the owner attribute is identified by the name &lt;code&gt;&quot;owner&quot;&lt;/code&gt;, and the value of the attribute is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法还可以用于读或更新的所有者。在这种情况下，所有者属性由名称 &lt;code&gt;&quot;owner&quot;&lt;/code&gt; 标识，并且该属性的值是&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c2baff7408e5ad54d49ec829c03c8add1ffdf24" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes as if by invoking the &lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法可以用作如果通过调用以读取任何这些属性的&lt;a href=&quot;basicfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="e42fb0b1ed94cf5c272dbff37a665442f101c72a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;dosfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法可以被用来读取这些属性，或通过任何定义的属性的&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;仿佛通过调用&lt;a href=&quot;dosfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="cc5e5360eedff08a35975f0e9a9480502f02b841" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read any of these attributes, or any of the attributes defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; as if by invoking the &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法可以被用来读取这些属性，或通过任何定义的属性的&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;仿佛通过调用&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes()&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="52e7fac281b42fd7fe7452e241108ef2d5dcf7d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;getAttribute&lt;/code&gt;&lt;/a&gt; method may be used to read the ACL or owner attributes as if by invoking the &lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt;&lt;code&gt;getAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">所述&lt;a href=&quot;../files#getAttribute-java.nio.file.Path-java.lang.String-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;getAttribute&lt;/code&gt; &lt;/a&gt;方法可以用作如果通过调用来读取或ACL所有者属性&lt;a href=&quot;aclfileattributeview#getAcl--&quot;&gt; &lt;code&gt;getAcl&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="a66d1389e68f17cf760e4ead06c81319bc1c611a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the ACL or owner attributes as if by invoking the &lt;a href=&quot;#setAcl(java.util.List)&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">所述&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用作如果通过调用来更新ACL或所有者属性&lt;a href=&quot;#setAcl(java.util.List)&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="a1ab88808fcc3905febfce9137a0e1f9a46f0aa3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the DOS attributes as if by invoking the &lt;a href=&quot;#setReadOnly(boolean)&quot;&gt;&lt;code&gt;setReadOnly&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setHidden(boolean)&quot;&gt;&lt;code&gt;setHidden&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#setSystem(boolean)&quot;&gt;&lt;code&gt;setSystem&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#setArchive(boolean)&quot;&gt;&lt;code&gt;setArchive&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">所述&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用于更新该文件的上次修改时间，最后访问时间或者通过定义创建时间属性&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。它也可以用来更新DOS属性，就像分别调用&lt;a href=&quot;#setReadOnly(boolean)&quot;&gt; &lt;code&gt;setReadOnly&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#setHidden(boolean)&quot;&gt; &lt;code&gt;setHidden&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#setSystem(boolean)&quot;&gt; &lt;code&gt;setSystem&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#setArchive(boolean)&quot;&gt; &lt;code&gt;setArchive&lt;/code&gt; &lt;/a&gt;方法一样。</target>
        </trans-unit>
        <trans-unit id="324d0485d9b5471da8935266a3e2c4f243862906" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the permissions, owner, or group-owner as if by invoking the &lt;a href=&quot;#setPermissions(java.util.Set)&quot;&gt;&lt;code&gt;setPermissions&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#setGroup(java.nio.file.attribute.GroupPrincipal)&quot;&gt;&lt;code&gt;setGroup&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">所述&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用于更新该文件的上次修改时间，最后访问时间或者通过定义创建时间属性&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。它也可以用来更新权限，所有者或组所有者，就像分别调用&lt;a href=&quot;#setPermissions(java.util.Set)&quot;&gt; &lt;code&gt;setPermissions&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;fileownerattributeview#setOwner(java.nio.file.attribute.UserPrincipal)&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#setGroup(java.nio.file.attribute.GroupPrincipal)&quot;&gt; &lt;code&gt;setGroup&lt;/code&gt; &lt;/a&gt;方法一样。</target>
        </trans-unit>
        <trans-unit id="32d653cec997683485730f2c2e168b1cada5ca30" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as if by invoking the &lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该&lt;a href=&quot;../files#setAttribute(java.nio.file.Path,java.lang.String,java.lang.Object,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用来更新文件的最后修改时间，最后访问时间或者通过调用创建时间的属性，如果&lt;a href=&quot;#setTimes(java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime,java.nio.file.attribute.FileTime)&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="1bfa9ca3b01e08a940097655d13c2a85724d95de" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the ACL or owner attributes as if by invoking the &lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt;&lt;code&gt;setAcl&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">所述&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用作如果通过调用来更新ACL或所有者属性&lt;a href=&quot;aclfileattributeview#setAcl-java.util.List-&quot;&gt; &lt;code&gt;setAcl&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="c435d3e3c46a4b9a0beff2ad2d5cec4c6ab7aa83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the DOS attributes as if by invoking the &lt;a href=&quot;dosfileattributeview#setReadOnly-boolean-&quot;&gt;&lt;code&gt;setReadOnly&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dosfileattributeview#setHidden-boolean-&quot;&gt;&lt;code&gt;setHidden&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;dosfileattributeview#setSystem-boolean-&quot;&gt;&lt;code&gt;setSystem&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;dosfileattributeview#setArchive-boolean-&quot;&gt;&lt;code&gt;setArchive&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">所述&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用于更新该文件的上次修改时间，最后访问时间或者通过定义创建时间属性&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。它也可以用于更新DOS属性，就像分别调用&lt;a href=&quot;dosfileattributeview#setReadOnly-boolean-&quot;&gt; &lt;code&gt;setReadOnly&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;dosfileattributeview#setHidden-boolean-&quot;&gt; &lt;code&gt;setHidden&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;dosfileattributeview#setSystem-boolean-&quot;&gt; &lt;code&gt;setSystem&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;dosfileattributeview#setArchive-boolean-&quot;&gt; &lt;code&gt;setArchive&lt;/code&gt; &lt;/a&gt;方法一样。</target>
        </trans-unit>
        <trans-unit id="eda9c31c1c567716843eb27dfd24c5d17ae4a65a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as defined by &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt;. It may also be used to update the permissions, owner, or group-owner as if by invoking the &lt;a href=&quot;posixfileattributeview#setPermissions-java.util.Set-&quot;&gt;&lt;code&gt;setPermissions&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;posixfileattributeview#setGroup-java.nio.file.attribute.GroupPrincipal-&quot;&gt;&lt;code&gt;setGroup&lt;/code&gt;&lt;/a&gt; methods respectively.</source>
          <target state="translated">所述&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用于更新该文件的上次修改时间，最后访问时间或者通过定义创建时间属性&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;。它也可以用来更新权限，所有者或组所有者，就像分别调用&lt;a href=&quot;posixfileattributeview#setPermissions-java.util.Set-&quot;&gt; &lt;code&gt;setPermissions&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;posixfileattributeview#setGroup-java.nio.file.attribute.GroupPrincipal-&quot;&gt; &lt;code&gt;setGroup&lt;/code&gt; &lt;/a&gt;方法一样。</target>
        </trans-unit>
        <trans-unit id="a691ef8b98d41f4420b4aefb065db958be6429d9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;setAttribute&lt;/code&gt;&lt;/a&gt; method may be used to update the file's last modified time, last access time or create time attributes as if by invoking the &lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt;&lt;code&gt;setTimes&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该&lt;a href=&quot;../files#setAttribute-java.nio.file.Path-java.lang.String-java.lang.Object-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;setAttribute&lt;/code&gt; &lt;/a&gt;方法可以用来更新文件的最后修改时间，最后访问时间或者通过调用创建时间的属性，如果&lt;a href=&quot;basicfileattributeview#setTimes-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-java.nio.file.attribute.FileTime-&quot;&gt; &lt;code&gt;setTimes&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="d6234f4c2f9f186f3857bbbd3b1aad9de4850aec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filestore#supportsFileAttributeView(java.lang.Class)&quot;&gt;&lt;code&gt;supportsFileAttributeView&lt;/code&gt;&lt;/a&gt; method may be used to test if a specific &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the storage of user-defined attributes.</source>
          <target state="translated">该&lt;a href=&quot;../filestore#supportsFileAttributeView(java.lang.Class)&quot;&gt; &lt;code&gt;supportsFileAttributeView&lt;/code&gt; &lt;/a&gt;方法可被用来测试一个具体&lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;支持用户定义的属性的存储。</target>
        </trans-unit>
        <trans-unit id="580a6d6beeb8ffe4eb2d62290bc22802acbffaee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt;&lt;code&gt;supportsFileAttributeView&lt;/code&gt;&lt;/a&gt; method may be used to test if a specific &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the storage of user-defined attributes.</source>
          <target state="translated">该&lt;a href=&quot;../filestore#supportsFileAttributeView-java.lang.Class-&quot;&gt; &lt;code&gt;supportsFileAttributeView&lt;/code&gt; &lt;/a&gt;方法可被用来测试一个具体&lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;支持用户定义的属性的存储。</target>
        </trans-unit>
        <trans-unit id="c29872ec7ff5ff95dc63bc474c776a8113805f34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function/supplier#get()&quot;&gt;&lt;code&gt;Supplier.get()&lt;/code&gt;&lt;/a&gt; method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences.</source>
          <target state="translated">所述&lt;a href=&quot;../function/supplier#get()&quot;&gt; &lt;code&gt;Supplier.get()&lt;/code&gt; &lt;/a&gt;方法将在供应商被调用不超过一次，并且仅流管道正式动工的终端操作之后。</target>
        </trans-unit>
        <trans-unit id="0ee89249aaebf2f1fc5eeda71bacdd03058fa195" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function/supplier#get--&quot;&gt;&lt;code&gt;Supplier.get()&lt;/code&gt;&lt;/a&gt; method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences.</source>
          <target state="translated">所述&lt;a href=&quot;../function/supplier#get--&quot;&gt; &lt;code&gt;Supplier.get()&lt;/code&gt; &lt;/a&gt;方法将在供应商被调用不超过一次，并且仅流管道正式动工的终端操作之后。</target>
        </trans-unit>
        <trans-unit id="4c7b35a01ac35182741faccc4532841ae06b6e90" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../java.base/java/nio/file/filesystems&quot;&gt;FileSystems&lt;/a&gt;&lt;code&gt;newFileSystem&lt;/code&gt; static factory methods can be used to:</source>
          <target state="translated">该&lt;a href=&quot;../java.base/java/nio/file/filesystems&quot;&gt;文件系统&lt;/a&gt; &lt;code&gt;newFileSystem&lt;/code&gt; 静态工厂方法可用于：</target>
        </trans-unit>
        <trans-unit id="142dbbdea20e0ff6bd9b8a5f8d0a573aae47a0f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../mappedbytebuffer&quot;&gt;&lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; returned by this method will have a position of zero and a limit and capacity of &lt;code&gt;size&lt;/code&gt;; its mark will be undefined. The buffer and the mapping that it represents will remain valid until the buffer itself is garbage-collected.</source>
          <target state="translated">此方法返回的&lt;a href=&quot;../mappedbytebuffer&quot;&gt; &lt;code&gt;&lt;i&gt;mapped byte buffer&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;的位置为零， &lt;code&gt;size&lt;/code&gt; 的限制和容量；其标记将是不确定的。缓冲区及其表示的映射将保持有效，直到缓冲区本身被垃圾回收为止。</target>
        </trans-unit>
        <trans-unit id="1eef88d322f3e09ae53bc681f6806fe486829507" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will always be equal to this object's file-pointer offset as returned by the &lt;a href=&quot;#getFilePointer()&quot;&gt;&lt;code&gt;getFilePointer&lt;/code&gt;&lt;/a&gt; method. Changing this object's file-pointer offset, whether explicitly or by reading or writing bytes, will change the position of the channel, and vice versa. Changing the file's length via this object will change the length seen via the file channel, and vice versa.</source>
          <target state="translated">返回通道的&lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;将始终等于&lt;a href=&quot;#getFilePointer()&quot;&gt; &lt;code&gt;getFilePointer&lt;/code&gt; &lt;/a&gt;方法返回的此对象的文件指针偏移量。无论是显式更改还是通过读取或写入字节更改此对象的文件指针偏移量，都会更改通道的位置，反之亦然。通过此对象更改文件的长度将更改通过文件通道看到的长度，反之亦然。</target>
        </trans-unit>
        <trans-unit id="48db05c222075f07f78662388844eeb5f6f1bc01" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will always be equal to this object's file-pointer offset as returned by the &lt;a href=&quot;randomaccessfile#getFilePointer--&quot;&gt;&lt;code&gt;getFilePointer&lt;/code&gt;&lt;/a&gt; method. Changing this object's file-pointer offset, whether explicitly or by reading or writing bytes, will change the position of the channel, and vice versa. Changing the file's length via this object will change the length seen via the file channel, and vice versa.</source>
          <target state="translated">返回通道的&lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;将始终等于由&lt;a href=&quot;randomaccessfile#getFilePointer--&quot;&gt; &lt;code&gt;getFilePointer&lt;/code&gt; &lt;/a&gt;方法返回的此对象的文件指针偏移量。无论是显式更改还是通过读取或写入字节来更改此对象的文件指针偏移量，都会更改通道的位置，反之亦然。通过此对象更改文件的长度将更改通过文件通道看到的长度，反之亦然。</target>
        </trans-unit>
        <trans-unit id="1b7577f54ca9ebadbf67e174ed9fc74807c65a0b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class defines methods that operate on file attributes including file permissions. This may be used when finer manipulation of file permissions is required.</source>
          <target state="translated">该&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;是在文件属性包括文件权限操作类中定义的方法。当需要对文件权限进行更精细的操作时，可以使用此方法。</target>
        </trans-unit>
        <trans-unit id="b28607d7b75904cc426fcfb6ec4e099b107fd4d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;Files.createTempFile&lt;/code&gt;&lt;/a&gt; method provides an alternative method to create an empty file in the temporary-file directory. Files created by that method may have more restrictive access permissions to files created by this method and so may be more suited to security-sensitive applications.</source>
          <target state="translated">该&lt;a href=&quot;../nio/file/files#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;Files.createTempFile&lt;/code&gt; &lt;/a&gt;方法提供了一种替代方法，以在临时文件目录的空文件。用该方法创建的文件可能对用此方法创建的文件具有更严格的访问权限，因此可能更适合对安全性要求较高的应用程序。</target>
        </trans-unit>
        <trans-unit id="3185bf54751cfa5bf1ebba53d67faccb98bf6516" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/files#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;Files.createTempFile&lt;/code&gt;&lt;/a&gt; method provides an alternative method to create an empty file in the temporary-file directory. Files created by that method may have more restrictive access permissions to files created by this method and so may be more suited to security-sensitive applications.</source>
          <target state="translated">该&lt;a href=&quot;../nio/file/files#createTempFile-java.lang.String-java.lang.String-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;Files.createTempFile&lt;/code&gt; &lt;/a&gt;方法提供了一种替代方法，以在临时文件目录的空文件。用该方法创建的文件可能对用此方法创建的文件具有更严格的访问权限，因此可能更适合对安全性要求较高的应用程序。</target>
        </trans-unit>
        <trans-unit id="9b177003ee97e039cabe9da4299828ca0c286e4b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/package-summary&quot;&gt;&lt;code&gt;java.nio.file&lt;/code&gt;&lt;/a&gt; package defines interfaces and classes for the Java virtual machine to access files, file attributes, and file systems. This API may be used to overcome many of the limitations of the &lt;code&gt;java.io.File&lt;/code&gt; class. The &lt;a href=&quot;#toPath()&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; that uses the abstract path represented by a &lt;code&gt;File&lt;/code&gt; object to locate a file. The resulting &lt;code&gt;Path&lt;/code&gt; may be used with the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class to provide more efficient and extensive access to additional file operations, file attributes, and I/O exceptions to help diagnose errors when an operation on a file fails.</source>
          <target state="translated">该&lt;a href=&quot;../nio/file/package-summary&quot;&gt; &lt;code&gt;java.nio.file&lt;/code&gt; &lt;/a&gt;包定义接口和类Java虚拟机访问的文件，文件属性和文件系统。可以使用此API来克服 &lt;code&gt;java.io.File&lt;/code&gt; 类的许多限制。该&lt;a href=&quot;#toPath()&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; &lt;/a&gt;方法可以被用于获得&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;，使用由A表示的抽象路径 &lt;code&gt;File&lt;/code&gt; 对象查找文件。生成的 &lt;code&gt;Path&lt;/code&gt; 可以与&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;类一起使用，以提供对其他文件操作，文件属性和I / O异常的更有效，更广泛的访问，以帮助在文件操作失败时诊断错误。</target>
        </trans-unit>
        <trans-unit id="d1cd2dbce708c6940c8cf8ba35f1bba1e58ac0ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nio/file/package-summary&quot;&gt;&lt;code&gt;java.nio.file&lt;/code&gt;&lt;/a&gt; package defines interfaces and classes for the Java virtual machine to access files, file attributes, and file systems. This API may be used to overcome many of the limitations of the &lt;code&gt;java.io.File&lt;/code&gt; class. The &lt;a href=&quot;file#toPath--&quot;&gt;&lt;code&gt;toPath&lt;/code&gt;&lt;/a&gt; method may be used to obtain a &lt;a href=&quot;../nio/file/path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; that uses the abstract path represented by a &lt;code&gt;File&lt;/code&gt; object to locate a file. The resulting &lt;code&gt;Path&lt;/code&gt; may be used with the &lt;a href=&quot;../nio/file/files&quot;&gt;&lt;code&gt;Files&lt;/code&gt;&lt;/a&gt; class to provide more efficient and extensive access to additional file operations, file attributes, and I/O exceptions to help diagnose errors when an operation on a file fails.</source>
          <target state="translated">该&lt;a href=&quot;../nio/file/package-summary&quot;&gt; &lt;code&gt;java.nio.file&lt;/code&gt; &lt;/a&gt;包定义接口和类Java虚拟机访问的文件，文件属性和文件系统。可以使用该API来克服 &lt;code&gt;java.io.File&lt;/code&gt; 类的许多限制。该&lt;a href=&quot;file#toPath--&quot;&gt; &lt;code&gt;toPath&lt;/code&gt; &lt;/a&gt;方法可以被用于获得&lt;a href=&quot;../nio/file/path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;，使用由A表示的抽象路径 &lt;code&gt;File&lt;/code&gt; 对象查找文件。生成的 &lt;code&gt;Path&lt;/code&gt; 可以与&lt;a href=&quot;../nio/file/files&quot;&gt; &lt;code&gt;Files&lt;/code&gt; &lt;/a&gt;类一起使用，以提供对其他文件操作，文件属性和I / O异常的更有效，更广泛的访问，以帮助在文件操作失败时诊断错误。</target>
        </trans-unit>
        <trans-unit id="fb088de36c03c2900d71d296fa6c9d6780b57b3b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../request/eventrequest&quot;&gt;&lt;code&gt;EventRequest&lt;/code&gt;&lt;/a&gt; that requested this event. Some events (eg. &lt;a href=&quot;vmdeathevent&quot;&gt;&lt;code&gt;VMDeathEvent&lt;/code&gt;&lt;/a&gt;) may not have a cooresponding request and thus will return null.</source>
          <target state="translated">请求此事件的&lt;a href=&quot;../request/eventrequest&quot;&gt; &lt;code&gt;EventRequest&lt;/code&gt; &lt;/a&gt;。某些事件（例如&lt;a href=&quot;vmdeathevent&quot;&gt; &lt;code&gt;VMDeathEvent&lt;/code&gt; &lt;/a&gt;）可能没有对应的请求，因此将返回null。</target>
        </trans-unit>
        <trans-unit id="d82b2361fe117f27f253cb0e774de64061c22b2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; if the &lt;a href=&quot;../sortedmap#comparator()&quot;&gt;map's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the map's comparator.</source>
          <target state="translated">该&lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator的比较&lt;/a&gt;是 &lt;code&gt;null&lt;/code&gt; ，如果&lt;a href=&quot;../sortedmap#comparator()&quot;&gt;映射的比较&lt;/a&gt;是 &lt;code&gt;null&lt;/code&gt; 。否则，分隔符的比较器与映射的比较器相同或施加相同的总排序。</target>
        </trans-unit>
        <trans-unit id="98176dc88f06469dcca48fb3788ff30dc992f8b1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt; if the &lt;a href=&quot;../sortedset#comparator()&quot;&gt;set's comparator&lt;/a&gt; is &lt;code&gt;null&lt;/code&gt;. Otherwise, the spliterator's comparator is the same as or imposes the same total ordering as the set's comparator.</source>
          <target state="translated">该&lt;a href=&quot;../spliterator#getComparator()&quot;&gt;spliterator的比较&lt;/a&gt;是 &lt;code&gt;null&lt;/code&gt; ，如果&lt;a href=&quot;../sortedset#comparator()&quot;&gt;设定的比较&lt;/a&gt;是 &lt;code&gt;null&lt;/code&gt; 。否则，分离器的比较器与集合的比较器相同或施加相同的总排序。</target>
        </trans-unit>
        <trans-unit id="6e1a4cbb02bf6c03d5a44b8766a6b75e3bd7ef2d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;Epoch Day count&lt;/code&gt;&lt;/a&gt; is a simple incrementing count of days where day 0 is 1970-01-01 (ISO). This definition is the same for all chronologies, enabling conversion.</source>
          <target state="translated">该&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;Epoch Day count&lt;/code&gt; &lt;/a&gt;是一个简单的递增的天数，其中0天1970-01-01（ISO）。此定义对于所有年代都是相同的，从而可以进行转换。</target>
        </trans-unit>
        <trans-unit id="d90b2002fdcbda3f48a04b1c28d8f93afe9fd378" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; instance used for calculating the date-time fields and the instant of time.</source>
          <target state="translated">该&lt;a href=&quot;../util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;用于计算日期-时间域和时间的即时实例。</target>
        </trans-unit>
        <trans-unit id="5e38b37aeff6c0bffbe4d4c7f1f5d153a7812a9f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; instance used for calculating the date-time fields and the instant of time. This field is used for both formatting and parsing.</source>
          <target state="translated">该&lt;a href=&quot;../util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt;用于计算日期-时间域和时间的即时实例。此字段用于格式化和解析。</target>
        </trans-unit>
        <trans-unit id="d349e9ab300acec984275666f0f2f7898835dbbc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt;&lt;code&gt;CompletableFuture&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;#onExit()&quot;&gt;&lt;code&gt;onExit()&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;&lt;code&gt;completed&lt;/code&gt;&lt;/a&gt; when the process has terminated.</source>
          <target state="translated">所述&lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt; &lt;code&gt;CompletableFuture&lt;/code&gt; &lt;/a&gt;从&lt;a href=&quot;#onExit()&quot;&gt; &lt;code&gt;onExit()&lt;/code&gt; &lt;/a&gt;被&lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt; &lt;code&gt;completed&lt;/code&gt; &lt;/a&gt;时，过程终止。</target>
        </trans-unit>
        <trans-unit id="19b1c9756a7bb0fa30123a5de981aa066dd9f14b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt;&lt;code&gt;CompletableFuture&lt;/code&gt;&lt;/a&gt; from &lt;a href=&quot;#onExit()&quot;&gt;&lt;code&gt;onExit()&lt;/code&gt;&lt;/a&gt; is &lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;completed&lt;/a&gt; when the process has terminated.</source>
          <target state="translated">所述&lt;a href=&quot;../util/concurrent/completablefuture&quot;&gt; &lt;code&gt;CompletableFuture&lt;/code&gt; &lt;/a&gt;从&lt;a href=&quot;#onExit()&quot;&gt; &lt;code&gt;onExit()&lt;/code&gt; &lt;/a&gt;被&lt;a href=&quot;../util/concurrent/completablefuture#complete(T)&quot;&gt;完成&lt;/a&gt;时，过程终止。</target>
        </trans-unit>
        <trans-unit id="8df3e7a33aa49e28a1192bcf36d057cf0293415b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;zone ID&lt;/code&gt;&lt;/a&gt;. This is not part of the ISO-8601 standard. Parsing is case sensitive.</source>
          <target state="translated">该&lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;zone ID&lt;/code&gt; &lt;/a&gt;。这不是ISO-8601标准的一部分。解析区分大小写。</target>
        </trans-unit>
        <trans-unit id="bde57531a30d3dd5f7c37db7a69c3a1d61935c91" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;zone ID&lt;/code&gt;&lt;/a&gt;. This is not part of the ISO-8601 standard. Parsing is case sensitive.</source>
          <target state="translated">该&lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;zone ID&lt;/code&gt; &lt;/a&gt;。这不是ISO-8601标准的一部分。解析区分大小写。</target>
        </trans-unit>
        <trans-unit id="526e36bd9e115421a045dc56e1f87a5c3579d0c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons or seconds. An offset of zero uses &quot;GMT&quot;. North American zone names and military zone names are not handled.</source>
          <target state="translated">该&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;没有冒号或秒。零偏移量使用&amp;ldquo; GMT&amp;rdquo;。不处理北美区域名称和军事区域名称。</target>
        </trans-unit>
        <trans-unit id="e56b90af9202ee373bfa47364f3304adf4ca57ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. The offset parsing is lenient, which allows the minutes and seconds to be optional. Parsing is case insensitive.</source>
          <target state="translated">没有冒号的&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。如果偏移量有几秒钟，那么即使这不是ISO-8601标准的一部分，也将对其进行处理。偏移量解析很宽，这允许分钟和秒为可选。解析不区分大小写。</target>
        </trans-unit>
        <trans-unit id="5535a010f39cfbe7cdfaf718c4a1e14b41ecdf58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard.</source>
          <target state="translated">该&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。如果偏移量有几秒钟，那么即使这不是ISO-8601标准的一部分，也将对其进行处理。</target>
        </trans-unit>
        <trans-unit id="144173739cb700aa98d81173233fe566b6071553" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">该&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。如果偏移量有几秒钟，那么即使这不是ISO-8601标准的一部分，也将对其进行处理。解析不区分大小写。</target>
        </trans-unit>
        <trans-unit id="50f628752614c2df8ca094659bb098d1157b0637" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. The offset parsing is lenient, which allows the minutes and seconds to be optional. Parsing is case insensitive.</source>
          <target state="translated">该&lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。如果偏移量有几秒钟，那么即使这不是ISO-8601标准的一部分，也将对其进行处理。偏移量解析很宽，这允许分钟和秒为可选。解析不区分大小写。</target>
        </trans-unit>
        <trans-unit id="d3169944a88bbb1bad97a1a30cd73363ef99816c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons or seconds. An offset of zero uses &quot;GMT&quot;. North American zone names and military zone names are not handled.</source>
          <target state="translated">没有冒号或秒的&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。零偏移量使用&amp;ldquo; GMT&amp;rdquo;。不处理北美区域名称和军事区域名称。</target>
        </trans-unit>
        <trans-unit id="ccd8df3518a4d9b943302ee23512831c55573aa6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt; without colons. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">没有冒号的&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。如果偏移量有几秒钟，那么即使这不是ISO-8601标准的一部分，也将对其进行处理。解析不区分大小写。</target>
        </trans-unit>
        <trans-unit id="ef469acd11a9914f386735c8a07ac2ef3e1fdbdb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard.</source>
          <target state="translated">该&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。如果偏移量有几秒钟，那么即使这不是ISO-8601标准的一部分，也将对其进行处理。</target>
        </trans-unit>
        <trans-unit id="7eb4562aec376d8a60cf8842edb8d8443f0a1248" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;offset ID&lt;/code&gt;&lt;/a&gt;. If the offset has seconds then they will be handled even though this is not part of the ISO-8601 standard. Parsing is case insensitive.</source>
          <target state="translated">该&lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;offset ID&lt;/code&gt; &lt;/a&gt;。如果偏移量有几秒钟，那么即使这不是ISO-8601标准的一部分，也将对其进行处理。解析不区分大小写。</target>
        </trans-unit>
        <trans-unit id="fbbeb22d9b7e39547534480fe8598ea8d98e6e22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt;&lt;/a&gt; class serves as a useful superclass for defining locks and other synchronizers that rely on queuing blocked threads. The &lt;a href=&quot;abstractqueuedlongsynchronizer&quot;&gt;&lt;code&gt;AbstractQueuedLongSynchronizer&lt;/code&gt;&lt;/a&gt; class provides the same functionality but extends support to 64 bits of synchronization state. Both extend class &lt;a href=&quot;abstractownablesynchronizer&quot;&gt;&lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt;&lt;/a&gt;, a simple class that helps record the thread currently holding exclusive synchronization. The &lt;a href=&quot;locksupport&quot;&gt;&lt;code&gt;LockSupport&lt;/code&gt;&lt;/a&gt; class provides lower-level blocking and unblocking support that is useful for those developers implementing their own customized lock classes.</source>
          <target state="translated">该&lt;a href=&quot;abstractqueuedsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedSynchronizer&lt;/code&gt; &lt;/a&gt;类用作定义锁以及依赖于排队阻塞线程的其他同步器有用的超类。所述&lt;a href=&quot;abstractqueuedlongsynchronizer&quot;&gt; &lt;code&gt;AbstractQueuedLongSynchronizer&lt;/code&gt; &lt;/a&gt;类提供相同的功能，而是延伸到同步状态的64位的支持。两者都扩展了类&lt;a href=&quot;abstractownablesynchronizer&quot;&gt; &lt;code&gt;AbstractOwnableSynchronizer&lt;/code&gt; &lt;/a&gt;，这是一个简单的类，可以帮助记录当前正在进行独占同步的线程。该&lt;a href=&quot;locksupport&quot;&gt; &lt;code&gt;LockSupport&lt;/code&gt; &lt;/a&gt;类提供了更低级别的阻塞和解除阻塞支持，是为那些实现自己的定制锁类的开发人员非常有用。</target>
        </trans-unit>
        <trans-unit id="cfef7de48d524821a8ec7c9579af151f13cdc049" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accesscontroller#checkPermission-java.security.Permission-&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method determines whether the access request indicated by a specified permission should be granted or denied. A sample call appears below. In this example, &lt;code&gt;checkPermission&lt;/code&gt; will determine whether or not to grant &quot;read&quot; access to the file named &quot;testFile&quot; in the &quot;/temp&quot; directory.</source>
          <target state="translated">所述&lt;a href=&quot;accesscontroller#checkPermission-java.security.Permission-&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt;方法确定由指定的许可指示的访问请求是否应当被准许或拒绝。下面会出现一个示例调用。在此示例中， &lt;code&gt;checkPermission&lt;/code&gt; 将确定是否授予对&amp;ldquo; / temp&amp;rdquo;目录中名为&amp;ldquo; testFile&amp;rdquo;的文件的&amp;ldquo;读取&amp;rdquo;访问权限。</target>
        </trans-unit>
        <trans-unit id="8838fb229596af6a0b8d0c55ad981647e1961bd8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessibleaction&quot;&gt;AccessibleAction&lt;/a&gt; interface should be supported by any object that can perform one or more actions. This interface provides the standard mechanism for an assistive technology to determine what those actions are as well as tell the object to perform those actions. Any object that can be manipulated should support this interface.</source>
          <target state="translated">所述&lt;a href=&quot;accessibleaction&quot;&gt;AccessibleAction&lt;/a&gt;接口应该由能够执行一个或多个动作的任何对象的支持。该接口为辅助技术提供了确定这些动作是什么以及告诉对象执行这些动作的标准机制。任何可以操作的对象都应支持此接口。</target>
        </trans-unit>
        <trans-unit id="8ae7ddd5290d55c841db71019a71a67d5d9c493e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt;&lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt;&lt;/a&gt; method allows you to obtain the localized string for a locale independent key from a predefined &lt;code&gt;ResourceBundle&lt;/code&gt; for the keys defined in this class.</source>
          <target state="translated">所述&lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt; &lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt; &lt;/a&gt;方法，可以得到用于从一个预定义的一个区域无关的键的本地化字符串 &lt;code&gt;ResourceBundle&lt;/code&gt; 对该类中定义的密钥。</target>
        </trans-unit>
        <trans-unit id="9b77e4ce5068ed5e85d6cc9ed7b115da4ecc9dd1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblecomponent&quot;&gt;AccessibleComponent&lt;/a&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine and set the graphical representation of an object.</source>
          <target state="translated">该&lt;a href=&quot;accessiblecomponent&quot;&gt;AccessibleComponent中的&lt;/a&gt;接口应该由在屏幕上呈现的任何对象的支持。该界面为辅助技术确定和设置对象的图形表示提供了标准机制。</target>
        </trans-unit>
        <trans-unit id="b94cfd97d9dd9fae4586187050765fb100010225" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblehypertext&quot;&gt;AccessibleHypertext&lt;/a&gt; interface should be supported by any object that presents hypertext information on the display. This interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. It also provides standard mechanisms for manipulating &lt;a href=&quot;#AccessibleHyperlink&quot;&gt;hyperlinks&lt;/a&gt;. Applications can determine if an object supports the AccessibleHypertext interface by first obtaining its &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt; (see &lt;a href=&quot;#Accessible&quot;&gt;Accessible&lt;/a&gt;) and then calling the AccessibleContext.getAccessibleText() method of &lt;a href=&quot;#AccessibleContext&quot;&gt;AccessibleContext&lt;/a&gt;. If the return value is a class which extends AccessibleHypertext, then that object supports AccessibleHypertext.</source>
          <target state="translated">所述&lt;a href=&quot;accessiblehypertext&quot;&gt;AccessibleHypertext的&lt;/a&gt;接口应该通过在显示器上的任何物体呈现超文本信息的支持。此接口为辅助技术提供了通过其内容，属性和空间位置访问该文本的标准机制。它还提供了用于处理&lt;a href=&quot;#AccessibleHyperlink&quot;&gt;超链接的&lt;/a&gt;标准机制。应用程序可确定是否一个目的是通过先获取支持AccessibleHypertext的接口&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;（参见&lt;a href=&quot;#Accessible&quot;&gt;无障碍&lt;/a&gt;），然后调用的AccessibleContext的（）方法&lt;a href=&quot;#AccessibleContext&quot;&gt;的AccessibleContext&lt;/a&gt;。如果返回值是扩展AccessibleHypertext的类，则该对象支持AccessibleHypertext。</target>
        </trans-unit>
        <trans-unit id="c497281662eb34297821a824dd4c89d1971de1a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessibleselection&quot;&gt;AccessibleSelection&lt;/a&gt; interface provides the standard mechanism for an assistive technology to determine what the current selected children are, as well as modify the selection set. Any object that has children that can be selected should support this the AccessibleSelection interface.</source>
          <target state="translated">该&lt;a href=&quot;accessibleselection&quot;&gt;AccessibleSelection&lt;/a&gt;接口提供了标准机制，辅助技术来确定当前选择的孩子是什么，以及修改选项集合。具有可以选择的子对象的任何对象都应支持此AccessibleSelection接口。</target>
        </trans-unit>
        <trans-unit id="fd58f92dbbbde65bfcc823d640b8c8cf6f567063" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;accessiblevalue&quot;&gt;AccessibleValue&lt;/a&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar). This interface provides the standard mechanism for an assistive technology to determine and set the numerical value as well as get the minimum and maximum values.</source>
          <target state="translated">所述&lt;a href=&quot;accessiblevalue&quot;&gt;的AccessibleValue&lt;/a&gt;接口应该由支持数字值的任何对象（例如，滚动条）来支持。此接口为辅助技术提供了确定和设置数值以及获取最小值和最大值的标准机制。</target>
        </trans-unit>
        <trans-unit id="7af739ac4d097cac2c6f5ee5bae27b0834134652" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#flags&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentryflag&quot;&gt;&lt;code&gt;flags&lt;/code&gt;&lt;/a&gt; to indicate how entries are inherited and propagated</source>
          <target state="translated">该&lt;a href=&quot;aclentry#flags&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;组件是一组&lt;a href=&quot;aclentryflag&quot;&gt; &lt;code&gt;flags&lt;/code&gt; &lt;/a&gt;指示条目如何继承和传播</target>
        </trans-unit>
        <trans-unit id="69c9b8c45ab29ebc4b01d4e76c2c7f6f5bb01e81" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#permissions--&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; component is a set of &lt;a href=&quot;aclentrypermission&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">的&lt;a href=&quot;aclentry#permissions--&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;组件是一组&lt;a href=&quot;aclentrypermission&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4243500d113a1e8dca92fc8e0626cf084b1c7810" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#principal--&quot;&gt;&lt;code&gt;principal&lt;/code&gt;&lt;/a&gt; component, sometimes called the &quot;who&quot; component, is a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; corresponding to the identity that the entry grants or denies access</source>
          <target state="translated">的&lt;a href=&quot;aclentry#principal--&quot;&gt; &lt;code&gt;principal&lt;/code&gt; &lt;/a&gt;成分，有时也被称为&amp;ldquo;谁&amp;rdquo;组成部分，是一个&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;对应身份的条目授予或拒绝访问</target>
        </trans-unit>
        <trans-unit id="f2f5e00fa6ae64b393f6e7d80594412fecc00383" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclentry#type--&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; component determines if the entry grants or denies access.</source>
          <target state="translated">该&lt;a href=&quot;aclentry#type--&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;组件确定如果该条目授予或拒绝访问。</target>
        </trans-unit>
        <trans-unit id="f7f010146e9231a02191ac41817da03a8fd8aa8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclfileattributeview&quot;&gt;&lt;code&gt;AclFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and write the Access Control List (ACL) file attribute. The ACL model used by this file attribute view is based on the model defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt; &lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;aclfileattributeview&quot;&gt; &lt;code&gt;AclFileAttributeView&lt;/code&gt; &lt;/a&gt;类定义的方法来读取和写入的访问控制列表（ACL）文件属性。此文件属性视图使用的ACL模型基于&lt;a href=&quot;http://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530：网络文件系统（NFS）版本4协议&lt;/i&gt;&lt;/a&gt;定义的模型。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="6e848514b94f774e446819119d8e71216465a42c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;aclfileattributeview&quot;&gt;&lt;code&gt;AclFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and write the Access Control List (ACL) file attribute. The ACL model used by this file attribute view is based on the model defined by &lt;a href=&quot;https://www.ietf.org/rfc/rfc3530.txt&quot;&gt; &lt;i&gt;RFC 3530: Network File System (NFS) version 4 Protocol&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;aclfileattributeview&quot;&gt; &lt;code&gt;AclFileAttributeView&lt;/code&gt; &lt;/a&gt;类定义的方法来读取和写入的访问控制列表（ACL）文件属性。此文件属性视图使用的ACL模型基于&lt;a href=&quot;https://www.ietf.org/rfc/rfc3530.txt&quot;&gt;&lt;i&gt;RFC 3530：网络文件系统（NFS）版本4协议&lt;/i&gt;&lt;/a&gt;定义的模型。 &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="5cf038cbd7c0a12c38ae8e3f28f385b0f66f7649" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;alphacomposite#SRC_OVER&quot;&gt;&lt;code&gt;AlphaComposite.SRC_OVER&lt;/code&gt;&lt;/a&gt; rule.</source>
          <target state="translated">该&lt;a href=&quot;alphacomposite#SRC_OVER&quot;&gt; &lt;code&gt;AlphaComposite.SRC_OVER&lt;/code&gt; &lt;/a&gt;规则。</target>
        </trans-unit>
        <trans-unit id="d757646f4f57b621bdd66e46c7cc777a0dd7b6f0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt;&lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt;&lt;/a&gt; methods support multiple annotations of the same type on an element. If the argument to either method is a repeatable annotation type (JLS 9.6), then the method will &quot;look through&quot; a container annotation (JLS 9.7), if present, and return any annotations inside the container. Container annotations may be generated at compile-time to wrap multiple annotations of the argument type.</source>
          <target state="translated">所述&lt;a href=&quot;annotatedelement#getAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;annotatedelement#getDeclaredAnnotationsByType-java.lang.Class-&quot;&gt; &lt;code&gt;getDeclaredAnnotationsByType(Class)&lt;/code&gt; &lt;/a&gt;的方法支持元件上的多个相同类型的注释。如果任一方法的参数都是可重复的注释类型（JLS 9.6），则该方法将&amp;ldquo;浏览&amp;rdquo;容器注释（JLS 9.7）（如果存在），并返回容器内部的所有注释。可以在编译时生成容器注释，以包装参数类型的多个注释。</target>
        </trans-unit>
        <trans-unit id="5538279924c592259bec4c32883911ad4ee9986c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt;&lt;code&gt;shutdown&lt;/code&gt;&lt;/a&gt; method is used to initiate an &lt;em&gt;orderly shutdown&lt;/em&gt; of a group. An orderly shutdown marks the group as shutdown; further attempts to construct a channel that binds to the group will throw &lt;a href=&quot;shutdownchannelgroupexception&quot;&gt;&lt;code&gt;ShutdownChannelGroupException&lt;/code&gt;&lt;/a&gt;. Whether or not a group is shutdown can be tested using the &lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt;&lt;code&gt;isShutdown&lt;/code&gt;&lt;/a&gt; method. Once shutdown, the group &lt;em&gt;terminates&lt;/em&gt; when all asynchronous channels that are bound to the group are closed, all actively executing completion handlers have run to completion, and resources used by the group are released. No attempt is made to stop or interrupt threads that are executing completion handlers. The &lt;a href=&quot;asynchronouschannelgroup#isTerminated--&quot;&gt;&lt;code&gt;isTerminated&lt;/code&gt;&lt;/a&gt; method is used to test if the group has terminated, and the &lt;a href=&quot;asynchronouschannelgroup#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; method can be used to block until the group has terminated.</source>
          <target state="translated">该&lt;a href=&quot;asynchronouschannelgroup#shutdown--&quot;&gt; &lt;code&gt;shutdown&lt;/code&gt; &lt;/a&gt;方法用于启动一个&lt;em&gt;有序地关闭&lt;/em&gt;一组。顺序关闭会将该组标记为关闭；进一步尝试构造绑定到组的通道将引发&lt;a href=&quot;shutdownchannelgroupexception&quot;&gt; &lt;code&gt;ShutdownChannelGroupException&lt;/code&gt; &lt;/a&gt;。可以使用&lt;a href=&quot;asynchronouschannelgroup#isShutdown--&quot;&gt; &lt;code&gt;isShutdown&lt;/code&gt; &lt;/a&gt;方法测试是否关闭组。一旦关闭，该组&lt;em&gt;将&lt;/em&gt;在关闭所有绑定到该组的异步通道，所有正在执行的完成处理程序运行完毕并释放该组使用的资源时终止。没有尝试停止或中断正在执行完成处理程序的线程。该&lt;a href=&quot;asynchronouschannelgroup#isTerminated--&quot;&gt; &lt;code&gt;isTerminated&lt;/code&gt; &lt;/a&gt;方法用于测试如果组已经终止，并且&lt;a href=&quot;asynchronouschannelgroup#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt;在组终止之前，可以使用 awaitTermination方法进行阻止。</target>
        </trans-unit>
        <trans-unit id="b514369062ab3b9e80aad31b822e6bf912e55f38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronouschannelgroup#shutdownNow--&quot;&gt;&lt;code&gt;shutdownNow&lt;/code&gt;&lt;/a&gt; method can be used to initiate a &lt;em&gt;forceful shutdown&lt;/em&gt; of the group. In addition to the actions performed by an orderly shutdown, the &lt;code&gt;shutdownNow&lt;/code&gt; method closes all open channels in the group as if by invoking the &lt;a href=&quot;asynchronouschannel#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">该&lt;a href=&quot;asynchronouschannelgroup#shutdownNow--&quot;&gt; &lt;code&gt;shutdownNow&lt;/code&gt; &lt;/a&gt;方法可用于发起&lt;em&gt;有力关闭&lt;/em&gt;该组。除了通过有序关闭执行的操作外， &lt;code&gt;shutdownNow&lt;/code&gt; 方法还会关闭组中所有打开的通道，就像通过调用&lt;a href=&quot;asynchronouschannel#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法一样。</target>
        </trans-unit>
        <trans-unit id="b0ba63e1a3f588adc27a9ff386437373fd12a3c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;asynchronoussocketchannel#read-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;asynchronoussocketchannel#write-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods defined by this class allow a timeout to be specified when initiating a read or write operation. If the timeout elapses before an operation completes then the operation completes with the exception &lt;a href=&quot;interruptedbytimeoutexception&quot;&gt;&lt;code&gt;InterruptedByTimeoutException&lt;/code&gt;&lt;/a&gt;. A timeout may leave the channel, or the underlying connection, in an inconsistent state. Where the implementation cannot guarantee that bytes have not been read from the channel then it puts the channel into an implementation specific &lt;em&gt;error state&lt;/em&gt;. A subsequent attempt to initiate a &lt;code&gt;read&lt;/code&gt; operation causes an unspecified runtime exception to be thrown. Similarly if a &lt;code&gt;write&lt;/code&gt; operation times out and the implementation cannot guarantee bytes have not been written to the channel then further attempts to &lt;code&gt;write&lt;/code&gt; to the channel cause an unspecified runtime exception to be thrown. When a timeout elapses then the state of the &lt;a href=&quot;../bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt;, or the sequence of buffers, for the I/O operation is not defined. Buffers should be discarded or at least care must be taken to ensure that the buffers are not accessed while the channel remains open. All methods that accept timeout parameters treat values less than or equal to zero to mean that the I/O operation does not timeout.</source>
          <target state="translated">此类定义的&lt;a href=&quot;asynchronoussocketchannel#read-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;asynchronoussocketchannel#write-java.nio.ByteBuffer-long-java.util.concurrent.TimeUnit-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法允许在启动读取或写入操作时指定超时。如果在操作完成之前已超时，则操作将以&lt;a href=&quot;interruptedbytimeoutexception&quot;&gt; &lt;code&gt;InterruptedByTimeoutException&lt;/code&gt; &lt;/a&gt;异常完成。超时可能会使通道或基础连接处于不一致状态。如果实现无法保证尚未从通道读取字节，则它将通道置于实现特定的&lt;em&gt;错误状态&lt;/em&gt;。随后尝试启动 &lt;code&gt;read&lt;/code&gt; 操作会引发未指定的运行时异常。同样，如果 &lt;code&gt;write&lt;/code&gt; 操作超时，实现无法保证未将字节写入通道，然后进一步尝试 &lt;code&gt;write&lt;/code&gt; 通道会引发未指定的运行时异常。当超时过去时，则不会定义I / O操作的&lt;a href=&quot;../bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt;或缓冲区序列的状态。应该丢弃缓冲区，或者至少要小心确保在通道保持打开状态时不访问缓冲区。所有接受超时参数的方法都将其值视为小于或等于零，以表示I / O操作不会超时。</target>
        </trans-unit>
        <trans-unit id="ff23faa6b9710e7149b05774884ffc2d0c84dc55" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicintegerarray&quot;&gt;&lt;code&gt;AtomicIntegerArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomiclongarray&quot;&gt;&lt;code&gt;AtomicLongArray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;atomicreferencearray&quot;&gt;&lt;code&gt;AtomicReferenceArray&lt;/code&gt;&lt;/a&gt; classes further extend atomic operation support to arrays of these types. These classes are also notable in providing &lt;code&gt;volatile&lt;/code&gt; access semantics for their array elements, which is not supported for ordinary arrays.</source>
          <target state="translated">的&lt;a href=&quot;atomicintegerarray&quot;&gt; &lt;code&gt;AtomicIntegerArray&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;atomiclongarray&quot;&gt; &lt;code&gt;AtomicLongArray&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;atomicreferencearray&quot;&gt; &lt;code&gt;AtomicReferenceArray&lt;/code&gt; &lt;/a&gt;类进一步扩展到这些类型的数组原子操作的支持。这些类还为它们的数组元素提供了 &lt;code&gt;volatile&lt;/code&gt; 访问语义，而普通数组不支持这些语义。</target>
        </trans-unit>
        <trans-unit id="7021ba930ee249423077383cf0109781f9028e26" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicintegerarray&quot;&gt;&lt;code&gt;AtomicIntegerArray&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;atomiclongarray&quot;&gt;&lt;code&gt;AtomicLongArray&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;atomicreferencearray&quot;&gt;&lt;code&gt;AtomicReferenceArray&lt;/code&gt;&lt;/a&gt; classes further extend atomic operation support to arrays of these types. These classes are also notable in providing &lt;code&gt;volatile&lt;/code&gt; access semantics for their array elements.</source>
          <target state="translated">的&lt;a href=&quot;atomicintegerarray&quot;&gt; &lt;code&gt;AtomicIntegerArray&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;atomiclongarray&quot;&gt; &lt;code&gt;AtomicLongArray&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;atomicreferencearray&quot;&gt; &lt;code&gt;AtomicReferenceArray&lt;/code&gt; &lt;/a&gt;类进一步扩展到这些类型的数组原子操作的支持。这些类在为它们的数组元素提供 &lt;code&gt;volatile&lt;/code&gt; 访问语义方面也值得注意。</target>
        </trans-unit>
        <trans-unit id="154013ac578d40011c0e881853d2d1cf4c7084e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;atomicmarkablereference&quot;&gt;&lt;code&gt;AtomicMarkableReference&lt;/code&gt;&lt;/a&gt; class associates a single boolean with a reference. For example, this bit might be used inside a data structure to mean that the object being referenced has logically been deleted. The &lt;a href=&quot;atomicstampedreference&quot;&gt;&lt;code&gt;AtomicStampedReference&lt;/code&gt;&lt;/a&gt; class associates an integer value with a reference. This may be used for example, to represent version numbers corresponding to series of updates.</source>
          <target state="translated">所述&lt;a href=&quot;atomicmarkablereference&quot;&gt; &lt;code&gt;AtomicMarkableReference&lt;/code&gt; &lt;/a&gt;类与引用关联的单个布尔值。例如，此位可能在数据结构内使用，表示被引用的对象在逻辑上已被删除。所述&lt;a href=&quot;atomicstampedreference&quot;&gt; &lt;code&gt;AtomicStampedReference&lt;/code&gt; &lt;/a&gt;类与引用关联的整数值。例如，这可以用于表示与一系列更新相对应的版本号。</target>
        </trans-unit>
        <trans-unit id="4e0bb33867e93c786974aecb9c28853d1fb48aa1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;attribute/basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; is required to be supported and therefore the set contains at least one element, &quot;basic&quot;.</source>
          <target state="translated">所述&lt;a href=&quot;attribute/basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;需要被支持，因此该组包含的至少一种元素，&amp;ldquo;基本的&amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="42fec1b7f85b596fee4ca045a99c27b6e05ae27f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;attribute/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;attribute/standard/package-summary&quot;&gt;&lt;code&gt;javax.print.attribute.standard&lt;/code&gt;&lt;/a&gt; packages define print attributes, which describe the capabilities of a print service, specify the requirements of a print job, and track the progress of a print job.</source>
          <target state="translated">该&lt;a href=&quot;attribute/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute&lt;/code&gt; 中&lt;/a&gt;和&lt;a href=&quot;attribute/standard/package-summary&quot;&gt; &lt;code&gt;javax.print.attribute.standard&lt;/code&gt; 中的&lt;/a&gt;包定义打印属性，它描述了一个打印服务的能力，指定的打印作业的要求，并跟踪打印作业的进度。</target>
        </trans-unit>
        <trans-unit id="1bec0e906f3a1df2a6a9ba13ac4e098e5f62af15" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt; class includes methods for determining the format of an audio file, obtaining an audio input stream from an audio file, and writing an audio file from an audio input stream.</source>
          <target state="translated">所述&lt;a href=&quot;audiosystem&quot;&gt; &lt;code&gt;AudioSystem&lt;/code&gt; &lt;/a&gt;类包括用于确定音频文件的格式，从音频文件获得音频输入流，和写入从音频输入流的音频文件的方法。</target>
        </trans-unit>
        <trans-unit id="5ac6194267d0e25c2097930b8f5fbaf32e490bf5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;basicfileattributeview&quot;&gt;&lt;code&gt;BasicFileAttributeView&lt;/code&gt;&lt;/a&gt; class defines methods to read and update a &lt;em&gt;basic&lt;/em&gt; set of file attributes that are common to many file systems.</source>
          <target state="translated">该&lt;a href=&quot;basicfileattributeview&quot;&gt; &lt;code&gt;BasicFileAttributeView&lt;/code&gt; &lt;/a&gt;类定义的方法来读取和更新&lt;em&gt;基本&lt;/em&gt;集共有的许多文件系统文件属性。</target>
        </trans-unit>
        <trans-unit id="9008207e38a099728a1e599c9fd10ddfa22dae76" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;bigdecimal#toEngineeringString--&quot;&gt;&lt;code&gt;toEngineeringString()&lt;/code&gt;&lt;/a&gt; method may be used for presenting numbers with exponents in engineering notation, and the &lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt;&lt;code&gt;setScale&lt;/code&gt;&lt;/a&gt; method may be used for rounding a &lt;code&gt;BigDecimal&lt;/code&gt; so it has a known number of digits after the decimal point.</source>
          <target state="translated">所述&lt;a href=&quot;bigdecimal#toEngineeringString--&quot;&gt; &lt;code&gt;toEngineeringString()&lt;/code&gt; &lt;/a&gt;方法可用于在工程符号指数的数，并且&lt;a href=&quot;bigdecimal#setScale-int-java.math.RoundingMode-&quot;&gt; &lt;code&gt;setScale&lt;/code&gt; &lt;/a&gt;可用于舍入的方法 &lt;code&gt;BigDecimal&lt;/code&gt; 因此它具有的小数点后的数字已知数量。</target>
        </trans-unit>
        <trans-unit id="e2929b7aad495e34766a177c1e114f9cc3750748" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;blockingdeque&quot;&gt;&lt;code&gt;BlockingDeque&lt;/code&gt;&lt;/a&gt; interface extends &lt;code&gt;BlockingQueue&lt;/code&gt; to support both FIFO and LIFO (stack-based) operations. Class &lt;a href=&quot;linkedblockingdeque&quot;&gt;&lt;code&gt;LinkedBlockingDeque&lt;/code&gt;&lt;/a&gt; provides an implementation.</source>
          <target state="translated">所述&lt;a href=&quot;blockingdeque&quot;&gt; &lt;code&gt;BlockingDeque&lt;/code&gt; &lt;/a&gt;接口扩展 &lt;code&gt;BlockingQueue&lt;/code&gt; 支持FIFO和LIFO（基于堆栈的）操作。类&lt;a href=&quot;linkedblockingdeque&quot;&gt; &lt;code&gt;LinkedBlockingDeque&lt;/code&gt; &lt;/a&gt;提供了一个实现。</target>
        </trans-unit>
        <trans-unit id="b2fd22bc1464c414a0571863354563eb9bb6d8fd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;calendar#HOUR_OF_DAY&quot;&gt;&lt;code&gt;HOUR_OF_DAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;calendar#HOUR&quot;&gt;&lt;code&gt;HOUR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;calendar#AM_PM&quot;&gt;&lt;code&gt;AM_PM&lt;/code&gt;&lt;/a&gt; fields are handled independently and the &lt;a href=&quot;#time_resolution&quot;&gt;the resolution rule for the time of day&lt;/a&gt; is applied. Clearing one of the fields doesn't reset the hour of day value of this &lt;code&gt;Calendar&lt;/code&gt;. Use &lt;a href=&quot;calendar#set-int-int-&quot;&gt;&lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt;&lt;/a&gt; to reset the hour value.</source>
          <target state="translated">该&lt;a href=&quot;calendar#HOUR_OF_DAY&quot;&gt; &lt;code&gt;HOUR_OF_DAY&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;calendar#HOUR&quot;&gt; &lt;code&gt;HOUR&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;calendar#AM_PM&quot;&gt; &lt;code&gt;AM_PM&lt;/code&gt; &lt;/a&gt;字段的独立处理和&lt;a href=&quot;#time_resolution&quot;&gt;为一天中的时间分辨率规则&lt;/a&gt;被应用。清除其中一个字段不会重置此 &lt;code&gt;Calendar&lt;/code&gt; 的一天中的小时值。使用&lt;a href=&quot;calendar#set-int-int-&quot;&gt; &lt;code&gt;set(Calendar.HOUR_OF_DAY, 0)&lt;/code&gt; &lt;/a&gt;重置小时值。</target>
        </trans-unit>
        <trans-unit id="f04591de46efc6d10158813651253c9ef9e12e5d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;certpathbuilder#getRevocationChecker--&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathBuilder&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">使用&lt;a href=&quot;certpathbuilder#getRevocationChecker--&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;方法，应用程序可以在检查证书的吊销状态时指定 &lt;code&gt;CertPathBuilder&lt;/code&gt; 使用的其他特定于算法的参数和选项。这是一个示例，演示如何与PKIX算法一起使用：</target>
        </trans-unit>
        <trans-unit id="c2fe006c42d37a0e6b495c7077cf3ce1bbd6e97e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt;&lt;code&gt;getRevocationChecker()&lt;/code&gt;&lt;/a&gt; method allows an application to specify additional algorithm-specific parameters and options used by the &lt;code&gt;CertPathValidator&lt;/code&gt; when checking the revocation status of certificates. Here is an example demonstrating how it is used with the PKIX algorithm:</source>
          <target state="translated">使用&lt;a href=&quot;certpathvalidator#getRevocationChecker--&quot;&gt; &lt;code&gt;getRevocationChecker()&lt;/code&gt; &lt;/a&gt;方法，应用程序可以在检查证书的吊销状态时指定 &lt;code&gt;CertPathValidator&lt;/code&gt; 使用的其他特定于算法的参数和选项。这是一个示例，演示如何与PKIX算法一起使用：</target>
        </trans-unit>
        <trans-unit id="353391e89ff7caccf4fa0ecf1b6ada580292d90f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channel&quot;&gt;&lt;code&gt;Channel&lt;/code&gt;&lt;/a&gt; interface is extended by several other interfaces.</source>
          <target state="translated">该&lt;a href=&quot;channel&quot;&gt; &lt;code&gt;Channel&lt;/code&gt; &lt;/a&gt;接口是由其他几个接口扩展。</target>
        </trans-unit>
        <trans-unit id="12b29184356586926a8d665851524b8f725c12e2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channels&quot;&gt;&lt;code&gt;Channels&lt;/code&gt;&lt;/a&gt; utility class defines static methods that support the interoperation of the stream classes of the &lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt; package with the channel classes of this package. An appropriate channel can be constructed from an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, and conversely an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt; can be constructed from a channel. A &lt;a href=&quot;../../io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to decode bytes from a given readable byte channel, and conversely a &lt;a href=&quot;../../io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to encode characters into bytes and write them to a given writable byte channel.</source>
          <target state="translated">的&lt;a href=&quot;channels&quot;&gt; &lt;code&gt;Channels&lt;/code&gt; &lt;/a&gt;工具类定义了支持的流类的互操作的静态方法&lt;a href=&quot;../../io/package-summary&quot;&gt; &lt;code&gt;java.io&lt;/code&gt; &lt;/a&gt;包与此包的信道的类。可以从&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;构造适当的通道，相反，可以从通道构造&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;。可以构造一个使用给定字符集的&lt;a href=&quot;../../io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;来解码给定可读字节通道中的字节，相反，可以构造一个&lt;a href=&quot;../../io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt;来使用给定字符集将字符编码为字节并将它们写入给定可写字节通道。</target>
        </trans-unit>
        <trans-unit id="13bd1e29b4330451ff38da9cb77e5dbd6672f0ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;channels&quot;&gt;&lt;code&gt;Channels&lt;/code&gt;&lt;/a&gt; utility class defines static methods that support the interoperation of the stream classes of the &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package with the channel classes of this package. An appropriate channel can be constructed from an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, and conversely an &lt;a href=&quot;../../io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../../io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt; can be constructed from a channel. A &lt;a href=&quot;../../io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to decode bytes from a given readable byte channel, and conversely a &lt;a href=&quot;../../io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt; can be constructed that uses a given charset to encode characters into bytes and write them to a given writable byte channel.</source>
          <target state="translated">的&lt;a href=&quot;channels&quot;&gt; &lt;code&gt;Channels&lt;/code&gt; &lt;/a&gt;工具类定义了支持的流类的互操作的静态方法 &lt;code&gt;&lt;a href=&quot;../../io/package-summary&quot;&gt;&lt;code&gt;java.io&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 包与此包的信道的类。可以从&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;构造适当的通道，相反，可以从通道构造&lt;a href=&quot;../../io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;。可以构造一个使用给定字符集的&lt;a href=&quot;../../io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;来解码给定可读字节通道中的字节，相反，可以构造一个&lt;a href=&quot;../../io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt;来使用给定字符集将字符编码为字节并将其写入给定可写字节通道。</target>
        </trans-unit>
        <trans-unit id="0f057642b4bb486cc33d79cbc367d51cb24e2bda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt; class defines methods for creating coders for a given charset and for retrieving the various names associated with a charset. It also defines static methods for testing whether a particular charset is supported, for locating charset instances by name, and for constructing a map that contains every charset for which support is available in the current Java virtual machine.</source>
          <target state="translated">该&lt;a href=&quot;charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt;类定义创建一个给定的charset编码器和用于检索与字符集相关联的各种名称的方法。它还定义了静态方法，用于测试是否支持特定的字符集，按名称查找字符集实例，以及构造包含每个字符集的映射，该映射包含当前Java虚拟机中对其提供支持的每个字符集。</target>
        </trans-unit>
        <trans-unit id="26b62da2bb56725ff2decf8f098a1aafbd9d9b2c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classloader#builtinLoaders&quot;&gt;builtin class loaders&lt;/a&gt; do not explicitly define &lt;code&gt;Package&lt;/code&gt; objects for packages in &lt;em&gt;named modules&lt;/em&gt;. Instead those packages are automatically defined and have no specification and implementation versioning information.</source>
          <target state="translated">在&lt;a href=&quot;classloader#builtinLoaders&quot;&gt;内置的类装载器&lt;/a&gt;没有明确定义 &lt;code&gt;Package&lt;/code&gt; 在包装对象&lt;em&gt;命名模块&lt;/em&gt;。相反，这些软件包是自动定义的，没有规范和实现版本信息。</target>
        </trans-unit>
        <trans-unit id="a67cff32a8cc7c58f69e3c11acfe781fdb3c37d6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;concurrentlinkedqueue&quot;&gt;&lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt;&lt;/a&gt; class supplies an efficient scalable thread-safe non-blocking FIFO queue. The &lt;a href=&quot;concurrentlinkeddeque&quot;&gt;&lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt;&lt;/a&gt; class is similar, but additionally supports the &lt;a href=&quot;../deque&quot;&gt;&lt;code&gt;Deque&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">该&lt;a href=&quot;concurrentlinkedqueue&quot;&gt; &lt;code&gt;ConcurrentLinkedQueue&lt;/code&gt; &lt;/a&gt;类用品的高效可扩展的线程安全的非阻塞FIFO队列。所述&lt;a href=&quot;concurrentlinkeddeque&quot;&gt; &lt;code&gt;ConcurrentLinkedDeque&lt;/code&gt; &lt;/a&gt;类是类似的，但附加地支持&lt;a href=&quot;../deque&quot;&gt; &lt;code&gt;Deque&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="8f05e709096b93b1da433f74acd77bc05bb25621" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;condition&quot;&gt;&lt;code&gt;Condition&lt;/code&gt;&lt;/a&gt; interface describes condition variables that may be associated with Locks. These are similar in usage to the implicit monitors accessed using &lt;code&gt;Object.wait&lt;/code&gt;, but offer extended capabilities. In particular, multiple &lt;code&gt;Condition&lt;/code&gt; objects may be associated with a single &lt;code&gt;Lock&lt;/code&gt;. To avoid compatibility issues, the names of &lt;code&gt;Condition&lt;/code&gt; methods are different from the corresponding &lt;code&gt;Object&lt;/code&gt; versions.</source>
          <target state="translated">该&lt;a href=&quot;condition&quot;&gt; &lt;code&gt;Condition&lt;/code&gt; &lt;/a&gt;接口描述了可能会与锁有关条件变量。这些用法与使用 &lt;code&gt;Object.wait&lt;/code&gt; 访问的隐式监视器类似，但是提供了扩展功能。特别是，多个 &lt;code&gt;Condition&lt;/code&gt; 对象可以与一个 &lt;code&gt;Lock&lt;/code&gt; 关联。为避免兼容性问题， &lt;code&gt;Condition&lt;/code&gt; 方法的名称与相应的 &lt;code&gt;Object&lt;/code&gt; 版本不同。</target>
        </trans-unit>
        <trans-unit id="9e8041c88b3dcafc9b4f4c5eb63f4ac4c547288c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e9dd68445d5385bb05545d5acae99f43bf46af4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#ISO_LOCAL_DATE_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd9235cbf846fb05154c7fff0a0c527bea890016" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_LOCAL_TIME&quot;&gt;&lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#ISO_LOCAL_TIME&quot;&gt; &lt;code&gt;ISO_LOCAL_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6aeff022cca7462b1d24d181862f8642f26d64d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75e1a69d924196bb7f31b2df6ac058a6b61c95bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt;&lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt;&lt;/a&gt; where the instant is converted from &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;UTC&lt;/code&gt; offset. Parsing is case insensitive.</source>
          <target state="translated">所述&lt;a href=&quot;datetimeformatter#ISO_OFFSET_DATE_TIME&quot;&gt; &lt;code&gt;ISO_OFFSET_DATE_TIME&lt;/code&gt; &lt;/a&gt;其中瞬间从转换&lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;ChronoField.INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_SECOND&lt;/code&gt; &lt;/a&gt;使用 &lt;code&gt;UTC&lt;/code&gt; 偏移。解析不区分大小写。</target>
        </trans-unit>
        <trans-unit id="7bbd020b4b15b4b357c33b60139663bc5ab3a2b4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;withChronology&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the chronology. If overridden, the date-time value is converted to the chronology before formatting. During parsing the date-time value is converted to the chronology before it is returned.</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt; &lt;code&gt;withChronology&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式化重写年表。如果被覆盖，则日期时间值将在格式化之前转换为时间顺序。在解析过程中，日期时间值在返回之前先转换为时间顺序。</target>
        </trans-unit>
        <trans-unit id="c2be0f0e5c7bfb256821fc337fa24120b0dbdc22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withDecimalStyle-java.time.format.DecimalStyle-&quot;&gt;&lt;code&gt;withDecimalStyle&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the &lt;a href=&quot;decimalstyle&quot;&gt;&lt;code&gt;DecimalStyle&lt;/code&gt;&lt;/a&gt;. The DecimalStyle symbols are used for formatting and parsing.</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#withDecimalStyle-java.time.format.DecimalStyle-&quot;&gt; &lt;code&gt;withDecimalStyle&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式，它覆盖&lt;a href=&quot;decimalstyle&quot;&gt; &lt;code&gt;DecimalStyle&lt;/code&gt; &lt;/a&gt;。DecimalStyle符号用于格式化和解析。</target>
        </trans-unit>
        <trans-unit id="65e1e451917eff1d1ca40b8cd181f08037d85fa5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the locale. The locale affects some aspects of formatting and parsing. For example, the &lt;a href=&quot;datetimeformatter#ofLocalizedDate-java.time.format.FormatStyle-&quot;&gt;&lt;code&gt;ofLocalizedDate&lt;/code&gt;&lt;/a&gt; provides a formatter that uses the locale specific date format.</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式，它覆盖的区域设置。语言环境会影响格式和解析的某些方面。例如，&lt;a href=&quot;datetimeformatter#ofLocalizedDate-java.time.format.FormatStyle-&quot;&gt; &lt;code&gt;ofLocalizedDate&lt;/code&gt; &lt;/a&gt;提供了使用区域设置特定日期格式的格式化程序。</target>
        </trans-unit>
        <trans-unit id="ac11e4705d1cea60755dd413e0d7e05004a9574f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withResolverFields-java.time.temporal.TemporalField...-&quot;&gt;&lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt;&lt;/a&gt; parameter allows the set of fields that will be resolved to be filtered before resolving starts. For example, if the formatter has parsed a year, month, day-of-month and day-of-year, then there are two approaches to resolve a date: (year + month + day-of-month) and (year + day-of-year). The resolver fields allows one of the two approaches to be selected. If no resolver fields are set then both approaches must result in the same date.</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#withResolverFields-java.time.temporal.TemporalField...-&quot;&gt; &lt;code&gt;withResolverFields(TemporalField...)&lt;/code&gt; &lt;/a&gt;参数允许设置将要解决的解决开始前被过滤领域。例如，如果格式化程序已解析了年，月，月日和年月日，则有两种方法可以解析日期：（年+月+月日）和（年+一年中的一天）。分解程序字段允许选择两种方法之一。如果未设置解析器字段，则两种方法都必须得到相同的日期。</target>
        </trans-unit>
        <trans-unit id="c56041ee24c2e62e6514b35eb7cc04f16f5b0ac1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;datetimeformatter#withZone-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZone&lt;/code&gt;&lt;/a&gt; method returns a new formatter that overrides the zone. If overridden, the date-time value is converted to a ZonedDateTime with the requested ZoneId before formatting. During parsing the ZoneId is applied before the value is returned.</source>
          <target state="translated">该&lt;a href=&quot;datetimeformatter#withZone-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZone&lt;/code&gt; &lt;/a&gt;方法返回一个新的格式，它覆盖的区域。如果被覆盖，则在格式化之前，日期时间值将使用请求的ZoneId转换为ZonedDateTime。在解析期间，将在返回值之前应用ZoneId。</target>
        </trans-unit>
        <trans-unit id="cd859580f99613136d80c7938719b23f4da700bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; for all of the &lt;code&gt;MBeanAttributeInfo&lt;/code&gt;, &lt;code&gt;MBeanParameterInfo&lt;/code&gt;, and &lt;code&gt;MBeanOperationInfo&lt;/code&gt; objects contained in the &lt;code&gt;MBeanInfo&lt;/code&gt; will have a field &lt;code&gt;openType&lt;/code&gt; whose value is the &lt;a href=&quot;openmbean/opentype&quot;&gt;&lt;code&gt;OpenType&lt;/code&gt;&lt;/a&gt; specified by the mapping rules above. So even when &lt;code&gt;getType()&lt;/code&gt; is &quot;&lt;code&gt;int&lt;/code&gt;&quot;, &lt;code&gt;getDescriptor().getField(&quot;openType&quot;)&lt;/code&gt; will be &lt;a href=&quot;openmbean/simpletype#INTEGER&quot;&gt;&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt;的所有的 &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; ， &lt;code&gt;MBeanParameterInfo&lt;/code&gt; 和 &lt;code&gt;MBeanOperationInfo&lt;/code&gt; 对象包含在所述 &lt;code&gt;MBeanInfo&lt;/code&gt; 将有一个字段 &lt;code&gt;openType&lt;/code&gt; ，其值是&lt;a href=&quot;openmbean/opentype&quot;&gt; &lt;code&gt;OpenType&lt;/code&gt; &lt;/a&gt;通过上述映射规则指定。因此，即使当 &lt;code&gt;getType()&lt;/code&gt; 为&amp;ldquo; &lt;code&gt;int&lt;/code&gt; &amp;rdquo;， &lt;code&gt;getDescriptor().getField(&quot;openType&quot;)&lt;/code&gt; 将&lt;a href=&quot;openmbean/simpletype#INTEGER&quot;&gt; &lt;code&gt;SimpleType.INTEGER&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="83d652f00d8a04827d939d634a6f87310e7e3196" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;docflavor&quot;&gt;&lt;code&gt;DocFlavor&lt;/code&gt;&lt;/a&gt; class represents the print data format, such as JPEG or PostScript. A &lt;code&gt;DocFlavor&lt;/code&gt; object consists of a MIME type, which describes the format, and a document representation class name that indicates how the document is delivered to the printer or output stream. An application uses the &lt;code&gt;DocFlavor&lt;/code&gt; and an attribute set to find printers that can print the document type specified by the &lt;code&gt;DocFlavor&lt;/code&gt; and have the capabilities specified by the attribute set.</source>
          <target state="translated">所述&lt;a href=&quot;docflavor&quot;&gt; &lt;code&gt;DocFlavor&lt;/code&gt; 的&lt;/a&gt;类表示的打印数据格式，如JPEG或PostScript。甲 &lt;code&gt;DocFlavor&lt;/code&gt; 的对象由MIME类型，其描述的格式，并指示所述文档的传送到打印机或输出流文档表示的类名。应用程序使用 &lt;code&gt;DocFlavor&lt;/code&gt; 和属性集来查找可以打印 &lt;code&gt;DocFlavor&lt;/code&gt; 指定的文档类型并具有该属性集指定的功能的打印机。</target>
        </trans-unit>
        <trans-unit id="1faa05e6c9acbf2ceb5477d8b1f4a53cfe44d7be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;docletenvironment&quot;&gt;&lt;code&gt;DocletEnvironment&lt;/code&gt;&lt;/a&gt; instance holds the environment that the doclet will be initialized with. From this environment all other information can be extracted, in the form of &lt;a href=&quot;../../../../java.compiler/javax/lang/model/element/element&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt;. One can further use the APIs and utilities described by &lt;a href=&quot;../../../../java.compiler/javax/lang/model/package-summary&quot;&gt;&lt;code&gt;Language Model API&lt;/code&gt;&lt;/a&gt; to query Elements and Types.</source>
          <target state="translated">该&lt;a href=&quot;docletenvironment&quot;&gt; &lt;code&gt;DocletEnvironment&lt;/code&gt; &lt;/a&gt;实例认为，的doclet将与初始化环境。从该环境中，可以&lt;a href=&quot;../../../../java.compiler/javax/lang/model/element/element&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt;的形式提取所有其他信息。可以进一步使用&lt;a href=&quot;../../../../java.compiler/javax/lang/model/package-summary&quot;&gt; &lt;code&gt;Language Model API&lt;/code&gt; &lt;/a&gt;描述的API和实用程序来查询元素和类型。</target>
        </trans-unit>
        <trans-unit id="0513df95d4bb865252722a8d8255694866eed6fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domlocator&quot;&gt;&lt;code&gt;DOMLocator&lt;/code&gt;&lt;/a&gt; node may be passed to &lt;a href=&quot;../transformerexception&quot;&gt;&lt;code&gt;TransformerException&lt;/code&gt;&lt;/a&gt; objects, and retrieved by trying to cast the result of the &lt;a href=&quot;../transformerexception#getLocator()&quot;&gt;&lt;code&gt;TransformerException.getLocator()&lt;/code&gt;&lt;/a&gt; method. The implementation has no responsibility to use a DOMLocator instead of a &lt;a href=&quot;../sourcelocator&quot;&gt;&lt;code&gt;SourceLocator&lt;/code&gt;&lt;/a&gt; (though line numbers and the like do not make much sense for a DOM), so the result of getLocator must always be tested with an instanceof.</source>
          <target state="translated">可以将&lt;a href=&quot;domlocator&quot;&gt; &lt;code&gt;DOMLocator&lt;/code&gt; &lt;/a&gt;节点传递给&lt;a href=&quot;../transformerexception&quot;&gt; &lt;code&gt;TransformerException&lt;/code&gt; &lt;/a&gt;对象，并通过尝试强制&lt;a href=&quot;../transformerexception#getLocator()&quot;&gt; &lt;code&gt;TransformerException.getLocator()&lt;/code&gt; &lt;/a&gt;方法的结果来进行检索。该实现不承担使用DOMLocator而不是&lt;a href=&quot;../sourcelocator&quot;&gt; &lt;code&gt;SourceLocator&lt;/code&gt; 的&lt;/a&gt;责任（尽管行号等对于DOM没有太大意义），因此必须始终使用instanceof测试getLocator的结果。</target>
        </trans-unit>
        <trans-unit id="1b6ef39fe04c1b93a69d3237b32d9c958a683847" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domresult&quot;&gt;&lt;code&gt;DOMResult&lt;/code&gt;&lt;/a&gt; class allows a &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; to be specified to which result DOM nodes will be appended. If an output node is not specified, the transformer will use &lt;a href=&quot;../../parsers/documentbuilder#newDocument()&quot;&gt;&lt;code&gt;DocumentBuilder.newDocument()&lt;/code&gt;&lt;/a&gt; to create an output &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; node. If a node is specified, it should be one of the following: &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../org/w3c/dom/element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../../../../org/w3c/dom/documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;. Specification of any other node type is implementation dependent and undefined by this API. If the result is a &lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, the output of the transformation must have a single element root to set as the document element.</source>
          <target state="translated">所述&lt;a href=&quot;domresult&quot;&gt; &lt;code&gt;DOMResult&lt;/code&gt; &lt;/a&gt;类允许&lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;被指定到其导致DOM节点将被追加。如果未指定输出节点，则转换器将使用&lt;a href=&quot;../../parsers/documentbuilder#newDocument()&quot;&gt; &lt;code&gt;DocumentBuilder.newDocument()&lt;/code&gt; &lt;/a&gt;创建输出&lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;节点。如果指定了节点，则该节点应为以下之一：&lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../../../org/w3c/dom/element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../../../org/w3c/dom/documentfragment&quot;&gt; &lt;code&gt;DocumentFragment&lt;/code&gt; &lt;/a&gt;。其他任何节点类型的规范均取决于实现，并且未由该API定义。如果结果是&lt;a href=&quot;../../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;，则转换的输出必须具有单个元素根才能设置为document元素。</target>
        </trans-unit>
        <trans-unit id="59b5c96271b6b21c6c835702a2a5b8f3209ac347" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domsource&quot;&gt;&lt;code&gt;DOMSource&lt;/code&gt;&lt;/a&gt; class allows the client of the implementation of this API to specify a DOM &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; as the source of the input tree. The model of how the Transformer deals with the DOM tree in terms of mismatches with the &lt;a href=&quot;http://www.w3.org/TR/xslt#data-model&quot;&gt;XSLT data model&lt;/a&gt; or other data models is beyond the scope of this document. Any of the nodes derived from &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; are legal input.</source>
          <target state="translated">该&lt;a href=&quot;domsource&quot;&gt; &lt;code&gt;DOMSource&lt;/code&gt; 的&lt;/a&gt;类允许该API实现的客户端指定一个DOM&lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;作为输入树的源。就与&lt;a href=&quot;http://www.w3.org/TR/xslt#data-model&quot;&gt;XSLT数据模型&lt;/a&gt;或其他数据模型的不匹配而言，有关Transformer如何处理DOM树的模型超出了本文档的范围。从&lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;派生的任何节点都是合法输入。</target>
        </trans-unit>
        <trans-unit id="388496abb4bece2dabb72e87e3942bbdffee854f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;domsource&quot;&gt;&lt;code&gt;DOMSource&lt;/code&gt;&lt;/a&gt; class allows the client of the implementation of this API to specify a DOM &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; as the source of the input tree. The model of how the Transformer deals with the DOM tree in terms of mismatches with the &lt;a href=&quot;https://www.w3.org/TR/xslt#data-model&quot;&gt;XSLT data model&lt;/a&gt; or other data models is beyond the scope of this document. Any of the nodes derived from &lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; are legal input.</source>
          <target state="translated">该&lt;a href=&quot;domsource&quot;&gt; &lt;code&gt;DOMSource&lt;/code&gt; 的&lt;/a&gt;类允许该API实现的客户端指定一个DOM&lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;作为输入树的源。就与&lt;a href=&quot;https://www.w3.org/TR/xslt#data-model&quot;&gt;XSLT数据模型&lt;/a&gt;或其他数据模型的不匹配而言，有关Transformer如何处理DOM树的模型超出了本文档的范围。从&lt;a href=&quot;../../../../org/w3c/dom/node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;派生的任何节点都是合法输入。</target>
        </trans-unit>
        <trans-unit id="4a2a33b021a508069e12369db4ed8235c23dd820" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dosfileattributeview&quot;&gt;&lt;code&gt;DosFileAttributeView&lt;/code&gt;&lt;/a&gt; class extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the legacy &quot;DOS&quot; file attributes supported on file systems such as File Allocation Tabl (FAT), commonly used in consumer devices.</source>
          <target state="translated">该&lt;a href=&quot;dosfileattributeview&quot;&gt; &lt;code&gt;DosFileAttributeView&lt;/code&gt; &lt;/a&gt;类扩展 &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 通过定义方法来访问&amp;ldquo;DOS&amp;rdquo;文件属性支持文件系统，如文件分配TABL（FAT），在消费电子设备中常用的遗产。</target>
        </trans-unit>
        <trans-unit id="627ee7a2230c7cabacb52f3a642c2e369dfee998" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dosfileattributeview&quot;&gt;&lt;code&gt;DosFileAttributeView&lt;/code&gt;&lt;/a&gt; class extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the legacy &quot;DOS&quot; file attributes supported on file systems such as File Allocation Table (FAT), commonly used in consumer devices.</source>
          <target state="translated">所述&lt;a href=&quot;dosfileattributeview&quot;&gt; &lt;code&gt;DosFileAttributeView&lt;/code&gt; &lt;/a&gt;类扩展 &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 通过定义方法来访问&amp;ldquo;DOS&amp;rdquo;文件属性支撑在文件系统上的遗留诸如文件分配表（FAT），在消费设备中通常使用的。</target>
        </trans-unit>
        <trans-unit id="7ab5e9ce6e03076464956d6cf8e9e21635c83e58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class contains utility methods to convert from other common forms to &lt;code&gt;Callable&lt;/code&gt; classes.</source>
          <target state="translated">该&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;类包含的实用方法，从其他普通形式转换 &lt;code&gt;Callable&lt;/code&gt; 的类。</target>
        </trans-unit>
        <trans-unit id="8883df3bd964eac1086fd88dfe3a79b6d06f9e71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides convenient factory methods for the ScheduledExecutorService implementations provided in this package.</source>
          <target state="translated">的&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;类提供此包中提供的ScheduledExecutorService的实现方便工厂方法。</target>
        </trans-unit>
        <trans-unit id="e042e1e41822ebb3dc29ae27670b8475a6541a52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; class provides factory methods for the executor services provided in this package.</source>
          <target state="translated">该&lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt;类提供此包中提供的执行程序服务的工厂方法。</target>
        </trans-unit>
        <trans-unit id="2310b091914d7e1f782b2d472dcaf0ac025a8afd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors#defaultThreadFactory()&quot;&gt;&lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt;&lt;/a&gt; method provides a more useful simple implementation, that sets the created thread context to known values before returning it.</source>
          <target state="translated">所述&lt;a href=&quot;executors#defaultThreadFactory()&quot;&gt; &lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt; &lt;/a&gt;方法提供了一种更简单的有用实施方式中，该套返回之前创建的线程上下文来已知值。</target>
        </trans-unit>
        <trans-unit id="89123dab0161f270435efa4f546d779073bf8797" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;executors#defaultThreadFactory--&quot;&gt;&lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt;&lt;/a&gt; method provides a more useful simple implementation, that sets the created thread context to known values before returning it.</source>
          <target state="translated">所述&lt;a href=&quot;executors#defaultThreadFactory--&quot;&gt; &lt;code&gt;Executors.defaultThreadFactory()&lt;/code&gt; &lt;/a&gt;方法提供了一种更简单的有用实施方式中，该套返回之前创建的线程上下文来已知值。</target>
        </trans-unit>
        <trans-unit id="5340eb811bb6c4f04eac908f1a47f6cb848e143e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt;&lt;code&gt;short description&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;beaninfo#getBeanDescriptor()&quot;&gt;&lt;code&gt;bean descriptor&lt;/code&gt;&lt;/a&gt; of the annotated class.</source>
          <target state="translated">带注释类的&lt;a href=&quot;beaninfo#getBeanDescriptor()&quot;&gt; &lt;code&gt;bean descriptor&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt; &lt;code&gt;short description&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="465886a723384dd38a46e42193428a7e1aeabfc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt;&lt;code&gt;short description&lt;/code&gt;&lt;/a&gt; for the &lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt;&lt;code&gt;descriptor&lt;/code&gt;&lt;/a&gt; of the annotated property.</source>
          <target state="translated">带注释的属性的&lt;a href=&quot;beaninfo#getPropertyDescriptors()&quot;&gt; &lt;code&gt;descriptor&lt;/code&gt; &lt;/a&gt;的&lt;a href=&quot;featuredescriptor#getShortDescription()&quot;&gt; &lt;code&gt;short description&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="452f568b1f5309f7b11b0f0b96affb2b04cc97db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fileattribute&quot;&gt;&lt;code&gt;FileAttribute&lt;/code&gt;&lt;/a&gt; interface represents the value of an attribute for cases where the attribute value is required to be set atomically when creating an object in the file system.</source>
          <target state="translated">所述&lt;a href=&quot;fileattribute&quot;&gt; &lt;code&gt;FileAttribute&lt;/code&gt; &lt;/a&gt;接口表示的属性的用于创建其中在文件系统中的对象时，需要的属性值都以原子设置的情况下的值。</target>
        </trans-unit>
        <trans-unit id="44a89ca3f8f23eed63e4ec0b6a8bbaea5d50e095" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class supports the usual operations of reading bytes from, and writing bytes to, a channel connected to a file, as well as those of querying and modifying the current file position and truncating the file to a specific size. It defines methods for acquiring locks on the whole file or on a specific region of a file; these methods return instances of the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; class. Finally, it defines methods for forcing updates to the file to be written to the storage device that contains it, for efficiently transferring bytes between the file and other channels, and for mapping a region of the file directly into memory.</source>
          <target state="translated">的&lt;a href=&quot;filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;类支持从读取字节通常的操作，以及写入字节到，连接到文件中的信道，以及那些查询和修改当前文件位置和截断文件到一个特定的尺寸。它定义了获取整个文件或文件特定区域上的锁的方法。这些方法返回&lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; &lt;/a&gt;类的实例。最后，它定义了以下方法：强制对文件进行更新以写入包含该文件的存储设备，有效地在文件和其他通道之间传输字节，以及将文件的区域直接映射到内存中。</target>
        </trans-unit>
        <trans-unit id="7eca07bd746a1861a27802a596cf1b4a71de4344" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt;&lt;code&gt;getOwner&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt;&lt;code&gt;setOwner&lt;/code&gt;&lt;/a&gt; methods may be used to read or update the owner of the file.</source>
          <target state="translated">所述&lt;a href=&quot;fileownerattributeview#getOwner--&quot;&gt; &lt;code&gt;getOwner&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;fileownerattributeview#setOwner-java.nio.file.attribute.UserPrincipal-&quot;&gt; &lt;code&gt;setOwner&lt;/code&gt; &lt;/a&gt;方法可用于读取或更新的文件的所有者。</target>
        </trans-unit>
        <trans-unit id="73d3f705da9ee89357307dce73865b84f0d0035f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filer&quot;&gt;&lt;code&gt;Filer&lt;/code&gt;&lt;/a&gt; interface discusses restrictions on how processors can operate on files.</source>
          <target state="translated">该&lt;a href=&quot;filer&quot;&gt; &lt;code&gt;Filer&lt;/code&gt; &lt;/a&gt;界面讨论如何处理器能够对文件进行操作的限制。</target>
        </trans-unit>
        <trans-unit id="ec58fefa4089af5e49bf486507980bb4e39cbe29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filestore#supportsFileAttributeView(java.lang.String)&quot;&gt;&lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt;&lt;/a&gt; method may be used to test if an underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the file attributes identified by a file attribute view.</source>
          <target state="translated">所述&lt;a href=&quot;filestore#supportsFileAttributeView(java.lang.String)&quot;&gt; &lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt; &lt;/a&gt;方法可用于测试，如果底层&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;支持文件属性由文件属性视图标识。</target>
        </trans-unit>
        <trans-unit id="b4b3f7c632fcbbe9935cc6379723468392ffc252" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filestore#supportsFileAttributeView-java.lang.String-&quot;&gt;&lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt;&lt;/a&gt; method may be used to test if an underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; supports the file attributes identified by a file attribute view.</source>
          <target state="translated">所述&lt;a href=&quot;filestore#supportsFileAttributeView-java.lang.String-&quot;&gt; &lt;code&gt;supportsFileAttributeView(String)&lt;/code&gt; &lt;/a&gt;方法可用于测试，如果底层&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;支持文件属性由文件属性视图标识。</target>
        </trans-unit>
        <trans-unit id="f8cb4d9733bf198a655b4589202cc06dace82870" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getFileStores--&quot;&gt;&lt;code&gt;getFileStores&lt;/code&gt;&lt;/a&gt; method returns an iterator over the underlying &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;file-stores&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;filesystem#getFileStores--&quot;&gt; &lt;code&gt;getFileStores&lt;/code&gt; &lt;/a&gt;方法返回在底层的迭代器&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;file-stores&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cfd644bf38b0bb664dee5219ee6298f48860e300" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt; method converts a system dependent &lt;em&gt;path string&lt;/em&gt;, returning a &lt;a href=&quot;path&quot;&gt;&lt;code&gt;Path&lt;/code&gt;&lt;/a&gt; object that may be used to locate and access a file.</source>
          <target state="translated">所述&lt;a href=&quot;filesystem#getPath-java.lang.String-java.lang.String...-&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;方法转换一个依赖于系统的&lt;em&gt;路径字符串&lt;/em&gt;，返回一个&lt;a href=&quot;path&quot;&gt; &lt;code&gt;Path&lt;/code&gt; &lt;/a&gt;可被用于定位和访问的文件对象。</target>
        </trans-unit>
        <trans-unit id="85bb054fbeaeb496dcbb5f7913fdc2da38a5d8df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt;&lt;code&gt;getPathMatcher&lt;/code&gt;&lt;/a&gt; method is used to create a &lt;a href=&quot;pathmatcher&quot;&gt;&lt;code&gt;PathMatcher&lt;/code&gt;&lt;/a&gt; that performs match operations on paths.</source>
          <target state="translated">该&lt;a href=&quot;filesystem#getPathMatcher-java.lang.String-&quot;&gt; &lt;code&gt;getPathMatcher&lt;/code&gt; &lt;/a&gt;方法被用来创建一个&lt;a href=&quot;pathmatcher&quot;&gt; &lt;code&gt;PathMatcher&lt;/code&gt; &lt;/a&gt;执行匹配的路径的操作。</target>
        </trans-unit>
        <trans-unit id="5a69e75d4d560b20f800838bf2f2879aa7b27302" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#getUserPrincipalLookupService--&quot;&gt;&lt;code&gt;getUserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; to lookup users or groups by name.</source>
          <target state="translated">该&lt;a href=&quot;filesystem#getUserPrincipalLookupService--&quot;&gt; &lt;code&gt;getUserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;方法返回&lt;a href=&quot;attribute/userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;按名称查找用户或组。</target>
        </trans-unit>
        <trans-unit id="6f447288e7932d315836b220e40a38ac2e592a02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;filesystem#newWatchService--&quot;&gt;&lt;code&gt;newWatchService&lt;/code&gt;&lt;/a&gt; method creates a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt; that may be used to watch objects for changes and events.</source>
          <target state="translated">该&lt;a href=&quot;filesystem#newWatchService--&quot;&gt; &lt;code&gt;newWatchService&lt;/code&gt; &lt;/a&gt;方法创建一个&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt;可用于观看的变化和事件的对象。</target>
        </trans-unit>
        <trans-unit id="0df1d883900393179ef6a938286fb977dcd966a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;formatter#format-java.util.Locale-java.lang.String-java.lang.Object...-&quot;&gt;&lt;code&gt;format&lt;/code&gt;&lt;/a&gt; method for this object which has a locale argument does not change this value.</source>
          <target state="translated">具有语言环境参数的该对象的&lt;a href=&quot;formatter#format-java.util.Locale-java.lang.String-java.lang.Object...-&quot;&gt; &lt;code&gt;format&lt;/code&gt; &lt;/a&gt;方法不会更改此值。</target>
        </trans-unit>
        <trans-unit id="e68fc7c4ce0ce129079a142bdf3e6ba5e50c5128" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;futuretask&quot;&gt;&lt;code&gt;FutureTask&lt;/code&gt;&lt;/a&gt; class is an implementation of &lt;code&gt;Future&lt;/code&gt; that implements &lt;code&gt;Runnable&lt;/code&gt;, and so may be executed by an &lt;code&gt;Executor&lt;/code&gt;. For example, the above construction with &lt;code&gt;submit&lt;/code&gt; could be replaced by:</source>
          <target state="translated">的&lt;a href=&quot;futuretask&quot;&gt; &lt;code&gt;FutureTask&lt;/code&gt; &lt;/a&gt;类是的实现 &lt;code&gt;Future&lt;/code&gt; 实现 &lt;code&gt;Runnable&lt;/code&gt; ，所以可以由执行 &lt;code&gt;Executor&lt;/code&gt; 。例如，上面带有 &lt;code&gt;submit&lt;/code&gt; 构造可以替换为：</target>
        </trans-unit>
        <trans-unit id="5ba414d1962554d1f8e4567bcf5d7da85351a76c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsconfiguration#getDefaultTransform()&quot;&gt;&lt;code&gt;getDefaultTransform&lt;/code&gt;&lt;/a&gt; for the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; of the &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;graphicsconfiguration#getDefaultTransform()&quot;&gt; &lt;code&gt;getDefaultTransform&lt;/code&gt; &lt;/a&gt;为 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 的的 &lt;code&gt;Component&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39a8d2a83535770d869eebc4c30cb9198770d41d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSLUCENT&quot;&gt;&lt;code&gt;PERPIXEL_TRANSLUCENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the graphics device where this window is located</source>
          <target state="translated">该&lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSLUCENT&quot;&gt; &lt;code&gt;PERPIXEL_TRANSLUCENT&lt;/code&gt; &lt;/a&gt;半透明必须在那里这个窗口所在的图形设备支持</target>
        </trans-unit>
        <trans-unit id="8a9920b2b3bdc4d70beb4a231bc49073bc86e240" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSPARENT&quot;&gt;&lt;code&gt;PERPIXEL_TRANSPARENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the underlying system</source>
          <target state="translated">该&lt;a href=&quot;graphicsdevice.windowtranslucency#PERPIXEL_TRANSPARENT&quot;&gt; &lt;code&gt;PERPIXEL_TRANSPARENT&lt;/code&gt; &lt;/a&gt;半透明必须由底层系统的支持</target>
        </trans-unit>
        <trans-unit id="c5d339fa5b74059e5d1ae5610caf66ae89534242" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsdevice.windowtranslucency#TRANSLUCENT&quot;&gt;&lt;code&gt;TRANSLUCENT&lt;/code&gt;&lt;/a&gt; translucency must be supported by the underlying system</source>
          <target state="translated">该&lt;a href=&quot;graphicsdevice.windowtranslucency#TRANSLUCENT&quot;&gt; &lt;code&gt;TRANSLUCENT&lt;/code&gt; &lt;/a&gt;半透明必须由底层系统的支持</target>
        </trans-unit>
        <trans-unit id="ec992ef8c01d8a91b29b9663489a827132e70061" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;graphicsenvironment#getAllFonts()&quot;&gt;&lt;code&gt;getAllFonts&lt;/code&gt;&lt;/a&gt; method of the &lt;code&gt;GraphicsEnvironment&lt;/code&gt; class returns an array of all font faces available in the system. These font faces are returned as &lt;code&gt;Font&lt;/code&gt; objects with a size of 1, identity transform and default font features. These base fonts can then be used to derive new &lt;code&gt;Font&lt;/code&gt; objects with varying sizes, styles, transforms and font features via the &lt;code&gt;deriveFont&lt;/code&gt; methods in this class.</source>
          <target state="translated">&lt;code&gt;GraphicsEnvironment&lt;/code&gt; 类的&lt;a href=&quot;graphicsenvironment#getAllFonts()&quot;&gt; &lt;code&gt;getAllFonts&lt;/code&gt; &lt;/a&gt;方法返回系统中所有可用字体的数组。这些字体面被返回作为 &lt;code&gt;Font&lt;/code&gt; 大小为1对象，身份变换和默认字体特征。然后，可以通过 &lt;code&gt;deriveFont&lt;/code&gt; 中的deriveFont方法将这些基本字体用于派生具有不同大小，样式，变换和字体特征的新 &lt;code&gt;Font&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="ac6fd445a8abbfdf6b8f85b02ec9c54bc64434b0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#base64&quot;&gt;Base64&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#base64&quot;&gt;Base64编码&lt;/a&gt;变换算法URI。</target>
        </trans-unit>
        <trans-unit id="becff7faf751f42ccbca78d1ff611ab0fb00ba48" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;&gt;DSA-SHA1&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="translated">在&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;&gt;DSA-SHA1&lt;/a&gt;（DSS）的签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="ee3f60b00b3529817693288491df29a6712e3331" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;&gt; Enveloped Signature&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;&gt;封装的签名&lt;/a&gt;变换算法URI。</target>
        </trans-unit>
        <trans-unit id="0b88790d458afe33d2216d161472445474fc51cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;&gt;HMAC-SHA1&lt;/a&gt; MAC signature method algorithm URI</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;&gt;HMAC-SHA1&lt;/a&gt; MAC签名方法的算法URI</target>
        </trans-unit>
        <trans-unit id="c19c2c2b7a22f554c7ae96b18019113331154992" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;RSA-SHA1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;RSA-SHA1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="01bf5b4fc24fe23d8966259b4091df56900af996" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;&gt; SHA1&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;&gt;SHA1&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="af7ee9cfcd3d6107b3c1dd50b03852f916c260e1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1&quot;&gt; ECDSA-SHA1&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1&quot;&gt;ECDSA-SHA1&lt;/a&gt;（FIPS 180-4）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="e4dedda2e7f7aea4568aa2c2eb187e63638d19af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224&quot;&gt; ECDSA-SHA224&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224&quot;&gt;ECDSA-SHA224&lt;/a&gt;（FIPS 180-4）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="a53376ec8ca69ca3d54a2262f28511aa42273529" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256&quot;&gt; ECDSA-SHA256&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256&quot;&gt;ECDSA-SHA256&lt;/a&gt;（FIPS 180-4）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="d85df8f41b660375d4442a1e15fa274557a89535" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384&quot;&gt; ECDSA-SHA384&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384&quot;&gt;ECDSA-SHA384&lt;/a&gt;（FIPS 180-4）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="ad5bd96b17eae327314c8f39dfe7802a29acf09a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512&quot;&gt; ECDSA-SHA512&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512&quot;&gt;ECDSA-SHA512&lt;/a&gt;（FIPS 180-4）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="8ae5b3c777b1e2d5a2186ca8a378affe9c7ade16" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha224&quot;&gt; HMAC-SHA224&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha224&quot;&gt;HMAC-SHA224&lt;/a&gt; MAC签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="53de04ca23665c1a16a28adfdf8c893f824822a4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt; HMAC-SHA256&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt;HMAC-SHA256&lt;/a&gt; MAC签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="861114a3ecd86c3cab9aa4a66112c1e2ee43c6eb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha384&quot;&gt; HMAC-SHA384&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha384&quot;&gt;HMAC-SHA384&lt;/a&gt; MAC签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="af1359431a4b4abc420088f3eaf4951469a38069" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha512&quot;&gt; HMAC-SHA512&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#hmac-sha512&quot;&gt;HMAC-SHA512&lt;/a&gt; MAC签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="4fa675d632de88ac6516637e0feaed2abaaa090d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha224&quot;&gt; RSA-SHA224&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha224&quot;&gt;RSA-SHA224&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="eaddb66e627fa00f9ce8834f0acbf436a0c9d55a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;&gt; RSA-SHA256&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;&gt;RSA-SHA256&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="7fdeb91c4bb77cbff71ec5b53a24f31a2cfc8fb0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;&gt; RSA-SHA384&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;&gt;RSA-SHA384&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="36fa84d4352533e019faa9c861c57be646aeeb1f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;&gt; RSA-SHA512&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;&gt;RSA-SHA512&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="bc01f1e49eb4cbe40436d470538878c09a541e97" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha224&quot;&gt; SHA224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha224&quot;&gt;SHA224&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="8c5c807f091255a14ff7a3da29c8287a037f9165" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;&gt; SHA384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmldsig-more#sha384&quot;&gt;SHA3​​84&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="d84f835080934ddeca944780a8bafd9805086678" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#ripemd160&quot;&gt; RIPEMD-160&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">所述&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#ripemd160&quot;&gt;RIPEMD-160&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="492ea7b910db2fa76b178f6f56dad826131e494e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;&gt; SHA256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha256&quot;&gt;SHA256&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="59642427325669eecdce19219f8c8dfb434e8443" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;&gt; SHA512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2001/04/xmlenc#sha512&quot;&gt;SHA512&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="6c7c6f971c0678438ecae16f111eb39141e3b969" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;Exclusive Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;独家规范XML（不带注释）&lt;/a&gt;规范化方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="9bba8474b6924be852a4fb82e20bd985dfbd627d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt; Exclusive Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt;带有注释&lt;/a&gt;规范化方法算法URI的Exclusive Canonical XML。</target>
        </trans-unit>
        <trans-unit id="9bc8e8bdb11de9b4d0c46e91f131a698d3a4fcc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2002/06/xmldsig-filter2&quot;&gt; XPath Filter 2&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2002/06/xmldsig-filter2&quot;&gt;XPath的过滤器2&lt;/a&gt;变换算法URI。</target>
        </trans-unit>
        <trans-unit id="31f1151a5b47c7982e4acc0910f8a4b52ca5d55f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1&quot;&gt; SHA1-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1&quot;&gt;SHA1-RSA-MGF1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="c9aa58b291f03f83bf122fa950bfe3fcb22188d3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1&quot;&gt; SHA224-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1&quot;&gt;SHA224-RSA-MGF1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="3175530d8fe15bfed754288d8676d3bf07d8afe0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1&quot;&gt; SHA256-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1&quot;&gt;SHA256-RSA-MGF1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="3144f4088250ae9caf73443a7b313dce2cff775c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-224&quot;&gt; SHA3-224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-224&quot;&gt;SHA3​​-224&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="5e6ba38dec8a0df92c6bd5c27c41609fff68bd20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-256&quot;&gt; SHA3-256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-256&quot;&gt;SHA3​​-256&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="d7d8efc48e2075aca981620055a7e3c7b772d12c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-384&quot;&gt; SHA3-384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-384&quot;&gt;SHA3​​-384&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="3fe8e6908bf5d6d9385ca4cfbc6956d3e11b3192" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-512&quot;&gt; SHA3-512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha3-512&quot;&gt;SHA3​​-512&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="3e0da8972968f17f0432d7daf91118841009c746" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1&quot;&gt; SHA384-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1&quot;&gt;SHA3​​84-RSA-MGF1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="951b7da31a6ca5e6cfdec902f4b7f1ddcdba5734" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1&quot;&gt; SHA512-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;http://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1&quot;&gt;SHA512-RSA-MGF1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="15e53346f59cf546f87a890d95118ee937cd487b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/2009/xmldsig11#dsa-sha256&quot;&gt;DSA-SHA256&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="translated">在&lt;a href=&quot;http://www.w3.org/2009/xmldsig11#dsa-sha256&quot;&gt;DSA-SHA256&lt;/a&gt;（DSS）的签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="f0a1935cb2f87664fbd1025122a44d8673e21bab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;&gt;XPath&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;http://www.w3.org/TR/1999/REC-xpath-19991116&quot;&gt;XPath的&lt;/a&gt;变换算法URI。</target>
        </trans-unit>
        <trans-unit id="90ca213841333d5dc68670f40a116f7342d94bf5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;&gt;XSLT&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;http://www.w3.org/TR/1999/REC-xslt-19991116&quot;&gt;XSLT&lt;/a&gt;转换算法URI。</target>
        </trans-unit>
        <trans-unit id="fd24bfe3b04d3f02022c8e627280dee1e6b0b526" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;规范XML（不带注释）&lt;/a&gt;规范化方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="8d03ca9ec12e255299bb77708dc8410b70e2f6e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt; Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt;具有注释&lt;/a&gt;规范化方法算法URI的Canonical XML。</target>
        </trans-unit>
        <trans-unit id="2b55c67a0d3b64eea8534ec8e0bbb7a17ff9f718" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpexchange&quot;&gt;&lt;code&gt;HttpExchange&lt;/code&gt;&lt;/a&gt; class encapsulates everything an application needs to process incoming requests and to generate appropriate responses.</source>
          <target state="translated">该&lt;a href=&quot;httpexchange&quot;&gt; &lt;code&gt;HttpExchange&lt;/code&gt; &lt;/a&gt;类封装一切的应用程序需要处理传入的请求，并产生相应的反应。</target>
        </trans-unit>
        <trans-unit id="a98781d4e7260d7cef0e2c5a0ed41bd67c0822aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httprequest.bodypublishers#noBody()&quot;&gt;&lt;code&gt;noBody&lt;/code&gt;&lt;/a&gt; request body publisher can be used where no request body is required or appropriate. Whether a method is restricted, or not, is implementation specific. For example, some implementations may choose to restrict the &lt;code&gt;CONNECT&lt;/code&gt; method.</source>
          <target state="translated">在&lt;a href=&quot;httprequest.bodypublishers#noBody()&quot;&gt; &lt;code&gt;noBody&lt;/code&gt; &lt;/a&gt;在不需要请求体或适当的请求体出版商可以使用。是否限制方法是特定于实现的。例如，某些实现可能选择限制 &lt;code&gt;CONNECT&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="6b121b64ccce6e083946b53f51efe1baa69ca2c2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available after the entire response has been read.</source>
          <target state="translated">读取整个响应后，即可使用使用此订阅服务器的&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="270c350cfd8851cc33080ad9adabc067ee58e5f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body bytes can then be obtained by subscribing to the publisher returned by the &lt;code&gt;HttpResponse&lt;/code&gt;&lt;a href=&quot;httpresponse#body()&quot;&gt;&lt;code&gt;body&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">读取响应头后，即可立即使用此订阅服务器的&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;，而无需等待整个正文被处理。然后，可以通过订阅 &lt;code&gt;HttpResponse&lt;/code&gt; &lt;a href=&quot;httpresponse#body()&quot;&gt; &lt;code&gt;body&lt;/code&gt; &lt;/a&gt;方法返回的发布者来获取响应主体字节。</target>
        </trans-unit>
        <trans-unit id="cc75a5baa31a01f6a547ced8e614c9253df03795" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body can then be read directly from the &lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">读取响应头后，即可立即使用此订阅服务器的&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;，而无需等待整个正文被处理。然后可以直接从&lt;a href=&quot;../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;读取响应主体。</target>
        </trans-unit>
        <trans-unit id="c4a301962377dbb6dfc7d3d088a9924195ee0fe6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;httpresponse&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt; using this subscriber is available immediately after the response headers have been read, without requiring to wait for the entire body to be processed. The response body can then be read directly from the &lt;a href=&quot;../../../../java.base/java/util/stream/stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">读取响应头后，即可立即使用此订阅服务器的&lt;a href=&quot;httpresponse&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;，而无需等待整个正文被处理。然后可以直接从&lt;a href=&quot;../../../../java.base/java/util/stream/stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; 中&lt;/a&gt;读取响应主体。</target>
        </trans-unit>
        <trans-unit id="0a88e3e4e9db9f8a64057b9d11d9dd15660e4815" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=imf_overview&quot;&gt;Input Method Framework&lt;/a&gt; lets text components interact with input methods, separate software components that preprocess events to let users enter thousands of different characters using keyboards with far fewer keys. &lt;code&gt;JTextComponent&lt;/code&gt; is an &lt;em&gt;active client&lt;/em&gt; of the framework, so it implements the preferred user interface for interacting with input methods. As a consequence, some key events do not reach the text component because they are handled by an input method, and some text input reaches the text component as committed text within an &lt;a href=&quot;../../../java/awt/event/inputmethodevent&quot;&gt;&lt;code&gt;InputMethodEvent&lt;/code&gt;&lt;/a&gt; instead of as a key event. The complete text input is the combination of the characters in &lt;code&gt;keyTyped&lt;/code&gt; key events and committed text in input method events.</source>
          <target state="translated">使用&lt;a href=&quot;https://docs.oracle.com/pls/topic/lookup?ctx=javase15&amp;amp;id=imf_overview&quot;&gt;输入法框架&lt;/a&gt;，文本组件可以与输入法进行交互，它们是单独的软件组件，可以对事件进行预处理，以使用户可以使用具有更少按键的键盘输入成千上万个不同的字符。 &lt;code&gt;JTextComponent&lt;/code&gt; 是框架的&lt;em&gt;活动客户端&lt;/em&gt;，因此它实现了用于与输入方法进行交互的首选用户界面。结果，某些键事件没有到达文本组件，因为它们是由输入方法处理的，并且某些文本输入作为&lt;a href=&quot;../../../java/awt/event/inputmethodevent&quot;&gt; &lt;code&gt;InputMethodEvent&lt;/code&gt; 中的&lt;/a&gt;提交文本而不是键事件到达了文本组件。完整的文本输入是 &lt;code&gt;keyTyped&lt;/code&gt; 键事件中的字符和输入法事件中的提交文本的组合。</target>
        </trans-unit>
        <trans-unit id="cee6ebd1c78062b9217ddd4f1433c90767823779" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt; Catalog Standard&lt;/a&gt; distinguished &lt;code&gt;external identifiers&lt;/code&gt; from &lt;code&gt;uri entries&lt;/code&gt; as being used to solely identify DTDs, while &lt;code&gt;uri entries&lt;/code&gt; for other resources such as stylesheets and schema. The Java APIs, such as &lt;a href=&quot;../stream/xmlresolver&quot;&gt;&lt;code&gt;XMLResolver&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt;&lt;code&gt;LSResourceResolver&lt;/code&gt;&lt;/a&gt; however, make no such distinction. In consistent with the existing Java API, this CatalogResolver recognizes a system identifier as a URI and will search both &lt;code&gt;system&lt;/code&gt; and &lt;code&gt;uri&lt;/code&gt; entries in a catalog in order to find a matching entry.</source>
          <target state="translated">商品&lt;a href=&quot;https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html&quot;&gt;目录标准&lt;/a&gt;将 &lt;code&gt;uri entries&lt;/code&gt; &lt;code&gt;external identifiers&lt;/code&gt; 与仅用于标识DTD的区别，而 &lt;code&gt;uri entries&lt;/code&gt; 用于其他资源（如样式表和架构）。但是，Java API（例如&lt;a href=&quot;../stream/xmlresolver&quot;&gt; &lt;code&gt;XMLResolver&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../../org/w3c/dom/ls/lsresourceresolver&quot;&gt; &lt;code&gt;LSResourceResolver&lt;/code&gt; )&lt;/a&gt;没有这种区别。与现有的Java API一致，此CatalogResolver将系统标识符识别为URI，并将在目录中搜索 &lt;code&gt;system&lt;/code&gt; 条目和 &lt;code&gt;uri&lt;/code&gt; 条目，以找到匹配的条目。</target>
        </trans-unit>
        <trans-unit id="6a01a0650bec2f8bee323fb677c1487d4fef943f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;Input Method Framework&lt;/a&gt; lets text components interact with input methods, separate software components that preprocess events to let users enter thousands of different characters using keyboards with far fewer keys. &lt;code&gt;JTextComponent&lt;/code&gt; is an &lt;em&gt;active client&lt;/em&gt; of the framework, so it implements the preferred user interface for interacting with input methods. As a consequence, some key events do not reach the text component because they are handled by an input method, and some text input reaches the text component as committed text within an &lt;a href=&quot;../../../java/awt/event/inputmethodevent&quot;&gt;&lt;code&gt;InputMethodEvent&lt;/code&gt;&lt;/a&gt; instead of as a key event. The complete text input is the combination of the characters in &lt;code&gt;keyTyped&lt;/code&gt; key events and committed text in input method events.</source>
          <target state="translated">使用&lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=imf_overview&quot;&gt;输入法框架&lt;/a&gt;，文本组件可以与输入法进行交互，它们是单独的软件组件，可以对事件进行预处理，以使用户可以使用具有更少按键的键盘输入成千上万个不同的字符。 &lt;code&gt;JTextComponent&lt;/code&gt; 是框架的&lt;em&gt;活动客户端&lt;/em&gt;，因此它实现了用于与输入方法进行交互的首选用户界面。结果，某些键事件没有到达文本组件，因为它们是由输入方法处理的，并且某些文本输入作为&lt;a href=&quot;../../../java/awt/event/inputmethodevent&quot;&gt; &lt;code&gt;InputMethodEvent&lt;/code&gt; 中的&lt;/a&gt;提交文本而不是键事件到达了文本组件。完整的文本输入是 &lt;code&gt;keyTyped&lt;/code&gt; 键事件中的字符和输入法事件中的提交文本的组合。</target>
        </trans-unit>
        <trans-unit id="821b1efd5e9331beb5a98d63afd9c30f171a3b67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#base64&quot;&gt;Base64&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#base64&quot;&gt;Base64编码&lt;/a&gt;变换算法URI。</target>
        </trans-unit>
        <trans-unit id="bbcb5a791ba2d2d5d17fa2aa076aa492c569a339" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;&gt;DSA-SHA1&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="translated">在&lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#dsa-sha1&quot;&gt;DSA-SHA1&lt;/a&gt;（DSS）的签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="da0c9ccc9ebdeb88ffd13a27052f177a67a008cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;&gt; Enveloped Signature&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;&gt;封装的签名&lt;/a&gt;变换算法URI。</target>
        </trans-unit>
        <trans-unit id="dc877ea8c2badd57fe1a133fd8758f1776289aad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;&gt;HMAC-SHA1&lt;/a&gt; MAC signature method algorithm URI</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#hmac-sha1&quot;&gt;HMAC-SHA1&lt;/a&gt; MAC签名方法的算法URI</target>
        </trans-unit>
        <trans-unit id="c42d987f35931c999bf4150f958eed2c2629e9b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;RSA-SHA1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;&gt;RSA-SHA1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="6d88ad7d6a30e087fd7278525804a75354219bd5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#sha1&quot;&gt; SHA1&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2000/09/xmldsig#sha1&quot;&gt;SHA1&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="34ff66f8edb94f4216f72801dd5ee130936b04aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1&quot;&gt; ECDSA-SHA1&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1&quot;&gt;ECDSA-SHA1&lt;/a&gt;（FIPS 180-4）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="f1f9097a36f1aa7e536ffc76ffc1c6e8ef68411f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224&quot;&gt; ECDSA-SHA224&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha224&quot;&gt;ECDSA-SHA224&lt;/a&gt;（FIPS 180-4）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="cf4f6f23c763a0a67916cab42801cd508d1f5bc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256&quot;&gt; ECDSA-SHA256&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256&quot;&gt;ECDSA-SHA256&lt;/a&gt;（FIPS 180-4）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="613f0a60fd3f5a7df648cd7846c4298ed057b006" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384&quot;&gt; ECDSA-SHA384&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384&quot;&gt;ECDSA-SHA384&lt;/a&gt;（FIPS 180-4）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="ed62de47358453a54c1615c2147ec1ca5ca6af52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512&quot;&gt; ECDSA-SHA512&lt;/a&gt; (FIPS 180-4) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512&quot;&gt;ECDSA-SHA512&lt;/a&gt;（FIPS 180-4）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="e77f8be921a585668de558d13f27baecbd7b44c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha224&quot;&gt; HMAC-SHA224&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha224&quot;&gt;HMAC-SHA224&lt;/a&gt; MAC签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="96c532b3cd7eb8180d388d7b3ac818313ab174d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt; HMAC-SHA256&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha256&quot;&gt;HMAC-SHA256&lt;/a&gt; MAC签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="d005c2dcea2aee8b106bbbb9b3740c4f5b2eb1be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha384&quot;&gt; HMAC-SHA384&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha384&quot;&gt;HMAC-SHA384&lt;/a&gt; MAC签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="be02027dc20907c66b6bb34583ca0a64daa956fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha512&quot;&gt; HMAC-SHA512&lt;/a&gt; MAC signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#hmac-sha512&quot;&gt;HMAC-SHA512&lt;/a&gt; MAC签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="0103be2fb2f2263b60339a68ddbf6162d5752a7f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha224&quot;&gt; RSA-SHA224&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha224&quot;&gt;RSA-SHA224&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="6cb119b8eebb73767953d04ec8af55943794a5f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;&gt; RSA-SHA256&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;&gt;RSA-SHA256&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="96b35230ea4d531e62c1437fd7151d9bc3a9dc1d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;&gt; RSA-SHA384&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha384&quot;&gt;RSA-SHA384&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="133423919d530f521d7bbef40991e96668d93a2f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;&gt; RSA-SHA512&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#rsa-sha512&quot;&gt;RSA-SHA512&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="3a1ddb86815200a5c901bda798ad17545c36e421" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#sha224&quot;&gt; SHA224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#sha224&quot;&gt;SHA224&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="b362dc22298f8a244a50a6a4ac1429b0345c834f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#sha384&quot;&gt; SHA384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmldsig-more#sha384&quot;&gt;SHA3​​84&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="5ce6676398831619b682e5056cc9f9d2a94ef627" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmlenc#ripemd160&quot;&gt; RIPEMD-160&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">所述&lt;a href=&quot;https://www.w3.org/2001/04/xmlenc#ripemd160&quot;&gt;RIPEMD-160&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="cbb2222fe585be4a6afdd5a4b21810abe40e7d5a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmlenc#sha256&quot;&gt; SHA256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmlenc#sha256&quot;&gt;SHA256&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="fc48a22714193f4548fd9bac83e6f60f23b3fa01" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/04/xmlenc#sha512&quot;&gt; SHA512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2001/04/xmlenc#sha512&quot;&gt;SHA512&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="146fca0e01d97b8c408766247ce764c5afd4918a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;Exclusive Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;https://www.w3.org/2001/10/xml-exc-c14n#&quot;&gt;独家规范XML（不带注释）&lt;/a&gt;规范化方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="0913030298c97979e0efc00deefbc82e51558910" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt; Exclusive Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/2001/10/xml-exc-c14n#WithComments&quot;&gt;带有注释&lt;/a&gt;规范化方法算法URI的Exclusive Canonical XML。</target>
        </trans-unit>
        <trans-unit id="a108490547def739590e4c659f602b968e58287b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2002/06/xmldsig-filter2&quot;&gt; XPath Filter 2&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2002/06/xmldsig-filter2&quot;&gt;XPath的过滤器2&lt;/a&gt;变换算法URI。</target>
        </trans-unit>
        <trans-unit id="66d174ea4b71bc23dc838b776a448406da9f293f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1&quot;&gt; SHA1-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha1-rsa-MGF1&quot;&gt;SHA1-RSA-MGF1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="1159e7cd319426806f6649e8ffbf438e039cf0e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1&quot;&gt; SHA224-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha224-rsa-MGF1&quot;&gt;SHA224-RSA-MGF1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="9f7423318ce629c8c8a80f1338ce12d2fead9c21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1&quot;&gt; SHA256-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha256-rsa-MGF1&quot;&gt;SHA256-RSA-MGF1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="1face567fc1c904102d366aeeba871dad42b1c79" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-224&quot;&gt; SHA3-224&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-224&quot;&gt;SHA3​​-224&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="5d0ee28fafe12e07cf0ab7fdb8a43d22cc0f439d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-256&quot;&gt; SHA3-256&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-256&quot;&gt;SHA3​​-256&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="36381cc434d23fa1be8484dea84c149223242939" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-384&quot;&gt; SHA3-384&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-384&quot;&gt;SHA3​​-384&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="25a69038d7aec6034b49d8a99838500529ff8794" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-512&quot;&gt; SHA3-512&lt;/a&gt; digest method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha3-512&quot;&gt;SHA3​​-512&lt;/a&gt;摘要方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="e322e964cb0ec4150f27cbc822f3b807fd4cd420" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1&quot;&gt; SHA384-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha384-rsa-MGF1&quot;&gt;SHA3​​84-RSA-MGF1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="e762ca5061fe20a005b8c1b707048bf6ad05fd00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1&quot;&gt; SHA512-RSA-MGF1&lt;/a&gt; (PKCS #1) signature method algorithm URI.</source>
          <target state="translated">的&lt;a href=&quot;https://www.w3.org/2007/05/xmldsig-more#sha512-rsa-MGF1&quot;&gt;SHA512-RSA-MGF1&lt;/a&gt;（PKCS＃1）签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="7bb8959109476ca23d1fa13867eee9859ee54cef" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/2009/xmldsig11#dsa-sha256&quot;&gt;DSA-SHA256&lt;/a&gt; (DSS) signature method algorithm URI.</source>
          <target state="translated">在&lt;a href=&quot;https://www.w3.org/2009/xmldsig11#dsa-sha256&quot;&gt;DSA-SHA256&lt;/a&gt;（DSS）的签名方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="a8b4035aad4a447135ddab9fcb900bfb0e73224a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/1999/REC-xpath-19991116&quot;&gt;XPath&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;https://www.w3.org/TR/1999/REC-xpath-19991116&quot;&gt;XPath的&lt;/a&gt;变换算法URI。</target>
        </trans-unit>
        <trans-unit id="ffabd99230abc1bb80bb5d2dfa6619a4defbec8a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/1999/REC-xslt-19991116&quot;&gt;XSLT&lt;/a&gt; transform algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;https://www.w3.org/TR/1999/REC-xslt-19991116&quot;&gt;XSLT&lt;/a&gt;转换算法URI。</target>
        </trans-unit>
        <trans-unit id="2bfcd6626faee300c768a10ca4c44c665fd437ab" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;Canonical XML (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;https://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;&gt;规范XML（不带注释）&lt;/a&gt;规范化方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="b611aa168a0209c6c1a2490aba55ec2807260376" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt; Canonical XML with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments&quot;&gt;具有注释&lt;/a&gt;规范化方法算法URI的Canonical XML。</target>
        </trans-unit>
        <trans-unit id="642fb64bde169657a9566fb21ac41012e5eba024" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/xml-c14n11/&quot;&gt;Canonical XML 1.1 (without comments)&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">该&lt;a href=&quot;https://www.w3.org/TR/xml-c14n11/&quot;&gt;规范的XML 1.1（不带注释）&lt;/a&gt;规范化方法的算法URI。</target>
        </trans-unit>
        <trans-unit id="b5accf9d05e8b1abfa3efcbe99e2b027cb06d2dc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.w3.org/TR/xml-c14n11/#WithComments&quot;&gt; Canonical XML 1.1 with comments&lt;/a&gt; canonicalization method algorithm URI.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/xml-c14n11/#WithComments&quot;&gt;带有注释&lt;/a&gt;规范化方法算法URI的Canonical XML 1.1。</target>
        </trans-unit>
        <trans-unit id="761513f2b0bbba586605e4294850b23aff51188d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;imagereader#getSourceRegion-javax.imageio.ImageReadParam-int-int-&quot;&gt;&lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt;&lt;/a&gt; method may be used if only source clipping is desired.</source>
          <target state="translated">所述&lt;a href=&quot;imagereader#getSourceRegion-javax.imageio.ImageReadParam-int-int-&quot;&gt; &lt;code&gt;getSourceRegion&amp;gt;&lt;/code&gt; &lt;/a&gt;如果仅源削波需要，可以使用方法。</target>
        </trans-unit>
        <trans-unit id="1eedddde68bb46978d525f7790711dd02e0ebfc9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inet6address#lform&quot;&gt;full uncompressed form&lt;/a&gt; of an IPv6 literal address is also valid.</source>
          <target state="translated">IPv6文字地址的&lt;a href=&quot;inet6address#lform&quot;&gt;完全未压缩形式&lt;/a&gt;也是有效的。</target>
        </trans-unit>
        <trans-unit id="89aa71069d9b64ba38bde1b7ed22da8a98a99b64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;inetaddress&quot;&gt;&lt;code&gt;InetAddress&lt;/code&gt;&lt;/a&gt; class is the abstraction representing an IP (Internet Protocol) address. It has two subclasses:</source>
          <target state="translated">该&lt;a href=&quot;inetaddress&quot;&gt; &lt;code&gt;InetAddress&lt;/code&gt; &lt;/a&gt;类是表示IP（互联网协议）地址的抽象。它具有两个子类：</target>
        </trans-unit>
        <trans-unit id="63af60ec9959bd5779b0337a24c9f2bd2daa5ff3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;japaneseera#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1 Later era is numbered 2 (&lt;a href=&quot;japaneseera#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;japaneseera#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;japaneseera#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;), only Meiji and later eras are supported.</source>
          <target state="translated">包含1970-01-01（ISO日历系统）的&lt;a href=&quot;japaneseera#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt;时代的值为1。更高的时代编号为2（&lt;a href=&quot;japaneseera#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt;）。较早的时代编号为0（&lt;a href=&quot;japaneseera#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt;），-1（&lt;a href=&quot;japaneseera#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt;），仅支持明治及更高时代。</target>
        </trans-unit>
        <trans-unit id="5ad4c9f7c1d38ff17eed005c539f21753e0ecc72" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;japaneseera#SHOWA&quot;&gt;&lt;code&gt;SHOWA&lt;/code&gt;&lt;/a&gt; era that contains 1970-01-01 (ISO calendar system) has the value 1. Later eras are numbered from 2 (&lt;a href=&quot;japaneseera#HEISEI&quot;&gt;&lt;code&gt;HEISEI&lt;/code&gt;&lt;/a&gt;). Earlier eras are numbered 0 (&lt;a href=&quot;japaneseera#TAISHO&quot;&gt;&lt;code&gt;TAISHO&lt;/code&gt;&lt;/a&gt;), -1 (&lt;a href=&quot;japaneseera#MEIJI&quot;&gt;&lt;code&gt;MEIJI&lt;/code&gt;&lt;/a&gt;)).</source>
          <target state="translated">包含1970-01-01（ISO日历系统）的&lt;a href=&quot;japaneseera#SHOWA&quot;&gt; &lt;code&gt;SHOWA&lt;/code&gt; &lt;/a&gt;时代的值为1。以后的时代从2（&lt;a href=&quot;japaneseera#HEISEI&quot;&gt; &lt;code&gt;HEISEI&lt;/code&gt; &lt;/a&gt;）开始编号。早期时代，编号为0（&lt;a href=&quot;japaneseera#TAISHO&quot;&gt; &lt;code&gt;TAISHO&lt;/code&gt; &lt;/a&gt;）-1（&lt;a href=&quot;japaneseera#MEIJI&quot;&gt; &lt;code&gt;MEIJI&lt;/code&gt; &lt;/a&gt;））。</target>
        </trans-unit>
        <trans-unit id="cb417ca2de11481b91b5b2da7940f6f41e300934" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jconsolecontext.connectionstate&quot;&gt;&lt;code&gt;ConnectionState&lt;/code&gt;&lt;/a&gt; bound property name.</source>
          <target state="translated">该&lt;a href=&quot;jconsolecontext.connectionstate&quot;&gt; &lt;code&gt;ConnectionState&lt;/code&gt; &lt;/a&gt;绑定属性名。</target>
        </trans-unit>
        <trans-unit id="cf7b841f1566d0e6d591c7e7f4344dce13c360cd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jdk/jshell/execution/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.execution&lt;/code&gt;&lt;/a&gt; package contains implementations of the interfaces in &lt;a href=&quot;jdk/jshell/spi/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.spi&lt;/code&gt;&lt;/a&gt;. Otherwise, the four packages are independent, operate at different levels, and do not share functionality or definitions.</source>
          <target state="translated">所述&lt;a href=&quot;jdk/jshell/execution/package-summary&quot;&gt; &lt;code&gt;jdk.jshell.execution&lt;/code&gt; &lt;/a&gt;包中包含的接口的实现&lt;a href=&quot;jdk/jshell/spi/package-summary&quot;&gt; &lt;code&gt;jdk.jshell.spi&lt;/code&gt; &lt;/a&gt;。否则，这四个程序包是独立的，在不同的级别上运行，并且不共享功能或定义。</target>
        </trans-unit>
        <trans-unit id="1b62db497a47756f4923f4b3bee10df00a18df85" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jdk/jshell/package-summary&quot;&gt;&lt;code&gt;jdk.jshell&lt;/code&gt;&lt;/a&gt; is the package for creating 'snippet' evaluating tools. Generally, this is only package that would be needed for creating tools.</source>
          <target state="translated">该&lt;a href=&quot;jdk/jshell/package-summary&quot;&gt; &lt;code&gt;jdk.jshell&lt;/code&gt; &lt;/a&gt;是包创建&amp;ldquo;片断&amp;rdquo;评估工具。通常，这只是创建工具所需的软件包。</target>
        </trans-unit>
        <trans-unit id="a4e8be2575269483bff39e4d55f47fdb289c2059" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jdk/jshell/spi/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.spi&lt;/code&gt;&lt;/a&gt; package specifies a Service Provider Interface (SPI) for defining execution engine implementations for tools based on the &lt;a href=&quot;jdk/jshell/package-summary&quot;&gt;&lt;code&gt;jdk.jshell&lt;/code&gt;&lt;/a&gt; API. The &lt;a href=&quot;jdk/jshell/execution/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.execution&lt;/code&gt;&lt;/a&gt; package provides standard implementations of &lt;a href=&quot;jdk/jshell/spi/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.spi&lt;/code&gt;&lt;/a&gt; interfaces and supporting code. It also serves as a library of functionality for defining new execution engine implementations.</source>
          <target state="translated">所述&lt;a href=&quot;jdk/jshell/spi/package-summary&quot;&gt; &lt;code&gt;jdk.jshell.spi&lt;/code&gt; &lt;/a&gt;包指定一个服务提供程序接口（SPI），用于定义用于基于所述工具执行引擎实现&lt;a href=&quot;jdk/jshell/package-summary&quot;&gt; &lt;code&gt;jdk.jshell&lt;/code&gt; &lt;/a&gt; API。所述&lt;a href=&quot;jdk/jshell/execution/package-summary&quot;&gt; &lt;code&gt;jdk.jshell.execution&lt;/code&gt; &lt;/a&gt;包提供的标准实现&lt;a href=&quot;jdk/jshell/spi/package-summary&quot;&gt; &lt;code&gt;jdk.jshell.spi&lt;/code&gt; &lt;/a&gt;接口和支持代码。它还用作定义新执行引擎实现的功能库。</target>
        </trans-unit>
        <trans-unit id="8d8960b2d928e6284d2003ad45423ccd0a3f8a73" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;jdk/jshell/tool/package-summary&quot;&gt;&lt;code&gt;jdk.jshell.tool&lt;/code&gt;&lt;/a&gt; package supports programmatically launching the &lt;em&gt;jshell&lt;/em&gt; tool.</source>
          <target state="translated">该&lt;a href=&quot;jdk/jshell/tool/package-summary&quot;&gt; &lt;code&gt;jdk.jshell.tool&lt;/code&gt; &lt;/a&gt;包支持程序启动&lt;em&gt;jshell&lt;/em&gt;工具。</target>
        </trans-unit>
        <trans-unit id="53e05d8dddbec45eaf69a1abeb3e0b1d8a3d4dde" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;linkedhashmap#removeEldestEntry-java.util.Map.Entry-&quot;&gt;&lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt;&lt;/a&gt; method may be overridden to impose a policy for removing stale mappings automatically when new mappings are added to the map.</source>
          <target state="translated">所述&lt;a href=&quot;linkedhashmap#removeEldestEntry-java.util.Map.Entry-&quot;&gt; &lt;code&gt;removeEldestEntry(Map.Entry)&lt;/code&gt; &lt;/a&gt;方法可以被重写以强加一个策略，用于当新映射添加到地图自动除去失效的映射。</target>
        </trans-unit>
        <trans-unit id="e4349deb740443b661611a6b6b7d62724a4a215b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locateregistry&quot;&gt;&lt;code&gt;LocateRegistry&lt;/code&gt;&lt;/a&gt; class provides a programmatic API for constructing a bootstrap reference to a &lt;code&gt;Registry&lt;/code&gt; at a remote address (see the static &lt;code&gt;getRegistry&lt;/code&gt; methods) and for creating and exporting a &lt;code&gt;Registry&lt;/code&gt; in the current VM on a particular local address (see the static &lt;code&gt;createRegistry&lt;/code&gt; methods).</source>
          <target state="translated">所述&lt;a href=&quot;locateregistry&quot;&gt; &lt;code&gt;LocateRegistry&lt;/code&gt; &lt;/a&gt;类提供了一种构建的自举参照的编程API &lt;code&gt;Registry&lt;/code&gt; 在远程地址（见静态 &lt;code&gt;getRegistry&lt;/code&gt; 方法）和用于产生和导出一个 &lt;code&gt;Registry&lt;/code&gt; 上特定的本地地址中的当前VM（见静态 &lt;code&gt;createRegistry&lt;/code&gt; 方法）。</target>
        </trans-unit>
        <trans-unit id="685e9f05827cafac5b9700afb54eb83f6c776e78" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; interface supports locking disciplines that differ in semantics (reentrant, fair, etc), and that can be used in non-block-structured contexts including hand-over-hand and lock reordering algorithms. The main implementation is &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt;接口支持锁定在语义（折返，公平，等等）不同的学科，并且可在非块结构的上下文，包括交接手和锁定重排序算法一起使用。主要实现是&lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3180b0ec0d45d09638da4a7e022ef32c09072ff6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;managementfactory&quot;&gt;&lt;code&gt;ManagementFactory&lt;/code&gt;&lt;/a&gt; class is the management factory class for the Java platform. This class provides a set of static factory methods to obtain the MXBeans for the Java platform to allow an application to access the MXBeans directly.</source>
          <target state="translated">该&lt;a href=&quot;managementfactory&quot;&gt; &lt;code&gt;ManagementFactory&lt;/code&gt; &lt;/a&gt;类是Java平台的管理工厂类。此类提供了一组静态工厂方法来获取Java平台的MXBean，以允许应用程序直接访问MXBean。</target>
        </trans-unit>
        <trans-unit id="6aee927bc4b4fd7e8464ec83c8eda0aa86fccfbd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;managementfactory#getPlatformManagementInterfaces--&quot;&gt;&lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt;&lt;/a&gt; method returns all management interfaces supported in the Java virtual machine including the standard management interfaces listed in the tables below as well as the management interfaces extended by the JDK implementation.</source>
          <target state="translated">该&lt;a href=&quot;managementfactory#getPlatformManagementInterfaces--&quot;&gt; &lt;code&gt;getPlatformManagementInterfaces&lt;/code&gt; &lt;/a&gt;方法返回在Java虚拟机包括下面的表以及通过JDK实现扩展管理接口中列出的标准管理接口，所支持的所有管理接口。</target>
        </trans-unit>
        <trans-unit id="c882421782dfc7080f4d7ba69c0672ccbaee2976" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#find--&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt; method scans the input sequence looking for the next subsequence that matches the pattern.</source>
          <target state="translated">该&lt;a href=&quot;matcher#find--&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt;方法扫描寻找与模式匹配的下一个子输入序列。</target>
        </trans-unit>
        <trans-unit id="f8f9d8ffa3354e5ea114ec9c9eecd670dfa20d2a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#lookingAt--&quot;&gt;&lt;code&gt;lookingAt&lt;/code&gt;&lt;/a&gt; method attempts to match the input sequence, starting at the beginning, against the pattern.</source>
          <target state="translated">该&lt;a href=&quot;matcher#lookingAt--&quot;&gt; &lt;code&gt;lookingAt&lt;/code&gt; &lt;/a&gt;方法企图以匹配输入序列，起始于开始时，对所述图案。</target>
        </trans-unit>
        <trans-unit id="81a4840468c5585768ffd0339442ff61c0e3f495" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;matcher#matches--&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method attempts to match the entire input sequence against the pattern.</source>
          <target state="translated">该&lt;a href=&quot;matcher#matches--&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt;方法的尝试来匹配图案中的整个输入序列。</target>
        </trans-unit>
        <trans-unit id="3b536101e87b34402f5a75ef5e45b85b8065447c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method provides an estimate of the current usage of a memory pool. For a garbage-collected memory pool, the amount of used memory includes the memory occupied by all objects in the pool including both &lt;em&gt;reachable&lt;/em&gt; and &lt;em&gt;unreachable&lt;/em&gt; objects.</source>
          <target state="translated">所述&lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt;方法提供了存储器池的当前使用情况的估计。对于垃圾回收的内存池，已用内存量包括池中所有对象（包括&lt;em&gt;可&lt;/em&gt;&lt;em&gt;访问&lt;/em&gt;对象和&lt;em&gt;不可访问&lt;/em&gt;对象）占用的内存。</target>
        </trans-unit>
        <trans-unit id="2917cba2196f42068511cb8866976f8cefd8ba43" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt;&lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if this functionality is supported.</source>
          <target state="translated">所述&lt;a href=&quot;memorypoolmxbean#isCollectionUsageThresholdSupported--&quot;&gt; &lt;code&gt;isCollectionUsageThresholdSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否支持该功能。</target>
        </trans-unit>
        <trans-unit id="00b1d50b89741dae5005d34d49e3e5f4412e5439" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;methodhandles#lookup()&quot;&gt;&lt;code&gt;MethodHandles.lookup()&lt;/code&gt;&lt;/a&gt; factory method produces a &lt;code&gt;Lookup&lt;/code&gt; object with &lt;code&gt;null&lt;/code&gt; previous lookup class. &lt;a href=&quot;#in(java.lang.Class)&quot;&gt;&lt;code&gt;lookup.in(D.class)&lt;/code&gt;&lt;/a&gt; transforms the &lt;code&gt;lookup&lt;/code&gt; on class &lt;code&gt;C&lt;/code&gt; to class &lt;code&gt;D&lt;/code&gt; without elevation of privileges. If &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt; are in the same module, &lt;code&gt;lookup2&lt;/code&gt; records &lt;code&gt;D&lt;/code&gt; as the new lookup class and keeps the same previous lookup class as the original &lt;code&gt;lookup&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if not present.</source>
          <target state="translated">所述&lt;a href=&quot;methodhandles#lookup()&quot;&gt; &lt;code&gt;MethodHandles.lookup()&lt;/code&gt; &lt;/a&gt;工厂方法产生一个 &lt;code&gt;Lookup&lt;/code&gt; 与对象 &lt;code&gt;null&lt;/code&gt; 以前查找类。&lt;a href=&quot;#in(java.lang.Class)&quot;&gt; &lt;code&gt;lookup.in(D.class)&lt;/code&gt; &lt;/a&gt;将在类 &lt;code&gt;C&lt;/code&gt; 上的 &lt;code&gt;lookup&lt;/code&gt; 转换为类 &lt;code&gt;D&lt;/code&gt; ,而无需提升特权。如果 &lt;code&gt;C&lt;/code&gt; 和 &lt;code&gt;D&lt;/code&gt; 在同一模块中，则 &lt;code&gt;lookup2&lt;/code&gt; 将 &lt;code&gt;D&lt;/code&gt; 记录为新的查找类，并保留与原始 &lt;code&gt;lookup&lt;/code&gt; 相同的先前查找类；如果不存在，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00777c593762897a62ff30f882e9e994e0fd4435" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt; correspond to all major use cases for methods, constructors, and fields. These use cases may be distinguished using small integers as follows:</source>
          <target state="translated">在&lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;查找工厂方法&lt;/a&gt;符合所有主要的用例方法，构造函数和字段。可以使用小整数来区分这些用例，如下所示：</target>
        </trans-unit>
        <trans-unit id="2c3b7cfe91905e95935f97b235b0958422f4db84" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;moduledescriptor#version()&quot;&gt;&lt;code&gt;version&lt;/code&gt;&lt;/a&gt;, and the module name when the attribute &quot;&lt;code&gt;Automatic-Module-Name&lt;/code&gt;&quot; is not present, are derived from the file name of the JAR file as follows:</source>
          <target state="translated">的&lt;a href=&quot;moduledescriptor#version()&quot;&gt; &lt;code&gt;version&lt;/code&gt; &lt;/a&gt;，并且当属性&amp;ldquo;模块名 &lt;code&gt;Automatic-Module-Name&lt;/code&gt; &amp;rdquo;不存在时，从JAR文件的文件名推导如下：</target>
        </trans-unit>
        <trans-unit id="803a5dc5363ca39a6c192f06387b9fe75f794ba3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt;&lt;/a&gt; method is used to join a group and receive all multicast datagrams sent to the group. A channel may join several multicast groups and may join the same group on several &lt;a href=&quot;../../net/networkinterface&quot;&gt;&lt;code&gt;interfaces&lt;/code&gt;&lt;/a&gt;. Membership is dropped by invoking the &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method on the returned &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt;. If the underlying platform supports source filtering then the &lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt;&lt;code&gt;block&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt;&lt;code&gt;unblock&lt;/code&gt;&lt;/a&gt; methods can be used to block or unblock multicast datagrams from particular source addresses.</source>
          <target state="translated">在&lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface)&lt;/code&gt; &lt;/a&gt;方法用于加入组和接收发送到该组的所有多播数据报。一个通道可以加入多个组播组，也可以在多个&lt;a href=&quot;../../net/networkinterface&quot;&gt; &lt;code&gt;interfaces&lt;/code&gt; &lt;/a&gt;上加入同一个组。通过在返回的&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt;上调用&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;方法来删除成员资格。如果基础平台支持源过滤，则可以使用&lt;a href=&quot;membershipkey#block-java.net.InetAddress-&quot;&gt; &lt;code&gt;block&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;membershipkey#unblock-java.net.InetAddress-&quot;&gt; &lt;code&gt;unblock&lt;/code&gt; &lt;/a&gt;方法来阻止或取消阻止来自特定源地址的多播数据报。</target>
        </trans-unit>
        <trans-unit id="586959a334aab9367192bda3b22ae8905ccfbfb5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-java.net.InetAddress-&quot;&gt;&lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt;&lt;/a&gt; method is used to begin receiving datagrams sent to a group whose source address matches a given source address. This method throws &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; if the underlying platform does not support source filtering. Membership is &lt;em&gt;cumulative&lt;/em&gt; and this method may be invoked again with the same group and interface to allow receiving datagrams from other source addresses. The method returns a &lt;a href=&quot;membershipkey&quot;&gt;&lt;code&gt;MembershipKey&lt;/code&gt;&lt;/a&gt; that represents membership to receive datagrams from the given source address. Invoking the key's &lt;a href=&quot;membershipkey#drop--&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt; method drops membership so that datagrams from the source address can no longer be received.</source>
          <target state="translated">在&lt;a href=&quot;multicastchannel#join-java.net.InetAddress-java.net.NetworkInterface-java.net.InetAddress-&quot;&gt; &lt;code&gt;join(InetAddress,NetworkInterface,InetAddress)&lt;/code&gt; &lt;/a&gt;方法被用于开始接收发送到其源地址给定的源地址相匹配的一组数据报。如果基础平台不支持源筛选，则此方法将引发&lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;。成员资格是&lt;em&gt;累积性的&lt;/em&gt;，可以使用相同的组和接口再次调用此方法，以允许从其他源地址接收数据报。该方法返回一个&lt;a href=&quot;membershipkey&quot;&gt; &lt;code&gt;MembershipKey&lt;/code&gt; &lt;/a&gt;，该成员表示代表从给定源地址接收数据报的成员资格。调用键的&lt;a href=&quot;membershipkey#drop--&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt;方法会删除成员资格，这样就无法再接收来自源地址的数据报。</target>
        </trans-unit>
        <trans-unit id="ea1666c946dbc92e3963a08d51b7fe1ff2e05b97" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt;&lt;code&gt;syncAll&lt;/code&gt;&lt;/a&gt; operation provides a way to force threads to accept a new target value, even if there is no other synchronization.</source>
          <target state="translated">该&lt;a href=&quot;mutablecallsite#syncAll-java.lang.invoke.MutableCallSite:A-&quot;&gt; &lt;code&gt;syncAll&lt;/code&gt; &lt;/a&gt;操作提供了一种方法来强制线程接受一个新的目标值，即使没有其他的同步。</target>
        </trans-unit>
        <trans-unit id="4a33de6ddb9b787f9d72d46f03220512c25c8dcf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel&quot;&gt;&lt;code&gt;NetworkChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to &lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; the channel's socket, obtain the address to which the socket is bound, and methods to &lt;a href=&quot;networkchannel#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; socket options. The &lt;a href=&quot;multicastchannel&quot;&gt;&lt;code&gt;MulticastChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to join Internet Protocol (IP) multicast groups.</source>
          <target state="translated">该&lt;a href=&quot;networkchannel&quot;&gt; &lt;code&gt;NetworkChannel&lt;/code&gt; &lt;/a&gt;接口指定的方法来&lt;a href=&quot;networkchannel#bind(java.net.SocketAddress)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;通道的插座，获取该socket绑定的地址和方法来&lt;a href=&quot;networkchannel#getOption(java.net.SocketOption)&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;networkchannel#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;套接字选项。该&lt;a href=&quot;multicastchannel&quot;&gt; &lt;code&gt;MulticastChannel&lt;/code&gt; &lt;/a&gt;接口指定的方法来连接Internet协议（IP）多播组。</target>
        </trans-unit>
        <trans-unit id="86bc696e481ab25ea679a816f2b2344f73e99298" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel&quot;&gt;&lt;code&gt;NetworkChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; the channel's socket, obtain the address to which the socket is bound, and methods to &lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; socket options. The &lt;a href=&quot;multicastchannel&quot;&gt;&lt;code&gt;MulticastChannel&lt;/code&gt;&lt;/a&gt; interface specifies methods to join Internet Protocol (IP) multicast groups.</source>
          <target state="translated">该&lt;a href=&quot;networkchannel&quot;&gt; &lt;code&gt;NetworkChannel&lt;/code&gt; &lt;/a&gt;接口指定的方法来&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;通道的插座，获取该socket绑定的地址和方法来&lt;a href=&quot;networkchannel#getOption-java.net.SocketOption-&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt;套接字选项。该&lt;a href=&quot;multicastchannel&quot;&gt; &lt;code&gt;MulticastChannel&lt;/code&gt; &lt;/a&gt;接口指定的方法来连接Internet协议（IP）多播组。</target>
        </trans-unit>
        <trans-unit id="97e5a8c6cebdfee9806373945502b19fe12625e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; methods that do not otherwise have a value to return are specified to return the network channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">指定不具有返回值的&lt;a href=&quot;networkchannel#bind-java.net.SocketAddress-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;networkchannel#setOption-java.net.SocketOption-T-&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt;方法以返回在其上调用它们的网络通道。这使方法调用可以链接在一起。此接口的实现应专用于返回类型，以便可以链接实现类上的方法调用。</target>
        </trans-unit>
        <trans-unit id="2aae4de2a8761dadc1703ebe8bd9d27e209c3303" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;networkinterface&quot;&gt;&lt;code&gt;NetworkInterface&lt;/code&gt;&lt;/a&gt; class provides APIs to browse and query all the networking interfaces (e.g. ethernet connection or PPP endpoint) of the local machine. It is through that class that you can check if any of the local interfaces is configured to support IPv6.</source>
          <target state="translated">该&lt;a href=&quot;networkinterface&quot;&gt; &lt;code&gt;NetworkInterface&lt;/code&gt; 的&lt;/a&gt;类提供API以浏览和查询所有的网络接口在本地机器（例如以太网连接或PPP端点）。通过该类，您可以检查是否有任何本地接口配置为支持IPv6。</target>
        </trans-unit>
        <trans-unit id="1d4398a2182ad9d3d156c72bc1e1b46b563498d0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeanconstructorinfo#getSignature--&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">所述&lt;a href=&quot;openmbeanconstructorinfo#getSignature--&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt;方法应在运行时返回的子类的实例的数组&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;它实现了&lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; &lt;/a&gt;接口（通常为&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="ce3b1f0ce29ed84d089633cd109fcedd10fa19a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeaninfo#getAttributes--&quot;&gt;&lt;code&gt;getAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeaninfo#getOperations--&quot;&gt;&lt;code&gt;getOperations()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;openmbeaninfo#getConstructors--&quot;&gt;&lt;code&gt;getConstructors()&lt;/code&gt;&lt;/a&gt; methods of the implementing class should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../mbeanconstructorinfo&quot;&gt;&lt;code&gt;MBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; respectively which implement the &lt;a href=&quot;openmbeanattributeinfo&quot;&gt;&lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;openmbeanoperationinfo&quot;&gt;&lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;openmbeanconstructorinfo&quot;&gt;&lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt;&lt;/a&gt; interface respectively.</source>
          <target state="translated">实现类的&lt;a href=&quot;openmbeaninfo#getAttributes--&quot;&gt; &lt;code&gt;getAttributes()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;openmbeaninfo#getOperations--&quot;&gt; &lt;code&gt;getOperations()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;openmbeaninfo#getConstructors--&quot;&gt; &lt;code&gt;getConstructors()&lt;/code&gt; &lt;/a&gt;方法应在运行时分别返回&lt;a href=&quot;../mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../mbeanconstructorinfo&quot;&gt; &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;的子类的实例数组，它们分别实现&lt;a href=&quot;openmbeanattributeinfo&quot;&gt; &lt;code&gt;OpenMBeanAttributeInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;openmbeanoperationinfo&quot;&gt; &lt;code&gt;OpenMBeanOperationInfo&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;openmbeanconstructorinfo&quot;&gt; &lt;code&gt;OpenMBeanConstructorInfo&lt;/code&gt; &lt;/a&gt;接口。</target>
        </trans-unit>
        <trans-unit id="fc59af9de6b925c7a001de9e0cda1335db8b9216" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;openmbeanoperationinfo#getSignature--&quot;&gt;&lt;code&gt;getSignature()&lt;/code&gt;&lt;/a&gt; method should return at runtime an array of instances of a subclass of &lt;a href=&quot;../mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt; which implements the &lt;a href=&quot;openmbeanparameterinfo&quot;&gt;&lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt;&lt;/a&gt; interface (typically &lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt;&lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">所述&lt;a href=&quot;openmbeanoperationinfo#getSignature--&quot;&gt; &lt;code&gt;getSignature()&lt;/code&gt; &lt;/a&gt;方法应在运行时返回的子类的实例的数组&lt;a href=&quot;../mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt;它实现了&lt;a href=&quot;openmbeanparameterinfo&quot;&gt; &lt;code&gt;OpenMBeanParameterInfo&lt;/code&gt; &lt;/a&gt;接口（通常为&lt;a href=&quot;openmbeanparameterinfosupport&quot;&gt; &lt;code&gt;OpenMBeanParameterInfoSupport&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="264dc2096f52224fc7a2ff5e5ccbe792a29983b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;pathiterator&quot;&gt;&lt;code&gt;PathIterator&lt;/code&gt;&lt;/a&gt; interface has more detailed descriptions of the types of segments that make up a path and the winding rules that control how to determine which regions are inside or outside the path.</source>
          <target state="translated">所述&lt;a href=&quot;pathiterator&quot;&gt; &lt;code&gt;PathIterator&lt;/code&gt; &lt;/a&gt;接口已更详细的构成的路径类型的段的描述和卷绕规则控制如何确定哪些区域是内部或外部的路径。</target>
        </trans-unit>
        <trans-unit id="008d56029870b1f79472efe94879633297a8063c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributes#permissions()&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; attribute is a set of access permissions. This file attribute view provides access to the nine permission bits defined by the &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; class. These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release.</source>
          <target state="translated">该&lt;a href=&quot;posixfileattributes#permissions()&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;属性是一组访问权限。该文件属性视图提供对&lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt;类定义的九个权限位的访问。这九个权限位确定文件所有者，组和其他文件的&lt;em&gt;读取&lt;/em&gt;，&lt;em&gt;写入&lt;/em&gt;和&lt;em&gt;执行&lt;/em&gt;访问权限（其他含义是所有者和组成员以外的身份）。某些操作系统和文件系统可能会提供其他权限位，但是在此版本中，此类未定义对这些其他位的访问。</target>
        </trans-unit>
        <trans-unit id="857b7af384088ef828c48d616bc078e73774a9aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributes#permissions()&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; attribute is a set of access permissions. This file attribute view provides access to the nine permission defined by the &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; class. These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release.</source>
          <target state="translated">该&lt;a href=&quot;posixfileattributes#permissions()&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;属性是一组访问权限。该文件属性视图提供对&lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt;类定义的九个权限的访问。这九个权限位确定文件所有者，组和其他文件的&lt;em&gt;读取&lt;/em&gt;，&lt;em&gt;写入&lt;/em&gt;和&lt;em&gt;执行&lt;/em&gt;访问权限（其他含义是所有者和组成员以外的身份）。某些操作系统和文件系统可能会提供其他权限位，但是在此版本中，此类未定义对这些其他位的访问。</target>
        </trans-unit>
        <trans-unit id="4744c29d66c9935d41a7b7e162f4709ec4bf036a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributes#permissions--&quot;&gt;&lt;code&gt;permissions&lt;/code&gt;&lt;/a&gt; attribute is a set of access permissions. This file attribute view provides access to the nine permission defined by the &lt;a href=&quot;posixfilepermission&quot;&gt;&lt;code&gt;PosixFilePermission&lt;/code&gt;&lt;/a&gt; class. These nine permission bits determine the &lt;em&gt;read&lt;/em&gt;, &lt;em&gt;write&lt;/em&gt;, and &lt;em&gt;execute&lt;/em&gt; access for the file owner, group, and others (others meaning identities other than the owner and members of the group). Some operating systems and file systems may provide additional permission bits but access to these other bits is not defined by this class in this release.</source>
          <target state="translated">该&lt;a href=&quot;posixfileattributes#permissions--&quot;&gt; &lt;code&gt;permissions&lt;/code&gt; &lt;/a&gt;属性是一组访问权限。该文件属性视图提供对&lt;a href=&quot;posixfilepermission&quot;&gt; &lt;code&gt;PosixFilePermission&lt;/code&gt; &lt;/a&gt;类定义的九个权限的访问。这九个权限位确定文件所有者，组和其他文件的&lt;em&gt;读取&lt;/em&gt;，&lt;em&gt;写入&lt;/em&gt;和&lt;em&gt;执行&lt;/em&gt;访问权限（其他含义是所有者和组成员以外的身份）。某些操作系统和文件系统可能会提供其他权限位，但是在此版本中，此类未定义对这些其他位的访问。</target>
        </trans-unit>
        <trans-unit id="9d75e18b4bb9f537656575df11977b7323415855" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributeview&quot;&gt;&lt;code&gt;PosixFileAttributeView&lt;/code&gt;&lt;/a&gt; interface extends &lt;code&gt;BasicFileAttributeView&lt;/code&gt; by defining methods to access the file attributes commonly used by file systems and operating systems that implement the Portable Operating System Interface (POSIX) family of standards.</source>
          <target state="translated">所述&lt;a href=&quot;posixfileattributeview&quot;&gt; &lt;code&gt;PosixFileAttributeView&lt;/code&gt; &lt;/a&gt;接口扩展 &lt;code&gt;BasicFileAttributeView&lt;/code&gt; 通过定义方法来访问文件属性常用的文件系统和操作实现的标准便携式操作系统接口（POSIX）的家庭系统。</target>
        </trans-unit>
        <trans-unit id="6738d407658008666bc1a5053dfbc19962272b6f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt;&lt;code&gt;readAttributes&lt;/code&gt;&lt;/a&gt; method is used to read the file's attributes. The file &lt;a href=&quot;posixfileattributes#owner--&quot;&gt;&lt;code&gt;owner&lt;/code&gt;&lt;/a&gt; is represented by a &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; that is the identity of the file owner for the purposes of access control. The &lt;a href=&quot;posixfileattributes#group--&quot;&gt;&lt;code&gt;group-owner&lt;/code&gt;&lt;/a&gt;, represented by a &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt;, is the identity of the group owner, where a group is an identity created for administrative purposes so as to determine the access rights for the members of the group.</source>
          <target state="translated">该&lt;a href=&quot;posixfileattributeview#readAttributes--&quot;&gt; &lt;code&gt;readAttributes&lt;/code&gt; &lt;/a&gt;方法用于读取文件的属性。文件&lt;a href=&quot;posixfileattributes#owner--&quot;&gt; &lt;code&gt;owner&lt;/code&gt; &lt;/a&gt;由&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;表示，UserPrincipal是用于访问控制的文件所有者的身份。该&lt;a href=&quot;posixfileattributes#group--&quot;&gt; &lt;code&gt;group-owner&lt;/code&gt; &lt;/a&gt;，用a表示&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; &lt;/a&gt;，是组拥有者，其中一组是用于管理目的创建的，以便确定该组的成员的存取权的身份的身份。</target>
        </trans-unit>
        <trans-unit id="f5cae7f82ee146d950bad36b2028281d1616c695" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;posixfilepermissions&quot;&gt;&lt;code&gt;PosixFilePermissions&lt;/code&gt;&lt;/a&gt; class defines methods for manipulating set of permissions.</source>
          <target state="translated">所述&lt;a href=&quot;posixfilepermissions&quot;&gt; &lt;code&gt;PosixFilePermissions&lt;/code&gt; &lt;/a&gt;类定义用于操纵权限的集合的方法。</target>
        </trans-unit>
        <trans-unit id="2102dd9dc30eda3c84421793f04949c973076a9e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instances created by &lt;a href=&quot;processbuilder&quot;&gt;&lt;code&gt;ProcessBuilder&lt;/code&gt;&lt;/a&gt; can be queried for a ProcessHandle that provides information about the Process. ProcessHandle references should not be freely distributed.</source>
          <target state="translated">可以查询由&lt;a href=&quot;processbuilder&quot;&gt; &lt;code&gt;ProcessBuilder&lt;/code&gt; &lt;/a&gt;创建的&lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt;实例，以获得提供有关Process信息的ProcessHandle。ProcessHandle引用不应随意分发。</target>
        </trans-unit>
        <trans-unit id="b47226c20611a769390944113a9bbd420bdbfa52" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;process#getInputStream()&quot;&gt;&lt;code&gt;standard output&lt;/code&gt;&lt;/a&gt; of all processes except the last process are</source>
          <target state="translated">除最后一个过程外，所有过程的&lt;a href=&quot;process#getInputStream()&quot;&gt; &lt;code&gt;standard output&lt;/code&gt; &lt;/a&gt;为</target>
        </trans-unit>
        <trans-unit id="1c860f3bbab8e3f481494dd988c7bd96d51b73be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it.</source>
          <target state="translated">所述&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; &lt;/a&gt;方法创建本机过程并返回的子类的实例 &lt;code&gt;Process&lt;/code&gt; 可用于控制该过程，并获得关于它的信息。</target>
        </trans-unit>
        <trans-unit id="b1cb6821609bfac1723d508b0bb91d2d757fd59e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it. The class &lt;code&gt;Process&lt;/code&gt; provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process.</source>
          <target state="translated">所述&lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;runtime#exec-java.lang.String:A-java.lang.String:A-java.io.File-&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; &lt;/a&gt;方法创建本机过程并返回的子类的实例 &lt;code&gt;Process&lt;/code&gt; 可用于控制该过程，并获得关于它的信息。 &lt;code&gt;Process&lt;/code&gt; 类提供了一些方法，用于执行来自流程的输入，执行至流程的输出，等待流程完成，检查流程的退出状态以及销毁（杀死）流程。</target>
        </trans-unit>
        <trans-unit id="ea844c85f1e3f45d0fbdf528232a86e15887b986" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt;&lt;code&gt;load(Reader)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt;&lt;code&gt;store(Writer, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties from and to a character based stream in a simple line-oriented format specified below. The &lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt;&lt;code&gt;load(InputStream)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;/&lt;/code&gt;&lt;a href=&quot;properties#store-java.io.OutputStream-java.lang.String-&quot;&gt;&lt;code&gt;store(OutputStream, String)&lt;/code&gt;&lt;/a&gt; methods work the same way as the load(Reader)/store(Writer, String) pair, except the input/output stream is encoded in ISO 8859-1 character encoding. Characters that cannot be directly represented in this encoding can be written using Unicode escapes as defined in section 3.3 of</source>
          <target state="translated">所述&lt;a href=&quot;properties#load-java.io.Reader-&quot;&gt; &lt;code&gt;load(Reader)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;properties#store-java.io.Writer-java.lang.String-&quot;&gt; &lt;code&gt;store(Writer, String)&lt;/code&gt; &lt;/a&gt;从和向基于字符的流中的一个简单的面向行的格式的方法加载和存储属性规定如下。所述&lt;a href=&quot;properties#load-java.io.InputStream-&quot;&gt; &lt;code&gt;load(InputStream)&lt;/code&gt; &lt;/a&gt; &lt;code&gt;/&lt;/code&gt; &lt;a href=&quot;properties#store-java.io.OutputStream-java.lang.String-&quot;&gt; &lt;code&gt;store(OutputStream, String)&lt;/code&gt; &lt;/a&gt;的方法的工作方式为负载（读取器）/存储（作家，字符串）一对相同的，除了输入/输出流在ISO 8859-1字符编码进行编码。不能使用此编码直接表示的字符可以使用Unicode转义来编写，如第3.3节中所定义</target>
        </trans-unit>
        <trans-unit id="43359c708823c69498cdd32a1f027924e4c33c67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt;&lt;code&gt;loadFromXML(InputStream)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;properties#storeToXML-java.io.OutputStream-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt;&lt;/a&gt; methods load and store properties in a simple XML format. By default the UTF-8 character encoding is used, however a specific encoding may be specified if required. Implementations are required to support UTF-8 and UTF-16 and may support other encodings. An XML properties document has the following DOCTYPE declaration:</source>
          <target state="translated">所述&lt;a href=&quot;properties#loadFromXML-java.io.InputStream-&quot;&gt; &lt;code&gt;loadFromXML(InputStream)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;properties#storeToXML-java.io.OutputStream-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;storeToXML(OutputStream, String, String)&lt;/code&gt; &lt;/a&gt;在一个简单的XML格式方法加载和存储属性。默认情况下，使用UTF-8字符编码，但是如果需要，可以指定特定的编码。需要支持UTF-8和UTF-16的实现，并且可能支持其他编码。XML属性文档具有以下DOCTYPE声明：</target>
        </trans-unit>
        <trans-unit id="f8f6297aee07864a86e2bb6a0ea3ccd94df49256" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;proxy#isProxyClass-java.lang.Class-&quot;&gt;&lt;code&gt;Proxy.isProxyClass&lt;/code&gt;&lt;/a&gt; method will return true if it is passed a proxy class-- a class returned by &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; or the class of an object returned by &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;-- and false otherwise.</source>
          <target state="translated">该&lt;a href=&quot;proxy#isProxyClass-java.lang.Class-&quot;&gt; &lt;code&gt;Proxy.isProxyClass&lt;/code&gt; &lt;/a&gt;如果通过分类-通过返回的类代理方法将返回true &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; 或类通过返回的对象的 &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; ，否则为假- 。</target>
        </trans-unit>
        <trans-unit id="82b9b6df8d0389635e3baf324194adaf4d0a9535" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#element--&quot;&gt;&lt;code&gt;element()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#peek--&quot;&gt;&lt;code&gt;peek()&lt;/code&gt;&lt;/a&gt; methods return, but do not remove, the head of the queue.</source>
          <target state="translated">该&lt;a href=&quot;queue#element--&quot;&gt; &lt;code&gt;element()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;queue#peek--&quot;&gt; &lt;code&gt;peek()&lt;/code&gt; &lt;/a&gt;方法返回，但不移除，队列的头。</target>
        </trans-unit>
        <trans-unit id="b3de824965777891d01ab953cb9a6bb37bc267d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#offer-E-&quot;&gt;&lt;code&gt;offer&lt;/code&gt;&lt;/a&gt; method inserts an element if possible, otherwise returning &lt;code&gt;false&lt;/code&gt;. This differs from the &lt;a href=&quot;collection#add-E-&quot;&gt;&lt;code&gt;Collection.add&lt;/code&gt;&lt;/a&gt; method, which can fail to add an element only by throwing an unchecked exception. The &lt;code&gt;offer&lt;/code&gt; method is designed for use when failure is a normal, rather than exceptional occurrence, for example, in fixed-capacity (or &quot;bounded&quot;) queues.</source>
          <target state="translated">所述&lt;a href=&quot;queue#offer-E-&quot;&gt; &lt;code&gt;offer&lt;/code&gt; &lt;/a&gt;如果可能的方法插入一个元件，否则返回 &lt;code&gt;false&lt;/code&gt; 。这不同于&lt;a href=&quot;collection#add-E-&quot;&gt; &lt;code&gt;Collection.add&lt;/code&gt; &lt;/a&gt;方法，后者只能通过抛出未经检查的异常来添加元素。该 &lt;code&gt;offer&lt;/code&gt; 的方法设计用于当故障是正常的，而不是特殊的发生，例如，在固定容量（或&amp;ldquo;有界&amp;rdquo;）队列。</target>
        </trans-unit>
        <trans-unit id="e8d4e252e82e3c4010bc6f24536b3c8e384a7a00" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;queue#remove--&quot;&gt;&lt;code&gt;remove()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queue#poll--&quot;&gt;&lt;code&gt;poll()&lt;/code&gt;&lt;/a&gt; methods remove and return the head of the queue. Exactly which element is removed from the queue is a function of the queue's ordering policy, which differs from implementation to implementation. The &lt;code&gt;remove()&lt;/code&gt; and &lt;code&gt;poll()&lt;/code&gt; methods differ only in their behavior when the queue is empty: the &lt;code&gt;remove()&lt;/code&gt; method throws an exception, while the &lt;code&gt;poll()&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;queue#remove--&quot;&gt; &lt;code&gt;remove()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;queue#poll--&quot;&gt; &lt;code&gt;poll()&lt;/code&gt; &lt;/a&gt;方法可移除和返回队列的头。确切地说，从队列中删除了哪个元素是队列的排序策略的函数，每个实现的实现方式不同。的 &lt;code&gt;remove()&lt;/code&gt; 和 &lt;code&gt;poll()&lt;/code&gt; 方法仅区别在于它们的行为，当该队列是空的：在 &lt;code&gt;remove()&lt;/code&gt; 方法抛出异常，而 &lt;code&gt;poll()&lt;/code&gt; 方法返回 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="16aaa4fa2dee4f0e0c1d205d7849d692a73afd79" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;readablebytechannel#read(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method that reads bytes from the channel into a buffer; similarly, the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method that writes bytes from a buffer to the channel. The &lt;a href=&quot;bytechannel&quot;&gt;&lt;code&gt;ByteChannel&lt;/code&gt;&lt;/a&gt; interface unifies these two interfaces for the common case of channels that can both read and write bytes. The &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; interface extends the &lt;code&gt;ByteChannel&lt;/code&gt; interface with methods to &lt;a href=&quot;seekablebytechannel#position()&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position(long)&quot;&gt;&lt;code&gt;modify&lt;/code&gt;&lt;/a&gt; the channel's current position, and its &lt;a href=&quot;seekablebytechannel#size()&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;接口指定&lt;a href=&quot;readablebytechannel#read(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;方法从通道进入一个缓冲器读取字节; 类似地，&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;接口指定一种&lt;a href=&quot;writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法，该方法将字节从缓冲区写入通道。对于可以同时读取和写入字节的通道的常见情况，&lt;a href=&quot;bytechannel&quot;&gt; &lt;code&gt;ByteChannel&lt;/code&gt; &lt;/a&gt;接口将这两个接口统一起来。所述&lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; &lt;/a&gt;接口扩展 &lt;code&gt;ByteChannel&lt;/code&gt; 与方法，以接口&lt;a href=&quot;seekablebytechannel#position()&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;seekablebytechannel#position(long)&quot;&gt; &lt;code&gt;modify&lt;/code&gt; &lt;/a&gt;该通道的当前位置，并且它的&lt;a href=&quot;seekablebytechannel#size()&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="78e6516c0dec9e8c202d246bc450ed434c84f25b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; method that reads bytes from the channel into a buffer; similarly, the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface specifies a &lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method that writes bytes from a buffer to the channel. The &lt;a href=&quot;bytechannel&quot;&gt;&lt;code&gt;ByteChannel&lt;/code&gt;&lt;/a&gt; interface unifies these two interfaces for the common case of channels that can both read and write bytes. The &lt;a href=&quot;seekablebytechannel&quot;&gt;&lt;code&gt;SeekableByteChannel&lt;/code&gt;&lt;/a&gt; interface extends the &lt;code&gt;ByteChannel&lt;/code&gt; interface with methods to &lt;a href=&quot;seekablebytechannel#position--&quot;&gt;&lt;code&gt;query&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;modify&lt;/code&gt;&lt;/a&gt; the channel's current position, and its &lt;a href=&quot;seekablebytechannel#size--&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;接口指定&lt;a href=&quot;readablebytechannel#read-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;方法从通道进入一个缓冲器读取字节;类似地，&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;接口指定一种&lt;a href=&quot;writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法，该方法将字节从缓冲区写入通道。对于可以同时读取和写入字节的通道的常见情况，&lt;a href=&quot;bytechannel&quot;&gt; &lt;code&gt;ByteChannel&lt;/code&gt; &lt;/a&gt;接口将这两个接口统一起来。所述&lt;a href=&quot;seekablebytechannel&quot;&gt; &lt;code&gt;SeekableByteChannel&lt;/code&gt; &lt;/a&gt;接口扩展 &lt;code&gt;ByteChannel&lt;/code&gt; 与方法，以接口&lt;a href=&quot;seekablebytechannel#position--&quot;&gt; &lt;code&gt;query&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;modify&lt;/code&gt; &lt;/a&gt;该通道的当前位置，并且它的&lt;a href=&quot;seekablebytechannel#size--&quot;&gt; &lt;code&gt;size&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5c2ccfc4344d98344bac10a3d0beeebc75678f34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt; interface similarly defines locks that may be shared among readers but are exclusive to writers. Only a single implementation, &lt;a href=&quot;reentrantreadwritelock&quot;&gt;&lt;code&gt;ReentrantReadWriteLock&lt;/code&gt;&lt;/a&gt;, is provided, since it covers most standard usage contexts. But programmers may create their own implementations to cover nonstandard requirements.</source>
          <target state="translated">所述&lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; 中&lt;/a&gt;接口类似地定义了可以阅读器之间共享，但专用于作家锁。仅提供了一个实现&lt;a href=&quot;reentrantreadwritelock&quot;&gt; &lt;code&gt;ReentrantReadWriteLock&lt;/code&gt; &lt;/a&gt;，因为它涵盖了大多数标准用法上下文。但是程序员可以创建自己的实现来满足非标准要求。</target>
        </trans-unit>
        <trans-unit id="fdf44d4882f2dcfdfc588519320608f9984766c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;&lt;code&gt;ResolverStyle&lt;/code&gt;&lt;/a&gt; is an enum that offers three different approaches, strict, smart and lenient. The smart option is the default. It can be set using &lt;a href=&quot;#withResolverStyle(java.time.format.ResolverStyle)&quot;&gt;&lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;resolverstyle&quot;&gt; &lt;code&gt;ResolverStyle&lt;/code&gt; &lt;/a&gt;是一个枚举是提供了三种不同的方法，严谨，聪明和宽容。智能选项是默认选项。可以使用&lt;a href=&quot;#withResolverStyle(java.time.format.ResolverStyle)&quot;&gt; &lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt; &lt;/a&gt;进行设置。</target>
        </trans-unit>
        <trans-unit id="ccb2a8fa5c45fda8065dbaad7a3c71bba458a361" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;&lt;code&gt;ResolverStyle&lt;/code&gt;&lt;/a&gt; is an enum that offers three different approaches, strict, smart and lenient. The smart option is the default. It can be set using &lt;a href=&quot;datetimeformatter#withResolverStyle-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该&lt;a href=&quot;resolverstyle&quot;&gt; &lt;code&gt;ResolverStyle&lt;/code&gt; &lt;/a&gt;是一个枚举是提供了三种不同的方法，严谨，聪明和宽容。智能选项是默认选项。可以使用&lt;a href=&quot;datetimeformatter#withResolverStyle-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;withResolverStyle(ResolverStyle)&lt;/code&gt; &lt;/a&gt;进行设置。</target>
        </trans-unit>
        <trans-unit id="230eb0b70762cd391eb1aba658c2338c39426288" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:59' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">该&lt;a href=&quot;resolverstyle&quot;&gt;解析器风格&lt;/a&gt;对即时分析没有影响。一天的结束时间&amp;ldquo; 24:00&amp;rdquo;在第二天开始的午夜处理。在某种程度上可以处理'23：59：59'的leap秒时间，有关完整详细信息，请参见&lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a61c3fe4bcefb9096a8ca84cf773684b1d6df713" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:59' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">该&lt;a href=&quot;resolverstyle&quot;&gt;解析器风格&lt;/a&gt;对即时分析没有影响。结束时间&amp;ldquo; 24:00&amp;rdquo;在第二天开始时的午夜处理。在某种程度上处理了&amp;ldquo; 23:59:59&amp;rdquo;的秒时间，有关完整详细信息，请参见&lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5158dacdde311d782c14bbee2d65ed5bcc2d0e9a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:60' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">该&lt;a href=&quot;resolverstyle&quot;&gt;解析器风格&lt;/a&gt;对即时分析没有影响。一天的结束时间&amp;ldquo; 24:00&amp;rdquo;在第二天开始的午夜处理。在某种程度上可以处理'23：59：60'的leap秒时间，有关完整详细信息，请参见&lt;a href=&quot;datetimeformatter#parsedLeapSecond()&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ffbf4748dbac126c5220a08777eb15c9fdb0572e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resolverstyle&quot;&gt;resolver style&lt;/a&gt; has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:60' is handled to some degree, see &lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt;&lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt;&lt;/a&gt; for full details.</source>
          <target state="translated">该&lt;a href=&quot;resolverstyle&quot;&gt;解析器风格&lt;/a&gt;对即时分析没有影响。结束时间&amp;ldquo; 24:00&amp;rdquo;在第二天开始时的午夜处理。在某种程度上可以处理'23：59：60'的秒时间，有关完整详细信息，请参见&lt;a href=&quot;datetimeformatter#parsedLeapSecond--&quot;&gt; &lt;code&gt;DateTimeFormatter.parsedLeapSecond()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c81588aa28a1eb4f1a2581775076c1ff69d4b5a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; class provides information necessary to perform the bundle loading process by the &lt;code&gt;getBundle&lt;/code&gt; factory methods that take a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance. You can implement your own subclass in order to enable non-standard resource bundle formats, change the search strategy, or define caching parameters. Refer to the descriptions of the class and the &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;getBundle&lt;/code&gt;&lt;/a&gt; factory method for details.</source>
          <target state="translated">所述&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;类提供了由执行包加载进程必需的信息 &lt;code&gt;getBundle&lt;/code&gt; 称取一个工厂方法 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 实例。您可以实现自己的子类，以启用非标准资源包格式，更改搜索策略或定义缓存参数。有关详细信息，请参见类的描述和&lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;getBundle&lt;/code&gt; &lt;/a&gt;工厂方法。</target>
        </trans-unit>
        <trans-unit id="844b2132f1798e9d55cc9c339a4149469ad05e5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; class provides information necessary to perform the bundle loading process by the &lt;code&gt;getBundle&lt;/code&gt; factory methods that take a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; instance. You can implement your own subclass in order to enable non-standard resource bundle formats, change the search strategy, or define caching parameters. Refer to the descriptions of the class and the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;getBundle&lt;/code&gt;&lt;/a&gt; factory method for details.</source>
          <target state="translated">所述&lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt;类提供了由执行包加载进程必需的信息 &lt;code&gt;getBundle&lt;/code&gt; 称取一个工厂方法 &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 实例。您可以实现自己的子类，以启用非标准资源包格式，更改搜索策略或定义缓存参数。有关详细信息，请参见类的描述和&lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;getBundle&lt;/code&gt; &lt;/a&gt;工厂方法。</target>
        </trans-unit>
        <trans-unit id="e57c3b809c8cee0138874cbd67eaba73e85e11c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;control.getCandidateLocales&lt;/code&gt;&lt;/a&gt; method is called with the target locale to get a list of &lt;em&gt;candidate &lt;code&gt;Locale&lt;/code&gt;s&lt;/em&gt; for which resource bundles are searched.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;control.getCandidateLocales&lt;/code&gt; &lt;/a&gt;方法被称为与目标区域获得的名单&lt;em&gt;候选 &lt;code&gt;Locale&lt;/code&gt; 小号&lt;/em&gt;的资源包中搜索它。</target>
        </trans-unit>
        <trans-unit id="5b1b140c56a442f57e62e38c4c78a04d61105b58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getCandidateLocales&lt;/code&gt;&lt;/a&gt; method is called with the target locale to get a list of &lt;em&gt;candidate &lt;code&gt;Locale&lt;/code&gt;s&lt;/em&gt; for which resource bundles are searched.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getCandidateLocales&lt;/code&gt; &lt;/a&gt;方法被称为与目标区域获得的名单&lt;em&gt;候选 &lt;code&gt;Locale&lt;/code&gt; 小号&lt;/em&gt;的资源包中搜索它。</target>
        </trans-unit>
        <trans-unit id="9db79ac6c90a6417df850016832ced248481b912" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;control.getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called to get a fallback locale (alternative to the current target locale) to try further finding a resource bundle. If the method returns a non-null locale, it becomes the next target locale and the loading process starts over from Step 3. Otherwise, if a base bundle was found and put on hold in a previous Step 5, it is returned to the caller now. Otherwise, a MissingResourceException is thrown.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#getFallbackLocale(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;control.getFallbackLocale&lt;/code&gt; &lt;/a&gt;方法被调用来获得一个备用的区域（替代目前的目标语言环境），以进一步尝试找到一个资源包。如果该方法返回一个非null的语言环境，它将成为下一个目标语言环境，并且加载过程将从步骤3重新开始。否则，如果找到了基包并在上一个步骤5中将其保留，则将其返回给调用方现在。否则，将抛出MissingResourceException。</target>
        </trans-unit>
        <trans-unit id="772adc8499f04f3dfcd1f7ee081e85fbe1b93725" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;control.getFallbackLocale&lt;/code&gt;&lt;/a&gt; method is called to get a fallback locale (alternative to the current target locale) to try further finding a resource bundle. If the method returns a non-null locale, it becomes the next target locale and the loading process starts over from Step 3. Otherwise, if a base bundle was found and put on hold in a previous Step 5, it is returned to the caller now. Otherwise, a MissingResourceException is thrown.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#getFallbackLocale-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;control.getFallbackLocale&lt;/code&gt; &lt;/a&gt;方法被调用来获得一个备用的区域（替代目前的目标语言环境），以进一步尝试找到一个资源包。如果该方法返回一个非null的语言环境，它将成为下一个目标语言环境，并且加载过程将从步骤3重新开始。否则，如果找到了基本包并在上一个步骤5中将其保留，则将其返回给调用方现在。否则，将抛出MissingResourceException。</target>
        </trans-unit>
        <trans-unit id="c5fbacfc9b01c70d6e8b2d6dde797d3664eec031" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFormats(java.lang.String)&quot;&gt;&lt;code&gt;control.getFormats&lt;/code&gt;&lt;/a&gt; method is called to get resource bundle formats to produce bundle or resource names. The strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; designate class-based and &lt;a href=&quot;propertyresourcebundle&quot;&gt;property&lt;/a&gt;-based resource bundles, respectively. Other strings starting with &lt;code&gt;&quot;java.&quot;&lt;/code&gt; are reserved for future extensions and must not be used for application-defined formats. Other strings designate application-defined formats.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#getFormats(java.lang.String)&quot;&gt; &lt;code&gt;control.getFormats&lt;/code&gt; &lt;/a&gt;方法被调用，以获得资源包格式，产生包或资源名称。字符串 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 表示基于类和基于&lt;a href=&quot;propertyresourcebundle&quot;&gt;属性&lt;/a&gt;的资源束。其他以 &lt;code&gt;&quot;java.&quot;&lt;/code&gt; 开头的字符串。为将来的扩展保留，并且不得用于应用程序定义的格式。其他字符串指定应用程序定义的格式。</target>
        </trans-unit>
        <trans-unit id="635f440f4fb0dc3df8028007964f525ee541d99c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt;&lt;code&gt;control.getFormats&lt;/code&gt;&lt;/a&gt; method is called to get resource bundle formats to produce bundle or resource names. The strings &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; designate class-based and &lt;a href=&quot;propertyresourcebundle&quot;&gt;property&lt;/a&gt;-based resource bundles, respectively. Other strings starting with &lt;code&gt;&quot;java.&quot;&lt;/code&gt; are reserved for future extensions and must not be used for application-defined formats. Other strings designate application-defined formats.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#getFormats-java.lang.String-&quot;&gt; &lt;code&gt;control.getFormats&lt;/code&gt; &lt;/a&gt;方法被调用，以获得资源包格式，产生包或资源名称。字符串 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; 指定基于类和基于&lt;a href=&quot;propertyresourcebundle&quot;&gt;属性&lt;/a&gt;的资源束。其他以 &lt;code&gt;&quot;java.&quot;&lt;/code&gt; 开头的字符串。为将来的扩展保留，并且不得用于应用程序定义的格式。其他字符串指定应用程序定义的格式。</target>
        </trans-unit>
        <trans-unit id="098517283c774eeba3b3b15f041e0be79bde4704" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method is called to instantiate a &lt;code&gt;ResourceBundle&lt;/code&gt; for the base bundle name, a candidate locale, and a format. (Refer to the note on the cache lookup below.) This step is iterated over all combinations of the candidate locales and formats until the &lt;code&gt;newBundle&lt;/code&gt; method returns a &lt;code&gt;ResourceBundle&lt;/code&gt; instance or the iteration has used up all the combinations. For example, if the candidate locales are &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt;, &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; and the formats are &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, then the following is the sequence of locale-format combinations to be used to call &lt;code&gt;control.newBundle&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt;方法被调用来实例化 &lt;code&gt;ResourceBundle&lt;/code&gt; 基本包名称，候选区域设置，以及格式。（请参阅下面有关缓存查找的注释。）在候选语​​言环境和格式的所有组合上重复执行此步骤，直到 &lt;code&gt;newBundle&lt;/code&gt; 方法返回 &lt;code&gt;ResourceBundle&lt;/code&gt; 实例或迭代用尽了所有组合。例如，如果候选语言环境是 &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt; ， &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; 和 &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; ，格式是 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; ， &lt;code&gt;control.newBundle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="143061f5a7fc551c0ad375aa5616ef6082a571b7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method is called to instantiate a &lt;code&gt;ResourceBundle&lt;/code&gt; for the base bundle name, a candidate locale, and a format. (Refer to the note on the cache lookup below.) This step is iterated over all combinations of the candidate locales and formats until the &lt;code&gt;newBundle&lt;/code&gt; method returns a &lt;code&gt;ResourceBundle&lt;/code&gt; instance or the iteration has used up all the combinations. For example, if the candidate locales are &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt;, &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; and &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; and the formats are &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; and &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt;, then the following is the sequence of locale-format combinations to be used to call &lt;code&gt;control.newBundle&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt;方法被调用来实例化 &lt;code&gt;ResourceBundle&lt;/code&gt; 基本包名称，候选区域设置，以及格式。 （请参阅下面有关缓存查找的注释。）在候选语​​言环境和格式的所有组合上重复执行此步骤，直到 &lt;code&gt;newBundle&lt;/code&gt; 方法返回 &lt;code&gt;ResourceBundle&lt;/code&gt; 实例或迭代用尽了所有组合。例如，如果候选语言环境是 &lt;code&gt;Locale(&quot;de&quot;, &quot;DE&quot;)&lt;/code&gt; ， &lt;code&gt;Locale(&quot;de&quot;)&lt;/code&gt; 和 &lt;code&gt;Locale(&quot;&quot;)&lt;/code&gt; ，格式是 &lt;code&gt;&quot;java.class&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;java.properties&quot;&lt;/code&gt; ，然后是用于调用的语言环境格式组合的顺序 &lt;code&gt;control.newBundle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a415f074984a8725314b75563b370d9ae6b46c38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;sasl&quot;&gt;&lt;code&gt;Sasl&lt;/code&gt;&lt;/a&gt; class includes several well-known property names (For example, &lt;a href=&quot;sasl#QOP&quot;&gt;&lt;code&gt;Sasl.QOP&lt;/code&gt;&lt;/a&gt;). A SASL provider can support other properties which are specific to the vendor and/or a mechanism.</source>
          <target state="translated">所述&lt;a href=&quot;sasl&quot;&gt; &lt;code&gt;Sasl&lt;/code&gt; &lt;/a&gt;类包括若干众所周知的属性名称（例如，&lt;a href=&quot;sasl#QOP&quot;&gt; &lt;code&gt;Sasl.QOP&lt;/code&gt; &lt;/a&gt;）。SASL提供程序可以支持特定于供应商和/或机制的其他属性。</target>
        </trans-unit>
        <trans-unit id="257e05e9fa65e14e315705646288980e33146c06" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxresult&quot;&gt;&lt;code&gt;SAXResult&lt;/code&gt;&lt;/a&gt; class allows the setting of a &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; to be the receiver of SAX2 events from the transformation.</source>
          <target state="translated">该&lt;a href=&quot;saxresult&quot;&gt; &lt;code&gt;SAXResult&lt;/code&gt; &lt;/a&gt;类允许的设置&lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;是从转换SAX2事件的接收器。</target>
        </trans-unit>
        <trans-unit id="a6dfb34cc4dd4b24effdf12adfef647af75d6cc3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxsource&quot;&gt;&lt;code&gt;SAXSource&lt;/code&gt;&lt;/a&gt; class allows the setting of an &lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; to be used for pulling parse events, and an &lt;a href=&quot;../../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; that may be used to specify the SAX source.</source>
          <target state="translated">所述&lt;a href=&quot;saxsource&quot;&gt; &lt;code&gt;SAXSource&lt;/code&gt; &lt;/a&gt;类允许的设置&lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; &lt;/a&gt;用于拉动解析的事件，和一个&lt;a href=&quot;../../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt;可用于指定SAX源。</target>
        </trans-unit>
        <trans-unit id="6686fec400ee70f3fbed9514abdaf5cffbf56153" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxtransformerfactory&quot;&gt;&lt;code&gt;SAXTransformerFactory&lt;/code&gt;&lt;/a&gt; extends &lt;a href=&quot;../transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; to provide factory methods for creating &lt;a href=&quot;templateshandler&quot;&gt;&lt;code&gt;TemplatesHandler&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;transformerhandler&quot;&gt;&lt;code&gt;TransformerHandler&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt;&lt;code&gt;XMLReader&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="translated">该&lt;a href=&quot;saxtransformerfactory&quot;&gt; &lt;code&gt;SAXTransformerFactory&lt;/code&gt; &lt;/a&gt;扩展&lt;a href=&quot;../transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt;以创建提供工厂方法&lt;a href=&quot;templateshandler&quot;&gt; &lt;code&gt;TemplatesHandler&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;transformerhandler&quot;&gt; &lt;code&gt;TransformerHandler&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../../../../org/xml/sax/xmlreader&quot;&gt; &lt;code&gt;XMLReader&lt;/code&gt; 的&lt;/a&gt;实例。</target>
        </trans-unit>
        <trans-unit id="c2c462293ffae4c2b2f44a5989d27d11ce31aec4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;saxtransformerfactory#newXMLFilter(javax.xml.transform.Source)&quot;&gt;&lt;code&gt;SAXTransformerFactory.newXMLFilter(javax.xml.transform.Source)&lt;/code&gt;&lt;/a&gt; method allows the creation of a &lt;a href=&quot;../../../../org/xml/sax/xmlfilter&quot;&gt;&lt;code&gt;XMLFilter&lt;/code&gt;&lt;/a&gt;, which encapsulates the SAX2 notion of a &quot;pull&quot; transformation. The resulting &lt;code&gt;XMLFilters&lt;/code&gt; can be chained together so that a series of transformations can happen with one's output becoming another's input.</source>
          <target state="translated">所述&lt;a href=&quot;saxtransformerfactory#newXMLFilter(javax.xml.transform.Source)&quot;&gt; &lt;code&gt;SAXTransformerFactory.newXMLFilter(javax.xml.transform.Source)&lt;/code&gt; &lt;/a&gt;方法允许创建&lt;a href=&quot;../../../../org/xml/sax/xmlfilter&quot;&gt; &lt;code&gt;XMLFilter&lt;/code&gt; &lt;/a&gt;，它封装了&amp;ldquo;拉&amp;rdquo;转化的SAX2概念。可以将生成的 &lt;code&gt;XMLFilters&lt;/code&gt; 链接在一起，以便可以进行一系列转换，使一个人的输出成为另一个人的输入。</target>
        </trans-unit>
        <trans-unit id="10eb909f57a9444304efbbfb4230e34732f3b9b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt;&lt;code&gt;findInLine(java.lang.String)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt;&lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt;&lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt;&lt;/a&gt; methods operate independently of the delimiter pattern. These methods will attempt to match the specified pattern with no regard to delimiters in the input and thus can be used in special circumstances where delimiters are not relevant. These methods may block waiting for more input.</source>
          <target state="translated">所述&lt;a href=&quot;scanner#findInLine-java.lang.String-&quot;&gt; &lt;code&gt;findInLine(java.lang.String)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;scanner#findWithinHorizon-java.lang.String-int-&quot;&gt; &lt;code&gt;findWithinHorizon(java.lang.String, int)&lt;/code&gt; &lt;/a&gt;，并&lt;a href=&quot;scanner#skip-java.util.regex.Pattern-&quot;&gt; &lt;code&gt;skip(java.util.regex.Pattern)&lt;/code&gt; &lt;/a&gt;的方法的定界符图案的独立操作。这些方法将尝试匹配指定的模式而与输入中的分隔符无关，因此可以在分隔符不相关的特殊情况下使用。这些方法可能会阻止等待更多输入。</target>
        </trans-unit>
        <trans-unit id="348c28db8b27cc9f18897b329f01ff9a7695b683" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scanner#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scanner#hasNext--&quot;&gt;&lt;code&gt;hasNext()&lt;/code&gt;&lt;/a&gt; methods and their primitive-type companion methods (such as &lt;a href=&quot;scanner#nextInt--&quot;&gt;&lt;code&gt;nextInt()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;scanner#hasNextInt--&quot;&gt;&lt;code&gt;hasNextInt()&lt;/code&gt;&lt;/a&gt;) first skip any input that matches the delimiter pattern, and then attempt to return the next token. Both &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt; methods may block waiting for further input. Whether a &lt;code&gt;hasNext&lt;/code&gt; method blocks has no connection to whether or not its associated &lt;code&gt;next&lt;/code&gt; method will block.</source>
          <target state="translated">的&lt;a href=&quot;scanner#next--&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;scanner#hasNext--&quot;&gt; &lt;code&gt;hasNext()&lt;/code&gt; &lt;/a&gt;方法及其基本类型companion方法（如&lt;a href=&quot;scanner#nextInt--&quot;&gt; &lt;code&gt;nextInt()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;scanner#hasNextInt--&quot;&gt; &lt;code&gt;hasNextInt()&lt;/code&gt; &lt;/a&gt;）首先跳过与分隔符模式匹配的任何输入，然后尝试返回下一个标记。既 &lt;code&gt;hasNext&lt;/code&gt; 和 &lt;code&gt;next&lt;/code&gt; 方法可阻塞等待进一步的输入。 &lt;code&gt;hasNext&lt;/code&gt; 方法是否阻塞与其关联的 &lt;code&gt;next&lt;/code&gt; 方法是否将阻塞无关。</target>
        </trans-unit>
        <trans-unit id="6036eaba06f3b7844114d0429c543f3e66646467" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interfaces extend the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interfaces, respectively, adding &lt;a href=&quot;scatteringbytechannel#read(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel#write(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods that take a sequence of buffers rather than a single buffer.</source>
          <target state="translated">在&lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt;接口延长&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;分别接口，，加入&lt;a href=&quot;scatteringbytechannel#read(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;gatheringbytechannel#write(java.nio.ByteBuffer%5B%5D,int,int)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;该采取缓冲区序列而不是单个缓冲器的方法。</target>
        </trans-unit>
        <trans-unit id="21137fd05c9ebb8f424df8db033cf26db6b1b34b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interfaces extend the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interfaces, respectively, adding &lt;a href=&quot;scatteringbytechannel#read-java.nio.ByteBuffer:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;gatheringbytechannel#write-java.nio.ByteBuffer:A-int-int-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods that take a sequence of buffers rather than a single buffer.</source>
          <target state="translated">在&lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt;接口延长&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;分别接口，，加入&lt;a href=&quot;scatteringbytechannel#read-java.nio.ByteBuffer:A-int-int-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;gatheringbytechannel#write-java.nio.ByteBuffer:A-int-int-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;该采取缓冲区序列而不是单个缓冲器的方法。</target>
        </trans-unit>
        <trans-unit id="494bd3af96f36fb31c00ac9c7e7c9c2375b3ac83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; class is not thread-safe. In other words, it is the application's responsibility to ensure that at most one thread is using a &lt;a href=&quot;schemafactory&quot;&gt;&lt;code&gt;SchemaFactory&lt;/code&gt;&lt;/a&gt; object at any given moment. Implementations are encouraged to mark methods as &lt;code&gt;synchronized&lt;/code&gt; to protect themselves from broken clients.</source>
          <target state="translated">将&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;类不是线程安全的。换句话说，确保给定时刻最多有一个线程正在使用&lt;a href=&quot;schemafactory&quot;&gt; &lt;code&gt;SchemaFactory&lt;/code&gt; &lt;/a&gt;对象是应用程序的责任。鼓励实现将方法标记为已 &lt;code&gt;synchronized&lt;/code&gt; 以保护自己免受损坏的客户端的攻击。</target>
        </trans-unit>
        <trans-unit id="07cb8eb23ad928e28854d19141c00b90056152a3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;seekablebytechannel#truncate-long-&quot;&gt;&lt;code&gt;truncate&lt;/code&gt;&lt;/a&gt; methods which do not otherwise have a value to return are specified to return the channel upon which they are invoked. This allows method invocations to be chained. Implementations of this interface should specialize the return type so that method invocations on the implementation class can be chained.</source>
          <target state="translated">指定没有返回值的&lt;a href=&quot;seekablebytechannel#position-long-&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;seekablebytechannel#truncate-long-&quot;&gt; &lt;code&gt;truncate&lt;/code&gt; &lt;/a&gt;方法以返回在其上调用它们的通道。这使方法调用可以链接在一起。此接口的实现应专用于返回类型，以便可以链接实现类上的方法调用。</target>
        </trans-unit>
        <trans-unit id="90a51280115503dcf1e905f60856aff6ffe205d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method synchronizes on the selector and all three key sets in the same order as in a selection operation.</source>
          <target state="translated">的&lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法同步上的选择，并且所有三个密钥集以相同的顺序在选择操作。</target>
        </trans-unit>
        <trans-unit id="a294a9cf0964911d73784704bd2dbd26750a9604" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;snippet.kind&quot;&gt;&lt;code&gt;Snippet.Kind&lt;/code&gt;&lt;/a&gt; for the snippet.</source>
          <target state="translated">该&lt;a href=&quot;snippet.kind&quot;&gt; &lt;code&gt;Snippet.Kind&lt;/code&gt; &lt;/a&gt;的片段。</target>
        </trans-unit>
        <trans-unit id="290a5a520b15c3e7482f3f8402505a902d82b462" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;snippet.kind&quot;&gt;&lt;code&gt;Snippet.Kind&lt;/code&gt;&lt;/a&gt; for the snippet. Indicates the subclass of Snippet.</source>
          <target state="translated">该&lt;a href=&quot;snippet.kind&quot;&gt; &lt;code&gt;Snippet.Kind&lt;/code&gt; &lt;/a&gt;的片段。指示代码片段的子类。</target>
        </trans-unit>
        <trans-unit id="14453820ed2da2c46a66a47dae076df0a86ec22b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;snippet.kind&quot;&gt;&lt;code&gt;Snippet.Kind&lt;/code&gt;&lt;/a&gt; that corresponds to this &lt;code&gt;SubKind&lt;/code&gt;.</source>
          <target state="translated">该&lt;a href=&quot;snippet.kind&quot;&gt; &lt;code&gt;Snippet.Kind&lt;/code&gt; &lt;/a&gt;对应于此 &lt;code&gt;SubKind&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="990f0f43a18226a7e173ee1e81b5cdf77566b089" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketoption#name()&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; of each socket option defined by this class is its field name.</source>
          <target state="translated">此类定义的每个套接字选项的&lt;a href=&quot;socketoption#name()&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;都是其字段名称。</target>
        </trans-unit>
        <trans-unit id="d451b4a4efe00d347a54add6cb0af761ff11af1a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;socketoption#name--&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; of each socket option defined by this class is its field name.</source>
          <target state="translated">此类定义的每个套接字选项的&lt;a href=&quot;socketoption#name--&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;都是其字段名称。</target>
        </trans-unit>
        <trans-unit id="2dce7e060eed43bca6d4e88ec9e2f86ac29def42" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;stackwalker.option&quot;&gt;&lt;em&gt;stack walking options&lt;/em&gt;&lt;/a&gt; of a &lt;code&gt;StackWalker&lt;/code&gt; determines the information of &lt;a href=&quot;stackwalker.stackframe&quot;&gt;&lt;code&gt;StackFrame&lt;/code&gt;&lt;/a&gt; objects to be returned. By default, stack frames of the reflection API and implementation classes are &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;hidden&lt;/a&gt; and &lt;code&gt;StackFrame&lt;/code&gt;s have the class name and method name available but not the &lt;a href=&quot;stackwalker.stackframe#getDeclaringClass()&quot;&gt;&lt;code&gt;Class reference&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;stackwalker.option&quot;&gt;&lt;em&gt;堆栈遍历选项&lt;/em&gt;&lt;/a&gt;一个的 &lt;code&gt;StackWalker&lt;/code&gt; 确定的信息&lt;a href=&quot;stackwalker.stackframe&quot;&gt; &lt;code&gt;StackFrame&lt;/code&gt; &lt;/a&gt;对象要被返回。默认情况下，反射API和实现类的堆栈框架是&lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;隐藏的，&lt;/a&gt;并且 &lt;code&gt;StackFrame&lt;/code&gt; 具有可用的类名和方法名，但没有&lt;a href=&quot;stackwalker.stackframe#getDeclaringClass()&quot;&gt; &lt;code&gt;Class reference&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="277deff41b631710526c3be6a8bce3fa73e5a350" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardcharsets&quot;&gt;&lt;code&gt;StandardCharsets&lt;/code&gt;&lt;/a&gt; class defines constants for each of the standard charsets.</source>
          <target state="translated">所述&lt;a href=&quot;standardcharsets&quot;&gt; &lt;code&gt;StandardCharsets&lt;/code&gt; &lt;/a&gt;类定义为每个标准字符集的常数。</target>
        </trans-unit>
        <trans-unit id="a8dd9a9fec27603d78ed08617b0bdfc6d7c235da" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardcopyoption&quot;&gt;&lt;code&gt;StandardCopyOption&lt;/code&gt;&lt;/a&gt; enumeration type defines the</source>
          <target state="translated">所述&lt;a href=&quot;standardcopyoption&quot;&gt; &lt;code&gt;StandardCopyOption&lt;/code&gt; &lt;/a&gt;枚举类型定义</target>
        </trans-unit>
        <trans-unit id="21b04d2e3e195c7b488a274007819f9a94245cdc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standarddoclet&quot;&gt;&lt;code&gt;standard doclet&lt;/code&gt;&lt;/a&gt; can be used to generate HTML-formatted documentation. It supports user-defined &lt;a href=&quot;taglet&quot;&gt;&lt;code&gt;taglets&lt;/code&gt;&lt;/a&gt;, which can be used to generate customized output for user-defined tags in documentation comments.</source>
          <target state="translated">该&lt;a href=&quot;standarddoclet&quot;&gt; &lt;code&gt;standard doclet&lt;/code&gt; &lt;/a&gt;可用于生成HTML格式的文档。它支持用户定义的&lt;a href=&quot;taglet&quot;&gt; &lt;code&gt;taglets&lt;/code&gt; &lt;/a&gt;，可用于为文档注释中的用户定义的标签生成自定义输出。</target>
        </trans-unit>
        <trans-unit id="80c99f93b54d2734b5913704c3b7bc58ac7bd819" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption&quot;&gt;&lt;code&gt;StandardOpenOption&lt;/code&gt;&lt;/a&gt; enumeration type defines the</source>
          <target state="translated">所述&lt;a href=&quot;standardopenoption&quot;&gt; &lt;code&gt;StandardOpenOption&lt;/code&gt; &lt;/a&gt;枚举类型定义</target>
        </trans-unit>
        <trans-unit id="72295d2f416f8a8448218b4363525cc646e9da94" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption#SYNC&quot;&gt;&lt;code&gt;SYNC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#DSYNC&quot;&gt;&lt;code&gt;DSYNC&lt;/code&gt;&lt;/a&gt; options are used when opening a file to require that updates to the file are written synchronously to the underlying storage device. In the case of the default provider, and the file resides on a local storage device, and the &lt;a href=&quot;../channels/seekablebytechannel&quot;&gt;&lt;code&gt;seekable&lt;/code&gt;&lt;/a&gt; channel is connected to a file that was opened with one of these options, then an invocation of the &lt;a href=&quot;../channels/writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method is only guaranteed to return when all changes made to the file by that invocation have been written to the device. These options are useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made. Whether this guarantee is possible with other &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; implementations is provider specific.</source>
          <target state="translated">在&lt;a href=&quot;standardopenoption#SYNC&quot;&gt; &lt;code&gt;SYNC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;standardopenoption#DSYNC&quot;&gt; &lt;code&gt;DSYNC&lt;/code&gt; &lt;/a&gt;打开文件时使用的选项，要求更新文件同步地写入基础存储设备。如果使用默认提供程序，并且文件位于本地存储设备上，并且&lt;a href=&quot;../channels/seekablebytechannel&quot;&gt; &lt;code&gt;seekable&lt;/code&gt; &lt;/a&gt;通道连接到使用以下选项之一打开的文件，则只有在以下情况下，才保证返回&lt;a href=&quot;../channels/writablebytechannel#write(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法：通过该调用对文件所做的更改已被写入设备。这些选项对于确保在系统崩溃时不会丢失关键信息很有用。如果文件不在本地设备上，则不做任何保证。其他&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;是否可以提供此保证 实现是特定于提供程序的。</target>
        </trans-unit>
        <trans-unit id="3d74cb4498be8f94cc5abccf92b10b83b8240700" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;standardopenoption#SYNC&quot;&gt;&lt;code&gt;SYNC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;standardopenoption#DSYNC&quot;&gt;&lt;code&gt;DSYNC&lt;/code&gt;&lt;/a&gt; options are used when opening a file to require that updates to the file are written synchronously to the underlying storage device. In the case of the default provider, and the file resides on a local storage device, and the &lt;a href=&quot;../channels/seekablebytechannel&quot;&gt;&lt;code&gt;seekable&lt;/code&gt;&lt;/a&gt; channel is connected to a file that was opened with one of these options, then an invocation of the &lt;a href=&quot;../channels/writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; method is only guaranteed to return when all changes made to the file by that invocation have been written to the device. These options are useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made. Whether this guarantee is possible with other &lt;a href=&quot;spi/filesystemprovider&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; implementations is provider specific.</source>
          <target state="translated">在&lt;a href=&quot;standardopenoption#SYNC&quot;&gt; &lt;code&gt;SYNC&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;standardopenoption#DSYNC&quot;&gt; &lt;code&gt;DSYNC&lt;/code&gt; &lt;/a&gt;打开文件时使用的选项，要求更新文件同步地写入基础存储设备。在默认的提供者，并且该文件驻留在本地存储设备上，并且的情况下，&lt;a href=&quot;../channels/seekablebytechannel&quot;&gt; &lt;code&gt;seekable&lt;/code&gt; &lt;/a&gt;的信道被连接到使用这些选项之一打开的文件，则的调用&lt;a href=&quot;../channels/writablebytechannel#write-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt;方法只保证当所有返回该调用对文件所做的更改已写入设备。这些选项对于确保在系统崩溃时不会丢失关键信息很有用。如果文件不在本地设备上，则不做任何保证。其他&lt;a href=&quot;spi/filesystemprovider&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt;是否可以提供此保证 实现是特定于提供程序的。</target>
        </trans-unit>
        <trans-unit id="666585fcad66c94e607b17b82eebdf605f5fff6b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;staxresult&quot;&gt;&lt;code&gt;StAXResult&lt;/code&gt;&lt;/a&gt; class encapsulates a &lt;a href=&quot;../../stream/xmlstreamwriter&quot;&gt;&lt;code&gt;XMLStreamWriter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../stream/xmleventwriter&quot;&gt;&lt;code&gt;XMLEventWriter&lt;/code&gt;&lt;/a&gt; and can be used as an output where a &lt;a href=&quot;../result&quot;&gt;&lt;code&gt;Result&lt;/code&gt;&lt;/a&gt; object is accepted.</source>
          <target state="translated">所述&lt;a href=&quot;staxresult&quot;&gt; &lt;code&gt;StAXResult&lt;/code&gt; &lt;/a&gt;类封装&lt;a href=&quot;../../stream/xmlstreamwriter&quot;&gt; &lt;code&gt;XMLStreamWriter&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../stream/xmleventwriter&quot;&gt; &lt;code&gt;XMLEventWriter&lt;/code&gt; 的&lt;/a&gt;并且可被用作其中一个输出&lt;a href=&quot;../result&quot;&gt; &lt;code&gt;Result&lt;/code&gt; &lt;/a&gt;对象被接受。</target>
        </trans-unit>
        <trans-unit id="9128fc3bc1eb1ff4d95279e4cf6f6224d3cc8961" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;staxsource&quot;&gt;&lt;code&gt;StAXSource&lt;/code&gt;&lt;/a&gt; class encapsulates a &lt;a href=&quot;../../stream/xmlstreamreader&quot;&gt;&lt;code&gt;XMLStreamReader&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../stream/xmleventreader&quot;&gt;&lt;code&gt;XMLEventReader&lt;/code&gt;&lt;/a&gt; and can be used as an input where a &lt;a href=&quot;../source&quot;&gt;&lt;code&gt;Source&lt;/code&gt;&lt;/a&gt; object is accepted.</source>
          <target state="translated">所述&lt;a href=&quot;staxsource&quot;&gt; &lt;code&gt;StAXSource&lt;/code&gt; &lt;/a&gt;类封装&lt;a href=&quot;../../stream/xmlstreamreader&quot;&gt; &lt;code&gt;XMLStreamReader&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../stream/xmleventreader&quot;&gt; &lt;code&gt;XMLEventReader&lt;/code&gt; 的&lt;/a&gt;并且可被用作其中一个输入&lt;a href=&quot;../source&quot;&gt; &lt;code&gt;Source&lt;/code&gt; &lt;/a&gt;对象被接受。</target>
        </trans-unit>
        <trans-unit id="15e9da6bf2a3f858875a9def12dcdd45826455c5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;streamresult&quot;&gt;&lt;code&gt;StreamResult&lt;/code&gt;&lt;/a&gt; class provides methods for specifying &lt;a href=&quot;../../../../../java.base/java/io/outputstream&quot;&gt;&lt;code&gt;OutputStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../../java.base/java/io/writer&quot;&gt;&lt;code&gt;Writer&lt;/code&gt;&lt;/a&gt;, or an output system ID, as the output of the transformation result.</source>
          <target state="translated">所述&lt;a href=&quot;streamresult&quot;&gt; &lt;code&gt;StreamResult&lt;/code&gt; &lt;/a&gt;类提供了用于指定方法&lt;a href=&quot;../../../../../java.base/java/io/outputstream&quot;&gt; &lt;code&gt;OutputStream&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../../../../java.base/java/io/writer&quot;&gt; &lt;code&gt;Writer&lt;/code&gt; &lt;/a&gt;，或输出系统ID，作为变换结果的输出。</target>
        </trans-unit>
        <trans-unit id="b73a57897e92c91dc3e9229806ea2a5d957e1fcf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;streamsource&quot;&gt;&lt;code&gt;StreamSource&lt;/code&gt;&lt;/a&gt; class provides methods for specifying &lt;a href=&quot;../../../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; input, &lt;a href=&quot;../../../../../java.base/java/io/reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt; input, and URL input in the form of strings. Even if an input stream or reader is specified as the source, &lt;a href=&quot;streamsource#setSystemId(java.lang.String)&quot;&gt;&lt;code&gt;StreamSource.setSystemId(java.lang.String)&lt;/code&gt;&lt;/a&gt; should still be called, so that the transformer can know from where it should resolve relative URIs. The public identifier is always optional: if the application writer includes one, it will be provided as part of the &lt;a href=&quot;../sourcelocator&quot;&gt;&lt;code&gt;SourceLocator&lt;/code&gt;&lt;/a&gt; information.</source>
          <target state="translated">所述&lt;a href=&quot;streamsource&quot;&gt; &lt;code&gt;StreamSource&lt;/code&gt; 的&lt;/a&gt;类提供了用于指定方法&lt;a href=&quot;../../../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt;输入，&lt;a href=&quot;../../../../../java.base/java/io/reader&quot;&gt; &lt;code&gt;Reader&lt;/code&gt; &lt;/a&gt;中的字符串的形式输入和URL输入。即使将输入流或阅读器指定为源，仍应调用&lt;a href=&quot;streamsource#setSystemId(java.lang.String)&quot;&gt; &lt;code&gt;StreamSource.setSystemId(java.lang.String)&lt;/code&gt; &lt;/a&gt;，以便转换器可以从哪里知道应该解析相对URI。公共标识符始终是可选的：如果应用程序编写器包括一个，则它将作为&lt;a href=&quot;../sourcelocator&quot;&gt; &lt;code&gt;SourceLocator&lt;/code&gt; &lt;/a&gt;信息的一部分提供。</target>
        </trans-unit>
        <trans-unit id="e9d9db88422c56d37b5213b36ef7275470166809" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;system#exit(int)&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt; method is the conventional and convenient means of invoking this method.</source>
          <target state="translated">该&lt;a href=&quot;system#exit(int)&quot;&gt; &lt;code&gt;System.exit&lt;/code&gt; &lt;/a&gt;方法是调用此方法的一种传统和方便的手段。</target>
        </trans-unit>
        <trans-unit id="3dbae129ef5d648f47d6fba81499acd845594518" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;templateshandler&quot;&gt;&lt;code&gt;TemplatesHandler&lt;/code&gt;&lt;/a&gt; interface allows the creation of &lt;a href=&quot;../templates&quot;&gt;&lt;code&gt;Templates&lt;/code&gt;&lt;/a&gt; objects from SAX2 parse events. Once the &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; events are complete, the Templates object may be obtained from &lt;a href=&quot;templateshandler#getTemplates()&quot;&gt;&lt;code&gt;TemplatesHandler.getTemplates()&lt;/code&gt;&lt;/a&gt;. Note that &lt;a href=&quot;templateshandler#setSystemId(java.lang.String)&quot;&gt;&lt;code&gt;TemplatesHandler.setSystemId(java.lang.String)&lt;/code&gt;&lt;/a&gt; should normally be called in order to establish a base system ID from which relative URLs may be resolved.</source>
          <target state="translated">该&lt;a href=&quot;templateshandler&quot;&gt; &lt;code&gt;TemplatesHandler&lt;/code&gt; &lt;/a&gt;接口允许创建&lt;a href=&quot;../templates&quot;&gt; &lt;code&gt;Templates&lt;/code&gt; &lt;/a&gt;从SAX2解析事件的对象。一旦&lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;事件完成，就可以从&lt;a href=&quot;templateshandler#getTemplates()&quot;&gt; &lt;code&gt;TemplatesHandler.getTemplates()&lt;/code&gt; &lt;/a&gt;获得Templates对象。请注意，通常应调用&lt;a href=&quot;templateshandler#setSystemId(java.lang.String)&quot;&gt; &lt;code&gt;TemplatesHandler.setSystemId(java.lang.String)&lt;/code&gt; &lt;/a&gt;以便建立可解析相对URL的基本系统ID。</target>
        </trans-unit>
        <trans-unit id="65632e3304ce8a7430971d425d4ea6f5d7041352" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;Epoch Day count&lt;/code&gt;&lt;/a&gt; is a simple incrementing count of days where day 0 is 1970-01-01 (ISO). This definition is the same for all chronologies, enabling conversion.</source>
          <target state="translated">该&lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;Epoch Day count&lt;/code&gt; &lt;/a&gt;是一个简单的递增的天数，其中0天1970-01-01（ISO）。此定义对于所有时序都是相同的，从而可以进行转换。</target>
        </trans-unit>
        <trans-unit id="5fe0b0a62926df5a411799abadea12e26424d776" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporaladjusters&quot;&gt;&lt;code&gt;TemporalAdjusters&lt;/code&gt;&lt;/a&gt; class contains a standard set of adjusters, available as static methods. These include:</source>
          <target state="translated">该&lt;a href=&quot;temporaladjusters&quot;&gt; &lt;code&gt;TemporalAdjusters&lt;/code&gt; &lt;/a&gt;类包含了一套标准的调节器，可以作为静态方法。这些包括：</target>
        </trans-unit>
        <trans-unit id="8ee0d1305c6ed8ac73c630b5768c7fd55bebbf44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporalamount&quot;&gt;&lt;code&gt;TemporalAmount&lt;/code&gt;&lt;/a&gt; interface models amounts of relative time.</source>
          <target state="translated">该&lt;a href=&quot;temporalamount&quot;&gt; &lt;code&gt;TemporalAmount&lt;/code&gt; &lt;/a&gt;接口的型号数量的相对时间。</target>
        </trans-unit>
        <trans-unit id="d603049ad9b812aec8a4461ab35e3fdfaf4b0a9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;temporalfield&quot;&gt;&lt;code&gt;TemporalField&lt;/code&gt;&lt;/a&gt; interface provides another mechanism for querying temporal objects. That interface is limited to returning a &lt;code&gt;long&lt;/code&gt;. By contrast, queries can return any type.</source>
          <target state="translated">所述&lt;a href=&quot;temporalfield&quot;&gt; &lt;code&gt;TemporalField&lt;/code&gt; &lt;/a&gt;接口提供了另一种机制，用于查询的时间对象。该接口仅限于返回 &lt;code&gt;long&lt;/code&gt; 。相比之下，查询可以返回任何类型。</target>
        </trans-unit>
        <trans-unit id="49d039ee836590f5a2bcdafdec86bf461e5a5432" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadgroup#uncaughtException(java.lang.Thread,java.lang.Throwable)&quot;&gt;top-level error handler&lt;/a&gt; does not print out a message if &lt;code&gt;ThreadDeath&lt;/code&gt; is never caught.</source>
          <target state="translated">该&lt;a href=&quot;threadgroup#uncaughtException(java.lang.Thread,java.lang.Throwable)&quot;&gt;顶级错误处理程序&lt;/a&gt;，如果没有打印出一条消息 &lt;code&gt;ThreadDeath&lt;/code&gt; 是从来没有抓到。</target>
        </trans-unit>
        <trans-unit id="da0f2490753f88004eeaececd77ced0e3d26d3b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;top-level error handler&lt;/a&gt; does not print out a message if &lt;code&gt;ThreadDeath&lt;/code&gt; is never caught.</source>
          <target state="translated">该&lt;a href=&quot;threadgroup#uncaughtException-java.lang.Thread-java.lang.Throwable-&quot;&gt;顶级错误处理程序&lt;/a&gt;，如果没有打印出一条消息 &lt;code&gt;ThreadDeath&lt;/code&gt; 是从来没有抓到。</target>
        </trans-unit>
        <trans-unit id="90e1d925999c201c8dd68d8ed236e67286b0b5ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt;&lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports thread contention monitoring. The thread contention monitoring is disabled by default. The &lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt;&lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt;&lt;/a&gt; method can be used to enable thread contention monitoring.</source>
          <target state="translated">所述&lt;a href=&quot;threadmxbean#isThreadContentionMonitoringSupported--&quot;&gt; &lt;code&gt;isThreadContentionMonitoringSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否一个Java虚拟机支持线程争用监视。默认情况下，线程争用监视处于禁用状态。所述&lt;a href=&quot;threadmxbean#setThreadContentionMonitoringEnabled-boolean-&quot;&gt; &lt;code&gt;setThreadContentionMonitoringEnabled(boolean)&lt;/code&gt; &lt;/a&gt;方法可用于启用线程争用监视。</target>
        </trans-unit>
        <trans-unit id="ed0642ec4c21f239693011a0d808e0a9a5551dee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for any thread. The &lt;a href=&quot;threadmxbean#isCurrentThreadCpuTimeSupported--&quot;&gt;&lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt;&lt;/a&gt; method can be used to determine if a Java virtual machine supports measuring of the CPU time for the current thread. A Java virtual machine implementation that supports CPU time measurement for any thread will also support that for the current thread.</source>
          <target state="translated">所述&lt;a href=&quot;threadmxbean#isThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否一个Java虚拟机支持测量的CPU时间的任何线程。所述&lt;a href=&quot;threadmxbean#isCurrentThreadCpuTimeSupported--&quot;&gt; &lt;code&gt;isCurrentThreadCpuTimeSupported()&lt;/code&gt; &lt;/a&gt;方法可用于确定是否一个Java虚拟机支持当前线程测量的CPU时间。支持任何线程的CPU时间测量的Java虚拟机实现也将支持当前线程的时间。</target>
        </trans-unit>
        <trans-unit id="126515b65a295f042897ee7ca24299c10de24ac2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt;&lt;code&gt;fillInStackTrace()&lt;/code&gt;&lt;/a&gt; method is called to initialize the stack trace data in the newly created throwable.</source>
          <target state="translated">所述&lt;a href=&quot;throwable#fillInStackTrace--&quot;&gt; &lt;code&gt;fillInStackTrace()&lt;/code&gt; &lt;/a&gt;方法被调用在新创建的抛出初始化堆栈跟踪数据。</target>
        </trans-unit>
        <trans-unit id="f545a31d332fd214f9259a9d88e64957c2997f77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;timeunit&quot;&gt;&lt;code&gt;TimeUnit&lt;/code&gt;&lt;/a&gt; class provides multiple granularities (including nanoseconds) for specifying and controlling time-out based operations. Most classes in the package contain operations based on time-outs in addition to indefinite waits. In all cases that time-outs are used, the time-out specifies the minimum time that the method should wait before indicating that it timed-out. Implementations make a &quot;best effort&quot; to detect time-outs as soon as possible after they occur. However, an indefinite amount of time may elapse between a time-out being detected and a thread actually executing again after that time-out. All methods that accept timeout parameters treat values less than or equal to zero to mean not to wait at all. To wait &quot;forever&quot;, you can use a value of &lt;code&gt;Long.MAX_VALUE&lt;/code&gt;.</source>
          <target state="translated">所述&lt;a href=&quot;timeunit&quot;&gt; &lt;code&gt;TimeUnit&lt;/code&gt; &lt;/a&gt;类提供了用于指定和控制超时基于操作的多个粒度（包括毫微秒）。包中的大多数类除了不确定的等待时间以外，还包含基于超时的操作。在所有使用超时的情况下，超时都指定方法在指示其超时之前应等待的最短时间。实现会尽最大努力在超时发生后尽快检测到超时。但是，在检测到超时与在该超时之后再次实际执行线程之间可能会经过不确定的时间量。所有接受超时参数的方法都将小于或等于零的值视为完全不等待。要&amp;ldquo;永远&amp;rdquo;等待，可以使用 &lt;code&gt;Long.MAX_VALUE&lt;/code&gt; 的值。</target>
        </trans-unit>
        <trans-unit id="6bc011c045314ae785385e0758aa43561f462e02" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;transformerhandler&quot;&gt;&lt;code&gt;TransformerHandler&lt;/code&gt;&lt;/a&gt; interface allows a transformation to be created from SAX2 parse events, which is a &quot;push&quot; model rather than the &quot;pull&quot; model that normally occurs for a transformation. Normal parse events are received through the &lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt;&lt;code&gt;ContentHandler&lt;/code&gt;&lt;/a&gt; interface, lexical events such as startCDATA and endCDATA are received through the &lt;a href=&quot;../../../../org/xml/sax/ext/lexicalhandler&quot;&gt;&lt;code&gt;LexicalHandler&lt;/code&gt;&lt;/a&gt; interface, and events that signal the start or end of disabling output escaping are received via &lt;a href=&quot;../../../../org/xml/sax/contenthandler#processingInstruction(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;ContentHandler.processingInstruction(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;, with the target parameter being &lt;a href=&quot;../result#PI_DISABLE_OUTPUT_ESCAPING&quot;&gt;&lt;code&gt;Result.PI_DISABLE_OUTPUT_ESCAPING&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../result#PI_ENABLE_OUTPUT_ESCAPING&quot;&gt;&lt;code&gt;Result.PI_ENABLE_OUTPUT_ESCAPING&lt;/code&gt;&lt;/a&gt;. If parameters, output properties, or other features need to be set on the Transformer handler, a &lt;a href=&quot;../transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; reference will need to be obtained from &lt;a href=&quot;transformerhandler#getTransformer()&quot;&gt;&lt;code&gt;TransformerHandler.getTransformer()&lt;/code&gt;&lt;/a&gt;, and the methods invoked from that reference.</source>
          <target state="translated">&lt;a href=&quot;transformerhandler&quot;&gt; &lt;code&gt;TransformerHandler&lt;/code&gt; &lt;/a&gt;接口允许从SAX2解析事件创建转换，该转换事件是&amp;ldquo;推送&amp;rdquo;模型，而不是通常在转换中发生的&amp;ldquo;拉&amp;rdquo;模型。正常的解析事件是通过&lt;a href=&quot;../../../../org/xml/sax/contenthandler&quot;&gt; &lt;code&gt;ContentHandler&lt;/code&gt; &lt;/a&gt;接口接收的，词汇事件（例如startCDATA和endCDATA）是通过&lt;a href=&quot;../../../../org/xml/sax/ext/lexicalhandler&quot;&gt; &lt;code&gt;LexicalHandler&lt;/code&gt; &lt;/a&gt;接口接收的，而表示禁用输出转义的开始或结束的事件是通过&lt;a href=&quot;../../../../org/xml/sax/contenthandler#processingInstruction(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;ContentHandler.processingInstruction(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt;，目标参数为&lt;a href=&quot;../result#PI_DISABLE_OUTPUT_ESCAPING&quot;&gt; &lt;code&gt;Result.PI_DISABLE_OUTPUT_ESCAPING&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../result#PI_ENABLE_OUTPUT_ESCAPING&quot;&gt; &lt;code&gt;Result.PI_ENABLE_OUTPUT_ESCAPING&lt;/code&gt; &lt;/a&gt;。如果需要在Transformer处理程序上设置参数，输出属性或其他功能，则需要从&lt;a href=&quot;transformerhandler#getTransformer()&quot;&gt; &lt;code&gt;TransformerHandler.getTransformer()&lt;/code&gt; &lt;/a&gt;获得&lt;a href=&quot;../transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt;引用，并从该引用调用方法。</target>
        </trans-unit>
        <trans-unit id="8b0e3a5fd66bb193d4396df91f7f330610d51100" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;single-argument constructor&lt;/a&gt; requires any illegal characters in its argument to be quoted and preserves any escaped octets and</source>
          <target state="translated">该&lt;a href=&quot;uri#URI-java.lang.String-&quot;&gt;单参数的构造函数&lt;/a&gt;，需要在它的参数中的任何非法字符被引用，并保留任何转义八位字节</target>
        </trans-unit>
        <trans-unit id="96d3a6675116e768726d899ee3f398538f8d3f5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#URI-java.lang.String-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-&quot;&gt;multi-argument constructors&lt;/a&gt; quote illegal characters as required by the components in which they appear. The percent character (&lt;code&gt;'%'&lt;/code&gt;) is always quoted by these constructors. Any</source>
          <target state="translated">在&lt;a href=&quot;uri#URI-java.lang.String-java.lang.String-java.lang.String-int-java.lang.String-java.lang.String-java.lang.String-&quot;&gt;多参数构造&lt;/a&gt;所要求的在它们出现的部件引用非法字符。百分号（ &lt;code&gt;'%'&lt;/code&gt; ）始终由这些构造函数引用。任何</target>
        </trans-unit>
        <trans-unit id="a5b18837b67d6da8cf5f631b9ddf3619afc39652" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#getRawUserInfo--&quot;&gt;&lt;code&gt;getRawUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawPath--&quot;&gt;&lt;code&gt;getRawPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawQuery--&quot;&gt;&lt;code&gt;getRawQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawFragment--&quot;&gt;&lt;code&gt;getRawFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getRawAuthority--&quot;&gt;&lt;code&gt;getRawAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt;&lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods return the values of their corresponding components in raw form, without interpreting any escaped octets. The strings returned by these methods may contain both escaped octets and</source>
          <target state="translated">的&lt;a href=&quot;uri#getRawUserInfo--&quot;&gt; &lt;code&gt;getRawUserInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getRawPath--&quot;&gt; &lt;code&gt;getRawPath&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getRawQuery--&quot;&gt; &lt;code&gt;getRawQuery&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getRawFragment--&quot;&gt; &lt;code&gt;getRawFragment&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getRawAuthority--&quot;&gt; &lt;code&gt;getRawAuthority&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;uri#getRawSchemeSpecificPart--&quot;&gt; &lt;code&gt;getRawSchemeSpecificPart&lt;/code&gt; &lt;/a&gt;方法返回原始形式及其相应的分量的值，而不用解释任何转义八位组。这些方法返回的字符串可能包含转义八位字节和</target>
        </trans-unit>
        <trans-unit id="c86bed47bbda7f711ebae1c96c0ca26487893480" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#getUserInfo--&quot;&gt;&lt;code&gt;getUserInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getPath--&quot;&gt;&lt;code&gt;getPath&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getQuery--&quot;&gt;&lt;code&gt;getQuery&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getFragment--&quot;&gt;&lt;code&gt;getFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;uri#getAuthority--&quot;&gt;&lt;code&gt;getAuthority&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;uri#getSchemeSpecificPart--&quot;&gt;&lt;code&gt;getSchemeSpecificPart&lt;/code&gt;&lt;/a&gt; methods decode any escaped octets in their corresponding components. The strings returned by these methods may contain both</source>
          <target state="translated">的&lt;a href=&quot;uri#getUserInfo--&quot;&gt; &lt;code&gt;getUserInfo&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getPath--&quot;&gt; &lt;code&gt;getPath&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getQuery--&quot;&gt; &lt;code&gt;getQuery&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getFragment--&quot;&gt; &lt;code&gt;getFragment&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;uri#getAuthority--&quot;&gt; &lt;code&gt;getAuthority&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;uri#getSchemeSpecificPart--&quot;&gt; &lt;code&gt;getSchemeSpecificPart&lt;/code&gt; &lt;/a&gt;方法是以其相应的部件解码任何转义八位组。这些方法返回的字符串可能包含</target>
        </trans-unit>
        <trans-unit id="05633b3838426efa3462c8db4d61636d5eac4d0e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#toASCIIString--&quot;&gt;&lt;code&gt;toASCIIString&lt;/code&gt;&lt;/a&gt; method returns a fully quoted and encoded URI string that does not contain any</source>
          <target state="translated">该&lt;a href=&quot;uri#toASCIIString--&quot;&gt; &lt;code&gt;toASCIIString&lt;/code&gt; &lt;/a&gt;方法返回一个不包含任何一个完全引用和编码的URI字符串</target>
        </trans-unit>
        <trans-unit id="f7da3d6193bb224a3c925ce28355ba647aa44c83" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;uri#toString--&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method returns a URI string with all necessary quotation but which may contain</source>
          <target state="translated">该&lt;a href=&quot;uri#toString--&quot;&gt; &lt;code&gt;toString&lt;/code&gt; &lt;/a&gt;方法返回一个URI字符串所有必要的报价，其中可能包含</target>
        </trans-unit>
        <trans-unit id="483ec9540b5f90a13d5603b20efcda8d93a44c03" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;urlencoder&quot;&gt;&lt;code&gt;URLEncoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;urldecoder&quot;&gt;&lt;code&gt;URLDecoder&lt;/code&gt;&lt;/a&gt; classes can also be used, but only for HTML form encoding, which is not the same as the encoding scheme defined in RFC2396.</source>
          <target state="translated">的&lt;a href=&quot;urlencoder&quot;&gt; &lt;code&gt;URLEncoder&lt;/code&gt; 的&lt;/a&gt;和&lt;a href=&quot;urldecoder&quot;&gt; &lt;code&gt;URLDecoder&lt;/code&gt; &lt;/a&gt;类也可以使用，但只为HTML形式的编码，这是不一样的在RFC2396中定义的编码方案。</target>
        </trans-unit>
        <trans-unit id="71f571d649e61ad2b45c6192eeeb015dbbe1495a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;userprincipal&quot;&gt;&lt;code&gt;UserPrincipal&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;groupprincipal&quot;&gt;&lt;code&gt;GroupPrincipal&lt;/code&gt;&lt;/a&gt; interfaces represent an identity or group identity.</source>
          <target state="translated">的&lt;a href=&quot;userprincipal&quot;&gt; &lt;code&gt;UserPrincipal&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;groupprincipal&quot;&gt; &lt;code&gt;GroupPrincipal&lt;/code&gt; &lt;/a&gt;接口表示的身份或组标识。</target>
        </trans-unit>
        <trans-unit id="86bc860478e690457692e5c83357667c82fd5795" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;userprincipallookupservice&quot;&gt;&lt;code&gt;UserPrincipalLookupService&lt;/code&gt;&lt;/a&gt; interface defines methods to lookup user or group principals.</source>
          <target state="translated">所述&lt;a href=&quot;userprincipallookupservice&quot;&gt; &lt;code&gt;UserPrincipalLookupService&lt;/code&gt; &lt;/a&gt;接口定义的方法来查找用户或组主体。</target>
        </trans-unit>
        <trans-unit id="e5ba21d66b0d3b93ec18ad331012b9b1ca1946a0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context()&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for these events is the relative path between the directory located by this path, and the path that locates the directory entry that is created, deleted, or modified.</source>
          <target state="translated">这些事件的&lt;a href=&quot;watchevent#context()&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;是此路径所定位的目录与查找已创建，删除或修改的目录条目的路径之间的相对路径。</target>
        </trans-unit>
        <trans-unit id="fde2227b0f31d201618a978dee14ccd29e9a589b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context()&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for this event is implementation specific and may be &lt;code&gt;null&lt;/code&gt;. The event &lt;a href=&quot;watchevent#count()&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; may be greater than &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">此事件的&lt;a href=&quot;watchevent#context()&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;是特定于实现的，并且可以为 &lt;code&gt;null&lt;/code&gt; 。事件&lt;a href=&quot;watchevent#count()&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;可能大于 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef147a7a54d7b0102550cbd209ac533ffc64556d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for these events is the relative path between the directory located by this path, and the path that locates the directory entry that is created, deleted, or modified.</source>
          <target state="translated">这些事件的&lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;是此路径所定位的目录与查找已创建，删除或修改的目录条目的路径之间的相对路径。</target>
        </trans-unit>
        <trans-unit id="bee2859efc1d0c9a918dc390dc05a7a666d1a2e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; for this event is implementation specific and may be &lt;code&gt;null&lt;/code&gt;. The event &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; may be greater than &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">此事件的&lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt;是特定于实现的，并且可以为 &lt;code&gt;null&lt;/code&gt; 。事件&lt;a href=&quot;watchevent#count--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt;可能大于 &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e191eba2c61488a28e1a8036123cb6a2b3ef3c96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;xpathfactory&quot;&gt;&lt;code&gt;XPathFactory&lt;/code&gt;&lt;/a&gt; class is not thread-safe. In other words, it is the application's responsibility to ensure that at most one thread is using a &lt;a href=&quot;xpathfactory&quot;&gt;&lt;code&gt;XPathFactory&lt;/code&gt;&lt;/a&gt; object at any given moment. Implementations are encouraged to mark methods as &lt;code&gt;synchronized&lt;/code&gt; to protect themselves from broken clients.</source>
          <target state="translated">该&lt;a href=&quot;xpathfactory&quot;&gt; &lt;code&gt;XPathFactory&lt;/code&gt; &lt;/a&gt;类不是线程安全的。换句话说，确保给定时刻最多有一个线程正在使用&lt;a href=&quot;xpathfactory&quot;&gt; &lt;code&gt;XPathFactory&lt;/code&gt; &lt;/a&gt;对象是应用程序的责任。鼓励实现将方法标记为已 &lt;code&gt;synchronized&lt;/code&gt; 以保护自己免受损坏的客户端的攻击。</target>
        </trans-unit>
        <trans-unit id="f03cb15a099a4644b24a61fcdbb5109f7974d51b" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;default-delimiter&quot;&gt;default whitespace delimiter&lt;/a&gt; used by a scanner is as recognized by &lt;a href=&quot;../lang/character#isWhitespace(char)&quot;&gt;&lt;code&gt;Character.isWhitespace()&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's delimiter to the default whitespace delimiter regardless of whether it was previously changed.</source>
          <target state="translated">扫描程序使用的&lt;a id=&quot;default-delimiter&quot;&gt;默认空格分隔符&lt;/a&gt;由&lt;a href=&quot;../lang/character#isWhitespace(char)&quot;&gt; &lt;code&gt;Character.isWhitespace()&lt;/code&gt; &lt;/a&gt;识别。该&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;不管它以前是否改变方法将重置扫描器的分隔符为默认空白分隔符的值。</target>
        </trans-unit>
        <trans-unit id="b5a1d07db2d39c9bf73ea9ba9ceee30337d99ed8" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;default-delimiter&quot;&gt;default whitespace delimiter&lt;/a&gt; used by a scanner is as recognized by &lt;a href=&quot;../lang/character#isWhitespace(int)&quot;&gt;&lt;code&gt;Character.isWhitespace()&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's delimiter to the default whitespace delimiter regardless of whether it was previously changed.</source>
          <target state="translated">扫描程序使用的&lt;a id=&quot;default-delimiter&quot;&gt;默认空格分隔符&lt;/a&gt;由&lt;a href=&quot;../lang/character#isWhitespace(int)&quot;&gt; &lt;code&gt;Character.isWhitespace()&lt;/code&gt; &lt;/a&gt;识别。该&lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;不管它以前是否改变方法将重置扫描器的分隔符为默认空白分隔符的值。</target>
        </trans-unit>
        <trans-unit id="83bba2b9bc41df62c4b5e232914061bbf686124f" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;floatDWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, decimal separators, exponential symbol, radix indicator, parentheses, and strings representing infinity and NaN as applicable. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">的&lt;a id=&quot;floatDWidth&quot;&gt;宽度&lt;/a&gt;是要被写入到输出的字符的最小数目。这包括任何符号，数字，分组分隔符，小数点分隔符，指数符号，基数指示符，括号以及表示无穷大和NaN的字符串（如果适用）。如果转换后的值的长度小于宽度，则输出将用空格（ &lt;code&gt;'\u0020'&lt;/code&gt; ）填充，直到字符总数等于width。默认情况下，填充为左侧。如果给出 &lt;code&gt;'-'&lt;/code&gt; 标志，则填充将在右边。如果未指定宽度，则没有最小值。</target>
        </trans-unit>
        <trans-unit id="ca1313ee0567ae6a3325e55423e970cd63c79430" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;genWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. If the length of the converted value is less than the width then the output will be padded by &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt; (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals the width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given, then the padding will be on the right. If the width is not specified then there is no minimum.</source>
          <target state="translated">的&lt;a id=&quot;genWidth&quot;&gt;宽度&lt;/a&gt;是要被写入到输出的字符的最小数目。如果转换后的值的长度小于宽度，则输出将以 &lt;code&gt;'&amp;nbsp;&amp;nbsp;'&lt;/code&gt; （ &lt;code&gt;'\u0020'&lt;/code&gt; ）填充，直到字符总数等于宽度为止。默认情况下，填充为左侧。如果给出 &lt;code&gt;'-'&lt;/code&gt; 标志，则填充将在右侧。如果未指定宽度，则没有最小值。</target>
        </trans-unit>
        <trans-unit id="17eab65f50d2d6e5be7b33da78f51370b8e43a39" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;intWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, radix indicator, and parentheses. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">的&lt;a id=&quot;intWidth&quot;&gt;宽度&lt;/a&gt;是要被写入到输出的字符的最小数目。这包括任何符号，数字，分组分隔符，基数指示符和括号。如果转换后的值的长度小于宽度，则输出将用空格（ &lt;code&gt;'\u0020'&lt;/code&gt; ）填充，直到字符总数等于width。默认情况下，填充为左侧。如果给出 &lt;code&gt;'-'&lt;/code&gt; 标志，则填充将在右侧。如果未指定宽度，则没有最小值。</target>
        </trans-unit>
        <trans-unit id="1b446ca4792047e9257ecea805dc721be67ff3ab" translate="yes" xml:space="preserve">
          <source>The &lt;a id=&quot;mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; argument specifies the access mode in which the file is to be opened. The permitted values and their meanings are:</source>
          <target state="translated">该&lt;a id=&quot;mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;一个参数指定的文件是要打开的访问模式。允许的值及其含义为：</target>
        </trans-unit>
        <trans-unit id="d7c6261bea4e77bf60d69292cc3f4a55c729b9b2" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;default-delimiter&quot;&gt;default whitespace delimiter&lt;/a&gt; used by a scanner is as recognized by &lt;a href=&quot;../lang/character&quot;&gt;&lt;code&gt;Character&lt;/code&gt;&lt;/a&gt;.&lt;a href=&quot;../lang/character#isWhitespace-char-&quot;&gt;&lt;code&gt;isWhitespace&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;scanner#reset--&quot;&gt;&lt;code&gt;reset()&lt;/code&gt;&lt;/a&gt; method will reset the value of the scanner's delimiter to the default whitespace delimiter regardless of whether it was previously changed.</source>
          <target state="translated">扫描仪使用的&lt;a name=&quot;default-delimiter&quot;&gt;默认空格分隔符&lt;/a&gt;由&lt;a href=&quot;../lang/character&quot;&gt; &lt;code&gt;Character&lt;/code&gt; &lt;/a&gt;识别。&lt;a href=&quot;../lang/character#isWhitespace-char-&quot;&gt; &lt;code&gt;isWhitespace&lt;/code&gt; &lt;/a&gt;。该&lt;a href=&quot;scanner#reset--&quot;&gt; &lt;code&gt;reset()&lt;/code&gt; &lt;/a&gt;不管它以前是否改变方法将重置扫描器的分隔符为默认空白分隔符的值。</target>
        </trans-unit>
        <trans-unit id="cdf992b6452b5c0645142b8150d07e858f599985" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;floatDWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, decimal separators, exponential symbol, radix indicator, parentheses, and strings representing infinity and NaN as applicable. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">的&lt;a name=&quot;floatDWidth&quot;&gt;宽度&lt;/a&gt;是要被写入到输出的字符的最小数目。这包括任何符号，数字，分组分隔符，小数点分隔符，指数符号，基数指示符，括号以及表示无穷大和NaN的字符串（如果适用）。如果转换后的值的长度小于宽度，则输出将用空格（ &lt;code&gt;'\u0020'&lt;/code&gt; ）填充，直到字符总数等于width。默认情况下，填充为左侧。如果给出 &lt;code&gt;'-'&lt;/code&gt; 标志，则填充将在右侧。如果未指定宽度，则没有最小值。</target>
        </trans-unit>
        <trans-unit id="8a0cfd7eb208b940d0fafb3de1697cf536161c15" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;genWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. If the length of the converted value is less than the width then the output will be padded by &lt;code&gt;' '&lt;/code&gt; (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals the width. The padding is on the left by default. If the &lt;code&gt;'-'&lt;/code&gt; flag is given, then the padding will be on the right. If the width is not specified then there is no minimum.</source>
          <target state="translated">的&lt;a name=&quot;genWidth&quot;&gt;宽度&lt;/a&gt;是要被写入到输出的字符的最小数目。如果转换后的值的长度小于宽度，则输出将用 &lt;code&gt;' '&lt;/code&gt; （ &lt;code&gt;'\u0020'&lt;/code&gt; ）填充，直到字符总数等于宽度为止。默认情况下，填充为左侧。如果给出 &lt;code&gt;'-'&lt;/code&gt; 标志，则填充将在右侧。如果未指定宽度，则没有最小值。</target>
        </trans-unit>
        <trans-unit id="8fa9d205d462a4bfb3a26d4bc78316084693aa53" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;intWidth&quot;&gt;width&lt;/a&gt; is the minimum number of characters to be written to the output. This includes any signs, digits, grouping separators, radix indicator, and parentheses. If the length of the converted value is less than the width then the output will be padded by spaces (&lt;code&gt;'\u0020'&lt;/code&gt;) until the total number of characters equals width. The padding is on the left by default. If &lt;code&gt;'-'&lt;/code&gt; flag is given then the padding will be on the right. If width is not specified then there is no minimum.</source>
          <target state="translated">的&lt;a name=&quot;intWidth&quot;&gt;宽度&lt;/a&gt;是要被写入到输出的字符的最小数目。这包括任何符号，数字，分组分隔符，基数指示符和括号。如果转换后的值的长度小于宽度，则输出将用空格（ &lt;code&gt;'\u0020'&lt;/code&gt; ）填充，直到字符总数等于width。默认情况下，填充为左侧。如果给出 &lt;code&gt;'-'&lt;/code&gt; 标志，则填充将在右侧。如果未指定宽度，则没有最小值。</target>
        </trans-unit>
        <trans-unit id="3e560a63da168303203b2b0de0e18b952b740b0d" translate="yes" xml:space="preserve">
          <source>The &lt;a name=&quot;mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; argument specifies the access mode in which the file is to be opened. The permitted values and their meanings are:</source>
          <target state="translated">该&lt;a name=&quot;mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;一个参数指定的文件是要打开的访问模式。允许的值及其含义为：</target>
        </trans-unit>
        <trans-unit id="145215dc44f9def357de3dab23a1f66f054c4d00" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassAnnotation(java.lang.Class)&quot;&gt;&lt;code&gt;getClassAnnotation&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method returns a &lt;code&gt;String&lt;/code&gt; representing the codebase URL path that a remote party should use to download the definition for the specified class. The format of the returned string is a path of URLs separated by spaces. The codebase string returned depends on the defining class loader of the specified class:</source>
          <target state="translated">该&lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassAnnotation(java.lang.Class)&quot;&gt; &lt;code&gt;getClassAnnotation&lt;/code&gt; &lt;/a&gt;&lt;/b&gt;方法返回一个 &lt;code&gt;String&lt;/code&gt; 表示远程方应使用下载的定义指定类的基本代码URL路径。返回字符串的格式是URL的路径，以空格分隔。返回的代码库字符串取决于指定类的定义类加载器：</target>
        </trans-unit>
        <trans-unit id="66186e196d8e5241a2fcb4f702c74b0fc47b8afc" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassLoader(java.lang.String)&quot;&gt;&lt;code&gt;getClassLoader&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method returns the codebase loader for the specified codebase URL path. If there is a security manager, then if the calling context does not have permission to connect to all of the URLs in the codebase URL path, a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown.</source>
          <target state="translated">该&lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#getClassLoader(java.lang.String)&quot;&gt; &lt;code&gt;getClassLoader&lt;/code&gt; &lt;/a&gt;&lt;/b&gt;方法返回指定基本代码URL路径的基本代码加载器。如果存在安全管理器，则如果调用上下文没有权限连接到代码库URL路径中的所有URL，则将引发 &lt;code&gt;SecurityException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30c066047ac9f5fbc1551a26a952f9784869ea3b" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method attempts to load the class with the specified name as follows:</source>
          <target state="translated">所述&lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt;&lt;/b&gt;方法尝试使用指定的名称加载类，如下所示：</target>
        </trans-unit>
        <trans-unit id="8eea9c24656b997f30d79cc056342173a1531262" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadProxyClass(java.lang.String,java.lang.String%5B%5D,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;loadProxyClass&lt;/code&gt;&lt;/a&gt;&lt;/b&gt; method attempts to return a dynamic proxy class with the named interface as follows:</source>
          <target state="translated">该&lt;b&gt;&lt;a href=&quot;rmiclassloaderspi#loadProxyClass(java.lang.String,java.lang.String%5B%5D,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;loadProxyClass&lt;/code&gt; &lt;/a&gt;&lt;/b&gt;方法试图返回一个动态代理类与命名界面如下：</target>
        </trans-unit>
        <trans-unit id="d70755c800c2b720f9b2a4d9f93470f170f35163" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;all-at-once&lt;/b&gt; pattern: Get the doc from the current multidoc, and save the doc in a list. Get the next multidoc from the current multidoc, and repeat until there are no more. Then iterate over the list of saved docs. Get the print data representation object from the current doc. Get all the print data from the print data representation object. Go to the next doc in the list, and repeat until there are no more.</source>
          <target state="translated">该&lt;b&gt;全在一次&lt;/b&gt;模式：从当前multidoc中的文档，并保存文档在列表中。从当前多文档中获取下一个多文档，然后重复进行直到没有更多。然后遍历已保存文档的列表。从当前文档获取打印数据表示对象。从打印数据表示对象获取所有打印数据。转到列表中的下一个文档，然后重复直到没有更多。</target>
        </trans-unit>
        <trans-unit id="14f6267fa804e0d76a0763676c42485e1a9ce366" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;interleaved&lt;/b&gt; pattern: Get the doc from the current multidoc. Get the print data representation object from the current doc. Get all the print data from the print data representation object. Get the next multidoc from the current multidoc, and repeat until there are no more. (The code example above uses the interleaved pattern.)</source>
          <target state="translated">在&lt;b&gt;交错的&lt;/b&gt;模式：从当前multidoc中的文档。从当前文档获取打印数据表示对象。从打印数据表示对象获取所有打印数据。从当前多文档中获取下一个多文档，然后重复进行直到没有更多。（上面的代码示例使用交错模式。）</target>
        </trans-unit>
        <trans-unit id="80231fb01cbd9eea6cac573462b78797a00356f7" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;javax.management.builder.initial&lt;/b&gt; system property is consulted every time a new MBeanServer needs to be created, and the class pointed to by that property is loaded. If that class is different from that of the current MBeanServerBuilder, then a new MBeanServerBuilder is created. Otherwise, the MBeanServerFactory may create a new MBeanServerBuilder or reuse the current one.</source>
          <target state="translated">该&lt;b&gt;javax.management.builder.initial&lt;/b&gt;系统属性咨询每一个新的MBeanServer需要创建时间，并通过该属性指向的类加载。如果该类与当前MBeanServerBuilder的类不同，则将创建一个新的MBeanServerBuilder。否则，MBeanServerFactory可能会创建一个新的MBeanServerBuilder或重用当前的MBeanServerBuilder。</target>
        </trans-unit>
        <trans-unit id="133b14a15ab9a0721c864334bb5dcba8749ddb42" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-1935722590756516193L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-1935722590756516193L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="622f4eec33d97ed2e8edad4e862e2ca5e8fc31cb" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-279985518429862552L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-279985518429862552L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="59d67311624b4fef95e26ff51e0a9c6b2312c3c6" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-48350262537070138L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-48350262537070138L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ab26041362e68fa2964d28d4745de355c08d29de" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6292969195866300415L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-6292969195866300415L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f922ee070b5cc5ace54d4a0b9d3f07682e92469" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6304063118040985512L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;是 &lt;code&gt;-6304063118040985512L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93f104d7169f5ba748ac71dc420f8f2b3490fac9" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-6871117877523310399L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-6871117877523310399L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5c85e9f3228eea1cfaf1477d918140c111a3aa28" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-7445681389570207141L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;是 &lt;code&gt;-7445681389570207141L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffe47f8e6b033a46b369815e41c457527afba987" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;-7516092053498031989L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;-7516092053498031989L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e41f3c2dd2562ef1b180a361f4b55bf634bff02" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;1081892073854801359L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;1081892073854801359L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ca4312b85a226720a17b2d5c731f010931d260d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;1190536278266811217L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;1190536278266811217L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="072aec20483bdd007929c428e915e721c5ac25ae" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;2504952983494636987L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;2504952983494636987L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="836dfd3926b378790fd6604b2d4b322a25a61a21" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;2605900539589789736L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;2605900539589789736L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5105ab01988b46bcdb2ad68ccb972b352bbbf14f" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;3176664577895105181L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;3176664577895105181L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63b961dbc4cf57cb42fe0df92a55437c8ee74ba1" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;3862947819818064362L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;3862947819818064362L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="194f95466a78a370966f9e904fcacd1a20dcddc8" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;4611072955724144607L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;4611072955724144607L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f6ceca5a91a116ea11f104aaac88adefc6f654d" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;6181543027787327345L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;是 &lt;code&gt;6181543027787327345L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ab50df0639c6c2a445f4eb42deaf59f57cd4cea" translate="yes" xml:space="preserve">
          <source>The &lt;b&gt;serialVersionUID&lt;/b&gt; of this class is &lt;code&gt;6532732096650090465L&lt;/code&gt;.</source>
          <target state="translated">此类的&lt;b&gt;serialVersionUID&lt;/b&gt;为 &lt;code&gt;6532732096650090465L&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf7d7ffcce3e481d53bebd9cf2aa7b4afe92bff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt; TooManyListenersException &lt;/code&gt; Exception is used as part of the Java Event model to annotate and implement a unicast special case of a multicast Event Source.</source>
          <target state="translated">该 &lt;code&gt; TooManyListenersException &lt;/code&gt; 异常用作Java事件模型来注释的一部分，并实现多播Event Source的单播特例。</target>
        </trans-unit>
        <trans-unit id="bb787bcc5a2d9591ebf6b45c48058c0e3ea10e61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt; java.security.acl &lt;/code&gt; package provides the interfaces to the ACL and related data structures (ACL entries, groups, permissions, etc.).</source>
          <target state="translated">的 &lt;code&gt; java.security.acl &lt;/code&gt; 中包提供接口到ACL和相关数据结构（ACL条目，组，权限等）。</target>
        </trans-unit>
        <trans-unit id="f745d9767dfe7275935bfbda4ff48625b21cbb74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt; java.security.acl.Acl &lt;/code&gt; interface extends the &lt;code&gt; java.security.acl.Owner &lt;/code&gt; interface. The Owner interface is used to maintain a list of owners for each ACL. Only owners are allowed to modify an ACL. For example, only an owner can call the ACL's &lt;code&gt;addEntry&lt;/code&gt; method to add a new ACL entry to the ACL.</source>
          <target state="translated">该 &lt;code&gt; java.security.acl.Acl &lt;/code&gt; 中的接口扩展了 &lt;code&gt; java.security.acl.Owner &lt;/code&gt; 接口。所有者接口用于维护每个ACL的所有者列表。只允许所有者修改ACL。例如，只有所有者可以调用ACL的 &lt;code&gt;addEntry&lt;/code&gt; 方法将新的ACL条目添加到ACL。</target>
        </trans-unit>
        <trans-unit id="140c233f5b711ea49784f7bc7d8f708ede025961" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; mode can be used to reduce the number of I/O operations performed. Using &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; only requires updates to the file's content to be written to storage; using &lt;code&gt;&quot;rws&quot;&lt;/code&gt; requires updates to both the file's content and its metadata to be written, which generally requires at least one more low-level I/O operation.</source>
          <target state="translated">所述 &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; 模式可被用于减少对I / O操作数执行。使用 &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; 仅需要更新文件内容即可将其写入存储；使用 &lt;code&gt;&quot;rws&quot;&lt;/code&gt; 需要更新文件的内容及其要写入的元数据，这通常至少需要至少一个低级别的I / O操作。</target>
        </trans-unit>
        <trans-unit id="5b1f93f3fa32832e03089b3885817033d0127da5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;rws&quot;&lt;/code&gt; and &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; modes work much like the &lt;a href=&quot;../nio/channels/filechannel#force(boolean)&quot;&gt;&lt;code&gt;force(boolean)&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../nio/channels/filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, passing arguments of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;, respectively, except that they always apply to every I/O operation and are therefore often more efficient. If the file resides on a local storage device then when an invocation of a method of this class returns it is guaranteed that all changes made to the file by that invocation will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made.</source>
          <target state="translated">该 &lt;code&gt;&quot;rws&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; 模式下工作很像&lt;a href=&quot;../nio/channels/filechannel#force(boolean)&quot;&gt; &lt;code&gt;force(boolean)&lt;/code&gt; &lt;/a&gt;的方法&lt;a href=&quot;../nio/channels/filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;类，传递的参数 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 分别，但他们总是适用于每一个I / O操作，因此往往更有效。如果文件驻留在本地存储设备上，则在返回此类的方法的调用时，可以确保通过该调用对文件所做的所有更改都将被写入该设备。这对于确保在系统崩溃时不会丢失关键信息很有用。如果文件不在本地设备上，则不做任何保证。</target>
        </trans-unit>
        <trans-unit id="0cfa334fcd18f47df7a744728a735885661d2393" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&quot;rws&quot;&lt;/code&gt; and &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; modes work much like the &lt;a href=&quot;../nio/channels/filechannel#force-boolean-&quot;&gt;&lt;code&gt;force(boolean)&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../nio/channels/filechannel&quot;&gt;&lt;code&gt;FileChannel&lt;/code&gt;&lt;/a&gt; class, passing arguments of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;, respectively, except that they always apply to every I/O operation and are therefore often more efficient. If the file resides on a local storage device then when an invocation of a method of this class returns it is guaranteed that all changes made to the file by that invocation will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made.</source>
          <target state="translated">该 &lt;code&gt;&quot;rws&quot;&lt;/code&gt; 和 &lt;code&gt;&quot;rwd&quot;&lt;/code&gt; 模式下工作很像&lt;a href=&quot;../nio/channels/filechannel#force-boolean-&quot;&gt; &lt;code&gt;force(boolean)&lt;/code&gt; &lt;/a&gt;的方法&lt;a href=&quot;../nio/channels/filechannel&quot;&gt; &lt;code&gt;FileChannel&lt;/code&gt; &lt;/a&gt;类，传递的参数 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;false&lt;/code&gt; 分别，但他们总是适用于每一个I / O操作，因此往往更有效。如果文件位于本地存储设备上，则在返回此类的方法的调用时，可以确保通过该调用对文件所做的所有更改都将被写入该设备。这对于确保在系统崩溃时不会丢失关键信息很有用。如果文件不在本地设备上，则不做任何保证。</target>
        </trans-unit>
        <trans-unit id="672103200add16df31276ac023df355f5dfbdb29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all double values: &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Double.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/double#compareTo(java.lang.Double)&quot;&gt;&lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0d&lt;/code&gt; is treated as less than value &lt;code&gt;0.0d&lt;/code&gt; and &lt;code&gt;Double.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Double.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">所述 &lt;code&gt;&amp;lt;&lt;/code&gt; 关系不能在所有的双精度值提供一个总次序： &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;Double.NaN&lt;/code&gt; 值既不小于比较，大于，也不等于任何值，甚至本身。此方法使用方法&lt;a href=&quot;../lang/double#compareTo(java.lang.Double)&quot;&gt; &lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt; &lt;/a&gt;施加的总顺序： &lt;code&gt;-0.0d&lt;/code&gt; 被视为小于值 &lt;code&gt;0.0d&lt;/code&gt; ,并且 &lt;code&gt;Double.NaN&lt;/code&gt; 被认为大于任何其他值，并且所有 &lt;code&gt;Double.NaN&lt;/code&gt; 值都被视为被认为是平等的。</target>
        </trans-unit>
        <trans-unit id="5aac2f6058d827131417bfcfef8dc2eb4bdbda46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all double values: &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Double.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/double#compareTo-java.lang.Double-&quot;&gt;&lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0d&lt;/code&gt; is treated as less than value &lt;code&gt;0.0d&lt;/code&gt; and &lt;code&gt;Double.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Double.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">所述 &lt;code&gt;&amp;lt;&lt;/code&gt; 关系不能在所有的双精度值提供一个总次序： &lt;code&gt;-0.0d == 0.0d&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;Double.NaN&lt;/code&gt; 值既不小于比较，大于，也不等于任何值，甚至本身。此方法使用方法&lt;a href=&quot;../lang/double#compareTo-java.lang.Double-&quot;&gt; &lt;code&gt;Double.compareTo(java.lang.Double)&lt;/code&gt; &lt;/a&gt;施加的总顺序： &lt;code&gt;-0.0d&lt;/code&gt; 被视为小于值 &lt;code&gt;0.0d&lt;/code&gt; ,并且 &lt;code&gt;Double.NaN&lt;/code&gt; 被认为大于任何其他值，并且所有 &lt;code&gt;Double.NaN&lt;/code&gt; 值都被视为被认为是平等的。</target>
        </trans-unit>
        <trans-unit id="9d5f206cf064cd395031f64090f39b8054760d79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all float values: &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Float.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/float#compareTo(java.lang.Float)&quot;&gt;&lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0f&lt;/code&gt; is treated as less than value &lt;code&gt;0.0f&lt;/code&gt; and &lt;code&gt;Float.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Float.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">所述 &lt;code&gt;&amp;lt;&lt;/code&gt; 关系不能在所有浮点值提供一个总次序： &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;Float.NaN&lt;/code&gt; 值既不小于比较，大于，也不等于任何值，甚至本身。此方法使用方法&lt;a href=&quot;../lang/float#compareTo(java.lang.Float)&quot;&gt; &lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt; &lt;/a&gt;施加的总顺序： &lt;code&gt;-0.0f&lt;/code&gt; 被视为小于值 &lt;code&gt;0.0f&lt;/code&gt; ,而 &lt;code&gt;Float.NaN&lt;/code&gt; 被视为大于任何其他值，并且所有 &lt;code&gt;Float.NaN&lt;/code&gt; 值都为被认为是平等的。</target>
        </trans-unit>
        <trans-unit id="6758eacaf6eafc7546dec5d6a98b3ed7630fdb8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;/code&gt; relation does not provide a total order on all float values: &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; and a &lt;code&gt;Float.NaN&lt;/code&gt; value compares neither less than, greater than, nor equal to any value, even itself. This method uses the total order imposed by the method &lt;a href=&quot;../lang/float#compareTo-java.lang.Float-&quot;&gt;&lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;-0.0f&lt;/code&gt; is treated as less than value &lt;code&gt;0.0f&lt;/code&gt; and &lt;code&gt;Float.NaN&lt;/code&gt; is considered greater than any other value and all &lt;code&gt;Float.NaN&lt;/code&gt; values are considered equal.</source>
          <target state="translated">所述 &lt;code&gt;&amp;lt;&lt;/code&gt; 关系不能在所有浮点值提供一个总次序： &lt;code&gt;-0.0f == 0.0f&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;Float.NaN&lt;/code&gt; 值既不小于比较，大于，也不等于任何值，甚至本身。此方法使用方法&lt;a href=&quot;../lang/float#compareTo-java.lang.Float-&quot;&gt; &lt;code&gt;Float.compareTo(java.lang.Float)&lt;/code&gt; &lt;/a&gt;施加的总顺序： &lt;code&gt;-0.0f&lt;/code&gt; 被视为小于值 &lt;code&gt;0.0f&lt;/code&gt; ,并且 &lt;code&gt;Float.NaN&lt;/code&gt; 被认为大于任何其他值，并且所有 &lt;code&gt;Float.NaN&lt;/code&gt; 值都为被认为是平等的。</target>
        </trans-unit>
        <trans-unit id="90432c8dfcfbf409f5a74fbfef303f20d153821a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; element will now contain the whole instant as formatted by the &lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt;&lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt;&lt;/a&gt; formatter.</source>
          <target state="translated">所述 &lt;code&gt;&amp;lt;date&amp;gt;&lt;/code&gt; 元件现在将包含整个瞬间由作为格式化&lt;a href=&quot;../../../../java.base/java/time/format/datetimeformatter#ISO_INSTANT&quot;&gt; &lt;code&gt;DateTimeFormatter.ISO_INSTANT&lt;/code&gt; &lt;/a&gt;格式化。</target>
        </trans-unit>
        <trans-unit id="19c7fcf4b0bd09ca778aaec398fff3533b85a624" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;widget&amp;gt;&lt;/code&gt; element can be selected with the following process:</source>
          <target state="translated">所述 &lt;code&gt;&amp;lt;widget&amp;gt;&lt;/code&gt; 元件可以用下面的过程来选择：</target>
        </trans-unit>
        <trans-unit id="566defc53a29dd2c6f74968329502b0e504d1e15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'-'&lt;/code&gt; flag defined for &lt;a href=&quot;#dFlags&quot;&gt;General conversions&lt;/a&gt; applies. If any other flags are provided, then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">为&lt;a href=&quot;#dFlags&quot;&gt;常规转换&lt;/a&gt;定义的 &lt;code&gt;'-'&lt;/code&gt; 标志适用。如果提供了任何其他标志，&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; &lt;/a&gt;引发FormatFlagsConversionMismatchException。</target>
        </trans-unit>
        <trans-unit id="ea48ab5aaeaf4194edab0eb91c4845bbde6ed392" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'-'&lt;/code&gt; flag defined for &lt;a href=&quot;#dFlags&quot;&gt;General conversions&lt;/a&gt; applies. If the &lt;code&gt;'#'&lt;/code&gt; flag is given, then a &lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt;&lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt;&lt;/a&gt; will be thrown.</source>
          <target state="translated">为&lt;a href=&quot;#dFlags&quot;&gt;常规转换&lt;/a&gt;定义的 &lt;code&gt;'-'&lt;/code&gt; 标志适用。如果给出 &lt;code&gt;'#'&lt;/code&gt; 标志，&lt;a href=&quot;formatflagsconversionmismatchexception&quot;&gt; &lt;code&gt;FormatFlagsConversionMismatchException&lt;/code&gt; &lt;/a&gt;引发FormatFlagsConversionMismatchException。</target>
        </trans-unit>
        <trans-unit id="803c87810da3137c31c3b9569aa0cdd88a5236f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;**&lt;/code&gt; characters matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; crossing directory boundaries.</source>
          <target state="translated">该 &lt;code&gt;**&lt;/code&gt; 字符匹配零个或多个&lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt;穿越目录边界。</target>
        </trans-unit>
        <trans-unit id="43dd9a922339149a13fa5f34e0acbba85a8ef4ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; character matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;path#getName(int)&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; component without crossing directory boundaries.</source>
          <target state="translated">在 &lt;code&gt;*&lt;/code&gt; 字符零个或多个匹配&lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt;a的&lt;a href=&quot;path#getName(int)&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;成分不跨越界限的目录。</target>
        </trans-unit>
        <trans-unit id="bdc9ec98d6c3e53fb7a51d01e995f914de002527" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; character matches zero or more &lt;a href=&quot;../../lang/character&quot;&gt;&lt;code&gt;characters&lt;/code&gt;&lt;/a&gt; of a &lt;a href=&quot;path#getName-int-&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; component without crossing directory boundaries.</source>
          <target state="translated">在 &lt;code&gt;*&lt;/code&gt; 字符零个或多个匹配&lt;a href=&quot;../../lang/character&quot;&gt; &lt;code&gt;characters&lt;/code&gt; &lt;/a&gt; a的&lt;a href=&quot;path#getName-int-&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;成分不跨越界限的目录。</target>
        </trans-unit>
        <trans-unit id="56b1e692364ff3d0377ffb97e33a6452576a382f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class includes methods for determining the format of an audio file, obtaining an audio input stream from an audio file, and writing an audio file from an audio input stream.</source>
          <target state="translated">所述 &lt;code&gt;&lt;a href=&quot;audiosystem&quot;&gt;&lt;code&gt;AudioSystem&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 类包括用于确定音频文件的格式，从音频文件获得音频输入流，和写入从音频输入流的音频文件的方法。</target>
        </trans-unit>
        <trans-unit id="bb56cab0d387af77b98e49727a7446f08b61aa9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;system#exit-int-&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method is the conventional and convenient means of invoking this method.</source>
          <target state="translated">该 &lt;code&gt;&lt;a href=&quot;system#exit-int-&quot;&gt;&lt;code&gt;System.exit&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 方法是调用此方法的一种传统和方便的手段。</target>
        </trans-unit>
        <trans-unit id="b7e40741bd63e3e4d4e34f6ccfaaa185c2f108df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ArbitraryText&lt;/em&gt;&lt;/code&gt; is any additional text that the connector server adds when creating the client id. At a minimum, it must be enough to distinguish this connection ID from the ID of any other connection currently opened by this connector server.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;ArbitraryText&lt;/em&gt;&lt;/code&gt; 是连接器服务器创建客户端ID时添加任何额外的文本。至少必须足以将此连接ID与该连接器服务器当前打开的任何其他连接的ID区分开。</target>
        </trans-unit>
        <trans-unit id="57252451ad18df2276d94648faafb4c4918a4f22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ClientAddress&lt;/em&gt;&lt;/code&gt; is the address and port of the connecting client, if these can be determined, otherwise nothing. The &lt;code&gt;&lt;em&gt;HostAddress&lt;/em&gt;&lt;/code&gt; is the Internet address of the host that the client is connecting from, in numeric or DNS form. Numeric IPv6 addresses are enclosed in square brackets &lt;code&gt;[]&lt;/code&gt;. The &lt;code&gt;&lt;em&gt;HostPort&lt;/em&gt;&lt;/code&gt; is the decimal port number that the client is connecting from.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;ClientAddress&lt;/em&gt;&lt;/code&gt; 是地址和连接客户端的端口，如果这些可以判断，否则什么都没有。该 &lt;code&gt;&lt;em&gt;HostAddress&lt;/em&gt;&lt;/code&gt; 是客户端是从，连接在数字或DNS形式的主机的Internet地址。IPv6地址数字括在方括号 &lt;code&gt;[]&lt;/code&gt; 中。该 &lt;code&gt;&lt;em&gt;HostPort&lt;/em&gt;&lt;/code&gt; 是客户端从连接的十进制端口号。</target>
        </trans-unit>
        <trans-unit id="82e61d9cf4e7e9707c96a7b88021832560e67b3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; is the identity of the client entity, typically a string returned by &lt;a href=&quot;jmxprincipal#getName()&quot;&gt;&lt;code&gt;JMXPrincipal.getName()&lt;/code&gt;&lt;/a&gt;. This string must not contain spaces.</source>
          <target state="translated">所述 &lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; 是客户端实体的身份，典型地通过返回的字符串&lt;a href=&quot;jmxprincipal#getName()&quot;&gt; &lt;code&gt;JMXPrincipal.getName()&lt;/code&gt; &lt;/a&gt;。该字符串不能包含空格。</target>
        </trans-unit>
        <trans-unit id="531c08ac15a131c27029679adeb81cf5ad5bec7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; is the identity of the client entity, typically a string returned by &lt;a href=&quot;jmxprincipal#getName--&quot;&gt;&lt;code&gt;JMXPrincipal.getName()&lt;/code&gt;&lt;/a&gt;. This string must not contain spaces.</source>
          <target state="translated">所述 &lt;code&gt;&lt;em&gt;ClientId&lt;/em&gt;&lt;/code&gt; 是客户端实体的身份，典型地通过返回的字符串&lt;a href=&quot;jmxprincipal#getName--&quot;&gt; &lt;code&gt;JMXPrincipal.getName()&lt;/code&gt; &lt;/a&gt;。该字符串不能包含空格。</target>
        </trans-unit>
        <trans-unit id="e5ea1882020edd1476b0a71f1c9d73fd0f805d1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;Protocol&lt;/em&gt;&lt;/code&gt; is a protocol that would be recognized by &lt;a href=&quot;jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;Protocol&lt;/em&gt;&lt;/code&gt; 是&lt;a href=&quot;jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; &lt;/a&gt;可以识别的协议。</target>
        </trans-unit>
        <trans-unit id="b824fdb77864355409db5ed994fa82e5b5e6ca93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; and &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; can be omitted. The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; cannot be supplied without a &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">在 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 和 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 可以省略。该 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 不能没有被供给 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a12722721e439b6dff600477a13341187efa0475" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; in a user-provided &lt;code&gt;serviceURL&lt;/code&gt; is optional. If present, it is copied into the generated &lt;code&gt;JMXServiceURL&lt;/code&gt; but otherwise ignored. If absent, the generated &lt;code&gt;JXMServiceURL&lt;/code&gt; will have the local host name.</source>
          <target state="translated">用户提供的 &lt;code&gt;serviceURL&lt;/code&gt; 中的 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 是可选的。如果存在，它将被复制到生成的 &lt;code&gt;JMXServiceURL&lt;/code&gt; 中，否则将被忽略。如果不存在，则生成的 &lt;code&gt;JXMServiceURL&lt;/code&gt; 将具有本地主机名。</target>
        </trans-unit>
        <trans-unit id="bfa23af48503c6623afb1ad1711fefdb1632d2c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; is a host name, an IPv4 numeric host address, or an IPv6 numeric address enclosed in square brackets.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 是主机名，IPv4的数字主机地址，或方括号括起来的IPv6数字地址。</target>
        </trans-unit>
        <trans-unit id="8460511f507f18975285f87a75a8e4aef97a17f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;#getHost()&quot;&gt;&lt;code&gt;getHost()&lt;/code&gt;&lt;/a&gt;. If that value specifies a numeric IPv6 address, it is surrounded by square brackets &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">返回字符串的 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 部分是&lt;a href=&quot;#getHost()&quot;&gt; &lt;code&gt;getHost()&lt;/code&gt; &lt;/a&gt;返回的值。如果该值指定了数字IPv6地址，则将其括在方括号 &lt;code&gt;[]&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="2b0d7cc7b25ad83d3037b4dc212df848a1f89cd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt;&lt;code&gt;getHost()&lt;/code&gt;&lt;/a&gt;. If that value specifies a numeric IPv6 address, it is surrounded by square brackets &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">返回字符串的 &lt;code&gt;&lt;em&gt;host&lt;/em&gt;&lt;/code&gt; 部分是&lt;a href=&quot;jmxserviceurl#getHost--&quot;&gt; &lt;code&gt;getHost()&lt;/code&gt; &lt;/a&gt;返回的值。如果该值指定一个数字IPv6地址，则将其括在方括号 &lt;code&gt;[]&lt;/code&gt; 中。</target>
        </trans-unit>
        <trans-unit id="55c0575a0a5f3a8a03451fbe7153260d3ab2702e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; in a user-provided &lt;code&gt;serviceURL&lt;/code&gt; is also optional. If present, it is also copied into the generated &lt;code&gt;JMXServiceURL&lt;/code&gt;; otherwise, the generated &lt;code&gt;JMXServiceURL&lt;/code&gt; has no port. For an &lt;code&gt;serviceURL&lt;/code&gt; using the &lt;code&gt;rmi&lt;/code&gt; protocol, the &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt;, if present, indicates what port the generated remote object should be exported on. It has no other effect.</source>
          <target state="translated">用户提供的 &lt;code&gt;serviceURL&lt;/code&gt; 中的 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 也是可选的。如果存在，它还将被复制到生成的 &lt;code&gt;JMXServiceURL&lt;/code&gt; ;中。否则，生成的 &lt;code&gt;JMXServiceURL&lt;/code&gt; 没有端口。对于使用 &lt;code&gt;rmi&lt;/code&gt; 协议的 &lt;code&gt;serviceURL&lt;/code&gt; ， &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; （如果存在）指示应将生成的远程对象导出到哪个端口。它没有其他作用。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f0c8f3bfcebe38f9f7e404fcfe049e036b34bcb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; is a decimal port number. 0 means a default or anonymous port, depending on the protocol.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 是十进制端口号。0表示默认或匿名端口，具体取决于协议。</target>
        </trans-unit>
        <trans-unit id="e64b24c6106b58d8f17aec775ecdc7be255a7b9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;#getPort()&quot;&gt;&lt;code&gt;getPort()&lt;/code&gt;&lt;/a&gt; in its shortest decimal form. If the value is zero, it is omitted.</source>
          <target state="translated">返回字符串的 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 部分是&lt;a href=&quot;#getPort()&quot;&gt; &lt;code&gt;getPort()&lt;/code&gt; &lt;/a&gt;以最短十进制形式返回的值。如果值为零，则将其省略。</target>
        </trans-unit>
        <trans-unit id="aed5089fcc06d0b24df1a0c3d314b9e78f48e5cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; part of the returned string is the value returned by &lt;a href=&quot;jmxserviceurl#getPort--&quot;&gt;&lt;code&gt;getPort()&lt;/code&gt;&lt;/a&gt; in its shortest decimal form. If the value is zero, it is omitted.</source>
          <target state="translated">返回字符串的 &lt;code&gt;&lt;em&gt;port&lt;/em&gt;&lt;/code&gt; 部分是&lt;a href=&quot;jmxserviceurl#getPort--&quot;&gt; &lt;code&gt;getPort()&lt;/code&gt; &lt;/a&gt;以最短十进制形式返回的值。如果值为零，则将其省略。</target>
        </trans-unit>
        <trans-unit id="44dcc40e6319d73e55e0506b2a02c88d015d6e90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;protocol-version&lt;/em&gt;&lt;/code&gt; is a series of two or more non-negative integers separated by periods (&lt;code&gt;.&lt;/code&gt;). An implementation of the version described by this documentation must use the string &lt;code&gt;1.0&lt;/code&gt; here.</source>
          <target state="translated">该 &lt;code&gt;&lt;em&gt;protocol-version&lt;/em&gt;&lt;/code&gt; 是一系列的两个或更多个非负整数由句点分隔（ &lt;code&gt;.&lt;/code&gt; ）。本文档描述的版本的实现必须在此处使用字符串 &lt;code&gt;1.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51e5d21d788500cd8258dd52116920bb8d78aa5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt;, if any, begins with a slash (&lt;code&gt;/&lt;/code&gt;) or a semicolon (&lt;code&gt;;&lt;/code&gt;) and continues to the end of the address. It can contain attributes using the semicolon syntax specified in RFC 2609. Those attributes are not parsed by this class and incorrect attribute syntax is not detected.</source>
          <target state="translated">的 &lt;code&gt;&lt;em&gt;url-path&lt;/em&gt;&lt;/code&gt; ，如果有的话，便从斜线（ &lt;code&gt;/&lt;/code&gt; ）或分号（ &lt;code&gt;;&lt;/code&gt; ），并持续到地址的末端。它可以使用RFC 2609中指定的分号语法包含属性。此类无法解析这些属性，并且不会检测到错误的属性语法。</target>
        </trans-unit>
        <trans-unit id="0cfefc52ce748f9328afa9b5dc72829a45465fa5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;?&lt;/code&gt; character matches exactly one character of a name component.</source>
          <target state="translated">的 &lt;code&gt;?&lt;/code&gt; 字符完全匹配名称组件的一个字符。</target>
        </trans-unit>
        <trans-unit id="0efee80247743a6ac1ac9ba48df946cfc93c6410" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@Deprecated&lt;/code&gt; annotation should always be present if the &lt;code&gt;@deprecated&lt;/code&gt; javadoc tag is present, and vice-versa.</source>
          <target state="translated">该 &lt;code&gt;@Deprecated&lt;/code&gt; 注释应始终存在，如果 &lt;code&gt;@deprecated&lt;/code&gt; Javadoc标记出现，反之亦然。</target>
        </trans-unit>
        <trans-unit id="3916be731536563c076672f2f55b3e1476410ef0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AWTEventMonitor&lt;/code&gt; implements a suite of listeners that are conditionally installed on every AWT component instance in the Java Virtual Machine.</source>
          <target state="translated">该 &lt;code&gt;AWTEventMonitor&lt;/code&gt; 实现了是在Java虚拟机每个AWT组件实例有条件安装监听器的套件。</target>
        </trans-unit>
        <trans-unit id="1933cb82d881655231913702fb32fbabb38d00ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AWTEventMonitor&lt;/code&gt; implements a suite of listeners that are conditionally installed on every AWT component instance in the Java Virtual Machine. The events captured by these listeners are made available through a unified set of listeners supported by &lt;code&gt;AWTEventMonitor&lt;/code&gt;. With this, all the individual events on each of the AWT component instances are funneled into one set of listeners broken down by category (see &lt;a href=&quot;eventid&quot;&gt;&lt;code&gt;EventID&lt;/code&gt;&lt;/a&gt; for the categories).</source>
          <target state="translated">该 &lt;code&gt;AWTEventMonitor&lt;/code&gt; 实现了是在Java虚拟机每个AWT组件实例有条件安装监听器的套件。这些侦听器捕获的事件可通过 &lt;code&gt;AWTEventMonitor&lt;/code&gt; 支持的一组统一的侦听器使用。这样，每个AWT组件实例上的所有单个事件都被集中到一组按类别细分的侦听器中（有关类别，请参见&lt;a href=&quot;eventid&quot;&gt; &lt;code&gt;EventID&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="86179c7113b7ca3e72607b93d89e62c19020820b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessControlContext&lt;/code&gt; may contain many Subjects (from nested &lt;code&gt;doAs&lt;/code&gt; calls). In this situation, the most recent &lt;code&gt;Subject&lt;/code&gt; associated with the &lt;code&gt;AccessControlContext&lt;/code&gt; is returned.</source>
          <target state="translated">该 &lt;code&gt;AccessControlContext&lt;/code&gt; 的可能包含许多科目（从嵌套 &lt;code&gt;doAs&lt;/code&gt; 调用）。在这种情况下，将返回与 &lt;code&gt;AccessControlContext&lt;/code&gt; 关联的最新 &lt;code&gt;Subject&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1c2585eb08ce918b90bcbc551e2304a101e6d9fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibilityListenerList&lt;/code&gt; is a copy of the Swing &lt;a href=&quot;../../../../../../java.desktop/javax/swing/event/eventlistenerlist&quot;&gt;&lt;code&gt;EventListerList&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">该 &lt;code&gt;AccessibilityListenerList&lt;/code&gt; 是摇摆的副本&lt;a href=&quot;../../../../../../java.desktop/javax/swing/event/eventlistenerlist&quot;&gt; &lt;code&gt;EventListerList&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="3908e3e09d64afbffab80b454ad2cbe628a9babd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleAction&lt;/code&gt; interface should be supported by any object that can perform one or more actions.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleAction&lt;/code&gt; 接口应该由能够执行一个或多个动作的任何对象的支持。</target>
        </trans-unit>
        <trans-unit id="c473a7714248ebd12a4093fbc003adaa42921796" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleAction&lt;/code&gt; interface should be supported by any object that can perform one or more actions. This interface provides the standard mechanism for an assistive technology to determine what those actions are as well as tell the object to perform them. Any object that can be manipulated should support this interface. Applications can determine if an object supports the &lt;code&gt;AccessibleAction&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleAction()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleAction()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleAction&lt;/code&gt; 接口应该由能够执行一个或多个动作的任何对象的支持。该接口为辅助技术提供了确定这些动作是什么以及告诉对象执行这些动作的标准机制。任何可以操作的对象都应支持此接口。应用程序可以通过首先获取对象的 &lt;code&gt;AccessibleContext&lt;/code&gt; （请参阅&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;），然后调用&lt;a href=&quot;accessiblecontext#getAccessibleAction()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleAction()&lt;/code&gt; &lt;/a&gt;方法来确定对象是否支持 &lt;code&gt;AccessibleAction&lt;/code&gt; 接口。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="f3d39ae4fbd7cfa1adcd02d16d8f7fb028c832c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen.</source>
          <target state="translated">该 &lt;code&gt;AccessibleComponent&lt;/code&gt; 中的接口应该由在屏幕上呈现的任何对象的支持。</target>
        </trans-unit>
        <trans-unit id="aa3a9d732e80037f70ac2cb1c8411f49537df6c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine and set the graphical representation of an object. Applications can determine if an object supports the &lt;code&gt;AccessibleComponent&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">该 &lt;code&gt;AccessibleComponent&lt;/code&gt; 中的接口应该由在屏幕上呈现的任何对象的支持。该界面为辅助技术确定和设置对象的图形表示提供了标准机制。应用程序可以通过首先获取对象的 &lt;code&gt;AccessibleContext&lt;/code&gt; ，然后调用&lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt; &lt;/a&gt;方法来确定对象是否支持 &lt;code&gt;AccessibleComponent&lt;/code&gt; 接口。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="f43849f68f67a0ecc780e13f5479f663a6daecd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleContext&lt;/code&gt; associated with this &lt;code&gt;Component&lt;/code&gt;.</source>
          <target state="translated">与此 &lt;code&gt;Component&lt;/code&gt; 关联的 &lt;code&gt;AccessibleContext&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cbf47d5695815d5e8118b745ccce459eece15483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleContext&lt;/code&gt; for the &lt;code&gt;ProgressMonitor&lt;/code&gt;</source>
          <target state="translated">该 &lt;code&gt;AccessibleContext&lt;/code&gt; 中的 &lt;code&gt;ProgressMonitor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2191b09f1d269f0606ec7d698a355f8c1f8b44f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface should be implemented by all classes that present editable textual information on the display.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleEditableText&lt;/code&gt; 接口应该由所有类的显示器上当前可编辑文本信息来实现。</target>
        </trans-unit>
        <trans-unit id="1873fadd8e5a958c96e6454d288335bff6968316" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface should be implemented by all classes that present editable textual information on the display. Along with the &lt;code&gt;AccessibleText&lt;/code&gt; interface, this interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. Applications can determine if an object supports the &lt;code&gt;AccessibleEditableText&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleEditableText()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleEditableText()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt;. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleEditableText&lt;/code&gt; 接口应该由所有类的显示器上当前可编辑文本信息来实现。该接口与 &lt;code&gt;AccessibleText&lt;/code&gt; 接口一起，为辅助技术提供了通过其内容，属性和空间位置访问该文本的标准机制。应用程序可确定对象是否支持 &lt;code&gt;AccessibleEditableText&lt;/code&gt; 通过首先获得其界面 &lt;code&gt;AccessibleContext&lt;/code&gt; （参见&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;），然后调用&lt;a href=&quot;accessiblecontext#getAccessibleEditableText()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleEditableText()&lt;/code&gt; &lt;/a&gt;的方法 &lt;code&gt;AccessibleContext&lt;/code&gt; 。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="a8576c5c876c10480e7110724150efa8be9bdb83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen.</source>
          <target state="translated">该 &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; 接口应该由在屏幕上呈现的任何对象的支持。</target>
        </trans-unit>
        <trans-unit id="3247400137ced701b45d95c578a02703afb594a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface should be supported by any object that is rendered on the screen. This interface provides the standard mechanism for an assistive technology to determine the extended graphical representation of an object. Applications can determine if an object supports the &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt; and the type of the return value is &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">该 &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; 接口应该由在屏幕上呈现的任何对象的支持。该界面为辅助技术提供了确定对象的扩展图形表示形式的标准机制。应用程序可以通过首先获取对象的 &lt;code&gt;AccessibleContext&lt;/code&gt; ，然后调用&lt;a href=&quot;accessiblecontext#getAccessibleComponent()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleComponent()&lt;/code&gt; &lt;/a&gt;方法来确定对象是否支持 &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; 接口。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ,并且返回值的类型为 &lt;code&gt;AccessibleExtendedComponent&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="35a7324acfe2b7d3d5addac091a782cc34ba08f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleExtendedText&lt;/code&gt; interface contains additional methods not provided by the &lt;code&gt;AccessibleText&lt;/code&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;AccessibleExtendedText&lt;/code&gt; 接口包含不被提供的其他方法 &lt;code&gt;AccessibleText&lt;/code&gt; 接口。</target>
        </trans-unit>
        <trans-unit id="8e588342be007ce914be3da0e97873d18b180331" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleHypertext&lt;/code&gt; class is the base class for all classes that present hypertext information on the display.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleHypertext&lt;/code&gt; 的类是所有类显示器上存在的超文本信息的基类。</target>
        </trans-unit>
        <trans-unit id="7db43bacb2b362886b107ffd5c3074aee0f970bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleHypertext&lt;/code&gt; class is the base class for all classes that present hypertext information on the display. This class provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. It also provides standard mechanisms for manipulating hyperlinks. Applications can determine if an object supports the &lt;code&gt;AccessibleHypertext&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt;. If the return value is a class which extends &lt;code&gt;AccessibleHypertext&lt;/code&gt;, then that object supports &lt;code&gt;AccessibleHypertext&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleHypertext&lt;/code&gt; 的类是所有类显示器上存在的超文本信息的基类。此类提供了辅助技术通过其内容，属性和空间位置访问该文本的标准机制。它还提供了用于处理超链接的标准机制。应用程序可确定对象是否支持 &lt;code&gt;AccessibleHypertext&lt;/code&gt; 的通过首先获得其界面 &lt;code&gt;AccessibleContext&lt;/code&gt; （参见&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;），然后调用&lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt; &lt;/a&gt;的方法 &lt;code&gt;AccessibleContext&lt;/code&gt; 。如果返回值是扩展 &lt;code&gt;AccessibleHypertext&lt;/code&gt; 的类，则该对象支持 &lt;code&gt;AccessibleHypertext&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="faf8435ce3a9fcd516db942cb8a2d354e93f118a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleIcon&lt;/code&gt; interface should be supported by any object that has an associated icon (e.g., buttons).</source>
          <target state="translated">所述 &lt;code&gt;AccessibleIcon&lt;/code&gt; 接口应该由具有相关联的图标（例如，按钮）的任何物体来支撑。</target>
        </trans-unit>
        <trans-unit id="d3ba10fe38f58c559b6ec91711ac3b7362b581fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleIcon&lt;/code&gt; interface should be supported by any object that has an associated icon (e.g., buttons). This interface provides the standard mechanism for an assistive technology to get descriptive information about icons. Applications can determine if an object supports the &lt;code&gt;AccessibleIcon&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleIcon()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleIcon()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleIcon&lt;/code&gt; 接口应该由具有相关联的图标（例如，按钮）的任何物体来支撑。该界面为辅助技术提供了有关图标的描述性信息的标准机制。应用程序可以通过首先获取对象的 &lt;code&gt;AccessibleContext&lt;/code&gt; （请参阅&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;），然后调用&lt;a href=&quot;accessiblecontext#getAccessibleIcon()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleIcon()&lt;/code&gt; &lt;/a&gt;方法来确定对象是否支持 &lt;code&gt;AccessibleIcon&lt;/code&gt; 接口。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="73130429098fda9c943a97d824e4e0d826f98015" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleKeyBinding&lt;/code&gt; interface should be supported by any object that has a keyboard bindings such as a keyboard mnemonic and/or keyboard shortcut which can be used to select the object.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleKeyBinding&lt;/code&gt; 接口应该由具有键盘绑定诸如键盘助记符和/或键盘快捷键，其可以被用来选择对象中的任何对象的支持。</target>
        </trans-unit>
        <trans-unit id="1e6d6cb06b5b9c263d4d45c3948efc266f8cb213" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleKeyBinding&lt;/code&gt; interface should be supported by any object that has a keyboard bindings such as a keyboard mnemonic and/or keyboard shortcut which can be used to select the object. This interface provides the standard mechanism for an assistive technology to determine the key bindings which exist for this object. Any object that has such key bindings should support this interface.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleKeyBinding&lt;/code&gt; 接口应该由具有键盘绑定诸如键盘助记符和/或键盘快捷键，其可以被用来选择对象中的任何对象的支持。该接口为辅助技术提供了确定该对象存在的键绑定的标准机制。具有此类键绑定的任何对象都应支持此接口。</target>
        </trans-unit>
        <trans-unit id="b327de9d3fb9e0bf710b7abf2a2d35bcc20dd438" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleObject&lt;/code&gt; class is the base class for &lt;code&gt;Field&lt;/code&gt;, &lt;code&gt;Method&lt;/code&gt;, and &lt;code&gt;Constructor&lt;/code&gt; objects (known as &lt;em&gt;reflected objects&lt;/em&gt;).</source>
          <target state="translated">所述 &lt;code&gt;AccessibleObject&lt;/code&gt; 类是基础类 &lt;code&gt;Field&lt;/code&gt; ， &lt;code&gt;Method&lt;/code&gt; ，和 &lt;code&gt;Constructor&lt;/code&gt; 对象（被称为&lt;em&gt;反射的对象&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="504d93f898c7589525ac3642c5d6ef807175bb59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleObject&lt;/code&gt; class is the base class for &lt;code&gt;Field&lt;/code&gt;, &lt;code&gt;Method&lt;/code&gt;, and &lt;code&gt;Constructor&lt;/code&gt; objects (known as &lt;em&gt;reflected objects&lt;/em&gt;). It provides the ability to flag a reflected object as suppressing checks for Java language access control when it is used. This permits sophisticated applications with sufficient privilege, such as Java Object Serialization or other persistence mechanisms, to manipulate objects in a manner that would normally be prohibited.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleObject&lt;/code&gt; 类是基础类 &lt;code&gt;Field&lt;/code&gt; ， &lt;code&gt;Method&lt;/code&gt; ，和 &lt;code&gt;Constructor&lt;/code&gt; 对象（被称为&lt;em&gt;反射的对象&lt;/em&gt;）。它提供了将反射的对象标记为在使用Java语言时禁止对Java语言访问控制进行检查的功能。这允许具有足够特权的复杂应用程序（如Java对象序列化或其他持久性机制）以通常会被禁止的方式操作对象。</target>
        </trans-unit>
        <trans-unit id="bebd10b8cada2d236bcee7f52d58570942a03df2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleStreamable&lt;/code&gt; interface should be implemented by the &lt;code&gt;AccessibleContext&lt;/code&gt; of any component that presents the raw stream behind a component on the display screen.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleStreamable&lt;/code&gt; 接口应由执行 &lt;code&gt;AccessibleContext&lt;/code&gt; 任何组分的呈现在显示屏幕上的部件的后面的原始流。</target>
        </trans-unit>
        <trans-unit id="166dee8c08c12ffb7eee6d8d4a6709455e6484ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleStreamable&lt;/code&gt; interface should be implemented by the &lt;code&gt;AccessibleContext&lt;/code&gt; of any component that presents the raw stream behind a component on the display screen. Examples of such components are HTML, bitmap images and MathML. An object that implements &lt;code&gt;AccessibleStreamable&lt;/code&gt; provides two things: a list of MIME types supported by the object and a streaming interface for each MIME type to get the data.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleStreamable&lt;/code&gt; 接口应由执行 &lt;code&gt;AccessibleContext&lt;/code&gt; 任何组分的呈现在显示屏幕上的部件的后面的原始流。这样的组件的示例是HTML，位图图像和MathML。实现 &lt;code&gt;AccessibleStreamable&lt;/code&gt; 的对象提供两件事：该对象支持的MIME类型的列表，以及每种MIME类型的流接口以获取数据。</target>
        </trans-unit>
        <trans-unit id="3c3cb31a1c741ff7a9b4761f3d8c38ef5c44d952" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleTableModelChange&lt;/code&gt; interface describes a change to the table model.</source>
          <target state="translated">该 &lt;code&gt;AccessibleTableModelChange&lt;/code&gt; 接口描述了一个变化表模型。</target>
        </trans-unit>
        <trans-unit id="4585d50b1f9770d23e6e5f1ce54330b4090f0b78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleTableModelChange&lt;/code&gt; interface describes a change to the table model. The attributes of the model change can be obtained by the following methods:</source>
          <target state="translated">该 &lt;code&gt;AccessibleTableModelChange&lt;/code&gt; 接口描述了一个变化表模型。可以通过以下方法获取模型更改的属性：</target>
        </trans-unit>
        <trans-unit id="d1e504bfff18e5d05a112b9b15cb1a5fcbd06f58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleText&lt;/code&gt; interface should be implemented by all classes that present textual information on the display.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleText&lt;/code&gt; 接口应该由所有类的显示器上存在的文本信息来实现。</target>
        </trans-unit>
        <trans-unit id="bb6a238837c9f7f9a564586ec69e06cb5d566679" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleText&lt;/code&gt; interface should be implemented by all classes that present textual information on the display. This interface provides the standard mechanism for an assistive technology to access that text via its content, attributes, and spatial location. Applications can determine if an object supports the &lt;code&gt;AccessibleText&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;AccessibleContext&lt;/code&gt;. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleText&lt;/code&gt; 接口应该由所有类的显示器上存在的文本信息来实现。此接口为辅助技术提供了通过其内容，属性和空间位置访问该文本的标准机制。应用程序可确定对象是否支持 &lt;code&gt;AccessibleText&lt;/code&gt; 通过首先获得其界面 &lt;code&gt;AccessibleContext&lt;/code&gt; （参见&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;），然后调用&lt;a href=&quot;accessiblecontext#getAccessibleText()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleText()&lt;/code&gt; &lt;/a&gt;的方法 &lt;code&gt;AccessibleContext&lt;/code&gt; 。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="056efc481e10c239791f1854c67f61a2f4664863" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleValue&lt;/code&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar).</source>
          <target state="translated">所述 &lt;code&gt;AccessibleValue&lt;/code&gt; 接口应该由支持数字值的任何对象（例如，滚动条）来支持。</target>
        </trans-unit>
        <trans-unit id="c8b086610a18ed0e538e46c7f2a7634e69c1682c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AccessibleValue&lt;/code&gt; interface should be supported by any object that supports a numerical value (e.g., a scroll bar). This interface provides the standard mechanism for an assistive technology to determine and set the numerical value as well as get the minimum and maximum values. Applications can determine if an object supports the &lt;code&gt;AccessibleValue&lt;/code&gt; interface by first obtaining its &lt;code&gt;AccessibleContext&lt;/code&gt; (see &lt;a href=&quot;accessible&quot;&gt;&lt;code&gt;Accessible&lt;/code&gt;&lt;/a&gt;) and then calling the &lt;a href=&quot;accessiblecontext#getAccessibleValue()&quot;&gt;&lt;code&gt;AccessibleContext.getAccessibleValue()&lt;/code&gt;&lt;/a&gt; method. If the return value is not &lt;code&gt;null&lt;/code&gt;, the object supports this interface.</source>
          <target state="translated">所述 &lt;code&gt;AccessibleValue&lt;/code&gt; 接口应该由支持数字值的任何对象（例如，滚动条）来支持。此接口为辅助技术提供了确定和设置数值以及获取最小值和最大值的标准机制。应用程序可以通过首先获取对象的 &lt;code&gt;AccessibleContext&lt;/code&gt; （请参阅&lt;a href=&quot;accessible&quot;&gt; &lt;code&gt;Accessible&lt;/code&gt; &lt;/a&gt;），然后调用&lt;a href=&quot;accessiblecontext#getAccessibleValue()&quot;&gt; &lt;code&gt;AccessibleContext.getAccessibleValue()&lt;/code&gt; &lt;/a&gt;方法来确定对象是否支持 &lt;code&gt;AccessibleValue&lt;/code&gt; 接口。如果返回值不为 &lt;code&gt;null&lt;/code&gt; ，则对象支持此接口。</target>
        </trans-unit>
        <trans-unit id="44791f8e57ff8bfd891a67fc88014f58af70954a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Action&lt;/code&gt; interface provides a useful extension to the &lt;code&gt;ActionListener&lt;/code&gt; interface in cases where the same functionality may be accessed by several controls.</source>
          <target state="translated">在多个控件可以访问相同功能的情况下， &lt;code&gt;Action&lt;/code&gt; 接口为 &lt;code&gt;ActionListener&lt;/code&gt; 接口提供了有用的扩展。</target>
        </trans-unit>
        <trans-unit id="34edfc98f1eaec6790f4628038524e8aca37a7f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Action&lt;/code&gt; is added as an &lt;code&gt;ActionListener&lt;/code&gt; to the component.</source>
          <target state="translated">该 &lt;code&gt;Action&lt;/code&gt; 作为 &lt;code&gt;ActionListener&lt;/code&gt; 添加到该组件。</target>
        </trans-unit>
        <trans-unit id="30201ddb916bcc958215e7053ec1089b39082cd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActionListener&lt;/code&gt; will receive an &lt;code&gt;ActionEvent&lt;/code&gt; when a selection has been made. If the combo box is editable, then an &lt;code&gt;ActionEvent&lt;/code&gt; will be fired when editing has stopped.</source>
          <target state="translated">做出选择后， &lt;code&gt;ActionListener&lt;/code&gt; 将收到一个 &lt;code&gt;ActionEvent&lt;/code&gt; 。如果组合框是可编辑的，则在编辑停止时将触发 &lt;code&gt;ActionEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef1938064c7852b953eb1b5cbb0d73a9e2febdc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activatable&lt;/code&gt; class provides support for remote objects that require persistent access over time and that can be activated by the system.</source>
          <target state="translated">所述 &lt;code&gt;Activatable&lt;/code&gt; 类为需要进行持久访问并能由系统激活的远程对象的支持。</target>
        </trans-unit>
        <trans-unit id="9911c89b0b276dc0f0fa74a32a5ec5f1ac847b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActivationGroupID&lt;/code&gt; is returned from the call to &lt;code&gt;ActivationSystem.registerGroup&lt;/code&gt; and is used to identify the group within the activation system. This group id is passed as one of the arguments to the activation group's special constructor when an activation group is created/recreated.</source>
          <target state="translated">的 &lt;code&gt;ActivationGroupID&lt;/code&gt; 方法从呼叫到返回 &lt;code&gt;ActivationSystem.registerGroup&lt;/code&gt; 时被并用于激活系统内标识该组。创建/重新创建激活组时，此组ID作为参数之一传递给激活组的特殊构造函数。</target>
        </trans-unit>
        <trans-unit id="af4be72177e080360c18c9e2ed801cc0e3bbac04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActivationSystem&lt;/code&gt; provides a means for registering groups and &quot;activatable&quot; objects to be activated within those groups.</source>
          <target state="translated">该 &lt;code&gt;ActivationSystem&lt;/code&gt; 提供了用于注册组和&amp;ldquo;可激活的&amp;rdquo;物体被那些组中被激活的装置。</target>
        </trans-unit>
        <trans-unit id="4987e1b2fb6cd9753ec845534af1b665b5ec3274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ActivationSystem&lt;/code&gt; provides a means for registering groups and &quot;activatable&quot; objects to be activated within those groups. The &lt;code&gt;ActivationSystem&lt;/code&gt; works closely with the &lt;code&gt;Activator&lt;/code&gt;, which activates objects registered via the &lt;code&gt;ActivationSystem&lt;/code&gt;, and the &lt;code&gt;ActivationMonitor&lt;/code&gt;, which obtains information about active and inactive objects, and inactive groups.</source>
          <target state="translated">该 &lt;code&gt;ActivationSystem&lt;/code&gt; 提供了用于注册组和&amp;ldquo;可激活的&amp;rdquo;物体被那些组中被激活的装置。所述 &lt;code&gt;ActivationSystem&lt;/code&gt; 与密切合作 &lt;code&gt;Activator&lt;/code&gt; ，其激活经由注册的对象 &lt;code&gt;ActivationSystem&lt;/code&gt; 和 &lt;code&gt;ActivationMonitor&lt;/code&gt; ，其获取关于活动和非活动对象的信息，和非活性基团。</target>
        </trans-unit>
        <trans-unit id="a2842a28fc68889440f54df9e9e48b8b8bfc10a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activator&lt;/code&gt; facilitates remote object activation.</source>
          <target state="translated">的 &lt;code&gt;Activator&lt;/code&gt; 有利于远程对象激活。</target>
        </trans-unit>
        <trans-unit id="bac18c05f9f0c7333ef5e5514fde39347f479fbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activator&lt;/code&gt; facilitates remote object activation. A &quot;faulting&quot; remote reference calls the activator's &lt;code&gt;activate&lt;/code&gt; method to obtain a &quot;live&quot; reference to a &quot;activatable&quot; remote object. Upon receiving a request for activation, the activator looks up the activation descriptor for the activation identifier, &lt;code&gt;id&lt;/code&gt;, determines the group in which the object should be activated initiates object re-creation via the group's &lt;code&gt;ActivationInstantiator&lt;/code&gt; (via a call to the &lt;code&gt;newInstance&lt;/code&gt; method). The activator initiates the execution of activation groups as necessary. For example, if an activation group for a specific group identifier is not already executing, the activator initiates the execution of a VM for the group.</source>
          <target state="translated">的 &lt;code&gt;Activator&lt;/code&gt; 有利于远程对象激活。&amp;ldquo;故障&amp;rdquo;远程引用调用激活器的 &lt;code&gt;activate&lt;/code&gt; 方法，以获得对&amp;ldquo;可激活&amp;rdquo;远程对象的&amp;ldquo;实时&amp;rdquo;引用。收到激活请求后，激活器将查找激活标识符 &lt;code&gt;id&lt;/code&gt; 的激活描述符，以确定应在其中激活对象的组，通过该组的 &lt;code&gt;ActivationInstantiator&lt;/code&gt; （通过调用 &lt;code&gt;newInstance&lt;/code&gt; 方法）来发起对象重新创建。激活器根据需要启动激活组的执行。例如，如果尚未执行针对特定组标识符的激活组，则激活器将为该组启动VM的执行。</target>
        </trans-unit>
        <trans-unit id="d12dfcf933ffbb5c2ce81bf2caa66f1ab228fa02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Activator&lt;/code&gt; works closely with &lt;code&gt;ActivationSystem&lt;/code&gt;, which provides a means for registering groups and objects within those groups, and &lt;code&gt;ActivationMonitor&lt;/code&gt;, which receives information about active and inactive objects and inactive groups.</source>
          <target state="translated">所述 &lt;code&gt;Activator&lt;/code&gt; 与密切合作 &lt;code&gt;ActivationSystem&lt;/code&gt; ，这提供了在那些组中注册组和对象的装置，以及 &lt;code&gt;ActivationMonitor&lt;/code&gt; ，其接收关于活动和非活动对象和非活动组的信息。</target>
        </trans-unit>
        <trans-unit id="11b89453476163752f40fae582d7c0e317141129" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AdjustmentEvent&lt;/code&gt; class defines five types of adjustment event, listed here:</source>
          <target state="translated">在 &lt;code&gt;AdjustmentEvent&lt;/code&gt; 类定义了五种调整事件，这里列出的：</target>
        </trans-unit>
        <trans-unit id="77c9ef0e627c294d9d0956e59ce6bbbb1c929c91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AffineTransform&lt;/code&gt; associated with this op.</source>
          <target state="translated">与此操作相关联的 &lt;code&gt;AffineTransform&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae7b7484bb6b8e85b994eb53c01929817f08df61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AffineTransform&lt;/code&gt; class represents a 2D affine transform that performs a linear mapping from 2D coordinates to other 2D coordinates that preserves the &quot;straightness&quot; and &quot;parallelness&quot; of lines.</source>
          <target state="translated">所述 &lt;code&gt;AffineTransform&lt;/code&gt; 类表示2D仿射变换，它执行的线性映射从2D坐标可以保留&amp;ldquo;直线&amp;rdquo;和线的&amp;ldquo;平行&amp;rdquo;其他2D坐标。</target>
        </trans-unit>
        <trans-unit id="af074043aa33a9cdd8a8065a2a60108d9f48b311" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AffineTransform&lt;/code&gt; class represents a 2D affine transform that performs a linear mapping from 2D coordinates to other 2D coordinates that preserves the &quot;straightness&quot; and &quot;parallelness&quot; of lines. Affine transformations can be constructed using sequences of translations, scales, flips, rotations, and shears.</source>
          <target state="translated">所述 &lt;code&gt;AffineTransform&lt;/code&gt; 类表示2D仿射变换，它执行的线性映射从2D坐标可以保留&amp;ldquo;直线&amp;rdquo;和线的&amp;ldquo;平行&amp;rdquo;其他2D坐标。可以使用平移，缩放，翻转，旋转和剪切的序列来构造仿射变换。</target>
        </trans-unit>
        <trans-unit id="b449118f305afa855458cabeb18c4cb51488d864" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; class is used to generate a set of parameters to be used with a certain algorithm.</source>
          <target state="translated">所述 &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; 类用于生成一组参数，以具有一定的算法中使用。</target>
        </trans-unit>
        <trans-unit id="21b1b496ebb21c6a19e568343413c663744b5d29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; class is used to generate a set of parameters to be used with a certain algorithm. Parameter generators are constructed using the &lt;code&gt;getInstance&lt;/code&gt; factory methods (static methods that return instances of a given class).</source>
          <target state="translated">所述 &lt;code&gt;AlgorithmParameterGenerator&lt;/code&gt; 类用于生成一组参数，以具有一定的算法中使用。使用 &lt;code&gt;getInstance&lt;/code&gt; 工厂方法（返回给定类实例的静态方法）构造参数生成器。</target>
        </trans-unit>
        <trans-unit id="c42bd8033c27af08a1c588db4f0dd64cf3f36f51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlphaComposite&lt;/code&gt; class defines an additional alpha value that is applied to the source alpha. This value is applied as if an implicit SRC_IN rule were first applied to the source pixel against a pixel with the indicated alpha by multiplying both the raw source alpha and the raw source colors by the alpha in the &lt;code&gt;AlphaComposite&lt;/code&gt;. This leads to the following equation for producing the alpha used in the Porter and Duff blending equation:</source>
          <target state="translated">所述 &lt;code&gt;AlphaComposite&lt;/code&gt; 类定义被施加到源阿尔法额外alpha值。就像首先通过将原始源alpha和原始源颜色都乘以 &lt;code&gt;AlphaComposite&lt;/code&gt; 中的alpha一样，将隐式SRC_IN规则首先应用于具有指定alpha像素的源像素。这将导致以下方程式生成用于Porter和Duff混合方程式的alpha：</target>
        </trans-unit>
        <trans-unit id="8e918d46c98df1a3d9e3b746487ab38f146ace52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlphaComposite&lt;/code&gt; class implements basic alpha compositing rules for combining source and destination colors to achieve blending and transparency effects with graphics and images.</source>
          <target state="translated">所述 &lt;code&gt;AlphaComposite&lt;/code&gt; 类实现基本alpha合成规则，将源颜色和目标颜色，以实现在图形和图像的混合和透明效果。</target>
        </trans-unit>
        <trans-unit id="de67ef924fdd6b848417ed0d9ded1b91dd826f21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AlphaComposite&lt;/code&gt; class implements basic alpha compositing rules for combining source and destination colors to achieve blending and transparency effects with graphics and images. The specific rules implemented by this class are the basic set of 12 rules described in T. Porter and T. Duff, &quot;Compositing Digital Images&quot;, SIGGRAPH 84, 253-259. The rest of this documentation assumes some familiarity with the definitions and concepts outlined in that paper.</source>
          <target state="translated">所述 &lt;code&gt;AlphaComposite&lt;/code&gt; 类实现基本alpha合成规则，将源颜色和目标颜色，以实现在图形和图像的混合和透明效果。此类实施的特定规则是T.Porter和T.Duff在&amp;ldquo;合成数字图像&amp;rdquo;，SIGGRAPH 84，253-259中描述的12条规则的基本集合。本文档的其余部分假定您对该文件中概述的定义和概念有所了解。</target>
        </trans-unit>
        <trans-unit id="7cc50dfb7754628bc00422be42d67644a04299c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Applet&lt;/code&gt; class must be the superclass of any applet that is to be embedded in a Web page or viewed by the Java Applet Viewer. The &lt;code&gt;Applet&lt;/code&gt; class provides a standard interface between applets and their environment.</source>
          <target state="translated">该 &lt;code&gt;Applet&lt;/code&gt; 的类必须是任何小应用程序将被嵌入到网页或由Java Applet查看器查看的超类。该 &lt;code&gt;Applet&lt;/code&gt; 的类提供了applet及其环境之间的标准接口。</target>
        </trans-unit>
        <trans-unit id="3a902edebc7b4f38563beb1afba8ecdce5cc6b48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Area&lt;/code&gt; class creates an area geometry from the specified &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">该 &lt;code&gt;Area&lt;/code&gt; 类可以根据指定区域的几何&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;对象。</target>
        </trans-unit>
        <trans-unit id="23b21875f411072bf5404801e4f8a1d9a057d41b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Area&lt;/code&gt; class creates an area geometry from the specified &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; object. The geometry is explicitly closed, if the &lt;code&gt;Shape&lt;/code&gt; is not already closed. The fill rule (even-odd or winding) specified by the geometry of the &lt;code&gt;Shape&lt;/code&gt; is used to determine the resulting enclosed area.</source>
          <target state="translated">该 &lt;code&gt;Area&lt;/code&gt; 类可以根据指定区域的几何&lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;对象。如果 &lt;code&gt;Shape&lt;/code&gt; 尚未关闭，则几何将显式关闭。由 &lt;code&gt;Shape&lt;/code&gt; 的几何形状指定的填充规则（奇数或缠绕）用于确定最终的封闭区域。</target>
        </trans-unit>
        <trans-unit id="15cfc4f1dafa8c04a1323b78e0b2f5670bfae50e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Area&lt;/code&gt; class implements the &lt;code&gt;Shape&lt;/code&gt; interface and provides full support for all of its hit-testing and path iteration facilities, but an &lt;code&gt;Area&lt;/code&gt; is more specific than a generalized path in a number of ways:</source>
          <target state="translated">该 &lt;code&gt;Area&lt;/code&gt; 类实现了 &lt;code&gt;Shape&lt;/code&gt; 接口，并提供了其所有命中测试和路径迭代设施的全力支持，但一个 &lt;code&gt;Area&lt;/code&gt; 比在许多方面广义的路径更具体：</target>
        </trans-unit>
        <trans-unit id="60cf335e88d209716971b2d6c6b97342cea6ef52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array&lt;/code&gt; class provides static methods to dynamically create and access Java arrays.</source>
          <target state="translated">该 &lt;code&gt;Array&lt;/code&gt; 类提供静态方法动态创建和访问Java数组。</target>
        </trans-unit>
        <trans-unit id="6e200f02f8fff206f18ffef2f87fc1beac985865" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Array&lt;/code&gt; interface provides methods for bringing an SQL &lt;code&gt;ARRAY&lt;/code&gt; value's data to the client as either an array or a &lt;code&gt;ResultSet&lt;/code&gt; object. If the elements of the SQL &lt;code&gt;ARRAY&lt;/code&gt; are a UDT, they may be custom mapped. To create a custom mapping, a programmer must do two things:</source>
          <target state="translated">所述 &lt;code&gt;Array&lt;/code&gt; 接口提供用于使一个SQL方法 &lt;code&gt;ARRAY&lt;/code&gt; 值的数据到客户端或者数组或一个 &lt;code&gt;ResultSet&lt;/code&gt; 的对象。如果SQL &lt;code&gt;ARRAY&lt;/code&gt; 的元素是UDT，则可以自定义映射。要创建自定义映射，程序员必须做两件事：</target>
        </trans-unit>
        <trans-unit id="e11780a48e0c2628760a60beb9af58fed7a0350b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ArrayType&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;ArrayType&lt;/code&gt; 类是</target>
        </trans-unit>
        <trans-unit id="7709bfafe1c6ecafe478bccef66bf54934827f38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AttachProvider&lt;/code&gt; that this descriptor references.</source>
          <target state="translated">该描述符引用的 &lt;code&gt;AttachProvider&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3cc4395b5136dbdc8af1042a1b98b4cb4581b8c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; interface represents an attribute in an &lt;code&gt;Element&lt;/code&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;Attr&lt;/code&gt; 接口表示属性 &lt;code&gt;Element&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="275c8f395f1beaba2f6f1d83bc7c14898a2596bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; interface represents an attribute in an &lt;code&gt;Element&lt;/code&gt; object. Typically the allowable values for the attribute are defined in a schema associated with the document.</source>
          <target state="translated">所述 &lt;code&gt;Attr&lt;/code&gt; 接口表示属性 &lt;code&gt;Element&lt;/code&gt; 对象。通常，属性的允许值是在与文档关联的架构中定义的。</target>
        </trans-unit>
        <trans-unit id="abaabe6886264c20f473fa5053a5d55bc337750d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node that was removed.</source>
          <target state="translated">已删除的 &lt;code&gt;Attr&lt;/code&gt; 节点。</target>
        </trans-unit>
        <trans-unit id="5ef50051305c491e51d826eece91f5a67a7debbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node with the specified attribute local name and namespace URI or &lt;code&gt;null&lt;/code&gt; if there is no such attribute.</source>
          <target state="translated">具有指定属性本地名称和名称空间URI 的 &lt;code&gt;Attr&lt;/code&gt; 节点，如果没有这样的属性，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7652a895a29f2647e0b2dd18893f6b4dc0e428cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; node with the specified name ( &lt;code&gt;nodeName&lt;/code&gt;) or &lt;code&gt;null&lt;/code&gt; if there is no such attribute.</source>
          <target state="translated">具有指定名称（ &lt;code&gt;nodeName&lt;/code&gt; ）的 &lt;code&gt;Attr&lt;/code&gt; 节点，如果没有这样的属性，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7a69dfdb305ce85fbed13fda0e8e19810074205f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; value as a string, or the empty string if that attribute does not have a specified or default value.</source>
          <target state="translated">该 &lt;code&gt;Attr&lt;/code&gt; 值作为一个字符串，或空字符串，如果该属性没有指定或默认值。</target>
        </trans-unit>
        <trans-unit id="1d3bb6cf7d846d46a56db0af192df954b4ace57d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; was just added.</source>
          <target state="translated">该 &lt;code&gt;Attr&lt;/code&gt; 刚添加。</target>
        </trans-unit>
        <trans-unit id="3980e98c449fdb090ee7e888258a1778ab128b82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; was just removed.</source>
          <target state="translated">该 &lt;code&gt;Attr&lt;/code&gt; 只是删除。</target>
        </trans-unit>
        <trans-unit id="2cc83d98a99f11a6638a57cb16b71fe7f4407a2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Attr&lt;/code&gt; was modified in place.</source>
          <target state="translated">该 &lt;code&gt;Attr&lt;/code&gt; 代替修改。</target>
        </trans-unit>
        <trans-unit id="3b5a21b8af434583bd3c4faf9b46db3d3520fac2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AttributeSet&lt;/code&gt; interface is similar to the &lt;a href=&quot;../../../../java.base/java/util/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; interface: it provides a map of key to values, in which each key is unique and can contain no more than one value. However, the &lt;code&gt;AttributeSet&lt;/code&gt; interface is designed to specifically support the needs of the Java Print Service API. An &lt;code&gt;AttributeSet&lt;/code&gt; requires that:</source>
          <target state="translated">所述 &lt;code&gt;AttributeSet&lt;/code&gt; 接口类似于&lt;a href=&quot;../../../../java.base/java/util/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;接口：它提供地图密钥的将值，其中每个密钥都是唯一的，并且可以包含不超过一个值。但是， &lt;code&gt;AttributeSet&lt;/code&gt; 接口旨在专门支持Java Print Service API的需求。一个 &lt;code&gt;AttributeSet&lt;/code&gt; 中的要求：</target>
        </trans-unit>
        <trans-unit id="f3aadc19c893a1efadaa932321d03e00dc3fdf32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AttributeSet&lt;/code&gt; interface is similar to the &lt;a href=&quot;../../../java/util/map&quot;&gt;Map&lt;/a&gt; interface: it provides a map of key to values, in which each key is unique and can contain no more than one value. However, the &lt;code&gt;AttributeSet&lt;/code&gt; interface is designed to specifically support the needs of the Java Print Service API. An &lt;code&gt;AttributeSet&lt;/code&gt; requires that:</source>
          <target state="translated">所述 &lt;code&gt;AttributeSet&lt;/code&gt; 接口类似于&lt;a href=&quot;../../../java/util/map&quot;&gt;地图&lt;/a&gt;接口：它提供地图密钥的将值，其中每个密钥都是唯一的，并且可以包含不超过一个值。但是， &lt;code&gt;AttributeSet&lt;/code&gt; 接口旨在专门支持Java Print Service API的需求。一个 &lt;code&gt;AttributeSet&lt;/code&gt; 中的要求：</target>
        </trans-unit>
        <trans-unit id="ec3ca9a461283de7a024fe4370f4c8ea8d93045c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioClip&lt;/code&gt; interface is a simple abstraction for playing a sound clip. Multiple &lt;code&gt;AudioClip&lt;/code&gt; items can be playing at the same time, and the resulting sound is mixed together to produce a composite.</source>
          <target state="translated">该 &lt;code&gt;AudioClip&lt;/code&gt; 接口是用于播放音频剪辑的简单抽象。可以同时播放多个 &lt;code&gt;AudioClip&lt;/code&gt; 项目，并且将产生的声音混合在一起以产生复合音色。</target>
        </trans-unit>
        <trans-unit id="8af784200eedb9bf3ff696e5dfcb898cc72bbe54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioFormat&lt;/code&gt; class accommodates a number of common sound-file encoding techniques, including pulse-code modulation (PCM), mu-law encoding, and a-law encoding. These encoding techniques are predefined, but service providers can create new encoding types. The encoding that a specific format uses is named by its &lt;code&gt;encoding&lt;/code&gt; field.</source>
          <target state="translated">所述 &lt;code&gt;AudioFormat&lt;/code&gt; 类容纳了一些共同的声音文件的编码技术，包括脉冲编码调制（PCM），&amp;mu;律编码，和a-law编码。这些编码技术是预定义的，但是服务提供商可以创建新的编码类型。特定格式使用的 &lt;code&gt;encoding&lt;/code&gt; 由其编码字段命名。</target>
        </trans-unit>
        <trans-unit id="d7fd077369e0845cac37ae324fe142bf62bb88be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioPermission&lt;/code&gt; class represents access rights to the audio system resources.</source>
          <target state="translated">该 &lt;code&gt;AudioPermission&lt;/code&gt; 类表示访问权限的音响系统资源。</target>
        </trans-unit>
        <trans-unit id="663f73601babca7fe9a3f57db471ad6b7380920c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioPermission&lt;/code&gt; class represents access rights to the audio system resources. An &lt;code&gt;AudioPermission&lt;/code&gt; contains a target name but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">该 &lt;code&gt;AudioPermission&lt;/code&gt; 类表示访问权限的音响系统资源。一个 &lt;code&gt;AudioPermission&lt;/code&gt; 包含一个目标名称，但是没有动作列表; 您要么具有命名权限，要么没有。</target>
        </trans-unit>
        <trans-unit id="64530a02f14561a54d873e43c58fb4f8735319fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources.</source>
          <target state="translated">该 &lt;code&gt;AudioSystem&lt;/code&gt; 类充当入口点采样的音频系统资源。</target>
        </trans-unit>
        <trans-unit id="8d0aeed0a30ef032e71643f03ade7a22188d197b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources. This class lets you query and access the mixers that are installed on the system. &lt;code&gt;AudioSystem&lt;/code&gt; includes a number of methods for converting audio data between different formats, and for translating between audio files and streams. It also provides a method for obtaining a &lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt; directly from the &lt;code&gt;AudioSystem&lt;/code&gt; without dealing explicitly with mixers.</source>
          <target state="translated">该 &lt;code&gt;AudioSystem&lt;/code&gt; 类充当入口点采样的音频系统资源。此类可让您查询和访问系统上安装的混合器。 &lt;code&gt;AudioSystem&lt;/code&gt; 包含多种方法，可用于在不同格式之间转换音频数据，以及在音频文件和流之间进行转换。它还提供了一种直接从 &lt;code&gt;AudioSystem&lt;/code&gt; 获取&lt;a href=&quot;line&quot;&gt; &lt;code&gt;Line&lt;/code&gt; &lt;/a&gt;而不用明确处理混音器的方法。</target>
        </trans-unit>
        <trans-unit id="a212ac4197ad27334cc250327922918495c0a587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class acts as the entry point to the sampled-audio system resources. This class lets you query and access the mixers that are installed on the system. &lt;code&gt;AudioSystem&lt;/code&gt; includes a number of methods for converting audio data between different formats, and for translating between audio files and streams. It also provides a method for obtaining a &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; directly from the &lt;code&gt;AudioSystem&lt;/code&gt; without dealing explicitly with mixers.</source>
          <target state="translated">该 &lt;code&gt;AudioSystem&lt;/code&gt; 类充当入口点采样的音频系统资源。此类可让您查询和访问系统上安装的混合器。 &lt;code&gt;AudioSystem&lt;/code&gt; 包含多种方法，可用于在不同格式之间转换音频数据，以及在音频文件和流之间进行转换。它还提供了一种直接从 &lt;code&gt;AudioSystem&lt;/code&gt; 获取 &lt;code&gt;&lt;a href=&quot;line&quot;&gt;&lt;code&gt;Line&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 而不用明确处理混音器的方法。</target>
        </trans-unit>
        <trans-unit id="7af5ce7a31e2d4a27612651aee35e3f53a096d39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AudioSystem&lt;/code&gt; class includes many methods that manipulate &lt;code&gt;AudioInputStream&lt;/code&gt; objects. For example, the methods let you:</source>
          <target state="translated">该 &lt;code&gt;AudioSystem&lt;/code&gt; 类包括许多操作方法 &lt;code&gt;AudioInputStream&lt;/code&gt; 对象。例如，这些方法可让您：</target>
        </trans-unit>
        <trans-unit id="33fe5e270dcc0cd446b3dbafe785b92d757d02dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Base&lt;/code&gt; property determines the URL against which relative URLs are resolved. By default, this will be the &lt;code&gt;Document.StreamDescriptionProperty&lt;/code&gt; if the value of the property is a URL. If a &amp;lt;BASE&amp;gt; tag is encountered, the base will become the URL specified by that tag. Because the base URL is a property, it can of course be set directly.</source>
          <target state="translated">该 &lt;code&gt;Base&lt;/code&gt; 属性决定对哪些相对URL解析的网址。默认情况下，如果属性的值为URL ，则它将为 &lt;code&gt;Document.StreamDescriptionProperty&lt;/code&gt; 。如果遇到&amp;lt;BASE&amp;gt;标记，则基准将成为该标记指定的URL。由于基本URL是一个属性，因此当然可以直接设置。</target>
        </trans-unit>
        <trans-unit id="f13fbb136b39778f02f7b89def3adfb0d84135ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the core functionality for all &lt;code&gt;RowSet&lt;/code&gt; implementations, and all standard implementations &lt;b&gt;may&lt;/b&gt; use this class in combination with one or more &lt;code&gt;RowSet&lt;/code&gt; interfaces in order to provide a standard vendor-specific implementation. To clarify, all implementations must implement at least one of the &lt;code&gt;RowSet&lt;/code&gt; interfaces (&lt;code&gt;JdbcRowSet&lt;/code&gt;, &lt;code&gt;CachedRowSet&lt;/code&gt;, &lt;code&gt;JoinRowSet&lt;/code&gt;, &lt;code&gt;FilteredRowSet&lt;/code&gt;, or &lt;code&gt;WebRowSet&lt;/code&gt;). This means that any implementation that extends the &lt;code&gt;BaseRowSet&lt;/code&gt; class must also implement one of the &lt;code&gt;RowSet&lt;/code&gt; interfaces.</source>
          <target state="translated">所述 &lt;code&gt;BaseRowSet&lt;/code&gt; 类提供了所有核心功能 &lt;code&gt;RowSet&lt;/code&gt; 实施方式中，和所有标准实现&lt;b&gt;可以&lt;/b&gt;结合使用这个类的一个或多个 &lt;code&gt;RowSet&lt;/code&gt; ，以便提供一个标准的供应商特定的实现的接口。为了明确起见，所有实现都必须实现至少一个 &lt;code&gt;RowSet&lt;/code&gt; 接口（ &lt;code&gt;JdbcRowSet&lt;/code&gt; ， &lt;code&gt;CachedRowSet&lt;/code&gt; ， &lt;code&gt;JoinRowSet&lt;/code&gt; ， &lt;code&gt;FilteredRowSet&lt;/code&gt; 或 &lt;code&gt;WebRowSet&lt;/code&gt; ）。这意味着任何扩展 &lt;code&gt;BaseRowSet&lt;/code&gt; 类的实现也必须实现 &lt;code&gt;RowSet&lt;/code&gt; 接口之一。</target>
        </trans-unit>
        <trans-unit id="08cddb31c69a10389f6bfead1831d310fe8b6e1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the event notification mechanism for rowsets. It contains the field &lt;code&gt;listeners&lt;/code&gt;, methods for adding and removing listeners, and methods for notifying listeners of changes.</source>
          <target state="translated">该 &lt;code&gt;BaseRowSet&lt;/code&gt; 的类提供了行集的事件通知机制。它包含字段 &lt;code&gt;listeners&lt;/code&gt; ，添加和删除侦听器的方法以及用于通知侦听器更改的方法。</target>
        </trans-unit>
        <trans-unit id="0f7e37f97a3b4be59f83e1bdba10267695408eda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; class provides the following:</source>
          <target state="translated">该 &lt;code&gt;BaseRowSet&lt;/code&gt; 类提供以下功能：</target>
        </trans-unit>
        <trans-unit id="a506dbdb25a76d2e4fd35080181c055d1c435da5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BaseRowSet&lt;/code&gt; method used for the notification indicates the type of event that has occurred. For example, the method &lt;code&gt;notifyRowChanged&lt;/code&gt; indicates that a row has been updated, deleted, or inserted. Each of the notification methods creates a &lt;code&gt;RowSetEvent&lt;/code&gt; object, which is supplied to the listener in order to identify the &lt;code&gt;RowSet&lt;/code&gt; object on which the event occurred. What the listener does with this information, which may be nothing, depends on how it was implemented.</source>
          <target state="translated">用于通知的 &lt;code&gt;BaseRowSet&lt;/code&gt; 方法指示发生的事件的类型。例如，方法 &lt;code&gt;notifyRowChanged&lt;/code&gt; 指示一行已被更新，删除或插入。每个通知方法都创建一个 &lt;code&gt;RowSetEvent&lt;/code&gt; 对象，该对象将提供给侦听器，以标识发生事件的 &lt;code&gt;RowSet&lt;/code&gt; 对象。侦听器如何处理此信息（可能什么也没有）取决于它的实现方式。</target>
        </trans-unit>
        <trans-unit id="79cdc8d9c9f62ce1ec249481a0aed83f0d424285" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BasicAttribute&lt;/code&gt; class by default uses &lt;code&gt;Object.equals()&lt;/code&gt; to determine equality of attribute values when testing for equality or when searching for values, &lt;em&gt;except&lt;/em&gt; when the value is an array. For an array, each element of the array is checked using &lt;code&gt;Object.equals()&lt;/code&gt;. Subclasses of &lt;code&gt;BasicAttribute&lt;/code&gt; can make use of schema information when doing similar equality checks by overriding methods in which such use of schema is meaningful. Similarly, the &lt;code&gt;BasicAttribute&lt;/code&gt; class by default returns the values passed to its constructor and/or manipulated using the add/remove methods. Subclasses of &lt;code&gt;BasicAttribute&lt;/code&gt; can override &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;getAll()&lt;/code&gt; to get the values dynamically from the directory (or implement the &lt;code&gt;Attribute&lt;/code&gt; interface directly instead of subclassing &lt;code&gt;BasicAttribute&lt;/code&gt;).</source>
          <target state="translated">默认情况下， &lt;code&gt;BasicAttribute&lt;/code&gt; 类使用 &lt;code&gt;Object.equals()&lt;/code&gt; 来确定属性值的相等性，以进行相等性测试或搜索值时（值是数组时&lt;em&gt;除外）&lt;/em&gt;。对于数组，使用 &lt;code&gt;Object.equals()&lt;/code&gt; 检查数组的每个元素。当进行类似的相等性检查时， &lt;code&gt;BasicAttribute&lt;/code&gt; 的子类可以通过覆盖其中有意义的模式使用方法来使用模式信息。同样，默认情况下， &lt;code&gt;BasicAttribute&lt;/code&gt; 类返回传递给其构造函数和/或使用add / remove方法进行操作的值。 &lt;code&gt;BasicAttribute&lt;/code&gt; 的子类可以覆盖 &lt;code&gt;get()&lt;/code&gt; 和 &lt;code&gt;getAll()&lt;/code&gt; 从目录动态获取值（或直接实现 &lt;code&gt;Attribute&lt;/code&gt; 接口，而不是对 &lt;code&gt;BasicAttribute&lt;/code&gt; 进行子类化）。</target>
        </trans-unit>
        <trans-unit id="ccfded134fb937873b65607b04903f6ace745c35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BasicStroke&lt;/code&gt; class defines a basic set of rendering attributes for the outlines of graphics primitives, which are rendered with a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object that has its Stroke attribute set to this &lt;code&gt;BasicStroke&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;BasicStroke&lt;/code&gt; 类定义了一组基本呈现属性为图形基元的轮廓，它们呈现具有的&lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; 的&lt;/a&gt;具有其Stroke属性集给该对象 &lt;code&gt;BasicStroke&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa712ae35d56ccbbc492dc39a322352076b8983d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BasicStroke&lt;/code&gt; class defines a basic set of rendering attributes for the outlines of graphics primitives, which are rendered with a &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; object that has its Stroke attribute set to this &lt;code&gt;BasicStroke&lt;/code&gt;. The rendering attributes defined by &lt;code&gt;BasicStroke&lt;/code&gt; describe the shape of the mark made by a pen drawn along the outline of a &lt;a href=&quot;shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; and the decorations applied at the ends and joins of path segments of the &lt;code&gt;Shape&lt;/code&gt;. These rendering attributes include:</source>
          <target state="translated">所述 &lt;code&gt;BasicStroke&lt;/code&gt; 类定义了一组基本呈现属性为图形基元的轮廓，它们呈现具有的&lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; 的&lt;/a&gt;具有其Stroke属性集给该对象 &lt;code&gt;BasicStroke&lt;/code&gt; 。属性所规定的呈现 &lt;code&gt;BasicStroke&lt;/code&gt; 描述通过沿轮廓绘制的笔进行的标记的形状&lt;a href=&quot;shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt;和在端部处施加的装饰和的路径段的连接 &lt;code&gt;Shape&lt;/code&gt; 。这些渲染属性包括：</target>
        </trans-unit>
        <trans-unit id="1e0315176a90eb1a609d30f4d425382cc748e5d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BeanContext&lt;/code&gt; from which this event was propagated</source>
          <target state="translated">传播此事件的 &lt;code&gt;BeanContext&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fe4221cd8e13142dfdb7397e431e92d56077adb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BeanContext&lt;/code&gt; in which this &lt;code&gt;BeanContextChild&lt;/code&gt; is nested.</source>
          <target state="translated">该 &lt;code&gt;BeanContext&lt;/code&gt; 在此 &lt;code&gt;BeanContextChild&lt;/code&gt; 中的嵌套。</target>
        </trans-unit>
        <trans-unit id="00c979e876274b193545569222391a96daaa9dd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class gives its user complete control over rounding behavior. If no rounding mode is specified and the exact result cannot be represented, an exception is thrown; otherwise, calculations can be carried out to a chosen precision and rounding mode by supplying an appropriate &lt;a href=&quot;mathcontext&quot;&gt;&lt;code&gt;MathContext&lt;/code&gt;&lt;/a&gt; object to the operation. In either case, eight &lt;em&gt;rounding modes&lt;/em&gt; are provided for the control of rounding. Using the integer fields in this class (such as &lt;a href=&quot;#ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;) to represent rounding mode is deprecated; the enumeration values of the &lt;code&gt;RoundingMode&lt;/code&gt;&lt;code&gt;enum&lt;/code&gt;, (such as &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt;&lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt;&lt;/a&gt;) should be used instead.</source>
          <target state="translated">该 &lt;code&gt;BigDecimal&lt;/code&gt; 的类给出了舍入行为的用户完全控制。如果未指定舍入模式并且无法表示确切结果，则将引发异常；否则，将抛出异常。否则，可以通过向运算提供适当的&lt;a href=&quot;mathcontext&quot;&gt; &lt;code&gt;MathContext&lt;/code&gt; &lt;/a&gt;对象，以选定的精度和舍入模式进行计算。无论哪种情况，都提供了八种&lt;em&gt;舍入模式&lt;/em&gt;用于控制舍入。不推荐使用此类中的整数字段（例如&lt;a href=&quot;#ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt;）来表示舍入模式；应该改用 &lt;code&gt;RoundingMode&lt;/code&gt; &lt;code&gt;enum&lt;/code&gt; 的枚举值（例如&lt;a href=&quot;roundingmode#HALF_UP&quot;&gt; &lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7971f5d644f18176b75055fa2a5ace4dd309fa2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class gives its user complete control over rounding behavior. If no rounding mode is specified and the exact result cannot be represented, an exception is thrown; otherwise, calculations can be carried out to a chosen precision and rounding mode by supplying an appropriate &lt;a href=&quot;mathcontext&quot;&gt;&lt;code&gt;MathContext&lt;/code&gt;&lt;/a&gt; object to the operation. In either case, eight &lt;em&gt;rounding modes&lt;/em&gt; are provided for the control of rounding. Using the integer fields in this class (such as &lt;a href=&quot;bigdecimal#ROUND_HALF_UP&quot;&gt;&lt;code&gt;ROUND_HALF_UP&lt;/code&gt;&lt;/a&gt;) to represent rounding mode is largely obsolete; the enumeration values of the &lt;code&gt;RoundingMode&lt;/code&gt;&lt;code&gt;enum&lt;/code&gt;, (such as &lt;a href=&quot;roundingmode#HALF_UP&quot;&gt;&lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt;&lt;/a&gt;) should be used instead.</source>
          <target state="translated">该 &lt;code&gt;BigDecimal&lt;/code&gt; 的类给出了舍入行为的用户完全控制。如果未指定舍入模式并且无法表示确切结果，则会引发异常；否则，将抛出异常。否则，可以通过向运算提供适当的&lt;a href=&quot;mathcontext&quot;&gt; &lt;code&gt;MathContext&lt;/code&gt; &lt;/a&gt;对象，以选定的精度和舍入模式进行计算。无论哪种情况，都提供了八种&lt;em&gt;舍入模式&lt;/em&gt;用于控制舍入。使用此类中的整数字段（例如&lt;a href=&quot;bigdecimal#ROUND_HALF_UP&quot;&gt; &lt;code&gt;ROUND_HALF_UP&lt;/code&gt; &lt;/a&gt;）来表示舍入模式已经过时了。应该改用 &lt;code&gt;RoundingMode&lt;/code&gt; &lt;code&gt;enum&lt;/code&gt; 的枚举值（例如&lt;a href=&quot;roundingmode#HALF_UP&quot;&gt; &lt;code&gt;RoundingMode.HALF_UP&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="0f7131e752130ba71f1457ea575b0a9007dd1071" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class provides operations for arithmetic, scale manipulation, rounding, comparison, hashing, and format conversion. The &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method provides a canonical representation of a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;BigDecimal&lt;/code&gt; 类提供操作用于算术，比例操作，舍入，比较，散列和格式转换。所述&lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;方法提供了的规范表示 &lt;code&gt;BigDecimal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5fc7942056b3dd79609c5265cf98ecc9a0e3f371" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BigDecimal&lt;/code&gt; class provides operations for arithmetic, scale manipulation, rounding, comparison, hashing, and format conversion. The &lt;a href=&quot;bigdecimal#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method provides a canonical representation of a &lt;code&gt;BigDecimal&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;BigDecimal&lt;/code&gt; 类提供操作用于算术，比例操作，舍入，比较，散列和格式转换。所述&lt;a href=&quot;bigdecimal#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt;方法提供了的规范表示 &lt;code&gt;BigDecimal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="df5a7760f638121c128fa1a36ad30ea0b851b272" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Binding&lt;/code&gt; class is actually a subclass of &lt;code&gt;NameClassPair&lt;/code&gt;, which consists simply of the object's name and the object's class name. The &lt;code&gt;NameClassPair&lt;/code&gt; is useful when you only want information about the object's class and do not want to pay the extra cost of getting the object.</source>
          <target state="translated">该 &lt;code&gt;Binding&lt;/code&gt; 类实际上是一个子类 &lt;code&gt;NameClassPair&lt;/code&gt; 的，它由简单对象的名称和对象的类名。当您只需要有关对象类的信息，而又不想为获取该对象支付额外费用时， &lt;code&gt;NameClassPair&lt;/code&gt; 很有用。</target>
        </trans-unit>
        <trans-unit id="0103dabbd8fe15655d49de0baddfafb3b9137bae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Binding&lt;/code&gt; class represents a name-to-object binding. It is a tuple containing the name of the bound object, the name of the object's class, and the object itself.</source>
          <target state="translated">该 &lt;code&gt;Binding&lt;/code&gt; 类表示一个名称到对象的绑定。它是一个元组，其中包含绑定对象的名称，对象的类的名称以及对象本身。</target>
        </trans-unit>
        <trans-unit id="b8bb72f6e0722cb808bbfd786520a48b7182c75e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; instances that are returned must be identical to those returned by the &lt;code&gt;getBindings&lt;/code&gt; method of &lt;code&gt;ScriptContext&lt;/code&gt; called with corresponding arguments on the default &lt;code&gt;ScriptContext&lt;/code&gt; of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">返回的 &lt;code&gt;Bindings&lt;/code&gt; 实例必须与 &lt;code&gt;ScriptContext&lt;/code&gt; 的 &lt;code&gt;getBindings&lt;/code&gt; 方法返回的实例相同，并 &lt;code&gt;ScriptEngine&lt;/code&gt; 的默认 &lt;code&gt;ScriptContext&lt;/code&gt; 上的相应参数进行调用。</target>
        </trans-unit>
        <trans-unit id="05940c6482bc9cee8cceaf4e697300ed0675d5d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; of key/value pairs, referred to as the &quot;Global Scope&quot; maintained by the manager is available to all instances of &lt;code&gt;ScriptEngine&lt;/code&gt; created by the &lt;code&gt;ScriptEngineManager&lt;/code&gt;. The values in the &lt;code&gt;Bindings&lt;/code&gt; are generally exposed in all scripts.</source>
          <target state="translated">由管理器维护的键/值对的 &lt;code&gt;Bindings&lt;/code&gt; （称为&amp;ldquo;全局范围&amp;rdquo;）可用于 &lt;code&gt;ScriptEngine&lt;/code&gt; Manager创建的 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 所有实例。 &lt;code&gt;Bindings&lt;/code&gt; 中的值通常在所有脚本中公开。</target>
        </trans-unit>
        <trans-unit id="c8872d0f95cad30df2b43f31fb08168cf4e82b4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Bindings&lt;/code&gt; with the specified scope.</source>
          <target state="translated">具有指定范围的 &lt;code&gt;Bindings&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a769e9c66ca1b7bd668f50b4ffd3a1fb7830318" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BodyHandler&lt;/code&gt; interface allows inspection of the response code and headers, before the actual response body is received, and is responsible for creating the response &lt;a href=&quot;httpresponse.bodysubscriber&quot;&gt;&lt;code&gt;BodySubscriber&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;BodySubscriber&lt;/code&gt; consumes the actual response body bytes and, typically, converts them into a higher-level Java type.</source>
          <target state="translated">所述 &lt;code&gt;BodyHandler&lt;/code&gt; 接口允许的响应码和报头检查，在接收到实际响应主体之前，并负责创建响应&lt;a href=&quot;httpresponse.bodysubscriber&quot;&gt; &lt;code&gt;BodySubscriber&lt;/code&gt; &lt;/a&gt;。所述 &lt;code&gt;BodySubscriber&lt;/code&gt; 消耗的实际响应主体的字节，且通常将它们转换为更高级的Java类型。</target>
        </trans-unit>
        <trans-unit id="742f182e597aa7b5d077c9f7e1aa5aaa704913b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BodyPublisher&lt;/code&gt; interface extends &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.publisher&quot;&gt;&lt;code&gt;Flow.Publisher&amp;lt;ByteBuffer&amp;gt;&lt;/code&gt;&lt;/a&gt;, which means that a &lt;code&gt;BodyPublisher&lt;/code&gt; acts as a publisher of &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;byte buffers&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;BodyPublisher&lt;/code&gt; 接口扩展&lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.publisher&quot;&gt; &lt;code&gt;Flow.Publisher&amp;lt;ByteBuffer&amp;gt;&lt;/code&gt; &lt;/a&gt;的，这意味着一个 &lt;code&gt;BodyPublisher&lt;/code&gt; 充当的发布者&lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;字节缓冲器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aaef0cfb8ca49e559fec4e3d4a0b53c759d2a804" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Book&lt;/code&gt; class provides a representation of a document in which pages may have different page formats and page painters.</source>
          <target state="translated">该 &lt;code&gt;Book&lt;/code&gt; 类提供了哪些页面可能有不同的页面格式和页面画家文档的表示。</target>
        </trans-unit>
        <trans-unit id="50a07040901ceb1a146df0db4c1a1a7103eb3760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Book&lt;/code&gt; class provides a representation of a document in which pages may have different page formats and page painters. This class uses the &lt;a href=&quot;pageable&quot;&gt;&lt;code&gt;Pageable&lt;/code&gt;&lt;/a&gt; interface to interact with a &lt;a href=&quot;printerjob&quot;&gt;&lt;code&gt;PrinterJob&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Book&lt;/code&gt; 类提供了哪些页面可能有不同的页面格式和页面画家文档的表示。此类使用&lt;a href=&quot;pageable&quot;&gt; &lt;code&gt;Pageable&lt;/code&gt; &lt;/a&gt;接口与&lt;a href=&quot;printerjob&quot;&gt; &lt;code&gt;PrinterJob&lt;/code&gt; &lt;/a&gt;进行交互。</target>
        </trans-unit>
        <trans-unit id="2d60a6b49fd7f6573e55ea030a9ceb3013e12f74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Boolean&lt;/code&gt; object corresponding to the primitive value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">对应于原始值 &lt;code&gt;false&lt;/code&gt; 的 &lt;code&gt;Boolean&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="aa5f6e88af022d56af88b562fb37e5a9055bbd43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Boolean&lt;/code&gt; object corresponding to the primitive value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">对应于原始值 &lt;code&gt;true&lt;/code&gt; 的 &lt;code&gt;Boolean&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="ea791e8f10fa9a037a59caa97302b3cd888b807e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the progress bar's data handles any issues that may arise from improperly setting the minimum, initial, and maximum values on the progress bar. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">存放进度条数据的 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 可以处理由于在进度条上不正确地设置最小值，初始值和最大值而引起的任何问题。有关详细信息，请参见 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 文档。</target>
        </trans-unit>
        <trans-unit id="2d7d426311b532ee1c5da031500efbfbb7191a7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the slider's data handles any issues that may arise from improperly setting the minimum and maximum values on the slider. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">存放滑块数据的 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 处理由于不正确地设置滑块的最小值和最大值而可能引起的任何问题。有关详细信息，请参见 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 文档。</target>
        </trans-unit>
        <trans-unit id="1aafd4fda765db5560306e64069683846134ea1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BoundedRangeModel&lt;/code&gt; that holds the slider's data handles any issues that may arise from improperly setting the minimum, initial, and maximum values on the slider. See the &lt;code&gt;BoundedRangeModel&lt;/code&gt; documentation for details.</source>
          <target state="translated">存放滑块数据的 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 处理由于不正确地设置滑块的最小值，初始值和最大值而可能引起的任何问题。有关详细信息，请参见 &lt;code&gt;BoundedRangeModel&lt;/code&gt; 文档。</target>
        </trans-unit>
        <trans-unit id="3fa35874db63a06b37997dac65b42981a90d37a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Box&lt;/code&gt; class can create several kinds of invisible components that affect layout: glue, struts, and rigid areas. If all the components your &lt;code&gt;Box&lt;/code&gt; contains have a fixed size, you might want to use a glue component (returned by &lt;code&gt;createGlue&lt;/code&gt;) to control the components' positions. If you need a fixed amount of space between two components, try using a strut (&lt;code&gt;createHorizontalStrut&lt;/code&gt; or &lt;code&gt;createVerticalStrut&lt;/code&gt;). If you need an invisible component that always takes up the same amount of space, get it by invoking &lt;code&gt;createRigidArea&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Box&lt;/code&gt; 类可以创建几种影响布局的不可见的部分组成：胶水，支柱和刚性区域。如果 &lt;code&gt;Box&lt;/code&gt; 包含的所有组件的大小都是固定的，则可能需要使用粘合组件（由 &lt;code&gt;createGlue&lt;/code&gt; 返回）来控制组件的位置。如果两个组件之间需要固定的空间，请尝试使用支撑杆（ &lt;code&gt;createHorizontalStrut&lt;/code&gt; 或 &lt;code&gt;createVerticalStrut&lt;/code&gt; ）。如果您需要一个始终占据相同空间量的不可见组件，请通过调用 &lt;code&gt;createRigidArea&lt;/code&gt; 来获取它。</target>
        </trans-unit>
        <trans-unit id="8e5bd3e90c98cafc96c3bffb7cdb5902ec05efc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; class implements methods for finding the location of boundaries in text.</source>
          <target state="translated">该 &lt;code&gt;BreakIterator&lt;/code&gt; 类实现方法用于查找文本中边界位置。</target>
        </trans-unit>
        <trans-unit id="da13029d818efd6f3b22a9f5835a453fd292a681" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; class implements methods for finding the location of boundaries in text. Instances of &lt;code&gt;BreakIterator&lt;/code&gt; maintain a current position and scan over text returning the index of characters where boundaries occur. Internally, &lt;code&gt;BreakIterator&lt;/code&gt; scans text using a &lt;code&gt;CharacterIterator&lt;/code&gt;, and is thus able to scan text held by any object implementing that protocol. A &lt;code&gt;StringCharacterIterator&lt;/code&gt; is used to scan &lt;code&gt;String&lt;/code&gt; objects passed to &lt;code&gt;setText&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;BreakIterator&lt;/code&gt; 类实现方法用于查找文本中边界位置。 &lt;code&gt;BreakIterator&lt;/code&gt; 的实例保持当前位置并扫描文本，以返回出现边界的字符的索引。在内部， &lt;code&gt;BreakIterator&lt;/code&gt; 使用 &lt;code&gt;CharacterIterator&lt;/code&gt; 扫描文本，因此能够扫描由实现该协议的任何对象保存的文本。一个 &lt;code&gt;StringCharacterIterator&lt;/code&gt; 用于扫描 &lt;code&gt;String&lt;/code&gt; 对象传递给 &lt;code&gt;setText&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8175672c5ab8c55357d73bfb557350df91b702a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BreakIterator&lt;/code&gt; instances returned by the factory methods of this class are intended for use with natural languages only, not for programming language text. It is however possible to define subclasses that tokenize a programming language.</source>
          <target state="translated">此类的工厂方法返回的 &lt;code&gt;BreakIterator&lt;/code&gt; 实例仅适用于自然语言，而不适用于编程语言文本。但是，可以定义标记编程语言的子类。</target>
        </trans-unit>
        <trans-unit id="d9270e411d3022285e3f9a3af383e96f373b9f9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferStrategy&lt;/code&gt; class represents the mechanism with which to organize complex memory on a particular &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;BufferStrategy&lt;/code&gt; 中类表示，用以在特定的组织复杂存储器中的机构 &lt;code&gt;Canvas&lt;/code&gt; 或 &lt;code&gt;Window&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51500b7c5def900ce9b750cca1c161e61c7a050b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferStrategy&lt;/code&gt; class represents the mechanism with which to organize complex memory on a particular &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt;. Hardware and software limitations determine whether and how a particular buffer strategy can be implemented. These limitations are detectable through the capabilities of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; used when creating the &lt;code&gt;Canvas&lt;/code&gt; or &lt;code&gt;Window&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;BufferStrategy&lt;/code&gt; 中类表示，用以在特定的组织复杂存储器中的机构 &lt;code&gt;Canvas&lt;/code&gt; 或 &lt;code&gt;Window&lt;/code&gt; 。硬件和软件的限制决定了是否以及如何实施特定的缓冲区策略。通过创建 &lt;code&gt;Canvas&lt;/code&gt; 或 &lt;code&gt;Window&lt;/code&gt; 时使用的 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 的功能可以检测到这些限制。</target>
        </trans-unit>
        <trans-unit id="1171918f57a224f2f1397f10d042cd09f26bc469" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImage&lt;/code&gt; subclass describes an &lt;a href=&quot;../image&quot;&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt; with an accessible buffer of image data.</source>
          <target state="translated">所述 &lt;code&gt;BufferedImage&lt;/code&gt; 子类描述的&lt;a href=&quot;../image&quot;&gt; &lt;code&gt;Image&lt;/code&gt; &lt;/a&gt;与图像数据的访问的缓冲器。</target>
        </trans-unit>
        <trans-unit id="78ca11756050cfcc5470b4ddce6549ee1d9d015f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImage&lt;/code&gt; subclass describes an &lt;a href=&quot;../image&quot;&gt;&lt;code&gt;Image&lt;/code&gt;&lt;/a&gt; with an accessible buffer of image data. A &lt;code&gt;BufferedImage&lt;/code&gt; is comprised of a &lt;a href=&quot;colormodel&quot;&gt;&lt;code&gt;ColorModel&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;raster&quot;&gt;&lt;code&gt;Raster&lt;/code&gt;&lt;/a&gt; of image data. The number and types of bands in the &lt;a href=&quot;samplemodel&quot;&gt;&lt;code&gt;SampleModel&lt;/code&gt;&lt;/a&gt; of the &lt;code&gt;Raster&lt;/code&gt; must match the number and types required by the &lt;code&gt;ColorModel&lt;/code&gt; to represent its color and alpha components. All &lt;code&gt;BufferedImage&lt;/code&gt; objects have an upper left corner coordinate of (0, 0). Any &lt;code&gt;Raster&lt;/code&gt; used to construct a &lt;code&gt;BufferedImage&lt;/code&gt; must therefore have minX=0 and minY=0.</source>
          <target state="translated">所述 &lt;code&gt;BufferedImage&lt;/code&gt; 子类描述的&lt;a href=&quot;../image&quot;&gt; &lt;code&gt;Image&lt;/code&gt; &lt;/a&gt;与图像数据的访问的缓冲器。甲 &lt;code&gt;BufferedImage&lt;/code&gt; 由一个的&lt;a href=&quot;colormodel&quot;&gt; &lt;code&gt;ColorModel&lt;/code&gt; 中&lt;/a&gt;和&lt;a href=&quot;raster&quot;&gt; &lt;code&gt;Raster&lt;/code&gt; &lt;/a&gt;图像数据。在频带的数目和类型&lt;a href=&quot;samplemodel&quot;&gt; &lt;code&gt;SampleModel&lt;/code&gt; &lt;/a&gt;所述的 &lt;code&gt;Raster&lt;/code&gt; 必须由所要求的数量和类型相匹配 &lt;code&gt;ColorModel&lt;/code&gt; 表示其颜色和alpha分量。所有 &lt;code&gt;BufferedImage&lt;/code&gt; 对象的左上角坐标为（0，0）。因此，用于构造 &lt;code&gt;BufferedImage&lt;/code&gt; 的任何 &lt;code&gt;Raster&lt;/code&gt; 都必须具有minX = 0和minY = 0。</target>
        </trans-unit>
        <trans-unit id="57042ad4cff84a1b91359ce1289c5881d0a64bca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImageFilter&lt;/code&gt; class subclasses an &lt;code&gt;ImageFilter&lt;/code&gt; to provide a simple means of using a single-source/single-destination image operator (&lt;a href=&quot;bufferedimageop&quot;&gt;&lt;code&gt;BufferedImageOp&lt;/code&gt;&lt;/a&gt;) to filter a &lt;code&gt;BufferedImage&lt;/code&gt; in the Image Producer/Consumer/Observer paradigm.</source>
          <target state="translated">所述 &lt;code&gt;BufferedImageFilter&lt;/code&gt; 类的子类的 &lt;code&gt;ImageFilter&lt;/code&gt; 的是提供一种使用单一源/单一目标图像操作符（的简单方法&lt;a href=&quot;bufferedimageop&quot;&gt; &lt;code&gt;BufferedImageOp&lt;/code&gt; 中&lt;/a&gt;）以过滤 &lt;code&gt;BufferedImage&lt;/code&gt; 在图像生产者/消费者/观察员范例。</target>
        </trans-unit>
        <trans-unit id="b893ee2e0f33714ff252b8fd0fab7bade1b1a7c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BufferedImageFilter&lt;/code&gt; class subclasses an &lt;code&gt;ImageFilter&lt;/code&gt; to provide a simple means of using a single-source/single-destination image operator (&lt;a href=&quot;bufferedimageop&quot;&gt;&lt;code&gt;BufferedImageOp&lt;/code&gt;&lt;/a&gt;) to filter a &lt;code&gt;BufferedImage&lt;/code&gt; in the Image Producer/Consumer/Observer paradigm. Examples of these image operators are: &lt;a href=&quot;convolveop&quot;&gt;&lt;code&gt;ConvolveOp&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;affinetransformop&quot;&gt;&lt;code&gt;AffineTransformOp&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;lookupop&quot;&gt;&lt;code&gt;LookupOp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">所述 &lt;code&gt;BufferedImageFilter&lt;/code&gt; 类的子类的 &lt;code&gt;ImageFilter&lt;/code&gt; 的是提供一种使用单一源/单一目标图像操作符（的简单方法&lt;a href=&quot;bufferedimageop&quot;&gt; &lt;code&gt;BufferedImageOp&lt;/code&gt; 中&lt;/a&gt;）以过滤 &lt;code&gt;BufferedImage&lt;/code&gt; 在图像生产者/消费者/观察员范例。这些图像操作符的实例为：&lt;a href=&quot;convolveop&quot;&gt; &lt;code&gt;ConvolveOp&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;affinetransformop&quot;&gt; &lt;code&gt;AffineTransformOp&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;lookupop&quot;&gt; &lt;code&gt;LookupOp&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="26575ce7aa6f5dba044d1067a9237fc3d869b533" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Byte&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;byte&lt;/code&gt; in an object.</source>
          <target state="translated">的 &lt;code&gt;Byte&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;byte&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="daee07dd88e16b4a70774f8e2ee84b6a66a8d825" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Byte&lt;/code&gt; class wraps a value of primitive type &lt;code&gt;byte&lt;/code&gt; in an object. An object of type &lt;code&gt;Byte&lt;/code&gt; contains a single field whose type is &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Byte&lt;/code&gt; 类包装一个基本类型的值 &lt;code&gt;byte&lt;/code&gt; 中的对象。 &lt;code&gt;Byte&lt;/code&gt; 类型的对象包含一个类型为 &lt;code&gt;byte&lt;/code&gt; 的字段。</target>
        </trans-unit>
        <trans-unit id="246a27bb52c9d19aae02b846fc0dc428cf5b127e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CDATASection&lt;/code&gt; interface inherits from the &lt;code&gt;CharacterData&lt;/code&gt; interface through the &lt;code&gt;Text&lt;/code&gt; interface. Adjacent &lt;code&gt;CDATASection&lt;/code&gt; nodes are not merged by use of the &lt;code&gt;normalize&lt;/code&gt; method of the &lt;code&gt;Node&lt;/code&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;CDATASection&lt;/code&gt; 的从接口继承 &lt;code&gt;CharacterData&lt;/code&gt; 通过接口 &lt;code&gt;Text&lt;/code&gt; 界面。相邻的 &lt;code&gt;CDATASection&lt;/code&gt; 节点不会通过使用 &lt;code&gt;Node&lt;/code&gt; 接口的 &lt;code&gt;normalize&lt;/code&gt; 方法合并。</target>
        </trans-unit>
        <trans-unit id="62b2e493e07c691d6b8e1c124e2e8e2686f4dad0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSS2Properties&lt;/code&gt; interface represents a convenience mechanism for retrieving and setting properties within a &lt;code&gt;CSSStyleDeclaration&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;CSS2Properties&lt;/code&gt; 接口表示用于检索和一内定型特性的便利机制 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1df7f583a2f3fd85b89b055899e6cefd343a8f90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSS2Properties&lt;/code&gt; interface represents a convenience mechanism for retrieving and setting properties within a &lt;code&gt;CSSStyleDeclaration&lt;/code&gt;. The attributes of this interface correspond to all the properties specified in CSS2. Getting an attribute of this interface is equivalent to calling the &lt;code&gt;getPropertyValue&lt;/code&gt; method of the &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface. Setting an attribute of this interface is equivalent to calling the &lt;code&gt;setProperty&lt;/code&gt; method of the &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface.</source>
          <target state="translated">所述 &lt;code&gt;CSS2Properties&lt;/code&gt; 接口表示用于检索和一内定型特性的便利机制 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 。该接口的属性与CSS2中指定的所有属性相对应。获取此接口的属性等效于调用 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 接口的 &lt;code&gt;getPropertyValue&lt;/code&gt; 方法。设置此接口的属性等效于调用 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 接口的 &lt;code&gt;setProperty&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="96ed175ac700b48b9b0ba46416474dd057ba2653" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSCharsetRule&lt;/code&gt; interface represents a @charset rule in a CSS style sheet.</source>
          <target state="translated">该 &lt;code&gt;CSSCharsetRule&lt;/code&gt; 接口表示一个CSS样式表@charset规则。</target>
        </trans-unit>
        <trans-unit id="389dd1b7fefe36e404bede9941945d2c386bf759" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSCharsetRule&lt;/code&gt; interface represents a @charset rule in a CSS style sheet. The value of the &lt;code&gt;encoding&lt;/code&gt; attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the &lt;code&gt;encoding&lt;/code&gt; attribute is the value found in the &lt;code&gt;@charset&lt;/code&gt; rule. If there was no &lt;code&gt;@charset&lt;/code&gt; in the original document, then no &lt;code&gt;CSSCharsetRule&lt;/code&gt; is created. The value of the &lt;code&gt;encoding&lt;/code&gt; attribute may also be used as a hint for the encoding used on serialization of the style sheet.</source>
          <target state="translated">该 &lt;code&gt;CSSCharsetRule&lt;/code&gt; 接口表示一个CSS样式表@charset规则。 &lt;code&gt;encoding&lt;/code&gt; 属性的值不影响DOM对象中文本数据的编码。此编码始终为UTF-16。加载样式表后， &lt;code&gt;encoding&lt;/code&gt; 属性的值就是 &lt;code&gt;@charset&lt;/code&gt; 规则中的值。如果没有 &lt;code&gt;@charset&lt;/code&gt; 在原始文档中，则没有 &lt;code&gt;CSSCharsetRule&lt;/code&gt; 创建。 &lt;code&gt;encoding&lt;/code&gt; 属性的值也可以用作样式表序列化时使用的编码提示。</target>
        </trans-unit>
        <trans-unit id="5b6e7449ded2251a2a7ab1e565428f000be3d8f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSFontFaceRule&lt;/code&gt; interface represents a @font-face rule in a CSS style sheet.</source>
          <target state="translated">该 &lt;code&gt;CSSFontFaceRule&lt;/code&gt; 接口表示一个CSS样式表的@ font-face规则。</target>
        </trans-unit>
        <trans-unit id="b47aac1b8c9bb6f933115f4efcc9138a0c662e97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSFontFaceRule&lt;/code&gt; interface represents a @font-face rule in a CSS style sheet. The &lt;code&gt;@font-face&lt;/code&gt; rule is used to hold a set of font descriptions.</source>
          <target state="translated">该 &lt;code&gt;CSSFontFaceRule&lt;/code&gt; 接口表示一个CSS样式表的@ font-face规则。在 &lt;code&gt;@font-face&lt;/code&gt; 的规则是用来装一组字体描述。</target>
        </trans-unit>
        <trans-unit id="59e7de5d262f6e4d891bffc8e8fdeb721ec858fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSImportRule&lt;/code&gt; interface represents a @import rule within a CSS style sheet.</source>
          <target state="translated">该 &lt;code&gt;CSSImportRule&lt;/code&gt; 接口表示CSS样式表中的@import规则。</target>
        </trans-unit>
        <trans-unit id="43498b5585166019b1a9ea81da807a6c7cba7b9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSImportRule&lt;/code&gt; interface represents a @import rule within a CSS style sheet. The &lt;code&gt;@import&lt;/code&gt; rule is used to import style rules from other style sheets.</source>
          <target state="translated">该 &lt;code&gt;CSSImportRule&lt;/code&gt; 接口表示CSS样式表中的@import规则。该 &lt;code&gt;@import&lt;/code&gt; 规则是用来从其它样式表导入样式规则。</target>
        </trans-unit>
        <trans-unit id="8b7a3208df061a03e4397993f84b96e719101fa7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSMediaRule&lt;/code&gt; interface represents a @media rule in a CSS style sheet.</source>
          <target state="translated">该 &lt;code&gt;CSSMediaRule&lt;/code&gt; 接口表示CSS样式表一个@media规则。</target>
        </trans-unit>
        <trans-unit id="66566a412b7cd1eaf6027d520d601bfa5d5db018" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSMediaRule&lt;/code&gt; interface represents a @media rule in a CSS style sheet. A &lt;code&gt;@media&lt;/code&gt; rule can be used to delimit style rules for specific media types.</source>
          <target state="translated">该 &lt;code&gt;CSSMediaRule&lt;/code&gt; 接口表示CSS样式表一个@media规则。一个 &lt;code&gt;@media&lt;/code&gt; 规则可以用来分隔样式规则为特定的媒体类型。</target>
        </trans-unit>
        <trans-unit id="b0bb6772f97de95b1933932842b3ce33c8623751" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSPageRule&lt;/code&gt; interface represents a @page rule within a CSS style sheet.</source>
          <target state="translated">该 &lt;code&gt;CSSPageRule&lt;/code&gt; 接口表示CSS样式表中的@page规则。</target>
        </trans-unit>
        <trans-unit id="e67de4a8cc6504ac8ae62c547f7ec4b2d648b2c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSPageRule&lt;/code&gt; interface represents a @page rule within a CSS style sheet. The &lt;code&gt;@page&lt;/code&gt; rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media.</source>
          <target state="translated">该 &lt;code&gt;CSSPageRule&lt;/code&gt; 接口表示CSS样式表中的@page规则。该 &lt;code&gt;@page&lt;/code&gt; 规则用于指定页面媒体页面框的尺寸，方向，边距等。</target>
        </trans-unit>
        <trans-unit id="c60af27d4a695f73d631d184d45e8330b1b7c139" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; interface represents a single CSS value .</source>
          <target state="translated">该 &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; 接口表示一个CSS值。</target>
        </trans-unit>
        <trans-unit id="94a703bf7a2089dd6d9a80a37eb27212ad1f508b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; interface represents a single CSS value . This interface may be used to determine the value of a specific style property currently set in a block or to set a specific style property explicitly within the block. An instance of this interface might be obtained from the &lt;code&gt;getPropertyCSSValue&lt;/code&gt; method of the &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface. A &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; object only occurs in a context of a CSS property.</source>
          <target state="translated">该 &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; 接口表示一个CSS值。该接口可用于确定当前在块中设置的特定样式属性的值，或用于在块内显式设置特定样式属性。可以从 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 接口的 &lt;code&gt;getPropertyCSSValue&lt;/code&gt; 方法获取此接口的实例。一个 &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; 对象只出现在CSS属性的上下文中。</target>
        </trans-unit>
        <trans-unit id="2a29672616bc6f8e9c62069fc7a80e3fc9c2a69c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSRule&lt;/code&gt; interface is the abstract base interface for any type of CSS statement.</source>
          <target state="translated">该 &lt;code&gt;CSSRule&lt;/code&gt; 接口是任何类型的CSS语句的抽象基接口。</target>
        </trans-unit>
        <trans-unit id="b838e3d89e0a650ed269f5dc8197fc4efb4b6639" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSRule&lt;/code&gt; interface is the abstract base interface for any type of CSS statement. This includes both rule sets and at-rules. An implementation is expected to preserve all rules specified in a CSS style sheet, even if the rule is not recognized by the parser. Unrecognized rules are represented using the &lt;code&gt;CSSUnknownRule&lt;/code&gt; interface.</source>
          <target state="translated">该 &lt;code&gt;CSSRule&lt;/code&gt; 接口是任何类型的CSS语句的抽象基接口。这包括规则集和规则。即使解析器无法识别该规则，也希望该实现保留CSS样式表中指定的所有规则。无法识别的规则使用 &lt;code&gt;CSSUnknownRule&lt;/code&gt; 接口表示。</target>
        </trans-unit>
        <trans-unit id="42e7c465b8aae9db5516ed2f7ee2c0d7a7ed7fe9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSRuleList&lt;/code&gt; interface provides the abstraction of an ordered collection of CSS rules.</source>
          <target state="translated">该 &lt;code&gt;CSSRuleList&lt;/code&gt; 接口提供的CSS规则的有序集合的抽象。</target>
        </trans-unit>
        <trans-unit id="e4d35b3aed2e24c085b1e6df3578e6c8a431c2ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface represents a single CSS declaration block.</source>
          <target state="translated">所述 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 接口表示一个CSS声明块。</target>
        </trans-unit>
        <trans-unit id="2d167a87a53c347e85173c24d3e46649cb4882e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; interface represents a single CSS declaration block. This interface may be used to determine the style properties currently set in a block or to set style properties explicitly within the block.</source>
          <target state="translated">所述 &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; 接口表示一个CSS声明块。该接口可用于确定当前在一个块中设置的样式属性，或在该块内显式设置样式属性。</target>
        </trans-unit>
        <trans-unit id="d697895e6a8dbee6aa984e843544344649351921" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSStyleRule&lt;/code&gt; interface represents a single rule set in a CSS style sheet.</source>
          <target state="translated">该 &lt;code&gt;CSSStyleRule&lt;/code&gt; 接口表示CSS样式表一个单一的规则集。</target>
        </trans-unit>
        <trans-unit id="32f2d6fe4d72cee5b3be8035ead0cf9b791faa56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSStyleSheet&lt;/code&gt; interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is &quot;text/css&quot;.</source>
          <target state="translated">所述 &lt;code&gt;CSSStyleSheet&lt;/code&gt; 接口是用于表示CSS样式表即，样式表，其内容类型是&amp;ldquo;text / CSS&amp;rdquo;的具体接口。</target>
        </trans-unit>
        <trans-unit id="e1a1790e7f818b21c2815de170c7fa8bf24f2402" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSUnknownRule&lt;/code&gt; interface represents an at-rule not supported by this user agent.</source>
          <target state="translated">该 &lt;code&gt;CSSUnknownRule&lt;/code&gt; 接口表示不受此用户代理支持的，在规则。</target>
        </trans-unit>
        <trans-unit id="437b74cbd6f6a88ac98eaa1391020081a5c5c5b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSValue&lt;/code&gt; at the &lt;code&gt;index&lt;/code&gt; position in the &lt;code&gt;CSSValueList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="translated">位于 &lt;code&gt;CSSValue&lt;/code&gt; List中 &lt;code&gt;index&lt;/code&gt; 位置的 &lt;code&gt;CSSValueList&lt;/code&gt; ，如果不是有效索引，则为 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="70df366709fb9dc1497427216d897a0a1643cb7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSValue&lt;/code&gt; interface represents a simple or a complex value.</source>
          <target state="translated">所述 &lt;code&gt;CSSValue&lt;/code&gt; 接口表示一个简单的或复杂的值。</target>
        </trans-unit>
        <trans-unit id="f688efbd943fee713ad7d2cf412fe78577458278" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSValue&lt;/code&gt; interface represents a simple or a complex value. A &lt;code&gt;CSSValue&lt;/code&gt; object only occurs in a context of a CSS property.</source>
          <target state="translated">所述 &lt;code&gt;CSSValue&lt;/code&gt; 接口表示一个简单的或复杂的值。一个 &lt;code&gt;CSSValue&lt;/code&gt; 对象只出现在CSS属性的上下文中。</target>
        </trans-unit>
        <trans-unit id="7f19b06a5175245ad5cff448ea9bd6ca501e7a89" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CSSValueList&lt;/code&gt; interface provides the abstraction of an ordered collection of CSS values.</source>
          <target state="translated">该 &lt;code&gt;CSSValueList&lt;/code&gt; 接口提供了CSS值的有序集合的抽象。</target>
        </trans-unit>
        <trans-unit id="1a932ff02fbef157dfbce82880e1ec92d239cbdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CS_CIEXYZ&lt;/code&gt; space used by the &lt;code&gt;toCIEXYZ/fromCIEXYZ&lt;/code&gt; methods can be described as follows:</source>
          <target state="translated">&lt;code&gt;toCIEXYZ/fromCIEXYZ&lt;/code&gt; 方法使用的 &lt;code&gt;CS_CIEXYZ&lt;/code&gt; 空间可以描述如下：</target>
        </trans-unit>
        <trans-unit id="45403e90906b6fa81b2360420a874f817c98e7b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CachedRowSet&lt;/code&gt; interface also defines the method &lt;code&gt;previousPage&lt;/code&gt;. Just as the method &lt;code&gt;nextPage&lt;/code&gt; is analogous to the &lt;code&gt;ResultSet&lt;/code&gt; method &lt;code&gt;next&lt;/code&gt;, the method &lt;code&gt;previousPage&lt;/code&gt; is analogous to the &lt;code&gt;ResultSet&lt;/code&gt; method &lt;code&gt;previous&lt;/code&gt;. Similar to the method &lt;code&gt;nextPage&lt;/code&gt;, &lt;code&gt;previousPage&lt;/code&gt; creates a &lt;code&gt;CachedRowSet&lt;/code&gt; object containing the number of rows set as the page size. So, for instance, the method &lt;code&gt;previousPage&lt;/code&gt; could be used in a &lt;code&gt;while&lt;/code&gt; loop at the end of the preceding code fragment to navigate back through the pages from the last page to the first page. The method &lt;code&gt;previousPage&lt;/code&gt; is also similar to &lt;code&gt;nextPage&lt;/code&gt; in that it can be used in a &lt;code&gt;while&lt;/code&gt; loop, except that it returns &lt;code&gt;true&lt;/code&gt; as long as there is another page preceding it and &lt;code&gt;false&lt;/code&gt; when there are no more pages ahead of it.</source>
          <target state="translated">所述 &lt;code&gt;CachedRowSet&lt;/code&gt; 接口还定义了方法 &lt;code&gt;previousPage&lt;/code&gt; 。正如方法 &lt;code&gt;nextPage&lt;/code&gt; 是类似于 &lt;code&gt;ResultSet&lt;/code&gt; 的方法 &lt;code&gt;next&lt;/code&gt; ，该方法 &lt;code&gt;previousPage&lt;/code&gt; 是类似于 &lt;code&gt;ResultSet&lt;/code&gt; 的方法 &lt;code&gt;previous&lt;/code&gt; 。与 &lt;code&gt;nextPage&lt;/code&gt; 方法类似， &lt;code&gt;previousPage&lt;/code&gt; 创建一个 &lt;code&gt;CachedRowSet&lt;/code&gt; 对象，其中包含设置为页面大小的行数。因此，例如，方法 &lt;code&gt;previousPage&lt;/code&gt; 可以在一段 &lt;code&gt;while&lt;/code&gt; 在前面的代码片段的末尾循环，以从最后一页导航到第一页。方法 &lt;code&gt;previousPage&lt;/code&gt; 也类似于 &lt;code&gt;nextPage&lt;/code&gt; ，因为它可以在 &lt;code&gt;while&lt;/code&gt; 循环中使用，除了只要它前面有另一个页面，它就返回 &lt;code&gt;true&lt;/code&gt; ，否则就返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="086daf6283fb4f73e97652af102c13277eb9b3cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;#fields&quot;&gt;&lt;code&gt;calendar fields&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;, &lt;code&gt;HOUR&lt;/code&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week. An instant in time can be represented by a millisecond value that is an offset from the &lt;a id=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt;, January 1, 1970 00:00:00.000 GMT (Gregorian).</source>
          <target state="translated">的 &lt;code&gt;Calendar&lt;/code&gt; 类是一个抽象类，可以为在某一特定时刻和一组之间的转换的方法&lt;a href=&quot;#fields&quot;&gt; &lt;code&gt;calendar fields&lt;/code&gt; &lt;/a&gt;如 &lt;code&gt;YEAR&lt;/code&gt; ， &lt;code&gt;MONTH&lt;/code&gt; ， &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; ， &lt;code&gt;HOUR&lt;/code&gt; ，等等，以及用于操纵该日历字段，如获取的日期下周的。时间的瞬间可以用毫秒值表示，该值是从1970年1月1日格林尼治标准时间（Gregorian）到&lt;a id=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt;的偏移量。</target>
        </trans-unit>
        <trans-unit id="c827bcb764af6d14358870b4c02cf9f314c2a1cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;calendar#fields&quot;&gt;&lt;code&gt;calendar fields&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;, &lt;code&gt;HOUR&lt;/code&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week.</source>
          <target state="translated">的 &lt;code&gt;Calendar&lt;/code&gt; 类是一个抽象类，可以为在某一特定时刻和一组之间的转换的方法&lt;a href=&quot;calendar#fields&quot;&gt; &lt;code&gt;calendar fields&lt;/code&gt; &lt;/a&gt;如 &lt;code&gt;YEAR&lt;/code&gt; ， &lt;code&gt;MONTH&lt;/code&gt; ， &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; ， &lt;code&gt;HOUR&lt;/code&gt; ，等等，以及用于操纵该日历字段，如获取的日期下周的。</target>
        </trans-unit>
        <trans-unit id="e16a5c9a51c0c49e784ca00cfe336ed3439953f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; class is an abstract class that provides methods for converting between a specific instant in time and a set of &lt;a href=&quot;calendar#fields&quot;&gt;&lt;code&gt;calendar fields&lt;/code&gt;&lt;/a&gt; such as &lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH&lt;/code&gt;, &lt;code&gt;DAY_OF_MONTH&lt;/code&gt;, &lt;code&gt;HOUR&lt;/code&gt;, and so on, and for manipulating the calendar fields, such as getting the date of the next week. An instant in time can be represented by a millisecond value that is an offset from the &lt;a name=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt;, January 1, 1970 00:00:00.000 GMT (Gregorian).</source>
          <target state="translated">的 &lt;code&gt;Calendar&lt;/code&gt; 类是一个抽象类，可以为在某一特定时刻和一组之间的转换的方法&lt;a href=&quot;calendar#fields&quot;&gt; &lt;code&gt;calendar fields&lt;/code&gt; &lt;/a&gt;如 &lt;code&gt;YEAR&lt;/code&gt; ， &lt;code&gt;MONTH&lt;/code&gt; ， &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; ， &lt;code&gt;HOUR&lt;/code&gt; ，等等，以及用于操纵该日历字段，如获取的日期下周的。时间的瞬间可以用毫秒值表示，该值是从1970年1月1日格林尼治标准时间（Gregorian）到&lt;a name=&quot;Epoch&quot;&gt;&lt;em&gt;Epoch&lt;/em&gt;&lt;/a&gt;的偏移量。</target>
        </trans-unit>
        <trans-unit id="46f676ce0c4f91d6ea5cdaa0c0eeb686651fe70a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Calendar&lt;/code&gt; parameters are the values represented by the &lt;code&gt;isLenient&lt;/code&gt;, &lt;code&gt;getFirstDayOfWeek&lt;/code&gt;, &lt;code&gt;getMinimalDaysInFirstWeek&lt;/code&gt; and &lt;code&gt;getTimeZone&lt;/code&gt; methods. If there is any difference in those parameters between the two &lt;code&gt;Calendar&lt;/code&gt;s, this method returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Calendar&lt;/code&gt; 参数是由表示的值 &lt;code&gt;isLenient&lt;/code&gt; ， &lt;code&gt;getFirstDayOfWeek&lt;/code&gt; ， &lt;code&gt;getMinimalDaysInFirstWeek&lt;/code&gt; 和 &lt;code&gt;getTimeZone&lt;/code&gt; 获取方法。如果两个 &lt;code&gt;Calendar&lt;/code&gt; 之间的这些参数存在任何差异，则此方法返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="03f65fae6f6d35c57712e1b5d06c5ce4521fef51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Callable&lt;/code&gt; interface is similar to &lt;a href=&quot;../../lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt;, in that both are designed for classes whose instances are potentially executed by another thread. A &lt;code&gt;Runnable&lt;/code&gt;, however, does not return a result and cannot throw a checked exception.</source>
          <target state="translated">的 &lt;code&gt;Callable&lt;/code&gt; 接口类似于&lt;a href=&quot;../../lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt;，在这两个被设计为一个其实例潜在地由另一个线程执行。一个 &lt;code&gt;Runnable&lt;/code&gt; ，但是，不会返回结果并不能抛出checked异常。</target>
        </trans-unit>
        <trans-unit id="2fd30e66fda8ef1c3878a705a006694493584387" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CertPath&lt;/code&gt; specified must be of a type that is supported by the validation algorithm, otherwise an &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; will be thrown. For example, a &lt;code&gt;CertPathValidator&lt;/code&gt; that implements the PKIX algorithm validates &lt;code&gt;CertPath&lt;/code&gt; objects of type X.509.</source>
          <target state="translated">指定的 &lt;code&gt;CertPath&lt;/code&gt; 必须是验证算法支持的类型，否则将引发 &lt;code&gt;InvalidAlgorithmParameterException&lt;/code&gt; 。例如，一个 &lt;code&gt;CertPathValidator&lt;/code&gt; 实现该算法PKIX验证 &lt;code&gt;CertPath&lt;/code&gt; 对象类型X.509的。</target>
        </trans-unit>
        <trans-unit id="36926f67fdea989d87063408fa653e4dfdb427d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CertStore&lt;/code&gt; that is returned is initialized with the specified &lt;code&gt;CertStoreParameters&lt;/code&gt;. The type of parameters needed may vary between different types of &lt;code&gt;CertStore&lt;/code&gt;s. Note that the specified &lt;code&gt;CertStoreParameters&lt;/code&gt; object is cloned.</source>
          <target state="translated">该 &lt;code&gt;CertStore&lt;/code&gt; 返回的初始化与指定 &lt;code&gt;CertStoreParameters&lt;/code&gt; 。在不同类型的 &lt;code&gt;CertStore&lt;/code&gt; 之间，所需的参数类型可能会有所不同。请注意，将克隆指定的 &lt;code&gt;CertStoreParameters&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="101822df3975adbcac61dad375ef170c3dd3f9ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object.</source>
          <target state="translated">的 &lt;code&gt;Character&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;char&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="59ef79f44cd9b5450b6ba9539fe681757de0acb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object. An object of class &lt;code&gt;Character&lt;/code&gt; contains a single field whose type is &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Character&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;char&lt;/code&gt; 中的对象。 &lt;code&gt;Character&lt;/code&gt; 类的对象包含一个类型为 &lt;code&gt;char&lt;/code&gt; 的单个字段。</target>
        </trans-unit>
        <trans-unit id="806bb96887766953bebd866e27ce9d8da08b4334" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Character&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;char&lt;/code&gt; in an object. An object of type &lt;code&gt;Character&lt;/code&gt; contains a single field whose type is &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Character&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;char&lt;/code&gt; 中的对象。类型为 &lt;code&gt;Character&lt;/code&gt; 的对象包含一个类型为 &lt;code&gt;char&lt;/code&gt; 的单个字段。</target>
        </trans-unit>
        <trans-unit id="068ebf45f3b262fc7cfb61d8411795e62f12fe53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharacterData.data&lt;/code&gt; attribute holds the text that is contained by the CDATA section. Note that this &lt;em&gt;may&lt;/em&gt; contain characters that need to be escaped outside of CDATA sections and that, depending on the character encoding (&quot;charset&quot;) chosen for serialization, it may be impossible to write out some characters as part of a CDATA section.</source>
          <target state="translated">该 &lt;code&gt;CharacterData.data&lt;/code&gt; 属性保存由CDATA节包含的文本。请注意，这&lt;em&gt;可能&lt;/em&gt;包含需要在CDATA部分之外转义的字符，并且取决于为序列化选择的字符编码（&amp;ldquo;字符集&amp;rdquo;），可能无法写出某些字符作为CDATA部分的一部分。</target>
        </trans-unit>
        <trans-unit id="d7639ef9026d824ebeafafaa00bc06da11cf51ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharacterData&lt;/code&gt; interface extends Node with a set of attributes and methods for accessing character data in the DOM.</source>
          <target state="translated">所述 &lt;code&gt;CharacterData&lt;/code&gt; 接口延伸节点与一组用于访问DOM中的字符数据的属性和方法。</target>
        </trans-unit>
        <trans-unit id="40ffb9de6c7b636f3605b56c1a0d9b79d969550c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CharacterData&lt;/code&gt; interface extends Node with a set of attributes and methods for accessing character data in the DOM. For clarity this set is defined here rather than on each object that uses these attributes and methods. No DOM objects correspond directly to &lt;code&gt;CharacterData&lt;/code&gt;, though &lt;code&gt;Text&lt;/code&gt; and others do inherit the interface from it. All &lt;code&gt;offsets&lt;/code&gt; in this interface start from &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;CharacterData&lt;/code&gt; 接口延伸节点与一组用于访问DOM中的字符数据的属性和方法。为了清楚起见，此集合是在此处定义的，而不是在使用这些属性和方法的每个对象上定义的。没有DOM对象直接对应于 &lt;code&gt;CharacterData&lt;/code&gt; ，尽管 &lt;code&gt;Text&lt;/code&gt; 和其他对象确实从该对象继承了接口。该接口中的所有 &lt;code&gt;offsets&lt;/code&gt; 都从 &lt;code&gt;0&lt;/code&gt; 开始。</target>
        </trans-unit>
        <trans-unit id="22f50e4a07350a988c3b8d5223aec95aff93c7ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CheckboxGroup&lt;/code&gt; class is used to group together a set of &lt;code&gt;Checkbox&lt;/code&gt; buttons.</source>
          <target state="translated">所述 &lt;code&gt;CheckboxGroup&lt;/code&gt; 类用于组一起一组 &lt;code&gt;Checkbox&lt;/code&gt; 的按钮。</target>
        </trans-unit>
        <trans-unit id="4c6b961850ab9fa432a7eefe889be3fe47bd988d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Choice&lt;/code&gt; class presents a pop-up menu of choices.</source>
          <target state="translated">在 &lt;code&gt;Choice&lt;/code&gt; 类礼物的选项的弹出式菜单。</target>
        </trans-unit>
        <trans-unit id="b19af052bb34ceaf06a5ee3ac49af9e25d0f093a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Choice&lt;/code&gt; class presents a pop-up menu of choices. The current choice is displayed as the title of the menu.</source>
          <target state="translated">在 &lt;code&gt;Choice&lt;/code&gt; 类礼物的选项的弹出式菜单。当前选择显示为菜单标题。</target>
        </trans-unit>
        <trans-unit id="ba3268238d079e4b2a6a12991e41beae19670cb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; date and time fields are re-resolved. This allows fields in step four to produce &lt;code&gt;ChronoField&lt;/code&gt; values and have them be processed into dates and times.</source>
          <target state="translated">该 &lt;code&gt;ChronoField&lt;/code&gt; 日期和时间字段重新解决。这使第四步中的字段可以产生 &lt;code&gt;ChronoField&lt;/code&gt; 值，并将它们处理为日期和时间。</target>
        </trans-unit>
        <trans-unit id="b0898653f339c4545cc086be6fd8ad09ad6ee506" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; date fields are resolved. This is achieved using &lt;a href=&quot;../chrono/chronology#resolveDate(java.util.Map,java.time.format.ResolverStyle)&quot;&gt;&lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;ChronoField&lt;/code&gt; 日期字段都解决了。这是使用&lt;a href=&quot;../chrono/chronology#resolveDate(java.util.Map,java.time.format.ResolverStyle)&quot;&gt; &lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt; &lt;/a&gt;。有关字段解析的文档位于 &lt;code&gt;Chronology&lt;/code&gt; 的实现中。</target>
        </trans-unit>
        <trans-unit id="96e6680c1b998ca327d4d17aedbccdccc167dbcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; date fields are resolved. This is achieved using &lt;a href=&quot;../chrono/chronology#resolveDate-java.util.Map-java.time.format.ResolverStyle-&quot;&gt;&lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt;&lt;/a&gt;. Documentation about field resolution is located in the implementation of &lt;code&gt;Chronology&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;ChronoField&lt;/code&gt; 日期字段都解决了。这是使用&lt;a href=&quot;../chrono/chronology#resolveDate-java.util.Map-java.time.format.ResolverStyle-&quot;&gt; &lt;code&gt;Chronology.resolveDate(Map, ResolverStyle)&lt;/code&gt; &lt;/a&gt;。有关字段解析的文档位于 &lt;code&gt;Chronology&lt;/code&gt; 的实现中。</target>
        </trans-unit>
        <trans-unit id="89d1beeae57332f5351b6ab29fde209df635e987" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ChronoField&lt;/code&gt; time fields are resolved. This is documented on &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; and is the same for all chronologies.</source>
          <target state="translated">该 &lt;code&gt;ChronoField&lt;/code&gt; 时间字段得到解决。在&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;上有记录，并且对于所有时间顺序都相同。</target>
        </trans-unit>
        <trans-unit id="82381a07b897d845e38a8fb6d968a572a981dcd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; instance provides a set of methods to create &lt;code&gt;ChronoLocalDate&lt;/code&gt; instances. The date classes are used to manipulate specific dates.</source>
          <target state="translated">该 &lt;code&gt;Chronology&lt;/code&gt; 实例提供了一组方法来创建 &lt;code&gt;ChronoLocalDate&lt;/code&gt; 实例。日期类用于操纵特定日期。</target>
        </trans-unit>
        <trans-unit id="b67dfb19ed132a488f7220fb4dc014c909b089ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; represents the calendar system in use. The ISO-8601 calendar system is the modern civil calendar system used today in most of the world. It is equivalent to the proleptic Gregorian calendar system, in which today's rules for leap years are applied for all time.</source>
          <target state="translated">该 &lt;code&gt;Chronology&lt;/code&gt; 代表使用的日历系统。ISO-8601日历系统是当今世界大多数地方使用的现代民用日历系统。它等效于多用的格里高利历系统，该系统在今天一直适用today年的规则。</target>
        </trans-unit>
        <trans-unit id="4197e57743f21fd2a15f8483e9ed9b922aac9ed3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Chronology&lt;/code&gt; represents the calendar system in use. The era and other fields in &lt;a href=&quot;../temporal/chronofield&quot;&gt;&lt;code&gt;ChronoField&lt;/code&gt;&lt;/a&gt; are defined by the chronology.</source>
          <target state="translated">该 &lt;code&gt;Chronology&lt;/code&gt; 代表使用的日历系统。&lt;a href=&quot;../temporal/chronofield&quot;&gt; &lt;code&gt;ChronoField&lt;/code&gt; &lt;/a&gt;中的纪元和其他字段由年表定义。</target>
        </trans-unit>
        <trans-unit id="9ec2677d771f2243453abd3744eafeaaa8cc23f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;byte&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="c5d8434bc0489103ac32d773f7b0d5d3c71265f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;char&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;char&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="c0b196d2877a10ae544eb517c91cdc98d354fe55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;double&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="3fc9063456a087c6ae2a09f36b8c79ce72af8fe4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;float&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;float&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="843262d0d1248a1926078c82957df1906c06c701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;int&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="f85e50e9d096ed50998edbe6558f68b79f3e5d09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">表示基本类型 &lt;code&gt;long&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="06ed2f03cfacda7175bed94156559a38e6923b0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; instance representing the primitive type &lt;code&gt;short&lt;/code&gt;.</source>
          <target state="translated">表示原始类型 &lt;code&gt;short&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="9e8ca9880dd30af6f9980e4a0d93f1ee703afc95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object created from the data, and &lt;code&gt;ProtectionDomain&lt;/code&gt;.</source>
          <target state="translated">根据数据和 &lt;code&gt;ProtectionDomain&lt;/code&gt; 创建的 &lt;code&gt;Class&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="0bddc54347ed58d9c0c85b45c41a02b37fd779ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object created from the data, and optional &lt;code&gt;ProtectionDomain&lt;/code&gt;.</source>
          <target state="translated">根据数据创建的 &lt;code&gt;Class&lt;/code&gt; 对象，以及可选的 &lt;code&gt;ProtectionDomain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e690995fffbb2c3b6c4761982fccbec41cd68fda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object for the specified &lt;code&gt;name&lt;/code&gt;</source>
          <target state="translated">指定 &lt;code&gt;name&lt;/code&gt; 的 &lt;code&gt;Class&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="23dcb43f82d588ed515276419645673633932ecc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object representing the pseudo-type corresponding to the keyword &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">表示与关键字 &lt;code&gt;void&lt;/code&gt; 对应的伪类型的 &lt;code&gt;Class&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="d08a4d00bff7d8642e575b877c58fa1bcc6f66c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that represents the runtime class of this object.</source>
          <target state="translated">的 &lt;code&gt;Class&lt;/code&gt; 对象，表示运行时类此对象。</target>
        </trans-unit>
        <trans-unit id="1a36611cde5a9560399b57b3e163d1767e367923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that was created from the specified class data</source>
          <target state="translated">从指定的类数据创建的 &lt;code&gt;Class&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="f80f806d21a19e64a5fdd872d0ac53f89e33de6f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object that was created from the specified class data.</source>
          <target state="translated">从指定的类数据创建的 &lt;code&gt;Class&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="4584f55b815597f64d3b967ed1a51e3f17ff42f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Class&lt;/code&gt; object, or &lt;code&gt;null&lt;/code&gt; if the class has not been loaded</source>
          <target state="translated">的 &lt;code&gt;Class&lt;/code&gt; 对象，或 &lt;code&gt;null&lt;/code&gt; 如果类尚未加载</target>
        </trans-unit>
        <trans-unit id="53769dc20c24f269ab332a337f22729fbb2a017c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ClassLoader&lt;/code&gt; class uses a delegation model to search for classes and resources. Each instance of &lt;code&gt;ClassLoader&lt;/code&gt; has an associated parent class loader. When requested to find a class or resource, a &lt;code&gt;ClassLoader&lt;/code&gt; instance will delegate the search for the class or resource to its parent class loader before attempting to find the class or resource itself. The virtual machine's built-in class loader, called the &quot;bootstrap class loader&quot;, does not itself have a parent but may serve as the parent of a &lt;code&gt;ClassLoader&lt;/code&gt; instance.</source>
          <target state="translated">该 &lt;code&gt;ClassLoader&lt;/code&gt; 类使用委托模型来搜索类和资源。每个 &lt;code&gt;ClassLoader&lt;/code&gt; 实例都有一个关联的父类加载器。当请求查找类或资源时， &lt;code&gt;ClassLoader&lt;/code&gt; 实例会将对类或资源的搜索委托给其父类加载器，然后再尝试查找类或资源本身。虚拟机的内置类加载器（称为&amp;ldquo;引导类加载器&amp;rdquo;）本身没有父级，但可以用作 &lt;code&gt;ClassLoader&lt;/code&gt; 实例的父级。</target>
        </trans-unit>
        <trans-unit id="7675cfccc95d9f3e4a5e2b0b965767e502acc618" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ClassLoader&lt;/code&gt; class uses a delegation model to search for classes and resources. Each instance of &lt;code&gt;ClassLoader&lt;/code&gt; has an associated parent class loader. When requested to find a class or resource, a &lt;code&gt;ClassLoader&lt;/code&gt; instance will usually delegate the search for the class or resource to its parent class loader before attempting to find the class or resource itself.</source>
          <target state="translated">该 &lt;code&gt;ClassLoader&lt;/code&gt; 类使用委托模型来搜索类和资源。每个 &lt;code&gt;ClassLoader&lt;/code&gt; 实例都有一个关联的父类加载器。当请求查找类或资源时， &lt;code&gt;ClassLoader&lt;/code&gt; 实例通常会在尝试查找类或资源本身之前将对类或资源的搜索委托给其父类加载器。</target>
        </trans-unit>
        <trans-unit id="7baf7494690c1ab3f8e2f12b250cac6e80e44abb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Clip&lt;/code&gt; interface represents a special kind of data line whose audio data can be loaded prior to playback, instead of being streamed in real time.</source>
          <target state="translated">的 &lt;code&gt;Clip&lt;/code&gt; 接口表示一种特殊的数据线的音频数据可以事先被加载到播放，而不是被流式传输的实时性。</target>
        </trans-unit>
        <trans-unit id="6af58165956634b3a8bd98f0b10e843e579a86b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Clob&lt;/code&gt; interface provides methods for getting the length of an SQL &lt;code&gt;CLOB&lt;/code&gt; (Character Large Object) value, for materializing a &lt;code&gt;CLOB&lt;/code&gt; value on the client, and for searching for a substring or &lt;code&gt;CLOB&lt;/code&gt; object within a &lt;code&gt;CLOB&lt;/code&gt; value. Methods in the interfaces &lt;a href=&quot;resultset&quot;&gt;&lt;code&gt;ResultSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;callablestatement&quot;&gt;&lt;code&gt;CallableStatement&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;preparedstatement&quot;&gt;&lt;code&gt;PreparedStatement&lt;/code&gt;&lt;/a&gt;, such as &lt;code&gt;getClob&lt;/code&gt; and &lt;code&gt;setClob&lt;/code&gt; allow a programmer to access an SQL &lt;code&gt;CLOB&lt;/code&gt; value. In addition, this interface has methods for updating a &lt;code&gt;CLOB&lt;/code&gt; value.</source>
          <target state="translated">所述 &lt;code&gt;Clob&lt;/code&gt; 接口提供了用于获取一个SQL的长度的方法 &lt;code&gt;CLOB&lt;/code&gt; （字符大对象）的值，物化一个 &lt;code&gt;CLOB&lt;/code&gt; 在客户端上的值，和用于搜索字符串或 &lt;code&gt;CLOB&lt;/code&gt; 一个内对象 &lt;code&gt;CLOB&lt;/code&gt; 值。接口&lt;a href=&quot;resultset&quot;&gt; &lt;code&gt;ResultSet&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;callablestatement&quot;&gt; &lt;code&gt;CallableStatement&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;preparedstatement&quot;&gt; &lt;code&gt;PreparedStatement&lt;/code&gt; 中的方法&lt;/a&gt;（如 &lt;code&gt;getClob&lt;/code&gt; 和 &lt;code&gt;setClob&lt;/code&gt; )允许程序员访问SQL &lt;code&gt;CLOB&lt;/code&gt; 值。此外，此接口还包含用于更新 &lt;code&gt;CLOB&lt;/code&gt; 值的方法。</target>
        </trans-unit>
        <trans-unit id="07dd3f9173350c44103b58ad3909560986b18dcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CodecSet&lt;/code&gt; class creates and saves a single service instance at initialization:</source>
          <target state="translated">该 &lt;code&gt;CodecSet&lt;/code&gt; 类创建和初始化时节省了一个服务实例：</target>
        </trans-unit>
        <trans-unit id="cf493d6742a6c242a0b1d360dfba83fb4b87d243" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollationElementIterator&lt;/code&gt; class is used as an iterator to walk through each character of an international string.</source>
          <target state="translated">该 &lt;code&gt;CollationElementIterator&lt;/code&gt; 类用作一个迭代器通过国际字符串的每个字符行走。</target>
        </trans-unit>
        <trans-unit id="46ce50a913e7c2a368bfe8ae348e20f4b0760cdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollationElementIterator&lt;/code&gt; class is used as an iterator to walk through each character of an international string. Use the iterator to return the ordering priority of the positioned character. The ordering priority of a character, which we refer to as a key, defines how a character is collated in the given collation object.</source>
          <target state="translated">该 &lt;code&gt;CollationElementIterator&lt;/code&gt; 类用作一个迭代器通过国际字符串的每个字符行走。使用迭代器返回定位字符的排序优先级。字符的排序优先级（我们称为键）定义了如何在给定的整理对象中整理字符。</target>
        </trans-unit>
        <trans-unit id="7933f59bdf875c37eb441af7f9a60a666a8d3fcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collator&lt;/code&gt; class performs locale-sensitive &lt;code&gt;String&lt;/code&gt; comparison.</source>
          <target state="translated">该 &lt;code&gt;Collator&lt;/code&gt; 类执行区分语言环境 &lt;code&gt;String&lt;/code&gt; 比较。</target>
        </trans-unit>
        <trans-unit id="bb398f128eef70308b7f92e45e6eb18ce6533c73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collator&lt;/code&gt; class performs locale-sensitive &lt;code&gt;String&lt;/code&gt; comparison. You use this class to build searching and sorting routines for natural language text.</source>
          <target state="translated">该 &lt;code&gt;Collator&lt;/code&gt; 类执行区分语言环境 &lt;code&gt;String&lt;/code&gt; 比较。您可以使用此类为自然语言文本构建搜索和排序例程。</target>
        </trans-unit>
        <trans-unit id="ff9824bbcacb67b79596d130b57096444e5903bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Collection&lt;/code&gt; is &lt;b&gt;not&lt;/b&gt; copied. Instead, a reference is used. This allows the caller to subsequently add or remove &lt;code&gt;Certificates&lt;/code&gt; or &lt;code&gt;CRL&lt;/code&gt;s from the &lt;code&gt;Collection&lt;/code&gt;, thus changing the set of &lt;code&gt;Certificates&lt;/code&gt; or &lt;code&gt;CRL&lt;/code&gt;s available to the Collection &lt;code&gt;CertStore&lt;/code&gt;. The Collection &lt;code&gt;CertStore&lt;/code&gt; will not modify the contents of the &lt;code&gt;Collection&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;Collection&lt;/code&gt; 是&lt;b&gt;不是&lt;/b&gt;复制。而是使用参考。这允许调用者随后从 &lt;code&gt;Collection&lt;/code&gt; 添加或删除 &lt;code&gt;Certificates&lt;/code&gt; 或 &lt;code&gt;CRL&lt;/code&gt; ，从而更改可用于集合 &lt;code&gt;CertStore&lt;/code&gt; 的 &lt;code&gt;Certificates&lt;/code&gt; 或 &lt;code&gt;CRL&lt;/code&gt; 的集合。集合 &lt;code&gt;CertStore&lt;/code&gt; 不会修改 &lt;code&gt;Collection&lt;/code&gt; 的内容。</target>
        </trans-unit>
        <trans-unit id="3c69073fb9b03a0f7c9780da4af3a0f3feb090b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Color&lt;/code&gt; class is used to encapsulate colors in the default sRGB color space or colors in arbitrary color spaces identified by a &lt;a href=&quot;color/colorspace&quot;&gt;&lt;code&gt;ColorSpace&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;Color&lt;/code&gt; 类被用于封装的颜色在由标识的任意颜色空间默认的sRGB色彩空间或颜色&lt;a href=&quot;color/colorspace&quot;&gt; &lt;code&gt;ColorSpace&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="21ae54b2b1e89c6da1ec6fc0b6d472592bb788c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Color&lt;/code&gt; class is used to encapsulate colors in the default sRGB color space or colors in arbitrary color spaces identified by a &lt;a href=&quot;color/colorspace&quot;&gt;&lt;code&gt;ColorSpace&lt;/code&gt;&lt;/a&gt;. Every color has an implicit alpha value of 1.0 or an explicit one provided in the constructor. The alpha value defines the transparency of a color and can be represented by a float value in the range 0.0 - 1.0 or 0 - 255. An alpha value of 1.0 or 255 means that the color is completely opaque and an alpha value of 0 or 0.0 means that the color is completely transparent. When constructing a &lt;code&gt;Color&lt;/code&gt; with an explicit alpha or getting the color/alpha components of a &lt;code&gt;Color&lt;/code&gt;, the color components are never premultiplied by the alpha component.</source>
          <target state="translated">该 &lt;code&gt;Color&lt;/code&gt; 类被用于封装的颜色在由标识的任意颜色空间默认的sRGB色彩空间或颜色&lt;a href=&quot;color/colorspace&quot;&gt; &lt;code&gt;ColorSpace&lt;/code&gt; &lt;/a&gt;。每种颜色都具有1.0的隐式alpha值或构造函数中提供的显式的alpha值。Alpha值定义颜色的透明度，并且可以用0.0-1.0或0-255范围内的浮点值表示。Alpha值1.0或255表示颜色是完全不透明的，而Alpha值是0或0.0表示颜色是完全透明的。当构造一个 &lt;code&gt;Color&lt;/code&gt; 具有显式&amp;alpha;或得到一个的颜色/ alpha分量 &lt;code&gt;Color&lt;/code&gt; ，颜色分量决不会被预乘alpha分量。</target>
        </trans-unit>
        <trans-unit id="d8df4ba8ae0dc0f5f0355942a0c009a9a2b405bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; abstract class encapsulates the methods for translating a pixel value to color components (for example, red, green, and blue) and an alpha component.</source>
          <target state="translated">所述 &lt;code&gt;ColorModel&lt;/code&gt; 抽象类封装的像素值转换为颜色分量（例如，红，绿，蓝）的方法和alpha分量。</target>
        </trans-unit>
        <trans-unit id="10d079471072cbc9898dcdd013b52a5be906fd2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; abstract class encapsulates the methods for translating a pixel value to color components (for example, red, green, and blue) and an alpha component. In order to render an image to the screen, a printer, or another image, pixel values must be converted to color and alpha components. As arguments to or return values from methods of this class, pixels are represented as 32-bit ints or as arrays of primitive types. The number, order, and interpretation of color components for a &lt;code&gt;ColorModel&lt;/code&gt; is specified by its &lt;code&gt;ColorSpace&lt;/code&gt;. A &lt;code&gt;ColorModel&lt;/code&gt; used with pixel data that does not include alpha information treats all pixels as opaque, which is an alpha value of 1.0.</source>
          <target state="translated">所述 &lt;code&gt;ColorModel&lt;/code&gt; 抽象类封装的像素值转换为颜色分量（例如，红，绿，蓝）的方法和alpha分量。为了将图像渲染到屏幕，打印机或其他图像，必须将像素值转换为颜色和alpha分量。作为此类方法的参数或从此类方法返回值，像素表示为32位整数或原始类型的数组。 &lt;code&gt;ColorModel&lt;/code&gt; 的颜色组件的数量，顺序和解释由其 &lt;code&gt;ColorSpace&lt;/code&gt; 指定。与不包含alpha信息的像素数据一起使用的 &lt;code&gt;ColorModel&lt;/code&gt; 会将所有像素视为不透明，即alpha值为1.0。</target>
        </trans-unit>
        <trans-unit id="d35f3c2bfd2b65a30b65d760bed1b5a6fe2c1a67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; to be replaced by &lt;code&gt;newmodel&lt;/code&gt; when the user calls &lt;a href=&quot;#substituteColorModel(java.awt.image.ColorModel,java.awt.image.ColorModel)&quot;&gt;&lt;code&gt;substituteColorModel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">该 &lt;code&gt;ColorModel&lt;/code&gt; 中要被替换 &lt;code&gt;newmodel&lt;/code&gt; 当用户调用&lt;a href=&quot;#substituteColorModel(java.awt.image.ColorModel,java.awt.image.ColorModel)&quot;&gt; &lt;code&gt;substituteColorModel&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7e13ccfa1d055a7b6b34e9e36830f7d323272c74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; to be used as a prototype.</source>
          <target state="translated">用作原型的 &lt;code&gt;ColorModel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07d67a2555eefc3e26bbb2290d72ad886426f461" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ColorModel&lt;/code&gt; with which to replace &lt;code&gt;origmodel&lt;/code&gt; when the user calls &lt;code&gt;substituteColorModel&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;ColorModel&lt;/code&gt; 中用来替换 &lt;code&gt;origmodel&lt;/code&gt; 当用户调用 &lt;code&gt;substituteColorModel&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c82336186c250b7812d70c226ebe5d94f5b9c56d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services.</source>
          <target state="translated">该 &lt;code&gt;Compiler&lt;/code&gt; 类主要支持Java到本机代码的编译器及相关服务。</target>
        </trans-unit>
        <trans-unit id="5baf789bd5f3f16f61d707fd5b133cbba7948544" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services. By design, the &lt;code&gt;Compiler&lt;/code&gt; class does nothing; it serves as a placeholder for a JIT compiler implementation.</source>
          <target state="translated">该 &lt;code&gt;Compiler&lt;/code&gt; 类主要支持Java到本机代码的编译器及相关服务。按照设计， &lt;code&gt;Compiler&lt;/code&gt; 类不执行任何操作。它充当JIT编译器实现的占位符。</target>
        </trans-unit>
        <trans-unit id="95f3169e558b0c372a14747fccf5f156a6f82f30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Compiler&lt;/code&gt; class is provided to support Java-to-native-code compilers and related services. By design, the &lt;code&gt;Compiler&lt;/code&gt; class does nothing; it serves as a placeholder for a JIT compiler implementation. If no compiler is available, these methods do nothing.</source>
          <target state="translated">该 &lt;code&gt;Compiler&lt;/code&gt; 类主要支持Java到本机代码的编译器及相关服务。按照设计， &lt;code&gt;Compiler&lt;/code&gt; 类不执行任何操作。它充当JIT编译器实现的占位符。如果没有可用的编译器，则这些方法将不执行任何操作。</target>
        </trans-unit>
        <trans-unit id="1a6f291fb969665f5e6eb462efced79ed592de7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompletableFuture&lt;/code&gt; returned from this method can complete exceptionally with:</source>
          <target state="translated">从此方法返回的 &lt;code&gt;CompletableFuture&lt;/code&gt; 可以异常完成：</target>
        </trans-unit>
        <trans-unit id="f3febd1deaade91a8663540a2372771cb667def8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">与此 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 关联的 &lt;code&gt;Component&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2be0c7bbb7ec8789f37ff67646bc9f80f4ad1077" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; class is the abstract superclass of the nonmenu-related Abstract Window Toolkit components. Class &lt;code&gt;Component&lt;/code&gt; can also be extended directly to create a lightweight component. A lightweight component is a component that is not associated with a native window. On the contrary, a heavyweight component is associated with a native window. The &lt;a href=&quot;#isLightweight()&quot;&gt;&lt;code&gt;isLightweight()&lt;/code&gt;&lt;/a&gt; method may be used to distinguish between the two kinds of the components.</source>
          <target state="translated">该 &lt;code&gt;Component&lt;/code&gt; 类是菜单不相关的Abstract Window Toolkit组件的抽象超类。类 &lt;code&gt;Component&lt;/code&gt; 也可以直接扩展以创建轻量级组件。轻量级组件是不与本机窗口关联的组件。相反，重量级组件与本机窗口关联。所述&lt;a href=&quot;#isLightweight()&quot;&gt; &lt;code&gt;isLightweight()&lt;/code&gt; &lt;/a&gt;方法可用于两种部件之间进行区分。</target>
        </trans-unit>
        <trans-unit id="c1f89d364395518e9ac2aed1058cf59d2cb77a09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; is displayed in the dialog.</source>
          <target state="translated">该 &lt;code&gt;Component&lt;/code&gt; 显示在对话框中。</target>
        </trans-unit>
        <trans-unit id="6b7b87975f3751926d2934ab14ea9733cdca5f0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Component&lt;/code&gt; object on which to draw.</source>
          <target state="translated">要在其上绘制的 &lt;code&gt;Component&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="acac5829c15b68b96fc4d36bd7f296d3d684ea47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Composite&lt;/code&gt; interface, along with &lt;a href=&quot;compositecontext&quot;&gt;&lt;code&gt;CompositeContext&lt;/code&gt;&lt;/a&gt;, defines the methods to compose a draw primitive with the underlying graphics area.</source>
          <target state="translated">的 &lt;code&gt;Composite&lt;/code&gt; 界面，随着&lt;a href=&quot;compositecontext&quot;&gt; &lt;code&gt;CompositeContext&lt;/code&gt; &lt;/a&gt;，定义了方法，以组成一个绘制图元与基础图形区域。</target>
        </trans-unit>
        <trans-unit id="cf0d38b51f631ead3f513f247eb036d26256b308" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Composite&lt;/code&gt; interface, along with &lt;a href=&quot;compositecontext&quot;&gt;&lt;code&gt;CompositeContext&lt;/code&gt;&lt;/a&gt;, defines the methods to compose a draw primitive with the underlying graphics area. After the &lt;code&gt;Composite&lt;/code&gt; is set in the &lt;a href=&quot;graphics2d&quot;&gt;&lt;code&gt;Graphics2D&lt;/code&gt;&lt;/a&gt; context, it combines a shape, text, or an image being rendered with the colors that have already been rendered according to pre-defined rules. The classes implementing this interface provide the rules and a method to create the context for a particular operation. &lt;code&gt;CompositeContext&lt;/code&gt; is an environment used by the compositing operation, which is created by the &lt;code&gt;Graphics2D&lt;/code&gt; prior to the start of the operation. &lt;code&gt;CompositeContext&lt;/code&gt; contains private information and resources needed for a compositing operation. When the &lt;code&gt;CompositeContext&lt;/code&gt; is no longer needed, the &lt;code&gt;Graphics2D&lt;/code&gt; object disposes of it in order to reclaim resources allocated for the operation.</source>
          <target state="translated">的 &lt;code&gt;Composite&lt;/code&gt; 界面，随着&lt;a href=&quot;compositecontext&quot;&gt; &lt;code&gt;CompositeContext&lt;/code&gt; &lt;/a&gt;，定义了方法，以组成一个绘制图元与基础图形区域。在&lt;a href=&quot;graphics2d&quot;&gt; &lt;code&gt;Graphics2D&lt;/code&gt; &lt;/a&gt;上下文中设置&amp;ldquo; &lt;code&gt;Composite&lt;/code&gt; 后，它将根据预先定义的规则将要渲染的形状，文本或图像与已经渲染的颜色进行组合。实现此接口的类提供规则和方法来为特定操作创建上下文。 &lt;code&gt;CompositeContext&lt;/code&gt; 是合成操作所使用的环境，它是由 &lt;code&gt;Graphics2D&lt;/code&gt; 在操作开始之前创建的。 &lt;code&gt;CompositeContext&lt;/code&gt; 包含合成操作所需的私人信息和资源。当不再需要 &lt;code&gt;CompositeContext&lt;/code&gt; 时， &lt;code&gt;Graphics2D&lt;/code&gt; 对象将其处置以回收分配给该操作的资源。</target>
        </trans-unit>
        <trans-unit id="137379a42e103c94a23d7eb739b5b792b28cf148" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeContext&lt;/code&gt; interface defines the encapsulated and optimized environment for a compositing operation.</source>
          <target state="translated">所述 &lt;code&gt;CompositeContext&lt;/code&gt; 接口定义为复合操作的封装和优化的环境。</target>
        </trans-unit>
        <trans-unit id="990a0bd1e3d1934bd209638240fed6e170187493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeContext&lt;/code&gt; interface defines the encapsulated and optimized environment for a compositing operation. &lt;code&gt;CompositeContext&lt;/code&gt; objects maintain state for compositing operations. In a multi-threaded environment, several contexts can exist simultaneously for a single &lt;a href=&quot;composite&quot;&gt;&lt;code&gt;Composite&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;CompositeContext&lt;/code&gt; 接口定义为复合操作的封装和优化的环境。 &lt;code&gt;CompositeContext&lt;/code&gt; 对象维护用于合成操作的状态。在多线程环境中，单个&lt;a href=&quot;composite&quot;&gt; &lt;code&gt;Composite&lt;/code&gt; &lt;/a&gt;对象可以同时存在多个上下文。</target>
        </trans-unit>
        <trans-unit id="7a10136967e2d7cca0ff7de90479711b3afa89dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeData&lt;/code&gt; interface specifies the behavior of a specific type of complex</source>
          <target state="translated">所述 &lt;code&gt;CompositeData&lt;/code&gt; 接口指定的复合物的特定类型的行为</target>
        </trans-unit>
        <trans-unit id="430611e20757b0f69b3d3c4ac8a5e89a65ae2e00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeDataSupport&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;CompositeDataSupport&lt;/code&gt; 类是</target>
        </trans-unit>
        <trans-unit id="b09b9ac999e11e7f7254865f0fdfb600871077d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeType&lt;/code&gt; class is the</source>
          <target state="translated">该 &lt;code&gt;CompositeType&lt;/code&gt; 类是</target>
        </trans-unit>
        <trans-unit id="c17feb321bde2a79f87864039c7202bea866d7a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeType&lt;/code&gt; that will appear in the &lt;code&gt;openType&lt;/code&gt; field of the &lt;a href=&quot;../descriptor&quot;&gt;&lt;code&gt;Descriptor&lt;/code&gt;&lt;/a&gt; for an attribute or operation of this type will show only the &lt;code&gt;units&lt;/code&gt; item, but the actual &lt;code&gt;CompositeData&lt;/code&gt; that is generated will have both &lt;code&gt;units&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;CompositeType&lt;/code&gt; 将出现在所述 &lt;code&gt;openType&lt;/code&gt; 所述的字段&lt;a href=&quot;../descriptor&quot;&gt; &lt;code&gt;Descriptor&lt;/code&gt; &lt;/a&gt;为这种类型的属性或操作中，只显示 &lt;code&gt;units&lt;/code&gt; 的项目，但实际 &lt;code&gt;CompositeData&lt;/code&gt; 所生成将具有两个 &lt;code&gt;units&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c202cf4fd37a3437bcc0030cec4facf3571e0c50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Connection&lt;/code&gt; and &lt;code&gt;DataSource&lt;/code&gt; property &lt;code&gt;escapeProcessing&lt;/code&gt; may be used to change the default escape processing behavior. A value of true (the default) enables escape Processing for all &lt;code&gt;Statement&lt;/code&gt; objects. A value of false disables escape processing for all &lt;code&gt;Statement&lt;/code&gt; objects. The &lt;code&gt;setEscapeProcessing&lt;/code&gt; method may be used to specify the escape processing behavior for an individual &lt;code&gt;Statement&lt;/code&gt; object.</source>
          <target state="translated">该 &lt;code&gt;Connection&lt;/code&gt; 和 &lt;code&gt;DataSource&lt;/code&gt; 物业 &lt;code&gt;escapeProcessing&lt;/code&gt; 可用于更改默认的转义处理行为。值为true（默认值）将对所有 &lt;code&gt;Statement&lt;/code&gt; 对象启用转义处理。值为false禁用所有 &lt;code&gt;Statement&lt;/code&gt; 对象的转义处理。该 &lt;code&gt;setEscapeProcessing&lt;/code&gt; 方法可以用于指定个体中转义处理行为 &lt;code&gt;Statement&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="3a9eb916ae0e4a95b868817dcad27e5892ea6182" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConnectionEventListener&lt;/code&gt; interface is implemented by a connection pooling component. A connection pooling component will usually be provided by a JDBC driver vendor or another system software vendor. A JDBC driver notifies a &lt;code&gt;ConnectionEventListener&lt;/code&gt; object when an application is finished using a pooled connection with which the listener has registered. The notification occurs after the application calls the method &lt;code&gt;close&lt;/code&gt; on its representation of a &lt;code&gt;PooledConnection&lt;/code&gt; object. A &lt;code&gt;ConnectionEventListener&lt;/code&gt; is also notified when a connection error occurs due to the fact that the &lt;code&gt;PooledConnection&lt;/code&gt; is unfit for future use---the server has crashed, for example. The listener is notified by the JDBC driver just before the driver throws an &lt;code&gt;SQLException&lt;/code&gt; to the application using the &lt;code&gt;PooledConnection&lt;/code&gt; object.</source>
          <target state="translated">所述 &lt;code&gt;ConnectionEventListener&lt;/code&gt; 接口由连接池组件实现。连接池组件通常由JDBC驱动程序供应商或其他系统软件供应商提供。当应用程序使用侦听器已注册的池化连接完成应用程序时，JDBC驱动程序会通知 &lt;code&gt;ConnectionEventListener&lt;/code&gt; 对象。在应用程序调用方法 &lt;code&gt;close&lt;/code&gt; 其 &lt;code&gt;PooledConnection&lt;/code&gt; 对象的表示形式之后，将发生通知。一个 &lt;code&gt;ConnectionEventListener&lt;/code&gt; 时出现连接错误也被通知因事实 &lt;code&gt;PooledConnection&lt;/code&gt; 不适合将来使用-例如，服务器已崩溃。在驱动程序使用 &lt;code&gt;PooledConnection&lt;/code&gt; 对象向应用程序抛出 &lt;code&gt;SQLException&lt;/code&gt; 之前，JDBC驱动程序将通知侦听器。</target>
        </trans-unit>
        <trans-unit id="c4f8fc7d40062e4c808ea460664fdc3d048a2824" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConsoleHandler&lt;/code&gt; is configured based on &lt;code&gt;LogManager&lt;/code&gt; properties (or their default values).</source>
          <target state="translated">所述 &lt;code&gt;ConsoleHandler&lt;/code&gt; 是基于配置 &lt;code&gt;LogManager&lt;/code&gt; 的属性（或它们的默认值）。</target>
        </trans-unit>
        <trans-unit id="468370b0a51ca057342fdb1fe58204389f4fdab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Constructor&lt;/code&gt; object for the constructor with the specified parameter list</source>
          <target state="translated">具有指定参数列表的构造函数的 &lt;code&gt;Constructor&lt;/code&gt; 对象</target>
        </trans-unit>
        <trans-unit id="051ebba82902b4ec2086b2f151c93e0f826e2664" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Container&lt;/code&gt;, message, icon, and buttons are all determined from abstract methods.</source>
          <target state="translated">的 &lt;code&gt;Container&lt;/code&gt; ，消息，图标和按钮都是从抽象方法测定。</target>
        </trans-unit>
        <trans-unit id="bfe2741b9b06f16764928ba36a45cb667f568913" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContentHandlerFactory&lt;/code&gt; instance is used to construct a content handler from a content type</source>
          <target state="translated">所述 &lt;code&gt;ContentHandlerFactory&lt;/code&gt; 实例用于从内容类型构造内容处理程序</target>
        </trans-unit>
        <trans-unit id="0bf6f4750ebb0cf949297967135c0fd9fe3656d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ContentHandlerFactory&lt;/code&gt; instance is used to construct a content handler from a content type.</source>
          <target state="translated">所述 &lt;code&gt;ContentHandlerFactory&lt;/code&gt; 实例用于从内容类型建立一个内容处理程序。</target>
        </trans-unit>
        <trans-unit id="424256ecdb394f5cdc64e1890526b21ddcaf507b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has processed a requested type of MIDI control-change event.</source>
          <target state="translated">该 &lt;code&gt;ControllerEventListener&lt;/code&gt; 接口应由其实例需要在一个通知来实现&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt;已经处理MIDI控制更改事件的请求类型。</target>
        </trans-unit>
        <trans-unit id="35ef92f3ccc2d6c39a994a573270b73354f21f4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;a href=&quot;sequencer&quot;&gt;&lt;code&gt;Sequencer&lt;/code&gt;&lt;/a&gt; has processed a requested type of MIDI control-change event. To register a &lt;code&gt;ControllerEventListener&lt;/code&gt; object to receive such notifications, invoke the &lt;a href=&quot;sequencer#addControllerEventListener(javax.sound.midi.ControllerEventListener,int%5B%5D)&quot;&gt;&lt;code&gt;addControllerEventListener&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;, specifying the types of MIDI controllers about which you are interested in getting control-change notifications.</source>
          <target state="translated">该 &lt;code&gt;ControllerEventListener&lt;/code&gt; 接口应由其实例需要在一个通知来实现&lt;a href=&quot;sequencer&quot;&gt; &lt;code&gt;Sequencer&lt;/code&gt; &lt;/a&gt;已经处理MIDI控制更改事件的请求类型。要注册 &lt;code&gt;ControllerEventListener&lt;/code&gt; 对象以接收此类通知，请调用 &lt;code&gt;Sequencer&lt;/code&gt; 的&lt;a href=&quot;sequencer#addControllerEventListener(javax.sound.midi.ControllerEventListener,int%5B%5D)&quot;&gt; &lt;code&gt;addControllerEventListener&lt;/code&gt; &lt;/a&gt;方法，并指定要获取其控制更改通知所感兴趣的MIDI控制器的类型。</target>
        </trans-unit>
        <trans-unit id="6e23ef999b2d94dd091ae6002a808cf050bfabb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;Sequencer&lt;/code&gt; has processed a requested type of MIDI control-change event.</source>
          <target state="translated">该 &lt;code&gt;ControllerEventListener&lt;/code&gt; 接口应由其实例需要在一个通知来实现 &lt;code&gt;Sequencer&lt;/code&gt; 已经处理MIDI控制更改事件的请求类型。</target>
        </trans-unit>
        <trans-unit id="f48b495c5fff66a44f844b4e81d54ec584a1e19d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ControllerEventListener&lt;/code&gt; interface should be implemented by classes whose instances need to be notified when a &lt;code&gt;Sequencer&lt;/code&gt; has processed a requested type of MIDI control-change event. To register a &lt;code&gt;ControllerEventListener&lt;/code&gt; object to receive such notifications, invoke the &lt;a href=&quot;sequencer#addControllerEventListener-javax.sound.midi.ControllerEventListener-int:A-&quot;&gt;&lt;code&gt;addControllerEventListener&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;Sequencer&lt;/code&gt;, specifying the types of MIDI controllers about which you are interested in getting control-change notifications.</source>
          <target state="translated">该 &lt;code&gt;ControllerEventListener&lt;/code&gt; 接口应由其实例需要在一个通知来实现 &lt;code&gt;Sequencer&lt;/code&gt; 已经处理MIDI控制更改事件的请求类型。要注册 &lt;code&gt;ControllerEventListener&lt;/code&gt; 对象以接收此类通知，请调用 &lt;code&gt;Sequencer&lt;/code&gt; 的&lt;a href=&quot;sequencer#addControllerEventListener-javax.sound.midi.ControllerEventListener-int:A-&quot;&gt; &lt;code&gt;addControllerEventListener&lt;/code&gt; &lt;/a&gt;方法，并指定要获取其控制更改通知所感兴趣的MIDI控制器的类型。</target>
        </trans-unit>
        <trans-unit id="b2fce0c6c12d1a0ee0036474b6866c982194e1e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Counter&lt;/code&gt; interface is used to represent any counter or counters function value.</source>
          <target state="translated">该 &lt;code&gt;Counter&lt;/code&gt; 接口被用于表示任何计数器或计数器函数值。</target>
        </trans-unit>
        <trans-unit id="140fb843e88aaf0f5963f000d698910d05115402" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Counter&lt;/code&gt; interface is used to represent any counter or counters function value. This interface reflects the values in the underlying style property.</source>
          <target state="translated">该 &lt;code&gt;Counter&lt;/code&gt; 接口被用于表示任何计数器或计数器函数值。此接口反映基础样式属性中的值。</target>
        </trans-unit>
        <trans-unit id="4a4fb62b40f1aa556d6f9a218a85349560049c32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CubicCurve2D&lt;/code&gt; class defines a cubic parametric curve segment in &lt;code&gt;(x,y)&lt;/code&gt; coordinate space.</source>
          <target state="translated">所述 &lt;code&gt;CubicCurve2D&lt;/code&gt; 类定义了在三次参数曲线段 &lt;code&gt;(x,y)&lt;/code&gt; 坐标空间。</target>
        </trans-unit>
        <trans-unit id="8c1e7fd606cd7d58420cac08a722d5a8762857c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CyclicBarrier&lt;/code&gt; uses an all-or-none breakage model for failed synchronization attempts: If a thread leaves a barrier point prematurely because of interruption, failure, or timeout, all other threads waiting at that barrier point will also leave abnormally via &lt;a href=&quot;brokenbarrierexception&quot;&gt;&lt;code&gt;BrokenBarrierException&lt;/code&gt;&lt;/a&gt; (or &lt;a href=&quot;../../lang/interruptedexception&quot;&gt;&lt;code&gt;InterruptedException&lt;/code&gt;&lt;/a&gt; if they too were interrupted at about the same time).</source>
          <target state="translated">该 &lt;code&gt;CyclicBarrier&lt;/code&gt; 使用了失败的同步尝试全或无破损模式：如果一个线程叶子过早，因为中断，失败，或者超时的屏障点，其他所有线程在该屏障点等待也通过留下异常&lt;a href=&quot;brokenbarrierexception&quot;&gt; &lt;code&gt;BrokenBarrierException&lt;/code&gt; &lt;/a&gt;（或&lt;a href=&quot;../../lang/interruptedexception&quot;&gt; &lt;code&gt;InterruptedException&lt;/code&gt; 的&lt;/a&gt;如果他们也大约同时被打断了）。</target>
        </trans-unit>
        <trans-unit id="0c783e00b0bafedd1ae14f2bb7e2874a439670e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; interface represents the configuration of a document and maintains a table of recognized parameters.</source>
          <target state="translated">所述 &lt;code&gt;DOMConfiguration&lt;/code&gt; 接口表示文档的结构并保持可识别的参数的表格。</target>
        </trans-unit>
        <trans-unit id="82b11a01b54776ee5001861460779f6d398ad23d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; interface represents the configuration of a document and maintains a table of recognized parameters. Using the configuration, it is possible to change &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; behavior, such as replacing the &lt;code&gt;CDATASection&lt;/code&gt; nodes with &lt;code&gt;Text&lt;/code&gt; nodes or specifying the type of the schema that must be used when the validation of the &lt;code&gt;Document&lt;/code&gt; is requested. &lt;code&gt;DOMConfiguration&lt;/code&gt; objects are also used in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM Level 3 Load and Save&lt;/a&gt;] in the &lt;code&gt;DOMParser&lt;/code&gt; and &lt;code&gt;DOMSerializer&lt;/code&gt; interfaces.</source>
          <target state="translated">所述 &lt;code&gt;DOMConfiguration&lt;/code&gt; 接口表示文档的结构并保持可识别的参数的表格。使用该配置，可以更改 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 行为，例如用 &lt;code&gt;Text&lt;/code&gt; 节点替换 &lt;code&gt;CDATASection&lt;/code&gt; 节点或指定在请求验证 &lt;code&gt;Document&lt;/code&gt; 时必须使用的架构类型。 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象还用于 &lt;code&gt;DOMParser&lt;/code&gt; 和 &lt;code&gt;DOMSerializer&lt;/code&gt; 接口的[ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM Level 3加载和保存&lt;/a&gt;]中。</target>
        </trans-unit>
        <trans-unit id="d7afc7ff46a33fe4f21b25b7a573a81b30327775" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; interface represents the configuration of a document and maintains a table of recognized parameters. Using the configuration, it is possible to change &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; behavior, such as replacing the &lt;code&gt;CDATASection&lt;/code&gt; nodes with &lt;code&gt;Text&lt;/code&gt; nodes or specifying the type of the schema that must be used when the validation of the &lt;code&gt;Document&lt;/code&gt; is requested. &lt;code&gt;DOMConfiguration&lt;/code&gt; objects are also used in [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM Level 3 Load and Save&lt;/a&gt;] in the &lt;code&gt;DOMParser&lt;/code&gt; and &lt;code&gt;DOMSerializer&lt;/code&gt; interfaces.</source>
          <target state="translated">所述 &lt;code&gt;DOMConfiguration&lt;/code&gt; 接口表示文档的结构并保持可识别的参数的表格。使用该配置，可以更改 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 行为，例如用 &lt;code&gt;Text&lt;/code&gt; 节点替换 &lt;code&gt;CDATASection&lt;/code&gt; 节点或指定在请求验证 &lt;code&gt;Document&lt;/code&gt; 时必须使用的架构类型。 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象还用于 &lt;code&gt;DOMParser&lt;/code&gt; 和 &lt;code&gt;DOMSerializer&lt;/code&gt; 接口的[ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407&quot;&gt;DOM Level 3加载和保存&lt;/a&gt;]中。</target>
        </trans-unit>
        <trans-unit id="434d1eb0d1e34777b50a09a3a9b1f4c4f63d9498" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used by the &lt;code&gt;LSSerializer&lt;/code&gt; when serializing a DOM node.</source>
          <target state="translated">&lt;code&gt;LSSerializer&lt;/code&gt; 在序列化DOM节点时使用的 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="fb3314e745fe451cf0f5a36a430396ef9aeed08d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used when parsing an input source.</source>
          <target state="translated">解析输入源时使用的 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="71c48b09bc18768991965014c902a16366937d28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMConfiguration&lt;/code&gt; object used when parsing an input source. This &lt;code&gt;DOMConfiguration&lt;/code&gt; is specific to the parse operation. No parameter values from this &lt;code&gt;DOMConfiguration&lt;/code&gt; object are passed automatically to the &lt;code&gt;DOMConfiguration&lt;/code&gt; object on the &lt;code&gt;Document&lt;/code&gt; that is created, or used, by the parse operation. The DOM application is responsible for passing any needed parameter values from this &lt;code&gt;DOMConfiguration&lt;/code&gt; object to the &lt;code&gt;DOMConfiguration&lt;/code&gt; object referenced by the &lt;code&gt;Document&lt;/code&gt; object.</source>
          <target state="translated">解析输入源时使用的 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象。此 &lt;code&gt;DOMConfiguration&lt;/code&gt; 特定于解析操作。没有此 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象的参数值会自动传递给由解析操作创建或使用的 &lt;code&gt;Document&lt;/code&gt; 上的 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象。的DOM应用程序负责从该传递任何所需的参数值 &lt;code&gt;DOMConfiguration&lt;/code&gt; 对象到 &lt;code&gt;DOMConfiguration&lt;/code&gt; 通过引用的对象 &lt;code&gt;Document&lt;/code&gt; 的对象。</target>
        </trans-unit>
        <trans-unit id="5f940640249c3fa8bbdd06a679530451034e0110" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; at the &lt;code&gt;index&lt;/code&gt; th position in the &lt;code&gt;DOMImplementationList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="translated">所述 &lt;code&gt;DOMImplementation&lt;/code&gt; 所述 &lt;code&gt;index&lt;/code&gt; 中的个位置 &lt;code&gt;DOMImplementationList&lt;/code&gt; ，或 &lt;code&gt;null&lt;/code&gt; ，如果不是有效的索引。</target>
        </trans-unit>
        <trans-unit id="cb86f01320ceee768f292b60f82902619aeadbc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; interface provides a number of methods for performing operations that are independent of any particular instance of the document object model.</source>
          <target state="translated">所述 &lt;code&gt;DOMImplementation&lt;/code&gt; 接口提供了许多用于执行独立于文档对象模型的任何特定实例的操作方法。</target>
        </trans-unit>
        <trans-unit id="fa07a91096b79e4d54b620411a8b91c1db742167" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; object that handles this document.</source>
          <target state="translated">处理此文档的 &lt;code&gt;DOMImplementation&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="84eb8320fa82f23c232c3ec79be4e98b618b9c3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementation&lt;/code&gt; object that handles this document. A DOM application may use objects from multiple implementations.</source>
          <target state="translated">处理此文档的 &lt;code&gt;DOMImplementation&lt;/code&gt; 对象。DOM应用程序可以使用来自多个实现的对象。</target>
        </trans-unit>
        <trans-unit id="32d6f56247f926d99c1101675af47d5e1ee36e65" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementationList&lt;/code&gt; interface provides the abstraction of an ordered collection of DOM implementations, without defining or constraining how this collection is implemented.</source>
          <target state="translated">所述 &lt;code&gt;DOMImplementationList&lt;/code&gt; 接口提供DOM实现的有序集合的抽象，没有定义或约束如何实现此集合。</target>
        </trans-unit>
        <trans-unit id="27185a00a607aada8160bc7bfee348df09ab860e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMImplementationList&lt;/code&gt; interface provides the abstraction of an ordered collection of DOM implementations, without defining or constraining how this collection is implemented. The items in the &lt;code&gt;DOMImplementationList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">所述 &lt;code&gt;DOMImplementationList&lt;/code&gt; 接口提供DOM实现的有序集合的抽象，没有定义或约束如何实现此集合。可通过从0开始的整数索引访问 &lt;code&gt;DOMImplementationList&lt;/code&gt; 中的项目。</target>
        </trans-unit>
        <trans-unit id="d13d556105ead36068d76418e8945d9d1dfc01f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMString&lt;/code&gt; at the &lt;code&gt;index&lt;/code&gt;th position in the &lt;code&gt;DOMStringList&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if that is not a valid index.</source>
          <target state="translated">所述 &lt;code&gt;DOMString&lt;/code&gt; 在 &lt;code&gt;index&lt;/code&gt; 中的个位置 &lt;code&gt;DOMStringList&lt;/code&gt; ，或 &lt;code&gt;null&lt;/code&gt; ，如果不是有效的索引。</target>
        </trans-unit>
        <trans-unit id="9da335a9af07ced964482feeab665d0da687a500" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMStringList&lt;/code&gt; interface provides the abstraction of an ordered collection of &lt;code&gt;DOMString&lt;/code&gt; values, without defining or constraining how this collection is implemented.</source>
          <target state="translated">所述 &lt;code&gt;DOMStringList&lt;/code&gt; 接口提供的有序集合的抽象 &lt;code&gt;DOMString&lt;/code&gt; 值，没有定义或约束如何实现此集合。</target>
        </trans-unit>
        <trans-unit id="3b5b4bd5bf71b89bdf22ce123898d7c89219fb1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DOMStringList&lt;/code&gt; interface provides the abstraction of an ordered collection of &lt;code&gt;DOMString&lt;/code&gt; values, without defining or constraining how this collection is implemented. The items in the &lt;code&gt;DOMStringList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">所述 &lt;code&gt;DOMStringList&lt;/code&gt; 接口提供的有序集合的抽象 &lt;code&gt;DOMString&lt;/code&gt; 值，没有定义或约束如何实现此集合。 &lt;code&gt;DOMStringList&lt;/code&gt; 中的项目可通过从0开始的整数索引进行访问。</target>
        </trans-unit>
        <trans-unit id="26015e6375086abc108a98ed1191285ea4660c3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataFlavor&lt;/code&gt; representing a Java Image class, where:</source>
          <target state="translated">表示Java Image类的 &lt;code&gt;DataFlavor&lt;/code&gt; ，其中：</target>
        </trans-unit>
        <trans-unit id="b33800b148f0b6f48b10a4b3a89f3169859a84bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataFlavor&lt;/code&gt; representing a Java Unicode String class, where:</source>
          <target state="translated">表示Java Unicode字符串类的 &lt;code&gt;DataFlavor&lt;/code&gt; ，其中：</target>
        </trans-unit>
        <trans-unit id="c6f306f1c242fb26d9a4ec3d96f2396980617873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataFlavor&lt;/code&gt; representing plain text with Unicode encoding, where:</source>
          <target state="translated">所述 &lt;code&gt;DataFlavor&lt;/code&gt; 表示与Unicode编码，其中，纯文本：</target>
        </trans-unit>
        <trans-unit id="f41cc015a47378ec64cceb98239ef99d458497d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataInput&lt;/code&gt; interface provides for reading bytes from a binary stream and reconstructing from them data in any of the Java primitive types.</source>
          <target state="translated">所述 &lt;code&gt;DataInput&lt;/code&gt; 接口提供用于从二进制流中读取的字节和在任何Java基本类型的从中数据重建。</target>
        </trans-unit>
        <trans-unit id="713665bba38945d968dff6d6d30215a3f4b01909" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataInput&lt;/code&gt; interface provides for reading bytes from a binary stream and reconstructing from them data in any of the Java primitive types. There is also a facility for reconstructing a &lt;code&gt;String&lt;/code&gt; from data in &lt;a href=&quot;#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; format.</source>
          <target state="translated">所述 &lt;code&gt;DataInput&lt;/code&gt; 接口提供用于从二进制流中读取的字节和在任何Java基本类型的从中数据重建。还有一种功能可以从&lt;a href=&quot;#modified-utf-8&quot;&gt;UTF-8修改版&lt;/a&gt;格式的数据中重建 &lt;code&gt;String&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="55a2923cd40c06c6ccaeab383d62605e85c6dfc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataOutput&lt;/code&gt; interface provides for converting data from any of the Java primitive types to a series of bytes and writing these bytes to a binary stream.</source>
          <target state="translated">所述 &lt;code&gt;DataOutput&lt;/code&gt; 中界面提供用于从任何Java基本类型的将数据转换成一系列字节的和写入这些字节到二进制流。</target>
        </trans-unit>
        <trans-unit id="b1c1a548a4fef08005d8b50ede7de089c4162ad9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataOutput&lt;/code&gt; interface provides for converting data from any of the Java primitive types to a series of bytes and writing these bytes to a binary stream. There is also a facility for converting a &lt;code&gt;String&lt;/code&gt; into &lt;a href=&quot;datainput#modified-utf-8&quot;&gt;modified UTF-8&lt;/a&gt; format and writing the resulting series of bytes.</source>
          <target state="translated">所述 &lt;code&gt;DataOutput&lt;/code&gt; 中界面提供用于从任何Java基本类型的将数据转换成一系列字节的和写入这些字节到二进制流。还有一种用于将 &lt;code&gt;String&lt;/code&gt; 转换为&lt;a href=&quot;datainput#modified-utf-8&quot;&gt;修改后的UTF-8&lt;/a&gt;格式并写入结果字节序列的工具。</target>
        </trans-unit>
        <trans-unit id="f2b993a3883288d1e85e22ce467f77774bd2afb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataSource&lt;/code&gt; interface as a means of making a connection. The Java Naming and Directory Interface (JNDI) is used for registering a &lt;code&gt;DataSource&lt;/code&gt; object with a naming service and also for retrieving it.</source>
          <target state="translated">所述 &lt;code&gt;DataSource&lt;/code&gt; 接口作为进行连接的装置。Java命名和目录接口（JNDI）用于向命名服务注册 &lt;code&gt;DataSource&lt;/code&gt; 对象，并用于检索它。</target>
        </trans-unit>
        <trans-unit id="aace83782c4b7339832e081f06308b4b2c74e8e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataSource&lt;/code&gt; interface as a means of making a connection. The Java Naming and Directory Interface&amp;trade; (JNDI) is used for registering a &lt;code&gt;DataSource&lt;/code&gt; object with a naming service and also for retrieving it.</source>
          <target state="translated">所述 &lt;code&gt;DataSource&lt;/code&gt; 接口作为进行连接的装置。Java命名和目录接口&amp;trade;（JNDI）用于向命名服务注册 &lt;code&gt;DataSource&lt;/code&gt; 对象，并用于检索它。</target>
        </trans-unit>
        <trans-unit id="9a0d3b357b082ea9e3cef0a9c703c9ff4ba87e0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataSource&lt;/code&gt; interface as an alternative to the &lt;code&gt;DriverManager&lt;/code&gt; for establishing a connection with a data source</source>
          <target state="translated">所述 &lt;code&gt;DataSource&lt;/code&gt; 界面，以替代所述 &lt;code&gt;DriverManager&lt;/code&gt; 用于建立与数据源的连接</target>
        </trans-unit>
        <trans-unit id="7e888f0e387d5da74bbbdd521d7936f20c26d0bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DataSource&lt;/code&gt; interface is implemented by a driver vendor. There are three types of implementations:</source>
          <target state="translated">该 &lt;code&gt;DataSource&lt;/code&gt; 接口由驱动程序供应商实现。共有三种类型的实现：</target>
        </trans-unit>
        <trans-unit id="e66cf8de64fde88f1edf5f9938f96e91d086c9b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DatagramSocket&lt;/code&gt; and &lt;code&gt;MulticastSocket&lt;/code&gt; classes define convenience methods to set and get several socket options. Like &lt;code&gt;DatagramSocket&lt;/code&gt; this class also supports the &lt;a href=&quot;datagramsocket#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datagramsocket#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods to set and query socket options. In addition to the socket options supported by &lt;a href=&quot;datagramsocket#SocketOptions&quot;&gt;&lt;code&gt;DatagramSocket&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;MulticastSocket&lt;/code&gt; supports the following socket options:</source>
          <target state="translated">该 &lt;code&gt;DatagramSocket&lt;/code&gt; 类和 &lt;code&gt;MulticastSocket&lt;/code&gt; 多类定义了方便的方法来设置和获取一些套接字选项。与 &lt;code&gt;DatagramSocket&lt;/code&gt; 一样，此类也支持&lt;a href=&quot;datagramsocket#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;datagramsocket#getOption(java.net.SocketOption)&quot;&gt; &lt;code&gt;getOption&lt;/code&gt; &lt;/a&gt;方法来设置和查询套接字选项。除了&lt;a href=&quot;datagramsocket#SocketOptions&quot;&gt; &lt;code&gt;DatagramSocket&lt;/code&gt; &lt;/a&gt;支持的套接字选项之外， &lt;code&gt;MulticastSocket&lt;/code&gt; 还支持以下套接字选项：</target>
        </trans-unit>
        <trans-unit id="d7dd72f6410597688660cd677dec017364f6fa75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DatagramSocket&lt;/code&gt; class defines convenience methods to set and get several socket options. This class also defines the &lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt;&lt;code&gt;setOption&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt;&lt;code&gt;getOption&lt;/code&gt;&lt;/a&gt; methods to set and query socket options. A &lt;code&gt;DatagramSocket&lt;/code&gt; supports the following socket options:</source>
          <target state="translated">该 &lt;code&gt;DatagramSocket&lt;/code&gt; 的类定义方便的方法来设置和获取一些套接字选项。此类还定义了&lt;a href=&quot;#setOption(java.net.SocketOption,T)&quot;&gt; &lt;code&gt;setOption&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getOption(java.net.SocketOption)&quot;&gt; &lt;code&gt;getOption&lt;/code&gt; &lt;/a&gt;方法以设置和查询套接字选项。一个 &lt;code&gt;DatagramSocket&lt;/code&gt; 的支持下列套接字选项：</target>
        </trans-unit>
        <trans-unit id="bae5d85b0a42eaf39decbc0f3619a5ca6e1c5bca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; is a concrete implementation of the abstract &lt;code&gt;PersistenceDelegate&lt;/code&gt; class and is the delegate used by default for classes about which no information is available.</source>
          <target state="translated">该 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 是一个具体的实现抽象的 &lt;code&gt;PersistenceDelegate&lt;/code&gt; 类是类哪些没有信息可供默认使用的委托。</target>
        </trans-unit>
        <trans-unit id="bd7b11133d7ce2a7408b56cd1889d08b8d8614ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; is a concrete implementation of the abstract &lt;code&gt;PersistenceDelegate&lt;/code&gt; class and is the delegate used by default for classes about which no information is available. The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; provides, version resilient, public API-based persistence for classes that follow the JavaBeans conventions without any class specific configuration.</source>
          <target state="translated">该 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 是一个具体的实现抽象的 &lt;code&gt;PersistenceDelegate&lt;/code&gt; 类是类哪些没有信息可供默认使用的委托。该 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 提供，对于遵循JavaBeans约定，没有任何类特定的配置类的版本有弹性，公众基于API的持久性。</target>
        </trans-unit>
        <trans-unit id="75831a1da7576e44d5307c7a6c20301c7e176c73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; is a concrete implementation of the abstract &lt;code&gt;PersistenceDelegate&lt;/code&gt; class and is the delegate used by default for classes about which no information is available. The &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; provides, version resilient, public API-based persistence for classes that follow the JavaBeans&amp;trade; conventions without any class specific configuration.</source>
          <target state="translated">该 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 是一个具体的实现抽象的 &lt;code&gt;PersistenceDelegate&lt;/code&gt; 类是类哪些没有信息可供默认使用的委托。该 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 提供，对于遵循JavaBeans&amp;trade;约定，没有任何类特定的配置类的版本有弹性，公众基于API的持久性。</target>
        </trans-unit>
        <trans-unit id="215a5bccdc3c3338493160d70673629e874e958f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that a range of pages of the job should be printed.</source>
          <target state="translated">该 &lt;code&gt;DefaultSelectionType&lt;/code&gt; 实例使用指定范围的作业的页数应打印。</target>
        </trans-unit>
        <trans-unit id="87cb02d0585879539baa3952cfdd192574ff5ce1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that all pages of the job should be printed.</source>
          <target state="translated">该 &lt;code&gt;DefaultSelectionType&lt;/code&gt; 实例用于指定作业的所有页面应打印。</target>
        </trans-unit>
        <trans-unit id="7467f10a2bae08e57981d42475216700740fb33f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DefaultSelectionType&lt;/code&gt; instance to use for specifying that the current selection should be printed.</source>
          <target state="translated">用于指定应打印当前选择的 &lt;code&gt;DefaultSelectionType&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="19c0a619c4b42fee2219550878c9a024c390cb05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DependsOn&lt;/code&gt; example might be coded as follows.</source>
          <target state="translated">该 &lt;code&gt;DependsOn&lt;/code&gt; 例如可以按如下进行编码。</target>
        </trans-unit>
        <trans-unit id="65ab9904319fac8d824298c966242d71776b1070" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Descriptor&lt;/code&gt; for each of these objects will also have a field &lt;code&gt;originalType&lt;/code&gt; that is a string representing the Java type that appeared in the MXBean interface. The format of this string is described in the section &lt;a href=&quot;#type-names&quot;&gt;Type Names&lt;/a&gt; below.</source>
          <target state="translated">每个对象的 &lt;code&gt;Descriptor&lt;/code&gt; 还将具有一个字段 &lt;code&gt;originalType&lt;/code&gt; ，该字段是一个字符串，表示出现在MXBean接口中的Java类型。该字符串的格式在下面的&amp;ldquo; &lt;a href=&quot;#type-names&quot;&gt;类型名称&lt;/a&gt; &amp;rdquo;部分中进行了描述。</target>
        </trans-unit>
        <trans-unit id="6f443be3508a6b4f42f8d8c9fdea432ec155aa3c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Descriptor&lt;/code&gt; for the &lt;code&gt;MBeanInfo&lt;/code&gt; will have a field &lt;code&gt;mxbean&lt;/code&gt; whose value is the string &quot;&lt;code&gt;true&lt;/code&gt;&quot;.</source>
          <target state="translated">该 &lt;code&gt;Descriptor&lt;/code&gt; 的 &lt;code&gt;MBeanInfo&lt;/code&gt; 的将有一个字段 &lt;code&gt;mxbean&lt;/code&gt; ，它的值是字符串&amp;ldquo; &lt;code&gt;true&lt;/code&gt; &amp;rdquo;。</target>
        </trans-unit>
        <trans-unit id="1b680b80be304cce95a372170cb78cb2d5372791" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Desktop&lt;/code&gt; class allows interact with various desktop capabilities.</source>
          <target state="translated">该 &lt;code&gt;Desktop&lt;/code&gt; 类允许交互与各种桌面功能。</target>
        </trans-unit>
        <trans-unit id="1f1f0413a258864da533d8fd6089fe10d4346b6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DestinationType&lt;/code&gt; instance to use for specifying print to file.</source>
          <target state="translated">用于指定打印到文件的 &lt;code&gt;DestinationType&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="b5ede1c0ce13d3f1b86dab91c946e088de1e4810" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DestinationType&lt;/code&gt; instance to use for specifying print to printer.</source>
          <target state="translated">用于指定打印到打印机的 &lt;code&gt;DestinationType&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="49617ba029f41bdc9141ce13707ee568f3cd073a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DiagnosticCommandMBean&lt;/code&gt; is registered to the &lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMBeanServer()&quot;&gt;platform MBeanServer&lt;/a&gt; as are other platform MBeans.</source>
          <target state="translated">该 &lt;code&gt;DiagnosticCommandMBean&lt;/code&gt; 注册到&lt;a href=&quot;../../../../java.management/java/lang/management/managementfactory#getPlatformMBeanServer()&quot;&gt;平台MBeanServer&lt;/a&gt;为其他平台的MBean。</target>
        </trans-unit>
        <trans-unit id="f7866d7c1ad84ddbb686932e9c444832168e015e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying no print dialog.</source>
          <target state="translated">用于不指定打印对话框的 &lt;code&gt;DialogType&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="48abce3f6c4158dea1664103a6b3d70f387042a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying the cross-platform, pure Java print dialog.</source>
          <target state="translated">用于指定跨平台的纯Java打印对话框的 &lt;code&gt;DialogType&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="3a6c6f8055f6a41037fe263aa6e4d4b8b6491751" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DialogType&lt;/code&gt; instance to use for specifying the platform's native print dialog.</source>
          <target state="translated">用于指定平台的本机打印对话框的 &lt;code&gt;DialogType&lt;/code&gt; 实例。</target>
        </trans-unit>
        <trans-unit id="4f7dec71d977b06ccc515422e0d73eebb02b25d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dictionary&lt;/code&gt; class is the abstract parent of any class, such as &lt;code&gt;Hashtable&lt;/code&gt;, which maps keys to values.</source>
          <target state="translated">的 &lt;code&gt;Dictionary&lt;/code&gt; 类是任何类，如抽象父 &lt;code&gt;Hashtable&lt;/code&gt; ，将键映射到的值。</target>
        </trans-unit>
        <trans-unit id="699c289ae38cf13e2c3626e341eabeb096b9a84c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dictionary&lt;/code&gt; class is the abstract parent of any class, such as &lt;code&gt;Hashtable&lt;/code&gt;, which maps keys to values. Every key and every value is an object. In any one &lt;code&gt;Dictionary&lt;/code&gt; object, every key is associated with at most one value. Given a &lt;code&gt;Dictionary&lt;/code&gt; and a key, the associated element can be looked up. Any non-&lt;code&gt;null&lt;/code&gt; object can be used as a key and as a value.</source>
          <target state="translated">的 &lt;code&gt;Dictionary&lt;/code&gt; 类是任何类，如抽象父 &lt;code&gt;Hashtable&lt;/code&gt; ，将键映射到的值。每个键和每个值都是一个对象。在任何一个 &lt;code&gt;Dictionary&lt;/code&gt; 对象中，每个键最多与一个值关联。给定一个 &lt;code&gt;Dictionary&lt;/code&gt; 和一个key，就可以查找相关的元素。任何非 &lt;code&gt;null&lt;/code&gt; 对象都可以用作键和值。</target>
        </trans-unit>
        <trans-unit id="a3ad2e80a7a32b62b60c202e22fbc509ccceb0d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dimension2D&lt;/code&gt; class is to encapsulate a width and a height dimension.</source>
          <target state="translated">所述 &lt;code&gt;Dimension2D&lt;/code&gt; 类是用于封装宽度和高度尺寸。</target>
        </trans-unit>
        <trans-unit id="0d0310edb8899af0030fb1287455e59dc2d5cfc4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dimension&lt;/code&gt; class encapsulates the width and height of a component (in integer precision) in a single object.</source>
          <target state="translated">的 &lt;code&gt;Dimension&lt;/code&gt; 类封装的部件的单个对象的宽度和高度（精确到整数）。</target>
        </trans-unit>
        <trans-unit id="8fb5cd2dfe1f794fc509febd00afad290f14d0f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Dimension&lt;/code&gt; class encapsulates the width and height of a component (in integer precision) in a single object. The class is associated with certain properties of components. Several methods defined by the &lt;code&gt;Component&lt;/code&gt; class and the &lt;code&gt;LayoutManager&lt;/code&gt; interface return a &lt;code&gt;Dimension&lt;/code&gt; object.</source>
          <target state="translated">的 &lt;code&gt;Dimension&lt;/code&gt; 类封装的部件的单个对象的宽度和高度（精确到整数）。该类与组件的某些属性相关联。 &lt;code&gt;Component&lt;/code&gt; 类和 &lt;code&gt;LayoutManager&lt;/code&gt; 接口定义的几种方法返回 &lt;code&gt;Dimension&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="ac8ca23a09be9f2d05c779e843421c46aa3ea44e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirContext&lt;/code&gt; interface represents a &lt;em&gt;directory context&lt;/em&gt;. It defines methods for examining and updating attributes associated with a &lt;em&gt;directory object&lt;/em&gt;, or &lt;em&gt;directory entry&lt;/em&gt; as it is sometimes called.</source>
          <target state="translated">的 &lt;code&gt;DirContext&lt;/code&gt; 接口表示&lt;em&gt;目录上下文&lt;/em&gt;。它定义了检查和更新与&lt;em&gt;目录对象&lt;/em&gt;或有时称为&lt;em&gt;目录条目的&lt;/em&gt;属性相关联的方法。</target>
        </trans-unit>
        <trans-unit id="4f5f26151bcc82651095413443582e43d30057ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirectColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values that represent RGB color and alpha information as separate samples and that pack all samples for a single pixel into a single int, short, or byte quantity.</source>
          <target state="translated">的 &lt;code&gt;DirectColorModel&lt;/code&gt; 类是一个 &lt;code&gt;ColorModel&lt;/code&gt; 的类，它与表示RGB颜色和alpha信息作为单独的样品和该组所有样品用于单个像素到一个单一的整型，短整型，或字节数量的像素值的作品。</target>
        </trans-unit>
        <trans-unit id="867620aab0b989d77251241f205787cce5693818" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DirectColorModel&lt;/code&gt; class is a &lt;code&gt;ColorModel&lt;/code&gt; class that works with pixel values that represent RGB color and alpha information as separate samples and that pack all samples for a single pixel into a single int, short, or byte quantity. This class can be used only with ColorSpaces of type ColorSpace.TYPE_RGB. In addition, for each component of the ColorSpace, the minimum normalized component value obtained via the &lt;code&gt;getMinValue()&lt;/code&gt; method of ColorSpace must be 0.0, and the maximum value obtained via the &lt;code&gt;getMaxValue()&lt;/code&gt; method must be 1.0 (these min/max values are typical for RGB spaces). There must be three color samples in the pixel values and there can be a single alpha sample. For those methods that use a primitive array pixel representation of type &lt;code&gt;transferType&lt;/code&gt;, the array length is always one. The transfer types supported are DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, and DataBuffer.TYPE_INT. Color and alpha samples are stored in the single element of the array in bits indicated by bit masks. Each bit mask must be contiguous and masks must not overlap. The same masks apply to the single int pixel representation used by other methods. The correspondence of masks and color/alpha samples is as follows:</source>
          <target state="translated">的 &lt;code&gt;DirectColorModel&lt;/code&gt; 类是一个 &lt;code&gt;ColorModel&lt;/code&gt; 的类，它与表示RGB颜色和alpha信息作为单独的样品和该组所有样品用于单个像素到一个单一的整型，短整型，或字节数量的像素值的作品。此类只能与ColorSpace.TYPE_RGB类型的ColorSpaces一起使用。另外，对于ColorSpace的每个组件，通过ColorSpace的 &lt;code&gt;getMinValue()&lt;/code&gt; 方法获得的最小归一化组件值必须为0.0，并且通过 &lt;code&gt;getMaxValue()&lt;/code&gt; 获得的最大值为方法必须为1.0（这些最小值/最大值是RGB空间的典型值）。像素值中必须有三个颜色样本，并且可以有一个alpha样本。对于那些使用类型为 &lt;code&gt;transferType&lt;/code&gt; 的原始数组像素表示形式的方法，数组长度始终为1。支持的传输类型为DataBuffer.TYPE_BYTE，DataBuffer.TYPE_USHORT和DataBuffer.TYPE_INT。颜色和Alpha样本以位掩码表示的位存储在数组的单个元素中。每个位掩码必须是连续的，并且掩码不能重叠。相同的蒙版适用于其他方法使用的单个int像素表示形式。遮罩和颜色/ alpha样本的对应关系如下：</target>
        </trans-unit>
        <trans-unit id="116fdd7be681df744083396585fbcc59f22bf9ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DisplayMode&lt;/code&gt; class encapsulates the bit depth, height, width, and refresh rate of a &lt;code&gt;GraphicsDevice&lt;/code&gt;.</source>
          <target state="translated">所述 &lt;code&gt;DisplayMode&lt;/code&gt; 类封装的位深度，高度，宽度，和一个的刷新速率 &lt;code&gt;GraphicsDevice&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="19d8de06d0560ad2d757b5196f0ee295518354f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DisplayMode&lt;/code&gt; class encapsulates the bit depth, height, width, and refresh rate of a &lt;code&gt;GraphicsDevice&lt;/code&gt;. The ability to change graphics device's display mode is platform- and configuration-dependent and may not always be available (see &lt;a href=&quot;graphicsdevice#isDisplayChangeSupported()&quot;&gt;&lt;code&gt;GraphicsDevice.isDisplayChangeSupported()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">所述 &lt;code&gt;DisplayMode&lt;/code&gt; 类封装的位深度，高度，宽度，和一个的刷新速率 &lt;code&gt;GraphicsDevice&lt;/code&gt; 。更改图形设备的显示模式的能力取决于平台和配置，并且可能并不总是可用（请参阅&lt;a href=&quot;graphicsdevice#isDisplayChangeSupported()&quot;&gt; &lt;code&gt;GraphicsDevice.isDisplayChangeSupported()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4fb3b5b3b8f09e2d62efe297d30103c7df42ac62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; interface represents the entire HTML or XML document.</source>
          <target state="translated">该 &lt;code&gt;Document&lt;/code&gt; 接口表示整个HTML或XML文档。</target>
        </trans-unit>
        <trans-unit id="529187b6ef833899d4c3fe664e30fd697bfbf6e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; interface represents the entire HTML or XML document. Conceptually, it is the root of the document tree, and provides the primary access to the document's data.</source>
          <target state="translated">该 &lt;code&gt;Document&lt;/code&gt; 接口表示整个HTML或XML文档。从概念上讲，它是文档树的根，并提供对文档数据的主要访问。</target>
        </trans-unit>
        <trans-unit id="77b826e655118178902fe5ff860eeed0127a2cf4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; is a container for text that serves as the model for swing text components.</source>
          <target state="translated">&amp;ldquo; &lt;code&gt;Document&lt;/code&gt; 是文本的容器，用作&amp;ldquo;摇摆&amp;rdquo;文本组件的模型。</target>
        </trans-unit>
        <trans-unit id="b030057a42290c1393ddd1e1a7f09690aa85b082" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; is a container for text that serves as the model for swing text components. The goal for this interface is to scale from very simple needs (a plain text textfield) to complex needs (an HTML or XML document, for example).</source>
          <target state="translated">&amp;ldquo; &lt;code&gt;Document&lt;/code&gt; 是文本的容器，用作&amp;ldquo;摇摆&amp;rdquo;文本组件的模型。该界面的目标是从非常简单的需求（纯文本文本字段）扩展到复杂的需求（例如HTML或XML文档）。</target>
        </trans-unit>
        <trans-unit id="fb8a86827947eed5054d0b92cc87db4d596781ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; object associated with this node.</source>
          <target state="translated">与此节点关联的 &lt;code&gt;Document&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="3fb4c76953555bf6e63541fe62da2f11a2880575" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Document&lt;/code&gt; object associated with this node. This is also the &lt;code&gt;Document&lt;/code&gt; object used to create new nodes. When this node is a &lt;code&gt;Document&lt;/code&gt; or a &lt;code&gt;DocumentType&lt;/code&gt; which is not used with any &lt;code&gt;Document&lt;/code&gt; yet, this is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">与此节点关联的 &lt;code&gt;Document&lt;/code&gt; 对象。这也是用于创建新节点的 &lt;code&gt;Document&lt;/code&gt; 对象。当该节点是一个 &lt;code&gt;Document&lt;/code&gt; 或 &lt;code&gt;DocumentType&lt;/code&gt; 不与任何使用 &lt;code&gt;Document&lt;/code&gt; 的是，这是 &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26a004a227df19ba0b28f836a76c1bed44daf5c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentEvent&lt;/code&gt; interface provides a mechanism by which the user can create an Event of a type supported by the implementation.</source>
          <target state="translated">所述 &lt;code&gt;DocumentEvent&lt;/code&gt; 接口提供通过其用户可以创建实现支持的类型的事件的机制。</target>
        </trans-unit>
        <trans-unit id="199332283596de73d645a3765aa17baba682d9ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentEvent&lt;/code&gt; interface provides a mechanism by which the user can create an Event of a type supported by the implementation. It is expected that the &lt;code&gt;DocumentEvent&lt;/code&gt; interface will be implemented on the same object which implements the &lt;code&gt;Document&lt;/code&gt; interface in an implementation which supports the Event model.</source>
          <target state="translated">所述 &lt;code&gt;DocumentEvent&lt;/code&gt; 接口提供通过其用户可以创建实现支持的类型的事件的机制。预期 &lt;code&gt;DocumentEvent&lt;/code&gt; 接口将在支持Event模型的实现中在与实现 &lt;code&gt;Document&lt;/code&gt; 接口的同一对象上实现。</target>
        </trans-unit>
        <trans-unit id="7101cf8f8255ce6bc7b029096bf0d5bb178800ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentStyle&lt;/code&gt; interface provides a mechanism by which the style sheets embedded in a document can be retrieved.</source>
          <target state="translated">所述 &lt;code&gt;DocumentStyle&lt;/code&gt; 接口提供了嵌入在文档中的样式表可以被检索的机构。</target>
        </trans-unit>
        <trans-unit id="379936dd9c5d0d4d3e2cfd1b388bc802604c10f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentStyle&lt;/code&gt; interface provides a mechanism by which the style sheets embedded in a document can be retrieved. The expectation is that an instance of the &lt;code&gt;DocumentStyle&lt;/code&gt; interface can be obtained by using binding-specific casting methods on an instance of the &lt;code&gt;Document&lt;/code&gt; interface.</source>
          <target state="translated">所述 &lt;code&gt;DocumentStyle&lt;/code&gt; 接口提供了嵌入在文档中的样式表可以被检索的机构。期望的是，的一个实例 &lt;code&gt;DocumentStyle&lt;/code&gt; 接口可以通过使用结合特异性铸造上的一个实例的方法获得 &lt;code&gt;Document&lt;/code&gt; 的界面。</target>
        </trans-unit>
        <trans-unit id="384468ad54c38d729b48375adee37805e7c7400d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentView&lt;/code&gt; interface is implemented by &lt;code&gt;Document&lt;/code&gt; objects in DOM implementations supporting DOM Views.</source>
          <target state="translated">所述 &lt;code&gt;DocumentView&lt;/code&gt; 接口由实现 &lt;code&gt;Document&lt;/code&gt; 在DOM实现支持DOM视图对象。</target>
        </trans-unit>
        <trans-unit id="74e363801907d5d58d5de67ff49207cebfba94a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DocumentView&lt;/code&gt; interface is implemented by &lt;code&gt;Document&lt;/code&gt; objects in DOM implementations supporting DOM Views. It provides an attribute to retrieve the default view of a document.</source>
          <target state="translated">所述 &lt;code&gt;DocumentView&lt;/code&gt; 接口由实现 &lt;code&gt;Document&lt;/code&gt; 在DOM实现支持DOM视图对象。它提供了一个属性来检索文档的默认视图。</target>
        </trans-unit>
        <trans-unit id="47632e0ee471d6ff392a53397568f93dda81d8af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a geometric path with coordinates stored in double precision floating point.</source>
          <target state="translated">的 &lt;code&gt;Double&lt;/code&gt; 类定义与存储在双精度浮点坐标的几何路径。</target>
        </trans-unit>
        <trans-unit id="017ba6ccfd5ef0c2e6010f2245960c644585fe90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a point specified in &lt;code&gt;double&lt;/code&gt; precision.</source>
          <target state="translated">的 &lt;code&gt;Double&lt;/code&gt; 类定义中指定的点 &lt;code&gt;double&lt;/code&gt; 精度。</target>
        </trans-unit>
        <trans-unit id="d053ec0f24041ad204da5a3f15acb9d3c4182514" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a rectangle specified in double coordinates.</source>
          <target state="translated">该 &lt;code&gt;Double&lt;/code&gt; 类定义以double坐标指定的矩形。</target>
        </trans-unit>
        <trans-unit id="822e19dd4d622e1e3f2e386d97d2b753bdbef4ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines a rectangle with rounded corners all specified in &lt;code&gt;double&lt;/code&gt; coordinates.</source>
          <target state="translated">该 &lt;code&gt;Double&lt;/code&gt; 类定义了圆角在所有指定的矩形 &lt;code&gt;double&lt;/code&gt; 坐标。</target>
        </trans-unit>
        <trans-unit id="81bdf6fd0c82e69be8a8a2d7b63a21805bc32c88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class defines an ellipse specified in &lt;code&gt;double&lt;/code&gt; precision.</source>
          <target state="translated">的 &lt;code&gt;Double&lt;/code&gt; 类定义中指定的椭圆 &lt;code&gt;double&lt;/code&gt; 精度。</target>
        </trans-unit>
        <trans-unit id="f0d66cda55834a4404c6ebd9f0fc24fcb8fcd600" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;double&lt;/code&gt; in an object.</source>
          <target state="translated">的 &lt;code&gt;Double&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;double&lt;/code&gt; 中的对象。</target>
        </trans-unit>
        <trans-unit id="d119dbf666fc6ea150e2c28f463b377c7a4b4f23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Double&lt;/code&gt; class wraps a value of the primitive type &lt;code&gt;double&lt;/code&gt; in an object. An object of type &lt;code&gt;Double&lt;/code&gt; contains a single field whose type is &lt;code&gt;double&lt;/code&gt;.</source>
          <target state="translated">的 &lt;code&gt;Double&lt;/code&gt; 类包装基本类型的值 &lt;code&gt;double&lt;/code&gt; 中的对象。类型为 &lt;code&gt;Double&lt;/code&gt; 的对象包含一个类型为 &lt;code&gt;double&lt;/code&gt; 的单个字段。</target>
        </trans-unit>
        <trans-unit id="fc7999e5f93a2ae9606da301019747ddf0ddb202" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragGestureListener&lt;/code&gt; associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">该 &lt;code&gt;DragGestureListener&lt;/code&gt; 与此相关 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6fe201fb5b21786fce11d2dea41a8f6a73200d29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragGestureListener&lt;/code&gt; causes the &lt;code&gt;DragSource&lt;/code&gt; to initiate the Drag and Drop operation on behalf of the user, perhaps animating the GUI Cursor and/or rendering an &lt;code&gt;Image&lt;/code&gt; of the item(s) that are the subject of the operation.</source>
          <target state="translated">所述 &lt;code&gt;DragGestureListener&lt;/code&gt; 使得 &lt;code&gt;DragSource&lt;/code&gt; 所发起代表用户的拖放操作，或许动画的GUI光标和/或呈现的 &lt;code&gt;Image&lt;/code&gt; 的项目（S）的那些操作的主题。</target>
        </trans-unit>
        <trans-unit id="c172123b5043f06b40fb19a64e6a11d4e9d26d67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragGestureRecognizer&lt;/code&gt; is an abstract base class for the specification of a platform-dependent listener that can be associated with a particular &lt;code&gt;Component&lt;/code&gt; in order to identify platform-dependent drag initiating gestures.</source>
          <target state="translated">所述 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 是一种能够与特定关联的依赖于平台的收听者的规范的抽象基类 &lt;code&gt;Component&lt;/code&gt; ，以便识别依赖于平台的拖动开始动作。</target>
        </trans-unit>
        <trans-unit id="743c929869d3da1e85b173832df8a167d0eee307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; associated with this &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">与此 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 关联的 &lt;code&gt;DragSource&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0746520642e02ffbdf36d292090f49a2c350d172" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; is the entity responsible for the initiation of the Drag and Drop operation, and may be used in a number of scenarios:</source>
          <target state="translated">所述 &lt;code&gt;DragSource&lt;/code&gt; 是实体负责的拖放操作开始，并且可以在许多场景中：</target>
        </trans-unit>
        <trans-unit id="792edd86c73a1bd56e5f3162af8a109f1c8f4ef4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; is the entity responsible for the initiation of the Drag and Drop operation, and may be used in a number of scenarios: 1 default instance per JVM for the lifetime of that JVM.</source>
          <target state="translated">所述 &lt;code&gt;DragSource&lt;/code&gt; 负责拖放操作开始时的实体，并且可以在许多场景中：每JVM 1个默认实例为JVM的寿命。</target>
        </trans-unit>
        <trans-unit id="2f65ca8e9c306293912bec7fb7b044e7fe1b5243" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSource&lt;/code&gt; object manifests &quot;Drag Over&quot; feedback to the user, in the typical case by animating the GUI &lt;code&gt;Cursor&lt;/code&gt; associated with the logical cursor.</source>
          <target state="translated">所述 &lt;code&gt;DragSource&lt;/code&gt; 通过动画GUI对象清单&amp;ldquo;将在&amp;rdquo;反馈给用户，在典型情况下 &lt;code&gt;Cursor&lt;/code&gt; 与逻辑光标相关联。</target>
        </trans-unit>
        <trans-unit id="325a91f8655dca08a413883aa100c1009cbe6c94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceContext&lt;/code&gt; class is responsible for managing the initiator side of the Drag and Drop protocol.</source>
          <target state="translated">所述 &lt;code&gt;DragSourceContext&lt;/code&gt; 类是负责管理拖放协议的起始端。</target>
        </trans-unit>
        <trans-unit id="ca76b9e0dd22f7be4d0016ce00a53938007ea043" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DragSourceContext&lt;/code&gt; class is responsible for managing the initiator side of the Drag and Drop protocol. In particular, it is responsible for managing drag event notifications to the &lt;a href=&quot;dragsourcelistener&quot;&gt;DragSourceListeners&lt;/a&gt; and &lt;a href=&quot;dragsourcemotionlistener&quot;&gt;DragSourceMotionListeners&lt;/a&gt;, and providing the &lt;a href=&quot;../../../../java.datatransfer/java/awt/datatransfer/transferable&quot;&gt;&lt;code&gt;Transferable&lt;/code&gt;&lt;/a&gt; representing the source data for the drag operation.</source>
          <target state="translated">所述 &lt;code&gt;DragSourceContext&lt;/code&gt; 类是负责管理拖放协议的起始端。特别是，它负责管理到&lt;a href=&quot;dragsourcelistener&quot;&gt;DragSourceListeners&lt;/a&gt;和&lt;a href=&quot;dragsourcemotionlistener&quot;&gt;DragSourceMotionListeners的&lt;/a&gt;拖动事件通知，并提供表示拖动操作源数据的&lt;a href=&quot;../../../../java.datatransfer/java/awt/datatransfer/transferable&quot;&gt; &lt;code&gt;Transferable&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
