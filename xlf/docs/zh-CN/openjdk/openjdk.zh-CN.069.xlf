<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="zh-CN" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="cae113d7239645cef8fa002ded8bf09d0075fdc0" translate="yes" xml:space="preserve">
          <source>Binary names</source>
          <target state="translated">二进制名称</target>
        </trans-unit>
        <trans-unit id="f24d69fe11a1bc88a738e15194d757fdd43902ef" translate="yes" xml:space="preserve">
          <source>BinaryExponent:</source>
          <target state="translated">BinaryExponent:</target>
        </trans-unit>
        <trans-unit id="bf84adb45596fd0a3010cb7a7b4c6821819436a9" translate="yes" xml:space="preserve">
          <source>BinaryExponentIndicator SignedInteger</source>
          <target state="translated">二进制指数指示器 SignedInteger</target>
        </trans-unit>
        <trans-unit id="a6316c6126e0497a7316eb921f6b7cb2299e10cf" translate="yes" xml:space="preserve">
          <source>BinaryExponentIndicator:</source>
          <target state="translated">BinaryExponentIndicator:</target>
        </trans-unit>
        <trans-unit id="f85c226f32fd781905d42235823e2fd6ba7c7a6f" translate="yes" xml:space="preserve">
          <source>BinaryOperator</source>
          <target state="translated">BinaryOperator</target>
        </trans-unit>
        <trans-unit id="10926b09d660024b5412c421ffb0fbe1561aee15" translate="yes" xml:space="preserve">
          <source>BinaryOperator.maxBy()</source>
          <target state="translated">BinaryOperator.maxBy()</target>
        </trans-unit>
        <trans-unit id="3bdf2707777efea7426d689f79a8b5d7dcae0461" translate="yes" xml:space="preserve">
          <source>BinaryOperator.minBy()</source>
          <target state="translated">BinaryOperator.minBy()</target>
        </trans-unit>
        <trans-unit id="804321fea15ea1f0b03a7c7b99275a044b7b5129" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr</source>
          <target state="translated">BinaryRefAddr</target>
        </trans-unit>
        <trans-unit id="51dc78053568164fd437b0464ce3fe6f2650ca58" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.equals()</source>
          <target state="translated">BinaryRefAddr.equals()</target>
        </trans-unit>
        <trans-unit id="34dfe87a3c49c7896d6baae29a09d79c7c2446f4" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.getContent()</source>
          <target state="translated">BinaryRefAddr.getContent()</target>
        </trans-unit>
        <trans-unit id="a63a1c31f1a7322923aa4ce681bfadf598fe2ea4" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.hashCode()</source>
          <target state="translated">BinaryRefAddr.hashCode()</target>
        </trans-unit>
        <trans-unit id="4e9a802ce781c09c0ed768eca63a1f5a8b96683f" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.toString()</source>
          <target state="translated">BinaryRefAddr.toString()</target>
        </trans-unit>
        <trans-unit id="436d12920901d87d775d64537cf0c1169bfcf32c" translate="yes" xml:space="preserve">
          <source>BinaryTree</source>
          <target state="translated">BinaryTree</target>
        </trans-unit>
        <trans-unit id="3fd8d2c8470085fcfe29d3eaffaf67d4fee23b97" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along one edge.</source>
          <target state="translated">沿着一条边用一个或多个订书针(铁线针)装订文件。</target>
        </trans-unit>
        <trans-unit id="4beff3aa638b7033a21ebe2b37848fcc9d120852" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along one edge. The exact number and placement of the staples is implementation- and/or site- defined.</source>
          <target state="translated">沿着一条边用一个或多个订书针(线缝)装订文件。订书针的确切数量和位置由实施和/或现场确定。</target>
        </trans-unit>
        <trans-unit id="f6b690b826fd685ed81176e15ae958ddc07ddee4" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the bottom edge.</source>
          <target state="translated">沿着底边用一个或多个订书针(铁线针)装订文件。</target>
        </trans-unit>
        <trans-unit id="38b15caad1f8cccfdc90a44e804f0aeda92e244a" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the bottom edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">沿着文件的底边用一个或多个订书针(线缝)装订文件。订书针的确切数量和位置由实施和/或现场确定。</target>
        </trans-unit>
        <trans-unit id="838b702478b10f8307e8f4471fe828a9505c262d" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the left edge.</source>
          <target state="translated">沿着左侧边缘用一个或多个订书针(铁线针)装订文件。</target>
        </trans-unit>
        <trans-unit id="798d016fab287329709447cc30c503c54c7f2529" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the left edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">沿着左侧边缘用一个或多个订书针(线缝)装订文件。订书针的确切数量和位置由实施和/或现场确定。</target>
        </trans-unit>
        <trans-unit id="9c9cf0120f25da18225585ad0a7f0047fbe5d69d" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the middle fold.</source>
          <target state="translated">沿着中间的折痕用一个或多个订书针(铁线针)装订文件。</target>
        </trans-unit>
        <trans-unit id="74977c9b21caf07f2209906041934254c252a710" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the middle fold. The exact number and placement of the staples and the middle fold is implementation- and/or site-defined.</source>
          <target state="translated">用一个或多个订书针(线缝)沿中间折线装订文件。订书针和中间折线的确切数量和位置由实施和/或地点确定。</target>
        </trans-unit>
        <trans-unit id="76fd44136ff68d0663699f167e8f861ce39ebba9" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the right edge.</source>
          <target state="translated">沿着右边缘用一个或多个订书针(铁线针)装订文件。</target>
        </trans-unit>
        <trans-unit id="315fa937f46a56545a7fc022344a87b00068bbec" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the right edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">沿着右边缘用一个或多个订书针(线缝)装订文件。订书针的确切数量和位置由实施和/或现场确定。</target>
        </trans-unit>
        <trans-unit id="beae49a45b6529d85821fee13e30e744b23c7696" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the top edge.</source>
          <target state="translated">沿着文件的顶部边缘用一个或多个订书针(铁线针)装订文件。</target>
        </trans-unit>
        <trans-unit id="97f703d6e23a578b9613b26e1444ed005f1d9cc1" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the top edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">沿着文件的顶部边缘用一个或多个订书针(线缝)装订文件。订书针的确切数量和位置由实施和/或现场确定。</target>
        </trans-unit>
        <trans-unit id="3007e602358fe575b7c354349ed237cd5f2f0677" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the bottom left corner.</source>
          <target state="translated">在左下角用一个或多个订书钉装订文件。</target>
        </trans-unit>
        <trans-unit id="a48c8503fc77165ebe222416cffd1be391cd7669" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the bottom right corner.</source>
          <target state="translated">在右下角用一个或多个订书钉装订文件。</target>
        </trans-unit>
        <trans-unit id="ca91d34daa2b4be2b04166f0d637369d33da7169" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the top left corner.</source>
          <target state="translated">在左上角用一个或多个订书钉装订文件。</target>
        </trans-unit>
        <trans-unit id="6e5e362e517d0d09949a466ad90f83d411070627" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the top right corner.</source>
          <target state="translated">在右上角用一个或多个订书钉装订文件。</target>
        </trans-unit>
        <trans-unit id="b6b5577f15763961656b47610dfcdefd5de09226" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples.</source>
          <target state="translated">用一个或多个订书钉装订文件。</target>
        </trans-unit>
        <trans-unit id="aafde1c01756df2a3d71f7d896cb8bc0a8070631" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples. The exact number and placement of the staples is site-defined.</source>
          <target state="translated">用一个或多个订书钉装订文件。订书针的确切数量和位置由现场确定。</target>
        </trans-unit>
        <trans-unit id="5bb2d33426033b0a68e3b6c81a0bb7f9176840fc" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the bottom edge assuming a portrait document (see above).</source>
          <target state="translated">用两枚订书针(铁线针)沿底边装订文件,假设是纵向文件(见上文)。</target>
        </trans-unit>
        <trans-unit id="ae04bf08d39d9e67d508d4e9d878f30f1c55e0a8" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the left edge assuming a portrait document (see above).</source>
          <target state="translated">沿着左侧边缘用两枚订书针(铁线针)装订文件,假设是纵向文件(见上文)。</target>
        </trans-unit>
        <trans-unit id="0c73748634274f11b9aedd0994a877bcb259dfc6" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the right edge assuming a portrait document (see above).</source>
          <target state="translated">沿着右侧边缘用两枚订书针(铁线针)装订文件,假设是纵向文件(见上文)。</target>
        </trans-unit>
        <trans-unit id="40d190abf0b705cdc115b3f2a14434a081114d2a" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the top edge assuming a portrait document (see above).</source>
          <target state="translated">用两枚订书针(铁线针)沿文件上边装订,假设是纵向文件(见上文)。</target>
        </trans-unit>
        <trans-unit id="3d07a6a38e603a1fe7c45d2b07e74159376727f5" translate="yes" xml:space="preserve">
          <source>BindException</source>
          <target state="translated">BindException</target>
        </trans-unit>
        <trans-unit id="7f0043e684cc2e548822e45bee14ea4c4673e262" translate="yes" xml:space="preserve">
          <source>Binding</source>
          <target state="translated">Binding</target>
        </trans-unit>
        <trans-unit id="21e7eedef7ec3c19471bbbbe45b4049bb9f4573a" translate="yes" xml:space="preserve">
          <source>Binding record for creating key bindings.</source>
          <target state="translated">用于创建密钥绑定的绑定记录。</target>
        </trans-unit>
        <trans-unit id="f2f0e8426d50dd004936526ec4a53092d7f639c9" translate="yes" xml:space="preserve">
          <source>Binding.getClassName()</source>
          <target state="translated">Binding.getClassName()</target>
        </trans-unit>
        <trans-unit id="3854f635fcab11a97abff363358798981a3a084c" translate="yes" xml:space="preserve">
          <source>Binding.getObject()</source>
          <target state="translated">Binding.getObject()</target>
        </trans-unit>
        <trans-unit id="d109964b8b2b7ce2b0414e69cfeccb938c845a9c" translate="yes" xml:space="preserve">
          <source>Binding.setObject()</source>
          <target state="translated">Binding.setObject()</target>
        </trans-unit>
        <trans-unit id="2088e3252efffb5823d0e7e2d4e40155148df170" translate="yes" xml:space="preserve">
          <source>Binding.toString()</source>
          <target state="translated">Binding.toString()</target>
        </trans-unit>
        <trans-unit id="d29c6c44ce6249ba3ff3fe3b97c98aa7378d9cb1" translate="yes" xml:space="preserve">
          <source>BindingPatternTree</source>
          <target state="translated">BindingPatternTree</target>
        </trans-unit>
        <trans-unit id="967382f86044b6efc91dfee8f4e2b4ed941211cd" translate="yes" xml:space="preserve">
          <source>Bindings</source>
          <target state="translated">Bindings</target>
        </trans-unit>
        <trans-unit id="af3f9c9a47da695b2b481cf7dd1056704e860dc4" translate="yes" xml:space="preserve">
          <source>Bindings.containsKey()</source>
          <target state="translated">Bindings.containsKey()</target>
        </trans-unit>
        <trans-unit id="665186311739d7091d10da9425d926cbea92c7b0" translate="yes" xml:space="preserve">
          <source>Bindings.get()</source>
          <target state="translated">Bindings.get()</target>
        </trans-unit>
        <trans-unit id="ad1d10802dae6a5401ec2ac2da0d260f385be05b" translate="yes" xml:space="preserve">
          <source>Bindings.put()</source>
          <target state="translated">Bindings.put()</target>
        </trans-unit>
        <trans-unit id="0b5433c80f15e4df4db9adbe0714c54a9c043552" translate="yes" xml:space="preserve">
          <source>Bindings.putAll()</source>
          <target state="translated">Bindings.putAll()</target>
        </trans-unit>
        <trans-unit id="82a2df7e4c1180f788f22af292c488ca5f913993" translate="yes" xml:space="preserve">
          <source>Bindings.remove()</source>
          <target state="translated">Bindings.remove()</target>
        </trans-unit>
        <trans-unit id="9e4372fbb83968e4a85a9ef36d53695e580f9853" translate="yes" xml:space="preserve">
          <source>Binds a URI to the default namespace This URI is bound in the scope of the current START_ELEMENT / END_ELEMENT pair.</source>
          <target state="translated">绑定一个URI到默认的命名空间 这个URI被绑定在当前START_ELEMENT/END_ELEMENT对的范围内。</target>
        </trans-unit>
        <trans-unit id="380a180b5315e2c5ebea3c26086774bfa62c00d2" translate="yes" xml:space="preserve">
          <source>Binds a URI to the default namespace This URI is bound in the scope of the current START_ELEMENT / END_ELEMENT pair. If this method is called before a START_ELEMENT has been written the uri is bound in the root scope.</source>
          <target state="translated">将一个URI绑定到默认的命名空间。这个URI被绑定在当前START_ELEMENT/END_ELEMENT对的作用域中。如果这个方法在START_ELEMENT被写入之前被调用,那么URI就会被绑定在根作用域中。</target>
        </trans-unit>
        <trans-unit id="af6f6c6182928c86d0bbf37152327632c16c5123" translate="yes" xml:space="preserve">
          <source>Binds a currently unbound HttpServer to the given address and port number.</source>
          <target state="translated">将当前未绑定的HttpServer绑定到给定的地址和端口号。</target>
        </trans-unit>
        <trans-unit id="cacdd723706cc38781d66f4229933fcde9cc69ea" translate="yes" xml:space="preserve">
          <source>Binds a currently unbound HttpServer to the given address and port number. A maximum backlog can also be specified. This is the maximum number of queued incoming connections to allow on the listening socket. Queued TCP connections exceeding this limit may be rejected by the TCP implementation.</source>
          <target state="translated">将当前未绑定的HttpServer绑定到给定的地址和端口号。也可以指定一个最大积压数。这是监听套接字上允许的最大排队传入连接数。排队的TCP连接超过这个限制,可能会被TCP执行拒绝。</target>
        </trans-unit>
        <trans-unit id="b6008db77bc77f4b1f95fa6a20dd4de6be7b2ccd" translate="yes" xml:space="preserve">
          <source>Binds a datagram socket to a local port and address.</source>
          <target state="translated">将数据报套接字与本地端口和地址绑定。</target>
        </trans-unit>
        <trans-unit id="657d990e4c2a8c45525fed295a955698a0fa1fae" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding.</source>
          <target state="translated">将一个名称和相关的属性绑定到一个对象上,覆盖现有的绑定。</target>
        </trans-unit>
        <trans-unit id="bef50f700df7fd08b141ef3efe129a3ed3fef33e" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. If &lt;code&gt;attrs&lt;/code&gt; is null and &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt;, the attributes from &lt;code&gt;obj&lt;/code&gt; are used. If &lt;code&gt;attrs&lt;/code&gt; is null and &lt;code&gt;obj&lt;/code&gt; is not a &lt;code&gt;DirContext&lt;/code&gt;, any existing attributes associated with the object already bound in the directory remain unchanged. If &lt;code&gt;attrs&lt;/code&gt; is non-null, any existing attributes associated with the object already bound in the directory are removed and &lt;code&gt;attrs&lt;/code&gt; is associated with the named object. If &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt; and &lt;code&gt;attrs&lt;/code&gt; is non-null, the attributes of &lt;code&gt;obj&lt;/code&gt; are ignored.</source>
          <target state="translated">将名称与关联的属性绑定到对象，覆盖任何现有绑定。如果 &lt;code&gt;attrs&lt;/code&gt; 为null且 &lt;code&gt;obj&lt;/code&gt; 是 &lt;code&gt;DirContext&lt;/code&gt; ，则使用 &lt;code&gt;obj&lt;/code&gt; 的属性。如果 &lt;code&gt;attrs&lt;/code&gt; 为null且 &lt;code&gt;obj&lt;/code&gt; 不是 &lt;code&gt;DirContext&lt;/code&gt; ，则与目录中已经绑定的对象关联的所有现有属性均保持不变。如果 &lt;code&gt;attrs&lt;/code&gt; 为非null，则将删除与目录中已经绑定的对象相关联的所有现有属性，并将 &lt;code&gt;attrs&lt;/code&gt; 与命名对象相关联。如果 &lt;code&gt;obj&lt;/code&gt; 是 &lt;code&gt;DirContext&lt;/code&gt; 和 &lt;code&gt;attrs&lt;/code&gt; 如果为非null，则 &lt;code&gt;obj&lt;/code&gt; 的属性将被忽略。</target>
        </trans-unit>
        <trans-unit id="c9f66ea94c9e9091c18f6d0cf5a274afb3873e62" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. See &lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt;&lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称与关联的属性绑定到对象，将覆盖任何现有绑定。有关详细信息&lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt; &lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt;请参见rebind（Name，Object，Attributes）。</target>
        </trans-unit>
        <trans-unit id="59057772ee7f82df12aec96d27729b43409cf252" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. See &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;DirContext.rebind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称与关联的属性绑定到对象，覆盖任何现有绑定。有关详细信息&lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;DirContext.rebind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt;请参见DirContext.rebind（Name，Object，Attributes）。</target>
        </trans-unit>
        <trans-unit id="7862b048f583975025e87ee113fdec4eb82eaa35" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. See &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称与关联的属性绑定到对象，覆盖任何现有绑定。有关详细信息&lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt;请参见rebind（Name，Object，Attributes）。</target>
        </trans-unit>
        <trans-unit id="1f913f636d74702605561821a1918582c9bac431" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes.</source>
          <target state="translated">将名称和相关属性绑定到一个对象上。</target>
        </trans-unit>
        <trans-unit id="a85c2b1328618075241decebedad63963121262d" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. If &lt;code&gt;attrs&lt;/code&gt; is null, the resulting binding will have the attributes associated with &lt;code&gt;obj&lt;/code&gt; if &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt;, and no attributes otherwise. If &lt;code&gt;attrs&lt;/code&gt; is non-null, the resulting binding will have &lt;code&gt;attrs&lt;/code&gt; as its attributes; any attributes associated with &lt;code&gt;obj&lt;/code&gt; are ignored.</source>
          <target state="translated">将名称与关联的属性绑定到对象。如果 &lt;code&gt;attrs&lt;/code&gt; 为null，则如果 &lt;code&gt;obj&lt;/code&gt; 是 &lt;code&gt;DirContext&lt;/code&gt; ，则结果绑定将具有与 &lt;code&gt;obj&lt;/code&gt; 关联的属性，否则没有属性。如果 &lt;code&gt;attrs&lt;/code&gt; 非空，则结果绑定将把 &lt;code&gt;attrs&lt;/code&gt; 作为其属性；与 &lt;code&gt;obj&lt;/code&gt; 相关的任何属性都将被忽略。</target>
        </trans-unit>
        <trans-unit id="53b9a1986ca774b3b37e147ea238ae08deb8d1c3" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. See &lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt;&lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称与关联的属性绑定到对象。有关详细信息&lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt; &lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt;请参见bind（Name，Object，Attributes）。</target>
        </trans-unit>
        <trans-unit id="5f423c84e3d9ac276cc54bbc7a1df2267430532e" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. See &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;DirContext.bind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称与关联的属性绑定到对象。有关详细信息&lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;DirContext.bind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt;请参见DirContext.bind（Name，Object，Attributes）。</target>
        </trans-unit>
        <trans-unit id="49c9411a96668375307df7006b94b502613c5398" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. See &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称与关联的属性绑定到对象。有关详细信息&lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt;请参见bind（Name，Object，Attributes）。</target>
        </trans-unit>
        <trans-unit id="4a162cb7818dd5afc9aa8847fd5982c8ac0bc166" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding.</source>
          <target state="translated">将一个名称绑定到一个对象上,覆盖任何现有的绑定。</target>
        </trans-unit>
        <trans-unit id="2a47974e2946298adc2c1e8785d1a2b146c5866f" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. All intermediate contexts and the target context (that named by all but terminal atomic component of the name) must already exist.</source>
          <target state="translated">将一个名字绑定到一个对象上,覆盖任何现有的绑定。所有的中间上下文和目标上下文(除了名字的终端原子成分外,所有的名字都被命名)必须已经存在。</target>
        </trans-unit>
        <trans-unit id="d8760cbff1f4fe7a56b4aa0e9507ebdd24ad740e" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. See &lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object)&quot;&gt;&lt;code&gt;rebind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称绑定到对象，覆盖任何现有绑定。有关详细信息&lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object)&quot;&gt; &lt;code&gt;rebind(Name, Object)&lt;/code&gt; &lt;/a&gt;请参见rebind（Name，Object）。</target>
        </trans-unit>
        <trans-unit id="38c4e144c8baee02925ff9468221c2e31a98a0ab" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. See &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;Context.rebind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称绑定到对象，覆盖任何现有绑定。有关详细信息&lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;Context.rebind(Name, Object)&lt;/code&gt; &lt;/a&gt;请参见Context.rebind（Name，Object）。</target>
        </trans-unit>
        <trans-unit id="1ec5f3c3d6f354aa52cf76d2f081d51de412e044" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. See &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;rebind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称绑定到对象，覆盖任何现有绑定。有关详细信息&lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;rebind(Name, Object)&lt;/code&gt; &lt;/a&gt;请参见rebind（Name，Object）。</target>
        </trans-unit>
        <trans-unit id="251f87ab2bf6a98eed5fa1c3b477ba9f506bc604" translate="yes" xml:space="preserve">
          <source>Binds a name to an object.</source>
          <target state="translated">将名称与对象绑定。</target>
        </trans-unit>
        <trans-unit id="e5e64d34b4cdb6b99609a59ad25d1a3ad519a414" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. All intermediate contexts and the target context (that named by all but terminal atomic component of the name) must already exist.</source>
          <target state="translated">将一个名字绑定到一个对象上。所有的中间上下文和目标上下文(除了名称的终端原子成分外,所有的名称都被命名)必须已经存在。</target>
        </trans-unit>
        <trans-unit id="ab246eee87fbcd91de788fc5d2edfd12f10c365c" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. See &lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object)&quot;&gt;&lt;code&gt;bind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称绑定到对象。有关详细信息&lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object)&quot;&gt; &lt;code&gt;bind(Name, Object)&lt;/code&gt; &lt;/a&gt;请参见bind（Name，Object）。</target>
        </trans-unit>
        <trans-unit id="22f07ab7847985e8e60fec2932f80e97a99c0603" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. See &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;Context.bind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称绑定到对象。有关详细信息&lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;Context.bind(Name, Object)&lt;/code&gt; &lt;/a&gt;请参见Context.bind（Name，Object）。</target>
        </trans-unit>
        <trans-unit id="1fe532abc5ebc2577888e073f9a9954b0c757df1" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. See &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;bind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将名称绑定到对象。有关详细信息&lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;bind(Name, Object)&lt;/code&gt; &lt;/a&gt;请参见bind（Name，Object）。</target>
        </trans-unit>
        <trans-unit id="55057edf02800de7f787f89d93f937b061321815" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name.</source>
          <target state="translated">将新名称绑定到与旧名称绑定的对象上,并解除对旧名称的绑定。</target>
        </trans-unit>
        <trans-unit id="ad13bf0cb1e9c230eb4c5a12b92482517b9f6640" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. Both names are relative to this context. Any attributes associated with the old name become associated with the new name. Intermediate contexts of the old name are not changed.</source>
          <target state="translated">将新名称绑定到与旧名称绑定的对象上,并解除对旧名称的绑定。两个名字都是相对于这个上下文而言的。与旧名相关联的任何属性都会与新名相关联。旧名称的中间上下文不会改变。</target>
        </trans-unit>
        <trans-unit id="cbf274dfc1ebc1037d58c1b667671334279f481e" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. See &lt;a href=&quot;#rename(javax.naming.Name,javax.naming.Name)&quot;&gt;&lt;code&gt;rename(Name, Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将新名称绑定到绑定到旧名称的对象，然后取消绑定旧名称。有关详细信息&lt;a href=&quot;#rename(javax.naming.Name,javax.naming.Name)&quot;&gt; &lt;code&gt;rename(Name, Name)&lt;/code&gt; &lt;/a&gt;请参见重命名（名称，名称）。</target>
        </trans-unit>
        <trans-unit id="bdf6640303dc99ed775550a3779d06408bd0b49e" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. See &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt;&lt;code&gt;Context.rename(Name, Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将新名称绑定到绑定到旧名称的对象，然后取消绑定旧名称。有关详细信息&lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt; &lt;code&gt;Context.rename(Name, Name)&lt;/code&gt; &lt;/a&gt;请参见Context.rename（Name，Name）。</target>
        </trans-unit>
        <trans-unit id="2f6495aa38d4725a36a720ebc6469d45df032586" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. See &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt;&lt;code&gt;rename(Name, Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">将新名称绑定到绑定到旧名称的对象，然后取消绑定旧名称。有关详细信息&lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt; &lt;code&gt;rename(Name, Name)&lt;/code&gt; &lt;/a&gt;请参见重命名（名称，名称）。</target>
        </trans-unit>
        <trans-unit id="5b4e28023e25c3e90449ef6ab97fe0ba935a3048" translate="yes" xml:space="preserve">
          <source>Binds a remote reference to the specified &lt;code&gt;name&lt;/code&gt; in this registry.</source>
          <target state="translated">将远程引用绑定到此注册表中的指定 &lt;code&gt;name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4ccecc2f1995a168a2e90631f368757ba24ced1" translate="yes" xml:space="preserve">
          <source>Binds a value &lt;code&gt;x&lt;/code&gt; to the first argument of a method handle, without invoking it.</source>
          <target state="translated">将值 &lt;code&gt;x&lt;/code&gt; 绑定到方法句柄的第一个参数，而无需调用它。</target>
        </trans-unit>
        <trans-unit id="d709e7ff6c01b64e185f7177232e54cd2748d562" translate="yes" xml:space="preserve">
          <source>Binds a value &lt;code&gt;x&lt;/code&gt; to the first argument of a method handle, without invoking it. The new method handle adapts, as its</source>
          <target state="translated">将值 &lt;code&gt;x&lt;/code&gt; 绑定到方法句柄的第一个参数，而不调用它。新的方法句柄适应了</target>
        </trans-unit>
        <trans-unit id="71c3e052fa37c0007ee3dd0c54068d206ac64534" translate="yes" xml:space="preserve">
          <source>Binds the &lt;code&gt;ServerSocket&lt;/code&gt; to a specific address (IP address and port number).</source>
          <target state="translated">将 &lt;code&gt;ServerSocket&lt;/code&gt; 绑定到特定地址（IP地址和端口号）。</target>
        </trans-unit>
        <trans-unit id="8450e6d5432f147163b776bc66eea8817ac7f1c9" translate="yes" xml:space="preserve">
          <source>Binds the channel's socket to a local address and configures the socket to listen for associations.</source>
          <target state="translated">将通道的套接字绑定到本地地址,并配置套接字以监听关联。</target>
        </trans-unit>
        <trans-unit id="d5340b21c5bcf30743e0e17d48b8bd38ada396ca" translate="yes" xml:space="preserve">
          <source>Binds the channel's socket to a local address and configures the socket to listen for connections.</source>
          <target state="translated">将通道的socket绑定到本地地址,并配置socket监听连接。</target>
        </trans-unit>
        <trans-unit id="5f9ea286a1c02790ef5e00a40addb6b03b0a5077" translate="yes" xml:space="preserve">
          <source>Binds the channel's socket to a local address.</source>
          <target state="translated">将通道的socket与本地地址绑定。</target>
        </trans-unit>
        <trans-unit id="3673d3a19e58f7c7db70887801bcee601fef3d80" translate="yes" xml:space="preserve">
          <source>Binds the socket to a local address.</source>
          <target state="translated">将套接字与本地地址绑定。</target>
        </trans-unit>
        <trans-unit id="740db0921542bd6df9a7c4748257bb47830db756" translate="yes" xml:space="preserve">
          <source>Binds the specified &lt;code&gt;name&lt;/code&gt; to a remote object.</source>
          <target state="translated">将指定的 &lt;code&gt;name&lt;/code&gt; 绑定到远程对象。</target>
        </trans-unit>
        <trans-unit id="37e4755756174d1db83cfc7e42a797bc45b05862" translate="yes" xml:space="preserve">
          <source>Binds the specified &lt;code&gt;value&lt;/code&gt; object into the session's application layer data with the given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">使用给定的 &lt;code&gt;name&lt;/code&gt; 将指定的 &lt;code&gt;value&lt;/code&gt; 对象绑定到会话的应用程序层数据中。</target>
        </trans-unit>
        <trans-unit id="124690239bd8a65db1488a68d66c6d5ab4897d0c" translate="yes" xml:space="preserve">
          <source>Binds this DatagramSocket to a specific address and port.</source>
          <target state="translated">将此 DatagramSocket 与特定地址和端口绑定。</target>
        </trans-unit>
        <trans-unit id="f72819abf0c6fe30fe4545b6029d3fad576d29e2" translate="yes" xml:space="preserve">
          <source>Binds this socket to the specified local IP address and port number.</source>
          <target state="translated">将此套接字与指定的本地IP地址和端口号绑定。</target>
        </trans-unit>
        <trans-unit id="eb9bf65dbb672320688439f4fdd91a067e55da32" translate="yes" xml:space="preserve">
          <source>Bit 31 (the bit that is selected by the mask &lt;code&gt;0x80000000&lt;/code&gt;) represents the sign of the floating-point number. Bits 30-23 (the bits that are selected by the mask &lt;code&gt;0x7f800000&lt;/code&gt;) represent the exponent. Bits 22-0 (the bits that are selected by the mask &lt;code&gt;0x007fffff&lt;/code&gt;) represent the significand (sometimes called the mantissa) of the floating-point number.</source>
          <target state="translated">位31（由掩码 &lt;code&gt;0x80000000&lt;/code&gt; 选择的位）表示浮点数的符号。位30-23（由掩码 &lt;code&gt;0x7f800000&lt;/code&gt; 选择的位）表示指数。位22-0（由掩码 &lt;code&gt;0x007fffff&lt;/code&gt; 选择的位）表示浮点数的有效位（有时称为尾数）。</target>
        </trans-unit>
        <trans-unit id="73cf6da9b8bc4c7b8afc1a74617a7d656eeaff51" translate="yes" xml:space="preserve">
          <source>Bit 63 (the bit that is selected by the mask &lt;code&gt;0x8000000000000000L&lt;/code&gt;) represents the sign of the floating-point number. Bits 62-52 (the bits that are selected by the mask &lt;code&gt;0x7ff0000000000000L&lt;/code&gt;) represent the exponent. Bits 51-0 (the bits that are selected by the mask &lt;code&gt;0x000fffffffffffffL&lt;/code&gt;) represent the significand (sometimes called the mantissa) of the floating-point number.</source>
          <target state="translated">位63（由掩码 &lt;code&gt;0x8000000000000000L&lt;/code&gt; 选择的位）表示浮点数的符号。位62-52（由掩码 &lt;code&gt;0x7ff0000000000000L&lt;/code&gt; 选择的位）表示指数。位51-0（由掩码 &lt;code&gt;0x000fffffffffffffL&lt;/code&gt; 选择的位）表示浮点数的有效位（有时称为尾数）。</target>
        </trans-unit>
        <trans-unit id="453ffe06e1f177025b7df438053e3e95f5b987e2" translate="yes" xml:space="preserve">
          <source>Bit Values</source>
          <target state="translated">位值</target>
        </trans-unit>
        <trans-unit id="1b50c761d3d767e2454af03c53933f6369efdd51" translate="yes" xml:space="preserve">
          <source>Bit data may be accumulated in memory indefinitely, until &lt;code&gt;flushBefore&lt;/code&gt; is called. At that time, all bit data prior to the flushed position will be written.</source>
          <target state="translated">可能会无限期地在内存中累积位数据，直到 &lt;code&gt;flushBefore&lt;/code&gt; 。届时，将写入刷新位置之前的所有位数据。</target>
        </trans-unit>
        <trans-unit id="91410f5062503a2f98f586d004eb2c78a1680c89" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag.</source>
          <target state="translated">ObjectStreamClass标志的位掩码。</target>
        </trans-unit>
        <trans-unit id="05563058e628aace24cda34cd8eb0e4c583c470c" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates Externalizable data written in Block Data mode. Added for PROTOCOL_VERSION_2.</source>
          <target state="translated">ObjectStreamClass标志的位掩码。表示在块数据模式下写入的可外部化数据。为PROTOCOL_VERSION_2添加。</target>
        </trans-unit>
        <trans-unit id="980e6444082734f84ce692d0ac5d54ad5f699b57" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates a Serializable class defines its own writeObject method.</source>
          <target state="translated">ObjectStreamClass标志的位掩码。表示一个Serializable类定义了自己的writeObject方法。</target>
        </trans-unit>
        <trans-unit id="f92fed8e99fe69d8719835dab1ec09a124e85bd0" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is Externalizable.</source>
          <target state="translated">ObjectStreamClass标志的位掩码。表示该类是可外部化的。</target>
        </trans-unit>
        <trans-unit id="84d025954ac00dfa8ca9d8dc38de0c08ac7915c3" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is Serializable.</source>
          <target state="translated">ObjectStreamClass标志的位掩码。表示类是可序列化的。</target>
        </trans-unit>
        <trans-unit id="04c1cd65ff809622b82410f7c2d53da0f105f7a9" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is an enum type.</source>
          <target state="translated">ObjectStreamClass标志的位掩码。表示类是一个枚举类型。</target>
        </trans-unit>
        <trans-unit id="ecd33ea63e56de73ca3baa2621e5245a2a2785b9" translate="yes" xml:space="preserve">
          <source>Bit operations operate on a single bit of the two's-complement representation of their operand. If necessary, the operand is sign- extended so that it contains the designated bit. None of the single-bit operations can produce a BigInteger with a different sign from the BigInteger being operated on, as they affect only a single bit, and the &quot;infinite word size&quot; abstraction provided by this class ensures that there are infinitely many &quot;virtual sign bits&quot; preceding each BigInteger.</source>
          <target state="translated">位操作是在操作数的二的补码表示中的一个位上进行操作。如果有必要,操作数会进行符号扩展,使其包含指定的位。任何一个单位操作都不能产生一个与被操作的BigInteger符号不同的BigInteger,因为它们只影响一个位,而且这个类提供的 &quot;无限字大小 &quot;抽象保证了每个BigInteger前面有无限多个 &quot;虚拟符号位&quot;。</target>
        </trans-unit>
        <trans-unit id="d16f30188929980352ec86311340c5e85f211381" translate="yes" xml:space="preserve">
          <source>Bit operations operate on a single bit of the two's-complement representation of their operand. If necessary, the operand is sign- extended so that it contains the designated bit. None of the single-bit operations can produce a BigInteger with a different sign from the BigInteger being operated on, as they affect only a single bit, and the arbitrarily large abstraction provided by this class ensures that conceptually there are infinitely many &quot;virtual sign bits&quot; preceding each BigInteger.</source>
          <target state="translated">位操作是在操作数的二的补码表示中的一个位上进行操作。如果有必要,操作数会进行符号扩展,使其包含指定的位。任何一个单位运算都不能产生一个与被运算的BigInteger符号不同的BigInteger,因为它们只影响一个位,而且这个类提供的任意大的抽象保证了概念上每个BigInteger前面有无限多的 &quot;虚拟符号位&quot;。</target>
        </trans-unit>
        <trans-unit id="c6d1f07bf8c341ba08a4989abac17085fe06de8a" translate="yes" xml:space="preserve">
          <source>Bit operations operate on a single bit of the two's-complement representation of their operand. If necessary, the operand is sign-extended so that it contains the designated bit. None of the single-bit operations can produce a BigInteger with a different sign from the BigInteger being operated on, as they affect only a single bit, and the arbitrarily large abstraction provided by this class ensures that conceptually there are infinitely many &quot;virtual sign bits&quot; preceding each BigInteger.</source>
          <target state="translated">位操作是在操作数的二的补码表示中的一个位上操作。如果有必要,操作数会进行符号扩展,使其包含指定的位。任何一个单位操作都不能产生一个与被操作的BigInteger符号不同的BigInteger,因为它们只影响一个位,而且这个类提供的任意大的抽象保证了在概念上每个BigInteger前面有无限多的 &quot;虚拟符号位&quot;。</target>
        </trans-unit>
        <trans-unit id="f8cd7716f7a5997d4efd153b8de6bda8ac575d3b" translate="yes" xml:space="preserve">
          <source>BitSet</source>
          <target state="translated">BitSet</target>
        </trans-unit>
        <trans-unit id="4c8e097ef5a9e0be43dffcccd18f1bc24d1753c6" translate="yes" xml:space="preserve">
          <source>BitSet.and()</source>
          <target state="translated">BitSet.and()</target>
        </trans-unit>
        <trans-unit id="fb60336f70f94007e406ccb00c92dec7638f45c5" translate="yes" xml:space="preserve">
          <source>BitSet.andNot()</source>
          <target state="translated">BitSet.andNot()</target>
        </trans-unit>
        <trans-unit id="4ddb12170cc0af1c8510dde93d3409b246d62576" translate="yes" xml:space="preserve">
          <source>BitSet.cardinality()</source>
          <target state="translated">BitSet.cardinality()</target>
        </trans-unit>
        <trans-unit id="679ac21a173b71844f1bfddb9122b7de6acfc229" translate="yes" xml:space="preserve">
          <source>BitSet.clear()</source>
          <target state="translated">BitSet.clear()</target>
        </trans-unit>
        <trans-unit id="a86d3f66e5586ed8aa965f3cbff2d1eafcad89b8" translate="yes" xml:space="preserve">
          <source>BitSet.clone()</source>
          <target state="translated">BitSet.clone()</target>
        </trans-unit>
        <trans-unit id="2f1018809af4fef2b11eeba7220754e3c8c55f0f" translate="yes" xml:space="preserve">
          <source>BitSet.equals()</source>
          <target state="translated">BitSet.equals()</target>
        </trans-unit>
        <trans-unit id="34a0e6b1e2786484f51df7d145b3149bc292e112" translate="yes" xml:space="preserve">
          <source>BitSet.flip()</source>
          <target state="translated">BitSet.flip()</target>
        </trans-unit>
        <trans-unit id="236e52eea6dd02143c7f694346a83021046ad45b" translate="yes" xml:space="preserve">
          <source>BitSet.get()</source>
          <target state="translated">BitSet.get()</target>
        </trans-unit>
        <trans-unit id="64d2f277a331da739d543986baaf6695e2106d92" translate="yes" xml:space="preserve">
          <source>BitSet.hashCode()</source>
          <target state="translated">BitSet.hashCode()</target>
        </trans-unit>
        <trans-unit id="4a80a58dc3add60c37954085b109de6111151c8e" translate="yes" xml:space="preserve">
          <source>BitSet.intersects()</source>
          <target state="translated">BitSet.intersects()</target>
        </trans-unit>
        <trans-unit id="93ed99d0c0620a61a0647883b7efab25e0d91d80" translate="yes" xml:space="preserve">
          <source>BitSet.isEmpty()</source>
          <target state="translated">BitSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="b0d5b6739df61dbad5479e7313573f2fa4ee7fce" translate="yes" xml:space="preserve">
          <source>BitSet.length()</source>
          <target state="translated">BitSet.length()</target>
        </trans-unit>
        <trans-unit id="714103c17ee82a0d18c7ee30f303cfa30b46ff38" translate="yes" xml:space="preserve">
          <source>BitSet.nextClearBit()</source>
          <target state="translated">BitSet.nextClearBit()</target>
        </trans-unit>
        <trans-unit id="80f1ba62dc5e4f614d26c5b6dc10e2cccbd1f067" translate="yes" xml:space="preserve">
          <source>BitSet.nextSetBit()</source>
          <target state="translated">BitSet.nextSetBit()</target>
        </trans-unit>
        <trans-unit id="b21cb83cfa3b52dc1eb29f44966b01f57c99fc6c" translate="yes" xml:space="preserve">
          <source>BitSet.or()</source>
          <target state="translated">BitSet.or()</target>
        </trans-unit>
        <trans-unit id="717efc7d633854520c6326e774d0633b722fb0f0" translate="yes" xml:space="preserve">
          <source>BitSet.previousClearBit()</source>
          <target state="translated">BitSet.previousClearBit()</target>
        </trans-unit>
        <trans-unit id="a19384b78577d60c447b7a61591f6e2a8e5b810d" translate="yes" xml:space="preserve">
          <source>BitSet.previousSetBit()</source>
          <target state="translated">BitSet.previousSetBit()</target>
        </trans-unit>
        <trans-unit id="889bcfe5f707ae49eeb05c27ef1a1dd1e66c7903" translate="yes" xml:space="preserve">
          <source>BitSet.set()</source>
          <target state="translated">BitSet.set()</target>
        </trans-unit>
        <trans-unit id="df7cace24802d62d3de2eb6ec448bc273b094f32" translate="yes" xml:space="preserve">
          <source>BitSet.size()</source>
          <target state="translated">BitSet.size()</target>
        </trans-unit>
        <trans-unit id="453b1b073bf74ff055fc871c4c799969e45d686f" translate="yes" xml:space="preserve">
          <source>BitSet.stream()</source>
          <target state="translated">BitSet.stream()</target>
        </trans-unit>
        <trans-unit id="4083cff4ce93f8a4411f42770d399b164597f061" translate="yes" xml:space="preserve">
          <source>BitSet.toByteArray()</source>
          <target state="translated">BitSet.toByteArray()</target>
        </trans-unit>
        <trans-unit id="07eb1bb1f97d56c7798c265a60803953940f64e2" translate="yes" xml:space="preserve">
          <source>BitSet.toLongArray()</source>
          <target state="translated">BitSet.toLongArray()</target>
        </trans-unit>
        <trans-unit id="6ab19bc74c79ebdf1bd396e120ea266c54e48298" translate="yes" xml:space="preserve">
          <source>BitSet.toString()</source>
          <target state="translated">BitSet.toString()</target>
        </trans-unit>
        <trans-unit id="f264c54281e3ae0f91d901083011ded7e7b273de" translate="yes" xml:space="preserve">
          <source>BitSet.valueOf()</source>
          <target state="translated">BitSet.valueOf()</target>
        </trans-unit>
        <trans-unit id="3ecf11e19835619628bf7f04e8854e8e1fd790cb" translate="yes" xml:space="preserve">
          <source>BitSet.xor()</source>
          <target state="translated">BitSet.xor()</target>
        </trans-unit>
        <trans-unit id="26504da2e82f7d1bef4cde85ae0e762f9c79875f" translate="yes" xml:space="preserve">
          <source>Bitmap data.</source>
          <target state="translated">位图数据。</target>
        </trans-unit>
        <trans-unit id="5087244ecdc1dda9eb3b9e9385f7447295e90893" translate="yes" xml:space="preserve">
          <source>Bitmap data. Table tag &quot;bdat&quot; in the Open Type Specification.</source>
          <target state="translated">位图数据。开放类型规范中的表标签 &quot;bdat&quot;。</target>
        </trans-unit>
        <trans-unit id="5d6acb4d1cb9bf4bf0362c6777ffd2b08bdc6d21" translate="yes" xml:space="preserve">
          <source>Bitmap location.</source>
          <target state="translated">位图位置。</target>
        </trans-unit>
        <trans-unit id="97932d2c38023e131c28edbf9418bc7971956091" translate="yes" xml:space="preserve">
          <source>Bitmap location. Table tag &quot;bloc&quot; in the Open Type Specification.</source>
          <target state="translated">位图位置。Open Type Specification中的表标签 &quot;bloc&quot;。</target>
        </trans-unit>
        <trans-unit id="6c74cd82b56269d0740800f73cbe5f75b5cfd241" translate="yes" xml:space="preserve">
          <source>Bitwise comparison of &lt;code&gt;float&lt;/code&gt; values or &lt;code&gt;double&lt;/code&gt; values, as performed by the numeric and atomic update access modes, differ from the primitive &lt;code&gt;==&lt;/code&gt; operator and the &lt;a href=&quot;../float#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Float.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../double#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Double.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; methods, specifically with respect to comparing NaN values or comparing &lt;code&gt;-0.0&lt;/code&gt; with &lt;code&gt;+0.0&lt;/code&gt;. Care should be taken when performing a compare and set or a compare and exchange operation with such values since the operation may unexpectedly fail. There are many possible NaN values that are considered to be &lt;code&gt;NaN&lt;/code&gt; in Java, although no IEEE 754 floating-point operation provided by Java can distinguish between them. Operation failure can occur if the expected or witness value is a NaN value and it is transformed (perhaps in a platform specific manner) into another NaN value, and thus has a different bitwise representation (see &lt;a href=&quot;../float#intBitsToFloat(int)&quot;&gt;&lt;code&gt;Float.intBitsToFloat(int)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../double#longBitsToDouble(long)&quot;&gt;&lt;code&gt;Double.longBitsToDouble(long)&lt;/code&gt;&lt;/a&gt; for more details). The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; have different bitwise representations but are considered equal when using the primitive &lt;code&gt;==&lt;/code&gt; operator. Operation failure can occur if, for example, a numeric algorithm computes an expected value to be say &lt;code&gt;-0.0&lt;/code&gt; and previously computed the witness value to be say &lt;code&gt;+0.0&lt;/code&gt;.</source>
          <target state="translated">由数字和原子更新访问模式执行的 &lt;code&gt;float&lt;/code&gt; 值或 &lt;code&gt;double&lt;/code&gt; 精度值的按位比较不同于原始 &lt;code&gt;==&lt;/code&gt; 运算符以及&lt;a href=&quot;../float#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Float.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../double#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Double.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt;方法，特别是在比较NaN值或将 &lt;code&gt;-0.0&lt;/code&gt; 与 &lt;code&gt;+0.0&lt;/code&gt; 比较时。使用这些值进行比较和设置或比较和交换操作时应小心，因为该操作可能会意外失败。有许多可能的NaN值被认为是 &lt;code&gt;NaN&lt;/code&gt; 在Java中，尽管Java提供的IEEE 754浮点运算无法区分它们。如果期望值或见证值是一个NaN值，并且将其转换（也许以特定于平台的方式）转换为另一个NaN值，并且因此具有不同的按位表示形式（请参见&lt;a href=&quot;../float#intBitsToFloat(int)&quot;&gt; &lt;code&gt;Float.intBitsToFloat(int)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../double#longBitsToDouble(long)&quot;&gt; &lt;code&gt;Double.longBitsToDouble(long)&lt;/code&gt; &lt;/a&gt;），则可能会发生操作失败。（长）以获取更多详细信息）。值 &lt;code&gt;-0.0&lt;/code&gt; 和 &lt;code&gt;+0.0&lt;/code&gt; 具有不同的按位表示形式，但在使用原始 &lt;code&gt;==&lt;/code&gt; 运算符时被视为相等。例如，如果数值算法计算出期望值（例如 &lt;code&gt;-0.0&lt;/code&gt; )并事先计算出见证值（例如），则会发生操作失败 &lt;code&gt;+0.0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c24315eb20cc1f5a565ec08f29abab31c0925f1a" translate="yes" xml:space="preserve">
          <source>Blob</source>
          <target state="translated">Blob</target>
        </trans-unit>
        <trans-unit id="82dd2cdf36f9436d89f404454654ad3e53fd428d" translate="yes" xml:space="preserve">
          <source>Block</source>
          <target state="translated">Block</target>
        </trans-unit>
        <trans-unit id="70af3238de42da66beb5f354425347f373dca837" translate="yes" xml:space="preserve">
          <source>Block Tags</source>
          <target state="translated">区块标签</target>
        </trans-unit>
        <trans-unit id="abe005907f45526cc92679c0c67c98dfd361e70c" translate="yes" xml:space="preserve">
          <source>Block multicast datagrams from the given source address.</source>
          <target state="translated">阻止来自给定源地址的多播数据包。</target>
        </trans-unit>
        <trans-unit id="3e4d231903439b20916bdd14898f04865fff48ff" translate="yes" xml:space="preserve">
          <source>Block of optional data.</source>
          <target state="translated">可选数据块。</target>
        </trans-unit>
        <trans-unit id="1e20e0e36511b5c6baa2d48051902a13b2324cd0" translate="yes" xml:space="preserve">
          <source>Block of optional data. Byte following tag indicates number of bytes in this block data.</source>
          <target state="translated">可选数据块。标签后面的字节表示该块数据的字节数。</target>
        </trans-unit>
        <trans-unit id="437c69e5ed688c0537571d965bf795dd90b1c1d6" translate="yes" xml:space="preserve">
          <source>Block until signalled or interrupted.</source>
          <target state="translated">阻止,直到发出信号或被打断。</target>
        </trans-unit>
        <trans-unit id="6d7fb4a7f38d5954e20e9f03533bcb480909a2ae" translate="yes" xml:space="preserve">
          <source>Block until signalled, interrupted, or timed out.</source>
          <target state="translated">阻止,直到发出信号、被打断或超时为止。</target>
        </trans-unit>
        <trans-unit id="b57b8bfbe03043a73a6a80f86e47b8ab2b89853d" translate="yes" xml:space="preserve">
          <source>Block until signalled.</source>
          <target state="translated">阻止,直到发出信号。</target>
        </trans-unit>
        <trans-unit id="86932790462e80ef6bced45b5b159baf9aa26054" translate="yes" xml:space="preserve">
          <source>BlockAction</source>
          <target state="translated">BlockAction</target>
        </trans-unit>
        <trans-unit id="e4171c967e29c710844f83d806ed1446a10560b0" translate="yes" xml:space="preserve">
          <source>BlockElement</source>
          <target state="translated">BlockElement</target>
        </trans-unit>
        <trans-unit id="8573578578ab448f94d2d984698e1b4f84d2ad4c" translate="yes" xml:space="preserve">
          <source>BlockTagTree</source>
          <target state="translated">BlockTagTree</target>
        </trans-unit>
        <trans-unit id="f38c5e559d8c85fea705fb8ec93177e6c1e5ee6c" translate="yes" xml:space="preserve">
          <source>BlockTree</source>
          <target state="translated">BlockTree</target>
        </trans-unit>
        <trans-unit id="4bdc0aec0c6516c42350bab81f9c76a19c3e5ad4" translate="yes" xml:space="preserve">
          <source>BlockView</source>
          <target state="translated">BlockView</target>
        </trans-unit>
        <trans-unit id="1c76be32fb11096eed20946b126a38d45dfa7615" translate="yes" xml:space="preserve">
          <source>Blocking mode</source>
          <target state="translated">阻断模式</target>
        </trans-unit>
        <trans-unit id="3fb97fe6511d9e06578c8f4cb1af33c9125721f7" translate="yes" xml:space="preserve">
          <source>BlockingDeque</source>
          <target state="translated">BlockingDeque</target>
        </trans-unit>
        <trans-unit id="1894fd5a9c488c4c5b9f09c5f4b244a0f00dee97" translate="yes" xml:space="preserve">
          <source>BlockingDeque.add()</source>
          <target state="translated">BlockingDeque.add()</target>
        </trans-unit>
        <trans-unit id="4596b6727f09dcb15e5b51cf43c598be80a8d2de" translate="yes" xml:space="preserve">
          <source>BlockingDeque.addFirst()</source>
          <target state="translated">BlockingDeque.addFirst()</target>
        </trans-unit>
        <trans-unit id="77eec46debb5440f0901c1d701b251f1c4c81766" translate="yes" xml:space="preserve">
          <source>BlockingDeque.addLast()</source>
          <target state="translated">BlockingDeque.addLast()</target>
        </trans-unit>
        <trans-unit id="32908cf997cd28f11b9056c33b0a4e7372f74dfa" translate="yes" xml:space="preserve">
          <source>BlockingDeque.contains()</source>
          <target state="translated">BlockingDeque.contains()</target>
        </trans-unit>
        <trans-unit id="445db93e8c0cab9552caebbd0820fe21a286facb" translate="yes" xml:space="preserve">
          <source>BlockingDeque.element()</source>
          <target state="translated">BlockingDeque.element()</target>
        </trans-unit>
        <trans-unit id="bc707189b633ce4845f77e97628afb61f1af0534" translate="yes" xml:space="preserve">
          <source>BlockingDeque.iterator()</source>
          <target state="translated">BlockingDeque.iterator()</target>
        </trans-unit>
        <trans-unit id="5929f0c6f5feccd2c5c90d98f2feb4fe189e81ee" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offer()</source>
          <target state="translated">BlockingDeque.offer()</target>
        </trans-unit>
        <trans-unit id="140a11b0f0d0235efd475c3660b7b86c05e7678e" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offerFirst()</source>
          <target state="translated">BlockingDeque.offerFirst()</target>
        </trans-unit>
        <trans-unit id="c1bee168f07d1c735dc203b84ef27498dfb01cfc" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offerLast()</source>
          <target state="translated">BlockingDeque.offerLast()</target>
        </trans-unit>
        <trans-unit id="7e97188ad7991711958350bab7bafbe0fc9555c0" translate="yes" xml:space="preserve">
          <source>BlockingDeque.peek()</source>
          <target state="translated">BlockingDeque.peek()</target>
        </trans-unit>
        <trans-unit id="ba0e617964bcce68f450a7f48d57886e4610c126" translate="yes" xml:space="preserve">
          <source>BlockingDeque.poll()</source>
          <target state="translated">BlockingDeque.poll()</target>
        </trans-unit>
        <trans-unit id="dd57caf81223f28e756d7deb559ba55faa926d04" translate="yes" xml:space="preserve">
          <source>BlockingDeque.pollFirst()</source>
          <target state="translated">BlockingDeque.pollFirst()</target>
        </trans-unit>
        <trans-unit id="92237bc7c00bb60319e5a80992f044fdfd751436" translate="yes" xml:space="preserve">
          <source>BlockingDeque.pollLast()</source>
          <target state="translated">BlockingDeque.pollLast()</target>
        </trans-unit>
        <trans-unit id="5f4ae3f4211e11a8a9d5e2316e2a3554f4ac7178" translate="yes" xml:space="preserve">
          <source>BlockingDeque.push()</source>
          <target state="translated">BlockingDeque.push()</target>
        </trans-unit>
        <trans-unit id="65de85a2a4760d19bd1850350f479e5a3c4d0da5" translate="yes" xml:space="preserve">
          <source>BlockingDeque.put()</source>
          <target state="translated">BlockingDeque.put()</target>
        </trans-unit>
        <trans-unit id="6af7fbca8160d84241b89a313461ea3f9366fe2f" translate="yes" xml:space="preserve">
          <source>BlockingDeque.putFirst()</source>
          <target state="translated">BlockingDeque.putFirst()</target>
        </trans-unit>
        <trans-unit id="9131752413334c1611615cf3b164d8e97d8ab931" translate="yes" xml:space="preserve">
          <source>BlockingDeque.putLast()</source>
          <target state="translated">BlockingDeque.putLast()</target>
        </trans-unit>
        <trans-unit id="1371772a2cba2d195655c47780477a1893d92cb8" translate="yes" xml:space="preserve">
          <source>BlockingDeque.remove()</source>
          <target state="translated">BlockingDeque.remove()</target>
        </trans-unit>
        <trans-unit id="35cadb29caad91cc2949815b42189140e4ffedfd" translate="yes" xml:space="preserve">
          <source>BlockingDeque.removeFirstOccurrence()</source>
          <target state="translated">BlockingDeque.removeFirstOccurrence()</target>
        </trans-unit>
        <trans-unit id="9b54a4d968ba9f46d0fe3f2ece2a6bc3b44cc834" translate="yes" xml:space="preserve">
          <source>BlockingDeque.removeLastOccurrence()</source>
          <target state="translated">BlockingDeque.removeLastOccurrence()</target>
        </trans-unit>
        <trans-unit id="6db8e8dab44e32f9a7e617348c8b3d22410d2c7a" translate="yes" xml:space="preserve">
          <source>BlockingDeque.size()</source>
          <target state="translated">BlockingDeque.size()</target>
        </trans-unit>
        <trans-unit id="e4d0f34b17d91e4c1128a3b7e22f48c7f1bdeb79" translate="yes" xml:space="preserve">
          <source>BlockingDeque.take()</source>
          <target state="translated">BlockingDeque.take()</target>
        </trans-unit>
        <trans-unit id="dc95893eb428b8b8b6d613b7561011b87286b6b4" translate="yes" xml:space="preserve">
          <source>BlockingDeque.takeFirst()</source>
          <target state="translated">BlockingDeque.takeFirst()</target>
        </trans-unit>
        <trans-unit id="c7d370f92ce04a2c57940e61a6c033f10cfbeace" translate="yes" xml:space="preserve">
          <source>BlockingDeque.takeLast()</source>
          <target state="translated">BlockingDeque.takeLast()</target>
        </trans-unit>
        <trans-unit id="3f70916c7cef37053ab5d86448df36eebb93370a" translate="yes" xml:space="preserve">
          <source>BlockingQueue</source>
          <target state="translated">BlockingQueue</target>
        </trans-unit>
        <trans-unit id="da18778895648b5e78e4a0d80c431caaabca8a6a" translate="yes" xml:space="preserve">
          <source>BlockingQueue.add()</source>
          <target state="translated">BlockingQueue.add()</target>
        </trans-unit>
        <trans-unit id="29ffdd05ddcfb0bcdef2590397410e1f1625bea4" translate="yes" xml:space="preserve">
          <source>BlockingQueue.contains()</source>
          <target state="translated">BlockingQueue.contains()</target>
        </trans-unit>
        <trans-unit id="ea1de17bfb3ca844258b3559e1713668c704f97c" translate="yes" xml:space="preserve">
          <source>BlockingQueue.drainTo()</source>
          <target state="translated">BlockingQueue.drainTo()</target>
        </trans-unit>
        <trans-unit id="34694541ddd303bcd20756f399cd6231c4e77329" translate="yes" xml:space="preserve">
          <source>BlockingQueue.offer()</source>
          <target state="translated">BlockingQueue.offer()</target>
        </trans-unit>
        <trans-unit id="1b07cff622e7d09748221e61467aefbc82f10200" translate="yes" xml:space="preserve">
          <source>BlockingQueue.poll()</source>
          <target state="translated">BlockingQueue.poll()</target>
        </trans-unit>
        <trans-unit id="2f8225b7c3adc824195da066166a85d37d2c8120" translate="yes" xml:space="preserve">
          <source>BlockingQueue.put()</source>
          <target state="translated">BlockingQueue.put()</target>
        </trans-unit>
        <trans-unit id="8e2e238b69b4260890766024e4d87fdab89ffb5e" translate="yes" xml:space="preserve">
          <source>BlockingQueue.remainingCapacity()</source>
          <target state="translated">BlockingQueue.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="26cab4f861e02974ba468ae1433e65c358008910" translate="yes" xml:space="preserve">
          <source>BlockingQueue.remove()</source>
          <target state="translated">BlockingQueue.remove()</target>
        </trans-unit>
        <trans-unit id="78a918d99c4fc28ca827a620a5dbaeb5dc5e4b0f" translate="yes" xml:space="preserve">
          <source>BlockingQueue.take()</source>
          <target state="translated">BlockingQueue.take()</target>
        </trans-unit>
        <trans-unit id="54c45c033f5eb914fae27a646cbd9e23d3750d19" translate="yes" xml:space="preserve">
          <source>Blocks</source>
          <target state="translated">Blocks</target>
        </trans-unit>
        <trans-unit id="8f3ad24dc89b49af619a25cf5e86e97c7828113b" translate="yes" xml:space="preserve">
          <source>Blocks the execution of the current thread and enters a new secondary event loop on the event dispatch thread.</source>
          <target state="translated">阻止当前线程的执行,并在事件派遣线程上进入一个新的二级事件循环。</target>
        </trans-unit>
        <trans-unit id="777b43cb6e7ea09a6e606fee32d26a5a3f1ba40a" translate="yes" xml:space="preserve">
          <source>Blocks until all actions are completed, or the stream is closed, or the current thread is interrupted, whichever happens first.</source>
          <target state="translated">阻止,直到所有操作完成,或流被关闭,或当前线程被中断,以先发生的为准。</target>
        </trans-unit>
        <trans-unit id="0da12db5f98100da127ebc0efe2d5aa146ccb6e9" translate="yes" xml:space="preserve">
          <source>Blocks until all actions are completed, or the stream is closed, or the timeout occurs, or the current thread is interrupted, whichever happens first.</source>
          <target state="translated">在所有操作完成、流关闭、超时或当前线程被中断之前,以先发生的为准。</target>
        </trans-unit>
        <trans-unit id="aa7409819aec95a34f71e58863a16d3adeaa6bb4" translate="yes" xml:space="preserve">
          <source>Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first.</source>
          <target state="translated">在关闭请求后,阻塞到所有任务完成执行,或发生超时,或当前线程被中断,以先发生者为准。</target>
        </trans-unit>
        <trans-unit id="20537270db935e43a5ff4c6d378e4b06abbd075d" translate="yes" xml:space="preserve">
          <source>Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first. Because the &lt;a href=&quot;#commonPool()&quot;&gt;&lt;code&gt;commonPool()&lt;/code&gt;&lt;/a&gt; never terminates until program shutdown, when applied to the common pool, this method is equivalent to &lt;a href=&quot;#awaitQuiescence(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt;&lt;/a&gt; but always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">阻塞直到关闭请求后所有任务都已完成执行，或者发生超时，或者当前线程被中断（以先发生者为准）。因为&lt;a href=&quot;#commonPool()&quot;&gt; &lt;code&gt;commonPool()&lt;/code&gt; &lt;/a&gt;直到程序关闭才终止，所以当应用于公共池时，此方法等效于&lt;a href=&quot;#awaitQuiescence(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;但始终返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8e5851d9dadeeeaa5b008460f5a6f3a3b225e6f2" translate="yes" xml:space="preserve">
          <source>Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first. Because the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;commonPool()&lt;/code&gt;&lt;/a&gt; never terminates until program shutdown, when applied to the common pool, this method is equivalent to &lt;a href=&quot;forkjoinpool#awaitQuiescence-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt;&lt;/a&gt; but always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">阻塞直到关闭请求后所有任务完成执行，或者发生超时，或者当前线程被中断（以先发生者为准）。因为&lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;commonPool()&lt;/code&gt; &lt;/a&gt;直到程序关闭才终止，所以当应用于公共池时，此方法等效于&lt;a href=&quot;forkjoinpool#awaitQuiescence-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt; &lt;/a&gt;但始终返回 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6c64ee39352593f34be63ac6145fb49455242569" translate="yes" xml:space="preserve">
          <source>BltBufferStrategy</source>
          <target state="translated">BltBufferStrategy</target>
        </trans-unit>
        <trans-unit id="19e07430eed6d97d6d73cb4a2967b1f316520f54" translate="yes" xml:space="preserve">
          <source>Bold</source>
          <target state="translated">Bold</target>
        </trans-unit>
        <trans-unit id="ec93d9930a54031afe78617b34de72170c7ff39a" translate="yes" xml:space="preserve">
          <source>BoldAction</source>
          <target state="translated">BoldAction</target>
        </trans-unit>
        <trans-unit id="f69f233005f15802770fd26fbf7ead52ec13d9e6" translate="yes" xml:space="preserve">
          <source>Book</source>
          <target state="translated">Book</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="8fd608c56ea83a9db9270c1b6943702d3b37ef68" translate="yes" xml:space="preserve">
          <source>Boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, case irrelevant). Is the ability to redefine classes needed by this agent. Values other than &lt;code&gt;true&lt;/code&gt; are considered &lt;code&gt;false&lt;/code&gt;. This attribute is optional, the default is &lt;code&gt;
 false&lt;/code&gt;.</source>
          <target state="translated">布尔值（ &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; ，不区分大小写）。是重新定义此代理所需的类的能力。除 &lt;code&gt;true&lt;/code&gt; 以外的其他值均视为 &lt;code&gt;false&lt;/code&gt; 。此属性是可选的，默认值为 &lt;code&gt; false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e125e62854b455a823d0ed016ceaa723d047f75f" translate="yes" xml:space="preserve">
          <source>Boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, case irrelevant). Is the ability to retransform classes needed by this agent. Values other than &lt;code&gt;true&lt;/code&gt; are considered &lt;code&gt;false&lt;/code&gt;. This attribute is optional, the default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">布尔值（ &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; ，不区分大小写）。是重新转换此代理所需的类的能力。除 &lt;code&gt;true&lt;/code&gt; 以外的其他值均视为 &lt;code&gt;false&lt;/code&gt; 。此属性是可选的，默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="18215efa18d148162c1b157547a37823f1ee4229" translate="yes" xml:space="preserve">
          <source>Boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, case irrelevant). Is the ability to set native method prefix needed by this agent. Values other than &lt;code&gt;
 true&lt;/code&gt; are considered &lt;code&gt;false&lt;/code&gt;. This attribute is optional, the default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">布尔值（ &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; ，不区分大小写）。能够设置此代理所需的本机方法前缀。除 &lt;code&gt; true&lt;/code&gt; 以外的其他值均视为 &lt;code&gt;false&lt;/code&gt; 。此属性是可选的，默认值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ac0a5d43a40d00bca61759471acf8034025af73f" translate="yes" xml:space="preserve">
          <source>Boolean(false)</source>
          <target state="translated">Boolean(false)</target>
        </trans-unit>
        <trans-unit id="5bdcba22e2f5015ec13f986d7b975c6e5b3bea91" translate="yes" xml:space="preserve">
          <source>Boolean.FALSE</source>
          <target state="translated">Boolean.FALSE</target>
        </trans-unit>
        <trans-unit id="755e2cfac54524af42eba823094429e4621fd248" translate="yes" xml:space="preserve">
          <source>Boolean.booleanValue()</source>
          <target state="translated">Boolean.booleanValue()</target>
        </trans-unit>
        <trans-unit id="4f1686ae994305fedcf9f3902e8de82d4c6aba2f" translate="yes" xml:space="preserve">
          <source>Boolean.compare()</source>
          <target state="translated">Boolean.compare()</target>
        </trans-unit>
        <trans-unit id="b2735b2a749b0bfc7bbd5d997b59fde74c1d74b3" translate="yes" xml:space="preserve">
          <source>Boolean.compareTo()</source>
          <target state="translated">Boolean.compareTo()</target>
        </trans-unit>
        <trans-unit id="a7e6cc7126c0810a972cc90de41f9d5e73b50bed" translate="yes" xml:space="preserve">
          <source>Boolean.equals()</source>
          <target state="translated">Boolean.equals()</target>
        </trans-unit>
        <trans-unit id="a6b64bad98cff06904cae8c22449b3ed681058c0" translate="yes" xml:space="preserve">
          <source>Boolean.getBoolean()</source>
          <target state="translated">Boolean.getBoolean()</target>
        </trans-unit>
        <trans-unit id="54ea8021aa4d8619e0fb086a3774b1ec58d679db" translate="yes" xml:space="preserve">
          <source>Boolean.hashCode()</source>
          <target state="translated">Boolean.hashCode()</target>
        </trans-unit>
        <trans-unit id="5385e71f52e787213e89bd9ec9d3aec9b5a31177" translate="yes" xml:space="preserve">
          <source>Boolean.logicalAnd()</source>
          <target state="translated">Boolean.logicalAnd()</target>
        </trans-unit>
        <trans-unit id="4723a7a485d3d52e8b2fd746e03ce78bece1889a" translate="yes" xml:space="preserve">
          <source>Boolean.logicalOr()</source>
          <target state="translated">Boolean.logicalOr()</target>
        </trans-unit>
        <trans-unit id="f174551b1e392e9c404a95e00e1fd023a8ecfa79" translate="yes" xml:space="preserve">
          <source>Boolean.logicalXor()</source>
          <target state="translated">Boolean.logicalXor()</target>
        </trans-unit>
        <trans-unit id="a517cf80486e0d3f2d052bae12a444adfb164516" translate="yes" xml:space="preserve">
          <source>Boolean.parseBoolean()</source>
          <target state="translated">Boolean.parseBoolean()</target>
        </trans-unit>
        <trans-unit id="a7f19794b9adaa375b2fb65fabc1e14d6b0644d4" translate="yes" xml:space="preserve">
          <source>Boolean.toString()</source>
          <target state="translated">Boolean.toString()</target>
        </trans-unit>
        <trans-unit id="36df6179b265f6becdddca2954b7b822cdb5feb4" translate="yes" xml:space="preserve">
          <source>Boolean.valueOf()</source>
          <target state="translated">Boolean.valueOf()</target>
        </trans-unit>
        <trans-unit id="c3a6b6b221f958ec66fdc1ebbea468d791770b67" translate="yes" xml:space="preserve">
          <source>BooleanControl</source>
          <target state="translated">BooleanControl</target>
        </trans-unit>
        <trans-unit id="264493d1d1370cdf5822ebc72afddeff55db11c3" translate="yes" xml:space="preserve">
          <source>BooleanControl.Type</source>
          <target state="translated">BooleanControl.Type</target>
        </trans-unit>
        <trans-unit id="31535f69c539a2c0afbf491f8e73b77b3c9090e1" translate="yes" xml:space="preserve">
          <source>BooleanControl.getStateLabel()</source>
          <target state="translated">BooleanControl.getStateLabel()</target>
        </trans-unit>
        <trans-unit id="11303e81a66d95eda4c521da66e0de85aa0ecec3" translate="yes" xml:space="preserve">
          <source>BooleanControl.getValue()</source>
          <target state="translated">BooleanControl.getValue()</target>
        </trans-unit>
        <trans-unit id="0a7092b20fac0fca2379b95bc69bf5f6201e0b5d" translate="yes" xml:space="preserve">
          <source>BooleanControl.setValue()</source>
          <target state="translated">BooleanControl.setValue()</target>
        </trans-unit>
        <trans-unit id="470fb9dca80e1ee6f9f95de16eb31f04fcce6736" translate="yes" xml:space="preserve">
          <source>BooleanControl.toString()</source>
          <target state="translated">BooleanControl.toString()</target>
        </trans-unit>
        <trans-unit id="49195bec135ba192b5beeded566abc2b031cf80e" translate="yes" xml:space="preserve">
          <source>BooleanFlag</source>
          <target state="translated">BooleanFlag</target>
        </trans-unit>
        <trans-unit id="455e9681e0f8bdba8a6c0712489d266dc1e9574f" translate="yes" xml:space="preserve">
          <source>BooleanSupplier</source>
          <target state="translated">BooleanSupplier</target>
        </trans-unit>
        <trans-unit id="12223b428db841ff1f72fb7117584ea71d29ff33" translate="yes" xml:space="preserve">
          <source>BooleanSupplier.getAsBoolean()</source>
          <target state="translated">BooleanSupplier.getAsBoolean()</target>
        </trans-unit>
        <trans-unit id="239f5cbec3628a9ed7d3195f61a537bdd7ebbe74" translate="yes" xml:space="preserve">
          <source>BooleanType</source>
          <target state="translated">BooleanType</target>
        </trans-unit>
        <trans-unit id="4b6effcb65de8faa18ae1ba351f7c99e0d69b032" translate="yes" xml:space="preserve">
          <source>BooleanValue</source>
          <target state="translated">BooleanValue</target>
        </trans-unit>
        <trans-unit id="89ec4ec2bf400e823f3ca49d0cb938b0fedd7bab" translate="yes" xml:space="preserve">
          <source>Bootstrap</source>
          <target state="translated">Bootstrap</target>
        </trans-unit>
        <trans-unit id="2dfeed6ef3cbd16db981638e61fb8e543a2d82f4" translate="yes" xml:space="preserve">
          <source>Bootstrap class loader. It is the virtual machine's built-in class loader, typically represented as &lt;code&gt;null&lt;/code&gt;, and does not have a parent.</source>
          <target state="translated">Bootstrap类加载器。它是虚拟机的内置类加载器，通常表示为 &lt;code&gt;null&lt;/code&gt; ，并且没有父级。</target>
        </trans-unit>
        <trans-unit id="be78bacafcb99efe1d44273ad187722b35550f25" translate="yes" xml:space="preserve">
          <source>Bootstrap method to generate the &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../object#toString()&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt; methods, based on a description of the component names and accessor methods, for either &lt;code&gt;invokedynamic&lt;/code&gt; call sites or dynamic constant pool entries.</source>
          <target state="translated">自举方法来生成&lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;../object#toString()&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt;方法，基于所述组件的名称和存取方法的描述中，为任一 &lt;code&gt;invokedynamic&lt;/code&gt; 呼叫网站或动态常量池中的项。</target>
        </trans-unit>
        <trans-unit id="e315d66c938663733515fc0c75079c230fb89bdd" translate="yes" xml:space="preserve">
          <source>Bootstrap method to generate the &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../object#toString()&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt; methods, based on a description of the component names and accessor methods, for either &lt;code&gt;invokedynamic&lt;/code&gt; call sites or dynamic constant pool entries. For more detail on the semantics of the generated methods see the specification of &lt;a href=&quot;../record#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Record.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../record#hashCode()&quot;&gt;&lt;code&gt;Record.hashCode()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../record#toString()&quot;&gt;&lt;code&gt;Record.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">自举方法来生成&lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;，和&lt;a href=&quot;../object#toString()&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt;方法，基于所述组件的名称和存取方法的描述中，为任一 &lt;code&gt;invokedynamic&lt;/code&gt; 呼叫网站或动态常量池中的项。有关生成的方法的语义的更多详细信息，请参见&lt;a href=&quot;../record#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Record.equals(Object)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../record#hashCode()&quot;&gt; &lt;code&gt;Record.hashCode()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../record#toString()&quot;&gt; &lt;code&gt;Record.toString()&lt;/code&gt; 的规范&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d4749b4f5c5be78fe9668dbe135dee74d12f9344" translate="yes" xml:space="preserve">
          <source>Bootstrap methods for dynamically-computed constants.</source>
          <target state="translated">动态计算常量的Bootstrap方法。</target>
        </trans-unit>
        <trans-unit id="fc9fcfe1979c947b591df57fbc8414ad559f9aa5" translate="yes" xml:space="preserve">
          <source>Bootstrap methods for state-driven implementations of core methods, including &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../object#toString()&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">用于核心方法的状态驱动实现的Bootstrap方法，包括&lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../object#toString()&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="956901d3e6846937d41d3f1f6e16680c0a4da509" translate="yes" xml:space="preserve">
          <source>Bootstrap methods for state-driven implementations of core methods, including &lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../object#toString()&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt;. These methods may be used, for example, by Java compiler implementations to implement the bodies of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; methods for record classes.</source>
          <target state="translated">用于核心方法的状态驱动实现的Bootstrap方法，包括&lt;a href=&quot;../object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;../object#toString()&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt;。例如，Java编译器实现可以使用这些方法来实现记录类的&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt;方法的主体。</target>
        </trans-unit>
        <trans-unit id="58202ca0e02ac0bedb3dcba2f247980f98785173" translate="yes" xml:space="preserve">
          <source>BootstrapMethodError</source>
          <target state="translated">BootstrapMethodError</target>
        </trans-unit>
        <trans-unit id="5d10d3f42121c3aa0d7923d1f05cccf56ef176e5" translate="yes" xml:space="preserve">
          <source>Border</source>
          <target state="translated">Border</target>
        </trans-unit>
        <trans-unit id="00b76ebe7142d5e4c57150f32cc098995e040062" translate="yes" xml:space="preserve">
          <source>Border for a Palette.</source>
          <target state="translated">调色板的边框。</target>
        </trans-unit>
        <trans-unit id="3cea08c18255a403dd736851d275c3042c9d0d99" translate="yes" xml:space="preserve">
          <source>Border for a Table Header</source>
          <target state="translated">表头的边框</target>
        </trans-unit>
        <trans-unit id="1284d90ede4c046de15c4252800d8ab5cada2cc2" translate="yes" xml:space="preserve">
          <source>Border instances are designed to be shared. Rather than creating a new border object using one of border classes, use the BorderFactory methods, which produces a shared instance of the common border types.</source>
          <target state="translated">边框实例被设计成可以共享的。与其使用一个边框类创建一个新的边框对象,不如使用BorderFactory方法,它可以产生一个常见边框类型的共享实例。</target>
        </trans-unit>
        <trans-unit id="7f492ae2df61af896b38f31a280c57b28549bb2e" translate="yes" xml:space="preserve">
          <source>Border listener</source>
          <target state="translated">边界监听员</target>
        </trans-unit>
        <trans-unit id="ae6b6860e8b042985ef178d9fc29209d42254ab8" translate="yes" xml:space="preserve">
          <source>Border to use.</source>
          <target state="translated">界来使用。</target>
        </trans-unit>
        <trans-unit id="1d0793d5e15dc54dc74a4b97f82e24703ef88d71" translate="yes" xml:space="preserve">
          <source>BorderFactory</source>
          <target state="translated">BorderFactory</target>
        </trans-unit>
        <trans-unit id="a7c523103173fdff95f0ac435ef3373c8ec778c0" translate="yes" xml:space="preserve">
          <source>BorderLayout</source>
          <target state="translated">BorderLayout</target>
        </trans-unit>
        <trans-unit id="c8561f59d6860b507e99a7ca6c7aa2f5c568ffaf" translate="yes" xml:space="preserve">
          <source>BorderListener</source>
          <target state="translated">BorderListener</target>
        </trans-unit>
        <trans-unit id="7a98e796165de27b506d17c1b8df68a602236c4d" translate="yes" xml:space="preserve">
          <source>BorderUIResource</source>
          <target state="translated">BorderUIResource</target>
        </trans-unit>
        <trans-unit id="d6603988c69141898fd8503ac0e6967945bab9a1" translate="yes" xml:space="preserve">
          <source>BorderUIResource.BevelBorderUIResource</source>
          <target state="translated">BorderUIResource.BevelBorderUIResource</target>
        </trans-unit>
        <trans-unit id="2e89b602b1c3bc0cf5e02eccd5acb97da0208993" translate="yes" xml:space="preserve">
          <source>BorderUIResource.CompoundBorderUIResource</source>
          <target state="translated">BorderUIResource.CompoundBorderUIResource</target>
        </trans-unit>
        <trans-unit id="90955b262a093b6639444c2e3f33bbab5313df47" translate="yes" xml:space="preserve">
          <source>BorderUIResource.EmptyBorderUIResource</source>
          <target state="translated">BorderUIResource.EmptyBorderUIResource</target>
        </trans-unit>
        <trans-unit id="0fc3a5f8722b7a5a3e3f157957aad318caf419ea" translate="yes" xml:space="preserve">
          <source>BorderUIResource.EtchedBorderUIResource</source>
          <target state="translated">BorderUIResource.EtchedBorderUIResource</target>
        </trans-unit>
        <trans-unit id="8b5cb37b951049a963e15a4374c94fe9391186ba" translate="yes" xml:space="preserve">
          <source>BorderUIResource.LineBorderUIResource</source>
          <target state="translated">BorderUIResource.LineBorderUIResource</target>
        </trans-unit>
        <trans-unit id="dea7ff55d9616dcca3ab1e531e8e90f0f75376c0" translate="yes" xml:space="preserve">
          <source>BorderUIResource.MatteBorderUIResource</source>
          <target state="translated">BorderUIResource.MatteBorderUIResource</target>
        </trans-unit>
        <trans-unit id="6cc59feea32efc1b17c82065999b98d7141bf804" translate="yes" xml:space="preserve">
          <source>BorderUIResource.TitledBorderUIResource</source>
          <target state="translated">BorderUIResource.TitledBorderUIResource</target>
        </trans-unit>
        <trans-unit id="29ba42d4e15c33d81dde8a95447c33fef04cb96c" translate="yes" xml:space="preserve">
          <source>Both builder and &lt;code&gt;WebSocket&lt;/code&gt;s created with it operate in a non-blocking fashion. That is, their methods do not block before returning a &lt;code&gt;CompletableFuture&lt;/code&gt;. Asynchronous tasks are executed in this &lt;code&gt;HttpClient&lt;/code&gt;'s executor.</source>
          <target state="translated">使用它创建的builder和 &lt;code&gt;WebSocket&lt;/code&gt; 都以非阻塞方式运行。也就是说，它们的方法在返回 &lt;code&gt;CompletableFuture&lt;/code&gt; 之前不会阻塞。异步任务在此 &lt;code&gt;HttpClient&lt;/code&gt; 的执行程序中执行。</target>
        </trans-unit>
        <trans-unit id="3595d2fd13302959bc317c7f4b891850cf4a7f18" translate="yes" xml:space="preserve">
          <source>Both cases will create a DatagramSocket able to receive broadcasts on UDP port 8888.</source>
          <target state="translated">这两种情况都会创建一个能够在UDP端口8888上接收广播的DatagramSocket。</target>
        </trans-unit>
        <trans-unit id="5ad5f67ff8efcbbc82b98bc9c5990f42b67566df" translate="yes" xml:space="preserve">
          <source>Both compound names must have the same number of components.</source>
          <target state="translated">两个复名的成分数必须相同。</target>
        </trans-unit>
        <trans-unit id="f1d2f1cb2afcb117542272791b1002926ca4ea7d" translate="yes" xml:space="preserve">
          <source>Both null values and the null key are supported. This class has performance characteristics similar to those of the &lt;code&gt;HashMap&lt;/code&gt; class, and has the same efficiency parameters of &lt;em&gt;initial capacity&lt;/em&gt; and &lt;em&gt;load factor&lt;/em&gt;.</source>
          <target state="translated">空值和空键均受支持。该类的性能与 &lt;code&gt;HashMap&lt;/code&gt; 类类似，并且具有相同的效率参数，即&lt;em&gt;初始容量&lt;/em&gt;和&lt;em&gt;负载因子&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ca63d0c749efdb94b0096257f1781e8e3f9cda0f" translate="yes" xml:space="preserve">
          <source>Both prediction resistance and reseed.</source>
          <target state="translated">既要有预测抗性,又要有复播性。</target>
        </trans-unit>
        <trans-unit id="ecbb0d5db293d9937374ced7c423abd9f6356e6c" translate="yes" xml:space="preserve">
          <source>Both the color and the alpha of the destination are cleared (Porter-Duff Clear rule).</source>
          <target state="translated">目的地的颜色和alpha都被清除(波特-达夫清除规则)。</target>
        </trans-unit>
        <trans-unit id="f6415af4604bd6a2721712ef4f070ab79d9801bb" translate="yes" xml:space="preserve">
          <source>Both the color and the alpha of the destination are cleared (Porter-Duff Clear rule). Neither the source nor the destination is used as input.</source>
          <target state="translated">目的地的颜色和alpha都被清除(波特-达夫清除规则)。源点和目的地都不作为输入。</target>
        </trans-unit>
        <trans-unit id="8137268d91d65a070e83aa2c06bb989b4c712b30" translate="yes" xml:space="preserve">
          <source>Both the row and column selection models for &lt;code&gt;JTable&lt;/code&gt; default to using a &lt;code&gt;DefaultListSelectionModel&lt;/code&gt; so that &lt;code&gt;JTable&lt;/code&gt; works the same way as the &lt;code&gt;JList&lt;/code&gt;. See the &lt;code&gt;setSelectionMode&lt;/code&gt; method in &lt;code&gt;JList&lt;/code&gt; for details about the modes.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 的行和列选择模型都默认使用 &lt;code&gt;DefaultListSelectionModel&lt;/code&gt; ,因此 &lt;code&gt;JTable&lt;/code&gt; 的工作方式与 &lt;code&gt;JList&lt;/code&gt; 相同。有关模式的详细信息，请参见 &lt;code&gt;JList&lt;/code&gt; 中的 &lt;code&gt;setSelectionMode&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="5373e10df8d87d6be57b5dbe29adf98e3ebf0549" translate="yes" xml:space="preserve">
          <source>Both values are set and available from the created &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">这两个值均已设置，并且可从创建的&lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16a152a8615b6358632ac8c8d7833ea1564ffa87" translate="yes" xml:space="preserve">
          <source>Both values are set by computing their values from the specified milliseconds and are available using the &lt;code&gt;get&lt;/code&gt; methods of the created &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt;. The values conform to and are defined by:</source>
          <target state="translated">通过从指定的毫秒中计算它们的值来设置这两个值，并且可以使用创建的&lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt;的 &lt;code&gt;get&lt;/code&gt; 方法来使用这两个值。这些值符合并定义为：</target>
        </trans-unit>
        <trans-unit id="7862383e0a37016766574a2f04f8557b4d0f49d7" translate="yes" xml:space="preserve">
          <source>Both vendors and developers can register &lt;code&gt;SyncProvider&lt;/code&gt; implementations using one of the following mechanisms.</source>
          <target state="translated">供应商和开发人员都可以使用以下机制之一注册 &lt;code&gt;SyncProvider&lt;/code&gt; 实现。</target>
        </trans-unit>
        <trans-unit id="3e3da6a0a271173558be9cbc9e382de493164957" translate="yes" xml:space="preserve">
          <source>Bound property</source>
          <target state="translated">绑定财产</target>
        </trans-unit>
        <trans-unit id="53570faeb0df46b1a2d5fbd0fbdfdfd1b5e79e2b" translate="yes" xml:space="preserve">
          <source>Bound property for lastLocation.</source>
          <target state="translated">lastLocation的绑定属性。</target>
        </trans-unit>
        <trans-unit id="6f7e07c8fbc89f9dea09aea24015c6f540da38fa" translate="yes" xml:space="preserve">
          <source>Bound property for oneTouchExpandable.</source>
          <target state="translated">oneTouchExpandable的绑定属性。</target>
        </trans-unit>
        <trans-unit id="136b942a1eb957982a8193c2cfe6efb51382f9d1" translate="yes" xml:space="preserve">
          <source>Bound property for the dividerLocation.</source>
          <target state="translated">分隔线位置的约束属性。</target>
        </trans-unit>
        <trans-unit id="8c3714d16fd1012fc699fad24f7722b00eb936ff" translate="yes" xml:space="preserve">
          <source>Bound property for weight.</source>
          <target state="translated">重量的约束属性。</target>
        </trans-unit>
        <trans-unit id="ce319acf0b9043695ed9871d636fca5f4fc2a7a8" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;cellEditor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cellEditor&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="1cb78d194e515da191a650f498a79d6fb324dab3" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;cellRenderer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cellRenderer&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="63dd5919015fe33ade2f7db1b28096da9002bb4b" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;editable&lt;/code&gt;.</source>
          <target state="translated">绑定属性名称为 &lt;code&gt;editable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="395e7bae0f344b5c824b4325624f8a6c1b0a7538" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;icon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;icon&lt;/code&gt; 绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="4df1990455a59f16d44961e68393f65a815b2ccd" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;initialSelectionValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;initialSelectionValue&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="b74a9436507120e61723b5f88d5df3ae3b1cc789" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;initialValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;initialValue&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="60d0ddd2fcc61fccc062528ec3008afddd2b4050" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;inputValue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;inputValue&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="96f25f49c10fdcca7975c3249cae2b081f550015" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;largeModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;largeModel&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="b310d2d5ba217e2cb5edbffa64f972993bbbe7d4" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;leadSelectionPath&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;leadSelectionPath&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="1ca97f1c65b198e4fe69b4a338e59c224d6cd850" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; 绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="da73b75be315727ac1fd4e0a1499e6f2683f01d6" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;messagesStopCellEditing&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;messagesStopCellEditing&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="1ca71e914054e951b1c98e5ae098c0944ab3cca9" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;option&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;option&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="051456b921094fdcd3f019f7651c1ba2f851c916" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;optionType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;optionType&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="b77064fb03e87433aa34eabb0dd29d3e04860395" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;rootVisible&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rootVisible&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="3905813a8a4a5aad94f1add56544d55d69f6cc03" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;rowHeight&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rowHeight&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="4ccfd1365ef65bc165a771936ea85cdfc6ff6c79" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;scrollsOnExpand&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scrollsOnExpand&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="9d22993aaa2ac58d124a48d953ed5459c8a6c5f9" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;selectionValues&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;selectionValues&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="f0380a5632c34edb9bc236b26cdf4c67cb34f81d" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;showsRootHandles&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;showsRootHandles&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="d23605a605d1ab0f703499a9c0937d8663082108" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;toggleClickCount&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;toggleClickCount&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="6bbcf90be5619354cba4e07f91bcaeb24b101d74" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;treeModel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;treeModel&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="11ce5c8a1f4de74a543992f710d2d617f18e0e14" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="1d8bab1e00fc3a23e48e87eca701c81fed4f8762" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="5eff916ca996eb819a0c6952b1ffd43ab7779d42" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;visibleRowCount&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;visibleRowCount&lt;/code&gt; 的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="412a87ee93f284742f8db2cbb6b9ba28f179b2ec" translate="yes" xml:space="preserve">
          <source>Bound property name for &lt;code&gt;wantsInput&lt;/code&gt;.</source>
          <target state="translated">绑定属性名 &lt;code&gt;wantsInput&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4cb6a70037c603e9a52e2ca72428fb8d984a8ef1" translate="yes" xml:space="preserve">
          <source>Bound property name for anchor selection path.</source>
          <target state="translated">锚选择路径的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="a81cede6a210ceb3e43f53969905017554c669d0" translate="yes" xml:space="preserve">
          <source>Bound property name for border.</source>
          <target state="translated">边界的约束属性名称。</target>
        </trans-unit>
        <trans-unit id="80e48975a9651a54c46a0664149ae194e4fde2a4" translate="yes" xml:space="preserve">
          <source>Bound property name for continuousLayout.</source>
          <target state="translated">continuousLayout的绑定属性名。</target>
        </trans-unit>
        <trans-unit id="d7f2aaf41219ddf400b91e76ceaac5bb36219833" translate="yes" xml:space="preserve">
          <source>Bound property name for expands selected paths property</source>
          <target state="translated">拓展选定路径的绑定属性名称 属性</target>
        </trans-unit>
        <trans-unit id="eeb1725aa0e14af15314318d10e840aa8f3c3e9a" translate="yes" xml:space="preserve">
          <source>Bound property name for orientation (horizontal or vertical).</source>
          <target state="translated">方向(水平或垂直)的绑定属性名称。</target>
        </trans-unit>
        <trans-unit id="eef94cfdbc2e58108a699df4ebd68c8c33dc0a81" translate="yes" xml:space="preserve">
          <source>Bound property name for selectionModel.</source>
          <target state="translated">SelectionModel的绑定属性名。</target>
        </trans-unit>
        <trans-unit id="70cbd0b1c47315493ecc4e3cc5b826137b42055b" translate="yes" xml:space="preserve">
          <source>Bound property name.</source>
          <target state="translated">绑定财产名称。</target>
        </trans-unit>
        <trans-unit id="77697755f4af4d764c024b9d7f478b1eaf6b4b14" translate="yes" xml:space="preserve">
          <source>Boundary matchers</source>
          <target state="translated">边界匹配器</target>
        </trans-unit>
        <trans-unit id="0dd3d6db12c1b8eec9e5f4e6f422befff36f2901" translate="yes" xml:space="preserve">
          <source>BoundedRangeModel</source>
          <target state="translated">BoundedRangeModel</target>
        </trans-unit>
        <trans-unit id="239ca5767afac9641593464ce02bc454d6ac07a9" translate="yes" xml:space="preserve">
          <source>Box</source>
          <target state="translated">Box</target>
        </trans-unit>
        <trans-unit id="87e8fc1b19ca8977a10dd3e93ee3a88271f0bb95" translate="yes" xml:space="preserve">
          <source>Box-orientation constant used to specify the bottom of a box.</source>
          <target state="translated">框的方向常数,用于指定框的底部。</target>
        </trans-unit>
        <trans-unit id="80d6fa3c9a74e673d1ed6945c494b6d6c965f72f" translate="yes" xml:space="preserve">
          <source>Box-orientation constant used to specify the left side of a box.</source>
          <target state="translated">框的方向常数,用于指定框的左侧。</target>
        </trans-unit>
        <trans-unit id="3b1d32709a4833c44be4f4e066576e830eeadbd3" translate="yes" xml:space="preserve">
          <source>Box-orientation constant used to specify the right side of a box.</source>
          <target state="translated">框的方向常数,用于指定框的右侧。</target>
        </trans-unit>
        <trans-unit id="7418621de14b100194522d0401896d814e1b96cb" translate="yes" xml:space="preserve">
          <source>Box-orientation constant used to specify the top of a box.</source>
          <target state="translated">框的方向常数,用于指定框的顶部。</target>
        </trans-unit>
        <trans-unit id="092528bdebc3b64b64416eb0937dfe96e1c64972" translate="yes" xml:space="preserve">
          <source>Box.AccessibleBox</source>
          <target state="translated">Box.AccessibleBox</target>
        </trans-unit>
        <trans-unit id="372e1b073e7f4c716dc443730b21a0cc2a503511" translate="yes" xml:space="preserve">
          <source>Box.Filler</source>
          <target state="translated">Box.Filler</target>
        </trans-unit>
        <trans-unit id="c6a3bf8c88ddbae11dea86d944c0e5593914e47c" translate="yes" xml:space="preserve">
          <source>Box.Filler.AccessibleBoxFiller</source>
          <target state="translated">Box.Filler.AccessibleBoxFiller</target>
        </trans-unit>
        <trans-unit id="4643b60d17f31c867a1ac5c33654e7268d252e59" translate="yes" xml:space="preserve">
          <source>BoxLayout</source>
          <target state="translated">BoxLayout</target>
        </trans-unit>
        <trans-unit id="26db335a3d41f4e12f44a68577fff479bc7383f5" translate="yes" xml:space="preserve">
          <source>BoxLayout attempts to arrange components at their preferred widths (for horizontal layout) or heights (for vertical layout). For a horizontal layout, if not all the components are the same height, BoxLayout attempts to make all the components as high as the highest component. If that's not possible for a particular component, then BoxLayout aligns that component vertically, according to the component's Y alignment. By default, a component has a Y alignment of 0.5, which means that the vertical center of the component should have the same Y coordinate as the vertical centers of other components with 0.5 Y alignment.</source>
          <target state="translated">BoxLayout 试图以其首选的宽度(对于水平布局)或高度(对于垂直布局)来安排组件。对于水平布局,如果不是所有的组件都是相同的高度,BoxLayout会尝试让所有的组件都和最高的组件一样高。如果对某个组件来说这是不可能的,那么BoxLayout会根据组件的Y对齐方式将该组件垂直对齐。默认情况下,一个组件的Y对齐度为0.5,这意味着该组件的垂直中心应该与其他Y对齐度为0.5的组件的垂直中心具有相同的Y坐标。</target>
        </trans-unit>
        <trans-unit id="245a307387879b89d7e31e234d43fcad6030aa95" translate="yes" xml:space="preserve">
          <source>BoxView</source>
          <target state="translated">BoxView</target>
        </trans-unit>
        <trans-unit id="e8ba48c22488c853b299457eb0f47163a0e57fed" translate="yes" xml:space="preserve">
          <source>Boxes are a heavily used view, and having a box that provides this behavior gives substantial opportunity to plug the behavior into a view hierarchy from the view factory.</source>
          <target state="translated">框是一个大量使用的视图,拥有一个提供这种行为的框,就有大量的机会从视图工厂将行为插入到视图层次结构中。</target>
        </trans-unit>
        <trans-unit id="53ae0a115d006c0222a03c676dd0106e0eacae1d" translate="yes" xml:space="preserve">
          <source>Boxes are easier to estimate the size of than some other shapes.</source>
          <target state="translated">盒子比其他一些形状更容易估计其大小。</target>
        </trans-unit>
        <trans-unit id="33e49eb3e69074bc6b7eb66f94f02663fafb823a" translate="yes" xml:space="preserve">
          <source>Boxes are tiled in one direction, so it is easy to divide them into zones in a reliable way.</source>
          <target state="translated">箱子是朝一个方向铺设的,所以很容易以可靠的方式划分区域。</target>
        </trans-unit>
        <trans-unit id="576dfcb352cb55a31073bc0fff1e93741439132a" translate="yes" xml:space="preserve">
          <source>Boxes typically have a simple relationship to the model (i.e. they create child views that directly represent the child elements).</source>
          <target state="translated">方框与模型的关系通常很简单(即它们创建的子视图直接表示子元素)。</target>
        </trans-unit>
        <trans-unit id="9a369c5af5562483d85f08a2c6ca10f4e1795f7e" translate="yes" xml:space="preserve">
          <source>BranchElement</source>
          <target state="translated">BranchElement</target>
        </trans-unit>
        <trans-unit id="a46387f95fa0503ee635462560f3a0308e6c32ad" translate="yes" xml:space="preserve">
          <source>Branches can have any number of children. Leaves do not have children. To determine how many children a branch has, you can call &lt;code&gt;getElementCount()&lt;/code&gt;. To determine the parent of an Element, you can call &lt;code&gt;getParentElement()&lt;/code&gt;. Root elements don't have parents, so calling &lt;code&gt;getParentElement()&lt;/code&gt; on a root returns null.</source>
          <target state="translated">分支可以有任意数量的子代。叶子没有孩子。要确定一个分支有多少 &lt;code&gt;getElementCount()&lt;/code&gt; ，可以调用getElementCount（）。要确定Element的父级，可以调用 &lt;code&gt;getParentElement()&lt;/code&gt; 。根元素没有父元素，因此在根上调用 &lt;code&gt;getParentElement()&lt;/code&gt; 会返回null。</target>
        </trans-unit>
        <trans-unit id="94557c142dbb997de35d349ea1ef22daaa09f969" translate="yes" xml:space="preserve">
          <source>Branches off an association.</source>
          <target state="translated">从一个协会中分离出来的分支。</target>
        </trans-unit>
        <trans-unit id="db0dfc8861ac9dd7fb052d2fe6c0b90efdd0d6d7" translate="yes" xml:space="preserve">
          <source>BreakIterator</source>
          <target state="translated">BreakIterator</target>
        </trans-unit>
        <trans-unit id="73d2be7894564573cb85d72a68353fc124ecd4f4" translate="yes" xml:space="preserve">
          <source>BreakIterator.clone()</source>
          <target state="translated">BreakIterator.clone()</target>
        </trans-unit>
        <trans-unit id="da6bf1d35deb64b6191c3ae9de345fe6684c54a9" translate="yes" xml:space="preserve">
          <source>BreakIterator.current()</source>
          <target state="translated">BreakIterator.current()</target>
        </trans-unit>
        <trans-unit id="bf09d9541cec3f8df88cdebbe95341bfbe4dec11" translate="yes" xml:space="preserve">
          <source>BreakIterator.first()</source>
          <target state="translated">BreakIterator.first()</target>
        </trans-unit>
        <trans-unit id="95ff1eeed767be0330349f53c51b0ce57c9eaf44" translate="yes" xml:space="preserve">
          <source>BreakIterator.following()</source>
          <target state="translated">BreakIterator.following()</target>
        </trans-unit>
        <trans-unit id="9f3475be4d64fded614e93c8922d9477bedbd9ca" translate="yes" xml:space="preserve">
          <source>BreakIterator.getAvailableLocales()</source>
          <target state="translated">BreakIterator.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="e93f2ad1811bd0849524cb54af531961b7c09ff4" translate="yes" xml:space="preserve">
          <source>BreakIterator.getCharacterInstance()</source>
          <target state="translated">BreakIterator.getCharacterInstance()</target>
        </trans-unit>
        <trans-unit id="42f73443349742d1d7044a9833ce5a082c8f6b2b" translate="yes" xml:space="preserve">
          <source>BreakIterator.getLineInstance()</source>
          <target state="translated">BreakIterator.getLineInstance()</target>
        </trans-unit>
        <trans-unit id="91d471a5b105bc6d0372a429fa1845cc92c864c9" translate="yes" xml:space="preserve">
          <source>BreakIterator.getSentenceInstance()</source>
          <target state="translated">BreakIterator.getSentenceInstance()</target>
        </trans-unit>
        <trans-unit id="e3759af129bc8acb53fedf9bd99bf5e44762b81e" translate="yes" xml:space="preserve">
          <source>BreakIterator.getText()</source>
          <target state="translated">BreakIterator.getText()</target>
        </trans-unit>
        <trans-unit id="1d9f4544aa87216d613ef7a0b195689ca1e08fbd" translate="yes" xml:space="preserve">
          <source>BreakIterator.getWordInstance()</source>
          <target state="translated">BreakIterator.getWordInstance()</target>
        </trans-unit>
        <trans-unit id="328d2d3358ab8ccf44da71c0cd5ddc48c52e2c41" translate="yes" xml:space="preserve">
          <source>BreakIterator.isBoundary()</source>
          <target state="translated">BreakIterator.isBoundary()</target>
        </trans-unit>
        <trans-unit id="e579664a42c2701f6d9c2f6efe0638c173fa3149" translate="yes" xml:space="preserve">
          <source>BreakIterator.last()</source>
          <target state="translated">BreakIterator.last()</target>
        </trans-unit>
        <trans-unit id="da1eba00eef7f48debd05fcaa0f4623a09bf11da" translate="yes" xml:space="preserve">
          <source>BreakIterator.next()</source>
          <target state="translated">BreakIterator.next()</target>
        </trans-unit>
        <trans-unit id="0bc2c3886a6402d9d803dfc885300d2927aa4280" translate="yes" xml:space="preserve">
          <source>BreakIterator.preceding()</source>
          <target state="translated">BreakIterator.preceding()</target>
        </trans-unit>
        <trans-unit id="23bff1c758e9909090a2f8ee8266ad4621aa3f5f" translate="yes" xml:space="preserve">
          <source>BreakIterator.previous()</source>
          <target state="translated">BreakIterator.previous()</target>
        </trans-unit>
        <trans-unit id="aab3c7755d6f196fcee6b0a57b1144e9963edbb0" translate="yes" xml:space="preserve">
          <source>BreakIterator.setText()</source>
          <target state="translated">BreakIterator.setText()</target>
        </trans-unit>
        <trans-unit id="4250521827814cd1da79158d915a1d47d078ddce" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider</source>
          <target state="translated">BreakIteratorProvider</target>
        </trans-unit>
        <trans-unit id="4011ceec6b9e20b3967f17bb065232f412c54c3c" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getCharacterInstance()</source>
          <target state="translated">BreakIteratorProvider.getCharacterInstance()</target>
        </trans-unit>
        <trans-unit id="fa22c1a331bc20668bf96a91fe0315cb6f7a7330" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getLineInstance()</source>
          <target state="translated">BreakIteratorProvider.getLineInstance()</target>
        </trans-unit>
        <trans-unit id="f70bd4898021d976c2344351b78a60428c2942ed" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getSentenceInstance()</source>
          <target state="translated">BreakIteratorProvider.getSentenceInstance()</target>
        </trans-unit>
        <trans-unit id="faf6f0aa3d6f95f40e38a6459451927e113d97f2" translate="yes" xml:space="preserve">
          <source>BreakIteratorProvider.getWordInstance()</source>
          <target state="translated">BreakIteratorProvider.getWordInstance()</target>
        </trans-unit>
        <trans-unit id="8f8d9dc0d8ea8c8c498302c2191e6437db355df6" translate="yes" xml:space="preserve">
          <source>BreakTree</source>
          <target state="translated">BreakTree</target>
        </trans-unit>
        <trans-unit id="8b6c85e0b3948e894d5268280951b57c696b3152" translate="yes" xml:space="preserve">
          <source>BreakpointEvent</source>
          <target state="translated">BreakpointEvent</target>
        </trans-unit>
        <trans-unit id="074f1744c6e010b5e198a9593aaca531af74c440" translate="yes" xml:space="preserve">
          <source>BreakpointRequest</source>
          <target state="translated">BreakpointRequest</target>
        </trans-unit>
        <trans-unit id="18b4dce48094c7dd485e28f03e6b95be5421ef4e" translate="yes" xml:space="preserve">
          <source>Breaks this node into two nodes at the specified &lt;code&gt;offset&lt;/code&gt;, keeping both in the tree as siblings.</source>
          <target state="translated">以指定的 &lt;code&gt;offset&lt;/code&gt; 将此节点分为两个节点，并将两个节点都保留在同级树中。</target>
        </trans-unit>
        <trans-unit id="2c1c3346df98f9ac4f139c8e7f58fdebbfca2c34" translate="yes" xml:space="preserve">
          <source>Breaks this node into two nodes at the specified &lt;code&gt;offset&lt;/code&gt;, keeping both in the tree as siblings. After being split, this node will contain all the content up to the &lt;code&gt;offset&lt;/code&gt; point. A new node of the same type, which contains all the content at and after the &lt;code&gt;offset&lt;/code&gt; point, is returned. If the original node had a parent node, the new node is inserted as the next sibling of the original node. When the &lt;code&gt;offset&lt;/code&gt; is equal to the length of this node, the new node has no data.</source>
          <target state="translated">以指定的 &lt;code&gt;offset&lt;/code&gt; 将此节点分为两个节点，并将两个节点都保留在同级树中。分割后，此节点将包含所有内容，直到 &lt;code&gt;offset&lt;/code&gt; 点为止。将返回一个相同类型的新节点，其中包含 &lt;code&gt;offset&lt;/code&gt; 点及其之后的所有内容。如果原始节点具有父节点，则将新节点作为原始节点的下一个同级插入。当 &lt;code&gt;offset&lt;/code&gt; 等于该节点的长度时，新节点将没有数据。</target>
        </trans-unit>
        <trans-unit id="b4fbeb0b62132b5a41e9819c7798155ce3dab3ed" translate="yes" xml:space="preserve">
          <source>Breaks this view on the given axis at the given length.</source>
          <target state="translated">在给定的轴上以给定的长度断开该视图。</target>
        </trans-unit>
        <trans-unit id="f72ce6035891b76afb082e6a403b2d3ee1aeba94" translate="yes" xml:space="preserve">
          <source>Breaks this view on the given axis at the given length. This is implemented to attempt to break on a whitespace location, and returns a fragment with the whitespace at the end. If a whitespace location can't be found, the nearest character is used.</source>
          <target state="translated">在给定的轴上以给定的长度断开该视图。这是为尝试在空白处断开而实现的,并返回一个带有空白处的片段。如果找不到空白位置,则使用最近的字符。</target>
        </trans-unit>
        <trans-unit id="c21bb4feda1b96d7babad58e21e1aa2241931fb2" translate="yes" xml:space="preserve">
          <source>Bridges JSR 199, JSR 269, and the Tree API.</source>
          <target state="translated">桥接JSR 199、JSR 269和Tree API。</target>
        </trans-unit>
        <trans-unit id="ed1927a67271cb657400148297d8b61e2c5d758c" translate="yes" xml:space="preserve">
          <source>Briefly, &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; determines the relationship between the multiple input (electronic) documents fed into a multidoc print job and the output (physical) document or documents produced by the multidoc print job. There are two possibilities:</source>
          <target state="translated">简而言之， &lt;code&gt;MultipleDocumentHandling&lt;/code&gt; 确定送入多文档打印作业的多个输入（电子）文档与由多文档打印作业生成的一个或多个输出（物理）文档之间的关系。有两种可能性：</target>
        </trans-unit>
        <trans-unit id="5c11fcc63058ef7cec96c1281491cabedad11adf" translate="yes" xml:space="preserve">
          <source>Briefly, MultipleDocumentHandling determines the relationship between the multiple input (electronic) documents fed into a multidoc print job and the output (physical) document or documents produced by the multidoc print job. There are two possibilities:</source>
          <target state="translated">简而言之,MultipleDocumentHandling决定了输入到multidoc打印作业的多个输入(电子)文档与multidoc打印作业产生的输出(物理)文档之间的关系。有两种可能。</target>
        </trans-unit>
        <trans-unit id="64e2f734fa47853ea4a866427d3a3d670f77884d" translate="yes" xml:space="preserve">
          <source>Brings this internal frame to the front.</source>
          <target state="translated">把这个内部框架带到了前面。</target>
        </trans-unit>
        <trans-unit id="6a2fc3473aa049cf51d6d729186fe93c433ae4d2" translate="yes" xml:space="preserve">
          <source>Brings this internal frame to the front. Places this internal frame at the top of the stacking order and makes the corresponding adjustment to other visible internal frames.</source>
          <target state="translated">将此内框带到前面。将此内框置于堆叠顺序的顶部,并对其他可见的内框进行相应调整。</target>
        </trans-unit>
        <trans-unit id="68ebdac7d15e9a2f6679d43cdd813978a5f9b72d" translate="yes" xml:space="preserve">
          <source>Brings up a dialog displaying a message, specifying all parameters.</source>
          <target state="translated">弹出一个显示信息的对话框,指定所有参数。</target>
        </trans-unit>
        <trans-unit id="37aede12b5f1b8c5bd80455e61c2592cfd20615e" translate="yes" xml:space="preserve">
          <source>Brings up a dialog that displays a message using a default icon determined by the &lt;code&gt;messageType&lt;/code&gt; parameter.</source>
          <target state="translated">出现一个对话框，该对话框使用由 &lt;code&gt;messageType&lt;/code&gt; 参数确定的默认图标显示一条消息。</target>
        </trans-unit>
        <trans-unit id="c8919dacaae9fc0f3b68c8d45050403bde0fbab8" translate="yes" xml:space="preserve">
          <source>Brings up a dialog where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter, where the &lt;code&gt;messageType&lt;/code&gt; parameter determines the icon to display.</source>
          <target state="translated">出现一个对话框，其中选项的数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定，而 &lt;code&gt;messageType&lt;/code&gt; 参数确定要显示的图标。</target>
        </trans-unit>
        <trans-unit id="96a1b799edfcfe6d4c30ee79493271405fccbb40" translate="yes" xml:space="preserve">
          <source>Brings up a dialog where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter, where the &lt;code&gt;messageType&lt;/code&gt; parameter determines the icon to display. The &lt;code&gt;messageType&lt;/code&gt; parameter is primarily used to supply a default icon from the Look and Feel.</source>
          <target state="translated">出现一个对话框，其中选项的数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定，而 &lt;code&gt;messageType&lt;/code&gt; 参数确定要显示的图标。在 &lt;code&gt;messageType&lt;/code&gt; 参数主要用于从外观和感觉的默认图标。</target>
        </trans-unit>
        <trans-unit id="7d1285dcb27aa5f565c988690ae94a16e6a61494" translate="yes" xml:space="preserve">
          <source>Brings up a dialog where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">出现一个对话框，其中选项的数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定。</target>
        </trans-unit>
        <trans-unit id="76fccbd3333151a6c1d552fded56e53f9f5e8747" translate="yes" xml:space="preserve">
          <source>Brings up a dialog with a specified icon, where the initial choice is determined by the &lt;code&gt;initialValue&lt;/code&gt; parameter and the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">出现一个带有指定图标的对话框，其中初始选择由 &lt;code&gt;initialValue&lt;/code&gt; 参数确定，选择数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定。</target>
        </trans-unit>
        <trans-unit id="642af74412927aeabf4f80626f4e6531e2dc99df" translate="yes" xml:space="preserve">
          <source>Brings up a dialog with a specified icon, where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">出现一个带有指定图标的对话框，其中选项的数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定。</target>
        </trans-unit>
        <trans-unit id="6bd47c00fc2c04f9f5c75a0461255a17d688e5a6" translate="yes" xml:space="preserve">
          <source>Brings up a dialog with a specified icon, where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter. The &lt;code&gt;messageType&lt;/code&gt; parameter is primarily used to supply a default icon from the look and feel.</source>
          <target state="translated">出现一个带有指定图标的对话框，其中选项的数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定。在 &lt;code&gt;messageType&lt;/code&gt; 参数主要用于提供来自外观的默认图标。</target>
        </trans-unit>
        <trans-unit id="0867db2739cb6163705ba4cc5f69491ad903f268" translate="yes" xml:space="preserve">
          <source>Brings up a dialog with the options</source>
          <target state="translated">弹出一个对话框,里面有以下选项</target>
        </trans-unit>
        <trans-unit id="d9fcbc07dbfa63998e30a33f09204c784a69dbd0" translate="yes" xml:space="preserve">
          <source>Brings up a internal dialog panel where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">弹出一个内部对话框面板，其中选项的数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定。</target>
        </trans-unit>
        <trans-unit id="77a64fdcbf1d72dbfcbe4189552187357816f88d" translate="yes" xml:space="preserve">
          <source>Brings up an information-message dialog titled &quot;Message&quot;.</source>
          <target state="translated">弹出名为 &quot;消息 &quot;的信息消息对话框。</target>
        </trans-unit>
        <trans-unit id="9290f22fee2ddd41b4633de8d5a7a0099895356c" translate="yes" xml:space="preserve">
          <source>Brings up an internal confirmation dialog panel.</source>
          <target state="translated">弹出内部确认对话面板。</target>
        </trans-unit>
        <trans-unit id="1354c7d511562b7b53020c40b04f04a92f17c115" translate="yes" xml:space="preserve">
          <source>Brings up an internal confirmation dialog panel. The dialog is a information-message dialog titled &quot;Message&quot;.</source>
          <target state="translated">弹出一个内部确认对话框面板。该对话框是一个名为 &quot;信息 &quot;的信息对话框。</target>
        </trans-unit>
        <trans-unit id="e71efedadfd7e901940887f81ac109b744ec46c7" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel displaying a message, specifying all parameters.</source>
          <target state="translated">弹出一个内部对话面板,显示一条信息,指定所有参数。</target>
        </trans-unit>
        <trans-unit id="3909452e6f91b407db21edcdcd103aa42c4a707e" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel that displays a message using a default icon determined by the &lt;code&gt;messageType&lt;/code&gt; parameter.</source>
          <target state="translated">弹出一个内部对话框面板，该面板使用由 &lt;code&gt;messageType&lt;/code&gt; 参数确定的默认图标显示消息。</target>
        </trans-unit>
        <trans-unit id="847b3dbab3a117f7f2dd5710c647f3cdf9023718" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter, where the &lt;code&gt;messageType&lt;/code&gt; parameter determines the icon to display.</source>
          <target state="translated">弹出一个内部对话框面板，其中选项的数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定，而 &lt;code&gt;messageType&lt;/code&gt; 参数确定要显示的图标。</target>
        </trans-unit>
        <trans-unit id="eb50e240171ac41dd16db08ab10b8314e11fd84f" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter, where the &lt;code&gt;messageType&lt;/code&gt; parameter determines the icon to display. The &lt;code&gt;messageType&lt;/code&gt; parameter is primarily used to supply a default icon from the Look and Feel.</source>
          <target state="translated">弹出一个内部对话框面板，其中选项的数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定，而 &lt;code&gt;messageType&lt;/code&gt; 参数确定要显示的图标。在 &lt;code&gt;messageType&lt;/code&gt; 参数主要用于从外观和感觉的默认图标。</target>
        </trans-unit>
        <trans-unit id="e9621387efd66453784728981078fb7983dd218a" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel with a specified icon, where the initial choice is determined by the &lt;code&gt;initialValue&lt;/code&gt; parameter and the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">弹出带有指定图标的内部对话框面板，其中初始选择由 &lt;code&gt;initialValue&lt;/code&gt; 参数确定，选择数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定。</target>
        </trans-unit>
        <trans-unit id="8a77f4bca4476f69ed7b825515854ab171f15936" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel with a specified icon, where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter.</source>
          <target state="translated">弹出带有指定图标的内部对话框面板，其中选择的数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定。</target>
        </trans-unit>
        <trans-unit id="b9d27732f6953e250df2ef7f26b396d55e0ff705" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel with a specified icon, where the number of choices is determined by the &lt;code&gt;optionType&lt;/code&gt; parameter. The &lt;code&gt;messageType&lt;/code&gt; parameter is primarily used to supply a default icon from the look and feel.</source>
          <target state="translated">弹出带有指定图标的内部对话框面板，其中选择的数量由 &lt;code&gt;optionType&lt;/code&gt; 参数确定。在 &lt;code&gt;messageType&lt;/code&gt; 参数主要用于提供来自外观的默认图标。</target>
        </trans-unit>
        <trans-unit id="aa18e4684e0b8ece90029e1ca60a3fc39a995bb9" translate="yes" xml:space="preserve">
          <source>Brings up an internal dialog panel with the options</source>
          <target state="translated">弹出一个内部对话面板,其中有以下选项。</target>
        </trans-unit>
        <trans-unit id="84bac425af51241cfe9ca189b61d91e60c979f86" translate="yes" xml:space="preserve">
          <source>Broadcasts a localized warning message to all registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method with a string taken from a &lt;code&gt;ResourceBundle&lt;/code&gt;.</source>
          <target state="translated">通过使用从 &lt;code&gt;ResourceBundle&lt;/code&gt; 中获取的字符串调用它们的 &lt;code&gt;warningOccurred&lt;/code&gt; 方法，向所有已注册的 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 广播本地化的警告消息。</target>
        </trans-unit>
        <trans-unit id="5754759b7c00bc0c0ca0793fe43d72a6a21be40d" translate="yes" xml:space="preserve">
          <source>Broadcasts a localized warning message to all registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method with a string taken from a &lt;code&gt;ResourceBundle&lt;/code&gt;. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过使用从 &lt;code&gt;ResourceBundle&lt;/code&gt; 中获取的字符串调用它们的 &lt;code&gt;warningOccurred&lt;/code&gt; 方法，向所有已注册的 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 广播本地化的警告消息。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="8b6b2104d4380bfcc07ee1624400c0a9ae97fe1c" translate="yes" xml:space="preserve">
          <source>Broadcasts a localized warning message to all registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method with a string taken from a &lt;code&gt;ResourceBundle&lt;/code&gt;.</source>
          <target state="translated">通过使用从 &lt;code&gt;ResourceBundle&lt;/code&gt; 中获取的字符串调用它们的 &lt;code&gt;warningOccurred&lt;/code&gt; 方法，向所有已注册的 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 广播本地化的警告消息。</target>
        </trans-unit>
        <trans-unit id="12cd639426d6e28c84aa1968ac907f76de609caf" translate="yes" xml:space="preserve">
          <source>Broadcasts a localized warning message to all registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method with a string taken from a &lt;code&gt;ResourceBundle&lt;/code&gt;. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过使用来自 &lt;code&gt;ResourceBundle&lt;/code&gt; 的字符串调用它们的 &lt;code&gt;warningOccurred&lt;/code&gt; 方法，向所有注册的 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 广播本地化的警告消息。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="672595da198cc839d0f24f3ba49a77e1d6241a95" translate="yes" xml:space="preserve">
          <source>Broadcasts a warning message to all registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 的 &lt;code&gt;warningOccurred&lt;/code&gt; 方法，向其广播警告消息。</target>
        </trans-unit>
        <trans-unit id="d60a80c427121bf2d76085ba74eb25f2749e216c" translate="yes" xml:space="preserve">
          <source>Broadcasts a warning message to all registered &lt;code&gt;IIOReadWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 的 &lt;code&gt;warningOccurred&lt;/code&gt; 方法，向其广播警告消息。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="606eb15b13a2a049f91c20f6fd370de4c7c08fa2" translate="yes" xml:space="preserve">
          <source>Broadcasts a warning message to all registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 的 &lt;code&gt;warningOccurred&lt;/code&gt; 方法，向所有已注册的IIOWriteWarningListener广播警告消息。</target>
        </trans-unit>
        <trans-unit id="b209d1f3ca83add90d97254eb06a8956e77f0daf" translate="yes" xml:space="preserve">
          <source>Broadcasts a warning message to all registered &lt;code&gt;IIOWriteWarningListener&lt;/code&gt;s by calling their &lt;code&gt;warningOccurred&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; 的 &lt;code&gt;warningOccurred&lt;/code&gt; 方法，向其广播警告消息。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="5dc5f1fd1423412b73fcb6d465a73380f964fe7b" translate="yes" xml:space="preserve">
          <source>Broadcasts that the read has been aborted to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;readAborted&lt;/code&gt; method.</source>
          <target state="translated">通过调用调用的 &lt;code&gt;readAborted&lt;/code&gt; 方法向所有注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 广播已终止的读取。</target>
        </trans-unit>
        <trans-unit id="c055ff8e31ff34efb81af54c28b8d6af72be9d81" translate="yes" xml:space="preserve">
          <source>Broadcasts that the read has been aborted to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;readAborted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;readAborted&lt;/code&gt; 方法，将其广播。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="be62b11ac1d2a7d53b7e96adfd9d0cc9cb1e12ea" translate="yes" xml:space="preserve">
          <source>Broadcasts that the write has been aborted to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;writeAborted&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;writeAborted&lt;/code&gt; 方法来广播该写入已中止。</target>
        </trans-unit>
        <trans-unit id="11332fc0f1ca94913e590e5257a1c51b274daa45" translate="yes" xml:space="preserve">
          <source>Broadcasts that the write has been aborted to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;writeAborted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;writeAborted&lt;/code&gt; 方法来广播该写入已中止。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="9d46f20bfd4922e21c6dada7e164ffb079194106" translate="yes" xml:space="preserve">
          <source>Broadcasts the beginning of a progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;passStarted&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 的 &lt;code&gt;passStarted&lt;/code&gt; 方法，广播渐进式过程的开始。</target>
        </trans-unit>
        <trans-unit id="9a9d61677bb035010524d7355ecfa7606e1726ca" translate="yes" xml:space="preserve">
          <source>Broadcasts the beginning of a progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;passStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 的 &lt;code&gt;passStarted&lt;/code&gt; 方法，广播渐进式过程的开始。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="c8cc1e39b382748d1c64e2f7b5efc01f33c25b5b" translate="yes" xml:space="preserve">
          <source>Broadcasts the beginning of a thumbnail progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailPassStarted&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 的 &lt;code&gt;thumbnailPassStarted&lt;/code&gt; 方法，将缩略图渐进式过程的开始广播到所有已注册的IIOReadUpdateListener。</target>
        </trans-unit>
        <trans-unit id="f2bb48b9ba3ae265eaa3080eeb7ee5f62bf7d6e3" translate="yes" xml:space="preserve">
          <source>Broadcasts the beginning of a thumbnail progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailPassStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 的 &lt;code&gt;thumbnailPassStarted&lt;/code&gt; 方法，将缩略图渐进式通行证的开头广播。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="4d7639de15d40615e7d4e2243def678d4307fa13" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of a thumbnail read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailComplete&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailComplete&lt;/code&gt; 方法，将缩略图读取的完成广播给所有已注册的IIOReadProgressListener。</target>
        </trans-unit>
        <trans-unit id="62cbabfc3c243d51e9f23d8f28cd987669f77d5a" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of a thumbnail read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailComplete&lt;/code&gt; 方法，将缩略图读取的完成广播给所有已注册的IIOReadProgressListener。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="81db6f9f6ac9d73434a629b3a61098989cf3a51e" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of a thumbnail write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailComplete&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailComplete&lt;/code&gt; 方法，将缩略图写入的完成广播给所有已注册的IIOWriteProgressListener。</target>
        </trans-unit>
        <trans-unit id="05a6591571de2645cd9790e153ece793cedefc96" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of a thumbnail write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailComplete&lt;/code&gt; 方法，将缩略图写操作的完成广播给所有已注册的IIOWriteProgressListener。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="ff6f30da9a634b2f74e8d46883ea3537d8e82fdd" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an image read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageComplete&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;imageComplete&lt;/code&gt; 方法，将已读取的图像的完成广播给所有已注册的IIOReadProgressListener。</target>
        </trans-unit>
        <trans-unit id="67279b761d26e6212c9e16352cdafb0c7a6a90df" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an image read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;imageComplete&lt;/code&gt; 方法，将读取的图像广播完成。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="9e14c5fcf4fdec1d17c200bbfee4321fa5da49ba" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an image write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageComplete&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;imageComplete&lt;/code&gt; 方法，将图像写入的完成广播给所有已注册的IIOWriteProgressListener。</target>
        </trans-unit>
        <trans-unit id="bbfb93fed6ceccbe02d909d3c45854f1a5756ead" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an image write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;imageComplete&lt;/code&gt; 方法，将图像写入的完成广播出去。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="d931440b18a406fc1bc45c5c248b923755df1aac" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an sequence of image reads to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;sequenceComplete&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;sequenceComplete&lt;/code&gt; 方法，将图像读取序列的完成广播给所有已注册的IIOReadProgressListener。</target>
        </trans-unit>
        <trans-unit id="7fa490c11cb2ff79005a0d90361b1a31fb5aebea" translate="yes" xml:space="preserve">
          <source>Broadcasts the completion of an sequence of image reads to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;sequenceComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;sequenceComplete&lt;/code&gt; 方法，广播图像读取序列的完成。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="f71ee582cc34073f58b338701f3ce89c56e013f4" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of image completion to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageProgress&lt;/code&gt; method.</source>
          <target state="translated">广播图像完成对所有已注册的当前百分比 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 通过调用它们的S &lt;code&gt;imageProgress&lt;/code&gt; 中的方法。</target>
        </trans-unit>
        <trans-unit id="cb1816714bd539436b36423fbafc4804946cf9c6" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of image completion to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">广播图像完成对所有已注册的当前百分比 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 通过调用它们的S &lt;code&gt;imageProgress&lt;/code&gt; 中的方法。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="43f6305ddb15c13287aace8d7354ab75ab0382aa" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of image completion to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageProgress&lt;/code&gt; method.</source>
          <target state="translated">广播图像完成对所有已注册的当前百分比 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 供调用它们的S &lt;code&gt;imageProgress&lt;/code&gt; 中的方法。</target>
        </trans-unit>
        <trans-unit id="239d62983466409831bf3bc425448a362e11fc16" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of image completion to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">广播图像完成对所有已注册的当前百分比 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 供调用它们的S &lt;code&gt;imageProgress&lt;/code&gt; 中的方法。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="362695e7501b942305e5d2328d62574679962790" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of thumbnail completion to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailProgress&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailProgress&lt;/code&gt; 方法，将其缩略图完成的百分比广播给所有已注册的IIOReadProgressListener。</target>
        </trans-unit>
        <trans-unit id="233d2ca30a48fcbcf7b9ef7802de901bfa62460f" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of thumbnail completion to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailProgress&lt;/code&gt; 方法，将其缩略图完成的百分比广播到所有已注册的IIOReadProgressListener。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="2bcc9bc2a01d765cbe8b71b97d4d0b0eef3565c7" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of thumbnail completion to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailProgress&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailProgress&lt;/code&gt; 方法，将其缩略图完成的百分比广播到所有已注册的IIOWriteProgressListener。</target>
        </trans-unit>
        <trans-unit id="09e25eeb99d2dfff80d79f79671daa563b7d02cc" translate="yes" xml:space="preserve">
          <source>Broadcasts the current percentage of thumbnail completion to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailProgress&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailProgress&lt;/code&gt; 方法，将其缩略图完成的百分比广播到所有已注册的IIOWriteProgressListener。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="f98659226b35dc3824f259d4be5f2170f056c064" translate="yes" xml:space="preserve">
          <source>Broadcasts the end of a progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;passComplete&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 的 &lt;code&gt;passComplete&lt;/code&gt; 方法，将渐进式的结束广播。</target>
        </trans-unit>
        <trans-unit id="382e93ee7cc33ea045f81f471c79d2c99ce1df13" translate="yes" xml:space="preserve">
          <source>Broadcasts the end of a progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;passComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 的 &lt;code&gt;passComplete&lt;/code&gt; 方法，将渐进式的结束广播。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="19ce6b77d0d52cebd682a5c572f84427e586d731" translate="yes" xml:space="preserve">
          <source>Broadcasts the end of a thumbnail progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailPassComplete&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 的 &lt;code&gt;thumbnailPassComplete&lt;/code&gt; 方法，将缩略图渐进式通行证的末尾广播给所有已注册的IIOReadUpdateListener。</target>
        </trans-unit>
        <trans-unit id="429b51c0efed2adb9f00389465cf4017b2da006d" translate="yes" xml:space="preserve">
          <source>Broadcasts the end of a thumbnail progressive pass to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailPassComplete&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 的 &lt;code&gt;thumbnailPassComplete&lt;/code&gt; 方法，将缩略图渐进式通行证的末尾广播。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="936b29e7288d60bc2f2939f7535a14a6410f6506" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of a thumbnail read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailStarted&lt;/code&gt; 方法，将其缩略图广播的开始广播给所有已注册的IIOReadProgressListener。</target>
        </trans-unit>
        <trans-unit id="92c71375c22804f33ee00fb64551009c5cdaa994" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of a thumbnail read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailStarted&lt;/code&gt; 方法，将其缩略图的广播广播到所有已注册的IIOReadProgressListener。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="0721078c14a5e7e93fb300de503bcbbf233c7404" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of a thumbnail write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailStarted&lt;/code&gt; 方法，将缩略图写入的开始广播到所有已注册的IIOWriteProgressListener。</target>
        </trans-unit>
        <trans-unit id="c300dcf42b339ee1fb40c11212fa44cfc4777497" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of a thumbnail write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;thumbnailStarted&lt;/code&gt; 方法，将缩略图写入的开始广播到所有已注册的IIOWriteProgressListener。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="23bbb521fe0133f80990873744dcdd63eb25c51d" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an image read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageStarted&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;imageStarted&lt;/code&gt; 方法，将读取的图像的广播广播到所有已注册的IIOReadProgressListener。</target>
        </trans-unit>
        <trans-unit id="c79c5b985921b5f056e23c847b716d18064e0c23" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an image read to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;imageStarted&lt;/code&gt; 方法，广播读取的图像的开始。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="f444dbd07a7544e4d854f1e2b1983e41014096fe" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an image write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageStarted&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;imageStarted&lt;/code&gt; 方法，广播图像写入的开始。</target>
        </trans-unit>
        <trans-unit id="c50de0ae586d28bba3aca2e1d3b56ac755f83ebb" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an image write to all registered &lt;code&gt;IIOWriteProgressListener&lt;/code&gt;s by calling their &lt;code&gt;imageStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOWriteProgressListener&lt;/code&gt; 的 &lt;code&gt;imageStarted&lt;/code&gt; 方法，广播图像写入的开始。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="75a74abe0f39f7093bfdc7a9b75a09869f147820" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an sequence of image reads to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;sequenceStarted&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;sequenceStarted&lt;/code&gt; 方法，广播图像读取序列的开始。</target>
        </trans-unit>
        <trans-unit id="cf958800e8bd085bfb196ce330aaa4c2858b2c4a" translate="yes" xml:space="preserve">
          <source>Broadcasts the start of an sequence of image reads to all registered &lt;code&gt;IIOReadProgressListener&lt;/code&gt;s by calling their &lt;code&gt;sequenceStarted&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadProgressListener&lt;/code&gt; 的 &lt;code&gt;sequenceStarted&lt;/code&gt; 方法，广播图像读取序列的开始。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="0c99ba0a645c242983575723e07d21dceace8916" translate="yes" xml:space="preserve">
          <source>Broadcasts the update of a set of samples in a thumbnail image to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailUpdate&lt;/code&gt; method.</source>
          <target state="translated">在广播缩略图到所有注册的样本集的更新 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 通过调用它们的S &lt;code&gt;thumbnailUpdate&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="b9b2feb03c216c704d67b7c5c33e593a5e29228e" translate="yes" xml:space="preserve">
          <source>Broadcasts the update of a set of samples in a thumbnail image to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;thumbnailUpdate&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 的 &lt;code&gt;thumbnailUpdate&lt;/code&gt; 方法，将缩略图中的一组样本的更新广播到它们。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="fda2b4a2ef686a64a534bb0efeef0bfc8269a212" translate="yes" xml:space="preserve">
          <source>Broadcasts the update of a set of samples to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;imageUpdate&lt;/code&gt; method.</source>
          <target state="translated">通过调用所有已注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 的 &lt;code&gt;imageUpdate&lt;/code&gt; 方法，将一组样本的更新广播。</target>
        </trans-unit>
        <trans-unit id="6291e9f15f277ba0d385f0d98bbb631c342b6747" translate="yes" xml:space="preserve">
          <source>Broadcasts the update of a set of samples to all registered &lt;code&gt;IIOReadUpdateListener&lt;/code&gt;s by calling their &lt;code&gt;imageUpdate&lt;/code&gt; method. Subclasses may use this method as a convenience.</source>
          <target state="translated">通过调用所有注册的 &lt;code&gt;IIOReadUpdateListener&lt;/code&gt; 的 &lt;code&gt;imageUpdate&lt;/code&gt; 方法，将一组样本的更新广播。子类可以方便地使用此方法。</target>
        </trans-unit>
        <trans-unit id="d510d2fe48ecab3d4b8f58048b939b43f9409f43" translate="yes" xml:space="preserve">
          <source>BrokenBarrierException</source>
          <target state="translated">BrokenBarrierException</target>
        </trans-unit>
        <trans-unit id="0cfb183d6b8f920bd176d82a553a9a48aea09afa" translate="yes" xml:space="preserve">
          <source>Buddhist years and eras</source>
          <target state="translated">佛年佛代</target>
        </trans-unit>
        <trans-unit id="2be5f64b36230104ef9c6e230215846a83d18df6" translate="yes" xml:space="preserve">
          <source>Buffer</source>
          <target state="translated">Buffer</target>
        </trans-unit>
        <trans-unit id="01dd0fcf68a77323302089efe3b139bc8da0a28e" translate="yes" xml:space="preserve">
          <source>Buffer to keep building elements.</source>
          <target state="translated">缓冲区,以保持建筑元素。</target>
        </trans-unit>
        <trans-unit id="21da7f9fb3c59affd98c9f93883ba9297c4d466c" translate="yes" xml:space="preserve">
          <source>Buffer.array()</source>
          <target state="translated">Buffer.array()</target>
        </trans-unit>
        <trans-unit id="793a50d8b8738e5e3de662d56828242b4464b8d9" translate="yes" xml:space="preserve">
          <source>Buffer.arrayOffset()</source>
          <target state="translated">Buffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="2c114fba7582d92e87b89cdf155d99d2da7461d8" translate="yes" xml:space="preserve">
          <source>Buffer.capacity()</source>
          <target state="translated">Buffer.capacity()</target>
        </trans-unit>
        <trans-unit id="1bfb54cbce2dffa8fd8d72a71940864f9a2977ee" translate="yes" xml:space="preserve">
          <source>Buffer.clear()</source>
          <target state="translated">Buffer.clear()</target>
        </trans-unit>
        <trans-unit id="5f78003ae7f35dde2f1d3d893701e3df367a7151" translate="yes" xml:space="preserve">
          <source>Buffer.flip()</source>
          <target state="translated">Buffer.flip()</target>
        </trans-unit>
        <trans-unit id="57ec4b07214a62711c5190c3f2adaf50a8a7009b" translate="yes" xml:space="preserve">
          <source>Buffer.hasArray()</source>
          <target state="translated">Buffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="b7763fe26b794d7d4d4efd2c5cd98f6508df36b1" translate="yes" xml:space="preserve">
          <source>Buffer.hasRemaining()</source>
          <target state="translated">Buffer.hasRemaining()</target>
        </trans-unit>
        <trans-unit id="c44810556eb9a98ee723a709c99efce6fefb90b6" translate="yes" xml:space="preserve">
          <source>Buffer.isDirect()</source>
          <target state="translated">Buffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="324b1e9fb02b59ad2e96023cb5860f42eab21e30" translate="yes" xml:space="preserve">
          <source>Buffer.isReadOnly()</source>
          <target state="translated">Buffer.isReadOnly()</target>
        </trans-unit>
        <trans-unit id="1c680a7bdcbaef5c704b2c8c99a493d58f8b9cef" translate="yes" xml:space="preserve">
          <source>Buffer.limit()</source>
          <target state="translated">Buffer.limit()</target>
        </trans-unit>
        <trans-unit id="5bc06def9af412b4a03f7eab1086211803018361" translate="yes" xml:space="preserve">
          <source>Buffer.mark()</source>
          <target state="translated">Buffer.mark()</target>
        </trans-unit>
        <trans-unit id="9964f38bfb77f73e1b37e0e723bfc1461dfc1244" translate="yes" xml:space="preserve">
          <source>Buffer.position()</source>
          <target state="translated">Buffer.position()</target>
        </trans-unit>
        <trans-unit id="469dcd30cfcdde82eb52ed036b9075fcab400c35" translate="yes" xml:space="preserve">
          <source>Buffer.remaining()</source>
          <target state="translated">Buffer.remaining()</target>
        </trans-unit>
        <trans-unit id="334f2a0d6a429a0b9dbc0109f3dc95f6e4436e8d" translate="yes" xml:space="preserve">
          <source>Buffer.reset()</source>
          <target state="translated">Buffer.reset()</target>
        </trans-unit>
        <trans-unit id="61160c6fa0545fdf59e66dd7bbff8f7dda9b1d01" translate="yes" xml:space="preserve">
          <source>Buffer.rewind()</source>
          <target state="translated">Buffer.rewind()</target>
        </trans-unit>
        <trans-unit id="4db804871e2d6dfcd01f6b5a2f0686c7b0eca01b" translate="yes" xml:space="preserve">
          <source>BufferCapabilities</source>
          <target state="translated">BufferCapabilities</target>
        </trans-unit>
        <trans-unit id="872aa4c88f41409161f11bc310163a679416398a" translate="yes" xml:space="preserve">
          <source>BufferCapabilities.FlipContents</source>
          <target state="translated">BufferCapabilities.FlipContents</target>
        </trans-unit>
        <trans-unit id="64600be1a4d0ebec51c5b8f598e409c49f1dc764" translate="yes" xml:space="preserve">
          <source>BufferOverflowException</source>
          <target state="translated">BufferOverflowException</target>
        </trans-unit>
        <trans-unit id="0af21354efafb37f8b23416e3db171e9b304b9c6" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean</source>
          <target state="translated">BufferPoolMXBean</target>
        </trans-unit>
        <trans-unit id="2ad3b7ce1b2b194569e0154c96697eabc50e63a3" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getCount()</source>
          <target state="translated">BufferPoolMXBean.getCount()</target>
        </trans-unit>
        <trans-unit id="5a197bb2d1e583e18cc5fb7174e266e64cc91651" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getMemoryUsed()</source>
          <target state="translated">BufferPoolMXBean.getMemoryUsed()</target>
        </trans-unit>
        <trans-unit id="fe752631bfe49b00ca0ff304b1c54da65dad8e33" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getName()</source>
          <target state="translated">BufferPoolMXBean.getName()</target>
        </trans-unit>
        <trans-unit id="23f0cf982f63468f25ccbf7cb19416c82dea1556" translate="yes" xml:space="preserve">
          <source>BufferPoolMXBean.getTotalCapacity()</source>
          <target state="translated">BufferPoolMXBean.getTotalCapacity()</target>
        </trans-unit>
        <trans-unit id="a1ca15e9e89b6bccbc039e7ddf9cad222029ef75" translate="yes" xml:space="preserve">
          <source>BufferStrategy</source>
          <target state="translated">BufferStrategy</target>
        </trans-unit>
        <trans-unit id="9233d0dc2d4af9caef8ab35cd68a9a6796442e28" translate="yes" xml:space="preserve">
          <source>BufferUnderflowException</source>
          <target state="translated">BufferUnderflowException</target>
        </trans-unit>
        <trans-unit id="681225e9545447984545ab30b0cf9329254f7724" translate="yes" xml:space="preserve">
          <source>BufferedImage</source>
          <target state="translated">BufferedImage</target>
        </trans-unit>
        <trans-unit id="d602673e3d613b43cb07a6fe709dcf104bae16fe" translate="yes" xml:space="preserve">
          <source>BufferedImage objects leave the primary Raster which stores their pixels untouched, but flush any information cached about those pixels such as copies uploaded to the display hardware for accelerated blits.</source>
          <target state="translated">缓冲图像(BufferedImage)对象不触动存储其像素的主光栅,但会刷新任何关于这些像素的缓存信息,例如上传到显示硬件上的副本,以加速blits。</target>
        </trans-unit>
        <trans-unit id="7ec81a8540458cf1f64317601bd27394b81affaa" translate="yes" xml:space="preserve">
          <source>BufferedImage sources with premultiplied alpha data are treated in the same manner as non-premultiplied images for purposes of rescaling. That is, the rescaling is done per band on the raw data of the BufferedImage source without regard to whether the data is premultiplied. If a color conversion is required to the destination ColorModel, the premultiplied state of both source and destination will be taken into account for this step.</source>
          <target state="translated">缓冲图像源的α数据预乘法与非预乘法图像的重新缩放方式相同。也就是说,重新缩放是在BufferedImage源的原始数据上按波段进行的,而不考虑数据是否是预乘的。如果需要将颜色转换为目标ColorModel,则源和目标的预乘状态将在这一步骤中得到考虑。</target>
        </trans-unit>
        <trans-unit id="af25a9d1511ff48b74f1b680197ba1a2189a8b4d" translate="yes" xml:space="preserve">
          <source>BufferedImage sources with premultiplied alpha data are treated in the same manner as non-premultiplied images for purposes of the lookup. That is, the lookup is done per band on the raw data of the BufferedImage source without regard to whether the data is premultiplied. If a color conversion is required to the destination ColorModel, the premultiplied state of both source and destination will be taken into account for this step.</source>
          <target state="translated">缓冲图像源的α数据预乘法与非预乘法图像的处理方式相同,以便进行查找。也就是说,查找是在BufferedImage源的原始数据上按波段进行的,而不考虑数据是否是预乘的。如果需要将颜色转换为目标ColorModel,则源和目标的预乘状态将在这一步骤中得到考虑。</target>
        </trans-unit>
        <trans-unit id="476a7e250facebd03374de6157ca07cb872e14b1" translate="yes" xml:space="preserve">
          <source>BufferedImageFilter</source>
          <target state="translated">BufferedImageFilter</target>
        </trans-unit>
        <trans-unit id="91a9caa83cd3f6fb79d2b4b0344143e4735b46f1" translate="yes" xml:space="preserve">
          <source>BufferedImageOp</source>
          <target state="translated">BufferedImageOp</target>
        </trans-unit>
        <trans-unit id="43d6a3a9a7c84d3cedcfa30ee2d4925536a4e6fa" translate="yes" xml:space="preserve">
          <source>BufferedInputStream</source>
          <target state="translated">BufferedInputStream</target>
        </trans-unit>
        <trans-unit id="cb37191f17d2ccbaa7775852ab9abda9b850db5c" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.available()</source>
          <target state="translated">BufferedInputStream.available()</target>
        </trans-unit>
        <trans-unit id="7e5d5a706380d9c9e662a00e6d7f43910a772dbf" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.close()</source>
          <target state="translated">BufferedInputStream.close()</target>
        </trans-unit>
        <trans-unit id="095809bf225e83e975ec2093ad9d171f72aa3244" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.mark()</source>
          <target state="translated">BufferedInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="337cf14776c747989245856b2163000eecf3637a" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.markSupported()</source>
          <target state="translated">BufferedInputStream.markSupported()</target>
        </trans-unit>
        <trans-unit id="fb89e7ee47d1030b89974e1dbee2c305522acc60" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.read()</source>
          <target state="translated">BufferedInputStream.read()</target>
        </trans-unit>
        <trans-unit id="35b50e38bf1222a88c679a6b63f7d32c7a6bb314" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.reset()</source>
          <target state="translated">BufferedInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="fa3cc1eaa182f0a4128ed87419bd12e197be2a50" translate="yes" xml:space="preserve">
          <source>BufferedInputStream.skip()</source>
          <target state="translated">BufferedInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="7c33b69de473a83861b7cf94afff906d74fb2506" translate="yes" xml:space="preserve">
          <source>BufferedOutputStream</source>
          <target state="translated">BufferedOutputStream</target>
        </trans-unit>
        <trans-unit id="de5d855532a2787488362fc50dadfa5c48110d6d" translate="yes" xml:space="preserve">
          <source>BufferedOutputStream.flush()</source>
          <target state="translated">BufferedOutputStream.flush()</target>
        </trans-unit>
        <trans-unit id="9a608c5a569cdace93a11051aa97b73b8b73c6c2" translate="yes" xml:space="preserve">
          <source>BufferedOutputStream.write()</source>
          <target state="translated">BufferedOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="3c3ba90022b9dc12dc27287d12ccce2217f56df0" translate="yes" xml:space="preserve">
          <source>BufferedReader</source>
          <target state="translated">BufferedReader</target>
        </trans-unit>
        <trans-unit id="79ef6db7b9602e4c96c58a9de8a949d46832916d" translate="yes" xml:space="preserve">
          <source>BufferedReader.close()</source>
          <target state="translated">BufferedReader.close()</target>
        </trans-unit>
        <trans-unit id="5521b420786f0bd2b4b081a5fd6f97bc5d310428" translate="yes" xml:space="preserve">
          <source>BufferedReader.lines()</source>
          <target state="translated">BufferedReader.lines()</target>
        </trans-unit>
        <trans-unit id="57e65962ca744e28d902657126795098c64bd433" translate="yes" xml:space="preserve">
          <source>BufferedReader.mark()</source>
          <target state="translated">BufferedReader.mark()</target>
        </trans-unit>
        <trans-unit id="adb34aa2bc3ee7920eee8e341fc8e354179a2648" translate="yes" xml:space="preserve">
          <source>BufferedReader.markSupported()</source>
          <target state="translated">BufferedReader.markSupported()</target>
        </trans-unit>
        <trans-unit id="959163557212bf8bb5fd146bc8f821f98f0c6cb9" translate="yes" xml:space="preserve">
          <source>BufferedReader.read()</source>
          <target state="translated">BufferedReader.read()</target>
        </trans-unit>
        <trans-unit id="02f10189fcbc66bab79f3fea8424be8c3e3c813d" translate="yes" xml:space="preserve">
          <source>BufferedReader.readLine()</source>
          <target state="translated">BufferedReader.readLine()</target>
        </trans-unit>
        <trans-unit id="bdd1c0747bfcded51cc572c4b6e1708a6a6fa54b" translate="yes" xml:space="preserve">
          <source>BufferedReader.ready()</source>
          <target state="translated">BufferedReader.ready()</target>
        </trans-unit>
        <trans-unit id="c485ce4225a9e7ef7702a9c9ea818c5bdffa1b4b" translate="yes" xml:space="preserve">
          <source>BufferedReader.reset()</source>
          <target state="translated">BufferedReader.reset()</target>
        </trans-unit>
        <trans-unit id="ab7493f82a8a553475e878769dfecadd38033adb" translate="yes" xml:space="preserve">
          <source>BufferedReader.skip()</source>
          <target state="translated">BufferedReader.skip()</target>
        </trans-unit>
        <trans-unit id="78e71426e1f6fb39c644c18fb8b47d451fe6d2f0" translate="yes" xml:space="preserve">
          <source>BufferedWriter</source>
          <target state="translated">BufferedWriter</target>
        </trans-unit>
        <trans-unit id="bda4b82fea67ea9197c59b93abab8ff5b590bc80" translate="yes" xml:space="preserve">
          <source>BufferedWriter.close()</source>
          <target state="translated">BufferedWriter.close()</target>
        </trans-unit>
        <trans-unit id="bee34a8d4a804ddb1d773dba70227e39efc02cb9" translate="yes" xml:space="preserve">
          <source>BufferedWriter.flush()</source>
          <target state="translated">BufferedWriter.flush()</target>
        </trans-unit>
        <trans-unit id="184fc314d94de097b43b39396a3054b7e11fdeea" translate="yes" xml:space="preserve">
          <source>BufferedWriter.newLine()</source>
          <target state="translated">BufferedWriter.newLine()</target>
        </trans-unit>
        <trans-unit id="11661555952067fad97e4e16c0cd8fb79027c341" translate="yes" xml:space="preserve">
          <source>BufferedWriter.write()</source>
          <target state="translated">BufferedWriter.write()</target>
        </trans-unit>
        <trans-unit id="34f34d23f3c639e2cad8dda1c53b7289ac2d0627" translate="yes" xml:space="preserve">
          <source>Buffering allows producers and consumers to transiently operate at different rates. Each subscriber uses an independent buffer. Buffers are created upon first use and expanded as needed up to the given maximum. (The enforced capacity may be rounded up to the nearest power of two and/or bounded by the largest value supported by this implementation.) Invocations of &lt;a href=&quot;flow.subscription#request(long)&quot;&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt; do not directly result in buffer expansion, but risk saturation if unfilled requests exceed the maximum capacity. The default value of &lt;a href=&quot;flow#defaultBufferSize()&quot;&gt;&lt;code&gt;Flow.defaultBufferSize()&lt;/code&gt;&lt;/a&gt; may provide a useful starting point for choosing a capacity based on expected rates, resources, and usages.</source>
          <target state="translated">缓冲允许生产者和消费者以不同的速率瞬时运行。每个订户使用一个独立的缓冲区。缓冲区在首次使用时创建，并根据需要扩展到给定的最大值。（强制容量可能会四舍五入到最接近的2的幂和/或受此实现支持的最大值限制。）&lt;a href=&quot;flow.subscription#request(long)&quot;&gt; &lt;code&gt;request&lt;/code&gt; &lt;/a&gt;调用不会直接导致缓冲区扩展，但是如果未填充的请求超过最大容量，则可能导致风险饱和。&lt;a href=&quot;flow#defaultBufferSize()&quot;&gt; &lt;code&gt;Flow.defaultBufferSize()&lt;/code&gt; &lt;/a&gt;的默认值可以为基于预期的速率，资源和使用情况选择容量提供有用的起点。</target>
        </trans-unit>
        <trans-unit id="4cbcd2f7b704b607643b54842a2d38a1465e1a06" translate="yes" xml:space="preserve">
          <source>Buffers</source>
          <target state="translated">Buffers</target>
        </trans-unit>
        <trans-unit id="3127dbd72d3e8e6dd96a5e4ba8be9595fb57f7e5" translate="yes" xml:space="preserve">
          <source>Buffers are not safe for use by multiple concurrent threads so care should be taken to not access the buffer until the operation has completed.</source>
          <target state="translated">缓冲区对于多个并发线程的使用是不安全的,所以应该注意在操作完成之前不要访问缓冲区。</target>
        </trans-unit>
        <trans-unit id="b81672229ac7edddfe9a42e70119e20c47dd2116" translate="yes" xml:space="preserve">
          <source>Buffers are not safe for use by multiple concurrent threads. If a buffer is to be used by more than one thread then access to the buffer should be controlled by appropriate synchronization.</source>
          <target state="translated">缓冲区被多个并发线程使用是不安全的。如果一个缓冲区要被多个线程使用,那么对缓冲区的访问应该由适当的同步控制。</target>
        </trans-unit>
        <trans-unit id="9cbaa09329064d3bd7918d20348fcfd597575efe" translate="yes" xml:space="preserve">
          <source>Build the structure like it's specified in the stream. This produces elements that contain other elements.</source>
          <target state="translated">像流中指定的那样构建结构。这将产生包含其他元素的元素。</target>
        </trans-unit>
        <trans-unit id="4759bf14d7a511508e86c343c934894b6e8db533" translate="yes" xml:space="preserve">
          <source>Builder</source>
          <target state="translated">Builder</target>
        </trans-unit>
        <trans-unit id="959ee3d636e30b840ffd49d47b94c0810b2bf4c5" translate="yes" xml:space="preserve">
          <source>Builder for &lt;code&gt;JShell&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;JShell&lt;/code&gt; 实例的生成器。</target>
        </trans-unit>
        <trans-unit id="d2235cc49e72e927dc27b77720468fa93ab3abd9" translate="yes" xml:space="preserve">
          <source>Builder for &lt;code&gt;JShell&lt;/code&gt; instances. Create custom instances of &lt;code&gt;JShell&lt;/code&gt; by using the setter methods on this class. After zero or more of these, use the &lt;a href=&quot;#build()&quot;&gt;&lt;code&gt;build()&lt;/code&gt;&lt;/a&gt; method to create a &lt;code&gt;JShell&lt;/code&gt; instance. These can all be chained. For example, setting the remote output and error streams:</source>
          <target state="translated">&lt;code&gt;JShell&lt;/code&gt; 实例的生成器。通过使用 &lt;code&gt;JShell&lt;/code&gt; 的setter方法创建JShell的自定义实例。在零个或多个之后，使用&lt;a href=&quot;#build()&quot;&gt; &lt;code&gt;build()&lt;/code&gt; &lt;/a&gt;方法创建一个 &lt;code&gt;JShell&lt;/code&gt; 实例。这些都可以链接在一起。例如，设置远程输出和错误流：</target>
        </trans-unit>
        <trans-unit id="66c0ebb2b029dee989f21abcdd5e0d3e6e1812f2" translate="yes" xml:space="preserve">
          <source>Builder objects are mutable and are not safe for use by multiple concurrent threads without appropriate synchronization.</source>
          <target state="translated">Builder对象是可突变的,在没有适当同步的情况下,多个并发线程使用是不安全的。</target>
        </trans-unit>
        <trans-unit id="8510d1fe97f2a77a854ffe3df4ef674a7ca7a721" translate="yes" xml:space="preserve">
          <source>Builder to create date-time formatters.</source>
          <target state="translated">创建日期-时间格式化的生成器。</target>
        </trans-unit>
        <trans-unit id="746a106f5b3529d3d55eb2404db770b5e5000179" translate="yes" xml:space="preserve">
          <source>Builders are created by invoking &lt;a href=&quot;httpclient#newBuilder()&quot;&gt;&lt;code&gt;newBuilder&lt;/code&gt;&lt;/a&gt;. Each of the setter methods modifies the state of the builder and returns the same instance. Builders are not thread-safe and should not be used concurrently from multiple threads without external synchronization.</source>
          <target state="translated">生成器是通过调用&lt;a href=&quot;httpclient#newBuilder()&quot;&gt; &lt;code&gt;newBuilder&lt;/code&gt; &lt;/a&gt;创建的。每个setter方法都会修改构建器的状态并返回相同的实例。生成器不是线程安全的，如果没有外部同步，则不应在多个线程中同时使用生成器。</target>
        </trans-unit>
        <trans-unit id="f035549a9ae78ec03fae9a947e472b9cda7fce53" translate="yes" xml:space="preserve">
          <source>Builders are created by invoking &lt;a href=&quot;httpclient#newWebSocketBuilder()&quot;&gt;&lt;code&gt;HttpClient.newWebSocketBuilder&lt;/code&gt;&lt;/a&gt;. The intermediate (setter-like) methods change the state of the builder and return the same builder they have been invoked on. If an intermediate method is not invoked, an appropriate default value (or behavior) will be assumed. A &lt;code&gt;Builder&lt;/code&gt; is not safe for use by multiple threads without external synchronization.</source>
          <target state="translated">通过调用&lt;a href=&quot;httpclient#newWebSocketBuilder()&quot;&gt; &lt;code&gt;HttpClient.newWebSocketBuilder&lt;/code&gt; &lt;/a&gt;创建构建器。中间（类似于setter的）方法会更改构建器的状态，并返回与它们在其上调用过的构建器相同的方法。如果未调用中间方法，则将采用适当的默认值（或行为）。一个 &lt;code&gt;Builder&lt;/code&gt; 是不是没有外部同步多个线程使用是安全的。</target>
        </trans-unit>
        <trans-unit id="4e8fd27eb1eedbadfbaa1f4dc4780ae78ff69e59" translate="yes" xml:space="preserve">
          <source>Builders can be reused; &lt;code&gt;clear()&lt;/code&gt; resets all fields to their default values.</source>
          <target state="translated">建造者可以重复使用； &lt;code&gt;clear()&lt;/code&gt; 将所有字段重置为其默认值。</target>
        </trans-unit>
        <trans-unit id="590df7bd0da5488e56ff16f21d87ec2f11cf5cbd" translate="yes" xml:space="preserve">
          <source>Builds a &lt;a href=&quot;websocket&quot;&gt;&lt;code&gt;WebSocket&lt;/code&gt;&lt;/a&gt; connected to the given &lt;code&gt;URI&lt;/code&gt; and associated with the given &lt;code&gt;Listener&lt;/code&gt;.</source>
          <target state="translated">构建一个连接到给定 &lt;code&gt;URI&lt;/code&gt; 并与给定 &lt;code&gt;Listener&lt;/code&gt; 关联的&lt;a href=&quot;websocket&quot;&gt; &lt;code&gt;WebSocket&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4aa5fef3134fe2911490d89229d9648ae1b42e56" translate="yes" xml:space="preserve">
          <source>Builds a &lt;code&gt;JarSigner&lt;/code&gt; object from the parameters set by the setter methods.</source>
          <target state="translated">根据setter方法设置的参数构建一个 &lt;code&gt;JarSigner&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="4e73bdd2dbbff6fafe0ffaf537589beabe377e71" translate="yes" xml:space="preserve">
          <source>Builds a JShell state engine.</source>
          <target state="translated">构建一个JShell状态引擎。</target>
        </trans-unit>
        <trans-unit id="4a3dd435a107e9019cdc605078792a3b3da35ab3" translate="yes" xml:space="preserve">
          <source>Builds a JShell state engine. This is the entry-point to all JShell functionality. This creates a remote process for execution. It is thus important to close the returned instance.</source>
          <target state="translated">构建一个JShell状态引擎。这是所有JShell功能的入口。这将创建一个远程进程来执行。因此,关闭返回的实例是很重要的。</target>
        </trans-unit>
        <trans-unit id="b2823c628d976abf9ff748cfb0586c810cfc59a7" translate="yes" xml:space="preserve">
          <source>Builds a new chooser panel.</source>
          <target state="translated">建立一个新的选择器面板。</target>
        </trans-unit>
        <trans-unit id="65aa602721b266ff4611de2b9ed7c5350d0ea784" translate="yes" xml:space="preserve">
          <source>Builds and returns a &lt;code&gt;ModuleDescriptor&lt;/code&gt; from its components.</source>
          <target state="translated">从其组件生成并返回 &lt;code&gt;ModuleDescriptor&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3520da09c9486fedfc8342346778647625f8b25a" translate="yes" xml:space="preserve">
          <source>Builds and returns an &lt;a href=&quot;httprequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">生成并返回&lt;a href=&quot;httprequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f0497940dd57acfa607813e15f1d2d28d7f114de" translate="yes" xml:space="preserve">
          <source>Builds the parents of node up to and including the root node, where the original node is the last element in the returned array.</source>
          <target state="translated">建立节点的父节点,直到并包括根节点,其中原始节点是返回数组中的最后一个元素。</target>
        </trans-unit>
        <trans-unit id="d0d68e1be1c0eb4be96226ebf7956a92182da18a" translate="yes" xml:space="preserve">
          <source>Builds the parents of node up to and including the root node, where the original node is the last element in the returned array. The length of the returned array gives the node's depth in the tree.</source>
          <target state="translated">建立节点的父节点,直到并包括根节点,其中原始节点是返回数组中的最后一个元素。返回数组的长度给出节点在树上的深度。</target>
        </trans-unit>
        <trans-unit id="b828831fe62f2b1444cdd592ea84b06569cf84d8" translate="yes" xml:space="preserve">
          <source>Builds the stream, transitioning this builder to the built state.</source>
          <target state="translated">构建流,将这个构建器过渡到构建状态。</target>
        </trans-unit>
        <trans-unit id="cc2cb2e347601f0137532272464740ad20012c91" translate="yes" xml:space="preserve">
          <source>Builds the stream, transitioning this builder to the built state. An &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown if there are further attempts to operate on the builder after it has entered the built state.</source>
          <target state="translated">构建流，将此构建器转换为已构建状态。一个 &lt;code&gt;IllegalStateException&lt;/code&gt; 异常，如果有进一步的尝试已进入建状态后的建设者操作异常。</target>
        </trans-unit>
        <trans-unit id="81d733316f3c03fbb77823d96cf45a2e5377a2d6" translate="yes" xml:space="preserve">
          <source>Built-in character entity</source>
          <target state="translated">内置字符实体</target>
        </trans-unit>
        <trans-unit id="6b0f9e02b333eeded35bf130471a834d107cfe2b" translate="yes" xml:space="preserve">
          <source>Bulk operations may complete abruptly, throwing an exception encountered in the application of a supplied function. Bear in mind when handling such exceptions that other concurrently executing functions could also have thrown exceptions, or would have done so if the first exception had not occurred.</source>
          <target state="translated">批量操作可能会突然完成,抛出一个在应用提供的函数时遇到的异常。在处理这种异常时要记住,其他同时执行的函数也可能会抛出异常,或者如果第一个异常没有发生,也会抛出异常。</target>
        </trans-unit>
        <trans-unit id="ec7fa7bd94a7b59fef4899cf7a553178c2e47f95" translate="yes" xml:space="preserve">
          <source>Bulk operations that add, remove, or examine multiple elements, such as &lt;a href=&quot;#addAll(java.util.Collection)&quot;&gt;&lt;code&gt;addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#removeIf(java.util.function.Predicate)&quot;&gt;&lt;code&gt;removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEach(java.util.function.Consumer&amp;lt;? super E&amp;gt;)&lt;/code&gt;&lt;/a&gt;, are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, a &lt;code&gt;forEach&lt;/code&gt; traversal concurrent with an &lt;code&gt;
 addAll&lt;/code&gt; operation might observe only some of the added elements.</source>
          <target state="translated">批量操作，用于添加，删除或检查多个元素，例如&lt;a href=&quot;#addAll(java.util.Collection)&quot;&gt; &lt;code&gt;addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#removeIf(java.util.function.Predicate)&quot;&gt; &lt;code&gt;removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEach(java.util.function.Consumer&amp;lt;? super E&amp;gt;)&lt;/code&gt; &lt;/a&gt;，&lt;em&gt;不能&lt;/em&gt;保证以原子方式执行。例如，与 &lt;code&gt; addAll&lt;/code&gt; 操作并发的 &lt;code&gt;forEach&lt;/code&gt; 遍历可能只观察到某些添加的元素。</target>
        </trans-unit>
        <trans-unit id="7a95a124c12240687001a91a67a53cc4fc0ef5c0" translate="yes" xml:space="preserve">
          <source>Bulk operations that add, remove, or examine multiple elements, such as &lt;a href=&quot;../abstractcollection#addAll(java.util.Collection)&quot;&gt;&lt;code&gt;AbstractCollection.addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../collection#removeIf(java.util.function.Predicate)&quot;&gt;&lt;code&gt;Collection.removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../lang/iterable#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;Iterable.forEach(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt;&lt;/a&gt;, are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, a &lt;code&gt;forEach&lt;/code&gt; traversal concurrent with an &lt;code&gt;
 addAll&lt;/code&gt; operation might observe only some of the added elements.</source>
          <target state="translated">批量操作，用于添加，删除或检查多个元素，例如&lt;a href=&quot;../abstractcollection#addAll(java.util.Collection)&quot;&gt; &lt;code&gt;AbstractCollection.addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../collection#removeIf(java.util.function.Predicate)&quot;&gt; &lt;code&gt;Collection.removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;../../lang/iterable#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;Iterable.forEach(java.util.function.Consumer&amp;lt;? super T&amp;gt;)&lt;/code&gt; &lt;/a&gt;，都&lt;em&gt;不能&lt;/em&gt;保证被原子方式执行。例如，与 &lt;code&gt; addAll&lt;/code&gt; 操作并发的 &lt;code&gt;forEach&lt;/code&gt; 遍历可能只观察到某些添加的元素。</target>
        </trans-unit>
        <trans-unit id="856d3bc10a7168a3ad6e321674ef96802586db65" translate="yes" xml:space="preserve">
          <source>Bulk operations that add, remove, or examine multiple elements, such as &lt;a href=&quot;../abstractqueue#addAll(java.util.Collection)&quot;&gt;&lt;code&gt;AbstractQueue.addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#removeIf(java.util.function.Predicate)&quot;&gt;&lt;code&gt;removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEach(java.util.function.Consumer&amp;lt;? super E&amp;gt;)&lt;/code&gt;&lt;/a&gt;, are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, a &lt;code&gt;forEach&lt;/code&gt; traversal concurrent with an &lt;code&gt;
 addAll&lt;/code&gt; operation might observe only some of the added elements.</source>
          <target state="translated">批量操作，用于添加，删除或检查多个元素，例如&lt;a href=&quot;../abstractqueue#addAll(java.util.Collection)&quot;&gt; &lt;code&gt;AbstractQueue.addAll(java.util.Collection&amp;lt;? extends E&amp;gt;)&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#removeIf(java.util.function.Predicate)&quot;&gt; &lt;code&gt;removeIf(java.util.function.Predicate&amp;lt;? super E&amp;gt;)&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEach(java.util.function.Consumer&amp;lt;? super E&amp;gt;)&lt;/code&gt; &lt;/a&gt;，都&lt;em&gt;不能&lt;/em&gt;保证被原子方式执行。例如，与 &lt;code&gt; addAll&lt;/code&gt; 操作并发的 &lt;code&gt;forEach&lt;/code&gt; 遍历可能只观察到某些添加的元素。</target>
        </trans-unit>
        <trans-unit id="d44c90d441645a4cf7d185b8edd1999a391ac58a" translate="yes" xml:space="preserve">
          <source>Bullet style.</source>
          <target state="translated">子弹式。</target>
        </trans-unit>
        <trans-unit id="d1f6ee00ee4757628b7ad1bc3ad5e08222573096" translate="yes" xml:space="preserve">
          <source>Bullet style. See the type attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">子弹样式。参见HTML 4.0中的类型属性定义。此属性在HTML 4.0中已被废弃。</target>
        </trans-unit>
        <trans-unit id="028861d8fa6ae30f4c3df9c06e33472d5bd3dbd6" translate="yes" xml:space="preserve">
          <source>BundleBaseName</source>
          <target state="translated">BundleBaseName</target>
        </trans-unit>
        <trans-unit id="b99c55ad271aece3d6443dea2009513100882e12" translate="yes" xml:space="preserve">
          <source>Bundles class name with class bytecodes.</source>
          <target state="translated">将类名与类的字节码捆绑在一起。</target>
        </trans-unit>
        <trans-unit id="30a034cc2e1d52e15d08fd41d2f411352ef21a8d" translate="yes" xml:space="preserve">
          <source>But if the application did not initiate the closure process, or if the circumstances above do not apply, this method should be called whenever the end of the SSL/TLS data stream is reached. This ensures closure of the inbound side, and checks that the peer followed the SSL/TLS close procedure properly, thus detecting possible truncation attacks.</source>
          <target state="translated">但如果应用程序没有启动关闭过程,或者上述情况不适用,那么每当到达SSL/TLS数据流的终点时,就应该调用这个方法。这样可以确保入站侧的关闭,并检查对等体是否正确地遵循了SSL/TLS关闭程序,从而检测可能的截断攻击。</target>
        </trans-unit>
        <trans-unit id="9c172852891360339e3255682038e7d1dc2244de" translate="yes" xml:space="preserve">
          <source>But if the application did not initiate the closure process, or if the circumstances above do not apply, this method should be called whenever the end of the SSL/TLS/DTLS data stream is reached. This ensures closure of the inbound side, and checks that the peer followed the SSL/TLS/DTLS close procedure properly, thus detecting possible truncation attacks.</source>
          <target state="translated">但如果应用程序没有启动关闭过程,或者上述情况不适用,那么每当到达SSL/TLS/DTLS数据流的终点时,就应该调用这个方法。这样可以保证入站侧的关闭,并检查对等体是否正确遵循了SSL/TLS/DTLS的关闭程序,从而检测可能的截断攻击。</target>
        </trans-unit>
        <trans-unit id="656d7c79c1e84d6fe7de9497af45e5a5500c4558" translate="yes" xml:space="preserve">
          <source>But in some cases (e.g. auto-repeat or input method is activated) the order could be different (and platform dependent).</source>
          <target state="translated">但在某些情况下(如自动重复或输入法被激活),顺序可能是不同的(和平台相关)。</target>
        </trans-unit>
        <trans-unit id="5a5c4305f5bf0f160a7906ef13122e3402b15a85" translate="yes" xml:space="preserve">
          <source>But, in most cases, there is no need to deal directly with the subclasses, as the InetAddress abstraction should cover most of the needed functionality.</source>
          <target state="translated">但是,在大多数情况下,没有必要直接处理子类,因为InetAddress抽象应该涵盖了大部分需要的功能。</target>
        </trans-unit>
        <trans-unit id="794145f030ff721599a0353a9b2e59e9a92b9bf1" translate="yes" xml:space="preserve">
          <source>Button</source>
          <target state="translated">Button</target>
        </trans-unit>
        <trans-unit id="019efa891ee7de315f87d0356dc068be04ca8e8d" translate="yes" xml:space="preserve">
          <source>Button Listener</source>
          <target state="translated">按钮监听器</target>
        </trans-unit>
        <trans-unit id="ac7d196ac262e982ede5cfdd770d80dfa1d8c597" translate="yes" xml:space="preserve">
          <source>Button for quickly toggling the left component.</source>
          <target state="translated">用于快速切换左侧组件的按钮。</target>
        </trans-unit>
        <trans-unit id="606edefcc60f80ff7f88969685ab9c81b9473f01" translate="yes" xml:space="preserve">
          <source>Button for quickly toggling the right component.</source>
          <target state="translated">用于快速切换正确组件的按钮。</target>
        </trans-unit>
        <trans-unit id="183b38372fdbf87cf9b8d1c7b5cf42ce220702c3" translate="yes" xml:space="preserve">
          <source>Button listener</source>
          <target state="translated">按钮监听器</target>
        </trans-unit>
        <trans-unit id="595d60dd66ba50b2aa56d6e4dc8dc918315c7bfb" translate="yes" xml:space="preserve">
          <source>Button numbers greater than &lt;code&gt;BUTTON3&lt;/code&gt; have no constant identifier. So if a mouse with five buttons is installed, this method may return the following values:</source>
          <target state="translated">大于 &lt;code&gt;BUTTON3&lt;/code&gt; 的按钮编号没有常量标识符。因此，如果安装了带有五个按钮的鼠标，则此方法可能返回以下值：</target>
        </trans-unit>
        <trans-unit id="8d018432317935a1b36aa8bc1753990b2bd438cf" translate="yes" xml:space="preserve">
          <source>Button region.</source>
          <target state="translated">按钮区域。</target>
        </trans-unit>
        <trans-unit id="1efa9e86c27e8c50f6fe8a0033f77c3c754760dd" translate="yes" xml:space="preserve">
          <source>Button region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;Button&lt;/code&gt;.</source>
          <target state="translated">按钮区域。要将样式绑定到此 &lt;code&gt;Region&lt;/code&gt; ,请使用名称 &lt;code&gt;Button&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="430a174557404a8e3f0a2075b760ba9a9bf4ed05" translate="yes" xml:space="preserve">
          <source>Button.AccessibleAWTButton</source>
          <target state="translated">Button.AccessibleAWTButton</target>
        </trans-unit>
        <trans-unit id="3fbd8213e2f1b47ab010648f1c288ae79d7d0495" translate="yes" xml:space="preserve">
          <source>Button1, Button2, Button3: &lt;code&gt;weightx&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt;</source>
          <target state="translated">Button1, Button2, Button3: &lt;code&gt;weightx&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc4ff8a5f791a7c311b5d809543cf1b7f89af56e" translate="yes" xml:space="preserve">
          <source>Button4: &lt;code&gt;weightx&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt;, &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</source>
          <target state="translated">Button4: &lt;code&gt;weightx&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt;, &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7071b5cdcb1ff7b7109c703847da9abc6d97ac53" translate="yes" xml:space="preserve">
          <source>Button5: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</source>
          <target state="translated">Button5: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a238d8ce8abe343bd8434207450d150737ca99f2" translate="yes" xml:space="preserve">
          <source>Button6: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.RELATIVE&lt;/code&gt;</source>
          <target state="translated">Button6: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.RELATIVE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="23d5d167a3e58913661b17c1973bf843f9a79f84" translate="yes" xml:space="preserve">
          <source>Button7: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</source>
          <target state="translated">Button7: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0977489d906e28efd7dbfc9fc44f7803b6608b2b" translate="yes" xml:space="preserve">
          <source>Button8: &lt;code&gt;gridheight&amp;nbsp;=&amp;nbsp;2&lt;/code&gt;, &lt;code&gt;weighty&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt;</source>
          <target state="translated">Button8：gridheight &lt;code&gt;gridheight&amp;nbsp;=&amp;nbsp;2&lt;/code&gt; ，weighty &lt;code&gt;weighty&amp;nbsp;=&amp;nbsp;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aefd9099809114e4bcf2a3a3e7344cb433207573" translate="yes" xml:space="preserve">
          <source>Button9, Button 10: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</source>
          <target state="translated">Button9, Button 10: &lt;code&gt;gridwidth&amp;nbsp;=&amp;nbsp;GridBagConstraints.REMAINDER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4addb71ad9b1e9eab1ffdc86cc279b13c62d2b0a" translate="yes" xml:space="preserve">
          <source>ButtonActionListener</source>
          <target state="translated">ButtonActionListener</target>
        </trans-unit>
        <trans-unit id="03ecc02f7b6a2f26f64641cfdc01102042e261e9" translate="yes" xml:space="preserve">
          <source>ButtonAreaLayout</source>
          <target state="translated">ButtonAreaLayout</target>
        </trans-unit>
        <trans-unit id="79c4be159df245cc5e0b6a452d22daea81405cd3" translate="yes" xml:space="preserve">
          <source>ButtonBorder</source>
          <target state="translated">ButtonBorder</target>
        </trans-unit>
        <trans-unit id="db27c070291763157930659db7978fefbbf6184d" translate="yes" xml:space="preserve">
          <source>ButtonGroup</source>
          <target state="translated">ButtonGroup</target>
        </trans-unit>
        <trans-unit id="fd7dad3bc7be4185663e9aca50570aa06f70c513" translate="yes" xml:space="preserve">
          <source>ButtonModel</source>
          <target state="translated">ButtonModel</target>
        </trans-unit>
        <trans-unit id="65a67a4c27ec0248f31009109391d299ae69b59b" translate="yes" xml:space="preserve">
          <source>ButtonUI</source>
          <target state="translated">ButtonUI</target>
        </trans-unit>
        <trans-unit id="4fec93b7c04cc8e16178761993ee51b6a650ad7b" translate="yes" xml:space="preserve">
          <source>Buttons can be configured, and to some degree controlled, by &lt;code&gt;&lt;a href=&quot;action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt;s. Using an &lt;code&gt;Action&lt;/code&gt; with a button has many benefits beyond directly configuring a button. Refer to &lt;a href=&quot;action#buttonActions&quot;&gt; Swing Components Supporting &lt;code&gt;Action&lt;/code&gt;&lt;/a&gt; for more details, and you can find more information in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/action.html&quot;&gt;How to Use Actions&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">可以通过 &lt;code&gt;&lt;a href=&quot;action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt; 来配置按钮，并在某种程度上控制按钮。除了直接配置按钮外，将 &lt;code&gt;Action&lt;/code&gt; 与按钮配合使用还有很多好处。有关更多详细信息，请参考&lt;a href=&quot;action#buttonActions&quot;&gt;Swing组件支持 &lt;code&gt;Action&lt;/code&gt; &lt;/a&gt;，您可以在《&lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/misc/action.html&quot;&gt;如何使用操作&lt;/a&gt;&lt;em&gt;》（Java教程）的&lt;/em&gt;一节中找到更多信息。</target>
        </trans-unit>
        <trans-unit id="1c66da47ca35631d036406670c0f0d773a15a0ff" translate="yes" xml:space="preserve">
          <source>Buttons can be configured, and to some degree controlled, by &lt;code&gt;&lt;a href=&quot;action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt;s. Using an &lt;code&gt;Action&lt;/code&gt; with a button has many benefits beyond directly configuring a button. Refer to &lt;a href=&quot;action#buttonActions&quot;&gt; Swing Components Supporting &lt;code&gt;Action&lt;/code&gt;&lt;/a&gt; for more details, and you can find more information in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html&quot;&gt;How to Use Actions&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">可以通过 &lt;code&gt;&lt;a href=&quot;action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt; 来配置按钮，并在某种程度上控制按钮。除了直接配置按钮外，将 &lt;code&gt;Action&lt;/code&gt; 与按钮配合使用还有很多好处。有关更多详细信息，请参考&lt;a href=&quot;action#buttonActions&quot;&gt;Swing组件支持 &lt;code&gt;Action&lt;/code&gt; &lt;/a&gt;，您可以在《&lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/misc/action.html&quot;&gt;如何使用操作&lt;/a&gt;&lt;em&gt;》（Java教程）的&lt;/em&gt;一节中找到更多信息。</target>
        </trans-unit>
        <trans-unit id="d070c9ff53546be6c6976aec9eaa580e189c9e38" translate="yes" xml:space="preserve">
          <source>By &lt;a href=&quot;watchservice#close()&quot;&gt;&lt;code&gt;closing&lt;/code&gt;&lt;/a&gt; the watch service.</source>
          <target state="translated">通过&lt;a href=&quot;watchservice#close()&quot;&gt; &lt;code&gt;closing&lt;/code&gt; &lt;/a&gt;手表服务。</target>
        </trans-unit>
        <trans-unit id="79e041f06031b304d29c4b6a13cb37ce4189f083" translate="yes" xml:space="preserve">
          <source>By &lt;a href=&quot;watchservice#close--&quot;&gt;&lt;code&gt;closing&lt;/code&gt;&lt;/a&gt; the watch service.</source>
          <target state="translated">通过&lt;a href=&quot;watchservice#close--&quot;&gt; &lt;code&gt;closing&lt;/code&gt; &lt;/a&gt;手表服务。</target>
        </trans-unit>
        <trans-unit id="731374a7fe56ec0bef1ac5151faf1bdaabfb4d05" translate="yes" xml:space="preserve">
          <source>By a &lt;code&gt;Format.Field&lt;/code&gt; constant, see &lt;code&gt;ERA_FIELD&lt;/code&gt; and its friends in &lt;code&gt;DateFormat&lt;/code&gt; for an example.</source>
          <target state="translated">通过 &lt;code&gt;Format.Field&lt;/code&gt; 常量，请参见 &lt;code&gt;DateFormat&lt;/code&gt; 中的 &lt;code&gt;ERA_FIELD&lt;/code&gt; 及其朋友作为示例。</target>
        </trans-unit>
        <trans-unit id="a722b14c14361c4cf7b036b95981fa9d7403243d" translate="yes" xml:space="preserve">
          <source>By an integer constant, whose names typically end with &lt;code&gt;_FIELD&lt;/code&gt;. The constants are defined in the various subclasses of &lt;code&gt;Format&lt;/code&gt;.</source>
          <target state="translated">通过一个整数常量，其名称通常以 &lt;code&gt;_FIELD&lt;/code&gt; 结尾。常量在 &lt;code&gt;Format&lt;/code&gt; 的各个子类中定义。</target>
        </trans-unit>
        <trans-unit id="5c4f7c0dccbb655800ec63f74aead43139a9be92" translate="yes" xml:space="preserve">
          <source>By calling one of the &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt;, such as &lt;a href=&quot;methodhandles.lookup#findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;Lookup.findVirtual&lt;/code&gt;&lt;/a&gt;, to resolve a symbolic reference into a method handle. A symbolic reference consists of a class, name string, and type.</source>
          <target state="translated">通过调用&lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory方法之一&lt;/a&gt;（例如&lt;a href=&quot;methodhandles.lookup#findVirtual(java.lang.Class,java.lang.String,java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;Lookup.findVirtual&lt;/code&gt; )&lt;/a&gt;，将符号引用解析为方法句柄。符号引用由类，名称字符串和类型组成。</target>
        </trans-unit>
        <trans-unit id="5dbe7a3f00da7d38dcae33de8970c70a967340df" translate="yes" xml:space="preserve">
          <source>By calling one of the &lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory Methods&lt;/a&gt;, such as &lt;a href=&quot;methodhandles.lookup#findVirtual-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;Lookup.findVirtual&lt;/code&gt;&lt;/a&gt;, to resolve a symbolic reference into a method handle. A symbolic reference consists of a class, name string, and type.</source>
          <target state="translated">通过调用&lt;a href=&quot;methodhandles.lookup#lookups&quot;&gt;Lookup Factory方法之一&lt;/a&gt;（例如&lt;a href=&quot;methodhandles.lookup#findVirtual-java.lang.Class-java.lang.String-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;Lookup.findVirtual&lt;/code&gt; )&lt;/a&gt;，将符号引用解析为方法句柄。符号引用由类，名称字符串和类型组成。</target>
        </trans-unit>
        <trans-unit id="f3e72dbd8f3a5ec4630e1592ee14d1eec420ed4e" translate="yes" xml:space="preserve">
          <source>By calling one of the versions of the &lt;code&gt;JoinRowSet&lt;/code&gt; method &lt;code&gt;addRowSet&lt;/code&gt; that takes a column name or number (or an array of column names or numbers)</source>
          <target state="translated">通过调用采用列名称或数字（或列名称或数字的数组）的 &lt;code&gt;JoinRowSet&lt;/code&gt; 方法 &lt;code&gt;addRowSet&lt;/code&gt; 的版本之一。</target>
        </trans-unit>
        <trans-unit id="0b8c5073813cddba1740325d321c4842893b440a" translate="yes" xml:space="preserve">
          <source>By calling the &lt;code&gt;Joinable&lt;/code&gt; method &lt;code&gt;setMatchColumn&lt;/code&gt;</source>
          <target state="translated">通过调用 &lt;code&gt;Joinable&lt;/code&gt; 方法 &lt;code&gt;setMatchColumn&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c58ecc2d298eee1f7abd6634a0033cfe09418aff" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflect(java.lang.reflect.Method)&quot;&gt;&lt;code&gt;Lookup.unreflect&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles.lookup#unreflectSpecial(java.lang.reflect.Method,java.lang.Class)&quot;&gt;&lt;code&gt;Lookup.unreflectSpecial&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">通过调用工厂方法&lt;a href=&quot;methodhandles.lookup#unreflect(java.lang.reflect.Method)&quot;&gt; &lt;code&gt;Lookup.unreflect&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;methodhandles.lookup#unreflectSpecial(java.lang.reflect.Method,java.lang.Class)&quot;&gt; &lt;code&gt;Lookup.unreflectSpecial&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;../reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;转换为方法句柄。</target>
        </trans-unit>
        <trans-unit id="724dd4b9f9faacd3f7346ee2ca63a912c6121ad9" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt;&lt;code&gt;Lookup.unreflect&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles.lookup#unreflectSpecial-java.lang.reflect.Method-java.lang.Class-&quot;&gt;&lt;code&gt;Lookup.unreflectSpecial&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">通过调用工厂方法&lt;a href=&quot;methodhandles.lookup#unreflect-java.lang.reflect.Method-&quot;&gt; &lt;code&gt;Lookup.unreflect&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;methodhandles.lookup#unreflectSpecial-java.lang.reflect.Method-java.lang.Class-&quot;&gt; &lt;code&gt;Lookup.unreflectSpecial&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;../reflect/method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt;转换为方法句柄。</target>
        </trans-unit>
        <trans-unit id="b5d671b32f07b5e4aa5fa04a97db10b3bab02ca9" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflectConstructor(java.lang.reflect.Constructor)&quot;&gt;&lt;code&gt;Lookup.unreflectConstructor&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">通过调用工厂方法&lt;a href=&quot;methodhandles.lookup#unreflectConstructor(java.lang.reflect.Constructor)&quot;&gt; &lt;code&gt;Lookup.unreflectConstructor&lt;/code&gt; &lt;/a&gt;将一个&lt;a href=&quot;../reflect/constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt;转换为一个方法句柄。</target>
        </trans-unit>
        <trans-unit id="09378e7e493522683c654e9c1cf13be18d73cc44" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflectConstructor-java.lang.reflect.Constructor-&quot;&gt;&lt;code&gt;Lookup.unreflectConstructor&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/constructor&quot;&gt;&lt;code&gt;Constructor&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">通过调用工厂方法&lt;a href=&quot;methodhandles.lookup#unreflectConstructor-java.lang.reflect.Constructor-&quot;&gt; &lt;code&gt;Lookup.unreflectConstructor&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;../reflect/constructor&quot;&gt; &lt;code&gt;Constructor&lt;/code&gt; &lt;/a&gt;方法转换为方法句柄。</target>
        </trans-unit>
        <trans-unit id="f68aa9b6c7f0e37de8afd0e004b0e8f232a2af7d" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflectGetter(java.lang.reflect.Field)&quot;&gt;&lt;code&gt;Lookup.unreflectGetter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles.lookup#unreflectSetter(java.lang.reflect.Field)&quot;&gt;&lt;code&gt;Lookup.unreflectSetter&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">通过调用工厂方法&lt;a href=&quot;methodhandles.lookup#unreflectGetter(java.lang.reflect.Field)&quot;&gt; &lt;code&gt;Lookup.unreflectGetter&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;methodhandles.lookup#unreflectSetter(java.lang.reflect.Field)&quot;&gt; &lt;code&gt;Lookup.unreflectSetter&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;../reflect/field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;转换为方法句柄。</target>
        </trans-unit>
        <trans-unit id="8bf6f3de6ce61cca0b193151d74f47245f2a6397" translate="yes" xml:space="preserve">
          <source>By calling the factory method &lt;a href=&quot;methodhandles.lookup#unreflectGetter-java.lang.reflect.Field-&quot;&gt;&lt;code&gt;Lookup.unreflectGetter&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles.lookup#unreflectSetter-java.lang.reflect.Field-&quot;&gt;&lt;code&gt;Lookup.unreflectSetter&lt;/code&gt;&lt;/a&gt; to convert a &lt;a href=&quot;../reflect/field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; into a method handle.</source>
          <target state="translated">通过调用工厂方法&lt;a href=&quot;methodhandles.lookup#unreflectGetter-java.lang.reflect.Field-&quot;&gt; &lt;code&gt;Lookup.unreflectGetter&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;methodhandles.lookup#unreflectSetter-java.lang.reflect.Field-&quot;&gt; &lt;code&gt;Lookup.unreflectSetter&lt;/code&gt; &lt;/a&gt;将&lt;a href=&quot;../reflect/field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt;转换为方法句柄。</target>
        </trans-unit>
        <trans-unit id="3f87e2ccb7a9a27f052c79c35f0b36ba244acdd9" translate="yes" xml:space="preserve">
          <source>By contrast, this implementation has no fractional part, and counts days from midnight to midnight. This implementation uses an integer and days starting at midnight. The integer value for the Julian Day Number is the astronomical Julian Day value at midday of the date in question. This amounts to the astronomical Julian Day, rounded to an integer &lt;code&gt;JDN = floor(JD + 0.5)&lt;/code&gt;.</source>
          <target state="translated">相比之下，此实现没有小数部分，并且计数从午夜到午夜的天数。此实现使用整数和从午夜开始的天数。&amp;ldquo;儒略日数&amp;rdquo;的整数值是有关日期中午的天文&amp;ldquo;儒略日&amp;rdquo;值。这相当于天文儒略日，四舍五入为一个整数 &lt;code&gt;JDN = floor(JD + 0.5)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b4753cc387bbac0c7f9c57217c466411a45429b6" translate="yes" xml:space="preserve">
          <source>By convention, X.509 &lt;code&gt;CertPath&lt;/code&gt;s (consisting of &lt;code&gt;X509Certificate&lt;/code&gt;s), are ordered starting with the target certificate and ending with a certificate issued by the trust anchor. That is, the issuer of one certificate is the subject of the following one. The certificate representing the &lt;a href=&quot;trustanchor&quot;&gt;&lt;code&gt;TrustAnchor&lt;/code&gt;&lt;/a&gt; should not be included in the certification path. Unvalidated X.509 &lt;code&gt;CertPath&lt;/code&gt;s may not follow these conventions. PKIX &lt;code&gt;CertPathValidator&lt;/code&gt;s will detect any departure from these conventions that cause the certification path to be invalid and throw a &lt;code&gt;CertPathValidatorException&lt;/code&gt;.</source>
          <target state="translated">按照约定，从目标证书开始，以信任锚发布的证书结束，对X.509 &lt;code&gt;CertPath&lt;/code&gt; （由 &lt;code&gt;X509Certificate&lt;/code&gt; 组成）进行排序。即，一张证书的颁发者是下一张证书的主题。代表&lt;a href=&quot;trustanchor&quot;&gt; &lt;code&gt;TrustAnchor&lt;/code&gt; &lt;/a&gt;的证书不应包含在证书路径中。未经验证的X.509 &lt;code&gt;CertPath&lt;/code&gt; 可能不遵循这些约定。 PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; s将检测到与这些约定的任何偏离，这些偏离会导致证书路径无效，并抛出 &lt;code&gt;CertPathValidatorException&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ce538b9da783a53db6c8692103cbe29dfda0164" translate="yes" xml:space="preserve">
          <source>By convention, a provider should name its primary DRBG implementation with the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#securerandom-number-generation-algorithms&quot;&gt; standard &lt;code&gt;SecureRandom&lt;/code&gt; algorithm name&lt;/a&gt; &quot;DRBG&quot;.</source>
          <target state="translated">按照约定，提供者应使用&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/security/standard-names.html#securerandom-number-generation-algorithms&quot;&gt;标准 &lt;code&gt;SecureRandom&lt;/code&gt; 算法名称&lt;/a&gt;&amp;ldquo; DRBG&amp;rdquo;来命名其主要的DRBG实现。</target>
        </trans-unit>
        <trans-unit id="a59a924020c8cac30077577dc729f7ee0a2aadd9" translate="yes" xml:space="preserve">
          <source>By convention, a provider should name its primary DRBG implementation with the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#securerandom-number-generation-algorithms&quot;&gt; standard &lt;code&gt;SecureRandom&lt;/code&gt; algorithm name&lt;/a&gt; &quot;DRBG&quot;.</source>
          <target state="translated">按照约定，提供者应使用&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/security/standard-names.html#securerandom-number-generation-algorithms&quot;&gt;标准 &lt;code&gt;SecureRandom&lt;/code&gt; 算法名称&lt;/a&gt;&amp;ldquo; DRBG&amp;rdquo;来命名其主要的DRBG实现。</target>
        </trans-unit>
        <trans-unit id="b2514c1e5ade3cabc14faae1aab73f262681b04c" translate="yes" xml:space="preserve">
          <source>By convention, class &lt;code&gt;Throwable&lt;/code&gt; and its subclasses have two constructors, one that takes no arguments and one that takes a &lt;code&gt;String&lt;/code&gt; argument that can be used to produce a detail message. Further, those subclasses that might likely have a cause associated with them should have two more constructors, one that takes a &lt;code&gt;Throwable&lt;/code&gt; (the cause), and one that takes a &lt;code&gt;String&lt;/code&gt; (the detail message) and a &lt;code&gt;Throwable&lt;/code&gt; (the cause).</source>
          <target state="translated">按照约定， &lt;code&gt;Throwable&lt;/code&gt; 类及其子类有两个构造函数，一个不带参数，另一个带 &lt;code&gt;String&lt;/code&gt; 参数，可用于生成详细消息。此外，那些可能与原因相关联的子类应该再具有两个构造函数，一个构造函数采用 &lt;code&gt;Throwable&lt;/code&gt; （原因），另一个构造函数采用 &lt;code&gt;String&lt;/code&gt; （详细消息）和 &lt;code&gt;Throwable&lt;/code&gt; （原因）。</target>
        </trans-unit>
        <trans-unit id="09d2b5cba33a0eec28c14a770930df6bffad3532" translate="yes" xml:space="preserve">
          <source>By convention, classes that implement this interface should override &lt;code&gt;Object.clone&lt;/code&gt; (which is protected) with a public method. See &lt;a href=&quot;object#clone()&quot;&gt;&lt;code&gt;Object.clone()&lt;/code&gt;&lt;/a&gt; for details on overriding this method.</source>
          <target state="translated">按照约定，实现此接口的类应使用公共方法重写 &lt;code&gt;Object.clone&lt;/code&gt; （受保护的）。有关重写此方法的详细信息，请参见&lt;a href=&quot;object#clone()&quot;&gt; &lt;code&gt;Object.clone()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0dd690817d171aa95e2eb06736a2246e8af3211c" translate="yes" xml:space="preserve">
          <source>By convention, classes that implement this interface should override &lt;code&gt;Object.clone&lt;/code&gt; (which is protected) with a public method. See &lt;a href=&quot;object#clone--&quot;&gt;&lt;code&gt;Object.clone()&lt;/code&gt;&lt;/a&gt; for details on overriding this method.</source>
          <target state="translated">按照约定，实现此接口的类应使用公共方法重写 &lt;code&gt;Object.clone&lt;/code&gt; （受保护的）。有关重写此方法的详细信息，请参见&lt;a href=&quot;object#clone--&quot;&gt; &lt;code&gt;Object.clone()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="91a3641a4b8169abf7f6d88641a6c87fae260b35" translate="yes" xml:space="preserve">
          <source>By convention, the object returned by this method should be independent of this object (which is being cloned). To achieve this independence, it may be necessary to modify one or more fields of the object returned by &lt;code&gt;super.clone&lt;/code&gt; before returning it. Typically, this means copying any mutable objects that comprise the internal &quot;deep structure&quot; of the object being cloned and replacing the references to these objects with references to the copies. If a class contains only primitive fields or references to immutable objects, then it is usually the case that no fields in the object returned by &lt;code&gt;super.clone&lt;/code&gt; need to be modified.</source>
          <target state="translated">按照惯例，此方法返回的对象应独立于该对象（正在克隆）。为了实现这种独立性，可能有必要在返回 &lt;code&gt;super.clone&lt;/code&gt; 之前修改对象的一个​​或多个字段。通常，这意味着复制构成要克隆对象的内部&amp;ldquo;深度结构&amp;rdquo;的任何可变对象，并用对副本的引用替换对这些对象的引用。如果一个类仅包含基本字段或对不可变对象的引用，则通常情况是无需修改 &lt;code&gt;super.clone&lt;/code&gt; 返回的对象中的任何字段。</target>
        </trans-unit>
        <trans-unit id="a60713ca9a1b0ef07a53742b11bce0a57dc2728e" translate="yes" xml:space="preserve">
          <source>By convention, the returned object should be obtained by calling &lt;code&gt;super.clone&lt;/code&gt;. If a class and all of its superclasses (except &lt;code&gt;Object&lt;/code&gt;) obey this convention, it will be the case that &lt;code&gt;x.clone().getClass() == x.getClass()&lt;/code&gt;.</source>
          <target state="translated">按照惯例，应通过调用 &lt;code&gt;super.clone&lt;/code&gt; 获得返回的对象。如果一个类及其所有超类（ &lt;code&gt;Object&lt;/code&gt; 除外）都遵守此约定，则 &lt;code&gt;x.clone().getClass() == x.getClass()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b768573759f5a5992482cd68564628b637da139b" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JLayer&lt;/code&gt; receives no events and its event mask is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">默认情况下， &lt;code&gt;JLayer&lt;/code&gt; 不接收任何事件，其事件掩码为 &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f7663336da5df7ba253315ededced2c532ab56b" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JLayer&lt;/code&gt; receives no events.</source>
          <target state="translated">默认情况下， &lt;code&gt;JLayer&lt;/code&gt; 不接收任何事件。</target>
        </trans-unit>
        <trans-unit id="2cac8c47d141f254df9eb886af49b7d827ea84ec" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JScrollPane&lt;/code&gt; creates scrollbars that are instances of this class.</source>
          <target state="translated">默认情况下， &lt;code&gt;JScrollPane&lt;/code&gt; 创建作为此类实例的滚动条。</target>
        </trans-unit>
        <trans-unit id="344bf32647fc0633787ae3113e62625be42b2a42" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JScrollPane&lt;/code&gt; creates scrollbars that are instances of this class. &lt;code&gt;Scrollbar&lt;/code&gt; overrides the &lt;code&gt;getUnitIncrement&lt;/code&gt; and &lt;code&gt;getBlockIncrement&lt;/code&gt; methods so that, if the viewport's view is a &lt;code&gt;Scrollable&lt;/code&gt;, the view is asked to compute these values. Unless the unit/block increment have been explicitly set.</source>
          <target state="translated">默认情况下， &lt;code&gt;JScrollPane&lt;/code&gt; 创建作为此类实例的滚动条。 &lt;code&gt;Scrollbar&lt;/code&gt; 会覆盖 &lt;code&gt;getUnitIncrement&lt;/code&gt; 和 &lt;code&gt;getBlockIncrement&lt;/code&gt; 方法，因此，如果视口的视图是 &lt;code&gt;Scrollable&lt;/code&gt; ，则要求该视图计算这些值。除非已明确设置单位/块增量。</target>
        </trans-unit>
        <trans-unit id="39a5703acf8137961b19d9a1161f2662f259b0f2" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JScrollPane&lt;/code&gt; uses &lt;code&gt;ScrollPaneLayout&lt;/code&gt; to handle the layout of its child Components. &lt;code&gt;ScrollPaneLayout&lt;/code&gt; determines the size to make the viewport view in one of two ways:</source>
          <target state="translated">默认情况下， &lt;code&gt;JScrollPane&lt;/code&gt; 使用 &lt;code&gt;ScrollPaneLayout&lt;/code&gt; 处理其子组件的布局。 &lt;code&gt;ScrollPaneLayout&lt;/code&gt; 通过以下两种方式之一确定用于制作视口视图的大小：</target>
        </trans-unit>
        <trans-unit id="be5b7a6089e4fc5e88aef5d4d15a008d57dfd393" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;JTextComponent&lt;/code&gt; does not register itself with the &lt;code&gt;ToolTipManager&lt;/code&gt;. This means that tooltips will NOT be shown from the &lt;code&gt;TextUI&lt;/code&gt; unless &lt;code&gt;registerComponent&lt;/code&gt; has been invoked on the &lt;code&gt;ToolTipManager&lt;/code&gt;.</source>
          <target state="translated">默认情况下， &lt;code&gt;JTextComponent&lt;/code&gt; 不向 &lt;code&gt;ToolTipManager&lt;/code&gt; 注册。这意味着除非在 &lt;code&gt;ToolTipManager&lt;/code&gt; 上调用 &lt;code&gt;registerComponent&lt;/code&gt; ,否则不会从 &lt;code&gt;TextUI&lt;/code&gt; 中显示工具提示。</target>
        </trans-unit>
        <trans-unit id="d529a0b2ecac6cfd39202d1773973b61d43d0cef" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;MaskFormatter&lt;/code&gt; will not allow invalid edits, you can change this with the &lt;code&gt;setAllowsInvalid&lt;/code&gt; method, and will commit edits on valid edits (use the &lt;code&gt;setCommitsOnValidEdit&lt;/code&gt; to change this).</source>
          <target state="translated">默认情况下， &lt;code&gt;MaskFormatter&lt;/code&gt; 不允许无效的编辑，您可以使用 &lt;code&gt;setAllowsInvalid&lt;/code&gt; 方法进行更改，并且将对有效的编辑进行编辑（使用 &lt;code&gt;setCommitsOnValidEdit&lt;/code&gt; 进行更改）。</target>
        </trans-unit>
        <trans-unit id="d2185b894b3385135eb487891c25c706e5066e38" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;Object.equals()&lt;/code&gt; is used when comparing the attribute id and its values except when a value is an array. For an array, each element of the array is checked using &lt;code&gt;Object.equals()&lt;/code&gt;. A subclass may override this to make use of schema syntax information and matching rules, which define what it means for two attributes to be equal. How and whether a subclass makes use of the schema information is determined by the subclass. If a subclass overrides &lt;code&gt;equals()&lt;/code&gt;, it should also override &lt;code&gt;hashCode()&lt;/code&gt; such that two attributes that are equal have the same hash code.</source>
          <target state="translated">默认情况下，在比较属性ID及其值时使用 &lt;code&gt;Object.equals()&lt;/code&gt; ，但值是数组时除外。对于数组，使用 &lt;code&gt;Object.equals()&lt;/code&gt; 检查数组的每个元素。子类可以重写它，以使用架构语法信息和匹配规则，这些规则定义了两个属性相等的含义。子类确定子类如何以及是否利用模式信息。如果子类重写 &lt;code&gt;equals()&lt;/code&gt; ，则它也应该重写 &lt;code&gt;hashCode()&lt;/code&gt; ，以使两个相等的属性具有相同的哈希码。</target>
        </trans-unit>
        <trans-unit id="6a95f057ba55802f53862fb634fcd938fe029c43" translate="yes" xml:space="preserve">
          <source>By default buffering is enabled in the IO libraries but each log record is flushed out when it is complete.</source>
          <target state="translated">默认情况下,IO库中启用了缓冲功能,但每条日志记录完成后都会被冲掉。</target>
        </trans-unit>
        <trans-unit id="b5652838fb2d4917599a19627f262e9aee99bd7a" translate="yes" xml:space="preserve">
          <source>By default if sorting is enabled &lt;code&gt;JTable&lt;/code&gt; will persist the selection and variable row heights in terms of the model on sorting. For example if row 0, in terms of the underlying model, is currently selected, after the sort row 0, in terms of the underlying model will be selected. Visually the selection may change, but in terms of the underlying model it will remain the same. The one exception to that is if the model index is no longer visible or was removed. For example, if row 0 in terms of model was filtered out the selection will be empty after the sort.</source>
          <target state="translated">默认情况下，如果启用了排序，则 &lt;code&gt;JTable&lt;/code&gt; 将根据排序模型保留选择和可变行高。例如，如果当前选择的是基于基础模型的第0行，则将在排序第0行之后的基础模型方面进行选择。从外观上看，选择可能会更改，但是就基础模型而言，它将保持不变。唯一的例外是如果模型索引不再可见或已被删除。例如，如果模型中的第0行被过滤掉，则排序后的选择将为空。</target>
        </trans-unit>
        <trans-unit id="b97e0d008dcff1111ecc8ca31996c70c23abeedd" translate="yes" xml:space="preserve">
          <source>By default many of the &lt;code&gt;Math&lt;/code&gt; methods simply call the equivalent method in &lt;code&gt;StrictMath&lt;/code&gt; for their implementation. Code generators are encouraged to use platform-specific native libraries or microprocessor instructions, where available, to provide higher-performance implementations of &lt;code&gt;Math&lt;/code&gt; methods. Such higher-performance implementations still must conform to the specification for &lt;code&gt;Math&lt;/code&gt;.</source>
          <target state="translated">默认情况下，许多 &lt;code&gt;Math&lt;/code&gt; 方法只是简单地调用 &lt;code&gt;StrictMath&lt;/code&gt; 中的等效方法来实现它们。鼓励代码生成器使用特定于平台的本机库或微处理器指令（如果有）来提供 &lt;code&gt;Math&lt;/code&gt; 方法的高性能实现。这种更高性能的实现仍必须符合 &lt;code&gt;Math&lt;/code&gt; 的规范。</target>
        </trans-unit>
        <trans-unit id="1e527c5569095092b2cf7ba2f0c72adf3d6e528c" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;XMLFormatter&lt;/code&gt; class is used for formatting.</source>
          <target state="translated">默认情况下， &lt;code&gt;XMLFormatter&lt;/code&gt; 类用于格式化。</target>
        </trans-unit>
        <trans-unit id="a3e1586fad30e9a15b9ef57bb9e4be9026e0b33a" translate="yes" xml:space="preserve">
          <source>By default the GIF writer plug-in creates version &quot;89a&quot; images. This can be changed to &quot;87a&quot; by explicitly setting the version in the stream metadata (see  GIF Stream Metadata Format Specification).</source>
          <target state="translated">默认情况下,GIF作者插件会创建版本为 &quot;89a &quot;的图像。通过在流元数据中明确设置版本,可以将其更改为 &quot;87a&quot;(参见GIF流元数据格式规范)。</target>
        </trans-unit>
        <trans-unit id="e3072998e629b81a63426cb273a5913cdac8a0ef" translate="yes" xml:space="preserve">
          <source>By default the GIF writer plug-in creates version &quot;89a&quot; images. This can be changed to &quot;87a&quot; by explicitly setting the version in the stream metadata (see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt; GIF Stream Metadata Format Specification&lt;/a&gt;).</source>
          <target state="translated">默认情况下，GIF编写器插件创建版本&amp;ldquo; 89a&amp;rdquo;图像。通过在流元数据中显式设置版本，可以将其更改为&amp;ldquo; 87a&amp;rdquo;（请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt;GIF流元数据格式规范&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="45be1e1137fc33c1f86cb7357c9940f1f19fdbf4" translate="yes" xml:space="preserve">
          <source>By default the GIF writer plug-in creates version &quot;89a&quot; images. This can be changed to &quot;87a&quot; by explicitly setting the version in the stream metadata (see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt; GIF Stream Metadata Format Specification&lt;/a&gt;).</source>
          <target state="translated">默认情况下，GIF编写器插件创建版本&amp;ldquo; 89a&amp;rdquo;图像。通过在流元数据中显式设置版本，可以将其更改为&amp;ldquo; 87a&amp;rdquo;（请参见&lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/imageio/metadata/doc-files/gif_metadata.html#gif_stream_metadata_format&quot;&gt;GIF流元数据格式规范&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4e190c87fcfb920806d86cae9e4c29a3be7fdb24" translate="yes" xml:space="preserve">
          <source>By default the caret tracks all the document changes performed on the Event Dispatching Thread and updates it's position accordingly if an insertion occurs before or at the caret position or a removal occurs before the caret position. &lt;code&gt;DefaultCaret&lt;/code&gt; tries to make itself visible which may lead to scrolling of a text component within &lt;code&gt;JScrollPane&lt;/code&gt;. The default caret behavior can be changed by the &lt;a href=&quot;defaultcaret#setUpdatePolicy(int)&quot;&gt;&lt;code&gt;DefaultCaret.setUpdatePolicy(int)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">默认情况下，如果插入是在插入标记位置之前或在插入标记位置进行的，或者在插入标记位置之前发生的移除，则插入标记将跟踪在事件调度线程上执行的所有文档更改，并相应地更新其位置。 &lt;code&gt;DefaultCaret&lt;/code&gt; 尝试使其自身可见，这可能导致 &lt;code&gt;JScrollPane&lt;/code&gt; 中的文本组件滚动。可以通过&lt;a href=&quot;defaultcaret#setUpdatePolicy(int)&quot;&gt; &lt;code&gt;DefaultCaret.setUpdatePolicy(int)&lt;/code&gt; &lt;/a&gt;方法更改默认的插入符号行为。</target>
        </trans-unit>
        <trans-unit id="8cff5f08249132bca41856cf8b699cc6faabe61c" translate="yes" xml:space="preserve">
          <source>By default the component will create a keymap (named &lt;b&gt;DEFAULT_KEYMAP&lt;/b&gt;) that is shared by all JTextComponent instances as the default keymap. Typically a look-and-feel implementation will install a different keymap that resolves to the default keymap for those bindings not found in the different keymap. The minimal bindings include:</source>
          <target state="translated">默认情况下，组件将创建一个键盘映射（名为&lt;b&gt;DEFAULT_KEYMAP&lt;/b&gt;），该键盘映射由所有JTextComponent实例共享为默认键盘映射。通常，外观实现将安装其他键映射，该键映射将解析为在其他键映射中找不到的那些绑定的默认键映射。最小绑定包括：</target>
        </trans-unit>
        <trans-unit id="9d681c3c45f980934e1b3c61cbe64adb0668d520" translate="yes" xml:space="preserve">
          <source>By default the feature version number of the returned &lt;code&gt;Version&lt;/code&gt; will be equal to the feature version number of &lt;code&gt;Runtime.version()&lt;/code&gt;. However, if the &lt;code&gt;jdk.util.jar.version&lt;/code&gt; property is set, the returned &lt;code&gt;Version&lt;/code&gt; is derived from that property and feature version numbers may not be equal.</source>
          <target state="translated">默认情况下，返回的 &lt;code&gt;Version&lt;/code&gt; 的功能版本号将等于 &lt;code&gt;Runtime.version()&lt;/code&gt; 的功能版本号。但是，如果设置了 &lt;code&gt;jdk.util.jar.version&lt;/code&gt; 属性，则返回的 &lt;code&gt;Version&lt;/code&gt; 是从该属性派生的，并且功能版本号可能不相等。</target>
        </trans-unit>
        <trans-unit id="240aa97df5f841986305a2c67ef1a8cdbe594454" translate="yes" xml:space="preserve">
          <source>By default the protocol handlers are loaded dynamically from the default location. It is, however, possible to add to the search path by setting the &lt;code&gt;java.protocol.handler.pkgs&lt;/code&gt; system property. For instance if it is set to &lt;code&gt;myapp.protocols&lt;/code&gt;, then the URL code will try, in the case of http, first to load &lt;code&gt;myapp.protocols.http.Handler&lt;/code&gt;, then, if this fails, &lt;code&gt;http.Handler&lt;/code&gt; from the default location.</source>
          <target state="translated">默认情况下，协议处理程序是从默认位置动态加载的。但是，可以通过设置 &lt;code&gt;java.protocol.handler.pkgs&lt;/code&gt; 系统属性来添加到搜索路径。例如，如果将其设置为 &lt;code&gt;myapp.protocols&lt;/code&gt; ，则在使用http的情况下，URL代码将首先尝试加载 &lt;code&gt;myapp.protocols.http.Handler&lt;/code&gt; ，然后，如果失败， &lt;code&gt;http.Handler&lt;/code&gt; 默认位置加载http.Handler。</target>
        </trans-unit>
        <trans-unit id="de24ec27a7ebff7132b2903e159ad5abd2703913" translate="yes" xml:space="preserve">
          <source>By default the protocol handlers are loaded dynamically from the default location. It is, however, possible to deploy additional protocols handlers as &lt;a href=&quot;../util/serviceloader&quot;&gt;&lt;code&gt;services&lt;/code&gt;&lt;/a&gt;. Service providers of type &lt;a href=&quot;spi/urlstreamhandlerprovider&quot;&gt;URLStreamHandlerProvider&lt;/a&gt; are located at runtime, as specified in the &lt;a href=&quot;url#%3Cinit%3E(java.lang.String,java.lang.String,int,java.lang.String)&quot;&gt;URL constructor&lt;/a&gt;.</source>
          <target state="translated">默认情况下，协议处理程序是从默认位置动态加载的。但是，可以将其他协议处理程序部署为&lt;a href=&quot;../util/serviceloader&quot;&gt; &lt;code&gt;services&lt;/code&gt; &lt;/a&gt;。&lt;a href=&quot;spi/urlstreamhandlerprovider&quot;&gt;URLStreamHandlerProvider&lt;/a&gt;类型的服务提供程序位于运行时，如&lt;a href=&quot;url#%3Cinit%3E(java.lang.String,java.lang.String,int,java.lang.String)&quot;&gt;URL构造函数中&lt;/a&gt;所指定。</target>
        </trans-unit>
        <trans-unit id="2ebcaa13332f2e0c79bf25f74dba28494b4d560f" translate="yes" xml:space="preserve">
          <source>By default this is not enabled; to enable it set the client &lt;a href=&quot;jcomponent#putClientProperty(java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;property&lt;/code&gt;&lt;/a&gt; with this name to &lt;code&gt;Boolean.TRUE&lt;/code&gt;.</source>
          <target state="translated">默认情况下，此功能未启用。要启用它，请将具有此名称的client&lt;a href=&quot;jcomponent#putClientProperty(java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;property&lt;/code&gt; &lt;/a&gt;设置为 &lt;code&gt;Boolean.TRUE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f2595fe1d32f795cc00152cbef1c2fa51250ded" translate="yes" xml:space="preserve">
          <source>By default this method fills the specified component with its background color if its &lt;code&gt;opaque&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;, and then immediately calls &lt;code&gt;paint&lt;/code&gt;. In general this method need not be overridden by subclasses; all look-and-feel rendering code should reside in the &lt;code&gt;paint&lt;/code&gt; method.</source>
          <target state="translated">默认情况下，如果其 &lt;code&gt;opaque&lt;/code&gt; 属性为 &lt;code&gt;true&lt;/code&gt; ，则此方法使用背景颜色填充指定的组件，然后立即调用 &lt;code&gt;paint&lt;/code&gt; 。通常，此方法不需要被子类覆盖；所有外观渲染代码都应驻留在 &lt;code&gt;paint&lt;/code&gt; 方法中。</target>
        </trans-unit>
        <trans-unit id="ef2933e65d52ae8b675c3d93e0591ec4095f5c3f" translate="yes" xml:space="preserve">
          <source>By default this method returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">默认情况下，此方法返回 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f578bd2af857801ec612c216214dc29e76722dc1" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;DragSourceContext&lt;/code&gt; sets the cursor as appropriate for the current state of the drag and drop operation. For example, if the user has chosen &lt;a href=&quot;dndconstants#ACTION_MOVE&quot;&gt;the move action&lt;/a&gt;, and the pointer is over a target that accepts the move action, the default move cursor is shown. When the pointer is over an area that does not accept the transfer, the default &quot;no drop&quot; cursor is shown.</source>
          <target state="translated">默认情况下， &lt;code&gt;DragSourceContext&lt;/code&gt; 将光标设置为适合于拖放​​操作的当前状态。例如，如果用户选择&lt;a href=&quot;dndconstants#ACTION_MOVE&quot;&gt;了move动作&lt;/a&gt;，并且指针在接受该move动作的目标上，则显示默认的move光标。当指针位于不接受传输的区域上时，将显示默认的&amp;ldquo; no drop&amp;rdquo;光标。</target>
        </trans-unit>
        <trans-unit id="33adbdd9933f88432e130ca6bdf4b95e7a549406" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;JViewport&lt;/code&gt; is opaque. To change this, use the &lt;code&gt;setOpaque&lt;/code&gt; method.</source>
          <target state="translated">默认情况下， &lt;code&gt;JViewport&lt;/code&gt; 是不透明的。要更改此设置，请使用 &lt;code&gt;setOpaque&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="21f13eb72e41fecd586588784d032766210ef5af" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;MaskFormatter&lt;/code&gt; is in overwrite mode. That is as characters are typed a new character is not inserted, rather the character at the current location is replaced with the newly typed character. You can change this behavior by way of the method &lt;code&gt;setOverwriteMode&lt;/code&gt;.</source>
          <target state="translated">默认情况下， &lt;code&gt;MaskFormatter&lt;/code&gt; 处于覆盖模式。也就是说，键入字符时不会插入新字符，而是将当前位置处的字符替换为新键入的字符。您可以通过 &lt;code&gt;setOverwriteMode&lt;/code&gt; 方法更改此行为。</target>
        </trans-unit>
        <trans-unit id="59c0deb687021a178f3e4a99362342d2537719ff" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;Object.equals()&lt;/code&gt; is used when comparing &lt;code&gt;attrVal&lt;/code&gt; with this attribute's values except when &lt;code&gt;attrVal&lt;/code&gt; is an array. For an array, each element of the array is checked using &lt;code&gt;Object.equals()&lt;/code&gt;. A subclass may use schema information to determine equality.</source>
          <target state="translated">默认情况下，将 &lt;code&gt;attrVal&lt;/code&gt; 与该属性的值进行比较时，将使用 &lt;code&gt;Object.equals()&lt;/code&gt; ,但 &lt;code&gt;attrVal&lt;/code&gt; 是一个数组时除外。对于数组，使用 &lt;code&gt;Object.equals()&lt;/code&gt; 检查数组的每个元素。子类可以使用架构信息来确定相等性。</target>
        </trans-unit>
        <trans-unit id="5a92e9556fcf4e8e505c372ba0dbce47bcac06be" translate="yes" xml:space="preserve">
          <source>By default, ContainerOrderFocusTraversalPolicy implicitly transfers focus down-cycle. That is, during normal forward focus traversal, the Component traversed after a focus cycle root will be the focus-cycle- root's default Component to focus. This behavior can be disabled using the &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; method.</source>
          <target state="translated">默认情况下，ContainerOrderFocusTraversalPolicy隐式转移焦点向下周期。也就是说，在正常的前向遍历过程中，在焦点循环根之后遍历的Component将是焦点循环根的默认要聚焦的Component。可以使用 &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; 方法禁用此行为。</target>
        </trans-unit>
        <trans-unit id="ec84eef856a6d0447caafe49043c5819fafdd18b" translate="yes" xml:space="preserve">
          <source>By default, ContainerOrderFocusTraversalPolicy implicitly transfers focus down-cycle. That is, during normal forward focus traversal, the Component traversed after a focus cycle root will be the focus-cycle-root's default Component to focus. This behavior can be disabled using the &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; method.</source>
          <target state="translated">默认情况下，ContainerOrderFocusTraversalPolicy隐式转移焦点向下周期。也就是说，在正常的前向遍历过程中，在聚焦循环根之后遍历的Component将是聚焦循环根的默认要聚焦的Component。可以使用 &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; 方法禁用此行为。</target>
        </trans-unit>
        <trans-unit id="a4b5676aa9d0548e76d5d356fa24eefff344fb4e" translate="yes" xml:space="preserve">
          <source>By default, LayoutFocusTraversalPolicy implicitly transfers focus down- cycle. That is, during normal focus traversal, the Component traversed after a focus cycle root will be the focus-cycle-root's default Component to focus. This behavior can be disabled using the &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; method.</source>
          <target state="translated">默认情况下，LayoutFocusTraversalPolicy隐式转移焦点向下周期。也就是说，在正常的焦点遍历期间，在焦点循环根之后遍历的Component将是焦点循环根的默认焦点组件。可以使用 &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; 方法禁用此行为。</target>
        </trans-unit>
        <trans-unit id="212c70cbb72235079826330f8c93e9f3daa323d2" translate="yes" xml:space="preserve">
          <source>By default, Loggers also send their output to their parent logger. Typically the root Logger is configured with a set of Handlers that essentially act as default handlers for all loggers.</source>
          <target state="translated">默认情况下,记录仪也会将其输出发送到其父记录仪。通常情况下,根记录仪会配置一组处理程序,这些处理程序基本上作为所有记录仪的默认处理程序。</target>
        </trans-unit>
        <trans-unit id="fdd9a98a765058eb90a671fc4767c0bba9cfbb9d" translate="yes" xml:space="preserve">
          <source>By default, SortingFocusTraversalPolicy implicitly transfers focus down- cycle. That is, during normal focus traversal, the Component traversed after a focus cycle root will be the focus-cycle-root's default Component to focus. This behavior can be disabled using the &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; method.</source>
          <target state="translated">默认情况下，SortingFocusTraversalPolicy隐式转移焦点向下周期。也就是说，在正常的焦点遍历期间，在焦点循环根之后遍历的Component将是焦点循环根的默认焦点组件。可以使用 &lt;code&gt;setImplicitDownCycleTraversal&lt;/code&gt; 方法禁用此行为。</target>
        </trans-unit>
        <trans-unit id="7f12761303a2ae303248d111d5b62d68310ce69e" translate="yes" xml:space="preserve">
          <source>By default, a &lt;code&gt;JarFile&lt;/code&gt; for a multi-release jar file is configured to process the multi-release jar file as if it were a plain (unversioned) jar file, and as such an entry name is associated with at most one base entry. The &lt;code&gt;JarFile&lt;/code&gt; may be configured to process a multi-release jar file by creating the &lt;code&gt;JarFile&lt;/code&gt; with the &lt;a href=&quot;#%3Cinit%3E(java.io.File,boolean,int,java.lang.Runtime.Version)&quot;&gt;&lt;code&gt;JarFile(File, boolean, int, Runtime.Version)&lt;/code&gt;&lt;/a&gt; constructor. The &lt;code&gt;Runtime.Version&lt;/code&gt; object sets a maximum version used when searching for versioned entries. When so configured, an entry name can correspond with at most one base entry and zero or more versioned entries. A search is required to associate the entry name with the latest versioned entry whose version is less than or equal to the maximum version (see &lt;a href=&quot;#getEntry(java.lang.String)&quot;&gt;&lt;code&gt;getEntry(String)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">默认情况下，用于多发行版jar文件的 &lt;code&gt;JarFile&lt;/code&gt; 被配置为处理多发行版jar文件，就好像它是一个普通（未版本控制）的jar文件一样，因此，一个条目名称最多与一个基本条目相关联。的 &lt;code&gt;JarFile&lt;/code&gt; 可以被配置为通过创建来处理多释放jar文件 &lt;code&gt;JarFile&lt;/code&gt; 与&lt;a href=&quot;#%3Cinit%3E(java.io.File,boolean,int,java.lang.Runtime.Version)&quot;&gt; &lt;code&gt;JarFile(File, boolean, int, Runtime.Version)&lt;/code&gt; &lt;/a&gt;构造。该 &lt;code&gt;Runtime.Version&lt;/code&gt; 对象设置搜索版本条目时使用的最大版本。如此配置后，条目名称最多可以与一个基本条目和零个或多个版本化条目相对应。需要进行搜索以将条目名称与最新版本的条目相关联，该条目的版本小于或等于最大版本（请参见&lt;a href=&quot;#getEntry(java.lang.String)&quot;&gt; &lt;code&gt;getEntry(String)&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4947e35633288151ac8199739227758e247da4b8" translate="yes" xml:space="preserve">
          <source>By default, a &lt;code&gt;Statement&lt;/code&gt; is not poolable when created, and a &lt;code&gt;PreparedStatement&lt;/code&gt; and &lt;code&gt;CallableStatement&lt;/code&gt; are poolable when created.</source>
          <target state="translated">默认情况下，创建时无法创建 &lt;code&gt;Statement&lt;/code&gt; ，创建时可以创建 &lt;code&gt;PreparedStatement&lt;/code&gt; 和 &lt;code&gt;CallableStatement&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46479e24b8ae69da5b9b900011d065289b720894" translate="yes" xml:space="preserve">
          <source>By default, a hidden class or interface may be unloaded even if the class loader that is marked as its defining loader is &lt;a href=&quot;../ref/package#reachability&quot;&gt;reachable&lt;/a&gt;.</source>
          <target state="translated">默认情况下，即使标记为定义加载程序的类加载程序是&lt;a href=&quot;../ref/package#reachability&quot;&gt;可到达的&lt;/a&gt;，也可以卸载隐藏的类或接口。</target>
        </trans-unit>
        <trans-unit id="68c2cfa847b16a85a98ff2beb33729eb20546f7d" translate="yes" xml:space="preserve">
          <source>By default, a matcher uses anchoring region boundaries.</source>
          <target state="translated">默认情况下,匹配器使用锚定区域边界。</target>
        </trans-unit>
        <trans-unit id="d9ede2f7970350c012c7153eb1f63e552bf35bde" translate="yes" xml:space="preserve">
          <source>By default, a matcher uses opaque bounds.</source>
          <target state="translated">默认情况下,匹配器使用不透明的边界。</target>
        </trans-unit>
        <trans-unit id="03241342152d9a58c595740c888895d12fb63207" translate="yes" xml:space="preserve">
          <source>By default, a matcher uses opaque region boundaries.</source>
          <target state="translated">默认情况下,匹配器使用不透明的区域边界。</target>
        </trans-unit>
        <trans-unit id="c10f94f7c6403220981ff6642ab9adfd24aff743" translate="yes" xml:space="preserve">
          <source>By default, a recording has no duration (&lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">默认情况下，录制没有持续时间（ &lt;code&gt;null&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c991ea9764d32575612084eab1cf01c3d32be1a4" translate="yes" xml:space="preserve">
          <source>By default, a reflected object is &lt;em&gt;not&lt;/em&gt; accessible.</source>
          <target state="translated">默认情况下，&lt;em&gt;无法&lt;/em&gt;访问反射对象。</target>
        </trans-unit>
        <trans-unit id="ea3e3e7c5a3df2a3bd0bee7f064c83f2c709e37f" translate="yes" xml:space="preserve">
          <source>By default, a view is very light. It contains a reference to the parent view from which it can fetch many things without holding state, and it contains a reference to a portion of the model (&lt;code&gt;Element&lt;/code&gt;). A view does not have to exactly represent an element in the model, that is simply a typical and therefore convenient mapping. A view can alternatively maintain a couple of Position objects to maintain its location in the model (i.e. represent a fragment of an element). This is typically the result of formatting where views have been broken down into pieces. The convenience of a substantial relationship to the element makes it easier to build factories to produce the views, and makes it easier to keep track of the view pieces as the model is changed and the view must be changed to reflect the model. Simple views therefore represent an Element directly and complex views do not.</source>
          <target state="translated">默认情况下，视图非常明亮。它包含对父视图的引用，可以从其中获取很多东西而无需保持状态，并且它包含对模型的一部分的引用（ &lt;code&gt;Element&lt;/code&gt; ）。视图不必精确表示模型中的元素，这只是典型的且因此方便的映射。视图可以替代地维护几个Position对象，以维持其在模型中的位置（即表示元素的片段）。这通常是格式化的结果，其中视图已分解成小块。与元素之间实质性关系的便利性使得构建工厂来生成视图变得更加容易，并且随着模型的更改以及必须更改视图以反映模型的情况，也更易于跟踪视图。因此，简单视图直接表示元素，而复杂视图则不表示。</target>
        </trans-unit>
        <trans-unit id="cd6eb13805ac5e446c2db61cc2aeef60eb88f671" translate="yes" xml:space="preserve">
          <source>By default, all Windows have a focusable Window state of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">默认情况下，所有Windows的可聚焦窗口状态均为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a666db9366f0dd2e83f04c71114dafe0253c9836" translate="yes" xml:space="preserve">
          <source>By default, all bits in the set initially have the value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认情况下，集合中的所有位初始值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ef10a2da0889adaaa9898ef3f5cd02bae1fe382f" translate="yes" xml:space="preserve">
          <source>By default, all the ancestors of the component up to the top-most container of the hierarchy are marked invalid. If the &lt;code&gt;
 java.awt.smartInvalidate&lt;/code&gt; system property is set to &lt;code&gt;true&lt;/code&gt;, invalidation stops on the nearest validate root of this component. Marking a container</source>
          <target state="translated">默认情况下，组件的所有始祖直到层次结构的最上层容器都标记为无效。如果将 &lt;code&gt; java.awt.smartInvalidate&lt;/code&gt; 系统属性设置为 &lt;code&gt;true&lt;/code&gt; ，则无效在该组件的最近验证根上停止。标记容器</target>
        </trans-unit>
        <trans-unit id="19bdb80324aad3f8f43aef47c262a35742be37f3" translate="yes" xml:space="preserve">
          <source>By default, all threads in the target VM are resumed while the method is being invoked if they were previously suspended by an event or by &lt;a href=&quot;virtualmachine#suspend()&quot;&gt;&lt;code&gt;VirtualMachine.suspend()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;threadreference#suspend()&quot;&gt;&lt;code&gt;ThreadReference.suspend()&lt;/code&gt;&lt;/a&gt;. This is done to prevent the deadlocks that will occur if any of the threads own monitors that will be needed by the invoked method. It is possible that breakpoints or other events might occur during the invocation. Note, however, that this implicit resume acts exactly like &lt;a href=&quot;threadreference#resume()&quot;&gt;&lt;code&gt;ThreadReference.resume()&lt;/code&gt;&lt;/a&gt;, so if the thread's suspend count is greater than 1, it will remain in a suspended state during the invocation. By default, when the invocation completes, all threads in the target VM are suspended, regardless their state before the invocation.</source>
          <target state="translated">默认情况下，如果先前已被事件或&lt;a href=&quot;virtualmachine#suspend()&quot;&gt; &lt;code&gt;VirtualMachine.suspend()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;threadreference#suspend()&quot;&gt; &lt;code&gt;ThreadReference.suspend()&lt;/code&gt; &lt;/a&gt;挂起，则在调用该方法时，将恢复目标VM中的所有线程。这样做是为了防止如果任何线程拥有被调用的方法所需的监视器时将发生死锁。调用期间可能会发生断点或其他事件。但是请注意，此隐式恢复的行为与&lt;a href=&quot;threadreference#resume()&quot;&gt; &lt;code&gt;ThreadReference.resume()&lt;/code&gt; &lt;/a&gt;完全相同，因此，如果线程的挂起计数大于1，则在调用期间它将保持挂起状态。默认情况下，调用完成后，目标VM中的所有线程都会被挂起，无论调用之前它们的状态如何。</target>
        </trans-unit>
        <trans-unit id="614a7cc6d33076f43a0f564fdab5895209244d01" translate="yes" xml:space="preserve">
          <source>By default, all threads in the target VM are resumed while the method is being invoked if they were previously suspended by an event or by &lt;a href=&quot;virtualmachine#suspend()&quot;&gt;&lt;code&gt;VirtualMachine.suspend()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;threadreference#suspend()&quot;&gt;&lt;code&gt;ThreadReference.suspend()&lt;/code&gt;&lt;/a&gt;. This is done to prevent the deadlocks that will occur if any of the threads own monitors that will be needed by the invoked method. Note, however, that this implicit resume acts exactly like &lt;a href=&quot;threadreference#resume()&quot;&gt;&lt;code&gt;ThreadReference.resume()&lt;/code&gt;&lt;/a&gt;, so if the thread's suspend count is greater than 1, it will remain in a suspended state during the invocation and thus a deadlock could still occur. By default, when the invocation completes, all threads in the target VM are suspended, regardless their state before the invocation. It is possible that breakpoints or other events might occur during the invocation. This can cause deadlocks as described above. It can also cause a deadlock if invokeMethod is called from the client's event handler thread. In this case, this thread will be waiting for the invokeMethod to complete and won't read the EventSet that comes in for the new event. If this new EventSet is SUSPEND_ALL, then a deadlock will occur because no one will resume the EventSet. To avoid this, all EventRequests should be disabled before doing the invokeMethod, or the invokeMethod should not be done from the client's event handler thread.</source>
          <target state="translated">默认情况下，如果先前已被事件或&lt;a href=&quot;virtualmachine#suspend()&quot;&gt; &lt;code&gt;VirtualMachine.suspend()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;threadreference#suspend()&quot;&gt; &lt;code&gt;ThreadReference.suspend()&lt;/code&gt; &lt;/a&gt;挂起，则在调用该方法时，将恢复目标VM中的所有线程。这样做是为了防止如果任何线程拥有被调用的方法所需的监视器时将发生死锁。但是请注意，此隐式简历的行为与&lt;a href=&quot;threadreference#resume()&quot;&gt; &lt;code&gt;ThreadReference.resume()&lt;/code&gt; &lt;/a&gt;完全相同。，因此，如果线程的挂起计数大于1，则在调用期间它将保持挂起状态，因此仍然可能发生死锁。默认情况下，调用完成后，目标VM中的所有线程都会被挂起，无论调用之前它们的状态如何。调用期间可能会发生断点或其他事件。如上所述，这可能导致死锁。如果从客户端的事件处理程序线程调用invokeMethod，它也可能导致死锁。在这种情况下，该线程将等待invokeMethod完成，并且不会读取新事件附带的EventSet。如果此新的EventSet是SUSPEND_ALL，则将发生死锁，因为没有人将恢复该EventSet。为避免这种情况，应在执行invokeMethod之前禁用所有EventRequests，否则，不应通过客户端的事件处理程序线程来完成invokeMethod。</target>
        </trans-unit>
        <trans-unit id="3d0a5a668f3c0d1fa4ade0d300342eff44037715" translate="yes" xml:space="preserve">
          <source>By default, an event is enabled. To disable an event annotate the &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; class with &lt;code&gt;@Enabled(false)&lt;/code&gt;.</source>
          <target state="translated">默认情况下，事件是启用的。要禁用事件，请使用 &lt;code&gt;@Enabled(false)&lt;/code&gt; 注释&lt;a href=&quot;event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;类。</target>
        </trans-unit>
        <trans-unit id="08f5665ce782847c3f23f2c84f9f2e26b68a6042" translate="yes" xml:space="preserve">
          <source>By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. Unicode-aware case-insensitive matching can be enabled by specifying the &lt;a href=&quot;#UNICODE_CASE&quot;&gt;&lt;code&gt;UNICODE_CASE&lt;/code&gt;&lt;/a&gt; flag in conjunction with this flag.</source>
          <target state="translated">默认情况下，不区分大小写的匹配假定只匹配US-ASCII字符集中的字符。可以通过将&lt;a href=&quot;#UNICODE_CASE&quot;&gt; &lt;code&gt;UNICODE_CASE&lt;/code&gt; &lt;/a&gt;标志与该标志一起指定来启用Unicode感知的不区分大小写的匹配。</target>
        </trans-unit>
        <trans-unit id="b05f4c15bc6d3e0ea9d22420186bbbd6b7d33574" translate="yes" xml:space="preserve">
          <source>By default, case-insensitive matching assumes that only characters in the US-ASCII charset are being matched. Unicode-aware case-insensitive matching can be enabled by specifying the &lt;a href=&quot;pattern#UNICODE_CASE&quot;&gt;&lt;code&gt;UNICODE_CASE&lt;/code&gt;&lt;/a&gt; flag in conjunction with this flag.</source>
          <target state="translated">默认情况下，不区分大小写的匹配假定只匹配US-ASCII字符集中的字符。可以通过将&lt;a href=&quot;pattern#UNICODE_CASE&quot;&gt; &lt;code&gt;UNICODE_CASE&lt;/code&gt; &lt;/a&gt;标志与该标志一起指定来启用Unicode感知的不区分大小写的匹配。</target>
        </trans-unit>
        <trans-unit id="1a2041265c60087ac4fe7199c470c07c3ecd0e8d" translate="yes" xml:space="preserve">
          <source>By default, columns may be rearranged in the &lt;code&gt;JTable&lt;/code&gt; so that the view's columns appear in a different order to the columns in the model. This does not affect the implementation of the model at all: when the columns are reordered, the &lt;code&gt;JTable&lt;/code&gt; maintains the new order of the columns internally and converts its column indices before querying the model.</source>
          <target state="translated">默认情况下，可以在 &lt;code&gt;JTable&lt;/code&gt; 中重新排列列，以使视图的列以与模型中的列不同的顺序出现。这一点根本不影响模型的实现：对列进行重新排序时， &lt;code&gt;JTable&lt;/code&gt; 在内部维护列的新顺序，并在查询模型之前转换其列索引。</target>
        </trans-unit>
        <trans-unit id="bf44f10f4db4900a085335d99045a45fabf1b13c" translate="yes" xml:space="preserve">
          <source>By default, cookies are created according to the RFC 2965 cookie specification. The version can be changed with the &lt;code&gt;setVersion&lt;/code&gt; method.</source>
          <target state="translated">默认情况下，根据RFC 2965 cookie规范创建cookie。可以使用 &lt;code&gt;setVersion&lt;/code&gt; 方法更改版本。</target>
        </trans-unit>
        <trans-unit id="376b293eb7cafd1a158bf7e0228920cd7cb3f64a" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass if they wish to keep track of the notations declared in a document.</source>
          <target state="translated">默认情况下,什么都不做。如果应用程序编写者希望跟踪文档中声明的符号,他们可以在子类中重写这个方法。</target>
        </trans-unit>
        <trans-unit id="d952caec0b1588eb9e9f59d2f32d676b8fff01c9" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass if they wish to store the locator for use with other document events.</source>
          <target state="translated">默认情况下,什么都不做。如果应用程序编写者希望将定位器存储到其他文档事件中,可以在子类中重写这个方法。</target>
        </trans-unit>
        <trans-unit id="3fd319cc2bf6f1209e77fcd1d143952f20d22eec" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to keep track of the unparsed entities declared in a document.</source>
          <target state="translated">默认情况下,什么都不做。应用程序编写者可以在子类中重写这个方法,以跟踪文档中声明的未解析实体。</target>
        </trans-unit>
        <trans-unit id="281e0b8c280fb62c7244379da8e6522c896a322e" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the beginning of a document (such as allocating the root node of a tree or creating an output file).</source>
          <target state="translated">默认情况下,什么也不做。应用程序编写者可以在子类中重写这个方法,在文档开始时采取特定的操作(如分配树的根节点或创建输出文件)。</target>
        </trans-unit>
        <trans-unit id="5b55a46f0fd2a423eab650a61d390f1fe4dcadf3" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the end of a document (such as finalising a tree or closing an output file).</source>
          <target state="translated">默认情况下,什么都不做。应用程序编写者可以在子类中重写这个方法,以便在文档结束时采取特定的操作(例如最后确定一个树或关闭一个输出文件)。</target>
        </trans-unit>
        <trans-unit id="b9578c31cb53f356f340f8888d7b6b0b2ab2ef88" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the end of each element (such as finalising a tree node or writing output to a file).</source>
          <target state="translated">默认情况下,什么都不做。应用程序编写者可以在子类中重写这个方法,在每个元素的结尾处采取特定的操作(例如最终确定一个树节点或将输出写入文件)。</target>
        </trans-unit>
        <trans-unit id="c96d33dcfc3e09f06ab356bd26ecc85615612c04" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the end of each prefix mapping.</source>
          <target state="translated">默认情况下,什么都不做。应用程序编写者可以在子类中重写这个方法,在每个前缀映射的最后采取特定的操作。</target>
        </trans-unit>
        <trans-unit id="3db9666cd2cff241353af8cef3cc41252eff483f" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the start of each Namespace prefix scope (such as storing the prefix mapping).</source>
          <target state="translated">默认情况下,什么也不做。应用程序编写者可以在子类中重写这个方法,以便在每个Namespace前缀作用域开始时采取特定的操作(例如存储前缀映射)。</target>
        </trans-unit>
        <trans-unit id="c269c897299c08301e7c0fdddc7b987428bedec2" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions at the start of each element (such as allocating a new tree node or writing output to a file).</source>
          <target state="translated">默认情况下,什么也不做。应用程序编写者可以在子类中重写这个方法,在每个元素开始时采取特定的操作(例如分配一个新的树节点或将输出写入文件)。</target>
        </trans-unit>
        <trans-unit id="80fefd4fa00a38c910667198a54dab83871e381b" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method in a subclass to take specific actions for each processing instruction, such as setting status variables or invoking other methods.</source>
          <target state="translated">默认情况下,什么也不做。应用程序编写者可以在子类中重写该方法,对每条处理指令采取特定的操作,例如设置状态变量或调用其他方法。</target>
        </trans-unit>
        <trans-unit id="aa966a9fe2e1a9504f6a61215fe9893c515a05a7" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method to take specific actions for each chunk of character data (such as adding the data to a node or buffer, or printing it to a file).</source>
          <target state="translated">默认情况下,什么也不做。应用程序编写者可以覆盖该方法,对每块字符数据采取特定的操作(如将数据添加到节点或缓冲区,或打印到文件)。</target>
        </trans-unit>
        <trans-unit id="81ae6edb71c188cf07f0dfe1b8108592f72a2f18" translate="yes" xml:space="preserve">
          <source>By default, do nothing. Application writers may override this method to take specific actions for each chunk of ignorable whitespace (such as adding data to a node or buffer, or printing it to a file).</source>
          <target state="translated">默认情况下,什么也不做。应用程序编写者可以重写这个方法,对每块可忽略的空白采取特定的操作(如将数据添加到节点或缓冲区,或打印到文件)。</target>
        </trans-unit>
        <trans-unit id="e88f21340c59e043a7e34b0e481995c28070d3ff" translate="yes" xml:space="preserve">
          <source>By default, even core threads are initially created and started only when new tasks arrive, but this can be overridden dynamically using method &lt;a href=&quot;#prestartCoreThread()&quot;&gt;&lt;code&gt;prestartCoreThread()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#prestartAllCoreThreads()&quot;&gt;&lt;code&gt;prestartAllCoreThreads()&lt;/code&gt;&lt;/a&gt;. You probably want to prestart threads if you construct the pool with a non-empty queue.</source>
          <target state="translated">默认情况下，甚至核心线程也仅在新任务到达时才开始创建和启动，但是可以使用&lt;a href=&quot;#prestartCoreThread()&quot;&gt; &lt;code&gt;prestartCoreThread()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#prestartAllCoreThreads()&quot;&gt; &lt;code&gt;prestartAllCoreThreads()&lt;/code&gt; &lt;/a&gt;方法动态地覆盖它。如果使用非空队列构造池，则可能要预启动线程。</target>
        </trans-unit>
        <trans-unit id="ca7f70beb3a78020bab53774c9b058370290284b" translate="yes" xml:space="preserve">
          <source>By default, even core threads are initially created and started only when new tasks arrive, but this can be overridden dynamically using method &lt;a href=&quot;threadpoolexecutor#prestartCoreThread--&quot;&gt;&lt;code&gt;prestartCoreThread()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;threadpoolexecutor#prestartAllCoreThreads--&quot;&gt;&lt;code&gt;prestartAllCoreThreads()&lt;/code&gt;&lt;/a&gt;. You probably want to prestart threads if you construct the pool with a non-empty queue.</source>
          <target state="translated">默认情况下，甚至只有在有新任务到达时才开始甚至启动核心线程，但是可以使用&lt;a href=&quot;threadpoolexecutor#prestartCoreThread--&quot;&gt; &lt;code&gt;prestartCoreThread()&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;threadpoolexecutor#prestartAllCoreThreads--&quot;&gt; &lt;code&gt;prestartAllCoreThreads()&lt;/code&gt; &lt;/a&gt;方法动态地覆盖它。如果使用非空队列构造池，则可能要预启动线程。</target>
        </trans-unit>
        <trans-unit id="363fc267c2475a3af3b3d474890b007447ba7d8c" translate="yes" xml:space="preserve">
          <source>By default, events are registered when they are first used, typically when an event object is allocated. To ensure an event is visible early, registration can be triggered by invoking the &lt;a href=&quot;#register(java.lang.Class)&quot;&gt;&lt;code&gt;register(Class)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">默认情况下，事件是在首次使用时注册的，通常是在分配事件对象时注册的。为了确保事件早日可见，可以通过调用&lt;a href=&quot;#register(java.lang.Class)&quot;&gt; &lt;code&gt;register(Class)&lt;/code&gt; &lt;/a&gt;方法来触发注册。</target>
        </trans-unit>
        <trans-unit id="f8deffb23b622897cfec4a68e468888dce14efbd" translate="yes" xml:space="preserve">
          <source>By default, if no value for that property is specified, an instance of &lt;a href=&quot;mbeanserverbuilder&quot;&gt;&lt;code&gt;javax.management.MBeanServerBuilder&lt;/code&gt;&lt;/a&gt; is created. Otherwise, the MBeanServerFactory attempts to load the specified class using &lt;a href=&quot;../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt;&lt;code&gt;Thread.currentThread().getContextClassLoader()&lt;/code&gt;&lt;/a&gt;, or if that is null, &lt;a href=&quot;../../../java.base/java/lang/class#forName(java.lang.String)&quot;&gt;&lt;code&gt;Class.forName()&lt;/code&gt;&lt;/a&gt;. Then it creates an initial instance of that Class using &lt;a href=&quot;../../../java.base/java/lang/class#newInstance()&quot;&gt;&lt;code&gt;Class.newInstance()&lt;/code&gt;&lt;/a&gt;. If any checked exception is raised during this process (e.g. &lt;a href=&quot;../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../java.base/java/lang/instantiationexception&quot;&gt;&lt;code&gt;InstantiationException&lt;/code&gt;&lt;/a&gt;) the MBeanServerFactory will propagate this exception from within a RuntimeException.</source>
          <target state="translated">缺省情况下，如果未指定该属性的值，那么将创建&lt;a href=&quot;mbeanserverbuilder&quot;&gt; &lt;code&gt;javax.management.MBeanServerBuilder&lt;/code&gt; &lt;/a&gt;的实例。否则，MBeanServerFactory尝试使用&lt;a href=&quot;../../../java.base/java/lang/thread#getContextClassLoader()&quot;&gt; &lt;code&gt;Thread.currentThread().getContextClassLoader()&lt;/code&gt; &lt;/a&gt;加载指定的类；如果为null，则尝试使用&lt;a href=&quot;../../../java.base/java/lang/class#forName(java.lang.String)&quot;&gt; &lt;code&gt;Class.forName()&lt;/code&gt; &lt;/a&gt;加载指定的类。然后，它使用&lt;a href=&quot;../../../java.base/java/lang/class#newInstance()&quot;&gt; &lt;code&gt;Class.newInstance()&lt;/code&gt; &lt;/a&gt;创建该Class的初始实例。如果在此过程中引发了任何检查到的异常（例如&lt;a href=&quot;../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../../java.base/java/lang/instantiationexception&quot;&gt; &lt;code&gt;InstantiationException&lt;/code&gt; &lt;/a&gt;），则MBeanServerFactory将从RuntimeException内部传播此异常。</target>
        </trans-unit>
        <trans-unit id="de35fdb0e7c1ca0e17cfea2574d03218ad8230ec" translate="yes" xml:space="preserve">
          <source>By default, if no value for that property is specified, an instance of &lt;a href=&quot;mbeanserverbuilder&quot;&gt;&lt;code&gt;javax.management.MBeanServerBuilder&lt;/code&gt;&lt;/a&gt; is created. Otherwise, the MBeanServerFactory attempts to load the specified class using &lt;a href=&quot;../../java/lang/thread#getContextClassLoader--&quot;&gt;&lt;code&gt;Thread.currentThread().getContextClassLoader()&lt;/code&gt;&lt;/a&gt;, or if that is null, &lt;a href=&quot;../../java/lang/class#forName-java.lang.String-&quot;&gt;&lt;code&gt;Class.forName()&lt;/code&gt;&lt;/a&gt;. Then it creates an initial instance of that Class using &lt;a href=&quot;../../java/lang/class#newInstance--&quot;&gt;&lt;code&gt;Class.newInstance()&lt;/code&gt;&lt;/a&gt;. If any checked exception is raised during this process (e.g. &lt;a href=&quot;../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../java/lang/instantiationexception&quot;&gt;&lt;code&gt;InstantiationException&lt;/code&gt;&lt;/a&gt;) the MBeanServerFactory will propagate this exception from within a RuntimeException.</source>
          <target state="translated">缺省情况下，如果未指定该属性的值，那么将创建&lt;a href=&quot;mbeanserverbuilder&quot;&gt; &lt;code&gt;javax.management.MBeanServerBuilder&lt;/code&gt; &lt;/a&gt;的实例。否则，MBeanServerFactory尝试使用&lt;a href=&quot;../../java/lang/thread#getContextClassLoader--&quot;&gt; &lt;code&gt;Thread.currentThread().getContextClassLoader()&lt;/code&gt; &lt;/a&gt;加载指定的类；如果为null，则尝试使用&lt;a href=&quot;../../java/lang/class#forName-java.lang.String-&quot;&gt; &lt;code&gt;Class.forName()&lt;/code&gt; &lt;/a&gt;加载指定的类。然后，它使用&lt;a href=&quot;../../java/lang/class#newInstance--&quot;&gt; &lt;code&gt;Class.newInstance()&lt;/code&gt; &lt;/a&gt;创建该Class的初始实例。如果在此过程中引发了任何检查到的异常（例如&lt;a href=&quot;../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;../../java/lang/instantiationexception&quot;&gt; &lt;code&gt;InstantiationException&lt;/code&gt; &lt;/a&gt;），则MBeanServerFactory将从RuntimeException内部传播此异常。</target>
        </trans-unit>
        <trans-unit id="441e214632a2b7ac3e98f1c5c187c69d336a4e8a" translate="yes" xml:space="preserve">
          <source>By default, line numbering begins at 0. This number increments at every &lt;a href=&quot;#lt&quot;&gt;line terminator&lt;/a&gt; as the data is read, and can be changed with a call to &lt;code&gt;setLineNumber(int)&lt;/code&gt;. Note however, that &lt;code&gt;setLineNumber(int)&lt;/code&gt; does not actually change the current position in the stream; it only changes the value that will be returned by &lt;code&gt;getLineNumber()&lt;/code&gt;.</source>
          <target state="translated">默认情况下，行编号从0开始。在读取数据时，此编号在每个&lt;a href=&quot;#lt&quot;&gt;行终止符&lt;/a&gt;处递增，并且可以通过调用 &lt;code&gt;setLineNumber(int)&lt;/code&gt; 进行更改。但是请注意， &lt;code&gt;setLineNumber(int)&lt;/code&gt; 实际上不会更改流中的当前位置；它只会更改 &lt;code&gt;getLineNumber()&lt;/code&gt; 返回的值。</target>
        </trans-unit>
        <trans-unit id="e653e7b3e71b81f241fb81c1fcb39651ef616085" translate="yes" xml:space="preserve">
          <source>By default, methods of this class will return a Component only if it is visible, displayable, enabled, and focusable. Subclasses can modify this behavior by overriding the &lt;code&gt;accept&lt;/code&gt; method.</source>
          <target state="translated">默认情况下，此类的方法仅在可见，可显示，启用和可聚焦时才返回Component。子类可以通过重写 &lt;code&gt;accept&lt;/code&gt; 方法来修改此行为。</target>
        </trans-unit>
        <trans-unit id="30c7035d6d55b6ac1754d7dce8a216b5a33f5df3" translate="yes" xml:space="preserve">
          <source>By default, methods of this class with return a Component only if it is visible, displayable, enabled, and focusable. Subclasses can modify this behavior by overriding the &lt;code&gt;accept&lt;/code&gt; method.</source>
          <target state="translated">默认情况下，此类的方法仅在可见，可显示，启用和可聚焦时才返回Component。子类可以通过重写 &lt;code&gt;accept&lt;/code&gt; 方法来修改此行为。</target>
        </trans-unit>
        <trans-unit id="8b4af578784f76f9cbc75bc182916b22c9e32802" translate="yes" xml:space="preserve">
          <source>By default, one InputContext instance is created per Window instance, and this input context is shared by all components within the window's container hierarchy. However, this means that only one text input operation is possible at any one time within a window, and that the text needs to be committed when moving the focus from one text component to another. If this is not desired, text components can create their own input context instances.</source>
          <target state="translated">默认情况下,每个Window实例都会创建一个InputContext实例,这个输入上下文被窗口容器层次结构中的所有组件共享。但是,这意味着在一个窗口内任何时候只能进行一个文本输入操作,而且当焦点从一个文本组件移动到另一个文本组件时,需要提交文本。如果不希望这样,文本组件可以创建自己的输入上下文实例。</target>
        </trans-unit>
        <trans-unit id="38c4784bf68d273641e8db44ced23f218f38efbb" translate="yes" xml:space="preserve">
          <source>By default, only one &lt;code&gt;ResultSet&lt;/code&gt; object per &lt;code&gt;Statement&lt;/code&gt; object can be open at the same time. Therefore, if the reading of one &lt;code&gt;ResultSet&lt;/code&gt; object is interleaved with the reading of another, each must have been generated by different &lt;code&gt;Statement&lt;/code&gt; objects. All execution methods in the &lt;code&gt;Statement&lt;/code&gt; interface implicitly close a current &lt;code&gt;ResultSet&lt;/code&gt; object of the statement if an open one exists.</source>
          <target state="translated">默认情况下，每个 &lt;code&gt;Statement&lt;/code&gt; 对象只能同时打开一个 &lt;code&gt;ResultSet&lt;/code&gt; 对象。因此，如果一个 &lt;code&gt;ResultSet&lt;/code&gt; 对象的读取与另一个的读取交错，则每个都必须由不同的 &lt;code&gt;Statement&lt;/code&gt; 对象生成。如果存在打开的语句， &lt;code&gt;Statement&lt;/code&gt; 接口中的所有执行方法都会隐式关闭该语句的当前 &lt;code&gt;ResultSet&lt;/code&gt; 对象。</target>
        </trans-unit>
        <trans-unit id="33bdae1c9910d8428afddd3de5da4494431698a5" translate="yes" xml:space="preserve">
          <source>By default, only the specified modules will be considered, without expansion of the module dependencies.</source>
          <target state="translated">默认情况下,只考虑指定的模块,不扩展模块的依赖关系。</target>
        </trans-unit>
        <trans-unit id="88e8c46b5dbef26fcd6a7043fe41aa795d6f5154" translate="yes" xml:space="preserve">
          <source>By default, parsing is lenient: If the input is not in the form used by this object's format method but can still be parsed as a date, then the parse succeeds. Clients may insist on strict adherence to the format by calling &lt;a href=&quot;#setLenient(boolean)&quot;&gt;&lt;code&gt;setLenient(false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认情况下，解析是宽松的：如果输入的格式不是此对象的format方法使用的格式，但仍可以将其解析为日期，则解析成功。客户可以通过调用&lt;a href=&quot;#setLenient(boolean)&quot;&gt; &lt;code&gt;setLenient(false)&lt;/code&gt; &lt;/a&gt;来坚持严格遵守该格式。</target>
        </trans-unit>
        <trans-unit id="ee8c13d9e88af773fee8d7f7f88a5902d8a19f11" translate="yes" xml:space="preserve">
          <source>By default, parsing is lenient: If the input is not in the form used by this object's format method but can still be parsed as a date, then the parse succeeds. Clients may insist on strict adherence to the format by calling &lt;a href=&quot;dateformat#setLenient-boolean-&quot;&gt;&lt;code&gt;setLenient(false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认情况下，解析是宽松的：如果输入的格式不是此对象的format方法使用的格式，但仍可以将其解析为日期，则解析成功。客户可以通过调用&lt;a href=&quot;dateformat#setLenient-boolean-&quot;&gt; &lt;code&gt;setLenient(false)&lt;/code&gt; &lt;/a&gt;来坚持严格遵守该格式。</target>
        </trans-unit>
        <trans-unit id="f07053040a6a3d92a181bc414e928c8adaa8c58b" translate="yes" xml:space="preserve">
          <source>By default, reflection frames are hidden. A &lt;code&gt;StackWalker&lt;/code&gt; configured with this &lt;code&gt;SHOW_REFLECT_FRAMES&lt;/code&gt; option will show all reflection frames that include &lt;a href=&quot;reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt;&lt;code&gt;Method.invoke(java.lang.Object, java.lang.Object...)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;reflect/constructor#newInstance(java.lang.Object...)&quot;&gt;&lt;code&gt;Constructor.newInstance(Object...)&lt;/code&gt;&lt;/a&gt; and their reflection implementation classes.</source>
          <target state="translated">默认情况下，反射框是隐藏的。使用此 &lt;code&gt;SHOW_REFLECT_FRAMES&lt;/code&gt; 选项配置的 &lt;code&gt;StackWalker&lt;/code&gt; 将显示所有包含&lt;a href=&quot;reflect/method#invoke(java.lang.Object,java.lang.Object...)&quot;&gt; &lt;code&gt;Method.invoke(java.lang.Object, java.lang.Object...)&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;reflect/constructor#newInstance(java.lang.Object...)&quot;&gt; &lt;code&gt;Constructor.newInstance(Object...)&lt;/code&gt; &lt;/a&gt;及其反射实现类的反射框架。</target>
        </trans-unit>
        <trans-unit id="4a7b729769c88f2e7559c7f4490ab35242123370" translate="yes" xml:space="preserve">
          <source>By default, responsibility for listening for changes to this property and indicating the drop location visually lies with the list's &lt;code&gt;ListUI&lt;/code&gt;, which may paint it directly and/or install a cell renderer to do so. Developers wishing to implement custom drop location painting and/or replace the default cell renderer, may need to honor this property.</source>
          <target state="translated">默认情况下，侦听对此属性的更改并直观地指示放置位置的 &lt;code&gt;ListUI&lt;/code&gt; 在于列表的ListUI，后者可以直接对其进行绘制和/或安装单元格渲染器来执行此操作。希望实现自定义放置位置绘画和/或替换默认单元格渲染器的开发人员可能需要遵守此属性。</target>
        </trans-unit>
        <trans-unit id="a48ab202c0f808f87f7ddce6d586689960eed91b" translate="yes" xml:space="preserve">
          <source>By default, rows are in unsorted order (the same as the model) and every column is sortable. The default &lt;code&gt;Comparator&lt;/code&gt;s are documented in the subclasses (for example, &lt;a href=&quot;table/tablerowsorter&quot;&gt;&lt;code&gt;TableRowSorter&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">默认情况下，行按未排序的顺序（与模型相同），并且每一列都是可排序的。缺省 &lt;code&gt;Comparator&lt;/code&gt; 记录在子类中（例如&lt;a href=&quot;table/tablerowsorter&quot;&gt; &lt;code&gt;TableRowSorter&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4891c4b2e0ec6b4e0fd376e01b91a0f3e534a924" translate="yes" xml:space="preserve">
          <source>By default, symbolic links are not automatically followed by this method. If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt;&lt;code&gt;FOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option then symbolic links are followed. When following links, and the attributes of the target cannot be read, then this method attempts to get the &lt;code&gt;BasicFileAttributes&lt;/code&gt; of the link.</source>
          <target state="translated">默认情况下，此方法不会自动跟随符号链接。如果 &lt;code&gt;options&lt;/code&gt; 参数包含&lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt; &lt;code&gt;FOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;选项，则跟随符号链接。当跟随链接，并且无法读取目标的属性时，则此方法尝试获取链接的 &lt;code&gt;BasicFileAttributes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f5ecda976163824d56ff183af9bc0a236da744e5" translate="yes" xml:space="preserve">
          <source>By default, symbolic links are not automatically followed by this method. If the &lt;code&gt;options&lt;/code&gt; parameter contains the &lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt;&lt;code&gt;FOLLOW_LINKS&lt;/code&gt;&lt;/a&gt; option then symbolic links are followed. When following links, and the attributes of the target cannot be read, then this method attempts to get the &lt;code&gt;BasicFileAttributes&lt;/code&gt; of the link. If they can be read then the &lt;code&gt;visitFile&lt;/code&gt; method is invoked with the attributes of the link (otherwise the &lt;code&gt;visitFileFailed&lt;/code&gt; method is invoked as specified above).</source>
          <target state="translated">默认情况下，此方法不会自动跟随符号链接。如果 &lt;code&gt;options&lt;/code&gt; 参数包含&lt;a href=&quot;filevisitoption#FOLLOW_LINKS&quot;&gt; &lt;code&gt;FOLLOW_LINKS&lt;/code&gt; &lt;/a&gt;选项，则跟随符号链接。当跟随链接，并且无法读取目标的属性时，则此方法尝试获取链接的 &lt;code&gt;BasicFileAttributes&lt;/code&gt; 。如果可以读取它们，则使用链接的属性调用 &lt;code&gt;visitFile&lt;/code&gt; 方法（否则，按上面指定的 &lt;code&gt;visitFileFailed&lt;/code&gt; 调用visitFileFailed方法）。</target>
        </trans-unit>
        <trans-unit id="de7746ea678173659f8ab4ca568433cdcb4da55b" translate="yes" xml:space="preserve">
          <source>By default, text related document mutation methods such as &lt;code&gt;insertString&lt;/code&gt;, &lt;code&gt;replace&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; in &lt;code&gt;AbstractDocument&lt;/code&gt; use &lt;code&gt;DocumentFilter&lt;/code&gt; when available, and &lt;code&gt;Element&lt;/code&gt; related mutation methods such as &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt; and &lt;code&gt;removeElement&lt;/code&gt; in &lt;code&gt;DefaultStyledDocument&lt;/code&gt; do not use &lt;code&gt;DocumentFilter&lt;/code&gt;. If a method doesn't follow these defaults, this must be explicitly stated in the method documentation.</source>
          <target state="translated">默认情况下，文本文档相关基因突变的方法，如 &lt;code&gt;insertString&lt;/code&gt; ， &lt;code&gt;replace&lt;/code&gt; 和 &lt;code&gt;remove&lt;/code&gt; 的 &lt;code&gt;AbstractDocument&lt;/code&gt; 使用 &lt;code&gt;DocumentFilter&lt;/code&gt; 可用时，和 &lt;code&gt;Element&lt;/code&gt; 相关的基因突变的方法，如 &lt;code&gt;create&lt;/code&gt; ， &lt;code&gt;insert&lt;/code&gt; 和 &lt;code&gt;removeElement&lt;/code&gt; 在 &lt;code&gt;DefaultStyledDocument&lt;/code&gt; 不使用 &lt;code&gt;DocumentFilter&lt;/code&gt; 。如果方法不遵循这些默认值，则必须在方法文档中明确说明。</target>
        </trans-unit>
        <trans-unit id="3f4da79531fc482d6768d4600f0bf2f4a5b55e2d" translate="yes" xml:space="preserve">
          <source>By default, the JDK's data model is &lt;a href=&quot;../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">默认情况下，JDK的数据模型是&lt;a href=&quot;../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="00da2bb1075b395d1b8f73951c29e84537007ed6" translate="yes" xml:space="preserve">
          <source>By default, the action command is set to the label of the menu item.</source>
          <target state="translated">默认情况下,动作命令被设置为菜单项的标签。</target>
        </trans-unit>
        <trans-unit id="b38dd018ae64120a5aa839c3fcbbfbb6f76b01f9" translate="yes" xml:space="preserve">
          <source>By default, the copy fails if the target file already exists or is a symbolic link. If the &lt;a href=&quot;standardcopyoption#REPLACE_EXISTING&quot;&gt;&lt;code&gt;REPLACE_EXISTING&lt;/code&gt;&lt;/a&gt; option is specified, and the target file already exists, then it is replaced if it is not a non-empty directory. If the target file exists and is a symbolic link, then the symbolic link is replaced. In this release, the &lt;code&gt;REPLACE_EXISTING&lt;/code&gt; option is the only option required to be supported by this method. Additional options may be supported in future releases.</source>
          <target state="translated">默认情况下，如果目标文件已经存在或为符号链接，则复制失败。如果指定了&lt;a href=&quot;standardcopyoption#REPLACE_EXISTING&quot;&gt; &lt;code&gt;REPLACE_EXISTING&lt;/code&gt; &lt;/a&gt;选项，并且目标文件已经存在，则它不是非空目录时将被替换。如果目标文件存在并且是符号链接，则将替换符号链接。在此版本中， &lt;code&gt;REPLACE_EXISTING&lt;/code&gt; 选项是此方法要求支持的唯一选项。将来的版本中可能会支持其他选项。</target>
        </trans-unit>
        <trans-unit id="ee0b25fde79412bc21b6712f213ca81453332871" translate="yes" xml:space="preserve">
          <source>By default, the created process does not have its own terminal or console. All its standard I/O (i.e. stdin, stdout, stderr) operations will be redirected to the parent process, where they can be accessed via the streams obtained using the methods &lt;a href=&quot;#getOutputStream()&quot;&gt;&lt;code&gt;getOutputStream()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getInputStream()&quot;&gt;&lt;code&gt;getInputStream()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getErrorStream()&quot;&gt;&lt;code&gt;getErrorStream()&lt;/code&gt;&lt;/a&gt;. The parent process uses these streams to feed input to and get output from the process. Because some native platforms only provide limited buffer size for standard input and output streams, failure to promptly write the input stream or read the output stream of the process may cause the process to block, or even deadlock.</source>
          <target state="translated">默认情况下，创建的进程没有自己的终端或控制台。其所有标准I / O（即stdin，stdout，stderr）操作都将重定向到父进程，在此可以通过使用&lt;a href=&quot;#getOutputStream()&quot;&gt; &lt;code&gt;getOutputStream()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#getInputStream()&quot;&gt; &lt;code&gt;getInputStream()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;#getErrorStream()&quot;&gt; &lt;code&gt;getErrorStream()&lt;/code&gt; &lt;/a&gt;方法获得的流来访问它们。父流程使用这些流向流程提供输入并从流程中获取输出。由于某些本机平台仅为标准输入和输出流提供有限的缓冲区大小，因此未能及时写入或读取进程的输出流可能会导致进程阻塞甚至死锁。</target>
        </trans-unit>
        <trans-unit id="050bea95ee24a9fb1d4a366ba21a756da1436075" translate="yes" xml:space="preserve">
          <source>By default, the created subprocess does not have its own terminal or console. All its standard I/O (i.e. stdin, stdout, stderr) operations will be redirected to the parent process, where they can be accessed via the streams obtained using the methods &lt;a href=&quot;process#getOutputStream--&quot;&gt;&lt;code&gt;getOutputStream()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;process#getInputStream--&quot;&gt;&lt;code&gt;getInputStream()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;process#getErrorStream--&quot;&gt;&lt;code&gt;getErrorStream()&lt;/code&gt;&lt;/a&gt;. The parent process uses these streams to feed input to and get output from the subprocess. Because some native platforms only provide limited buffer size for standard input and output streams, failure to promptly write the input stream or read the output stream of the subprocess may cause the subprocess to block, or even deadlock.</source>
          <target state="translated">默认情况下，创建的子进程没有自己的终端或控制台。它的所有标准I / O（即stdin，stdout，stderr）操作都将重定向到父进程，在此可以通过使用&lt;a href=&quot;process#getOutputStream--&quot;&gt; &lt;code&gt;getOutputStream()&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;process#getInputStream--&quot;&gt; &lt;code&gt;getInputStream()&lt;/code&gt; &lt;/a&gt;和&lt;a href=&quot;process#getErrorStream--&quot;&gt; &lt;code&gt;getErrorStream()&lt;/code&gt; &lt;/a&gt;方法获得的流来访问它们。父流程使用这些流将输入馈入子流程并从子流程获取输出。由于某些本机平台仅为标准输入和输出流提供了有限的缓冲区大小，因此未能及时写入子流程的输入流或读取子流程的输出流可能导致子流程阻塞甚至死锁。</target>
        </trans-unit>
        <trans-unit id="5397b71637c8e996e16ce34f5348a09cbd9140be" translate="yes" xml:space="preserve">
          <source>By default, the event class associated with this event factory is registered when the event factory is created, unless the event has the &lt;a href=&quot;registered&quot;&gt;&lt;code&gt;Registered&lt;/code&gt;&lt;/a&gt; annotation.</source>
          <target state="translated">默认情况下，创建事件工厂时会注册与此事件工厂关联的事件类，除非该事件具有&lt;a href=&quot;registered&quot;&gt; &lt;code&gt;Registered&lt;/code&gt; &lt;/a&gt;批注。</target>
        </trans-unit>
        <trans-unit id="315f07a0d45b903705122dccf37fa7770c2f731f" translate="yes" xml:space="preserve">
          <source>By default, the event is enabled. The event can be enabled or disabled by setting the enabled setting to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, programmatically or by using a configuration file. The event can also be disabled by annotating event with the &lt;code&gt;@Enabled(false)&lt;/code&gt; annotation.</source>
          <target state="translated">默认情况下，该事件处于启用状态。可以通过编程方式或使用配置文件将启用的设置设置为 &lt;code&gt;true&lt;/code&gt; 或 &lt;code&gt;false&lt;/code&gt; 来启用或禁用该事件。也可以通过使用 &lt;code&gt;@Enabled(false)&lt;/code&gt; 批注对事件进行批注来禁用该事件。</target>
        </trans-unit>
        <trans-unit id="3ffd3523cb33739e93aee7676fc8f431e7d5fd9e" translate="yes" xml:space="preserve">
          <source>By default, the first item added to the choice menu becomes the selected item, until a different selection is made by the user by calling one of the &lt;code&gt;select&lt;/code&gt; methods.</source>
          <target state="translated">默认情况下，添加到选择菜单的第一个项目成为所选项目，直到用户通过调用其中一个 &lt;code&gt;select&lt;/code&gt; 方法做出不同选择为止。</target>
        </trans-unit>
        <trans-unit id="8c18c3fa98f8f171e7b2371c17c5ad19813a095b" translate="yes" xml:space="preserve">
          <source>By default, the following types of content are known:</source>
          <target state="translated">默认情况下,已知以下类型的内容。</target>
        </trans-unit>
        <trans-unit id="61e56b533d51dce25cef44303d4c38e0f7fd2a96" translate="yes" xml:space="preserve">
          <source>By default, the method is invoked using dynamic lookup as documented in section 15.12.4.4 of</source>
          <target state="translated">默认情况下,该方法使用动态查找来调用,如第15.12.4.4节所述。</target>
        </trans-unit>
        <trans-unit id="a4360a09560e0c1b8f6ff52d461d84a7389b41f7" translate="yes" xml:space="preserve">
          <source>By default, the name is the same as the recording ID.</source>
          <target state="translated">默认情况下,名称与记录ID相同。</target>
        </trans-unit>
        <trans-unit id="59dbc1b830381e6069428b989946dc8b88e861e8" translate="yes" xml:space="preserve">
          <source>By default, the notification dispatch model is synchronous. That is, when a thread calls sendNotification, the &lt;code&gt;NotificationListener.handleNotification&lt;/code&gt; method of each listener is called within that thread. You can override this default by overriding &lt;code&gt;handleNotification&lt;/code&gt; in a subclass, or by passing an Executor to the constructor.</source>
          <target state="translated">默认情况下，通知调度模型是同步的。也就是说，当线程调用sendNotification时，将在该线程内调用每个侦听器的 &lt;code&gt;NotificationListener.handleNotification&lt;/code&gt; 方法。您可以通过覆盖子类中的 &lt;code&gt;handleNotification&lt;/code&gt; 或将Executor传递给构造函数来覆盖此默认值。</target>
        </trans-unit>
        <trans-unit id="b3d90f9725e8d3c6f514b963c9c9e67c904f0a37" translate="yes" xml:space="preserve">
          <source>By default, the object is</source>
          <target state="translated">默认情况下,该对象是</target>
        </trans-unit>
        <trans-unit id="81a893fd2e730751fac18b1115ff6ce072a204a3" translate="yes" xml:space="preserve">
          <source>By default, the packer does not change the order of JAR elements. Also, the modification time and deflation hint of each JAR element is passed unchanged. (Any other ZIP-archive information, such as extra attributes giving Unix file permissions, are lost.)</source>
          <target state="translated">默认情况下,打包器不会改变JAR元素的顺序。同时,每个JAR元素的修改时间和放气提示也不会改变。(任何其他的ZIP-archive信息,比如给Unix文件权限的额外属性,都会丢失。)</target>
        </trans-unit>
        <trans-unit id="e21f048ae6986e907c4aa76d8adf4e77ba56e38c" translate="yes" xml:space="preserve">
          <source>By default, the reference implementations of the &lt;code&gt;RowSet&lt;/code&gt; synchronization providers are always available to the Java platform. If no other pluggable synchronization providers have been correctly registered, the &lt;code&gt;SyncFactory&lt;/code&gt; will automatically generate an instance of the default &lt;code&gt;SyncProvider&lt;/code&gt; reference implementation. Thus, in the preceding code fragment, if no implementation named &lt;code&gt;com.fred.providers.HighAvailabilitySyncProvider&lt;/code&gt; has been registered with the &lt;code&gt;SyncFactory&lt;/code&gt; instance,</source>
          <target state="translated">默认情况下，Java平台始终可以使用 &lt;code&gt;RowSet&lt;/code&gt; 同步提供程序的参考实现。如果没有正确注册其他可插拔同步提供程序，则 &lt;code&gt;SyncFactory&lt;/code&gt; 将自动生成默认 &lt;code&gt;SyncProvider&lt;/code&gt; 参考实现的实例。因此，在前面的代码片段中，如果尚未向 &lt;code&gt;SyncFactory&lt;/code&gt; 实例注册名为 &lt;code&gt;com.fred.providers.HighAvailabilitySyncProvider&lt;/code&gt; 的实现，</target>
        </trans-unit>
        <trans-unit id="c0d0e46f3bbc29b23f3b29267fe3a951e1240927" translate="yes" xml:space="preserve">
          <source>By default, the regular expressions &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; ignore line terminators and only match at the beginning and the end, respectively, of the entire input sequence. If &lt;a href=&quot;#MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode is activated then &lt;code&gt;^&lt;/code&gt; matches at the beginning of input and after any line terminator except at the end of input. When in &lt;a href=&quot;#MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode &lt;code&gt;$&lt;/code&gt; matches just before a line terminator or the end of the input sequence.</source>
          <target state="translated">默认情况下，正则表达式 &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 忽略行终止符，并且仅分别在整个输入序列的开头和结尾处匹配。如果激活了&lt;a href=&quot;#MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;模式，则 &lt;code&gt;^&lt;/code&gt; 在输入的开头和任何行终止符之后匹配，除了输入的末尾。在&lt;a href=&quot;#MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;模式下， &lt;code&gt;$&lt;/code&gt; 匹配行终止符或输入序列末尾。</target>
        </trans-unit>
        <trans-unit id="e8b8d9caa0eb4682131005710da0d0cd554ca431" translate="yes" xml:space="preserve">
          <source>By default, the regular expressions &lt;code&gt;^&lt;/code&gt; and &lt;code&gt;$&lt;/code&gt; ignore line terminators and only match at the beginning and the end, respectively, of the entire input sequence. If &lt;a href=&quot;pattern#MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode is activated then &lt;code&gt;^&lt;/code&gt; matches at the beginning of input and after any line terminator except at the end of input. When in &lt;a href=&quot;pattern#MULTILINE&quot;&gt;&lt;code&gt;MULTILINE&lt;/code&gt;&lt;/a&gt; mode &lt;code&gt;$&lt;/code&gt; matches just before a line terminator or the end of the input sequence.</source>
          <target state="translated">默认情况下，正则表达式 &lt;code&gt;^&lt;/code&gt; 和 &lt;code&gt;$&lt;/code&gt; 忽略行终止符，并且仅分别在整个输入序列的开头和结尾匹配。如果激活了&lt;a href=&quot;pattern#MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;模式，则 &lt;code&gt;^&lt;/code&gt; 在输入的开头和任何行终止符之后匹配，除了输入的末尾。在&lt;a href=&quot;pattern#MULTILINE&quot;&gt; &lt;code&gt;MULTILINE&lt;/code&gt; &lt;/a&gt;模式下， &lt;code&gt;$&lt;/code&gt; 匹配行终止符或输入序列末尾。</target>
        </trans-unit>
        <trans-unit id="271e2c960aa30fee2d11e703de9a1a311eccc2b5" translate="yes" xml:space="preserve">
          <source>By default, the same &lt;code&gt;RecordedEvent&lt;/code&gt; object can be used to represent two or more distinct events. That object can be delivered multiple times to the same action as well as to other actions. To use an event object after the action is completed, the &lt;a href=&quot;#setReuse(boolean)&quot;&gt;&lt;code&gt;setReuse(boolean)&lt;/code&gt;&lt;/a&gt; method should be set to &lt;code&gt;false&lt;/code&gt; so a new object is allocated for each event.</source>
          <target state="translated">默认情况下，相同的 &lt;code&gt;RecordedEvent&lt;/code&gt; 对象可用于表示两个或多个不同的事件。该对象可以多次传递给同一动作以及其他动作。若要在操作完成后使用事件对象，&lt;a href=&quot;#setReuse(boolean)&quot;&gt; &lt;code&gt;setReuse(boolean)&lt;/code&gt; &lt;/a&gt;方法设置为 &lt;code&gt;false&lt;/code&gt; ,以便为每个事件分配一个新对象。</target>
        </trans-unit>
        <trans-unit id="196f0008550dd18d2cfb3b6d9538596a08fcbb27" translate="yes" xml:space="preserve">
          <source>By default, the stream starts with the first event in the file.</source>
          <target state="translated">默认情况下,流从文件中的第一个事件开始。</target>
        </trans-unit>
        <trans-unit id="5554b4a161c57a6ae83f9ae3f4282f2d36ce53f5" translate="yes" xml:space="preserve">
          <source>By default, the stream starts with the next event flushed by Flight Recorder.</source>
          <target state="translated">默认情况下,流从飞行记录仪刷新的下一个事件开始。</target>
        </trans-unit>
        <trans-unit id="aacc2d0ec62a261eb5e65054ed7f2f13aa7b39ea" translate="yes" xml:space="preserve">
          <source>By default, the unit is nanoseconds.</source>
          <target state="translated">默认情况下,单位是纳秒。</target>
        </trans-unit>
        <trans-unit id="5e45e565e014b2bc7dd1de77293476089c389959" translate="yes" xml:space="preserve">
          <source>By default, the value of this property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认情况下，此属性的值为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="969c949ca22a9a75f10ee2dc67b0dc1dfadf07d1" translate="yes" xml:space="preserve">
          <source>By default, the value returned is one of those passed to the constructor and/or manipulated using the add/replace/remove methods. A subclass may override this to retrieve the value dynamically from the directory.</source>
          <target state="translated">默认情况下,返回的值是传递给构造函数和/或使用add/replace/remove方法操作的值之一。一个子类可以重写这个方法来从目录中动态地获取值。</target>
        </trans-unit>
        <trans-unit id="b064beb56831362f5899bf74e0e30464f6351f85" translate="yes" xml:space="preserve">
          <source>By default, the values returned are those passed to the constructor and/or manipulated using the add/replace/remove methods. A subclass may override this to retrieve the values dynamically from the directory.</source>
          <target state="translated">默认情况下,返回的值是传递给构造函数和/或使用add/replace/remove方法操作的值。一个子类可以重写这一点,从目录中动态地获取值。</target>
        </trans-unit>
        <trans-unit id="45a41dd1f337e38266c098ed7711bbc93ae83eda" translate="yes" xml:space="preserve">
          <source>By default, the window has &lt;code&gt;autoRequestFocus&lt;/code&gt; value of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">默认情况下，该窗口的 &lt;code&gt;autoRequestFocus&lt;/code&gt; 值为 &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bcf8ae0bdac444a576744da3029f02fdd6d59db2" translate="yes" xml:space="preserve">
          <source>By default, this method attempts to move the file to the target file, failing if the target file exists except if the source and target are the &lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file, in which case this method has no effect. If the file is a symbolic link then the symbolic link itself, not the target of the link, is moved. This method may be invoked to move an empty directory. In some implementations a directory has entries for special files or links that are created when the directory is created. In such implementations a directory is considered empty when only the special entries exist. When invoked to move a directory that is not empty then the directory is moved if it does not require moving the entries in the directory. For example, renaming a directory on the same &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; will usually not require moving the entries in the directory. When moving a directory requires that its entries be moved then this method fails (by throwing an &lt;code&gt;
 IOException&lt;/code&gt;). To move a</source>
          <target state="translated">默认情况下，此方法尝试将文件移动到目标文件，如果目标文件存在，则失败，除非源文件和目标文件是&lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt;文件，在这种情况下，此方法无效。如果文件是符号链接，则将移动符号链接本身而不是链接的目标。可以调用此方法来移动空目录。在某些实现中，目录具有创建目录时创建的特殊文件或链接的条目。在这样的实现中，当仅存在特殊条目时，目录被认为是空的。调用此命令移动不为空的目录时，如果不需要移动目录中的条目，则移动该目录。例如，重命名同一&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;上的目录通常不需要移动目录中的条目。当移动目录要求移动其条目时，此方法将失败（通过抛出 &lt;code&gt; IOException&lt;/code&gt; ）。移动一个</target>
        </trans-unit>
        <trans-unit id="a3fe532732fa319b66dbf2a5f32414b371c52d9c" translate="yes" xml:space="preserve">
          <source>By default, this method attempts to move the file to the target file, failing if the target file exists except if the source and target are the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file, in which case this method has no effect. If the file is a symbolic link then the symbolic link itself, not the target of the link, is moved. This method may be invoked to move an empty directory. In some implementations a directory has entries for special files or links that are created when the directory is created. In such implementations a directory is considered empty when only the special entries exist. When invoked to move a directory that is not empty then the directory is moved if it does not require moving the entries in the directory. For example, renaming a directory on the same &lt;a href=&quot;filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt; will usually not require moving the entries in the directory. When moving a directory requires that its entries be moved then this method fails (by throwing an &lt;code&gt;IOException&lt;/code&gt;). To move a</source>
          <target state="translated">默认情况下，此方法尝试将文件移动到目标文件，如果目标文件存在，则失败，除非源文件和目标文件是&lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt;文件，否则此方法无效。如果文件是符号链接，则将移动符号链接本身而不是链接目标。可以调用此方法来移动空目录。在某些实现中，目录具有创建目录时创建的特殊文件或链接的条目。在这样的实现中，当仅存在特殊条目时，目录被认为是空的。调用该命令移动不为空的目录时，如果不需要移动目录中的条目，则将移动该目录。例如，重命名同一&lt;a href=&quot;filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt;上的目录通常不需要移动目录中的条目。当移动目录要求移动其条目时，此方法将失败（通过抛出 &lt;code&gt;IOException&lt;/code&gt; ）。移动一个</target>
        </trans-unit>
        <trans-unit id="fcf7f057323c895d100758b111ffc96f29bafdb4" translate="yes" xml:space="preserve">
          <source>By default, this method calls &lt;a href=&quot;#getLogger(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;this.getLogger(name, module)&lt;/code&gt;&lt;/a&gt; to obtain a logger, then wraps that logger in a &lt;a href=&quot;system.logger&quot;&gt;&lt;code&gt;System.Logger&lt;/code&gt;&lt;/a&gt; instance where all methods that do not take a &lt;a href=&quot;../util/resourcebundle&quot;&gt;&lt;code&gt;ResourceBundle&lt;/code&gt;&lt;/a&gt; as parameter are redirected to one which does - passing the given &lt;code&gt;bundle&lt;/code&gt; for localization. So for instance, a call to &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.lang.Object)&quot;&gt;&lt;code&gt;Logger.log(Level.INFO, msg)&lt;/code&gt;&lt;/a&gt; will end up as a call to &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;Logger.log(Level.INFO, bundle, msg, (Object[])null)&lt;/code&gt;&lt;/a&gt; on the wrapped logger instance. Note however that by default, string messages returned by &lt;a href=&quot;../util/function/supplier&quot;&gt;&lt;code&gt;Supplier&amp;lt;String&amp;gt;&lt;/code&gt;&lt;/a&gt; will not be localized, as it is assumed that such strings are messages which are already constructed, rather than keys in a resource bundle.</source>
          <target state="translated">默认情况下，此方法调用&lt;a href=&quot;#getLogger(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;this.getLogger(name, module)&lt;/code&gt; &lt;/a&gt;以获取记录器，然后将该记录器包装到&lt;a href=&quot;system.logger&quot;&gt; &lt;code&gt;System.Logger&lt;/code&gt; &lt;/a&gt;实例中，在该实例中，所有不将&lt;a href=&quot;../util/resourcebundle&quot;&gt; &lt;code&gt;ResourceBundle&lt;/code&gt; &lt;/a&gt;作为参数的方法都重定向到具有此功能的方法-传递给定值用于本地化的 &lt;code&gt;bundle&lt;/code&gt; 。因此，例如，对包装的记录器实例上&lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.lang.Object)&quot;&gt; &lt;code&gt;Logger.log(Level.INFO, msg)&lt;/code&gt; &lt;/a&gt;的调用最终将作为对&lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;Logger.log(Level.INFO, bundle, msg, (Object[])null)&lt;/code&gt; &lt;/a&gt;的调用而结束。但是请注意，默认情况下，&lt;a href=&quot;../util/function/supplier&quot;&gt; &lt;code&gt;Supplier&amp;lt;String&amp;gt;&lt;/code&gt; &lt;/a&gt;返回的字符串消息将不进行本地化，因为假定此类字符串是已构造的消息，而不是资源束中的键。</target>
        </trans-unit>
        <trans-unit id="463c10630ca3d799cc87c8be9afd93102464ffe1" translate="yes" xml:space="preserve">
          <source>By default, this method calls &lt;a href=&quot;#getLogger(java.lang.String,java.lang.Module)&quot;&gt;&lt;code&gt;this.getLogger(name, module)&lt;/code&gt;&lt;/a&gt; to obtain a logger, then wraps that logger in a &lt;a href=&quot;system.logger&quot;&gt;&lt;code&gt;System.Logger&lt;/code&gt;&lt;/a&gt; instance where all methods that do not take a &lt;a href=&quot;../util/resourcebundle&quot;&gt;&lt;code&gt;ResourceBundle&lt;/code&gt;&lt;/a&gt; as parameter are redirected to one which does - passing the given &lt;code&gt;bundle&lt;/code&gt; for localization. So for instance, a call to &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.lang.String)&quot;&gt;&lt;code&gt;Logger.log(Level.INFO, msg)&lt;/code&gt;&lt;/a&gt; will end up as a call to &lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt;&lt;code&gt;Logger.log(Level.INFO, bundle, msg, (Object[])null)&lt;/code&gt;&lt;/a&gt; on the wrapped logger instance. Note however that by default, string messages returned by &lt;a href=&quot;../util/function/supplier&quot;&gt;&lt;code&gt;Supplier&amp;lt;String&amp;gt;&lt;/code&gt;&lt;/a&gt; will not be localized, as it is assumed that such strings are messages which are already constructed, rather than keys in a resource bundle.</source>
          <target state="translated">默认情况下，此方法调用&lt;a href=&quot;#getLogger(java.lang.String,java.lang.Module)&quot;&gt; &lt;code&gt;this.getLogger(name, module)&lt;/code&gt; &lt;/a&gt;以获取记录器，然后将该记录器包装到&lt;a href=&quot;system.logger&quot;&gt; &lt;code&gt;System.Logger&lt;/code&gt; &lt;/a&gt;实例中，在该实例中，所有不将&lt;a href=&quot;../util/resourcebundle&quot;&gt; &lt;code&gt;ResourceBundle&lt;/code&gt; &lt;/a&gt;作为参数的方法都重定向到具有此功能的方法-传递给定值用于本地化的 &lt;code&gt;bundle&lt;/code&gt; 。因此，例如，对包装的记录器实例上&lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.lang.String)&quot;&gt; &lt;code&gt;Logger.log(Level.INFO, msg)&lt;/code&gt; &lt;/a&gt;的调用最终将作为对&lt;a href=&quot;system.logger#log(java.lang.System.Logger.Level,java.util.ResourceBundle,java.lang.String,java.lang.Object...)&quot;&gt; &lt;code&gt;Logger.log(Level.INFO, bundle, msg, (Object[])null)&lt;/code&gt; &lt;/a&gt;的调用而结束。但是请注意，默认情况下，&lt;a href=&quot;../util/function/supplier&quot;&gt; &lt;code&gt;Supplier&amp;lt;String&amp;gt;&lt;/code&gt; &lt;/a&gt;返回的字符串消息将不进行本地化，因为假定此类字符串是已构造的消息，而不是资源束中的键。</target>
        </trans-unit>
        <trans-unit id="a392b65b45ef25753acc62e03de22a05bd840a9a" translate="yes" xml:space="preserve">
          <source>By default, this method returns &lt;code&gt;Event.CTRL_MASK&lt;/code&gt;. Toolkit implementations should override this method if the &lt;b&gt;Control&lt;/b&gt; key isn't the correct key for accelerators.</source>
          <target state="translated">默认情况下，此方法返回 &lt;code&gt;Event.CTRL_MASK&lt;/code&gt; 。如果&lt;b&gt;Control&lt;/b&gt;键不是加速器的正确键，则工具箱实现应重写此方法。</target>
        </trans-unit>
        <trans-unit id="0192e953197d5e1fab701b902ea51266a4ba7e27" translate="yes" xml:space="preserve">
          <source>By default, this method returns &lt;code&gt;InputEvent.CTRL_DOWN_MASK&lt;/code&gt;. Toolkit implementations should override this method if the &lt;b&gt;Control&lt;/b&gt; key isn't the correct key for accelerators.</source>
          <target state="translated">默认情况下，此方法返回 &lt;code&gt;InputEvent.CTRL_DOWN_MASK&lt;/code&gt; 。如果&lt;b&gt;Control&lt;/b&gt;键不是加速器的正确键，则工具箱实现应重写此方法。</target>
        </trans-unit>
        <trans-unit id="c410259de22ac2b29f5639bf12152d20b70225c1" translate="yes" xml:space="preserve">
          <source>By default, this method returns &lt;code&gt;null&lt;/code&gt; if the wrapped implementation is not &lt;var&gt;this&lt;/var&gt;. Indeed, if the wrapped implementation is not this object itself, it will not be possible to recreate a wrapped implementation by calling the implementation constructors through &lt;code&gt;MBeanServer.createMBean(...)&lt;/code&gt;.</source>
          <target state="translated">默认情况下，如果包装的实现不是 &lt;var&gt;this&lt;/var&gt; ，则此方法返回 &lt;code&gt;null&lt;/code&gt; 。确实，如果包装的实现本身不是此对象本身，则将无法通过 &lt;code&gt;MBeanServer.createMBean(...)&lt;/code&gt; 调用实现构造函数来重新创建包装的实现。</target>
        </trans-unit>
        <trans-unit id="f0752364702b1c2f5b9430bf21b89be5786307cb" translate="yes" xml:space="preserve">
          <source>By default, this property is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">默认情况下，此属性为 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3b224cf7206c2172a06bf23936efdbbafe645f2" translate="yes" xml:space="preserve">
          <source>By default, when a security manager is installed, in order to protect against DNS spoofing attacks, the result of positive host name resolutions are cached forever. When a security manager is not installed, the default behavior is to cache entries for a finite (implementation dependent) period of time. The result of unsuccessful host name resolution is cached for a very short period of time (10 seconds) to improve performance.</source>
          <target state="translated">默认情况下,当安装了安全管理器时,为了防止DNS欺骗攻击,正主机名解析的结果会被永远缓存。当没有安装安全管理器时,默认的行为是在有限的时间内(取决于实现)缓存条目。不成功的主机名解析结果会被缓存很短的时间(10秒)以提高性能。</target>
        </trans-unit>
        <trans-unit id="b8e27dab4e5a726a826d4aba7196937857697700" translate="yes" xml:space="preserve">
          <source>By default, when the transfer is accepted, the chosen drop action is that picked by the user via their drag gesture. The developer can override this and choose a different action, from the supported source actions, by calling &lt;code&gt;setDropAction&lt;/code&gt; on the &lt;code&gt;TransferSupport&lt;/code&gt;.</source>
          <target state="translated">默认情况下，当接受转移时，所选的放置动作是用户通过其拖动手势选择的放置动作。开发人员可以重写此选择不同的动作，从支持的源动作，通过调用 &lt;code&gt;setDropAction&lt;/code&gt; 在 &lt;code&gt;TransferSupport&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76198e6027dbde4f564cb09bcfc2e32a06a974f3" translate="yes" xml:space="preserve">
          <source>By defining simple arithmetic operations on &lt;code&gt;Spring&lt;/code&gt;s, the behavior of a collection of &lt;code&gt;Spring&lt;/code&gt;s can be reduced to that of an ordinary (non-compound) &lt;code&gt;Spring&lt;/code&gt;. We define the &quot;+&quot;, &quot;-&quot;, &lt;em&gt;max&lt;/em&gt;, and &lt;em&gt;min&lt;/em&gt; operators on &lt;code&gt;Spring&lt;/code&gt;s so that, in each case, the result is a &lt;code&gt;Spring&lt;/code&gt; whose characteristics bear a useful mathematical relationship to its constituent springs.</source>
          <target state="translated">通过在 &lt;code&gt;Spring&lt;/code&gt; 上定义简单的算术运算，可以将 &lt;code&gt;Spring&lt;/code&gt; 集合的行为简化为普通（非复合） &lt;code&gt;Spring&lt;/code&gt; 的行为。我们在 &lt;code&gt;Spring&lt;/code&gt; 上定义&amp;ldquo; +&amp;rdquo;，&amp;ldquo;-&amp;rdquo;，&lt;em&gt;max&lt;/em&gt;和&lt;em&gt;min&lt;/em&gt;运算符，这样，在每种情况下，结果都是一个 &lt;code&gt;Spring&lt;/code&gt; ,其特性与其组成的Spring具有有效的数学关系。</target>
        </trans-unit>
        <trans-unit id="fb71b572b27f526299d9dd2b567ec72b03d87142" translate="yes" xml:space="preserve">
          <source>By design, as you parse through a string with different formats, you can use the same &lt;code&gt;ParsePosition&lt;/code&gt;, since the index parameter records the current position.</source>
          <target state="translated">按照设计，当您解析具有不同格式的字符串时，可以使用相同的 &lt;code&gt;ParsePosition&lt;/code&gt; ，因为index参数记录了当前位置。</target>
        </trans-unit>
        <trans-unit id="1d691c8b37aef7e963e6a00cea0dc3c23a425203" translate="yes" xml:space="preserve">
          <source>By executing a synchronized instance method of that object.</source>
          <target state="translated">通过执行该对象的同步实例方法。</target>
        </trans-unit>
        <trans-unit id="e35cf134af9b728d47d4c7fc6d705b81a385f8a6" translate="yes" xml:space="preserve">
          <source>By executing an &lt;code&gt;ldc&lt;/code&gt; instruction on a &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; constant. (See the Java Virtual Machine Specification, sections 4.4.8 and 5.4.3.)</source>
          <target state="translated">通过在 &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 常量上执行 &lt;code&gt;ldc&lt;/code&gt; 指令。（请参阅《 Java虚拟机规范》的第4.4.8和5.4.3节。）</target>
        </trans-unit>
        <trans-unit id="4086e61a2c7860f34e89e17ef65557daa8d7a5e7" translate="yes" xml:space="preserve">
          <source>By executing an &lt;code&gt;ldc&lt;/code&gt; instruction on a &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; constant. (See the Java Virtual Machine Specification, sections &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.4.8&quot;&gt;4.4.8&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3&quot;&gt;5.4.3&lt;/a&gt;.)</source>
          <target state="translated">通过在 &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 常量上执行 &lt;code&gt;ldc&lt;/code&gt; 指令。（请参阅《 Java虚拟机规范》的第&lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.4.8&quot;&gt;4.4.8&lt;/a&gt;和&lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3&quot;&gt;5.4.3&lt;/a&gt;节。）</target>
        </trans-unit>
        <trans-unit id="d6a5d0eb1c16a8c34230243b231caff6f745efc2" translate="yes" xml:space="preserve">
          <source>By executing the body of a &lt;code&gt;synchronized&lt;/code&gt; statement that synchronizes on the object.</source>
          <target state="translated">通过执行在对象上 &lt;code&gt;synchronized&lt;/code&gt; 语句的主体。</target>
        </trans-unit>
        <trans-unit id="21fcc4ca4349ee1e37e4548e4c78a96b9542064b" translate="yes" xml:space="preserve">
          <source>By implementing a &lt;code&gt;Predicate&lt;/code&gt; (see example in &lt;a href=&quot;predicate&quot;&gt;Predicate&lt;/a&gt; class JavaDoc), a &lt;code&gt;FilteredRowSet&lt;/code&gt; could then be used as described below.</source>
          <target state="translated">通过实现 &lt;code&gt;Predicate&lt;/code&gt; （请参见&lt;a href=&quot;predicate&quot;&gt;谓词&lt;/a&gt;类JavaDoc中的示例），然后可以按如下所述使用 &lt;code&gt;FilteredRowSet&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b00311f5d926a07f9923a7ba10bef0aa970fa53a" translate="yes" xml:space="preserve">
          <source>By implementing the &lt;code&gt;RowSetInternal&lt;/code&gt; interface, a &lt;code&gt;RowSet&lt;/code&gt; object gets access to its internal state and is able to call on its reader and writer. A rowset keeps track of the values in its current rows and of the values that immediately preceded the current ones, referred to as the</source>
          <target state="translated">通过实现 &lt;code&gt;RowSetInternal&lt;/code&gt; 接口， &lt;code&gt;RowSet&lt;/code&gt; 对象可以访问其内部状态，并能够调用其读取器和写入器。行集跟踪其当前行中的值以及当前行之前的值，称为</target>
        </trans-unit>
        <trans-unit id="0f02e086421cadff26f1d15dcb2f7116d103a0f7" translate="yes" xml:space="preserve">
          <source>By invoking the blocked thread's &lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt;&lt;code&gt;interrupt&lt;/code&gt;&lt;/a&gt; method, in which case its interrupt status will be set and the selector's &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method will be invoked.</source>
          <target state="translated">通过调用被阻塞线程的&lt;a href=&quot;../../lang/thread#interrupt()&quot;&gt; &lt;code&gt;interrupt&lt;/code&gt; &lt;/a&gt;方法，在这种情况下，将设置其中断状态并调用选择器的&lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="fc34128d07648c4393197cbdc1641aaad5bee9a6" translate="yes" xml:space="preserve">
          <source>By invoking the blocked thread's &lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt;&lt;code&gt;interrupt&lt;/code&gt;&lt;/a&gt; method, in which case its interrupt status will be set and the selector's &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method will be invoked.</source>
          <target state="translated">通过调用被阻塞线程的&lt;a href=&quot;../../lang/thread#interrupt--&quot;&gt; &lt;code&gt;interrupt&lt;/code&gt; &lt;/a&gt;方法，在这种情况下，将设置其中断状态，并调用选择器的&lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="a0959c705201d13eb4a5c5bdf86c7bc890dcd779" translate="yes" xml:space="preserve">
          <source>By invoking the selector's &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method, or</source>
          <target state="translated">通过调用选择器的&lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法，或者</target>
        </trans-unit>
        <trans-unit id="011c48c54646ff1af3377c596a6d6d411356b902" translate="yes" xml:space="preserve">
          <source>By invoking the selector's &lt;a href=&quot;#wakeup()&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method,</source>
          <target state="translated">通过调用选择器的&lt;a href=&quot;#wakeup()&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;方法，</target>
        </trans-unit>
        <trans-unit id="e0245c0e7a17f3ba7e9f2fa0481d0585e3fb19ea" translate="yes" xml:space="preserve">
          <source>By invoking the selector's &lt;a href=&quot;selector#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; method, or</source>
          <target state="translated">通过调用选择器的&lt;a href=&quot;selector#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt;方法，或者</target>
        </trans-unit>
        <trans-unit id="2dd213e64571508b791985f6b52b76b913db4e5f" translate="yes" xml:space="preserve">
          <source>By invoking the selector's &lt;a href=&quot;selector#wakeup--&quot;&gt;&lt;code&gt;wakeup&lt;/code&gt;&lt;/a&gt; method,</source>
          <target state="translated">通过调用选择器的&lt;a href=&quot;selector#wakeup--&quot;&gt; &lt;code&gt;wakeup&lt;/code&gt; &lt;/a&gt;方法，</target>
        </trans-unit>
        <trans-unit id="8c20a14a7d018e2a40e1043a0c6d8b7509b1e291" translate="yes" xml:space="preserve">
          <source>By making a DynamicMBean out of an MBean, this class makes it possible to select any interface implemented by the MBean as its management interface, provided that it complies with JMX patterns (i.e., attributes defined by getter/setter etc...).</source>
          <target state="translated">通过将MBean制作成DynamicMBean,这个类可以选择MBean实现的任何接口作为它的管理接口,只要它符合JMX模式(即由getter/setter等定义的属性...)。</target>
        </trans-unit>
        <trans-unit id="3bb515370fbdfbc5bea9821d5c16c7101349bd9e" translate="yes" xml:space="preserve">
          <source>By positioning the cursor after the last row for each page, as is done in the following code fragment, the method &lt;code&gt;previous&lt;/code&gt; navigates from the last row to the first row in each page. The code could also have left the cursor before the first row on each page and then used the method &lt;code&gt;next&lt;/code&gt; in a &lt;code&gt;while&lt;/code&gt; loop to navigate each page from the first row to the last row.</source>
          <target state="translated">到了最后一排的每一页后定位光标，如在下面的代码片段完成，该方法 &lt;code&gt;previous&lt;/code&gt; 从最后一排导航到每一页的第一行。该代码还可以将光标留在每页第一行之前，然后在 &lt;code&gt;while&lt;/code&gt; 循环中使用 &lt;code&gt;next&lt;/code&gt; 一个方法将每一页从第一行导航到最后一行。</target>
        </trans-unit>
        <trans-unit id="548a27d7645d9294f265dee83d232a9c9e330c40" translate="yes" xml:space="preserve">
          <source>By setting the default locale with this method, all of the default locales for each Category are also set to the specified default locale.</source>
          <target state="translated">通过此方法设置默认locale,每个Category的所有默认locale也被设置为指定的默认locale。</target>
        </trans-unit>
        <trans-unit id="b50a26dce7be016a883759a26ffad42b4a65a577" translate="yes" xml:space="preserve">
          <source>By setting the default uncaught exception handler, an application can change the way in which uncaught exceptions are handled (such as logging to a specific device, or file) for those threads that would already accept whatever &quot;default&quot; behavior the system provided.</source>
          <target state="translated">通过设置默认的未捕获异常处理程序,应用程序可以为那些已经接受系统提供的任何 &quot;默认 &quot;行为的线程改变处理未捕获异常的方式(例如记录到特定设备或文件)。</target>
        </trans-unit>
        <trans-unit id="6b5d986f7792f97937149c970b4f68e0342363f7" translate="yes" xml:space="preserve">
          <source>By the intersection of the set of data types provided by the &lt;code&gt;DragSource&lt;/code&gt; and the set of data types comprehensible by the &lt;code&gt;DropTarget&lt;/code&gt;.</source>
          <target state="translated">通过 &lt;code&gt;DragSource&lt;/code&gt; 提供的数据类型集和 &lt;code&gt;DropTarget&lt;/code&gt; 可理解的数据类型集的交集。</target>
        </trans-unit>
        <trans-unit id="bed2db3b0785a6fd3302f9c917e7055489a8e9df" translate="yes" xml:space="preserve">
          <source>By the transfer &quot;operation&quot; selected by the user, and supported by both the &lt;code&gt;DragSource&lt;/code&gt; and &lt;code&gt;DropTarget&lt;/code&gt;: Copy, Move or Reference(link).</source>
          <target state="translated">通过用户选择的并由 &lt;code&gt;DragSource&lt;/code&gt; 和 &lt;code&gt;DropTarget&lt;/code&gt; 支持的传输&amp;ldquo;操作&amp;rdquo; ：复制，移动或引用（链接）。</target>
        </trans-unit>
        <trans-unit id="a8641bc3f72be6688585df77c15c8e690037958c" translate="yes" xml:space="preserve">
          <source>By treating the creation of &lt;code&gt;ImageInputStream&lt;/code&gt;s as a pluggable service, it becomes possible to handle future input sources without changing the API. Also, high-performance implementations of &lt;code&gt;ImageInputStream&lt;/code&gt; (for example, native implementations for a particular platform) can be installed and used transparently by applications.</source>
          <target state="translated">通过将 &lt;code&gt;ImageInputStream&lt;/code&gt; 的创建视为可插入服务，可以在不更改API的情况下处理将来的输入源。此外， &lt;code&gt;ImageInputStream&lt;/code&gt; 的高性能实现（例如，特定平台的本机实现）可以由应用程序透明安装和使用。</target>
        </trans-unit>
        <trans-unit id="c69f227da0d5abc2569d6a2b819e2e50dee2fc92" translate="yes" xml:space="preserve">
          <source>By treating the creation of &lt;code&gt;ImageOutputStream&lt;/code&gt;s as a pluggable service, it becomes possible to handle future output destinations without changing the API. Also, high-performance implementations of &lt;code&gt;ImageOutputStream&lt;/code&gt; (for example, native implementations for a particular platform) can be installed and used transparently by applications.</source>
          <target state="translated">通过将 &lt;code&gt;ImageOutputStream&lt;/code&gt; 的创建视为可插入服务，可以在不更改API的情况下处理将来的输出目标。此外， &lt;code&gt;ImageOutputStream&lt;/code&gt; 的高性能实现（例如，特定平台的本机实现）可以由应用程序透明安装和使用。</target>
        </trans-unit>
        <trans-unit id="7803ee252527503b67d1eeb0deb252622746cebd" translate="yes" xml:space="preserve">
          <source>Byte</source>
          <target state="translated">Byte</target>
        </trans-unit>
        <trans-unit id="b367bd0c58f9461bc3ca04ae9279ca9fc390edc8" translate="yes" xml:space="preserve">
          <source>Byte 1</source>
          <target state="translated">字节1</target>
        </trans-unit>
        <trans-unit id="5ef7e7d2f35b16349756ec159576d7454417ca95" translate="yes" xml:space="preserve">
          <source>Byte 2</source>
          <target state="translated">字节2</target>
        </trans-unit>
        <trans-unit id="562246479977a1f12a4320ef6dcef7d3bb1965dd" translate="yes" xml:space="preserve">
          <source>Byte 3</source>
          <target state="translated">字节3</target>
        </trans-unit>
        <trans-unit id="780e0ad51503653ae7fa9660d8b5b535067ef512" translate="yes" xml:space="preserve">
          <source>Byte array (&lt;code&gt;byte[]&lt;/code&gt;) -- The print data consists of the bytes in the array. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</source>
          <target state="translated">字节数组（ &lt;code&gt;byte[]&lt;/code&gt; ）-打印数据由数组中的字节组成。字节编码为由docflavor的MIME类型指定的字符集。如果MIME类型未指定字符集，则默认字符集为US-ASCII。</target>
        </trans-unit>
        <trans-unit id="eca5dbe11f9553432ade0b5cfe135f84627aeec7" translate="yes" xml:space="preserve">
          <source>Byte buffers are distinguished in that they can be used as the sources and targets of I/O operations. They also support several features not found in the other buffer classes:</source>
          <target state="translated">字节缓冲器的区别在于它们可以作为I/O操作的源和目标。它们还支持其他缓冲器类所没有的一些功能。</target>
        </trans-unit>
        <trans-unit id="a07e5d1997873278725f110b095fccf13413f4e7" translate="yes" xml:space="preserve">
          <source>Byte buffers can be created either by &lt;a href=&quot;#allocate(int)&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, or by &lt;a href=&quot;#wrap(byte%5B%5D)&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing byte array into a buffer.</source>
          <target state="translated">字节缓冲区可以通过&lt;a href=&quot;#allocate(int)&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;（为缓冲区的内容分配空间）来创建，也可以通过&lt;i&gt;将&lt;/i&gt;现有的字节数组&lt;a href=&quot;#wrap(byte%5B%5D)&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;到缓冲区中来创建。</target>
        </trans-unit>
        <trans-unit id="e5e30ac7c4b3daf329b4b0acb4e13e1431c8cae7" translate="yes" xml:space="preserve">
          <source>Byte buffers can be created either by &lt;a href=&quot;bytebuffer#allocate-int-&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, or by &lt;a href=&quot;bytebuffer#wrap-byte:A-&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing byte array into a buffer.</source>
          <target state="translated">字节缓冲区可以通过&lt;a href=&quot;bytebuffer#allocate-int-&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;（为缓冲区的内容分配空间）来创建，也可以通过&lt;i&gt;将&lt;/i&gt;现有的字节数组&lt;a href=&quot;bytebuffer#wrap-byte:A-&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;到缓冲区中来创建。</target>
        </trans-unit>
        <trans-unit id="efc40a24b9b717a54b8d56d707c7c6c12ff6967e" translate="yes" xml:space="preserve">
          <source>Byte stream (&lt;a href=&quot;../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;java.io.InputStream&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the bytes read from the stream up to the end-of-stream. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</source>
          <target state="translated">字节流（&lt;a href=&quot;../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;java.io.InputStream&lt;/code&gt; &lt;/a&gt;）-打印数据由从流读取到流末尾的字节组成。字节编码为由docflavor的MIME类型指定的字符集。如果MIME类型未指定字符集，则默认字符集为US-ASCII。</target>
        </trans-unit>
        <trans-unit id="dfc8d216efb18ee738a51c7b1c72d9d5a694c396" translate="yes" xml:space="preserve">
          <source>Byte stream (&lt;a href=&quot;../../java/io/inputstream&quot;&gt;&lt;code&gt;java.io.InputStream&lt;/code&gt;&lt;/a&gt;) -- The print data consists of the bytes read from the stream up to the end-of-stream. The bytes are encoded in the character set specified by the doc flavor's MIME type. If the MIME type does not specify a character set, the default character set is US-ASCII.</source>
          <target state="translated">字节流（&lt;a href=&quot;../../java/io/inputstream&quot;&gt; &lt;code&gt;java.io.InputStream&lt;/code&gt; &lt;/a&gt;）-打印数据由从流读取到流末尾的字节组成。字节编码为由docflavor的MIME类型指定的字符集。如果MIME类型未指定字符集，则默认字符集为US-ASCII。</target>
        </trans-unit>
        <trans-unit id="35d65db6153fb003c0ec5a7e5f97e84b8b6540da" translate="yes" xml:space="preserve">
          <source>Byte.byteValue()</source>
          <target state="translated">Byte.byteValue()</target>
        </trans-unit>
        <trans-unit id="765687760412e23d3af9319bad64ac2276b8e71c" translate="yes" xml:space="preserve">
          <source>Byte.compare()</source>
          <target state="translated">Byte.compare()</target>
        </trans-unit>
        <trans-unit id="7025582b3066336f81a1e40b90d0873f5282fead" translate="yes" xml:space="preserve">
          <source>Byte.compareTo()</source>
          <target state="translated">Byte.compareTo()</target>
        </trans-unit>
        <trans-unit id="fab6974036d23257c5e9bcb32e003fc373980b27" translate="yes" xml:space="preserve">
          <source>Byte.decode()</source>
          <target state="translated">Byte.decode()</target>
        </trans-unit>
        <trans-unit id="860a9070ab3c744435daa9c33436c7c066c2d9da" translate="yes" xml:space="preserve">
          <source>Byte.doubleValue()</source>
          <target state="translated">Byte.doubleValue()</target>
        </trans-unit>
        <trans-unit id="f14ed1810a01497149324efe586fb2cb3637d046" translate="yes" xml:space="preserve">
          <source>Byte.equals()</source>
          <target state="translated">Byte.equals()</target>
        </trans-unit>
        <trans-unit id="df9effa0eb76c2b0a6e18ec16d3468b62a2f6997" translate="yes" xml:space="preserve">
          <source>Byte.floatValue()</source>
          <target state="translated">Byte.floatValue()</target>
        </trans-unit>
        <trans-unit id="5ece7ca0ef423b0508c79d4586aafe8387056882" translate="yes" xml:space="preserve">
          <source>Byte.hashCode()</source>
          <target state="translated">Byte.hashCode()</target>
        </trans-unit>
        <trans-unit id="194b6050858b47520fb9d058a2d6f15e43e9b7cb" translate="yes" xml:space="preserve">
          <source>Byte.intValue()</source>
          <target state="translated">Byte.intValue()</target>
        </trans-unit>
        <trans-unit id="81b8aeaa5dcaa7edd4476485a4dc6320f4931588" translate="yes" xml:space="preserve">
          <source>Byte.longValue()</source>
          <target state="translated">Byte.longValue()</target>
        </trans-unit>
        <trans-unit id="79b360b9b8bc15c7a4e8d11f377a74ec12def61e" translate="yes" xml:space="preserve">
          <source>Byte.parseByte()</source>
          <target state="translated">Byte.parseByte()</target>
        </trans-unit>
        <trans-unit id="d7d1a2f86ff345544c8ff38bffb880131a33307f" translate="yes" xml:space="preserve">
          <source>Byte.shortValue()</source>
          <target state="translated">Byte.shortValue()</target>
        </trans-unit>
        <trans-unit id="2f4aa72bfff65ba84c99baea63065064b724c749" translate="yes" xml:space="preserve">
          <source>Byte.toString()</source>
          <target state="translated">Byte.toString()</target>
        </trans-unit>
        <trans-unit id="aeef7ee8791d34605aa5dc77687c529cb46f9ca7" translate="yes" xml:space="preserve">
          <source>Byte.toUnsignedInt()</source>
          <target state="translated">Byte.toUnsignedInt()</target>
        </trans-unit>
        <trans-unit id="20fa3fa0a7f69cd59ecb8fde5e9598cfd4366ec0" translate="yes" xml:space="preserve">
          <source>Byte.toUnsignedLong()</source>
          <target state="translated">Byte.toUnsignedLong()</target>
        </trans-unit>
        <trans-unit id="75aacac1f046964ea2b15cad7aff7f552935bcbe" translate="yes" xml:space="preserve">
          <source>Byte.valueOf()</source>
          <target state="translated">Byte.valueOf()</target>
        </trans-unit>
        <trans-unit id="4ab0eda7e81f66c18da5e36914bdbd3f194b3d34" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream</source>
          <target state="translated">ByteArrayInputStream</target>
        </trans-unit>
        <trans-unit id="4fe5085ec423c6d0e2f590cc989cc831c8bb3907" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.available()</source>
          <target state="translated">ByteArrayInputStream.available()</target>
        </trans-unit>
        <trans-unit id="c50e1a0898ac06b34123fcefe243e8d827b11be0" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.close()</source>
          <target state="translated">ByteArrayInputStream.close()</target>
        </trans-unit>
        <trans-unit id="22116c48f65a0054592dfdececbf2fbbb273d841" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.mark()</source>
          <target state="translated">ByteArrayInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="2001d6fb9b207c54ba2c79f70fe86420e9bd5445" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.markSupported()</source>
          <target state="translated">ByteArrayInputStream.markSupported()</target>
        </trans-unit>
        <trans-unit id="68f43a9a604cb9026dffa8aabe8f62fc94482272" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.read()</source>
          <target state="translated">ByteArrayInputStream.read()</target>
        </trans-unit>
        <trans-unit id="b584d5525926e4ea8b2bc2e12e9181c2381adae6" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.reset()</source>
          <target state="translated">ByteArrayInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="19ba32696806f759c9c2f80b9cb374e49b9a6d1b" translate="yes" xml:space="preserve">
          <source>ByteArrayInputStream.skip()</source>
          <target state="translated">ByteArrayInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="0a0d724833c8ea3f75c148b3324ae166676dfff7" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream</source>
          <target state="translated">ByteArrayOutputStream</target>
        </trans-unit>
        <trans-unit id="20fbfb900b7d4bf233732c28f7f6ce51381e6f25" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.close()</source>
          <target state="translated">ByteArrayOutputStream.close()</target>
        </trans-unit>
        <trans-unit id="d69b9b8edd3d3d0a66cf46130706fdaa73240e15" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.reset()</source>
          <target state="translated">ByteArrayOutputStream.reset()</target>
        </trans-unit>
        <trans-unit id="b5a97c9cebd94e800f51be133ab5edf656c826be" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.size()</source>
          <target state="translated">ByteArrayOutputStream.size()</target>
        </trans-unit>
        <trans-unit id="1e099aa20dd60b91a4fb298871cc9a53acfb68b4" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.toByteArray()</source>
          <target state="translated">ByteArrayOutputStream.toByteArray()</target>
        </trans-unit>
        <trans-unit id="146eb06bf292e54042fae3b770684aeaff74137e" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.toString()</source>
          <target state="translated">ByteArrayOutputStream.toString()</target>
        </trans-unit>
        <trans-unit id="907d3ffaebe3887e93c1b5eb84ed1160c6a85dec" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.write()</source>
          <target state="translated">ByteArrayOutputStream.write()</target>
        </trans-unit>
        <trans-unit id="bb7b4a24166c989c7929a9640abc99970f6001d8" translate="yes" xml:space="preserve">
          <source>ByteArrayOutputStream.writeTo()</source>
          <target state="translated">ByteArrayOutputStream.writeTo()</target>
        </trans-unit>
        <trans-unit id="066fd088210cf40bab9e0d026adfc85698fe0255" translate="yes" xml:space="preserve">
          <source>ByteBuffer</source>
          <target state="translated">ByteBuffer</target>
        </trans-unit>
        <trans-unit id="592d2094283c8a2104231747877c98b9c08f5f7b" translate="yes" xml:space="preserve">
          <source>ByteBuffer.allocate()</source>
          <target state="translated">ByteBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="1176eb8c79f5e049de7db3e4cbb6574d0d8ae291" translate="yes" xml:space="preserve">
          <source>ByteBuffer.allocateDirect()</source>
          <target state="translated">ByteBuffer.allocateDirect()</target>
        </trans-unit>
        <trans-unit id="3e7ef7bf0adcd5013d42e4fccc25bac39ce3cd8c" translate="yes" xml:space="preserve">
          <source>ByteBuffer.array()</source>
          <target state="translated">ByteBuffer.array()</target>
        </trans-unit>
        <trans-unit id="1a72c252514aac3400fd8d1774c19309f3924d59" translate="yes" xml:space="preserve">
          <source>ByteBuffer.arrayOffset()</source>
          <target state="translated">ByteBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="c4403eee91e285445bc5857e85f8ee710d226cc2" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asCharBuffer()</source>
          <target state="translated">ByteBuffer.asCharBuffer()</target>
        </trans-unit>
        <trans-unit id="49d71918b373695b37be2285addbc49e7cefabf8" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asDoubleBuffer()</source>
          <target state="translated">ByteBuffer.asDoubleBuffer()</target>
        </trans-unit>
        <trans-unit id="6bf3960bb1a9fe636d4c7886b3334f5daeec6cd2" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asFloatBuffer()</source>
          <target state="translated">ByteBuffer.asFloatBuffer()</target>
        </trans-unit>
        <trans-unit id="666b73c18717a1f4edf9134e09628f4a42b7ade2" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asIntBuffer()</source>
          <target state="translated">ByteBuffer.asIntBuffer()</target>
        </trans-unit>
        <trans-unit id="9e94a831a3dd208097108735acaac5f8f61a7408" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asLongBuffer()</source>
          <target state="translated">ByteBuffer.asLongBuffer()</target>
        </trans-unit>
        <trans-unit id="e4d2d199e8ec7a9a7d6e7cf4716d82db81e60a3b" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asReadOnlyBuffer()</source>
          <target state="translated">ByteBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="1ad5cfd9a0cacd5c8a60cdbf5b2cca86a6fead65" translate="yes" xml:space="preserve">
          <source>ByteBuffer.asShortBuffer()</source>
          <target state="translated">ByteBuffer.asShortBuffer()</target>
        </trans-unit>
        <trans-unit id="b73e27392eeda3ec8349a615f3fb9767c003ed6c" translate="yes" xml:space="preserve">
          <source>ByteBuffer.compact()</source>
          <target state="translated">ByteBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="3fcb36336b96823b83564f5997a4d352dc139685" translate="yes" xml:space="preserve">
          <source>ByteBuffer.compareTo()</source>
          <target state="translated">ByteBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="c84545045be64f231afa86323bfdda6ad39de556" translate="yes" xml:space="preserve">
          <source>ByteBuffer.duplicate()</source>
          <target state="translated">ByteBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="e0a583c5957121cd1c3d3c1464a1c70cd8cda57c" translate="yes" xml:space="preserve">
          <source>ByteBuffer.equals()</source>
          <target state="translated">ByteBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="ab66ee30f64a050418e93fcd35beccc9e7c0145f" translate="yes" xml:space="preserve">
          <source>ByteBuffer.get()</source>
          <target state="translated">ByteBuffer.get()</target>
        </trans-unit>
        <trans-unit id="d2579c96f0f8b2941a34c212a7268319170122b0" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getChar()</source>
          <target state="translated">ByteBuffer.getChar()</target>
        </trans-unit>
        <trans-unit id="f081040a71e94a606aea038d999920f0561383d0" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getDouble()</source>
          <target state="translated">ByteBuffer.getDouble()</target>
        </trans-unit>
        <trans-unit id="4d5bcf981f1eedc13b3f70af63e1280960c0c4ac" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getFloat()</source>
          <target state="translated">ByteBuffer.getFloat()</target>
        </trans-unit>
        <trans-unit id="47b8004befae64d77aaa577f8fc5247fec4de404" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getInt()</source>
          <target state="translated">ByteBuffer.getInt()</target>
        </trans-unit>
        <trans-unit id="dfef190f746cd639fefa3469ca3bb8a8db687143" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getLong()</source>
          <target state="translated">ByteBuffer.getLong()</target>
        </trans-unit>
        <trans-unit id="cf14ca600b39c2ed38c332d321a9c3e92bd84467" translate="yes" xml:space="preserve">
          <source>ByteBuffer.getShort()</source>
          <target state="translated">ByteBuffer.getShort()</target>
        </trans-unit>
        <trans-unit id="ee0cc56290282813c83f1bb9c566a9ff1eca767b" translate="yes" xml:space="preserve">
          <source>ByteBuffer.hasArray()</source>
          <target state="translated">ByteBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="ed19c51a365a270bbefe28242193539764677852" translate="yes" xml:space="preserve">
          <source>ByteBuffer.hashCode()</source>
          <target state="translated">ByteBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="20218c224f86e60ee9eeb9e6e1b546ac6adcc9e6" translate="yes" xml:space="preserve">
          <source>ByteBuffer.isDirect()</source>
          <target state="translated">ByteBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="e8846d23612b9f273b40201c34fcb0c0a12ba5d7" translate="yes" xml:space="preserve">
          <source>ByteBuffer.order()</source>
          <target state="translated">ByteBuffer.order()</target>
        </trans-unit>
        <trans-unit id="48b5b731fb344fec7f0a1a301b6b08f62957b823" translate="yes" xml:space="preserve">
          <source>ByteBuffer.put()</source>
          <target state="translated">ByteBuffer.put()</target>
        </trans-unit>
        <trans-unit id="0505cff9c9eac96942dfe5dcf41be201308bc304" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putChar()</source>
          <target state="translated">ByteBuffer.putChar()</target>
        </trans-unit>
        <trans-unit id="5929c3b682d9e3c9b993510bc4be40c120f1c032" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putDouble()</source>
          <target state="translated">ByteBuffer.putDouble()</target>
        </trans-unit>
        <trans-unit id="0f5c684bfe8f55f8d3e9423340275a6210a363df" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putFloat()</source>
          <target state="translated">ByteBuffer.putFloat()</target>
        </trans-unit>
        <trans-unit id="659772759b765006a7114c377eb8de7c45ed5e02" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putInt()</source>
          <target state="translated">ByteBuffer.putInt()</target>
        </trans-unit>
        <trans-unit id="a44f0950bbb09699d499f710092a988bb8b094d4" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putLong()</source>
          <target state="translated">ByteBuffer.putLong()</target>
        </trans-unit>
        <trans-unit id="2a569a4377a1b93f56ed8ab933cbb4e2e1493fa0" translate="yes" xml:space="preserve">
          <source>ByteBuffer.putShort()</source>
          <target state="translated">ByteBuffer.putShort()</target>
        </trans-unit>
        <trans-unit id="925de9609fe4a4fe584d7ed2eede99222328ed64" translate="yes" xml:space="preserve">
          <source>ByteBuffer.slice()</source>
          <target state="translated">ByteBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="d8b39d795e407b72ac024dcb50e89ec8c034606f" translate="yes" xml:space="preserve">
          <source>ByteBuffer.toString()</source>
          <target state="translated">ByteBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="aae96e677f9ff06168b07a036ee5a28a8bb878e4" translate="yes" xml:space="preserve">
          <source>ByteBuffer.wrap()</source>
          <target state="translated">ByteBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="684de3307764adb385fc1e92db8147583bdd0135" translate="yes" xml:space="preserve">
          <source>ByteChannel</source>
          <target state="translated">ByteChannel</target>
        </trans-unit>
        <trans-unit id="075fe951f538100fd938ac39adc6efa478b3cc62" translate="yes" xml:space="preserve">
          <source>ByteLookupTable</source>
          <target state="translated">ByteLookupTable</target>
        </trans-unit>
        <trans-unit id="8a45cdc61d443f1d99e6a8e08a1a5cac63e13810" translate="yes" xml:space="preserve">
          <source>ByteOrder</source>
          <target state="translated">ByteOrder</target>
        </trans-unit>
        <trans-unit id="b7ebd711a385cf71ce1caf7350af8dfa1ea2f124" translate="yes" xml:space="preserve">
          <source>ByteOrder.nativeOrder()</source>
          <target state="translated">ByteOrder.nativeOrder()</target>
        </trans-unit>
        <trans-unit id="0061ca092d69381255b213746f079192877fec28" translate="yes" xml:space="preserve">
          <source>ByteOrder.toString()</source>
          <target state="translated">ByteOrder.toString()</target>
        </trans-unit>
        <trans-unit id="15bc015e59edf1be7f2150a325461149e46ede8e" translate="yes" xml:space="preserve">
          <source>ByteType</source>
          <target state="translated">ByteType</target>
        </trans-unit>
        <trans-unit id="1936dae206b170ad1c1af945bb746de64e3548ef" translate="yes" xml:space="preserve">
          <source>ByteValue</source>
          <target state="translated">ByteValue</target>
        </trans-unit>
        <trans-unit id="18862cb8630ec1df4fc072c3f7f7847808094ad7" translate="yes" xml:space="preserve">
          <source>Bytecode generators, including the compiler back end, are required to emit untransformed symbolic type descriptors for these methods. Tools which determine symbolic linkage are required to accept such untransformed descriptors, without reporting linkage errors.</source>
          <target state="translated">字节码生成器,包括编译器后端,必须为这些方法发出未经转换的符号类型描述符。确定符号链接的工具必须接受这种未转换的描述符,而不报告链接错误。</target>
        </trans-unit>
        <trans-unit id="e26081c49d070cd04379b2c727538ae058d418d2" translate="yes" xml:space="preserve">
          <source>Bytecode-reading APIs that process the constant pool and wish to expose entries as &lt;a href=&quot;constantdesc&quot;&gt;&lt;code&gt;ConstantDesc&lt;/code&gt;&lt;/a&gt; to their callers should generally use this method in preference to &lt;a href=&quot;#ofNamed(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc...)&quot;&gt;&lt;code&gt;ofNamed(DirectMethodHandleDesc, String, ClassDesc, ConstantDesc...)&lt;/code&gt;&lt;/a&gt; because this may result in a more specific type that can be provided to callers.</source>
          <target state="translated">处理常量池并希望将条目作为&lt;a href=&quot;constantdesc&quot;&gt; &lt;code&gt;ConstantDesc&lt;/code&gt; &lt;/a&gt;公开给调用者的字节码读取API通常应优先于&lt;a href=&quot;#ofNamed(java.lang.constant.DirectMethodHandleDesc,java.lang.String,java.lang.constant.ClassDesc,java.lang.constant.ConstantDesc...)&quot;&gt; &lt;code&gt;ofNamed(DirectMethodHandleDesc, String, ClassDesc, ConstantDesc...)&lt;/code&gt; &lt;/a&gt;使用此方法，因为这可能会导致更具体的类型可以提供给呼叫者。</target>
        </trans-unit>
        <trans-unit id="5fd1483edab08a4a8d6b6422b4ae191bca333d84" translate="yes" xml:space="preserve">
          <source>Bytes are read starting at this channel's current file position, and then the file position is updated with the number of bytes actually read. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">从该通道的当前文件位置开始读取字节，然后使用实际读取的字节数更新文件位置。否则，此方法的行为与&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;接口中指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="7c22cb48108a90172ea1f9755573429b689b563f" translate="yes" xml:space="preserve">
          <source>Bytes are read starting at this channel's current file position, and then the file position is updated with the number of bytes actually read. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;scatteringbytechannel&quot;&gt;&lt;code&gt;ScatteringByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">从该通道的当前文件位置开始读取字节，然后使用实际读取的字节数更新文件位置。否则，此方法的行为与&lt;a href=&quot;scatteringbytechannel&quot;&gt; &lt;code&gt;ScatteringByteChannel&lt;/code&gt; &lt;/a&gt;接口中指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="7482a5b7bb56b073411149804c7e1e5cae042f1c" translate="yes" xml:space="preserve">
          <source>Bytes are read starting at this channel's current position, and then the position is updated with the number of bytes actually read. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;readablebytechannel&quot;&gt;&lt;code&gt;ReadableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">从该通道的当前位置开始读取字节，然后使用实际读取的字节数更新该位置。否则，此方法的行为与&lt;a href=&quot;readablebytechannel&quot;&gt; &lt;code&gt;ReadableByteChannel&lt;/code&gt; &lt;/a&gt;接口中指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="d99b90c47425229f8bbb84f86216f260c30c07b5" translate="yes" xml:space="preserve">
          <source>Bytes are written starting at this channel's current file position unless the channel is in append mode, in which case the position is first advanced to the end of the file. The file is grown, if necessary, to accommodate the written bytes, and then the file position is updated with the number of bytes actually written. Otherwise this method behaves exactly as specified by the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">除非该通道处于附加模式，否则将从该通道的当前文件位置开始写入字节，在这种情况下，该位置首先前进到文件末尾。如有必要，将文件增长以容纳写入的字节，然后使用实际写入的字节数更新文件位置。否则，此方法的行为与&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;接口指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="d49cfad8b11fd66360d02e456be33ea5a81bedb4" translate="yes" xml:space="preserve">
          <source>Bytes are written starting at this channel's current file position unless the channel is in append mode, in which case the position is first advanced to the end of the file. The file is grown, if necessary, to accommodate the written bytes, and then the file position is updated with the number of bytes actually written. Otherwise this method behaves exactly as specified in the &lt;a href=&quot;gatheringbytechannel&quot;&gt;&lt;code&gt;GatheringByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">除非该通道处于附加模式，否则将从该通道的当前文件位置开始写入字节，在这种情况下，该位置首先前进到文件末尾。如有必要，将文件增长以容纳写入的字节，然后使用实际写入的字节数更新文件位置。否则，此方法的行为与&lt;a href=&quot;gatheringbytechannel&quot;&gt; &lt;code&gt;GatheringByteChannel&lt;/code&gt; &lt;/a&gt;接口中指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="f161521aff0978f84ec756f3ae58c76dbd822dbe" translate="yes" xml:space="preserve">
          <source>Bytes are written starting at this channel's current position, unless the channel is connected to an entity such as a file that is opened with the &lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt;&lt;code&gt;APPEND&lt;/code&gt;&lt;/a&gt; option, in which case the position is first advanced to the end. The entity to which the channel is connected is grown, if necessary, to accommodate the written bytes, and then the position is updated with the number of bytes actually written. Otherwise this method behaves exactly as specified by the &lt;a href=&quot;writablebytechannel&quot;&gt;&lt;code&gt;WritableByteChannel&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">从该通道的当前位置开始写入字节，除非该通道连接到诸如使用&lt;a href=&quot;../file/standardopenoption#APPEND&quot;&gt; &lt;code&gt;APPEND&lt;/code&gt; &lt;/a&gt;选项打开的文件之类的实体，在这种情况下，该位置首先前进至末尾。如有必要，可以增加与通道连接的实体，以容纳写入的字节，然后使用实际写入的字节数更新位置。否则，此方法的行为与&lt;a href=&quot;writablebytechannel&quot;&gt; &lt;code&gt;WritableByteChannel&lt;/code&gt; &lt;/a&gt;接口指定的行为完全相同。</target>
        </trans-unit>
        <trans-unit id="ee658b6f5f87e5dc9a76837686e8b7da04d5143d" translate="yes" xml:space="preserve">
          <source>Bytes can be transferred from a file &lt;a href=&quot;#transferTo(long,long,java.nio.channels.WritableByteChannel)&quot;&gt;&lt;code&gt;&lt;i&gt;to
   some other channel&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#transferFrom(java.nio.channels.ReadableByteChannel,long,long)&quot;&gt;&lt;code&gt;&lt;i&gt;vice
   versa&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, in a way that can be optimized by many operating systems into a very fast transfer directly to or from the filesystem cache.</source>
          <target state="translated">字节可以从文件传输&lt;a href=&quot;#transferTo(long,long,java.nio.channels.WritableByteChannel)&quot;&gt; &lt;code&gt;&lt;i&gt;to some other channel&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;#transferFrom(java.nio.channels.ReadableByteChannel,long,long)&quot;&gt; &lt;code&gt;&lt;i&gt;vice versa&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;，可以通过许多操作系统进行优化，将字节快速传输到文件系统缓存或直接从文件系统缓存传输。</target>
        </trans-unit>
        <trans-unit id="894f12201bda7fac0ae6fd06ea83090bda6d87ce" translate="yes" xml:space="preserve">
          <source>Bytes can be transferred from a file &lt;a href=&quot;filechannel#transferTo-long-long-java.nio.channels.WritableByteChannel-&quot;&gt;&lt;code&gt;&lt;i&gt;to
   some other channel&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;filechannel#transferFrom-java.nio.channels.ReadableByteChannel-long-long-&quot;&gt;&lt;code&gt;&lt;i&gt;vice
   versa&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, in a way that can be optimized by many operating systems into a very fast transfer directly to or from the filesystem cache.</source>
          <target state="translated">字节可以从文件传输&lt;a href=&quot;filechannel#transferTo-long-long-java.nio.channels.WritableByteChannel-&quot;&gt; &lt;code&gt;&lt;i&gt;to some other channel&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;，&lt;a href=&quot;filechannel#transferFrom-java.nio.channels.ReadableByteChannel-long-long-&quot;&gt; &lt;code&gt;&lt;i&gt;vice versa&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;，可以通过许多操作系统进行优化，将字节快速传输到文件系统缓存或从文件系统缓存快速传输。</target>
        </trans-unit>
        <trans-unit id="b70eb265097df5e93cbb6d554d3c69930d9226be" translate="yes" xml:space="preserve">
          <source>Bytes for this operation are read from the contained input stream.</source>
          <target state="translated">该操作的字节是从包含的输入流中读取的。</target>
        </trans-unit>
        <trans-unit id="28f5b6fcf58c8109857697d2be33f92752447664" translate="yes" xml:space="preserve">
          <source>Bytes from the file are decoded into characters using the specified charset and the same line terminators as specified by &lt;code&gt;
 readAllLines&lt;/code&gt; are supported.</source>
          <target state="translated">使用指定的字符集将文件中的字节解码为字符，并支持与 &lt;code&gt; readAllLines&lt;/code&gt; 指定的相同的行终止符。</target>
        </trans-unit>
        <trans-unit id="b88ba13bce6a6035121fb298aa2e24eb9af5ebac" translate="yes" xml:space="preserve">
          <source>Bytes from the file are decoded into characters using the specified charset and the same line terminators as specified by &lt;code&gt;readAllLines&lt;/code&gt; are supported.</source>
          <target state="translated">使用指定的字符集将文件中的字节解码为字符，并支持与 &lt;code&gt;readAllLines&lt;/code&gt; 指定的相同的行终止符。</target>
        </trans-unit>
        <trans-unit id="76517fb5db3a813131882c436a3d3d840022032c" translate="yes" xml:space="preserve">
          <source>Bytes may be &lt;a href=&quot;#read(java.nio.ByteBuffer,long)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#write(java.nio.ByteBuffer,long)&quot;&gt;&lt;code&gt;&lt;i&gt;written&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; at an absolute position in a file in a way that does not affect the channel's current position.</source>
          <target state="translated">可以以不影响通道当前位置的方式在文件中的绝对位置&lt;a href=&quot;#read(java.nio.ByteBuffer,long)&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;#write(java.nio.ByteBuffer,long)&quot;&gt; &lt;code&gt;&lt;i&gt;written&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;字节。</target>
        </trans-unit>
        <trans-unit id="55d85802790807944352e0bb71a0594bb080afb1" translate="yes" xml:space="preserve">
          <source>Bytes may be &lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-long-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-long-&quot;&gt;&lt;code&gt;&lt;i&gt;written&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; at an absolute position in a file in a way that does not affect the channel's current position.</source>
          <target state="translated">可以以不影响通道当前位置的方式在文件中的绝对位置&lt;a href=&quot;filechannel#read-java.nio.ByteBuffer-long-&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt;或&lt;a href=&quot;filechannel#write-java.nio.ByteBuffer-long-&quot;&gt; &lt;code&gt;&lt;i&gt;written&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;字节。</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="b52c66a39c2dcd87acc3f562288afe40940ed216" translate="yes" xml:space="preserve">
          <source>C is searched for a</source>
          <target state="translated">C被搜索到的是</target>
        </trans-unit>
        <trans-unit id="55db48a1c2eaa352054c2e180d0428783f813201" translate="yes" xml:space="preserve">
          <source>C size .</source>
          <target state="translated">C尺寸 .</target>
        </trans-unit>
        <trans-unit id="38f82195898121489cdb783d143a5b18c70b8096" translate="yes" xml:space="preserve">
          <source>C size.</source>
          <target state="translated">C尺寸。</target>
        </trans-unit>
        <trans-unit id="dc922d3540e2f2cee30d127af66bef44b9aa356d" translate="yes" xml:space="preserve">
          <source>C's declared public instance and static methods as returned by &lt;a href=&quot;#getDeclaredMethods()&quot;&gt;&lt;code&gt;getDeclaredMethods()&lt;/code&gt;&lt;/a&gt; and filtered to include only public methods that match given &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;parameterTypes&lt;/code&gt;</source>
          <target state="translated">C的声明的公共实例和静态方法，由&lt;a href=&quot;#getDeclaredMethods()&quot;&gt; &lt;code&gt;getDeclaredMethods()&lt;/code&gt; &lt;/a&gt;返回，并经过过滤以仅包含与给定 &lt;code&gt;name&lt;/code&gt; 和 &lt;code&gt;parameterTypes&lt;/code&gt; 匹配的公共方法</target>
        </trans-unit>
        <trans-unit id="293a1b6d19f6d26e5466b08c9e3936f967f5bf85" translate="yes" xml:space="preserve">
          <source>C's declared public instance and static methods as returned by &lt;a href=&quot;#getDeclaredMethods()&quot;&gt;&lt;code&gt;getDeclaredMethods()&lt;/code&gt;&lt;/a&gt; and filtered to include only public methods.</source>
          <target state="translated">C的声明的公共实例和由&lt;a href=&quot;#getDeclaredMethods()&quot;&gt; &lt;code&gt;getDeclaredMethods()&lt;/code&gt; &lt;/a&gt;返回的静态方法，并被过滤为仅包括公共方法。</target>
        </trans-unit>
        <trans-unit id="3b9248ce75e6a9c58914137034a1b9396e54fb68" translate="yes" xml:space="preserve">
          <source>C-style and C++-style comments are not recognized.</source>
          <target state="translated">C-style和C++风格的注释不被识别。</target>
        </trans-unit>
        <trans-unit id="a8b43ca435894a2a9598ab4896278cbb4bd996cd" translate="yes" xml:space="preserve">
          <source>C0</source>
          <target state="translated">C0</target>
        </trans-unit>
        <trans-unit id="28c27031fe7162d732a1c2e209a40bbfcb5fef90" translate="yes" xml:space="preserve">
          <source>C1</source>
          <target state="translated">C1</target>
        </trans-unit>
        <trans-unit id="be3cc23151953a49b9b7b7c7919b6c3b6d0c68f6" translate="yes" xml:space="preserve">
          <source>C10</source>
          <target state="translated">C10</target>
        </trans-unit>
        <trans-unit id="82213f307b7b13452bcf88c9d6c341577ad518fe" translate="yes" xml:space="preserve">
          <source>C14NMethodParameterSpec</source>
          <target state="translated">C14NMethodParameterSpec</target>
        </trans-unit>
        <trans-unit id="cb7d29f43f4a81ff1f3a1202c80293337faa7a0a" translate="yes" xml:space="preserve">
          <source>C2</source>
          <target state="translated">C2</target>
        </trans-unit>
        <trans-unit id="0371438f82b01efb31e37cd12a4a6b6c819b0e71" translate="yes" xml:space="preserve">
          <source>C3</source>
          <target state="translated">C3</target>
        </trans-unit>
        <trans-unit id="aaa025b3826509827b773a79dde61238b7846c09" translate="yes" xml:space="preserve">
          <source>C4</source>
          <target state="translated">C4</target>
        </trans-unit>
        <trans-unit id="fbeff7287bb8d46577504b6c72d5ba3e5ac86548" translate="yes" xml:space="preserve">
          <source>C5</source>
          <target state="translated">C5</target>
        </trans-unit>
        <trans-unit id="742fbe7716cc1fdef3e9a8d5c58b0d693991744f" translate="yes" xml:space="preserve">
          <source>C6</source>
          <target state="translated">C6</target>
        </trans-unit>
        <trans-unit id="a838e58546e5c8e88be9a58212202d359a3a1b52" translate="yes" xml:space="preserve">
          <source>C7</source>
          <target state="translated">C7</target>
        </trans-unit>
        <trans-unit id="f95703122fe37e8cf857ff5362b1211bf102cf6f" translate="yes" xml:space="preserve">
          <source>C8</source>
          <target state="translated">C8</target>
        </trans-unit>
        <trans-unit id="b31f0373a7e1ed6ee0116b9eaaed78f6c5db21c8" translate="yes" xml:space="preserve">
          <source>C9</source>
          <target state="translated">C9</target>
        </trans-unit>
        <trans-unit id="1b3cb484695189b567d88ee9266fe7c295405a5c" translate="yes" xml:space="preserve">
          <source>CALL</source>
          <target state="translated">CALL</target>
        </trans-unit>
        <trans-unit id="de30744df5a20a8c74f4a30166a00d3504659eb2" translate="yes" xml:space="preserve">
          <source>CANADA</source>
          <target state="translated">CANADA</target>
        </trans-unit>
        <trans-unit id="405a5cf281ff89b9431a40683692afdc5141f25b" translate="yes" xml:space="preserve">
          <source>CANADA_FRENCH</source>
          <target state="translated">CANADA_FRENCH</target>
        </trans-unit>
        <trans-unit id="77a0ae12afcf14565201ae75ed086a7f24d3589e" translate="yes" xml:space="preserve">
          <source>CANADIAN_ABORIGINAL</source>
          <target state="translated">CANADIAN_ABORIGINAL</target>
        </trans-unit>
        <trans-unit id="1507c40f043249fe6b5e25ba0cc97010cefa6d12" translate="yes" xml:space="preserve">
          <source>CANCEL</source>
          <target state="translated">CANCEL</target>
        </trans-unit>
        <trans-unit id="9e0797c3a666de4304d0cc30c2dfde314953f49d" translate="yes" xml:space="preserve">
          <source>CANCEL option.</source>
          <target state="translated">取消选项。</target>
        </trans-unit>
        <trans-unit id="30b6a2afeb9cba7b3efa34a31376744b55640535" translate="yes" xml:space="preserve">
          <source>CANCELED</source>
          <target state="translated">CANCELED</target>
        </trans-unit>
        <trans-unit id="f74e9a146548084f175ddf4973355597f603d3cd" translate="yes" xml:space="preserve">
          <source>CANCEL_OPTION</source>
          <target state="translated">CANCEL_OPTION</target>
        </trans-unit>
        <trans-unit id="4f5ffc956a66908cff0e9bba789dc57d43df9b95" translate="yes" xml:space="preserve">
          <source>CANCEL_SELECTION</source>
          <target state="translated">CANCEL_SELECTION</target>
        </trans-unit>
        <trans-unit id="d9938cb5e6af4445e34cb7de7aaa7c36ced2b056" translate="yes" xml:space="preserve">
          <source>CANONICAL</source>
          <target state="translated">CANONICAL</target>
        </trans-unit>
        <trans-unit id="c2c9bd65720f7996dae0030b203f2cb301d57ba6" translate="yes" xml:space="preserve">
          <source>CANONICAL_DECOMPOSITION</source>
          <target state="translated">CANONICAL_DECOMPOSITION</target>
        </trans-unit>
        <trans-unit id="50c7da8a937f84c2d7d3ad818f8998dadab44494" translate="yes" xml:space="preserve">
          <source>CANONICAL_DECOMPOSITION corresponds to Normalization Form D as described in &lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode Technical Report #15&lt;/a&gt;.</source>
          <target state="translated">CANONICAL_DECOMPOSITION对应于规范化表d中描述的&lt;a href=&quot;http://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode技术报告＃15&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2fceaf18aeaae45b8ffbc64627513e7bc19aa524" translate="yes" xml:space="preserve">
          <source>CANONICAL_DECOMPOSITION corresponds to Normalization Form D as described in &lt;a href=&quot;https://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode Technical Report #15&lt;/a&gt;.</source>
          <target state="translated">CANONICAL_DECOMPOSITION对应于规范化表d中描述的&lt;a href=&quot;https://www.unicode.org/unicode/reports/tr15/tr15-23.html&quot;&gt;Unicode技术报告＃15&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5cdc6fa477463d5f2868f0830b1453a306f2fa9f" translate="yes" xml:space="preserve">
          <source>CANON_EQ</source>
          <target state="translated">CANON_EQ</target>
        </trans-unit>
        <trans-unit id="7948c1ad51b349f9f1cb7e9b58a9857c79b0a8b0" translate="yes" xml:space="preserve">
          <source>CANT_START</source>
          <target state="translated">CANT_START</target>
        </trans-unit>
        <trans-unit id="aca68bea572e765df08a141ee61c92eefdc3c5dd" translate="yes" xml:space="preserve">
          <source>CANVAS</source>
          <target state="translated">CANVAS</target>
        </trans-unit>
        <trans-unit id="346424a6e5c27d0da45a066c32a5506671c9fdb4" translate="yes" xml:space="preserve">
          <source>CAPS_LOCK</source>
          <target state="translated">CAPS_LOCK</target>
        </trans-unit>
        <trans-unit id="b842a5a39fa757231e9c005b96e017c12e19dd62" translate="yes" xml:space="preserve">
          <source>CAPTION</source>
          <target state="translated">CAPTION</target>
        </trans-unit>
        <trans-unit id="64faaab58e5820188ef600e98bd37baa6de793e3" translate="yes" xml:space="preserve">
          <source>CAPTURING_PHASE</source>
          <target state="translated">CAPTURING_PHASE</target>
        </trans-unit>
        <trans-unit id="0b9e4dfe8ca34dff8cbf110ffca4948d9a39d7bf" translate="yes" xml:space="preserve">
          <source>CAP_BUTT</source>
          <target state="translated">CAP_BUTT</target>
        </trans-unit>
        <trans-unit id="4ebdab135878fe9780cacc8574f2b7bb06e2df75" translate="yes" xml:space="preserve">
          <source>CAP_ROUND</source>
          <target state="translated">CAP_ROUND</target>
        </trans-unit>
        <trans-unit id="0974aa4fd60a40e2761dcdc8c9aca2554d50ac6c" translate="yes" xml:space="preserve">
          <source>CAP_SQUARE</source>
          <target state="translated">CAP_SQUARE</target>
        </trans-unit>
        <trans-unit id="0c55a314b3991af4065a6d95b455cf9eb557462c" translate="yes" xml:space="preserve">
          <source>CARD_ABSENT</source>
          <target state="translated">CARD_ABSENT</target>
        </trans-unit>
        <trans-unit id="eca496866209af4b5293fdd49405a778a2e7dbe0" translate="yes" xml:space="preserve">
          <source>CARD_INSERTION</source>
          <target state="translated">CARD_INSERTION</target>
        </trans-unit>
        <trans-unit id="e8629f43fc74290b8600059a1c9d9833ae4d461b" translate="yes" xml:space="preserve">
          <source>CARD_PRESENT</source>
          <target state="translated">CARD_PRESENT</target>
        </trans-unit>
        <trans-unit id="f2fd3c8660de38c22551df7e51ee2bf66b44c3c9" translate="yes" xml:space="preserve">
          <source>CARD_REMOVAL</source>
          <target state="translated">CARD_REMOVAL</target>
        </trans-unit>
        <trans-unit id="ca9492c55521d58679efddf222b04fa3107c7b3e" translate="yes" xml:space="preserve">
          <source>CARET</source>
          <target state="translated">CARET</target>
        </trans-unit>
        <trans-unit id="dbc085ec855f8b3a49a9a1a6f68c65e17eb006d9" translate="yes" xml:space="preserve">
          <source>CARET_POSITION_CHANGED</source>
          <target state="translated">CARET_POSITION_CHANGED</target>
        </trans-unit>
        <trans-unit id="c322d8102091055b636aa85610f0bf11ac66f79b" translate="yes" xml:space="preserve">
          <source>CARIAN</source>
          <target state="translated">CARIAN</target>
        </trans-unit>
        <trans-unit id="55c417bda058d7601349aeb7556e3d8607c77f5d" translate="yes" xml:space="preserve">
          <source>CASE</source>
          <target state="translated">CASE</target>
        </trans-unit>
        <trans-unit id="10e789ffd9f830f91d28d54a15a2ea88b12a4bcb" translate="yes" xml:space="preserve">
          <source>CASE_INSENSITIVE</source>
          <target state="translated">CASE_INSENSITIVE</target>
        </trans-unit>
        <trans-unit id="05dff59689b060e392059bcb723a36e923fd7076" translate="yes" xml:space="preserve">
          <source>CASE_INSENSITIVE_ORDER</source>
          <target state="translated">CASE_INSENSITIVE_ORDER</target>
        </trans-unit>
        <trans-unit id="9a0adec3a0ec4477af85d5058520a6b061d9d716" translate="yes" xml:space="preserve">
          <source>CAT - Africa/Harare</source>
          <target state="translated">CAT-非洲/哈拉雷</target>
        </trans-unit>
        <trans-unit id="5e5312ba58e8cbd0d48442a0a88d2873f72fdc99" translate="yes" xml:space="preserve">
          <source>CATCH</source>
          <target state="translated">CATCH</target>
        </trans-unit>
        <trans-unit id="e74e225179d9178007bd00699acfcdc194f9ef3f" translate="yes" xml:space="preserve">
          <source>CAUCASIAN_ALBANIAN</source>
          <target state="translated">CAUCASIAN_ALBANIAN</target>
        </trans-unit>
        <trans-unit id="7293ca090f945fa4bb4262f6c9e344afb583db9c" translate="yes" xml:space="preserve">
          <source>CA_COMPROMISE</source>
          <target state="translated">CA_COMPROMISE</target>
        </trans-unit>
        <trans-unit id="56fe21163209fd8398405601090c40cdb82370d1" translate="yes" xml:space="preserve">
          <source>CBC</source>
          <target state="translated">CBC</target>
        </trans-unit>
        <trans-unit id="494bff78142278bf15c7806a089d7c002766f8bd" translate="yes" xml:space="preserve">
          <source>CDATA</source>
          <target state="translated">CDATA</target>
        </trans-unit>
        <trans-unit id="ca09c39a8289a477c6381ad02e2455a807023664" translate="yes" xml:space="preserve">
          <source>CDATA sections are used to escape blocks of text containing characters that would otherwise be regarded as markup.</source>
          <target state="translated">CDATA部分用于转义包含字符的文本块,否则将被视为标记。</target>
        </trans-unit>
        <trans-unit id="5d5b92244e96dbd33c8d7f02a8e847754779287f" translate="yes" xml:space="preserve">
          <source>CDATA sections are used to escape blocks of text containing characters that would otherwise be regarded as markup. The only delimiter that is recognized in a CDATA section is the &quot;]]&amp;gt;&quot; string that ends the CDATA section. CDATA sections cannot be nested. Their primary purpose is for including material such as XML fragments, without needing to escape all the delimiters.</source>
          <target state="translated">CDATA节用于转义包含可能被视为标记的字符的文本块。CDATA节中唯一可识别的分隔符是在CDATA节结尾的&amp;ldquo;]]&amp;gt;&amp;rdquo;字符串。CDATA节不能嵌套。它们的主要目的是包含诸如XML片段之类的资料，而无需转义所有定界符。</target>
        </trans-unit>
        <trans-unit id="fc92460aa983800938d07f61499adeb681e0fcf8" translate="yes" xml:space="preserve">
          <source>CDATASection</source>
          <target state="translated">CDATASection</target>
        </trans-unit>
        <trans-unit id="2a3f4692604f12351e8f5cce27f5d2cbe5cb4fd5" translate="yes" xml:space="preserve">
          <source>CDATA_SECTION_ELEMENTS</source>
          <target state="translated">CDATA_SECTION_ELEMENTS</target>
        </trans-unit>
        <trans-unit id="8cf36c957e2d7ea5ab4442c251007d8da0d135b2" translate="yes" xml:space="preserve">
          <source>CDATA_SECTION_NODE</source>
          <target state="translated">CDATA_SECTION_NODE</target>
        </trans-unit>
        <trans-unit id="d600a2de4de63d7d868b37ab702a9c92f4a3fae2" translate="yes" xml:space="preserve">
          <source>CD_Boolean</source>
          <target state="translated">CD_Boolean</target>
        </trans-unit>
        <trans-unit id="a5d3b3c8a6473445421082c9651d6204e80d51d8" translate="yes" xml:space="preserve">
          <source>CD_Byte</source>
          <target state="translated">CD_Byte</target>
        </trans-unit>
        <trans-unit id="392dc1c8a38db04ee5fc2a1347056d97a66feeba" translate="yes" xml:space="preserve">
          <source>CD_CallSite</source>
          <target state="translated">CD_CallSite</target>
        </trans-unit>
        <trans-unit id="9e4a588c3e7b11a290f4afa6a13f2dadcb33713e" translate="yes" xml:space="preserve">
          <source>CD_Character</source>
          <target state="translated">CD_Character</target>
        </trans-unit>
        <trans-unit id="97433a3bd571c6cd3a03fd06a02ba8b4254ca6b2" translate="yes" xml:space="preserve">
          <source>CD_Class</source>
          <target state="translated">CD_Class</target>
        </trans-unit>
        <trans-unit id="dd6901d9448b3b1d33f1c7f17dc62e4cee6d1b1e" translate="yes" xml:space="preserve">
          <source>CD_ClassDesc</source>
          <target state="translated">CD_ClassDesc</target>
        </trans-unit>
        <trans-unit id="eba8f2939882751f3fe86f14caf1e629985b54e6" translate="yes" xml:space="preserve">
          <source>CD_Collection</source>
          <target state="translated">CD_Collection</target>
        </trans-unit>
        <trans-unit id="f675f184a5f5da812739a3173406a4391c9f0f63" translate="yes" xml:space="preserve">
          <source>CD_ConstantBootstraps</source>
          <target state="translated">CD_ConstantBootstraps</target>
        </trans-unit>
        <trans-unit id="221b52666f6b9d11eee369a211469ef5f46cb685" translate="yes" xml:space="preserve">
          <source>CD_ConstantDesc</source>
          <target state="translated">CD_ConstantDesc</target>
        </trans-unit>
        <trans-unit id="01ec30cbdf6506f6541d59afb319196de1b611dc" translate="yes" xml:space="preserve">
          <source>CD_DirectMethodHandleDesc</source>
          <target state="translated">CD_DirectMethodHandleDesc</target>
        </trans-unit>
        <trans-unit id="4430c10b1ff4ec32f2bbbe4b5ce1268d42532bf4" translate="yes" xml:space="preserve">
          <source>CD_Double</source>
          <target state="translated">CD_Double</target>
        </trans-unit>
        <trans-unit id="68fca3fefbc5fb1d137296576ed1ead54e8f0c3c" translate="yes" xml:space="preserve">
          <source>CD_DynamicCallSiteDesc</source>
          <target state="translated">CD_DynamicCallSiteDesc</target>
        </trans-unit>
        <trans-unit id="aaa2ba9d02244e8d3e5f85e7748c662dabc5cb82" translate="yes" xml:space="preserve">
          <source>CD_DynamicConstantDesc</source>
          <target state="translated">CD_DynamicConstantDesc</target>
        </trans-unit>
        <trans-unit id="487ff072d1b00a5ae8ff7778cd819822b807aa1e" translate="yes" xml:space="preserve">
          <source>CD_Enum</source>
          <target state="translated">CD_Enum</target>
        </trans-unit>
        <trans-unit id="cb2857c303ba820f8ad63924c6d25b83511218b3" translate="yes" xml:space="preserve">
          <source>CD_EnumDesc</source>
          <target state="translated">CD_EnumDesc</target>
        </trans-unit>
        <trans-unit id="e6d68b028331fb33d30b7cac1e3fdc7b169dc323" translate="yes" xml:space="preserve">
          <source>CD_Exception</source>
          <target state="translated">CD_Exception</target>
        </trans-unit>
        <trans-unit id="55876e689aca5b7b0bf1d8985ed4443134e904a3" translate="yes" xml:space="preserve">
          <source>CD_Float</source>
          <target state="translated">CD_Float</target>
        </trans-unit>
        <trans-unit id="4ac86db050883fd2259eac7c5e9c28e6abf6aa64" translate="yes" xml:space="preserve">
          <source>CD_Integer</source>
          <target state="translated">CD_Integer</target>
        </trans-unit>
        <trans-unit id="66ec3d41c1c2b11192a54baa65ff91eab7603b99" translate="yes" xml:space="preserve">
          <source>CD_List</source>
          <target state="translated">CD_List</target>
        </trans-unit>
        <trans-unit id="0a1415bf145426e462dddde488264ca2c11aa8a9" translate="yes" xml:space="preserve">
          <source>CD_Long</source>
          <target state="translated">CD_Long</target>
        </trans-unit>
        <trans-unit id="fc4c331530f9b463f4ae96a0493f5d72c6a38784" translate="yes" xml:space="preserve">
          <source>CD_Map</source>
          <target state="translated">CD_Map</target>
        </trans-unit>
        <trans-unit id="44f673cc754a8adc291d9260ccd9b4ef256af399" translate="yes" xml:space="preserve">
          <source>CD_MethodHandle</source>
          <target state="translated">CD_MethodHandle</target>
        </trans-unit>
        <trans-unit id="2ee41077ba3bef0bfaa9947e0262f588ed8c8525" translate="yes" xml:space="preserve">
          <source>CD_MethodHandleDesc</source>
          <target state="translated">CD_MethodHandleDesc</target>
        </trans-unit>
        <trans-unit id="9003081d03decdfbc62343388ee1fe841a8a6bb8" translate="yes" xml:space="preserve">
          <source>CD_MethodHandleDesc_Kind</source>
          <target state="translated">CD_MethodHandleDesc_Kind</target>
        </trans-unit>
        <trans-unit id="4a72b3452f566ef6a6de04fde6281266225b72e7" translate="yes" xml:space="preserve">
          <source>CD_MethodHandles</source>
          <target state="translated">CD_MethodHandles</target>
        </trans-unit>
        <trans-unit id="0013b569205786bd1b26ae2480b9f21be1f61dc7" translate="yes" xml:space="preserve">
          <source>CD_MethodHandles_Lookup</source>
          <target state="translated">CD_MethodHandles_Lookup</target>
        </trans-unit>
        <trans-unit id="e77b3eeb5c5467d57e5ea05f6a4cc73bcde2714e" translate="yes" xml:space="preserve">
          <source>CD_MethodType</source>
          <target state="translated">CD_MethodType</target>
        </trans-unit>
        <trans-unit id="c316d662bd546421f2c2f293a5d6c2a8fab5ac33" translate="yes" xml:space="preserve">
          <source>CD_MethodTypeDesc</source>
          <target state="translated">CD_MethodTypeDesc</target>
        </trans-unit>
        <trans-unit id="5ad5e62fee5d64983d1861ea6b7151a49a8ab43e" translate="yes" xml:space="preserve">
          <source>CD_Number</source>
          <target state="translated">CD_Number</target>
        </trans-unit>
        <trans-unit id="4a9d5e29ac2f23ba17a71b626e4a699853453771" translate="yes" xml:space="preserve">
          <source>CD_Object</source>
          <target state="translated">CD_Object</target>
        </trans-unit>
        <trans-unit id="576ee32de3f8b39986126f2feb4cae6cce589904" translate="yes" xml:space="preserve">
          <source>CD_Set</source>
          <target state="translated">CD_Set</target>
        </trans-unit>
        <trans-unit id="8b44befccd575e74918fe18235b5c2076dc20ce3" translate="yes" xml:space="preserve">
          <source>CD_Short</source>
          <target state="translated">CD_Short</target>
        </trans-unit>
        <trans-unit id="fc9630f334c471c3bee268732b6f6dbe74f548f3" translate="yes" xml:space="preserve">
          <source>CD_String</source>
          <target state="translated">CD_String</target>
        </trans-unit>
        <trans-unit id="9b551f2982a63ce74c54f7c8cb3c8ff27445ddd8" translate="yes" xml:space="preserve">
          <source>CD_Throwable</source>
          <target state="translated">CD_Throwable</target>
        </trans-unit>
        <trans-unit id="f32fa9d46d8096023f7fc7168728734a89e1b3c9" translate="yes" xml:space="preserve">
          <source>CD_VarHandle</source>
          <target state="translated">CD_VarHandle</target>
        </trans-unit>
        <trans-unit id="1a7d3e4d21477efaabf7f7909f87ff8e8b4f3dab" translate="yes" xml:space="preserve">
          <source>CD_VarHandleDesc</source>
          <target state="translated">CD_VarHandleDesc</target>
        </trans-unit>
        <trans-unit id="0ff8259ed3269c946f9e023a84837ac12020b87e" translate="yes" xml:space="preserve">
          <source>CD_Void</source>
          <target state="translated">CD_Void</target>
        </trans-unit>
        <trans-unit id="55bd591f3599a920d39cc144294882f987cb70c0" translate="yes" xml:space="preserve">
          <source>CD_boolean</source>
          <target state="translated">CD_boolean</target>
        </trans-unit>
        <trans-unit id="e2f09183bf1a4f2ea3feba8e0aaeeabbd619cd8c" translate="yes" xml:space="preserve">
          <source>CD_byte</source>
          <target state="translated">CD_byte</target>
        </trans-unit>
        <trans-unit id="ca82d5897519109b9440347d922f929ff072d5d7" translate="yes" xml:space="preserve">
          <source>CD_char</source>
          <target state="translated">CD_char</target>
        </trans-unit>
        <trans-unit id="ab266e65b7c0f24098d1324e349f7e9fc7000d2a" translate="yes" xml:space="preserve">
          <source>CD_double</source>
          <target state="translated">CD_double</target>
        </trans-unit>
        <trans-unit id="26cc607fb1cc81c5f3ba7e18ec617e550e423358" translate="yes" xml:space="preserve">
          <source>CD_float</source>
          <target state="translated">CD_float</target>
        </trans-unit>
        <trans-unit id="c9ea4ea12c1abd83e884df0010b32e45d4929ca2" translate="yes" xml:space="preserve">
          <source>CD_int</source>
          <target state="translated">CD_int</target>
        </trans-unit>
        <trans-unit id="446b40d1f4a8fa5edbe36ca3180c9b2320c2d92f" translate="yes" xml:space="preserve">
          <source>CD_long</source>
          <target state="translated">CD_long</target>
        </trans-unit>
        <trans-unit id="3be449f2ef5d5076e03ddf6fb98d357fa3b6910d" translate="yes" xml:space="preserve">
          <source>CD_short</source>
          <target state="translated">CD_short</target>
        </trans-unit>
        <trans-unit id="3bc6f8b5716ae921300e6764340119d62713734a" translate="yes" xml:space="preserve">
          <source>CD_void</source>
          <target state="translated">CD_void</target>
        </trans-unit>
        <trans-unit id="b77da9422330fead9ab9ec32fbbd59bb9d5fc19a" translate="yes" xml:space="preserve">
          <source>CE</source>
          <target state="translated">CE</target>
        </trans-unit>
        <trans-unit id="9b840af21581bd3b3ea416fa8ad2dda03c9b0dd7" translate="yes" xml:space="preserve">
          <source>CEILING</source>
          <target state="translated">CEILING</target>
        </trans-unit>
        <trans-unit id="620b737c3bfd3d5f574dba7ba7b5a5d572340ef2" translate="yes" xml:space="preserve">
          <source>CELLEDITOR</source>
          <target state="translated">CELLEDITOR</target>
        </trans-unit>
        <trans-unit id="da03448b686c8f7a604b0a37418c2c1d9fd4b30a" translate="yes" xml:space="preserve">
          <source>CELLPADDING</source>
          <target state="translated">CELLPADDING</target>
        </trans-unit>
        <trans-unit id="ce985febbbd7c75cf4b43f32f6950205617f029c" translate="yes" xml:space="preserve">
          <source>CELLSPACING</source>
          <target state="translated">CELLSPACING</target>
        </trans-unit>
        <trans-unit id="cad7a33e358d9f9d52b89d577682354d40012e64" translate="yes" xml:space="preserve">
          <source>CELL_EDITOR_PROPERTY</source>
          <target state="translated">CELL_EDITOR_PROPERTY</target>
        </trans-unit>
        <trans-unit id="88e5f64f3d9d8c9df669bd4cd86becb1ea4976fb" translate="yes" xml:space="preserve">
          <source>CELL_RENDERER_PROPERTY</source>
          <target state="translated">CELL_RENDERER_PROPERTY</target>
        </trans-unit>
        <trans-unit id="fbab0510c931da86c52704ea1e99d4124cd5f298" translate="yes" xml:space="preserve">
          <source>CENATT</source>
          <target state="translated">CENATT</target>
        </trans-unit>
        <trans-unit id="ce8e75c04a03b8ca486f1c2e6add9bf7d728e32f" translate="yes" xml:space="preserve">
          <source>CENATX</source>
          <target state="translated">CENATX</target>
        </trans-unit>
        <trans-unit id="c47eeee3fced691e4c289c3cec60f19b07f52d28" translate="yes" xml:space="preserve">
          <source>CENCOM</source>
          <target state="translated">CENCOM</target>
        </trans-unit>
        <trans-unit id="b9d7f569a3ad69f31cf85eafdebd468b25625db6" translate="yes" xml:space="preserve">
          <source>CENCRC</source>
          <target state="translated">CENCRC</target>
        </trans-unit>
        <trans-unit id="eed19d59412f63fc47761f1b4fac0c5e09fbaa38" translate="yes" xml:space="preserve">
          <source>CENDSK</source>
          <target state="translated">CENDSK</target>
        </trans-unit>
        <trans-unit id="cf45f5a55c3cef01d10412fb820d074abd2035e7" translate="yes" xml:space="preserve">
          <source>CENEXT</source>
          <target state="translated">CENEXT</target>
        </trans-unit>
        <trans-unit id="9e3935a6def7c4333d59e14912eb4f4b8b8e4896" translate="yes" xml:space="preserve">
          <source>CENFLG</source>
          <target state="translated">CENFLG</target>
        </trans-unit>
        <trans-unit id="df210772ae6e5bef738378a5dc6e0ce503dc3122" translate="yes" xml:space="preserve">
          <source>CENHDR</source>
          <target state="translated">CENHDR</target>
        </trans-unit>
        <trans-unit id="e83ce9c23f2103bba6dd996001c291399fa09cf7" translate="yes" xml:space="preserve">
          <source>CENHOW</source>
          <target state="translated">CENHOW</target>
        </trans-unit>
        <trans-unit id="8cfb942b05a65db9166a6d4fae11a6c74da62bd6" translate="yes" xml:space="preserve">
          <source>CENLEN</source>
          <target state="translated">CENLEN</target>
        </trans-unit>
        <trans-unit id="01850cca552bc017a01001e48cdd492d2b993c2e" translate="yes" xml:space="preserve">
          <source>CENNAM</source>
          <target state="translated">CENNAM</target>
        </trans-unit>
        <trans-unit id="d8853c7b4a13476c389ac7b2723d7353cb8bf9cc" translate="yes" xml:space="preserve">
          <source>CENOFF</source>
          <target state="translated">CENOFF</target>
        </trans-unit>
        <trans-unit id="29014448ec337d2bd35cea2519629be3abe71aaa" translate="yes" xml:space="preserve">
          <source>CENSIG</source>
          <target state="translated">CENSIG</target>
        </trans-unit>
        <trans-unit id="2e6d5a1dba4938c8309b36a50699ec6adf85c315" translate="yes" xml:space="preserve">
          <source>CENSIZ</source>
          <target state="translated">CENSIZ</target>
        </trans-unit>
        <trans-unit id="c7eb0f35af725da3dc60c90ea4ae1aa406f4c05c" translate="yes" xml:space="preserve">
          <source>CENTER</source>
          <target state="translated">CENTER</target>
        </trans-unit>
        <trans-unit id="10f5cbbea013b203c08c7df2f39430d8c907a170" translate="yes" xml:space="preserve">
          <source>CENTER_ALIGNMENT</source>
          <target state="translated">CENTER_ALIGNMENT</target>
        </trans-unit>
        <trans-unit id="6e3fd1e806e90a6517c162aae4fff0f3bf6055e8" translate="yes" xml:space="preserve">
          <source>CENTER_BASELINE</source>
          <target state="translated">CENTER_BASELINE</target>
        </trans-unit>
        <trans-unit id="284206fedbae60204c9056afef476d0df75e5f62" translate="yes" xml:space="preserve">
          <source>CENTER_OFFSET</source>
          <target state="translated">CENTER_OFFSET</target>
        </trans-unit>
        <trans-unit id="a8753e4d2724f082c94118bc33d6a4256fec6dfa" translate="yes" xml:space="preserve">
          <source>CENTIM</source>
          <target state="translated">CENTIM</target>
        </trans-unit>
        <trans-unit id="970caf4339ac82e74a396289119f90a34e7de67c" translate="yes" xml:space="preserve">
          <source>CENTURIES</source>
          <target state="translated">CENTURIES</target>
        </trans-unit>
        <trans-unit id="d36c882dea8e1745711e33427ce54832e1fb3c97" translate="yes" xml:space="preserve">
          <source>CENVEM</source>
          <target state="translated">CENVEM</target>
        </trans-unit>
        <trans-unit id="a1452adb71eeb20c1332ba430f4d38f511db8bfa" translate="yes" xml:space="preserve">
          <source>CENVER</source>
          <target state="translated">CENVER</target>
        </trans-unit>
        <trans-unit id="398e092959400ce67b8805c41ad9546292733b57" translate="yes" xml:space="preserve">
          <source>CERTIFICATE_HOLD</source>
          <target state="translated">CERTIFICATE_HOLD</target>
        </trans-unit>
        <trans-unit id="88d92e450810d91aa53d39f8ef8ceb5a014bb03b" translate="yes" xml:space="preserve">
          <source>CESSATION_OF_OPERATION</source>
          <target state="translated">CESSATION_OF_OPERATION</target>
        </trans-unit>
        <trans-unit id="d0a7972528880d5c3bc82073c2567d9c352a4dfd" translate="yes" xml:space="preserve">
          <source>CFB</source>
          <target state="translated">CFB</target>
        </trans-unit>
        <trans-unit id="654878a8b2f7ce2b973a46579fddad0fd0455497" translate="yes" xml:space="preserve">
          <source>CHAKMA</source>
          <target state="translated">CHAKMA</target>
        </trans-unit>
        <trans-unit id="240d47eceef79b6bd00cdfc3f397948e28c3e28a" translate="yes" xml:space="preserve">
          <source>CHAM</source>
          <target state="translated">CHAM</target>
        </trans-unit>
        <trans-unit id="07b146812266b4e45ec799d003ee9e8fbe8669f2" translate="yes" xml:space="preserve">
          <source>CHANGE</source>
          <target state="translated">CHANGE</target>
        </trans-unit>
        <trans-unit id="3bb0a9ebe5fa8bfd63f46174141e8cd2ef430537" translate="yes" xml:space="preserve">
          <source>CHANGED</source>
          <target state="translated">CHANGED</target>
        </trans-unit>
        <trans-unit id="7d5c9bf3acb2d6a7d949b221090280e09c07c4d9" translate="yes" xml:space="preserve">
          <source>CHANNEL_PRESSURE</source>
          <target state="translated">CHANNEL_PRESSURE</target>
        </trans-unit>
        <trans-unit id="49279edf04879138e2ca01fe4da87f165bb8a556" translate="yes" xml:space="preserve">
          <source>CHAR</source>
          <target state="translated">CHAR</target>
        </trans-unit>
        <trans-unit id="6529f695ef6bea2b61be4f42d6af092fc3b74190" translate="yes" xml:space="preserve">
          <source>CHARACTER</source>
          <target state="translated">CHARACTER</target>
        </trans-unit>
        <trans-unit id="e0c7555f6a51645ace793bb65fbd9c1ea646d54f" translate="yes" xml:space="preserve">
          <source>CHARACTERS</source>
          <target state="translated">CHARACTERS</target>
        </trans-unit>
        <trans-unit id="747b6ab55b2977cff67bd269e90144e490dfc31b" translate="yes" xml:space="preserve">
          <source>CHARSET_RULE</source>
          <target state="translated">CHARSET_RULE</target>
        </trans-unit>
        <trans-unit id="9cc3e9f13c82cdb660a28e433d39775416e54f75" translate="yes" xml:space="preserve">
          <source>CHAR_ARRAY</source>
          <target state="translated">CHAR_ARRAY</target>
        </trans-unit>
        <trans-unit id="ee6b489f0289728c3819dc331f1663c96ca0785c" translate="yes" xml:space="preserve">
          <source>CHAR_LITERAL</source>
          <target state="translated">CHAR_LITERAL</target>
        </trans-unit>
        <trans-unit id="bc473ef52785062f9812e2577188f1acfc4bf88e" translate="yes" xml:space="preserve">
          <source>CHAR_REPLACEMENT</source>
          <target state="translated">CHAR_REPLACEMENT</target>
        </trans-unit>
        <trans-unit id="1d67db598706684578983ce447189300b245a732" translate="yes" xml:space="preserve">
          <source>CHAR_UNDEFINED</source>
          <target state="translated">CHAR_UNDEFINED</target>
        </trans-unit>
        <trans-unit id="661f13bc63a7f123bb5a8ba52bbf1df2ba244cee" translate="yes" xml:space="preserve">
          <source>CHECKED</source>
          <target state="translated">CHECKED</target>
        </trans-unit>
        <trans-unit id="6f3c66a8af665e0e7dd0e71fd0fe3d6b8fbd87ae" translate="yes" xml:space="preserve">
          <source>CHECK_BOX</source>
          <target state="translated">CHECK_BOX</target>
        </trans-unit>
        <trans-unit id="bfda331a11384a15dd4802009ed7e8e161815247" translate="yes" xml:space="preserve">
          <source>CHECK_BOX_MENU_ITEM</source>
          <target state="translated">CHECK_BOX_MENU_ITEM</target>
        </trans-unit>
        <trans-unit id="32a509e2ec6420c48a4ab53efb0083235ddd425e" translate="yes" xml:space="preserve">
          <source>CHEROKEE</source>
          <target state="translated">CHEROKEE</target>
        </trans-unit>
        <trans-unit id="4cc11879e11500d7edb0d9a6da4258940a52791b" translate="yes" xml:space="preserve">
          <source>CHEROKEE_SUPPLEMENT</source>
          <target state="translated">CHEROKEE_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="c3f7bbbc51d39bf49239ac747ee0cf65c4532968" translate="yes" xml:space="preserve">
          <source>CHESS_SYMBOLS</source>
          <target state="translated">CHESS_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="8af25b6e0a03da1c4dcb2db3d04cc7db46a0a2f5" translate="yes" xml:space="preserve">
          <source>CHILD_NODE_OF</source>
          <target state="translated">CHILD_NODE_OF</target>
        </trans-unit>
        <trans-unit id="16ecab73cd5cf1d40e054c64d85e53287283a63d" translate="yes" xml:space="preserve">
          <source>CHILD_NODE_OF_PROPERTY</source>
          <target state="translated">CHILD_NODE_OF_PROPERTY</target>
        </trans-unit>
        <trans-unit id="fe4dc7fc26f7e46ccc8676ae1eac13179c1cac35" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_ALL</source>
          <target state="translated">CHILD_POLICY_ALL</target>
        </trans-unit>
        <trans-unit id="423c2708084898a1d87d9af680bbd024fe47d0ae" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_CHOICE</source>
          <target state="translated">CHILD_POLICY_CHOICE</target>
        </trans-unit>
        <trans-unit id="ab2c051c94d3f89e17305fd5fbb9d8e2bcb9c392" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_EMPTY</source>
          <target state="translated">CHILD_POLICY_EMPTY</target>
        </trans-unit>
        <trans-unit id="0b80054583753c50ce868cf1ff927ad19beb0d8b" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_MAX</source>
          <target state="translated">CHILD_POLICY_MAX</target>
        </trans-unit>
        <trans-unit id="cba9011154658a2905ca2323a32d3432127da3c9" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_REPEAT</source>
          <target state="translated">CHILD_POLICY_REPEAT</target>
        </trans-unit>
        <trans-unit id="26509f5eca9644e2ba5eda5da2a707a039365ace" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_SEQUENCE</source>
          <target state="translated">CHILD_POLICY_SEQUENCE</target>
        </trans-unit>
        <trans-unit id="023ba52cc0316995383f6daeed3ddce9670549d0" translate="yes" xml:space="preserve">
          <source>CHILD_POLICY_SOME</source>
          <target state="translated">CHILD_POLICY_SOME</target>
        </trans-unit>
        <trans-unit id="7358da24e692c13d35e9097d4a34bd25c7add28f" translate="yes" xml:space="preserve">
          <source>CHINA</source>
          <target state="translated">CHINA</target>
        </trans-unit>
        <trans-unit id="a8910e62d8158fce16244f7d86e8ff3d5f02df45" translate="yes" xml:space="preserve">
          <source>CHINESE</source>
          <target state="translated">CHINESE</target>
        </trans-unit>
        <trans-unit id="9c4faba35b647339f3fd1b31dd741b6396d732e4" translate="yes" xml:space="preserve">
          <source>CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY</source>
          <target state="translated">CHOOSABLE_FILE_FILTER_CHANGED_PROPERTY</target>
        </trans-unit>
        <trans-unit id="30f4527a557e3a9969717dc3e03fdd74078a91c6" translate="yes" xml:space="preserve">
          <source>CHOOSER_PANELS_PROPERTY</source>
          <target state="translated">CHOOSER_PANELS_PROPERTY</target>
        </trans-unit>
        <trans-unit id="690a552cb2a3b5a67d6b4631974b3d01ed517fd0" translate="yes" xml:space="preserve">
          <source>CHORASMIAN</source>
          <target state="translated">CHORASMIAN</target>
        </trans-unit>
        <trans-unit id="3347beb674d29d064358a4655c29b6cf8871dbbd" translate="yes" xml:space="preserve">
          <source>CHORD</source>
          <target state="translated">CHORD</target>
        </trans-unit>
        <trans-unit id="f95e11e39e8d7154ad66576ba9db28c987d18aba" translate="yes" xml:space="preserve">
          <source>CHOU_1</source>
          <target state="translated">CHOU_1</target>
        </trans-unit>
        <trans-unit id="badad29b57e3cd7a07ac955fa7923ea4e6468ded" translate="yes" xml:space="preserve">
          <source>CHOU_2</source>
          <target state="translated">CHOU_2</target>
        </trans-unit>
        <trans-unit id="60b57cafd6caef0f52d2b208bc00126a895cbac8" translate="yes" xml:space="preserve">
          <source>CHOU_3</source>
          <target state="translated">CHOU_3</target>
        </trans-unit>
        <trans-unit id="cb2e34a571895491438d2f4eac662c32d8b5fa7a" translate="yes" xml:space="preserve">
          <source>CHOU_30</source>
          <target state="translated">CHOU_30</target>
        </trans-unit>
        <trans-unit id="9b837675471e8bbde08a45803f6e9c55d1075e4c" translate="yes" xml:space="preserve">
          <source>CHOU_4</source>
          <target state="translated">CHOU_4</target>
        </trans-unit>
        <trans-unit id="4141608d20a27dfff3a6f87d969758836002bcbb" translate="yes" xml:space="preserve">
          <source>CHOU_40</source>
          <target state="translated">CHOU_40</target>
        </trans-unit>
        <trans-unit id="cf1ef329cd82882a0aea110e286859fb9c91ff0f" translate="yes" xml:space="preserve">
          <source>CITE</source>
          <target state="translated">CITE</target>
        </trans-unit>
        <trans-unit id="65642f867f6a7a745014fa8d3ed0aa16728e3776" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY</source>
          <target state="translated">CJK_COMPATIBILITY</target>
        </trans-unit>
        <trans-unit id="bdb42c3c87ee511c5b698a16eba2fb6882800ba9" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY_FORMS</source>
          <target state="translated">CJK_COMPATIBILITY_FORMS</target>
        </trans-unit>
        <trans-unit id="7b8c36368c0050c0cc17f43c4bfa867521a8c1f9" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY_IDEOGRAPHS</source>
          <target state="translated">CJK_COMPATIBILITY_IDEOGRAPHS</target>
        </trans-unit>
        <trans-unit id="2555b6094eb534f3065a810fd353e98620ba8eff" translate="yes" xml:space="preserve">
          <source>CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT</source>
          <target state="translated">CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="44d03f6a4fc9ddd792bf8fbef8bead7b030ddc0b" translate="yes" xml:space="preserve">
          <source>CJK_RADICALS_SUPPLEMENT</source>
          <target state="translated">CJK_RADICALS_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="0d1afdf7139179d7e82f4dadc8aa80dde5095074" translate="yes" xml:space="preserve">
          <source>CJK_STROKES</source>
          <target state="translated">CJK_STROKES</target>
        </trans-unit>
        <trans-unit id="bf438864ed9326f44f5f40d1a61f018c9e06577c" translate="yes" xml:space="preserve">
          <source>CJK_SYMBOLS_AND_PUNCTUATION</source>
          <target state="translated">CJK_SYMBOLS_AND_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="058804b65f0c3927c23bf95ed97737b781079855" translate="yes" xml:space="preserve">
          <source>CJK_UNIFIED_IDEOGRAPHS</source>
          <target state="translated">CJK_UNIFIED_IDEOGRAPHS</target>
        </trans-unit>
        <trans-unit id="22f236027b3287f5f17519b3c0ae61499c5227aa" translate="yes" xml:space="preserve">
          <source>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</source>
          <target state="translated">CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</target>
        </trans-unit>
        <trans-unit id="ca6abc40e39629ee685fe8f9cd81c97fc7a52671" translate="yes" xml:space="preserve">
          <source>CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B</source>
          <target state="translated">CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
